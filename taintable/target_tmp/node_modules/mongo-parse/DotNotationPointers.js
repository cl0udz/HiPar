J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(3385, '../target_tmp/node_modules/mongo-parse/DotNotationPointers.js');
            function createPointers(rootObject, propertyParts) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2009, arguments.callee, this, arguments);
                            arguments = J$.N(2017, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(2025, 'rootObject', rootObject, true, false, false);
                            propertyParts = J$.N(2033, 'propertyParts', propertyParts, true, false, false);
                            J$.N(2041, 'initialObject', initialObject, false, false, false);
                            J$.N(2049, 'curInfoObjects', curInfoObjects, false, false, false);
                            var initialObject = J$.W(1217, 'initialObject', J$.T(1209, { dummy: J$.R(1201, 'rootObject', rootObject, false, false) }, 11, false), initialObject, false, false);
                            var curInfoObjects = J$.W(1265, 'curInfoObjects', J$.T(1257, [J$.T(1249, {
                                    obj: J$.R(1225, 'initialObject', initialObject, false, false),
                                    last: J$.T(1233, 'dummy', 21, false),
                                    propertyPath: J$.T(1241, [], 10, false)
                                }, 11, false)], 10, false), curInfoObjects, false, false);
                            J$.M(1737, J$.R(1273, 'propertyParts', propertyParts, false, false), 'forEach', false)(J$.T(1729, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(1697, arguments.callee, this, arguments);
                                            arguments = J$.N(1705, 'arguments', arguments, true, false, false);
                                            part = J$.N(1713, 'part', part, true, false, false);
                                            J$.N(1721, 'nextInfoObjects', nextInfoObjects, false, false, false);
                                            var nextInfoObjects = J$.W(1289, 'nextInfoObjects', J$.T(1281, [], 10, false), nextInfoObjects, false, false);
                                            J$.M(1673, J$.R(1297, 'curInfoObjects', curInfoObjects, false, false), 'forEach', false)(J$.T(1665, function (current) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1633, arguments.callee, this, arguments);
                                                            arguments = J$.N(1641, 'arguments', arguments, true, false, false);
                                                            current = J$.N(1649, 'current', current, true, false, false);
                                                            J$.N(1657, 'curValue', curValue, false, false, false);
                                                            var curValue = J$.W(1353, 'curValue', J$.F(1345, J$.R(1305, 'getValue', getValue, false, true), false)(J$.G(1321, J$.R(1313, 'current', current, false, false), 'obj'), J$.G(1337, J$.R(1329, 'current', current, false, false), 'last')), curValue, false, false);
                                                            if (J$.C(48, J$.C(40, J$.B(98, 'instanceof', J$.R(1361, 'curValue', curValue, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(1369, 'Array', undefined, true, true) : Array = J$.R(1369, 'Array', Array, true, true)))) ? J$.U(106, '!', J$.F(1393, J$.R(1377, 'isInteger', isInteger, false, true), false)(J$.R(1385, 'part', part, false, false))) : J$._())) {
                                                                J$.M(1553, J$.R(1401, 'curValue', curValue, false, false), 'forEach', false)(J$.T(1545, function (property, index) {
                                                                    jalangiLabel1:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(1513, arguments.callee, this, arguments);
                                                                                arguments = J$.N(1521, 'arguments', arguments, true, false, false);
                                                                                property = J$.N(1529, 'property', property, true, false, false);
                                                                                index = J$.N(1537, 'index', index, true, false, false);
                                                                                J$.M(1505, J$.R(1409, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(1497, {
                                                                                    obj: J$.F(1441, J$.R(1417, 'getValue', getValue, false, true), false)(J$.R(1425, 'curValue', curValue, false, false), J$.R(1433, 'index', index, false, false)),
                                                                                    propertyPath: J$.M(1481, J$.G(1457, J$.R(1449, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(1465, 'index', index, false, false), J$.R(1473, 'part', part, false, false)),
                                                                                    last: J$.R(1489, 'part', part, false, false)
                                                                                }, 11, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(3489, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(3497))
                                                                                    continue jalangiLabel1;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } else {
                                                                J$.M(1625, J$.R(1561, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(1617, {
                                                                    obj: J$.R(1569, 'curValue', curValue, false, false),
                                                                    propertyPath: J$.M(1601, J$.G(1585, J$.R(1577, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(1593, 'part', part, false, false)),
                                                                    last: J$.R(1609, 'part', part, false, false)
                                                                }, 11, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(3505, J$e);
                                                        } finally {
                                                            if (J$.Fr(3513))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            curInfoObjects = J$.W(1689, 'curInfoObjects', J$.R(1681, 'nextInfoObjects', nextInfoObjects, false, false), curInfoObjects, false, false);
                                        } catch (J$e) {
                                            J$.Ex(3521, J$e);
                                        } finally {
                                            if (J$.Fr(3529))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2001, J$.M(1993, J$.R(1745, 'curInfoObjects', curInfoObjects, false, false), 'map', false)(J$.T(1985, function (current) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(1945, arguments.callee, this, arguments);
                                            arguments = J$.N(1953, 'arguments', arguments, true, false, false);
                                            current = J$.N(1961, 'current', current, true, false, false);
                                            J$.N(1969, 'obj', obj, false, false, false);
                                            J$.N(1977, 'last', last, false, false, false);
                                            if (J$.C(56, J$.B(114, '===', J$.G(1761, J$.R(1753, 'current', current, false, false), 'obj'), J$.R(1769, 'initialObject', initialObject, false, false)))) {
                                                var obj = J$.W(1801, 'obj', J$.G(1793, J$.G(1785, J$.R(1777, 'current', current, false, false), 'obj'), 'dummy'), obj, false, false);
                                                var last = J$.W(1817, 'last', J$.T(1809, undefined, 24, false), last, false, false);
                                            } else {
                                                var obj = J$.W(1841, 'obj', J$.G(1833, J$.R(1825, 'current', current, false, false), 'obj'), obj, false, false);
                                                var last = J$.W(1865, 'last', J$.G(1857, J$.R(1849, 'current', current, false, false), 'last'), last, false, false);
                                            }
                                            return J$.Rt(1937, J$.F(1929, J$.R(1873, 'DotNotationPointer', DotNotationPointer, false, true), true)(J$.R(1881, 'rootObject', rootObject, false, false), J$.G(1897, J$.R(1889, 'current', current, false, false), 'propertyPath'), J$.T(1921, {
                                                obj: J$.R(1905, 'obj', obj, false, false),
                                                last: J$.R(1913, 'last', last, false, false)
                                            }, 11, false)));
                                        } catch (J$e) {
                                            J$.Ex(3537, J$e);
                                        } finally {
                                            if (J$.Fr(3545))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(3553, J$e);
                        } finally {
                            if (J$.Fr(3561))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getValue(object, key) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2121, arguments.callee, this, arguments);
                            arguments = J$.N(2129, 'arguments', arguments, true, false, false);
                            object = J$.N(2137, 'object', object, true, false, false);
                            key = J$.N(2145, 'key', key, true, false, false);
                            if (J$.C(64, J$.B(122, '===', J$.R(2057, 'object', object, false, false), J$.T(2065, undefined, 24, false))))
                                return J$.Rt(2081, J$.T(2073, undefined, 24, false));
                            else
                                return J$.Rt(2113, J$.G(2105, J$.R(2089, 'object', object, false, false), J$.R(2097, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3569, J$e);
                        } finally {
                            if (J$.Fr(3577))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createProperty(that) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(3225, arguments.callee, this, arguments);
                            arguments = J$.N(3233, 'arguments', arguments, true, false, false);
                            that = J$.N(3241, 'that', that, true, false, false);
                            J$.N(3249, 'result', result, false, false, false);
                            J$.N(3257, 'lastIndex', lastIndex, false, false, false);
                            J$.N(3265, 'n', n, false, false, false);
                            J$.N(3273, 'value', value, false, false, false);
                            J$.N(3281, 'newValue', newValue, false, false, false);
                            var result = J$.W(2825, 'result', J$.G(2817, J$.R(2809, 'that', that, false, false), 'root'), result, false, false);
                            var lastIndex = J$.W(2865, 'lastIndex', J$.B(178, '-', J$.G(2849, J$.G(2841, J$.R(2833, 'that', that, false, false), 'property'), 'length'), J$.T(2857, 1, 22, false)), lastIndex, false, false);
                            for (var n = J$.W(2881, 'n', J$.T(2873, 0, 22, false), n, false, false); J$.C(136, J$.B(186, '<', J$.R(2889, 'n', n, false, false), J$.R(2897, 'lastIndex', lastIndex, false, false))); J$.B(210, '-', n = J$.W(2913, 'n', J$.B(202, '+', J$.U(194, '+', J$.R(2905, 'n', n, false, false)), 1), n, false, false), 1)) {
                                var value = J$.W(2969, 'value', J$.G(2961, J$.R(2921, 'result', result, false, false), J$.G(2953, J$.G(2937, J$.R(2929, 'that', that, false, false), 'property'), J$.R(2945, 'n', n, false, false))), value, false, false);
                                if (J$.C(128, J$.B(218, '===', J$.R(2977, 'value', value, false, false), J$.T(2985, undefined, 24, false)))) {
                                    if (J$.C(120, J$.F(3041, J$.R(2993, 'isInteger', isInteger, false, true), false)(J$.G(3033, J$.G(3009, J$.R(3001, 'that', that, false, false), 'property'), J$.B(226, '+', J$.R(3017, 'n', n, false, false), J$.T(3025, 1, 22, false))))))
                                        var newValue = J$.W(3057, 'newValue', J$.T(3049, [], 10, false), newValue, false, false);
                                    else
                                        var newValue = J$.W(3073, 'newValue', J$.T(3065, {}, 11, false), newValue, false, false);
                                    value = J$.W(3137, 'value', J$.P(3129, J$.R(3081, 'result', result, false, false), J$.G(3113, J$.G(3097, J$.R(3089, 'that', that, false, false), 'property'), J$.R(3105, 'n', n, false, false)), J$.R(3121, 'newValue', newValue, false, false)), value, false, false);
                                }
                                result = J$.W(3153, 'result', J$.R(3145, 'value', value, false, false), result, false, false);
                            }
                            J$.P(3217, J$.R(3161, 'that', that, false, false), 'propertyInfo', J$.T(3209, {
                                obj: J$.R(3169, 'result', result, false, false),
                                last: J$.G(3201, J$.G(3185, J$.R(3177, 'that', that, false, false), 'property'), J$.R(3193, 'lastIndex', lastIndex, false, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(3633, J$e);
                        } finally {
                            if (J$.Fr(3641))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isInteger(v) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(3353, arguments.callee, this, arguments);
                            arguments = J$.N(3361, 'arguments', arguments, true, false, false);
                            v = J$.N(3369, 'v', v, true, false, false);
                            J$.N(3377, 'number', number, false, false, false);
                            var number = J$.W(3313, 'number', J$.F(3305, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3289, 'parseInt', undefined, true, true) : parseInt = J$.R(3289, 'parseInt', parseInt, true, true)), false)(J$.R(3297, 'v', v, false, false)), number, false, false);
                            return J$.Rt(3345, J$.U(234, '!', J$.F(3337, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(3321, 'isNaN', undefined, true, true) : isNaN = J$.R(3321, 'isNaN', isNaN, true, true)), false)(J$.R(3329, 'number', number, false, false))));
                        } catch (J$e) {
                            J$.Ex(3649, J$e);
                        } finally {
                            if (J$.Fr(3657))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3393, 'DotNotationPointers', DotNotationPointers, false, false, false);
            createPointers = J$.N(3409, 'createPointers', J$.T(3401, createPointers, 12, false), true, false, false);
            getValue = J$.N(3425, 'getValue', J$.T(3417, getValue, 12, false), true, false, false);
            J$.N(3433, 'DotNotationPointer', DotNotationPointer, false, false, false);
            createProperty = J$.N(3449, 'createProperty', J$.T(3441, createProperty, 12, false), true, false, false);
            isInteger = J$.N(3465, 'isInteger', J$.T(3457, isInteger, 12, false), true, false, false);
            var DotNotationPointers = J$.W(1193, 'DotNotationPointers', J$.P(1185, J$.I(typeof module === 'undefined' ? module = J$.R(1017, 'module', undefined, true, true) : module = J$.R(1017, 'module', module, true, true)), 'exports', J$.T(1177, function (rootObject, property) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1145, arguments.callee, this, arguments);
                            arguments = J$.N(1153, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(1161, 'rootObject', rootObject, true, false, false);
                            property = J$.N(1169, 'property', property, true, false, false);
                            if (J$.C(32, J$.B(74, '===', J$.R(1025, 'property', property, false, false), J$.T(1033, undefined, 24, false)))) {
                                property = J$.W(1049, 'property', J$.T(1041, [], 10, false), property, false, false);
                            } else if (J$.C(24, J$.U(90, '!', J$.B(82, 'instanceof', J$.R(1057, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(1065, 'Array', undefined, true, true) : Array = J$.R(1065, 'Array', Array, true, true)))))) {
                                property = J$.W(1097, 'property', J$.M(1089, J$.R(1073, 'property', property, false, false), 'split', false)(J$.T(1081, '.', 21, false)), property, false, false);
                            }
                            return J$.Rt(1137, J$.F(1129, J$.R(1105, 'createPointers', createPointers, false, true), false)(J$.R(1113, 'rootObject', rootObject, false, false), J$.R(1121, 'property', property, false, false)));
                        } catch (J$e) {
                            J$.Ex(3473, J$e);
                        } finally {
                            if (J$.Fr(3481))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), DotNotationPointers, false, true);
            var DotNotationPointer = J$.W(2385, 'DotNotationPointer', J$.T(2377, function (rootObject, property, propertyInfo) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2337, arguments.callee, this, arguments);
                            arguments = J$.N(2345, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(2353, 'rootObject', rootObject, true, false, false);
                            property = J$.N(2361, 'property', property, true, false, false);
                            propertyInfo = J$.N(2369, 'propertyInfo', propertyInfo, true, false, false);
                            J$.P(2169, J$.R(2153, 'this', this, false, false), 'root', J$.R(2161, 'rootObject', rootObject, false, false));
                            if (J$.C(80, J$.B(130, '===', J$.R(2177, 'property', property, false, false), J$.T(2185, undefined, 24, false)))) {
                                J$.P(2209, J$.R(2193, 'this', this, false, false), 'property', J$.T(2201, [], 10, false));
                            } else if (J$.C(72, J$.B(138, 'instanceof', J$.R(2217, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(2225, 'Array', undefined, true, true) : Array = J$.R(2225, 'Array', Array, true, true))))) {
                                J$.P(2249, J$.R(2233, 'this', this, false, false), 'property', J$.R(2241, 'property', property, false, false));
                            } else {
                                J$.P(2289, J$.R(2257, 'this', this, false, false), 'property', J$.M(2281, J$.R(2265, 'property', property, false, false), 'split', false)(J$.T(2273, '.', 21, false)));
                            }
                            if (J$.C(88, J$.B(146, '!==', J$.R(2297, 'propertyInfo', propertyInfo, false, false), J$.T(2305, undefined, 24, false)))) {
                                J$.P(2329, J$.R(2313, 'this', this, false, false), 'propertyInfo', J$.R(2321, 'propertyInfo', propertyInfo, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(3585, J$e);
                        } finally {
                            if (J$.Fr(3593))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), DotNotationPointer, false, true);
            J$.P(2409, J$.R(2393, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype', J$.T(2401, {}, 11, false));
            J$.M(2801, J$.I(typeof Object === 'undefined' ? Object = J$.R(2417, 'Object', undefined, true, true) : Object = J$.R(2417, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(2433, J$.R(2425, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype'), J$.T(2441, 'val', 21, false), J$.T(2793, {
                get: J$.T(2633, function () {
                    jalangiLabel8:
                        while (true) {
                            try {
                                J$.Fe(2609, arguments.callee, this, arguments);
                                arguments = J$.N(2617, 'arguments', arguments, true, false, false);
                                J$.N(2625, 'info', info, false, false, false);
                                var info = J$.W(2465, 'info', J$.G(2457, J$.R(2449, 'this', this, false, false), 'propertyInfo'), info, false, false);
                                if (J$.C(104, J$.B(154, '===', J$.G(2481, J$.R(2473, 'info', info, false, false), 'obj'), J$.T(2489, undefined, 24, false)))) {
                                    return J$.Rt(2505, J$.T(2497, undefined, 24, false));
                                } else {
                                    if (J$.C(96, J$.B(162, '!==', J$.G(2521, J$.R(2513, 'info', info, false, false), 'last'), J$.T(2529, undefined, 24, false)))) {
                                        return J$.Rt(2577, J$.G(2569, J$.G(2545, J$.R(2537, 'info', info, false, false), 'obj'), J$.G(2561, J$.R(2553, 'info', info, false, false), 'last')));
                                    } else {
                                        return J$.Rt(2601, J$.G(2593, J$.R(2585, 'info', info, false, false), 'obj'));
                                    }
                                }
                            } catch (J$e) {
                                J$.Ex(3601, J$e);
                            } finally {
                                if (J$.Fr(3609))
                                    continue jalangiLabel8;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                set: J$.T(2785, function (value) {
                    jalangiLabel9:
                        while (true) {
                            try {
                                J$.Fe(2761, arguments.callee, this, arguments);
                                arguments = J$.N(2769, 'arguments', arguments, true, false, false);
                                value = J$.N(2777, 'value', value, true, false, false);
                                if (J$.C(112, J$.B(170, '===', J$.G(2657, J$.G(2649, J$.R(2641, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.T(2665, undefined, 24, false)))) {
                                    J$.F(2689, J$.R(2673, 'createProperty', createProperty, false, true), false)(J$.R(2681, 'this', this, false, false));
                                }
                                J$.P(2753, J$.G(2713, J$.G(2705, J$.R(2697, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.G(2737, J$.G(2729, J$.R(2721, 'this', this, false, false), 'propertyInfo'), 'last'), J$.R(2745, 'value', value, false, false));
                            } catch (J$e) {
                                J$.Ex(3617, J$e);
                            } finally {
                                if (J$.Fr(3625))
                                    continue jalangiLabel9;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(3665, J$e);
        } finally {
            if (J$.Sr(3673))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

