J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(5865, '../target_tmp/node_modules/mongo-parse/mapValues.js');
            function obj() {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5673, arguments.callee, this, arguments);
                            arguments = J$.N(5681, 'arguments', arguments, true, false, false);
                            J$.N(5689, 'result', result, false, false, false);
                            J$.N(5697, 'n', n, false, false, false);
                            var result = J$.W(5513, 'result', J$.T(5505, {}, 11, false), result, false, false);
                            for (var n = J$.W(5529, 'n', J$.T(5521, 0, 22, false), n, false, false); J$.C(248, J$.B(362, '<', J$.R(5537, 'n', n, false, false), J$.G(5553, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5545, 'arguments', undefined, true, true) : arguments = J$.R(5545, 'arguments', arguments, true, true)), 'length'))); n = J$.W(5577, 'n', J$.B(370, '+', J$.R(5569, 'n', n, false, false), J$.T(5561, 2, 22, false)), n, false, false)) {
                                J$.P(5649, J$.R(5585, 'result', result, false, false), J$.G(5609, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5593, 'arguments', undefined, true, true) : arguments = J$.R(5593, 'arguments', arguments, true, true)), J$.R(5601, 'n', n, false, false)), J$.G(5641, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5617, 'arguments', undefined, true, true) : arguments = J$.R(5617, 'arguments', arguments, true, true)), J$.B(378, '+', J$.R(5625, 'n', n, false, false), J$.T(5633, 1, 22, false))));
                            }
                            return J$.Rt(5665, J$.R(5657, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6009, J$e);
                        } finally {
                            if (J$.Fr(6017))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addOperator(obj, field, operator, operand) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5817, arguments.callee, this, arguments);
                            arguments = J$.N(5825, 'arguments', arguments, true, false, false);
                            obj = J$.N(5833, 'obj', obj, true, false, false);
                            field = J$.N(5841, 'field', field, true, false, false);
                            operator = J$.N(5849, 'operator', operator, true, false, false);
                            operand = J$.N(5857, 'operand', operand, true, false, false);
                            if (J$.C(256, J$.B(386, '===', J$.G(5721, J$.R(5705, 'obj', obj, false, false), J$.R(5713, 'field', field, false, false)), J$.T(5729, undefined, 24, false)))) {
                                J$.P(5761, J$.R(5737, 'obj', obj, false, false), J$.R(5745, 'field', field, false, false), J$.T(5753, {}, 11, false));
                            }
                            J$.P(5809, J$.G(5785, J$.R(5769, 'obj', obj, false, false), J$.R(5777, 'field', field, false, false)), J$.R(5793, 'operator', operator, false, false), J$.R(5801, 'operand', operand, false, false));
                        } catch (J$e) {
                            J$.Ex(6025, J$e);
                        } finally {
                            if (J$.Fr(6033))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5873, 'singleValueOperators', singleValueOperators, false, false, false);
            J$.N(5881, 'arrayOperators', arrayOperators, false, false, false);
            J$.N(5889, 'mapValues', mapValues, false, false, false);
            obj = J$.N(5905, 'obj', J$.T(5897, obj, 12, false), true, false, false);
            addOperator = J$.N(5921, 'addOperator', J$.T(5913, addOperator, 12, false), true, false, false);
            var singleValueOperators = J$.W(3737, 'singleValueOperators', J$.T(3729, {
                $gt: J$.T(3681, 1, 22, false),
                $gte: J$.T(3689, 1, 22, false),
                $lt: J$.T(3697, 1, 22, false),
                $lte: J$.T(3705, 1, 22, false),
                $ne: J$.T(3713, 1, 22, false),
                $not: J$.T(3721, 1, 22, false)
            }, 11, false), singleValueOperators, false, true);
            var arrayOperators = J$.W(3777, 'arrayOperators', J$.T(3769, {
                $nin: J$.T(3745, 1, 22, false),
                $all: J$.T(3753, 1, 22, false),
                $in: J$.T(3761, 1, 22, false)
            }, 11, false), arrayOperators, false, true);
            var mapValues = J$.W(5497, 'mapValues', J$.P(5489, J$.I(typeof module === 'undefined' ? module = J$.R(3785, 'module', undefined, true, true) : module = J$.R(3785, 'module', module, true, true)), 'exports', J$.T(5481, function (parts, callback, prefix) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5433, arguments.callee, this, arguments);
                            arguments = J$.N(5441, 'arguments', arguments, true, false, false);
                            parts = J$.N(5449, 'parts', parts, true, false, false);
                            callback = J$.N(5457, 'callback', callback, true, false, false);
                            prefix = J$.N(5465, 'prefix', prefix, true, false, false);
                            J$.N(5473, 'result', result, false, false, false);
                            var result = J$.W(3801, 'result', J$.T(3793, {}, 11, false), result, false, false);
                            J$.M(5409, J$.R(3809, 'parts', parts, false, false), 'forEach', false)(J$.T(5401, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(5353, arguments.callee, this, arguments);
                                            arguments = J$.N(5361, 'arguments', arguments, true, false, false);
                                            part = J$.N(5369, 'part', part, true, false, false);
                                            J$.N(5377, 'field', field, false, false, false);
                                            J$.N(5385, 'mappedValue', mappedValue, false, false, false);
                                            J$.N(5393, 'operands', operands, false, false, false);
                                            if (J$.C(152, J$.B(242, '!==', J$.G(3825, J$.R(3817, 'part', part, false, false), 'field'), J$.T(3833, undefined, 24, false)))) {
                                                if (J$.C(144, J$.B(250, '!==', J$.R(3841, 'prefix', prefix, false, false), J$.T(3849, undefined, 24, false)))) {
                                                    var field = J$.W(3889, 'field', J$.B(266, '+', J$.B(258, '+', J$.R(3857, 'prefix', prefix, false, false), J$.T(3865, '.', 21, false)), J$.G(3881, J$.R(3873, 'part', part, false, false), 'field')), field, false, false);
                                                } else {
                                                    var field = J$.W(3913, 'field', J$.G(3905, J$.R(3897, 'part', part, false, false), 'field'), field, false, false);
                                                }
                                            } else {
                                                var field = J$.W(3929, 'field', J$.R(3921, 'prefix', prefix, false, false), field, false, false);
                                            }
                                            if (J$.C(240, J$.B(274, '===', J$.G(3953, J$.G(3945, J$.R(3937, 'part', part, false, false), 'parts'), 'length'), J$.T(3961, 0, 22, false)))) {
                                                if (J$.C(216, J$.B(282, '===', J$.G(3977, J$.R(3969, 'part', part, false, false), 'operator'), J$.T(3985, undefined, 24, false)))) {
                                                    if (J$.C(160, J$.B(290, 'instanceof', J$.G(4001, J$.R(3993, 'part', part, false, false), 'operand'), J$.I(typeof Array === 'undefined' ? Array = J$.R(4009, 'Array', undefined, true, true) : Array = J$.R(4009, 'Array', Array, true, true))))) {
                                                        J$.P(4137, J$.R(4017, 'result', result, false, false), J$.G(4033, J$.R(4025, 'part', part, false, false), 'field'), J$.M(4129, J$.G(4049, J$.R(4041, 'part', part, false, false), 'operand'), 'map', false)(J$.T(4121, function (v) {
                                                            jalangiLabel0:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(4097, arguments.callee, this, arguments);
                                                                        arguments = J$.N(4105, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(4113, 'v', v, true, false, false);
                                                                        return J$.Rt(4089, J$.F(4081, J$.R(4057, 'callback', callback, false, false), false)(J$.R(4065, 'field', field, false, false), J$.R(4073, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(5929, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(5937))
                                                                            continue jalangiLabel0;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else {
                                                        J$.P(4209, J$.R(4145, 'result', result, false, false), J$.G(4161, J$.R(4153, 'part', part, false, false), 'field'), J$.F(4201, J$.R(4169, 'callback', callback, false, false), false)(J$.R(4177, 'field', field, false, false), J$.G(4193, J$.R(4185, 'part', part, false, false), 'operand')));
                                                    }
                                                } else {
                                                    if (J$.C(208, J$.B(298, 'in', J$.G(4225, J$.R(4217, 'part', part, false, false), 'operator'), J$.R(4233, 'singleValueOperators', singleValueOperators, false, true)))) {
                                                        if (J$.C(168, J$.B(306, '!==', J$.G(4249, J$.R(4241, 'part', part, false, false), 'field'), J$.T(4257, undefined, 24, false)))) {
                                                            J$.F(4353, J$.R(4265, 'addOperator', addOperator, false, true), false)(J$.R(4273, 'result', result, false, false), J$.G(4289, J$.R(4281, 'part', part, false, false), 'field'), J$.G(4305, J$.R(4297, 'part', part, false, false), 'operator'), J$.F(4345, J$.R(4313, 'callback', callback, false, false), false)(J$.R(4321, 'field', field, false, false), J$.G(4337, J$.R(4329, 'part', part, false, false), 'operand')));
                                                        } else {
                                                            J$.P(4425, J$.R(4361, 'result', result, false, false), J$.G(4377, J$.R(4369, 'part', part, false, false), 'operator'), J$.F(4417, J$.R(4385, 'callback', callback, false, false), false)(J$.R(4393, 'field', field, false, false), J$.G(4409, J$.R(4401, 'part', part, false, false), 'operand')));
                                                        }
                                                    } else if (J$.C(200, J$.B(314, 'in', J$.G(4441, J$.R(4433, 'part', part, false, false), 'operator'), J$.R(4449, 'arrayOperators', arrayOperators, false, true)))) {
                                                        J$.F(4609, J$.R(4457, 'addOperator', addOperator, false, true), false)(J$.R(4465, 'result', result, false, false), J$.G(4481, J$.R(4473, 'part', part, false, false), 'field'), J$.G(4497, J$.R(4489, 'part', part, false, false), 'operator'), J$.M(4601, J$.G(4513, J$.R(4505, 'part', part, false, false), 'operand'), 'map', false)(J$.T(4593, function (v) {
                                                            jalangiLabel1:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(4569, arguments.callee, this, arguments);
                                                                        arguments = J$.N(4577, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(4585, 'v', v, true, false, false);
                                                                        return J$.Rt(4561, J$.F(4553, J$.R(4521, 'callback', callback, false, false), false)(J$.G(4537, J$.R(4529, 'part', part, false, false), 'field'), J$.R(4545, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(5945, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(5953))
                                                                            continue jalangiLabel1;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else if (J$.C(192, J$.B(322, '===', J$.G(4625, J$.R(4617, 'part', part, false, false), 'operator'), J$.T(4633, '$text', 21, false)))) {
                                                        J$.P(4705, J$.R(4641, 'result', result, false, false), '$text', J$.T(4697, { $search: J$.F(4689, J$.R(4649, 'callback', callback, false, false), false)(J$.R(4657, 'field', field, false, false), J$.G(4681, J$.G(4673, J$.R(4665, 'part', part, false, false), 'operand'), '$search')) }, 11, false));
                                                        if (J$.C(176, J$.B(330, '!==', J$.G(4729, J$.G(4721, J$.R(4713, 'part', part, false, false), 'operand'), '$language'), J$.T(4737, undefined, 24, false)))) {
                                                            J$.P(4785, J$.G(4753, J$.R(4745, 'result', result, false, false), '$text'), '$language', J$.G(4777, J$.G(4769, J$.R(4761, 'part', part, false, false), 'operand'), '$language'));
                                                        }
                                                    } else {
                                                        if (J$.C(184, J$.B(338, '!==', J$.G(4801, J$.R(4793, 'part', part, false, false), 'field'), J$.T(4809, undefined, 24, false)))) {
                                                            J$.F(4881, J$.R(4817, 'addOperator', addOperator, false, true), false)(J$.R(4825, 'result', result, false, false), J$.G(4841, J$.R(4833, 'part', part, false, false), 'field'), J$.G(4857, J$.R(4849, 'part', part, false, false), 'operator'), J$.G(4873, J$.R(4865, 'part', part, false, false), 'operand'));
                                                        } else {
                                                            J$.P(4929, J$.R(4889, 'result', result, false, false), J$.G(4905, J$.R(4897, 'part', part, false, false), 'operator'), J$.G(4921, J$.R(4913, 'part', part, false, false), 'operand'));
                                                        }
                                                    }
                                                }
                                            } else {
                                                if (J$.C(232, J$.B(346, '===', J$.G(4945, J$.R(4937, 'part', part, false, false), 'operator'), J$.T(4953, '$elemMatch', 21, false)))) {
                                                    var mappedValue = J$.W(5009, 'mappedValue', J$.F(5001, J$.R(4961, 'mapValues', mapValues, false, true), false)(J$.G(4977, J$.R(4969, 'part', part, false, false), 'parts'), J$.R(4985, 'callback', callback, false, false), J$.R(4993, 'field', field, false, false)), mappedValue, false, false);
                                                    J$.F(5073, J$.R(5017, 'addOperator', addOperator, false, true), false)(J$.R(5025, 'result', result, false, false), J$.G(5041, J$.R(5033, 'part', part, false, false), 'field'), J$.G(5057, J$.R(5049, 'part', part, false, false), 'operator'), J$.R(5065, 'mappedValue', mappedValue, false, false));
                                                } else if (J$.C(224, J$.B(354, '===', J$.G(5089, J$.R(5081, 'part', part, false, false), 'operator'), J$.T(5097, '$not', 21, false)))) {
                                                    J$.P(5177, J$.R(5105, 'result', result, false, false), J$.G(5121, J$.R(5113, 'part', part, false, false), 'operator'), J$.F(5169, J$.R(5129, 'mapValues', mapValues, false, true), false)(J$.G(5145, J$.R(5137, 'part', part, false, false), 'parts'), J$.R(5153, 'callback', callback, false, false), J$.R(5161, 'field', field, false, false)));
                                                } else {
                                                    var operands = J$.W(5193, 'operands', J$.T(5185, [], 10, false), operands, false, false);
                                                    J$.M(5305, J$.G(5209, J$.R(5201, 'part', part, false, false), 'parts'), 'forEach', false)(J$.T(5297, function (innerPart) {
                                                        jalangiLabel2:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(5273, arguments.callee, this, arguments);
                                                                    arguments = J$.N(5281, 'arguments', arguments, true, false, false);
                                                                    innerPart = J$.N(5289, 'innerPart', innerPart, true, false, false);
                                                                    J$.M(5265, J$.R(5217, 'operands', operands, false, false), 'push', false)(J$.F(5257, J$.R(5225, 'mapValues', mapValues, false, true), false)(J$.G(5241, J$.R(5233, 'innerPart', innerPart, false, false), 'parts'), J$.R(5249, 'callback', callback, false, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(5961, J$e);
                                                                } finally {
                                                                    if (J$.Fr(5969))
                                                                        continue jalangiLabel2;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(5345, J$.R(5313, 'result', result, false, false), J$.G(5329, J$.R(5321, 'part', part, false, false), 'operator'), J$.R(5337, 'operands', operands, false, false));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(5977, J$e);
                                        } finally {
                                            if (J$.Fr(5985))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(5425, J$.R(5417, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(5993, J$e);
                        } finally {
                            if (J$.Fr(6001))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), mapValues, false, true);
        } catch (J$e) {
            J$.Ex(6041, J$e);
        } finally {
            if (J$.Sr(6049))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

