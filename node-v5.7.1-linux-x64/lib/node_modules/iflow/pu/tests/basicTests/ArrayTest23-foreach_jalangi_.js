J$.N(NaN, 'uTILs2342ClEAnPC', uTILs2342ClEAnPC, false, false, false);J$.N(NaN, 'uTILs2342ClEAnPC', uTILs2342ClEAnPC, false, false, false); var uTILs2342ClEAnPC = J$.W(NaN, 'uTILs2342ClEAnPC', J$.F(NaN, J$.I(typeof require === 'undefined' ? require = J$.R(NaN, 'require', undefined, true, true) : require = J$.R(NaN, 'require', require, true, true)), false)(J$.T(NaN, 'iflow', 21, false)), uTILs2342ClEAnPC, false, true);
J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5025, '/home/hjw/node-v5.7.1-linux-x64/lib/node_modules/iflow/pu/tests/basicTests/ArrayTest23-foreach_jalangi_.js');
            J$.F(5017, J$.T(5009, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4969, arguments.callee, this, arguments);
                            arguments = J$.N(4977, 'arguments', arguments, true, false, false);
                            J$.N(4985, 'utils', utils, false, false, false);
                            J$.N(4993, 'arr', arr, false, false, false);
                            J$.N(5001, 'res', res, false, false, false);
                            var utils = J$.W(4753, 'utils', J$.F(4745, J$.I(typeof require === 'undefined' ? require = J$.R(4729, 'require', undefined, true, true) : require = J$.R(4729, 'require', require, true, true)), false)(J$.T(4737, '../TestUtils', 21, false)), utils, false, false);
                            var arr = J$.W(4785, 'arr', J$.T(4777, [
                                J$.T(4761, 1, 22, false),
                                J$.T(4769, 2, 22, false)
                            ], 10, false), arr, false, false);
                            J$.M(4849, J$.R(4793, 'arr', arr, false, false), 'push', false)(J$.M(4841, J$.R(4801, 'utils', utils, false, false), 'source', false)(J$.T(4809, 3, 22, false), J$.G(4825, J$.R(4817, 'utils', utils, false, false), 'HIGH_LEVEL'), J$.T(4833, 'test-source-array-foreach', 21, false)));
                            var res = J$.W(4865, 'res', J$.T(4857, 0, 22, false), res, false, false);
                            J$.M(4937, J$.R(4873, 'arr', arr, false, false), 'forEach', false)(J$.T(4929, function test(element) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4905, arguments.callee, this, arguments);
                                            arguments = J$.N(4913, 'arguments', arguments, true, false, false);
                                            element = J$.N(4921, 'element', element, true, false, false);
                                            res = J$.W(4897, 'res', J$.B(18, '+', J$.R(4889, 'res', res, false, false), J$.R(4881, 'element', element, false, false)), res, false, false);
                                        } catch (J$e) {
                                            J$.Ex(5033, J$e);
                                        } finally {
                                            if (J$.Fr(5041))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(4961, J$.R(4945, 'utils', utils, false, false), 'sink', false)(J$.R(4953, 'res', res, false, false));
                        } catch (J$e) {
                            J$.Ex(5049, J$e);
                        } finally {
                            if (J$.Fr(5057))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)();
        } catch (J$e) {
            J$.Ex(5065, J$e);
        } finally {
            if (J$.Sr(5073))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }    // JALANGI DO NOT INSTRUMENT
