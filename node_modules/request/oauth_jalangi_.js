J$.iids = {"8":[22,4,22,23],"9":[1,14,1,21],"10":[22,3,22,30],"16":[29,7,29,19],"17":[1,22,1,30],"18":[22,3,23,31],"25":[1,14,1,31],"26":[22,3,23,37],"33":[2,6,2,13],"34":[26,12,26,38],"41":[2,14,2,27],"42":[26,12,26,67],"49":[2,6,2,28],"50":[22,3,27,17],"57":[1,14,1,31],"58":[28,13,28,54],"65":[1,14,1,31],"66":[29,28,29,60],"73":[2,6,2,28],"81":[2,6,2,28],"89":[6,10,6,16],"97":[6,28,6,34],"105":[6,36,6,39],"113":[6,10,6,40],"115":[6,10,6,27],"121":[6,48,6,52],"129":[6,10,6,53],"131":[6,10,6,47],"137":[6,61,6,69],"145":[6,10,6,70],"147":[6,10,6,60],"153":[6,10,6,70],"161":[6,3,6,71],"169":[5,1,7,2],"177":[5,1,7,2],"185":[5,1,7,2],"193":[5,1,7,2],"201":[10,10,10,28],"209":[10,29,10,32],"217":[10,10,10,33],"225":[11,11,11,15],"233":[11,17,11,22],"241":[10,10,11,23],"243":[10,10,11,10],"249":[12,11,12,16],"257":[12,18,12,23],"265":[10,10,12,24],"267":[10,10,12,10],"273":[13,11,13,16],"281":[13,18,13,23],"289":[10,10,13,24],"291":[10,10,13,10],"297":[14,11,14,16],"305":[14,18,14,23],"313":[10,10,14,24],"315":[10,10,14,10],"321":[15,11,15,15],"329":[15,17,15,22],"337":[10,10,15,23],"339":[10,10,15,10],"345":[10,10,15,23],"353":[10,3,15,24],"361":[9,1,17,2],"369":[9,1,17,2],"377":[9,1,17,2],"385":[22,4,22,14],"393":[22,18,22,23],"401":[22,27,22,30],"409":[23,3,23,21],"417":[23,22,23,30],"425":[23,3,23,31],"433":[23,34,23,37],"441":[24,3,24,9],"449":[24,15,24,21],"457":[24,3,24,22],"459":[24,3,24,14],"465":[24,3,24,29],"467":[24,3,24,27],"473":[26,12,26,18],"481":[26,19,26,26],"489":[26,27,26,28],"497":[26,19,26,29],"505":[26,12,26,30],"513":[26,33,26,38],"521":[26,41,26,47],"529":[26,48,26,55],"537":[26,56,26,62],"545":[26,63,26,64],"553":[26,56,26,65],"561":[26,48,26,66],"569":[26,41,26,67],"577":[26,12,26,67],"585":[26,5,26,68],"593":[24,34,27,4],"601":[24,34,27,4],"609":[24,34,27,4],"617":[24,34,27,4],"625":[24,3,27,5],"627":[24,3,24,33],"633":[27,11,27,16],"641":[24,3,27,17],"643":[24,3,27,10],"649":[22,3,27,17],"657":[22,3,27,17],"665":[28,13,28,31],"673":[28,32,28,47],"681":[28,13,28,48],"689":[28,51,28,54],"697":[28,13,28,54],"705":[28,13,28,54],"713":[29,7,29,19],"721":[29,28,29,46],"729":[29,47,29,59],"737":[29,28,29,60],"745":[29,21,29,24],"753":[29,21,29,60],"761":[29,21,29,61],"769":[30,10,30,14],"777":[30,15,30,18],"785":[30,20,30,24],"793":[30,10,30,25],"801":[30,10,30,25],"809":[30,3,30,26],"817":[19,1,31,2],"825":[19,1,31,2],"833":[19,1,31,2],"841":[19,1,31,2],"849":[19,1,31,2],"857":[19,1,31,2],"865":[19,1,31,2],"873":[19,1,31,2],"881":[19,1,31,2],"889":[19,1,31,2],"897":[33,1,33,8],"905":[33,20,33,28],"913":[33,1,33,28],"921":[33,1,33,29],"929":[34,1,34,8],"937":[34,19,34,26],"945":[34,1,34,26],"953":[34,1,34,27],"961":[1,1,34,27],"969":[1,1,34,27],"977":[1,1,34,27],"985":[5,1,7,2],"993":[1,1,34,27],"1001":[9,1,17,2],"1009":[1,1,34,27],"1017":[19,1,31,2],"1025":[1,1,34,27],"1033":[5,1,7,2],"1041":[5,1,7,2],"1049":[9,1,17,2],"1057":[9,1,17,2],"1065":[24,34,27,4],"1073":[24,34,27,4],"1081":[29,3,29,61],"1089":[19,1,31,2],"1097":[19,1,31,2],"1105":[1,1,34,27],"1113":[1,1,34,27],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/request/oauth.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/request/oauth_jalangi_.js","code":"var crypto = require('crypto')\n  , qs = require('querystring')\n  ;\n\nfunction sha1 (key, body) {\n  return crypto.createHmac('sha1', key).update(body).digest('base64')\n}\n\nfunction rfc3986 (str) {\n  return encodeURIComponent(str)\n    .replace(/!/g,'%21')\n    .replace(/\\*/g,'%2A')\n    .replace(/\\(/g,'%28')\n    .replace(/\\)/g,'%29')\n    .replace(/'/g,'%27')\n    ;\n}\n\nfunction hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret, body) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth\n  var base = \n    (httpMethod || 'GET') + \"&\" +\n    encodeURIComponent(  base_uri ) + \"&\" +\n    Object.keys(params).sort().map(function (i) {\n      // big WTF here with the escape + encoding but it's what twitter wants\n      return escape(rfc3986(i)) + \"%3D\" + escape(rfc3986(params[i]))\n    }).join(\"%26\")\n  var key = encodeURIComponent(consumer_secret) + '&'\n  if (token_secret) key += encodeURIComponent(token_secret)\n  return sha1(key, base)\n}\n\nexports.hmacsign = hmacsign\nexports.rfc3986 = rfc3986"};
jalangiLabel1080:
    while (true) {
        try {
            J$.Se(961, '/home/james/nodejs/HiPar/node_modules/request/oauth_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/request/oauth.js');
            function sha1(key, body) {
                jalangiLabel1076:
                    while (true) {
                        try {
                            J$.Fe(169, arguments.callee, this, arguments);
                            arguments = J$.N(177, 'arguments', arguments, 4);
                            key = J$.N(185, 'key', key, 4);
                            body = J$.N(193, 'body', body, 4);
                            return J$.X1(161, J$.Rt(153, J$.M(145, J$.M(129, J$.M(113, J$.R(89, 'crypto', crypto, 1), 'createHmac', 0)(J$.T(97, 'sha1', 21, false), J$.R(105, 'key', key, 0)), 'update', 0)(J$.R(121, 'body', body, 0)), 'digest', 0)(J$.T(137, 'base64', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1033, J$e);
                        } finally {
                            if (J$.Fr(1041))
                                continue jalangiLabel1076;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function rfc3986(str) {
                jalangiLabel1077:
                    while (true) {
                        try {
                            J$.Fe(361, arguments.callee, this, arguments);
                            arguments = J$.N(369, 'arguments', arguments, 4);
                            str = J$.N(377, 'str', str, 4);
                            return J$.X1(353, J$.Rt(345, J$.M(337, J$.M(313, J$.M(289, J$.M(265, J$.M(241, J$.F(217, J$.R(201, 'encodeURIComponent', encodeURIComponent, 2), 0)(J$.R(209, 'str', str, 0)), 'replace', 0)(J$.T(225, /!/g, 14, false), J$.T(233, '%21', 21, false)), 'replace', 0)(J$.T(249, /\*/g, 14, false), J$.T(257, '%2A', 21, false)), 'replace', 0)(J$.T(273, /\(/g, 14, false), J$.T(281, '%28', 21, false)), 'replace', 0)(J$.T(297, /\)/g, 14, false), J$.T(305, '%29', 21, false)), 'replace', 0)(J$.T(321, /'/g, 14, false), J$.T(329, '%27', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1049, J$e);
                        } finally {
                            if (J$.Fr(1057))
                                continue jalangiLabel1077;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function hmacsign(httpMethod, base_uri, params, consumer_secret, token_secret, body) {
                jalangiLabel1079:
                    while (true) {
                        try {
                            J$.Fe(817, arguments.callee, this, arguments);
                            arguments = J$.N(825, 'arguments', arguments, 4);
                            httpMethod = J$.N(833, 'httpMethod', httpMethod, 4);
                            base_uri = J$.N(841, 'base_uri', base_uri, 4);
                            params = J$.N(849, 'params', params, 4);
                            consumer_secret = J$.N(857, 'consumer_secret', consumer_secret, 4);
                            token_secret = J$.N(865, 'token_secret', token_secret, 4);
                            body = J$.N(873, 'body', body, 4);
                            J$.N(881, 'base', base, 0);
                            J$.N(889, 'key', key, 0);
                            var base = J$.X1(657, J$.W(649, 'base', J$.B(50, '+', J$.B(26, '+', J$.B(18, '+', J$.B(10, '+', J$.C(8, J$.R(385, 'httpMethod', httpMethod, 0)) ? J$._() : J$.T(393, 'GET', 21, false), J$.T(401, "&", 21, false), 0), J$.F(425, J$.R(409, 'encodeURIComponent', encodeURIComponent, 2), 0)(J$.R(417, 'base_uri', base_uri, 0)), 0), J$.T(433, "&", 21, false), 0), J$.M(641, J$.M(625, J$.M(465, J$.M(457, J$.R(441, 'Object', Object, 2), 'keys', 0)(J$.R(449, 'params', params, 0)), 'sort', 0)(), 'map', 0)(J$.T(617, function (i) {
                                jalangiLabel1078:
                                    while (true) {
                                        try {
                                            J$.Fe(593, arguments.callee, this, arguments);
                                            arguments = J$.N(601, 'arguments', arguments, 4);
                                            i = J$.N(609, 'i', i, 4);
                                            return J$.X1(585, J$.Rt(577, J$.B(42, '+', J$.B(34, '+', J$.F(505, J$.R(473, 'escape', escape, 2), 0)(J$.F(497, J$.R(481, 'rfc3986', rfc3986, 1), 0)(J$.R(489, 'i', i, 0))), J$.T(513, "%3D", 21, false), 0), J$.F(569, J$.R(521, 'escape', escape, 2), 0)(J$.F(561, J$.R(529, 'rfc3986', rfc3986, 1), 0)(J$.G(553, J$.R(537, 'params', params, 0), J$.R(545, 'i', i, 0), 4))), 0)));
                                        } catch (J$e) {
                                            J$.Ex(1065, J$e);
                                        } finally {
                                            if (J$.Fr(1073))
                                                continue jalangiLabel1078;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 593)), 'join', 0)(J$.T(633, "%26", 21, false)), 0), base, 1));
                            var key = J$.X1(705, J$.W(697, 'key', J$.B(58, '+', J$.F(681, J$.R(665, 'encodeURIComponent', encodeURIComponent, 2), 0)(J$.R(673, 'consumer_secret', consumer_secret, 0)), J$.T(689, '&', 21, false), 0), key, 1));
                            if (J$.X1(1081, J$.C(16, J$.R(713, 'token_secret', token_secret, 0))))
                                J$.X1(761, key = J$.W(753, 'key', J$.B(66, '+', J$.R(745, 'key', key, 0), J$.F(737, J$.R(721, 'encodeURIComponent', encodeURIComponent, 2), 0)(J$.R(729, 'token_secret', token_secret, 0)), 0), key, 0));
                            return J$.X1(809, J$.Rt(801, J$.F(793, J$.R(769, 'sha1', sha1, 1), 0)(J$.R(777, 'key', key, 0), J$.R(785, 'base', base, 0))));
                        } catch (J$e) {
                            J$.Ex(1089, J$e);
                        } finally {
                            if (J$.Fr(1097))
                                continue jalangiLabel1079;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(969, 'crypto', crypto, 0);
            J$.N(977, 'qs', qs, 0);
            sha1 = J$.N(993, 'sha1', J$.T(985, sha1, 12, false, 169), 0);
            rfc3986 = J$.N(1009, 'rfc3986', J$.T(1001, rfc3986, 12, false, 361), 0);
            hmacsign = J$.N(1025, 'hmacsign', J$.T(1017, hmacsign, 12, false, 817), 0);
            var crypto = J$.X1(65, J$.W(57, 'crypto', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'crypto', 21, false)), crypto, 3)), qs = J$.X1(81, J$.W(73, 'qs', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, 'querystring', 21, false)), qs, 3));
            J$.X1(921, J$.P(913, J$.R(897, 'exports', exports, 2), 'hmacsign', J$.R(905, 'hmacsign', hmacsign, 1), 0));
            J$.X1(953, J$.P(945, J$.R(929, 'exports', exports, 2), 'rfc3986', J$.R(937, 'rfc3986', rfc3986, 1), 0));
        } catch (J$e) {
            J$.Ex(1105, J$e);
        } finally {
            if (J$.Sr(1113)) {
                J$.L();
                continue jalangiLabel1080;
            } else {
                J$.L();
                break jalangiLabel1080;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
