"main";_789‍.x([["default",()=>PriceSlider]]);let React;_789‍.w("react",[["default",["React"],function(v){React=v}]]);let NavLink;_789‍.w("react-router-dom",[["NavLink",["NavLink"],function(v){NavLink=v}]]);let Range;_789‍.w("rc-slider",[["Range",["Range"],function(v){Range=v}]]);let themeSettings,text;_789‍.w("../../lib/settings",[["themeSettings",["themeSettings"],function(v){themeSettings=v}],["text",["text"],function(v){text=v}]]);let helper;_789‍.w("../../lib/helper",[["*",null,function(v){helper=v}]]);





               class PriceSlider extends React.Component {
	constructor(props) {
		super(props);

		this.setValues = values => {
			if (Array.isArray(values) && values.length === 2) {
				this.setState({
					minValue: values[0],
					maxValue: values[1]
				});
			}
		};

		this.state = {
			minValue: props.minValue > 0 ? props.minValue : props.minPrice,
			maxValue: props.maxValue > 0 ? props.maxValue : props.maxPrice
		};
	}

	componentWillReceiveProps(nextProps) {
		if (nextProps.minPrice !== this.props.minPrice || nextProps.maxPrice !== this.props.maxPrice) {
			this.setState({
				minValue: nextProps.minPrice,
				maxValue: nextProps.maxPrice
			});
		}
	}

	render() {
		const { minPrice, maxPrice, setPriceFromAndTo, settings } = this.props;

		return React.createElement(
			'div',
			{ className: 'price-filter' },
			React.createElement(
				'div',
				{ className: 'attribute-title' },
				text.price
			),
			React.createElement(Range, {
				min: minPrice,
				max: maxPrice,
				value: [this.state.minValue, this.state.maxValue],
				disabled: maxPrice === 0,
				className: 'price-filter-range',
				onAfterChange: values => {
					setPriceFromAndTo(...values);
				},
				onChange: this.setValues
			}),
			React.createElement(
				'div',
				{ className: 'columns is-mobile is-gapless price-filter-values' },
				React.createElement(
					'div',
					{ className: 'column has-text-left' },
					helper.formatCurrency(this.state.minValue, settings)
				),
				React.createElement(
					'div',
					{ className: 'column has-text-right' },
					helper.formatCurrency(this.state.maxValue, settings)
				)
			)
		);
	}
}