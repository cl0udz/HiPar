"main";let React;_21d‍.w("react",[["default",["React"],function(v){React=v}]]);let PropTypes;_21d‍.w("prop-types",[["default",["PropTypes"],function(v){PropTypes=v}]]);let NavLink;_21d‍.w("react-router-dom",[["NavLink",["NavLink"],function(v){NavLink=v}]]);let text;_21d‍.w("../lib/settings",[["text",["text"],function(v){text=v}]]);let helper;_21d‍.w("../lib/helper",[["*",null,function(v){helper=v}]]);





const CategoryBreadcrumbs = ({ currentCategory, categories }) => {
	const items = helper.getCategoryBreadcrumbs(currentCategory.id, categories);
	return React.createElement(
		'nav',
		{ className: 'breadcrumb is-small', 'aria-label': 'breadcrumbs' },
		React.createElement(
			'ul',
			null,
			React.createElement(
				'li',
				null,
				React.createElement(
					NavLink,
					{ to: '/' },
					text.home
				)
			),
			items,
			React.createElement(
				'li',
				{ className: 'is-active' },
				React.createElement(
					'a',
					{ href: currentCategory.path, 'aria-current': 'page' },
					currentCategory.name
				)
			)
		)
	);
};

CategoryBreadcrumbs.propTypes = {
	currentCategory: PropTypes.shape({}).isRequired,
	categories: PropTypes.arrayOf(PropTypes.shape({})).isRequired
};

_21d‍.d(CategoryBreadcrumbs);