"main";let React,Fragment;_789‍.w("react",[["default",["React"],function(v){React=v}],["Fragment",["Fragment"],function(v){Fragment=v}]]);let PropTypes;_789‍.w("prop-types",[["default",["PropTypes"],function(v){PropTypes=v}]]);let helper;_789‍.w("../lib/helper",[["*",null,function(v){helper=v}]]);let MetaTags;_789‍.w("../components/metaTags",[["default",["MetaTags"],function(v){MetaTags=v}]]);let CheckoutSuccess;_789‍.w("../components/checkoutSuccess",[["default",["CheckoutSuccess"],function(v){CheckoutSuccess=v}]]);





const CheckoutSuccessContainer = props => {
	const {
		state: { pageDetails, order, settings, shippingMethods, checkoutFields }
	} = props;
	const shippingMethod = helper.getShippingMethodFromOrder(order, shippingMethods);

	return React.createElement(
		Fragment,
		null,
		React.createElement(MetaTags, {
			title: pageDetails.meta_title,
			description: pageDetails.meta_description,
			canonicalUrl: pageDetails.url,
			ogTitle: pageDetails.meta_title,
			ogDescription: pageDetails.meta_description
		}),
		React.createElement(
			'section',
			{ className: 'section section-checkout' },
			React.createElement(
				'div',
				{ className: 'container' },
				React.createElement(
					'div',
					{ className: 'columns content' },
					React.createElement(
						'div',
						{ className: 'column is-8 is-offset-2' },
						React.createElement(
							'div',
							{ className: 'checkout-box' },
							React.createElement(CheckoutSuccess, {
								order: order,
								settings: settings,
								pageDetails: pageDetails,
								shippingMethod: shippingMethod,
								checkoutFields: checkoutFields
							})
						)
					)
				)
			)
		)
	);
};

CheckoutSuccessContainer.propTypes = {
	state: PropTypes.shape({
		settings: PropTypes.shape({}),
		pageDetails: PropTypes.shape({}),
		order: PropTypes.shape({}),
		shippingMethods: PropTypes.arrayOf(PropTypes.shape({})),
		checkoutFields: PropTypes.arrayOf(PropTypes.shape({}))
	}).isRequired
};

_789‍.d(CheckoutSuccessContainer);