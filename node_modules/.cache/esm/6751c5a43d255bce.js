"main";let express;_3d2‍.w("express",[["default",["express"],function(v){express=v}]]);let helmet;_3d2‍.w("helmet",[["default",["helmet"],function(v){helmet=v}]]);let responseTime;_3d2‍.w("response-time",[["default",["responseTime"],function(v){responseTime=v}]]);let path;_3d2‍.w("path",[["default",["path"],function(v){path=v}]]);let cookieParser;_3d2‍.w("cookie-parser",[["default",["cookieParser"],function(v){cookieParser=v}]]);let winston;_3d2‍.w("winston",[["default",["winston"],function(v){winston=v}]]);let settings;_3d2‍.w("../../../config/server",[["default",["settings"],function(v){settings=v}]]);let logger;_3d2‍.w("./logger",[["default",["logger"],function(v){logger=v}]]);let robotsRendering;_3d2‍.w("./robotsRendering",[["default",["robotsRendering"],function(v){robotsRendering=v}]]);let sitemapRendering;_3d2‍.w("./sitemapRendering",[["default",["sitemapRendering"],function(v){sitemapRendering=v}]]);let redirects;_3d2‍.w("./redirects",[["default",["redirects"],function(v){redirects=v}]]);let pageRendering;_3d2‍.w("./pageRendering",[["default",["pageRendering"],function(v){pageRendering=v}]]);yield;












const app = express();

const ADMIN_INDEX_PATH = path.resolve('public/admin/index.html');
const STATIC_OPTIONS = {
	maxAge: 31536000000 // One year
};

app.set('trust proxy', 1);
app.use(helmet());
app.get('/images/:entity/:id/:size/:filename', (req, res, next) => {
	// A stub of image resizing (can be done with Nginx)
	const newUrl = `/images/${req.params.entity}/${req.params.id}/${req.params.filename}`;
	req.url = newUrl;
	next();
});
app.use(express.static('public/content', STATIC_OPTIONS));
app.use('/assets', express.static('theme/assets', STATIC_OPTIONS));
app.use('/admin-assets', express.static('public/admin-assets', STATIC_OPTIONS));
app.use('/sw.js', express.static('theme/assets/sw.js'));
app.use('/admin', (req, res) => {
	res.sendFile(ADMIN_INDEX_PATH);
});
app.get(/^.+\.(jpg|jpeg|gif|png|bmp|ico|webp|svg|css|js|zip|rar|flv|swf|xls)$/, (req, res) => {
	res.status(404).end();
});
app.get('/robots.txt', robotsRendering);
app.get('/sitemap.xml', sitemapRendering);
app.get('*', redirects);
app.use(responseTime());
app.use(cookieParser(settings.cookieSecretKey));
app.get('*', pageRendering);

const server = app.listen(settings.storeListenPort, () => {
	const serverAddress = server.address();
	winston.info(`Store running at http://localhost:${serverAddress.port}`);
});