"main";let sm;_3d2‍.w("sitemap",[["default",["sm"],function(v){sm=v}]]);let winston;_3d2‍.w("winston",[["default",["winston"],function(v){winston=v}]]);let api;_3d2‍.w("./api",[["default",["api"],function(v){api=v}]]);



const SITEMAP_EXCLUDE_PATH = ['/', '/checkout', '/checkout-success', '/account', '/cart', '/login', '/logout', '/register'];

const sitemapRendering = (req, res) => {
	Promise.all([api.sitemap.list({ enabled: true }), api.settings.retrieve()]).then(([sitemapResponse, settingsResponse]) => {
		const sitemapArray = sitemapResponse.json;
		const settings = settingsResponse.json;
		const hostname = settings.domain && settings.domain.length > 0 ? settings.domain : `${req.protocol}://${req.hostname}`;

		const urls = sitemapArray.filter(item => item.type !== 'reserved' && item.type !== 'search' && !SITEMAP_EXCLUDE_PATH.includes(item.path)).map(item => item.path);
		const sitemap = sm.createSitemap({ hostname, urls });
		sitemap.toXML((err, xml) => {
			if (err) {
				winston.error(err.message ? err.message : err);
				res.status(500).end();
			} else {
				res.header('Content-Type', 'application/xml');
				res.send(xml);
			}
		});
	});
};

_3d2‍.d(sitemapRendering);