"main";_8ab‍.x([["onPageLoad",()=>onPageLoad],["pageView",()=>pageView],["productView",()=>productView],["search",()=>search],["addCartItem",()=>addCartItem],["deleteCartItem",()=>deleteCartItem],["checkoutView",()=>checkoutView],["checkoutSuccess",()=>checkoutSuccess],["setPaymentMethod",()=>setPaymentMethod],["setShippingMethod",()=>setShippingMethod]]);let PAGE,PRODUCT_CATEGORY,PRODUCT,RESERVED,SEARCH;_8ab‍.w("../pageTypes",[["PAGE",["PAGE"],function(v){PAGE=v}],["PRODUCT_CATEGORY",["PRODUCT_CATEGORY"],function(v){PRODUCT_CATEGORY=v}],["PRODUCT",["PRODUCT"],function(v){PRODUCT=v}],["RESERVED",["RESERVED"],function(v){RESERVED=v}],["SEARCH",["SEARCH"],function(v){SEARCH=v}]]);let googleAnalytics;_8ab‍.w("./googleAnalytics",[["*",null,function(v){googleAnalytics=v}]]);


       const onPageLoad = ({ state }) => {
	const { currentPage, productDetails, productFilter, cart } = state.app;

	switch (currentPage.type) {
		case PRODUCT:
			productView({ product: productDetails });
			break;
		case SEARCH:
			search({ searchText: productFilter.search });
			break;
		case PAGE:
			if (currentPage.path === '/checkout') {
				checkoutView({ order: cart });
			}
			break;
	}
};

       const pageView = ({ path, title }) => {
	googleAnalytics.pageView({ path, title });
};

       const productView = ({ product }) => {
	googleAnalytics.viewItem({ product });
};

       const search = ({ searchText }) => {
	if (searchText && searchText.length > 0) {
		googleAnalytics.search({ searchText });
	}
};

       const addCartItem = ({ item, cart }) => {
	googleAnalytics.addToCart({ item, cart });
};

       const deleteCartItem = ({ itemId, cart }) => {
	googleAnalytics.removeFromCart({ itemId, cart });
};

       const checkoutView = ({ order }) => {
	if (order && order.items && order.items.length > 0) {
		googleAnalytics.beginCheckout({ order });
	}
};

       const checkoutSuccess = ({ order }) => {
	if (order && order.items && order.items.length > 0) {
		googleAnalytics.purchase({ order });
	}
};

const findMethodById = ({ methodId, allMethods }) => {
	if (methodId && allMethods && allMethods.length > 0) {
		return allMethods.find(m => m.id === methodId);
	} else {
		return null;
	}
};

       const setPaymentMethod = ({ methodId, allMethods }) => {
	const method = findMethodById({ methodId, allMethods });
	if (method) {
		googleAnalytics.setCheckoutOption({
			step: 1,
			option: 'payment method',
			value: method.name
		});
	}
};

       const setShippingMethod = ({ methodId, allMethods }) => {
	const method = findMethodById({ methodId, allMethods });
	if (method) {
		googleAnalytics.setCheckoutOption({
			step: 1,
			option: 'shipping method',
			value: method.name
		});
	}
};