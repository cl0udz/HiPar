"main";_f4c‍.x([["db",()=>db]]);let winston;_f4c‍.w("winston",[["default",["winston"],function(v){winston=v}]]);let url;_f4c‍.w("url",[["default",["url"],function(v){url=v}]]);let MongoClient;_f4c‍.w("mongodb",[["MongoClient",["MongoClient"],function(v){MongoClient=v}]]);let settings;_f4c‍.w("./settings",[["default",["settings"],function(v){settings=v}]]);




const mongodbConnection = settings.mongodbServerUrl;
const mongoPathName = url.parse(mongodbConnection).pathname;
const dbName = mongoPathName.substring(mongoPathName.lastIndexOf('/') + 1);

const RECONNECT_INTERVAL = 1000;
const CONNECT_OPTIONS = {
	reconnectTries: 3600,
	reconnectInterval: RECONNECT_INTERVAL,
	useNewUrlParser: true
};

const onClose = () => {
	winston.info('MongoDB connection was closed');
};

const onReconnect = () => {
	winston.info('MongoDB reconnected');
};

       let db = null;

const connectWithRetry = () => {
	MongoClient.connect(
		mongodbConnection,
		CONNECT_OPTIONS,
		(err, client) => {
			if (err) {
				winston.error(
					`MongoDB connection was failed: ${err.message}`,
					err.message
				);
				setTimeout(connectWithRetry, RECONNECT_INTERVAL);
			} else {
				_f4c‍.u(db = client.db(dbName));
				db.on('close', onClose);
				db.on('reconnect', onReconnect);
				winston.info('MongoDB connected successfully');
			}
		}
	);
};

connectWithRetry();
