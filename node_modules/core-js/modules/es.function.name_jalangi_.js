J$.iids = {"8":[11,5,11,48],"9":[1,19,1,26],"10":[11,22,11,47],"16":[11,5,11,48],"17":[1,27,1,53],"18":[11,20,11,48],"25":[1,19,1,54],"33":[1,19,1,54],"41":[1,19,1,54],"49":[2,22,2,29],"57":[2,30,2,67],"65":[2,22,2,68],"73":[2,22,2,70],"81":[2,22,2,70],"89":[2,22,2,70],"97":[4,25,4,33],"105":[4,25,4,43],"113":[4,25,4,43],"121":[4,25,4,43],"129":[5,33,5,50],"137":[5,33,5,59],"145":[5,33,5,59],"153":[5,33,5,59],"161":[6,14,6,37],"169":[6,14,6,37],"177":[6,14,6,37],"185":[7,12,7,18],"193":[7,12,7,18],"201":[7,12,7,18],"209":[11,5,11,16],"217":[11,22,11,26],"225":[11,30,11,47],"233":[12,3,12,17],"241":[12,18,12,35],"249":[12,37,12,41],"257":[13,19,13,23],"265":[16,16,16,41],"273":[16,47,16,51],"281":[16,16,16,52],"283":[16,16,16,46],"289":[16,59,16,65],"297":[16,16,16,66],"299":[16,16,16,58],"305":[16,67,16,68],"313":[16,16,16,69],"321":[16,16,16,69],"329":[16,9,16,70],"337":[18,16,18,18],"345":[18,16,18,18],"353":[18,9,18,19],"361":[17,9,19,8],"369":[14,10,20,6],"377":[14,10,20,6],"385":[14,10,20,6],"393":[14,10,20,6],"401":[12,43,20,8],"409":[12,3,20,9],"417":[12,3,20,10],"425":[1,1,22,2],"433":[1,1,22,2],"441":[1,1,22,2],"449":[1,1,22,2],"457":[1,1,22,2],"465":[1,1,22,2],"473":[1,1,22,2],"481":[14,10,20,6],"489":[14,10,20,6],"497":[11,1,22,2],"505":[1,1,22,2],"513":[1,1,22,2],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/modules/es.function.name.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/modules/es.function.name_jalangi_.js","code":"var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"};
jalangiLabel318:
    while (true) {
        try {
            J$.Se(425, '/home/james/nodejs/HiPar/node_modules/core-js/modules/es.function.name_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/modules/es.function.name.js');
            J$.N(433, 'DESCRIPTORS', DESCRIPTORS, 0);
            J$.N(441, 'defineProperty', defineProperty, 0);
            J$.N(449, 'FunctionPrototype', FunctionPrototype, 0);
            J$.N(457, 'FunctionPrototypeToString', FunctionPrototypeToString, 0);
            J$.N(465, 'nameRE', nameRE, 0);
            J$.N(473, 'NAME', NAME, 0);
            var DESCRIPTORS = J$.X1(41, J$.W(33, 'DESCRIPTORS', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/descriptors', 21, false)), DESCRIPTORS, 3));
            var defineProperty = J$.X1(89, J$.W(81, 'defineProperty', J$.G(73, J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/object-define-property', 21, false)), 'f', 0), defineProperty, 3));
            var FunctionPrototype = J$.X1(121, J$.W(113, 'FunctionPrototype', J$.G(105, J$.R(97, 'Function', Function, 2), 'prototype', 0), FunctionPrototype, 3));
            var FunctionPrototypeToString = J$.X1(153, J$.W(145, 'FunctionPrototypeToString', J$.G(137, J$.R(129, 'FunctionPrototype', FunctionPrototype, 1), 'toString', 0), FunctionPrototypeToString, 3));
            var nameRE = J$.X1(177, J$.W(169, 'nameRE', J$.T(161, /^\s*function ([^ (]*)/, 14, false), nameRE, 3));
            var NAME = J$.X1(201, J$.W(193, 'NAME', J$.T(185, 'name', 21, false), NAME, 3));
            if (J$.X1(497, J$.C(16, J$.C(8, J$.R(209, 'DESCRIPTORS', DESCRIPTORS, 1)) ? J$.U(18, '!', J$.B(10, 'in', J$.R(217, 'NAME', NAME, 1), J$.R(225, 'FunctionPrototype', FunctionPrototype, 1), 0)) : J$._()))) {
                J$.X1(417, J$.F(409, J$.R(233, 'defineProperty', defineProperty, 1), 0)(J$.R(241, 'FunctionPrototype', FunctionPrototype, 1), J$.R(249, 'NAME', NAME, 1), J$.T(401, {
                    configurable: J$.T(257, true, 23, false),
                    get: J$.T(393, function get() {
                        jalangiLabel317:
                            while (true) {
                                try {
                                    J$.Fe(369, arguments.callee, this, arguments);
                                    arguments = J$.N(377, 'arguments', arguments, 4);
                                    get = J$.N(385, 'get', get, 0);
                                    try {
                                        return J$.X1(329, J$.Rt(321, J$.G(313, J$.M(297, J$.M(281, J$.R(265, 'FunctionPrototypeToString', FunctionPrototypeToString, 1), 'call', 0)(J$.R(273, 'this', this, 0)), 'match', 0)(J$.R(289, 'nameRE', nameRE, 1)), J$.T(305, 1, 22, false), 4)));
                                    } catch (error) {
                                        error = J$.N(361, 'error', error, 1);
                                        return J$.X1(353, J$.Rt(345, J$.T(337, '', 21, false)));
                                    }
                                } catch (J$e) {
                                    J$.Ex(481, J$e);
                                } finally {
                                    if (J$.Fr(489))
                                        continue jalangiLabel317;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 369)
                }, 11, false)));
            }
        } catch (J$e) {
            J$.Ex(505, J$e);
        } finally {
            if (J$.Sr(513)) {
                J$.L();
                continue jalangiLabel318;
            } else {
                J$.L();
                break jalangiLabel318;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
