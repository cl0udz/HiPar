J$.iids = {"8":[10,38,10,58],"9":[1,9,1,16],"10":[8,43,8,82],"17":[1,17,1,38],"18":[10,38,10,58],"25":[1,9,1,39],"33":[1,9,1,39],"41":[1,9,1,39],"49":[2,15,2,22],"57":[2,23,2,53],"65":[2,15,2,54],"73":[2,15,2,61],"81":[2,15,2,61],"89":[2,15,2,61],"97":[3,36,3,43],"105":[3,44,3,91],"113":[3,36,3,92],"121":[3,36,3,92],"129":[3,36,3,92],"137":[8,1,8,2],"145":[8,13,8,20],"153":[8,29,8,33],"161":[8,44,8,72],"169":[8,73,8,81],"177":[8,44,8,82],"185":[8,3,8,84],"193":[10,12,10,19],"201":[10,20,10,24],"209":[10,26,10,36],"217":[10,38,10,47],"225":[10,38,10,54],"233":[10,57,10,58],"241":[10,61,10,70],"249":[10,71,10,72],"257":[10,61,10,73],"265":[10,76,10,85],"273":[10,12,10,86],"281":[10,12,10,86],"289":[10,5,10,87],"297":[9,11,11,4],"305":[9,11,11,4],"313":[9,11,11,4],"321":[9,11,11,4],"329":[9,11,11,4],"337":[8,86,11,6],"345":[8,1,11,7],"353":[8,1,11,8],"361":[1,1,11,8],"369":[1,1,11,8],"377":[1,1,11,8],"385":[1,1,11,8],"393":[10,38,10,85],"401":[9,11,11,4],"409":[9,11,11,4],"417":[1,1,11,8],"425":[1,1,11,8],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/modules/es.array.filter.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/modules/es.array.filter_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('filter') }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"};
jalangiLabel297:
    while (true) {
        try {
            J$.Se(361, '/home/james/nodejs/HiPar/node_modules/core-js/modules/es.array.filter_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/modules/es.array.filter.js');
            J$.N(369, '$', $, 0);
            J$.N(377, '$filter', $filter, 0);
            J$.N(385, 'arrayMethodHasSpeciesSupport', arrayMethodHasSpeciesSupport, 0);
            var $ = J$.X1(41, J$.W(33, '$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/export', 21, false)), $, 3));
            var $filter = J$.X1(89, J$.W(81, '$filter', J$.G(73, J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/array-iteration', 21, false)), 'filter', 0), $filter, 3));
            var arrayMethodHasSpeciesSupport = J$.X1(129, J$.W(121, 'arrayMethodHasSpeciesSupport', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, '../internals/array-method-has-species-support', 21, false)), arrayMethodHasSpeciesSupport, 3));
            J$.X1(353, J$.F(345, J$.R(137, '$', $, 1), 0)(J$.T(185, {
                target: J$.T(145, 'Array', 21, false),
                proto: J$.T(153, true, 23, false),
                forced: J$.U(10, '!', J$.F(177, J$.R(161, 'arrayMethodHasSpeciesSupport', arrayMethodHasSpeciesSupport, 1), 0)(J$.T(169, 'filter', 21, false)))
            }, 11, false), J$.T(337, {
                filter: J$.T(329, function filter(callbackfn) {
                    jalangiLabel296:
                        while (true) {
                            try {
                                J$.Fe(297, arguments.callee, this, arguments);
                                arguments = J$.N(305, 'arguments', arguments, 4);
                                filter = J$.N(313, 'filter', filter, 0);
                                callbackfn = J$.N(321, 'callbackfn', callbackfn, 4);
                                return J$.X1(289, J$.Rt(281, J$.F(273, J$.R(193, '$filter', $filter, 1), 0)(J$.R(201, 'this', this, 0), J$.R(209, 'callbackfn', callbackfn, 0), J$.X1(393, J$.C(8, J$.B(18, '>', J$.G(225, J$.R(217, 'arguments', arguments, 2), 'length', 0), J$.T(233, 1, 22, false), 0))) ? J$.G(257, J$.R(241, 'arguments', arguments, 2), J$.T(249, 1, 22, false), 4) : J$.T(265, undefined, 24, false))));
                            } catch (J$e) {
                                J$.Ex(401, J$e);
                            } finally {
                                if (J$.Fr(409))
                                    continue jalangiLabel296;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 297)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(417, J$e);
        } finally {
            if (J$.Sr(425)) {
                J$.L();
                continue jalangiLabel297;
            } else {
                J$.L();
                break jalangiLabel297;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
