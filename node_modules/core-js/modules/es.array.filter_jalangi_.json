{"8":[10,38,10,58],"9":[1,9,1,16],"10":[8,43,8,82],"17":[1,17,1,38],"18":[10,38,10,58],"25":[1,9,1,39],"33":[1,9,1,39],"41":[1,9,1,39],"49":[2,15,2,22],"57":[2,23,2,53],"65":[2,15,2,54],"73":[2,15,2,61],"81":[2,15,2,61],"89":[2,15,2,61],"97":[3,36,3,43],"105":[3,44,3,91],"113":[3,36,3,92],"121":[3,36,3,92],"129":[3,36,3,92],"137":[8,1,8,2],"145":[8,13,8,20],"153":[8,29,8,33],"161":[8,44,8,72],"169":[8,73,8,81],"177":[8,44,8,82],"185":[8,3,8,84],"193":[10,12,10,19],"201":[10,20,10,24],"209":[10,26,10,36],"217":[10,38,10,47],"225":[10,38,10,54],"233":[10,57,10,58],"241":[10,61,10,70],"249":[10,71,10,72],"257":[10,61,10,73],"265":[10,76,10,85],"273":[10,12,10,86],"281":[10,12,10,86],"289":[10,5,10,87],"297":[9,11,11,4],"305":[9,11,11,4],"313":[9,11,11,4],"321":[9,11,11,4],"329":[9,11,11,4],"337":[8,86,11,6],"345":[8,1,11,7],"353":[8,1,11,8],"361":[1,1,11,8],"369":[1,1,11,8],"377":[1,1,11,8],"385":[1,1,11,8],"393":[10,38,10,85],"401":[9,11,11,4],"409":[9,11,11,4],"417":[1,1,11,8],"425":[1,1,11,8],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/modules/es.array.filter.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/modules/es.array.filter_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('filter') }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"}