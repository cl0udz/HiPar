J$.iids = {"8":[15,12,15,27],"9":[1,16,1,23],"10":[11,5,11,23],"16":[11,5,11,39],"17":[1,24,1,47],"18":[11,5,11,39],"25":[1,16,1,48],"26":[15,12,15,27],"33":[1,16,1,48],"41":[1,16,1,48],"49":[3,21,3,25],"57":[3,21,3,35],"65":[3,21,3,35],"73":[3,21,3,35],"81":[4,20,4,34],"89":[4,20,4,34],"97":[4,20,4,34],"105":[5,17,5,27],"113":[5,17,5,27],"121":[5,17,5,27],"129":[6,26,6,39],"137":[6,40,6,49],"145":[6,26,6,50],"153":[6,26,6,50],"161":[6,26,6,50],"169":[7,15,7,28],"177":[7,15,7,36],"185":[7,15,7,36],"193":[7,15,7,36],"201":[11,9,11,13],"209":[11,14,11,17],"217":[11,5,11,18],"225":[11,21,11,23],"233":[11,27,11,39],"241":[12,3,12,11],"249":[12,12,12,25],"257":[12,27,12,36],"265":[13,17,13,24],"273":[13,30,13,34],"281":[13,17,13,35],"283":[13,17,13,29],"289":[13,17,13,35],"297":[13,17,13,35],"305":[15,12,15,17],"313":[15,22,15,27],"321":[15,30,15,48],"329":[15,54,15,58],"337":[15,30,15,59],"339":[15,30,15,53],"345":[15,62,15,74],"353":[15,12,15,74],"361":[15,5,15,75],"369":[12,38,16,4],"377":[12,38,16,4],"385":[12,38,16,4],"393":[12,38,16,4],"401":[12,38,16,4],"409":[12,3,16,5],"417":[12,3,16,6],"425":[1,1,17,2],"433":[1,1,17,2],"441":[1,1,17,2],"449":[1,1,17,2],"457":[1,1,17,2],"465":[1,1,17,2],"473":[1,1,17,2],"481":[15,12,15,74],"489":[12,38,16,4],"497":[12,38,16,4],"505":[11,1,17,2],"513":[1,1,17,2],"521":[1,1,17,2],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/modules/es.date.to-string.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/modules/es.date.to-string_jalangi_.js","code":"var redefine = require('../internals/redefine');\n\nvar DatePrototype = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar nativeDateToString = DatePrototype[TO_STRING];\nvar getTime = DatePrototype.getTime;\n\n// `Date.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-date.prototype.tostring\nif (new Date(NaN) + '' != INVALID_DATE) {\n  redefine(DatePrototype, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? nativeDateToString.call(this) : INVALID_DATE;\n  });\n}\n"};
jalangiLabel229:
    while (true) {
        try {
            J$.Se(425, '/home/james/nodejs/HiPar/node_modules/core-js/modules/es.date.to-string_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/modules/es.date.to-string.js');
            J$.N(433, 'redefine', redefine, 0);
            J$.N(441, 'DatePrototype', DatePrototype, 0);
            J$.N(449, 'INVALID_DATE', INVALID_DATE, 0);
            J$.N(457, 'TO_STRING', TO_STRING, 0);
            J$.N(465, 'nativeDateToString', nativeDateToString, 0);
            J$.N(473, 'getTime', getTime, 0);
            var redefine = J$.X1(41, J$.W(33, 'redefine', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/redefine', 21, false)), redefine, 3));
            var DatePrototype = J$.X1(73, J$.W(65, 'DatePrototype', J$.G(57, J$.R(49, 'Date', Date, 2), 'prototype', 0), DatePrototype, 3));
            var INVALID_DATE = J$.X1(97, J$.W(89, 'INVALID_DATE', J$.T(81, 'Invalid Date', 21, false), INVALID_DATE, 3));
            var TO_STRING = J$.X1(121, J$.W(113, 'TO_STRING', J$.T(105, 'toString', 21, false), TO_STRING, 3));
            var nativeDateToString = J$.X1(161, J$.W(153, 'nativeDateToString', J$.G(145, J$.R(129, 'DatePrototype', DatePrototype, 1), J$.R(137, 'TO_STRING', TO_STRING, 1), 4), nativeDateToString, 3));
            var getTime = J$.X1(193, J$.W(185, 'getTime', J$.G(177, J$.R(169, 'DatePrototype', DatePrototype, 1), 'getTime', 0), getTime, 3));
            if (J$.X1(505, J$.C(16, J$.B(18, '!=', J$.B(10, '+', J$.F(217, J$.R(201, 'Date', Date, 2), 1)(J$.T(209, NaN, 22, false)), J$.T(225, '', 21, false), 0), J$.R(233, 'INVALID_DATE', INVALID_DATE, 1), 0)))) {
                J$.X1(417, J$.F(409, J$.R(241, 'redefine', redefine, 1), 0)(J$.R(249, 'DatePrototype', DatePrototype, 1), J$.R(257, 'TO_STRING', TO_STRING, 1), J$.T(401, function toString() {
                    jalangiLabel228:
                        while (true) {
                            try {
                                J$.Fe(369, arguments.callee, this, arguments);
                                arguments = J$.N(377, 'arguments', arguments, 4);
                                toString = J$.N(385, 'toString', toString, 0);
                                J$.N(393, 'value', value, 0);
                                var value = J$.X1(297, J$.W(289, 'value', J$.M(281, J$.R(265, 'getTime', getTime, 1), 'call', 0)(J$.R(273, 'this', this, 0)), value, 1));
                                return J$.X1(361, J$.Rt(353, J$.X1(481, J$.C(8, J$.B(26, '===', J$.R(305, 'value', value, 0), J$.R(313, 'value', value, 0), 0))) ? J$.M(337, J$.R(321, 'nativeDateToString', nativeDateToString, 1), 'call', 0)(J$.R(329, 'this', this, 0)) : J$.R(345, 'INVALID_DATE', INVALID_DATE, 1)));
                            } catch (J$e) {
                                J$.Ex(489, J$e);
                            } finally {
                                if (J$.Fr(497))
                                    continue jalangiLabel228;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 369)));
            }
        } catch (J$e) {
            J$.Ex(513, J$e);
        } finally {
            if (J$.Sr(521)) {
                J$.L();
                continue jalangiLabel229;
            } else {
                J$.L();
                break jalangiLabel229;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
