J$.iids = {"8":[9,7,9,37],"9":[1,13,1,20],"10":[7,10,7,27],"16":[8,7,8,22],"17":[1,21,1,41],"18":[8,7,8,22],"24":[7,10,7,27],"25":[1,13,1,42],"26":[9,7,9,23],"33":[1,13,1,42],"34":[9,7,9,37],"41":[1,13,1,42],"42":[10,8,10,18],"49":[3,19,3,36],"50":[10,7,10,18],"57":[3,19,3,36],"65":[3,19,3,36],"73":[6,15,6,19],"81":[6,20,6,29],"89":[6,30,6,37],"97":[6,20,6,38],"105":[6,15,6,39],"113":[6,15,6,39],"121":[6,15,6,39],"129":[7,10,7,15],"137":[7,19,7,27],"145":[7,30,7,34],"153":[8,7,8,12],"161":[8,16,8,22],"169":[8,25,8,30],"177":[9,14,9,23],"185":[9,27,9,37],"193":[9,40,9,45],"201":[9,46,9,55],"209":[9,40,9,56],"217":[10,9,10,18],"225":[7,10,10,18],"233":[7,3,10,19],"241":[5,16,11,2],"249":[5,16,11,2],"257":[5,16,11,2],"265":[5,16,11,2],"273":[5,16,11,2],"281":[5,16,11,2],"289":[5,16,11,2],"297":[5,16,11,2],"305":[13,17,13,25],"313":[14,10,14,16],"321":[14,17,14,23],"329":[14,10,14,24],"337":[14,33,14,44],"345":[14,46,14,49],"353":[14,10,14,50],"355":[14,10,14,32],"361":[14,10,14,64],"363":[14,10,14,62],"369":[14,10,14,64],"377":[14,3,14,65],"385":[13,38,15,2],"393":[13,38,15,2],"401":[13,38,15,2],"409":[13,38,15,2],"417":[13,17,15,2],"425":[13,17,15,2],"433":[13,17,15,2],"441":[17,12,17,20],"449":[17,28,17,30],"457":[17,12,17,30],"465":[17,12,17,30],"473":[17,12,17,30],"481":[18,14,18,22],"489":[18,32,18,35],"497":[18,14,18,35],"505":[18,14,18,35],"513":[18,14,18,35],"521":[19,16,19,24],"529":[19,36,19,39],"537":[19,16,19,39],"545":[19,16,19,39],"553":[19,16,19,39],"561":[21,1,21,7],"569":[21,18,21,26],"577":[21,1,21,26],"585":[21,1,21,27],"593":[1,1,22,1],"601":[1,1,22,1],"609":[1,1,22,1],"617":[1,1,22,1],"625":[1,1,22,1],"633":[1,1,22,1],"641":[1,1,22,1],"649":[1,1,22,1],"657":[9,7,10,18],"665":[8,7,10,18],"673":[7,10,10,18],"681":[5,16,11,2],"689":[5,16,11,2],"697":[13,38,15,2],"705":[13,38,15,2],"713":[1,1,22,1],"721":[1,1,22,1],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/is-forced.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/is-forced_jalangi_.js","code":"var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n"};
jalangiLabel773:
    while (true) {
        try {
            J$.Se(593, '/home/james/nodejs/HiPar/node_modules/core-js/internals/is-forced_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/is-forced.js');
            J$.N(601, 'fails', fails, 0);
            J$.N(609, 'replacement', replacement, 0);
            J$.N(617, 'isForced', isForced, 0);
            J$.N(625, 'normalize', normalize, 0);
            J$.N(633, 'data', data, 0);
            J$.N(641, 'NATIVE', NATIVE, 0);
            J$.N(649, 'POLYFILL', POLYFILL, 0);
            var fails = J$.X1(41, J$.W(33, 'fails', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/fails', 21, false)), fails, 3));
            var replacement = J$.X1(65, J$.W(57, 'replacement', J$.T(49, /#|\.prototype\./, 14, false), replacement, 3));
            var isForced = J$.X1(297, J$.W(289, 'isForced', J$.T(281, function (feature, detection) {
                jalangiLabel771:
                    while (true) {
                        try {
                            J$.Fe(241, arguments.callee, this, arguments);
                            arguments = J$.N(249, 'arguments', arguments, 4);
                            feature = J$.N(257, 'feature', feature, 4);
                            detection = J$.N(265, 'detection', detection, 4);
                            J$.N(273, 'value', value, 0);
                            var value = J$.X1(121, J$.W(113, 'value', J$.G(105, J$.R(73, 'data', data, 1), J$.F(97, J$.R(81, 'normalize', normalize, 1), 0)(J$.R(89, 'feature', feature, 0)), 4), value, 1));
                            return J$.X1(233, J$.Rt(225, J$.X1(673, J$.C(24, J$.B(10, '==', J$.R(129, 'value', value, 0), J$.R(137, 'POLYFILL', POLYFILL, 1), 0))) ? J$.T(145, true, 23, false) : J$.X1(665, J$.C(16, J$.B(18, '==', J$.R(153, 'value', value, 0), J$.R(161, 'NATIVE', NATIVE, 1), 0))) ? J$.T(169, false, 23, false) : J$.X1(657, J$.C(8, J$.B(34, '==', J$.U(26, 'typeof', J$.R(177, 'detection', detection, 0)), J$.T(185, 'function', 21, false), 0))) ? J$.F(209, J$.R(193, 'fails', fails, 1), 0)(J$.R(201, 'detection', detection, 0)) : J$.U(50, '!', J$.U(42, '!', J$.R(217, 'detection', detection, 0)))));
                        } catch (J$e) {
                            J$.Ex(681, J$e);
                        } finally {
                            if (J$.Fr(689))
                                continue jalangiLabel771;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 241), isForced, 3));
            var normalize = J$.X1(433, J$.W(425, 'normalize', J$.P(417, J$.R(305, 'isForced', isForced, 1), 'normalize', J$.T(409, function (string) {
                jalangiLabel772:
                    while (true) {
                        try {
                            J$.Fe(385, arguments.callee, this, arguments);
                            arguments = J$.N(393, 'arguments', arguments, 4);
                            string = J$.N(401, 'string', string, 4);
                            return J$.X1(377, J$.Rt(369, J$.M(361, J$.M(353, J$.F(329, J$.R(313, 'String', String, 2), 0)(J$.R(321, 'string', string, 0)), 'replace', 0)(J$.R(337, 'replacement', replacement, 1), J$.T(345, '.', 21, false)), 'toLowerCase', 0)()));
                        } catch (J$e) {
                            J$.Ex(697, J$e);
                        } finally {
                            if (J$.Fr(705))
                                continue jalangiLabel772;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 385), 0), normalize, 3));
            var data = J$.X1(473, J$.W(465, 'data', J$.P(457, J$.R(441, 'isForced', isForced, 1), 'data', J$.T(449, {}, 11, false), 0), data, 3));
            var NATIVE = J$.X1(513, J$.W(505, 'NATIVE', J$.P(497, J$.R(481, 'isForced', isForced, 1), 'NATIVE', J$.T(489, 'N', 21, false), 0), NATIVE, 3));
            var POLYFILL = J$.X1(553, J$.W(545, 'POLYFILL', J$.P(537, J$.R(521, 'isForced', isForced, 1), 'POLYFILL', J$.T(529, 'P', 21, false), 0), POLYFILL, 3));
            J$.X1(585, J$.P(577, J$.R(561, 'module', module, 2), 'exports', J$.R(569, 'isForced', isForced, 1), 0));
        } catch (J$e) {
            J$.Ex(713, J$e);
        } finally {
            if (J$.Sr(721)) {
                J$.L();
                continue jalangiLabel773;
            } else {
                J$.L();
                break jalangiLabel773;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
