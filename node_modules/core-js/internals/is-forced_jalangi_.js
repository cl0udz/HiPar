J$.iids = {"8":[9,3,9,33],"9":[1,13,1,20],"10":[7,10,7,27],"16":[8,3,8,18],"17":[1,21,1,41],"18":[8,3,8,18],"24":[7,10,7,27],"25":[1,13,1,42],"26":[9,3,9,19],"33":[1,13,1,42],"34":[9,3,9,33],"41":[1,13,1,42],"42":[10,4,10,14],"49":[3,19,3,36],"50":[10,3,10,14],"57":[3,19,3,36],"65":[3,19,3,36],"73":[6,15,6,19],"81":[6,20,6,29],"89":[6,30,6,37],"97":[6,20,6,38],"105":[6,15,6,39],"113":[6,15,6,39],"121":[6,15,6,39],"129":[7,10,7,15],"137":[7,19,7,27],"145":[7,30,7,34],"153":[8,3,8,8],"161":[8,12,8,18],"169":[8,21,8,26],"177":[9,10,9,19],"185":[9,23,9,33],"193":[9,36,9,41],"201":[9,42,9,51],"209":[9,36,9,52],"217":[10,5,10,14],"225":[7,10,10,14],"233":[7,3,10,15],"241":[5,16,11,2],"249":[5,16,11,2],"257":[5,16,11,2],"265":[5,16,11,2],"273":[5,16,11,2],"281":[5,16,11,2],"289":[5,16,11,2],"297":[5,16,11,2],"305":[5,16,11,2],"313":[13,17,13,25],"321":[14,10,14,16],"329":[14,17,14,23],"337":[14,10,14,24],"345":[14,33,14,44],"353":[14,46,14,49],"361":[14,10,14,50],"363":[14,10,14,32],"369":[14,10,14,64],"371":[14,10,14,62],"377":[14,10,14,64],"385":[14,3,14,65],"393":[13,38,15,2],"401":[13,38,15,2],"409":[13,38,15,2],"417":[13,38,15,2],"425":[13,17,15,2],"433":[13,17,15,2],"441":[13,17,15,2],"449":[17,12,17,20],"457":[17,28,17,30],"465":[17,12,17,30],"473":[17,12,17,30],"481":[17,12,17,30],"489":[18,14,18,22],"497":[18,32,18,35],"505":[18,14,18,35],"513":[18,14,18,35],"521":[18,14,18,35],"529":[19,16,19,24],"537":[19,36,19,39],"545":[19,16,19,39],"553":[19,16,19,39],"561":[19,16,19,39],"569":[21,1,21,7],"577":[21,18,21,26],"585":[21,1,21,26],"593":[21,1,21,27],"601":[1,1,21,27],"609":[1,1,21,27],"617":[1,1,21,27],"625":[1,1,21,27],"633":[1,1,21,27],"641":[1,1,21,27],"649":[1,1,21,27],"657":[1,1,21,27],"665":[9,3,10,14],"673":[8,3,10,14],"681":[7,10,10,14],"689":[5,16,11,2],"697":[5,16,11,2],"705":[13,38,15,2],"713":[13,38,15,2],"721":[1,1,21,27],"729":[1,1,21,27],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/is-forced.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/is-forced_jalangi_.js","code":"var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n"};
jalangiLabel358:
    while (true) {
        try {
            J$.Se(601, '/home/james/nodejs/HiPar/node_modules/core-js/internals/is-forced_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/is-forced.js');
            J$.N(609, 'fails', fails, 0);
            J$.N(617, 'replacement', replacement, 0);
            J$.N(625, 'isForced', isForced, 0);
            J$.N(633, 'normalize', normalize, 0);
            J$.N(641, 'data', data, 0);
            J$.N(649, 'NATIVE', NATIVE, 0);
            J$.N(657, 'POLYFILL', POLYFILL, 0);
            var fails = J$.X1(41, J$.W(33, 'fails', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/fails', 21, false)), fails, 3));
            var replacement = J$.X1(65, J$.W(57, 'replacement', J$.T(49, /#|\.prototype\./, 14, false), replacement, 3));
            var isForced = J$.X1(305, J$.W(297, 'isForced', J$.T(289, function isForced(feature, detection) {
                jalangiLabel356:
                    while (true) {
                        try {
                            J$.Fe(241, arguments.callee, this, arguments);
                            arguments = J$.N(249, 'arguments', arguments, 4);
                            isForced = J$.N(257, 'isForced', isForced, 0);
                            feature = J$.N(265, 'feature', feature, 4);
                            detection = J$.N(273, 'detection', detection, 4);
                            J$.N(281, 'value', value, 0);
                            var value = J$.X1(121, J$.W(113, 'value', J$.G(105, J$.R(73, 'data', data, 1), J$.F(97, J$.R(81, 'normalize', normalize, 1), 0)(J$.R(89, 'feature', feature, 0)), 4), value, 1));
                            return J$.X1(233, J$.Rt(225, J$.X1(681, J$.C(24, J$.B(10, '==', J$.R(129, 'value', value, 0), J$.R(137, 'POLYFILL', POLYFILL, 1), 0))) ? J$.T(145, true, 23, false) : J$.X1(673, J$.C(16, J$.B(18, '==', J$.R(153, 'value', value, 0), J$.R(161, 'NATIVE', NATIVE, 1), 0))) ? J$.T(169, false, 23, false) : J$.X1(665, J$.C(8, J$.B(34, '==', J$.U(26, 'typeof', J$.R(177, 'detection', detection, 0)), J$.T(185, 'function', 21, false), 0))) ? J$.F(209, J$.R(193, 'fails', fails, 1), 0)(J$.R(201, 'detection', detection, 0)) : J$.U(50, '!', J$.U(42, '!', J$.R(217, 'detection', detection, 0)))));
                        } catch (J$e) {
                            J$.Ex(689, J$e);
                        } finally {
                            if (J$.Fr(697))
                                continue jalangiLabel356;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 241), isForced, 3));
            var normalize = J$.X1(441, J$.W(433, 'normalize', J$.P(425, J$.R(313, 'isForced', isForced, 1), 'normalize', J$.T(417, function (string) {
                jalangiLabel357:
                    while (true) {
                        try {
                            J$.Fe(393, arguments.callee, this, arguments);
                            arguments = J$.N(401, 'arguments', arguments, 4);
                            string = J$.N(409, 'string', string, 4);
                            return J$.X1(385, J$.Rt(377, J$.M(369, J$.M(361, J$.F(337, J$.R(321, 'String', String, 2), 0)(J$.R(329, 'string', string, 0)), 'replace', 0)(J$.R(345, 'replacement', replacement, 1), J$.T(353, '.', 21, false)), 'toLowerCase', 0)()));
                        } catch (J$e) {
                            J$.Ex(705, J$e);
                        } finally {
                            if (J$.Fr(713))
                                continue jalangiLabel357;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 393), 0), normalize, 3));
            var data = J$.X1(481, J$.W(473, 'data', J$.P(465, J$.R(449, 'isForced', isForced, 1), 'data', J$.T(457, {}, 11, false), 0), data, 3));
            var NATIVE = J$.X1(521, J$.W(513, 'NATIVE', J$.P(505, J$.R(489, 'isForced', isForced, 1), 'NATIVE', J$.T(497, 'N', 21, false), 0), NATIVE, 3));
            var POLYFILL = J$.X1(561, J$.W(553, 'POLYFILL', J$.P(545, J$.R(529, 'isForced', isForced, 1), 'POLYFILL', J$.T(537, 'P', 21, false), 0), POLYFILL, 3));
            J$.X1(593, J$.P(585, J$.R(569, 'module', module, 2), 'exports', J$.R(577, 'isForced', isForced, 1), 0));
        } catch (J$e) {
            J$.Ex(721, J$e);
        } finally {
            if (J$.Sr(729)) {
                J$.L();
                continue jalangiLabel358;
            } else {
                J$.L();
                break jalangiLabel358;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
