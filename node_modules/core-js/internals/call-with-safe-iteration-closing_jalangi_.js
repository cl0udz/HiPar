J$.iids = {"8":[6,12,6,19],"9":[1,16,1,23],"10":[10,9,10,35],"16":[10,9,10,35],"17":[1,24,1,48],"25":[1,16,1,49],"33":[1,16,1,49],"41":[1,16,1,49],"49":[4,1,4,7],"57":[6,12,6,19],"65":[6,22,6,24],"73":[6,25,6,33],"81":[6,34,6,39],"89":[6,25,6,40],"97":[6,41,6,42],"105":[6,25,6,43],"113":[6,45,6,50],"121":[6,51,6,52],"129":[6,45,6,53],"137":[6,22,6,54],"145":[6,57,6,59],"153":[6,60,6,65],"161":[6,57,6,66],"169":[6,12,6,66],"177":[6,5,6,67],"185":[9,24,9,32],"193":[9,33,9,41],"201":[9,24,9,42],"209":[9,24,9,42],"217":[9,24,9,42],"225":[10,9,10,21],"233":[10,26,10,35],"241":[10,37,10,45],"249":[10,46,10,58],"257":[10,64,10,72],"265":[10,46,10,73],"267":[10,46,10,63],"273":[10,37,10,74],"281":[10,37,10,75],"289":[11,11,11,16],"297":[11,11,11,16],"305":[11,5,11,17],"313":[8,5,12,4],"321":[4,18,13,2],"329":[4,18,13,2],"337":[4,18,13,2],"345":[4,18,13,2],"353":[4,18,13,2],"361":[4,18,13,2],"369":[4,18,13,2],"377":[4,18,13,2],"385":[4,1,13,2],"393":[4,1,13,3],"401":[1,1,14,1],"409":[1,1,14,1],"417":[6,12,6,66],"425":[10,5,10,75],"433":[4,18,13,2],"441":[4,18,13,2],"449":[1,1,14,1],"457":[1,1,14,1],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/call-with-safe-iteration-closing.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/call-with-safe-iteration-closing_jalangi_.js","code":"var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n"};
jalangiLabel929:
    while (true) {
        try {
            J$.Se(401, '/home/james/nodejs/HiPar/node_modules/core-js/internals/call-with-safe-iteration-closing_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/call-with-safe-iteration-closing.js');
            J$.N(409, 'anObject', anObject, 0);
            var anObject = J$.X1(41, J$.W(33, 'anObject', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/an-object', 21, false)), anObject, 3));
            J$.X1(393, J$.P(385, J$.R(49, 'module', module, 2), 'exports', J$.T(377, function (iterator, fn, value, ENTRIES) {
                jalangiLabel928:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            iterator = J$.N(337, 'iterator', iterator, 4);
                            fn = J$.N(345, 'fn', fn, 4);
                            value = J$.N(353, 'value', value, 4);
                            ENTRIES = J$.N(361, 'ENTRIES', ENTRIES, 4);
                            J$.N(369, 'returnMethod', returnMethod, 0);
                            try {
                                return J$.X1(177, J$.Rt(169, J$.X1(417, J$.C(8, J$.R(57, 'ENTRIES', ENTRIES, 0))) ? J$.F(137, J$.R(65, 'fn', fn, 0), 0)(J$.G(105, J$.F(89, J$.R(73, 'anObject', anObject, 1), 0)(J$.R(81, 'value', value, 0)), J$.T(97, 0, 22, false), 4), J$.G(129, J$.R(113, 'value', value, 0), J$.T(121, 1, 22, false), 4)) : J$.F(161, J$.R(145, 'fn', fn, 0), 0)(J$.R(153, 'value', value, 0))));
                            } catch (error) {
                                error = J$.N(313, 'error', error, 1);
                                var returnMethod = J$.X1(217, J$.W(209, 'returnMethod', J$.G(201, J$.R(185, 'iterator', iterator, 0), J$.T(193, 'return', 21, false), 4), returnMethod, 1));
                                if (J$.X1(425, J$.C(16, J$.B(10, '!==', J$.R(225, 'returnMethod', returnMethod, 0), J$.T(233, undefined, 24, false), 0))))
                                    J$.X1(281, J$.F(273, J$.R(241, 'anObject', anObject, 1), 0)(J$.M(265, J$.R(249, 'returnMethod', returnMethod, 0), 'call', 0)(J$.R(257, 'iterator', iterator, 0))));
                                throw J$.X1(305, J$.Th(297, J$.R(289, 'error', error, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(433, J$e);
                        } finally {
                            if (J$.Fr(441))
                                continue jalangiLabel928;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 321), 0));
        } catch (J$e) {
            J$.Ex(449, J$e);
        } finally {
            if (J$.Sr(457)) {
                J$.L();
                continue jalangiLabel929;
            } else {
                J$.L();
                break jalangiLabel929;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
