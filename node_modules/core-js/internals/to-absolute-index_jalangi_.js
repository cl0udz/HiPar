J$.iids = {"8":[11,10,11,21],"9":[1,17,1,24],"10":[11,10,11,21],"17":[1,25,1,50],"18":[11,28,11,44],"25":[1,17,1,51],"33":[1,17,1,51],"41":[1,17,1,51],"49":[3,11,3,15],"57":[3,11,3,19],"65":[3,11,3,19],"73":[3,11,3,19],"81":[4,11,4,15],"89":[4,11,4,19],"97":[4,11,4,19],"105":[4,11,4,19],"113":[9,1,9,7],"121":[10,17,10,26],"129":[10,27,10,32],"137":[10,17,10,33],"145":[10,17,10,33],"153":[10,17,10,33],"161":[11,10,11,17],"169":[11,20,11,21],"177":[11,24,11,27],"185":[11,28,11,35],"193":[11,38,11,44],"201":[11,46,11,47],"209":[11,24,11,48],"217":[11,51,11,54],"225":[11,55,11,62],"233":[11,64,11,70],"241":[11,51,11,71],"249":[11,10,11,71],"257":[11,3,11,72],"265":[9,18,12,2],"273":[9,18,12,2],"281":[9,18,12,2],"289":[9,18,12,2],"297":[9,18,12,2],"305":[9,18,12,2],"313":[9,1,12,2],"321":[9,1,12,3],"329":[1,1,12,3],"337":[1,1,12,3],"345":[1,1,12,3],"353":[1,1,12,3],"361":[11,10,11,71],"369":[9,18,12,2],"377":[9,18,12,2],"385":[1,1,12,3],"393":[1,1,12,3],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/to-absolute-index.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/to-absolute-index_jalangi_.js","code":"var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n"};
jalangiLabel353:
    while (true) {
        try {
            J$.Se(329, '/home/james/nodejs/HiPar/node_modules/core-js/internals/to-absolute-index_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/to-absolute-index.js');
            J$.N(337, 'toInteger', toInteger, 0);
            J$.N(345, 'max', max, 0);
            J$.N(353, 'min', min, 0);
            var toInteger = J$.X1(41, J$.W(33, 'toInteger', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/to-integer', 21, false)), toInteger, 3));
            var max = J$.X1(73, J$.W(65, 'max', J$.G(57, J$.R(49, 'Math', Math, 2), 'max', 0), max, 3));
            var min = J$.X1(105, J$.W(97, 'min', J$.G(89, J$.R(81, 'Math', Math, 2), 'min', 0), min, 3));
            J$.X1(321, J$.P(313, J$.R(113, 'module', module, 2), 'exports', J$.T(305, function (index, length) {
                jalangiLabel352:
                    while (true) {
                        try {
                            J$.Fe(265, arguments.callee, this, arguments);
                            arguments = J$.N(273, 'arguments', arguments, 4);
                            index = J$.N(281, 'index', index, 4);
                            length = J$.N(289, 'length', length, 4);
                            J$.N(297, 'integer', integer, 0);
                            var integer = J$.X1(153, J$.W(145, 'integer', J$.F(137, J$.R(121, 'toInteger', toInteger, 1), 0)(J$.R(129, 'index', index, 0)), integer, 1));
                            return J$.X1(257, J$.Rt(249, J$.X1(361, J$.C(8, J$.B(10, '<', J$.R(161, 'integer', integer, 0), J$.T(169, 0, 22, false), 0))) ? J$.F(209, J$.R(177, 'max', max, 1), 0)(J$.B(18, '+', J$.R(185, 'integer', integer, 0), J$.R(193, 'length', length, 0), 0), J$.T(201, 0, 22, false)) : J$.F(241, J$.R(217, 'min', min, 1), 0)(J$.R(225, 'integer', integer, 0), J$.R(233, 'length', length, 0))));
                        } catch (J$e) {
                            J$.Ex(369, J$e);
                        } finally {
                            if (J$.Fr(377))
                                continue jalangiLabel352;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 265), 0));
        } catch (J$e) {
            J$.Ex(385, J$e);
        } finally {
            if (J$.Sr(393)) {
                J$.L();
                continue jalangiLabel353;
            } else {
                J$.L();
                break jalangiLabel353;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
