{"8":[9,3,11,55],"9":[1,16,1,23],"10":[11,3,11,41],"16":[9,3,12,24],"17":[1,24,1,48],"18":[11,3,11,55],"24":[9,3,13,53],"25":[1,16,1,49],"26":[12,3,12,24],"32":[9,3,14,43],"33":[1,16,1,49],"34":[14,3,14,43],"40":[9,3,14,43],"41":[1,16,1,49],"49":[2,22,2,29],"57":[2,30,2,68],"65":[2,22,2,69],"73":[2,22,2,69],"81":[2,22,2,69],"89":[5,1,5,7],"97":[9,3,9,17],"105":[11,23,11,28],"113":[11,23,11,40],"121":[11,23,11,40],"129":[11,45,11,55],"137":[12,3,12,12],"145":[12,17,12,24],"153":[13,3,13,11],"161":[13,33,13,42],"169":[13,33,13,52],"177":[13,33,13,52],"185":[13,3,13,53],"193":[14,3,14,21],"201":[14,26,14,33],"209":[14,26,14,43],"217":[15,3,15,17],"225":[15,18,15,23],"233":[15,25,15,43],"241":[15,3,15,44],"249":[15,3,15,45],"257":[16,10,16,15],"265":[16,10,16,15],"273":[16,3,16,16],"281":[5,18,17,2],"289":[5,18,17,2],"297":[5,18,17,2],"305":[5,18,17,2],"313":[5,18,17,2],"321":[5,18,17,2],"329":[5,18,17,2],"337":[5,18,17,2],"345":[5,1,17,2],"353":[5,1,17,3],"361":[1,1,17,3],"369":[1,1,17,3],"377":[1,1,17,3],"385":[7,3,15,45],"393":[5,18,17,2],"401":[5,18,17,2],"409":[1,1,17,3],"417":[1,1,17,3],"nBranches":10,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/inherit-if-required.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/inherit-if-required_jalangi_.js","code":"var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n"}