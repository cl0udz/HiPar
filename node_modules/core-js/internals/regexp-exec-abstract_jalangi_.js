J$.iids = {"8":[10,9,10,35],"9":[1,15,1,22],"10":[8,7,8,18],"16":[8,7,8,33],"17":[1,23,1,38],"18":[8,7,8,33],"24":[16,7,16,30],"25":[1,15,1,39],"26":[10,9,10,22],"33":[1,15,1,39],"34":[10,9,10,35],"41":[1,15,1,39],"42":[16,7,16,30],"49":[2,18,2,25],"57":[2,26,2,41],"65":[2,18,2,42],"73":[2,18,2,42],"81":[2,18,2,42],"89":[6,1,6,7],"97":[7,14,7,15],"105":[7,14,7,20],"113":[7,14,7,20],"121":[7,14,7,20],"129":[8,14,8,18],"137":[8,23,8,33],"145":[9,18,9,22],"153":[9,28,9,29],"161":[9,31,9,32],"169":[9,18,9,33],"171":[9,18,9,27],"177":[9,18,9,33],"185":[9,18,9,33],"193":[10,16,10,22],"201":[10,27,10,35],"209":[11,13,11,22],"217":[11,23,11,91],"225":[11,13,11,92],"233":[11,13,11,92],"241":[11,7,11,93],"249":[13,12,13,18],"257":[13,12,13,18],"265":[13,5,13,19],"273":[16,7,16,14],"281":[16,15,16,16],"289":[16,7,16,17],"297":[16,22,16,30],"305":[17,11,17,20],"313":[17,21,17,66],"321":[17,11,17,67],"329":[17,11,17,67],"337":[17,5,17,68],"345":[20,10,20,20],"353":[20,26,20,27],"361":[20,29,20,30],"369":[20,10,20,31],"371":[20,10,20,25],"377":[20,10,20,31],"385":[20,3,20,32],"393":[6,18,21,2],"401":[6,18,21,2],"409":[6,18,21,2],"417":[6,18,21,2],"425":[6,18,21,2],"433":[6,18,21,2],"441":[6,18,21,2],"449":[6,1,21,2],"457":[6,1,21,3],"465":[1,1,23,1],"473":[1,1,23,1],"481":[1,1,23,1],"489":[10,5,12,6],"497":[8,3,14,4],"505":[16,3,18,4],"513":[6,18,21,2],"521":[6,18,21,2],"529":[1,1,23,1],"537":[1,1,23,1],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec-abstract.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec-abstract_jalangi_.js","code":"var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n"};
jalangiLabel1011:
    while (true) {
        try {
            J$.Se(465, '/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec-abstract_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec-abstract.js');
            J$.N(473, 'classof', classof, 0);
            J$.N(481, 'regexpExec', regexpExec, 0);
            var classof = J$.X1(41, J$.W(33, 'classof', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './classof-raw', 21, false)), classof, 3));
            var regexpExec = J$.X1(81, J$.W(73, 'regexpExec', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, './regexp-exec', 21, false)), regexpExec, 3));
            J$.X1(457, J$.P(449, J$.R(89, 'module', module, 2), 'exports', J$.T(441, function (R, S) {
                jalangiLabel1010:
                    while (true) {
                        try {
                            J$.Fe(393, arguments.callee, this, arguments);
                            arguments = J$.N(401, 'arguments', arguments, 4);
                            R = J$.N(409, 'R', R, 4);
                            S = J$.N(417, 'S', S, 4);
                            J$.N(425, 'exec', exec, 0);
                            J$.N(433, 'result', result, 0);
                            var exec = J$.X1(121, J$.W(113, 'exec', J$.G(105, J$.R(97, 'R', R, 0), 'exec', 0), exec, 1));
                            if (J$.X1(497, J$.C(16, J$.B(18, '===', J$.U(10, 'typeof', J$.R(129, 'exec', exec, 0)), J$.T(137, 'function', 21, false), 0)))) {
                                var result = J$.X1(185, J$.W(177, 'result', J$.M(169, J$.R(145, 'exec', exec, 0), 'call', 0)(J$.R(153, 'R', R, 0), J$.R(161, 'S', S, 0)), result, 1));
                                if (J$.X1(489, J$.C(8, J$.B(34, '!==', J$.U(26, 'typeof', J$.R(193, 'result', result, 0)), J$.T(201, 'object', 21, false), 0)))) {
                                    throw J$.X1(241, J$.Th(233, J$.F(225, J$.R(209, 'TypeError', TypeError, 2), 0)(J$.T(217, 'RegExp exec method returned something other than an Object or null', 21, false))));
                                }
                                return J$.X1(265, J$.Rt(257, J$.R(249, 'result', result, 0)));
                            }
                            if (J$.X1(505, J$.C(24, J$.B(42, '!==', J$.F(289, J$.R(273, 'classof', classof, 1), 0)(J$.R(281, 'R', R, 0)), J$.T(297, 'RegExp', 21, false), 0)))) {
                                throw J$.X1(337, J$.Th(329, J$.F(321, J$.R(305, 'TypeError', TypeError, 2), 0)(J$.T(313, 'RegExp#exec called on incompatible receiver', 21, false))));
                            }
                            return J$.X1(385, J$.Rt(377, J$.M(369, J$.R(345, 'regexpExec', regexpExec, 1), 'call', 0)(J$.R(353, 'R', R, 0), J$.R(361, 'S', S, 0))));
                        } catch (J$e) {
                            J$.Ex(513, J$e);
                        } finally {
                            if (J$.Fr(521))
                                continue jalangiLabel1010;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 393), 0));
        } catch (J$e) {
            J$.Ex(529, J$e);
        } finally {
            if (J$.Sr(537)) {
                J$.L();
                continue jalangiLabel1011;
            } else {
                J$.L();
                break jalangiLabel1011;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
