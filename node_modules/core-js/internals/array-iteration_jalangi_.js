J$.iids = {"8":[16,18,16,44],"9":[1,12,1,19],"10":[11,16,11,25],"16":[23,18,23,54],"17":[1,20,1,47],"18":[12,19,12,28],"24":[24,51,24,60],"25":[1,12,1,48],"26":[13,17,13,26],"32":[24,18,24,24],"33":[1,12,1,48],"34":[14,18,14,27],"40":[26,40,26,65],"41":[1,12,1,48],"42":[15,23,15,32],"48":[31,34,31,38],"49":[2,21,2,28],"50":[16,18,16,27],"56":[32,16,32,17],"57":[2,29,2,58],"58":[26,11,26,25],"64":[33,16,33,17],"65":[2,21,2,59],"66":[26,27,26,34],"72":[34,16,34,17],"73":[2,21,2,59],"80":[35,16,35,17],"81":[2,21,2,59],"82":[26,27,26,34],"88":[36,20,36,28],"89":[3,16,3,23],"90":[26,52,26,65],"96":[31,18,31,24],"97":[3,24,3,48],"98":[39,28,39,30],"104":[30,13,30,19],"105":[3,16,3,49],"112":[29,11,29,15],"113":[3,16,3,49],"120":[26,40,26,65],"121":[3,16,3,49],"128":[26,11,26,25],"129":[4,16,4,23],"136":[39,33,39,52],"137":[4,24,4,48],"144":[39,33,39,52],"145":[4,16,4,49],"152":[39,12,39,25],"153":[4,16,4,49],"161":[4,16,4,49],"169":[5,26,5,33],"177":[5,34,5,69],"185":[5,26,5,70],"193":[5,26,5,70],"201":[5,26,5,70],"209":[7,12,7,14],"217":[7,12,7,19],"225":[7,12,7,19],"233":[7,12,7,19],"241":[11,16,11,20],"249":[11,24,11,25],"257":[11,16,11,25],"265":[11,16,11,25],"273":[12,19,12,23],"281":[12,27,12,28],"289":[12,19,12,28],"297":[12,19,12,28],"305":[13,17,13,21],"313":[13,25,13,26],"321":[13,17,13,26],"329":[13,17,13,26],"337":[14,18,14,22],"345":[14,26,14,27],"353":[14,18,14,27],"361":[14,18,14,27],"369":[15,23,15,27],"377":[15,31,15,32],"385":[15,23,15,32],"393":[15,23,15,32],"401":[16,18,16,22],"409":[16,26,16,27],"417":[16,31,16,44],"425":[16,18,16,44],"433":[16,18,16,44],"441":[18,13,18,21],"449":[18,22,18,27],"457":[18,13,18,28],"465":[18,13,18,28],"473":[18,13,18,28],"481":[19,16,19,29],"489":[19,30,19,31],"497":[19,16,19,32],"505":[19,16,19,32],"513":[19,16,19,32],"521":[20,25,20,29],"529":[20,30,20,40],"537":[20,42,20,46],"545":[20,48,20,49],"553":[20,25,20,50],"561":[20,25,20,50],"569":[20,25,20,50],"577":[21,18,21,26],"585":[21,27,21,31],"593":[21,27,21,38],"601":[21,18,21,39],"609":[21,18,21,39],"617":[21,18,21,39],"625":[22,17,22,18],"633":[22,17,22,18],"641":[22,17,22,18],"649":[23,18,23,32],"657":[23,36,23,54],"665":[23,18,23,54],"673":[23,18,23,54],"681":[24,18,24,24],"689":[24,27,24,33],"697":[24,34,24,39],"705":[24,41,24,47],"713":[24,27,24,48],"721":[24,51,24,60],"729":[24,63,24,69],"737":[24,70,24,75],"745":[24,77,24,78],"753":[24,63,24,79],"761":[24,82,24,91],"769":[24,18,24,91],"777":[24,18,24,91],"785":[26,11,26,17],"793":[26,20,26,25],"809":[26,27,26,32],"817":[26,27,26,34],"833":[26,40,26,48],"841":[26,52,26,57],"849":[26,61,26,65],"857":[27,15,27,19],"865":[27,20,27,25],"873":[27,15,27,26],"881":[27,15,27,26],"889":[27,7,27,27],"897":[28,16,28,29],"905":[28,30,28,35],"913":[28,37,28,42],"921":[28,44,28,45],"929":[28,16,28,46],"937":[28,16,28,46],"945":[28,7,28,47],"953":[29,11,29,15],"961":[30,13,30,19],"969":[30,21,30,27],"977":[30,28,30,33],"985":[30,37,30,43],"993":[30,21,30,43],"1001":[30,21,30,44],"1009":[31,18,31,24],"1017":[31,34,31,38],"1025":[32,26,32,30],"1033":[32,26,32,30],"1041":[32,19,32,31],"1049":[32,16,32,17],"1057":[33,26,33,31],"1065":[33,26,33,31],"1073":[33,19,33,32],"1081":[33,16,33,17],"1089":[34,26,34,31],"1097":[34,26,34,31],"1105":[34,19,34,32],"1113":[34,16,34,17],"1121":[35,19,35,23],"1129":[35,29,35,35],"1137":[35,37,35,42],"1145":[35,19,35,43],"1147":[35,19,35,28],"1153":[35,19,35,44],"1161":[35,16,35,17],"1169":[36,20,36,28],"1177":[36,37,36,42],"1185":[36,37,36,42],"1193":[36,30,36,43],"1201":[39,12,39,25],"1209":[39,29,39,30],"1217":[39,33,39,40],"1225":[39,44,39,52],"1233":[39,55,39,63],"1241":[39,66,39,72],"1249":[39,12,39,72],"1257":[39,5,39,73],"1265":[17,10,40,4],"1273":[17,10,40,4],"1281":[17,10,40,4],"1289":[17,10,40,4],"1297":[17,10,40,4],"1305":[17,10,40,4],"1313":[17,10,40,4],"1321":[17,10,40,4],"1329":[17,10,40,4],"1337":[17,10,40,4],"1345":[17,10,40,4],"1353":[17,10,40,4],"1361":[17,10,40,4],"1369":[17,10,40,4],"1377":[17,10,40,4],"1385":[17,10,40,4],"1393":[17,10,40,4],"1401":[17,3,40,5],"1409":[10,20,41,2],"1417":[10,20,41,2],"1425":[10,20,41,2],"1433":[10,20,41,2],"1441":[10,20,41,2],"1449":[10,20,41,2],"1457":[10,20,41,2],"1465":[10,20,41,2],"1473":[10,20,41,2],"1481":[10,20,41,2],"1489":[10,20,41,2],"1497":[10,20,41,2],"1505":[43,1,43,7],"1513":[46,12,46,24],"1521":[46,25,46,26],"1529":[46,12,46,27],"1537":[49,8,49,20],"1545":[49,21,49,22],"1553":[49,8,49,23],"1561":[52,11,52,23],"1569":[52,24,52,25],"1577":[52,11,52,26],"1585":[55,9,55,21],"1593":[55,22,55,23],"1601":[55,9,55,24],"1609":[58,10,58,22],"1617":[58,23,58,24],"1625":[58,10,58,25],"1633":[61,9,61,21],"1641":[61,22,61,23],"1649":[61,9,61,24],"1657":[64,14,64,26],"1665":[64,27,64,28],"1673":[64,14,64,29],"1681":[43,18,65,2],"1689":[43,1,65,2],"1697":[43,1,65,3],"1705":[1,1,66,1],"1713":[1,1,66,1],"1721":[1,1,66,1],"1729":[1,1,66,1],"1737":[1,1,66,1],"1745":[1,1,66,1],"1753":[1,1,66,1],"1761":[1,1,66,1],"1769":[24,51,24,91],"1777":[24,18,24,91],"1785":[31,34,31,38],"1793":[32,16,32,17],"1801":[33,16,33,17],"1809":[34,16,34,17],"1817":[35,16,35,17],"1825":[36,16,36,43],"1833":[31,14,36,43],"1841":[30,9,36,43],"1849":[29,7,37,8],"1857":[26,36,38,6],"1865":[26,5,38,6],"1873":[26,5,38,6],"1881":[39,33,39,72],"1889":[39,12,39,72],"1897":[17,10,40,4],"1905":[17,10,40,4],"1913":[10,20,41,2],"1921":[10,20,41,2],"1929":[1,1,66,1],"1937":[1,1,66,1],"nBranches":38,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/array-iteration.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/array-iteration_jalangi_.js","code":"var bind = require('../internals/bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n"};
jalangiLabel801:
    while (true) {
        try {
            J$.Se(1705, '/home/james/nodejs/HiPar/node_modules/core-js/internals/array-iteration_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/array-iteration.js');
            J$.N(1713, 'bind', bind, 0);
            J$.N(1721, 'IndexedObject', IndexedObject, 0);
            J$.N(1729, 'toObject', toObject, 0);
            J$.N(1737, 'toLength', toLength, 0);
            J$.N(1745, 'arraySpeciesCreate', arraySpeciesCreate, 0);
            J$.N(1753, 'push', push, 0);
            J$.N(1761, 'createMethod', createMethod, 0);
            var bind = J$.X1(41, J$.W(33, 'bind', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/bind-context', 21, false)), bind, 3));
            var IndexedObject = J$.X1(81, J$.W(73, 'IndexedObject', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/indexed-object', 21, false)), IndexedObject, 3));
            var toObject = J$.X1(121, J$.W(113, 'toObject', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, '../internals/to-object', 21, false)), toObject, 3));
            var toLength = J$.X1(161, J$.W(153, 'toLength', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../internals/to-length', 21, false)), toLength, 3));
            var arraySpeciesCreate = J$.X1(201, J$.W(193, 'arraySpeciesCreate', J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, '../internals/array-species-create', 21, false)), arraySpeciesCreate, 3));
            var push = J$.X1(233, J$.W(225, 'push', J$.G(217, J$.T(209, [], 10, false), 'push', 0), push, 3));
            var createMethod = J$.X1(1497, J$.W(1489, 'createMethod', J$.T(1481, function (TYPE) {
                jalangiLabel800:
                    while (true) {
                        try {
                            J$.Fe(1409, arguments.callee, this, arguments);
                            arguments = J$.N(1417, 'arguments', arguments, 4);
                            TYPE = J$.N(1425, 'TYPE', TYPE, 4);
                            J$.N(1433, 'IS_MAP', IS_MAP, 0);
                            J$.N(1441, 'IS_FILTER', IS_FILTER, 0);
                            J$.N(1449, 'IS_SOME', IS_SOME, 0);
                            J$.N(1457, 'IS_EVERY', IS_EVERY, 0);
                            J$.N(1465, 'IS_FIND_INDEX', IS_FIND_INDEX, 0);
                            J$.N(1473, 'NO_HOLES', NO_HOLES, 0);
                            var IS_MAP = J$.X1(265, J$.W(257, 'IS_MAP', J$.B(10, '==', J$.R(241, 'TYPE', TYPE, 0), J$.T(249, 1, 22, false), 0), IS_MAP, 1));
                            var IS_FILTER = J$.X1(297, J$.W(289, 'IS_FILTER', J$.B(18, '==', J$.R(273, 'TYPE', TYPE, 0), J$.T(281, 2, 22, false), 0), IS_FILTER, 1));
                            var IS_SOME = J$.X1(329, J$.W(321, 'IS_SOME', J$.B(26, '==', J$.R(305, 'TYPE', TYPE, 0), J$.T(313, 3, 22, false), 0), IS_SOME, 1));
                            var IS_EVERY = J$.X1(361, J$.W(353, 'IS_EVERY', J$.B(34, '==', J$.R(337, 'TYPE', TYPE, 0), J$.T(345, 4, 22, false), 0), IS_EVERY, 1));
                            var IS_FIND_INDEX = J$.X1(393, J$.W(385, 'IS_FIND_INDEX', J$.B(42, '==', J$.R(369, 'TYPE', TYPE, 0), J$.T(377, 6, 22, false), 0), IS_FIND_INDEX, 1));
                            var NO_HOLES = J$.X1(433, J$.W(425, 'NO_HOLES', J$.C(8, J$.B(50, '==', J$.R(401, 'TYPE', TYPE, 0), J$.T(409, 5, 22, false), 0)) ? J$._() : J$.R(417, 'IS_FIND_INDEX', IS_FIND_INDEX, 0), NO_HOLES, 1));
                            return J$.X1(1401, J$.Rt(1393, J$.T(1385, function ($this, callbackfn, that, specificCreate) {
                                jalangiLabel799:
                                    while (true) {
                                        try {
                                            J$.Fe(1265, arguments.callee, this, arguments);
                                            arguments = J$.N(1273, 'arguments', arguments, 4);
                                            $this = J$.N(1281, '$this', $this, 4);
                                            callbackfn = J$.N(1289, 'callbackfn', callbackfn, 4);
                                            that = J$.N(1297, 'that', that, 4);
                                            specificCreate = J$.N(1305, 'specificCreate', specificCreate, 4);
                                            J$.N(1313, 'O', O, 0);
                                            J$.N(1321, 'self', self, 0);
                                            J$.N(1329, 'boundFunction', boundFunction, 0);
                                            J$.N(1337, 'length', length, 0);
                                            J$.N(1345, 'index', index, 0);
                                            J$.N(1353, 'create', create, 0);
                                            J$.N(1361, 'target', target, 0);
                                            J$.N(1369, 'value', value, 0);
                                            J$.N(1377, 'result', result, 0);
                                            var O = J$.X1(473, J$.W(465, 'O', J$.F(457, J$.R(441, 'toObject', toObject, 1), 0)(J$.R(449, '$this', $this, 0)), O, 1));
                                            var self = J$.X1(513, J$.W(505, 'self', J$.F(497, J$.R(481, 'IndexedObject', IndexedObject, 1), 0)(J$.R(489, 'O', O, 0)), self, 1));
                                            var boundFunction = J$.X1(569, J$.W(561, 'boundFunction', J$.F(553, J$.R(521, 'bind', bind, 1), 0)(J$.R(529, 'callbackfn', callbackfn, 0), J$.R(537, 'that', that, 0), J$.T(545, 3, 22, false)), boundFunction, 1));
                                            var length = J$.X1(617, J$.W(609, 'length', J$.F(601, J$.R(577, 'toLength', toLength, 1), 0)(J$.G(593, J$.R(585, 'self', self, 0), 'length', 0)), length, 1));
                                            var index = J$.X1(641, J$.W(633, 'index', J$.T(625, 0, 22, false), index, 1));
                                            var create = J$.X1(673, J$.W(665, 'create', J$.C(16, J$.R(649, 'specificCreate', specificCreate, 0)) ? J$._() : J$.R(657, 'arraySpeciesCreate', arraySpeciesCreate, 1), create, 1));
                                            var target = J$.X1(777, J$.W(769, 'target', J$.X1(1777, J$.C(32, J$.R(681, 'IS_MAP', IS_MAP, 0))) ? J$.F(713, J$.R(689, 'create', create, 0), 0)(J$.R(697, '$this', $this, 0), J$.R(705, 'length', length, 0)) : J$.X1(1769, J$.C(24, J$.R(721, 'IS_FILTER', IS_FILTER, 0))) ? J$.F(753, J$.R(729, 'create', create, 0), 0)(J$.R(737, '$this', $this, 0), J$.T(745, 0, 22, false)) : J$.T(761, undefined, 24, false), target, 1));
                                            var value, result;
                                            for (; J$.X1(1865, J$.C(128, J$.B(58, '>', J$.R(785, 'length', length, 0), J$.R(793, 'index', index, 0), 0))); J$.X1(1873, J$.B(82, '-', index = J$.W(817, 'index', J$.B(74, '+', J$.U(66, '+', J$.R(809, 'index', index, 0)), J$.T(801, 1, 22, false), 0), index, 0), J$.T(825, 1, 22, false), 0)))
                                                if (J$.X1(1857, J$.C(120, J$.C(40, J$.R(833, 'NO_HOLES', NO_HOLES, 0)) ? J$._() : J$.B(90, 'in', J$.R(841, 'index', index, 0), J$.R(849, 'self', self, 0), 0)))) {
                                                J$.X1(889, value = J$.W(881, 'value', J$.G(873, J$.R(857, 'self', self, 0), J$.R(865, 'index', index, 0), 4), value, 0));
                                                J$.X1(945, result = J$.W(937, 'result', J$.F(929, J$.R(897, 'boundFunction', boundFunction, 0), 0)(J$.R(905, 'value', value, 0), J$.R(913, 'index', index, 0), J$.R(921, 'O', O, 0)), result, 0));
                                                if (J$.X1(1849, J$.C(112, J$.R(953, 'TYPE', TYPE, 0)))) {
                                                    if (J$.X1(1841, J$.C(104, J$.R(961, 'IS_MAP', IS_MAP, 0))))
                                                        J$.X1(1001, J$.P(993, J$.R(969, 'target', target, 0), J$.R(977, 'index', index, 0), J$.R(985, 'result', result, 0), 2));
                                                    else if (J$.X1(1833, J$.C(96, J$.R(1009, 'result', result, 0))))
                                                        switch (J$.X1(1785, J$.C1(48, J$.R(1017, 'TYPE', TYPE, 0)))) {
                                                    case J$.X1(1793, J$.C2(56, J$.T(1049, 3, 22, false))):
                                                        return J$.X1(1041, J$.Rt(1033, J$.T(1025, true, 23, false)));
                                                    case J$.X1(1801, J$.C2(64, J$.T(1081, 5, 22, false))):
                                                        return J$.X1(1073, J$.Rt(1065, J$.R(1057, 'value', value, 0)));
                                                    case J$.X1(1809, J$.C2(72, J$.T(1113, 6, 22, false))):
                                                        return J$.X1(1105, J$.Rt(1097, J$.R(1089, 'index', index, 0)));
                                                    case J$.X1(1817, J$.C2(80, J$.T(1161, 2, 22, false))):
                                                        J$.X1(1153, J$.M(1145, J$.R(1121, 'push', push, 1), 'call', 0)(J$.R(1129, 'target', target, 0), J$.R(1137, 'value', value, 0)));
                                                    }
                                                    else if (J$.X1(1825, J$.C(88, J$.R(1169, 'IS_EVERY', IS_EVERY, 0))))
                                                        return J$.X1(1193, J$.Rt(1185, J$.T(1177, false, 23, false)));
                                                }
                                            }
                                            return J$.X1(1257, J$.Rt(1249, J$.X1(1889, J$.C(152, J$.R(1201, 'IS_FIND_INDEX', IS_FIND_INDEX, 0))) ? J$.U(98, '-', J$.T(1209, 1, 22, false)) : J$.X1(1881, J$.C(144, J$.C(136, J$.R(1217, 'IS_SOME', IS_SOME, 0)) ? J$._() : J$.R(1225, 'IS_EVERY', IS_EVERY, 0))) ? J$.R(1233, 'IS_EVERY', IS_EVERY, 0) : J$.R(1241, 'target', target, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1897, J$e);
                                        } finally {
                                            if (J$.Fr(1905))
                                                continue jalangiLabel799;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1265)));
                        } catch (J$e) {
                            J$.Ex(1913, J$e);
                        } finally {
                            if (J$.Fr(1921))
                                continue jalangiLabel800;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1409), createMethod, 3));
            J$.X1(1697, J$.P(1689, J$.R(1505, 'module', module, 2), 'exports', J$.T(1681, {
                forEach: J$.F(1529, J$.R(1513, 'createMethod', createMethod, 1), 0)(J$.T(1521, 0, 22, false)),
                map: J$.F(1553, J$.R(1537, 'createMethod', createMethod, 1), 0)(J$.T(1545, 1, 22, false)),
                filter: J$.F(1577, J$.R(1561, 'createMethod', createMethod, 1), 0)(J$.T(1569, 2, 22, false)),
                some: J$.F(1601, J$.R(1585, 'createMethod', createMethod, 1), 0)(J$.T(1593, 3, 22, false)),
                every: J$.F(1625, J$.R(1609, 'createMethod', createMethod, 1), 0)(J$.T(1617, 4, 22, false)),
                find: J$.F(1649, J$.R(1633, 'createMethod', createMethod, 1), 0)(J$.T(1641, 5, 22, false)),
                findIndex: J$.F(1673, J$.R(1657, 'createMethod', createMethod, 1), 0)(J$.T(1665, 6, 22, false))
            }, 11, false), 0));
        } catch (J$e) {
            J$.Ex(1929, J$e);
        } finally {
            if (J$.Sr(1937)) {
                J$.L();
                continue jalangiLabel801;
            } else {
                J$.L();
                break jalangiLabel801;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
