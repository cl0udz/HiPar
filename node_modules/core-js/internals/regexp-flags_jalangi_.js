J$.iids = {"8":[8,7,8,18],"9":[1,16,1,23],"10":[8,30,8,33],"16":[9,7,9,22],"17":[1,24,1,48],"18":[9,34,9,37],"24":[10,7,10,21],"25":[1,16,1,49],"26":[10,33,10,36],"32":[11,7,11,18],"33":[1,16,1,49],"34":[11,30,11,33],"40":[12,7,12,19],"41":[1,16,1,49],"42":[12,31,12,34],"48":[13,7,13,18],"49":[5,1,5,7],"50":[13,30,13,33],"57":[6,14,6,22],"65":[6,23,6,27],"73":[6,14,6,28],"81":[6,14,6,28],"89":[6,14,6,28],"97":[7,16,7,18],"105":[7,16,7,18],"113":[7,16,7,18],"121":[8,7,8,11],"129":[8,7,8,18],"137":[8,30,8,33],"145":[8,20,8,26],"153":[8,20,8,33],"161":[8,20,8,34],"169":[9,7,9,11],"177":[9,7,9,22],"185":[9,34,9,37],"193":[9,24,9,30],"201":[9,24,9,37],"209":[9,24,9,38],"217":[10,7,10,11],"225":[10,7,10,21],"233":[10,33,10,36],"241":[10,23,10,29],"249":[10,23,10,36],"257":[10,23,10,37],"265":[11,7,11,11],"273":[11,7,11,18],"281":[11,30,11,33],"289":[11,20,11,26],"297":[11,20,11,33],"305":[11,20,11,34],"313":[12,7,12,11],"321":[12,7,12,19],"329":[12,31,12,34],"337":[12,21,12,27],"345":[12,21,12,34],"353":[12,21,12,35],"361":[13,7,13,11],"369":[13,7,13,18],"377":[13,30,13,33],"385":[13,20,13,26],"393":[13,20,13,33],"401":[13,20,13,34],"409":[14,10,14,16],"417":[14,10,14,16],"425":[14,3,14,17],"433":[5,18,15,2],"441":[5,18,15,2],"449":[5,18,15,2],"457":[5,18,15,2],"465":[5,18,15,2],"473":[5,1,15,2],"481":[5,1,15,3],"489":[1,1,15,3],"497":[1,1,15,3],"505":[8,3,8,34],"513":[9,3,9,38],"521":[10,3,10,37],"529":[11,3,11,34],"537":[12,3,12,35],"545":[13,3,13,34],"553":[5,18,15,2],"561":[5,18,15,2],"569":[1,1,15,3],"577":[1,1,15,3],"nBranches":12,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-flags.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-flags_jalangi_.js","code":"'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n"};
jalangiLabel567:
    while (true) {
        try {
            J$.Se(489, '/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-flags_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-flags.js');
            J$.N(497, 'anObject', anObject, 0);
            var anObject = J$.X1(41, J$.W(33, 'anObject', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/an-object', 21, false)), anObject, 3));
            J$.X1(481, J$.P(473, J$.R(49, 'module', module, 2), 'exports', J$.T(465, function () {
                jalangiLabel566:
                    while (true) {
                        try {
                            J$.Fe(433, arguments.callee, this, arguments);
                            arguments = J$.N(441, 'arguments', arguments, 4);
                            J$.N(449, 'that', that, 0);
                            J$.N(457, 'result', result, 0);
                            var that = J$.X1(89, J$.W(81, 'that', J$.F(73, J$.R(57, 'anObject', anObject, 1), 0)(J$.R(65, 'this', this, 0)), that, 1));
                            var result = J$.X1(113, J$.W(105, 'result', J$.T(97, '', 21, false), result, 1));
                            if (J$.X1(505, J$.C(8, J$.G(129, J$.R(121, 'that', that, 0), 'global', 0))))
                                J$.X1(161, result = J$.W(153, 'result', J$.B(10, '+', J$.R(145, 'result', result, 0), J$.T(137, 'g', 21, false), 0), result, 0));
                            if (J$.X1(513, J$.C(16, J$.G(177, J$.R(169, 'that', that, 0), 'ignoreCase', 0))))
                                J$.X1(209, result = J$.W(201, 'result', J$.B(18, '+', J$.R(193, 'result', result, 0), J$.T(185, 'i', 21, false), 0), result, 0));
                            if (J$.X1(521, J$.C(24, J$.G(225, J$.R(217, 'that', that, 0), 'multiline', 0))))
                                J$.X1(257, result = J$.W(249, 'result', J$.B(26, '+', J$.R(241, 'result', result, 0), J$.T(233, 'm', 21, false), 0), result, 0));
                            if (J$.X1(529, J$.C(32, J$.G(273, J$.R(265, 'that', that, 0), 'dotAll', 0))))
                                J$.X1(305, result = J$.W(297, 'result', J$.B(34, '+', J$.R(289, 'result', result, 0), J$.T(281, 's', 21, false), 0), result, 0));
                            if (J$.X1(537, J$.C(40, J$.G(321, J$.R(313, 'that', that, 0), 'unicode', 0))))
                                J$.X1(353, result = J$.W(345, 'result', J$.B(42, '+', J$.R(337, 'result', result, 0), J$.T(329, 'u', 21, false), 0), result, 0));
                            if (J$.X1(545, J$.C(48, J$.G(369, J$.R(361, 'that', that, 0), 'sticky', 0))))
                                J$.X1(401, result = J$.W(393, 'result', J$.B(50, '+', J$.R(385, 'result', result, 0), J$.T(377, 'y', 21, false), 0), result, 0));
                            return J$.X1(425, J$.Rt(417, J$.R(409, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(553, J$e);
                        } finally {
                            if (J$.Fr(561))
                                continue jalangiLabel566;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 433), 0));
        } catch (J$e) {
            J$.Ex(569, J$e);
        } finally {
            if (J$.Sr(577)) {
                J$.L();
                continue jalangiLabel567;
            } else {
                J$.L();
                break jalangiLabel567;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
