J$.iids = {"8":[17,10,17,52],"9":[1,1,1,13],"10":[17,10,17,29],"16":[23,13,23,54],"17":[1,1,1,14],"18":[17,33,17,52],"24":[30,9,30,22],"25":[2,19,2,26],"26":[21,21,21,53],"32":[33,9,33,33],"33":[2,27,2,43],"34":[31,27,31,42],"40":[37,9,37,42],"41":[2,19,2,44],"42":[31,27,31,55],"48":[38,22,38,31],"49":[2,19,2,44],"50":[38,34,38,63],"56":[37,9,37,42],"57":[2,19,2,44],"58":[40,35,40,51],"64":[40,9,40,31],"65":[4,18,4,24],"66":[44,25,44,45],"72":[40,9,40,51],"73":[4,18,4,34],"74":[44,21,44,45],"80":[45,15,45,41],"81":[4,18,4,39],"82":[44,47,44,50],"88":[44,21,44,45],"89":[4,18,4,39],"96":[40,9,40,51],"97":[4,18,4,39],"98":[44,47,44,50],"104":[25,5,25,10],"105":[8,21,8,27],"106":[45,15,45,41],"113":[8,21,8,37],"121":[8,21,8,45],"129":[8,21,8,45],"137":[8,21,8,45],"145":[10,19,10,29],"153":[10,19,10,29],"161":[10,19,10,29],"169":[13,13,13,16],"177":[13,13,13,16],"185":[13,13,13,16],"193":[14,13,14,18],"201":[14,13,14,18],"209":[14,13,14,18],"217":[15,3,15,13],"225":[15,19,15,22],"233":[15,24,15,27],"241":[15,3,15,28],"243":[15,3,15,18],"249":[15,3,15,29],"257":[16,3,16,13],"265":[16,19,16,22],"273":[16,24,16,27],"281":[16,3,16,28],"283":[16,3,16,18],"289":[16,3,16,29],"297":[17,10,17,13],"305":[17,10,17,23],"313":[17,28,17,29],"321":[17,33,17,36],"329":[17,33,17,46],"337":[17,51,17,52],"345":[17,10,17,52],"353":[17,3,17,53],"361":[12,33,18,2],"369":[12,33,18,2],"377":[12,33,18,2],"385":[12,33,18,2],"393":[12,33,18,2],"401":[12,32,18,5],"409":[12,32,18,5],"417":[12,32,18,5],"425":[21,21,21,27],"433":[21,33,21,35],"441":[21,21,21,36],"443":[21,21,21,32],"449":[21,37,21,38],"457":[21,21,21,39],"465":[21,44,21,53],"473":[21,21,21,53],"481":[21,21,21,53],"489":[23,13,23,37],"497":[23,41,23,54],"505":[23,13,23,54],"513":[23,13,23,54],"521":[25,5,25,10],"529":[27,14,27,18],"537":[27,14,27,18],"545":[27,14,27,18],"553":[30,9,30,22],"561":[31,20,31,26],"569":[31,27,31,30],"577":[31,33,31,35],"585":[31,33,31,42],"593":[31,45,31,55],"601":[31,57,31,68],"609":[31,74,31,76],"617":[31,57,31,77],"619":[31,57,31,73],"625":[31,16,31,78],"633":[31,16,31,78],"641":[31,7,31,79],"649":[33,9,33,33],"657":[33,47,33,49],"665":[33,47,33,59],"673":[33,47,33,59],"681":[33,35,33,60],"689":[35,13,35,23],"697":[35,29,35,31],"705":[35,33,35,36],"713":[35,13,35,37],"715":[35,13,35,28],"721":[35,13,35,37],"729":[35,5,35,38],"737":[37,9,37,33],"745":[37,37,37,42],"753":[38,7,38,9],"761":[38,22,38,24],"769":[38,22,38,31],"777":[38,34,38,39],"785":[38,34,38,45],"793":[38,48,38,53],"801":[38,54,38,55],"809":[38,48,38,56],"817":[38,48,38,63],"825":[38,66,38,75],"833":[38,7,38,75],"841":[38,7,38,76],"849":[40,9,40,22],"857":[40,26,40,31],"865":[40,35,40,40],"873":[40,35,40,47],"881":[40,50,40,51],"889":[43,7,43,20],"897":[43,26,43,31],"905":[43,32,43,33],"913":[43,26,43,34],"921":[43,36,43,42],"929":[44,18,44,19],"937":[44,18,44,19],"945":[44,21,44,22],"953":[44,25,44,34],"961":[44,25,44,41],"969":[44,44,44,45],"985":[44,47,44,48],"993":[44,47,44,50],"1009":[45,15,45,24],"1017":[45,25,45,26],"1025":[45,15,45,27],"1033":[45,32,45,41],"1041":[45,43,45,48],"1049":[45,49,45,50],"1057":[45,54,45,63],"1065":[45,43,45,63],"1073":[45,43,45,64],"1081":[43,44,47,8],"1089":[43,44,47,8],"1097":[43,44,47,8],"1105":[43,7,47,9],"1107":[43,7,43,25],"1113":[43,7,47,10],"1121":[50,12,50,17],"1129":[50,12,50,17],"1137":[50,5,50,18],"1145":[26,17,51,4],"1153":[26,17,51,4],"1161":[26,17,51,4],"1169":[26,17,51,4],"1177":[26,17,51,4],"1185":[26,17,51,4],"1193":[26,17,51,4],"1201":[26,17,51,4],"1209":[26,17,51,4],"1217":[26,17,51,4],"1225":[26,17,51,4],"1233":[26,3,51,5],"1241":[54,1,54,7],"1249":[54,18,54,29],"1257":[54,1,54,29],"1265":[54,1,54,30],"1273":[1,1,55,1],"1281":[1,1,55,1],"1289":[1,1,55,1],"1297":[1,1,55,1],"1305":[1,1,55,1],"1313":[1,1,55,1],"1321":[1,1,55,1],"1329":[1,1,55,1],"1337":[12,33,18,2],"1345":[12,33,18,2],"1353":[30,5,32,6],"1361":[33,5,33,60],"1369":[38,22,38,75],"1377":[37,5,39,6],"1385":[45,11,45,64],"1393":[44,9,46,10],"1401":[44,9,46,10],"1409":[44,9,46,10],"1417":[43,44,47,8],"1425":[43,44,47,8],"1433":[40,5,48,6],"1441":[26,17,51,4],"1449":[26,17,51,4],"1457":[25,1,52,2],"1465":[1,1,55,1],"1473":[1,1,55,1],"nBranches":26,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec_jalangi_.js","code":"'use strict';\nvar regexpFlags = require('./regexp-flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n"};
jalangiLabel976:
    while (true) {
        try {
            J$.Se(1273, '/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec.js');
            J$.N(1281, 'regexpFlags', regexpFlags, 0);
            J$.N(1289, 'nativeExec', nativeExec, 0);
            J$.N(1297, 'nativeReplace', nativeReplace, 0);
            J$.N(1305, 'patchedExec', patchedExec, 0);
            J$.N(1313, 'UPDATES_LAST_INDEX_WRONG', UPDATES_LAST_INDEX_WRONG, 0);
            J$.N(1321, 'NPCG_INCLUDED', NPCG_INCLUDED, 0);
            J$.N(1329, 'PATCH', PATCH, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var regexpFlags = J$.X1(57, J$.W(49, 'regexpFlags', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, './regexp-flags', 21, false)), regexpFlags, 3));
            var nativeExec = J$.X1(97, J$.W(89, 'nativeExec', J$.G(81, J$.G(73, J$.R(65, 'RegExp', RegExp, 2), 'prototype', 0), 'exec', 0), nativeExec, 3));
            var nativeReplace = J$.X1(137, J$.W(129, 'nativeReplace', J$.G(121, J$.G(113, J$.R(105, 'String', String, 2), 'prototype', 0), 'replace', 0), nativeReplace, 3));
            var patchedExec = J$.X1(161, J$.W(153, 'patchedExec', J$.R(145, 'nativeExec', nativeExec, 1), patchedExec, 3));
            var UPDATES_LAST_INDEX_WRONG = J$.X1(417, J$.W(409, 'UPDATES_LAST_INDEX_WRONG', J$.F(401, J$.T(393, function () {
                jalangiLabel973:
                    while (true) {
                        try {
                            J$.Fe(361, arguments.callee, this, arguments);
                            arguments = J$.N(369, 'arguments', arguments, 4);
                            J$.N(377, 're1', re1, 0);
                            J$.N(385, 're2', re2, 0);
                            var re1 = J$.X1(185, J$.W(177, 're1', J$.T(169, /a/, 14, false), re1, 1));
                            var re2 = J$.X1(209, J$.W(201, 're2', J$.T(193, /b*/g, 14, false), re2, 1));
                            J$.X1(249, J$.M(241, J$.R(217, 'nativeExec', nativeExec, 1), 'call', 0)(J$.R(225, 're1', re1, 0), J$.T(233, 'a', 21, false)));
                            J$.X1(289, J$.M(281, J$.R(257, 'nativeExec', nativeExec, 1), 'call', 0)(J$.R(265, 're2', re2, 0), J$.T(273, 'a', 21, false)));
                            return J$.X1(353, J$.Rt(345, J$.C(8, J$.B(10, '!==', J$.G(305, J$.R(297, 're1', re1, 0), 'lastIndex', 0), J$.T(313, 0, 22, false), 0)) ? J$._() : J$.B(18, '!==', J$.G(329, J$.R(321, 're2', re2, 0), 'lastIndex', 0), J$.T(337, 0, 22, false), 0)));
                        } catch (J$e) {
                            J$.Ex(1337, J$e);
                        } finally {
                            if (J$.Fr(1345))
                                continue jalangiLabel973;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 361), 0)(), UPDATES_LAST_INDEX_WRONG, 3));
            var NPCG_INCLUDED = J$.X1(481, J$.W(473, 'NPCG_INCLUDED', J$.B(26, '!==', J$.G(457, J$.M(441, J$.T(425, /()??/, 14, false), 'exec', 0)(J$.T(433, '', 21, false)), J$.T(449, 1, 22, false), 4), J$.T(465, undefined, 24, false), 0), NPCG_INCLUDED, 3));
            var PATCH = J$.X1(513, J$.W(505, 'PATCH', J$.C(16, J$.R(489, 'UPDATES_LAST_INDEX_WRONG', UPDATES_LAST_INDEX_WRONG, 1)) ? J$._() : J$.R(497, 'NPCG_INCLUDED', NPCG_INCLUDED, 1), PATCH, 3));
            if (J$.X1(1457, J$.C(104, J$.R(521, 'PATCH', PATCH, 1)))) {
                J$.X1(1233, patchedExec = J$.W(1225, 'patchedExec', J$.T(1217, function exec(str) {
                    jalangiLabel975:
                        while (true) {
                            try {
                                J$.Fe(1145, arguments.callee, this, arguments);
                                arguments = J$.N(1153, 'arguments', arguments, 4);
                                exec = J$.N(1161, 'exec', exec, 0);
                                str = J$.N(1169, 'str', str, 4);
                                J$.N(1177, 're', re, 0);
                                J$.N(1185, 'lastIndex', lastIndex, 0);
                                J$.N(1193, 'reCopy', reCopy, 0);
                                J$.N(1201, 'match', match, 0);
                                J$.N(1209, 'i', i, 0);
                                var re = J$.X1(545, J$.W(537, 're', J$.R(529, 'this', this, 0), re, 1));
                                var lastIndex, reCopy, match, i;
                                if (J$.X1(1353, J$.C(24, J$.R(553, 'NPCG_INCLUDED', NPCG_INCLUDED, 1)))) {
                                    J$.X1(641, reCopy = J$.W(633, 'reCopy', J$.F(625, J$.R(561, 'RegExp', RegExp, 2), 1)(J$.B(42, '+', J$.B(34, '+', J$.T(569, '^', 21, false), J$.G(585, J$.R(577, 're', re, 0), 'source', 0), 0), J$.T(593, '$(?!\\s)', 21, false), 0), J$.M(617, J$.R(601, 'regexpFlags', regexpFlags, 1), 'call', 0)(J$.R(609, 're', re, 0))), reCopy, 0));
                                }
                                if (J$.X1(1361, J$.C(32, J$.R(649, 'UPDATES_LAST_INDEX_WRONG', UPDATES_LAST_INDEX_WRONG, 1))))
                                    J$.X1(681, lastIndex = J$.W(673, 'lastIndex', J$.G(665, J$.R(657, 're', re, 0), 'lastIndex', 0), lastIndex, 0));
                                J$.X1(729, match = J$.W(721, 'match', J$.M(713, J$.R(689, 'nativeExec', nativeExec, 1), 'call', 0)(J$.R(697, 're', re, 0), J$.R(705, 'str', str, 0)), match, 0));
                                if (J$.X1(1377, J$.C(56, J$.C(40, J$.R(737, 'UPDATES_LAST_INDEX_WRONG', UPDATES_LAST_INDEX_WRONG, 1)) ? J$.R(745, 'match', match, 0) : J$._()))) {
                                    J$.X1(841, J$.P(833, J$.R(753, 're', re, 0), 'lastIndex', J$.X1(1369, J$.C(48, J$.G(769, J$.R(761, 're', re, 0), 'global', 0))) ? J$.B(50, '+', J$.G(785, J$.R(777, 'match', match, 0), 'index', 0), J$.G(817, J$.G(809, J$.R(793, 'match', match, 0), J$.T(801, 0, 22, false), 4), 'length', 0), 0) : J$.R(825, 'lastIndex', lastIndex, 0), 0));
                                }
                                if (J$.X1(1433, J$.C(96, J$.C(72, J$.C(64, J$.R(849, 'NPCG_INCLUDED', NPCG_INCLUDED, 1)) ? J$.R(857, 'match', match, 0) : J$._()) ? J$.B(58, '>', J$.G(873, J$.R(865, 'match', match, 0), 'length', 0), J$.T(881, 1, 22, false), 0) : J$._()))) {
                                    J$.X1(1113, J$.M(1105, J$.R(889, 'nativeReplace', nativeReplace, 1), 'call', 0)(J$.G(913, J$.R(897, 'match', match, 0), J$.T(905, 0, 22, false), 4), J$.R(921, 'reCopy', reCopy, 0), J$.T(1097, function () {
                                        jalangiLabel974:
                                            while (true) {
                                                try {
                                                    J$.Fe(1081, arguments.callee, this, arguments);
                                                    arguments = J$.N(1089, 'arguments', arguments, 4);
                                                    for (J$.X1(1401, i = J$.W(937, 'i', J$.T(929, 1, 22, false), i, 0)); J$.X1(1393, J$.C(88, J$.B(74, '<', J$.R(945, 'i', i, 0), J$.B(66, '-', J$.G(961, J$.R(953, 'arguments', arguments, 2), 'length', 0), J$.T(969, 2, 22, false), 0), 0))); J$.X1(1409, J$.B(98, '-', i = J$.W(993, 'i', J$.B(90, '+', J$.U(82, '+', J$.R(985, 'i', i, 0)), J$.T(977, 1, 22, false), 0), i, 0), J$.T(1001, 1, 22, false), 0))) {
                                                        if (J$.X1(1385, J$.C(80, J$.B(106, '===', J$.G(1025, J$.R(1009, 'arguments', arguments, 2), J$.R(1017, 'i', i, 0), 4), J$.T(1033, undefined, 24, false), 0))))
                                                            J$.X1(1073, J$.P(1065, J$.R(1041, 'match', match, 0), J$.R(1049, 'i', i, 0), J$.T(1057, undefined, 24, false), 2));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(1417, J$e);
                                                } finally {
                                                    if (J$.Fr(1425))
                                                        continue jalangiLabel974;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 1081)));
                                }
                                return J$.X1(1137, J$.Rt(1129, J$.R(1121, 'match', match, 0)));
                            } catch (J$e) {
                                J$.Ex(1441, J$e);
                            } finally {
                                if (J$.Fr(1449))
                                    continue jalangiLabel975;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1145), patchedExec, 2));
            }
            J$.X1(1265, J$.P(1257, J$.R(1241, 'module', module, 2), 'exports', J$.R(1249, 'patchedExec', patchedExec, 1), 0));
        } catch (J$e) {
            J$.Ex(1465, J$e);
        } finally {
            if (J$.Sr(1473)) {
                J$.L();
                continue jalangiLabel976;
            } else {
                J$.L();
                break jalangiLabel976;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
