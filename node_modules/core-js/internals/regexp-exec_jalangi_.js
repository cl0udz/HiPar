J$.iids = {"8":[16,10,16,52],"9":[1,19,1,26],"10":[16,10,16,29],"16":[22,13,22,54],"17":[1,27,1,43],"18":[16,33,16,52],"24":[29,9,29,22],"25":[1,19,1,44],"26":[20,21,20,53],"32":[32,9,32,33],"33":[1,19,1,44],"34":[30,27,30,42],"40":[36,9,36,42],"41":[1,19,1,44],"42":[30,27,30,55],"48":[37,22,37,31],"49":[3,18,3,24],"50":[37,34,37,63],"56":[36,9,36,42],"57":[3,18,3,34],"58":[39,35,39,51],"64":[39,9,39,31],"65":[3,18,3,39],"66":[43,25,43,45],"72":[39,9,39,51],"73":[3,18,3,39],"74":[43,21,43,45],"80":[44,15,44,41],"81":[3,18,3,39],"82":[43,47,43,50],"88":[43,21,43,45],"89":[7,21,7,27],"96":[39,9,39,51],"97":[7,21,7,37],"98":[43,47,43,50],"104":[24,5,24,10],"105":[7,21,7,45],"106":[44,15,44,41],"113":[7,21,7,45],"121":[7,21,7,45],"129":[9,19,9,29],"137":[9,19,9,29],"145":[9,19,9,29],"153":[12,13,12,16],"161":[12,13,12,16],"169":[12,13,12,16],"177":[13,13,13,18],"185":[13,13,13,18],"193":[13,13,13,18],"201":[14,3,14,13],"209":[14,19,14,22],"217":[14,24,14,27],"225":[14,3,14,28],"227":[14,3,14,18],"233":[14,3,14,29],"241":[15,3,15,13],"249":[15,19,15,22],"257":[15,24,15,27],"265":[15,3,15,28],"267":[15,3,15,18],"273":[15,3,15,29],"281":[16,10,16,13],"289":[16,10,16,23],"297":[16,28,16,29],"305":[16,33,16,36],"313":[16,33,16,46],"321":[16,51,16,52],"329":[16,10,16,52],"337":[16,3,16,53],"345":[11,32,17,2],"353":[11,32,17,2],"361":[11,32,17,2],"369":[11,32,17,2],"377":[11,32,17,2],"385":[11,32,17,4],"393":[11,32,17,4],"401":[11,32,17,4],"409":[20,21,20,27],"417":[20,33,20,35],"425":[20,21,20,36],"427":[20,21,20,32],"433":[20,37,20,38],"441":[20,21,20,39],"449":[20,44,20,53],"457":[20,21,20,53],"465":[20,21,20,53],"473":[22,13,22,37],"481":[22,41,22,54],"489":[22,13,22,54],"497":[22,13,22,54],"505":[24,5,24,10],"513":[26,14,26,18],"521":[26,14,26,18],"529":[26,14,26,18],"537":[29,9,29,22],"545":[30,20,30,26],"553":[30,27,30,30],"561":[30,33,30,35],"569":[30,33,30,42],"577":[30,45,30,55],"585":[30,57,30,68],"593":[30,74,30,76],"601":[30,57,30,77],"603":[30,57,30,73],"609":[30,16,30,78],"617":[30,16,30,78],"625":[30,7,30,79],"633":[32,9,32,33],"641":[32,47,32,49],"649":[32,47,32,59],"657":[32,47,32,59],"665":[32,35,32,60],"673":[34,13,34,23],"681":[34,29,34,31],"689":[34,33,34,36],"697":[34,13,34,37],"699":[34,13,34,28],"705":[34,13,34,37],"713":[34,5,34,38],"721":[36,9,36,33],"729":[36,37,36,42],"737":[37,7,37,9],"745":[37,22,37,24],"753":[37,22,37,31],"761":[37,34,37,39],"769":[37,34,37,45],"777":[37,48,37,53],"785":[37,54,37,55],"793":[37,48,37,56],"801":[37,48,37,63],"809":[37,66,37,75],"817":[37,7,37,75],"825":[37,7,37,76],"833":[39,9,39,22],"841":[39,26,39,31],"849":[39,35,39,40],"857":[39,35,39,47],"865":[39,50,39,51],"873":[42,7,42,20],"881":[42,26,42,31],"889":[42,32,42,33],"897":[42,26,42,34],"905":[42,36,42,42],"913":[43,18,43,19],"921":[43,18,43,19],"929":[43,21,43,22],"937":[43,25,43,34],"945":[43,25,43,41],"953":[43,44,43,45],"969":[43,47,43,48],"977":[43,47,43,50],"993":[44,15,44,24],"1001":[44,25,44,26],"1009":[44,15,44,27],"1017":[44,32,44,41],"1025":[44,43,44,48],"1033":[44,49,44,50],"1041":[44,54,44,63],"1049":[44,43,44,63],"1057":[44,43,44,64],"1065":[42,44,46,8],"1073":[42,44,46,8],"1081":[42,44,46,8],"1089":[42,7,46,9],"1091":[42,7,42,25],"1097":[42,7,46,10],"1105":[49,12,49,17],"1113":[49,12,49,17],"1121":[49,5,49,18],"1129":[25,17,50,4],"1137":[25,17,50,4],"1145":[25,17,50,4],"1153":[25,17,50,4],"1161":[25,17,50,4],"1169":[25,17,50,4],"1177":[25,17,50,4],"1185":[25,17,50,4],"1193":[25,17,50,4],"1201":[25,17,50,4],"1209":[25,17,50,4],"1217":[25,3,50,5],"1225":[53,1,53,7],"1233":[53,18,53,29],"1241":[53,1,53,29],"1249":[53,1,53,30],"1257":[1,1,53,30],"1265":[1,1,53,30],"1273":[1,1,53,30],"1281":[1,1,53,30],"1289":[1,1,53,30],"1297":[1,1,53,30],"1305":[1,1,53,30],"1313":[1,1,53,30],"1321":[11,32,17,2],"1329":[11,32,17,2],"1337":[29,5,31,6],"1345":[32,5,32,60],"1353":[37,22,37,75],"1361":[36,5,38,6],"1369":[44,11,44,64],"1377":[43,9,45,10],"1385":[43,9,45,10],"1393":[43,9,45,10],"1401":[42,44,46,8],"1409":[42,44,46,8],"1417":[39,5,47,6],"1425":[25,17,50,4],"1433":[25,17,50,4],"1441":[24,1,51,2],"1449":[1,1,53,30],"1457":[1,1,53,30],"nBranches":26,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec_jalangi_.js","code":"'use strict';\nvar regexpFlags = require('./regexp-flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n"};
jalangiLabel565:
    while (true) {
        try {
            J$.Se(1257, '/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/regexp-exec.js');
            J$.N(1265, 'regexpFlags', regexpFlags, 0);
            J$.N(1273, 'nativeExec', nativeExec, 0);
            J$.N(1281, 'nativeReplace', nativeReplace, 0);
            J$.N(1289, 'patchedExec', patchedExec, 0);
            J$.N(1297, 'UPDATES_LAST_INDEX_WRONG', UPDATES_LAST_INDEX_WRONG, 0);
            J$.N(1305, 'NPCG_INCLUDED', NPCG_INCLUDED, 0);
            J$.N(1313, 'PATCH', PATCH, 0);
            var regexpFlags = J$.X1(41, J$.W(33, 'regexpFlags', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './regexp-flags', 21, false)), regexpFlags, 3));
            var nativeExec = J$.X1(81, J$.W(73, 'nativeExec', J$.G(65, J$.G(57, J$.R(49, 'RegExp', RegExp, 2), 'prototype', 0), 'exec', 0), nativeExec, 3));
            var nativeReplace = J$.X1(121, J$.W(113, 'nativeReplace', J$.G(105, J$.G(97, J$.R(89, 'String', String, 2), 'prototype', 0), 'replace', 0), nativeReplace, 3));
            var patchedExec = J$.X1(145, J$.W(137, 'patchedExec', J$.R(129, 'nativeExec', nativeExec, 1), patchedExec, 3));
            var UPDATES_LAST_INDEX_WRONG = J$.X1(401, J$.W(393, 'UPDATES_LAST_INDEX_WRONG', J$.F(385, J$.T(377, function () {
                jalangiLabel562:
                    while (true) {
                        try {
                            J$.Fe(345, arguments.callee, this, arguments);
                            arguments = J$.N(353, 'arguments', arguments, 4);
                            J$.N(361, 're1', re1, 0);
                            J$.N(369, 're2', re2, 0);
                            var re1 = J$.X1(169, J$.W(161, 're1', J$.T(153, /a/, 14, false), re1, 1));
                            var re2 = J$.X1(193, J$.W(185, 're2', J$.T(177, /b*/g, 14, false), re2, 1));
                            J$.X1(233, J$.M(225, J$.R(201, 'nativeExec', nativeExec, 1), 'call', 0)(J$.R(209, 're1', re1, 0), J$.T(217, 'a', 21, false)));
                            J$.X1(273, J$.M(265, J$.R(241, 'nativeExec', nativeExec, 1), 'call', 0)(J$.R(249, 're2', re2, 0), J$.T(257, 'a', 21, false)));
                            return J$.X1(337, J$.Rt(329, J$.C(8, J$.B(10, '!==', J$.G(289, J$.R(281, 're1', re1, 0), 'lastIndex', 0), J$.T(297, 0, 22, false), 0)) ? J$._() : J$.B(18, '!==', J$.G(313, J$.R(305, 're2', re2, 0), 'lastIndex', 0), J$.T(321, 0, 22, false), 0)));
                        } catch (J$e) {
                            J$.Ex(1321, J$e);
                        } finally {
                            if (J$.Fr(1329))
                                continue jalangiLabel562;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 345), 0)(), UPDATES_LAST_INDEX_WRONG, 3));
            var NPCG_INCLUDED = J$.X1(465, J$.W(457, 'NPCG_INCLUDED', J$.B(26, '!==', J$.G(441, J$.M(425, J$.T(409, /()??/, 14, false), 'exec', 0)(J$.T(417, '', 21, false)), J$.T(433, 1, 22, false), 4), J$.T(449, undefined, 24, false), 0), NPCG_INCLUDED, 3));
            var PATCH = J$.X1(497, J$.W(489, 'PATCH', J$.C(16, J$.R(473, 'UPDATES_LAST_INDEX_WRONG', UPDATES_LAST_INDEX_WRONG, 1)) ? J$._() : J$.R(481, 'NPCG_INCLUDED', NPCG_INCLUDED, 1), PATCH, 3));
            if (J$.X1(1441, J$.C(104, J$.R(505, 'PATCH', PATCH, 1)))) {
                J$.X1(1217, patchedExec = J$.W(1209, 'patchedExec', J$.T(1201, function exec(str) {
                    jalangiLabel564:
                        while (true) {
                            try {
                                J$.Fe(1129, arguments.callee, this, arguments);
                                arguments = J$.N(1137, 'arguments', arguments, 4);
                                exec = J$.N(1145, 'exec', exec, 0);
                                str = J$.N(1153, 'str', str, 4);
                                J$.N(1161, 're', re, 0);
                                J$.N(1169, 'lastIndex', lastIndex, 0);
                                J$.N(1177, 'reCopy', reCopy, 0);
                                J$.N(1185, 'match', match, 0);
                                J$.N(1193, 'i', i, 0);
                                var re = J$.X1(529, J$.W(521, 're', J$.R(513, 'this', this, 0), re, 1));
                                var lastIndex, reCopy, match, i;
                                if (J$.X1(1337, J$.C(24, J$.R(537, 'NPCG_INCLUDED', NPCG_INCLUDED, 1)))) {
                                    J$.X1(625, reCopy = J$.W(617, 'reCopy', J$.F(609, J$.R(545, 'RegExp', RegExp, 2), 1)(J$.B(42, '+', J$.B(34, '+', J$.T(553, '^', 21, false), J$.G(569, J$.R(561, 're', re, 0), 'source', 0), 0), J$.T(577, '$(?!\\s)', 21, false), 0), J$.M(601, J$.R(585, 'regexpFlags', regexpFlags, 1), 'call', 0)(J$.R(593, 're', re, 0))), reCopy, 0));
                                }
                                if (J$.X1(1345, J$.C(32, J$.R(633, 'UPDATES_LAST_INDEX_WRONG', UPDATES_LAST_INDEX_WRONG, 1))))
                                    J$.X1(665, lastIndex = J$.W(657, 'lastIndex', J$.G(649, J$.R(641, 're', re, 0), 'lastIndex', 0), lastIndex, 0));
                                J$.X1(713, match = J$.W(705, 'match', J$.M(697, J$.R(673, 'nativeExec', nativeExec, 1), 'call', 0)(J$.R(681, 're', re, 0), J$.R(689, 'str', str, 0)), match, 0));
                                if (J$.X1(1361, J$.C(56, J$.C(40, J$.R(721, 'UPDATES_LAST_INDEX_WRONG', UPDATES_LAST_INDEX_WRONG, 1)) ? J$.R(729, 'match', match, 0) : J$._()))) {
                                    J$.X1(825, J$.P(817, J$.R(737, 're', re, 0), 'lastIndex', J$.X1(1353, J$.C(48, J$.G(753, J$.R(745, 're', re, 0), 'global', 0))) ? J$.B(50, '+', J$.G(769, J$.R(761, 'match', match, 0), 'index', 0), J$.G(801, J$.G(793, J$.R(777, 'match', match, 0), J$.T(785, 0, 22, false), 4), 'length', 0), 0) : J$.R(809, 'lastIndex', lastIndex, 0), 0));
                                }
                                if (J$.X1(1417, J$.C(96, J$.C(72, J$.C(64, J$.R(833, 'NPCG_INCLUDED', NPCG_INCLUDED, 1)) ? J$.R(841, 'match', match, 0) : J$._()) ? J$.B(58, '>', J$.G(857, J$.R(849, 'match', match, 0), 'length', 0), J$.T(865, 1, 22, false), 0) : J$._()))) {
                                    J$.X1(1097, J$.M(1089, J$.R(873, 'nativeReplace', nativeReplace, 1), 'call', 0)(J$.G(897, J$.R(881, 'match', match, 0), J$.T(889, 0, 22, false), 4), J$.R(905, 'reCopy', reCopy, 0), J$.T(1081, function () {
                                        jalangiLabel563:
                                            while (true) {
                                                try {
                                                    J$.Fe(1065, arguments.callee, this, arguments);
                                                    arguments = J$.N(1073, 'arguments', arguments, 4);
                                                    for (J$.X1(1385, i = J$.W(921, 'i', J$.T(913, 1, 22, false), i, 0)); J$.X1(1377, J$.C(88, J$.B(74, '<', J$.R(929, 'i', i, 0), J$.B(66, '-', J$.G(945, J$.R(937, 'arguments', arguments, 2), 'length', 0), J$.T(953, 2, 22, false), 0), 0))); J$.X1(1393, J$.B(98, '-', i = J$.W(977, 'i', J$.B(90, '+', J$.U(82, '+', J$.R(969, 'i', i, 0)), J$.T(961, 1, 22, false), 0), i, 0), J$.T(985, 1, 22, false), 0))) {
                                                        if (J$.X1(1369, J$.C(80, J$.B(106, '===', J$.G(1009, J$.R(993, 'arguments', arguments, 2), J$.R(1001, 'i', i, 0), 4), J$.T(1017, undefined, 24, false), 0))))
                                                            J$.X1(1057, J$.P(1049, J$.R(1025, 'match', match, 0), J$.R(1033, 'i', i, 0), J$.T(1041, undefined, 24, false), 2));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(1401, J$e);
                                                } finally {
                                                    if (J$.Fr(1409))
                                                        continue jalangiLabel563;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 1065)));
                                }
                                return J$.X1(1121, J$.Rt(1113, J$.R(1105, 'match', match, 0)));
                            } catch (J$e) {
                                J$.Ex(1425, J$e);
                            } finally {
                                if (J$.Fr(1433))
                                    continue jalangiLabel564;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1129), patchedExec, 2));
            }
            J$.X1(1249, J$.P(1241, J$.R(1225, 'module', module, 2), 'exports', J$.R(1233, 'patchedExec', patchedExec, 1), 0));
        } catch (J$e) {
            J$.Ex(1449, J$e);
        } finally {
            if (J$.Sr(1457)) {
                J$.L();
                continue jalangiLabel565;
            } else {
                J$.L();
                break jalangiLabel565;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
