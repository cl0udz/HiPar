J$.iids = {"8":[8,10,8,39],"9":[1,16,1,23],"10":[8,10,8,23],"16":[8,10,8,59],"17":[1,24,1,48],"18":[8,43,8,59],"25":[1,16,1,49],"33":[1,16,1,49],"41":[1,16,1,49],"49":[3,13,3,17],"57":[3,13,3,23],"65":[3,13,3,23],"73":[3,13,3,23],"81":[7,1,7,7],"89":[8,11,8,19],"97":[8,20,8,22],"105":[8,11,8,23],"113":[8,27,8,35],"121":[8,36,8,38],"129":[8,27,8,39],"137":[8,43,8,48],"145":[8,49,8,51],"153":[8,43,8,52],"161":[8,57,8,59],"169":[8,10,8,59],"177":[8,3,8,60],"185":[7,18,9,2],"193":[7,18,9,2],"201":[7,18,9,2],"209":[7,18,9,2],"217":[7,18,9,2],"225":[7,1,9,2],"233":[7,1,9,3],"241":[1,1,9,3],"249":[1,1,9,3],"257":[1,1,9,3],"265":[7,18,9,2],"273":[7,18,9,2],"281":[1,1,9,3],"289":[1,1,9,3],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/is-integer.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/is-integer_jalangi_.js","code":"var isObject = require('../internals/is-object');\n\nvar floor = Math.floor;\n\n// `Number.isInteger` method implementation\n// https://tc39.github.io/ecma262/#sec-number.isinteger\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n"};
jalangiLabel439:
    while (true) {
        try {
            J$.Se(241, '/home/james/nodejs/HiPar/node_modules/core-js/internals/is-integer_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/is-integer.js');
            J$.N(249, 'isObject', isObject, 0);
            J$.N(257, 'floor', floor, 0);
            var isObject = J$.X1(41, J$.W(33, 'isObject', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/is-object', 21, false)), isObject, 3));
            var floor = J$.X1(73, J$.W(65, 'floor', J$.G(57, J$.R(49, 'Math', Math, 2), 'floor', 0), floor, 3));
            J$.X1(233, J$.P(225, J$.R(81, 'module', module, 2), 'exports', J$.T(217, function isInteger(it) {
                jalangiLabel438:
                    while (true) {
                        try {
                            J$.Fe(185, arguments.callee, this, arguments);
                            arguments = J$.N(193, 'arguments', arguments, 4);
                            isInteger = J$.N(201, 'isInteger', isInteger, 0);
                            it = J$.N(209, 'it', it, 4);
                            return J$.X1(177, J$.Rt(169, J$.C(16, J$.C(8, J$.U(10, '!', J$.F(105, J$.R(89, 'isObject', isObject, 1), 0)(J$.R(97, 'it', it, 0)))) ? J$.F(129, J$.R(113, 'isFinite', isFinite, 2), 0)(J$.R(121, 'it', it, 0)) : J$._()) ? J$.B(18, '===', J$.F(153, J$.R(137, 'floor', floor, 1), 0)(J$.R(145, 'it', it, 0)), J$.R(161, 'it', it, 0), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(265, J$e);
                        } finally {
                            if (J$.Fr(273))
                                continue jalangiLabel438;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 185), 0));
        } catch (J$e) {
            J$.Ex(281, J$e);
        } finally {
            if (J$.Sr(289)) {
                J$.L();
                continue jalangiLabel439;
            } else {
                J$.L();
                break jalangiLabel439;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
