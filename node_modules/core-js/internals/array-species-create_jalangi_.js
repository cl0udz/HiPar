J$.iids = {"8":[14,36,14,71],"9":[1,16,1,23],"10":[14,9,14,17],"16":[14,9,14,72],"17":[1,24,1,48],"18":[14,9,14,31],"24":[17,11,17,21],"25":[1,16,1,49],"26":[14,36,14,47],"32":[15,14,15,25],"33":[1,16,1,49],"34":[17,11,17,21],"40":[14,9,14,72],"41":[1,16,1,49],"42":[19,17,19,32],"48":[11,7,11,29],"49":[2,15,2,22],"50":[19,46,19,58],"56":[19,17,19,32],"57":[2,23,2,46],"64":[19,46,19,58],"65":[2,15,2,47],"73":[2,15,2,47],"81":[2,15,2,47],"89":[3,23,3,30],"97":[3,31,3,63],"105":[3,23,3,64],"113":[3,23,3,64],"121":[3,23,3,64],"129":[5,15,5,30],"137":[5,31,5,40],"145":[5,15,5,41],"153":[5,15,5,41],"161":[5,15,5,41],"169":[9,1,9,7],"177":[11,7,11,14],"185":[11,15,11,28],"193":[11,7,11,29],"201":[12,9,12,22],"209":[12,9,12,34],"217":[12,9,12,34],"225":[12,5,12,35],"233":[14,16,14,17],"241":[14,21,14,31],"249":[14,36,14,37],"257":[14,42,14,47],"265":[14,51,14,58],"273":[14,59,14,60],"281":[14,59,14,70],"289":[14,51,14,71],"297":[14,78,14,87],"305":[14,78,14,87],"313":[14,74,14,88],"321":[15,14,15,22],"329":[15,23,15,24],"337":[15,14,15,25],"345":[16,11,16,12],"353":[16,13,16,20],"361":[16,11,16,21],"369":[16,11,16,21],"377":[16,7,16,22],"385":[17,11,17,12],"393":[17,17,17,21],"401":[17,27,17,36],"409":[17,27,17,36],"417":[17,23,17,37],"425":[19,17,19,18],"433":[19,23,19,32],"441":[19,35,19,40],"449":[19,43,19,44],"457":[19,46,19,52],"465":[19,57,19,58],"473":[19,61,19,62],"481":[19,65,19,71],"489":[19,12,19,72],"497":[19,12,19,72],"505":[19,5,19,73],"513":[9,18,20,2],"521":[9,18,20,2],"529":[9,18,20,2],"537":[9,18,20,2],"545":[9,18,20,2],"553":[9,18,20,2],"561":[9,1,20,2],"569":[9,1,20,3],"577":[1,1,21,1],"585":[1,1,21,1],"593":[1,1,21,1],"601":[1,1,21,1],"609":[1,1,21,1],"617":[17,7,17,37],"625":[15,10,18,6],"633":[14,5,18,6],"641":[11,3,19,4],"649":[19,17,19,44],"657":[19,46,19,71],"665":[9,18,20,2],"673":[9,18,20,2],"681":[1,1,21,1],"689":[1,1,21,1],"nBranches":16,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/array-species-create.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/array-species-create_jalangi_.js","code":"var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n"};
jalangiLabel812:
    while (true) {
        try {
            J$.Se(577, '/home/james/nodejs/HiPar/node_modules/core-js/internals/array-species-create_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/array-species-create.js');
            J$.N(585, 'isObject', isObject, 0);
            J$.N(593, 'isArray', isArray, 0);
            J$.N(601, 'wellKnownSymbol', wellKnownSymbol, 0);
            J$.N(609, 'SPECIES', SPECIES, 0);
            var isObject = J$.X1(41, J$.W(33, 'isObject', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/is-object', 21, false)), isObject, 3));
            var isArray = J$.X1(81, J$.W(73, 'isArray', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/is-array', 21, false)), isArray, 3));
            var wellKnownSymbol = J$.X1(121, J$.W(113, 'wellKnownSymbol', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, '../internals/well-known-symbol', 21, false)), wellKnownSymbol, 3));
            var SPECIES = J$.X1(161, J$.W(153, 'SPECIES', J$.F(145, J$.R(129, 'wellKnownSymbol', wellKnownSymbol, 1), 0)(J$.T(137, 'species', 21, false)), SPECIES, 3));
            J$.X1(569, J$.P(561, J$.R(169, 'module', module, 2), 'exports', J$.T(553, function (originalArray, length) {
                jalangiLabel811:
                    while (true) {
                        try {
                            J$.Fe(513, arguments.callee, this, arguments);
                            arguments = J$.N(521, 'arguments', arguments, 4);
                            originalArray = J$.N(529, 'originalArray', originalArray, 4);
                            length = J$.N(537, 'length', length, 4);
                            J$.N(545, 'C', C, 0);
                            var C;
                            if (J$.X1(641, J$.C(48, J$.F(193, J$.R(177, 'isArray', isArray, 1), 0)(J$.R(185, 'originalArray', originalArray, 0))))) {
                                J$.X1(225, C = J$.W(217, 'C', J$.G(209, J$.R(201, 'originalArray', originalArray, 0), 'constructor', 0), C, 0));
                                if (J$.X1(633, J$.C(40, J$.C(16, J$.B(18, '==', J$.U(10, 'typeof', J$.R(233, 'C', C, 0)), J$.T(241, 'function', 21, false), 0)) ? J$.C(8, J$.B(26, '===', J$.R(249, 'C', C, 0), J$.R(257, 'Array', Array, 2), 0)) ? J$._() : J$.F(289, J$.R(265, 'isArray', isArray, 1), 0)(J$.G(281, J$.R(273, 'C', C, 0), 'prototype', 0)) : J$._())))
                                    J$.X1(313, C = J$.W(305, 'C', J$.T(297, undefined, 24, false), C, 0));
                                else if (J$.X1(625, J$.C(32, J$.F(337, J$.R(321, 'isObject', isObject, 1), 0)(J$.R(329, 'C', C, 0))))) {
                                    J$.X1(377, C = J$.W(369, 'C', J$.G(361, J$.R(345, 'C', C, 0), J$.R(353, 'SPECIES', SPECIES, 1), 4), C, 0));
                                    if (J$.X1(617, J$.C(24, J$.B(34, '===', J$.R(385, 'C', C, 0), J$.T(393, null, 25, false), 0))))
                                        J$.X1(417, C = J$.W(409, 'C', J$.T(401, undefined, 24, false), C, 0));
                                }
                            }
                            return J$.X1(505, J$.Rt(497, J$.F(489, J$.X1(649, J$.C(56, J$.B(42, '===', J$.R(425, 'C', C, 0), J$.T(433, undefined, 24, false), 0))) ? J$.R(441, 'Array', Array, 2) : J$.R(449, 'C', C, 0), 1)(J$.X1(657, J$.C(64, J$.B(50, '===', J$.R(457, 'length', length, 0), J$.T(465, 0, 22, false), 0))) ? J$.T(473, 0, 22, false) : J$.R(481, 'length', length, 0))));
                        } catch (J$e) {
                            J$.Ex(665, J$e);
                        } finally {
                            if (J$.Fr(673))
                                continue jalangiLabel811;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 513), 0));
        } catch (J$e) {
            J$.Ex(681, J$e);
        } finally {
            if (J$.Sr(689)) {
                J$.L();
                continue jalangiLabel812;
            } else {
                J$.L();
                break jalangiLabel812;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
