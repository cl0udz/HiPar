J$.iids = {"8":[13,7,13,33],"9":[1,1,1,13],"10":[13,37,13,58],"16":[13,7,13,58],"17":[1,1,1,14],"24":[13,7,13,58],"25":[2,18,2,25],"33":[2,26,2,53],"41":[2,18,2,54],"49":[2,18,2,54],"57":[2,18,2,54],"65":[3,28,3,35],"73":[3,36,3,73],"81":[3,28,3,74],"89":[3,28,3,74],"97":[3,28,3,74],"105":[4,23,4,30],"113":[4,31,4,63],"121":[4,23,4,64],"129":[4,23,4,64],"137":[4,23,4,64],"145":[5,19,5,26],"153":[5,27,5,53],"161":[5,19,5,54],"169":[5,19,5,54],"177":[5,19,5,54],"185":[7,15,7,30],"193":[7,31,7,40],"201":[7,15,7,41],"209":[7,15,7,41],"217":[7,15,7,41],"225":[9,1,9,7],"233":[10,21,10,31],"241":[10,32,10,48],"249":[10,21,10,49],"257":[10,21,10,49],"265":[10,21,10,49],"273":[11,24,11,44],"281":[11,24,11,46],"289":[11,24,11,46],"297":[11,24,11,46],"305":[13,7,13,18],"313":[13,22,13,33],"321":[13,38,13,49],"329":[13,50,13,57],"337":[13,38,13,58],"345":[14,5,14,19],"353":[14,20,14,31],"361":[14,33,14,40],"369":[15,21,15,25],"377":[16,33,16,37],"385":[16,33,16,37],"393":[16,26,16,38],"401":[16,12,16,40],"409":[16,12,16,40],"417":[16,12,16,40],"425":[14,42,17,6],"433":[14,5,17,7],"441":[14,5,17,8],"449":[9,18,19,2],"457":[9,18,19,2],"465":[9,18,19,2],"473":[9,18,19,2],"481":[9,18,19,2],"489":[9,18,19,2],"497":[9,1,19,2],"505":[9,1,19,3],"513":[1,1,20,1],"521":[1,1,20,1],"529":[1,1,20,1],"537":[1,1,20,1],"545":[1,1,20,1],"553":[1,1,20,1],"561":[16,12,16,40],"569":[16,12,16,40],"577":[13,3,18,4],"585":[9,18,19,2],"593":[9,18,19,2],"601":[1,1,20,1],"609":[1,1,20,1],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/set-species.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/set-species_jalangi_.js","code":"'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n"};
jalangiLabel917:
    while (true) {
        try {
            J$.Se(513, '/home/james/nodejs/HiPar/node_modules/core-js/internals/set-species_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/set-species.js');
            J$.N(521, 'getBuiltIn', getBuiltIn, 0);
            J$.N(529, 'definePropertyModule', definePropertyModule, 0);
            J$.N(537, 'wellKnownSymbol', wellKnownSymbol, 0);
            J$.N(545, 'DESCRIPTORS', DESCRIPTORS, 0);
            J$.N(553, 'SPECIES', SPECIES, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var getBuiltIn = J$.X1(57, J$.W(49, 'getBuiltIn', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/get-built-in', 21, false)), getBuiltIn, 3));
            var definePropertyModule = J$.X1(97, J$.W(89, 'definePropertyModule', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/object-define-property', 21, false)), definePropertyModule, 3));
            var wellKnownSymbol = J$.X1(137, J$.W(129, 'wellKnownSymbol', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/well-known-symbol', 21, false)), wellKnownSymbol, 3));
            var DESCRIPTORS = J$.X1(177, J$.W(169, 'DESCRIPTORS', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/descriptors', 21, false)), DESCRIPTORS, 3));
            var SPECIES = J$.X1(217, J$.W(209, 'SPECIES', J$.F(201, J$.R(185, 'wellKnownSymbol', wellKnownSymbol, 1), 0)(J$.T(193, 'species', 21, false)), SPECIES, 3));
            J$.X1(505, J$.P(497, J$.R(225, 'module', module, 2), 'exports', J$.T(489, function (CONSTRUCTOR_NAME) {
                jalangiLabel916:
                    while (true) {
                        try {
                            J$.Fe(449, arguments.callee, this, arguments);
                            arguments = J$.N(457, 'arguments', arguments, 4);
                            CONSTRUCTOR_NAME = J$.N(465, 'CONSTRUCTOR_NAME', CONSTRUCTOR_NAME, 4);
                            J$.N(473, 'Constructor', Constructor, 0);
                            J$.N(481, 'defineProperty', defineProperty, 0);
                            var Constructor = J$.X1(265, J$.W(257, 'Constructor', J$.F(249, J$.R(233, 'getBuiltIn', getBuiltIn, 1), 0)(J$.R(241, 'CONSTRUCTOR_NAME', CONSTRUCTOR_NAME, 0)), Constructor, 1));
                            var defineProperty = J$.X1(297, J$.W(289, 'defineProperty', J$.G(281, J$.R(273, 'definePropertyModule', definePropertyModule, 1), 'f', 0), defineProperty, 1));
                            if (J$.X1(577, J$.C(24, J$.C(16, J$.C(8, J$.R(305, 'DESCRIPTORS', DESCRIPTORS, 1)) ? J$.R(313, 'Constructor', Constructor, 0) : J$._()) ? J$.U(10, '!', J$.G(337, J$.R(321, 'Constructor', Constructor, 0), J$.R(329, 'SPECIES', SPECIES, 1), 4)) : J$._()))) {
                                J$.X1(441, J$.F(433, J$.R(345, 'defineProperty', defineProperty, 0), 0)(J$.R(353, 'Constructor', Constructor, 0), J$.R(361, 'SPECIES', SPECIES, 1), J$.T(425, {
                                    configurable: J$.T(369, true, 23, false),
                                    get: J$.T(417, function () {
                                        jalangiLabel915:
                                            while (true) {
                                                try {
                                                    J$.Fe(401, arguments.callee, this, arguments);
                                                    arguments = J$.N(409, 'arguments', arguments, 4);
                                                    return J$.X1(393, J$.Rt(385, J$.R(377, 'this', this, 0)));
                                                } catch (J$e) {
                                                    J$.Ex(561, J$e);
                                                } finally {
                                                    if (J$.Fr(569))
                                                        continue jalangiLabel915;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 401)
                                }, 11, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(585, J$e);
                        } finally {
                            if (J$.Fr(593))
                                continue jalangiLabel916;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 449), 0));
        } catch (J$e) {
            J$.Ex(601, J$e);
        } finally {
            if (J$.Sr(609)) {
                J$.L();
                continue jalangiLabel917;
            } else {
                J$.L();
                break jalangiLabel917;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
