J$.iids = {"8":[12,7,12,33],"9":[1,18,1,25],"10":[12,37,12,58],"16":[12,7,12,58],"17":[1,26,1,53],"24":[12,7,12,58],"25":[1,18,1,54],"33":[1,18,1,54],"41":[1,18,1,54],"49":[2,28,2,35],"57":[2,36,2,73],"65":[2,28,2,74],"73":[2,28,2,74],"81":[2,28,2,74],"89":[3,23,3,30],"97":[3,31,3,63],"105":[3,23,3,64],"113":[3,23,3,64],"121":[3,23,3,64],"129":[4,19,4,26],"137":[4,27,4,53],"145":[4,19,4,54],"153":[4,19,4,54],"161":[4,19,4,54],"169":[6,15,6,30],"177":[6,31,6,40],"185":[6,15,6,41],"193":[6,15,6,41],"201":[6,15,6,41],"209":[8,1,8,7],"217":[9,21,9,31],"225":[9,32,9,48],"233":[9,21,9,49],"241":[9,21,9,49],"249":[9,21,9,49],"257":[10,24,10,44],"265":[10,24,10,46],"273":[10,24,10,46],"281":[10,24,10,46],"289":[12,7,12,18],"297":[12,22,12,33],"305":[12,38,12,49],"313":[12,50,12,57],"321":[12,38,12,58],"329":[13,5,13,19],"337":[13,20,13,31],"345":[13,33,13,40],"353":[14,21,14,25],"361":[15,35,15,39],"369":[15,35,15,39],"377":[15,28,15,40],"385":[15,12,15,41],"393":[15,12,15,41],"401":[15,12,15,41],"409":[15,12,15,41],"417":[13,42,15,43],"425":[13,5,15,44],"433":[13,5,15,45],"441":[8,18,18,2],"449":[8,18,18,2],"457":[8,18,18,2],"465":[8,18,18,2],"473":[8,18,18,2],"481":[8,18,18,2],"489":[8,1,18,2],"497":[8,1,18,3],"505":[1,1,18,3],"513":[1,1,18,3],"521":[1,1,18,3],"529":[1,1,18,3],"537":[1,1,18,3],"545":[1,1,18,3],"553":[15,12,15,41],"561":[15,12,15,41],"569":[12,3,17,4],"577":[8,18,18,2],"585":[8,18,18,2],"593":[1,1,18,3],"601":[1,1,18,3],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/set-species.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/set-species_jalangi_.js","code":"'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n"};
jalangiLabel504:
    while (true) {
        try {
            J$.Se(505, '/home/james/nodejs/HiPar/node_modules/core-js/internals/set-species_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/set-species.js');
            J$.N(513, 'getBuiltIn', getBuiltIn, 0);
            J$.N(521, 'definePropertyModule', definePropertyModule, 0);
            J$.N(529, 'wellKnownSymbol', wellKnownSymbol, 0);
            J$.N(537, 'DESCRIPTORS', DESCRIPTORS, 0);
            J$.N(545, 'SPECIES', SPECIES, 0);
            var getBuiltIn = J$.X1(41, J$.W(33, 'getBuiltIn', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/get-built-in', 21, false)), getBuiltIn, 3));
            var definePropertyModule = J$.X1(81, J$.W(73, 'definePropertyModule', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/object-define-property', 21, false)), definePropertyModule, 3));
            var wellKnownSymbol = J$.X1(121, J$.W(113, 'wellKnownSymbol', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, '../internals/well-known-symbol', 21, false)), wellKnownSymbol, 3));
            var DESCRIPTORS = J$.X1(161, J$.W(153, 'DESCRIPTORS', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../internals/descriptors', 21, false)), DESCRIPTORS, 3));
            var SPECIES = J$.X1(201, J$.W(193, 'SPECIES', J$.F(185, J$.R(169, 'wellKnownSymbol', wellKnownSymbol, 1), 0)(J$.T(177, 'species', 21, false)), SPECIES, 3));
            J$.X1(497, J$.P(489, J$.R(209, 'module', module, 2), 'exports', J$.T(481, function (CONSTRUCTOR_NAME) {
                jalangiLabel503:
                    while (true) {
                        try {
                            J$.Fe(441, arguments.callee, this, arguments);
                            arguments = J$.N(449, 'arguments', arguments, 4);
                            CONSTRUCTOR_NAME = J$.N(457, 'CONSTRUCTOR_NAME', CONSTRUCTOR_NAME, 4);
                            J$.N(465, 'Constructor', Constructor, 0);
                            J$.N(473, 'defineProperty', defineProperty, 0);
                            var Constructor = J$.X1(249, J$.W(241, 'Constructor', J$.F(233, J$.R(217, 'getBuiltIn', getBuiltIn, 1), 0)(J$.R(225, 'CONSTRUCTOR_NAME', CONSTRUCTOR_NAME, 0)), Constructor, 1));
                            var defineProperty = J$.X1(281, J$.W(273, 'defineProperty', J$.G(265, J$.R(257, 'definePropertyModule', definePropertyModule, 1), 'f', 0), defineProperty, 1));
                            if (J$.X1(569, J$.C(24, J$.C(16, J$.C(8, J$.R(289, 'DESCRIPTORS', DESCRIPTORS, 1)) ? J$.R(297, 'Constructor', Constructor, 0) : J$._()) ? J$.U(10, '!', J$.G(321, J$.R(305, 'Constructor', Constructor, 0), J$.R(313, 'SPECIES', SPECIES, 1), 4)) : J$._()))) {
                                J$.X1(433, J$.F(425, J$.R(329, 'defineProperty', defineProperty, 0), 0)(J$.R(337, 'Constructor', Constructor, 0), J$.R(345, 'SPECIES', SPECIES, 1), J$.T(417, {
                                    configurable: J$.T(353, true, 23, false),
                                    get: J$.T(409, function get() {
                                        jalangiLabel502:
                                            while (true) {
                                                try {
                                                    J$.Fe(385, arguments.callee, this, arguments);
                                                    arguments = J$.N(393, 'arguments', arguments, 4);
                                                    get = J$.N(401, 'get', get, 0);
                                                    return J$.X1(377, J$.Rt(369, J$.R(361, 'this', this, 0)));
                                                } catch (J$e) {
                                                    J$.Ex(553, J$e);
                                                } finally {
                                                    if (J$.Fr(561))
                                                        continue jalangiLabel502;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 385)
                                }, 11, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(577, J$e);
                        } finally {
                            if (J$.Fr(585))
                                continue jalangiLabel503;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 441), 0));
        } catch (J$e) {
            J$.Ex(593, J$e);
        } finally {
            if (J$.Sr(601)) {
                J$.L();
                continue jalangiLabel504;
            } else {
                J$.L();
                break jalangiLabel504;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
