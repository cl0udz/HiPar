J$.iids = {"8":[11,18,11,47],"9":[1,15,1,22],"10":[11,18,11,47],"17":[1,23,1,45],"18":[12,10,12,36],"25":[1,15,1,46],"26":[12,10,12,42],"33":[1,15,1,46],"41":[1,15,1,46],"49":[2,23,2,30],"57":[2,31,2,63],"65":[2,23,2,64],"73":[2,23,2,64],"81":[2,23,2,64],"89":[4,21,4,36],"97":[4,37,4,50],"105":[4,21,4,51],"113":[4,21,4,51],"121":[4,21,4,51],"129":[5,12,5,14],"137":[5,12,5,14],"145":[5,12,5,14],"153":[7,1,7,5],"161":[7,6,7,19],"169":[7,23,7,26],"177":[7,1,7,26],"185":[7,1,7,27],"193":[11,1,11,7],"201":[11,18,11,24],"209":[11,25,11,29],"217":[11,18,11,30],"225":[11,35,11,47],"233":[12,10,12,20],"241":[12,23,12,30],"249":[12,31,12,35],"257":[12,23,12,36],"265":[12,39,12,42],"273":[12,10,12,42],"281":[12,3,12,43],"289":[11,50,13,2],"297":[11,50,13,2],"305":[11,50,13,2],"313":[11,50,13,2],"321":[13,5,13,9],"329":[13,5,13,18],"337":[11,1,13,18],"345":[11,1,13,19],"353":[1,1,13,19],"361":[1,1,13,19],"369":[1,1,13,19],"377":[1,1,13,19],"385":[1,1,13,19],"393":[11,50,13,2],"401":[11,50,13,2],"409":[11,18,13,18],"417":[1,1,13,19],"425":[1,1,13,19],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/object-to-string.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/internals/object-to-string_jalangi_.js","code":"'use strict';\nvar classof = require('../internals/classof');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = String(test) !== '[object z]' ? function toString() {\n  return '[object ' + classof(this) + ']';\n} : test.toString;\n"};
jalangiLabel453:
    while (true) {
        try {
            J$.Se(353, '/home/james/nodejs/HiPar/node_modules/core-js/internals/object-to-string_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/internals/object-to-string.js');
            J$.N(361, 'classof', classof, 0);
            J$.N(369, 'wellKnownSymbol', wellKnownSymbol, 0);
            J$.N(377, 'TO_STRING_TAG', TO_STRING_TAG, 0);
            J$.N(385, 'test', test, 0);
            var classof = J$.X1(41, J$.W(33, 'classof', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/classof', 21, false)), classof, 3));
            var wellKnownSymbol = J$.X1(81, J$.W(73, 'wellKnownSymbol', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/well-known-symbol', 21, false)), wellKnownSymbol, 3));
            var TO_STRING_TAG = J$.X1(121, J$.W(113, 'TO_STRING_TAG', J$.F(105, J$.R(89, 'wellKnownSymbol', wellKnownSymbol, 1), 0)(J$.T(97, 'toStringTag', 21, false)), TO_STRING_TAG, 3));
            var test = J$.X1(145, J$.W(137, 'test', J$.T(129, {}, 11, false), test, 3));
            J$.X1(185, J$.P(177, J$.R(153, 'test', test, 1), J$.R(161, 'TO_STRING_TAG', TO_STRING_TAG, 1), J$.T(169, 'z', 21, false), 2));
            J$.X1(345, J$.P(337, J$.R(193, 'module', module, 2), 'exports', J$.X1(409, J$.C(8, J$.B(10, '!==', J$.F(217, J$.R(201, 'String', String, 2), 0)(J$.R(209, 'test', test, 1)), J$.T(225, '[object z]', 21, false), 0))) ? J$.T(313, function toString() {
                jalangiLabel452:
                    while (true) {
                        try {
                            J$.Fe(289, arguments.callee, this, arguments);
                            arguments = J$.N(297, 'arguments', arguments, 4);
                            toString = J$.N(305, 'toString', toString, 0);
                            return J$.X1(281, J$.Rt(273, J$.B(26, '+', J$.B(18, '+', J$.T(233, '[object ', 21, false), J$.F(257, J$.R(241, 'classof', classof, 1), 0)(J$.R(249, 'this', this, 0)), 0), J$.T(265, ']', 21, false), 0)));
                        } catch (J$e) {
                            J$.Ex(393, J$e);
                        } finally {
                            if (J$.Fr(401))
                                continue jalangiLabel452;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 289) : J$.G(329, J$.R(321, 'test', test, 1), 'toString', 0), 0));
        } catch (J$e) {
            J$.Ex(417, J$e);
        } finally {
            if (J$.Sr(425)) {
                J$.L();
                continue jalangiLabel453;
            } else {
                J$.L();
                break jalangiLabel453;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
