"use strict";

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.define-property");

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var test = require('tape'),
    binary = require('../index');

test('read works as expected', function (assert) {
  var _tests;

  var tests = (_tests = {
    readUInt8: [binary.from([16]), 16],
    readInt8: [binary.from([16]), 16]
  }, _defineProperty(_tests, "readInt8", [binary.from([0xff]), -1]), _defineProperty(_tests, "readInt8", [binary.from([0x80]), -128]), _defineProperty(_tests, "readUInt16LE", [binary.from([0xCF, 0xAF]), 45007]), _defineProperty(_tests, "readUInt32LE", [binary.from([0xAF, 0, 0, 0xCF]), 3472883887]), _defineProperty(_tests, "readInt16LE", [binary.from([0xCF, 0xAF]), -20529]), _defineProperty(_tests, "readInt32LE", [binary.from([0xCF, 0, 0, 0xCF]), -822083377]), _defineProperty(_tests, "readFloatLE", [binary.from([0xCF, 0xAF, 0xDA, 0x02]), 3.213313024388152e-37]), _defineProperty(_tests, "readDoubleLE", [binary.from([0xcf, 0xaf, 0xda, 0x02, 0x00, 0x01, 0x2f, 0x44]), 285960563508654870000]), _defineProperty(_tests, "readUInt16BE", [binary.from([0xCF, 0xAF]), 53167]), _defineProperty(_tests, "readUInt32BE", [binary.from([0xAF, 0, 0, 0xCF]), 2936013007]), _defineProperty(_tests, "readInt16BE", [binary.from([0xCF, 0xAF]), -12369]), _defineProperty(_tests, "readInt32BE", [binary.from([0xAF, 0, 0, 0xCF]), -1358954289]), _defineProperty(_tests, "readFloatBE", [binary.from([0xCF, 0xAF, 0xDA, 0x02]), -5900600320]), _defineProperty(_tests, "readDoubleBE", [binary.from([0xcf, 0xaf, 0xda, 0x02, 0x00, 0x01, 0x2f, 0x44]), -7.203442384910198e+75]), _tests);

  for (var key in tests) {
    var buf = tests[key][0],
        expect = tests[key][1];
    assert.equal(binary[key](buf, 0), expect);
  }

  assert.end();
});