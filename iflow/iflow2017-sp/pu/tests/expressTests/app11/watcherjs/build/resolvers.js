/*
watcher.js 2.5.3- app watcher
Built on 2015-10-20
*/
"use strict";var events=require("events"),_=require("underscore"),stampit=require("stampit"),constants=require("./constants"),logger=require("./logger"),utils=require("./utils"),eventDispatcher=utils.eventDispatcher,up=constants.serviceStatus.up,undetermined=constants.serviceStatus.undetermined,resolvedEv=constants.resolverEvents.resolved,resolutionStrategy,resolutionStrategyFactory,statusResolver,statusResolverFactory,onConnectionResolution,onConnectionResolutionFactory;resolutionStrategy=stampit().state({_data:void 0}).methods({reset:function(){this._data=void 0},resolveOnConnection:function(a){return void 0},resolveOnConversation:function(a,b){return _.isUndefined(this._data)&&(this._data=""),logger.debug("chunk received from server..."),this._data+=b,up},resolveNow:function(){logger.debug("Forcing status resolution...");var a=void 0;return _.isUndefined(this._data)||(a=up),a}}),resolutionStrategyFactory={create:function(){return resolutionStrategy.create()}},statusResolver=stampit.compose(eventDispatcher,stampit().state({_resolved:!1}).methods({reset:function(){this._resolved=!1,this.resolutionStrategy.reset()},consumeAndResolve:function(a,b){var c=void 0;return c=_.isUndefined(b)?this.resolutionStrategy.resolveOnConnection(a):this.resolutionStrategy.resolveOnConversation(a,b),_.isUndefined(c)||this.resolved(c),c},resolved:function(a){this._resolved||(_.isUndefined(a)&&(a=this.resolutionStrategy.resolveNow(),_.isUndefined(a)&&(logger.warn("Resolver failed to determine the status"),a=undetermined)),logger.debug("Resolved as: "+a),this._resolved=!0,this.emit(resolvedEv,a))}})),statusResolverFactory={create:function(a){a=a||resolutionStrategyFactory.create();var b={resolutionStrategy:a,emitter:new events.EventEmitter};return statusResolver.create(b)}},onConnectionResolution=stampit.compose(resolutionStrategy,stampit().methods({resolveOnConnection:function(a){return up}})),onConnectionResolutionFactory={create:function(){return onConnectionResolution.create()}},module.exports={resolutionStrategyFactory:resolutionStrategyFactory,statusResolverFactory:statusResolverFactory,onConnectionResolutionFactory:onConnectionResolutionFactory};