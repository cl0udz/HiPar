import { BasePipe } from './base';


export class ModPipe extends BasePipe {
    constructor() {
        super(...arguments);
    }

    mtime(file) {
        return file.source.mtime;
    }

    rename(name) {
        return name;
    }

    remoteAdd(file) {
        const renamed = this.rename(file.name);
        return this.fileAdd(renamed).then(addFile => {
            file.addCount += !!addFile.addCount;
            addFile.sources.push(file.name);
        });
    }

    remoteChange(file) {
        const renamed = this.rename(file.name);
        return this.fileChange(renamed);
    }

    remoteUnlink(file) {
        const renamed = this.rename(file.name);
        file.addCount -= !!this.state.localFiles[renamed].addCount;
        return this.fileUnlink(renamed);
    }
}
