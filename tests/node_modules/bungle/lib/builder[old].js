import { Runner } from './runner';

export class Builder {
    constructor() {
        this.bungle = {};
        this.pipes = {};
        this.runner = new Runner;
    }

    pipe(type, meta) {
        const pipes = Object.values(this.pipes).filter(p => p.type === type);
        const name = `${type}-${pipes.length}`;

        meta.name = name;
        meta.type = type;
        meta.inputs = [];
        this.pipes[name] = meta;

        return {
            meta: meta,
            to: function(next) {
                next.meta.inputs.push(this.meta.name);
                return next;
            }
        };
    }

    run() {
        for (let meta of Object.values(this.pipes)) {
            delete meta.name;
        }
        return this.runner.run({
            bungle: this.bungle,
            pipes: this.pipes
        });
    }
}
