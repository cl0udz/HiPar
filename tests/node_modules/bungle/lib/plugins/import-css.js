import path from 'path';
import { InputNamesPipe } from '../pipe';


export default class ExtPipe extends InputNamesPipe {
    constructor() {
        super(...arguments);

        this.defaultConfig({
            pattern: '**/*.{s,}css'
        });

        this.dir = path.dirname(this.config.filename);
    }

    static schema() {
        return {
            description:
                'Create style file that automatically imports other styles.',
            properties: {
                filename: {
                    description: 'Filename of the compiled module',
                    type: 'string'
                }
            },
            required: ['filename']
        };
    }

    async generate(/*file*/) {
        if (this.config.debug) {
            this.log('debug', '#C# ' + this.config.filename);
        }

        const sorted = Object.keys(this.state.remoteFiles)
            .sort()
            .map(name => path.relative(this.dir, name));
        return sorted.map(s => `@import '${s}';`).join('\n');
    }
}
