/* module to link heads to all parents */
module.exports = function(commits) {

	Object.keys(commits).forEach(function(hash) {
		var commit = commits[hash];
		commit.inHeads = {};
	})

	Object.keys(commits).forEach(function(hash) {
		var commit = commits[hash];
		if(commit.refnames.length > 0) {
			assignHeads(commits, commit);
		}
	})

	// Make it unique
	Object.keys(commits).forEach(function(hash) {
		var commit = commits[hash];
		commit.inHeads = Object.keys(commit.inHeads);
	})
}

function assignHeads(commits, commit) {
	var parents1 = commit.parenthashes.map(function(x) {
		return x;
	}); // copy array

	var _all = commits;

	while (parents1.length > 0) {
		var newParents = [];
		parents1.forEach(function(parentHash) {
			var p = _all[parentHash];
			if (p != undefined) {
				p.inHeads[commit.sha] = 1;
				// add all grandparents to the newparents
				p.parenthashes.forEach(function(h) {
					if (newParents.indexOf(h) === -1) {
						newParents.push(h);
					}
				})
			}
		});
		parents1 = newParents
	}
}
