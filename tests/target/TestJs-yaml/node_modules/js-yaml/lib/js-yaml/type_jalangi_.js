J$.iids = {"8":[25,7,25,19],"9":[1,1,1,13],"10":[25,7,25,19],"16":[37,13,37,26],"17":[1,1,1,14],"18":[40,52,40,54],"24":[40,9,40,54],"25":[3,21,3,28],"26":[40,9,40,54],"32":[47,23,47,54],"33":[3,29,3,42],"34":[41,31,41,56],"40":[48,23,48,78],"41":[3,21,3,43],"42":[41,31,41,88],"48":[49,23,49,82],"49":[3,21,3,43],"50":[41,31,41,94],"56":[50,23,50,54],"57":[3,21,3,43],"58":[41,31,41,111],"64":[51,23,51,54],"65":[6,3,6,9],"66":[56,46,56,48],"72":[52,23,52,54],"73":[7,3,7,12],"74":[56,7,56,48],"80":[53,23,53,54],"81":[8,3,8,14],"82":[57,29,57,57],"88":[54,43,54,74],"89":[9,3,9,15],"90":[57,29,57,82],"96":[56,7,56,48],"97":[10,3,10,14],"98":[57,29,57,88],"105":[11,3,11,14],"106":[57,29,57,105],"113":[12,3,12,17],"121":[13,3,13,17],"129":[5,32,14,2],"137":[5,32,14,2],"145":[5,32,14,2],"153":[17,3,17,11],"161":[18,3,18,13],"169":[19,3,19,12],"177":[16,23,20,2],"185":[16,23,20,2],"193":[16,23,20,2],"201":[23,16,23,18],"209":[23,16,23,18],"217":[23,16,23,18],"225":[25,7,25,10],"233":[25,15,25,19],"241":[26,5,26,11],"249":[26,17,26,20],"257":[26,5,26,21],"259":[26,5,26,16],"265":[27,7,27,10],"273":[27,11,27,16],"281":[27,7,27,17],"289":[28,9,28,15],"297":[28,16,28,22],"305":[28,23,28,28],"313":[28,16,28,29],"321":[28,33,28,38],"329":[28,9,28,38],"337":[28,9,28,39],"345":[27,26,29,8],"353":[27,26,29,8],"361":[27,26,29,8],"369":[27,26,29,8],"377":[27,7,29,9],"379":[27,7,27,25],"385":[27,7,29,10],"393":[26,30,30,6],"401":[26,30,30,6],"409":[26,30,30,6],"417":[26,30,30,6],"425":[26,5,30,7],"427":[26,5,26,29],"433":[26,5,30,8],"441":[33,10,33,16],"449":[33,10,33,16],"457":[33,3,33,17],"465":[22,1,34,2],"473":[22,1,34,2],"481":[22,1,34,2],"489":[22,1,34,2],"497":[37,13,37,20],"505":[37,24,37,26],"513":[37,13,37,26],"521":[37,3,37,27],"529":[39,3,39,9],"537":[39,15,39,22],"545":[39,3,39,23],"547":[39,3,39,14],"553":[40,9,40,33],"561":[40,42,40,46],"569":[40,9,40,47],"571":[40,9,40,41],"577":[40,53,40,54],"585":[41,17,41,30],"593":[41,31,41,49],"601":[41,52,41,56],"609":[41,59,41,88],"617":[41,91,41,94],"625":[41,97,41,111],"633":[41,13,41,112],"641":[41,13,41,112],"649":[41,7,41,113],"657":[39,32,43,4],"665":[39,32,43,4],"673":[39,32,43,4],"681":[39,32,43,4],"689":[39,3,43,5],"691":[39,3,39,31],"697":[39,3,43,6],"705":[46,3,46,7],"713":[46,23,46,26],"721":[46,3,46,26],"729":[46,3,46,27],"737":[47,3,47,7],"745":[47,23,47,30],"753":[47,31,47,37],"761":[47,23,47,38],"769":[47,50,47,54],"777":[47,3,47,54],"785":[47,3,47,55],"793":[48,3,48,7],"801":[48,23,48,30],"809":[48,31,48,40],"817":[48,23,48,41],"825":[48,71,48,75],"833":[48,71,48,75],"841":[48,64,48,76],"849":[48,50,48,78],"857":[48,50,48,78],"865":[48,50,48,78],"873":[48,3,48,78],"881":[48,3,48,79],"889":[49,3,49,7],"897":[49,23,49,30],"905":[49,31,49,42],"913":[49,23,49,43],"921":[49,75,49,79],"929":[49,75,49,79],"937":[49,68,49,80],"945":[49,50,49,82],"953":[49,50,49,82],"961":[49,50,49,82],"969":[49,50,49,82],"977":[49,3,49,82],"985":[49,3,49,83],"993":[50,3,50,7],"1001":[50,23,50,30],"1009":[50,31,50,43],"1017":[50,23,50,44],"1025":[50,50,50,54],"1033":[50,3,50,54],"1041":[50,3,50,55],"1049":[51,3,51,7],"1057":[51,23,51,30],"1065":[51,31,51,42],"1073":[51,23,51,43],"1081":[51,50,51,54],"1089":[51,3,51,54],"1097":[51,3,51,55],"1105":[52,3,52,7],"1113":[52,23,52,30],"1121":[52,31,52,42],"1129":[52,23,52,43],"1137":[52,50,52,54],"1145":[52,3,52,54],"1153":[52,3,52,55],"1161":[53,3,53,7],"1169":[53,23,53,30],"1177":[53,31,53,45],"1185":[53,23,53,46],"1193":[53,50,53,54],"1201":[53,3,53,54],"1209":[53,3,53,55],"1217":[54,3,54,7],"1225":[54,23,54,42],"1233":[54,43,54,50],"1241":[54,51,54,65],"1249":[54,43,54,66],"1257":[54,70,54,74],"1265":[54,23,54,75],"1273":[54,3,54,75],"1281":[54,3,54,76],"1289":[56,7,56,22],"1297":[56,31,56,35],"1305":[56,31,56,40],"1313":[56,7,56,41],"1315":[56,7,56,30],"1321":[56,47,56,48],"1329":[57,15,57,28],"1337":[57,29,57,45],"1345":[57,48,57,52],"1353":[57,48,57,57],"1361":[57,60,57,82],"1369":[57,85,57,88],"1377":[57,91,57,105],"1385":[57,11,57,106],"1393":[57,11,57,106],"1401":[57,5,57,107],"1409":[36,1,59,2],"1417":[36,1,59,2],"1425":[36,1,59,2],"1433":[36,1,59,2],"1441":[61,1,61,7],"1449":[61,18,61,22],"1457":[61,1,61,22],"1465":[61,1,61,23],"1473":[1,1,62,1],"1481":[1,1,62,1],"1489":[1,1,62,1],"1497":[1,1,62,1],"1505":[22,1,34,2],"1513":[1,1,62,1],"1521":[36,1,59,2],"1529":[1,1,62,1],"1537":[27,26,29,8],"1545":[27,26,29,8],"1553":[26,30,30,6],"1561":[26,30,30,6],"1569":[25,3,31,4],"1577":[22,1,34,2],"1585":[22,1,34,2],"1593":[40,5,42,6],"1601":[39,32,43,4],"1609":[39,32,43,4],"1617":[48,50,48,78],"1625":[48,50,48,78],"1633":[49,50,49,82],"1641":[49,50,49,82],"1649":[56,3,58,4],"1657":[36,1,59,2],"1665":[36,1,59,2],"1673":[1,1,62,1],"1681":[1,1,62,1],"nBranches":24,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type_jalangi_.js","code":"'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n"};
jalangiLabel82:
    while (true) {
        try {
            J$.Se(1473, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type.js');
            function compileStyleAliases(map) {
                jalangiLabel77:
                    while (true) {
                        try {
                            J$.Fe(465, arguments.callee, this, arguments);
                            arguments = J$.N(473, 'arguments', arguments, 4);
                            map = J$.N(481, 'map', map, 4);
                            J$.N(489, 'result', result, 0);
                            var result = J$.X1(217, J$.W(209, 'result', J$.T(201, {}, 11, false), result, 1));
                            if (J$.X1(1569, J$.C(8, J$.B(10, '!==', J$.R(225, 'map', map, 0), J$.T(233, null, 25, false), 0)))) {
                                J$.X1(433, J$.M(425, J$.M(257, J$.R(241, 'Object', Object, 2), 'keys', 0)(J$.R(249, 'map', map, 0)), 'forEach', 0)(J$.T(417, function (style) {
                                    jalangiLabel76:
                                        while (true) {
                                            try {
                                                J$.Fe(393, arguments.callee, this, arguments);
                                                arguments = J$.N(401, 'arguments', arguments, 4);
                                                style = J$.N(409, 'style', style, 4);
                                                J$.X1(385, J$.M(377, J$.G(281, J$.R(265, 'map', map, 0), J$.R(273, 'style', style, 0), 4), 'forEach', 0)(J$.T(369, function (alias) {
                                                    jalangiLabel75:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(345, arguments.callee, this, arguments);
                                                                arguments = J$.N(353, 'arguments', arguments, 4);
                                                                alias = J$.N(361, 'alias', alias, 4);
                                                                J$.X1(337, J$.P(329, J$.R(289, 'result', result, 0), J$.F(313, J$.R(297, 'String', String, 2), 0)(J$.R(305, 'alias', alias, 0)), J$.R(321, 'style', style, 0), 2));
                                                            } catch (J$e) {
                                                                J$.Ex(1537, J$e);
                                                            } finally {
                                                                if (J$.Fr(1545))
                                                                    continue jalangiLabel75;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 345)));
                                            } catch (J$e) {
                                                J$.Ex(1553, J$e);
                                            } finally {
                                                if (J$.Fr(1561))
                                                    continue jalangiLabel76;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 393)));
                            }
                            return J$.X1(457, J$.Rt(449, J$.R(441, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(1577, J$e);
                        } finally {
                            if (J$.Fr(1585))
                                continue jalangiLabel77;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Type(tag, options) {
                jalangiLabel81:
                    while (true) {
                        try {
                            J$.Fe(1409, arguments.callee, this, arguments);
                            arguments = J$.N(1417, 'arguments', arguments, 4);
                            tag = J$.N(1425, 'tag', tag, 4);
                            options = J$.N(1433, 'options', options, 4);
                            J$.X1(521, options = J$.W(513, 'options', J$.C(16, J$.R(497, 'options', options, 0)) ? J$._() : J$.T(505, {}, 11, false), options, 0));
                            J$.X1(697, J$.M(689, J$.M(545, J$.R(529, 'Object', Object, 2), 'keys', 0)(J$.R(537, 'options', options, 0)), 'forEach', 0)(J$.T(681, function (name) {
                                jalangiLabel78:
                                    while (true) {
                                        try {
                                            J$.Fe(657, arguments.callee, this, arguments);
                                            arguments = J$.N(665, 'arguments', arguments, 4);
                                            name = J$.N(673, 'name', name, 4);
                                            if (J$.X1(1593, J$.C(24, J$.B(26, '===', J$.M(569, J$.R(553, 'TYPE_CONSTRUCTOR_OPTIONS', TYPE_CONSTRUCTOR_OPTIONS, 1), 'indexOf', 0)(J$.R(561, 'name', name, 0)), J$.U(18, '-', J$.T(577, 1, 22, false)), 0)))) {
                                                throw J$.X1(649, J$.Th(641, J$.F(633, J$.R(585, 'YAMLException', YAMLException, 1), 1)(J$.B(58, '+', J$.B(50, '+', J$.B(42, '+', J$.B(34, '+', J$.T(593, 'Unknown option "', 21, false), J$.R(601, 'name', name, 0), 0), J$.T(609, '" is met in definition of "', 21, false), 0), J$.R(617, 'tag', tag, 0), 0), J$.T(625, '" YAML type.', 21, false), 0))));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1601, J$e);
                                        } finally {
                                            if (J$.Fr(1609))
                                                continue jalangiLabel78;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 657)));
                            J$.X1(729, J$.P(721, J$.R(705, 'this', this, 0), 'tag', J$.R(713, 'tag', tag, 0), 0));
                            J$.X1(785, J$.P(777, J$.R(737, 'this', this, 0), 'kind', J$.C(32, J$.G(761, J$.R(745, 'options', options, 0), J$.T(753, 'kind', 21, false), 4)) ? J$._() : J$.T(769, null, 25, false), 0));
                            J$.X1(881, J$.P(873, J$.R(793, 'this', this, 0), 'resolve', J$.C(40, J$.G(817, J$.R(801, 'options', options, 0), J$.T(809, 'resolve', 21, false), 4)) ? J$._() : J$.T(865, function () {
                                jalangiLabel79:
                                    while (true) {
                                        try {
                                            J$.Fe(849, arguments.callee, this, arguments);
                                            arguments = J$.N(857, 'arguments', arguments, 4);
                                            return J$.X1(841, J$.Rt(833, J$.T(825, true, 23, false)));
                                        } catch (J$e) {
                                            J$.Ex(1617, J$e);
                                        } finally {
                                            if (J$.Fr(1625))
                                                continue jalangiLabel79;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 849), 0));
                            J$.X1(985, J$.P(977, J$.R(889, 'this', this, 0), 'construct', J$.C(48, J$.G(913, J$.R(897, 'options', options, 0), J$.T(905, 'construct', 21, false), 4)) ? J$._() : J$.T(969, function (data) {
                                jalangiLabel80:
                                    while (true) {
                                        try {
                                            J$.Fe(945, arguments.callee, this, arguments);
                                            arguments = J$.N(953, 'arguments', arguments, 4);
                                            data = J$.N(961, 'data', data, 4);
                                            return J$.X1(937, J$.Rt(929, J$.R(921, 'data', data, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1633, J$e);
                                        } finally {
                                            if (J$.Fr(1641))
                                                continue jalangiLabel80;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 945), 0));
                            J$.X1(1041, J$.P(1033, J$.R(993, 'this', this, 0), 'instanceOf', J$.C(56, J$.G(1017, J$.R(1001, 'options', options, 0), J$.T(1009, 'instanceOf', 21, false), 4)) ? J$._() : J$.T(1025, null, 25, false), 0));
                            J$.X1(1097, J$.P(1089, J$.R(1049, 'this', this, 0), 'predicate', J$.C(64, J$.G(1073, J$.R(1057, 'options', options, 0), J$.T(1065, 'predicate', 21, false), 4)) ? J$._() : J$.T(1081, null, 25, false), 0));
                            J$.X1(1153, J$.P(1145, J$.R(1105, 'this', this, 0), 'represent', J$.C(72, J$.G(1129, J$.R(1113, 'options', options, 0), J$.T(1121, 'represent', 21, false), 4)) ? J$._() : J$.T(1137, null, 25, false), 0));
                            J$.X1(1209, J$.P(1201, J$.R(1161, 'this', this, 0), 'defaultStyle', J$.C(80, J$.G(1185, J$.R(1169, 'options', options, 0), J$.T(1177, 'defaultStyle', 21, false), 4)) ? J$._() : J$.T(1193, null, 25, false), 0));
                            J$.X1(1281, J$.P(1273, J$.R(1217, 'this', this, 0), 'styleAliases', J$.F(1265, J$.R(1225, 'compileStyleAliases', compileStyleAliases, 1), 0)(J$.C(88, J$.G(1249, J$.R(1233, 'options', options, 0), J$.T(1241, 'styleAliases', 21, false), 4)) ? J$._() : J$.T(1257, null, 25, false)), 0));
                            if (J$.X1(1649, J$.C(96, J$.B(74, '===', J$.M(1313, J$.R(1289, 'YAML_NODE_KINDS', YAML_NODE_KINDS, 1), 'indexOf', 0)(J$.G(1305, J$.R(1297, 'this', this, 0), 'kind', 0)), J$.U(66, '-', J$.T(1321, 1, 22, false)), 0)))) {
                                throw J$.X1(1401, J$.Th(1393, J$.F(1385, J$.R(1329, 'YAMLException', YAMLException, 1), 1)(J$.B(106, '+', J$.B(98, '+', J$.B(90, '+', J$.B(82, '+', J$.T(1337, 'Unknown kind "', 21, false), J$.G(1353, J$.R(1345, 'this', this, 0), 'kind', 0), 0), J$.T(1361, '" is specified for "', 21, false), 0), J$.R(1369, 'tag', tag, 0), 0), J$.T(1377, '" YAML type.', 21, false), 0))));
                            }
                        } catch (J$e) {
                            J$.Ex(1657, J$e);
                        } finally {
                            if (J$.Fr(1665))
                                continue jalangiLabel81;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1481, 'YAMLException', YAMLException, 0);
            J$.N(1489, 'TYPE_CONSTRUCTOR_OPTIONS', TYPE_CONSTRUCTOR_OPTIONS, 0);
            J$.N(1497, 'YAML_NODE_KINDS', YAML_NODE_KINDS, 0);
            compileStyleAliases = J$.N(1513, 'compileStyleAliases', J$.T(1505, compileStyleAliases, 12, false, 465), 0);
            Type = J$.N(1529, 'Type', J$.T(1521, Type, 12, false, 1409), 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var YAMLException = J$.X1(57, J$.W(49, 'YAMLException', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, './exception', 21, false)), YAMLException, 3));
            var TYPE_CONSTRUCTOR_OPTIONS = J$.X1(145, J$.W(137, 'TYPE_CONSTRUCTOR_OPTIONS', J$.T(129, [
                J$.T(65, 'kind', 21, false),
                J$.T(73, 'resolve', 21, false),
                J$.T(81, 'construct', 21, false),
                J$.T(89, 'instanceOf', 21, false),
                J$.T(97, 'predicate', 21, false),
                J$.T(105, 'represent', 21, false),
                J$.T(113, 'defaultStyle', 21, false),
                J$.T(121, 'styleAliases', 21, false)
            ], 10, false), TYPE_CONSTRUCTOR_OPTIONS, 3));
            var YAML_NODE_KINDS = J$.X1(193, J$.W(185, 'YAML_NODE_KINDS', J$.T(177, [
                J$.T(153, 'scalar', 21, false),
                J$.T(161, 'sequence', 21, false),
                J$.T(169, 'mapping', 21, false)
            ], 10, false), YAML_NODE_KINDS, 3));
            J$.X1(1465, J$.P(1457, J$.R(1441, 'module', module, 2), 'exports', J$.R(1449, 'Type', Type, 1), 0));
        } catch (J$e) {
            J$.Ex(1673, J$e);
        } finally {
            if (J$.Sr(1681)) {
                J$.L();
                continue jalangiLabel82;
            } else {
                J$.L();
                break jalangiLabel82;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
