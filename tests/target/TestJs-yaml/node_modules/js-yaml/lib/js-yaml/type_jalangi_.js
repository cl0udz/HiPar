J$.iids = {"8":[24,7,24,19],"9":[2,21,2,28],"10":[24,7,24,19],"16":[36,13,36,26],"17":[2,29,2,42],"18":[39,52,39,54],"24":[39,9,39,54],"25":[2,21,2,43],"26":[39,9,39,54],"32":[46,15,46,38],"33":[2,21,2,43],"34":[40,31,40,56],"40":[47,18,47,66],"41":[2,21,2,43],"42":[40,31,40,88],"48":[48,20,48,74],"49":[5,1,5,7],"50":[40,31,40,94],"56":[49,21,49,50],"57":[6,1,6,10],"58":[40,31,40,111],"64":[50,20,50,48],"65":[7,1,7,12],"66":[55,46,55,48],"72":[51,20,51,48],"73":[8,1,8,13],"74":[55,7,55,48],"80":[52,23,52,54],"81":[9,1,9,12],"82":[56,29,56,57],"88":[53,43,53,74],"89":[10,1,10,12],"90":[56,29,56,82],"96":[55,7,55,48],"97":[11,1,11,15],"98":[56,29,56,88],"105":[12,1,12,15],"106":[56,29,56,105],"113":[4,32,12,16],"121":[4,32,12,16],"129":[4,32,12,16],"137":[16,1,16,9],"145":[17,1,17,11],"153":[18,1,18,10],"161":[15,23,18,11],"169":[15,23,18,11],"177":[15,23,18,11],"185":[22,16,22,18],"193":[22,16,22,18],"201":[22,16,22,18],"209":[24,7,24,10],"217":[24,15,24,19],"225":[25,5,25,11],"233":[25,17,25,20],"241":[25,5,25,21],"243":[25,5,25,16],"249":[26,7,26,10],"257":[26,11,26,16],"265":[26,7,26,17],"273":[27,9,27,15],"281":[27,16,27,22],"289":[27,23,27,28],"297":[27,16,27,29],"305":[27,33,27,38],"313":[27,9,27,38],"321":[27,9,27,39],"329":[26,26,28,8],"337":[26,26,28,8],"345":[26,26,28,8],"353":[26,26,28,8],"361":[26,7,28,9],"363":[26,7,26,25],"369":[26,7,28,10],"377":[25,30,29,6],"385":[25,30,29,6],"393":[25,30,29,6],"401":[25,30,29,6],"409":[25,5,29,7],"411":[25,5,25,29],"417":[25,5,29,8],"425":[32,10,32,16],"433":[32,10,32,16],"441":[32,3,32,17],"449":[21,1,33,2],"457":[21,1,33,2],"465":[21,1,33,2],"473":[21,1,33,2],"481":[36,13,36,20],"489":[36,24,36,26],"497":[36,13,36,26],"505":[36,3,36,27],"513":[38,3,38,9],"521":[38,15,38,22],"529":[38,3,38,23],"531":[38,3,38,14],"537":[39,9,39,33],"545":[39,42,39,46],"553":[39,9,39,47],"555":[39,9,39,41],"561":[39,53,39,54],"569":[40,17,40,30],"577":[40,31,40,49],"585":[40,52,40,56],"593":[40,59,40,88],"601":[40,91,40,94],"609":[40,97,40,111],"617":[40,13,40,112],"625":[40,13,40,112],"633":[40,7,40,113],"641":[38,32,42,4],"649":[38,32,42,4],"657":[38,32,42,4],"665":[38,32,42,4],"673":[38,3,42,5],"675":[38,3,38,31],"681":[38,3,42,6],"689":[45,3,45,7],"697":[45,14,45,17],"705":[45,3,45,17],"713":[45,3,45,18],"721":[46,3,46,7],"729":[46,15,46,22],"737":[46,23,46,29],"745":[46,15,46,30],"753":[46,34,46,38],"761":[46,3,46,38],"769":[46,3,46,39],"777":[47,3,47,7],"785":[47,18,47,25],"793":[47,26,47,35],"801":[47,18,47,36],"809":[47,60,47,64],"817":[47,60,47,64],"825":[47,53,47,65],"833":[47,40,47,66],"841":[47,40,47,66],"849":[47,40,47,66],"857":[47,3,47,66],"865":[47,3,47,67],"873":[48,3,48,7],"881":[48,20,48,27],"889":[48,28,48,39],"897":[48,20,48,40],"905":[48,68,48,72],"913":[48,68,48,72],"921":[48,61,48,73],"929":[48,44,48,74],"937":[48,44,48,74],"945":[48,44,48,74],"953":[48,44,48,74],"961":[48,3,48,74],"969":[48,3,48,75],"977":[49,3,49,7],"985":[49,21,49,28],"993":[49,29,49,41],"1001":[49,21,49,42],"1009":[49,46,49,50],"1017":[49,3,49,50],"1025":[49,3,49,51],"1033":[50,3,50,7],"1041":[50,20,50,27],"1049":[50,28,50,39],"1057":[50,20,50,40],"1065":[50,44,50,48],"1073":[50,3,50,48],"1081":[50,3,50,49],"1089":[51,3,51,7],"1097":[51,20,51,27],"1105":[51,28,51,39],"1113":[51,20,51,40],"1121":[51,44,51,48],"1129":[51,3,51,48],"1137":[51,3,51,49],"1145":[52,3,52,7],"1153":[52,23,52,30],"1161":[52,31,52,45],"1169":[52,23,52,46],"1177":[52,50,52,54],"1185":[52,3,52,54],"1193":[52,3,52,55],"1201":[53,3,53,7],"1209":[53,23,53,42],"1217":[53,43,53,50],"1225":[53,51,53,65],"1233":[53,43,53,66],"1241":[53,70,53,74],"1249":[53,23,53,75],"1257":[53,3,53,75],"1265":[53,3,53,76],"1273":[55,7,55,22],"1281":[55,31,55,35],"1289":[55,31,55,40],"1297":[55,7,55,41],"1299":[55,7,55,30],"1305":[55,47,55,48],"1313":[56,15,56,28],"1321":[56,29,56,45],"1329":[56,48,56,52],"1337":[56,48,56,57],"1345":[56,60,56,82],"1353":[56,85,56,88],"1361":[56,91,56,105],"1369":[56,11,56,106],"1377":[56,11,56,106],"1385":[56,5,56,107],"1393":[35,1,58,2],"1401":[35,1,58,2],"1409":[35,1,58,2],"1417":[35,1,58,2],"1425":[60,1,60,7],"1433":[60,18,60,22],"1441":[60,1,60,22],"1449":[60,1,60,23],"1457":[1,1,60,23],"1465":[1,1,60,23],"1473":[1,1,60,23],"1481":[1,1,60,23],"1489":[21,1,33,2],"1497":[1,1,60,23],"1505":[35,1,58,2],"1513":[1,1,60,23],"1521":[26,26,28,8],"1529":[26,26,28,8],"1537":[25,30,29,6],"1545":[25,30,29,6],"1553":[24,3,30,4],"1561":[21,1,33,2],"1569":[21,1,33,2],"1577":[39,5,41,6],"1585":[38,32,42,4],"1593":[38,32,42,4],"1601":[47,40,47,66],"1609":[47,40,47,66],"1617":[48,44,48,74],"1625":[48,44,48,74],"1633":[55,3,57,4],"1641":[35,1,58,2],"1649":[35,1,58,2],"1657":[1,1,60,23],"1665":[1,1,60,23],"nBranches":24,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type_jalangi_.js","code":"'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n"};
jalangiLabel86:
    while (true) {
        try {
            J$.Se(1457, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type.js');
            function compileStyleAliases(map) {
                jalangiLabel81:
                    while (true) {
                        try {
                            J$.Fe(449, arguments.callee, this, arguments);
                            arguments = J$.N(457, 'arguments', arguments, 4);
                            map = J$.N(465, 'map', map, 4);
                            J$.N(473, 'result', result, 0);
                            var result = J$.X1(201, J$.W(193, 'result', J$.T(185, {}, 11, false), result, 1));
                            if (J$.X1(1553, J$.C(8, J$.B(10, '!==', J$.R(209, 'map', map, 0), J$.T(217, null, 25, false), 0)))) {
                                J$.X1(417, J$.M(409, J$.M(241, J$.R(225, 'Object', Object, 2), 'keys', 0)(J$.R(233, 'map', map, 0)), 'forEach', 0)(J$.T(401, function (style) {
                                    jalangiLabel80:
                                        while (true) {
                                            try {
                                                J$.Fe(377, arguments.callee, this, arguments);
                                                arguments = J$.N(385, 'arguments', arguments, 4);
                                                style = J$.N(393, 'style', style, 4);
                                                J$.X1(369, J$.M(361, J$.G(265, J$.R(249, 'map', map, 0), J$.R(257, 'style', style, 0), 4), 'forEach', 0)(J$.T(353, function (alias) {
                                                    jalangiLabel79:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(329, arguments.callee, this, arguments);
                                                                arguments = J$.N(337, 'arguments', arguments, 4);
                                                                alias = J$.N(345, 'alias', alias, 4);
                                                                J$.X1(321, J$.P(313, J$.R(273, 'result', result, 0), J$.F(297, J$.R(281, 'String', String, 2), 0)(J$.R(289, 'alias', alias, 0)), J$.R(305, 'style', style, 0), 2));
                                                            } catch (J$e) {
                                                                J$.Ex(1521, J$e);
                                                            } finally {
                                                                if (J$.Fr(1529))
                                                                    continue jalangiLabel79;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 329)));
                                            } catch (J$e) {
                                                J$.Ex(1537, J$e);
                                            } finally {
                                                if (J$.Fr(1545))
                                                    continue jalangiLabel80;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 377)));
                            }
                            return J$.X1(441, J$.Rt(433, J$.R(425, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(1561, J$e);
                        } finally {
                            if (J$.Fr(1569))
                                continue jalangiLabel81;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Type(tag, options) {
                jalangiLabel85:
                    while (true) {
                        try {
                            J$.Fe(1393, arguments.callee, this, arguments);
                            arguments = J$.N(1401, 'arguments', arguments, 4);
                            tag = J$.N(1409, 'tag', tag, 4);
                            options = J$.N(1417, 'options', options, 4);
                            J$.X1(505, options = J$.W(497, 'options', J$.C(16, J$.R(481, 'options', options, 0)) ? J$._() : J$.T(489, {}, 11, false), options, 0));
                            J$.X1(681, J$.M(673, J$.M(529, J$.R(513, 'Object', Object, 2), 'keys', 0)(J$.R(521, 'options', options, 0)), 'forEach', 0)(J$.T(665, function (name) {
                                jalangiLabel82:
                                    while (true) {
                                        try {
                                            J$.Fe(641, arguments.callee, this, arguments);
                                            arguments = J$.N(649, 'arguments', arguments, 4);
                                            name = J$.N(657, 'name', name, 4);
                                            if (J$.X1(1577, J$.C(24, J$.B(26, '===', J$.M(553, J$.R(537, 'TYPE_CONSTRUCTOR_OPTIONS', TYPE_CONSTRUCTOR_OPTIONS, 1), 'indexOf', 0)(J$.R(545, 'name', name, 0)), J$.U(18, '-', J$.T(561, 1, 22, false)), 0)))) {
                                                throw J$.X1(633, J$.Th(625, J$.F(617, J$.R(569, 'YAMLException', YAMLException, 1), 1)(J$.B(58, '+', J$.B(50, '+', J$.B(42, '+', J$.B(34, '+', J$.T(577, 'Unknown option "', 21, false), J$.R(585, 'name', name, 0), 0), J$.T(593, '" is met in definition of "', 21, false), 0), J$.R(601, 'tag', tag, 0), 0), J$.T(609, '" YAML type.', 21, false), 0))));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1585, J$e);
                                        } finally {
                                            if (J$.Fr(1593))
                                                continue jalangiLabel82;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 641)));
                            J$.X1(713, J$.P(705, J$.R(689, 'this', this, 0), 'tag', J$.R(697, 'tag', tag, 0), 0));
                            J$.X1(769, J$.P(761, J$.R(721, 'this', this, 0), 'kind', J$.C(32, J$.G(745, J$.R(729, 'options', options, 0), J$.T(737, 'kind', 21, false), 4)) ? J$._() : J$.T(753, null, 25, false), 0));
                            J$.X1(865, J$.P(857, J$.R(777, 'this', this, 0), 'resolve', J$.C(40, J$.G(801, J$.R(785, 'options', options, 0), J$.T(793, 'resolve', 21, false), 4)) ? J$._() : J$.T(849, function () {
                                jalangiLabel83:
                                    while (true) {
                                        try {
                                            J$.Fe(833, arguments.callee, this, arguments);
                                            arguments = J$.N(841, 'arguments', arguments, 4);
                                            return J$.X1(825, J$.Rt(817, J$.T(809, true, 23, false)));
                                        } catch (J$e) {
                                            J$.Ex(1601, J$e);
                                        } finally {
                                            if (J$.Fr(1609))
                                                continue jalangiLabel83;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 833), 0));
                            J$.X1(969, J$.P(961, J$.R(873, 'this', this, 0), 'construct', J$.C(48, J$.G(897, J$.R(881, 'options', options, 0), J$.T(889, 'construct', 21, false), 4)) ? J$._() : J$.T(953, function (data) {
                                jalangiLabel84:
                                    while (true) {
                                        try {
                                            J$.Fe(929, arguments.callee, this, arguments);
                                            arguments = J$.N(937, 'arguments', arguments, 4);
                                            data = J$.N(945, 'data', data, 4);
                                            return J$.X1(921, J$.Rt(913, J$.R(905, 'data', data, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1617, J$e);
                                        } finally {
                                            if (J$.Fr(1625))
                                                continue jalangiLabel84;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 929), 0));
                            J$.X1(1025, J$.P(1017, J$.R(977, 'this', this, 0), 'instanceOf', J$.C(56, J$.G(1001, J$.R(985, 'options', options, 0), J$.T(993, 'instanceOf', 21, false), 4)) ? J$._() : J$.T(1009, null, 25, false), 0));
                            J$.X1(1081, J$.P(1073, J$.R(1033, 'this', this, 0), 'predicate', J$.C(64, J$.G(1057, J$.R(1041, 'options', options, 0), J$.T(1049, 'predicate', 21, false), 4)) ? J$._() : J$.T(1065, null, 25, false), 0));
                            J$.X1(1137, J$.P(1129, J$.R(1089, 'this', this, 0), 'represent', J$.C(72, J$.G(1113, J$.R(1097, 'options', options, 0), J$.T(1105, 'represent', 21, false), 4)) ? J$._() : J$.T(1121, null, 25, false), 0));
                            J$.X1(1193, J$.P(1185, J$.R(1145, 'this', this, 0), 'defaultStyle', J$.C(80, J$.G(1169, J$.R(1153, 'options', options, 0), J$.T(1161, 'defaultStyle', 21, false), 4)) ? J$._() : J$.T(1177, null, 25, false), 0));
                            J$.X1(1265, J$.P(1257, J$.R(1201, 'this', this, 0), 'styleAliases', J$.F(1249, J$.R(1209, 'compileStyleAliases', compileStyleAliases, 1), 0)(J$.C(88, J$.G(1233, J$.R(1217, 'options', options, 0), J$.T(1225, 'styleAliases', 21, false), 4)) ? J$._() : J$.T(1241, null, 25, false)), 0));
                            if (J$.X1(1633, J$.C(96, J$.B(74, '===', J$.M(1297, J$.R(1273, 'YAML_NODE_KINDS', YAML_NODE_KINDS, 1), 'indexOf', 0)(J$.G(1289, J$.R(1281, 'this', this, 0), 'kind', 0)), J$.U(66, '-', J$.T(1305, 1, 22, false)), 0)))) {
                                throw J$.X1(1385, J$.Th(1377, J$.F(1369, J$.R(1313, 'YAMLException', YAMLException, 1), 1)(J$.B(106, '+', J$.B(98, '+', J$.B(90, '+', J$.B(82, '+', J$.T(1321, 'Unknown kind "', 21, false), J$.G(1337, J$.R(1329, 'this', this, 0), 'kind', 0), 0), J$.T(1345, '" is specified for "', 21, false), 0), J$.R(1353, 'tag', tag, 0), 0), J$.T(1361, '" YAML type.', 21, false), 0))));
                            }
                        } catch (J$e) {
                            J$.Ex(1641, J$e);
                        } finally {
                            if (J$.Fr(1649))
                                continue jalangiLabel85;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1465, 'YAMLException', YAMLException, 0);
            J$.N(1473, 'TYPE_CONSTRUCTOR_OPTIONS', TYPE_CONSTRUCTOR_OPTIONS, 0);
            J$.N(1481, 'YAML_NODE_KINDS', YAML_NODE_KINDS, 0);
            compileStyleAliases = J$.N(1497, 'compileStyleAliases', J$.T(1489, compileStyleAliases, 12, false, 449), 0);
            Type = J$.N(1513, 'Type', J$.T(1505, Type, 12, false, 1393), 0);
            var YAMLException = J$.X1(41, J$.W(33, 'YAMLException', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './exception', 21, false)), YAMLException, 3));
            var TYPE_CONSTRUCTOR_OPTIONS = J$.X1(129, J$.W(121, 'TYPE_CONSTRUCTOR_OPTIONS', J$.T(113, [
                J$.T(49, 'kind', 21, false),
                J$.T(57, 'resolve', 21, false),
                J$.T(65, 'construct', 21, false),
                J$.T(73, 'instanceOf', 21, false),
                J$.T(81, 'predicate', 21, false),
                J$.T(89, 'represent', 21, false),
                J$.T(97, 'defaultStyle', 21, false),
                J$.T(105, 'styleAliases', 21, false)
            ], 10, false), TYPE_CONSTRUCTOR_OPTIONS, 3));
            var YAML_NODE_KINDS = J$.X1(177, J$.W(169, 'YAML_NODE_KINDS', J$.T(161, [
                J$.T(137, 'scalar', 21, false),
                J$.T(145, 'sequence', 21, false),
                J$.T(153, 'mapping', 21, false)
            ], 10, false), YAML_NODE_KINDS, 3));
            J$.X1(1449, J$.P(1441, J$.R(1425, 'module', module, 2), 'exports', J$.R(1433, 'Type', Type, 1), 0));
        } catch (J$e) {
            J$.Ex(1657, J$e);
        } finally {
            if (J$.Sr(1665)) {
                J$.L();
                continue jalangiLabel86;
            } else {
                J$.L();
                break jalangiLabel86;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
