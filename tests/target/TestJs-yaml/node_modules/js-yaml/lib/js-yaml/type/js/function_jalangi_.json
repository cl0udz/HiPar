{"8":[18,7,18,36],"9":[13,18,13,25],"10":[18,7,18,20],"16":[24,7,24,20],"17":[13,18,13,25],"18":[18,7,18,36],"24":[30,9,31,26],"25":[13,18,13,25],"26":[24,7,24,20],"32":[30,9,32,47],"33":[14,13,14,21],"34":[27,18,27,28],"40":[33,5,34,57],"41":[14,22,14,31],"42":[27,18,27,34],"48":[30,9,34,57],"49":[14,13,14,32],"50":[30,9,30,31],"56":[30,9,34,57],"57":[14,13,14,32],"58":[31,5,31,26],"64":[52,7,53,24],"65":[14,3,14,33],"66":[32,5,32,47],"72":[52,7,54,45],"73":[18,14,18,20],"74":[33,5,33,62],"80":[55,3,56,55],"81":[18,25,18,36],"82":[34,5,34,57],"88":[52,7,56,55],"89":[18,48,18,54],"90":[47,16,47,26],"96":[52,7,56,55],"97":[18,48,18,62],"98":[47,16,47,32],"104":[68,7,68,60],"105":[18,48,18,62],"106":[52,7,52,29],"113":[18,38,18,63],"114":[53,3,53,24],"121":[15,3,19,2],"122":[54,3,54,45],"129":[21,12,21,19],"130":[55,3,55,60],"137":[21,20,21,32],"138":[56,3,56,55],"145":[21,12,21,33],"146":[68,7,68,60],"153":[21,12,21,33],"154":[70,46,70,57],"161":[21,12,21,33],"162":[70,59,70,70],"169":[24,7,24,11],"170":[75,31,75,73],"177":[24,16,24,20],"178":[83,10,83,72],"185":[24,29,24,34],"193":[24,29,24,34],"201":[24,22,24,35],"209":[27,18,27,21],"217":[27,24,27,28],"225":[27,31,27,34],"233":[28,11,28,18],"241":[28,25,28,31],"249":[28,42,28,46],"257":[28,33,28,48],"265":[28,11,28,49],"267":[28,11,28,24],"273":[27,18,27,34],"281":[27,18,27,34],"289":[28,11,28,49],"297":[28,11,28,49],"305":[30,9,30,12],"313":[30,9,30,17],"321":[30,22,30,31],"329":[31,5,31,8],"337":[31,5,31,13],"345":[31,5,31,20],"353":[31,25,31,26],"361":[32,5,32,8],"369":[32,5,32,13],"377":[32,14,32,15],"385":[32,5,32,16],"393":[32,5,32,21],"401":[32,26,32,47],"409":[33,5,33,8],"417":[33,5,33,13],"425":[33,14,33,15],"433":[33,5,33,16],"441":[33,5,33,27],"449":[33,5,33,32],"457":[33,37,33,62],"465":[34,5,34,8],"473":[34,5,34,13],"481":[34,14,34,15],"489":[34,5,34,16],"497":[34,5,34,27],"505":[34,5,34,32],"513":[34,37,34,57],"521":[35,14,35,19],"529":[35,14,35,19],"537":[35,7,35,20],"545":[38,12,38,16],"553":[38,12,38,16],"561":[38,5,38,17],"569":[40,12,40,17],"577":[40,12,40,17],"585":[40,5,40,18],"593":[39,5,41,4],"601":[23,1,42,2],"609":[23,1,42,2],"617":[23,1,42,2],"625":[23,1,42,2],"633":[23,1,42,2],"641":[47,16,47,19],"649":[47,22,47,26],"657":[47,29,47,32],"665":[48,9,48,16],"673":[48,23,48,29],"681":[48,40,48,44],"689":[48,31,48,46],"697":[48,9,48,47],"699":[48,9,48,22],"705":[49,12,49,14],"713":[47,16,47,32],"721":[47,16,47,32],"729":[48,9,48,47],"737":[48,9,48,47],"745":[49,12,49,14],"753":[49,12,49,14],"761":[52,7,52,10],"769":[52,7,52,15],"777":[52,20,52,29],"785":[53,3,53,6],"793":[53,3,53,11],"801":[53,3,53,18],"809":[53,23,53,24],"817":[54,3,54,6],"825":[54,3,54,11],"833":[54,12,54,13],"841":[54,3,54,14],"849":[54,3,54,19],"857":[54,24,54,45],"865":[55,3,55,6],"873":[55,3,55,11],"881":[55,12,55,13],"889":[55,3,55,14],"897":[55,3,55,25],"905":[55,3,55,30],"913":[55,35,55,60],"921":[56,3,56,6],"929":[56,3,56,11],"937":[56,12,56,13],"945":[56,3,56,14],"953":[56,3,56,25],"961":[56,3,56,30],"969":[56,35,56,55],"977":[57,15,57,20],"985":[57,21,57,49],"993":[57,11,57,50],"1001":[57,11,57,50],"1009":[57,5,57,51],"1017":[60,3,60,6],"1025":[60,3,60,11],"1033":[60,12,60,13],"1041":[60,3,60,14],"1049":[60,3,60,25],"1057":[60,3,60,32],"1065":[61,5,61,11],"1073":[61,17,61,22],"1081":[61,17,61,27],"1089":[61,5,61,28],"1091":[61,5,61,16],"1097":[61,5,61,29],"1105":[60,41,62,4],"1113":[60,41,62,4],"1121":[60,41,62,4],"1129":[60,41,62,4],"1137":[60,3,62,5],"1139":[60,3,60,40],"1145":[60,3,62,6],"1153":[64,10,64,13],"1161":[64,10,64,18],"1169":[64,19,64,20],"1177":[64,10,64,21],"1185":[64,10,64,32],"1193":[64,10,64,37],"1201":[64,10,64,43],"1209":[64,10,64,43],"1217":[64,3,64,44],"1225":[68,7,68,10],"1233":[68,7,68,15],"1241":[68,16,68,17],"1249":[68,7,68,18],"1257":[68,7,68,29],"1265":[68,7,68,34],"1273":[68,7,68,39],"1281":[68,44,68,60],"1289":[70,16,70,24],"1297":[70,25,70,31],"1305":[70,33,70,39],"1313":[70,46,70,50],"1321":[70,51,70,52],"1329":[70,46,70,53],"1337":[70,56,70,57],"1345":[70,59,70,63],"1353":[70,64,70,65],"1361":[70,59,70,66],"1369":[70,69,70,70],"1377":[70,33,70,71],"1379":[70,33,70,45],"1385":[70,12,70,72],"1393":[70,12,70,72],"1401":[70,5,70,73],"1409":[75,14,75,22],"1417":[75,23,75,29],"1425":[75,31,75,40],"1433":[75,43,75,49],"1441":[75,56,75,60],"1449":[75,61,75,62],"1457":[75,56,75,63],"1465":[75,65,75,69],"1473":[75,70,75,71],"1481":[75,65,75,72],"1489":[75,43,75,73],"1491":[75,43,75,55],"1497":[75,10,75,74],"1505":[75,10,75,74],"1513":[75,3,75,75],"1521":[44,1,76,2],"1529":[44,1,76,2],"1537":[44,1,76,2],"1545":[44,1,76,2],"1553":[44,1,76,2],"1561":[44,1,76,2],"1569":[44,1,76,2],"1577":[79,10,79,16],"1585":[79,10,79,27],"1587":[79,10,79,25],"1593":[79,10,79,27],"1601":[79,3,79,28],"1609":[78,1,80,2],"1617":[78,1,80,2],"1625":[78,1,80,2],"1633":[83,10,83,16],"1641":[83,10,83,26],"1649":[83,10,83,35],"1657":[83,41,83,47],"1665":[83,10,83,48],"1667":[83,10,83,40],"1673":[83,53,83,72],"1681":[83,10,83,72],"1689":[83,3,83,73],"1697":[82,1,84,2],"1705":[82,1,84,2],"1713":[82,1,84,2],"1721":[86,1,86,7],"1729":[86,22,86,26],"1737":[86,27,86,58],"1745":[87,9,87,17],"1753":[88,12,88,37],"1761":[89,14,89,41],"1769":[90,14,90,24],"1777":[91,14,91,41],"1785":[86,60,91,43],"1793":[86,18,91,44],"1801":[86,1,91,44],"1809":[86,1,91,45],"1817":[1,1,91,45],"1825":[1,1,91,45],"1833":[1,1,91,45],"1841":[1,1,91,45],"1849":[23,1,42,2],"1857":[1,1,91,45],"1865":[44,1,76,2],"1873":[1,1,91,45],"1881":[78,1,80,2],"1889":[1,1,91,45],"1897":[82,1,84,2],"1905":[1,1,91,45],"1913":[18,3,18,63],"1921":[24,3,24,35],"1929":[30,5,36,6],"1937":[23,1,42,2],"1945":[23,1,42,2],"1953":[52,3,58,4],"1961":[60,41,62,4],"1969":[60,41,62,4],"1977":[68,3,71,4],"1985":[44,1,76,2],"1993":[44,1,76,2],"2001":[78,1,80,2],"2009":[78,1,80,2],"2017":[82,1,84,2],"2025":[82,1,84,2],"2033":[1,1,91,45],"2041":[1,1,91,45],"nBranches":26,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/function.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/function_jalangi_.js","code":"'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /* eslint-disable no-redeclare */\n  /* global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n"}