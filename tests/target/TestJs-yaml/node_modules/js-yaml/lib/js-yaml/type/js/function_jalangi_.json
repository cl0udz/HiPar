{"8":[18,7,18,36],"9":[1,1,1,13],"10":[18,7,18,20],"16":[24,7,24,20],"17":[1,1,1,14],"18":[18,7,18,36],"24":[30,9,31,42],"25":[14,18,14,25],"26":[24,7,24,20],"32":[30,9,32,62],"33":[14,18,14,25],"34":[27,18,27,28],"40":[33,10,34,63],"41":[14,18,14,25],"42":[27,18,27,34],"48":[30,9,34,64],"49":[15,13,15,21],"50":[30,9,30,50],"56":[30,9,34,64],"57":[15,22,15,31],"58":[31,9,31,42],"64":[52,7,53,40],"65":[15,13,15,32],"66":[32,9,32,62],"72":[52,7,54,60],"73":[15,13,15,32],"74":[33,10,33,67],"80":[55,8,56,61],"81":[15,3,15,33],"82":[34,11,34,63],"88":[52,7,56,62],"89":[18,14,18,20],"90":[47,16,47,26],"96":[52,7,56,62],"97":[18,25,18,36],"98":[47,16,47,32],"104":[68,7,68,60],"105":[18,48,18,54],"106":[52,7,52,48],"113":[18,48,18,62],"114":[53,7,53,40],"121":[18,48,18,62],"122":[54,7,54,60],"129":[18,38,18,63],"130":[55,8,55,65],"137":[16,3,19,2],"138":[56,9,56,61],"145":[21,12,21,19],"146":[68,7,68,60],"153":[21,20,21,32],"154":[70,46,70,57],"161":[21,12,21,33],"162":[70,59,70,70],"169":[21,12,21,33],"170":[75,31,75,73],"177":[21,12,21,33],"178":[83,10,83,72],"185":[24,7,24,11],"193":[24,16,24,20],"201":[24,29,24,34],"209":[24,29,24,34],"217":[24,22,24,35],"225":[27,18,27,21],"233":[27,24,27,28],"241":[27,31,27,34],"249":[28,18,28,25],"257":[28,32,28,38],"265":[28,49,28,53],"273":[28,40,28,55],"281":[28,18,28,56],"283":[28,18,28,31],"289":[27,18,27,34],"297":[27,18,27,34],"305":[28,18,28,56],"313":[28,18,28,56],"321":[30,9,30,12],"329":[30,9,30,17],"337":[30,41,30,50],"345":[31,9,31,12],"353":[31,9,31,17],"361":[31,9,31,24],"369":[31,41,31,42],"377":[32,9,32,12],"385":[32,9,32,17],"393":[32,18,32,19],"401":[32,9,32,20],"409":[32,9,32,25],"417":[32,41,32,62],"425":[33,10,33,13],"433":[33,10,33,18],"441":[33,19,33,20],"449":[33,10,33,21],"457":[33,10,33,32],"465":[33,10,33,37],"473":[33,42,33,67],"481":[34,11,34,14],"489":[34,11,34,19],"497":[34,20,34,21],"505":[34,11,34,22],"513":[34,11,34,33],"521":[34,11,34,38],"529":[34,43,34,63],"537":[35,14,35,19],"545":[35,14,35,19],"553":[35,7,35,20],"561":[38,12,38,16],"569":[38,12,38,16],"577":[38,5,38,17],"585":[40,12,40,17],"593":[40,12,40,17],"601":[40,5,40,18],"609":[39,5,41,4],"617":[23,1,42,2],"625":[23,1,42,2],"633":[23,1,42,2],"641":[23,1,42,2],"649":[23,1,42,2],"657":[47,16,47,19],"665":[47,22,47,26],"673":[47,29,47,32],"681":[48,16,48,23],"689":[48,30,48,36],"697":[48,47,48,51],"705":[48,38,48,53],"713":[48,16,48,54],"715":[48,16,48,29],"721":[49,16,49,18],"729":[47,16,47,32],"737":[47,16,47,32],"745":[48,16,48,54],"753":[48,16,48,54],"761":[49,16,49,18],"769":[49,16,49,18],"777":[52,7,52,10],"785":[52,7,52,15],"793":[52,39,52,48],"801":[53,7,53,10],"809":[53,7,53,15],"817":[53,7,53,22],"825":[53,39,53,40],"833":[54,7,54,10],"841":[54,7,54,15],"849":[54,16,54,17],"857":[54,7,54,18],"865":[54,7,54,23],"873":[54,39,54,60],"881":[55,8,55,11],"889":[55,8,55,16],"897":[55,17,55,18],"905":[55,8,55,19],"913":[55,8,55,30],"921":[55,8,55,35],"929":[55,40,55,65],"937":[56,9,56,12],"945":[56,9,56,17],"953":[56,18,56,19],"961":[56,9,56,20],"969":[56,9,56,31],"977":[56,9,56,36],"985":[56,41,56,61],"993":[57,15,57,20],"1001":[57,21,57,49],"1009":[57,11,57,50],"1017":[57,11,57,50],"1025":[57,5,57,51],"1033":[60,3,60,6],"1041":[60,3,60,11],"1049":[60,12,60,13],"1057":[60,3,60,14],"1065":[60,3,60,25],"1073":[60,3,60,32],"1081":[61,5,61,11],"1089":[61,17,61,22],"1097":[61,17,61,27],"1105":[61,5,61,28],"1107":[61,5,61,16],"1113":[61,5,61,29],"1121":[60,41,62,4],"1129":[60,41,62,4],"1137":[60,41,62,4],"1145":[60,41,62,4],"1153":[60,3,62,5],"1155":[60,3,60,40],"1161":[60,3,62,6],"1169":[64,10,64,13],"1177":[64,10,64,18],"1185":[64,19,64,20],"1193":[64,10,64,21],"1201":[64,10,64,32],"1209":[64,10,64,37],"1217":[64,10,64,43],"1225":[64,10,64,43],"1233":[64,3,64,44],"1241":[68,7,68,10],"1249":[68,7,68,15],"1257":[68,16,68,17],"1265":[68,7,68,18],"1273":[68,7,68,29],"1281":[68,7,68,34],"1289":[68,7,68,39],"1297":[68,44,68,60],"1305":[70,16,70,24],"1313":[70,25,70,31],"1321":[70,33,70,39],"1329":[70,46,70,50],"1337":[70,51,70,52],"1345":[70,46,70,53],"1353":[70,56,70,57],"1361":[70,59,70,63],"1369":[70,64,70,65],"1377":[70,59,70,66],"1385":[70,69,70,70],"1393":[70,33,70,71],"1395":[70,33,70,45],"1401":[70,12,70,72],"1409":[70,12,70,72],"1417":[70,5,70,73],"1425":[75,14,75,22],"1433":[75,23,75,29],"1441":[75,31,75,40],"1449":[75,43,75,49],"1457":[75,56,75,60],"1465":[75,61,75,62],"1473":[75,56,75,63],"1481":[75,65,75,69],"1489":[75,70,75,71],"1497":[75,65,75,72],"1505":[75,43,75,73],"1507":[75,43,75,55],"1513":[75,10,75,74],"1521":[75,10,75,74],"1529":[75,3,75,75],"1537":[44,1,76,2],"1545":[44,1,76,2],"1553":[44,1,76,2],"1561":[44,1,76,2],"1569":[44,1,76,2],"1577":[44,1,76,2],"1585":[44,1,76,2],"1593":[79,10,79,16],"1601":[79,10,79,27],"1603":[79,10,79,25],"1609":[79,10,79,27],"1617":[79,3,79,28],"1625":[78,1,80,2],"1633":[78,1,80,2],"1641":[78,1,80,2],"1649":[83,10,83,16],"1657":[83,10,83,26],"1665":[83,10,83,35],"1673":[83,41,83,47],"1681":[83,10,83,48],"1683":[83,10,83,40],"1689":[83,53,83,72],"1697":[83,10,83,72],"1705":[83,3,83,73],"1713":[82,1,84,2],"1721":[82,1,84,2],"1729":[82,1,84,2],"1737":[86,1,86,7],"1745":[86,22,86,26],"1753":[86,27,86,58],"1761":[87,9,87,17],"1769":[88,12,88,37],"1777":[89,14,89,41],"1785":[90,14,90,24],"1793":[91,14,91,41],"1801":[86,60,92,2],"1809":[86,18,92,3],"1817":[86,1,92,3],"1825":[86,1,92,4],"1833":[1,1,93,1],"1841":[1,1,93,1],"1849":[1,1,93,1],"1857":[1,1,93,1],"1865":[23,1,42,2],"1873":[1,1,93,1],"1881":[44,1,76,2],"1889":[1,1,93,1],"1897":[78,1,80,2],"1905":[1,1,93,1],"1913":[82,1,84,2],"1921":[1,1,93,1],"1929":[18,3,18,63],"1937":[24,3,24,35],"1945":[30,5,36,6],"1953":[23,1,42,2],"1961":[23,1,42,2],"1969":[52,3,58,4],"1977":[60,41,62,4],"1985":[60,41,62,4],"1993":[68,3,71,4],"2001":[44,1,76,2],"2009":[44,1,76,2],"2017":[78,1,80,2],"2025":[78,1,80,2],"2033":[82,1,84,2],"2041":[82,1,84,2],"2049":[1,1,93,1],"2057":[1,1,93,1],"nBranches":26,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/function.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/function_jalangi_.js","code":"'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /*global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n"}