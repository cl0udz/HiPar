J$.iids = {"8":[5,7,5,20],"9":[2,12,2,19],"10":[5,7,5,20],"16":[6,7,6,24],"17":[2,20,2,32],"18":[6,7,6,24],"24":[15,9,15,13],"25":[2,12,2,33],"26":[14,7,14,24],"32":[17,9,17,29],"33":[2,12,2,33],"34":[17,9,17,29],"40":[19,9,19,61],"41":[2,12,2,33],"42":[19,16,19,48],"48":[14,7,14,24],"49":[5,7,5,11],"50":[19,16,19,52],"56":[32,9,32,13],"57":[5,16,5,20],"58":[19,9,19,61],"64":[31,7,31,24],"65":[5,29,5,34],"66":[31,7,31,24],"72":[42,7,42,20],"73":[5,29,5,34],"74":[33,30,33,62],"80":[43,7,43,23],"81":[5,22,5,35],"82":[33,30,33,66],"88":[44,7,44,24],"89":[6,7,6,11],"90":[40,16,40,35],"97":[6,7,6,18],"98":[40,16,40,41],"105":[6,23,6,24],"106":[42,32,42,35],"113":[6,33,6,38],"114":[43,35,43,38],"121":[6,33,6,38],"122":[44,36,44,39],"129":[6,26,6,39],"130":[50,10,50,70],"137":[8,16,8,20],"145":[9,10,9,23],"153":[9,29,9,33],"161":[9,10,9,34],"163":[9,10,9,28],"169":[10,15,10,17],"177":[8,16,8,20],"185":[8,16,8,20],"193":[9,10,9,34],"201":[9,10,9,34],"209":[10,15,10,17],"217":[10,15,10,17],"225":[14,7,14,13],"233":[14,14,14,15],"241":[14,7,14,16],"249":[14,21,14,24],"257":[15,9,15,13],"265":[15,27,15,31],"273":[15,32,15,33],"281":[15,27,15,34],"289":[15,27,15,34],"297":[15,15,15,35],"305":[17,9,17,18],"313":[17,9,17,25],"321":[17,28,17,29],"329":[17,38,17,43],"337":[17,38,17,43],"345":[17,31,17,44],"353":[19,9,19,15],"361":[19,16,19,22],"369":[19,16,19,29],"377":[19,32,19,41],"385":[19,32,19,48],"393":[19,51,19,52],"401":[19,9,19,53],"409":[19,58,19,61],"417":[19,70,19,75],"425":[19,70,19,75],"433":[19,63,19,76],"441":[22,10,22,14],"449":[22,10,22,14],"457":[22,3,22,15],"465":[4,1,23,2],"473":[4,1,23,2],"481":[4,1,23,2],"489":[4,1,23,2],"497":[4,1,23,2],"505":[4,1,23,2],"513":[26,16,26,20],"521":[27,10,27,23],"529":[27,29,27,33],"537":[27,10,27,34],"539":[27,10,27,28],"545":[28,15,28,17],"553":[26,16,26,20],"561":[26,16,26,20],"569":[27,10,27,34],"577":[27,10,27,34],"585":[28,15,28,17],"593":[28,15,28,17],"601":[31,7,31,13],"609":[31,14,31,15],"617":[31,7,31,16],"625":[31,21,31,24],"633":[32,9,32,13],"641":[32,27,32,31],"649":[32,32,32,33],"657":[32,27,32,34],"665":[32,27,32,34],"673":[32,15,32,35],"681":[33,14,33,20],"689":[33,27,33,28],"697":[33,30,33,36],"705":[33,30,33,43],"713":[33,46,33,55],"721":[33,46,33,62],"729":[33,65,33,66],"737":[33,14,33,67],"739":[33,14,33,26],"745":[33,14,33,67],"753":[33,5,33,68],"761":[36,14,36,20],"769":[36,21,36,27],"777":[36,29,36,38],"785":[36,10,36,39],"793":[36,10,36,39],"801":[36,3,36,40],"809":[25,1,37,2],"817":[25,1,37,2],"825":[25,1,37,2],"833":[25,1,37,2],"841":[25,1,37,2],"849":[25,1,37,2],"857":[40,16,40,19],"865":[40,22,40,28],"873":[40,22,40,35],"881":[40,38,40,41],"889":[40,16,40,41],"897":[40,16,40,41],"905":[42,7,42,13],"913":[42,7,42,20],"921":[42,32,42,35],"929":[42,22,42,28],"937":[42,22,42,35],"945":[42,22,42,36],"953":[43,7,43,13],"961":[43,7,43,23],"969":[43,35,43,38],"977":[43,25,43,31],"985":[43,25,43,38],"993":[43,25,43,39],"1001":[44,7,44,13],"1009":[44,7,44,24],"1017":[44,36,44,39],"1025":[44,26,44,32],"1033":[44,26,44,39],"1041":[44,26,44,40],"1049":[46,10,46,16],"1057":[46,10,46,16],"1065":[46,3,46,17],"1073":[39,1,47,2],"1081":[39,1,47,2],"1089":[39,1,47,2],"1097":[39,1,47,2],"1105":[50,10,50,16],"1113":[50,10,50,26],"1121":[50,10,50,35],"1129":[50,41,50,47],"1137":[50,10,50,48],"1139":[50,10,50,40],"1145":[50,53,50,70],"1153":[50,10,50,70],"1161":[50,3,50,71],"1169":[49,1,51,2],"1177":[49,1,51,2],"1185":[49,1,51,2],"1193":[53,1,53,7],"1201":[53,22,53,26],"1209":[53,27,53,56],"1217":[54,9,54,17],"1225":[55,12,55,35],"1233":[56,14,56,39],"1241":[57,14,57,22],"1249":[58,14,58,39],"1257":[53,58,58,41],"1265":[53,18,58,42],"1273":[53,1,58,42],"1281":[53,1,58,43],"1289":[1,1,58,43],"1297":[1,1,58,43],"1305":[4,1,23,2],"1313":[1,1,58,43],"1321":[25,1,37,2],"1329":[1,1,58,43],"1337":[39,1,47,2],"1345":[1,1,58,43],"1353":[49,1,51,2],"1361":[1,1,58,43],"1369":[5,3,5,35],"1377":[6,3,6,39],"1385":[15,5,15,35],"1393":[17,5,17,44],"1401":[19,5,19,76],"1409":[14,3,20,4],"1417":[4,1,23,2],"1425":[4,1,23,2],"1433":[32,5,32,35],"1441":[31,3,34,4],"1449":[25,1,37,2],"1457":[25,1,37,2],"1465":[42,3,42,36],"1473":[43,3,43,39],"1481":[44,3,44,40],"1489":[39,1,47,2],"1497":[39,1,47,2],"1505":[49,1,51,2],"1513":[49,1,51,2],"1521":[1,1,58,43],"1529":[1,1,58,43],"nBranches":22,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/regexp_jalangi_.js","code":"'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n"};
jalangiLabel161:
    while (true) {
        try {
            J$.Se(1289, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/regexp_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js');
            function resolveJavascriptRegExp(data) {
                jalangiLabel157:
                    while (true) {
                        try {
                            J$.Fe(465, arguments.callee, this, arguments);
                            arguments = J$.N(473, 'arguments', arguments, 4);
                            data = J$.N(481, 'data', data, 4);
                            J$.N(489, 'regexp', regexp, 0);
                            J$.N(497, 'tail', tail, 0);
                            J$.N(505, 'modifiers', modifiers, 0);
                            if (J$.X1(1369, J$.C(8, J$.B(10, '===', J$.R(49, 'data', data, 0), J$.T(57, null, 25, false), 0))))
                                return J$.X1(81, J$.Rt(73, J$.T(65, false, 23, false)));
                            if (J$.X1(1377, J$.C(16, J$.B(18, '===', J$.G(97, J$.R(89, 'data', data, 0), 'length', 0), J$.T(105, 0, 22, false), 0))))
                                return J$.X1(129, J$.Rt(121, J$.T(113, false, 23, false)));
                            var regexp = J$.X1(185, J$.W(177, 'regexp', J$.R(137, 'data', data, 0), regexp, 1)), tail = J$.X1(201, J$.W(193, 'tail', J$.M(161, J$.T(145, /\/([gim]*)$/, 14, false), 'exec', 0)(J$.R(153, 'data', data, 0)), tail, 1)), modifiers = J$.X1(217, J$.W(209, 'modifiers', J$.T(169, '', 21, false), modifiers, 1));
                            if (J$.X1(1409, J$.C(48, J$.B(26, '===', J$.G(241, J$.R(225, 'regexp', regexp, 0), J$.T(233, 0, 22, false), 4), J$.T(249, '/', 21, false), 0)))) {
                                if (J$.X1(1385, J$.C(24, J$.R(257, 'tail', tail, 0))))
                                    J$.X1(297, modifiers = J$.W(289, 'modifiers', J$.G(281, J$.R(265, 'tail', tail, 0), J$.T(273, 1, 22, false), 4), modifiers, 0));
                                if (J$.X1(1393, J$.C(32, J$.B(34, '>', J$.G(313, J$.R(305, 'modifiers', modifiers, 0), 'length', 0), J$.T(321, 3, 22, false), 0))))
                                    return J$.X1(345, J$.Rt(337, J$.T(329, false, 23, false)));
                                if (J$.X1(1401, J$.C(40, J$.B(58, '!==', J$.G(401, J$.R(353, 'regexp', regexp, 0), J$.B(50, '-', J$.B(42, '-', J$.G(369, J$.R(361, 'regexp', regexp, 0), 'length', 0), J$.G(385, J$.R(377, 'modifiers', modifiers, 0), 'length', 0), 0), J$.T(393, 1, 22, false), 0), 4), J$.T(409, '/', 21, false), 0))))
                                    return J$.X1(433, J$.Rt(425, J$.T(417, false, 23, false)));
                            }
                            return J$.X1(457, J$.Rt(449, J$.T(441, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1417, J$e);
                        } finally {
                            if (J$.Fr(1425))
                                continue jalangiLabel157;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructJavascriptRegExp(data) {
                jalangiLabel158:
                    while (true) {
                        try {
                            J$.Fe(809, arguments.callee, this, arguments);
                            arguments = J$.N(817, 'arguments', arguments, 4);
                            data = J$.N(825, 'data', data, 4);
                            J$.N(833, 'regexp', regexp, 0);
                            J$.N(841, 'tail', tail, 0);
                            J$.N(849, 'modifiers', modifiers, 0);
                            var regexp = J$.X1(561, J$.W(553, 'regexp', J$.R(513, 'data', data, 0), regexp, 1)), tail = J$.X1(577, J$.W(569, 'tail', J$.M(537, J$.T(521, /\/([gim]*)$/, 14, false), 'exec', 0)(J$.R(529, 'data', data, 0)), tail, 1)), modifiers = J$.X1(593, J$.W(585, 'modifiers', J$.T(545, '', 21, false), modifiers, 1));
                            if (J$.X1(1441, J$.C(64, J$.B(66, '===', J$.G(617, J$.R(601, 'regexp', regexp, 0), J$.T(609, 0, 22, false), 4), J$.T(625, '/', 21, false), 0)))) {
                                if (J$.X1(1433, J$.C(56, J$.R(633, 'tail', tail, 0))))
                                    J$.X1(673, modifiers = J$.W(665, 'modifiers', J$.G(657, J$.R(641, 'tail', tail, 0), J$.T(649, 1, 22, false), 4), modifiers, 0));
                                J$.X1(753, regexp = J$.W(745, 'regexp', J$.M(737, J$.R(681, 'regexp', regexp, 0), 'slice', 0)(J$.T(689, 1, 22, false), J$.B(82, '-', J$.B(74, '-', J$.G(705, J$.R(697, 'regexp', regexp, 0), 'length', 0), J$.G(721, J$.R(713, 'modifiers', modifiers, 0), 'length', 0), 0), J$.T(729, 1, 22, false), 0)), regexp, 0));
                            }
                            return J$.X1(801, J$.Rt(793, J$.F(785, J$.R(761, 'RegExp', RegExp, 2), 1)(J$.R(769, 'regexp', regexp, 0), J$.R(777, 'modifiers', modifiers, 0))));
                        } catch (J$e) {
                            J$.Ex(1449, J$e);
                        } finally {
                            if (J$.Fr(1457))
                                continue jalangiLabel158;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function representJavascriptRegExp(object) {
                jalangiLabel159:
                    while (true) {
                        try {
                            J$.Fe(1073, arguments.callee, this, arguments);
                            arguments = J$.N(1081, 'arguments', arguments, 4);
                            object = J$.N(1089, 'object', object, 4);
                            J$.N(1097, 'result', result, 0);
                            var result = J$.X1(897, J$.W(889, 'result', J$.B(98, '+', J$.B(90, '+', J$.T(857, '/', 21, false), J$.G(873, J$.R(865, 'object', object, 0), 'source', 0), 0), J$.T(881, '/', 21, false), 0), result, 1));
                            if (J$.X1(1465, J$.C(72, J$.G(913, J$.R(905, 'object', object, 0), 'global', 0))))
                                J$.X1(945, result = J$.W(937, 'result', J$.B(106, '+', J$.R(929, 'result', result, 0), J$.T(921, 'g', 21, false), 0), result, 0));
                            if (J$.X1(1473, J$.C(80, J$.G(961, J$.R(953, 'object', object, 0), 'multiline', 0))))
                                J$.X1(993, result = J$.W(985, 'result', J$.B(114, '+', J$.R(977, 'result', result, 0), J$.T(969, 'm', 21, false), 0), result, 0));
                            if (J$.X1(1481, J$.C(88, J$.G(1009, J$.R(1001, 'object', object, 0), 'ignoreCase', 0))))
                                J$.X1(1041, result = J$.W(1033, 'result', J$.B(122, '+', J$.R(1025, 'result', result, 0), J$.T(1017, 'i', 21, false), 0), result, 0));
                            return J$.X1(1065, J$.Rt(1057, J$.R(1049, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(1489, J$e);
                        } finally {
                            if (J$.Fr(1497))
                                continue jalangiLabel159;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isRegExp(object) {
                jalangiLabel160:
                    while (true) {
                        try {
                            J$.Fe(1169, arguments.callee, this, arguments);
                            arguments = J$.N(1177, 'arguments', arguments, 4);
                            object = J$.N(1185, 'object', object, 4);
                            return J$.X1(1161, J$.Rt(1153, J$.B(130, '===', J$.M(1137, J$.G(1121, J$.G(1113, J$.R(1105, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.R(1129, 'object', object, 0)), J$.T(1145, '[object RegExp]', 21, false), 0)));
                        } catch (J$e) {
                            J$.Ex(1505, J$e);
                        } finally {
                            if (J$.Fr(1513))
                                continue jalangiLabel160;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1297, 'Type', Type, 0);
            resolveJavascriptRegExp = J$.N(1313, 'resolveJavascriptRegExp', J$.T(1305, resolveJavascriptRegExp, 12, false, 465), 0);
            constructJavascriptRegExp = J$.N(1329, 'constructJavascriptRegExp', J$.T(1321, constructJavascriptRegExp, 12, false, 809), 0);
            representJavascriptRegExp = J$.N(1345, 'representJavascriptRegExp', J$.T(1337, representJavascriptRegExp, 12, false, 1073), 0);
            isRegExp = J$.N(1361, 'isRegExp', J$.T(1353, isRegExp, 12, false, 1169), 0);
            var Type = J$.X1(41, J$.W(33, 'Type', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../../type', 21, false)), Type, 3));
            J$.X1(1281, J$.P(1273, J$.R(1193, 'module', module, 2), 'exports', J$.F(1265, J$.R(1201, 'Type', Type, 1), 1)(J$.T(1209, 'tag:yaml.org,2002:js/regexp', 21, false), J$.T(1257, {
                kind: J$.T(1217, 'scalar', 21, false),
                resolve: J$.R(1225, 'resolveJavascriptRegExp', resolveJavascriptRegExp, 1),
                construct: J$.R(1233, 'constructJavascriptRegExp', constructJavascriptRegExp, 1),
                predicate: J$.R(1241, 'isRegExp', isRegExp, 1),
                represent: J$.R(1249, 'representJavascriptRegExp', representJavascriptRegExp, 1)
            }, 11, false)), 0));
        } catch (J$e) {
            J$.Ex(1521, J$e);
        } finally {
            if (J$.Sr(1529)) {
                J$.L();
                continue jalangiLabel161;
            } else {
                J$.L();
                break jalangiLabel161;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
