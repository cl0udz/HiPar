J$.iids = {"8":[6,7,6,20],"9":[1,1,1,13],"10":[6,7,6,20],"16":[7,7,7,24],"17":[1,1,1,14],"18":[7,7,7,24],"24":[16,9,16,13],"25":[3,12,3,19],"26":[15,7,15,24],"32":[18,9,18,29],"33":[3,20,3,32],"34":[18,9,18,29],"40":[20,9,20,61],"41":[3,12,3,33],"42":[20,16,20,48],"48":[15,7,15,24],"49":[3,12,3,33],"50":[20,16,20,52],"56":[33,9,33,13],"57":[3,12,3,33],"58":[20,9,20,61],"64":[32,7,32,24],"65":[6,7,6,11],"66":[32,7,32,24],"72":[43,7,43,20],"73":[6,16,6,20],"74":[34,30,34,62],"80":[44,7,44,23],"81":[6,29,6,34],"82":[34,30,34,66],"88":[45,7,45,24],"89":[6,29,6,34],"90":[41,16,41,35],"97":[6,22,6,35],"98":[41,16,41,41],"105":[7,7,7,11],"106":[43,32,43,35],"113":[7,7,7,18],"114":[44,35,44,38],"121":[7,23,7,24],"122":[45,36,45,39],"129":[7,33,7,38],"130":[51,10,51,70],"137":[7,33,7,38],"145":[7,26,7,39],"153":[9,16,9,20],"161":[10,16,10,29],"169":[10,35,10,39],"177":[10,16,10,40],"179":[10,16,10,34],"185":[11,19,11,21],"193":[9,16,9,20],"201":[9,16,9,20],"209":[10,16,10,40],"217":[10,16,10,40],"225":[11,19,11,21],"233":[11,19,11,21],"241":[15,7,15,13],"249":[15,14,15,15],"257":[15,7,15,16],"265":[15,21,15,24],"273":[16,9,16,13],"281":[16,27,16,31],"289":[16,32,16,33],"297":[16,27,16,34],"305":[16,27,16,34],"313":[16,15,16,35],"321":[18,9,18,18],"329":[18,9,18,25],"337":[18,28,18,29],"345":[18,38,18,43],"353":[18,38,18,43],"361":[18,31,18,44],"369":[20,9,20,15],"377":[20,16,20,22],"385":[20,16,20,29],"393":[20,32,20,41],"401":[20,32,20,48],"409":[20,51,20,52],"417":[20,9,20,53],"425":[20,58,20,61],"433":[20,70,20,75],"441":[20,70,20,75],"449":[20,63,20,76],"457":[23,10,23,14],"465":[23,10,23,14],"473":[23,3,23,15],"481":[5,1,24,2],"489":[5,1,24,2],"497":[5,1,24,2],"505":[5,1,24,2],"513":[5,1,24,2],"521":[5,1,24,2],"529":[27,16,27,20],"537":[28,16,28,29],"545":[28,35,28,39],"553":[28,16,28,40],"555":[28,16,28,34],"561":[29,19,29,21],"569":[27,16,27,20],"577":[27,16,27,20],"585":[28,16,28,40],"593":[28,16,28,40],"601":[29,19,29,21],"609":[29,19,29,21],"617":[32,7,32,13],"625":[32,14,32,15],"633":[32,7,32,16],"641":[32,21,32,24],"649":[33,9,33,13],"657":[33,27,33,31],"665":[33,32,33,33],"673":[33,27,33,34],"681":[33,27,33,34],"689":[33,15,33,35],"697":[34,14,34,20],"705":[34,27,34,28],"713":[34,30,34,36],"721":[34,30,34,43],"729":[34,46,34,55],"737":[34,46,34,62],"745":[34,65,34,66],"753":[34,14,34,67],"755":[34,14,34,26],"761":[34,14,34,67],"769":[34,5,34,68],"777":[37,14,37,20],"785":[37,21,37,27],"793":[37,29,37,38],"801":[37,10,37,39],"809":[37,10,37,39],"817":[37,3,37,40],"825":[26,1,38,2],"833":[26,1,38,2],"841":[26,1,38,2],"849":[26,1,38,2],"857":[26,1,38,2],"865":[26,1,38,2],"873":[41,16,41,19],"881":[41,22,41,28],"889":[41,22,41,35],"897":[41,38,41,41],"905":[41,16,41,41],"913":[41,16,41,41],"921":[43,7,43,13],"929":[43,7,43,20],"937":[43,32,43,35],"945":[43,22,43,28],"953":[43,22,43,35],"961":[43,22,43,36],"969":[44,7,44,13],"977":[44,7,44,23],"985":[44,35,44,38],"993":[44,25,44,31],"1001":[44,25,44,38],"1009":[44,25,44,39],"1017":[45,7,45,13],"1025":[45,7,45,24],"1033":[45,36,45,39],"1041":[45,26,45,32],"1049":[45,26,45,39],"1057":[45,26,45,40],"1065":[47,10,47,16],"1073":[47,10,47,16],"1081":[47,3,47,17],"1089":[40,1,48,2],"1097":[40,1,48,2],"1105":[40,1,48,2],"1113":[40,1,48,2],"1121":[51,10,51,16],"1129":[51,10,51,26],"1137":[51,10,51,35],"1145":[51,41,51,47],"1153":[51,10,51,48],"1155":[51,10,51,40],"1161":[51,53,51,70],"1169":[51,10,51,70],"1177":[51,3,51,71],"1185":[50,1,52,2],"1193":[50,1,52,2],"1201":[50,1,52,2],"1209":[54,1,54,7],"1217":[54,22,54,26],"1225":[54,27,54,56],"1233":[55,9,55,17],"1241":[56,12,56,35],"1249":[57,14,57,39],"1257":[58,14,58,22],"1265":[59,14,59,39],"1273":[54,58,60,2],"1281":[54,18,60,3],"1289":[54,1,60,3],"1297":[54,1,60,4],"1305":[1,1,61,1],"1313":[1,1,61,1],"1321":[5,1,24,2],"1329":[1,1,61,1],"1337":[26,1,38,2],"1345":[1,1,61,1],"1353":[40,1,48,2],"1361":[1,1,61,1],"1369":[50,1,52,2],"1377":[1,1,61,1],"1385":[6,3,6,35],"1393":[7,3,7,39],"1401":[16,5,16,35],"1409":[18,5,18,44],"1417":[20,5,20,76],"1425":[15,3,21,4],"1433":[5,1,24,2],"1441":[5,1,24,2],"1449":[33,5,33,35],"1457":[32,3,35,4],"1465":[26,1,38,2],"1473":[26,1,38,2],"1481":[43,3,43,36],"1489":[44,3,44,39],"1497":[45,3,45,40],"1505":[40,1,48,2],"1513":[40,1,48,2],"1521":[50,1,52,2],"1529":[50,1,52,2],"1537":[1,1,61,1],"1545":[1,1,61,1],"nBranches":22,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/regexp_jalangi_.js","code":"'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n"};
jalangiLabel157:
    while (true) {
        try {
            J$.Se(1305, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/regexp_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js');
            function resolveJavascriptRegExp(data) {
                jalangiLabel153:
                    while (true) {
                        try {
                            J$.Fe(481, arguments.callee, this, arguments);
                            arguments = J$.N(489, 'arguments', arguments, 4);
                            data = J$.N(497, 'data', data, 4);
                            J$.N(505, 'regexp', regexp, 0);
                            J$.N(513, 'tail', tail, 0);
                            J$.N(521, 'modifiers', modifiers, 0);
                            if (J$.X1(1385, J$.C(8, J$.B(10, '===', J$.R(65, 'data', data, 0), J$.T(73, null, 25, false), 0))))
                                return J$.X1(97, J$.Rt(89, J$.T(81, false, 23, false)));
                            if (J$.X1(1393, J$.C(16, J$.B(18, '===', J$.G(113, J$.R(105, 'data', data, 0), 'length', 0), J$.T(121, 0, 22, false), 0))))
                                return J$.X1(145, J$.Rt(137, J$.T(129, false, 23, false)));
                            var regexp = J$.X1(201, J$.W(193, 'regexp', J$.R(153, 'data', data, 0), regexp, 1)), tail = J$.X1(217, J$.W(209, 'tail', J$.M(177, J$.T(161, /\/([gim]*)$/, 14, false), 'exec', 0)(J$.R(169, 'data', data, 0)), tail, 1)), modifiers = J$.X1(233, J$.W(225, 'modifiers', J$.T(185, '', 21, false), modifiers, 1));
                            if (J$.X1(1425, J$.C(48, J$.B(26, '===', J$.G(257, J$.R(241, 'regexp', regexp, 0), J$.T(249, 0, 22, false), 4), J$.T(265, '/', 21, false), 0)))) {
                                if (J$.X1(1401, J$.C(24, J$.R(273, 'tail', tail, 0))))
                                    J$.X1(313, modifiers = J$.W(305, 'modifiers', J$.G(297, J$.R(281, 'tail', tail, 0), J$.T(289, 1, 22, false), 4), modifiers, 0));
                                if (J$.X1(1409, J$.C(32, J$.B(34, '>', J$.G(329, J$.R(321, 'modifiers', modifiers, 0), 'length', 0), J$.T(337, 3, 22, false), 0))))
                                    return J$.X1(361, J$.Rt(353, J$.T(345, false, 23, false)));
                                if (J$.X1(1417, J$.C(40, J$.B(58, '!==', J$.G(417, J$.R(369, 'regexp', regexp, 0), J$.B(50, '-', J$.B(42, '-', J$.G(385, J$.R(377, 'regexp', regexp, 0), 'length', 0), J$.G(401, J$.R(393, 'modifiers', modifiers, 0), 'length', 0), 0), J$.T(409, 1, 22, false), 0), 4), J$.T(425, '/', 21, false), 0))))
                                    return J$.X1(449, J$.Rt(441, J$.T(433, false, 23, false)));
                            }
                            return J$.X1(473, J$.Rt(465, J$.T(457, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1433, J$e);
                        } finally {
                            if (J$.Fr(1441))
                                continue jalangiLabel153;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructJavascriptRegExp(data) {
                jalangiLabel154:
                    while (true) {
                        try {
                            J$.Fe(825, arguments.callee, this, arguments);
                            arguments = J$.N(833, 'arguments', arguments, 4);
                            data = J$.N(841, 'data', data, 4);
                            J$.N(849, 'regexp', regexp, 0);
                            J$.N(857, 'tail', tail, 0);
                            J$.N(865, 'modifiers', modifiers, 0);
                            var regexp = J$.X1(577, J$.W(569, 'regexp', J$.R(529, 'data', data, 0), regexp, 1)), tail = J$.X1(593, J$.W(585, 'tail', J$.M(553, J$.T(537, /\/([gim]*)$/, 14, false), 'exec', 0)(J$.R(545, 'data', data, 0)), tail, 1)), modifiers = J$.X1(609, J$.W(601, 'modifiers', J$.T(561, '', 21, false), modifiers, 1));
                            if (J$.X1(1457, J$.C(64, J$.B(66, '===', J$.G(633, J$.R(617, 'regexp', regexp, 0), J$.T(625, 0, 22, false), 4), J$.T(641, '/', 21, false), 0)))) {
                                if (J$.X1(1449, J$.C(56, J$.R(649, 'tail', tail, 0))))
                                    J$.X1(689, modifiers = J$.W(681, 'modifiers', J$.G(673, J$.R(657, 'tail', tail, 0), J$.T(665, 1, 22, false), 4), modifiers, 0));
                                J$.X1(769, regexp = J$.W(761, 'regexp', J$.M(753, J$.R(697, 'regexp', regexp, 0), 'slice', 0)(J$.T(705, 1, 22, false), J$.B(82, '-', J$.B(74, '-', J$.G(721, J$.R(713, 'regexp', regexp, 0), 'length', 0), J$.G(737, J$.R(729, 'modifiers', modifiers, 0), 'length', 0), 0), J$.T(745, 1, 22, false), 0)), regexp, 0));
                            }
                            return J$.X1(817, J$.Rt(809, J$.F(801, J$.R(777, 'RegExp', RegExp, 2), 1)(J$.R(785, 'regexp', regexp, 0), J$.R(793, 'modifiers', modifiers, 0))));
                        } catch (J$e) {
                            J$.Ex(1465, J$e);
                        } finally {
                            if (J$.Fr(1473))
                                continue jalangiLabel154;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function representJavascriptRegExp(object) {
                jalangiLabel155:
                    while (true) {
                        try {
                            J$.Fe(1089, arguments.callee, this, arguments);
                            arguments = J$.N(1097, 'arguments', arguments, 4);
                            object = J$.N(1105, 'object', object, 4);
                            J$.N(1113, 'result', result, 0);
                            var result = J$.X1(913, J$.W(905, 'result', J$.B(98, '+', J$.B(90, '+', J$.T(873, '/', 21, false), J$.G(889, J$.R(881, 'object', object, 0), 'source', 0), 0), J$.T(897, '/', 21, false), 0), result, 1));
                            if (J$.X1(1481, J$.C(72, J$.G(929, J$.R(921, 'object', object, 0), 'global', 0))))
                                J$.X1(961, result = J$.W(953, 'result', J$.B(106, '+', J$.R(945, 'result', result, 0), J$.T(937, 'g', 21, false), 0), result, 0));
                            if (J$.X1(1489, J$.C(80, J$.G(977, J$.R(969, 'object', object, 0), 'multiline', 0))))
                                J$.X1(1009, result = J$.W(1001, 'result', J$.B(114, '+', J$.R(993, 'result', result, 0), J$.T(985, 'm', 21, false), 0), result, 0));
                            if (J$.X1(1497, J$.C(88, J$.G(1025, J$.R(1017, 'object', object, 0), 'ignoreCase', 0))))
                                J$.X1(1057, result = J$.W(1049, 'result', J$.B(122, '+', J$.R(1041, 'result', result, 0), J$.T(1033, 'i', 21, false), 0), result, 0));
                            return J$.X1(1081, J$.Rt(1073, J$.R(1065, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(1505, J$e);
                        } finally {
                            if (J$.Fr(1513))
                                continue jalangiLabel155;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isRegExp(object) {
                jalangiLabel156:
                    while (true) {
                        try {
                            J$.Fe(1185, arguments.callee, this, arguments);
                            arguments = J$.N(1193, 'arguments', arguments, 4);
                            object = J$.N(1201, 'object', object, 4);
                            return J$.X1(1177, J$.Rt(1169, J$.B(130, '===', J$.M(1153, J$.G(1137, J$.G(1129, J$.R(1121, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.R(1145, 'object', object, 0)), J$.T(1161, '[object RegExp]', 21, false), 0)));
                        } catch (J$e) {
                            J$.Ex(1521, J$e);
                        } finally {
                            if (J$.Fr(1529))
                                continue jalangiLabel156;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1313, 'Type', Type, 0);
            resolveJavascriptRegExp = J$.N(1329, 'resolveJavascriptRegExp', J$.T(1321, resolveJavascriptRegExp, 12, false, 481), 0);
            constructJavascriptRegExp = J$.N(1345, 'constructJavascriptRegExp', J$.T(1337, constructJavascriptRegExp, 12, false, 825), 0);
            representJavascriptRegExp = J$.N(1361, 'representJavascriptRegExp', J$.T(1353, representJavascriptRegExp, 12, false, 1089), 0);
            isRegExp = J$.N(1377, 'isRegExp', J$.T(1369, isRegExp, 12, false, 1185), 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var Type = J$.X1(57, J$.W(49, 'Type', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../../type', 21, false)), Type, 3));
            J$.X1(1297, J$.P(1289, J$.R(1209, 'module', module, 2), 'exports', J$.F(1281, J$.R(1217, 'Type', Type, 1), 1)(J$.T(1225, 'tag:yaml.org,2002:js/regexp', 21, false), J$.T(1273, {
                kind: J$.T(1233, 'scalar', 21, false),
                resolve: J$.R(1241, 'resolveJavascriptRegExp', resolveJavascriptRegExp, 1),
                construct: J$.R(1249, 'constructJavascriptRegExp', constructJavascriptRegExp, 1),
                predicate: J$.R(1257, 'isRegExp', isRegExp, 1),
                represent: J$.R(1265, 'representJavascriptRegExp', representJavascriptRegExp, 1)
            }, 11, false)), 0));
        } catch (J$e) {
            J$.Ex(1537, J$e);
        } finally {
            if (J$.Sr(1545)) {
                J$.L();
                continue jalangiLabel157;
            } else {
                J$.L();
                break jalangiLabel157;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
