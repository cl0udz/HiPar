J$.iids = {"8":[5,7,5,20],"9":[2,12,2,19],"10":[5,7,5,20],"16":[9,10,9,35],"17":[2,20,2,29],"18":[9,10,9,19],"24":[10,17,10,51],"25":[2,12,2,30],"26":[9,23,9,35],"32":[10,17,10,70],"33":[2,12,2,30],"34":[10,3,10,12],"40":[10,3,10,71],"41":[2,12,2,30],"42":[10,17,10,32],"48":[9,10,10,71],"49":[5,7,5,11],"50":[10,36,10,51],"57":[5,16,5,20],"58":[10,55,10,70],"65":[5,29,5,33],"66":[18,10,18,25],"73":[5,29,5,33],"81":[5,22,5,34],"89":[7,13,7,17],"97":[7,13,7,24],"105":[7,13,7,24],"113":[7,13,7,24],"121":[9,10,9,13],"129":[9,18,9,19],"137":[9,23,9,27],"145":[9,32,9,35],"153":[10,3,10,6],"161":[10,11,10,12],"169":[10,17,10,21],"177":[10,26,10,32],"185":[10,36,10,40],"193":[10,45,10,51],"201":[10,55,10,59],"209":[10,64,10,70],"217":[9,10,10,71],"225":[9,3,10,72],"233":[4,1,11,2],"241":[4,1,11,2],"249":[4,1,11,2],"257":[4,1,11,2],"265":[14,10,14,14],"273":[14,10,14,14],"281":[14,3,14,15],"289":[13,1,15,2],"297":[13,1,15,2],"305":[18,10,18,16],"313":[18,21,18,25],"321":[18,10,18,25],"329":[18,3,18,26],"337":[17,1,19,2],"345":[17,1,19,2],"353":[17,1,19,2],"361":[21,1,21,7],"369":[21,22,21,26],"377":[21,27,21,51],"385":[22,9,22,17],"393":[23,12,23,27],"401":[24,14,24,31],"409":[25,14,25,20],"417":[27,45,27,48],"425":[27,45,27,48],"433":[27,38,27,49],"441":[27,16,27,50],"449":[27,16,27,50],"457":[27,16,27,50],"465":[27,16,27,50],"473":[28,45,28,51],"481":[28,45,28,51],"489":[28,38,28,52],"497":[28,16,28,53],"505":[28,16,28,53],"513":[28,16,28,53],"521":[28,16,28,53],"529":[29,45,29,51],"537":[29,45,29,51],"545":[29,38,29,52],"553":[29,16,29,53],"561":[29,16,29,53],"569":[29,16,29,53],"577":[29,16,29,53],"585":[30,45,30,51],"593":[30,45,30,51],"601":[30,38,30,52],"609":[30,16,30,53],"617":[30,16,30,53],"625":[30,16,30,53],"633":[30,16,30,53],"641":[26,14,30,55],"649":[32,17,32,28],"657":[21,53,32,30],"665":[21,18,32,31],"673":[21,1,32,31],"681":[21,1,32,32],"689":[1,1,32,32],"697":[1,1,32,32],"705":[4,1,11,2],"713":[1,1,32,32],"721":[13,1,15,2],"729":[1,1,32,32],"737":[17,1,19,2],"745":[1,1,32,32],"753":[5,3,5,34],"761":[4,1,11,2],"769":[4,1,11,2],"777":[13,1,15,2],"785":[13,1,15,2],"793":[17,1,19,2],"801":[17,1,19,2],"809":[27,16,27,50],"817":[27,16,27,50],"825":[28,16,28,53],"833":[28,16,28,53],"841":[29,16,29,53],"849":[29,16,29,53],"857":[30,16,30,53],"865":[30,16,30,53],"873":[1,1,32,32],"881":[1,1,32,32],"nBranches":12,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/null.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/null_jalangi_.js","code":"'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n"};
jalangiLabel103:
    while (true) {
        try {
            J$.Se(689, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/null_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/null.js');
            function resolveYamlNull(data) {
                jalangiLabel96:
                    while (true) {
                        try {
                            J$.Fe(233, arguments.callee, this, arguments);
                            arguments = J$.N(241, 'arguments', arguments, 4);
                            data = J$.N(249, 'data', data, 4);
                            J$.N(257, 'max', max, 0);
                            if (J$.X1(753, J$.C(8, J$.B(10, '===', J$.R(49, 'data', data, 0), J$.T(57, null, 25, false), 0))))
                                return J$.X1(81, J$.Rt(73, J$.T(65, true, 23, false)));
                            var max = J$.X1(113, J$.W(105, 'max', J$.G(97, J$.R(89, 'data', data, 0), 'length', 0), max, 1));
                            return J$.X1(225, J$.Rt(217, J$.C(48, J$.C(16, J$.B(18, '===', J$.R(121, 'max', max, 0), J$.T(129, 1, 22, false), 0)) ? J$.B(26, '===', J$.R(137, 'data', data, 0), J$.T(145, '~', 21, false), 0) : J$._()) ? J$._() : J$.C(40, J$.B(34, '===', J$.R(153, 'max', max, 0), J$.T(161, 4, 22, false), 0)) ? J$.C(32, J$.C(24, J$.B(42, '===', J$.R(169, 'data', data, 0), J$.T(177, 'null', 21, false), 0)) ? J$._() : J$.B(50, '===', J$.R(185, 'data', data, 0), J$.T(193, 'Null', 21, false), 0)) ? J$._() : J$.B(58, '===', J$.R(201, 'data', data, 0), J$.T(209, 'NULL', 21, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(761, J$e);
                        } finally {
                            if (J$.Fr(769))
                                continue jalangiLabel96;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlNull() {
                jalangiLabel97:
                    while (true) {
                        try {
                            J$.Fe(289, arguments.callee, this, arguments);
                            arguments = J$.N(297, 'arguments', arguments, 4);
                            return J$.X1(281, J$.Rt(273, J$.T(265, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(777, J$e);
                        } finally {
                            if (J$.Fr(785))
                                continue jalangiLabel97;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isNull(object) {
                jalangiLabel98:
                    while (true) {
                        try {
                            J$.Fe(337, arguments.callee, this, arguments);
                            arguments = J$.N(345, 'arguments', arguments, 4);
                            object = J$.N(353, 'object', object, 4);
                            return J$.X1(329, J$.Rt(321, J$.B(66, '===', J$.R(305, 'object', object, 0), J$.T(313, null, 25, false), 0)));
                        } catch (J$e) {
                            J$.Ex(793, J$e);
                        } finally {
                            if (J$.Fr(801))
                                continue jalangiLabel98;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(697, 'Type', Type, 0);
            resolveYamlNull = J$.N(713, 'resolveYamlNull', J$.T(705, resolveYamlNull, 12, false, 233), 0);
            constructYamlNull = J$.N(729, 'constructYamlNull', J$.T(721, constructYamlNull, 12, false, 289), 0);
            isNull = J$.N(745, 'isNull', J$.T(737, isNull, 12, false, 337), 0);
            var Type = J$.X1(41, J$.W(33, 'Type', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../type', 21, false)), Type, 3));
            J$.X1(681, J$.P(673, J$.R(361, 'module', module, 2), 'exports', J$.F(665, J$.R(369, 'Type', Type, 1), 1)(J$.T(377, 'tag:yaml.org,2002:null', 21, false), J$.T(657, {
                kind: J$.T(385, 'scalar', 21, false),
                resolve: J$.R(393, 'resolveYamlNull', resolveYamlNull, 1),
                construct: J$.R(401, 'constructYamlNull', constructYamlNull, 1),
                predicate: J$.R(409, 'isNull', isNull, 1),
                represent: J$.T(641, {
                    canonical: J$.T(465, function canonical() {
                        jalangiLabel99:
                            while (true) {
                                try {
                                    J$.Fe(441, arguments.callee, this, arguments);
                                    arguments = J$.N(449, 'arguments', arguments, 4);
                                    canonical = J$.N(457, 'canonical', canonical, 0);
                                    return J$.X1(433, J$.Rt(425, J$.T(417, '~', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(809, J$e);
                                } finally {
                                    if (J$.Fr(817))
                                        continue jalangiLabel99;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 441),
                    lowercase: J$.T(521, function lowercase() {
                        jalangiLabel100:
                            while (true) {
                                try {
                                    J$.Fe(497, arguments.callee, this, arguments);
                                    arguments = J$.N(505, 'arguments', arguments, 4);
                                    lowercase = J$.N(513, 'lowercase', lowercase, 0);
                                    return J$.X1(489, J$.Rt(481, J$.T(473, 'null', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(825, J$e);
                                } finally {
                                    if (J$.Fr(833))
                                        continue jalangiLabel100;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 497),
                    uppercase: J$.T(577, function uppercase() {
                        jalangiLabel101:
                            while (true) {
                                try {
                                    J$.Fe(553, arguments.callee, this, arguments);
                                    arguments = J$.N(561, 'arguments', arguments, 4);
                                    uppercase = J$.N(569, 'uppercase', uppercase, 0);
                                    return J$.X1(545, J$.Rt(537, J$.T(529, 'NULL', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(841, J$e);
                                } finally {
                                    if (J$.Fr(849))
                                        continue jalangiLabel101;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 553),
                    camelcase: J$.T(633, function camelcase() {
                        jalangiLabel102:
                            while (true) {
                                try {
                                    J$.Fe(609, arguments.callee, this, arguments);
                                    arguments = J$.N(617, 'arguments', arguments, 4);
                                    camelcase = J$.N(625, 'camelcase', camelcase, 0);
                                    return J$.X1(601, J$.Rt(593, J$.T(585, 'Null', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(857, J$e);
                                } finally {
                                    if (J$.Fr(865))
                                        continue jalangiLabel102;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 609)
                }, 11, false),
                defaultStyle: J$.T(649, 'lowercase', 21, false)
            }, 11, false)), 0));
        } catch (J$e) {
            J$.Ex(873, J$e);
        } finally {
            if (J$.Sr(881)) {
                J$.L();
                continue jalangiLabel103;
            } else {
                J$.L();
                break jalangiLabel103;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
