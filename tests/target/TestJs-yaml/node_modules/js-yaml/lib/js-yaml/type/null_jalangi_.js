J$.iids = {"8":[6,7,6,20],"9":[1,1,1,13],"10":[6,7,6,20],"16":[10,11,10,36],"17":[1,1,1,14],"18":[10,11,10,20],"24":[11,25,11,59],"25":[3,12,3,19],"26":[10,24,10,36],"32":[11,25,11,78],"33":[3,20,3,29],"34":[11,11,11,20],"40":[11,11,11,79],"41":[3,12,3,30],"42":[11,25,11,40],"48":[10,10,11,80],"49":[3,12,3,30],"50":[11,44,11,59],"57":[3,12,3,30],"58":[11,63,11,78],"65":[6,7,6,11],"66":[19,10,19,25],"73":[6,16,6,20],"81":[6,29,6,33],"89":[6,29,6,33],"97":[6,22,6,34],"105":[8,13,8,17],"113":[8,13,8,24],"121":[8,13,8,24],"129":[8,13,8,24],"137":[10,11,10,14],"145":[10,19,10,20],"153":[10,24,10,28],"161":[10,33,10,36],"169":[11,11,11,14],"177":[11,19,11,20],"185":[11,25,11,29],"193":[11,34,11,40],"201":[11,44,11,48],"209":[11,53,11,59],"217":[11,63,11,67],"225":[11,72,11,78],"233":[10,10,11,80],"241":[10,3,11,81],"249":[5,1,12,2],"257":[5,1,12,2],"265":[5,1,12,2],"273":[5,1,12,2],"281":[15,10,15,14],"289":[15,10,15,14],"297":[15,3,15,15],"305":[14,1,16,2],"313":[14,1,16,2],"321":[19,10,19,16],"329":[19,21,19,25],"337":[19,10,19,25],"345":[19,3,19,26],"353":[18,1,20,2],"361":[18,1,20,2],"369":[18,1,20,2],"377":[22,1,22,7],"385":[22,22,22,26],"393":[22,27,22,51],"401":[23,9,23,17],"409":[24,12,24,27],"417":[25,14,25,31],"425":[26,14,26,20],"433":[28,37,28,40],"441":[28,37,28,40],"449":[28,30,28,41],"457":[28,16,28,46],"465":[28,16,28,46],"473":[28,16,28,46],"481":[29,37,29,43],"489":[29,37,29,43],"497":[29,30,29,44],"505":[29,16,29,46],"513":[29,16,29,46],"521":[29,16,29,46],"529":[30,37,30,43],"537":[30,37,30,43],"545":[30,30,30,44],"553":[30,16,30,46],"561":[30,16,30,46],"569":[30,16,30,46],"577":[31,37,31,43],"585":[31,37,31,43],"593":[31,30,31,44],"601":[31,16,31,46],"609":[31,16,31,46],"617":[31,16,31,46],"625":[27,14,32,4],"633":[33,17,33,28],"641":[22,53,34,2],"649":[22,18,34,3],"657":[22,1,34,3],"665":[22,1,34,4],"673":[1,1,35,1],"681":[1,1,35,1],"689":[5,1,12,2],"697":[1,1,35,1],"705":[14,1,16,2],"713":[1,1,35,1],"721":[18,1,20,2],"729":[1,1,35,1],"737":[6,3,6,34],"745":[5,1,12,2],"753":[5,1,12,2],"761":[14,1,16,2],"769":[14,1,16,2],"777":[18,1,20,2],"785":[18,1,20,2],"793":[28,16,28,46],"801":[28,16,28,46],"809":[29,16,29,46],"817":[29,16,29,46],"825":[30,16,30,46],"833":[30,16,30,46],"841":[31,16,31,46],"849":[31,16,31,46],"857":[1,1,35,1],"865":[1,1,35,1],"nBranches":12,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/null.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/null_jalangi_.js","code":"'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n"};
jalangiLabel99:
    while (true) {
        try {
            J$.Se(673, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/null_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/null.js');
            function resolveYamlNull(data) {
                jalangiLabel92:
                    while (true) {
                        try {
                            J$.Fe(249, arguments.callee, this, arguments);
                            arguments = J$.N(257, 'arguments', arguments, 4);
                            data = J$.N(265, 'data', data, 4);
                            J$.N(273, 'max', max, 0);
                            if (J$.X1(737, J$.C(8, J$.B(10, '===', J$.R(65, 'data', data, 0), J$.T(73, null, 25, false), 0))))
                                return J$.X1(97, J$.Rt(89, J$.T(81, true, 23, false)));
                            var max = J$.X1(129, J$.W(121, 'max', J$.G(113, J$.R(105, 'data', data, 0), 'length', 0), max, 1));
                            return J$.X1(241, J$.Rt(233, J$.C(48, J$.C(16, J$.B(18, '===', J$.R(137, 'max', max, 0), J$.T(145, 1, 22, false), 0)) ? J$.B(26, '===', J$.R(153, 'data', data, 0), J$.T(161, '~', 21, false), 0) : J$._()) ? J$._() : J$.C(40, J$.B(34, '===', J$.R(169, 'max', max, 0), J$.T(177, 4, 22, false), 0)) ? J$.C(32, J$.C(24, J$.B(42, '===', J$.R(185, 'data', data, 0), J$.T(193, 'null', 21, false), 0)) ? J$._() : J$.B(50, '===', J$.R(201, 'data', data, 0), J$.T(209, 'Null', 21, false), 0)) ? J$._() : J$.B(58, '===', J$.R(217, 'data', data, 0), J$.T(225, 'NULL', 21, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(745, J$e);
                        } finally {
                            if (J$.Fr(753))
                                continue jalangiLabel92;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlNull() {
                jalangiLabel93:
                    while (true) {
                        try {
                            J$.Fe(305, arguments.callee, this, arguments);
                            arguments = J$.N(313, 'arguments', arguments, 4);
                            return J$.X1(297, J$.Rt(289, J$.T(281, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(761, J$e);
                        } finally {
                            if (J$.Fr(769))
                                continue jalangiLabel93;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isNull(object) {
                jalangiLabel94:
                    while (true) {
                        try {
                            J$.Fe(353, arguments.callee, this, arguments);
                            arguments = J$.N(361, 'arguments', arguments, 4);
                            object = J$.N(369, 'object', object, 4);
                            return J$.X1(345, J$.Rt(337, J$.B(66, '===', J$.R(321, 'object', object, 0), J$.T(329, null, 25, false), 0)));
                        } catch (J$e) {
                            J$.Ex(777, J$e);
                        } finally {
                            if (J$.Fr(785))
                                continue jalangiLabel94;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(681, 'Type', Type, 0);
            resolveYamlNull = J$.N(697, 'resolveYamlNull', J$.T(689, resolveYamlNull, 12, false, 249), 0);
            constructYamlNull = J$.N(713, 'constructYamlNull', J$.T(705, constructYamlNull, 12, false, 305), 0);
            isNull = J$.N(729, 'isNull', J$.T(721, isNull, 12, false, 353), 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var Type = J$.X1(57, J$.W(49, 'Type', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../type', 21, false)), Type, 3));
            J$.X1(665, J$.P(657, J$.R(377, 'module', module, 2), 'exports', J$.F(649, J$.R(385, 'Type', Type, 1), 1)(J$.T(393, 'tag:yaml.org,2002:null', 21, false), J$.T(641, {
                kind: J$.T(401, 'scalar', 21, false),
                resolve: J$.R(409, 'resolveYamlNull', resolveYamlNull, 1),
                construct: J$.R(417, 'constructYamlNull', constructYamlNull, 1),
                predicate: J$.R(425, 'isNull', isNull, 1),
                represent: J$.T(625, {
                    canonical: J$.T(473, function () {
                        jalangiLabel95:
                            while (true) {
                                try {
                                    J$.Fe(457, arguments.callee, this, arguments);
                                    arguments = J$.N(465, 'arguments', arguments, 4);
                                    return J$.X1(449, J$.Rt(441, J$.T(433, '~', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(793, J$e);
                                } finally {
                                    if (J$.Fr(801))
                                        continue jalangiLabel95;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 457),
                    lowercase: J$.T(521, function () {
                        jalangiLabel96:
                            while (true) {
                                try {
                                    J$.Fe(505, arguments.callee, this, arguments);
                                    arguments = J$.N(513, 'arguments', arguments, 4);
                                    return J$.X1(497, J$.Rt(489, J$.T(481, 'null', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(809, J$e);
                                } finally {
                                    if (J$.Fr(817))
                                        continue jalangiLabel96;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 505),
                    uppercase: J$.T(569, function () {
                        jalangiLabel97:
                            while (true) {
                                try {
                                    J$.Fe(553, arguments.callee, this, arguments);
                                    arguments = J$.N(561, 'arguments', arguments, 4);
                                    return J$.X1(545, J$.Rt(537, J$.T(529, 'NULL', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(825, J$e);
                                } finally {
                                    if (J$.Fr(833))
                                        continue jalangiLabel97;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 553),
                    camelcase: J$.T(617, function () {
                        jalangiLabel98:
                            while (true) {
                                try {
                                    J$.Fe(601, arguments.callee, this, arguments);
                                    arguments = J$.N(609, 'arguments', arguments, 4);
                                    return J$.X1(593, J$.Rt(585, J$.T(577, 'Null', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(841, J$e);
                                } finally {
                                    if (J$.Fr(849))
                                        continue jalangiLabel98;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 601)
                }, 11, false),
                defaultStyle: J$.T(633, 'lowercase', 21, false)
            }, 11, false)), 0));
        } catch (J$e) {
            J$.Ex(857, J$e);
        } finally {
            if (J$.Sr(865)) {
                J$.L();
                continue jalangiLabel99;
            } else {
                J$.L();
                break jalangiLabel99;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
