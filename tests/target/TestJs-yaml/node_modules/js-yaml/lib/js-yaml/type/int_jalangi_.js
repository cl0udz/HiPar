J$.iids = {"8":[7,11,7,51],"9":[1,1,1,13],"10":[7,12,7,28],"16":[8,11,8,51],"17":[1,1,1,14],"18":[7,34,7,43],"24":[7,10,8,52],"25":[3,14,3,21],"26":[8,12,8,28],"32":[9,11,9,51],"33":[3,22,3,33],"34":[8,34,8,43],"40":[7,10,9,52],"41":[3,14,3,34],"42":[9,12,9,28],"48":[13,11,13,51],"49":[3,14,3,34],"50":[9,34,9,43],"56":[17,11,17,51],"57":[3,14,3,34],"58":[13,12,13,28],"64":[21,7,21,20],"65":[4,14,4,21],"66":[13,34,13,43],"72":[28,7,28,11],"73":[4,22,4,31],"74":[17,12,17,28],"80":[33,7,33,31],"81":[4,14,4,32],"82":[17,34,17,43],"88":[33,7,33,31],"89":[4,14,4,32],"90":[21,7,21,20],"96":[39,9,39,26],"97":[4,14,4,32],"98":[28,7,28,11],"104":[50,13,50,23],"105":[7,12,7,16],"106":[33,7,33,17],"112":[51,13,51,37],"113":[7,27,7,28],"114":[33,21,33,31],"120":[51,13,51,37],"121":[7,34,7,35],"122":[34,15,34,22],"128":[48,14,48,25],"129":[7,39,7,43],"136":[54,14,54,37],"137":[8,12,8,16],"138":[37,7,37,17],"144":[44,9,44,19],"145":[8,27,8,28],"146":[39,9,39,18],"152":[64,13,64,23],"153":[8,34,8,35],"154":[39,9,39,26],"160":[65,13,65,47],"161":[8,39,8,43],"162":[40,15,40,22],"168":[62,14,62,25],"169":[9,12,9,16],"176":[68,14,68,37],"177":[9,27,9,28],"178":[44,9,44,19],"184":[58,9,58,19],"185":[9,34,9,35],"186":[46,7,46,14],"192":[74,11,74,21],"193":[9,39,9,43],"200":[75,11,75,45],"201":[7,10,9,52],"202":[46,7,46,14],"208":[72,12,72,23],"209":[7,3,9,53],"210":[48,14,48,25],"216":[78,12,78,35],"217":[6,1,10,2],"218":[48,27,48,34],"224":[37,7,37,17],"225":[6,1,10,2],"232":[84,7,84,17],"233":[6,1,10,2],"234":[48,27,48,34],"240":[88,9,88,19],"241":[13,12,13,16],"242":[50,13,50,23],"248":[89,9,89,19],"249":[13,27,13,28],"250":[51,13,51,23],"256":[90,9,90,43],"257":[13,34,13,35],"258":[51,27,51,37],"264":[86,10,86,21],"265":[13,39,13,43],"266":[54,27,54,37],"272":[97,7,97,31],"273":[13,11,13,51],"274":[58,9,58,19],"280":[97,7,97,31],"281":[13,3,13,53],"282":[60,7,60,14],"288":[100,7,100,17],"289":[12,1,14,2],"296":[109,7,109,32],"297":[12,1,14,2],"298":[60,7,60,14],"304":[115,7,115,31],"305":[12,1,14,2],"306":[62,14,62,25],"312":[116,9,116,19],"313":[17,12,17,16],"314":[62,27,62,34],"320":[115,7,115,31],"321":[17,27,17,28],"328":[121,7,121,20],"329":[17,34,17,35],"330":[62,27,62,34],"336":[124,9,124,25],"337":[17,39,17,43],"338":[64,13,64,23],"344":[125,9,125,25],"345":[17,11,17,51],"346":[65,13,65,47],"352":[123,7,123,17],"353":[17,3,17,53],"354":[68,27,68,37],"360":[129,7,129,32],"361":[16,1,18,2],"362":[72,12,72,23],"368":[151,11,151,61],"369":[16,1,18,2],"370":[72,25,72,32],"376":[150,10,151,62],"377":[16,1,18,2],"384":[160,42,160,50],"385":[21,7,21,11],"386":[72,25,72,32],"392":[161,42,161,50],"393":[21,16,21,20],"394":[74,11,74,21],"400":[164,42,164,50],"401":[21,29,21,34],"402":[75,11,75,45],"409":[21,29,21,34],"410":[78,25,78,35],"417":[21,22,21,35],"418":[84,7,84,17],"425":[23,13,23,17],"426":[86,10,86,21],"433":[23,13,23,24],"434":[86,23,86,30],"441":[24,15,24,16],"449":[25,19,25,24],"450":[86,23,86,30],"457":[23,13,23,24],"458":[88,9,88,19],"465":[23,13,23,24],"466":[89,9,89,19],"473":[24,15,24,16],"474":[90,9,90,43],"481":[24,15,24,16],"482":[97,7,97,17],"489":[25,19,25,24],"490":[97,21,97,31],"497":[25,19,25,24],"498":[100,7,100,17],"505":[28,8,28,11],"506":[109,30,109,32],"513":[28,20,28,25],"514":[109,7,109,32],"521":[28,20,28,25],"522":[115,7,115,17],"529":[28,13,28,26],"530":[115,21,115,31],"537":[30,8,30,12],"538":[116,9,116,19],"545":[30,13,30,18],"546":[116,28,116,30],"553":[30,8,30,19],"554":[121,7,121,20],"561":[30,8,30,19],"562":[123,7,123,17],"569":[30,3,30,20],"570":[124,9,124,25],"577":[33,7,33,9],"578":[124,34,124,68],"585":[33,14,33,17],"586":[125,9,125,25],"593":[33,21,33,23],"594":[125,34,125,60],"601":[33,28,33,31],"602":[126,12,126,37],"609":[34,10,34,14],"610":[129,30,129,32],"618":[129,7,129,32],"625":[34,17,34,22],"626":[138,17,138,25],"633":[34,15,34,22],"634":[138,17,138,25],"641":[34,10,34,23],"642":[139,15,139,17],"649":[34,10,34,23],"650":[142,12,142,24],"657":[34,5,34,24],"658":[146,10,146,36],"665":[37,7,37,9],"666":[150,10,150,72],"673":[37,14,37,17],"674":[151,11,151,21],"681":[39,9,39,14],"682":[151,11,151,27],"689":[39,17,39,18],"690":[151,31,151,61],"697":[39,23,39,26],"698":[160,42,160,50],"705":[39,35,39,39],"706":[160,53,160,75],"713":[39,35,39,39],"714":[160,78,160,110],"721":[39,28,39,40],"722":[161,42,161,50],"729":[40,10,40,14],"730":[161,53,161,75],"738":[161,78,161,110],"745":[40,17,40,22],"746":[164,42,164,50],"753":[40,15,40,22],"754":[164,53,164,90],"761":[40,10,40,23],"762":[164,94,164,141],"769":[40,10,40,23],"777":[40,5,40,24],"785":[44,9,44,11],"793":[44,16,44,19],"809":[46,7,46,12],"817":[46,7,46,14],"833":[46,7,46,15],"841":[48,14,48,19],"849":[48,22,48,25],"865":[48,27,48,32],"873":[48,27,48,34],"889":[49,14,49,18],"897":[49,19,49,24],"905":[49,14,49,25],"913":[49,14,49,25],"921":[49,9,49,26],"929":[50,13,50,15],"937":[50,20,50,23],"945":[51,13,51,15],"953":[51,20,51,23],"961":[51,27,51,29],"969":[51,34,51,37],"977":[51,46,51,51],"985":[51,46,51,51],"993":[51,39,51,52],"1001":[52,21,52,25],"1009":[52,21,52,25],"1017":[52,9,52,26],"1025":[54,14,54,23],"1033":[54,27,54,29],"1041":[54,34,54,37],"1049":[54,14,54,37],"1057":[54,7,54,38],"1065":[58,9,58,11],"1073":[58,16,58,19],"1089":[60,7,60,12],"1097":[60,7,60,14],"1113":[60,7,60,15],"1121":[62,14,62,19],"1129":[62,22,62,25],"1145":[62,27,62,32],"1153":[62,27,62,34],"1169":[63,14,63,18],"1177":[63,19,63,24],"1185":[63,14,63,25],"1193":[63,14,63,25],"1201":[63,9,63,26],"1209":[64,13,64,15],"1217":[64,20,64,23],"1225":[65,14,65,23],"1233":[65,24,65,28],"1241":[65,40,65,45],"1249":[65,24,65,46],"1251":[65,24,65,39],"1257":[65,14,65,47],"1265":[65,56,65,61],"1273":[65,56,65,61],"1281":[65,49,65,62],"1289":[66,21,66,25],"1297":[66,21,66,25],"1305":[66,9,66,26],"1313":[68,14,68,23],"1321":[68,27,68,29],"1329":[68,34,68,37],"1337":[68,14,68,37],"1345":[68,7,68,38],"1353":[72,12,72,17],"1361":[72,20,72,23],"1377":[72,25,72,30],"1385":[72,25,72,32],"1401":[73,12,73,16],"1409":[73,17,73,22],"1417":[73,12,73,23],"1425":[73,12,73,23],"1433":[73,7,73,24],"1441":[74,11,74,13],"1449":[74,18,74,21],"1457":[75,12,75,21],"1465":[75,22,75,26],"1473":[75,38,75,43],"1481":[75,22,75,44],"1483":[75,22,75,37],"1489":[75,12,75,45],"1497":[75,54,75,59],"1505":[75,54,75,59],"1513":[75,47,75,60],"1521":[76,19,76,23],"1529":[76,19,76,23],"1537":[76,7,76,24],"1545":[78,12,78,21],"1553":[78,25,78,27],"1561":[78,32,78,35],"1569":[78,12,78,35],"1577":[78,5,78,36],"1585":[84,7,84,9],"1593":[84,14,84,17],"1601":[84,26,84,31],"1609":[84,26,84,31],"1617":[84,19,84,32],"1625":[86,10,86,15],"1633":[86,18,86,21],"1649":[86,23,86,28],"1657":[86,23,86,30],"1673":[87,10,87,14],"1681":[87,15,87,20],"1689":[87,10,87,21],"1697":[87,10,87,21],"1705":[87,5,87,22],"1713":[88,9,88,11],"1721":[88,16,88,19],"1729":[89,9,89,11],"1737":[89,16,89,19],"1745":[90,10,90,19],"1753":[90,20,90,24],"1761":[90,36,90,41],"1769":[90,20,90,42],"1771":[90,20,90,35],"1777":[90,10,90,43],"1785":[91,14,91,19],"1793":[91,14,91,19],"1801":[91,7,91,20],"1809":[93,17,93,21],"1817":[93,17,93,21],"1825":[93,5,93,22],"1833":[97,8,97,17],"1841":[97,21,97,23],"1849":[97,28,97,31],"1857":[97,40,97,45],"1865":[97,40,97,45],"1873":[97,33,97,46],"1881":[100,7,100,9],"1889":[100,14,100,17],"1897":[100,26,100,30],"1905":[100,26,100,30],"1913":[100,19,100,31],"1921":[103,10,103,29],"1929":[103,35,103,39],"1937":[103,46,103,51],"1945":[103,35,103,52],"1947":[103,35,103,45],"1953":[103,10,103,53],"1955":[103,10,103,34],"1961":[103,10,103,53],"1969":[103,3,103,54],"1977":[20,1,104,2],"1985":[20,1,104,2],"1993":[20,1,104,2],"2001":[20,1,104,2],"2009":[20,1,104,2],"2017":[20,1,104,2],"2025":[20,1,104,2],"2033":[107,15,107,19],"2041":[107,28,107,29],"2049":[107,50,107,52],"2057":[107,15,107,19],"2065":[107,15,107,19],"2073":[107,28,107,29],"2081":[107,28,107,29],"2089":[107,50,107,52],"2097":[107,50,107,52],"2105":[109,7,109,12],"2113":[109,21,109,24],"2121":[109,7,109,25],"2123":[109,7,109,20],"2129":[109,31,109,32],"2137":[110,13,110,18],"2145":[110,27,110,31],"2153":[110,33,110,35],"2161":[110,13,110,36],"2163":[110,13,110,26],"2169":[110,13,110,36],"2177":[110,5,110,37],"2185":[113,8,113,13],"2193":[113,14,113,15],"2201":[113,8,113,16],"2209":[113,8,113,16],"2217":[113,3,113,17],"2225":[115,7,115,9],"2233":[115,14,115,17],"2241":[115,21,115,23],"2249":[115,28,115,31],"2257":[116,9,116,11],"2265":[116,16,116,19],"2273":[116,29,116,30],"2281":[116,28,116,30],"2289":[116,21,116,31],"2297":[117,13,117,18],"2305":[117,25,117,26],"2313":[117,13,117,27],"2315":[117,13,117,24],"2321":[117,13,117,27],"2329":[117,5,117,28],"2337":[118,10,118,15],"2345":[118,16,118,17],"2353":[118,10,118,18],"2361":[118,10,118,18],"2369":[118,5,118,19],"2377":[121,7,121,12],"2385":[121,17,121,20],"2393":[121,29,121,30],"2401":[121,29,121,30],"2409":[121,22,121,31],"2417":[123,7,123,9],"2425":[123,14,123,17],"2433":[124,9,124,14],"2441":[124,15,124,16],"2449":[124,9,124,17],"2457":[124,22,124,25],"2465":[124,34,124,38],"2473":[124,41,124,49],"2481":[124,50,124,55],"2489":[124,62,124,63],"2497":[124,50,124,64],"2499":[124,50,124,61],"2505":[124,66,124,67],"2513":[124,41,124,68],"2521":[124,34,124,68],"2529":[124,27,124,69],"2537":[125,9,125,14],"2545":[125,15,125,16],"2553":[125,9,125,17],"2561":[125,22,125,25],"2569":[125,34,125,38],"2577":[125,41,125,49],"2585":[125,50,125,55],"2593":[125,57,125,59],"2601":[125,41,125,60],"2609":[125,34,125,60],"2617":[125,27,125,61],"2625":[126,12,126,16],"2633":[126,19,126,27],"2641":[126,28,126,33],"2649":[126,35,126,36],"2657":[126,19,126,37],"2665":[126,12,126,37],"2673":[126,5,126,38],"2681":[129,7,129,12],"2689":[129,21,129,24],"2697":[129,7,129,25],"2699":[129,7,129,20],"2705":[129,31,129,32],"2713":[130,5,130,10],"2721":[130,17,130,20],"2729":[130,5,130,21],"2731":[130,5,130,16],"2737":[131,7,131,13],"2745":[131,22,131,30],"2753":[131,31,131,32],"2761":[131,34,131,36],"2769":[131,22,131,37],"2777":[131,7,131,38],"2779":[131,7,131,21],"2785":[131,7,131,39],"2793":[130,30,132,6],"2801":[130,30,132,6],"2809":[130,30,132,6],"2817":[130,30,132,6],"2825":[130,5,132,7],"2827":[130,5,130,29],"2833":[130,5,132,8],"2841":[134,13,134,14],"2849":[134,13,134,14],"2857":[134,5,134,15],"2865":[135,12,135,13],"2873":[135,12,135,13],"2881":[135,5,135,14],"2889":[137,5,137,11],"2897":[138,17,138,18],"2905":[138,21,138,25],"2913":[138,7,138,12],"2921":[138,7,138,26],"2929":[138,7,138,27],"2937":[139,15,139,17],"2945":[139,7,139,11],"2953":[139,7,139,17],"2961":[139,7,139,18],"2969":[137,20,140,6],"2977":[137,20,140,6],"2985":[137,20,140,6],"2993":[137,20,140,6],"3001":[137,5,140,7],"3003":[137,5,137,19],"3009":[137,5,140,8],"3017":[142,12,142,16],"3025":[142,19,142,24],"3033":[142,12,142,24],"3041":[142,5,142,25],"3049":[146,10,146,14],"3057":[146,17,146,25],"3065":[146,26,146,31],"3073":[146,33,146,35],"3081":[146,17,146,36],"3089":[146,10,146,36],"3097":[146,3,146,37],"3105":[106,1,147,2],"3113":[106,1,147,2],"3121":[106,1,147,2],"3129":[106,1,147,2],"3137":[106,1,147,2],"3145":[106,1,147,2],"3153":[106,1,147,2],"3161":[106,1,147,2],"3169":[150,11,150,17],"3177":[150,11,150,27],"3185":[150,11,150,36],"3193":[150,42,150,48],"3201":[150,11,150,49],"3203":[150,11,150,41],"3209":[150,55,150,72],"3217":[151,11,151,17],"3225":[151,20,151,21],"3233":[151,26,151,27],"3241":[151,32,151,38],"3249":[151,54,151,60],"3257":[151,32,151,61],"3259":[151,32,151,53],"3265":[150,10,151,62],"3273":[150,3,151,63],"3281":[149,1,152,2],"3289":[149,1,152,2],"3297":[149,1,152,2],"3305":[154,1,154,7],"3313":[154,22,154,26],"3321":[154,27,154,50],"3329":[155,9,155,17],"3337":[156,12,156,30],"3345":[157,14,157,34],"3353":[158,14,158,23],"3361":[160,42,160,45],"3369":[160,49,160,50],"3377":[160,53,160,57],"3385":[160,60,160,63],"3393":[160,73,160,74],"3401":[160,60,160,75],"3403":[160,60,160,72],"3409":[160,78,160,83],"3417":[160,86,160,89],"3425":[160,99,160,100],"3433":[160,86,160,101],"3435":[160,86,160,98],"3441":[160,108,160,109],"3449":[160,86,160,110],"3451":[160,86,160,107],"3457":[160,42,160,110],"3465":[160,35,160,111],"3473":[160,18,160,113],"3481":[160,18,160,113],"3489":[160,18,160,113],"3497":[160,18,160,113],"3505":[161,42,161,45],"3513":[161,49,161,50],"3521":[161,53,161,56],"3529":[161,60,161,63],"3537":[161,73,161,74],"3545":[161,60,161,75],"3547":[161,60,161,72],"3553":[161,78,161,82],"3561":[161,86,161,89],"3569":[161,99,161,100],"3577":[161,86,161,101],"3579":[161,86,161,98],"3585":[161,108,161,109],"3593":[161,86,161,110],"3595":[161,86,161,107],"3601":[161,42,161,110],"3609":[161,35,161,111],"3617":[161,18,161,113],"3625":[161,18,161,113],"3633":[161,18,161,113],"3641":[161,18,161,113],"3649":[162,42,162,45],"3657":[162,55,162,57],"3665":[162,42,162,58],"3667":[162,42,162,54],"3673":[162,42,162,58],"3681":[162,35,162,59],"3689":[162,18,162,61],"3697":[162,18,162,61],"3705":[162,18,162,61],"3713":[162,18,162,61],"3721":[164,42,164,45],"3729":[164,49,164,50],"3737":[164,53,164,57],"3745":[164,60,164,63],"3753":[164,73,164,75],"3761":[164,60,164,76],"3763":[164,60,164,72],"3769":[164,60,164,90],"3771":[164,60,164,88],"3777":[164,94,164,99],"3785":[164,102,164,105],"3793":[164,115,164,117],"3801":[164,102,164,118],"3803":[164,102,164,114],"3809":[164,102,164,132],"3811":[164,102,164,130],"3817":[164,139,164,140],"3825":[164,102,164,141],"3827":[164,102,164,138],"3833":[164,42,164,141],"3841":[164,35,164,142],"3849":[164,18,164,144],"3857":[164,18,164,144],"3865":[164,18,164,144],"3873":[164,18,164,144],"3881":[159,14,165,4],"3889":[166,17,166,26],"3897":[168,20,168,21],"3905":[168,24,168,29],"3913":[168,18,168,31],"3921":[169,20,169,21],"3929":[169,24,169,29],"3937":[169,18,169,31],"3945":[170,20,170,22],"3953":[170,24,170,29],"3961":[170,18,170,31],"3969":[171,20,171,22],"3977":[171,24,171,29],"3985":[171,18,171,31],"3993":[167,17,172,4],"4001":[154,52,173,2],"4009":[154,18,173,3],"4017":[154,1,173,3],"4025":[154,1,173,4],"4033":[1,1,174,1],"4041":[1,1,174,1],"4049":[1,1,174,1],"4057":[6,1,10,2],"4065":[1,1,174,1],"4073":[12,1,14,2],"4081":[1,1,174,1],"4089":[16,1,18,2],"4097":[1,1,174,1],"4105":[20,1,104,2],"4113":[1,1,174,1],"4121":[106,1,147,2],"4129":[1,1,174,1],"4137":[149,1,152,2],"4145":[1,1,174,1],"4153":[6,1,10,2],"4161":[6,1,10,2],"4169":[12,1,14,2],"4177":[12,1,14,2],"4185":[16,1,18,2],"4193":[16,1,18,2],"4201":[21,3,21,35],"4209":[28,3,28,26],"4217":[33,3,35,4],"4225":[39,5,39,40],"4233":[50,9,50,34],"4241":[51,9,51,52],"4249":[48,7,53,8],"4257":[48,7,53,8],"4265":[44,5,55,6],"4273":[64,9,64,34],"4281":[65,9,65,62],"4289":[62,7,67,8],"4297":[62,7,67,8],"4305":[58,5,69,6],"4313":[74,7,74,32],"4321":[75,7,75,60],"4329":[72,5,77,6],"4337":[72,5,77,6],"4345":[37,3,79,4],"4353":[84,3,84,32],"4361":[88,5,88,30],"4369":[89,5,89,27],"4377":[90,5,92,6],"4385":[86,3,94,4],"4393":[86,3,94,4],"4401":[97,3,97,46],"4409":[100,3,100,31],"4417":[20,1,104,2],"4425":[20,1,104,2],"4433":[109,3,111,4],"4441":[116,5,116,31],"4449":[115,3,119,4],"4457":[121,3,121,31],"4465":[124,5,124,69],"4473":[125,5,125,61],"4481":[123,3,127,4],"4489":[130,30,132,6],"4497":[130,30,132,6],"4505":[137,20,140,6],"4513":[137,20,140,6],"4521":[129,3,144,4],"4529":[106,1,147,2],"4537":[106,1,147,2],"4545":[149,1,152,2],"4553":[149,1,152,2],"4561":[160,42,160,110],"4569":[160,18,160,113],"4577":[160,18,160,113],"4585":[161,42,161,110],"4593":[161,18,161,113],"4601":[161,18,161,113],"4609":[162,18,162,61],"4617":[162,18,162,61],"4625":[164,42,164,141],"4633":[164,18,164,144],"4641":[164,18,164,144],"4649":[1,1,174,1],"4657":[1,1,174,1],"nBranches":100,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/int.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/int_jalangi_.js","code":"'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n"};
jalangiLabel119:
    while (true) {
        try {
            J$.Se(4033, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/int_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/int.js');
            function isHexCode(c) {
                jalangiLabel107:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            c = J$.N(233, 'c', c, 4);
                            return J$.X1(209, J$.Rt(201, J$.C(40, J$.C(24, J$.C(8, J$.B(10, '<=', J$.T(105, 0x30, 22, false), J$.R(113, 'c', c, 0), 0)) ? J$.B(18, '<=', J$.R(121, 'c', c, 0), J$.T(129, 0x39, 22, false), 0) : J$._()) ? J$._() : J$.C(16, J$.B(26, '<=', J$.T(137, 0x41, 22, false), J$.R(145, 'c', c, 0), 0)) ? J$.B(34, '<=', J$.R(153, 'c', c, 0), J$.T(161, 0x46, 22, false), 0) : J$._()) ? J$._() : J$.C(32, J$.B(42, '<=', J$.T(169, 0x61, 22, false), J$.R(177, 'c', c, 0), 0)) ? J$.B(50, '<=', J$.R(185, 'c', c, 0), J$.T(193, 0x66, 22, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(4153, J$e);
                        } finally {
                            if (J$.Fr(4161))
                                continue jalangiLabel107;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isOctCode(c) {
                jalangiLabel108:
                    while (true) {
                        try {
                            J$.Fe(289, arguments.callee, this, arguments);
                            arguments = J$.N(297, 'arguments', arguments, 4);
                            c = J$.N(305, 'c', c, 4);
                            return J$.X1(281, J$.Rt(273, J$.C(48, J$.B(58, '<=', J$.T(241, 0x30, 22, false), J$.R(249, 'c', c, 0), 0)) ? J$.B(66, '<=', J$.R(257, 'c', c, 0), J$.T(265, 0x37, 22, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(4169, J$e);
                        } finally {
                            if (J$.Fr(4177))
                                continue jalangiLabel108;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isDecCode(c) {
                jalangiLabel109:
                    while (true) {
                        try {
                            J$.Fe(361, arguments.callee, this, arguments);
                            arguments = J$.N(369, 'arguments', arguments, 4);
                            c = J$.N(377, 'c', c, 4);
                            return J$.X1(353, J$.Rt(345, J$.C(56, J$.B(74, '<=', J$.T(313, 0x30, 22, false), J$.R(321, 'c', c, 0), 0)) ? J$.B(82, '<=', J$.R(329, 'c', c, 0), J$.T(337, 0x39, 22, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(4185, J$e);
                        } finally {
                            if (J$.Fr(4193))
                                continue jalangiLabel109;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function resolveYamlInteger(data) {
                jalangiLabel110:
                    while (true) {
                        try {
                            J$.Fe(1977, arguments.callee, this, arguments);
                            arguments = J$.N(1985, 'arguments', arguments, 4);
                            data = J$.N(1993, 'data', data, 4);
                            J$.N(2001, 'max', max, 0);
                            J$.N(2009, 'index', index, 0);
                            J$.N(2017, 'hasDigits', hasDigits, 0);
                            J$.N(2025, 'ch', ch, 0);
                            if (J$.X1(4201, J$.C(64, J$.B(90, '===', J$.R(385, 'data', data, 0), J$.T(393, null, 25, false), 0))))
                                return J$.X1(417, J$.Rt(409, J$.T(401, false, 23, false)));
                            var max = J$.X1(465, J$.W(457, 'max', J$.G(433, J$.R(425, 'data', data, 0), 'length', 0), max, 1)), index = J$.X1(481, J$.W(473, 'index', J$.T(441, 0, 22, false), index, 1)), hasDigits = J$.X1(497, J$.W(489, 'hasDigits', J$.T(449, false, 23, false), hasDigits, 1)), ch;
                            if (J$.X1(4209, J$.C(72, J$.U(98, '!', J$.R(505, 'max', max, 0)))))
                                return J$.X1(529, J$.Rt(521, J$.T(513, false, 23, false)));
                            J$.X1(569, ch = J$.W(561, 'ch', J$.G(553, J$.R(537, 'data', data, 0), J$.R(545, 'index', index, 0), 4), ch, 0));
                            if (J$.X1(4217, J$.C(88, J$.C(80, J$.B(106, '===', J$.R(577, 'ch', ch, 0), J$.T(585, '-', 21, false), 0)) ? J$._() : J$.B(114, '===', J$.R(593, 'ch', ch, 0), J$.T(601, '+', 21, false), 0)))) {
                                J$.X1(657, ch = J$.W(649, 'ch', J$.G(641, J$.R(609, 'data', data, 0), index = J$.W(633, 'index', J$.B(130, '+', J$.U(122, '+', J$.R(625, 'index', index, 0)), J$.T(617, 1, 22, false), 0), index, 0), 4), ch, 0));
                            }
                            if (J$.X1(4345, J$.C(224, J$.B(138, '===', J$.R(665, 'ch', ch, 0), J$.T(673, '0', 21, false), 0)))) {
                                if (J$.X1(4225, J$.C(96, J$.B(154, '===', J$.B(146, '+', J$.R(681, 'index', index, 0), J$.T(689, 1, 22, false), 0), J$.R(697, 'max', max, 0), 0))))
                                    return J$.X1(721, J$.Rt(713, J$.T(705, true, 23, false)));
                                J$.X1(777, ch = J$.W(769, 'ch', J$.G(761, J$.R(729, 'data', data, 0), index = J$.W(753, 'index', J$.B(170, '+', J$.U(162, '+', J$.R(745, 'index', index, 0)), J$.T(737, 1, 22, false), 0), index, 0), 4), ch, 0));
                                if (J$.X1(4265, J$.C(144, J$.B(178, '===', J$.R(785, 'ch', ch, 0), J$.T(793, 'b', 21, false), 0)))) {
                                    J$.X1(833, J$.B(202, '-', index = J$.W(817, 'index', J$.B(194, '+', J$.U(186, '+', J$.R(809, 'index', index, 0)), J$.T(801, 1, 22, false), 0), index, 0), J$.T(825, 1, 22, false), 0));
                                    for (; J$.X1(4249, J$.C(128, J$.B(210, '<', J$.R(841, 'index', index, 0), J$.R(849, 'max', max, 0), 0))); J$.X1(4257, J$.B(234, '-', index = J$.W(873, 'index', J$.B(226, '+', J$.U(218, '+', J$.R(865, 'index', index, 0)), J$.T(857, 1, 22, false), 0), index, 0), J$.T(881, 1, 22, false), 0))) {
                                        J$.X1(921, ch = J$.W(913, 'ch', J$.G(905, J$.R(889, 'data', data, 0), J$.R(897, 'index', index, 0), 4), ch, 0));
                                        if (J$.X1(4233, J$.C(104, J$.B(242, '===', J$.R(929, 'ch', ch, 0), J$.T(937, '_', 21, false), 0))))
                                            continue;
                                        if (J$.X1(4241, J$.C(120, J$.C(112, J$.B(250, '!==', J$.R(945, 'ch', ch, 0), J$.T(953, '0', 21, false), 0)) ? J$.B(258, '!==', J$.R(961, 'ch', ch, 0), J$.T(969, '1', 21, false), 0) : J$._())))
                                            return J$.X1(993, J$.Rt(985, J$.T(977, false, 23, false)));
                                        J$.X1(1017, hasDigits = J$.W(1009, 'hasDigits', J$.T(1001, true, 23, false), hasDigits, 0));
                                    }
                                    return J$.X1(1057, J$.Rt(1049, J$.C(136, J$.R(1025, 'hasDigits', hasDigits, 0)) ? J$.B(266, '!==', J$.R(1033, 'ch', ch, 0), J$.T(1041, '_', 21, false), 0) : J$._()));
                                }
                                if (J$.X1(4305, J$.C(184, J$.B(274, '===', J$.R(1065, 'ch', ch, 0), J$.T(1073, 'x', 21, false), 0)))) {
                                    J$.X1(1113, J$.B(298, '-', index = J$.W(1097, 'index', J$.B(290, '+', J$.U(282, '+', J$.R(1089, 'index', index, 0)), J$.T(1081, 1, 22, false), 0), index, 0), J$.T(1105, 1, 22, false), 0));
                                    for (; J$.X1(4289, J$.C(168, J$.B(306, '<', J$.R(1121, 'index', index, 0), J$.R(1129, 'max', max, 0), 0))); J$.X1(4297, J$.B(330, '-', index = J$.W(1153, 'index', J$.B(322, '+', J$.U(314, '+', J$.R(1145, 'index', index, 0)), J$.T(1137, 1, 22, false), 0), index, 0), J$.T(1161, 1, 22, false), 0))) {
                                        J$.X1(1201, ch = J$.W(1193, 'ch', J$.G(1185, J$.R(1169, 'data', data, 0), J$.R(1177, 'index', index, 0), 4), ch, 0));
                                        if (J$.X1(4273, J$.C(152, J$.B(338, '===', J$.R(1209, 'ch', ch, 0), J$.T(1217, '_', 21, false), 0))))
                                            continue;
                                        if (J$.X1(4281, J$.C(160, J$.U(346, '!', J$.F(1257, J$.R(1225, 'isHexCode', isHexCode, 1), 0)(J$.M(1249, J$.R(1233, 'data', data, 0), 'charCodeAt', 0)(J$.R(1241, 'index', index, 0)))))))
                                            return J$.X1(1281, J$.Rt(1273, J$.T(1265, false, 23, false)));
                                        J$.X1(1305, hasDigits = J$.W(1297, 'hasDigits', J$.T(1289, true, 23, false), hasDigits, 0));
                                    }
                                    return J$.X1(1345, J$.Rt(1337, J$.C(176, J$.R(1313, 'hasDigits', hasDigits, 0)) ? J$.B(354, '!==', J$.R(1321, 'ch', ch, 0), J$.T(1329, '_', 21, false), 0) : J$._()));
                                }
                                for (; J$.X1(4329, J$.C(208, J$.B(362, '<', J$.R(1353, 'index', index, 0), J$.R(1361, 'max', max, 0), 0))); J$.X1(4337, J$.B(386, '-', index = J$.W(1385, 'index', J$.B(378, '+', J$.U(370, '+', J$.R(1377, 'index', index, 0)), J$.T(1369, 1, 22, false), 0), index, 0), J$.T(1393, 1, 22, false), 0))) {
                                    J$.X1(1433, ch = J$.W(1425, 'ch', J$.G(1417, J$.R(1401, 'data', data, 0), J$.R(1409, 'index', index, 0), 4), ch, 0));
                                    if (J$.X1(4313, J$.C(192, J$.B(394, '===', J$.R(1441, 'ch', ch, 0), J$.T(1449, '_', 21, false), 0))))
                                        continue;
                                    if (J$.X1(4321, J$.C(200, J$.U(402, '!', J$.F(1489, J$.R(1457, 'isOctCode', isOctCode, 1), 0)(J$.M(1481, J$.R(1465, 'data', data, 0), 'charCodeAt', 0)(J$.R(1473, 'index', index, 0)))))))
                                        return J$.X1(1513, J$.Rt(1505, J$.T(1497, false, 23, false)));
                                    J$.X1(1537, hasDigits = J$.W(1529, 'hasDigits', J$.T(1521, true, 23, false), hasDigits, 0));
                                }
                                return J$.X1(1577, J$.Rt(1569, J$.C(216, J$.R(1545, 'hasDigits', hasDigits, 0)) ? J$.B(410, '!==', J$.R(1553, 'ch', ch, 0), J$.T(1561, '_', 21, false), 0) : J$._()));
                            }
                            if (J$.X1(4353, J$.C(232, J$.B(418, '===', J$.R(1585, 'ch', ch, 0), J$.T(1593, '_', 21, false), 0))))
                                return J$.X1(1617, J$.Rt(1609, J$.T(1601, false, 23, false)));
                            for (; J$.X1(4385, J$.C(264, J$.B(426, '<', J$.R(1625, 'index', index, 0), J$.R(1633, 'max', max, 0), 0))); J$.X1(4393, J$.B(450, '-', index = J$.W(1657, 'index', J$.B(442, '+', J$.U(434, '+', J$.R(1649, 'index', index, 0)), J$.T(1641, 1, 22, false), 0), index, 0), J$.T(1665, 1, 22, false), 0))) {
                                J$.X1(1705, ch = J$.W(1697, 'ch', J$.G(1689, J$.R(1673, 'data', data, 0), J$.R(1681, 'index', index, 0), 4), ch, 0));
                                if (J$.X1(4361, J$.C(240, J$.B(458, '===', J$.R(1713, 'ch', ch, 0), J$.T(1721, '_', 21, false), 0))))
                                    continue;
                                if (J$.X1(4369, J$.C(248, J$.B(466, '===', J$.R(1729, 'ch', ch, 0), J$.T(1737, ':', 21, false), 0))))
                                    break;
                                if (J$.X1(4377, J$.C(256, J$.U(474, '!', J$.F(1777, J$.R(1745, 'isDecCode', isDecCode, 1), 0)(J$.M(1769, J$.R(1753, 'data', data, 0), 'charCodeAt', 0)(J$.R(1761, 'index', index, 0))))))) {
                                    return J$.X1(1801, J$.Rt(1793, J$.T(1785, false, 23, false)));
                                }
                                J$.X1(1825, hasDigits = J$.W(1817, 'hasDigits', J$.T(1809, true, 23, false), hasDigits, 0));
                            }
                            if (J$.X1(4401, J$.C(280, J$.C(272, J$.U(482, '!', J$.R(1833, 'hasDigits', hasDigits, 0))) ? J$._() : J$.B(490, '===', J$.R(1841, 'ch', ch, 0), J$.T(1849, '_', 21, false), 0))))
                                return J$.X1(1873, J$.Rt(1865, J$.T(1857, false, 23, false)));
                            if (J$.X1(4409, J$.C(288, J$.B(498, '!==', J$.R(1881, 'ch', ch, 0), J$.T(1889, ':', 21, false), 0))))
                                return J$.X1(1913, J$.Rt(1905, J$.T(1897, true, 23, false)));
                            return J$.X1(1969, J$.Rt(1961, J$.M(1953, J$.T(1921, /^(:[0-5]?[0-9])+$/, 14, false), 'test', 0)(J$.M(1945, J$.R(1929, 'data', data, 0), 'slice', 0)(J$.R(1937, 'index', index, 0)))));
                        } catch (J$e) {
                            J$.Ex(4417, J$e);
                        } finally {
                            if (J$.Fr(4425))
                                continue jalangiLabel110;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlInteger(data) {
                jalangiLabel113:
                    while (true) {
                        try {
                            J$.Fe(3105, arguments.callee, this, arguments);
                            arguments = J$.N(3113, 'arguments', arguments, 4);
                            data = J$.N(3121, 'data', data, 4);
                            J$.N(3129, 'value', value, 0);
                            J$.N(3137, 'sign', sign, 0);
                            J$.N(3145, 'ch', ch, 0);
                            J$.N(3153, 'base', base, 0);
                            J$.N(3161, 'digits', digits, 0);
                            var value = J$.X1(2065, J$.W(2057, 'value', J$.R(2033, 'data', data, 0), value, 1)), sign = J$.X1(2081, J$.W(2073, 'sign', J$.T(2041, 1, 22, false), sign, 1)), ch, base, digits = J$.X1(2097, J$.W(2089, 'digits', J$.T(2049, [], 10, false), digits, 1));
                            if (J$.X1(4433, J$.C(296, J$.B(514, '!==', J$.M(2121, J$.R(2105, 'value', value, 0), 'indexOf', 0)(J$.T(2113, '_', 21, false)), J$.U(506, '-', J$.T(2129, 1, 22, false)), 0)))) {
                                J$.X1(2177, value = J$.W(2169, 'value', J$.M(2161, J$.R(2137, 'value', value, 0), 'replace', 0)(J$.T(2145, /_/g, 14, false), J$.T(2153, '', 21, false)), value, 0));
                            }
                            J$.X1(2217, ch = J$.W(2209, 'ch', J$.G(2201, J$.R(2185, 'value', value, 0), J$.T(2193, 0, 22, false), 4), ch, 0));
                            if (J$.X1(4449, J$.C(320, J$.C(304, J$.B(522, '===', J$.R(2225, 'ch', ch, 0), J$.T(2233, '-', 21, false), 0)) ? J$._() : J$.B(530, '===', J$.R(2241, 'ch', ch, 0), J$.T(2249, '+', 21, false), 0)))) {
                                if (J$.X1(4441, J$.C(312, J$.B(538, '===', J$.R(2257, 'ch', ch, 0), J$.T(2265, '-', 21, false), 0))))
                                    J$.X1(2289, sign = J$.W(2281, 'sign', J$.U(546, '-', J$.T(2273, 1, 22, false)), sign, 0));
                                J$.X1(2329, value = J$.W(2321, 'value', J$.M(2313, J$.R(2297, 'value', value, 0), 'slice', 0)(J$.T(2305, 1, 22, false)), value, 0));
                                J$.X1(2369, ch = J$.W(2361, 'ch', J$.G(2353, J$.R(2337, 'value', value, 0), J$.T(2345, 0, 22, false), 4), ch, 0));
                            }
                            if (J$.X1(4457, J$.C(328, J$.B(554, '===', J$.R(2377, 'value', value, 0), J$.T(2385, '0', 21, false), 0))))
                                return J$.X1(2409, J$.Rt(2401, J$.T(2393, 0, 22, false)));
                            if (J$.X1(4481, J$.C(352, J$.B(562, '===', J$.R(2417, 'ch', ch, 0), J$.T(2425, '0', 21, false), 0)))) {
                                if (J$.X1(4465, J$.C(336, J$.B(570, '===', J$.G(2449, J$.R(2433, 'value', value, 0), J$.T(2441, 1, 22, false), 4), J$.T(2457, 'b', 21, false), 0))))
                                    return J$.X1(2529, J$.Rt(2521, J$.B(578, '*', J$.R(2465, 'sign', sign, 0), J$.F(2513, J$.R(2473, 'parseInt', parseInt, 2), 0)(J$.M(2497, J$.R(2481, 'value', value, 0), 'slice', 0)(J$.T(2489, 2, 22, false)), J$.T(2505, 2, 22, false)), 0)));
                                if (J$.X1(4473, J$.C(344, J$.B(586, '===', J$.G(2553, J$.R(2537, 'value', value, 0), J$.T(2545, 1, 22, false), 4), J$.T(2561, 'x', 21, false), 0))))
                                    return J$.X1(2617, J$.Rt(2609, J$.B(594, '*', J$.R(2569, 'sign', sign, 0), J$.F(2601, J$.R(2577, 'parseInt', parseInt, 2), 0)(J$.R(2585, 'value', value, 0), J$.T(2593, 16, 22, false)), 0)));
                                return J$.X1(2673, J$.Rt(2665, J$.B(602, '*', J$.R(2625, 'sign', sign, 0), J$.F(2657, J$.R(2633, 'parseInt', parseInt, 2), 0)(J$.R(2641, 'value', value, 0), J$.T(2649, 8, 22, false)), 0)));
                            }
                            if (J$.X1(4521, J$.C(360, J$.B(618, '!==', J$.M(2697, J$.R(2681, 'value', value, 0), 'indexOf', 0)(J$.T(2689, ':', 21, false)), J$.U(610, '-', J$.T(2705, 1, 22, false)), 0)))) {
                                J$.X1(2833, J$.M(2825, J$.M(2729, J$.R(2713, 'value', value, 0), 'split', 0)(J$.T(2721, ':', 21, false)), 'forEach', 0)(J$.T(2817, function (v) {
                                    jalangiLabel111:
                                        while (true) {
                                            try {
                                                J$.Fe(2793, arguments.callee, this, arguments);
                                                arguments = J$.N(2801, 'arguments', arguments, 4);
                                                v = J$.N(2809, 'v', v, 4);
                                                J$.X1(2785, J$.M(2777, J$.R(2737, 'digits', digits, 0), 'unshift', 0)(J$.F(2769, J$.R(2745, 'parseInt', parseInt, 2), 0)(J$.R(2753, 'v', v, 0), J$.T(2761, 10, 22, false))));
                                            } catch (J$e) {
                                                J$.Ex(4489, J$e);
                                            } finally {
                                                if (J$.Fr(4497))
                                                    continue jalangiLabel111;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2793)));
                                J$.X1(2857, value = J$.W(2849, 'value', J$.T(2841, 0, 22, false), value, 0));
                                J$.X1(2881, base = J$.W(2873, 'base', J$.T(2865, 1, 22, false), base, 0));
                                J$.X1(3009, J$.M(3001, J$.R(2889, 'digits', digits, 0), 'forEach', 0)(J$.T(2993, function (d) {
                                    jalangiLabel112:
                                        while (true) {
                                            try {
                                                J$.Fe(2969, arguments.callee, this, arguments);
                                                arguments = J$.N(2977, 'arguments', arguments, 4);
                                                d = J$.N(2985, 'd', d, 4);
                                                J$.X1(2929, value = J$.W(2921, 'value', J$.B(634, '+', J$.R(2913, 'value', value, 0), J$.B(626, '*', J$.R(2897, 'd', d, 0), J$.R(2905, 'base', base, 0), 0), 0), value, 0));
                                                J$.X1(2961, base = J$.W(2953, 'base', J$.B(642, '*', J$.R(2945, 'base', base, 0), J$.T(2937, 60, 22, false), 0), base, 0));
                                            } catch (J$e) {
                                                J$.Ex(4505, J$e);
                                            } finally {
                                                if (J$.Fr(4513))
                                                    continue jalangiLabel112;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2969)));
                                return J$.X1(3041, J$.Rt(3033, J$.B(650, '*', J$.R(3017, 'sign', sign, 0), J$.R(3025, 'value', value, 0), 0)));
                            }
                            return J$.X1(3097, J$.Rt(3089, J$.B(658, '*', J$.R(3049, 'sign', sign, 0), J$.F(3081, J$.R(3057, 'parseInt', parseInt, 2), 0)(J$.R(3065, 'value', value, 0), J$.T(3073, 10, 22, false)), 0)));
                        } catch (J$e) {
                            J$.Ex(4529, J$e);
                        } finally {
                            if (J$.Fr(4537))
                                continue jalangiLabel113;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isInteger(object) {
                jalangiLabel114:
                    while (true) {
                        try {
                            J$.Fe(3281, arguments.callee, this, arguments);
                            arguments = J$.N(3289, 'arguments', arguments, 4);
                            object = J$.N(3297, 'object', object, 4);
                            return J$.X1(3273, J$.Rt(3265, J$.C(376, J$.B(666, '===', J$.M(3201, J$.G(3185, J$.G(3177, J$.R(3169, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.R(3193, 'object', object, 0)), J$.T(3209, '[object Number]', 21, false), 0)) ? J$.C(368, J$.B(682, '===', J$.B(674, '%', J$.R(3217, 'object', object, 0), J$.T(3225, 1, 22, false), 0), J$.T(3233, 0, 22, false), 0)) ? J$.U(690, '!', J$.M(3257, J$.R(3241, 'common', common, 1), 'isNegativeZero', 0)(J$.R(3249, 'object', object, 0))) : J$._() : J$._()));
                        } catch (J$e) {
                            J$.Ex(4545, J$e);
                        } finally {
                            if (J$.Fr(4553))
                                continue jalangiLabel114;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4041, 'common', common, 0);
            J$.N(4049, 'Type', Type, 0);
            isHexCode = J$.N(4065, 'isHexCode', J$.T(4057, isHexCode, 12, false, 217), 0);
            isOctCode = J$.N(4081, 'isOctCode', J$.T(4073, isOctCode, 12, false, 289), 0);
            isDecCode = J$.N(4097, 'isDecCode', J$.T(4089, isDecCode, 12, false, 361), 0);
            resolveYamlInteger = J$.N(4113, 'resolveYamlInteger', J$.T(4105, resolveYamlInteger, 12, false, 1977), 0);
            constructYamlInteger = J$.N(4129, 'constructYamlInteger', J$.T(4121, constructYamlInteger, 12, false, 3105), 0);
            isInteger = J$.N(4145, 'isInteger', J$.T(4137, isInteger, 12, false, 3281), 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var common = J$.X1(57, J$.W(49, 'common', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../common', 21, false)), common, 3));
            var Type = J$.X1(97, J$.W(89, 'Type', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../type', 21, false)), Type, 3));
            J$.X1(4025, J$.P(4017, J$.R(3305, 'module', module, 2), 'exports', J$.F(4009, J$.R(3313, 'Type', Type, 1), 1)(J$.T(3321, 'tag:yaml.org,2002:int', 21, false), J$.T(4001, {
                kind: J$.T(3329, 'scalar', 21, false),
                resolve: J$.R(3337, 'resolveYamlInteger', resolveYamlInteger, 1),
                construct: J$.R(3345, 'constructYamlInteger', constructYamlInteger, 1),
                predicate: J$.R(3353, 'isInteger', isInteger, 1),
                represent: J$.T(3881, {
                    binary: J$.T(3497, function (obj) {
                        jalangiLabel115:
                            while (true) {
                                try {
                                    J$.Fe(3473, arguments.callee, this, arguments);
                                    arguments = J$.N(3481, 'arguments', arguments, 4);
                                    obj = J$.N(3489, 'obj', obj, 4);
                                    return J$.X1(3465, J$.Rt(3457, J$.X1(4561, J$.C(384, J$.B(698, '>=', J$.R(3361, 'obj', obj, 0), J$.T(3369, 0, 22, false), 0))) ? J$.B(706, '+', J$.T(3377, '0b', 21, false), J$.M(3401, J$.R(3385, 'obj', obj, 0), 'toString', 0)(J$.T(3393, 2, 22, false)), 0) : J$.B(714, '+', J$.T(3409, '-0b', 21, false), J$.M(3449, J$.M(3433, J$.R(3417, 'obj', obj, 0), 'toString', 0)(J$.T(3425, 2, 22, false)), 'slice', 0)(J$.T(3441, 1, 22, false)), 0)));
                                } catch (J$e) {
                                    J$.Ex(4569, J$e);
                                } finally {
                                    if (J$.Fr(4577))
                                        continue jalangiLabel115;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 3473),
                    octal: J$.T(3641, function (obj) {
                        jalangiLabel116:
                            while (true) {
                                try {
                                    J$.Fe(3617, arguments.callee, this, arguments);
                                    arguments = J$.N(3625, 'arguments', arguments, 4);
                                    obj = J$.N(3633, 'obj', obj, 4);
                                    return J$.X1(3609, J$.Rt(3601, J$.X1(4585, J$.C(392, J$.B(722, '>=', J$.R(3505, 'obj', obj, 0), J$.T(3513, 0, 22, false), 0))) ? J$.B(730, '+', J$.T(3521, '0', 21, false), J$.M(3545, J$.R(3529, 'obj', obj, 0), 'toString', 0)(J$.T(3537, 8, 22, false)), 0) : J$.B(738, '+', J$.T(3553, '-0', 21, false), J$.M(3593, J$.M(3577, J$.R(3561, 'obj', obj, 0), 'toString', 0)(J$.T(3569, 8, 22, false)), 'slice', 0)(J$.T(3585, 1, 22, false)), 0)));
                                } catch (J$e) {
                                    J$.Ex(4593, J$e);
                                } finally {
                                    if (J$.Fr(4601))
                                        continue jalangiLabel116;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 3617),
                    decimal: J$.T(3713, function (obj) {
                        jalangiLabel117:
                            while (true) {
                                try {
                                    J$.Fe(3689, arguments.callee, this, arguments);
                                    arguments = J$.N(3697, 'arguments', arguments, 4);
                                    obj = J$.N(3705, 'obj', obj, 4);
                                    return J$.X1(3681, J$.Rt(3673, J$.M(3665, J$.R(3649, 'obj', obj, 0), 'toString', 0)(J$.T(3657, 10, 22, false))));
                                } catch (J$e) {
                                    J$.Ex(4609, J$e);
                                } finally {
                                    if (J$.Fr(4617))
                                        continue jalangiLabel117;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 3689),
                    hexadecimal: J$.T(3873, function (obj) {
                        jalangiLabel118:
                            while (true) {
                                try {
                                    J$.Fe(3849, arguments.callee, this, arguments);
                                    arguments = J$.N(3857, 'arguments', arguments, 4);
                                    obj = J$.N(3865, 'obj', obj, 4);
                                    return J$.X1(3841, J$.Rt(3833, J$.X1(4625, J$.C(400, J$.B(746, '>=', J$.R(3721, 'obj', obj, 0), J$.T(3729, 0, 22, false), 0))) ? J$.B(754, '+', J$.T(3737, '0x', 21, false), J$.M(3769, J$.M(3761, J$.R(3745, 'obj', obj, 0), 'toString', 0)(J$.T(3753, 16, 22, false)), 'toUpperCase', 0)(), 0) : J$.B(762, '+', J$.T(3777, '-0x', 21, false), J$.M(3825, J$.M(3809, J$.M(3801, J$.R(3785, 'obj', obj, 0), 'toString', 0)(J$.T(3793, 16, 22, false)), 'toUpperCase', 0)(), 'slice', 0)(J$.T(3817, 1, 22, false)), 0)));
                                } catch (J$e) {
                                    J$.Ex(4633, J$e);
                                } finally {
                                    if (J$.Fr(4641))
                                        continue jalangiLabel118;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 3849)
                }, 11, false),
                defaultStyle: J$.T(3889, 'decimal', 21, false),
                styleAliases: J$.T(3993, {
                    binary: J$.T(3913, [
                        J$.T(3897, 2, 22, false),
                        J$.T(3905, 'bin', 21, false)
                    ], 10, false),
                    octal: J$.T(3937, [
                        J$.T(3921, 8, 22, false),
                        J$.T(3929, 'oct', 21, false)
                    ], 10, false),
                    decimal: J$.T(3961, [
                        J$.T(3945, 10, 22, false),
                        J$.T(3953, 'dec', 21, false)
                    ], 10, false),
                    hexadecimal: J$.T(3985, [
                        J$.T(3969, 16, 22, false),
                        J$.T(3977, 'hex', 21, false)
                    ], 10, false)
                }, 11, false)
            }, 11, false)), 0));
        } catch (J$e) {
            J$.Ex(4649, J$e);
        } finally {
            if (J$.Sr(4657)) {
                J$.L();
                continue jalangiLabel119;
            } else {
                J$.L();
                break jalangiLabel119;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
