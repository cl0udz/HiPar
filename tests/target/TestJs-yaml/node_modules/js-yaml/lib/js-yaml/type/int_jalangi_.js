J$.iids = {"8":[6,10,6,40],"9":[2,14,2,21],"10":[6,10,6,27],"16":[7,3,7,33],"17":[2,22,2,33],"18":[6,31,6,40],"24":[6,10,7,33],"25":[2,14,2,34],"26":[7,3,7,20],"32":[8,3,8,33],"33":[2,14,2,34],"34":[7,24,7,33],"40":[6,10,8,33],"41":[2,14,2,34],"42":[8,3,8,20],"48":[12,10,12,40],"49":[3,12,3,19],"50":[8,24,8,33],"56":[16,10,16,40],"57":[3,20,3,29],"58":[12,10,12,27],"64":[20,7,20,20],"65":[3,12,3,30],"66":[12,31,12,40],"72":[27,7,27,11],"73":[3,12,3,30],"74":[16,10,16,27],"80":[32,7,32,31],"81":[3,12,3,30],"82":[16,31,16,40],"88":[32,7,32,31],"89":[6,10,6,14],"90":[20,7,20,20],"96":[38,9,38,26],"97":[6,26,6,27],"98":[27,7,27,11],"104":[49,13,49,23],"105":[6,31,6,32],"106":[32,7,32,17],"112":[50,13,50,37],"113":[6,36,6,40],"114":[32,21,32,31],"120":[50,13,50,37],"121":[7,3,7,7],"122":[33,15,33,22],"128":[47,14,47,25],"129":[7,19,7,20],"136":[53,14,53,37],"137":[7,24,7,25],"138":[36,7,36,17],"144":[43,9,43,19],"145":[7,29,7,33],"146":[38,9,38,18],"152":[63,13,63,23],"153":[8,3,8,7],"154":[38,9,38,26],"160":[64,13,64,47],"161":[8,19,8,20],"162":[39,15,39,22],"168":[61,14,61,25],"169":[8,24,8,25],"176":[67,14,67,37],"177":[8,29,8,33],"178":[43,9,43,19],"184":[57,9,57,19],"185":[6,10,8,33],"186":[45,7,45,14],"192":[73,11,73,21],"193":[6,3,8,42],"200":[74,11,74,45],"201":[5,1,9,2],"202":[45,7,45,14],"208":[71,12,71,23],"209":[5,1,9,2],"210":[47,14,47,25],"216":[77,12,77,35],"217":[5,1,9,2],"218":[47,27,47,34],"224":[36,7,36,17],"225":[12,10,12,14],"232":[83,7,83,17],"233":[12,26,12,27],"234":[47,27,47,34],"240":[87,9,87,19],"241":[12,31,12,32],"242":[49,13,49,23],"248":[88,9,88,19],"249":[12,36,12,40],"250":[50,13,50,23],"256":[89,9,89,43],"257":[12,10,12,40],"258":[50,27,50,37],"264":[85,10,85,21],"265":[12,3,12,49],"266":[53,27,53,37],"272":[96,7,96,31],"273":[11,1,13,2],"274":[57,9,57,19],"280":[96,7,96,31],"281":[11,1,13,2],"282":[59,7,59,14],"288":[99,7,99,17],"289":[11,1,13,2],"296":[108,7,108,32],"297":[16,10,16,14],"298":[59,7,59,14],"304":[114,7,114,31],"305":[16,26,16,27],"306":[61,14,61,25],"312":[115,9,115,19],"313":[16,31,16,32],"314":[61,27,61,34],"320":[114,7,114,31],"321":[16,36,16,40],"328":[120,7,120,20],"329":[16,10,16,40],"330":[61,27,61,34],"336":[123,9,123,25],"337":[16,3,16,49],"338":[63,13,63,23],"344":[124,9,124,25],"345":[15,1,17,2],"346":[64,13,64,47],"352":[122,7,122,17],"353":[15,1,17,2],"354":[67,27,67,37],"360":[128,7,128,32],"361":[15,1,17,2],"362":[71,12,71,23],"368":[149,10,150,19],"369":[20,7,20,11],"370":[71,25,71,32],"376":[149,10,150,53],"377":[20,16,20,20],"384":[159,42,159,50],"385":[20,29,20,34],"386":[71,25,71,32],"392":[160,40,160,48],"393":[20,29,20,34],"394":[73,11,73,21],"400":[163,52,163,60],"401":[20,22,20,35],"402":[74,11,74,45],"409":[22,13,22,17],"410":[77,25,77,35],"417":[22,13,22,24],"418":[83,7,83,17],"425":[23,11,23,12],"426":[85,10,85,21],"433":[24,15,24,20],"434":[85,23,85,30],"441":[22,13,22,24],"449":[22,13,22,24],"450":[85,23,85,30],"457":[23,11,23,12],"458":[87,9,87,19],"465":[23,11,23,12],"466":[88,9,88,19],"473":[24,15,24,20],"474":[89,9,89,43],"481":[24,15,24,20],"482":[96,7,96,17],"489":[27,8,27,11],"490":[96,21,96,31],"497":[27,20,27,25],"498":[99,7,99,17],"505":[27,20,27,25],"506":[108,30,108,32],"513":[27,13,27,26],"514":[108,7,108,32],"521":[29,8,29,12],"522":[114,7,114,17],"529":[29,13,29,18],"530":[114,21,114,31],"537":[29,8,29,19],"538":[115,9,115,19],"545":[29,8,29,19],"546":[115,28,115,30],"553":[29,3,29,20],"554":[120,7,120,20],"561":[32,7,32,9],"562":[122,7,122,17],"569":[32,14,32,17],"570":[123,9,123,25],"577":[32,21,32,23],"578":[123,34,123,68],"585":[32,28,32,31],"586":[124,9,124,25],"593":[33,10,33,14],"594":[124,34,124,60],"602":[125,12,125,37],"609":[33,17,33,22],"610":[128,30,128,32],"617":[33,15,33,22],"618":[128,7,128,32],"625":[33,10,33,23],"626":[137,16,137,24],"633":[33,10,33,23],"634":[137,16,137,24],"641":[33,5,33,24],"642":[138,15,138,17],"649":[36,7,36,9],"650":[141,12,141,24],"657":[36,14,36,17],"658":[145,10,145,36],"665":[38,9,38,14],"666":[149,10,149,70],"673":[38,17,38,18],"674":[150,3,150,13],"681":[38,23,38,26],"682":[150,3,150,19],"689":[38,35,38,39],"690":[150,23,150,53],"697":[38,35,38,39],"698":[159,42,159,50],"705":[38,28,38,40],"706":[159,53,159,75],"713":[39,10,39,14],"714":[159,78,159,110],"722":[160,40,160,48],"729":[39,17,39,22],"730":[160,51,160,72],"737":[39,15,39,22],"738":[160,75,160,106],"745":[39,10,39,23],"746":[163,52,163,60],"753":[39,10,39,23],"754":[163,63,163,100],"761":[39,5,39,24],"762":[163,103,163,150],"769":[43,9,43,11],"777":[43,16,43,19],"793":[45,7,45,12],"801":[45,7,45,14],"817":[45,7,45,15],"825":[47,14,47,19],"833":[47,22,47,25],"849":[47,27,47,32],"857":[47,27,47,34],"873":[48,14,48,18],"881":[48,19,48,24],"889":[48,14,48,25],"897":[48,14,48,25],"905":[48,9,48,26],"913":[49,13,49,15],"921":[49,20,49,23],"929":[50,13,50,15],"937":[50,20,50,23],"945":[50,27,50,29],"953":[50,34,50,37],"961":[50,46,50,51],"969":[50,46,50,51],"977":[50,39,50,52],"985":[51,21,51,25],"993":[51,21,51,25],"1001":[51,9,51,26],"1009":[53,14,53,23],"1017":[53,27,53,29],"1025":[53,34,53,37],"1033":[53,14,53,37],"1041":[53,7,53,38],"1049":[57,9,57,11],"1057":[57,16,57,19],"1073":[59,7,59,12],"1081":[59,7,59,14],"1097":[59,7,59,15],"1105":[61,14,61,19],"1113":[61,22,61,25],"1129":[61,27,61,32],"1137":[61,27,61,34],"1153":[62,14,62,18],"1161":[62,19,62,24],"1169":[62,14,62,25],"1177":[62,14,62,25],"1185":[62,9,62,26],"1193":[63,13,63,15],"1201":[63,20,63,23],"1209":[64,14,64,23],"1217":[64,24,64,28],"1225":[64,40,64,45],"1233":[64,24,64,46],"1235":[64,24,64,39],"1241":[64,14,64,47],"1249":[64,56,64,61],"1257":[64,56,64,61],"1265":[64,49,64,62],"1273":[65,21,65,25],"1281":[65,21,65,25],"1289":[65,9,65,26],"1297":[67,14,67,23],"1305":[67,27,67,29],"1313":[67,34,67,37],"1321":[67,14,67,37],"1329":[67,7,67,38],"1337":[71,12,71,17],"1345":[71,20,71,23],"1361":[71,25,71,30],"1369":[71,25,71,32],"1385":[72,12,72,16],"1393":[72,17,72,22],"1401":[72,12,72,23],"1409":[72,12,72,23],"1417":[72,7,72,24],"1425":[73,11,73,13],"1433":[73,18,73,21],"1441":[74,12,74,21],"1449":[74,22,74,26],"1457":[74,38,74,43],"1465":[74,22,74,44],"1467":[74,22,74,37],"1473":[74,12,74,45],"1481":[74,54,74,59],"1489":[74,54,74,59],"1497":[74,47,74,60],"1505":[75,19,75,23],"1513":[75,19,75,23],"1521":[75,7,75,24],"1529":[77,12,77,21],"1537":[77,25,77,27],"1545":[77,32,77,35],"1553":[77,12,77,35],"1561":[77,5,77,36],"1569":[83,7,83,9],"1577":[83,14,83,17],"1585":[83,26,83,31],"1593":[83,26,83,31],"1601":[83,19,83,32],"1609":[85,10,85,15],"1617":[85,18,85,21],"1633":[85,23,85,28],"1641":[85,23,85,30],"1657":[86,10,86,14],"1665":[86,15,86,20],"1673":[86,10,86,21],"1681":[86,10,86,21],"1689":[86,5,86,22],"1697":[87,9,87,11],"1705":[87,16,87,19],"1713":[88,9,88,11],"1721":[88,16,88,19],"1729":[89,10,89,19],"1737":[89,20,89,24],"1745":[89,36,89,41],"1753":[89,20,89,42],"1755":[89,20,89,35],"1761":[89,10,89,43],"1769":[90,14,90,19],"1777":[90,14,90,19],"1785":[90,7,90,20],"1793":[92,17,92,21],"1801":[92,17,92,21],"1809":[92,5,92,22],"1817":[96,8,96,17],"1825":[96,21,96,23],"1833":[96,28,96,31],"1841":[96,40,96,45],"1849":[96,40,96,45],"1857":[96,33,96,46],"1865":[99,7,99,9],"1873":[99,14,99,17],"1881":[99,26,99,30],"1889":[99,26,99,30],"1897":[99,19,99,31],"1905":[102,11,102,30],"1913":[102,36,102,40],"1921":[102,47,102,52],"1929":[102,36,102,53],"1931":[102,36,102,46],"1937":[102,11,102,54],"1939":[102,11,102,35],"1945":[102,11,102,54],"1953":[102,3,102,56],"1961":[19,1,103,2],"1969":[19,1,103,2],"1977":[19,1,103,2],"1985":[19,1,103,2],"1993":[19,1,103,2],"2001":[19,1,103,2],"2009":[19,1,103,2],"2017":[106,15,106,19],"2025":[106,27,106,28],"2033":[106,46,106,48],"2041":[106,15,106,19],"2049":[106,15,106,19],"2057":[106,27,106,28],"2065":[106,27,106,28],"2073":[106,46,106,48],"2081":[106,46,106,48],"2089":[108,7,108,12],"2097":[108,21,108,24],"2105":[108,7,108,25],"2107":[108,7,108,20],"2113":[108,31,108,32],"2121":[109,13,109,18],"2129":[109,27,109,31],"2137":[109,33,109,35],"2145":[109,13,109,36],"2147":[109,13,109,26],"2153":[109,13,109,36],"2161":[109,5,109,37],"2169":[112,8,112,13],"2177":[112,14,112,15],"2185":[112,8,112,16],"2193":[112,8,112,16],"2201":[112,3,112,17],"2209":[114,7,114,9],"2217":[114,14,114,17],"2225":[114,21,114,23],"2233":[114,28,114,31],"2241":[115,9,115,11],"2249":[115,16,115,19],"2257":[115,29,115,30],"2265":[115,28,115,30],"2273":[115,21,115,31],"2281":[116,13,116,18],"2289":[116,25,116,26],"2297":[116,13,116,27],"2299":[116,13,116,24],"2305":[116,13,116,27],"2313":[116,5,116,28],"2321":[117,10,117,15],"2329":[117,16,117,17],"2337":[117,10,117,18],"2345":[117,10,117,18],"2353":[117,5,117,19],"2361":[120,7,120,12],"2369":[120,17,120,20],"2377":[120,29,120,30],"2385":[120,29,120,30],"2393":[120,22,120,31],"2401":[122,7,122,9],"2409":[122,14,122,17],"2417":[123,9,123,14],"2425":[123,15,123,16],"2433":[123,9,123,17],"2441":[123,22,123,25],"2449":[123,34,123,38],"2457":[123,41,123,49],"2465":[123,50,123,55],"2473":[123,62,123,63],"2481":[123,50,123,64],"2483":[123,50,123,61],"2489":[123,66,123,67],"2497":[123,41,123,68],"2505":[123,34,123,68],"2513":[123,27,123,69],"2521":[124,9,124,14],"2529":[124,15,124,16],"2537":[124,9,124,17],"2545":[124,22,124,25],"2553":[124,34,124,38],"2561":[124,41,124,49],"2569":[124,50,124,55],"2577":[124,57,124,59],"2585":[124,41,124,60],"2593":[124,34,124,60],"2601":[124,27,124,61],"2609":[125,12,125,16],"2617":[125,19,125,27],"2625":[125,28,125,33],"2633":[125,35,125,36],"2641":[125,19,125,37],"2649":[125,12,125,37],"2657":[125,5,125,38],"2665":[128,7,128,12],"2673":[128,21,128,24],"2681":[128,7,128,25],"2683":[128,7,128,20],"2689":[128,31,128,32],"2697":[129,5,129,10],"2705":[129,17,129,20],"2713":[129,5,129,21],"2715":[129,5,129,16],"2721":[130,7,130,13],"2729":[130,22,130,30],"2737":[130,31,130,32],"2745":[130,34,130,36],"2753":[130,22,130,37],"2761":[130,7,130,38],"2763":[130,7,130,21],"2769":[130,7,130,39],"2777":[129,30,131,6],"2785":[129,30,131,6],"2793":[129,30,131,6],"2801":[129,30,131,6],"2809":[129,5,131,7],"2811":[129,5,129,29],"2817":[129,5,131,8],"2825":[133,13,133,14],"2833":[133,13,133,14],"2841":[133,5,133,15],"2849":[134,12,134,13],"2857":[134,12,134,13],"2865":[134,5,134,14],"2873":[136,5,136,11],"2881":[137,16,137,17],"2889":[137,20,137,24],"2897":[137,7,137,12],"2905":[137,7,137,24],"2913":[137,7,137,25],"2921":[138,15,138,17],"2929":[138,7,138,11],"2937":[138,7,138,17],"2945":[138,7,138,18],"2953":[136,20,139,6],"2961":[136,20,139,6],"2969":[136,20,139,6],"2977":[136,20,139,6],"2985":[136,5,139,7],"2987":[136,5,136,19],"2993":[136,5,139,8],"3001":[141,12,141,16],"3009":[141,19,141,24],"3017":[141,12,141,24],"3025":[141,5,141,25],"3033":[145,10,145,14],"3041":[145,17,145,25],"3049":[145,26,145,31],"3057":[145,33,145,35],"3065":[145,17,145,36],"3073":[145,10,145,36],"3081":[145,3,145,37],"3089":[105,1,146,2],"3097":[105,1,146,2],"3105":[105,1,146,2],"3113":[105,1,146,2],"3121":[105,1,146,2],"3129":[105,1,146,2],"3137":[105,1,146,2],"3145":[105,1,146,2],"3153":[149,10,149,16],"3161":[149,10,149,26],"3169":[149,10,149,35],"3177":[149,41,149,47],"3185":[149,10,149,48],"3187":[149,10,149,40],"3193":[149,53,149,70],"3201":[150,3,150,9],"3209":[150,12,150,13],"3217":[150,18,150,19],"3225":[150,24,150,30],"3233":[150,46,150,52],"3241":[150,24,150,53],"3243":[150,24,150,45],"3249":[149,10,150,53],"3257":[149,3,150,54],"3265":[148,1,151,2],"3273":[148,1,151,2],"3281":[148,1,151,2],"3289":[153,1,153,7],"3297":[153,22,153,26],"3305":[153,27,153,50],"3313":[154,9,154,17],"3321":[155,12,155,30],"3329":[156,14,156,34],"3337":[157,14,157,23],"3345":[159,42,159,45],"3353":[159,49,159,50],"3361":[159,53,159,57],"3369":[159,60,159,63],"3377":[159,73,159,74],"3385":[159,60,159,75],"3387":[159,60,159,72],"3393":[159,78,159,83],"3401":[159,86,159,89],"3409":[159,99,159,100],"3417":[159,86,159,101],"3419":[159,86,159,98],"3425":[159,108,159,109],"3433":[159,86,159,110],"3435":[159,86,159,107],"3441":[159,42,159,110],"3449":[159,35,159,111],"3457":[159,13,159,112],"3465":[159,13,159,112],"3473":[159,13,159,112],"3481":[159,13,159,112],"3489":[159,13,159,112],"3497":[160,40,160,43],"3505":[160,47,160,48],"3513":[160,51,160,54],"3521":[160,57,160,60],"3529":[160,70,160,71],"3537":[160,57,160,72],"3539":[160,57,160,69],"3545":[160,75,160,79],"3553":[160,82,160,85],"3561":[160,95,160,96],"3569":[160,82,160,97],"3571":[160,82,160,94],"3577":[160,104,160,105],"3585":[160,82,160,106],"3587":[160,82,160,103],"3593":[160,40,160,106],"3601":[160,33,160,107],"3609":[160,12,160,108],"3617":[160,12,160,108],"3625":[160,12,160,108],"3633":[160,12,160,108],"3641":[160,12,160,108],"3649":[161,44,161,47],"3657":[161,57,161,59],"3665":[161,44,161,60],"3667":[161,44,161,56],"3673":[161,44,161,60],"3681":[161,37,161,61],"3689":[161,14,161,62],"3697":[161,14,161,62],"3705":[161,14,161,62],"3713":[161,14,161,62],"3721":[161,14,161,62],"3729":[163,52,163,55],"3737":[163,59,163,60],"3745":[163,63,163,67],"3753":[163,70,163,73],"3761":[163,83,163,85],"3769":[163,70,163,86],"3771":[163,70,163,82],"3777":[163,70,163,100],"3779":[163,70,163,98],"3785":[163,103,163,108],"3793":[163,111,163,114],"3801":[163,124,163,126],"3809":[163,111,163,127],"3811":[163,111,163,123],"3817":[163,111,163,141],"3819":[163,111,163,139],"3825":[163,148,163,149],"3833":[163,111,163,150],"3835":[163,111,163,147],"3841":[163,52,163,150],"3849":[163,45,163,151],"3857":[163,18,163,152],"3865":[163,18,163,152],"3873":[163,18,163,152],"3881":[163,18,163,152],"3889":[163,18,163,152],"3897":[158,14,163,154],"3905":[165,17,165,26],"3913":[167,14,167,15],"3921":[167,17,167,22],"3929":[167,13,167,23],"3937":[168,13,168,14],"3945":[168,16,168,21],"3953":[168,12,168,22],"3961":[169,15,169,17],"3969":[169,19,169,24],"3977":[169,14,169,25],"3985":[170,19,170,21],"3993":[170,23,170,28],"4001":[170,18,170,29],"4009":[166,17,170,31],"4017":[153,52,170,33],"4025":[153,18,170,34],"4033":[153,1,170,34],"4041":[153,1,170,35],"4049":[1,1,170,35],"4057":[1,1,170,35],"4065":[1,1,170,35],"4073":[5,1,9,2],"4081":[1,1,170,35],"4089":[11,1,13,2],"4097":[1,1,170,35],"4105":[15,1,17,2],"4113":[1,1,170,35],"4121":[19,1,103,2],"4129":[1,1,170,35],"4137":[105,1,146,2],"4145":[1,1,170,35],"4153":[148,1,151,2],"4161":[1,1,170,35],"4169":[5,1,9,2],"4177":[5,1,9,2],"4185":[11,1,13,2],"4193":[11,1,13,2],"4201":[15,1,17,2],"4209":[15,1,17,2],"4217":[20,3,20,35],"4225":[27,3,27,26],"4233":[32,3,34,4],"4241":[38,5,38,40],"4249":[49,9,49,34],"4257":[50,9,50,52],"4265":[47,7,52,8],"4273":[47,7,52,8],"4281":[43,5,54,6],"4289":[63,9,63,34],"4297":[64,9,64,62],"4305":[61,7,66,8],"4313":[61,7,66,8],"4321":[57,5,68,6],"4329":[73,7,73,32],"4337":[74,7,74,60],"4345":[71,5,76,6],"4353":[71,5,76,6],"4361":[36,3,78,4],"4369":[83,3,83,32],"4377":[87,5,87,30],"4385":[88,5,88,27],"4393":[89,5,91,6],"4401":[85,3,93,4],"4409":[85,3,93,4],"4417":[96,3,96,46],"4425":[99,3,99,31],"4433":[19,1,103,2],"4441":[19,1,103,2],"4449":[108,3,110,4],"4457":[115,5,115,31],"4465":[114,3,118,4],"4473":[120,3,120,31],"4481":[123,5,123,69],"4489":[124,5,124,61],"4497":[122,3,126,4],"4505":[129,30,131,6],"4513":[129,30,131,6],"4521":[136,20,139,6],"4529":[136,20,139,6],"4537":[128,3,143,4],"4545":[105,1,146,2],"4553":[105,1,146,2],"4561":[148,1,151,2],"4569":[148,1,151,2],"4577":[159,42,159,110],"4585":[159,13,159,112],"4593":[159,13,159,112],"4601":[160,40,160,106],"4609":[160,12,160,108],"4617":[160,12,160,108],"4625":[161,14,161,62],"4633":[161,14,161,62],"4641":[163,52,163,150],"4649":[163,18,163,152],"4657":[163,18,163,152],"4665":[1,1,170,35],"4673":[1,1,170,35],"nBranches":100,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/int.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/int_jalangi_.js","code":"'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n"};
jalangiLabel123:
    while (true) {
        try {
            J$.Se(4049, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/int_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/int.js');
            function isHexCode(c) {
                jalangiLabel111:
                    while (true) {
                        try {
                            J$.Fe(201, arguments.callee, this, arguments);
                            arguments = J$.N(209, 'arguments', arguments, 4);
                            c = J$.N(217, 'c', c, 4);
                            return J$.X1(193, J$.Rt(185, J$.C(40, J$.C(24, J$.C(8, J$.B(10, '<=', J$.T(89, 0x30, 22, false), J$.R(97, 'c', c, 0), 0)) ? J$.B(18, '<=', J$.R(105, 'c', c, 0), J$.T(113, 0x39, 22, false), 0) : J$._()) ? J$._() : J$.C(16, J$.B(26, '<=', J$.T(121, 0x41, 22, false), J$.R(129, 'c', c, 0), 0)) ? J$.B(34, '<=', J$.R(137, 'c', c, 0), J$.T(145, 0x46, 22, false), 0) : J$._()) ? J$._() : J$.C(32, J$.B(42, '<=', J$.T(153, 0x61, 22, false), J$.R(161, 'c', c, 0), 0)) ? J$.B(50, '<=', J$.R(169, 'c', c, 0), J$.T(177, 0x66, 22, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(4169, J$e);
                        } finally {
                            if (J$.Fr(4177))
                                continue jalangiLabel111;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isOctCode(c) {
                jalangiLabel112:
                    while (true) {
                        try {
                            J$.Fe(273, arguments.callee, this, arguments);
                            arguments = J$.N(281, 'arguments', arguments, 4);
                            c = J$.N(289, 'c', c, 4);
                            return J$.X1(265, J$.Rt(257, J$.C(48, J$.B(58, '<=', J$.T(225, 0x30, 22, false), J$.R(233, 'c', c, 0), 0)) ? J$.B(66, '<=', J$.R(241, 'c', c, 0), J$.T(249, 0x37, 22, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(4185, J$e);
                        } finally {
                            if (J$.Fr(4193))
                                continue jalangiLabel112;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isDecCode(c) {
                jalangiLabel113:
                    while (true) {
                        try {
                            J$.Fe(345, arguments.callee, this, arguments);
                            arguments = J$.N(353, 'arguments', arguments, 4);
                            c = J$.N(361, 'c', c, 4);
                            return J$.X1(337, J$.Rt(329, J$.C(56, J$.B(74, '<=', J$.T(297, 0x30, 22, false), J$.R(305, 'c', c, 0), 0)) ? J$.B(82, '<=', J$.R(313, 'c', c, 0), J$.T(321, 0x39, 22, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(4201, J$e);
                        } finally {
                            if (J$.Fr(4209))
                                continue jalangiLabel113;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function resolveYamlInteger(data) {
                jalangiLabel114:
                    while (true) {
                        try {
                            J$.Fe(1961, arguments.callee, this, arguments);
                            arguments = J$.N(1969, 'arguments', arguments, 4);
                            data = J$.N(1977, 'data', data, 4);
                            J$.N(1985, 'max', max, 0);
                            J$.N(1993, 'index', index, 0);
                            J$.N(2001, 'hasDigits', hasDigits, 0);
                            J$.N(2009, 'ch', ch, 0);
                            if (J$.X1(4217, J$.C(64, J$.B(90, '===', J$.R(369, 'data', data, 0), J$.T(377, null, 25, false), 0))))
                                return J$.X1(401, J$.Rt(393, J$.T(385, false, 23, false)));
                            var max = J$.X1(449, J$.W(441, 'max', J$.G(417, J$.R(409, 'data', data, 0), 'length', 0), max, 1)), index = J$.X1(465, J$.W(457, 'index', J$.T(425, 0, 22, false), index, 1)), hasDigits = J$.X1(481, J$.W(473, 'hasDigits', J$.T(433, false, 23, false), hasDigits, 1)), ch;
                            if (J$.X1(4225, J$.C(72, J$.U(98, '!', J$.R(489, 'max', max, 0)))))
                                return J$.X1(513, J$.Rt(505, J$.T(497, false, 23, false)));
                            J$.X1(553, ch = J$.W(545, 'ch', J$.G(537, J$.R(521, 'data', data, 0), J$.R(529, 'index', index, 0), 4), ch, 0));
                            if (J$.X1(4233, J$.C(88, J$.C(80, J$.B(106, '===', J$.R(561, 'ch', ch, 0), J$.T(569, '-', 21, false), 0)) ? J$._() : J$.B(114, '===', J$.R(577, 'ch', ch, 0), J$.T(585, '+', 21, false), 0)))) {
                                J$.X1(641, ch = J$.W(633, 'ch', J$.G(625, J$.R(593, 'data', data, 0), index = J$.W(617, 'index', J$.B(130, '+', J$.U(122, '+', J$.R(609, 'index', index, 0)), J$.T(601, 1, 22, false), 0), index, 0), 4), ch, 0));
                            }
                            if (J$.X1(4361, J$.C(224, J$.B(138, '===', J$.R(649, 'ch', ch, 0), J$.T(657, '0', 21, false), 0)))) {
                                if (J$.X1(4241, J$.C(96, J$.B(154, '===', J$.B(146, '+', J$.R(665, 'index', index, 0), J$.T(673, 1, 22, false), 0), J$.R(681, 'max', max, 0), 0))))
                                    return J$.X1(705, J$.Rt(697, J$.T(689, true, 23, false)));
                                J$.X1(761, ch = J$.W(753, 'ch', J$.G(745, J$.R(713, 'data', data, 0), index = J$.W(737, 'index', J$.B(170, '+', J$.U(162, '+', J$.R(729, 'index', index, 0)), J$.T(721, 1, 22, false), 0), index, 0), 4), ch, 0));
                                if (J$.X1(4281, J$.C(144, J$.B(178, '===', J$.R(769, 'ch', ch, 0), J$.T(777, 'b', 21, false), 0)))) {
                                    J$.X1(817, J$.B(202, '-', index = J$.W(801, 'index', J$.B(194, '+', J$.U(186, '+', J$.R(793, 'index', index, 0)), J$.T(785, 1, 22, false), 0), index, 0), J$.T(809, 1, 22, false), 0));
                                    for (; J$.X1(4265, J$.C(128, J$.B(210, '<', J$.R(825, 'index', index, 0), J$.R(833, 'max', max, 0), 0))); J$.X1(4273, J$.B(234, '-', index = J$.W(857, 'index', J$.B(226, '+', J$.U(218, '+', J$.R(849, 'index', index, 0)), J$.T(841, 1, 22, false), 0), index, 0), J$.T(865, 1, 22, false), 0))) {
                                        J$.X1(905, ch = J$.W(897, 'ch', J$.G(889, J$.R(873, 'data', data, 0), J$.R(881, 'index', index, 0), 4), ch, 0));
                                        if (J$.X1(4249, J$.C(104, J$.B(242, '===', J$.R(913, 'ch', ch, 0), J$.T(921, '_', 21, false), 0))))
                                            continue;
                                        if (J$.X1(4257, J$.C(120, J$.C(112, J$.B(250, '!==', J$.R(929, 'ch', ch, 0), J$.T(937, '0', 21, false), 0)) ? J$.B(258, '!==', J$.R(945, 'ch', ch, 0), J$.T(953, '1', 21, false), 0) : J$._())))
                                            return J$.X1(977, J$.Rt(969, J$.T(961, false, 23, false)));
                                        J$.X1(1001, hasDigits = J$.W(993, 'hasDigits', J$.T(985, true, 23, false), hasDigits, 0));
                                    }
                                    return J$.X1(1041, J$.Rt(1033, J$.C(136, J$.R(1009, 'hasDigits', hasDigits, 0)) ? J$.B(266, '!==', J$.R(1017, 'ch', ch, 0), J$.T(1025, '_', 21, false), 0) : J$._()));
                                }
                                if (J$.X1(4321, J$.C(184, J$.B(274, '===', J$.R(1049, 'ch', ch, 0), J$.T(1057, 'x', 21, false), 0)))) {
                                    J$.X1(1097, J$.B(298, '-', index = J$.W(1081, 'index', J$.B(290, '+', J$.U(282, '+', J$.R(1073, 'index', index, 0)), J$.T(1065, 1, 22, false), 0), index, 0), J$.T(1089, 1, 22, false), 0));
                                    for (; J$.X1(4305, J$.C(168, J$.B(306, '<', J$.R(1105, 'index', index, 0), J$.R(1113, 'max', max, 0), 0))); J$.X1(4313, J$.B(330, '-', index = J$.W(1137, 'index', J$.B(322, '+', J$.U(314, '+', J$.R(1129, 'index', index, 0)), J$.T(1121, 1, 22, false), 0), index, 0), J$.T(1145, 1, 22, false), 0))) {
                                        J$.X1(1185, ch = J$.W(1177, 'ch', J$.G(1169, J$.R(1153, 'data', data, 0), J$.R(1161, 'index', index, 0), 4), ch, 0));
                                        if (J$.X1(4289, J$.C(152, J$.B(338, '===', J$.R(1193, 'ch', ch, 0), J$.T(1201, '_', 21, false), 0))))
                                            continue;
                                        if (J$.X1(4297, J$.C(160, J$.U(346, '!', J$.F(1241, J$.R(1209, 'isHexCode', isHexCode, 1), 0)(J$.M(1233, J$.R(1217, 'data', data, 0), 'charCodeAt', 0)(J$.R(1225, 'index', index, 0)))))))
                                            return J$.X1(1265, J$.Rt(1257, J$.T(1249, false, 23, false)));
                                        J$.X1(1289, hasDigits = J$.W(1281, 'hasDigits', J$.T(1273, true, 23, false), hasDigits, 0));
                                    }
                                    return J$.X1(1329, J$.Rt(1321, J$.C(176, J$.R(1297, 'hasDigits', hasDigits, 0)) ? J$.B(354, '!==', J$.R(1305, 'ch', ch, 0), J$.T(1313, '_', 21, false), 0) : J$._()));
                                }
                                for (; J$.X1(4345, J$.C(208, J$.B(362, '<', J$.R(1337, 'index', index, 0), J$.R(1345, 'max', max, 0), 0))); J$.X1(4353, J$.B(386, '-', index = J$.W(1369, 'index', J$.B(378, '+', J$.U(370, '+', J$.R(1361, 'index', index, 0)), J$.T(1353, 1, 22, false), 0), index, 0), J$.T(1377, 1, 22, false), 0))) {
                                    J$.X1(1417, ch = J$.W(1409, 'ch', J$.G(1401, J$.R(1385, 'data', data, 0), J$.R(1393, 'index', index, 0), 4), ch, 0));
                                    if (J$.X1(4329, J$.C(192, J$.B(394, '===', J$.R(1425, 'ch', ch, 0), J$.T(1433, '_', 21, false), 0))))
                                        continue;
                                    if (J$.X1(4337, J$.C(200, J$.U(402, '!', J$.F(1473, J$.R(1441, 'isOctCode', isOctCode, 1), 0)(J$.M(1465, J$.R(1449, 'data', data, 0), 'charCodeAt', 0)(J$.R(1457, 'index', index, 0)))))))
                                        return J$.X1(1497, J$.Rt(1489, J$.T(1481, false, 23, false)));
                                    J$.X1(1521, hasDigits = J$.W(1513, 'hasDigits', J$.T(1505, true, 23, false), hasDigits, 0));
                                }
                                return J$.X1(1561, J$.Rt(1553, J$.C(216, J$.R(1529, 'hasDigits', hasDigits, 0)) ? J$.B(410, '!==', J$.R(1537, 'ch', ch, 0), J$.T(1545, '_', 21, false), 0) : J$._()));
                            }
                            if (J$.X1(4369, J$.C(232, J$.B(418, '===', J$.R(1569, 'ch', ch, 0), J$.T(1577, '_', 21, false), 0))))
                                return J$.X1(1601, J$.Rt(1593, J$.T(1585, false, 23, false)));
                            for (; J$.X1(4401, J$.C(264, J$.B(426, '<', J$.R(1609, 'index', index, 0), J$.R(1617, 'max', max, 0), 0))); J$.X1(4409, J$.B(450, '-', index = J$.W(1641, 'index', J$.B(442, '+', J$.U(434, '+', J$.R(1633, 'index', index, 0)), J$.T(1625, 1, 22, false), 0), index, 0), J$.T(1649, 1, 22, false), 0))) {
                                J$.X1(1689, ch = J$.W(1681, 'ch', J$.G(1673, J$.R(1657, 'data', data, 0), J$.R(1665, 'index', index, 0), 4), ch, 0));
                                if (J$.X1(4377, J$.C(240, J$.B(458, '===', J$.R(1697, 'ch', ch, 0), J$.T(1705, '_', 21, false), 0))))
                                    continue;
                                if (J$.X1(4385, J$.C(248, J$.B(466, '===', J$.R(1713, 'ch', ch, 0), J$.T(1721, ':', 21, false), 0))))
                                    break;
                                if (J$.X1(4393, J$.C(256, J$.U(474, '!', J$.F(1761, J$.R(1729, 'isDecCode', isDecCode, 1), 0)(J$.M(1753, J$.R(1737, 'data', data, 0), 'charCodeAt', 0)(J$.R(1745, 'index', index, 0))))))) {
                                    return J$.X1(1785, J$.Rt(1777, J$.T(1769, false, 23, false)));
                                }
                                J$.X1(1809, hasDigits = J$.W(1801, 'hasDigits', J$.T(1793, true, 23, false), hasDigits, 0));
                            }
                            if (J$.X1(4417, J$.C(280, J$.C(272, J$.U(482, '!', J$.R(1817, 'hasDigits', hasDigits, 0))) ? J$._() : J$.B(490, '===', J$.R(1825, 'ch', ch, 0), J$.T(1833, '_', 21, false), 0))))
                                return J$.X1(1857, J$.Rt(1849, J$.T(1841, false, 23, false)));
                            if (J$.X1(4425, J$.C(288, J$.B(498, '!==', J$.R(1865, 'ch', ch, 0), J$.T(1873, ':', 21, false), 0))))
                                return J$.X1(1897, J$.Rt(1889, J$.T(1881, true, 23, false)));
                            return J$.X1(1953, J$.Rt(1945, J$.M(1937, J$.T(1905, /^(:[0-5]?[0-9])+$/, 14, false), 'test', 0)(J$.M(1929, J$.R(1913, 'data', data, 0), 'slice', 0)(J$.R(1921, 'index', index, 0)))));
                        } catch (J$e) {
                            J$.Ex(4433, J$e);
                        } finally {
                            if (J$.Fr(4441))
                                continue jalangiLabel114;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlInteger(data) {
                jalangiLabel117:
                    while (true) {
                        try {
                            J$.Fe(3089, arguments.callee, this, arguments);
                            arguments = J$.N(3097, 'arguments', arguments, 4);
                            data = J$.N(3105, 'data', data, 4);
                            J$.N(3113, 'value', value, 0);
                            J$.N(3121, 'sign', sign, 0);
                            J$.N(3129, 'ch', ch, 0);
                            J$.N(3137, 'base', base, 0);
                            J$.N(3145, 'digits', digits, 0);
                            var value = J$.X1(2049, J$.W(2041, 'value', J$.R(2017, 'data', data, 0), value, 1)), sign = J$.X1(2065, J$.W(2057, 'sign', J$.T(2025, 1, 22, false), sign, 1)), ch, base, digits = J$.X1(2081, J$.W(2073, 'digits', J$.T(2033, [], 10, false), digits, 1));
                            if (J$.X1(4449, J$.C(296, J$.B(514, '!==', J$.M(2105, J$.R(2089, 'value', value, 0), 'indexOf', 0)(J$.T(2097, '_', 21, false)), J$.U(506, '-', J$.T(2113, 1, 22, false)), 0)))) {
                                J$.X1(2161, value = J$.W(2153, 'value', J$.M(2145, J$.R(2121, 'value', value, 0), 'replace', 0)(J$.T(2129, /_/g, 14, false), J$.T(2137, '', 21, false)), value, 0));
                            }
                            J$.X1(2201, ch = J$.W(2193, 'ch', J$.G(2185, J$.R(2169, 'value', value, 0), J$.T(2177, 0, 22, false), 4), ch, 0));
                            if (J$.X1(4465, J$.C(320, J$.C(304, J$.B(522, '===', J$.R(2209, 'ch', ch, 0), J$.T(2217, '-', 21, false), 0)) ? J$._() : J$.B(530, '===', J$.R(2225, 'ch', ch, 0), J$.T(2233, '+', 21, false), 0)))) {
                                if (J$.X1(4457, J$.C(312, J$.B(538, '===', J$.R(2241, 'ch', ch, 0), J$.T(2249, '-', 21, false), 0))))
                                    J$.X1(2273, sign = J$.W(2265, 'sign', J$.U(546, '-', J$.T(2257, 1, 22, false)), sign, 0));
                                J$.X1(2313, value = J$.W(2305, 'value', J$.M(2297, J$.R(2281, 'value', value, 0), 'slice', 0)(J$.T(2289, 1, 22, false)), value, 0));
                                J$.X1(2353, ch = J$.W(2345, 'ch', J$.G(2337, J$.R(2321, 'value', value, 0), J$.T(2329, 0, 22, false), 4), ch, 0));
                            }
                            if (J$.X1(4473, J$.C(328, J$.B(554, '===', J$.R(2361, 'value', value, 0), J$.T(2369, '0', 21, false), 0))))
                                return J$.X1(2393, J$.Rt(2385, J$.T(2377, 0, 22, false)));
                            if (J$.X1(4497, J$.C(352, J$.B(562, '===', J$.R(2401, 'ch', ch, 0), J$.T(2409, '0', 21, false), 0)))) {
                                if (J$.X1(4481, J$.C(336, J$.B(570, '===', J$.G(2433, J$.R(2417, 'value', value, 0), J$.T(2425, 1, 22, false), 4), J$.T(2441, 'b', 21, false), 0))))
                                    return J$.X1(2513, J$.Rt(2505, J$.B(578, '*', J$.R(2449, 'sign', sign, 0), J$.F(2497, J$.R(2457, 'parseInt', parseInt, 2), 0)(J$.M(2481, J$.R(2465, 'value', value, 0), 'slice', 0)(J$.T(2473, 2, 22, false)), J$.T(2489, 2, 22, false)), 0)));
                                if (J$.X1(4489, J$.C(344, J$.B(586, '===', J$.G(2537, J$.R(2521, 'value', value, 0), J$.T(2529, 1, 22, false), 4), J$.T(2545, 'x', 21, false), 0))))
                                    return J$.X1(2601, J$.Rt(2593, J$.B(594, '*', J$.R(2553, 'sign', sign, 0), J$.F(2585, J$.R(2561, 'parseInt', parseInt, 2), 0)(J$.R(2569, 'value', value, 0), J$.T(2577, 16, 22, false)), 0)));
                                return J$.X1(2657, J$.Rt(2649, J$.B(602, '*', J$.R(2609, 'sign', sign, 0), J$.F(2641, J$.R(2617, 'parseInt', parseInt, 2), 0)(J$.R(2625, 'value', value, 0), J$.T(2633, 8, 22, false)), 0)));
                            }
                            if (J$.X1(4537, J$.C(360, J$.B(618, '!==', J$.M(2681, J$.R(2665, 'value', value, 0), 'indexOf', 0)(J$.T(2673, ':', 21, false)), J$.U(610, '-', J$.T(2689, 1, 22, false)), 0)))) {
                                J$.X1(2817, J$.M(2809, J$.M(2713, J$.R(2697, 'value', value, 0), 'split', 0)(J$.T(2705, ':', 21, false)), 'forEach', 0)(J$.T(2801, function (v) {
                                    jalangiLabel115:
                                        while (true) {
                                            try {
                                                J$.Fe(2777, arguments.callee, this, arguments);
                                                arguments = J$.N(2785, 'arguments', arguments, 4);
                                                v = J$.N(2793, 'v', v, 4);
                                                J$.X1(2769, J$.M(2761, J$.R(2721, 'digits', digits, 0), 'unshift', 0)(J$.F(2753, J$.R(2729, 'parseInt', parseInt, 2), 0)(J$.R(2737, 'v', v, 0), J$.T(2745, 10, 22, false))));
                                            } catch (J$e) {
                                                J$.Ex(4505, J$e);
                                            } finally {
                                                if (J$.Fr(4513))
                                                    continue jalangiLabel115;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2777)));
                                J$.X1(2841, value = J$.W(2833, 'value', J$.T(2825, 0, 22, false), value, 0));
                                J$.X1(2865, base = J$.W(2857, 'base', J$.T(2849, 1, 22, false), base, 0));
                                J$.X1(2993, J$.M(2985, J$.R(2873, 'digits', digits, 0), 'forEach', 0)(J$.T(2977, function (d) {
                                    jalangiLabel116:
                                        while (true) {
                                            try {
                                                J$.Fe(2953, arguments.callee, this, arguments);
                                                arguments = J$.N(2961, 'arguments', arguments, 4);
                                                d = J$.N(2969, 'd', d, 4);
                                                J$.X1(2913, value = J$.W(2905, 'value', J$.B(634, '+', J$.R(2897, 'value', value, 0), J$.B(626, '*', J$.R(2881, 'd', d, 0), J$.R(2889, 'base', base, 0), 0), 0), value, 0));
                                                J$.X1(2945, base = J$.W(2937, 'base', J$.B(642, '*', J$.R(2929, 'base', base, 0), J$.T(2921, 60, 22, false), 0), base, 0));
                                            } catch (J$e) {
                                                J$.Ex(4521, J$e);
                                            } finally {
                                                if (J$.Fr(4529))
                                                    continue jalangiLabel116;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2953)));
                                return J$.X1(3025, J$.Rt(3017, J$.B(650, '*', J$.R(3001, 'sign', sign, 0), J$.R(3009, 'value', value, 0), 0)));
                            }
                            return J$.X1(3081, J$.Rt(3073, J$.B(658, '*', J$.R(3033, 'sign', sign, 0), J$.F(3065, J$.R(3041, 'parseInt', parseInt, 2), 0)(J$.R(3049, 'value', value, 0), J$.T(3057, 10, 22, false)), 0)));
                        } catch (J$e) {
                            J$.Ex(4545, J$e);
                        } finally {
                            if (J$.Fr(4553))
                                continue jalangiLabel117;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isInteger(object) {
                jalangiLabel118:
                    while (true) {
                        try {
                            J$.Fe(3265, arguments.callee, this, arguments);
                            arguments = J$.N(3273, 'arguments', arguments, 4);
                            object = J$.N(3281, 'object', object, 4);
                            return J$.X1(3257, J$.Rt(3249, J$.C(376, J$.C(368, J$.B(666, '===', J$.M(3185, J$.G(3169, J$.G(3161, J$.R(3153, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.R(3177, 'object', object, 0)), J$.T(3193, '[object Number]', 21, false), 0)) ? J$.B(682, '===', J$.B(674, '%', J$.R(3201, 'object', object, 0), J$.T(3209, 1, 22, false), 0), J$.T(3217, 0, 22, false), 0) : J$._()) ? J$.U(690, '!', J$.M(3241, J$.R(3225, 'common', common, 1), 'isNegativeZero', 0)(J$.R(3233, 'object', object, 0))) : J$._()));
                        } catch (J$e) {
                            J$.Ex(4561, J$e);
                        } finally {
                            if (J$.Fr(4569))
                                continue jalangiLabel118;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4057, 'common', common, 0);
            J$.N(4065, 'Type', Type, 0);
            isHexCode = J$.N(4081, 'isHexCode', J$.T(4073, isHexCode, 12, false, 201), 0);
            isOctCode = J$.N(4097, 'isOctCode', J$.T(4089, isOctCode, 12, false, 273), 0);
            isDecCode = J$.N(4113, 'isDecCode', J$.T(4105, isDecCode, 12, false, 345), 0);
            resolveYamlInteger = J$.N(4129, 'resolveYamlInteger', J$.T(4121, resolveYamlInteger, 12, false, 1961), 0);
            constructYamlInteger = J$.N(4145, 'constructYamlInteger', J$.T(4137, constructYamlInteger, 12, false, 3089), 0);
            isInteger = J$.N(4161, 'isInteger', J$.T(4153, isInteger, 12, false, 3265), 0);
            var common = J$.X1(41, J$.W(33, 'common', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../common', 21, false)), common, 3));
            var Type = J$.X1(81, J$.W(73, 'Type', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../type', 21, false)), Type, 3));
            J$.X1(4041, J$.P(4033, J$.R(3289, 'module', module, 2), 'exports', J$.F(4025, J$.R(3297, 'Type', Type, 1), 1)(J$.T(3305, 'tag:yaml.org,2002:int', 21, false), J$.T(4017, {
                kind: J$.T(3313, 'scalar', 21, false),
                resolve: J$.R(3321, 'resolveYamlInteger', resolveYamlInteger, 1),
                construct: J$.R(3329, 'constructYamlInteger', constructYamlInteger, 1),
                predicate: J$.R(3337, 'isInteger', isInteger, 1),
                represent: J$.T(3897, {
                    binary: J$.T(3489, function binary(obj) {
                        jalangiLabel119:
                            while (true) {
                                try {
                                    J$.Fe(3457, arguments.callee, this, arguments);
                                    arguments = J$.N(3465, 'arguments', arguments, 4);
                                    binary = J$.N(3473, 'binary', binary, 0);
                                    obj = J$.N(3481, 'obj', obj, 4);
                                    return J$.X1(3449, J$.Rt(3441, J$.X1(4577, J$.C(384, J$.B(698, '>=', J$.R(3345, 'obj', obj, 0), J$.T(3353, 0, 22, false), 0))) ? J$.B(706, '+', J$.T(3361, '0b', 21, false), J$.M(3385, J$.R(3369, 'obj', obj, 0), 'toString', 0)(J$.T(3377, 2, 22, false)), 0) : J$.B(714, '+', J$.T(3393, '-0b', 21, false), J$.M(3433, J$.M(3417, J$.R(3401, 'obj', obj, 0), 'toString', 0)(J$.T(3409, 2, 22, false)), 'slice', 0)(J$.T(3425, 1, 22, false)), 0)));
                                } catch (J$e) {
                                    J$.Ex(4585, J$e);
                                } finally {
                                    if (J$.Fr(4593))
                                        continue jalangiLabel119;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 3457),
                    octal: J$.T(3641, function octal(obj) {
                        jalangiLabel120:
                            while (true) {
                                try {
                                    J$.Fe(3609, arguments.callee, this, arguments);
                                    arguments = J$.N(3617, 'arguments', arguments, 4);
                                    octal = J$.N(3625, 'octal', octal, 0);
                                    obj = J$.N(3633, 'obj', obj, 4);
                                    return J$.X1(3601, J$.Rt(3593, J$.X1(4601, J$.C(392, J$.B(722, '>=', J$.R(3497, 'obj', obj, 0), J$.T(3505, 0, 22, false), 0))) ? J$.B(730, '+', J$.T(3513, '0', 21, false), J$.M(3537, J$.R(3521, 'obj', obj, 0), 'toString', 0)(J$.T(3529, 8, 22, false)), 0) : J$.B(738, '+', J$.T(3545, '-0', 21, false), J$.M(3585, J$.M(3569, J$.R(3553, 'obj', obj, 0), 'toString', 0)(J$.T(3561, 8, 22, false)), 'slice', 0)(J$.T(3577, 1, 22, false)), 0)));
                                } catch (J$e) {
                                    J$.Ex(4609, J$e);
                                } finally {
                                    if (J$.Fr(4617))
                                        continue jalangiLabel120;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 3609),
                    decimal: J$.T(3721, function decimal(obj) {
                        jalangiLabel121:
                            while (true) {
                                try {
                                    J$.Fe(3689, arguments.callee, this, arguments);
                                    arguments = J$.N(3697, 'arguments', arguments, 4);
                                    decimal = J$.N(3705, 'decimal', decimal, 0);
                                    obj = J$.N(3713, 'obj', obj, 4);
                                    return J$.X1(3681, J$.Rt(3673, J$.M(3665, J$.R(3649, 'obj', obj, 0), 'toString', 0)(J$.T(3657, 10, 22, false))));
                                } catch (J$e) {
                                    J$.Ex(4625, J$e);
                                } finally {
                                    if (J$.Fr(4633))
                                        continue jalangiLabel121;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 3689),
                    hexadecimal: J$.T(3889, function hexadecimal(obj) {
                        jalangiLabel122:
                            while (true) {
                                try {
                                    J$.Fe(3857, arguments.callee, this, arguments);
                                    arguments = J$.N(3865, 'arguments', arguments, 4);
                                    hexadecimal = J$.N(3873, 'hexadecimal', hexadecimal, 0);
                                    obj = J$.N(3881, 'obj', obj, 4);
                                    return J$.X1(3849, J$.Rt(3841, J$.X1(4641, J$.C(400, J$.B(746, '>=', J$.R(3729, 'obj', obj, 0), J$.T(3737, 0, 22, false), 0))) ? J$.B(754, '+', J$.T(3745, '0x', 21, false), J$.M(3777, J$.M(3769, J$.R(3753, 'obj', obj, 0), 'toString', 0)(J$.T(3761, 16, 22, false)), 'toUpperCase', 0)(), 0) : J$.B(762, '+', J$.T(3785, '-0x', 21, false), J$.M(3833, J$.M(3817, J$.M(3809, J$.R(3793, 'obj', obj, 0), 'toString', 0)(J$.T(3801, 16, 22, false)), 'toUpperCase', 0)(), 'slice', 0)(J$.T(3825, 1, 22, false)), 0)));
                                } catch (J$e) {
                                    J$.Ex(4649, J$e);
                                } finally {
                                    if (J$.Fr(4657))
                                        continue jalangiLabel122;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false, 3857)
                }, 11, false),
                defaultStyle: J$.T(3905, 'decimal', 21, false),
                styleAliases: J$.T(4009, {
                    binary: J$.T(3929, [
                        J$.T(3913, 2, 22, false),
                        J$.T(3921, 'bin', 21, false)
                    ], 10, false),
                    octal: J$.T(3953, [
                        J$.T(3937, 8, 22, false),
                        J$.T(3945, 'oct', 21, false)
                    ], 10, false),
                    decimal: J$.T(3977, [
                        J$.T(3961, 10, 22, false),
                        J$.T(3969, 'dec', 21, false)
                    ], 10, false),
                    hexadecimal: J$.T(4001, [
                        J$.T(3985, 16, 22, false),
                        J$.T(3993, 'hex', 21, false)
                    ], 10, false)
                }, 11, false)
            }, 11, false)), 0));
        } catch (J$e) {
            J$.Ex(4665, J$e);
        } finally {
            if (J$.Sr(4673)) {
                J$.L();
                continue jalangiLabel123;
            } else {
                J$.L();
                break jalangiLabel123;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
