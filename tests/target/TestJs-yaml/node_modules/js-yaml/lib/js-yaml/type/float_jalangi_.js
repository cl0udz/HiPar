J$.iids = {"8":[20,7,20,20],"9":[1,1,1,13],"10":[8,3,11,36],"16":[22,7,25,36],"17":[1,1,1,14],"18":[8,3,13,50],"24":[22,7,25,36],"25":[3,14,3,21],"26":[8,3,15,29],"32":[36,12,36,28],"33":[3,22,3,33],"34":[8,3,17,26],"40":[39,7,39,34],"41":[3,14,3,34],"42":[20,7,20,20],"48":[44,13,44,23],"49":[3,14,3,34],"50":[22,7,22,37],"56":[49,14,49,37],"57":[3,14,3,34],"58":[25,12,25,27],"64":[46,14,46,30],"65":[4,14,4,21],"66":[25,7,25,36],"72":[43,7,43,23],"73":[4,22,4,31],"74":[36,12,36,28],"80":[75,13,75,18],"81":[4,14,4,32],"82":[36,31,36,33],"88":[76,12,76,23],"89":[4,14,4,32],"90":[39,7,39,34],"96":[77,12,77,23],"97":[4,14,4,32],"98":[43,7,43,23],"104":[78,12,78,23],"105":[6,30,6,36],"106":[44,13,44,23],"112":[81,13,81,18],"113":[8,3,8,67],"114":[46,14,46,30],"120":[82,12,82,23],"121":[11,3,11,36],"122":[49,14,49,37],"128":[83,12,83,23],"129":[13,3,13,50],"130":[58,16,58,24],"136":[84,12,84,23],"137":[15,3,15,29],"138":[58,16,58,24],"144":[87,13,87,18],"145":[17,3,17,26],"146":[59,15,59,17],"152":[88,12,88,23],"153":[6,26,17,27],"154":[62,12,62,24],"160":[89,12,89,23],"161":[6,26,17,27],"162":[65,10,65,38],"168":[90,12,90,23],"169":[6,26,17,27],"170":[80,14,80,49],"176":[92,14,92,43],"177":[20,7,20,11],"178":[86,14,86,49],"184":[86,14,86,49],"185":[20,16,20,20],"186":[105,11,105,71],"192":[80,14,80,49],"193":[20,29,20,34],"194":[106,11,106,21],"200":[74,7,74,20],"201":[20,29,20,34],"202":[106,11,106,27],"208":[101,10,101,42],"209":[20,22,20,35],"216":[106,11,106,60],"217":[22,8,22,26],"224":[105,10,106,61],"225":[22,32,22,36],"233":[22,8,22,37],"235":[22,8,22,31],"241":[25,7,25,11],"249":[25,12,25,16],"257":[25,12,25,23],"265":[25,26,25,27],"273":[25,7,25,28],"281":[25,33,25,36],"289":[26,12,26,17],"297":[26,12,26,17],"305":[26,5,26,18],"313":[29,10,29,14],"321":[29,10,29,14],"329":[29,3,29,15],"337":[19,1,30,2],"345":[19,1,30,2],"353":[19,1,30,2],"361":[35,12,35,16],"369":[35,25,35,29],"377":[35,31,35,33],"385":[35,12,35,34],"387":[35,12,35,24],"393":[35,12,35,48],"395":[35,12,35,46],"401":[35,12,35,48],"409":[35,3,35,49],"417":[36,12,36,17],"425":[36,18,36,19],"433":[36,12,36,20],"441":[36,25,36,28],"449":[36,32,36,33],"457":[36,36,36,37],"465":[36,12,36,37],"473":[36,3,36,38],"481":[37,12,37,14],"489":[37,12,37,14],"497":[37,3,37,15],"505":[39,7,39,11],"513":[39,20,39,25],"521":[39,26,39,27],"529":[39,20,39,28],"537":[39,7,39,29],"539":[39,7,39,19],"545":[39,33,39,34],"553":[40,13,40,18],"561":[40,25,40,26],"569":[40,13,40,27],"571":[40,13,40,24],"577":[40,13,40,27],"585":[40,5,40,28],"593":[43,7,43,12],"601":[43,17,43,23],"609":[44,13,44,17],"617":[44,22,44,23],"625":[44,27,44,33],"633":[44,27,44,51],"641":[44,54,44,60],"649":[44,54,44,78],"657":[44,12,44,78],"665":[44,5,44,79],"673":[46,14,46,19],"681":[46,24,46,30],"689":[47,12,47,15],"697":[47,12,47,15],"705":[47,5,47,16],"713":[49,14,49,19],"721":[49,28,49,31],"729":[49,14,49,32],"731":[49,14,49,27],"737":[49,36,49,37],"745":[50,5,50,10],"753":[50,17,50,20],"761":[50,5,50,21],"763":[50,5,50,16],"769":[51,7,51,13],"777":[51,22,51,32],"785":[51,33,51,34],"793":[51,36,51,38],"801":[51,22,51,39],"809":[51,7,51,40],"811":[51,7,51,21],"817":[51,7,51,41],"825":[50,30,52,6],"833":[50,30,52,6],"841":[50,30,52,6],"849":[50,30,52,6],"857":[50,5,52,7],"859":[50,5,50,29],"865":[50,5,52,8],"873":[54,13,54,16],"881":[54,13,54,16],"889":[54,5,54,17],"897":[55,12,55,13],"905":[55,12,55,13],"913":[55,5,55,14],"921":[57,5,57,11],"929":[58,16,58,17],"937":[58,20,58,24],"945":[58,7,58,12],"953":[58,7,58,24],"961":[58,7,58,25],"969":[59,15,59,17],"977":[59,7,59,11],"985":[59,7,59,17],"993":[59,7,59,18],"1001":[57,20,60,6],"1009":[57,20,60,6],"1017":[57,20,60,6],"1025":[57,20,60,6],"1033":[57,5,60,7],"1035":[57,5,57,19],"1041":[57,5,60,8],"1049":[62,12,62,16],"1057":[62,19,62,24],"1065":[62,12,62,24],"1073":[62,5,62,25],"1081":[65,10,65,14],"1089":[65,17,65,27],"1097":[65,28,65,33],"1105":[65,35,65,37],"1113":[65,17,65,38],"1121":[65,10,65,38],"1129":[65,3,65,39],"1137":[32,1,66,2],"1145":[32,1,66,2],"1153":[32,1,66,2],"1161":[32,1,66,2],"1169":[32,1,66,2],"1177":[32,1,66,2],"1185":[32,1,66,2],"1193":[69,30,69,45],"1201":[69,30,69,45],"1209":[69,30,69,45],"1217":[74,7,74,12],"1225":[74,13,74,19],"1233":[74,7,74,20],"1241":[75,13,75,18],"1249":[76,32,76,38],"1257":[76,32,76,38],"1265":[76,25,76,39],"1273":[76,12,76,23],"1281":[77,32,77,38],"1289":[77,32,77,38],"1297":[77,25,77,39],"1305":[77,12,77,23],"1313":[78,32,78,38],"1321":[78,32,78,38],"1329":[78,25,78,39],"1337":[78,12,78,23],"1345":[80,14,80,20],"1353":[80,14,80,38],"1361":[80,43,80,49],"1369":[81,13,81,18],"1377":[82,32,82,38],"1385":[82,32,82,38],"1393":[82,25,82,39],"1401":[82,12,82,23],"1409":[83,32,83,38],"1417":[83,32,83,38],"1425":[83,25,83,39],"1433":[83,12,83,23],"1441":[84,32,84,38],"1449":[84,32,84,38],"1457":[84,25,84,39],"1465":[84,12,84,23],"1473":[86,14,86,20],"1481":[86,14,86,38],"1489":[86,43,86,49],"1497":[87,13,87,18],"1505":[88,32,88,39],"1513":[88,32,88,39],"1521":[88,25,88,40],"1529":[88,12,88,23],"1537":[89,32,89,39],"1545":[89,32,89,39],"1553":[89,25,89,40],"1561":[89,12,89,23],"1569":[90,32,90,39],"1577":[90,32,90,39],"1585":[90,25,90,40],"1593":[90,12,90,23],"1601":[92,14,92,20],"1609":[92,36,92,42],"1617":[92,14,92,43],"1619":[92,14,92,35],"1625":[93,12,93,18],"1633":[93,12,93,18],"1641":[93,5,93,19],"1649":[96,9,96,15],"1657":[96,25,96,27],"1665":[96,9,96,28],"1667":[96,9,96,24],"1673":[96,9,96,28],"1681":[96,3,96,29],"1689":[101,10,101,32],"1697":[101,38,101,41],"1705":[101,10,101,42],"1707":[101,10,101,37],"1713":[101,45,101,48],"1721":[101,57,101,60],"1729":[101,62,101,66],"1737":[101,45,101,67],"1739":[101,45,101,56],"1745":[101,70,101,73],"1753":[101,10,101,73],"1761":[101,3,101,74],"1769":[71,1,102,2],"1777":[71,1,102,2],"1785":[71,1,102,2],"1793":[71,1,102,2],"1801":[71,1,102,2],"1809":[105,11,105,17],"1817":[105,11,105,27],"1825":[105,11,105,36],"1833":[105,42,105,48],"1841":[105,11,105,49],"1843":[105,11,105,41],"1849":[105,54,105,71],"1857":[106,11,106,17],"1865":[106,20,106,21],"1873":[106,26,106,27],"1881":[106,31,106,37],"1889":[106,53,106,59],"1897":[106,31,106,60],"1899":[106,31,106,52],"1905":[105,10,106,61],"1913":[105,3,106,62],"1921":[104,1,107,2],"1929":[104,1,107,2],"1937":[104,1,107,2],"1945":[109,1,109,7],"1953":[109,22,109,26],"1961":[109,27,109,52],"1969":[110,9,110,17],"1977":[111,12,111,28],"1985":[112,14,112,32],"1993":[113,14,113,21],"2001":[114,14,114,32],"2009":[115,17,115,28],"2017":[109,54,116,2],"2025":[109,18,116,3],"2033":[109,1,116,3],"2041":[109,1,116,4],"2049":[1,1,117,1],"2057":[1,1,117,1],"2065":[1,1,117,1],"2073":[1,1,117,1],"2081":[19,1,30,2],"2089":[1,1,117,1],"2097":[32,1,66,2],"2105":[1,1,117,1],"2113":[1,1,117,1],"2121":[71,1,102,2],"2129":[1,1,117,1],"2137":[104,1,107,2],"2145":[1,1,117,1],"2153":[20,3,20,35],"2161":[22,3,27,4],"2169":[19,1,30,2],"2177":[19,1,30,2],"2185":[36,12,36,37],"2193":[39,3,41,4],"2201":[44,12,44,78],"2209":[50,30,52,6],"2217":[50,30,52,6],"2225":[57,20,60,6],"2233":[57,20,60,6],"2241":[49,10,64,4],"2249":[46,10,64,4],"2257":[43,3,64,4],"2265":[32,1,66,2],"2273":[32,1,66,2],"2281":[75,13,75,18],"2289":[76,12,76,23],"2297":[77,12,77,23],"2305":[78,12,78,23],"2313":[81,13,81,18],"2321":[82,12,82,23],"2329":[83,12,83,23],"2337":[84,12,84,23],"2345":[87,13,87,18],"2353":[88,12,88,23],"2361":[89,12,89,23],"2369":[90,12,90,23],"2377":[92,10,94,4],"2385":[86,10,94,4],"2393":[80,10,94,4],"2401":[74,3,94,4],"2409":[101,10,101,73],"2417":[71,1,102,2],"2425":[71,1,102,2],"2433":[104,1,107,2],"2441":[104,1,107,2],"2449":[1,1,117,1],"2457":[1,1,117,1],"nBranches":56,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/float.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/float_jalangi_.js","code":"'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n"};
jalangiLabel126:
    while (true) {
        try {
            J$.Se(2049, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/float_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/float.js');
            function resolveYamlFloat(data) {
                jalangiLabel120:
                    while (true) {
                        try {
                            J$.Fe(337, arguments.callee, this, arguments);
                            arguments = J$.N(345, 'arguments', arguments, 4);
                            data = J$.N(353, 'data', data, 4);
                            if (J$.X1(2153, J$.C(8, J$.B(42, '===', J$.R(177, 'data', data, 0), J$.T(185, null, 25, false), 0))))
                                return J$.X1(209, J$.Rt(201, J$.T(193, false, 23, false)));
                            if (J$.X1(2161, J$.C(24, J$.C(16, J$.U(50, '!', J$.M(233, J$.R(217, 'YAML_FLOAT_PATTERN', YAML_FLOAT_PATTERN, 1), 'test', 0)(J$.R(225, 'data', data, 0)))) ? J$._() : J$.B(66, '===', J$.G(273, J$.R(241, 'data', data, 0), J$.B(58, '-', J$.G(257, J$.R(249, 'data', data, 0), 'length', 0), J$.T(265, 1, 22, false), 0), 4), J$.T(281, '_', 21, false), 0)))) {
                                return J$.X1(305, J$.Rt(297, J$.T(289, false, 23, false)));
                            }
                            return J$.X1(329, J$.Rt(321, J$.T(313, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(2169, J$e);
                        } finally {
                            if (J$.Fr(2177))
                                continue jalangiLabel120;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlFloat(data) {
                jalangiLabel123:
                    while (true) {
                        try {
                            J$.Fe(1137, arguments.callee, this, arguments);
                            arguments = J$.N(1145, 'arguments', arguments, 4);
                            data = J$.N(1153, 'data', data, 4);
                            J$.N(1161, 'value', value, 0);
                            J$.N(1169, 'sign', sign, 0);
                            J$.N(1177, 'base', base, 0);
                            J$.N(1185, 'digits', digits, 0);
                            var value, sign, base, digits;
                            J$.X1(409, value = J$.W(401, 'value', J$.M(393, J$.M(385, J$.R(361, 'data', data, 0), 'replace', 0)(J$.T(369, /_/g, 14, false), J$.T(377, '', 21, false)), 'toLowerCase', 0)(), value, 0));
                            J$.X1(473, sign = J$.W(465, 'sign', J$.X1(2185, J$.C(32, J$.B(74, '===', J$.G(433, J$.R(417, 'value', value, 0), J$.T(425, 0, 22, false), 4), J$.T(441, '-', 21, false), 0))) ? J$.U(82, '-', J$.T(449, 1, 22, false)) : J$.T(457, 1, 22, false), sign, 0));
                            J$.X1(497, digits = J$.W(489, 'digits', J$.T(481, [], 10, false), digits, 0));
                            if (J$.X1(2193, J$.C(40, J$.B(90, '>=', J$.M(537, J$.T(505, '+-', 21, false), 'indexOf', 0)(J$.G(529, J$.R(513, 'value', value, 0), J$.T(521, 0, 22, false), 4)), J$.T(545, 0, 22, false), 0)))) {
                                J$.X1(585, value = J$.W(577, 'value', J$.M(569, J$.R(553, 'value', value, 0), 'slice', 0)(J$.T(561, 1, 22, false)), value, 0));
                            }
                            if (J$.X1(2257, J$.C(72, J$.B(98, '===', J$.R(593, 'value', value, 0), J$.T(601, '.inf', 21, false), 0)))) {
                                return J$.X1(665, J$.Rt(657, J$.X1(2201, J$.C(48, J$.B(106, '===', J$.R(609, 'sign', sign, 0), J$.T(617, 1, 22, false), 0))) ? J$.G(633, J$.R(625, 'Number', Number, 2), 'POSITIVE_INFINITY', 0) : J$.G(649, J$.R(641, 'Number', Number, 2), 'NEGATIVE_INFINITY', 0)));
                            } else if (J$.X1(2249, J$.C(64, J$.B(114, '===', J$.R(673, 'value', value, 0), J$.T(681, '.nan', 21, false), 0)))) {
                                return J$.X1(705, J$.Rt(697, J$.T(689, NaN, 22, false)));
                            } else if (J$.X1(2241, J$.C(56, J$.B(122, '>=', J$.M(729, J$.R(713, 'value', value, 0), 'indexOf', 0)(J$.T(721, ':', 21, false)), J$.T(737, 0, 22, false), 0)))) {
                                J$.X1(865, J$.M(857, J$.M(761, J$.R(745, 'value', value, 0), 'split', 0)(J$.T(753, ':', 21, false)), 'forEach', 0)(J$.T(849, function (v) {
                                    jalangiLabel121:
                                        while (true) {
                                            try {
                                                J$.Fe(825, arguments.callee, this, arguments);
                                                arguments = J$.N(833, 'arguments', arguments, 4);
                                                v = J$.N(841, 'v', v, 4);
                                                J$.X1(817, J$.M(809, J$.R(769, 'digits', digits, 0), 'unshift', 0)(J$.F(801, J$.R(777, 'parseFloat', parseFloat, 2), 0)(J$.R(785, 'v', v, 0), J$.T(793, 10, 22, false))));
                                            } catch (J$e) {
                                                J$.Ex(2209, J$e);
                                            } finally {
                                                if (J$.Fr(2217))
                                                    continue jalangiLabel121;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 825)));
                                J$.X1(889, value = J$.W(881, 'value', J$.T(873, 0.0, 22, false), value, 0));
                                J$.X1(913, base = J$.W(905, 'base', J$.T(897, 1, 22, false), base, 0));
                                J$.X1(1041, J$.M(1033, J$.R(921, 'digits', digits, 0), 'forEach', 0)(J$.T(1025, function (d) {
                                    jalangiLabel122:
                                        while (true) {
                                            try {
                                                J$.Fe(1001, arguments.callee, this, arguments);
                                                arguments = J$.N(1009, 'arguments', arguments, 4);
                                                d = J$.N(1017, 'd', d, 4);
                                                J$.X1(961, value = J$.W(953, 'value', J$.B(138, '+', J$.R(945, 'value', value, 0), J$.B(130, '*', J$.R(929, 'd', d, 0), J$.R(937, 'base', base, 0), 0), 0), value, 0));
                                                J$.X1(993, base = J$.W(985, 'base', J$.B(146, '*', J$.R(977, 'base', base, 0), J$.T(969, 60, 22, false), 0), base, 0));
                                            } catch (J$e) {
                                                J$.Ex(2225, J$e);
                                            } finally {
                                                if (J$.Fr(2233))
                                                    continue jalangiLabel122;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1001)));
                                return J$.X1(1073, J$.Rt(1065, J$.B(154, '*', J$.R(1049, 'sign', sign, 0), J$.R(1057, 'value', value, 0), 0)));
                            }
                            return J$.X1(1129, J$.Rt(1121, J$.B(162, '*', J$.R(1081, 'sign', sign, 0), J$.F(1113, J$.R(1089, 'parseFloat', parseFloat, 2), 0)(J$.R(1097, 'value', value, 0), J$.T(1105, 10, 22, false)), 0)));
                        } catch (J$e) {
                            J$.Ex(2265, J$e);
                        } finally {
                            if (J$.Fr(2273))
                                continue jalangiLabel123;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function representYamlFloat(object, style) {
                jalangiLabel124:
                    while (true) {
                        try {
                            J$.Fe(1769, arguments.callee, this, arguments);
                            arguments = J$.N(1777, 'arguments', arguments, 4);
                            object = J$.N(1785, 'object', object, 4);
                            style = J$.N(1793, 'style', style, 4);
                            J$.N(1801, 'res', res, 0);
                            var res;
                            if (J$.X1(2401, J$.C(200, J$.F(1233, J$.R(1217, 'isNaN', isNaN, 2), 0)(J$.R(1225, 'object', object, 0))))) {
                                switch (J$.X1(2281, J$.C1(80, J$.R(1241, 'style', style, 0)))) {
                                case J$.X1(2289, J$.C2(88, J$.T(1273, 'lowercase', 21, false))):
                                    return J$.X1(1265, J$.Rt(1257, J$.T(1249, '.nan', 21, false)));
                                case J$.X1(2297, J$.C2(96, J$.T(1305, 'uppercase', 21, false))):
                                    return J$.X1(1297, J$.Rt(1289, J$.T(1281, '.NAN', 21, false)));
                                case J$.X1(2305, J$.C2(104, J$.T(1337, 'camelcase', 21, false))):
                                    return J$.X1(1329, J$.Rt(1321, J$.T(1313, '.NaN', 21, false)));
                                }
                            } else if (J$.X1(2393, J$.C(192, J$.B(170, '===', J$.G(1353, J$.R(1345, 'Number', Number, 2), 'POSITIVE_INFINITY', 0), J$.R(1361, 'object', object, 0), 0)))) {
                                switch (J$.X1(2313, J$.C1(112, J$.R(1369, 'style', style, 0)))) {
                                case J$.X1(2321, J$.C2(120, J$.T(1401, 'lowercase', 21, false))):
                                    return J$.X1(1393, J$.Rt(1385, J$.T(1377, '.inf', 21, false)));
                                case J$.X1(2329, J$.C2(128, J$.T(1433, 'uppercase', 21, false))):
                                    return J$.X1(1425, J$.Rt(1417, J$.T(1409, '.INF', 21, false)));
                                case J$.X1(2337, J$.C2(136, J$.T(1465, 'camelcase', 21, false))):
                                    return J$.X1(1457, J$.Rt(1449, J$.T(1441, '.Inf', 21, false)));
                                }
                            } else if (J$.X1(2385, J$.C(184, J$.B(178, '===', J$.G(1481, J$.R(1473, 'Number', Number, 2), 'NEGATIVE_INFINITY', 0), J$.R(1489, 'object', object, 0), 0)))) {
                                switch (J$.X1(2345, J$.C1(144, J$.R(1497, 'style', style, 0)))) {
                                case J$.X1(2353, J$.C2(152, J$.T(1529, 'lowercase', 21, false))):
                                    return J$.X1(1521, J$.Rt(1513, J$.T(1505, '-.inf', 21, false)));
                                case J$.X1(2361, J$.C2(160, J$.T(1561, 'uppercase', 21, false))):
                                    return J$.X1(1553, J$.Rt(1545, J$.T(1537, '-.INF', 21, false)));
                                case J$.X1(2369, J$.C2(168, J$.T(1593, 'camelcase', 21, false))):
                                    return J$.X1(1585, J$.Rt(1577, J$.T(1569, '-.Inf', 21, false)));
                                }
                            } else if (J$.X1(2377, J$.C(176, J$.M(1617, J$.R(1601, 'common', common, 1), 'isNegativeZero', 0)(J$.R(1609, 'object', object, 0))))) {
                                return J$.X1(1641, J$.Rt(1633, J$.T(1625, '-0.0', 21, false)));
                            }
                            J$.X1(1681, res = J$.W(1673, 'res', J$.M(1665, J$.R(1649, 'object', object, 0), 'toString', 0)(J$.T(1657, 10, 22, false)), res, 0));
                            return J$.X1(1761, J$.Rt(1753, J$.X1(2409, J$.C(208, J$.M(1705, J$.R(1689, 'SCIENTIFIC_WITHOUT_DOT', SCIENTIFIC_WITHOUT_DOT, 1), 'test', 0)(J$.R(1697, 'res', res, 0)))) ? J$.M(1737, J$.R(1713, 'res', res, 0), 'replace', 0)(J$.T(1721, 'e', 21, false), J$.T(1729, '.e', 21, false)) : J$.R(1745, 'res', res, 0)));
                        } catch (J$e) {
                            J$.Ex(2417, J$e);
                        } finally {
                            if (J$.Fr(2425))
                                continue jalangiLabel124;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isFloat(object) {
                jalangiLabel125:
                    while (true) {
                        try {
                            J$.Fe(1921, arguments.callee, this, arguments);
                            arguments = J$.N(1929, 'arguments', arguments, 4);
                            object = J$.N(1937, 'object', object, 4);
                            return J$.X1(1913, J$.Rt(1905, J$.C(224, J$.B(186, '===', J$.M(1841, J$.G(1825, J$.G(1817, J$.R(1809, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.R(1833, 'object', object, 0)), J$.T(1849, '[object Number]', 21, false), 0)) ? J$.C(216, J$.B(202, '!==', J$.B(194, '%', J$.R(1857, 'object', object, 0), J$.T(1865, 1, 22, false), 0), J$.T(1873, 0, 22, false), 0)) ? J$._() : J$.M(1897, J$.R(1881, 'common', common, 1), 'isNegativeZero', 0)(J$.R(1889, 'object', object, 0)) : J$._()));
                        } catch (J$e) {
                            J$.Ex(2433, J$e);
                        } finally {
                            if (J$.Fr(2441))
                                continue jalangiLabel125;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2057, 'common', common, 0);
            J$.N(2065, 'Type', Type, 0);
            J$.N(2073, 'YAML_FLOAT_PATTERN', YAML_FLOAT_PATTERN, 0);
            resolveYamlFloat = J$.N(2089, 'resolveYamlFloat', J$.T(2081, resolveYamlFloat, 12, false, 337), 0);
            constructYamlFloat = J$.N(2105, 'constructYamlFloat', J$.T(2097, constructYamlFloat, 12, false, 1137), 0);
            J$.N(2113, 'SCIENTIFIC_WITHOUT_DOT', SCIENTIFIC_WITHOUT_DOT, 0);
            representYamlFloat = J$.N(2129, 'representYamlFloat', J$.T(2121, representYamlFloat, 12, false, 1769), 0);
            isFloat = J$.N(2145, 'isFloat', J$.T(2137, isFloat, 12, false, 1921), 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var common = J$.X1(57, J$.W(49, 'common', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../common', 21, false)), common, 3));
            var Type = J$.X1(97, J$.W(89, 'Type', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../type', 21, false)), Type, 3));
            var YAML_FLOAT_PATTERN = J$.X1(169, J$.W(161, 'YAML_FLOAT_PATTERN', J$.F(153, J$.R(105, 'RegExp', RegExp, 2), 1)(J$.B(34, '+', J$.B(26, '+', J$.B(18, '+', J$.B(10, '+', J$.T(113, '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?', 21, false), J$.T(121, '|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?', 21, false), 0), J$.T(129, '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*', 21, false), 0), J$.T(137, '|[-+]?\\.(?:inf|Inf|INF)', 21, false), 0), J$.T(145, '|\\.(?:nan|NaN|NAN))$', 21, false), 0)), YAML_FLOAT_PATTERN, 3));
            var SCIENTIFIC_WITHOUT_DOT = J$.X1(1209, J$.W(1201, 'SCIENTIFIC_WITHOUT_DOT', J$.T(1193, /^[-+]?[0-9]+e/, 14, false), SCIENTIFIC_WITHOUT_DOT, 3));
            J$.X1(2041, J$.P(2033, J$.R(1945, 'module', module, 2), 'exports', J$.F(2025, J$.R(1953, 'Type', Type, 1), 1)(J$.T(1961, 'tag:yaml.org,2002:float', 21, false), J$.T(2017, {
                kind: J$.T(1969, 'scalar', 21, false),
                resolve: J$.R(1977, 'resolveYamlFloat', resolveYamlFloat, 1),
                construct: J$.R(1985, 'constructYamlFloat', constructYamlFloat, 1),
                predicate: J$.R(1993, 'isFloat', isFloat, 1),
                represent: J$.R(2001, 'representYamlFloat', representYamlFloat, 1),
                defaultStyle: J$.T(2009, 'lowercase', 21, false)
            }, 11, false)), 0));
        } catch (J$e) {
            J$.Ex(2449, J$e);
        } finally {
            if (J$.Sr(2457)) {
                J$.L();
                continue jalangiLabel126;
            } else {
                J$.L();
                break jalangiLabel126;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
