J$.iids = {"8":[19,7,19,20],"9":[2,14,2,21],"10":[7,1,10,34],"16":[21,7,24,32],"17":[2,22,2,33],"18":[7,1,12,48],"24":[21,7,24,32],"25":[2,14,2,34],"26":[7,1,14,27],"32":[35,10,35,26],"33":[2,14,2,34],"34":[7,1,16,24],"40":[38,7,38,34],"41":[2,14,2,34],"42":[19,7,19,20],"48":[43,12,43,22],"49":[3,12,3,19],"50":[21,7,21,37],"56":[48,14,48,37],"57":[3,20,3,29],"58":[24,8,24,23],"64":[45,14,45,30],"65":[3,12,3,30],"66":[24,3,24,32],"72":[42,7,42,23],"73":[3,12,3,30],"74":[35,10,35,26],"80":[74,13,74,18],"81":[3,12,3,30],"82":[35,29,35,31],"88":[75,12,75,23],"89":[5,30,5,36],"90":[38,7,38,34],"96":[76,12,76,23],"97":[7,1,7,65],"98":[42,7,42,23],"104":[77,12,77,23],"105":[10,1,10,34],"106":[43,12,43,22],"112":[80,13,80,18],"113":[12,1,12,48],"114":[45,14,45,30],"120":[81,12,81,23],"121":[14,1,14,27],"122":[48,14,48,37],"128":[82,12,82,23],"129":[16,1,16,24],"130":[57,16,57,24],"136":[83,12,83,23],"137":[5,26,16,25],"138":[57,16,57,24],"144":[86,13,86,18],"145":[5,26,16,25],"146":[58,15,58,17],"152":[87,12,87,23],"153":[5,26,16,25],"154":[61,12,61,24],"160":[88,12,88,23],"161":[19,7,19,11],"162":[64,10,64,38],"168":[89,12,89,23],"169":[19,16,19,20],"170":[79,14,79,49],"176":[91,14,91,43],"177":[19,29,19,34],"178":[85,14,85,49],"184":[85,14,85,49],"185":[19,29,19,34],"186":[104,10,104,70],"192":[79,14,79,49],"193":[19,22,19,35],"194":[105,3,105,13],"200":[73,7,73,20],"201":[21,8,21,26],"202":[105,3,105,19],"208":[100,10,100,42],"209":[21,32,21,36],"216":[105,3,105,52],"217":[21,8,21,37],"219":[21,8,21,31],"224":[104,10,105,53],"225":[24,3,24,7],"233":[24,8,24,12],"241":[24,8,24,19],"249":[24,22,24,23],"257":[24,3,24,24],"265":[24,29,24,32],"273":[25,12,25,17],"281":[25,12,25,17],"289":[25,5,25,18],"297":[28,10,28,14],"305":[28,10,28,14],"313":[28,3,28,15],"321":[18,1,29,2],"329":[18,1,29,2],"337":[18,1,29,2],"345":[34,11,34,15],"353":[34,24,34,28],"361":[34,30,34,32],"369":[34,11,34,33],"371":[34,11,34,23],"377":[34,11,34,47],"379":[34,11,34,45],"385":[34,11,34,47],"393":[34,3,34,48],"401":[35,10,35,15],"409":[35,16,35,17],"417":[35,10,35,18],"425":[35,23,35,26],"433":[35,30,35,31],"441":[35,34,35,35],"449":[35,10,35,35],"457":[35,3,35,36],"465":[36,12,36,14],"473":[36,12,36,14],"481":[36,3,36,15],"489":[38,7,38,11],"497":[38,20,38,25],"505":[38,26,38,27],"513":[38,20,38,28],"521":[38,7,38,29],"523":[38,7,38,19],"529":[38,33,38,34],"537":[39,13,39,18],"545":[39,25,39,26],"553":[39,13,39,27],"555":[39,13,39,24],"561":[39,13,39,27],"569":[39,5,39,28],"577":[42,7,42,12],"585":[42,17,42,23],"593":[43,12,43,16],"601":[43,21,43,22],"609":[43,25,43,31],"617":[43,25,43,49],"625":[43,52,43,58],"633":[43,52,43,76],"641":[43,12,43,76],"649":[43,5,43,77],"657":[45,14,45,19],"665":[45,24,45,30],"673":[46,12,46,15],"681":[46,12,46,15],"689":[46,5,46,16],"697":[48,14,48,19],"705":[48,28,48,31],"713":[48,14,48,32],"715":[48,14,48,27],"721":[48,36,48,37],"729":[49,5,49,10],"737":[49,17,49,20],"745":[49,5,49,21],"747":[49,5,49,16],"753":[50,7,50,13],"761":[50,22,50,32],"769":[50,33,50,34],"777":[50,36,50,38],"785":[50,22,50,39],"793":[50,7,50,40],"795":[50,7,50,21],"801":[50,7,50,41],"809":[49,30,51,6],"817":[49,30,51,6],"825":[49,30,51,6],"833":[49,30,51,6],"841":[49,5,51,7],"843":[49,5,49,29],"849":[49,5,51,8],"857":[53,13,53,16],"865":[53,13,53,16],"873":[53,5,53,17],"881":[54,12,54,13],"889":[54,12,54,13],"897":[54,5,54,14],"905":[56,5,56,11],"913":[57,16,57,17],"921":[57,20,57,24],"929":[57,7,57,12],"937":[57,7,57,24],"945":[57,7,57,25],"953":[58,15,58,17],"961":[58,7,58,11],"969":[58,7,58,17],"977":[58,7,58,18],"985":[56,20,59,6],"993":[56,20,59,6],"1001":[56,20,59,6],"1009":[56,20,59,6],"1017":[56,5,59,7],"1019":[56,5,56,19],"1025":[56,5,59,8],"1033":[61,12,61,16],"1041":[61,19,61,24],"1049":[61,12,61,24],"1057":[61,5,61,25],"1065":[64,10,64,14],"1073":[64,17,64,27],"1081":[64,28,64,33],"1089":[64,35,64,37],"1097":[64,17,64,38],"1105":[64,10,64,38],"1113":[64,3,64,39],"1121":[31,1,65,2],"1129":[31,1,65,2],"1137":[31,1,65,2],"1145":[31,1,65,2],"1153":[31,1,65,2],"1161":[31,1,65,2],"1169":[31,1,65,2],"1177":[68,30,68,45],"1185":[68,30,68,45],"1193":[68,30,68,45],"1201":[73,7,73,12],"1209":[73,13,73,19],"1217":[73,7,73,20],"1225":[74,13,74,18],"1233":[75,31,75,37],"1241":[75,31,75,37],"1249":[75,24,75,38],"1257":[75,12,75,23],"1265":[76,31,76,37],"1273":[76,31,76,37],"1281":[76,24,76,38],"1289":[76,12,76,23],"1297":[77,31,77,37],"1305":[77,31,77,37],"1313":[77,24,77,38],"1321":[77,12,77,23],"1329":[79,14,79,20],"1337":[79,14,79,38],"1345":[79,43,79,49],"1353":[80,13,80,18],"1361":[81,31,81,37],"1369":[81,31,81,37],"1377":[81,24,81,38],"1385":[81,12,81,23],"1393":[82,31,82,37],"1401":[82,31,82,37],"1409":[82,24,82,38],"1417":[82,12,82,23],"1425":[83,31,83,37],"1433":[83,31,83,37],"1441":[83,24,83,38],"1449":[83,12,83,23],"1457":[85,14,85,20],"1465":[85,14,85,38],"1473":[85,43,85,49],"1481":[86,13,86,18],"1489":[87,31,87,38],"1497":[87,31,87,38],"1505":[87,24,87,39],"1513":[87,12,87,23],"1521":[88,31,88,38],"1529":[88,31,88,38],"1537":[88,24,88,39],"1545":[88,12,88,23],"1553":[89,31,89,38],"1561":[89,31,89,38],"1569":[89,24,89,39],"1577":[89,12,89,23],"1585":[91,14,91,20],"1593":[91,36,91,42],"1601":[91,14,91,43],"1603":[91,14,91,35],"1609":[92,12,92,18],"1617":[92,12,92,18],"1625":[92,5,92,19],"1633":[95,9,95,15],"1641":[95,25,95,27],"1649":[95,9,95,28],"1651":[95,9,95,24],"1657":[95,9,95,28],"1665":[95,3,95,29],"1673":[100,10,100,32],"1681":[100,38,100,41],"1689":[100,10,100,42],"1691":[100,10,100,37],"1697":[100,45,100,48],"1705":[100,57,100,60],"1713":[100,62,100,66],"1721":[100,45,100,67],"1723":[100,45,100,56],"1729":[100,70,100,73],"1737":[100,10,100,73],"1745":[100,3,100,74],"1753":[70,1,101,2],"1761":[70,1,101,2],"1769":[70,1,101,2],"1777":[70,1,101,2],"1785":[70,1,101,2],"1793":[104,10,104,16],"1801":[104,10,104,26],"1809":[104,10,104,35],"1817":[104,41,104,47],"1825":[104,10,104,48],"1827":[104,10,104,40],"1833":[104,53,104,70],"1841":[105,3,105,9],"1849":[105,12,105,13],"1857":[105,18,105,19],"1865":[105,23,105,29],"1873":[105,45,105,51],"1881":[105,23,105,52],"1883":[105,23,105,44],"1889":[104,10,105,53],"1897":[104,3,105,54],"1905":[103,1,106,2],"1913":[103,1,106,2],"1921":[103,1,106,2],"1929":[108,1,108,7],"1937":[108,22,108,26],"1945":[108,27,108,52],"1953":[109,9,109,17],"1961":[110,12,110,28],"1969":[111,14,111,32],"1977":[112,14,112,21],"1985":[113,14,113,32],"1993":[114,17,114,28],"2001":[108,54,114,30],"2009":[108,18,114,31],"2017":[108,1,114,31],"2025":[108,1,114,32],"2033":[1,1,114,32],"2041":[1,1,114,32],"2049":[1,1,114,32],"2057":[1,1,114,32],"2065":[18,1,29,2],"2073":[1,1,114,32],"2081":[31,1,65,2],"2089":[1,1,114,32],"2097":[1,1,114,32],"2105":[70,1,101,2],"2113":[1,1,114,32],"2121":[103,1,106,2],"2129":[1,1,114,32],"2137":[19,3,19,35],"2145":[21,3,26,4],"2153":[18,1,29,2],"2161":[18,1,29,2],"2169":[35,10,35,35],"2177":[38,3,40,4],"2185":[43,12,43,76],"2193":[49,30,51,6],"2201":[49,30,51,6],"2209":[56,20,59,6],"2217":[56,20,59,6],"2225":[48,10,63,4],"2233":[45,10,63,4],"2241":[42,3,63,4],"2249":[31,1,65,2],"2257":[31,1,65,2],"2265":[74,13,74,18],"2273":[75,12,75,23],"2281":[76,12,76,23],"2289":[77,12,77,23],"2297":[80,13,80,18],"2305":[81,12,81,23],"2313":[82,12,82,23],"2321":[83,12,83,23],"2329":[86,13,86,18],"2337":[87,12,87,23],"2345":[88,12,88,23],"2353":[89,12,89,23],"2361":[91,10,93,4],"2369":[85,10,93,4],"2377":[79,10,93,4],"2385":[73,3,93,4],"2393":[100,10,100,73],"2401":[70,1,101,2],"2409":[70,1,101,2],"2417":[103,1,106,2],"2425":[103,1,106,2],"2433":[1,1,114,32],"2441":[1,1,114,32],"nBranches":56,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/float.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/float_jalangi_.js","code":"'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n"};
jalangiLabel130:
    while (true) {
        try {
            J$.Se(2033, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/float_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/float.js');
            function resolveYamlFloat(data) {
                jalangiLabel124:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            data = J$.N(337, 'data', data, 4);
                            if (J$.X1(2137, J$.C(8, J$.B(42, '===', J$.R(161, 'data', data, 0), J$.T(169, null, 25, false), 0))))
                                return J$.X1(193, J$.Rt(185, J$.T(177, false, 23, false)));
                            if (J$.X1(2145, J$.C(24, J$.C(16, J$.U(50, '!', J$.M(217, J$.R(201, 'YAML_FLOAT_PATTERN', YAML_FLOAT_PATTERN, 1), 'test', 0)(J$.R(209, 'data', data, 0)))) ? J$._() : J$.B(66, '===', J$.G(257, J$.R(225, 'data', data, 0), J$.B(58, '-', J$.G(241, J$.R(233, 'data', data, 0), 'length', 0), J$.T(249, 1, 22, false), 0), 4), J$.T(265, '_', 21, false), 0)))) {
                                return J$.X1(289, J$.Rt(281, J$.T(273, false, 23, false)));
                            }
                            return J$.X1(313, J$.Rt(305, J$.T(297, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(2153, J$e);
                        } finally {
                            if (J$.Fr(2161))
                                continue jalangiLabel124;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlFloat(data) {
                jalangiLabel127:
                    while (true) {
                        try {
                            J$.Fe(1121, arguments.callee, this, arguments);
                            arguments = J$.N(1129, 'arguments', arguments, 4);
                            data = J$.N(1137, 'data', data, 4);
                            J$.N(1145, 'value', value, 0);
                            J$.N(1153, 'sign', sign, 0);
                            J$.N(1161, 'base', base, 0);
                            J$.N(1169, 'digits', digits, 0);
                            var value, sign, base, digits;
                            J$.X1(393, value = J$.W(385, 'value', J$.M(377, J$.M(369, J$.R(345, 'data', data, 0), 'replace', 0)(J$.T(353, /_/g, 14, false), J$.T(361, '', 21, false)), 'toLowerCase', 0)(), value, 0));
                            J$.X1(457, sign = J$.W(449, 'sign', J$.X1(2169, J$.C(32, J$.B(74, '===', J$.G(417, J$.R(401, 'value', value, 0), J$.T(409, 0, 22, false), 4), J$.T(425, '-', 21, false), 0))) ? J$.U(82, '-', J$.T(433, 1, 22, false)) : J$.T(441, 1, 22, false), sign, 0));
                            J$.X1(481, digits = J$.W(473, 'digits', J$.T(465, [], 10, false), digits, 0));
                            if (J$.X1(2177, J$.C(40, J$.B(90, '>=', J$.M(521, J$.T(489, '+-', 21, false), 'indexOf', 0)(J$.G(513, J$.R(497, 'value', value, 0), J$.T(505, 0, 22, false), 4)), J$.T(529, 0, 22, false), 0)))) {
                                J$.X1(569, value = J$.W(561, 'value', J$.M(553, J$.R(537, 'value', value, 0), 'slice', 0)(J$.T(545, 1, 22, false)), value, 0));
                            }
                            if (J$.X1(2241, J$.C(72, J$.B(98, '===', J$.R(577, 'value', value, 0), J$.T(585, '.inf', 21, false), 0)))) {
                                return J$.X1(649, J$.Rt(641, J$.X1(2185, J$.C(48, J$.B(106, '===', J$.R(593, 'sign', sign, 0), J$.T(601, 1, 22, false), 0))) ? J$.G(617, J$.R(609, 'Number', Number, 2), 'POSITIVE_INFINITY', 0) : J$.G(633, J$.R(625, 'Number', Number, 2), 'NEGATIVE_INFINITY', 0)));
                            } else if (J$.X1(2233, J$.C(64, J$.B(114, '===', J$.R(657, 'value', value, 0), J$.T(665, '.nan', 21, false), 0)))) {
                                return J$.X1(689, J$.Rt(681, J$.T(673, NaN, 22, false)));
                            } else if (J$.X1(2225, J$.C(56, J$.B(122, '>=', J$.M(713, J$.R(697, 'value', value, 0), 'indexOf', 0)(J$.T(705, ':', 21, false)), J$.T(721, 0, 22, false), 0)))) {
                                J$.X1(849, J$.M(841, J$.M(745, J$.R(729, 'value', value, 0), 'split', 0)(J$.T(737, ':', 21, false)), 'forEach', 0)(J$.T(833, function (v) {
                                    jalangiLabel125:
                                        while (true) {
                                            try {
                                                J$.Fe(809, arguments.callee, this, arguments);
                                                arguments = J$.N(817, 'arguments', arguments, 4);
                                                v = J$.N(825, 'v', v, 4);
                                                J$.X1(801, J$.M(793, J$.R(753, 'digits', digits, 0), 'unshift', 0)(J$.F(785, J$.R(761, 'parseFloat', parseFloat, 2), 0)(J$.R(769, 'v', v, 0), J$.T(777, 10, 22, false))));
                                            } catch (J$e) {
                                                J$.Ex(2193, J$e);
                                            } finally {
                                                if (J$.Fr(2201))
                                                    continue jalangiLabel125;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 809)));
                                J$.X1(873, value = J$.W(865, 'value', J$.T(857, 0.0, 22, false), value, 0));
                                J$.X1(897, base = J$.W(889, 'base', J$.T(881, 1, 22, false), base, 0));
                                J$.X1(1025, J$.M(1017, J$.R(905, 'digits', digits, 0), 'forEach', 0)(J$.T(1009, function (d) {
                                    jalangiLabel126:
                                        while (true) {
                                            try {
                                                J$.Fe(985, arguments.callee, this, arguments);
                                                arguments = J$.N(993, 'arguments', arguments, 4);
                                                d = J$.N(1001, 'd', d, 4);
                                                J$.X1(945, value = J$.W(937, 'value', J$.B(138, '+', J$.R(929, 'value', value, 0), J$.B(130, '*', J$.R(913, 'd', d, 0), J$.R(921, 'base', base, 0), 0), 0), value, 0));
                                                J$.X1(977, base = J$.W(969, 'base', J$.B(146, '*', J$.R(961, 'base', base, 0), J$.T(953, 60, 22, false), 0), base, 0));
                                            } catch (J$e) {
                                                J$.Ex(2209, J$e);
                                            } finally {
                                                if (J$.Fr(2217))
                                                    continue jalangiLabel126;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 985)));
                                return J$.X1(1057, J$.Rt(1049, J$.B(154, '*', J$.R(1033, 'sign', sign, 0), J$.R(1041, 'value', value, 0), 0)));
                            }
                            return J$.X1(1113, J$.Rt(1105, J$.B(162, '*', J$.R(1065, 'sign', sign, 0), J$.F(1097, J$.R(1073, 'parseFloat', parseFloat, 2), 0)(J$.R(1081, 'value', value, 0), J$.T(1089, 10, 22, false)), 0)));
                        } catch (J$e) {
                            J$.Ex(2249, J$e);
                        } finally {
                            if (J$.Fr(2257))
                                continue jalangiLabel127;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function representYamlFloat(object, style) {
                jalangiLabel128:
                    while (true) {
                        try {
                            J$.Fe(1753, arguments.callee, this, arguments);
                            arguments = J$.N(1761, 'arguments', arguments, 4);
                            object = J$.N(1769, 'object', object, 4);
                            style = J$.N(1777, 'style', style, 4);
                            J$.N(1785, 'res', res, 0);
                            var res;
                            if (J$.X1(2385, J$.C(200, J$.F(1217, J$.R(1201, 'isNaN', isNaN, 2), 0)(J$.R(1209, 'object', object, 0))))) {
                                switch (J$.X1(2265, J$.C1(80, J$.R(1225, 'style', style, 0)))) {
                                case J$.X1(2273, J$.C2(88, J$.T(1257, 'lowercase', 21, false))):
                                    return J$.X1(1249, J$.Rt(1241, J$.T(1233, '.nan', 21, false)));
                                case J$.X1(2281, J$.C2(96, J$.T(1289, 'uppercase', 21, false))):
                                    return J$.X1(1281, J$.Rt(1273, J$.T(1265, '.NAN', 21, false)));
                                case J$.X1(2289, J$.C2(104, J$.T(1321, 'camelcase', 21, false))):
                                    return J$.X1(1313, J$.Rt(1305, J$.T(1297, '.NaN', 21, false)));
                                }
                            } else if (J$.X1(2377, J$.C(192, J$.B(170, '===', J$.G(1337, J$.R(1329, 'Number', Number, 2), 'POSITIVE_INFINITY', 0), J$.R(1345, 'object', object, 0), 0)))) {
                                switch (J$.X1(2297, J$.C1(112, J$.R(1353, 'style', style, 0)))) {
                                case J$.X1(2305, J$.C2(120, J$.T(1385, 'lowercase', 21, false))):
                                    return J$.X1(1377, J$.Rt(1369, J$.T(1361, '.inf', 21, false)));
                                case J$.X1(2313, J$.C2(128, J$.T(1417, 'uppercase', 21, false))):
                                    return J$.X1(1409, J$.Rt(1401, J$.T(1393, '.INF', 21, false)));
                                case J$.X1(2321, J$.C2(136, J$.T(1449, 'camelcase', 21, false))):
                                    return J$.X1(1441, J$.Rt(1433, J$.T(1425, '.Inf', 21, false)));
                                }
                            } else if (J$.X1(2369, J$.C(184, J$.B(178, '===', J$.G(1465, J$.R(1457, 'Number', Number, 2), 'NEGATIVE_INFINITY', 0), J$.R(1473, 'object', object, 0), 0)))) {
                                switch (J$.X1(2329, J$.C1(144, J$.R(1481, 'style', style, 0)))) {
                                case J$.X1(2337, J$.C2(152, J$.T(1513, 'lowercase', 21, false))):
                                    return J$.X1(1505, J$.Rt(1497, J$.T(1489, '-.inf', 21, false)));
                                case J$.X1(2345, J$.C2(160, J$.T(1545, 'uppercase', 21, false))):
                                    return J$.X1(1537, J$.Rt(1529, J$.T(1521, '-.INF', 21, false)));
                                case J$.X1(2353, J$.C2(168, J$.T(1577, 'camelcase', 21, false))):
                                    return J$.X1(1569, J$.Rt(1561, J$.T(1553, '-.Inf', 21, false)));
                                }
                            } else if (J$.X1(2361, J$.C(176, J$.M(1601, J$.R(1585, 'common', common, 1), 'isNegativeZero', 0)(J$.R(1593, 'object', object, 0))))) {
                                return J$.X1(1625, J$.Rt(1617, J$.T(1609, '-0.0', 21, false)));
                            }
                            J$.X1(1665, res = J$.W(1657, 'res', J$.M(1649, J$.R(1633, 'object', object, 0), 'toString', 0)(J$.T(1641, 10, 22, false)), res, 0));
                            return J$.X1(1745, J$.Rt(1737, J$.X1(2393, J$.C(208, J$.M(1689, J$.R(1673, 'SCIENTIFIC_WITHOUT_DOT', SCIENTIFIC_WITHOUT_DOT, 1), 'test', 0)(J$.R(1681, 'res', res, 0)))) ? J$.M(1721, J$.R(1697, 'res', res, 0), 'replace', 0)(J$.T(1705, 'e', 21, false), J$.T(1713, '.e', 21, false)) : J$.R(1729, 'res', res, 0)));
                        } catch (J$e) {
                            J$.Ex(2401, J$e);
                        } finally {
                            if (J$.Fr(2409))
                                continue jalangiLabel128;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isFloat(object) {
                jalangiLabel129:
                    while (true) {
                        try {
                            J$.Fe(1905, arguments.callee, this, arguments);
                            arguments = J$.N(1913, 'arguments', arguments, 4);
                            object = J$.N(1921, 'object', object, 4);
                            return J$.X1(1897, J$.Rt(1889, J$.C(224, J$.B(186, '===', J$.M(1825, J$.G(1809, J$.G(1801, J$.R(1793, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.R(1817, 'object', object, 0)), J$.T(1833, '[object Number]', 21, false), 0)) ? J$.C(216, J$.B(202, '!==', J$.B(194, '%', J$.R(1841, 'object', object, 0), J$.T(1849, 1, 22, false), 0), J$.T(1857, 0, 22, false), 0)) ? J$._() : J$.M(1881, J$.R(1865, 'common', common, 1), 'isNegativeZero', 0)(J$.R(1873, 'object', object, 0)) : J$._()));
                        } catch (J$e) {
                            J$.Ex(2417, J$e);
                        } finally {
                            if (J$.Fr(2425))
                                continue jalangiLabel129;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2041, 'common', common, 0);
            J$.N(2049, 'Type', Type, 0);
            J$.N(2057, 'YAML_FLOAT_PATTERN', YAML_FLOAT_PATTERN, 0);
            resolveYamlFloat = J$.N(2073, 'resolveYamlFloat', J$.T(2065, resolveYamlFloat, 12, false, 321), 0);
            constructYamlFloat = J$.N(2089, 'constructYamlFloat', J$.T(2081, constructYamlFloat, 12, false, 1121), 0);
            J$.N(2097, 'SCIENTIFIC_WITHOUT_DOT', SCIENTIFIC_WITHOUT_DOT, 0);
            representYamlFloat = J$.N(2113, 'representYamlFloat', J$.T(2105, representYamlFloat, 12, false, 1753), 0);
            isFloat = J$.N(2129, 'isFloat', J$.T(2121, isFloat, 12, false, 1905), 0);
            var common = J$.X1(41, J$.W(33, 'common', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../common', 21, false)), common, 3));
            var Type = J$.X1(81, J$.W(73, 'Type', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../type', 21, false)), Type, 3));
            var YAML_FLOAT_PATTERN = J$.X1(153, J$.W(145, 'YAML_FLOAT_PATTERN', J$.F(137, J$.R(89, 'RegExp', RegExp, 2), 1)(J$.B(34, '+', J$.B(26, '+', J$.B(18, '+', J$.B(10, '+', J$.T(97, '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?', 21, false), J$.T(105, '|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?', 21, false), 0), J$.T(113, '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*', 21, false), 0), J$.T(121, '|[-+]?\\.(?:inf|Inf|INF)', 21, false), 0), J$.T(129, '|\\.(?:nan|NaN|NAN))$', 21, false), 0)), YAML_FLOAT_PATTERN, 3));
            var SCIENTIFIC_WITHOUT_DOT = J$.X1(1193, J$.W(1185, 'SCIENTIFIC_WITHOUT_DOT', J$.T(1177, /^[-+]?[0-9]+e/, 14, false), SCIENTIFIC_WITHOUT_DOT, 3));
            J$.X1(2025, J$.P(2017, J$.R(1929, 'module', module, 2), 'exports', J$.F(2009, J$.R(1937, 'Type', Type, 1), 1)(J$.T(1945, 'tag:yaml.org,2002:float', 21, false), J$.T(2001, {
                kind: J$.T(1953, 'scalar', 21, false),
                resolve: J$.R(1961, 'resolveYamlFloat', resolveYamlFloat, 1),
                construct: J$.R(1969, 'constructYamlFloat', constructYamlFloat, 1),
                predicate: J$.R(1977, 'isFloat', isFloat, 1),
                represent: J$.R(1985, 'representYamlFloat', representYamlFloat, 1),
                defaultStyle: J$.T(1993, 'lowercase', 21, false)
            }, 11, false)), 0));
        } catch (J$e) {
            J$.Ex(2433, J$e);
        } finally {
            if (J$.Sr(2441)) {
                J$.L();
                continue jalangiLabel130;
            } else {
                J$.L();
                break jalangiLabel130;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
