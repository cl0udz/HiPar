{"9":[8,1,8,13],"17":[8,1,8,14],"25":[11,14,11,21],"33":[11,22,11,33],"41":[11,14,11,34],"49":[11,14,11,34],"57":[11,14,11,34],"65":[14,1,14,7],"73":[14,22,14,28],"81":[16,5,16,12],"89":[16,13,16,21],"97":[16,5,16,22],"105":[15,12,17,4],"113":[14,29,18,2],"121":[14,18,18,3],"129":[14,1,18,3],"137":[14,1,18,4],"145":[1,1,19,1],"153":[1,1,19,1],"161":[1,1,19,1],"169":[1,1,19,1],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/core.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/core_jalangi_.js","code":"// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n"}