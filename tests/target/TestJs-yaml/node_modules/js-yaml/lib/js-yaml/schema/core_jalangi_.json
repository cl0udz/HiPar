{"9":[10,14,10,21],"17":[10,22,10,33],"25":[10,14,10,34],"33":[10,14,10,34],"41":[10,14,10,34],"49":[13,1,13,7],"57":[13,22,13,28],"65":[15,3,15,10],"73":[15,11,15,19],"81":[15,3,15,20],"89":[14,12,15,21],"97":[13,29,15,23],"105":[13,18,15,24],"113":[13,1,15,24],"121":[13,1,15,25],"129":[1,1,15,25],"137":[1,1,15,25],"145":[1,1,15,25],"153":[1,1,15,25],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/core.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/core_jalangi_.js","code":"// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n"}