{"9":[11,14,11,21],"17":[11,22,11,33],"25":[11,14,11,34],"33":[11,14,11,34],"41":[11,14,11,34],"49":[14,1,14,7],"57":[14,22,14,28],"65":[16,3,16,10],"73":[16,11,16,23],"81":[16,3,16,24],"89":[15,12,16,25],"97":[19,3,19,10],"105":[19,11,19,25],"113":[19,3,19,26],"121":[20,3,20,10],"129":[20,11,20,25],"137":[20,3,20,26],"145":[21,3,21,10],"153":[21,11,21,24],"161":[21,3,21,25],"169":[22,3,22,10],"177":[22,11,22,26],"185":[22,3,22,27],"193":[18,13,22,28],"201":[14,29,22,30],"209":[14,18,22,31],"217":[14,1,22,31],"225":[14,1,22,32],"233":[1,1,22,32],"241":[1,1,22,32],"249":[1,1,22,32],"257":[1,1,22,32],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/json.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/json_jalangi_.js","code":"// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n"}