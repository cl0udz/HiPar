J$.iids = {"9":[12,14,12,21],"17":[12,22,12,33],"25":[12,14,12,34],"33":[12,14,12,34],"41":[12,14,12,34],"49":[15,1,15,7],"57":[15,18,15,24],"65":[15,39,15,45],"73":[17,3,17,10],"81":[17,11,17,27],"89":[17,3,17,28],"97":[16,12,17,29],"105":[20,3,20,10],"113":[20,11,20,33],"121":[20,3,20,34],"129":[21,3,21,10],"137":[21,11,21,30],"145":[21,3,21,31],"153":[22,3,22,10],"161":[22,11,22,32],"169":[22,3,22,33],"177":[19,13,22,34],"185":[15,46,22,36],"193":[15,35,22,37],"201":[15,18,22,37],"209":[15,1,22,37],"217":[15,1,22,38],"225":[1,1,22,38],"233":[1,1,22,38],"241":[1,1,22,38],"249":[1,1,22,38],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/default_full.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/default_full_jalangi_.js","code":"// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n"};
jalangiLabel151:
    while (true) {
        try {
            J$.Se(225, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/default_full_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/default_full.js');
            J$.N(233, 'Schema', Schema, 0);
            var Schema = J$.X1(41, J$.W(33, 'Schema', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../schema', 21, false)), Schema, 3));
            J$.X1(217, J$.P(209, J$.R(49, 'module', module, 2), 'exports', J$.P(201, J$.R(57, 'Schema', Schema, 1), 'DEFAULT', J$.F(193, J$.R(65, 'Schema', Schema, 1), 1)(J$.T(185, {
                include: J$.T(97, [J$.F(89, J$.R(73, 'require', require, 2), 0)(J$.T(81, './default_safe', 21, false))], 10, false),
                explicit: J$.T(177, [
                    J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../type/js/undefined', 21, false)),
                    J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../type/js/regexp', 21, false)),
                    J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, '../type/js/function', 21, false))
                ], 10, false)
            }, 11, false)), 0), 0));
        } catch (J$e) {
            J$.Ex(241, J$e);
        } finally {
            if (J$.Sr(249)) {
                J$.L();
                continue jalangiLabel151;
            } else {
                J$.L();
                break jalangiLabel151;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
