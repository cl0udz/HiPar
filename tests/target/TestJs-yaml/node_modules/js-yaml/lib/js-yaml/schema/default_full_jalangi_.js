J$.iids = {"9":[10,1,10,13],"17":[10,1,10,14],"25":[13,14,13,21],"33":[13,22,13,33],"41":[13,14,13,34],"49":[13,14,13,34],"57":[13,14,13,34],"65":[16,1,16,7],"73":[16,18,16,24],"81":[16,39,16,45],"89":[18,5,18,12],"97":[18,13,18,29],"105":[18,5,18,30],"113":[17,12,19,4],"121":[21,5,21,12],"129":[21,13,21,35],"137":[21,5,21,36],"145":[22,5,22,12],"153":[22,13,22,32],"161":[22,5,22,33],"169":[23,5,23,12],"177":[23,13,23,34],"185":[23,5,23,35],"193":[20,13,24,4],"201":[16,46,25,2],"209":[16,35,25,3],"217":[16,18,25,3],"225":[16,1,25,3],"233":[16,1,25,4],"241":[1,1,26,1],"249":[1,1,26,1],"257":[1,1,26,1],"265":[1,1,26,1],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/default_full.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/default_full_jalangi_.js","code":"// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n"};
jalangiLabel147:
    while (true) {
        try {
            J$.Se(241, '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/default_full_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/schema/default_full.js');
            J$.N(249, 'Schema', Schema, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var Schema = J$.X1(57, J$.W(49, 'Schema', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../schema', 21, false)), Schema, 3));
            J$.X1(233, J$.P(225, J$.R(65, 'module', module, 2), 'exports', J$.P(217, J$.R(73, 'Schema', Schema, 1), 'DEFAULT', J$.F(209, J$.R(81, 'Schema', Schema, 1), 1)(J$.T(201, {
                include: J$.T(113, [J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, './default_safe', 21, false))], 10, false),
                explicit: J$.T(193, [
                    J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, '../type/js/undefined', 21, false)),
                    J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../type/js/regexp', 21, false)),
                    J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, '../type/js/function', 21, false))
                ], 10, false)
            }, 11, false)), 0), 0));
        } catch (J$e) {
            J$.Ex(257, J$e);
        } finally {
            if (J$.Sr(265)) {
                J$.L();
                continue jalangiLabel147;
            } else {
                J$.L();
                break jalangiLabel147;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
