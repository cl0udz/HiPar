'use strict'; // classic singleton yargs API, to use yargs
// without running as a singleton do:
// require('yargs/yargs')(process.argv.slice(2))

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.function.bind");

require("core-js/modules/es.object.define-getter");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.lookup-getter");

require("core-js/modules/web.dom-collections.for-each");

var yargs = require('./yargs');

Argv(process.argv.slice(2));
module.exports = Argv;

function Argv(processArgs, cwd) {
  var argv = yargs(processArgs, cwd, require);
  singletonify(argv);
  return argv;
}
/*  Hack an instance of Argv with process.argv into Argv
    so people can do
    require('yargs')(['--beeble=1','-z','zizzle']).argv
    to parse a list of args and
    require('yargs').argv
    to get a parsed version of process.argv.
*/


function singletonify(inst) {
  Object.keys(inst).forEach(function (key) {
    if (key === 'argv') {
      Argv.__defineGetter__(key, inst.__lookupGetter__(key));
    } else if (typeof inst[key] === 'function') {
      Argv[key] = inst[key].bind(inst);
    } else {
      Argv.__defineGetter__('$0', function () {
        return inst.$0;
      });

      Argv.__defineGetter__('parsed', function () {
        return inst.parsed;
      });
    }
  });
}