"use strict";

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.define-properties");

require("core-js/modules/es.object.freeze");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.define-properties");

require("core-js/modules/es.object.freeze");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.define-properties");

require("core-js/modules/es.object.freeze");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.define-properties");

require("core-js/modules/es.object.freeze");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.define-properties");

require("core-js/modules/es.object.freeze");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.define-properties");

require("core-js/modules/es.object.freeze");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.define-properties");

require("core-js/modules/es.object.freeze");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n      \"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=function(e){return 2*e};\n      //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFyci5qcyJdLCJuYW1lcyI6WyJhIl0sIm1hcHBpbmdzIjoib0ZBQWUsU0FBQ0EsR0FBRCxPQUFXLEVBQUpBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgKGEpID0+IGEgKiAyXG4iXX0=\n    "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    exports.default = function (a) {\n      return a * 2;\n    };\n\n    //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFyci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBQWUsVUFBQyxDQUFEO0FBQUEsU0FBTyxJQUFJLENBQVg7QUFBQSxDIiwiZmlsZSI6InN0ZG91dCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IChhKSA9PiBhICogMlxuIl19\n  "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n    const fn = (...args) => {\n      return args.map(x => x ** 2)\n    }\n  "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    (function() {\n      syntax error;\n    })();\n  "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    global.value = (function a () {\n      var b = 2\n      function test () {\n        return 1 + b\n      }\n      return test()\n    }())\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}

var test = require('tape');

var minify = require('../');

var pump = require('pump');

var fromString = require('from2-string');

var concat = require('concat-stream');

var dedent = require('dedent');

test('Example Test', function (t) {
  t.plan(2);
  fromString(dedent(_templateObject())).pipe(minify()).pipe(concat({
    encoding: 'string'
  }, function (result) {
    t.ok(result);
    eval(result); // eslint-disable-line no-eval

    t.equal(global.value, 3);
    delete global.value;
  }));
});
test('emits errors', function (t) {
  t.plan(2);
  var src = dedent(_templateObject2());
  var stream = minify();
  stream.on('data', function () {});
  stream.on('error', function (err) {
    t.ok(err);
    t.ok(/Unexpected token: name/.test(err.message));
  });
  stream.end(src);
});
test('supports es2015 syntax', function (t) {
  t.plan(1);
  var src = dedent(_templateObject3());
  var stream = minify();
  stream.pipe(concat({
    encoding: 'string'
  }, done));
  stream.on('error', t.fail);
  stream.end(src);

  function done(result) {
    result = result.toString();
    t.notEqual(result, src);
  }
});
test('handles sourcemaps', function (t) {
  t.plan(1);
  var input = dedent(_templateObject4());
  pump(fromString(input), minify(), concat({
    encoding: 'string'
  }, done)).on('error', t.fail);

  function done(result) {
    var expected = dedent(_templateObject5());
    t.equal(result, expected);
  }
});