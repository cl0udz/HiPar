"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.map");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

var transform = require('../');

var result = transform("\nvar multiply = (a, b) => {\n  return a * b\n}\nvar add = (a, b) => a + b\n", function (node) {
  if (node.type === 'ArrowFunctionExpression') {
    var params = node.params.map(function (param) {
      return param.getSource();
    });

    if (node.body.type !== 'BlockStatement') {
      node.body.edit.update("{ return ".concat(node.body.getSource(), " }"));
    }

    node.edit.update("function (".concat(params.join(', '), ") ").concat(node.body.getSource()));
  }
});
console.log(result.toString() + '\n//# sourceMappingURL=' + result.generateMap({
  hires: true
}).toUrl());