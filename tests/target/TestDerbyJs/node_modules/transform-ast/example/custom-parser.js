"use strict";

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

var assert = require('assert');

var babylon = require('babylon');

var horchata = require('horchata');

var transform = require('../');

assert.equal(transform("\n  var el = <div />;\n", {
  parser: babylon,
  plugins: ['jsx']
}, function (node) {
  if (node.type === 'JSXElement') {
    node.edit.update(JSON.stringify(node.getSource()));
  }
}).toString(), "\n  var el = \"<div />\";\n");
assert.equal(transform("\nX = () -> {\n  @prop or= 'value'\n}\nnew X\n", {
  parser: horchata
}, function (node) {
  switch (node.type) {
    case 'FunctionExpression':
      node.edit.update('function () ' + node.body.getSource());
  }
}).toString(), "\nX = function () {\n  @prop or= 'value'\n}\nnew X\n");