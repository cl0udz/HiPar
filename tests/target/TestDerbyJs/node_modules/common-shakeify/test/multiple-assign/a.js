"use strict";

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
} // This is roughly what Babel's ESMâ†’CommonJS module transform does.


exports.a = exports.b = exports.c = exports.d = null;
exports.a = 'a';
exports.b = 'b';

exports.c = exports.d = function () {};

exports.e = exports.f = function () {};

exports.g = exports.h =
/*#__PURE__*/
function () {
  function _class() {
    _classCallCheck(this, _class);
  }

  return _class;
}(); // should not leak


exports.i = exports.j = function named() {
  _classCallCheck(this, named);
};

exports.k = exports.l = function named3() {};