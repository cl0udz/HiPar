"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

var resolveException = require("../lib/resolve-exception"),
    isValue = require("../value/is"),
    is = require("./is");

var resolveCoercedValue = function resolveCoercedValue(value, coerceItem) {
  var coercedValue = [];
  var iterator = value[Symbol.iterator]();
  var item;

  while (!(item = iterator.next()).done) {
    var newItemValue = coerceItem(item.value);
    if (!isValue(newItemValue)) throw new Error("Stop propagation");
    coercedValue.push(newItemValue);
  }

  return coercedValue;
};

module.exports = function (value
/*, options*/
) {
  var options = arguments[1];

  if (is(value, options)) {
    if (!options) return value;
    if (typeof options.coerceItem !== "function") return value;

    try {
      return resolveCoercedValue(value, options.coerceItem);
    } catch (error) {// Ignore, let validation error propagate
    }
  }

  return resolveException(value, "%v is not expected iterable value", options);
};