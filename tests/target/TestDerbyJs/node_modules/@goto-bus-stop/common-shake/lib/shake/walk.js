'use strict';

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.assign");

var walk = require('acorn/dist/walk');

var BASE = Object.assign({
  // acorn-dynamic-import support
  Import: function Import() {}
}, walk.base); // Pre-order walker

module.exports = function (node, visitors) {
  var state = null;
  var override = false;
  var ancestors = [];
  !function c(node, st, override) {
    var type = override || node.type,
        found = visitors[type];
    var isNew = node != ancestors[ancestors.length - 1];
    if (isNew) ancestors.push(node);
    if (found) found(node, st, ancestors);
    BASE[type](node, st, c);
    if (isNew) ancestors.pop();
  }(node, state, override);
};