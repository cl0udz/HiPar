J$.noInstrEval = false;
J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(13009, '/home/wupco/hp/HiPar/outputs/target_cache/TestDerbyJs/node_modules/.bin/sha.js');
            function pipe(algorithm, s) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(12593, arguments.callee, this, arguments);
                            arguments = J$.N(12601, 'arguments', arguments, true, false, false);
                            algorithm = J$.N(12609, 'algorithm', algorithm, true, false, false);
                            s = J$.N(12617, 's', s, true, false, false);
                            J$.N(12625, 'start', start, false, false, false);
                            J$.N(12633, 'hash', hash, false, false, false);
                            var start = J$.W(12281, 'start', J$.M(12273, J$.I(typeof Date === 'undefined' ? Date = J$.R(12265, 'Date', undefined, true, true) : Date = J$.R(12265, 'Date', Date, true, true)), 'now', false)(), start, false, false);
                            var hash = J$.W(12321, 'hash', J$.F(12313, J$.R(12289, 'createHash', createHash, false, true), false)(J$.C(272, J$.R(12297, 'algorithm', algorithm, false, false)) ? J$._() : J$.T(12305, 'sha1', 21, false)), hash, false, false);
                            J$.M(12401, J$.R(12329, 's', s, false, false), 'on', false)(J$.T(12337, 'data', 21, false), J$.T(12393, function (data) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(12369, arguments.callee, this, arguments);
                                            arguments = J$.N(12377, 'arguments', arguments, true, false, false);
                                            data = J$.N(12385, 'data', data, true, false, false);
                                            J$.M(12361, J$.R(12345, 'hash', hash, false, false), 'update', false)(J$.R(12353, 'data', data, false, false));
                                        } catch (J$e) {
                                            J$.Ex(13081, J$e);
                                        } finally {
                                            if (J$.Fr(13089))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(12585, J$.R(12409, 's', s, false, false), 'on', false)(J$.T(12417, 'end', 21, false), J$.T(12577, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(12561, arguments.callee, this, arguments);
                                            arguments = J$.N(12569, 'arguments', arguments, true, false, false);
                                            if (J$.C(280, J$.G(12441, J$.G(12433, J$.I(typeof process === 'undefined' ? process = J$.R(12425, 'process', undefined, true, true) : process = J$.R(12425, 'process', process, true, true)), 'env'), 'DEBUG'))) {
                                                return J$.Rt(12513, J$.M(12505, J$.I(typeof console === 'undefined' ? console = J$.R(12449, 'console', undefined, true, true) : console = J$.R(12449, 'console', console, true, true)), 'log', false)(J$.M(12473, J$.R(12457, 'hash', hash, false, false), 'digest', false)(J$.T(12465, 'hex', 21, false)), J$.B(290, '-', J$.M(12489, J$.I(typeof Date === 'undefined' ? Date = J$.R(12481, 'Date', undefined, true, true) : Date = J$.R(12481, 'Date', Date, true, true)), 'now', false)(), J$.R(12497, 'start', start, false, false))));
                                            }
                                            J$.M(12553, J$.I(typeof console === 'undefined' ? console = J$.R(12521, 'console', undefined, true, true) : console = J$.R(12521, 'console', console, true, true)), 'log', false)(J$.M(12545, J$.R(12529, 'hash', hash, false, false), 'digest', false)(J$.T(12537, 'hex', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(13097, J$e);
                                        } finally {
                                            if (J$.Fr(13105))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(13113, J$e);
                        } finally {
                            if (J$.Fr(13121))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function usage() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(12713, arguments.callee, this, arguments);
                            arguments = J$.N(12721, 'arguments', arguments, true, false, false);
                            J$.M(12657, J$.I(typeof console === 'undefined' ? console = J$.R(12641, 'console', undefined, true, true) : console = J$.R(12641, 'console', console, true, true)), 'error', false)(J$.T(12649, 'sha.js [algorithm=sha1] [filename] # hash filename with algorithm', 21, false));
                            J$.M(12681, J$.I(typeof console === 'undefined' ? console = J$.R(12665, 'console', undefined, true, true) : console = J$.R(12665, 'console', console, true, true)), 'error', false)(J$.T(12673, 'input | sha.js [algorithm=sha1]    # hash stdin with algorithm', 21, false));
                            J$.M(12705, J$.I(typeof console === 'undefined' ? console = J$.R(12689, 'console', undefined, true, true) : console = J$.R(12689, 'console', console, true, true)), 'error', false)(J$.T(12697, 'sha.js --help                      # display this message', 21, false));
                        } catch (J$e) {
                            J$.Ex(13129, J$e);
                        } finally {
                            if (J$.Fr(13137))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(13017, 'createHash', createHash, false, false, false);
            J$.N(13025, 'argv', argv, false, false, false);
            pipe = J$.N(13041, 'pipe', J$.T(13033, pipe, 12, false), true, false, false);
            usage = J$.N(13057, 'usage', J$.T(13049, usage, 12, false), true, false, false);
            J$.N(13065, 'filename', filename, false, false, false);
            J$.N(13073, 'algorithm', algorithm, false, false, false);
            var createHash = J$.W(12217, 'createHash', J$.F(12209, J$.I(typeof require === 'undefined' ? require = J$.R(12193, 'require', undefined, true, true) : require = J$.R(12193, 'require', require, true, true)), false)(J$.T(12201, './browserify', 21, false)), createHash, false, true);
            var argv = J$.W(12257, 'argv', J$.M(12249, J$.G(12233, J$.I(typeof process === 'undefined' ? process = J$.R(12225, 'process', undefined, true, true) : process = J$.R(12225, 'process', process, true, true)), 'argv'), 'slice', false)(J$.T(12241, 2, 22, false)), argv, false, true);
            if (J$.C(304, J$.U(298, '!', J$.G(12745, J$.G(12737, J$.I(typeof process === 'undefined' ? process = J$.R(12729, 'process', undefined, true, true) : process = J$.R(12729, 'process', process, true, true)), 'stdin'), 'isTTY')))) {
                J$.F(12801, J$.R(12753, 'pipe', pipe, false, true), false)(J$.G(12777, J$.R(12761, 'argv', argv, false, true), J$.T(12769, 0, 22, false)), J$.G(12793, J$.I(typeof process === 'undefined' ? process = J$.R(12785, 'process', undefined, true, true) : process = J$.R(12785, 'process', process, true, true)), 'stdin'));
            } else if (J$.C(296, J$.G(12817, J$.R(12809, 'argv', argv, false, true), 'length'))) {
                if (J$.C(288, J$.M(12857, J$.T(12825, /--help|-h/, 14, false), 'test', false)(J$.G(12849, J$.R(12833, 'argv', argv, false, true), J$.T(12841, 0, 22, false))))) {
                    J$.F(12873, J$.R(12865, 'usage', usage, false, true), false)();
                } else {
                    var filename = J$.W(12897, 'filename', J$.M(12889, J$.R(12881, 'argv', argv, false, true), 'pop', false)(), filename, false, true);
                    var algorithm = J$.W(12921, 'algorithm', J$.M(12913, J$.R(12905, 'argv', argv, false, true), 'pop', false)(), algorithm, false, true);
                    J$.F(12985, J$.R(12929, 'pipe', pipe, false, true), false)(J$.R(12937, 'algorithm', algorithm, false, true), J$.M(12977, J$.F(12961, J$.I(typeof require === 'undefined' ? require = J$.R(12945, 'require', undefined, true, true) : require = J$.R(12945, 'require', require, true, true)), false)(J$.T(12953, 'fs', 21, false)), 'createReadStream', false)(J$.R(12969, 'filename', filename, false, true)));
                }
            } else {
                J$.F(13001, J$.R(12993, 'usage', usage, false, true), false)();
            }
        } catch (J$e) {
            J$.Ex(13145, J$e);
        } finally {
            if (J$.Sr(13153))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT


