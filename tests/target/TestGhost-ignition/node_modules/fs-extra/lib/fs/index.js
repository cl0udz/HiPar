"use strict";

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise"); // This is adapted from https://github.com/normalize/mz
// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors


var u = require('universalify').fromCallback;

var fs = require('graceful-fs');

var api = ['access', 'appendFile', 'chmod', 'chown', 'close', 'fchmod', 'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchown', 'link', 'lstat', 'mkdir', 'open', 'read', 'readFile', 'readdir', 'readlink', 'realpath', 'rename', 'rmdir', 'stat', 'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile']; // fs.mkdtemp() was added in Node.js v5.10.0, so check if it exists

typeof fs.mkdtemp === 'function' && api.push('mkdtemp'); // Export all keys:

Object.keys(fs).forEach(function (key) {
  exports[key] = fs[key];
}); // Universalify async methods:

api.forEach(function (method) {
  exports[method] = u(fs[method]);
}); // We differ from mz/fs in that we still ship the old, broken, fs.exists()
// since we are a drop-in replacement for the native module

exports.exists = function (filename, callback) {
  if (typeof callback === 'function') {
    return fs.exists(filename, callback);
  }

  return new Promise(function (resolve) {
    return fs.exists(filename, resolve);
  });
};