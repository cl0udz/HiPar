"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array-buffer.slice.js");

require("core-js/modules/es.object.to-string.js");

require("core-js/modules/es.typed-array.float32-array.js");

require("core-js/modules/es.typed-array.float64-array.js");

require("core-js/modules/es.typed-array.int8-array.js");

require("core-js/modules/es.typed-array.int16-array.js");

require("core-js/modules/es.typed-array.int32-array.js");

require("core-js/modules/es.typed-array.uint8-array.js");

require("core-js/modules/es.typed-array.uint16-array.js");

require("core-js/modules/es.typed-array.uint32-array.js");

require("core-js/modules/es.typed-array.copy-within.js");

require("core-js/modules/es.typed-array.every.js");

require("core-js/modules/es.typed-array.fill.js");

require("core-js/modules/es.typed-array.filter.js");

require("core-js/modules/es.typed-array.find.js");

require("core-js/modules/es.typed-array.find-index.js");

require("core-js/modules/es.typed-array.for-each.js");

require("core-js/modules/es.typed-array.includes.js");

require("core-js/modules/es.typed-array.index-of.js");

require("core-js/modules/es.typed-array.iterator.js");

require("core-js/modules/es.typed-array.join.js");

require("core-js/modules/es.typed-array.last-index-of.js");

require("core-js/modules/es.typed-array.map.js");

require("core-js/modules/es.typed-array.reduce.js");

require("core-js/modules/es.typed-array.reduce-right.js");

require("core-js/modules/es.typed-array.reverse.js");

require("core-js/modules/es.typed-array.set.js");

require("core-js/modules/es.typed-array.slice.js");

require("core-js/modules/es.typed-array.some.js");

require("core-js/modules/es.typed-array.sort.js");

require("core-js/modules/es.typed-array.subarray.js");

require("core-js/modules/es.typed-array.to-locale-string.js");

require("core-js/modules/es.typed-array.to-string.js");

var test = require('tape');

var ista = require('./');

test('strict', function (t) {
  t.ok(ista.strict(new Int8Array()), 'Int8Array');
  t.ok(ista.strict(new Int16Array()), 'Int16Array');
  t.ok(ista.strict(new Int32Array()), 'Int32Array');
  t.ok(ista.strict(new Uint8Array()), 'Uint8Array');
  t.ok(ista.strict(new Uint16Array()), 'Uint16Array');
  t.ok(ista.strict(new Uint32Array()), 'Uint32Array');
  t.ok(ista.strict(new Float32Array()), 'Float32Array');
  t.ok(ista.strict(new Float64Array()), 'Float64Array');
  t.ok(!ista.strict(new Array()), 'Array');
  t.ok(!ista.strict([]), '[]');
  t.end();
});
test('loose', function (t) {
  t.ok(ista.loose(new Int8Array()), 'Int8Array');
  t.ok(ista.loose(new Int16Array()), 'Int16Array');
  t.ok(ista.loose(new Int32Array()), 'Int32Array');
  t.ok(ista.loose(new Uint8Array()), 'Uint8Array');
  t.ok(ista.loose(new Uint16Array()), 'Uint16Array');
  t.ok(ista.loose(new Uint32Array()), 'Uint32Array');
  t.ok(ista.loose(new Float32Array()), 'Float32Array');
  t.ok(ista.loose(new Float64Array()), 'Float64Array');
  t.ok(!ista.loose(new Array()), 'Array');
  t.ok(!ista.loose([]), '[]');
  t.end();
});