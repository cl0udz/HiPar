'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var utils = require('../utils');

var PopulateOptions = function PopulateOptions(obj) {
  _classCallCheck(this, PopulateOptions);

  this._docs = {};

  if (obj == null) {
    return;
  }

  obj = utils.clone(obj);
  Object.assign(this, obj);

  if (_typeof(obj.subPopulate) === 'object') {
    this.populate = obj.subPopulate;
  }
};
/**
 * The connection used to look up models by name. If not specified, Mongoose
 * will default to using the connection associated with the model in
 * `PopulateOptions#model`.
 *
 * @memberOf PopulateOptions
 * @property {Connection} connection
 * @api public
 */


module.exports = PopulateOptions;