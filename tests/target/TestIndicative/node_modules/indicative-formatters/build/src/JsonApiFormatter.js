"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var JsonApiFormatter =
/*#__PURE__*/
function () {
  function JsonApiFormatter() {
    _classCallCheck(this, JsonApiFormatter);

    this.errors = [];
  }

  _createClass(JsonApiFormatter, [{
    key: "addError",
    value: function addError(error, field, rule, args) {
      var message = '';
      var validation = rule;

      if (error instanceof Error) {
        message = error.message;
        validation = 'ENGINE_EXCEPTION';
      } else {
        message = error;
      }

      this.errors.push({
        source: {
          pointer: field
        },
        title: validation,
        detail: message,
        meta: {
          args: args
        }
      });
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.errors.length ? {
        errors: this.errors
      } : null;
    }
  }]);

  return JsonApiFormatter;
}();

exports.JsonApiFormatter = JsonApiFormatter;