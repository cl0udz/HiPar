"use strict";

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

Object.defineProperty(exports, "__esModule", {
  value: true
});

var toDate_1 = require("./toDate");

var toString_1 = require("./toString");

var toBoolean_1 = require("./toBoolean");

var toInt_1 = require("./toInt");

function cast(value, toType, errorMessage) {
  if (_typeof(value) === toType) {
    return value;
  }

  var castedValue = null;

  switch (toType) {
    case 'float':
      castedValue = toInt_1.toInt(value, true);
      break;

    case 'string':
      castedValue = toString_1.toString(value);
      break;

    case 'integer':
      castedValue = toInt_1.toInt(value);
      break;

    case 'date':
      castedValue = toDate_1.toDate(value);
      break;

    case 'boolean':
      castedValue = toBoolean_1.toBoolean(value);
      break;
  }

  if (castedValue === null && errorMessage) {
    throw new Error(errorMessage);
  }

  return castedValue;
}

exports.cast = cast;