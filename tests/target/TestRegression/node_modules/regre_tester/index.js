"use strict";

function do_test(user_input) {
  one_layer_hipar(user_input);
  multi_layer_hipar(user_input);
  mix_hipar(user_input);
  proto_hipar(user_input);
  child_hipar({
    "root": user_input
  });
  time_hipar({
    "root": user_input
  });
  func_var_nested_hipar(user_input);
}

module.exports = do_test; // test a.hipar
// ret: explicit_one_layer_hipar; implicit_one_layer_hipar

function one_layer_hipar(obj) {
  if (obj['explicit_one_layer_hipar']) {
    return;
  }

  if (false) {
    var b = obj['implicit_one_layer_hipar'];
  }
} // test a.b.c.d.e.f.hipar 
// ret: obj.a.b.multi_layer_hipar


function multi_layer_hipar(obj) {
  obj.a = {};
  obj.a.b = {};
  var cmd = obj.a.b.multi_layer_hipar;
} // test a['b'].c.hipar
// ret: obj.a.b.c.mix_hipar 


function mix_hipar(obj) {
  obj.a = {};
  obj.a.b = {};
  obj.a.b.c = {};
  var cmd = obj.a['b'].c.mix_hipar;
} // test hipar resulting from overwrite
// return overwritten_obj.(normal_hipar, func_hipar, constractor)


function proto_hipar(obj) {
  var person = function person(firstname, lastname) {
    this.normal_hipar = firstname, this.func_hipar = function () {
      console.log("this is function");
    };
  };

  var overwritten_obj = new person("a", "b");
  Object.assign(overwritten_obj, obj);
  var cmd1 = overwritten_obj.normal_hipar;
  var cmd2 = overwritten_obj.constructor;
} // test a.b if b is labeled instead of a
// ret: obj.root.child_hipar


function child_hipar(obj) {
  var cmd = obj.root.child_hipar;
} // test time consuming case
// ret: time_hipar;


function time_hipar(obj) {
  var sleep = function sleep(milliseconds) {
    return new Promise(function (resolve) {
      return setTimeout(resolve, milliseconds);
    });
  };

  sleep(1000).then(function () {
    var cmd = obj.root.timing_hipar;
  });
} // test hipar nested function 
// ret: ???


function func_var_nested_hipar(obj) {
  (function (anon) {
    var cmd = anon.func_anon_hipar;
  })(obj);

  function nest_func(n_obj) {
    var cmd = n_obj.func_func_hipar;
  }

  nest_func(obj);
}

var obj = {};
