"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

function _typeof3(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof3 = function _typeof3(obj) { return typeof obj; }; } else { _typeof3 = function _typeof3(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof3(obj); }

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

function _typeof2(obj) {
  if (typeof Symbol === "function" && _typeof3(Symbol.iterator) === "symbol") {
    _typeof2 = function _typeof2(obj) {
      return _typeof3(obj);
    };
  } else {
    _typeof2 = function _typeof2(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof3(obj);
    };
  }

  return _typeof2(obj);
}

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

var toArray = require("./to-array"),
    isDate = require("../date/is-date"),
    isValue = require("../object/is-value"),
    isRegExp = require("../reg-exp/is-reg-exp");

var isArray = Array.isArray,
    stringify = JSON.stringify,
    objHasOwnProperty = Object.prototype.hasOwnProperty;

var keyValueToString = function keyValueToString(value, key) {
  return stringify(key) + ":" + module.exports(value);
};

var sparseMap = function sparseMap(arr) {
  var i,
      length = arr.length,
      result = new Array(length);

  for (i = 0; i < length; ++i) {
    if (!objHasOwnProperty.call(arr, i)) continue;
    result[i] = module.exports(arr[i]);
  }

  return result;
};

module.exports = function (obj) {
  if (!isValue(obj)) return String(obj);

  switch (_typeof(obj)) {
    case "string":
      return stringify(obj);

    case "number":
    case "boolean":
    case "function":
      return String(obj);

    case "object":
      if (isArray(obj)) return "[" + sparseMap(obj) + "]";
      if (isRegExp(obj)) return String(obj);
      if (isDate(obj)) return "new Date(" + obj.valueOf() + ")";
      return "{" + toArray(obj, keyValueToString) + "}";

    default:
      throw new TypeError("Serialization of " + String(obj) + "is unsupported");
  }
};