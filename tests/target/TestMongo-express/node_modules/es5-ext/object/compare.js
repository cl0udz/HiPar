"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.number.constructor");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

function _typeof3(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof3 = function _typeof3(obj) { return typeof obj; }; } else { _typeof3 = function _typeof3(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof3(obj); }

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.number.constructor");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

function _typeof2(obj) {
  if (typeof Symbol === "function" && _typeof3(Symbol.iterator) === "symbol") {
    _typeof2 = function _typeof2(obj) {
      return _typeof3(obj);
    };
  } else {
    _typeof2 = function _typeof2(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof3(obj);
    };
  }

  return _typeof2(obj);
}

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.number.constructor");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

var strCompare = require("../string/#/case-insensitive-compare"),
    isObject = require("./is-object"),
    isValue = require("./is-value"),
    numIsNaN = require("../number/is-nan"),
    resolve,
    typeMap;

typeMap = {
  undefined: 0,
  object: 1,
  "boolean": 2,
  string: 3,
  number: 4
};

resolve = function resolve(a) {
  if (isObject(a)) {
    if (typeof a.valueOf !== "function") return NaN;
    a = a.valueOf();

    if (isObject(a)) {
      if (typeof a.toString !== "function") return NaN;
      a = a.toString();
      if (typeof a !== "string") return NaN;
    }
  }

  return a;
};

module.exports = function (val1, val2) {
  if (val1 === val2) return 0; // Same

  val1 = resolve(val1);
  val2 = resolve(val2); // eslint-disable-next-line eqeqeq

  if (val1 == val2) return typeMap[_typeof(val1)] - typeMap[_typeof(val2)];
  if (!isValue(val1)) return -1;
  if (!isValue(val2)) return 1;

  if (typeof val1 === "string" || typeof val2 === "string") {
    return strCompare.call(val1, val2);
  }

  if (numIsNaN(val1) && numIsNaN(val2)) return 0; // Jslint: ignore

  return Number(val1) - Number(val2);
};