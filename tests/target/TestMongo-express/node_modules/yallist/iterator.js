"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

require("regenerator-runtime/runtime");

var Yallist = require('./yallist.js');

Yallist.prototype[Symbol.iterator] =
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var walker;
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          walker = this.head;

        case 1:
          if (!walker) {
            _context.next = 7;
            break;
          }

          _context.next = 4;
          return walker.value;

        case 4:
          walker = walker.next;
          _context.next = 1;
          break;

        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
});