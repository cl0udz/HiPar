"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.concat");

var _jquery = _interopRequireDefault(require("jquery"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

(0, _jquery["default"])(document).ready(function () {
  (0, _jquery["default"])('#collection').popover({
    content: 'Collection names must begin with a letter, underscore, hyphen or slash, and can contain only letters, ' + 'underscores, hyphens, numbers, dots or slashes',
    placement: 'left'
  });
  var $deleteButton = (0, _jquery["default"])('.deleteButton');
  $deleteButton.tooltip({
    title: 'Warning! Are you sure you want to delete this collection? All documents will be deleted.'
  });
  $deleteButton.on('click', function onDeleteClick(event) {
    $deleteButton.tooltip('hide');
    event.preventDefault();
    var $target = (0, _jquery["default"])(this);
    var parentForm = $target.parent();
    (0, _jquery["default"])('#confirmation-input').attr('shouldbe', $target.attr('collection-name'));
    (0, _jquery["default"])('#modal-collection-name').text($target.attr('collection-name'));
    (0, _jquery["default"])('#confirm-deletion').modal({
      backdrop: 'static',
      keyboard: false
    }).one('shown.bs.modal', function () {
      (0, _jquery["default"])('#confirmation-input').focus();
    }).one('click', '#delete', function () {
      var input = (0, _jquery["default"])('#confirmation-input');

      if (input.val().toLowerCase() === input.attr('shouldbe').toLowerCase()) {
        parentForm.trigger('submit');
      }
    });
  });
  var $importInputsFile = (0, _jquery["default"])('.import-input-file');
  var $importFileLinks = (0, _jquery["default"])('.import-file-link'); // Trigger onClick event on hidden input file

  _jquery["default"].each($importFileLinks, function (key, link) {
    (0, _jquery["default"])(link).on('click', function () {
      (0, _jquery["default"])($importInputsFile[key]).trigger('click');
    });
  }); // When file is add in input, send it to the server


  $importInputsFile.on('change', function (event) {
    var files = event.target.files;
    var collection = (0, _jquery["default"])(event.target).attr('collection-name');
    var data = new FormData();

    _jquery["default"].each(files, function (key, value) {
      data.append("file_".concat(key), value);
    });

    _jquery["default"].ajax({
      type: 'POST',
      url: "".concat(ME_SETTINGS.baseHref, "db/").concat(ME_SETTINGS.dbName, "/import/").concat(collection),
      data: data,
      cache: false,
      dataType: 'json',
      processData: false,
      // Don't process the files
      contentType: false // Set content type to false as jQuery will tell the server its a query string request

    });
  });
});