'use strict';

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.keys");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.keys");

require("core-js/modules/web.dom-collections.for-each");

var express = require('express');

var swig = require('swig-templates');

var swigFilters = require('./filters');

var router = require('./router');

var fileUpload = require('express-fileupload');

var assets = require('../build-assets.json');

var middleware = function middleware(config) {
  var app = express();
  app.locals.assets = assets; //Set up swig

  var swigOptions = {
    cache: process.env.NODE_ENV === 'production' ? 'memory' : false
  };
  var swigEngine = new swig.Swig(swigOptions);
  app.engine('html', swigEngine.renderFile);
  Object.keys(swigFilters).forEach(function (name) {
    swig.setFilter(name, swigFilters[name]);
  }); //App configuration

  app.set('views', __dirname + '/views');
  app.set('view engine', 'html');
  app.set('view options', {
    layout: false
  }); // Handle file upload

  app.use(fileUpload({
    limits: {
      fileSize: 50 * 1024 * 1024
    }
  }));
  app.use('/', router(config));
  app.set('read_only', config.options.readOnly || false);
  app.set('me_confirm_delete', config.options.confirmDelete || false);
  app.set('me_collapsible_json', config.options.collapsibleJSON || false);
  app.set('me_collapsible_json_default_unfold', config.options.collapsibleJSONDefaultUnfold || false);
  app.set('me_no_export', config.options.noExport || false);
  app.set('gridFSEnabled', config.options.gridFSEnabled || false);
  return app;
};

module.exports = middleware;