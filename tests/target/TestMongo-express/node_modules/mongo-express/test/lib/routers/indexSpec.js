'use strict';

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/es.string.match");

require("core-js/modules/web.dom-collections.iterator");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/es.string.match");

require("core-js/modules/web.dom-collections.iterator");

var expect = require('chai').expect;

var httpUtils = require('../../testHttpUtils');

var mongoUtils = require('../../testMongoUtils');

var asPromise = require('../../testUtils').asPromise;

describe('Router index', function () {
  var request;
  var close;
  var db;
  before(function () {
    return mongoUtils.initializeDb().then(function (newDb) {
      db = newDb;
      return httpUtils.createServer();
    }).then(function (server) {
      request = server.request;
      close = server.close;
    });
  });
  it('GET / should return html', function () {
    return asPromise(function (cb) {
      return request.get('/').expect(200).end(cb);
    }).then(function (res) {
      expect(res.text).to.match(/<title>Home - Mongo Express<\/title>/);
      expect(res.text).to.match(/<h4 style="font-weight: bold;">Databases<\/h4>/);
      var dbName = mongoUtils.testDbName;
      expect(res.text).to.match(new RegExp("<a href=\"/db/".concat(dbName, "/\">").concat(dbName, "</a></h3>")));
    });
  });
  after(function () {
    return Promise.all([mongoUtils.cleanAndCloseDb(db), close()]);
  });
});