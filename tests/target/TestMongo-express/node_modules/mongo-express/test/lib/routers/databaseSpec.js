'use strict';

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/es.string.match");

require("core-js/modules/web.dom-collections.iterator");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/es.string.match");

require("core-js/modules/web.dom-collections.iterator");

var expect = require('chai').expect;

var httpUtils = require('../../testHttpUtils');

var mongoUtils = require('../../testMongoUtils');

var asPromise = require('../../testUtils').asPromise;

var dbName = mongoUtils.testDbName;
var collectionName = mongoUtils.testCollectionName;
var urlColName = mongoUtils.testURLCollectionName;
describe('Router database', function () {
  var request;
  var close;
  var db;
  before(function () {
    return mongoUtils.initializeDb().then(function (newDb) {
      db = newDb;
      return httpUtils.createServer();
    }).then(function (server) {
      request = server.request;
      close = server.close;
    });
  });
  it('GET /db/<dbName> should return html', function () {
    return asPromise(function (cb) {
      return request.get("/db/".concat(dbName)).expect(200).end(cb);
    }).then(function (res) {
      expect(res.text).to.match(new RegExp("<title>".concat(dbName, " - Mongo Express</title>")));
      expect(res.text).to.match(new RegExp("<a href=\"/db/".concat(dbName, "/").concat(urlColName, "\">").concat(collectionName, "</a>")));
    });
  });
  it('POST / should add a new db');
  it('DEL /<dbName> should delete the db');
  after(function () {
    return Promise.all([mongoUtils.cleanAndCloseDb(db), close()]);
  });
});