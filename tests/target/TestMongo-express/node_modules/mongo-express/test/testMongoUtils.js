'use strict';

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

var MongoClient = require('mongodb').MongoClient;

var mongoConfig = require('./testMongoConfig');

var asPromise = require('./testUtils').asPromise;

exports.testData = [{
  testItem: 1
}, {
  testItem: 2
}, {
  testItem: 3
}, {
  testItem: 4
}];
var currentTestData;

exports.getCurrentTestData = function () {
  return currentTestData;
};

exports.getFirstDocumentId = function () {
  return exports.getCurrentTestData()[0]._id.toString();
};

exports.testCollectionName = 'test/items';
exports.testDbName = mongoConfig.dbName;
exports.testURLCollectionName = encodeURIComponent(exports.testCollectionName);

exports.createConnection = function () {
  return asPromise(function (cb) {
    return MongoClient.connect(mongoConfig.makeConnectionUrl(), cb);
  });
};

exports.createTestCollection = function (db) {
  return asPromise(function (cb) {
    return db.collection(exports.testCollectionName).insertMany(exports.testData, cb);
  }).then(function (results) {
    currentTestData = results.ops;
    return results;
  });
};

exports.dropTestCollection = function (db) {
  return asPromise(function (cb) {
    return db.collection(exports.testCollectionName).drop(cb);
  });
};

exports.closeDb = function (db) {
  return asPromise(function (cb) {
    return db.close(cb);
  });
};

exports.initializeDb = function () {
  return exports.createConnection().then(function (db) {
    return exports.createTestCollection(db).then(function () {
      return db;
    });
  });
};

exports.cleanAndCloseDb = function (db) {
  return exports.dropTestCollection(db).then(function () {
    return exports.closeDb(db);
  });
};