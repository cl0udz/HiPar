"use strict";

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.define-property");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _utils = require("./utils");

var _internal = require("./-internal");

var _then = _interopRequireDefault(require("./then"));

var _promise = _interopRequireDefault(require("./promise"));

var _resolve = _interopRequireDefault(require("./promise/resolve"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var _default = Enumerator;
exports["default"] = _default;

function Enumerator(Constructor, input) {
  this._instanceConstructor = Constructor;
  this.promise = new Constructor(_internal.noop);

  if (!this.promise[_internal.PROMISE_ID]) {
    (0, _internal.makePromise)(this.promise);
  }

  if ((0, _utils.isArray)(input)) {
    this._input = input;
    this.length = input.length;
    this._remaining = input.length;
    this._result = new Array(this.length);

    if (this.length === 0) {
      (0, _internal.fulfill)(this.promise, this._result);
    } else {
      this.length = this.length || 0;

      this._enumerate();

      if (this._remaining === 0) {
        (0, _internal.fulfill)(this.promise, this._result);
      }
    }
  } else {
    (0, _internal.reject)(this.promise, validationError());
  }
}

function validationError() {
  return new Error('Array Methods must be provided an Array');
}

;

Enumerator.prototype._enumerate = function () {
  var length = this.length;
  var input = this._input;

  for (var i = 0; this._state === _internal.PENDING && i < length; i++) {
    this._eachEntry(input[i], i);
  }
};

Enumerator.prototype._eachEntry = function (entry, i) {
  var c = this._instanceConstructor;
  var resolve = c.resolve;

  if (resolve === _resolve["default"]) {
    var then = (0, _internal.getThen)(entry);

    if (then === _then["default"] && entry._state !== _internal.PENDING) {
      this._settledAt(entry._state, i, entry._result);
    } else if (typeof then !== 'function') {
      this._remaining--;
      this._result[i] = entry;
    } else if (c === _promise["default"]) {
      var promise = new c(_internal.noop);
      (0, _internal.handleMaybeThenable)(promise, entry, then);

      this._willSettleAt(promise, i);
    } else {
      this._willSettleAt(new c(function (resolve) {
        resolve(entry);
      }), i);
    }
  } else {
    this._willSettleAt(resolve(entry), i);
  }
};

Enumerator.prototype._settledAt = function (state, i, value) {
  var promise = this.promise;

  if (promise._state === _internal.PENDING) {
    this._remaining--;

    if (state === _internal.REJECTED) {
      (0, _internal.reject)(promise, value);
    } else {
      this._result[i] = value;
    }
  }

  if (this._remaining === 0) {
    (0, _internal.fulfill)(promise, this._result);
  }
};

Enumerator.prototype._willSettleAt = function (promise, i) {
  var enumerator = this;
  (0, _internal.subscribe)(promise, undefined, function (value) {
    enumerator._settledAt(_internal.FULFILLED, i, value);
  }, function (reason) {
    enumerator._settledAt(_internal.REJECTED, i, reason);
  });
};