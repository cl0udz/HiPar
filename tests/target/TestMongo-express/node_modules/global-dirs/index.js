'use strict';

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.join");

var path = require('path');

var os = require('os');

var fs = require('fs');

var ini = require('ini');

var readRc = function readRc(fp) {
  try {
    return ini.parse(fs.readFileSync(fp, 'utf8')).prefix;
  } catch (err) {}
};

var defaultNpmPrefix = function () {
  if (process.env.PREFIX) {
    return process.env.PREFIX;
  }

  if (process.platform === 'win32') {
    // `c:\node\node.exe` → `prefix=c:\node\`
    return path.dirname(process.execPath);
  } // `/usr/local/bin/node` → `prefix=/usr/local`


  return path.dirname(path.dirname(process.execPath));
}();

var getNpmPrefix = function getNpmPrefix() {
  if (process.env.PREFIX) {
    return process.env.PREFIX;
  }

  var homePrefix = readRc(path.join(os.homedir(), '.npmrc'));

  if (homePrefix) {
    return homePrefix;
  }

  var globalConfigPrefix = readRc(path.resolve(defaultNpmPrefix, 'etc', 'npmrc'));

  if (globalConfigPrefix) {
    return globalConfigPrefix;
  }

  if (process.platform === 'win32' && process.env.APPDATA) {
    // Hardcoded contents of `c:\Program Files\nodejs\node_modules\npm\.npmrc`
    var prefix = path.join(process.env.APPDATA, 'npm');

    if (fs.existsSync(prefix)) {
      return prefix;
    }
  }

  return defaultNpmPrefix;
};

var npmPrefix = path.resolve(getNpmPrefix());

var getYarnPrefix = function getYarnPrefix() {
  if (process.env.PREFIX) {
    return process.env.PREFIX;
  }

  if (process.platform === 'win32' && process.env.LOCALAPPDATA) {
    var prefix = path.join(process.env.LOCALAPPDATA, 'Yarn');

    if (fs.existsSync(prefix)) {
      return prefix;
    }
  }

  var configPrefix = path.join(os.homedir(), '.config/yarn');

  if (fs.existsSync(configPrefix)) {
    return configPrefix;
  }

  var homePrefix = path.join(os.homedir(), '.yarn-config');

  if (fs.existsSync(homePrefix)) {
    return homePrefix;
  } // Yarn supports the npm conventions but the inverse is not true


  return npmPrefix;
};

exports.npm = {};
exports.npm.prefix = npmPrefix;
exports.npm.packages = path.join(npmPrefix, process.platform === 'win32' ? 'node_modules' : 'lib/node_modules');
exports.npm.binaries = process.platform === 'win32' ? npmPrefix : path.join(npmPrefix, 'bin');
var yarnPrefix = path.resolve(getYarnPrefix());
exports.yarn = {};
exports.yarn.prefix = yarnPrefix;
exports.yarn.packages = path.join(yarnPrefix, process.platform === 'win32' ? 'config/global/node_modules' : 'global/node_modules');
exports.yarn.binaries = path.join(exports.yarn.packages, '.bin');