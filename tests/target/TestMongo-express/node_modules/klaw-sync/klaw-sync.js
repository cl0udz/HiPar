'use strict';

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.map");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.split");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.map");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.split");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.map");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.split");

var fs = require('graceful-fs');

var path = require('path');

function klawSync(dir, opts, ls) {
  if (!ls) {
    ls = [];
    dir = path.resolve(dir);
    opts = opts || {};
    opts.fs = opts.fs || fs;
    if (opts.depthLimit > -1) opts.rootDepth = dir.split(path.sep).length + 1;
  }

  var paths = opts.fs.readdirSync(dir).map(function (p) {
    return dir + path.sep + p;
  });

  for (var i = 0; i < paths.length; i += 1) {
    var pi = paths[i];
    var st = opts.fs.statSync(pi);
    var item = {
      path: pi,
      stats: st
    };
    var isUnderDepthLimit = !opts.rootDepth || pi.split(path.sep).length - opts.rootDepth < opts.depthLimit;
    var filterResult = opts.filter ? opts.filter(item) : true;
    var isDir = st.isDirectory();
    var shouldAdd = filterResult && (isDir ? !opts.nodir : !opts.nofile);
    var shouldTraverse = isDir && isUnderDepthLimit && (opts.traverseAll || filterResult);
    if (shouldAdd) ls.push(item);
    if (shouldTraverse) ls = klawSync(pi, opts, ls);
  }

  return ls;
}

module.exports = klawSync;