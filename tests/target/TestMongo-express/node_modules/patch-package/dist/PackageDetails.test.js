"use strict";

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.define-property");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var PackageDetails_1 = require("./PackageDetails");

describe("getPackageDetailsFromPatchFilename", function () {
  it("parses old-style patch filenames", function () {
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("@types/banana:3.4.2-beta.2.patch")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"@types/banana\",\n  \"isDevOnly\": false,\n  \"isNested\": false,\n  \"name\": \"@types/banana\",\n  \"packageNames\": Array [\n    \"@types/banana\",\n  ],\n  \"patchFilename\": \"@types/banana:3.4.2-beta.2.patch\",\n  \"path\": \"node_modules/@types/banana\",\n  \"pathSpecifier\": \"@types/banana\",\n  \"version\": \"3.4.2-beta.2\",\n}\n");
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("banana:0.4.2.patch")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"banana\",\n  \"isDevOnly\": false,\n  \"isNested\": false,\n  \"name\": \"banana\",\n  \"packageNames\": Array [\n    \"banana\",\n  ],\n  \"patchFilename\": \"banana:0.4.2.patch\",\n  \"path\": \"node_modules/banana\",\n  \"pathSpecifier\": \"banana\",\n  \"version\": \"0.4.2\",\n}\n");
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("banana+0.4.2.patch")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"banana\",\n  \"isDevOnly\": false,\n  \"isNested\": false,\n  \"name\": \"banana\",\n  \"packageNames\": Array [\n    \"banana\",\n  ],\n  \"patchFilename\": \"banana+0.4.2.patch\",\n  \"path\": \"node_modules/banana\",\n  \"pathSpecifier\": \"banana\",\n  \"version\": \"0.4.2\",\n}\n");
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("banana-0.4.2.patch")).toBe(null);
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("@types+banana-0.4.2.patch")).toBe(null);
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("banana+0.4.2.dev.patch")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"banana\",\n  \"isDevOnly\": true,\n  \"isNested\": false,\n  \"name\": \"banana\",\n  \"packageNames\": Array [\n    \"banana\",\n  ],\n  \"patchFilename\": \"banana+0.4.2.dev.patch\",\n  \"path\": \"node_modules/banana\",\n  \"pathSpecifier\": \"banana\",\n  \"version\": \"0.4.2.dev\",\n}\n");
  });
  it("parses new-style patch filenames", function () {
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("banana++apple+0.4.2.patch")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"banana => apple\",\n  \"isDevOnly\": false,\n  \"isNested\": true,\n  \"name\": \"apple\",\n  \"packageNames\": Array [\n    \"banana\",\n    \"apple\",\n  ],\n  \"patchFilename\": \"banana++apple+0.4.2.patch\",\n  \"path\": \"node_modules/banana/node_modules/apple\",\n  \"pathSpecifier\": \"banana/apple\",\n  \"version\": \"0.4.2\",\n}\n");
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("@types+banana++@types+apple++@mollusc+man+0.4.2-banana-tree.patch")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"@types/banana => @types/apple => @mollusc/man\",\n  \"isDevOnly\": false,\n  \"isNested\": true,\n  \"name\": \"@mollusc/man\",\n  \"packageNames\": Array [\n    \"@types/banana\",\n    \"@types/apple\",\n    \"@mollusc/man\",\n  ],\n  \"patchFilename\": \"@types+banana++@types+apple++@mollusc+man+0.4.2-banana-tree.patch\",\n  \"path\": \"node_modules/@types/banana/node_modules/@types/apple/node_modules/@mollusc/man\",\n  \"pathSpecifier\": \"@types/banana/@types/apple/@mollusc/man\",\n  \"version\": \"0.4.2-banana-tree\",\n}\n");
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("@types+banana.patch++hello+0.4.2-banana-tree.patch")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"@types/banana.patch => hello\",\n  \"isDevOnly\": false,\n  \"isNested\": true,\n  \"name\": \"hello\",\n  \"packageNames\": Array [\n    \"@types/banana.patch\",\n    \"hello\",\n  ],\n  \"patchFilename\": \"@types+banana.patch++hello+0.4.2-banana-tree.patch\",\n  \"path\": \"node_modules/@types/banana.patch/node_modules/hello\",\n  \"pathSpecifier\": \"@types/banana.patch/hello\",\n  \"version\": \"0.4.2-banana-tree\",\n}\n");
    expect(PackageDetails_1.getPackageDetailsFromPatchFilename("@types+banana.patch++hello+0.4.2-banana-tree.dev.patch")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"@types/banana.patch => hello\",\n  \"isDevOnly\": true,\n  \"isNested\": true,\n  \"name\": \"hello\",\n  \"packageNames\": Array [\n    \"@types/banana.patch\",\n    \"hello\",\n  ],\n  \"patchFilename\": \"@types+banana.patch++hello+0.4.2-banana-tree.dev.patch\",\n  \"path\": \"node_modules/@types/banana.patch/node_modules/hello\",\n  \"pathSpecifier\": \"@types/banana.patch/hello\",\n  \"version\": \"0.4.2-banana-tree\",\n}\n");
  });
});
describe("getPatchDetailsFromCliString", function () {
  it("handles a minimal package name", function () {
    expect(PackageDetails_1.getPatchDetailsFromCliString("patch-package")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"patch-package\",\n  \"isNested\": false,\n  \"name\": \"patch-package\",\n  \"packageNames\": Array [\n    \"patch-package\",\n  ],\n  \"path\": \"node_modules/patch-package\",\n  \"pathSpecifier\": \"patch-package\",\n}\n");
  });
  it("handles a scoped package name", function () {
    expect(PackageDetails_1.getPatchDetailsFromCliString("@david/patch-package")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"@david/patch-package\",\n  \"isNested\": false,\n  \"name\": \"@david/patch-package\",\n  \"packageNames\": Array [\n    \"@david/patch-package\",\n  ],\n  \"path\": \"node_modules/@david/patch-package\",\n  \"pathSpecifier\": \"@david/patch-package\",\n}\n");
  });
  it("handles a nested package name", function () {
    expect(PackageDetails_1.getPatchDetailsFromCliString("david/patch-package")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"david => patch-package\",\n  \"isNested\": true,\n  \"name\": \"patch-package\",\n  \"packageNames\": Array [\n    \"david\",\n    \"patch-package\",\n  ],\n  \"path\": \"node_modules/david/node_modules/patch-package\",\n  \"pathSpecifier\": \"david/patch-package\",\n}\n");
  });
  it("handles a nested package name with scopes", function () {
    expect(PackageDetails_1.getPatchDetailsFromCliString("@david/patch-package/banana")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"@david/patch-package => banana\",\n  \"isNested\": true,\n  \"name\": \"banana\",\n  \"packageNames\": Array [\n    \"@david/patch-package\",\n    \"banana\",\n  ],\n  \"path\": \"node_modules/@david/patch-package/node_modules/banana\",\n  \"pathSpecifier\": \"@david/patch-package/banana\",\n}\n");
    expect(PackageDetails_1.getPatchDetailsFromCliString("@david/patch-package/@david/banana")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"@david/patch-package => @david/banana\",\n  \"isNested\": true,\n  \"name\": \"@david/banana\",\n  \"packageNames\": Array [\n    \"@david/patch-package\",\n    \"@david/banana\",\n  ],\n  \"path\": \"node_modules/@david/patch-package/node_modules/@david/banana\",\n  \"pathSpecifier\": \"@david/patch-package/@david/banana\",\n}\n");
    expect(PackageDetails_1.getPatchDetailsFromCliString("david/patch-package/@david/banana")).toMatchInlineSnapshot("\nObject {\n  \"humanReadablePathSpecifier\": \"david => patch-package => @david/banana\",\n  \"isNested\": true,\n  \"name\": \"@david/banana\",\n  \"packageNames\": Array [\n    \"david\",\n    \"patch-package\",\n    \"@david/banana\",\n  ],\n  \"path\": \"node_modules/david/node_modules/patch-package/node_modules/@david/banana\",\n  \"pathSpecifier\": \"david/patch-package/@david/banana\",\n}\n");
  });
});