"use strict";

require("core-js/modules/es.array.join");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.array.join");

require("core-js/modules/es.object.define-property");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var packageIsDevDependency_1 = require("./packageIsDevDependency");

var path_1 = require("./path");

var path_2 = require("path");

var PackageDetails_1 = require("./PackageDetails");

var fs_1 = require("fs");

var appPath = path_2.normalize(path_1.join(__dirname, "../"));
describe(packageIsDevDependency_1.packageIsDevDependency, function () {
  it("returns true if package is a dev dependency", function () {
    expect(packageIsDevDependency_1.packageIsDevDependency({
      appPath: appPath,
      packageDetails: PackageDetails_1.getPackageDetailsFromPatchFilename("typescript+3.0.1.patch")
    })).toBe(true);
  });
  it("returns false if package is not a dev dependency", function () {
    expect(packageIsDevDependency_1.packageIsDevDependency({
      appPath: appPath,
      packageDetails: PackageDetails_1.getPackageDetailsFromPatchFilename("chalk+3.0.1.patch")
    })).toBe(false);
  });
  it("returns false if package is a transitive dependency of a dev dependency", function () {
    expect(fs_1.existsSync(path_1.join(appPath, "node_modules/cosmiconfig"))).toBe(true);
    expect(packageIsDevDependency_1.packageIsDevDependency({
      appPath: appPath,
      packageDetails: PackageDetails_1.getPackageDetailsFromPatchFilename( // cosmiconfig is a transitive dep of lint-staged
      "cosmiconfig+3.0.1.patch")
    })).toBe(false);
  });
});