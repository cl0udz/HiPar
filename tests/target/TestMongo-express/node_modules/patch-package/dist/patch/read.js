"use strict";

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.bold");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.bold");

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var chalk_1 = __importDefault(require("chalk"));

var fs_extra_1 = require("fs-extra");

var path_1 = require("../path");

var path_2 = require("path");

var parse_1 = require("./parse");

function readPatch(_a) {
  var patchFilePath = _a.patchFilePath,
      packageDetails = _a.packageDetails,
      patchDir = _a.patchDir;

  try {
    return parse_1.parsePatchFile(fs_extra_1.readFileSync(patchFilePath).toString());
  } catch (e) {
    var fixupSteps = [];
    var relativePatchFilePath = path_2.normalize(path_1.relative(process.cwd(), patchFilePath));
    var patchBaseDir = relativePatchFilePath.slice(0, relativePatchFilePath.indexOf(patchDir));

    if (patchBaseDir) {
      fixupSteps.push("cd " + patchBaseDir);
    }

    fixupSteps.push("patch -p1 -i " + relativePatchFilePath.slice(relativePatchFilePath.indexOf(patchDir)));
    fixupSteps.push("npx patch-package " + packageDetails.pathSpecifier);

    if (patchBaseDir) {
      fixupSteps.push("cd " + path_1.relative(path_1.resolve(process.cwd(), patchBaseDir), process.cwd()));
    }

    console.error("\n" + chalk_1["default"].red.bold("**ERROR**") + " " + chalk_1["default"].red("Failed to apply patch for package " + chalk_1["default"].bold(packageDetails.humanReadablePathSpecifier)) + "\n    \n  This happened because the patch file " + relativePatchFilePath + " could not be parsed.\n   \n  If you just upgraded patch-package, you can try running:\n  \n    " + fixupSteps.join("\n    ") + "\n    \n  Otherwise, try manually creating the patch file again.\n  \n  If the problem persists, please submit a bug report:\n  \n    https://github.com/ds300/patch-package/issues/new?title=Patch+file+parse+error&body=%3CPlease+attach+the+patch+file+in+question%3E\n\n");
    process.exit(1);
  }

  return [];
}

exports.readPatch = readPatch;