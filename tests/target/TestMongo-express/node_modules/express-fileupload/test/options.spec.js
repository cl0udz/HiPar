"use strict";

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.join");

var fs = require('fs');

var path = require('path');

var request = require('supertest');

var server = require('./server');

var clearUploadsDir = server.clearUploadsDir;
var fileDir = server.fileDir;
var uploadDir = server.uploadDir;
describe('File Upload Options Tests', function () {
  afterEach(function (done) {
    clearUploadsDir();
    done();
  });
  /**
   * Upload the file for testing and verify the expected filename.
   * @param {object} options The expressFileUpload options.
   * @param {string} actualFileNameToUpload The name of the file to upload.
   * @param {string} expectedFileNameOnFileSystem The name of the file after upload.
   * @param {function} done The mocha continuation function.
   */

  function executeFileUploadTestWalk(options, actualFileNameToUpload, expectedFileNameOnFileSystem, done) {
    request(server.setup(options)).post('/upload/single').attach('testFile', path.join(fileDir, actualFileNameToUpload)).expect(200).end(function (err) {
      if (err) {
        return done(err);
      }

      var uploadedFilePath = path.join(uploadDir, expectedFileNameOnFileSystem);
      fs.stat(uploadedFilePath, done);
    });
  }

  describe('Testing [safeFileNames] option to ensure:', function () {
    it('Does nothing to your filename when disabled.', function (done) {
      var fileUploadOptions = {
        safeFileNames: false
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'my$Invalid#fileName.png123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Is disabled by default.', function (done) {
      var fileUploadOptions = null;
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'my$Invalid#fileName.png123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Strips away all non-alphanumeric characters (excluding hyphens/underscores) when enabled.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileNamepng123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Accepts a regex for stripping (decidedly) "invalid" characters from filename.', function (done) {
      var fileUploadOptions = {
        safeFileNames: /[\$#]/g
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileName.png123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
  });
  describe('Testing [preserveExtension] option to ensure:', function () {
    it('Does not preserve the extension of your filename when disabled.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: false
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileNamepng123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Is disabled by default.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileNamepng123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Shortens your extension to the default(3) when enabled, if the extension found is larger.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: true
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileNamepng.123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Leaves your extension alone when enabled, if the extension found is <= default(3) length', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: true
      };
      var actualFileName = 'car.png';
      var expectedFileName = 'car.png';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Can be configured for an extension length > default(3).', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: 7
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileName.png123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Can be configured for an extension length < default(3).', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: 2
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileNamepng1.23';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Will use the absolute value of your extension length when negative.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: -5
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileNamep.ng123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Will leave no extension when the extension length == 0.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: 0
      };
      var actualFileName = 'car.png';
      var expectedFileName = 'car';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Will accept numbers as strings, if they can be resolved with parseInt.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: '3'
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileNamepng.123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Will be evaluated for truthy-ness if it cannot be parsed as an int.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: 'not-a-#-but-truthy'
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileNamepng.123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Will ignore any decimal amount when evaluating for extension length.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: 4.98
      };
      var actualFileName = 'my$Invalid#fileName.png123';
      var expectedFileName = 'myInvalidfileNamepn.g123';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
    it('Only considers the last dotted part as the extension.', function (done) {
      var fileUploadOptions = {
        safeFileNames: true,
        preserveExtension: true
      };
      var actualFileName = 'basket.ball.bp';
      var expectedFileName = 'basketball.bp';
      executeFileUploadTestWalk(fileUploadOptions, actualFileName, expectedFileName, done);
    });
  });
});