'use strict';

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.join");

var path = require('path');

var request = require('supertest');

var assert = require('assert');

var server = require('./server');

var clearUploadsDir = server.clearUploadsDir;
var fileDir = server.fileDir;
describe('Test Single File Upload With File Size Limit', function () {
  var app;
  beforeEach(function () {
    clearUploadsDir();
  });
  describe('abort connection on limit reached', function () {
    before(function () {
      app = server.setup({
        limits: {
          fileSize: 200 * 1024
        },
        // set 200kb upload limit
        abortOnLimit: true
      });
    });
    it("upload 'basketball.png' (~154kb) with 200kb size limit", function (done) {
      var filePath = path.join(fileDir, 'basketball.png');
      request(app).post('/upload/single/truncated').attach('testFile', filePath).expect(200).end(done);
    });
    it("fail when uploading 'car.png' (~269kb) with 200kb size limit", function (done) {
      var filePath = path.join(fileDir, 'car.png');
      request(app).post('/upload/single/truncated').attach('testFile', filePath).expect(413).end(done);
    });
  });
  describe('pass truncated file to the next handler', function () {
    before(function () {
      app = server.setup({
        limits: {
          fileSize: 200 * 1024
        } // set 200kb upload limit

      });
    });
    it("fail when uploading 'car.png' (~269kb) with 200kb size limit", function (done) {
      var filePath = path.join(fileDir, 'car.png');
      request(app).post('/upload/single/truncated').attach('testFile', filePath).expect(400).end(function (err, res) {
        assert.ok(res.error.text === 'File too big');
        done();
      });
    });
  });
});