J$.iids = {"8":[37,16,37,37],"9":[3,3,3,7],"10":[22,5,22,26],"16":[35,9,35,29],"17":[3,24,3,37],"18":[35,9,35,29],"24":[60,9,60,21],"25":[3,3,3,37],"26":[37,16,37,37],"32":[64,9,64,29],"33":[3,3,3,38],"34":[51,12,51,51],"41":[4,3,4,7],"42":[51,12,51,75],"49":[4,22,4,33],"50":[60,9,60,21],"57":[4,3,4,33],"58":[65,26,65,50],"65":[4,3,4,34],"73":[5,3,5,7],"81":[5,20,5,22],"89":[5,3,5,22],"97":[5,3,5,23],"105":[6,3,6,7],"113":[6,25,6,26],"121":[6,3,6,26],"129":[6,3,6,27],"137":[7,3,7,7],"145":[7,17,7,19],"153":[7,3,7,19],"161":[7,3,7,20],"169":[8,3,8,7],"177":[8,17,8,19],"185":[8,3,8,19],"193":[8,3,8,20],"201":[9,3,9,7],"209":[9,17,9,22],"217":[9,3,9,22],"225":[9,3,9,23],"233":[2,1,10,2],"241":[2,1,10,2],"249":[2,1,10,2],"257":[2,1,10,2],"265":[12,1,12,15],"273":[20,17,20,21],"281":[20,17,20,36],"289":[20,17,20,36],"297":[20,17,20,36],"305":[21,5,21,9],"313":[21,5,21,19],"321":[21,20,21,25],"329":[21,29,21,33],"337":[21,5,21,33],"345":[21,5,21,34],"353":[22,5,22,9],"369":[22,5,22,26],"371":[22,5,22,26],"385":[22,5,22,27],"393":[23,12,23,17],"401":[23,12,23,17],"409":[23,5,23,18],"417":[19,8,24,4],"425":[19,8,24,4],"433":[19,8,24,4],"441":[19,8,24,4],"449":[19,8,24,4],"457":[19,8,24,4],"465":[33,16,33,20],"473":[33,16,33,30],"481":[33,31,33,36],"489":[33,16,33,37],"497":[33,16,33,37],"505":[33,16,33,37],"513":[35,9,35,13],"521":[35,9,35,20],"529":[35,25,35,29],"537":[36,7,36,11],"545":[36,7,36,18],"553":[36,24,36,28],"561":[36,7,36,29],"563":[36,7,36,23],"569":[36,7,36,30],"577":[37,16,37,20],"585":[37,16,37,27],"593":[37,32,37,37],"601":[38,7,38,11],"609":[38,7,38,18],"617":[38,24,38,28],"625":[38,7,38,29],"627":[38,7,38,23],"633":[38,7,38,30],"641":[39,7,39,11],"649":[39,24,39,28],"657":[39,7,39,29],"659":[39,7,39,23],"665":[39,7,39,30],"673":[42,5,42,9],"681":[42,5,42,16],"683":[42,5,42,14],"689":[42,5,42,17],"697":[32,12,43,4],"705":[32,12,43,4],"713":[32,12,43,4],"721":[32,12,43,4],"729":[32,12,43,4],"737":[32,12,43,4],"745":[51,12,51,16],"753":[51,12,51,23],"761":[51,12,51,30],"769":[51,33,51,37],"777":[51,33,51,44],"785":[51,33,51,51],"793":[51,56,51,60],"801":[51,56,51,75],"809":[51,12,51,75],"817":[51,5,51,76],"825":[50,18,52,4],"833":[50,18,52,4],"841":[50,18,52,4],"849":[50,18,52,4],"857":[60,10,60,14],"865":[60,10,60,21],"873":[61,7,61,14],"881":[61,7,61,14],"889":[64,9,64,13],"897":[64,9,64,29],"899":[64,9,64,27],"905":[65,7,65,11],"913":[65,26,65,30],"921":[65,26,65,37],"929":[65,26,65,44],"937":[65,49,65,50],"945":[65,7,65,51],"947":[65,7,65,25],"953":[65,7,65,52],"961":[59,9,67,4],"969":[59,9,67,4],"977":[59,9,67,4],"985":[59,9,67,4],"993":[75,5,75,9],"1001":[75,19,75,23],"1009":[75,5,75,23],"1017":[75,5,75,24],"1025":[74,17,76,4],"1033":[74,17,76,4],"1041":[74,17,76,4],"1049":[74,17,76,4],"1057":[12,28,76,6],"1065":[12,1,76,6],"1073":[12,1,76,7],"1081":[78,1,78,7],"1089":[78,18,78,32],"1097":[78,1,78,32],"1105":[78,1,78,33],"1113":[1,1,78,33],"1121":[2,1,10,2],"1129":[1,1,78,33],"1137":[2,1,10,2],"1145":[2,1,10,2],"1153":[19,8,24,4],"1161":[19,8,24,4],"1169":[37,12,40,6],"1177":[35,5,40,6],"1185":[32,12,43,4],"1193":[32,12,43,4],"1201":[50,18,52,4],"1209":[50,18,52,4],"1217":[60,5,62,6],"1225":[64,5,66,6],"1233":[59,9,67,4],"1241":[59,9,67,4],"1249":[74,17,76,4],"1257":[74,17,76,4],"1265":[1,1,78,33],"1273":[1,1,78,33],"nBranches":8,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/async.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/async_jalangi_.js","code":"\"use strict\";\n\nfunction AsyncResolvers(onFailedOne, onResolvedAll) {\n  this.onResolvedAll = onResolvedAll;\n  this.onFailedOne = onFailedOne;\n  this.resolvers = {};\n  this.resolversCount = 0;\n  this.passed = [];\n  this.failed = [];\n  this.firing = false;\n}\n\nAsyncResolvers.prototype = {\n  /**\n   * Add resolver\n   *\n   * @param {Rule} rule\n   * @return {integer}\n   */\n  add: function add(rule) {\n    var index = this.resolversCount;\n    this.resolvers[index] = rule;\n    this.resolversCount++;\n    return index;\n  },\n\n  /**\n   * Resolve given index\n   *\n   * @param  {integer} index\n   * @return {void}\n   */\n  resolve: function resolve(index) {\n    var rule = this.resolvers[index];\n\n    if (rule.passes === true) {\n      this.passed.push(rule);\n    } else if (rule.passes === false) {\n      this.failed.push(rule);\n      this.onFailedOne(rule);\n    }\n\n    this.fire();\n  },\n\n  /**\n   * Determine if all have been resolved\n   *\n   * @return {boolean}\n   */\n  isAllResolved: function isAllResolved() {\n    return this.passed.length + this.failed.length === this.resolversCount;\n  },\n\n  /**\n   * Attempt to fire final all resolved callback if completed\n   *\n   * @return {void}\n   */\n  fire: function fire() {\n    if (!this.firing) {\n      return;\n    }\n\n    if (this.isAllResolved()) {\n      this.onResolvedAll(this.failed.length === 0);\n    }\n  },\n\n  /**\n   * Enable firing\n   *\n   * @return {void}\n   */\n  enableFiring: function enableFiring() {\n    this.firing = true;\n  }\n};\nmodule.exports = AsyncResolvers;"};
jalangiLabel199:
    while (true) {
        try {
            J$.Se(1113, '/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/async_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/async.js');
            function AsyncResolvers(onFailedOne, onResolvedAll) {
                jalangiLabel193:
                    while (true) {
                        try {
                            J$.Fe(233, arguments.callee, this, arguments);
                            arguments = J$.N(241, 'arguments', arguments, 4);
                            onFailedOne = J$.N(249, 'onFailedOne', onFailedOne, 4);
                            onResolvedAll = J$.N(257, 'onResolvedAll', onResolvedAll, 4);
                            J$.X1(33, J$.P(25, J$.R(9, 'this', this, 0), 'onResolvedAll', J$.R(17, 'onResolvedAll', onResolvedAll, 0), 0));
                            J$.X1(65, J$.P(57, J$.R(41, 'this', this, 0), 'onFailedOne', J$.R(49, 'onFailedOne', onFailedOne, 0), 0));
                            J$.X1(97, J$.P(89, J$.R(73, 'this', this, 0), 'resolvers', J$.T(81, {}, 11, false), 0));
                            J$.X1(129, J$.P(121, J$.R(105, 'this', this, 0), 'resolversCount', J$.T(113, 0, 22, false), 0));
                            J$.X1(161, J$.P(153, J$.R(137, 'this', this, 0), 'passed', J$.T(145, [], 10, false), 0));
                            J$.X1(193, J$.P(185, J$.R(169, 'this', this, 0), 'failed', J$.T(177, [], 10, false), 0));
                            J$.X1(225, J$.P(217, J$.R(201, 'this', this, 0), 'firing', J$.T(209, false, 23, false), 0));
                        } catch (J$e) {
                            J$.Ex(1137, J$e);
                        } finally {
                            if (J$.Fr(1145))
                                continue jalangiLabel193;
                            else
                                return J$.Ra();
                        }
                    }
            }
            AsyncResolvers = J$.N(1129, 'AsyncResolvers', J$.T(1121, AsyncResolvers, 12, false, 233), 0);
            J$.X1(1073, J$.P(1065, J$.R(265, 'AsyncResolvers', AsyncResolvers, 1), 'prototype', J$.T(1057, {
                add: J$.T(457, function add(rule) {
                    jalangiLabel194:
                        while (true) {
                            try {
                                J$.Fe(417, arguments.callee, this, arguments);
                                arguments = J$.N(425, 'arguments', arguments, 4);
                                add = J$.N(433, 'add', add, 0);
                                rule = J$.N(441, 'rule', rule, 4);
                                J$.N(449, 'index', index, 0);
                                var index = J$.X1(297, J$.W(289, 'index', J$.G(281, J$.R(273, 'this', this, 0), 'resolversCount', 0), index, 1));
                                J$.X1(345, J$.P(337, J$.G(313, J$.R(305, 'this', this, 0), 'resolvers', 0), J$.R(321, 'index', index, 0), J$.R(329, 'rule', rule, 0), 2));
                                J$.X1(385, J$.B(10, '-', J$.A(369, J$.R(353, 'this', this, 0), 'resolversCount', '+', 0)(J$.T(361, 1, 22, false)), J$.T(377, 1, 22, false), 0));
                                return J$.X1(409, J$.Rt(401, J$.R(393, 'index', index, 0)));
                            } catch (J$e) {
                                J$.Ex(1153, J$e);
                            } finally {
                                if (J$.Fr(1161))
                                    continue jalangiLabel194;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 417),
                resolve: J$.T(737, function resolve(index) {
                    jalangiLabel195:
                        while (true) {
                            try {
                                J$.Fe(697, arguments.callee, this, arguments);
                                arguments = J$.N(705, 'arguments', arguments, 4);
                                resolve = J$.N(713, 'resolve', resolve, 0);
                                index = J$.N(721, 'index', index, 4);
                                J$.N(729, 'rule', rule, 0);
                                var rule = J$.X1(505, J$.W(497, 'rule', J$.G(489, J$.G(473, J$.R(465, 'this', this, 0), 'resolvers', 0), J$.R(481, 'index', index, 0), 4), rule, 1));
                                if (J$.X1(1177, J$.C(16, J$.B(18, '===', J$.G(521, J$.R(513, 'rule', rule, 0), 'passes', 0), J$.T(529, true, 23, false), 0)))) {
                                    J$.X1(569, J$.M(561, J$.G(545, J$.R(537, 'this', this, 0), 'passed', 0), 'push', 0)(J$.R(553, 'rule', rule, 0)));
                                } else if (J$.X1(1169, J$.C(8, J$.B(26, '===', J$.G(585, J$.R(577, 'rule', rule, 0), 'passes', 0), J$.T(593, false, 23, false), 0)))) {
                                    J$.X1(633, J$.M(625, J$.G(609, J$.R(601, 'this', this, 0), 'failed', 0), 'push', 0)(J$.R(617, 'rule', rule, 0)));
                                    J$.X1(665, J$.M(657, J$.R(641, 'this', this, 0), 'onFailedOne', 0)(J$.R(649, 'rule', rule, 0)));
                                }
                                J$.X1(689, J$.M(681, J$.R(673, 'this', this, 0), 'fire', 0)());
                            } catch (J$e) {
                                J$.Ex(1185, J$e);
                            } finally {
                                if (J$.Fr(1193))
                                    continue jalangiLabel195;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 697),
                isAllResolved: J$.T(849, function isAllResolved() {
                    jalangiLabel196:
                        while (true) {
                            try {
                                J$.Fe(825, arguments.callee, this, arguments);
                                arguments = J$.N(833, 'arguments', arguments, 4);
                                isAllResolved = J$.N(841, 'isAllResolved', isAllResolved, 0);
                                return J$.X1(817, J$.Rt(809, J$.B(42, '===', J$.B(34, '+', J$.G(761, J$.G(753, J$.R(745, 'this', this, 0), 'passed', 0), 'length', 0), J$.G(785, J$.G(777, J$.R(769, 'this', this, 0), 'failed', 0), 'length', 0), 0), J$.G(801, J$.R(793, 'this', this, 0), 'resolversCount', 0), 0)));
                            } catch (J$e) {
                                J$.Ex(1201, J$e);
                            } finally {
                                if (J$.Fr(1209))
                                    continue jalangiLabel196;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 825),
                fire: J$.T(985, function fire() {
                    jalangiLabel197:
                        while (true) {
                            try {
                                J$.Fe(961, arguments.callee, this, arguments);
                                arguments = J$.N(969, 'arguments', arguments, 4);
                                fire = J$.N(977, 'fire', fire, 0);
                                if (J$.X1(1217, J$.C(24, J$.U(50, '!', J$.G(865, J$.R(857, 'this', this, 0), 'firing', 0))))) {
                                    return J$.X1(881, J$.Rt(873, undefined));
                                }
                                if (J$.X1(1225, J$.C(32, J$.M(897, J$.R(889, 'this', this, 0), 'isAllResolved', 0)()))) {
                                    J$.X1(953, J$.M(945, J$.R(905, 'this', this, 0), 'onResolvedAll', 0)(J$.B(58, '===', J$.G(929, J$.G(921, J$.R(913, 'this', this, 0), 'failed', 0), 'length', 0), J$.T(937, 0, 22, false), 0)));
                                }
                            } catch (J$e) {
                                J$.Ex(1233, J$e);
                            } finally {
                                if (J$.Fr(1241))
                                    continue jalangiLabel197;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 961),
                enableFiring: J$.T(1049, function enableFiring() {
                    jalangiLabel198:
                        while (true) {
                            try {
                                J$.Fe(1025, arguments.callee, this, arguments);
                                arguments = J$.N(1033, 'arguments', arguments, 4);
                                enableFiring = J$.N(1041, 'enableFiring', enableFiring, 0);
                                J$.X1(1017, J$.P(1009, J$.R(993, 'this', this, 0), 'firing', J$.T(1001, true, 23, false), 0));
                            } catch (J$e) {
                                J$.Ex(1249, J$e);
                            } finally {
                                if (J$.Fr(1257))
                                    continue jalangiLabel198;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1025)
            }, 11, false), 0));
            J$.X1(1105, J$.P(1097, J$.R(1081, 'module', module, 2), 'exports', J$.R(1089, 'AsyncResolvers', AsyncResolvers, 1), 0));
        } catch (J$e) {
            J$.Ex(1265, J$e);
        } finally {
            if (J$.Sr(1273)) {
                J$.L();
                continue jalangiLabel199;
            } else {
                J$.L();
                break jalangiLabel199;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
