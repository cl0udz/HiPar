J$.iids = {"8":[17,9,17,29],"9":[3,3,3,7],"10":[17,9,17,29],"16":[21,9,21,55],"17":[3,17,3,19],"18":[21,53,21,55],"24":[33,9,33,28],"25":[3,3,3,19],"26":[21,9,21,55],"32":[47,9,47,28],"33":[3,3,3,20],"40":[70,9,70,46],"41":[2,14,4,2],"49":[2,14,4,2],"57":[2,14,4,2],"65":[2,14,4,2],"73":[2,14,4,2],"81":[2,14,4,2],"89":[6,1,6,7],"97":[7,16,7,22],"105":[17,10,17,14],"113":[17,19,17,28],"121":[17,10,17,29],"123":[17,10,17,18],"129":[18,7,18,11],"137":[18,7,18,18],"145":[18,19,18,28],"153":[18,32,18,34],"161":[18,7,18,34],"169":[18,7,18,35],"177":[21,9,21,13],"185":[21,9,21,20],"193":[21,21,21,30],"201":[21,9,21,31],"209":[21,40,21,47],"217":[21,9,21,48],"219":[21,9,21,39],"225":[21,54,21,55],"233":[22,7,22,11],"241":[22,7,22,18],"249":[22,19,22,28],"257":[22,7,22,29],"265":[22,35,22,42],"273":[22,7,22,43],"275":[22,7,22,34],"281":[22,7,22,44],"289":[16,8,24,4],"297":[16,8,24,4],"305":[16,8,24,4],"313":[16,8,24,4],"321":[16,8,24,4],"329":[16,8,24,4],"337":[33,9,33,13],"345":[33,18,33,27],"353":[33,9,33,28],"355":[33,9,33,17],"361":[34,14,34,18],"369":[34,14,34,25],"377":[34,26,34,35],"385":[34,14,34,36],"393":[34,14,34,36],"401":[34,7,34,37],"409":[37,12,37,14],"417":[37,12,37,14],"425":[37,5,37,15],"433":[32,8,38,4],"441":[32,8,38,4],"449":[32,8,38,4],"457":[32,8,38,4],"465":[32,8,38,4],"473":[47,9,47,13],"481":[47,18,47,27],"489":[47,9,47,28],"491":[47,9,47,17],"497":[48,14,48,18],"505":[48,14,48,25],"513":[48,26,48,35],"521":[48,14,48,36],"529":[48,37,48,38],"537":[48,14,48,39],"545":[48,14,48,39],"553":[48,7,48,40],"561":[51,12,51,17],"569":[51,12,51,17],"577":[51,5,51,18],"585":[46,10,52,4],"593":[46,10,52,4],"601":[46,10,52,4],"609":[46,10,52,4],"617":[46,10,52,4],"625":[60,12,60,16],"633":[60,12,60,23],"641":[60,12,60,23],"649":[60,5,60,24],"657":[59,8,61,4],"665":[59,8,61,4],"673":[59,8,61,4],"681":[59,8,61,4],"689":[70,9,70,13],"697":[70,9,70,20],"705":[70,36,70,45],"713":[70,9,70,46],"715":[70,9,70,35],"721":[71,14,71,18],"729":[71,14,71,18],"737":[71,7,71,19],"745":[74,12,74,17],"753":[74,12,74,17],"761":[74,5,74,18],"769":[69,8,75,4],"777":[69,8,75,4],"785":[69,8,75,4],"793":[69,8,75,4],"801":[69,8,75,4],"809":[6,20,75,6],"817":[6,1,75,6],"825":[6,1,75,7],"833":[77,1,77,7],"841":[77,18,77,24],"849":[77,1,77,24],"857":[77,1,77,25],"865":[1,1,77,25],"873":[1,1,77,25],"881":[2,14,4,2],"889":[2,14,4,2],"897":[17,5,19,6],"905":[21,5,23,6],"913":[16,8,24,4],"921":[16,8,24,4],"929":[33,5,35,6],"937":[32,8,38,4],"945":[32,8,38,4],"953":[47,5,49,6],"961":[46,10,52,4],"969":[46,10,52,4],"977":[59,8,61,4],"985":[59,8,61,4],"993":[70,5,72,6],"1001":[69,8,75,4],"1009":[69,8,75,4],"1017":[1,1,77,25],"1025":[1,1,77,25],"nBranches":10,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/errors.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/errors_jalangi_.js","code":"\"use strict\";\n\nvar Errors = function Errors() {\n  this.errors = {};\n};\n\nErrors.prototype = {\n  constructor: Errors,\n\n  /**\n   * Add new error message for given attribute\n   *\n   * @param  {string} attribute\n   * @param  {string} message\n   * @return {void}\n   */\n  add: function add(attribute, message) {\n    if (!this.has(attribute)) {\n      this.errors[attribute] = [];\n    }\n\n    if (this.errors[attribute].indexOf(message) === -1) {\n      this.errors[attribute].push(message);\n    }\n  },\n\n  /**\n   * Returns an array of error messages for an attribute, or an empty array\n   *\n   * @param  {string} attribute A key in the data object being validated\n   * @return {array} An array of error messages\n   */\n  get: function get(attribute) {\n    if (this.has(attribute)) {\n      return this.errors[attribute];\n    }\n\n    return [];\n  },\n\n  /**\n   * Returns the first error message for an attribute, false otherwise\n   *\n   * @param  {string} attribute A key in the data object being validated\n   * @return {string|false} First error message or false\n   */\n  first: function first(attribute) {\n    if (this.has(attribute)) {\n      return this.errors[attribute][0];\n    }\n\n    return false;\n  },\n\n  /**\n   * Get all error messages from all failing attributes\n   *\n   * @return {Object} Failed attribute names for keys and an array of messages for values\n   */\n  all: function all() {\n    return this.errors;\n  },\n\n  /**\n   * Determine if there are any error messages for an attribute\n   *\n   * @param  {string}  attribute A key in the data object being validated\n   * @return {boolean}\n   */\n  has: function has(attribute) {\n    if (this.errors.hasOwnProperty(attribute)) {\n      return true;\n    }\n\n    return false;\n  }\n};\nmodule.exports = Errors;"};
jalangiLabel192:
    while (true) {
        try {
            J$.Se(865, '/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/errors_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/errors.js');
            J$.N(873, 'Errors', Errors, 0);
            var Errors = J$.X1(81, J$.W(73, 'Errors', J$.T(65, function Errors() {
                jalangiLabel186:
                    while (true) {
                        try {
                            J$.Fe(41, arguments.callee, this, arguments);
                            arguments = J$.N(49, 'arguments', arguments, 4);
                            Errors = J$.N(57, 'Errors', Errors, 0);
                            J$.X1(33, J$.P(25, J$.R(9, 'this', this, 0), 'errors', J$.T(17, {}, 11, false), 0));
                        } catch (J$e) {
                            J$.Ex(881, J$e);
                        } finally {
                            if (J$.Fr(889))
                                continue jalangiLabel186;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 41), Errors, 3));
            J$.X1(825, J$.P(817, J$.R(89, 'Errors', Errors, 1), 'prototype', J$.T(809, {
                constructor: J$.R(97, 'Errors', Errors, 1),
                add: J$.T(329, function add(attribute, message) {
                    jalangiLabel187:
                        while (true) {
                            try {
                                J$.Fe(289, arguments.callee, this, arguments);
                                arguments = J$.N(297, 'arguments', arguments, 4);
                                add = J$.N(305, 'add', add, 0);
                                attribute = J$.N(313, 'attribute', attribute, 4);
                                message = J$.N(321, 'message', message, 4);
                                if (J$.X1(897, J$.C(8, J$.U(10, '!', J$.M(121, J$.R(105, 'this', this, 0), 'has', 0)(J$.R(113, 'attribute', attribute, 0)))))) {
                                    J$.X1(169, J$.P(161, J$.G(137, J$.R(129, 'this', this, 0), 'errors', 0), J$.R(145, 'attribute', attribute, 0), J$.T(153, [], 10, false), 2));
                                }
                                if (J$.X1(905, J$.C(16, J$.B(26, '===', J$.M(217, J$.G(201, J$.G(185, J$.R(177, 'this', this, 0), 'errors', 0), J$.R(193, 'attribute', attribute, 0), 4), 'indexOf', 0)(J$.R(209, 'message', message, 0)), J$.U(18, '-', J$.T(225, 1, 22, false)), 0)))) {
                                    J$.X1(281, J$.M(273, J$.G(257, J$.G(241, J$.R(233, 'this', this, 0), 'errors', 0), J$.R(249, 'attribute', attribute, 0), 4), 'push', 0)(J$.R(265, 'message', message, 0)));
                                }
                            } catch (J$e) {
                                J$.Ex(913, J$e);
                            } finally {
                                if (J$.Fr(921))
                                    continue jalangiLabel187;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 289),
                get: J$.T(465, function get(attribute) {
                    jalangiLabel188:
                        while (true) {
                            try {
                                J$.Fe(433, arguments.callee, this, arguments);
                                arguments = J$.N(441, 'arguments', arguments, 4);
                                get = J$.N(449, 'get', get, 0);
                                attribute = J$.N(457, 'attribute', attribute, 4);
                                if (J$.X1(929, J$.C(24, J$.M(353, J$.R(337, 'this', this, 0), 'has', 0)(J$.R(345, 'attribute', attribute, 0))))) {
                                    return J$.X1(401, J$.Rt(393, J$.G(385, J$.G(369, J$.R(361, 'this', this, 0), 'errors', 0), J$.R(377, 'attribute', attribute, 0), 4)));
                                }
                                return J$.X1(425, J$.Rt(417, J$.T(409, [], 10, false)));
                            } catch (J$e) {
                                J$.Ex(937, J$e);
                            } finally {
                                if (J$.Fr(945))
                                    continue jalangiLabel188;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 433),
                first: J$.T(617, function first(attribute) {
                    jalangiLabel189:
                        while (true) {
                            try {
                                J$.Fe(585, arguments.callee, this, arguments);
                                arguments = J$.N(593, 'arguments', arguments, 4);
                                first = J$.N(601, 'first', first, 0);
                                attribute = J$.N(609, 'attribute', attribute, 4);
                                if (J$.X1(953, J$.C(32, J$.M(489, J$.R(473, 'this', this, 0), 'has', 0)(J$.R(481, 'attribute', attribute, 0))))) {
                                    return J$.X1(553, J$.Rt(545, J$.G(537, J$.G(521, J$.G(505, J$.R(497, 'this', this, 0), 'errors', 0), J$.R(513, 'attribute', attribute, 0), 4), J$.T(529, 0, 22, false), 4)));
                                }
                                return J$.X1(577, J$.Rt(569, J$.T(561, false, 23, false)));
                            } catch (J$e) {
                                J$.Ex(961, J$e);
                            } finally {
                                if (J$.Fr(969))
                                    continue jalangiLabel189;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 585),
                all: J$.T(681, function all() {
                    jalangiLabel190:
                        while (true) {
                            try {
                                J$.Fe(657, arguments.callee, this, arguments);
                                arguments = J$.N(665, 'arguments', arguments, 4);
                                all = J$.N(673, 'all', all, 0);
                                return J$.X1(649, J$.Rt(641, J$.G(633, J$.R(625, 'this', this, 0), 'errors', 0)));
                            } catch (J$e) {
                                J$.Ex(977, J$e);
                            } finally {
                                if (J$.Fr(985))
                                    continue jalangiLabel190;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 657),
                has: J$.T(801, function has(attribute) {
                    jalangiLabel191:
                        while (true) {
                            try {
                                J$.Fe(769, arguments.callee, this, arguments);
                                arguments = J$.N(777, 'arguments', arguments, 4);
                                has = J$.N(785, 'has', has, 0);
                                attribute = J$.N(793, 'attribute', attribute, 4);
                                if (J$.X1(993, J$.C(40, J$.M(713, J$.G(697, J$.R(689, 'this', this, 0), 'errors', 0), 'hasOwnProperty', 0)(J$.R(705, 'attribute', attribute, 0))))) {
                                    return J$.X1(737, J$.Rt(729, J$.T(721, true, 23, false)));
                                }
                                return J$.X1(761, J$.Rt(753, J$.T(745, false, 23, false)));
                            } catch (J$e) {
                                J$.Ex(1001, J$e);
                            } finally {
                                if (J$.Fr(1009))
                                    continue jalangiLabel191;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 769)
            }, 11, false), 0));
            J$.X1(857, J$.P(849, J$.R(833, 'module', module, 2), 'exports', J$.R(841, 'Errors', Errors, 1), 0));
        } catch (J$e) {
            J$.Ex(1017, J$e);
        } finally {
            if (J$.Sr(1025)) {
                J$.L();
                continue jalangiLabel192;
            } else {
                J$.L();
                break jalangiLabel192;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
