{"8":[32,9,32,30],"9":[2,16,2,23],"10":[32,9,32,30],"16":[46,9,46,29],"17":[2,24,2,36],"18":[46,9,46,29],"25":[2,16,2,37],"26":[48,42,48,58],"33":[2,16,2,37],"41":[2,16,2,37],"49":[4,1,4,8],"57":[4,9,4,20],"65":[4,1,4,21],"73":[4,1,4,22],"81":[6,22,6,29],"89":[6,22,6,29],"97":[6,22,6,29],"105":[8,13,8,15],"113":[18,5,18,9],"121":[18,5,18,18],"129":[18,19,18,23],"137":[18,27,18,38],"145":[18,5,18,38],"153":[18,5,18,39],"161":[17,9,19,4],"169":[17,9,19,4],"177":[17,9,19,4],"185":[17,9,19,4],"193":[17,9,19,4],"201":[17,9,19,4],"209":[30,5,30,9],"217":[30,16,30,20],"225":[30,5,30,21],"227":[30,5,30,15],"233":[30,5,30,22],"241":[32,9,32,16],"249":[32,21,32,30],"257":[33,17,33,21],"265":[33,17,33,30],"273":[33,31,33,35],"281":[33,17,33,36],"289":[33,17,33,40],"297":[33,17,33,40],"305":[33,7,33,41],"313":[36,5,36,9],"321":[36,5,36,18],"329":[36,19,36,23],"337":[36,5,36,24],"345":[36,25,36,34],"353":[36,38,36,45],"361":[36,5,36,45],"369":[36,5,36,46],"377":[29,20,37,4],"385":[29,20,37,4],"393":[29,20,37,4],"401":[29,20,37,4],"409":[29,20,37,4],"417":[29,20,37,4],"425":[29,20,37,4],"433":[46,10,46,14],"441":[46,10,46,23],"449":[46,24,46,28],"457":[46,10,46,29],"465":[48,27,48,41],"473":[48,42,48,51],"481":[48,54,48,58],"489":[48,27,48,59],"497":[48,27,48,59],"505":[48,27,48,59],"513":[50,9,50,13],"521":[50,19,50,23],"529":[50,25,50,36],"537":[50,9,50,37],"539":[50,9,50,18],"545":[50,9,50,38],"553":[51,9,51,21],"561":[45,10,53,4],"569":[45,10,53,4],"577":[45,10,53,4],"585":[45,10,53,4],"593":[45,10,53,4],"601":[45,10,53,4],"609":[62,5,62,9],"617":[62,16,62,20],"625":[62,5,62,21],"627":[62,5,62,15],"633":[62,5,62,22],"641":[64,12,64,16],"649":[64,12,64,25],"657":[64,26,64,30],"665":[64,12,64,31],"673":[64,12,64,31],"681":[64,5,64,32],"689":[61,9,65,4],"697":[61,9,65,4],"705":[61,9,65,4],"713":[61,9,65,4],"721":[61,9,65,4],"729":[74,5,74,9],"737":[74,16,74,20],"745":[74,5,74,21],"747":[74,5,74,15],"753":[74,5,74,22],"761":[76,16,76,24],"769":[76,25,76,29],"777":[76,31,76,35],"785":[76,31,76,44],"793":[76,45,76,49],"801":[76,31,76,50],"809":[76,12,76,51],"817":[76,12,76,51],"825":[76,5,76,52],"833":[73,10,77,4],"841":[73,10,77,4],"849":[73,10,77,4],"857":[73,10,77,4],"865":[73,10,77,4],"873":[7,17,77,6],"881":[7,17,77,6],"889":[7,17,77,6],"897":[79,1,79,7],"905":[79,18,79,27],"913":[79,1,79,27],"921":[79,1,79,28],"929":[1,1,79,28],"937":[1,1,79,28],"945":[1,1,79,28],"953":[1,1,79,28],"961":[17,9,19,4],"969":[17,9,19,4],"977":[32,5,34,6],"985":[29,20,37,4],"993":[29,20,37,4],"1001":[46,5,52,6],"1009":[45,10,53,4],"1017":[45,10,53,4],"1025":[61,9,65,4],"1033":[61,9,65,4],"1041":[73,10,77,4],"1049":[73,10,77,4],"1057":[1,1,79,28],"1065":[1,1,79,28],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/lang.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/lang_jalangi_.js","code":"\"use strict\";\n\nvar Messages = require('./messages');\n\nrequire('./lang/en');\n\nvar require_method = require;\nvar container = {\n  messages: {},\n\n  /**\n   * Set messages for language\n   *\n   * @param {string} lang\n   * @param {object} rawMessages\n   * @return {void}\n   */\n  _set: function _set(lang, rawMessages) {\n    this.messages[lang] = rawMessages;\n  },\n\n  /**\n   * Set message for given language's rule.\n   *\n   * @param {string} lang\n   * @param {string} attribute\n   * @param {string|object} message\n   * @return {void}\n   */\n  _setRuleMessage: function _setRuleMessage(lang, attribute, message) {\n    this._load(lang);\n\n    if (message === undefined) {\n      message = this.messages[lang].def;\n    }\n\n    this.messages[lang][attribute] = message;\n  },\n\n  /**\n   * Load messages (if not already loaded)\n   *\n   * @param  {string} lang\n   * @return {void}\n   */\n  _load: function _load(lang) {\n    if (!this.messages[lang]) {\n      try {\n        var rawMessages = require_method('./lang/' + lang);\n\n        this._set(lang, rawMessages);\n      } catch (e) {}\n    }\n  },\n\n  /**\n   * Get raw messages for language\n   *\n   * @param  {string} lang\n   * @return {object}\n   */\n  _get: function _get(lang) {\n    this._load(lang);\n\n    return this.messages[lang];\n  },\n\n  /**\n   * Make messages for given language\n   *\n   * @param  {string} lang\n   * @return {Messages}\n   */\n  _make: function _make(lang) {\n    this._load(lang);\n\n    return new Messages(lang, this.messages[lang]);\n  }\n};\nmodule.exports = container;"}