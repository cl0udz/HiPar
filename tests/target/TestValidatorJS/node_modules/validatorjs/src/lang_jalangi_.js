J$.iids = {"8":[32,9,32,30],"9":[2,16,2,23],"10":[32,9,32,30],"16":[46,9,46,29],"17":[2,24,2,36],"18":[46,9,46,29],"25":[2,16,2,37],"26":[48,42,48,58],"33":[2,16,2,37],"41":[2,16,2,37],"49":[4,1,4,8],"57":[4,9,4,20],"65":[4,1,4,21],"73":[4,1,4,22],"81":[6,22,6,29],"89":[6,22,6,29],"97":[6,22,6,29],"105":[8,13,8,15],"113":[18,5,18,9],"121":[18,5,18,18],"129":[18,19,18,23],"137":[18,27,18,38],"145":[18,5,18,38],"153":[18,5,18,39],"161":[17,9,19,4],"169":[17,9,19,4],"177":[17,9,19,4],"185":[17,9,19,4],"193":[17,9,19,4],"201":[17,9,19,4],"209":[30,5,30,9],"217":[30,16,30,20],"225":[30,5,30,21],"227":[30,5,30,15],"233":[30,5,30,22],"241":[32,9,32,16],"249":[32,21,32,30],"257":[33,17,33,21],"265":[33,17,33,30],"273":[33,31,33,35],"281":[33,17,33,36],"289":[33,17,33,40],"297":[33,17,33,40],"305":[33,7,33,41],"313":[36,5,36,9],"321":[36,5,36,18],"329":[36,19,36,23],"337":[36,5,36,24],"345":[36,25,36,34],"353":[36,38,36,45],"361":[36,5,36,45],"369":[36,5,36,46],"377":[29,20,37,4],"385":[29,20,37,4],"393":[29,20,37,4],"401":[29,20,37,4],"409":[29,20,37,4],"417":[29,20,37,4],"425":[29,20,37,4],"433":[46,10,46,14],"441":[46,10,46,23],"449":[46,24,46,28],"457":[46,10,46,29],"465":[48,27,48,41],"473":[48,42,48,51],"481":[48,54,48,58],"489":[48,27,48,59],"497":[48,27,48,59],"505":[48,27,48,59],"513":[50,9,50,13],"521":[50,19,50,23],"529":[50,25,50,36],"537":[50,9,50,37],"539":[50,9,50,18],"545":[50,9,50,38],"553":[51,9,51,21],"561":[45,10,53,4],"569":[45,10,53,4],"577":[45,10,53,4],"585":[45,10,53,4],"593":[45,10,53,4],"601":[45,10,53,4],"609":[62,5,62,9],"617":[62,16,62,20],"625":[62,5,62,21],"627":[62,5,62,15],"633":[62,5,62,22],"641":[64,12,64,16],"649":[64,12,64,25],"657":[64,26,64,30],"665":[64,12,64,31],"673":[64,12,64,31],"681":[64,5,64,32],"689":[61,9,65,4],"697":[61,9,65,4],"705":[61,9,65,4],"713":[61,9,65,4],"721":[61,9,65,4],"729":[74,5,74,9],"737":[74,16,74,20],"745":[74,5,74,21],"747":[74,5,74,15],"753":[74,5,74,22],"761":[76,16,76,24],"769":[76,25,76,29],"777":[76,31,76,35],"785":[76,31,76,44],"793":[76,45,76,49],"801":[76,31,76,50],"809":[76,12,76,51],"817":[76,12,76,51],"825":[76,5,76,52],"833":[73,10,77,4],"841":[73,10,77,4],"849":[73,10,77,4],"857":[73,10,77,4],"865":[73,10,77,4],"873":[7,17,77,6],"881":[7,17,77,6],"889":[7,17,77,6],"897":[79,1,79,7],"905":[79,18,79,27],"913":[79,1,79,27],"921":[79,1,79,28],"929":[1,1,79,28],"937":[1,1,79,28],"945":[1,1,79,28],"953":[1,1,79,28],"961":[17,9,19,4],"969":[17,9,19,4],"977":[32,5,34,6],"985":[29,20,37,4],"993":[29,20,37,4],"1001":[46,5,52,6],"1009":[45,10,53,4],"1017":[45,10,53,4],"1025":[61,9,65,4],"1033":[61,9,65,4],"1041":[73,10,77,4],"1049":[73,10,77,4],"1057":[1,1,79,28],"1065":[1,1,79,28],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/lang.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/lang_jalangi_.js","code":"\"use strict\";\n\nvar Messages = require('./messages');\n\nrequire('./lang/en');\n\nvar require_method = require;\nvar container = {\n  messages: {},\n\n  /**\n   * Set messages for language\n   *\n   * @param {string} lang\n   * @param {object} rawMessages\n   * @return {void}\n   */\n  _set: function _set(lang, rawMessages) {\n    this.messages[lang] = rawMessages;\n  },\n\n  /**\n   * Set message for given language's rule.\n   *\n   * @param {string} lang\n   * @param {string} attribute\n   * @param {string|object} message\n   * @return {void}\n   */\n  _setRuleMessage: function _setRuleMessage(lang, attribute, message) {\n    this._load(lang);\n\n    if (message === undefined) {\n      message = this.messages[lang].def;\n    }\n\n    this.messages[lang][attribute] = message;\n  },\n\n  /**\n   * Load messages (if not already loaded)\n   *\n   * @param  {string} lang\n   * @return {void}\n   */\n  _load: function _load(lang) {\n    if (!this.messages[lang]) {\n      try {\n        var rawMessages = require_method('./lang/' + lang);\n\n        this._set(lang, rawMessages);\n      } catch (e) {}\n    }\n  },\n\n  /**\n   * Get raw messages for language\n   *\n   * @param  {string} lang\n   * @return {object}\n   */\n  _get: function _get(lang) {\n    this._load(lang);\n\n    return this.messages[lang];\n  },\n\n  /**\n   * Make messages for given language\n   *\n   * @param  {string} lang\n   * @return {Messages}\n   */\n  _make: function _make(lang) {\n    this._load(lang);\n\n    return new Messages(lang, this.messages[lang]);\n  }\n};\nmodule.exports = container;"};
jalangiLabel154:
    while (true) {
        try {
            J$.Se(929, '/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/lang_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/validatorjs/src/lang.js');
            J$.N(937, 'Messages', Messages, 0);
            J$.N(945, 'require_method', require_method, 0);
            J$.N(953, 'container', container, 0);
            var Messages = J$.X1(41, J$.W(33, 'Messages', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './messages', 21, false)), Messages, 3));
            J$.X1(73, J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, './lang/en', 21, false)));
            var require_method = J$.X1(97, J$.W(89, 'require_method', J$.R(81, 'require', require, 2), require_method, 3));
            var container = J$.X1(889, J$.W(881, 'container', J$.T(873, {
                messages: J$.T(105, {}, 11, false),
                _set: J$.T(201, function _set(lang, rawMessages) {
                    jalangiLabel149:
                        while (true) {
                            try {
                                J$.Fe(161, arguments.callee, this, arguments);
                                arguments = J$.N(169, 'arguments', arguments, 4);
                                _set = J$.N(177, '_set', _set, 0);
                                lang = J$.N(185, 'lang', lang, 4);
                                rawMessages = J$.N(193, 'rawMessages', rawMessages, 4);
                                J$.X1(153, J$.P(145, J$.G(121, J$.R(113, 'this', this, 0), 'messages', 0), J$.R(129, 'lang', lang, 0), J$.R(137, 'rawMessages', rawMessages, 0), 2));
                            } catch (J$e) {
                                J$.Ex(961, J$e);
                            } finally {
                                if (J$.Fr(969))
                                    continue jalangiLabel149;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 161),
                _setRuleMessage: J$.T(425, function _setRuleMessage(lang, attribute, message) {
                    jalangiLabel150:
                        while (true) {
                            try {
                                J$.Fe(377, arguments.callee, this, arguments);
                                arguments = J$.N(385, 'arguments', arguments, 4);
                                _setRuleMessage = J$.N(393, '_setRuleMessage', _setRuleMessage, 0);
                                lang = J$.N(401, 'lang', lang, 4);
                                attribute = J$.N(409, 'attribute', attribute, 4);
                                message = J$.N(417, 'message', message, 4);
                                J$.X1(233, J$.M(225, J$.R(209, 'this', this, 0), '_load', 0)(J$.R(217, 'lang', lang, 0)));
                                if (J$.X1(977, J$.C(8, J$.B(10, '===', J$.R(241, 'message', message, 0), J$.T(249, undefined, 24, false), 0)))) {
                                    J$.X1(305, message = J$.W(297, 'message', J$.G(289, J$.G(281, J$.G(265, J$.R(257, 'this', this, 0), 'messages', 0), J$.R(273, 'lang', lang, 0), 4), 'def', 0), message, 0));
                                }
                                J$.X1(369, J$.P(361, J$.G(337, J$.G(321, J$.R(313, 'this', this, 0), 'messages', 0), J$.R(329, 'lang', lang, 0), 4), J$.R(345, 'attribute', attribute, 0), J$.R(353, 'message', message, 0), 2));
                            } catch (J$e) {
                                J$.Ex(985, J$e);
                            } finally {
                                if (J$.Fr(993))
                                    continue jalangiLabel150;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 377),
                _load: J$.T(601, function _load(lang) {
                    jalangiLabel151:
                        while (true) {
                            try {
                                J$.Fe(561, arguments.callee, this, arguments);
                                arguments = J$.N(569, 'arguments', arguments, 4);
                                _load = J$.N(577, '_load', _load, 0);
                                lang = J$.N(585, 'lang', lang, 4);
                                J$.N(593, 'rawMessages', rawMessages, 0);
                                if (J$.X1(1001, J$.C(16, J$.U(18, '!', J$.G(457, J$.G(441, J$.R(433, 'this', this, 0), 'messages', 0), J$.R(449, 'lang', lang, 0), 4))))) {
                                    try {
                                        var rawMessages = J$.X1(505, J$.W(497, 'rawMessages', J$.F(489, J$.R(465, 'require_method', require_method, 1), 0)(J$.B(26, '+', J$.T(473, './lang/', 21, false), J$.R(481, 'lang', lang, 0), 0)), rawMessages, 1));
                                        J$.X1(545, J$.M(537, J$.R(513, 'this', this, 0), '_set', 0)(J$.R(521, 'lang', lang, 0), J$.R(529, 'rawMessages', rawMessages, 0)));
                                    } catch (e) {
                                        e = J$.N(553, 'e', e, 1);
                                    }
                                }
                            } catch (J$e) {
                                J$.Ex(1009, J$e);
                            } finally {
                                if (J$.Fr(1017))
                                    continue jalangiLabel151;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 561),
                _get: J$.T(721, function _get(lang) {
                    jalangiLabel152:
                        while (true) {
                            try {
                                J$.Fe(689, arguments.callee, this, arguments);
                                arguments = J$.N(697, 'arguments', arguments, 4);
                                _get = J$.N(705, '_get', _get, 0);
                                lang = J$.N(713, 'lang', lang, 4);
                                J$.X1(633, J$.M(625, J$.R(609, 'this', this, 0), '_load', 0)(J$.R(617, 'lang', lang, 0)));
                                return J$.X1(681, J$.Rt(673, J$.G(665, J$.G(649, J$.R(641, 'this', this, 0), 'messages', 0), J$.R(657, 'lang', lang, 0), 4)));
                            } catch (J$e) {
                                J$.Ex(1025, J$e);
                            } finally {
                                if (J$.Fr(1033))
                                    continue jalangiLabel152;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 689),
                _make: J$.T(865, function _make(lang) {
                    jalangiLabel153:
                        while (true) {
                            try {
                                J$.Fe(833, arguments.callee, this, arguments);
                                arguments = J$.N(841, 'arguments', arguments, 4);
                                _make = J$.N(849, '_make', _make, 0);
                                lang = J$.N(857, 'lang', lang, 4);
                                J$.X1(753, J$.M(745, J$.R(729, 'this', this, 0), '_load', 0)(J$.R(737, 'lang', lang, 0)));
                                return J$.X1(825, J$.Rt(817, J$.F(809, J$.R(761, 'Messages', Messages, 1), 1)(J$.R(769, 'lang', lang, 0), J$.G(801, J$.G(785, J$.R(777, 'this', this, 0), 'messages', 0), J$.R(793, 'lang', lang, 0), 4))));
                            } catch (J$e) {
                                J$.Ex(1041, J$e);
                            } finally {
                                if (J$.Fr(1049))
                                    continue jalangiLabel153;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 833)
            }, 11, false), container, 3));
            J$.X1(921, J$.P(913, J$.R(897, 'module', module, 2), 'exports', J$.R(905, 'container', container, 1), 0));
        } catch (J$e) {
            J$.Ex(1057, J$e);
        } finally {
            if (J$.Sr(1065)) {
                J$.L();
                continue jalangiLabel154;
            } else {
                J$.L();
                break jalangiLabel154;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
