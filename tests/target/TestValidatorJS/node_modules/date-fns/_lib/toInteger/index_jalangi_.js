J$.iids = {"8":[8,7,8,51],"9":[2,1,2,7],"10":[8,7,8,27],"16":[8,7,8,76],"17":[2,23,2,30],"18":[8,31,8,51],"24":[8,7,8,76],"25":[2,32,2,44],"26":[8,55,8,76],"32":[14,7,14,20],"33":[3,10,3,14],"34":[18,10,18,20],"40":[18,10,18,20],"41":[2,46,3,16],"49":[2,1,3,17],"51":[2,1,2,22],"57":[2,1,3,18],"65":[5,1,5,8],"73":[5,9,5,18],"81":[5,22,5,31],"89":[5,1,5,31],"97":[5,1,5,32],"105":[8,7,8,18],"113":[8,23,8,27],"121":[8,31,8,42],"129":[8,47,8,51],"137":[8,55,8,66],"145":[8,71,8,76],"153":[9,12,9,15],"161":[9,12,9,15],"169":[9,5,9,16],"177":[12,16,12,22],"185":[12,23,12,34],"193":[12,16,12,35],"201":[12,16,12,35],"209":[12,16,12,35],"217":[14,7,14,12],"225":[14,13,14,19],"233":[14,7,14,20],"241":[15,12,15,18],"249":[15,12,15,18],"257":[15,5,15,19],"265":[18,10,18,16],"273":[18,19,18,20],"281":[18,23,18,27],"289":[18,33,18,39],"297":[18,23,18,40],"299":[18,23,18,32],"305":[18,43,18,47],"313":[18,54,18,60],"321":[18,43,18,61],"323":[18,43,18,53],"329":[18,10,18,61],"337":[18,3,18,62],"345":[7,1,19,2],"353":[7,1,19,2],"361":[7,1,19,2],"369":[7,1,19,2],"377":[21,1,21,7],"385":[21,18,21,25],"393":[21,26,21,35],"401":[21,18,21,36],"409":[21,1,21,36],"417":[21,1,21,37],"425":[1,1,21,37],"433":[7,1,19,2],"441":[1,1,21,37],"449":[8,3,10,4],"457":[14,3,16,4],"465":[18,10,18,61],"473":[7,1,19,2],"481":[7,1,19,2],"489":[1,1,21,37],"497":[1,1,21,37],"nBranches":10,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/date-fns/_lib/toInteger/index.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/date-fns/_lib/toInteger/index_jalangi_.js","code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = toInteger;\n\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\n\nmodule.exports = exports[\"default\"];"};
jalangiLabel146:
    while (true) {
        try {
            J$.Se(425, '/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/date-fns/_lib/toInteger/index_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/date-fns/_lib/toInteger/index.js');
            function toInteger(dirtyNumber) {
                jalangiLabel145:
                    while (true) {
                        try {
                            J$.Fe(345, arguments.callee, this, arguments);
                            arguments = J$.N(353, 'arguments', arguments, 4);
                            dirtyNumber = J$.N(361, 'dirtyNumber', dirtyNumber, 4);
                            J$.N(369, 'number', number, 0);
                            if (J$.X1(449, J$.C(24, J$.C(16, J$.C(8, J$.B(10, '===', J$.R(105, 'dirtyNumber', dirtyNumber, 0), J$.T(113, null, 25, false), 0)) ? J$._() : J$.B(18, '===', J$.R(121, 'dirtyNumber', dirtyNumber, 0), J$.T(129, true, 23, false), 0)) ? J$._() : J$.B(26, '===', J$.R(137, 'dirtyNumber', dirtyNumber, 0), J$.T(145, false, 23, false), 0)))) {
                                return J$.X1(169, J$.Rt(161, J$.T(153, NaN, 22, false)));
                            }
                            var number = J$.X1(209, J$.W(201, 'number', J$.F(193, J$.R(177, 'Number', Number, 2), 0)(J$.R(185, 'dirtyNumber', dirtyNumber, 0)), number, 1));
                            if (J$.X1(457, J$.C(32, J$.F(233, J$.R(217, 'isNaN', isNaN, 2), 0)(J$.R(225, 'number', number, 0))))) {
                                return J$.X1(257, J$.Rt(249, J$.R(241, 'number', number, 0)));
                            }
                            return J$.X1(337, J$.Rt(329, J$.X1(465, J$.C(40, J$.B(34, '<', J$.R(265, 'number', number, 0), J$.T(273, 0, 22, false), 0))) ? J$.M(297, J$.R(281, 'Math', Math, 2), 'ceil', 0)(J$.R(289, 'number', number, 0)) : J$.M(321, J$.R(305, 'Math', Math, 2), 'floor', 0)(J$.R(313, 'number', number, 0))));
                        } catch (J$e) {
                            J$.Ex(473, J$e);
                        } finally {
                            if (J$.Fr(481))
                                continue jalangiLabel145;
                            else
                                return J$.Ra();
                        }
                    }
            }
            toInteger = J$.N(441, 'toInteger', J$.T(433, toInteger, 12, false, 345), 0);
            J$.X1(57, J$.M(49, J$.R(9, 'Object', Object, 2), 'defineProperty', 0)(J$.R(17, 'exports', exports, 2), J$.T(25, "__esModule", 21, false), J$.T(41, {
                value: J$.T(33, true, 23, false)
            }, 11, false)));
            J$.X1(97, J$.P(89, J$.R(65, 'exports', exports, 2), J$.T(73, "default", 21, false), J$.R(81, 'toInteger', toInteger, 1), 2));
            J$.X1(417, J$.P(409, J$.R(377, 'module', module, 2), 'exports', J$.G(401, J$.R(385, 'exports', exports, 2), J$.T(393, "default", 21, false), 4), 0));
        } catch (J$e) {
            J$.Ex(489, J$e);
        } finally {
            if (J$.Sr(497)) {
                J$.L();
                continue jalangiLabel146;
            } else {
                J$.L();
                break jalangiLabel146;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
