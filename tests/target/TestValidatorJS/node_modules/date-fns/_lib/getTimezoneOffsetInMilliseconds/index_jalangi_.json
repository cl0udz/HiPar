{"9":[2,1,2,7],"10":[23,42,23,81],"17":[2,23,2,30],"18":[24,10,24,53],"25":[2,32,2,44],"26":[24,10,24,88],"33":[3,10,3,14],"41":[2,46,3,16],"49":[2,1,3,17],"51":[2,1,2,22],"57":[2,1,3,18],"65":[5,1,5,8],"73":[5,9,5,18],"81":[5,22,5,53],"89":[5,1,5,53],"97":[5,1,5,54],"105":[6,30,6,35],"113":[6,30,6,35],"121":[6,30,6,35],"129":[20,18,20,22],"137":[20,23,20,32],"145":[20,23,20,42],"147":[20,23,20,40],"153":[20,14,20,43],"161":[20,14,20,43],"169":[20,14,20,43],"177":[21,28,21,32],"185":[21,28,21,52],"187":[21,28,21,50],"193":[21,28,21,52],"201":[21,28,21,52],"209":[22,3,22,7],"217":[22,19,22,20],"225":[22,22,22,23],"233":[22,3,22,24],"235":[22,3,22,18],"241":[22,3,22,25],"249":[23,42,23,46],"257":[23,42,23,56],"259":[23,42,23,54],"265":[23,59,23,81],"273":[23,42,23,81],"281":[23,42,23,81],"289":[24,10,24,28],"297":[24,31,24,53],"305":[24,56,24,88],"313":[24,10,24,88],"321":[24,3,24,89],"329":[19,1,25,2],"337":[19,1,25,2],"345":[19,1,25,2],"353":[19,1,25,2],"361":[19,1,25,2],"369":[19,1,25,2],"377":[27,1,27,7],"385":[27,18,27,25],"393":[27,26,27,35],"401":[27,18,27,36],"409":[27,1,27,36],"417":[27,1,27,37],"425":[1,1,27,37],"433":[1,1,27,37],"441":[19,1,25,2],"449":[1,1,27,37],"457":[19,1,25,2],"465":[19,1,25,2],"473":[1,1,27,37],"481":[1,1,27,37],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestValidatorJS/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index_jalangi_.js","code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getTimezoneOffsetInMilliseconds;\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nfunction getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}\n\nmodule.exports = exports[\"default\"];"}