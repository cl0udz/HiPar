{"8":[43,13,43,72],"9":[2,1,2,8],"10":[43,13,43,72],"17":[2,9,2,44],"18":[43,90,43,124],"25":[2,1,2,45],"26":[43,90,43,130],"33":[2,1,2,46],"34":[43,90,43,141],"41":[4,1,4,8],"42":[43,90,43,165],"49":[4,9,4,43],"50":[43,90,43,183],"57":[4,1,4,44],"65":[4,1,4,45],"73":[6,1,6,8],"81":[6,9,6,52],"89":[6,1,6,53],"97":[6,1,6,54],"105":[8,1,8,8],"113":[8,9,8,41],"121":[8,1,8,42],"129":[8,1,8,43],"137":[10,1,10,8],"145":[10,9,10,55],"153":[10,1,10,56],"161":[10,1,10,57],"169":[12,1,12,8],"177":[12,9,12,44],"185":[12,1,12,45],"193":[12,1,12,46],"201":[14,1,14,8],"209":[14,9,14,43],"217":[14,1,14,44],"225":[14,1,14,45],"233":[16,1,16,8],"241":[16,9,16,52],"249":[16,1,16,53],"257":[16,1,16,54],"265":[18,1,18,8],"273":[18,9,18,41],"281":[18,1,18,42],"289":[18,1,18,43],"297":[20,1,20,8],"305":[20,9,20,55],"313":[20,1,20,56],"321":[20,1,20,57],"329":[22,1,22,7],"337":[22,23,22,30],"345":[22,32,22,44],"353":[23,10,23,14],"361":[22,46,23,16],"369":[22,1,23,17],"371":[22,1,22,22],"377":[22,1,23,18],"385":[26,28,26,35],"393":[26,36,26,68],"401":[26,28,26,69],"409":[26,28,26,69],"417":[26,28,26,69],"425":[28,25,28,32],"433":[28,33,28,64],"441":[28,25,28,65],"449":[28,25,28,65],"457":[28,25,28,65],"465":[37,3,37,54],"473":[37,3,37,54],"481":[39,3,39,40],"489":[39,3,39,50],"497":[40,21,40,23],"505":[40,21,40,23],"513":[40,21,40,23],"521":[41,5,41,11],"529":[41,17,41,23],"537":[41,17,41,34],"545":[41,5,41,35],"547":[41,5,41,16],"553":[42,7,42,13],"561":[42,7,42,24],"569":[42,25,42,33],"577":[42,7,42,34],"585":[43,14,43,31],"593":[43,14,43,47],"601":[43,56,43,66],"609":[43,56,43,71],"617":[43,14,43,72],"619":[43,14,43,55],"625":[43,84,43,89],"633":[43,90,43,110],"641":[43,113,43,119],"649":[43,113,43,124],"657":[43,127,43,130],"665":[43,133,43,141],"673":[43,144,43,165],"681":[43,168,43,178],"689":[43,168,43,183],"697":[43,80,43,184],"705":[43,80,43,184],"713":[43,74,43,185],"721":[45,20,45,30],"729":[45,20,45,38],"737":[46,19,46,29],"745":[46,19,46,36],"753":[47,19,47,29],"761":[47,19,47,36],"769":[48,17,48,27],"777":[48,17,48,32],"785":[44,33,48,34],"793":[44,33,48,34],"801":[44,33,48,34],"809":[51,17,51,27],"817":[51,17,51,32],"825":[52,19,52,25],"833":[52,19,52,30],"841":[53,25,53,33],"849":[54,24,54,34],"857":[54,24,54,46],"865":[55,34,55,44],"873":[55,34,55,52],"881":[56,30,56,47],"889":[50,20,56,49],"897":[50,20,56,49],"905":[50,20,56,49],"913":[58,9,58,18],"921":[58,28,58,48],"929":[58,68,58,72],"937":[58,24,58,73],"939":[58,28,58,67],"945":[58,9,58,74],"947":[58,9,58,23],"953":[58,9,58,75],"961":[42,43,59,8],"969":[42,43,59,8],"977":[42,43,59,8],"985":[42,43,59,8],"993":[42,43,59,8],"1001":[42,43,59,8],"1009":[42,7,59,9],"1011":[42,7,42,42],"1017":[42,7,59,10],"1025":[41,44,60,6],"1033":[41,44,60,6],"1041":[41,44,60,6],"1049":[41,44,60,6],"1057":[41,5,60,7],"1059":[41,5,41,43],"1065":[41,5,60,8],"1073":[61,12,61,21],"1081":[61,12,61,21],"1089":[61,5,61,22],"1097":[39,63,62,4],"1105":[39,63,62,4],"1113":[39,63,62,4],"1121":[39,63,62,4],"1129":[39,63,62,4],"1137":[39,3,62,4],"1145":[39,3,62,5],"1153":[64,10,64,47],"1161":[64,10,64,47],"1169":[64,3,64,48],"1177":[36,1,65,2],"1185":[36,1,65,2],"1193":[37,3,37,54],"1201":[36,1,65,2],"1209":[36,1,65,2],"1217":[36,1,65,4],"1225":[36,1,65,4],"1233":[36,1,65,4],"1241":[67,1,67,8],"1249":[67,49,67,86],"1257":[67,1,67,86],"1265":[67,1,67,87],"1273":[1,1,67,87],"1281":[1,1,67,87],"1289":[1,1,67,87],"1297":[1,1,67,87],"1305":[37,3,37,54],"1313":[37,3,37,54],"1321":[43,9,43,185],"1329":[42,43,59,8],"1337":[42,43,59,8],"1345":[41,44,60,6],"1353":[41,44,60,6],"1361":[39,63,62,4],"1369":[39,63,62,4],"1377":[36,1,65,2],"1385":[36,1,65,2],"1393":[1,1,67,87],"1401":[1,1,67,87],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestClassValidator/node_modules/class-validator/validation-schema/ValidationSchemaToMetadataTransformer.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestClassValidator/node_modules/class-validator/validation-schema/ValidationSchemaToMetadataTransformer_jalangi_.js","code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ValidationMetadata_1 = require(\"../metadata/ValidationMetadata\");\n\nvar ValidationTypes_1 = require(\"../validation/ValidationTypes\");\n/**\n * Used to transform validation schemas to validation metadatas.\n */\n\n\nvar ValidationSchemaToMetadataTransformer =\n/** @class */\nfunction () {\n  function ValidationSchemaToMetadataTransformer() {}\n\n  ValidationSchemaToMetadataTransformer.prototype.transform = function (schema) {\n    var metadatas = [];\n    Object.keys(schema.properties).forEach(function (property) {\n      schema.properties[property].forEach(function (validation) {\n        if (!ValidationTypes_1.ValidationTypes.isValid(validation.type)) throw new Error(\"Validation schema \" + schema.name + \"#\" + property + \" as incorrect type \" + validation.type);\n        var validationOptions = {\n          message: validation.message,\n          groups: validation.groups,\n          always: validation.always,\n          each: validation.each\n        };\n        var args = {\n          type: validation.type,\n          target: schema.name,\n          propertyName: property,\n          constraints: validation.constraints,\n          validationTypeOptions: validation.options,\n          validationOptions: validationOptions\n        };\n        metadatas.push(new ValidationMetadata_1.ValidationMetadata(args));\n      });\n    });\n    return metadatas;\n  };\n\n  return ValidationSchemaToMetadataTransformer;\n}();\n\nexports.ValidationSchemaToMetadataTransformer = ValidationSchemaToMetadataTransformer;"}