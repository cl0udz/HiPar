{"8":[46,9,46,31],"9":[2,1,2,8],"17":[2,9,2,52],"25":[2,1,2,53],"33":[2,1,2,54],"41":[4,1,4,8],"49":[4,9,4,52],"57":[4,1,4,53],"65":[4,1,4,54],"73":[6,1,6,7],"81":[6,23,6,30],"89":[6,32,6,44],"97":[7,10,7,14],"105":[6,46,7,16],"113":[6,1,7,17],"115":[6,1,6,22],"121":[6,1,7,18],"129":[23,5,23,9],"137":[23,19,23,21],"145":[23,5,23,21],"153":[23,5,23,22],"161":[28,5,28,9],"169":[28,19,28,24],"177":[28,5,28,24],"185":[28,5,28,25],"193":[33,5,33,9],"201":[33,17,33,22],"209":[33,5,33,22],"217":[33,5,33,23],"225":[38,5,38,9],"233":[38,20,38,29],"241":[38,5,38,29],"249":[38,5,38,30],"257":[39,5,39,9],"265":[39,17,39,21],"273":[39,17,39,26],"281":[39,5,39,26],"289":[39,5,39,27],"297":[40,5,40,9],"305":[40,19,40,23],"313":[40,19,40,30],"321":[40,5,40,30],"329":[40,5,40,31],"337":[41,5,41,9],"345":[41,25,41,29],"353":[41,25,41,42],"361":[41,5,41,42],"369":[41,5,41,43],"377":[42,5,42,9],"385":[42,24,42,28],"393":[42,24,42,40],"401":[42,5,42,40],"409":[42,5,42,41],"417":[43,5,43,9],"425":[43,26,43,30],"433":[43,26,43,44],"441":[43,5,43,44],"449":[43,5,43,45],"457":[44,5,44,9],"465":[44,34,44,38],"473":[44,34,44,60],"481":[44,5,44,60],"489":[44,5,44,61],"497":[46,9,46,13],"505":[46,9,46,31],"513":[47,7,47,11],"521":[47,22,47,26],"529":[47,22,47,44],"537":[47,22,47,52],"545":[47,7,47,52],"553":[47,7,47,53],"561":[48,7,48,11],"569":[48,21,48,25],"577":[48,21,48,43],"585":[48,21,48,50],"593":[48,7,48,50],"601":[48,7,48,51],"609":[49,7,49,11],"617":[49,21,49,25],"625":[49,21,49,43],"633":[49,21,49,50],"641":[49,7,49,50],"649":[49,7,49,51],"657":[50,7,50,11],"665":[50,19,50,23],"673":[50,19,50,41],"681":[50,19,50,46],"689":[50,7,50,46],"697":[50,7,50,47],"705":[51,7,51,11],"713":[51,22,51,26],"721":[51,22,51,44],"729":[51,22,51,52],"737":[51,7,51,52],"745":[51,7,51,53],"753":[19,3,53,4],"761":[19,3,53,4],"769":[19,3,53,4],"777":[55,10,55,28],"785":[55,10,55,28],"793":[55,3,55,29],"801":[15,1,56,2],"809":[15,1,56,2],"817":[19,3,53,4],"825":[15,1,56,2],"833":[15,1,56,2],"841":[15,1,56,4],"849":[15,1,56,4],"857":[15,1,56,4],"865":[58,1,58,8],"873":[58,30,58,48],"881":[58,1,58,48],"889":[58,1,58,49],"897":[1,1,58,49],"905":[1,1,58,49],"913":[46,5,52,6],"921":[19,3,53,4],"929":[19,3,53,4],"937":[15,1,56,2],"945":[15,1,56,2],"953":[1,1,58,49],"961":[1,1,58,49],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestClassValidator/node_modules/class-validator/metadata/ValidationMetadata.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestClassValidator/node_modules/class-validator/metadata/ValidationMetadata_jalangi_.js","code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This metadata contains validation rules.\n */\n\nvar ValidationMetadata =\n/** @class */\nfunction () {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n  function ValidationMetadata(args) {\n    /**\n     * Validation groups used for this validation.\n     */\n    this.groups = [];\n    /**\n     * Indicates if validation must be performed always, no matter of validation groups used.\n     */\n\n    this.always = false;\n    /**\n     * Specifies if validated value is an array and each of its item must be validated.\n     */\n\n    this.each = false;\n    /*\n     * A transient set of data passed through to the validation result for response mapping\n     */\n\n    this.context = undefined;\n    this.type = args.type;\n    this.target = args.target;\n    this.propertyName = args.propertyName;\n    this.constraints = args.constraints;\n    this.constraintCls = args.constraintCls;\n    this.validationTypeOptions = args.validationTypeOptions;\n\n    if (args.validationOptions) {\n      this.message = args.validationOptions.message;\n      this.groups = args.validationOptions.groups;\n      this.always = args.validationOptions.always;\n      this.each = args.validationOptions.each;\n      this.context = args.validationOptions.context;\n    }\n  }\n\n  return ValidationMetadata;\n}();\n\nexports.ValidationMetadata = ValidationMetadata;"}