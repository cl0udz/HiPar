J$.iids = {"8":[44,16,44,43],"9":[2,1,2,8],"10":[42,9,42,36],"16":[42,9,42,36],"17":[2,9,2,44],"18":[44,16,44,30],"24":[48,9,48,74],"25":[2,1,2,45],"26":[44,16,44,43],"32":[48,9,48,74],"33":[2,1,2,46],"34":[48,26,48,74],"40":[54,9,54,65],"41":[4,1,4,8],"42":[50,77,50,86],"48":[54,9,54,103],"49":[4,9,4,52],"50":[50,58,50,87],"56":[54,9,54,152],"57":[4,1,4,53],"58":[54,26,54,65],"64":[54,9,54,152],"65":[4,1,4,54],"66":[54,69,54,103],"72":[55,9,55,22],"73":[6,1,6,8],"74":[54,107,54,139],"80":[56,9,56,22],"81":[6,9,6,48],"82":[54,107,54,152],"89":[6,1,6,49],"97":[6,1,6,50],"105":[8,1,8,8],"113":[8,9,8,41],"121":[8,1,8,42],"129":[8,1,8,43],"137":[10,1,10,8],"145":[10,9,10,46],"153":[10,1,10,47],"161":[10,1,10,48],"169":[12,1,12,8],"177":[12,9,12,44],"185":[12,1,12,45],"193":[12,1,12,46],"201":[14,1,14,8],"209":[14,9,14,55],"217":[14,1,14,56],"225":[14,1,14,57],"233":[16,1,16,8],"241":[16,9,16,44],"249":[16,1,16,45],"257":[16,1,16,46],"265":[18,1,18,8],"273":[18,9,18,52],"281":[18,1,18,53],"289":[18,1,18,54],"297":[20,1,20,8],"305":[20,9,20,48],"313":[20,1,20,49],"321":[20,1,20,50],"329":[22,1,22,8],"337":[22,9,22,41],"345":[22,1,22,42],"353":[22,1,22,43],"361":[24,1,24,8],"369":[24,9,24,46],"377":[24,1,24,47],"385":[24,1,24,48],"393":[26,1,26,8],"401":[26,9,26,44],"409":[26,1,26,45],"417":[26,1,26,46],"425":[28,1,28,8],"433":[28,9,28,55],"441":[28,1,28,56],"449":[28,1,28,57],"457":[30,1,30,7],"465":[30,23,30,30],"473":[30,32,30,44],"481":[31,10,31,14],"489":[30,46,31,16],"497":[30,1,31,17],"499":[30,1,30,22],"505":[30,1,31,18],"513":[37,3,37,32],"521":[37,3,37,32],"529":[39,3,39,18],"537":[42,9,42,16],"545":[42,28,42,36],"553":[43,23,43,30],"561":[43,31,43,50],"569":[43,23,43,51],"577":[43,23,43,51],"585":[43,7,43,52],"593":[44,23,44,30],"601":[44,35,44,43],"609":[45,23,45,30],"617":[45,23,45,30],"625":[45,7,45,31],"633":[48,9,48,22],"641":[48,26,48,45],"649":[48,26,48,57],"657":[48,69,48,74],"665":[49,7,49,26],"673":[49,7,49,38],"681":[50,25,50,38],"689":[50,51,50,57],"697":[50,58,50,73],"705":[50,77,50,82],"713":[50,85,50,86],"721":[50,89,50,92],"729":[50,47,50,93],"737":[50,95,50,105],"745":[50,25,50,106],"747":[50,25,50,46],"753":[50,25,50,106],"761":[50,9,50,107],"769":[49,47,51,8],"777":[49,47,51,8],"785":[49,47,51,8],"793":[49,47,51,8],"801":[49,47,51,8],"809":[49,7,51,9],"811":[49,7,49,46],"817":[49,7,51,10],"825":[54,9,54,22],"833":[54,26,54,45],"841":[54,26,54,51],"849":[54,56,54,65],"857":[54,69,54,88],"865":[54,69,54,94],"873":[54,99,54,103],"881":[54,114,54,133],"889":[54,114,54,139],"897":[54,144,54,152],"905":[54,170,54,183],"913":[54,192,54,202],"921":[54,204,54,223],"929":[54,204,54,229],"937":[54,170,54,230],"939":[54,170,54,191],"945":[54,170,54,230],"953":[54,154,54,231],"961":[55,9,55,22],"969":[55,40,55,53],"977":[55,62,55,75],"985":[55,77,55,96],"993":[55,77,55,105],"1001":[55,40,55,106],"1003":[55,40,55,61],"1009":[55,40,55,106],"1017":[55,24,55,107],"1025":[56,9,56,22],"1033":[56,40,56,53],"1041":[56,62,56,73],"1049":[56,75,56,94],"1057":[56,75,56,105],"1065":[56,40,56,106],"1067":[56,40,56,61],"1073":[56,40,56,106],"1081":[56,24,56,107],"1089":[57,12,57,25],"1097":[57,12,57,25],"1105":[57,5,57,26],"1113":[39,49,58,4],"1121":[39,49,58,4],"1129":[39,49,58,4],"1137":[39,49,58,4],"1145":[39,49,58,4],"1153":[39,49,58,4],"1161":[39,3,58,4],"1169":[39,3,58,5],"1177":[60,10,60,25],"1185":[60,10,60,25],"1193":[60,3,60,26],"1201":[36,1,61,2],"1209":[36,1,61,2],"1217":[37,3,37,32],"1225":[36,1,61,2],"1233":[36,1,61,2],"1241":[36,1,61,4],"1249":[36,1,61,4],"1257":[36,1,61,4],"1265":[63,1,63,8],"1273":[63,27,63,42],"1281":[63,1,63,42],"1289":[63,1,63,43],"1297":[1,1,63,43],"1305":[1,1,63,43],"1313":[37,3,37,32],"1321":[37,3,37,32],"1329":[44,12,46,6],"1337":[42,5,46,6],"1345":[49,47,51,8],"1353":[49,47,51,8],"1361":[48,5,52,6],"1369":[54,5,54,231],"1377":[55,5,55,107],"1385":[56,5,56,107],"1393":[39,49,58,4],"1401":[39,49,58,4],"1409":[36,1,61,2],"1417":[36,1,61,2],"1425":[1,1,63,43],"1433":[1,1,63,43],"nBranches":20,"originalCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestClassValidator/node_modules/class-validator/validation/ValidationUtils.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/tests/target/TestClassValidator/node_modules/class-validator/validation/ValidationUtils_jalangi_.js","code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.regexp.constructor\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.regexp.constructor\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ValidationUtils =\n/** @class */\nfunction () {\n  function ValidationUtils() {}\n\n  ValidationUtils.replaceMessageSpecialTokens = function (message, validationArguments) {\n    var messageString;\n\n    if (message instanceof Function) {\n      messageString = message(validationArguments);\n    } else if (typeof message === \"string\") {\n      messageString = message;\n    }\n\n    if (messageString && validationArguments.constraints instanceof Array) {\n      validationArguments.constraints.forEach(function (constraint, index) {\n        messageString = messageString.replace(new RegExp(\"\\\\$constraint\" + (index + 1), \"g\"), constraint);\n      });\n    }\n\n    if (messageString && validationArguments.value !== undefined && validationArguments.value !== null && typeof validationArguments.value === \"string\") messageString = messageString.replace(/\\$value/g, validationArguments.value);\n    if (messageString) messageString = messageString.replace(/\\$property/g, validationArguments.property);\n    if (messageString) messageString = messageString.replace(/\\$target/g, validationArguments.targetName);\n    return messageString;\n  };\n\n  return ValidationUtils;\n}();\n\nexports.ValidationUtils = ValidationUtils;"};
jalangiLabel615:
    while (true) {
        try {
            J$.Se(1297, '/home/james/nodejs/HiPar/tests/target/TestClassValidator/node_modules/class-validator/validation/ValidationUtils_jalangi_.js', '/home/james/nodejs/HiPar/tests/target/TestClassValidator/node_modules/class-validator/validation/ValidationUtils.js');
            J$.N(1305, 'ValidationUtils', ValidationUtils, 0);
            J$.X1(33, J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, "core-js/modules/es.array.for-each", 21, false)));
            J$.X1(65, J$.F(57, J$.R(41, 'require', require, 2), 0)(J$.T(49, "core-js/modules/es.object.define-property", 21, false)));
            J$.X1(97, J$.F(89, J$.R(73, 'require', require, 2), 0)(J$.T(81, "core-js/modules/es.regexp.constructor", 21, false)));
            J$.X1(129, J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, "core-js/modules/es.regexp.exec", 21, false)));
            J$.X1(161, J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, "core-js/modules/es.regexp.to-string", 21, false)));
            J$.X1(193, J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, "core-js/modules/es.string.replace", 21, false)));
            J$.X1(225, J$.F(217, J$.R(201, 'require', require, 2), 0)(J$.T(209, "core-js/modules/web.dom-collections.for-each", 21, false)));
            J$.X1(257, J$.F(249, J$.R(233, 'require', require, 2), 0)(J$.T(241, "core-js/modules/es.array.for-each", 21, false)));
            J$.X1(289, J$.F(281, J$.R(265, 'require', require, 2), 0)(J$.T(273, "core-js/modules/es.object.define-property", 21, false)));
            J$.X1(321, J$.F(313, J$.R(297, 'require', require, 2), 0)(J$.T(305, "core-js/modules/es.regexp.constructor", 21, false)));
            J$.X1(353, J$.F(345, J$.R(329, 'require', require, 2), 0)(J$.T(337, "core-js/modules/es.regexp.exec", 21, false)));
            J$.X1(385, J$.F(377, J$.R(361, 'require', require, 2), 0)(J$.T(369, "core-js/modules/es.regexp.to-string", 21, false)));
            J$.X1(417, J$.F(409, J$.R(393, 'require', require, 2), 0)(J$.T(401, "core-js/modules/es.string.replace", 21, false)));
            J$.X1(449, J$.F(441, J$.R(425, 'require', require, 2), 0)(J$.T(433, "core-js/modules/web.dom-collections.for-each", 21, false)));
            J$.X1(505, J$.M(497, J$.R(457, 'Object', Object, 2), 'defineProperty', 0)(J$.R(465, 'exports', exports, 2), J$.T(473, "__esModule", 21, false), J$.T(489, {
                value: J$.T(481, true, 23, false)
            }, 11, false)));
            var ValidationUtils = J$.X1(1257, J$.W(1249, 'ValidationUtils', J$.F(1241, J$.T(1233, function () {
                jalangiLabel614:
                    while (true) {
                        try {
                            J$.Fe(1201, arguments.callee, this, arguments);
                            function ValidationUtils() {
                                jalangiLabel611:
                                    while (true) {
                                        try {
                                            J$.Fe(513, arguments.callee, this, arguments);
                                            arguments = J$.N(521, 'arguments', arguments, 4);
                                        } catch (J$e) {
                                            J$.Ex(1313, J$e);
                                        } finally {
                                            if (J$.Fr(1321))
                                                continue jalangiLabel611;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1209, 'arguments', arguments, 4);
                            ValidationUtils = J$.N(1225, 'ValidationUtils', J$.T(1217, ValidationUtils, 12, false, 513), 0);
                            J$.X1(1169, J$.P(1161, J$.R(529, 'ValidationUtils', ValidationUtils, 0), 'replaceMessageSpecialTokens', J$.T(1153, function (message, validationArguments) {
                                jalangiLabel613:
                                    while (true) {
                                        try {
                                            J$.Fe(1113, arguments.callee, this, arguments);
                                            arguments = J$.N(1121, 'arguments', arguments, 4);
                                            message = J$.N(1129, 'message', message, 4);
                                            validationArguments = J$.N(1137, 'validationArguments', validationArguments, 4);
                                            J$.N(1145, 'messageString', messageString, 0);
                                            var messageString;
                                            if (J$.X1(1337, J$.C(16, J$.B(10, 'instanceof', J$.R(537, 'message', message, 0), J$.R(545, 'Function', Function, 2), 0)))) {
                                                J$.X1(585, messageString = J$.W(577, 'messageString', J$.F(569, J$.R(553, 'message', message, 0), 0)(J$.R(561, 'validationArguments', validationArguments, 0)), messageString, 0));
                                            } else if (J$.X1(1329, J$.C(8, J$.B(26, '===', J$.U(18, 'typeof', J$.R(593, 'message', message, 0)), J$.T(601, "string", 21, false), 0)))) {
                                                J$.X1(625, messageString = J$.W(617, 'messageString', J$.R(609, 'message', message, 0), messageString, 0));
                                            }
                                            if (J$.X1(1361, J$.C(32, J$.C(24, J$.R(633, 'messageString', messageString, 0)) ? J$.B(34, 'instanceof', J$.G(649, J$.R(641, 'validationArguments', validationArguments, 0), 'constraints', 0), J$.R(657, 'Array', Array, 2), 0) : J$._()))) {
                                                J$.X1(817, J$.M(809, J$.G(673, J$.R(665, 'validationArguments', validationArguments, 0), 'constraints', 0), 'forEach', 0)(J$.T(801, function (constraint, index) {
                                                    jalangiLabel612:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(769, arguments.callee, this, arguments);
                                                                arguments = J$.N(777, 'arguments', arguments, 4);
                                                                constraint = J$.N(785, 'constraint', constraint, 4);
                                                                index = J$.N(793, 'index', index, 4);
                                                                J$.X1(761, messageString = J$.W(753, 'messageString', J$.M(745, J$.R(681, 'messageString', messageString, 0), 'replace', 0)(J$.F(729, J$.R(689, 'RegExp', RegExp, 2), 1)(J$.B(50, '+', J$.T(697, "\\$constraint", 21, false), J$.B(42, '+', J$.R(705, 'index', index, 0), J$.T(713, 1, 22, false), 0), 0), J$.T(721, "g", 21, false)), J$.R(737, 'constraint', constraint, 0)), messageString, 0));
                                                            } catch (J$e) {
                                                                J$.Ex(1345, J$e);
                                                            } finally {
                                                                if (J$.Fr(1353))
                                                                    continue jalangiLabel612;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 769)));
                                            }
                                            if (J$.X1(1369, J$.C(64, J$.C(56, J$.C(48, J$.C(40, J$.R(825, 'messageString', messageString, 0)) ? J$.B(58, '!==', J$.G(841, J$.R(833, 'validationArguments', validationArguments, 0), 'value', 0), J$.T(849, undefined, 24, false), 0) : J$._()) ? J$.B(66, '!==', J$.G(865, J$.R(857, 'validationArguments', validationArguments, 0), 'value', 0), J$.T(873, null, 25, false), 0) : J$._()) ? J$.B(82, '===', J$.U(74, 'typeof', J$.G(889, J$.R(881, 'validationArguments', validationArguments, 0), 'value', 0)), J$.T(897, "string", 21, false), 0) : J$._())))
                                                J$.X1(953, messageString = J$.W(945, 'messageString', J$.M(937, J$.R(905, 'messageString', messageString, 0), 'replace', 0)(J$.T(913, /\$value/g, 14, false), J$.G(929, J$.R(921, 'validationArguments', validationArguments, 0), 'value', 0)), messageString, 0));
                                            if (J$.X1(1377, J$.C(72, J$.R(961, 'messageString', messageString, 0))))
                                                J$.X1(1017, messageString = J$.W(1009, 'messageString', J$.M(1001, J$.R(969, 'messageString', messageString, 0), 'replace', 0)(J$.T(977, /\$property/g, 14, false), J$.G(993, J$.R(985, 'validationArguments', validationArguments, 0), 'property', 0)), messageString, 0));
                                            if (J$.X1(1385, J$.C(80, J$.R(1025, 'messageString', messageString, 0))))
                                                J$.X1(1081, messageString = J$.W(1073, 'messageString', J$.M(1065, J$.R(1033, 'messageString', messageString, 0), 'replace', 0)(J$.T(1041, /\$target/g, 14, false), J$.G(1057, J$.R(1049, 'validationArguments', validationArguments, 0), 'targetName', 0)), messageString, 0));
                                            return J$.X1(1105, J$.Rt(1097, J$.R(1089, 'messageString', messageString, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1393, J$e);
                                        } finally {
                                            if (J$.Fr(1401))
                                                continue jalangiLabel613;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1113), 0));
                            return J$.X1(1193, J$.Rt(1185, J$.R(1177, 'ValidationUtils', ValidationUtils, 0)));
                        } catch (J$e) {
                            J$.Ex(1409, J$e);
                        } finally {
                            if (J$.Fr(1417))
                                continue jalangiLabel614;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1201), 0)(), ValidationUtils, 3));
            J$.X1(1289, J$.P(1281, J$.R(1265, 'exports', exports, 2), 'ValidationUtils', J$.R(1273, 'ValidationUtils', ValidationUtils, 1), 0));
        } catch (J$e) {
            J$.Ex(1425, J$e);
        } finally {
            if (J$.Sr(1433)) {
                J$.L();
                continue jalangiLabel615;
            } else {
                J$.L();
                break jalangiLabel615;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
