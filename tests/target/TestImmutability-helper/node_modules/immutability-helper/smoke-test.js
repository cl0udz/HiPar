"use strict";

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.string.trim");

var promisify = require('util').promisify || function (fn) {
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return new Promise(function (resolve, reject) {
      fn(...args, function (error, results) {
        if (error) reject(error);else resolve(results);
      });
    });
  };
};

var fs = require('fs');

var exec = promisify(require('child_process').exec);
var mkdir = promisify(fs.mkdir);
var writeFile = promisify(fs.writeFile);

var assert = require('assert');

var code = `
const update = require('immutability-helper');

const state1 = ['x'];
const state2 = update(state1, {$push: ['y']})
console.log(JSON.stringify(state2));
`;
Promise.resolve().then(function () {
  return mkdir('smoke-test');
}).then(function () {
  return process.chdir('smoke-test');
}).then(function () {
  return exec('npm init -y');
}).then(function () {
  return exec('npm install ../');
}).then(function () {
  return writeFile('foo.js', code);
}).then(function () {
  return exec('node foo');
}).then(function (result) {
  return assert.strictEqual((result.stdout || result).trim(), '["x","y"]');
}).then(function () {
  return process.exit(0);
}).catch(function (error) {
  console.error('uncaught error', error);
  process.exit(1);
});