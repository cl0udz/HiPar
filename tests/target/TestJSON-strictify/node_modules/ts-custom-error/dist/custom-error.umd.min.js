"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.function.bind");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.create");

require("core-js/modules/es.object.define-properties");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.set-prototype-of");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

!function (global, factory) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? factory(exports) : "function" == typeof define && define.amd ? define(["exports"], factory) : factory(global.tsCustomError = {});
}(void 0, function (exports) {
  var extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      b.hasOwnProperty(p) && (d[p] = b[p]);
    }
  };

  function fixStack(target, fn) {
    void 0 === fn && (fn = target.constructor);
    var captureStackTrace = Error.captureStackTrace;
    captureStackTrace && captureStackTrace(target, fn);
  }

  var CustomError = function (_super) {
    function CustomError(message) {
      var target,
          prototype,
          setPrototypeOf,
          _newTarget = this.constructor,
          _this = _super.call(this, message) || this;

      return Object.defineProperty(_this, "name", {
        value: _newTarget.name,
        enumerable: !1
      }), target = _this, prototype = _newTarget.prototype, (setPrototypeOf = Object.setPrototypeOf) ? setPrototypeOf(target, prototype) : target.__proto__ = prototype, fixStack(_this), _this;
    }

    return function (d, b) {
      function __() {
        this.constructor = d;
      }

      extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
    }(CustomError, _super), CustomError;
  }(Error);

  exports.CustomError = CustomError, exports.customErrorFactory = function (fn, parent) {
    function CustomError() {
      for (var args = [], _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      if (!(this instanceof CustomError)) return new (CustomError.bind.apply(CustomError, [void 0].concat(args)))();
      parent.apply(this, args), fn.apply(this, args), this.name = fn.name || parent.name, fixStack(this, CustomError);
    }

    return void 0 === parent && (parent = Error), Object.defineProperties(CustomError, {
      prototype: {
        value: Object.create(parent.prototype, {
          constructor: {
            value: CustomError,
            writable: !0,
            configurable: !0
          }
        })
      }
    });
  };
});