"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

function _typeof8(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof8 = function _typeof8(obj) { return typeof obj; }; } else { _typeof8 = function _typeof8(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof8(obj); }

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

function _typeof7(obj) {
  if (typeof Symbol === "function" && _typeof8(Symbol.iterator) === "symbol") {
    _typeof7 = function _typeof7(obj) {
      return _typeof8(obj);
    };
  } else {
    _typeof7 = function _typeof7(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof8(obj);
    };
  }

  return _typeof7(obj);
}

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

function _typeof6(obj) {
  if (typeof Symbol === "function" && _typeof7(Symbol.iterator) === "symbol") {
    _typeof6 = function _typeof6(obj) {
      return _typeof7(obj);
    };
  } else {
    _typeof6 = function _typeof6(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof7(obj);
    };
  }

  return _typeof6(obj);
}

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

function _typeof5(obj) {
  if (typeof Symbol === "function" && _typeof6(Symbol.iterator) === "symbol") {
    _typeof5 = function _typeof5(obj) {
      return _typeof6(obj);
    };
  } else {
    _typeof5 = function _typeof5(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof6(obj);
    };
  }

  return _typeof5(obj);
}

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

function _typeof4(obj) {
  if (typeof Symbol === "function" && _typeof5(Symbol.iterator) === "symbol") {
    _typeof4 = function _typeof4(obj) {
      return _typeof5(obj);
    };
  } else {
    _typeof4 = function _typeof4(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof5(obj);
    };
  }

  return _typeof4(obj);
}

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

function _typeof3(obj) {
  if (typeof Symbol === "function" && _typeof4(Symbol.iterator) === "symbol") {
    _typeof3 = function _typeof3(obj) {
      return _typeof4(obj);
    };
  } else {
    _typeof3 = function _typeof3(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof4(obj);
    };
  }

  return _typeof3(obj);
}

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.constructor");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

function _typeof2(obj) {
  if (typeof Symbol === "function" && _typeof3(Symbol.iterator) === "symbol") {
    _typeof2 = function _typeof2(obj) {
      return _typeof3(obj);
    };
  } else {
    _typeof2 = function _typeof2(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof3(obj);
    };
  }

  return _typeof2(obj);
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
} // Copyright (c) 2012, Mark Cavage. All rights reserved.
// Copyright 2015 Joyent, Inc.


var assert = require('assert');

var Stream = require('stream').Stream;

var util = require('util'); ///--- Globals

/* JSSTYLED */


var UUID_REGEXP = /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/; ///--- Internal

function _capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

function _toss(name, expected, oper, arg, actual) {
  throw new assert.AssertionError({
    message: util.format('%s (%s) is required', name, expected),
    actual: actual === undefined ? _typeof(arg) : actual(arg),
    expected: expected,
    operator: oper || '===',
    stackStartFunction: _toss.caller
  });
}

function _getClass(arg) {
  return Object.prototype.toString.call(arg).slice(8, -1);
}

function noop() {} // Why even bother with asserts?
///--- Exports


var types = {
  bool: {
    check: function check(arg) {
      return typeof arg === 'boolean';
    }
  },
  func: {
    check: function check(arg) {
      return typeof arg === 'function';
    }
  },
  string: {
    check: function check(arg) {
      return typeof arg === 'string';
    }
  },
  object: {
    check: function check(arg) {
      return _typeof(arg) === 'object' && arg !== null;
    }
  },
  number: {
    check: function check(arg) {
      return typeof arg === 'number' && !isNaN(arg);
    }
  },
  finite: {
    check: function check(arg) {
      return typeof arg === 'number' && !isNaN(arg) && isFinite(arg);
    }
  },
  buffer: {
    check: function check(arg) {
      return Buffer.isBuffer(arg);
    },
    operator: 'Buffer.isBuffer'
  },
  array: {
    check: function check(arg) {
      return Array.isArray(arg);
    },
    operator: 'Array.isArray'
  },
  stream: {
    check: function check(arg) {
      return arg instanceof Stream;
    },
    operator: 'instanceof',
    actual: _getClass
  },
  date: {
    check: function check(arg) {
      return arg instanceof Date;
    },
    operator: 'instanceof',
    actual: _getClass
  },
  regexp: {
    check: function check(arg) {
      return arg instanceof RegExp;
    },
    operator: 'instanceof',
    actual: _getClass
  },
  uuid: {
    check: function check(arg) {
      return typeof arg === 'string' && UUID_REGEXP.test(arg);
    },
    operator: 'isUUID'
  }
};

function _setExports(ndebug) {
  var keys = Object.keys(types);
  var out;
  /* re-export standard assert */

  if (process.env.NODE_NDEBUG) {
    out = noop;
  } else {
    out = function out(arg, msg) {
      if (!arg) {
        _toss(msg, 'true', arg);
      }
    };
  }
  /* standard checks */


  keys.forEach(function (k) {
    if (ndebug) {
      out[k] = noop;
      return;
    }

    var type = types[k];

    out[k] = function (arg, msg) {
      if (!type.check(arg)) {
        _toss(msg, k, type.operator, arg, type.actual);
      }
    };
  });
  /* optional checks */

  keys.forEach(function (k) {
    var name = 'optional' + _capitalize(k);

    if (ndebug) {
      out[name] = noop;
      return;
    }

    var type = types[k];

    out[name] = function (arg, msg) {
      if (arg === undefined || arg === null) {
        return;
      }

      if (!type.check(arg)) {
        _toss(msg, k, type.operator, arg, type.actual);
      }
    };
  });
  /* arrayOf checks */

  keys.forEach(function (k) {
    var name = 'arrayOf' + _capitalize(k);

    if (ndebug) {
      out[name] = noop;
      return;
    }

    var type = types[k];
    var expected = '[' + k + ']';

    out[name] = function (arg, msg) {
      if (!Array.isArray(arg)) {
        _toss(msg, expected, type.operator, arg, type.actual);
      }

      var i;

      for (i = 0; i < arg.length; i++) {
        if (!type.check(arg[i])) {
          _toss(msg, expected, type.operator, arg, type.actual);
        }
      }
    };
  });
  /* optionalArrayOf checks */

  keys.forEach(function (k) {
    var name = 'optionalArrayOf' + _capitalize(k);

    if (ndebug) {
      out[name] = noop;
      return;
    }

    var type = types[k];
    var expected = '[' + k + ']';

    out[name] = function (arg, msg) {
      if (arg === undefined || arg === null) {
        return;
      }

      if (!Array.isArray(arg)) {
        _toss(msg, expected, type.operator, arg, type.actual);
      }

      var i;

      for (i = 0; i < arg.length; i++) {
        if (!type.check(arg[i])) {
          _toss(msg, expected, type.operator, arg, type.actual);
        }
      }
    };
  });
  /* re-export built-in assertions */

  Object.keys(assert).forEach(function (k) {
    if (k === 'AssertionError') {
      out[k] = assert[k];
      return;
    }

    if (ndebug) {
      out[k] = noop;
      return;
    }

    out[k] = assert[k];
  });
  /* export ourselves (for unit tests _only_) */

  out._setExports = _setExports;
  return out;
}

module.exports = _setExports(process.env.NODE_NDEBUG);