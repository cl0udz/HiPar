{"9":[4,17,4,21],"10":[35,37,35,59],"17":[4,17,4,27],"18":[35,36,35,67],"19":[4,17,4,25],"25":[4,17,4,27],"26":[35,36,35,73],"33":[4,17,4,27],"34":[40,22,40,24],"41":[5,13,5,20],"49":[5,21,5,37],"57":[5,13,5,38],"65":[5,45,5,57],"73":[5,13,5,58],"75":[5,13,5,44],"81":[5,13,5,58],"89":[5,13,5,58],"97":[7,14,7,21],"105":[7,22,7,44],"113":[7,14,7,45],"121":[7,14,7,45],"129":[7,14,7,45],"137":[9,1,9,6],"145":[9,7,9,26],"153":[9,1,9,27],"161":[9,1,9,28],"169":[11,13,11,20],"177":[11,21,11,29],"185":[11,13,11,30],"193":[11,13,11,30],"201":[11,13,11,30],"209":[13,1,13,6],"217":[13,7,13,23],"225":[13,1,13,24],"233":[13,1,13,25],"241":[15,15,15,22],"249":[15,23,15,46],"257":[15,15,15,47],"265":[15,15,15,47],"273":[15,15,15,47],"281":[16,15,16,22],"289":[16,23,16,46],"297":[16,15,16,47],"305":[16,15,16,47],"313":[16,15,16,47],"321":[17,18,17,25],"329":[17,26,17,56],"337":[17,18,17,57],"345":[17,18,17,57],"353":[17,18,17,57],"361":[19,16,19,23],"369":[19,24,19,31],"377":[19,16,19,32],"385":[19,16,19,32],"393":[19,16,19,32],"401":[23,1,23,9],"409":[23,14,23,20],"417":[23,14,23,35],"425":[23,1,23,36],"427":[23,1,23,13],"433":[23,1,23,37],"441":[25,1,25,6],"449":[25,7,25,27],"457":[25,1,25,28],"465":[25,1,25,29],"473":[27,1,27,6],"481":[27,1,27,8],"489":[29,5,29,13],"497":[29,18,29,28],"505":[29,18,29,34],"513":[29,18,29,46],"515":[29,18,29,44],"521":[29,48,29,59],"529":[29,48,29,67],"537":[29,5,29,68],"539":[29,5,29,17],"545":[29,5,29,69],"553":[31,5,31,10],"561":[31,11,31,27],"569":[31,5,31,28],"577":[31,5,31,29],"585":[33,12,33,23],"593":[33,30,33,38],"601":[33,12,33,39],"603":[33,12,33,29],"609":[35,9,35,16],"617":[35,22,35,34],"625":[35,37,35,41],"633":[35,37,35,47],"635":[35,37,35,45],"641":[35,50,35,59],"649":[35,63,35,67],"657":[35,70,35,73],"665":[35,9,35,74],"667":[35,9,35,21],"673":[35,9,35,75],"681":[34,10,36,6],"689":[34,10,36,6],"697":[34,10,36,6],"705":[34,10,36,6],"713":[33,12,36,7],"715":[33,12,34,9],"721":[33,12,36,7],"729":[33,5,36,8],"737":[27,14,37,2],"745":[27,14,37,2],"753":[27,14,37,2],"761":[27,14,37,2],"769":[27,1,37,3],"771":[27,1,27,13],"777":[38,5,38,12],"785":[38,19,38,22],"793":[38,5,38,23],"795":[38,5,38,18],"801":[38,5,38,24],"809":[39,5,39,15],"817":[40,9,40,16],"825":[40,23,40,24],"833":[40,9,40,25],"835":[40,9,40,21],"841":[40,9,40,26],"849":[39,16,41,6],"857":[39,16,41,6],"865":[39,16,41,6],"873":[41,8,41,11],"881":[39,5,41,12],"889":[39,5,41,13],"897":[37,10,42,2],"905":[37,10,42,2],"913":[37,10,42,2],"921":[37,10,42,2],"929":[27,1,42,3],"931":[27,1,37,9],"937":[27,1,42,4],"945":[1,1,42,4],"953":[1,1,42,4],"961":[1,1,42,4],"969":[1,1,42,4],"977":[1,1,42,4],"985":[1,1,42,4],"993":[1,1,42,4],"1001":[1,1,42,4],"1009":[1,1,42,4],"1017":[34,10,36,6],"1025":[34,10,36,6],"1033":[27,14,37,2],"1041":[27,14,37,2],"1049":[39,16,41,6],"1057":[39,16,41,6],"1065":[37,10,42,2],"1073":[37,10,42,2],"1081":[1,1,42,4],"1089":[1,1,42,4],"nBranches":0,"originalCodeFileName":"/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/index.js","instrumentedCodeFileName":"/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/index_jalangi_.js","code":"// # Ghost Startup\n// Orchestrates the startup of Ghost when run from command line.\n\nconst startTime = Date.now();\nconst debug = require('ghost-ignition').debug('boot:index');\n// Sentry must be initialised early on\nconst sentry = require('./core/shared/sentry');\n\ndebug('First requires...');\n\nconst ghost = require('./core');\n\ndebug('Required ghost');\n\nconst express = require('./core/shared/express');\nconst logging = require('./core/shared/logging');\nconst urlService = require('./core/frontend/services/url');\n// This is what listen gets called on, it needs to be a full Express App\nconst ghostApp = express('ghost');\n\n// Use the request handler at the top level\n// @TODO: decide if this should be here or in parent App - should it come after request id mw?\nghostApp.use(sentry.requestHandler);\n\ndebug('Initialising Ghost');\n\nghost().then(function (ghostServer) {\n    // Mount our Ghost instance on our desired subdirectory path if it exists.\n    ghostApp.use(urlService.utils.getSubdir(), ghostServer.rootApp);\n\n    debug('Starting Ghost');\n    // Let Ghost handle starting our server instance.\n    return ghostServer.start(ghostApp)\n        .then(function afterStart() {\n            logging.info('Ghost boot', (Date.now() - startTime) / 1000 + 's');\n        });\n}).catch(function (err) {\n    logging.error(err);\n    setTimeout(() => {\n        process.exit(-1);\n    }, 100);\n});\n"}