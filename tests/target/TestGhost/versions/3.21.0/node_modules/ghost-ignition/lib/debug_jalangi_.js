J$.iids = {"8":[19,13,19,22],"9":[1,13,1,20],"10":[17,23,17,51],"17":[1,21,1,30],"18":[29,18,29,29],"25":[1,13,1,31],"26":[29,18,29,36],"33":[1,13,1,31],"41":[1,13,1,31],"49":[2,13,2,20],"57":[2,21,2,28],"65":[2,13,2,29],"73":[2,13,2,29],"81":[2,13,2,29],"89":[12,1,12,7],"97":[13,22,13,27],"105":[13,22,13,43],"107":[13,22,13,41],"113":[13,22,13,43],"121":[13,22,13,43],"129":[17,15,17,22],"137":[17,23,17,33],"145":[17,36,17,51],"153":[17,15,17,52],"161":[17,15,17,52],"169":[17,9,17,53],"177":[19,13,19,16],"185":[19,13,19,22],"193":[20,21,20,24],"201":[20,21,20,30],"209":[20,21,20,30],"217":[20,13,20,31],"225":[22,21,22,24],"233":[22,21,22,29],"241":[22,21,22,29],"249":[22,13,22,30],"257":[26,17,26,28],"265":[26,17,26,28],"273":[26,9,26,29],"281":[25,7,27,6],"289":[29,12,29,17],"297":[29,18,29,23],"305":[29,26,29,29],"313":[29,32,29,36],"321":[29,12,29,37],"329":[29,12,29,37],"337":[29,5,29,38],"345":[12,18,30,2],"353":[12,18,30,2],"361":[12,18,30,2],"369":[12,18,30,2],"377":[12,18,30,2],"385":[12,18,30,2],"393":[12,18,30,2],"401":[12,18,30,2],"409":[12,1,30,2],"417":[12,1,30,3],"425":[32,1,32,7],"433":[32,1,32,15],"441":[32,24,32,29],"449":[32,1,32,29],"457":[32,1,32,30],"465":[1,1,32,30],"473":[1,1,32,30],"481":[1,1,32,30],"489":[19,9,23,10],"497":[12,18,30,2],"505":[12,18,30,2],"513":[1,1,32,30],"521":[1,1,32,30],"nBranches":2,"originalCodeFileName":"/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/node_modules/ghost-ignition/lib/debug.js","instrumentedCodeFileName":"/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/node_modules/ghost-ignition/lib/debug_jalangi_.js","code":"var utils = require('./utils');\nvar debug = require('debug');\n\n/**\n * @description Create a debug instance based on your package.json alias/name.\n *\n * The challenge here is to figure out where your package.json exist.\n *\n * @param {String} name - Name of the debug unit.\n * @return {Function}\n */\nmodule.exports = function initDebug(name) {\n    var parentPath = utils.getCallerRoot();\n    var alias, pkg;\n\n    try {\n        pkg = require(parentPath + '/package.json');\n\n        if (pkg.alias) {\n            alias = pkg.alias;\n        } else {\n            alias = pkg.name;\n        }\n\n    } catch (err) {\n        alias = 'undefined';\n    }\n\n    return debug(alias + ':' + name);\n};\n\nmodule.exports._base = debug;\n"};
jalangiLabel13:
    while (true) {
        try {
            J$.Se(465, '/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/node_modules/ghost-ignition/lib/debug_jalangi_.js', '/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/node_modules/ghost-ignition/lib/debug.js');
            J$.N(473, 'utils', utils, 0);
            J$.N(481, 'debug', debug, 0);
            var utils = J$.X1(41, J$.W(33, 'utils', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './utils', 21, false)), utils, 3));
            var debug = J$.X1(81, J$.W(73, 'debug', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, 'debug', 21, false)), debug, 3));
            J$.X1(417, J$.P(409, J$.R(89, 'module', module, 2), 'exports', J$.T(401, function initDebug(name) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(345, arguments.callee, this, arguments);
                            arguments = J$.N(353, 'arguments', arguments, 4);
                            initDebug = J$.N(361, 'initDebug', initDebug, 0);
                            name = J$.N(369, 'name', name, 4);
                            J$.N(377, 'parentPath', parentPath, 0);
                            J$.N(385, 'alias', alias, 0);
                            J$.N(393, 'pkg', pkg, 0);
                            var parentPath = J$.X1(121, J$.W(113, 'parentPath', J$.M(105, J$.R(97, 'utils', utils, 1), 'getCallerRoot', 0)(), parentPath, 1));
                            var alias, pkg;
                            try {
                                J$.X1(169, pkg = J$.W(161, 'pkg', J$.F(153, J$.R(129, 'require', require, 2), 0)(J$.B(10, '+', J$.R(137, 'parentPath', parentPath, 0), J$.T(145, '/package.json', 21, false), 0)), pkg, 0));
                                if (J$.X1(489, J$.C(8, J$.G(185, J$.R(177, 'pkg', pkg, 0), 'alias', 0)))) {
                                    J$.X1(217, alias = J$.W(209, 'alias', J$.G(201, J$.R(193, 'pkg', pkg, 0), 'alias', 0), alias, 0));
                                } else {
                                    J$.X1(249, alias = J$.W(241, 'alias', J$.G(233, J$.R(225, 'pkg', pkg, 0), 'name', 0), alias, 0));
                                }
                            } catch (err) {
                                err = J$.N(281, 'err', err, 1);
                                J$.X1(273, alias = J$.W(265, 'alias', J$.T(257, 'undefined', 21, false), alias, 0));
                            }
                            return J$.X1(337, J$.Rt(329, J$.F(321, J$.R(289, 'debug', debug, 1), 0)(J$.B(26, '+', J$.B(18, '+', J$.R(297, 'alias', alias, 0), J$.T(305, ':', 21, false), 0), J$.R(313, 'name', name, 0), 0))));
                        } catch (J$e) {
                            J$.Ex(497, J$e);
                        } finally {
                            if (J$.Fr(505))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 345), 0));
            J$.X1(457, J$.P(449, J$.G(433, J$.R(425, 'module', module, 2), 'exports', 0), '_base', J$.R(441, 'debug', debug, 1), 0));
        } catch (J$e) {
            J$.Ex(513, J$e);
        } finally {
            if (J$.Sr(521)) {
                J$.L();
                continue jalangiLabel13;
            } else {
                J$.L();
                break jalangiLabel13;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
