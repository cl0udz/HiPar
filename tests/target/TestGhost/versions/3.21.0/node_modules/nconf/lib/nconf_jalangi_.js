J$.iids = {"9":[8,14,8,21],"10":[28,24,28,49],"17":[8,22,8,38],"25":[8,14,8,39],"33":[9,12,9,19],"41":[9,20,9,38],"49":[9,12,9,39],"57":[9,12,9,48],"65":[8,14,8,39],"73":[8,14,8,39],"81":[9,12,9,48],"89":[9,12,9,48],"97":[14,13,14,19],"105":[14,34,14,42],"113":[14,30,14,44],"121":[14,13,14,44],"129":[14,13,14,44],"137":[14,13,14,44],"145":[19,1,19,6],"153":[19,17,19,24],"161":[19,25,19,42],"169":[19,17,19,43],"177":[19,17,19,51],"185":[19,1,19,51],"193":[19,1,19,52],"201":[24,2,24,8],"209":[24,10,24,15],"217":[24,17,24,23],"225":[24,25,24,34],"233":[24,36,24,44],"241":[24,1,24,45],"249":[25,16,25,22],"257":[25,34,25,39],"265":[25,16,25,40],"267":[25,16,25,33],"273":[25,16,25,40],"281":[25,16,25,40],"289":[27,5,27,10],"297":[27,28,27,32],"305":[28,16,28,23],"313":[28,24,28,41],"321":[28,44,28,49],"329":[28,16,28,50],"337":[28,51,28,55],"345":[28,16,28,56],"353":[28,16,28,56],"361":[28,9,28,57],"369":[27,34,29,6],"377":[27,34,29,6],"385":[27,34,29,6],"393":[27,5,29,7],"395":[27,5,27,27],"401":[27,5,29,8],"409":[24,54,30,2],"417":[24,54,30,2],"425":[24,54,30,2],"433":[24,54,30,2],"441":[24,54,30,2],"449":[24,1,30,3],"451":[24,1,24,53],"457":[24,1,30,4],"465":[35,1,35,6],"473":[35,13,35,19],"481":[35,13,35,23],"489":[35,1,35,23],"497":[35,1,35,24],"505":[36,1,36,6],"513":[36,14,36,20],"521":[36,14,36,25],"529":[36,1,36,25],"537":[36,1,36,26],"545":[37,1,37,6],"553":[37,19,37,25],"561":[37,19,37,35],"569":[37,1,37,35],"577":[37,1,37,36],"585":[38,1,38,6],"593":[38,23,38,29],"601":[38,23,38,43],"609":[38,1,38,43],"617":[38,1,38,44],"625":[39,1,39,6],"633":[39,17,39,24],"641":[39,25,39,42],"649":[39,17,39,43],"657":[39,1,39,43],"665":[39,1,39,44],"673":[40,1,40,6],"681":[40,18,40,26],"689":[40,1,40,26],"697":[40,1,40,27],"705":[1,1,40,27],"713":[1,1,40,27],"721":[1,1,40,27],"729":[1,1,40,27],"737":[27,34,29,6],"745":[27,34,29,6],"753":[24,54,30,2],"761":[24,54,30,2],"769":[1,1,40,27],"777":[1,1,40,27],"nBranches":0,"originalCodeFileName":"/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/node_modules/nconf/lib/nconf.js","instrumentedCodeFileName":"/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/node_modules/nconf/lib/nconf_jalangi_.js","code":"/*\n * nconf.js: Top-level include for the nconf module\n *\n * (C) 2011, Charlie Robbins and the Contributors.\n *\n */\n\nvar common = require('./nconf/common'),\n    Provider = require('./nconf/provider').Provider;\n\n//\n// `nconf` is by default an instance of `nconf.Provider`.\n//\nvar nconf = module.exports = new Provider();\n\n//\n// Expose the version from the package.json\n//\nnconf.version = require('../package.json').version;\n\n//\n// Setup all stores as lazy-loaded getters.\n//\n['argv', 'env', 'file', 'literal', 'memory'].forEach(function (store) {\n    var name = common.capitalize(store);\n\n    nconf.__defineGetter__(name, function () {\n        return require('./nconf/stores/' + store)[name];\n    });\n});\n\n//\n// Expose the various components included with nconf\n//\nnconf.key           = common.key;\nnconf.path          = common.path;\nnconf.loadFiles     = common.loadFiles;\nnconf.loadFilesSync = common.loadFilesSync;\nnconf.formats       = require('./nconf/formats');\nnconf.Provider      = Provider;\n"};
jalangiLabel76:
    while (true) {
        try {
            J$.Se(705, '/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/node_modules/nconf/lib/nconf_jalangi_.js', '/home/hipar/HiPar/tests/target/TestGhost/versions/3.21.0/node_modules/nconf/lib/nconf.js');
            J$.N(713, 'common', common, 0);
            J$.N(721, 'Provider', Provider, 0);
            J$.N(729, 'nconf', nconf, 0);
            var common = J$.X1(73, J$.W(65, 'common', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './nconf/common', 21, false)), common, 3)), Provider = J$.X1(89, J$.W(81, 'Provider', J$.G(57, J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './nconf/provider', 21, false)), 'Provider', 0), Provider, 3));
            var nconf = J$.X1(137, J$.W(129, 'nconf', J$.P(121, J$.R(97, 'module', module, 2), 'exports', J$.F(113, J$.R(105, 'Provider', Provider, 1), 1)(), 0), nconf, 3));
            J$.X1(193, J$.P(185, J$.R(145, 'nconf', nconf, 1), 'version', J$.G(177, J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, '../package.json', 21, false)), 'version', 0), 0));
            J$.X1(457, J$.M(449, J$.T(241, [
                J$.T(201, 'argv', 21, false),
                J$.T(209, 'env', 21, false),
                J$.T(217, 'file', 21, false),
                J$.T(225, 'literal', 21, false),
                J$.T(233, 'memory', 21, false)
            ], 10, false), 'forEach', 0)(J$.T(441, function (store) {
                jalangiLabel75:
                    while (true) {
                        try {
                            J$.Fe(409, arguments.callee, this, arguments);
                            arguments = J$.N(417, 'arguments', arguments, 4);
                            store = J$.N(425, 'store', store, 4);
                            J$.N(433, 'name', name, 0);
                            var name = J$.X1(281, J$.W(273, 'name', J$.M(265, J$.R(249, 'common', common, 1), 'capitalize', 0)(J$.R(257, 'store', store, 0)), name, 1));
                            J$.X1(401, J$.M(393, J$.R(289, 'nconf', nconf, 1), '__defineGetter__', 0)(J$.R(297, 'name', name, 0), J$.T(385, function () {
                                jalangiLabel74:
                                    while (true) {
                                        try {
                                            J$.Fe(369, arguments.callee, this, arguments);
                                            arguments = J$.N(377, 'arguments', arguments, 4);
                                            return J$.X1(361, J$.Rt(353, J$.G(345, J$.F(329, J$.R(305, 'require', require, 2), 0)(J$.B(10, '+', J$.T(313, './nconf/stores/', 21, false), J$.R(321, 'store', store, 0), 0)), J$.R(337, 'name', name, 0), 4)));
                                        } catch (J$e) {
                                            J$.Ex(737, J$e);
                                        } finally {
                                            if (J$.Fr(745))
                                                continue jalangiLabel74;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 369)));
                        } catch (J$e) {
                            J$.Ex(753, J$e);
                        } finally {
                            if (J$.Fr(761))
                                continue jalangiLabel75;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 409)));
            J$.X1(497, J$.P(489, J$.R(465, 'nconf', nconf, 1), 'key', J$.G(481, J$.R(473, 'common', common, 1), 'key', 0), 0));
            J$.X1(537, J$.P(529, J$.R(505, 'nconf', nconf, 1), 'path', J$.G(521, J$.R(513, 'common', common, 1), 'path', 0), 0));
            J$.X1(577, J$.P(569, J$.R(545, 'nconf', nconf, 1), 'loadFiles', J$.G(561, J$.R(553, 'common', common, 1), 'loadFiles', 0), 0));
            J$.X1(617, J$.P(609, J$.R(585, 'nconf', nconf, 1), 'loadFilesSync', J$.G(601, J$.R(593, 'common', common, 1), 'loadFilesSync', 0), 0));
            J$.X1(665, J$.P(657, J$.R(625, 'nconf', nconf, 1), 'formats', J$.F(649, J$.R(633, 'require', require, 2), 0)(J$.T(641, './nconf/formats', 21, false)), 0));
            J$.X1(697, J$.P(689, J$.R(673, 'nconf', nconf, 1), 'Provider', J$.R(681, 'Provider', Provider, 1), 0));
        } catch (J$e) {
            J$.Ex(769, J$e);
        } finally {
            if (J$.Sr(777)) {
                J$.L();
                continue jalangiLabel76;
            } else {
                J$.L();
                break jalangiLabel76;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
