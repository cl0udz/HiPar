'use strict';

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.map");

require("core-js/modules/es.object.get-own-property-descriptor");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.map");

require("core-js/modules/es.object.get-own-property-descriptor");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

var GetIntrinsic = require('../GetIntrinsic');

var test = require('tape');

var forEach = require('foreach');

var debug = require('object-inspect');

var v = require('./helpers/values');

test('export', function (t) {
  t.equal(_typeof(GetIntrinsic), 'function', 'it is a function');
  t.equal(GetIntrinsic.length, 2, 'function has length of 2');
  t.end();
});
test('throws', function (t) {
  t['throws'](function () {
    GetIntrinsic('not an intrinsic');
  }, SyntaxError, 'nonexistent intrinsic throws a syntax error');
  t['throws'](function () {
    GetIntrinsic('');
  }, TypeError, 'empty string intrinsic throws a type error');
  t['throws'](function () {
    GetIntrinsic('.');
  }, SyntaxError, '"just a dot" intrinsic throws a syntax error');
  forEach(v.nonStrings, function (nonString) {
    t['throws'](function () {
      GetIntrinsic(nonString);
    }, TypeError, debug(nonString) + ' is not a String');
  });
  forEach(v.nonBooleans, function (nonBoolean) {
    t['throws'](function () {
      GetIntrinsic('%', nonBoolean);
    }, TypeError, debug(nonBoolean) + ' is not a Boolean');
  });
  forEach(['toString', 'propertyIsEnumerable', 'hasOwnProperty'], function (objectProtoMember) {
    t['throws'](function () {
      GetIntrinsic(objectProtoMember);
    }, SyntaxError, debug(objectProtoMember) + ' is not an intrinsic');
  });
  t.end();
});
test('base intrinsics', function (t) {
  t.equal(GetIntrinsic('%Object%'), Object, '%Object% yields Object');
  t.equal(GetIntrinsic('Object'), Object, 'Object yields Object');
  t.equal(GetIntrinsic('%Array%'), Array, '%Array% yields Array');
  t.equal(GetIntrinsic('Array'), Array, 'Array yields Array');
  t.end();
});
test('dotted paths', function (t) {
  t.equal(GetIntrinsic('%Object.prototype.toString%'), Object.prototype.toString, '%Object.prototype.toString% yields Object.prototype.toString');
  t.equal(GetIntrinsic('Object.prototype.toString'), Object.prototype.toString, 'Object.prototype.toString yields Object.prototype.toString');
  t.equal(GetIntrinsic('%Array.prototype.push%'), Array.prototype.push, '%Array.prototype.push% yields Array.prototype.push');
  t.equal(GetIntrinsic('Array.prototype.push'), Array.prototype.push, 'Array.prototype.push yields Array.prototype.push');
  t.end();
});
test('accessors', {
  skip: !Object.getOwnPropertyDescriptor || typeof Map !== 'function'
}, function (t) {
  var actual = Object.getOwnPropertyDescriptor(Map.prototype, 'size');
  t.ok(actual, 'Map.prototype.size has a descriptor');
  t.equal(_typeof(actual.get), 'function', 'Map.prototype.size has a getter function');
  t.equal(GetIntrinsic('%Map.prototype.size%'), actual.get, '%Map.prototype.size% yields the getter for it');
  t.equal(GetIntrinsic('Map.prototype.size'), actual.get, 'Map.prototype.size yields the getter for it');
  t.end();
});