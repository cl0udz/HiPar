'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var Keys = require('./keys');

var internals = {};
module.exports = Keys.extend({
  type: 'object',
  cast: {
    map: {
      from: function from(value) {
        return value && _typeof(value) === 'object';
      },
      to: function to(value, helpers) {
        return new Map(Object.entries(value));
      }
    }
  }
});