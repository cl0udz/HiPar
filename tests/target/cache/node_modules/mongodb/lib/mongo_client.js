J$.noInstrEval = false;
jalangiLabel17:
    while (true) {
        try {
            J$.Se(525321, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/mongo_client.js');
            function MongoClient(url, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(522105, arguments.callee, this, arguments);
                            arguments = J$.N(522113, 'arguments', arguments, true, false, false);
                            url = J$.N(522121, 'url', url, true, false, false);
                            options = J$.N(522129, 'options', options, true, false, false);
                            J$.N(522137, 'promiseLibrary', promiseLibrary, false, false, false);
                            if (J$.C(32904, J$.U(32626, '!', J$.B(32618, 'instanceof', J$.R(521809, 'this', this, false, false), J$.R(521817, 'MongoClient', MongoClient, false, true)))))
                                return J$.Rt(521857, J$.F(521849, J$.R(521825, 'MongoClient', MongoClient, false, true), true)(J$.R(521833, 'url', url, false, false), J$.R(521841, 'options', options, false, false)));
                            J$.M(521881, J$.R(521865, 'EventEmitter', EventEmitter, false, true), 'call', false)(J$.R(521873, 'this', this, false, false));
                            J$.P(522017, J$.R(521889, 'this', this, false, false), 's', J$.T(522009, {
                                url: J$.R(521897, 'url', url, false, false),
                                options: J$.C(32912, J$.R(521905, 'options', options, false, false)) ? J$._() : J$.T(521913, {}, 11, false),
                                promiseLibrary: J$.T(521921, null, 25, false),
                                dbCache: J$.F(521937, J$.I(typeof Map === 'undefined' ? Map = J$.R(521929, 'Map', undefined, true, true) : Map = J$.R(521929, 'Map', Map, true, true)), true)(),
                                sessions: J$.F(521953, J$.I(typeof Set === 'undefined' ? Set = J$.R(521945, 'Set', undefined, true, true) : Set = J$.R(521945, 'Set', Set, true, true)), true)(),
                                writeConcern: J$.M(521977, J$.R(521961, 'WriteConcern', WriteConcern, false, true), 'fromOptions', false)(J$.R(521969, 'options', options, false, false)),
                                namespace: J$.F(522001, J$.R(521985, 'MongoDBNamespace', MongoDBNamespace, false, true), true)(J$.T(521993, 'admin', 21, false))
                            }, 11, false));
                            var promiseLibrary = J$.W(522065, 'promiseLibrary', J$.C(32920, J$.G(522049, J$.G(522041, J$.G(522033, J$.R(522025, 'this', this, false, false), 's'), 'options'), 'promiseLibrary')) ? J$._() : J$.I(typeof Promise === 'undefined' ? Promise = J$.R(522057, 'Promise', undefined, true, true) : Promise = J$.R(522057, 'Promise', Promise, true, true)), promiseLibrary, false, false);
                            J$.P(522097, J$.G(522081, J$.R(522073, 'this', this, false, false), 's'), 'promiseLibrary', J$.R(522089, 'promiseLibrary', promiseLibrary, false, false));
                        } catch (J$e) {
                            J$.Ex(525441, J$e);
                        } finally {
                            if (J$.Fr(525449))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(525329, 'ChangeStream', ChangeStream, false, false, false);
            J$.N(525337, 'Db', Db, false, false, false);
            J$.N(525345, 'EventEmitter', EventEmitter, false, false, false);
            J$.N(525353, 'executeOperation', executeOperation, false, false, false);
            J$.N(525361, 'inherits', inherits, false, false, false);
            J$.N(525369, 'MongoError', MongoError, false, false, false);
            J$.N(525377, 'deprecate', deprecate, false, false, false);
            J$.N(525385, 'WriteConcern', WriteConcern, false, false, false);
            J$.N(525393, 'MongoDBNamespace', MongoDBNamespace, false, false, false);
            J$.N(525401, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(525409, 'ConnectOperation', ConnectOperation, false, false, false);
            J$.N(525417, 'CloseOperation', CloseOperation, false, false, false);
            MongoClient = J$.N(525433, 'MongoClient', J$.T(525425, MongoClient, 12, false), true, false, false);
            J$.T(521377, 'use strict', 21, false);
            var ChangeStream = J$.W(521409, 'ChangeStream', J$.F(521401, J$.I(typeof require === 'undefined' ? require = J$.R(521385, 'require', undefined, true, true) : require = J$.R(521385, 'require', require, true, true)), false)(J$.T(521393, './change_stream', 21, false)), ChangeStream, false, true);
            var Db = J$.W(521441, 'Db', J$.F(521433, J$.I(typeof require === 'undefined' ? require = J$.R(521417, 'require', undefined, true, true) : require = J$.R(521417, 'require', require, true, true)), false)(J$.T(521425, './db', 21, false)), Db, false, true);
            var EventEmitter = J$.W(521481, 'EventEmitter', J$.G(521473, J$.F(521465, J$.I(typeof require === 'undefined' ? require = J$.R(521449, 'require', undefined, true, true) : require = J$.R(521449, 'require', require, true, true)), false)(J$.T(521457, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            var executeOperation = J$.W(521513, 'executeOperation', J$.F(521505, J$.I(typeof require === 'undefined' ? require = J$.R(521489, 'require', undefined, true, true) : require = J$.R(521489, 'require', require, true, true)), false)(J$.T(521497, './operations/execute_operation', 21, false)), executeOperation, false, true);
            var inherits = J$.W(521553, 'inherits', J$.G(521545, J$.F(521537, J$.I(typeof require === 'undefined' ? require = J$.R(521521, 'require', undefined, true, true) : require = J$.R(521521, 'require', require, true, true)), false)(J$.T(521529, 'util', 21, false)), 'inherits'), inherits, false, true);
            var MongoError = J$.W(521593, 'MongoError', J$.G(521585, J$.F(521577, J$.I(typeof require === 'undefined' ? require = J$.R(521561, 'require', undefined, true, true) : require = J$.R(521561, 'require', require, true, true)), false)(J$.T(521569, './core', 21, false)), 'MongoError'), MongoError, false, true);
            var deprecate = J$.W(521633, 'deprecate', J$.G(521625, J$.F(521617, J$.I(typeof require === 'undefined' ? require = J$.R(521601, 'require', undefined, true, true) : require = J$.R(521601, 'require', require, true, true)), false)(J$.T(521609, 'util', 21, false)), 'deprecate'), deprecate, false, true);
            var WriteConcern = J$.W(521665, 'WriteConcern', J$.F(521657, J$.I(typeof require === 'undefined' ? require = J$.R(521641, 'require', undefined, true, true) : require = J$.R(521641, 'require', require, true, true)), false)(J$.T(521649, './write_concern', 21, false)), WriteConcern, false, true);
            var MongoDBNamespace = J$.W(521705, 'MongoDBNamespace', J$.G(521697, J$.F(521689, J$.I(typeof require === 'undefined' ? require = J$.R(521673, 'require', undefined, true, true) : require = J$.R(521673, 'require', require, true, true)), false)(J$.T(521681, './utils', 21, false)), 'MongoDBNamespace'), MongoDBNamespace, false, true);
            var ReadPreference = J$.W(521737, 'ReadPreference', J$.F(521729, J$.I(typeof require === 'undefined' ? require = J$.R(521713, 'require', undefined, true, true) : require = J$.R(521713, 'require', require, true, true)), false)(J$.T(521721, './core/topologies/read_preference', 21, false)), ReadPreference, false, true);
            var ConnectOperation = J$.W(521769, 'ConnectOperation', J$.F(521761, J$.I(typeof require === 'undefined' ? require = J$.R(521745, 'require', undefined, true, true) : require = J$.R(521745, 'require', require, true, true)), false)(J$.T(521753, './operations/connect', 21, false)), ConnectOperation, false, true);
            var CloseOperation = J$.W(521801, 'CloseOperation', J$.F(521793, J$.I(typeof require === 'undefined' ? require = J$.R(521777, 'require', undefined, true, true) : require = J$.R(521777, 'require', require, true, true)), false)(J$.T(521785, './operations/close', 21, false)), CloseOperation, false, true);
            J$.F(522169, J$.R(522145, 'inherits', inherits, false, true), false)(J$.R(522153, 'MongoClient', MongoClient, false, true), J$.R(522161, 'EventEmitter', EventEmitter, false, true));
            J$.M(522281, J$.I(typeof Object === 'undefined' ? Object = J$.R(522177, 'Object', undefined, true, true) : Object = J$.R(522177, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(522193, J$.R(522185, 'MongoClient', MongoClient, false, true), 'prototype'), J$.T(522201, 'writeConcern', 21, false), J$.T(522273, {
                enumerable: J$.T(522209, true, 23, false),
                get: J$.T(522265, function get() {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.Fe(522249, arguments.callee, this, arguments);
                                arguments = J$.N(522257, 'arguments', arguments, true, false, false);
                                return J$.Rt(522241, J$.G(522233, J$.G(522225, J$.R(522217, 'this', this, false, false), 's'), 'writeConcern'));
                            } catch (J$e) {
                                J$.Ex(525457, J$e);
                            } finally {
                                if (J$.Fr(525465))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(522385, J$.I(typeof Object === 'undefined' ? Object = J$.R(522289, 'Object', undefined, true, true) : Object = J$.R(522289, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(522305, J$.R(522297, 'MongoClient', MongoClient, false, true), 'prototype'), J$.T(522313, 'readPreference', 21, false), J$.T(522377, {
                enumerable: J$.T(522321, true, 23, false),
                get: J$.T(522369, function get() {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(522353, arguments.callee, this, arguments);
                                arguments = J$.N(522361, 'arguments', arguments, true, false, false);
                                return J$.Rt(522345, J$.G(522337, J$.R(522329, 'ReadPreference', ReadPreference, false, true), 'primary'));
                            } catch (J$e) {
                                J$.Ex(525473, J$e);
                            } finally {
                                if (J$.Fr(525481))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.P(522569, J$.G(522401, J$.R(522393, 'MongoClient', MongoClient, false, true), 'prototype'), 'connect', J$.T(522561, function (callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(522529, arguments.callee, this, arguments);
                            arguments = J$.N(522537, 'arguments', arguments, true, false, false);
                            callback = J$.N(522545, 'callback', callback, true, false, false);
                            J$.N(522553, 'operation', operation, false, false, false);
                            if (J$.C(32928, J$.B(32642, '===', J$.U(32634, 'typeof', J$.R(522409, 'callback', callback, false, false)), J$.T(522417, 'string', 21, false)))) {
                                throw J$.F(522441, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(522425, 'TypeError', undefined, true, true) : TypeError = J$.R(522425, 'TypeError', TypeError, true, true)), true)(J$.T(522433, '`connect` only accepts a callback', 21, false));
                            }
                            var operation = J$.W(522473, 'operation', J$.F(522465, J$.R(522449, 'ConnectOperation', ConnectOperation, false, true), true)(J$.R(522457, 'this', this, false, false)), operation, false, false);
                            return J$.Rt(522521, J$.F(522513, J$.R(522481, 'executeOperation', executeOperation, false, true), false)(J$.R(522489, 'this', this, false, false), J$.R(522497, 'operation', operation, false, false), J$.R(522505, 'callback', callback, false, false)));
                        } catch (J$e) {
                            J$.Ex(525489, J$e);
                        } finally {
                            if (J$.Fr(525497))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(522753, J$.G(522585, J$.R(522577, 'MongoClient', MongoClient, false, true), 'prototype'), 'logout', J$.F(522745, J$.R(522593, 'deprecate', deprecate, false, true), false)(J$.T(522729, function (options, callback) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(522697, arguments.callee, this, arguments);
                            arguments = J$.N(522705, 'arguments', arguments, true, false, false);
                            options = J$.N(522713, 'options', options, true, false, false);
                            callback = J$.N(522721, 'callback', callback, true, false, false);
                            if (J$.C(32936, J$.B(32658, '===', J$.U(32650, 'typeof', J$.R(522601, 'options', options, false, false)), J$.T(522609, 'function', 21, false))))
                                callback = J$.W(522625, 'callback', J$.R(522617, 'options', options, false, false), callback, false, false), options = J$.W(522641, 'options', J$.T(522633, {}, 11, false), options, false, false);
                            if (J$.C(32944, J$.B(32674, '===', J$.U(32666, 'typeof', J$.R(522649, 'callback', callback, false, false)), J$.T(522657, 'function', 21, false))))
                                J$.F(522689, J$.R(522665, 'callback', callback, false, false), false)(J$.T(522673, null, 25, false), J$.T(522681, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(525505, J$e);
                        } finally {
                            if (J$.Fr(525513))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.T(522737, 'Multiple authentication is prohibited on a connected client, please only authenticate once per MongoClient', 21, false)));
            J$.P(522961, J$.G(522769, J$.R(522761, 'MongoClient', MongoClient, false, true), 'prototype'), 'close', J$.T(522953, function (force, callback) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(522913, arguments.callee, this, arguments);
                            arguments = J$.N(522921, 'arguments', arguments, true, false, false);
                            force = J$.N(522929, 'force', force, true, false, false);
                            callback = J$.N(522937, 'callback', callback, true, false, false);
                            J$.N(522945, 'operation', operation, false, false, false);
                            if (J$.C(32952, J$.B(32690, '===', J$.U(32682, 'typeof', J$.R(522777, 'force', force, false, false)), J$.T(522785, 'function', 21, false))))
                                callback = J$.W(522801, 'callback', J$.R(522793, 'force', force, false, false), callback, false, false), force = J$.W(522817, 'force', J$.T(522809, false, 23, false), force, false, false);
                            var operation = J$.W(522857, 'operation', J$.F(522849, J$.R(522825, 'CloseOperation', CloseOperation, false, true), true)(J$.R(522833, 'this', this, false, false), J$.R(522841, 'force', force, false, false)), operation, false, false);
                            return J$.Rt(522905, J$.F(522897, J$.R(522865, 'executeOperation', executeOperation, false, true), false)(J$.R(522873, 'this', this, false, false), J$.R(522881, 'operation', operation, false, false), J$.R(522889, 'callback', callback, false, false)));
                        } catch (J$e) {
                            J$.Ex(525521, J$e);
                        } finally {
                            if (J$.Fr(525529))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(523489, J$.G(522977, J$.R(522969, 'MongoClient', MongoClient, false, true), 'prototype'), 'db', J$.T(523481, function (dbName, options) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(523433, arguments.callee, this, arguments);
                            arguments = J$.N(523441, 'arguments', arguments, true, false, false);
                            dbName = J$.N(523449, 'dbName', dbName, true, false, false);
                            options = J$.N(523457, 'options', options, true, false, false);
                            J$.N(523465, 'finalOptions', finalOptions, false, false, false);
                            J$.N(523473, 'db', db, false, false, false);
                            options = J$.W(523001, 'options', J$.C(32960, J$.R(522985, 'options', options, false, false)) ? J$._() : J$.T(522993, {}, 11, false), options, false, false);
                            if (J$.C(32968, J$.U(32698, '!', J$.R(523009, 'dbName', dbName, false, false)))) {
                                dbName = J$.W(523049, 'dbName', J$.G(523041, J$.G(523033, J$.G(523025, J$.R(523017, 'this', this, false, false), 's'), 'options'), 'dbName'), dbName, false, false);
                            }
                            var finalOptions = J$.W(523113, 'finalOptions', J$.M(523105, J$.I(typeof Object === 'undefined' ? Object = J$.R(523057, 'Object', undefined, true, true) : Object = J$.R(523057, 'Object', Object, true, true)), 'assign', false)(J$.T(523065, {}, 11, false), J$.G(523089, J$.G(523081, J$.R(523073, 'this', this, false, false), 's'), 'options'), J$.R(523097, 'options', options, false, false)), finalOptions, false, false);
                            if (J$.C(32984, J$.C(32976, J$.M(523153, J$.G(523137, J$.G(523129, J$.R(523121, 'this', this, false, false), 's'), 'dbCache'), 'has', false)(J$.R(523145, 'dbName', dbName, false, false))) ? J$.B(32706, '!==', J$.G(523169, J$.R(523161, 'finalOptions', finalOptions, false, false), 'returnNonCachedInstance'), J$.T(523177, true, 23, false)) : J$._())) {
                                return J$.Rt(523225, J$.M(523217, J$.G(523201, J$.G(523193, J$.R(523185, 'this', this, false, false), 's'), 'dbCache'), 'get', false)(J$.R(523209, 'dbName', dbName, false, false)));
                            }
                            J$.P(523265, J$.R(523233, 'finalOptions', finalOptions, false, false), 'promiseLibrary', J$.G(523257, J$.G(523249, J$.R(523241, 'this', this, false, false), 's'), 'promiseLibrary'));
                            if (J$.C(32992, J$.U(32714, '!', J$.G(523281, J$.R(523273, 'this', this, false, false), 'topology')))) {
                                throw J$.F(523305, J$.R(523289, 'MongoError', MongoError, false, true), true)(J$.T(523297, 'MongoClient must be connected before calling MongoClient.prototype.db', 21, false));
                            }
                            var db = J$.W(523361, 'db', J$.F(523353, J$.R(523313, 'Db', Db, false, true), true)(J$.R(523321, 'dbName', dbName, false, false), J$.G(523337, J$.R(523329, 'this', this, false, false), 'topology'), J$.R(523345, 'finalOptions', finalOptions, false, false)), db, false, false);
                            J$.M(523409, J$.G(523385, J$.G(523377, J$.R(523369, 'this', this, false, false), 's'), 'dbCache'), 'set', false)(J$.R(523393, 'dbName', dbName, false, false), J$.R(523401, 'db', db, false, false));
                            return J$.Rt(523425, J$.R(523417, 'db', db, false, false));
                        } catch (J$e) {
                            J$.Ex(525537, J$e);
                        } finally {
                            if (J$.Fr(525545))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(523641, J$.G(523505, J$.R(523497, 'MongoClient', MongoClient, false, true), 'prototype'), 'isConnected', J$.T(523633, function (options) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(523609, arguments.callee, this, arguments);
                            arguments = J$.N(523617, 'arguments', arguments, true, false, false);
                            options = J$.N(523625, 'options', options, true, false, false);
                            options = J$.W(523529, 'options', J$.C(33000, J$.R(523513, 'options', options, false, false)) ? J$._() : J$.T(523521, {}, 11, false), options, false, false);
                            if (J$.C(33008, J$.U(32722, '!', J$.G(523545, J$.R(523537, 'this', this, false, false), 'topology'))))
                                return J$.Rt(523561, J$.T(523553, false, 23, false));
                            return J$.Rt(523601, J$.M(523593, J$.G(523577, J$.R(523569, 'this', this, false, false), 'topology'), 'isConnected', false)(J$.R(523585, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(525553, J$e);
                        } finally {
                            if (J$.Fr(525561))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(524001, J$.R(523649, 'MongoClient', MongoClient, false, true), 'connect', J$.T(523993, function (url, options, callback) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(523937, arguments.callee, this, arguments);
                            arguments = J$.N(523945, 'arguments', arguments, true, false, false);
                            url = J$.N(523953, 'url', url, true, false, false);
                            options = J$.N(523961, 'options', options, true, false, false);
                            callback = J$.N(523969, 'callback', callback, true, false, false);
                            J$.N(523977, 'args', args, false, false, false);
                            J$.N(523985, 'mongoClient', mongoClient, false, false, false);
                            var args = J$.W(523705, 'args', J$.M(523697, J$.G(523673, J$.G(523665, J$.I(typeof Array === 'undefined' ? Array = J$.R(523657, 'Array', undefined, true, true) : Array = J$.R(523657, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(523681, 'arguments', undefined, true, true) : arguments = J$.R(523681, 'arguments', arguments, true, true)), J$.T(523689, 1, 22, false)), args, false, false);
                            callback = J$.W(523785, 'callback', J$.C(33016, J$.B(32746, '===', J$.U(32738, 'typeof', J$.G(523745, J$.R(523713, 'args', args, false, false), J$.B(32730, '-', J$.G(523729, J$.R(523721, 'args', args, false, false), 'length'), J$.T(523737, 1, 22, false)))), J$.T(523753, 'function', 21, false))) ? J$.M(523769, J$.R(523761, 'args', args, false, false), 'pop', false)() : J$.T(523777, undefined, 24, false), callback, false, false);
                            options = J$.W(523833, 'options', J$.C(33024, J$.G(523801, J$.R(523793, 'args', args, false, false), 'length')) ? J$.M(523817, J$.R(523809, 'args', args, false, false), 'shift', false)() : J$.T(523825, null, 25, false), options, false, false);
                            options = J$.W(523857, 'options', J$.C(33032, J$.R(523841, 'options', options, false, false)) ? J$._() : J$.T(523849, {}, 11, false), options, false, false);
                            var mongoClient = J$.W(523897, 'mongoClient', J$.F(523889, J$.R(523865, 'MongoClient', MongoClient, false, true), true)(J$.R(523873, 'url', url, false, false), J$.R(523881, 'options', options, false, false)), mongoClient, false, false);
                            return J$.Rt(523929, J$.M(523921, J$.R(523905, 'mongoClient', mongoClient, false, false), 'connect', false)(J$.R(523913, 'callback', callback, false, false)));
                        } catch (J$e) {
                            J$.Ex(525569, J$e);
                        } finally {
                            if (J$.Fr(525577))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(524257, J$.G(524017, J$.R(524009, 'MongoClient', MongoClient, false, true), 'prototype'), 'startSession', J$.T(524249, function (options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(524225, arguments.callee, this, arguments);
                            arguments = J$.N(524233, 'arguments', arguments, true, false, false);
                            options = J$.N(524241, 'options', options, true, false, false);
                            options = J$.W(524065, 'options', J$.M(524057, J$.I(typeof Object === 'undefined' ? Object = J$.R(524025, 'Object', undefined, true, true) : Object = J$.R(524025, 'Object', Object, true, true)), 'assign', false)(J$.T(524041, { explicit: J$.T(524033, true, 23, false) }, 11, false), J$.R(524049, 'options', options, false, false)), options, false, false);
                            if (J$.C(33040, J$.U(32754, '!', J$.G(524081, J$.R(524073, 'this', this, false, false), 'topology')))) {
                                throw J$.F(524105, J$.R(524089, 'MongoError', MongoError, false, true), true)(J$.T(524097, 'Must connect to a server before calling this method', 21, false));
                            }
                            if (J$.C(33048, J$.U(32762, '!', J$.M(524129, J$.G(524121, J$.R(524113, 'this', this, false, false), 'topology'), 'hasSessionSupport', false)()))) {
                                throw J$.F(524153, J$.R(524137, 'MongoError', MongoError, false, true), true)(J$.T(524145, 'Current topology does not support sessions', 21, false));
                            }
                            return J$.Rt(524217, J$.M(524209, J$.G(524169, J$.R(524161, 'this', this, false, false), 'topology'), 'startSession', false)(J$.R(524177, 'options', options, false, false), J$.G(524201, J$.G(524193, J$.R(524185, 'this', this, false, false), 's'), 'options')));
                        } catch (J$e) {
                            J$.Ex(525585, J$e);
                        } finally {
                            if (J$.Fr(525593))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(524985, J$.G(524273, J$.R(524265, 'MongoClient', MongoClient, false, true), 'prototype'), 'withSession', J$.T(524977, function (options, operation) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(524921, arguments.callee, this, arguments);
                            arguments = J$.N(524929, 'arguments', arguments, true, false, false);
                            options = J$.N(524937, 'options', options, true, false, false);
                            operation = J$.N(524945, 'operation', operation, true, false, false);
                            J$.N(524953, 'session', session, false, false, false);
                            J$.N(524961, '_cleanupHandler', _cleanupHandler, false, false, false);
                            J$.N(524969, 'result', result, false, false, false);
                            if (J$.C(33056, J$.B(32778, '===', J$.U(32770, 'typeof', J$.R(524281, 'options', options, false, false)), J$.T(524289, 'function', 21, false))))
                                operation = J$.W(524305, 'operation', J$.R(524297, 'options', options, false, false), operation, false, false), options = J$.W(524321, 'options', J$.T(524313, undefined, 24, false), options, false, false);
                            var session = J$.W(524353, 'session', J$.M(524345, J$.R(524329, 'this', this, false, false), 'startSession', false)(J$.R(524337, 'options', options, false, false)), session, false, false);
                            var _cleanupHandler = J$.W(524601, '_cleanupHandler', J$.T(524593, function cleanupHandler(err, result, opts) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(524553, arguments.callee, this, arguments);
                                            arguments = J$.N(524561, 'arguments', arguments, true, false, false);
                                            err = J$.N(524569, 'err', err, true, false, false);
                                            result = J$.N(524577, 'result', result, true, false, false);
                                            opts = J$.N(524585, 'opts', opts, true, false, false);
                                            _cleanupHandler = J$.W(524409, '_cleanupHandler', J$.T(524401, function cleanupHandler() {
                                                jalangiLabel10:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(524385, arguments.callee, this, arguments);
                                                            arguments = J$.N(524393, 'arguments', arguments, true, false, false);
                                                            throw J$.F(524377, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(524361, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(524361, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(524369, 'cleanupHandler was called too many times', 21, false));
                                                        } catch (J$e) {
                                                            J$.Ex(525601, J$e);
                                                        } finally {
                                                            if (J$.Fr(525609))
                                                                continue jalangiLabel10;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), _cleanupHandler, false, false);
                                            opts = J$.W(524457, 'opts', J$.M(524449, J$.I(typeof Object === 'undefined' ? Object = J$.R(524417, 'Object', undefined, true, true) : Object = J$.R(524417, 'Object', Object, true, true)), 'assign', false)(J$.T(524433, { 'throw': J$.T(524425, true, 23, false) }, 11, false), J$.R(524441, 'opts', opts, false, false)), opts, false, false);
                                            J$.M(524473, J$.R(524465, 'session', session, false, false), 'endSession', false)();
                                            if (J$.C(33072, J$.R(524481, 'err', err, false, false))) {
                                                if (J$.C(33064, J$.G(524505, J$.R(524489, 'opts', opts, false, false), J$.T(524497, 'throw', 21, false))))
                                                    throw J$.R(524513, 'err', err, false, false);
                                                return J$.Rt(524545, J$.M(524537, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(524521, 'Promise', undefined, true, true) : Promise = J$.R(524521, 'Promise', Promise, true, true)), 'reject', false)(J$.R(524529, 'err', err, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(525617, J$e);
                                        } finally {
                                            if (J$.Fr(525625))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _cleanupHandler, false, false);
                            try {
                                var result = J$.W(524633, 'result', J$.F(524625, J$.R(524609, 'operation', operation, false, false), false)(J$.R(524617, 'session', session, false, false)), result, false, false);
                                return J$.Rt(524849, J$.M(524841, J$.M(524737, J$.M(524657, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(524641, 'Promise', undefined, true, true) : Promise = J$.R(524641, 'Promise', Promise, true, true)), 'resolve', false)(J$.R(524649, 'result', result, false, false)), 'then', false)(J$.T(524729, function (result) {
                                    jalangiLabel12:
                                        while (true) {
                                            try {
                                                J$.Fe(524705, arguments.callee, this, arguments);
                                                arguments = J$.N(524713, 'arguments', arguments, true, false, false);
                                                result = J$.N(524721, 'result', result, true, false, false);
                                                return J$.Rt(524697, J$.F(524689, J$.R(524665, '_cleanupHandler', _cleanupHandler, false, false), false)(J$.T(524673, null, 25, false), J$.R(524681, 'result', result, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(525633, J$e);
                                            } finally {
                                                if (J$.Fr(525641))
                                                    continue jalangiLabel12;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), J$.T(524745, 'catch', 21, false), false)(J$.T(524833, function (err) {
                                    jalangiLabel13:
                                        while (true) {
                                            try {
                                                J$.Fe(524809, arguments.callee, this, arguments);
                                                arguments = J$.N(524817, 'arguments', arguments, true, false, false);
                                                err = J$.N(524825, 'err', err, true, false, false);
                                                return J$.Rt(524801, J$.F(524793, J$.R(524753, '_cleanupHandler', _cleanupHandler, false, false), false)(J$.R(524761, 'err', err, false, false), J$.T(524769, null, 25, false), J$.T(524785, { 'throw': J$.T(524777, true, 23, false) }, 11, false)));
                                            } catch (J$e) {
                                                J$.Ex(525649, J$e);
                                            } finally {
                                                if (J$.Fr(525657))
                                                    continue jalangiLabel13;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)));
                            } catch (err) {
                                J$.N(524913, 'err', err, false, false, true);
                                return J$.Rt(524905, J$.F(524897, J$.R(524857, '_cleanupHandler', _cleanupHandler, false, false), false)(J$.R(524865, 'err', err, false, false), J$.T(524873, null, 25, false), J$.T(524889, { 'throw': J$.T(524881, false, 23, false) }, 11, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(525665, J$e);
                        } finally {
                            if (J$.Fr(525673))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(525201, J$.G(525001, J$.R(524993, 'MongoClient', MongoClient, false, true), 'prototype'), 'watch', J$.T(525193, function (pipeline, options) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(525161, arguments.callee, this, arguments);
                            arguments = J$.N(525169, 'arguments', arguments, true, false, false);
                            pipeline = J$.N(525177, 'pipeline', pipeline, true, false, false);
                            options = J$.N(525185, 'options', options, true, false, false);
                            pipeline = J$.W(525025, 'pipeline', J$.C(33080, J$.R(525009, 'pipeline', pipeline, false, false)) ? J$._() : J$.T(525017, [], 10, false), pipeline, false, false);
                            options = J$.W(525049, 'options', J$.C(33088, J$.R(525033, 'options', options, false, false)) ? J$._() : J$.T(525041, {}, 11, false), options, false, false);
                            if (J$.C(33096, J$.U(32786, '!', J$.M(525073, J$.I(typeof Array === 'undefined' ? Array = J$.R(525057, 'Array', undefined, true, true) : Array = J$.R(525057, 'Array', Array, true, true)), 'isArray', false)(J$.R(525065, 'pipeline', pipeline, false, false))))) {
                                options = J$.W(525089, 'options', J$.R(525081, 'pipeline', pipeline, false, false), options, false, false);
                                pipeline = J$.W(525105, 'pipeline', J$.T(525097, [], 10, false), pipeline, false, false);
                            }
                            return J$.Rt(525153, J$.F(525145, J$.R(525113, 'ChangeStream', ChangeStream, false, true), true)(J$.R(525121, 'this', this, false, false), J$.R(525129, 'pipeline', pipeline, false, false), J$.R(525137, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(525681, J$e);
                        } finally {
                            if (J$.Fr(525689))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(525289, J$.G(525217, J$.R(525209, 'MongoClient', MongoClient, false, true), 'prototype'), 'getLogger', J$.T(525281, function () {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(525265, arguments.callee, this, arguments);
                            arguments = J$.N(525273, 'arguments', arguments, true, false, false);
                            return J$.Rt(525257, J$.G(525249, J$.G(525241, J$.G(525233, J$.R(525225, 'this', this, false, false), 's'), 'options'), 'logger'));
                        } catch (J$e) {
                            J$.Ex(525697, J$e);
                        } finally {
                            if (J$.Fr(525705))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(525313, J$.I(typeof module === 'undefined' ? module = J$.R(525297, 'module', undefined, true, true) : module = J$.R(525297, 'module', module, true, true)), 'exports', J$.R(525305, 'MongoClient', MongoClient, false, true));
        } catch (J$e) {
            J$.Ex(525713, J$e);
        } finally {
            if (J$.Sr(525721))
                continue jalangiLabel17;
            else
                break jalangiLabel17;
        }
    }
// JALANGI DO NOT INSTRUMENT

