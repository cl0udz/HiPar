J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(461129, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/error.js');
            function isGetMoreError(error) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(460905, arguments.callee, this, arguments);
                            arguments = J$.N(460913, 'arguments', arguments, true, false, false);
                            error = J$.N(460921, 'error', error, true, false, false);
                            if (J$.C(29040, J$.G(460857, J$.R(460841, 'error', error, false, false), J$.R(460849, 'mongoErrorContextSymbol', mongoErrorContextSymbol, false, true)))) {
                                return J$.Rt(460897, J$.G(460889, J$.G(460881, J$.R(460865, 'error', error, false, false), J$.R(460873, 'mongoErrorContextSymbol', mongoErrorContextSymbol, false, true)), 'isGetMore'));
                            }
                        } catch (J$e) {
                            J$.Ex(461193, J$e);
                        } finally {
                            if (J$.Fr(461201))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isResumableError(error) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(461065, arguments.callee, this, arguments);
                            arguments = J$.N(461073, 'arguments', arguments, true, false, false);
                            error = J$.N(461081, 'error', error, true, false, false);
                            if (J$.C(29048, J$.U(28538, '!', J$.F(460945, J$.R(460929, 'isGetMoreError', isGetMoreError, false, true), false)(J$.R(460937, 'error', error, false, false))))) {
                                return J$.Rt(460961, J$.T(460953, false, 23, false));
                            }
                            if (J$.C(29056, J$.B(28546, 'instanceof', J$.R(460969, 'error', error, false, false), J$.R(460977, 'MongoNetworkError', MongoNetworkError, false, true)))) {
                                return J$.Rt(460993, J$.T(460985, true, 23, false));
                            }
                            return J$.Rt(461057, J$.U(28554, '!', J$.C(29064, J$.M(461025, J$.R(461001, 'GET_MORE_NON_RESUMABLE_CODES', GET_MORE_NON_RESUMABLE_CODES, false, true), 'has', false)(J$.G(461017, J$.R(461009, 'error', error, false, false), 'code'))) ? J$._() : J$.M(461049, J$.R(461033, 'error', error, false, false), 'hasErrorLabel', false)(J$.T(461041, 'NonRetryableChangeStreamError', 21, false))));
                        } catch (J$e) {
                            J$.Ex(461209, J$e);
                        } finally {
                            if (J$.Fr(461217))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(461137, 'MongoNetworkError', MongoNetworkError, false, false, false);
            J$.N(461145, 'mongoErrorContextSymbol', mongoErrorContextSymbol, false, false, false);
            J$.N(461153, 'GET_MORE_NON_RESUMABLE_CODES', GET_MORE_NON_RESUMABLE_CODES, false, false, false);
            isGetMoreError = J$.N(461169, 'isGetMoreError', J$.T(461161, isGetMoreError, 12, false), true, false, false);
            isResumableError = J$.N(461185, 'isResumableError', J$.T(461177, isResumableError, 12, false), true, false, false);
            J$.T(460697, 'use strict', 21, false);
            var MongoNetworkError = J$.W(460737, 'MongoNetworkError', J$.G(460729, J$.F(460721, J$.I(typeof require === 'undefined' ? require = J$.R(460705, 'require', undefined, true, true) : require = J$.R(460705, 'require', require, true, true)), false)(J$.T(460713, './core', 21, false)), 'MongoNetworkError'), MongoNetworkError, false, true);
            var mongoErrorContextSymbol = J$.W(460777, 'mongoErrorContextSymbol', J$.G(460769, J$.F(460761, J$.I(typeof require === 'undefined' ? require = J$.R(460745, 'require', undefined, true, true) : require = J$.R(460745, 'require', require, true, true)), false)(J$.T(460753, './core', 21, false)), 'mongoErrorContextSymbol'), mongoErrorContextSymbol, false, true);
            var GET_MORE_NON_RESUMABLE_CODES = J$.W(460833, 'GET_MORE_NON_RESUMABLE_CODES', J$.F(460825, J$.I(typeof Set === 'undefined' ? Set = J$.R(460785, 'Set', undefined, true, true) : Set = J$.R(460785, 'Set', Set, true, true)), true)(J$.T(460817, [
                J$.T(460793, 136, 22, false),
                J$.T(460801, 237, 22, false),
                J$.T(460809, 11601, 22, false)
            ], 10, false)), GET_MORE_NON_RESUMABLE_CODES, false, true);
            J$.P(461121, J$.I(typeof module === 'undefined' ? module = J$.R(461089, 'module', undefined, true, true) : module = J$.R(461089, 'module', module, true, true)), 'exports', J$.T(461113, {
                GET_MORE_NON_RESUMABLE_CODES: J$.R(461097, 'GET_MORE_NON_RESUMABLE_CODES', GET_MORE_NON_RESUMABLE_CODES, false, true),
                isResumableError: J$.R(461105, 'isResumableError', isResumableError, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(461225, J$e);
        } finally {
            if (J$.Sr(461233))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

