J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(829353, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/url_parser.js');
            function matchesParentDomain(srvAddress, parentDomain) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(819937, arguments.callee, this, arguments);
                            arguments = J$.N(819945, 'arguments', arguments, true, false, false);
                            srvAddress = J$.N(819953, 'srvAddress', srvAddress, true, false, false);
                            parentDomain = J$.N(819961, 'parentDomain', parentDomain, true, false, false);
                            J$.N(819969, 'regex', regex, false, false, false);
                            J$.N(819977, 'srv', srv, false, false, false);
                            J$.N(819985, 'parent', parent, false, false, false);
                            var regex = J$.W(819761, 'regex', J$.T(819753, /^.*?\./, 14, false), regex, false, false);
                            var srv = J$.W(819817, 'srv', J$.M(819809, J$.T(819769, '.', 21, false), 'concat', false)(J$.M(819801, J$.R(819777, 'srvAddress', srvAddress, false, false), 'replace', false)(J$.R(819785, 'regex', regex, false, false), J$.T(819793, '', 21, false))), srv, false, false);
                            var parent = J$.W(819873, 'parent', J$.M(819865, J$.T(819825, '.', 21, false), 'concat', false)(J$.M(819857, J$.R(819833, 'parentDomain', parentDomain, false, false), 'replace', false)(J$.R(819841, 'regex', regex, false, false), J$.T(819849, '', 21, false))), parent, false, false);
                            if (J$.C(52440, J$.M(819897, J$.R(819881, 'srv', srv, false, false), 'endsWith', false)(J$.R(819889, 'parent', parent, false, false))))
                                return J$.Rt(819913, J$.T(819905, true, 23, false));
                            else
                                return J$.Rt(819929, J$.T(819921, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(829521, J$e);
                        } finally {
                            if (J$.Fr(829529))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseHandler(address, options, callback) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(820137, arguments.callee, this, arguments);
                            arguments = J$.N(820145, 'arguments', arguments, true, false, false);
                            address = J$.N(820153, 'address', address, true, false, false);
                            options = J$.N(820161, 'options', options, true, false, false);
                            callback = J$.N(820169, 'callback', callback, true, false, false);
                            J$.N(820177, 'result', result, false, false, false);
                            J$.N(820185, 'err', err, false, false, false);
                            var result, err;
                            try {
                                result = J$.W(820025, 'result', J$.F(820017, J$.R(819993, 'parseConnectionString', parseConnectionString, false, true), false)(J$.R(820001, 'address', address, false, false), J$.R(820009, 'options', options, false, false)), result, false, false);
                            } catch (e) {
                                J$.N(820049, 'e', e, false, false, true);
                                err = J$.W(820041, 'err', J$.R(820033, 'e', e, false, false), err, false, false);
                            }
                            return J$.Rt(820129, J$.C(52448, J$.R(820057, 'err', err, false, false)) ? J$.F(820089, J$.R(820065, 'callback', callback, false, false), false)(J$.R(820073, 'err', err, false, false), J$.T(820081, null, 25, false)) : J$.F(820121, J$.R(820097, 'callback', callback, false, false), false)(J$.T(820105, null, 25, false), J$.R(820113, 'result', result, false, false)));
                        } catch (J$e) {
                            J$.Ex(829537, J$e);
                        } finally {
                            if (J$.Fr(829545))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseConnectionString(url, options) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(829089, arguments.callee, this, arguments);
                            arguments = J$.N(829097, 'arguments', arguments, true, false, false);
                            url = J$.N(829105, 'url', url, true, false, false);
                            options = J$.N(829113, 'options', options, true, false, false);
                            J$.N(829121, 'connection_part', connection_part, false, false, false);
                            J$.N(829129, 'auth_part', auth_part, false, false, false);
                            J$.N(829137, 'query_string_part', query_string_part, false, false, false);
                            J$.N(829145, 'dbName', dbName, false, false, false);
                            J$.N(829153, 'result', result, false, false, false);
                            J$.N(829161, 'name', name, false, false, false);
                            J$.N(829169, 'parts', parts, false, false, false);
                            J$.N(829177, 'clean', clean, false, false, false);
                            J$.N(829185, 'strings', strings, false, false, false);
                            J$.N(829193, 'hosts', hosts, false, false, false);
                            J$.N(829201, 'i', i, false, false, false);
                            J$.N(829209, 'hostString', hostString, false, false, false);
                            J$.N(829217, '_i', _i, false, false, false);
                            J$.N(829225, 'r', r, false, false, false);
                            J$.N(829233, 'object', object, false, false, false);
                            J$.N(829241, 'authPart', authPart, false, false, false);
                            J$.N(829249, 'auth', auth, false, false, false);
                            J$.N(829257, 'user', user, false, false, false);
                            J$.N(829265, 'pass', pass, false, false, false);
                            J$.N(829273, 'hostPart', hostPart, false, false, false);
                            J$.N(829281, 'urlOptions', urlOptions, false, false, false);
                            J$.N(829289, 'servers', servers, false, false, false);
                            J$.N(829297, 'compression', compression, false, false, false);
                            J$.N(829305, 'serverOptions', serverOptions, false, false, false);
                            J$.N(829313, 'dbOptions', dbOptions, false, false, false);
                            J$.N(829321, 'replSetServersOptions', replSetServersOptions, false, false, false);
                            J$.N(829329, 'mongosOptions', mongosOptions, false, false, false);
                            J$.N(829337, 'domainSocket', domainSocket, false, false, false);
                            J$.N(829345, 'deduplicatedServers', deduplicatedServers, false, false, false);
                            var connection_part = J$.W(820201, 'connection_part', J$.T(820193, '', 21, false), connection_part, false, false);
                            var auth_part = J$.W(820217, 'auth_part', J$.T(820209, '', 21, false), auth_part, false, false);
                            var query_string_part = J$.W(820233, 'query_string_part', J$.T(820225, '', 21, false), query_string_part, false, false);
                            var dbName = J$.W(820249, 'dbName', J$.T(820241, 'admin', 21, false), dbName, false, false);
                            var result = J$.W(820289, 'result', J$.M(820281, J$.R(820257, 'parser', parser, false, true), 'parse', false)(J$.R(820265, 'url', url, false, false), J$.T(820273, true, 23, false)), result, false, false);
                            if (J$.C(52472, J$.C(52464, J$.C(52456, J$.B(50842, '==', J$.G(820305, J$.R(820297, 'result', result, false, false), 'hostname'), J$.T(820313, null, 25, false))) ? J$._() : J$.B(50850, '===', J$.G(820329, J$.R(820321, 'result', result, false, false), 'hostname'), J$.T(820337, '', 21, false))) ? J$.B(50866, '===', J$.M(820361, J$.R(820345, 'url', url, false, false), 'indexOf', false)(J$.T(820353, '.sock', 21, false)), J$.U(50858, '-', J$.T(820369, 1, 22, false))) : J$._())) {
                                throw J$.F(820393, J$.I(typeof Error === 'undefined' ? Error = J$.R(820377, 'Error', undefined, true, true) : Error = J$.R(820377, 'Error', Error, true, true)), true)(J$.T(820385, 'No hostname or hostnames provided in connection string', 21, false));
                            }
                            if (J$.C(52480, J$.B(50874, '===', J$.G(820409, J$.R(820401, 'result', result, false, false), 'port'), J$.T(820417, '0', 21, false)))) {
                                throw J$.F(820441, J$.I(typeof Error === 'undefined' ? Error = J$.R(820425, 'Error', undefined, true, true) : Error = J$.R(820425, 'Error', Error, true, true)), true)(J$.T(820433, 'Invalid port (zero) with hostname', 21, false));
                            }
                            if (J$.C(52496, J$.C(52488, J$.U(50882, '!', J$.F(820497, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(820449, 'isNaN', undefined, true, true) : isNaN = J$.R(820449, 'isNaN', isNaN, true, true)), false)(J$.F(820489, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(820457, 'parseInt', undefined, true, true) : parseInt = J$.R(820457, 'parseInt', parseInt, true, true)), false)(J$.G(820473, J$.R(820465, 'result', result, false, false), 'port'), J$.T(820481, 10, 22, false))))) ? J$.B(50890, '>', J$.F(820537, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(820505, 'parseInt', undefined, true, true) : parseInt = J$.R(820505, 'parseInt', parseInt, true, true)), false)(J$.G(820521, J$.R(820513, 'result', result, false, false), 'port'), J$.T(820529, 10, 22, false)), J$.T(820545, 65535, 22, false)) : J$._())) {
                                throw J$.F(820569, J$.I(typeof Error === 'undefined' ? Error = J$.R(820553, 'Error', undefined, true, true) : Error = J$.R(820553, 'Error', Error, true, true)), true)(J$.T(820561, 'Invalid port (larger than 65535) with hostname', 21, false));
                            }
                            if (J$.C(52528, J$.C(52520, J$.C(52512, J$.C(52504, J$.G(820585, J$.R(820577, 'result', result, false, false), 'path')) ? J$.B(50898, '>', J$.G(820609, J$.G(820601, J$.R(820593, 'result', result, false, false), 'path'), 'length'), J$.T(820617, 0, 22, false)) : J$._()) ? J$.B(50906, '!==', J$.G(820649, J$.G(820633, J$.R(820625, 'result', result, false, false), 'path'), J$.T(820641, 0, 22, false)), J$.T(820657, '/', 21, false)) : J$._()) ? J$.B(50922, '===', J$.M(820681, J$.R(820665, 'url', url, false, false), 'indexOf', false)(J$.T(820673, '.sock', 21, false)), J$.U(50914, '-', J$.T(820689, 1, 22, false))) : J$._())) {
                                throw J$.F(820713, J$.I(typeof Error === 'undefined' ? Error = J$.R(820697, 'Error', undefined, true, true) : Error = J$.R(820697, 'Error', Error, true, true)), true)(J$.T(820705, 'Missing delimiting slash between hosts and options', 21, false));
                            }
                            if (J$.C(52552, J$.G(820729, J$.R(820721, 'result', result, false, false), 'query'))) {
                                for (var name in J$.H(820889, J$.G(820745, J$.R(820737, 'result', result, false, false), 'query'))) {
                                    J$.N(820897, 'name', name, false, true, false);
                                    {
                                        {
                                            if (J$.C(52536, J$.B(50938, '!==', J$.M(820769, J$.R(820753, 'name', name, false, false), 'indexOf', false)(J$.T(820761, '::', 21, false)), J$.U(50930, '-', J$.T(820777, 1, 22, false))))) {
                                                throw J$.F(820801, J$.I(typeof Error === 'undefined' ? Error = J$.R(820785, 'Error', undefined, true, true) : Error = J$.R(820785, 'Error', Error, true, true)), true)(J$.T(820793, 'Double colon in host identifier', 21, false));
                                            }
                                            if (J$.C(52544, J$.B(50946, '===', J$.G(820833, J$.G(820817, J$.R(820809, 'result', result, false, false), 'query'), J$.R(820825, 'name', name, false, false)), J$.T(820841, '', 21, false)))) {
                                                throw J$.F(820881, J$.I(typeof Error === 'undefined' ? Error = J$.R(820849, 'Error', undefined, true, true) : Error = J$.R(820849, 'Error', Error, true, true)), true)(J$.B(50962, '+', J$.B(50954, '+', J$.T(820857, 'Query parameter ', 21, false), J$.R(820865, 'name', name, false, false)), J$.T(820873, ' is an incomplete value pair', 21, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            if (J$.C(52592, J$.G(820913, J$.R(820905, 'result', result, false, false), 'auth'))) {
                                var parts = J$.W(820953, 'parts', J$.M(820945, J$.G(820929, J$.R(820921, 'result', result, false, false), 'auth'), 'split', false)(J$.T(820937, ':', 21, false)), parts, false, false);
                                if (J$.C(52568, J$.C(52560, J$.B(50978, '!==', J$.M(820985, J$.R(820961, 'url', url, false, false), 'indexOf', false)(J$.G(820977, J$.R(820969, 'result', result, false, false), 'auth')), J$.U(50970, '-', J$.T(820993, 1, 22, false)))) ? J$.B(50986, '>', J$.G(821009, J$.R(821001, 'parts', parts, false, false), 'length'), J$.T(821017, 2, 22, false)) : J$._())) {
                                    throw J$.F(821041, J$.I(typeof Error === 'undefined' ? Error = J$.R(821025, 'Error', undefined, true, true) : Error = J$.R(821025, 'Error', Error, true, true)), true)(J$.T(821033, 'Username with password containing an unescaped colon', 21, false));
                                }
                                if (J$.C(52584, J$.C(52576, J$.B(51002, '!==', J$.M(821073, J$.R(821049, 'url', url, false, false), 'indexOf', false)(J$.G(821065, J$.R(821057, 'result', result, false, false), 'auth')), J$.U(50994, '-', J$.T(821081, 1, 22, false)))) ? J$.B(51018, '!==', J$.M(821113, J$.G(821097, J$.R(821089, 'result', result, false, false), 'auth'), 'indexOf', false)(J$.T(821105, '@', 21, false)), J$.U(51010, '-', J$.T(821121, 1, 22, false))) : J$._())) {
                                    throw J$.F(821145, J$.I(typeof Error === 'undefined' ? Error = J$.R(821129, 'Error', undefined, true, true) : Error = J$.R(821129, 'Error', Error, true, true)), true)(J$.T(821137, 'Username containing an unescaped at-sign', 21, false));
                                }
                            }
                            var clean = J$.W(821185, 'clean', J$.M(821177, J$.M(821169, J$.R(821153, 'url', url, false, false), 'split', false)(J$.T(821161, '?', 21, false)), 'shift', false)(), clean, false, false);
                            var strings = J$.W(821217, 'strings', J$.M(821209, J$.R(821193, 'clean', clean, false, false), 'split', false)(J$.T(821201, ',', 21, false)), strings, false, false);
                            var hosts = J$.W(821233, 'hosts', J$.T(821225, [], 10, false), hosts, false, false);
                            for (var i = J$.W(821249, 'i', J$.T(821241, 0, 22, false), i, false, false); J$.C(52632, J$.B(51026, '<', J$.R(821257, 'i', i, false, false), J$.G(821273, J$.R(821265, 'strings', strings, false, false), 'length'))); J$.B(51050, '-', i = J$.W(821289, 'i', J$.B(51042, '+', J$.U(51034, '+', J$.R(821281, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var hostString = J$.W(821321, 'hostString', J$.G(821313, J$.R(821297, 'strings', strings, false, false), J$.R(821305, 'i', i, false, false)), hostString, false, false);
                                if (J$.C(52624, J$.B(51066, '!==', J$.M(821345, J$.R(821329, 'hostString', hostString, false, false), 'indexOf', false)(J$.T(821337, 'mongodb', 21, false)), J$.U(51058, '-', J$.T(821353, 1, 22, false))))) {
                                    if (J$.C(52600, J$.B(51082, '!==', J$.M(821377, J$.R(821361, 'hostString', hostString, false, false), 'indexOf', false)(J$.T(821369, '@', 21, false)), J$.U(51074, '-', J$.T(821385, 1, 22, false))))) {
                                        J$.M(821433, J$.R(821393, 'hosts', hosts, false, false), 'push', false)(J$.M(821425, J$.M(821417, J$.R(821401, 'hostString', hostString, false, false), 'split', false)(J$.T(821409, '@', 21, false)), 'pop', false)());
                                    } else {
                                        J$.M(821481, J$.R(821441, 'hosts', hosts, false, false), 'push', false)(J$.M(821473, J$.R(821449, 'hostString', hostString, false, false), 'substr', false)(J$.G(821465, J$.T(821457, 'mongodb://', 21, false), 'length')));
                                    }
                                } else if (J$.C(52616, J$.B(51098, '!==', J$.M(821505, J$.R(821489, 'hostString', hostString, false, false), 'indexOf', false)(J$.T(821497, '/', 21, false)), J$.U(51090, '-', J$.T(821513, 1, 22, false))))) {
                                    J$.M(821561, J$.R(821521, 'hosts', hosts, false, false), 'push', false)(J$.M(821553, J$.M(821545, J$.R(821529, 'hostString', hostString, false, false), 'split', false)(J$.T(821537, '/', 21, false)), 'shift', false)());
                                } else if (J$.C(52608, J$.B(51114, '===', J$.M(821585, J$.R(821569, 'hostString', hostString, false, false), 'indexOf', false)(J$.T(821577, '/', 21, false)), J$.U(51106, '-', J$.T(821593, 1, 22, false))))) {
                                    J$.M(821625, J$.R(821601, 'hosts', hosts, false, false), 'push', false)(J$.M(821617, J$.R(821609, 'hostString', hostString, false, false), 'trim', false)());
                                }
                            }
                            for (var _i = J$.W(821641, '_i', J$.T(821633, 0, 22, false), _i, false, false); J$.C(52688, J$.B(51122, '<', J$.R(821649, '_i', _i, false, false), J$.G(821665, J$.R(821657, 'hosts', hosts, false, false), 'length'))); J$.B(51146, '-', _i = J$.W(821681, '_i', J$.B(51138, '+', J$.U(51130, '+', J$.R(821673, '_i', _i, false, false)), 1), _i, false, false), 1)) {
                                var r = J$.W(821761, 'r', J$.M(821753, J$.R(821689, 'parser', parser, false, true), 'parse', false)(J$.F(821745, J$.R(821697, 'f', f, false, true), false)(J$.T(821705, 'mongodb://%s', 21, false), J$.M(821737, J$.G(821729, J$.R(821713, 'hosts', hosts, false, false), J$.R(821721, '_i', _i, false, false)), 'trim', false)())), r, false, false);
                                if (J$.C(52648, J$.C(52640, J$.G(821777, J$.R(821769, 'r', r, false, false), 'path')) ? J$.B(51162, '!==', J$.M(821809, J$.G(821793, J$.R(821785, 'r', r, false, false), 'path'), 'indexOf', false)(J$.T(821801, '.sock', 21, false)), J$.U(51154, '-', J$.T(821817, 1, 22, false))) : J$._()))
                                    continue;
                                if (J$.C(52680, J$.C(52656, J$.G(821833, J$.R(821825, 'r', r, false, false), 'path')) ? J$.B(51178, '!==', J$.M(821865, J$.G(821849, J$.R(821841, 'r', r, false, false), 'path'), 'indexOf', false)(J$.T(821857, ':', 21, false)), J$.U(51170, '-', J$.T(821873, 1, 22, false))) : J$._())) {
                                    if (J$.C(52672, J$.C(52664, J$.B(51186, '>', J$.G(821913, J$.M(821905, J$.G(821889, J$.R(821881, 'r', r, false, false), 'path'), 'split', false)(J$.T(821897, '/', 21, false)), 'length'), J$.T(821921, 1, 22, false))) ? J$.B(51202, '===', J$.M(821953, J$.G(821937, J$.R(821929, 'r', r, false, false), 'path'), 'indexOf', false)(J$.T(821945, '::', 21, false)), J$.U(51194, '-', J$.T(821961, 1, 22, false))) : J$._())) {
                                        throw J$.F(821985, J$.I(typeof Error === 'undefined' ? Error = J$.R(821969, 'Error', undefined, true, true) : Error = J$.R(821969, 'Error', Error, true, true)), true)(J$.T(821977, 'Slash in host identifier', 21, false));
                                    } else {
                                        throw J$.F(822009, J$.I(typeof Error === 'undefined' ? Error = J$.R(821993, 'Error', undefined, true, true) : Error = J$.R(821993, 'Error', Error, true, true)), true)(J$.T(822001, 'Double colon in host identifier', 21, false));
                                    }
                                }
                            }
                            if (J$.C(52696, J$.B(51218, '!==', J$.M(822033, J$.R(822017, 'url', url, false, false), 'indexOf', false)(J$.T(822025, '?', 21, false)), J$.U(51210, '-', J$.T(822041, 1, 22, false))))) {
                                query_string_part = J$.W(822097, 'query_string_part', J$.M(822089, J$.R(822049, 'url', url, false, false), 'substr', false)(J$.B(51226, '+', J$.M(822073, J$.R(822057, 'url', url, false, false), 'indexOf', false)(J$.T(822065, '?', 21, false)), J$.T(822081, 1, 22, false))), query_string_part, false, false);
                                connection_part = J$.W(822161, 'connection_part', J$.M(822153, J$.R(822105, 'url', url, false, false), 'substring', false)(J$.G(822121, J$.T(822113, 'mongodb://', 21, false), 'length'), J$.M(822145, J$.R(822129, 'url', url, false, false), 'indexOf', false)(J$.T(822137, '?', 21, false))), connection_part, false, false);
                            } else {
                                connection_part = J$.W(822201, 'connection_part', J$.M(822193, J$.R(822169, 'url', url, false, false), 'substring', false)(J$.G(822185, J$.T(822177, 'mongodb://', 21, false), 'length')), connection_part, false, false);
                            }
                            if (J$.C(52704, J$.B(51242, '!==', J$.M(822225, J$.R(822209, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(822217, '@', 21, false)), J$.U(51234, '-', J$.T(822233, 1, 22, false))))) {
                                auth_part = J$.W(822281, 'auth_part', J$.G(822273, J$.M(822257, J$.R(822241, 'connection_part', connection_part, false, false), 'split', false)(J$.T(822249, '@', 21, false)), J$.T(822265, 0, 22, false)), auth_part, false, false);
                                connection_part = J$.W(822329, 'connection_part', J$.G(822321, J$.M(822305, J$.R(822289, 'connection_part', connection_part, false, false), 'split', false)(J$.T(822297, '@', 21, false)), J$.T(822313, 1, 22, false)), connection_part, false, false);
                            }
                            if (J$.C(52712, J$.B(51250, '>', J$.G(822361, J$.M(822353, J$.R(822337, 'connection_part', connection_part, false, false), 'split', false)(J$.T(822345, '/', 21, false)), 'length'), J$.T(822369, 2, 22, false)))) {
                                throw J$.F(822441, J$.I(typeof Error === 'undefined' ? Error = J$.R(822377, 'Error', undefined, true, true) : Error = J$.R(822377, 'Error', Error, true, true)), true)(J$.B(51266, '+', J$.B(51258, '+', J$.T(822385, 'Unsupported host \'', 21, false), J$.G(822425, J$.M(822409, J$.R(822393, 'connection_part', connection_part, false, false), 'split', false)(J$.T(822401, '?', 21, false)), J$.T(822417, 0, 22, false))), J$.T(822433, '\', hosts must be URL encoded and contain at most one unencoded slash', 21, false)));
                            }
                            if (J$.C(52776, J$.B(51282, '!==', J$.M(822465, J$.R(822449, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(822457, '.sock', 21, false)), J$.U(51274, '-', J$.T(822473, 1, 22, false))))) {
                                if (J$.C(52744, J$.B(51298, '!==', J$.M(822497, J$.R(822481, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(822489, '.sock/', 21, false)), J$.U(51290, '-', J$.T(822505, 1, 22, false))))) {
                                    dbName = J$.W(822553, 'dbName', J$.G(822545, J$.M(822529, J$.R(822513, 'connection_part', connection_part, false, false), 'split', false)(J$.T(822521, '.sock/', 21, false)), J$.T(822537, 1, 22, false)), dbName, false, false);
                                    if (J$.C(52736, J$.B(51314, '!==', J$.M(822577, J$.R(822561, 'dbName', dbName, false, false), 'indexOf', false)(J$.T(822569, '/', 21, false)), J$.U(51306, '-', J$.T(822585, 1, 22, false))))) {
                                        if (J$.C(52728, J$.C(52720, J$.B(51322, '===', J$.G(822617, J$.M(822609, J$.R(822593, 'dbName', dbName, false, false), 'split', false)(J$.T(822601, '/', 21, false)), 'length'), J$.T(822625, 2, 22, false))) ? J$.B(51330, '===', J$.G(822673, J$.G(822665, J$.M(822649, J$.R(822633, 'dbName', dbName, false, false), 'split', false)(J$.T(822641, '/', 21, false)), J$.T(822657, 1, 22, false)), 'length'), J$.T(822681, 0, 22, false)) : J$._())) {
                                            throw J$.F(822705, J$.I(typeof Error === 'undefined' ? Error = J$.R(822689, 'Error', undefined, true, true) : Error = J$.R(822689, 'Error', Error, true, true)), true)(J$.T(822697, 'Illegal trailing backslash after database name', 21, false));
                                        }
                                        throw J$.F(822729, J$.I(typeof Error === 'undefined' ? Error = J$.R(822713, 'Error', undefined, true, true) : Error = J$.R(822713, 'Error', Error, true, true)), true)(J$.T(822721, 'More than 1 database name in URL', 21, false));
                                    }
                                    connection_part = J$.W(822801, 'connection_part', J$.M(822793, J$.R(822737, 'connection_part', connection_part, false, false), 'split', false)(J$.T(822745, '/', 21, false), J$.B(51338, '+', J$.M(822769, J$.R(822753, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(822761, '.sock', 21, false)), J$.G(822785, J$.T(822777, '.sock', 21, false), 'length'))), connection_part, false, false);
                                }
                            } else if (J$.C(52768, J$.B(51354, '!==', J$.M(822825, J$.R(822809, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(822817, '/', 21, false)), J$.U(51346, '-', J$.T(822833, 1, 22, false))))) {
                                if (J$.C(52760, J$.B(51362, '>', J$.G(822865, J$.M(822857, J$.R(822841, 'connection_part', connection_part, false, false), 'split', false)(J$.T(822849, '/', 21, false)), 'length'), J$.T(822873, 2, 22, false)))) {
                                    if (J$.C(52752, J$.B(51370, '===', J$.G(822921, J$.G(822913, J$.M(822897, J$.R(822881, 'connection_part', connection_part, false, false), 'split', false)(J$.T(822889, '/', 21, false)), J$.T(822905, 2, 22, false)), 'length'), J$.T(822929, 0, 22, false)))) {
                                        throw J$.F(822953, J$.I(typeof Error === 'undefined' ? Error = J$.R(822937, 'Error', undefined, true, true) : Error = J$.R(822937, 'Error', Error, true, true)), true)(J$.T(822945, 'Illegal trailing backslash after database name', 21, false));
                                    }
                                    throw J$.F(822977, J$.I(typeof Error === 'undefined' ? Error = J$.R(822961, 'Error', undefined, true, true) : Error = J$.R(822961, 'Error', Error, true, true)), true)(J$.T(822969, 'More than 1 database name in URL', 21, false));
                                }
                                dbName = J$.W(823025, 'dbName', J$.G(823017, J$.M(823001, J$.R(822985, 'connection_part', connection_part, false, false), 'split', false)(J$.T(822993, '/', 21, false)), J$.T(823009, 1, 22, false)), dbName, false, false);
                                connection_part = J$.W(823073, 'connection_part', J$.G(823065, J$.M(823049, J$.R(823033, 'connection_part', connection_part, false, false), 'split', false)(J$.T(823041, '/', 21, false)), J$.T(823057, 0, 22, false)), connection_part, false, false);
                            }
                            connection_part = J$.W(823105, 'connection_part', J$.F(823097, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(823081, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(823081, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(823089, 'connection_part', connection_part, false, false)), connection_part, false, false);
                            var object = J$.W(823121, 'object', J$.T(823113, {}, 11, false), object, false, false);
                            var authPart = J$.W(823145, 'authPart', J$.C(52784, J$.R(823129, 'auth_part', auth_part, false, false)) ? J$._() : J$.T(823137, '', 21, false), authPart, false, false);
                            var auth = J$.W(823185, 'auth', J$.M(823177, J$.R(823153, 'authPart', authPart, false, false), 'split', false)(J$.T(823161, ':', 21, false), J$.T(823169, 2, 22, false)), auth, false, false);
                            var user = J$.W(823233, 'user', J$.F(823225, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(823193, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(823193, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.G(823217, J$.R(823201, 'auth', auth, false, false), J$.T(823209, 0, 22, false))), user, false, false);
                            if (J$.C(52792, J$.B(51378, '!==', J$.G(823257, J$.R(823241, 'auth', auth, false, false), J$.T(823249, 0, 22, false)), J$.F(823281, J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(823265, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(823265, 'encodeURIComponent', encodeURIComponent, true, true)), false)(J$.R(823273, 'user', user, false, false))))) {
                                throw J$.F(823305, J$.I(typeof Error === 'undefined' ? Error = J$.R(823289, 'Error', undefined, true, true) : Error = J$.R(823289, 'Error', Error, true, true)), true)(J$.T(823297, 'Username contains an illegal unescaped character', 21, false));
                            }
                            J$.P(823337, J$.R(823313, 'auth', auth, false, false), J$.T(823321, 0, 22, false), J$.R(823329, 'user', user, false, false));
                            if (J$.C(52808, J$.G(823361, J$.R(823345, 'auth', auth, false, false), J$.T(823353, 1, 22, false)))) {
                                var pass = J$.W(823409, 'pass', J$.F(823401, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(823369, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(823369, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.G(823393, J$.R(823377, 'auth', auth, false, false), J$.T(823385, 1, 22, false))), pass, false, false);
                                if (J$.C(52800, J$.B(51386, '!==', J$.G(823433, J$.R(823417, 'auth', auth, false, false), J$.T(823425, 1, 22, false)), J$.F(823457, J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(823441, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(823441, 'encodeURIComponent', encodeURIComponent, true, true)), false)(J$.R(823449, 'pass', pass, false, false))))) {
                                    throw J$.F(823481, J$.I(typeof Error === 'undefined' ? Error = J$.R(823465, 'Error', undefined, true, true) : Error = J$.R(823465, 'Error', Error, true, true)), true)(J$.T(823473, 'Password contains an illegal unescaped character', 21, false));
                                }
                                J$.P(823513, J$.R(823489, 'auth', auth, false, false), J$.T(823497, 1, 22, false), J$.R(823505, 'pass', pass, false, false));
                            }
                            if (J$.C(52816, J$.B(51394, '===', J$.G(823529, J$.R(823521, 'auth', auth, false, false), 'length'), J$.T(823537, 2, 22, false))))
                                J$.P(823609, J$.R(823545, 'object', object, false, false), 'auth', J$.T(823601, {
                                    user: J$.G(823569, J$.R(823553, 'auth', auth, false, false), J$.T(823561, 0, 22, false)),
                                    password: J$.G(823593, J$.R(823577, 'auth', auth, false, false), J$.T(823585, 1, 22, false))
                                }, 11, false));
                            if (J$.C(52832, J$.C(52824, J$.R(823617, 'options', options, false, false)) ? J$.B(51402, '!=', J$.G(823633, J$.R(823625, 'options', options, false, false), 'auth'), J$.T(823641, null, 25, false)) : J$._()))
                                J$.P(823673, J$.R(823649, 'object', object, false, false), 'auth', J$.G(823665, J$.R(823657, 'options', options, false, false), 'auth'));
                            var hostPart;
                            var urlOptions;
                            var servers;
                            var compression;
                            var serverOptions = J$.W(823697, 'serverOptions', J$.T(823689, { socketOptions: J$.T(823681, {}, 11, false) }, 11, false), serverOptions, false, false);
                            var dbOptions = J$.W(823721, 'dbOptions', J$.T(823713, { read_preference_tags: J$.T(823705, [], 10, false) }, 11, false), dbOptions, false, false);
                            var replSetServersOptions = J$.W(823745, 'replSetServersOptions', J$.T(823737, { socketOptions: J$.T(823729, {}, 11, false) }, 11, false), replSetServersOptions, false, false);
                            var mongosOptions = J$.W(823769, 'mongosOptions', J$.T(823761, { socketOptions: J$.T(823753, {}, 11, false) }, 11, false), mongosOptions, false, false);
                            J$.P(823793, J$.R(823777, 'object', object, false, false), 'server_options', J$.R(823785, 'serverOptions', serverOptions, false, false));
                            J$.P(823817, J$.R(823801, 'object', object, false, false), 'db_options', J$.R(823809, 'dbOptions', dbOptions, false, false));
                            J$.P(823841, J$.R(823825, 'object', object, false, false), 'rs_options', J$.R(823833, 'replSetServersOptions', replSetServersOptions, false, false));
                            J$.P(823865, J$.R(823849, 'object', object, false, false), 'mongos_options', J$.R(823857, 'mongosOptions', mongosOptions, false, false));
                            if (J$.C(52896, J$.M(823889, J$.R(823873, 'url', url, false, false), 'match', false)(J$.T(823881, /\.sock/, 14, false)))) {
                                var domainSocket = J$.W(823993, 'domainSocket', J$.M(823985, J$.R(823897, 'url', url, false, false), 'substring', false)(J$.B(51410, '+', J$.M(823921, J$.R(823905, 'url', url, false, false), 'indexOf', false)(J$.T(823913, 'mongodb://', 21, false)), J$.G(823937, J$.T(823929, 'mongodb://', 21, false), 'length')), J$.B(51418, '+', J$.M(823961, J$.R(823945, 'url', url, false, false), 'lastIndexOf', false)(J$.T(823953, '.sock', 21, false)), J$.G(823977, J$.T(823969, '.sock', 21, false), 'length'))), domainSocket, false, false);
                                if (J$.C(52840, J$.B(51434, '!==', J$.M(824017, J$.R(824001, 'domainSocket', domainSocket, false, false), 'indexOf', false)(J$.T(824009, '@', 21, false)), J$.U(51426, '-', J$.T(824025, 1, 22, false)))))
                                    domainSocket = J$.W(824073, 'domainSocket', J$.G(824065, J$.M(824049, J$.R(824033, 'domainSocket', domainSocket, false, false), 'split', false)(J$.T(824041, '@', 21, false)), J$.T(824057, 1, 22, false)), domainSocket, false, false);
                                domainSocket = J$.W(824105, 'domainSocket', J$.F(824097, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(824081, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(824081, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(824089, 'domainSocket', domainSocket, false, false)), domainSocket, false, false);
                                servers = J$.W(824137, 'servers', J$.T(824129, [J$.T(824121, { domain_socket: J$.R(824113, 'domainSocket', domainSocket, false, false) }, 11, false)], 10, false), servers, false, false);
                            } else {
                                hostPart = J$.W(824153, 'hostPart', J$.R(824145, 'connection_part', connection_part, false, false), hostPart, false, false);
                                var deduplicatedServers = J$.W(824169, 'deduplicatedServers', J$.T(824161, {}, 11, false), deduplicatedServers, false, false);
                                servers = J$.W(824857, 'servers', J$.M(824849, J$.M(824785, J$.M(824193, J$.R(824177, 'hostPart', hostPart, false, false), 'split', false)(J$.T(824185, ',', 21, false)), 'map', false)(J$.T(824777, function (h) {
                                    jalangiLabel6:
                                        while (true) {
                                            try {
                                                J$.Fe(824721, arguments.callee, this, arguments);
                                                arguments = J$.N(824729, 'arguments', arguments, true, false, false);
                                                h = J$.N(824737, 'h', h, true, false, false);
                                                J$.N(824745, '_host', _host, false, false, false);
                                                J$.N(824753, '_port', _port, false, false, false);
                                                J$.N(824761, 'ipv6match', ipv6match, false, false, false);
                                                J$.N(824769, 'hostPort', hostPort, false, false, false);
                                                var _host, _port, ipv6match;
                                                if (J$.C(52880, ipv6match = J$.W(824225, 'ipv6match', J$.M(824217, J$.T(824201, /\[([^\]]+)\](?::(.+))?/, 14, false), 'exec', false)(J$.R(824209, 'h', h, false, false)), ipv6match, false, false))) {
                                                    _host = J$.W(824257, '_host', J$.G(824249, J$.R(824233, 'ipv6match', ipv6match, false, false), J$.T(824241, 1, 22, false)), _host, false, false);
                                                    _port = J$.W(824321, '_port', J$.C(52848, J$.F(824305, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(824265, 'parseInt', undefined, true, true) : parseInt = J$.R(824265, 'parseInt', parseInt, true, true)), false)(J$.G(824289, J$.R(824273, 'ipv6match', ipv6match, false, false), J$.T(824281, 2, 22, false)), J$.T(824297, 10, 22, false))) ? J$._() : J$.T(824313, 27017, 22, false), _port, false, false);
                                                } else {
                                                    var hostPort = J$.W(824361, 'hostPort', J$.M(824353, J$.R(824329, 'h', h, false, false), 'split', false)(J$.T(824337, ':', 21, false), J$.T(824345, 2, 22, false)), hostPort, false, false);
                                                    _host = J$.W(824401, '_host', J$.C(52856, J$.G(824385, J$.R(824369, 'hostPort', hostPort, false, false), J$.T(824377, 0, 22, false))) ? J$._() : J$.T(824393, 'localhost', 21, false), _host, false, false);
                                                    _port = J$.W(824497, '_port', J$.C(52864, J$.B(51442, '!=', J$.G(824425, J$.R(824409, 'hostPort', hostPort, false, false), J$.T(824417, 1, 22, false)), J$.T(824433, null, 25, false))) ? J$.F(824481, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(824441, 'parseInt', undefined, true, true) : parseInt = J$.R(824441, 'parseInt', parseInt, true, true)), false)(J$.G(824465, J$.R(824449, 'hostPort', hostPort, false, false), J$.T(824457, 1, 22, false)), J$.T(824473, 10, 22, false)) : J$.T(824489, 27017, 22, false), _port, false, false);
                                                    if (J$.C(52872, J$.B(51458, '!==', J$.M(824521, J$.R(824505, '_host', _host, false, false), 'indexOf', false)(J$.T(824513, '?', 21, false)), J$.U(51450, '-', J$.T(824529, 1, 22, false)))))
                                                        _host = J$.W(824577, '_host', J$.G(824569, J$.M(824553, J$.R(824537, '_host', _host, false, false), 'split', false)(J$.T(824545, /\?/, 14, false)), J$.T(824561, 0, 22, false)), _host, false, false);
                                                }
                                                if (J$.C(52888, J$.G(824617, J$.R(824585, 'deduplicatedServers', deduplicatedServers, false, false), J$.B(51474, '+', J$.B(51466, '+', J$.R(824593, '_host', _host, false, false), J$.T(824601, '_', 21, false)), J$.R(824609, '_port', _port, false, false)))))
                                                    return J$.Rt(824633, J$.T(824625, null, 25, false));
                                                J$.P(824681, J$.R(824641, 'deduplicatedServers', deduplicatedServers, false, false), J$.B(51490, '+', J$.B(51482, '+', J$.R(824649, '_host', _host, false, false), J$.T(824657, '_', 21, false)), J$.R(824665, '_port', _port, false, false)), J$.T(824673, 1, 22, false));
                                                return J$.Rt(824713, J$.T(824705, {
                                                    host: J$.R(824689, '_host', _host, false, false),
                                                    port: J$.R(824697, '_port', _port, false, false)
                                                }, 11, false));
                                            } catch (J$e) {
                                                J$.Ex(829553, J$e);
                                            } finally {
                                                if (J$.Fr(829561))
                                                    continue jalangiLabel6;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), 'filter', false)(J$.T(824841, function (x) {
                                    jalangiLabel7:
                                        while (true) {
                                            try {
                                                J$.Fe(824817, arguments.callee, this, arguments);
                                                arguments = J$.N(824825, 'arguments', arguments, true, false, false);
                                                x = J$.N(824833, 'x', x, true, false, false);
                                                return J$.Rt(824809, J$.B(51498, '!=', J$.R(824793, 'x', x, false, false), J$.T(824801, null, 25, false)));
                                            } catch (J$e) {
                                                J$.Ex(829569, J$e);
                                            } finally {
                                                if (J$.Fr(829577))
                                                    continue jalangiLabel7;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), servers, false, false);
                            }
                            J$.P(824889, J$.R(824865, 'object', object, false, false), 'dbName', J$.C(52904, J$.R(824873, 'dbName', dbName, false, false)) ? J$._() : J$.T(824881, 'admin', 21, false));
                            urlOptions = J$.W(824929, 'urlOptions', J$.M(824921, J$.C(52912, J$.R(824897, 'query_string_part', query_string_part, false, false)) ? J$._() : J$.T(824905, '', 21, false), 'split', false)(J$.T(824913, /[&;]/, 14, false)), urlOptions, false, false);
                            J$.M(828761, J$.R(824937, 'urlOptions', urlOptions, false, false), 'forEach', false)(J$.T(828753, function (opt) {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(828625, arguments.callee, this, arguments);
                                            arguments = J$.N(828633, 'arguments', arguments, true, false, false);
                                            opt = J$.N(828641, 'opt', opt, true, false, false);
                                            J$.N(828649, 'splitOpt', splitOpt, false, false, false);
                                            J$.N(828657, 'name', name, false, false, false);
                                            J$.N(828665, 'value', value, false, false, false);
                                            J$.N(828673, 'urlDecodeAuthPart', urlDecodeAuthPart, false, false, false);
                                            J$.N(828681, 'values', values, false, false, false);
                                            J$.N(828689, 'o', o, false, false, false);
                                            J$.N(828697, 'tagObject', tagObject, false, false, false);
                                            J$.N(828705, 'tags', tags, false, false, false);
                                            J$.N(828713, '_i2', _i2, false, false, false);
                                            J$.N(828721, '_parts', _parts, false, false, false);
                                            J$.N(828729, 'compressors', compressors, false, false, false);
                                            J$.N(828737, 'zlibCompressionLevel', zlibCompressionLevel, false, false, false);
                                            J$.N(828745, 'logger', logger, false, false, false);
                                            if (J$.C(52920, J$.U(51506, '!', J$.R(824945, 'opt', opt, false, false))))
                                                return J$.Rt(824953, undefined);
                                            var splitOpt = J$.W(825033, 'splitOpt', J$.M(824977, J$.R(824961, 'opt', opt, false, false), 'split', false)(J$.T(824969, '=', 21, false)), splitOpt, false, false), name = J$.W(825041, 'name', J$.G(825001, J$.R(824985, 'splitOpt', splitOpt, false, false), J$.T(824993, 0, 22, false)), name, false, false), value = J$.W(825049, 'value', J$.G(825025, J$.R(825009, 'splitOpt', splitOpt, false, false), J$.T(825017, 1, 22, false)), value, false, false);
                                            switch (J$.C1(53144, J$.R(825057, 'name', name, false, false))) {
                                            case J$.C2(53152, J$.T(825065, 'slaveOk', 21, false)):
                                            case J$.C2(53160, J$.T(825137, 'slave_ok', 21, false)):
                                                J$.P(825097, J$.R(825073, 'serverOptions', serverOptions, false, false), 'slave_ok', J$.B(51514, '===', J$.R(825081, 'value', value, false, false), J$.T(825089, 'true', 21, false)));
                                                J$.P(825129, J$.R(825105, 'dbOptions', dbOptions, false, false), 'slaveOk', J$.B(51522, '===', J$.R(825113, 'value', value, false, false), J$.T(825121, 'true', 21, false)));
                                                break;
                                            case J$.C2(53168, J$.T(825145, 'maxPoolSize', 21, false)):
                                            case J$.C2(53176, J$.T(825249, 'poolSize', 21, false)):
                                                J$.P(825193, J$.R(825153, 'serverOptions', serverOptions, false, false), 'poolSize', J$.F(825185, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(825161, 'parseInt', undefined, true, true) : parseInt = J$.R(825161, 'parseInt', parseInt, true, true)), false)(J$.R(825169, 'value', value, false, false), J$.T(825177, 10, 22, false)));
                                                J$.P(825241, J$.R(825201, 'replSetServersOptions', replSetServersOptions, false, false), 'poolSize', J$.F(825233, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(825209, 'parseInt', undefined, true, true) : parseInt = J$.R(825209, 'parseInt', parseInt, true, true)), false)(J$.R(825217, 'value', value, false, false), J$.T(825225, 10, 22, false)));
                                                break;
                                            case J$.C2(53184, J$.T(825297, 'appname', 21, false)):
                                                J$.P(825289, J$.R(825257, 'object', object, false, false), 'appname', J$.F(825281, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(825265, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(825265, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(825273, 'value', value, false, false)));
                                                break;
                                            case J$.C2(53192, J$.T(825305, 'autoReconnect', 21, false)):
                                            case J$.C2(53200, J$.T(825345, 'auto_reconnect', 21, false)):
                                                J$.P(825337, J$.R(825313, 'serverOptions', serverOptions, false, false), 'auto_reconnect', J$.B(51530, '===', J$.R(825321, 'value', value, false, false), J$.T(825329, 'true', 21, false)));
                                                break;
                                            case J$.C2(53208, J$.T(825537, 'ssl', 21, false)):
                                                if (J$.C(52928, J$.B(51538, '===', J$.R(825353, 'value', value, false, false), J$.T(825361, 'prefer', 21, false)))) {
                                                    J$.P(825385, J$.R(825369, 'serverOptions', serverOptions, false, false), 'ssl', J$.R(825377, 'value', value, false, false));
                                                    J$.P(825409, J$.R(825393, 'replSetServersOptions', replSetServersOptions, false, false), 'ssl', J$.R(825401, 'value', value, false, false));
                                                    J$.P(825433, J$.R(825417, 'mongosOptions', mongosOptions, false, false), 'ssl', J$.R(825425, 'value', value, false, false));
                                                    break;
                                                }
                                                J$.P(825465, J$.R(825441, 'serverOptions', serverOptions, false, false), 'ssl', J$.B(51546, '===', J$.R(825449, 'value', value, false, false), J$.T(825457, 'true', 21, false)));
                                                J$.P(825497, J$.R(825473, 'replSetServersOptions', replSetServersOptions, false, false), 'ssl', J$.B(51554, '===', J$.R(825481, 'value', value, false, false), J$.T(825489, 'true', 21, false)));
                                                J$.P(825529, J$.R(825505, 'mongosOptions', mongosOptions, false, false), 'ssl', J$.B(51562, '===', J$.R(825513, 'value', value, false, false), J$.T(825521, 'true', 21, false)));
                                                break;
                                            case J$.C2(53216, J$.T(825641, 'sslValidate', 21, false)):
                                                J$.P(825569, J$.R(825545, 'serverOptions', serverOptions, false, false), 'sslValidate', J$.B(51570, '===', J$.R(825553, 'value', value, false, false), J$.T(825561, 'true', 21, false)));
                                                J$.P(825601, J$.R(825577, 'replSetServersOptions', replSetServersOptions, false, false), 'sslValidate', J$.B(51578, '===', J$.R(825585, 'value', value, false, false), J$.T(825593, 'true', 21, false)));
                                                J$.P(825633, J$.R(825609, 'mongosOptions', mongosOptions, false, false), 'sslValidate', J$.B(51586, '===', J$.R(825617, 'value', value, false, false), J$.T(825625, 'true', 21, false)));
                                                break;
                                            case J$.C2(53224, J$.T(825649, 'replicaSet', 21, false)):
                                            case J$.C2(53232, J$.T(825681, 'rs_name', 21, false)):
                                                J$.P(825673, J$.R(825657, 'replSetServersOptions', replSetServersOptions, false, false), 'rs_name', J$.R(825665, 'value', value, false, false));
                                                break;
                                            case J$.C2(53240, J$.T(825737, 'reconnectWait', 21, false)):
                                                J$.P(825729, J$.R(825689, 'replSetServersOptions', replSetServersOptions, false, false), 'reconnectWait', J$.F(825721, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(825697, 'parseInt', undefined, true, true) : parseInt = J$.R(825697, 'parseInt', parseInt, true, true)), false)(J$.R(825705, 'value', value, false, false), J$.T(825713, 10, 22, false)));
                                                break;
                                            case J$.C2(53248, J$.T(825793, 'retries', 21, false)):
                                                J$.P(825785, J$.R(825745, 'replSetServersOptions', replSetServersOptions, false, false), 'retries', J$.F(825777, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(825753, 'parseInt', undefined, true, true) : parseInt = J$.R(825753, 'parseInt', parseInt, true, true)), false)(J$.R(825761, 'value', value, false, false), J$.T(825769, 10, 22, false)));
                                                break;
                                            case J$.C2(53256, J$.T(825801, 'readSecondary', 21, false)):
                                            case J$.C2(53264, J$.T(825841, 'read_secondary', 21, false)):
                                                J$.P(825833, J$.R(825809, 'replSetServersOptions', replSetServersOptions, false, false), 'read_secondary', J$.B(51594, '===', J$.R(825817, 'value', value, false, false), J$.T(825825, 'true', 21, false)));
                                                break;
                                            case J$.C2(53272, J$.T(825881, 'fsync', 21, false)):
                                                J$.P(825873, J$.R(825849, 'dbOptions', dbOptions, false, false), 'fsync', J$.B(51602, '===', J$.R(825857, 'value', value, false, false), J$.T(825865, 'true', 21, false)));
                                                break;
                                            case J$.C2(53280, J$.T(825921, 'journal', 21, false)):
                                                J$.P(825913, J$.R(825889, 'dbOptions', dbOptions, false, false), 'j', J$.B(51610, '===', J$.R(825897, 'value', value, false, false), J$.T(825905, 'true', 21, false)));
                                                break;
                                            case J$.C2(53288, J$.T(825961, 'safe', 21, false)):
                                                J$.P(825953, J$.R(825929, 'dbOptions', dbOptions, false, false), 'safe', J$.B(51618, '===', J$.R(825937, 'value', value, false, false), J$.T(825945, 'true', 21, false)));
                                                break;
                                            case J$.C2(53296, J$.T(825969, 'nativeParser', 21, false)):
                                            case J$.C2(53304, J$.T(826009, 'native_parser', 21, false)):
                                                J$.P(826001, J$.R(825977, 'dbOptions', dbOptions, false, false), 'native_parser', J$.B(51626, '===', J$.R(825985, 'value', value, false, false), J$.T(825993, 'true', 21, false)));
                                                break;
                                            case J$.C2(53312, J$.T(826057, 'readConcernLevel', 21, false)):
                                                J$.P(826049, J$.R(826017, 'dbOptions', dbOptions, false, false), 'readConcern', J$.F(826041, J$.R(826025, 'ReadConcern', ReadConcern, false, true), true)(J$.R(826033, 'value', value, false, false)));
                                                break;
                                            case J$.C2(53320, J$.T(826233, 'connectTimeoutMS', 21, false)):
                                                J$.P(826113, J$.G(826073, J$.R(826065, 'serverOptions', serverOptions, false, false), 'socketOptions'), 'connectTimeoutMS', J$.F(826105, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(826081, 'parseInt', undefined, true, true) : parseInt = J$.R(826081, 'parseInt', parseInt, true, true)), false)(J$.R(826089, 'value', value, false, false), J$.T(826097, 10, 22, false)));
                                                J$.P(826169, J$.G(826129, J$.R(826121, 'replSetServersOptions', replSetServersOptions, false, false), 'socketOptions'), 'connectTimeoutMS', J$.F(826161, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(826137, 'parseInt', undefined, true, true) : parseInt = J$.R(826137, 'parseInt', parseInt, true, true)), false)(J$.R(826145, 'value', value, false, false), J$.T(826153, 10, 22, false)));
                                                J$.P(826225, J$.G(826185, J$.R(826177, 'mongosOptions', mongosOptions, false, false), 'socketOptions'), 'connectTimeoutMS', J$.F(826217, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(826193, 'parseInt', undefined, true, true) : parseInt = J$.R(826193, 'parseInt', parseInt, true, true)), false)(J$.R(826201, 'value', value, false, false), J$.T(826209, 10, 22, false)));
                                                break;
                                            case J$.C2(53328, J$.T(826409, 'socketTimeoutMS', 21, false)):
                                                J$.P(826289, J$.G(826249, J$.R(826241, 'serverOptions', serverOptions, false, false), 'socketOptions'), 'socketTimeoutMS', J$.F(826281, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(826257, 'parseInt', undefined, true, true) : parseInt = J$.R(826257, 'parseInt', parseInt, true, true)), false)(J$.R(826265, 'value', value, false, false), J$.T(826273, 10, 22, false)));
                                                J$.P(826345, J$.G(826305, J$.R(826297, 'replSetServersOptions', replSetServersOptions, false, false), 'socketOptions'), 'socketTimeoutMS', J$.F(826337, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(826313, 'parseInt', undefined, true, true) : parseInt = J$.R(826313, 'parseInt', parseInt, true, true)), false)(J$.R(826321, 'value', value, false, false), J$.T(826329, 10, 22, false)));
                                                J$.P(826401, J$.G(826361, J$.R(826353, 'mongosOptions', mongosOptions, false, false), 'socketOptions'), 'socketTimeoutMS', J$.F(826393, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(826369, 'parseInt', undefined, true, true) : parseInt = J$.R(826369, 'parseInt', parseInt, true, true)), false)(J$.R(826377, 'value', value, false, false), J$.T(826385, 10, 22, false)));
                                                break;
                                            case J$.C2(53336, J$.T(826521, 'w', 21, false)):
                                                J$.P(826457, J$.R(826417, 'dbOptions', dbOptions, false, false), 'w', J$.F(826449, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(826425, 'parseInt', undefined, true, true) : parseInt = J$.R(826425, 'parseInt', parseInt, true, true)), false)(J$.R(826433, 'value', value, false, false), J$.T(826441, 10, 22, false)));
                                                if (J$.C(52936, J$.F(826489, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(826465, 'isNaN', undefined, true, true) : isNaN = J$.R(826465, 'isNaN', isNaN, true, true)), false)(J$.G(826481, J$.R(826473, 'dbOptions', dbOptions, false, false), 'w'))))
                                                    J$.P(826513, J$.R(826497, 'dbOptions', dbOptions, false, false), 'w', J$.R(826505, 'value', value, false, false));
                                                break;
                                            case J$.C2(53344, J$.T(826553, 'authSource', 21, false)):
                                                J$.P(826545, J$.R(826529, 'dbOptions', dbOptions, false, false), 'authSource', J$.R(826537, 'value', value, false, false));
                                                break;
                                            case J$.C2(53352, J$.T(826585, 'gssapiServiceName', 21, false)):
                                                J$.P(826577, J$.R(826561, 'dbOptions', dbOptions, false, false), 'gssapiServiceName', J$.R(826569, 'value', value, false, false));
                                                break;
                                            case J$.C2(53360, J$.T(827049, 'authMechanism', 21, false)):
                                                if (J$.C(52968, J$.B(51634, '===', J$.R(826593, 'value', value, false, false), J$.T(826601, 'GSSAPI', 21, false)))) {
                                                    if (J$.C(52952, J$.B(51642, '==', J$.G(826617, J$.R(826609, 'object', object, false, false), 'auth'), J$.T(826625, null, 25, false)))) {
                                                        var urlDecodeAuthPart = J$.W(826657, 'urlDecodeAuthPart', J$.F(826649, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(826633, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(826633, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(826641, 'authPart', authPart, false, false)), urlDecodeAuthPart, false, false);
                                                        if (J$.C(52944, J$.B(51658, '===', J$.M(826681, J$.R(826665, 'urlDecodeAuthPart', urlDecodeAuthPart, false, false), 'indexOf', false)(J$.T(826673, '@', 21, false)), J$.U(51650, '-', J$.T(826689, 1, 22, false)))))
                                                            throw J$.F(826713, J$.I(typeof Error === 'undefined' ? Error = J$.R(826697, 'Error', undefined, true, true) : Error = J$.R(826697, 'Error', Error, true, true)), true)(J$.T(826705, 'GSSAPI requires a provided principal', 21, false));
                                                        J$.P(826753, J$.R(826721, 'object', object, false, false), 'auth', J$.T(826745, {
                                                            user: J$.R(826729, 'urlDecodeAuthPart', urlDecodeAuthPart, false, false),
                                                            password: J$.T(826737, null, 25, false)
                                                        }, 11, false));
                                                    } else {
                                                        J$.P(826817, J$.G(826769, J$.R(826761, 'object', object, false, false), 'auth'), 'user', J$.F(826809, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(826777, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(826777, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.G(826801, J$.G(826793, J$.R(826785, 'object', object, false, false), 'auth'), 'user')));
                                                    }
                                                } else if (J$.C(52960, J$.B(51666, '===', J$.R(826825, 'value', value, false, false), J$.T(826833, 'MONGODB-X509', 21, false)))) {
                                                    J$.P(826881, J$.R(826841, 'object', object, false, false), 'auth', J$.T(826873, { user: J$.F(826865, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(826849, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(826849, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(826857, 'authPart', authPart, false, false)) }, 11, false));
                                                }
                                                if (J$.C(53024, J$.C(53016, J$.C(53008, J$.C(53000, J$.C(52992, J$.C(52984, J$.C(52976, J$.B(51674, '!==', J$.R(826889, 'value', value, false, false), J$.T(826897, 'GSSAPI', 21, false))) ? J$.B(51682, '!==', J$.R(826905, 'value', value, false, false), J$.T(826913, 'MONGODB-X509', 21, false)) : J$._()) ? J$.B(51690, '!==', J$.R(826921, 'value', value, false, false), J$.T(826929, 'MONGODB-CR', 21, false)) : J$._()) ? J$.B(51698, '!==', J$.R(826937, 'value', value, false, false), J$.T(826945, 'DEFAULT', 21, false)) : J$._()) ? J$.B(51706, '!==', J$.R(826953, 'value', value, false, false), J$.T(826961, 'SCRAM-SHA-1', 21, false)) : J$._()) ? J$.B(51714, '!==', J$.R(826969, 'value', value, false, false), J$.T(826977, 'SCRAM-SHA-256', 21, false)) : J$._()) ? J$.B(51722, '!==', J$.R(826985, 'value', value, false, false), J$.T(826993, 'PLAIN', 21, false)) : J$._()))
                                                    throw J$.F(827017, J$.I(typeof Error === 'undefined' ? Error = J$.R(827001, 'Error', undefined, true, true) : Error = J$.R(827001, 'Error', Error, true, true)), true)(J$.T(827009, 'Only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1 is supported by authMechanism', 21, false));
                                                J$.P(827041, J$.R(827025, 'dbOptions', dbOptions, false, false), 'authMechanism', J$.R(827033, 'value', value, false, false));
                                                break;
                                            case J$.C2(53368, J$.T(827473, 'authMechanismProperties', 21, false)): {
                                                    var values = J$.W(827081, 'values', J$.M(827073, J$.R(827057, 'value', value, false, false), 'split', false)(J$.T(827065, ',', 21, false)), values, false, false);
                                                    var o = J$.W(827097, 'o', J$.T(827089, {}, 11, false), o, false, false);
                                                    J$.M(827249, J$.R(827105, 'values', values, false, false), 'forEach', false)(J$.T(827241, function (x) {
                                                        jalangiLabel8:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(827209, arguments.callee, this, arguments);
                                                                    arguments = J$.N(827217, 'arguments', arguments, true, false, false);
                                                                    x = J$.N(827225, 'x', x, true, false, false);
                                                                    J$.N(827233, 'v', v, false, false, false);
                                                                    var v = J$.W(827137, 'v', J$.M(827129, J$.R(827113, 'x', x, false, false), 'split', false)(J$.T(827121, ':', 21, false)), v, false, false);
                                                                    J$.P(827201, J$.R(827145, 'o', o, false, false), J$.G(827169, J$.R(827153, 'v', v, false, false), J$.T(827161, 0, 22, false)), J$.G(827193, J$.R(827177, 'v', v, false, false), J$.T(827185, 1, 22, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(829585, J$e);
                                                                } finally {
                                                                    if (J$.Fr(829593))
                                                                        continue jalangiLabel8;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(827273, J$.R(827257, 'dbOptions', dbOptions, false, false), 'authMechanismProperties', J$.R(827265, 'o', o, false, false));
                                                    if (J$.C(53032, J$.B(51738, '===', J$.U(51730, 'typeof', J$.G(827289, J$.R(827281, 'o', o, false, false), 'SERVICE_NAME')), J$.T(827297, 'string', 21, false))))
                                                        J$.P(827329, J$.R(827305, 'dbOptions', dbOptions, false, false), 'gssapiServiceName', J$.G(827321, J$.R(827313, 'o', o, false, false), 'SERVICE_NAME'));
                                                    if (J$.C(53040, J$.B(51754, '===', J$.U(51746, 'typeof', J$.G(827345, J$.R(827337, 'o', o, false, false), 'SERVICE_REALM')), J$.T(827353, 'string', 21, false))))
                                                        J$.P(827385, J$.R(827361, 'dbOptions', dbOptions, false, false), 'gssapiServiceRealm', J$.G(827377, J$.R(827369, 'o', o, false, false), 'SERVICE_REALM'));
                                                    if (J$.C(53056, J$.B(51770, '===', J$.U(51762, 'typeof', J$.G(827401, J$.R(827393, 'o', o, false, false), 'CANONICALIZE_HOST_NAME')), J$.T(827409, 'string', 21, false))))
                                                        J$.P(827465, J$.R(827417, 'dbOptions', dbOptions, false, false), 'gssapiCanonicalizeHostName', J$.C(53048, J$.B(51778, '===', J$.G(827433, J$.R(827425, 'o', o, false, false), 'CANONICALIZE_HOST_NAME'), J$.T(827441, 'true', 21, false))) ? J$.T(827449, true, 23, false) : J$.T(827457, false, 23, false));
                                                }
                                                break;
                                            case J$.C2(53376, J$.T(827529, 'wtimeoutMS', 21, false)):
                                                J$.P(827521, J$.R(827481, 'dbOptions', dbOptions, false, false), 'wtimeout', J$.F(827513, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(827489, 'parseInt', undefined, true, true) : parseInt = J$.R(827489, 'parseInt', parseInt, true, true)), false)(J$.R(827497, 'value', value, false, false), J$.T(827505, 10, 22, false)));
                                                break;
                                            case J$.C2(53384, J$.T(827609, 'readPreference', 21, false)):
                                                if (J$.C(53064, J$.U(51786, '!', J$.M(827553, J$.R(827537, 'ReadPreference', ReadPreference, false, true), 'isValid', false)(J$.R(827545, 'value', value, false, false)))))
                                                    throw J$.F(827577, J$.I(typeof Error === 'undefined' ? Error = J$.R(827561, 'Error', undefined, true, true) : Error = J$.R(827561, 'Error', Error, true, true)), true)(J$.T(827569, 'readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest', 21, false));
                                                J$.P(827601, J$.R(827585, 'dbOptions', dbOptions, false, false), 'readPreference', J$.R(827593, 'value', value, false, false));
                                                break;
                                            case J$.C2(53392, J$.T(827665, 'maxStalenessSeconds', 21, false)):
                                                J$.P(827657, J$.R(827617, 'dbOptions', dbOptions, false, false), 'maxStalenessSeconds', J$.F(827649, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(827625, 'parseInt', undefined, true, true) : parseInt = J$.R(827625, 'parseInt', parseInt, true, true)), false)(J$.R(827633, 'value', value, false, false), J$.T(827641, 10, 22, false)));
                                                break;
                                            case J$.C2(53400, J$.T(828025, 'readPreferenceTags', 21, false)): {
                                                    value = J$.W(827697, 'value', J$.F(827689, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(827673, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(827673, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(827681, 'value', value, false, false)), value, false, false);
                                                    var tagObject = J$.W(827713, 'tagObject', J$.T(827705, {}, 11, false), tagObject, false, false);
                                                    if (J$.C(53080, J$.C(53072, J$.B(51794, '==', J$.R(827721, 'value', value, false, false), J$.T(827729, null, 25, false))) ? J$._() : J$.B(51802, '===', J$.R(827737, 'value', value, false, false), J$.T(827745, '', 21, false)))) {
                                                        J$.M(827777, J$.G(827761, J$.R(827753, 'dbOptions', dbOptions, false, false), 'read_preference_tags'), 'push', false)(J$.R(827769, 'tagObject', tagObject, false, false));
                                                        break;
                                                    }
                                                    var tags = J$.W(827809, 'tags', J$.M(827801, J$.R(827785, 'value', value, false, false), 'split', false)(J$.T(827793, /,/, 14, false)), tags, false, false);
                                                    for (var _i2 = J$.W(827825, '_i2', J$.T(827817, 0, 22, false), _i2, false, false); J$.C(53088, J$.B(51810, '<', J$.R(827833, '_i2', _i2, false, false), J$.G(827849, J$.R(827841, 'tags', tags, false, false), 'length'))); J$.B(51834, '-', _i2 = J$.W(827865, '_i2', J$.B(51826, '+', J$.U(51818, '+', J$.R(827857, '_i2', _i2, false, false)), 1), _i2, false, false), 1)) {
                                                        var _parts = J$.W(827921, '_parts', J$.M(827913, J$.M(827897, J$.G(827889, J$.R(827873, 'tags', tags, false, false), J$.R(827881, '_i2', _i2, false, false)), 'trim', false)(), 'split', false)(J$.T(827905, /:/, 14, false)), _parts, false, false);
                                                        J$.P(827985, J$.R(827929, 'tagObject', tagObject, false, false), J$.G(827953, J$.R(827937, '_parts', _parts, false, false), J$.T(827945, 0, 22, false)), J$.G(827977, J$.R(827961, '_parts', _parts, false, false), J$.T(827969, 1, 22, false)));
                                                    }
                                                    J$.M(828017, J$.G(828001, J$.R(827993, 'dbOptions', dbOptions, false, false), 'read_preference_tags'), 'push', false)(J$.R(828009, 'tagObject', tagObject, false, false));
                                                }
                                                break;
                                            case J$.C2(53408, J$.T(828257, 'compressors', 21, false)): {
                                                    compression = J$.W(828057, 'compression', J$.C(53096, J$.G(828041, J$.R(828033, 'serverOptions', serverOptions, false, false), 'compression')) ? J$._() : J$.T(828049, {}, 11, false), compression, false, false);
                                                    var compressors = J$.W(828089, 'compressors', J$.M(828081, J$.R(828065, 'value', value, false, false), 'split', false)(J$.T(828073, ',', 21, false)), compressors, false, false);
                                                    if (J$.C(53112, J$.U(51858, '!', J$.M(828177, J$.R(828097, 'compressors', compressors, false, false), 'every', false)(J$.T(828169, function (compressor) {
                                                            jalangiLabel9:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(828145, arguments.callee, this, arguments);
                                                                        arguments = J$.N(828153, 'arguments', arguments, true, false, false);
                                                                        compressor = J$.N(828161, 'compressor', compressor, true, false, false);
                                                                        return J$.Rt(828137, J$.C(53104, J$.B(51842, '===', J$.R(828105, 'compressor', compressor, false, false), J$.T(828113, 'snappy', 21, false))) ? J$._() : J$.B(51850, '===', J$.R(828121, 'compressor', compressor, false, false), J$.T(828129, 'zlib', 21, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(829601, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(829609))
                                                                            continue jalangiLabel9;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false))))) {
                                                        throw J$.F(828201, J$.I(typeof Error === 'undefined' ? Error = J$.R(828185, 'Error', undefined, true, true) : Error = J$.R(828185, 'Error', Error, true, true)), true)(J$.T(828193, 'Compressors must be at least one of snappy or zlib', 21, false));
                                                    }
                                                    J$.P(828225, J$.R(828209, 'compression', compression, false, false), 'compressors', J$.R(828217, 'compressors', compressors, false, false));
                                                    J$.P(828249, J$.R(828233, 'serverOptions', serverOptions, false, false), 'compression', J$.R(828241, 'compression', compression, false, false));
                                                }
                                                break;
                                            case J$.C2(53416, J$.T(828441, 'zlibCompressionLevel', 21, false)): {
                                                    compression = J$.W(828289, 'compression', J$.C(53120, J$.G(828273, J$.R(828265, 'serverOptions', serverOptions, false, false), 'compression')) ? J$._() : J$.T(828281, {}, 11, false), compression, false, false);
                                                    var zlibCompressionLevel = J$.W(828329, 'zlibCompressionLevel', J$.F(828321, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(828297, 'parseInt', undefined, true, true) : parseInt = J$.R(828297, 'parseInt', parseInt, true, true)), false)(J$.R(828305, 'value', value, false, false), J$.T(828313, 10, 22, false)), zlibCompressionLevel, false, false);
                                                    if (J$.C(53136, J$.C(53128, J$.B(51874, '<', J$.R(828337, 'zlibCompressionLevel', zlibCompressionLevel, false, false), J$.U(51866, '-', J$.T(828345, 1, 22, false)))) ? J$._() : J$.B(51882, '>', J$.R(828353, 'zlibCompressionLevel', zlibCompressionLevel, false, false), J$.T(828361, 9, 22, false)))) {
                                                        throw J$.F(828385, J$.I(typeof Error === 'undefined' ? Error = J$.R(828369, 'Error', undefined, true, true) : Error = J$.R(828369, 'Error', Error, true, true)), true)(J$.T(828377, 'zlibCompressionLevel must be an integer between -1 and 9', 21, false));
                                                    }
                                                    J$.P(828409, J$.R(828393, 'compression', compression, false, false), 'zlibCompressionLevel', J$.R(828401, 'zlibCompressionLevel', zlibCompressionLevel, false, false));
                                                    J$.P(828433, J$.R(828417, 'serverOptions', serverOptions, false, false), 'compression', J$.R(828425, 'compression', compression, false, false));
                                                }
                                                break;
                                            case J$.C2(53424, J$.T(828481, 'retryWrites', 21, false)):
                                                J$.P(828473, J$.R(828449, 'dbOptions', dbOptions, false, false), 'retryWrites', J$.B(51890, '===', J$.R(828457, 'value', value, false, false), J$.T(828465, 'true', 21, false)));
                                                break;
                                            case J$.C2(53432, J$.T(828537, 'minSize', 21, false)):
                                                J$.P(828529, J$.R(828489, 'dbOptions', dbOptions, false, false), 'minSize', J$.F(828521, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(828497, 'parseInt', undefined, true, true) : parseInt = J$.R(828497, 'parseInt', parseInt, true, true)), false)(J$.R(828505, 'value', value, false, false), J$.T(828513, 10, 22, false)));
                                                break;
                                            default: {
                                                    var logger = J$.W(828569, 'logger', J$.F(828561, J$.R(828545, 'Logger', Logger, false, true), false)(J$.T(828553, 'URL Parser', 21, false)), logger, false, false);
                                                    J$.M(828617, J$.R(828577, 'logger', logger, false, false), 'warn', false)(J$.M(828609, J$.T(828585, '', 21, false), 'concat', false)(J$.R(828593, 'name', name, false, false), J$.T(828601, ' is not supported as a connection string option', 21, false)));
                                                }
                                                break;
                                            }
                                        } catch (J$e) {
                                            J$.Ex(829617, J$e);
                                        } finally {
                                            if (J$.Fr(829625))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            if (J$.C(53440, J$.B(51898, '===', J$.G(828785, J$.G(828777, J$.R(828769, 'dbOptions', dbOptions, false, false), 'read_preference_tags'), 'length'), J$.T(828793, 0, 22, false)))) {
                                J$.P(828817, J$.R(828801, 'dbOptions', dbOptions, false, false), 'read_preference_tags', J$.T(828809, null, 25, false));
                            }
                            if (J$.C(53480, J$.C(53472, J$.C(53448, J$.B(51914, '===', J$.G(828833, J$.R(828825, 'dbOptions', dbOptions, false, false), 'w'), J$.U(51906, '-', J$.T(828841, 1, 22, false)))) ? J$._() : J$.B(51922, '===', J$.G(828857, J$.R(828849, 'dbOptions', dbOptions, false, false), 'w'), J$.T(828865, 0, 22, false))) ? J$.C(53464, J$.C(53456, J$.B(51930, '===', J$.G(828881, J$.R(828873, 'dbOptions', dbOptions, false, false), 'journal'), J$.T(828889, true, 23, false))) ? J$._() : J$.B(51938, '===', J$.G(828905, J$.R(828897, 'dbOptions', dbOptions, false, false), 'fsync'), J$.T(828913, true, 23, false))) ? J$._() : J$.B(51946, '===', J$.G(828929, J$.R(828921, 'dbOptions', dbOptions, false, false), 'safe'), J$.T(828937, true, 23, false)) : J$._()))
                                throw J$.F(828961, J$.I(typeof Error === 'undefined' ? Error = J$.R(828945, 'Error', undefined, true, true) : Error = J$.R(828945, 'Error', Error, true, true)), true)(J$.T(828953, 'w set to -1 or 0 cannot be combined with safe/w/journal/fsync', 21, false));
                            if (J$.C(53488, J$.U(51954, '!', J$.G(828977, J$.R(828969, 'dbOptions', dbOptions, false, false), 'readPreference')))) {
                                J$.P(829001, J$.R(828985, 'dbOptions', dbOptions, false, false), 'readPreference', J$.T(828993, 'primary', 21, false));
                            }
                            dbOptions = J$.W(829041, 'dbOptions', J$.M(829033, J$.I(typeof Object === 'undefined' ? Object = J$.R(829009, 'Object', undefined, true, true) : Object = J$.R(829009, 'Object', Object, true, true)), 'assign', false)(J$.R(829017, 'dbOptions', dbOptions, false, false), J$.R(829025, 'options', options, false, false)), dbOptions, false, false);
                            J$.P(829065, J$.R(829049, 'object', object, false, false), 'servers', J$.R(829057, 'servers', servers, false, false));
                            return J$.Rt(829081, J$.R(829073, 'object', object, false, false));
                        } catch (J$e) {
                            J$.Ex(829633, J$e);
                        } finally {
                            if (J$.Fr(829641))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(829361, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(829369, 'parser', parser, false, false, false);
            J$.N(829377, 'f', f, false, false, false);
            J$.N(829385, 'Logger', Logger, false, false, false);
            J$.N(829393, 'dns', dns, false, false, false);
            J$.N(829401, 'ReadConcern', ReadConcern, false, false, false);
            matchesParentDomain = J$.N(829417, 'matchesParentDomain', J$.T(829409, matchesParentDomain, 12, false), true, false, false);
            parseHandler = J$.N(829433, 'parseHandler', J$.T(829425, parseHandler, 12, false), true, false, false);
            parseConnectionString = J$.N(829449, 'parseConnectionString', J$.T(829441, parseConnectionString, 12, false), true, false, false);
            J$.T(816985, 'use strict', 21, false);
            var ReadPreference = J$.W(817137, 'ReadPreference', J$.G(817017, J$.F(817009, J$.I(typeof require === 'undefined' ? require = J$.R(816993, 'require', undefined, true, true) : require = J$.R(816993, 'require', require, true, true)), false)(J$.T(817001, './core', 21, false)), 'ReadPreference'), ReadPreference, false, true), parser = J$.W(817145, 'parser', J$.F(817041, J$.I(typeof require === 'undefined' ? require = J$.R(817025, 'require', undefined, true, true) : require = J$.R(817025, 'require', require, true, true)), false)(J$.T(817033, 'url', 21, false)), parser, false, true), f = J$.W(817153, 'f', J$.G(817073, J$.F(817065, J$.I(typeof require === 'undefined' ? require = J$.R(817049, 'require', undefined, true, true) : require = J$.R(817049, 'require', require, true, true)), false)(J$.T(817057, 'util', 21, false)), 'format'), f, false, true), Logger = J$.W(817161, 'Logger', J$.G(817105, J$.F(817097, J$.I(typeof require === 'undefined' ? require = J$.R(817081, 'require', undefined, true, true) : require = J$.R(817081, 'require', require, true, true)), false)(J$.T(817089, './core', 21, false)), 'Logger'), Logger, false, true), dns = J$.W(817169, 'dns', J$.F(817129, J$.I(typeof require === 'undefined' ? require = J$.R(817113, 'require', undefined, true, true) : require = J$.R(817113, 'require', require, true, true)), false)(J$.T(817121, 'dns', 21, false)), dns, false, true);
            var ReadConcern = J$.W(817201, 'ReadConcern', J$.F(817193, J$.I(typeof require === 'undefined' ? require = J$.R(817177, 'require', undefined, true, true) : require = J$.R(817177, 'require', require, true, true)), false)(J$.T(817185, './read_concern', 21, false)), ReadConcern, false, true);
            J$.P(819745, J$.I(typeof module === 'undefined' ? module = J$.R(817209, 'module', undefined, true, true) : module = J$.R(817209, 'module', module, true, true)), 'exports', J$.T(819737, function (url, options, callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(819681, arguments.callee, this, arguments);
                            arguments = J$.N(819689, 'arguments', arguments, true, false, false);
                            url = J$.N(819697, 'url', url, true, false, false);
                            options = J$.N(819705, 'options', options, true, false, false);
                            callback = J$.N(819713, 'callback', callback, true, false, false);
                            J$.N(819721, 'result', result, false, false, false);
                            J$.N(819729, 'srvAddress', srvAddress, false, false, false);
                            if (J$.C(52176, J$.B(50626, '===', J$.U(50618, 'typeof', J$.R(817217, 'options', options, false, false)), J$.T(817225, 'function', 21, false))))
                                callback = J$.W(817241, 'callback', J$.R(817233, 'options', options, false, false), callback, false, false), options = J$.W(817257, 'options', J$.T(817249, {}, 11, false), options, false, false);
                            options = J$.W(817281, 'options', J$.C(52184, J$.R(817265, 'options', options, false, false)) ? J$._() : J$.T(817273, {}, 11, false), options, false, false);
                            var result;
                            try {
                                result = J$.W(817321, 'result', J$.M(817313, J$.R(817289, 'parser', parser, false, true), 'parse', false)(J$.R(817297, 'url', url, false, false), J$.T(817305, true, 23, false)), result, false, false);
                            } catch (e) {
                                J$.N(817377, 'e', e, false, false, true);
                                return J$.Rt(817369, J$.F(817361, J$.R(817329, 'callback', callback, false, false), false)(J$.F(817353, J$.I(typeof Error === 'undefined' ? Error = J$.R(817337, 'Error', undefined, true, true) : Error = J$.R(817337, 'Error', Error, true, true)), true)(J$.T(817345, 'URL malformed, cannot be parsed', 21, false))));
                            }
                            if (J$.C(52200, J$.C(52192, J$.B(50634, '!==', J$.G(817393, J$.R(817385, 'result', result, false, false), 'protocol'), J$.T(817401, 'mongodb:', 21, false))) ? J$.B(50642, '!==', J$.G(817417, J$.R(817409, 'result', result, false, false), 'protocol'), J$.T(817425, 'mongodb+srv:', 21, false)) : J$._())) {
                                return J$.Rt(817473, J$.F(817465, J$.R(817433, 'callback', callback, false, false), false)(J$.F(817457, J$.I(typeof Error === 'undefined' ? Error = J$.R(817441, 'Error', undefined, true, true) : Error = J$.R(817441, 'Error', Error, true, true)), true)(J$.T(817449, 'Invalid schema, expected `mongodb` or `mongodb+srv`', 21, false))));
                            }
                            if (J$.C(52208, J$.B(50650, '===', J$.G(817489, J$.R(817481, 'result', result, false, false), 'protocol'), J$.T(817497, 'mongodb:', 21, false)))) {
                                return J$.Rt(817545, J$.F(817537, J$.R(817505, 'parseHandler', parseHandler, false, true), false)(J$.R(817513, 'url', url, false, false), J$.R(817521, 'options', options, false, false), J$.R(817529, 'callback', callback, false, false)));
                            }
                            if (J$.C(52216, J$.B(50658, '<', J$.G(817585, J$.M(817577, J$.G(817561, J$.R(817553, 'result', result, false, false), 'hostname'), 'split', false)(J$.T(817569, '.', 21, false)), 'length'), J$.T(817593, 3, 22, false)))) {
                                return J$.Rt(817641, J$.F(817633, J$.R(817601, 'callback', callback, false, false), false)(J$.F(817625, J$.I(typeof Error === 'undefined' ? Error = J$.R(817609, 'Error', undefined, true, true) : Error = J$.R(817609, 'Error', Error, true, true)), true)(J$.T(817617, 'URI does not have hostname, domain name and tld', 21, false))));
                            }
                            J$.P(817697, J$.R(817649, 'result', result, false, false), 'domainLength', J$.G(817689, J$.M(817681, J$.G(817665, J$.R(817657, 'result', result, false, false), 'hostname'), 'split', false)(J$.T(817673, '.', 21, false)), 'length'));
                            if (J$.C(52232, J$.C(52224, J$.G(817713, J$.R(817705, 'result', result, false, false), 'pathname')) ? J$.M(817745, J$.G(817729, J$.R(817721, 'result', result, false, false), 'pathname'), 'match', false)(J$.T(817737, ',', 21, false)) : J$._())) {
                                return J$.Rt(817793, J$.F(817785, J$.R(817753, 'callback', callback, false, false), false)(J$.F(817777, J$.I(typeof Error === 'undefined' ? Error = J$.R(817761, 'Error', undefined, true, true) : Error = J$.R(817761, 'Error', Error, true, true)), true)(J$.T(817769, 'Invalid URI, cannot contain multiple hostnames', 21, false))));
                            }
                            if (J$.C(52240, J$.G(817809, J$.R(817801, 'result', result, false, false), 'port'))) {
                                return J$.Rt(817857, J$.F(817849, J$.R(817817, 'callback', callback, false, false), false)(J$.F(817841, J$.I(typeof Error === 'undefined' ? Error = J$.R(817825, 'Error', undefined, true, true) : Error = J$.R(817825, 'Error', Error, true, true)), true)(J$.T(817833, 'Ports not accepted with `mongodb+srv` URIs', 21, false))));
                            }
                            var srvAddress = J$.W(817897, 'srvAddress', J$.M(817889, J$.T(817865, '_mongodb._tcp.', 21, false), 'concat', false)(J$.G(817881, J$.R(817873, 'result', result, false, false), 'host')), srvAddress, false, false);
                            J$.M(819673, J$.R(817905, 'dns', dns, false, true), 'resolveSrv', false)(J$.R(817913, 'srvAddress', srvAddress, false, false), J$.T(819665, function (err, addresses) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(819585, arguments.callee, this, arguments);
                                            arguments = J$.N(819593, 'arguments', arguments, true, false, false);
                                            err = J$.N(819601, 'err', err, true, false, false);
                                            addresses = J$.N(819609, 'addresses', addresses, true, false, false);
                                            J$.N(819617, 'i', i, false, false, false);
                                            J$.N(819625, 'base', base, false, false, false);
                                            J$.N(819633, 'connectionStrings', connectionStrings, false, false, false);
                                            J$.N(819641, 'connectionString', connectionString, false, false, false);
                                            J$.N(819649, 'connectionStringOptions', connectionStringOptions, false, false, false);
                                            J$.N(819657, 'defaultDb', defaultDb, false, false, false);
                                            if (J$.C(52248, J$.R(817921, 'err', err, false, false)))
                                                return J$.Rt(817953, J$.F(817945, J$.R(817929, 'callback', callback, false, false), false)(J$.R(817937, 'err', err, false, false)));
                                            if (J$.C(52256, J$.B(50666, '===', J$.G(817969, J$.R(817961, 'addresses', addresses, false, false), 'length'), J$.T(817977, 0, 22, false)))) {
                                                return J$.Rt(818025, J$.F(818017, J$.R(817985, 'callback', callback, false, false), false)(J$.F(818009, J$.I(typeof Error === 'undefined' ? Error = J$.R(817993, 'Error', undefined, true, true) : Error = J$.R(817993, 'Error', Error, true, true)), true)(J$.T(818001, 'No addresses found at host', 21, false))));
                                            }
                                            for (var i = J$.W(818041, 'i', J$.T(818033, 0, 22, false), i, false, false); J$.C(52272, J$.B(50674, '<', J$.R(818049, 'i', i, false, false), J$.G(818065, J$.R(818057, 'addresses', addresses, false, false), 'length'))); J$.B(50698, '-', i = J$.W(818081, 'i', J$.B(50690, '+', J$.U(50682, '+', J$.R(818073, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                if (J$.C(52264, J$.U(50706, '!', J$.F(818161, J$.R(818089, 'matchesParentDomain', matchesParentDomain, false, true), false)(J$.G(818121, J$.G(818113, J$.R(818097, 'addresses', addresses, false, false), J$.R(818105, 'i', i, false, false)), 'name'), J$.G(818137, J$.R(818129, 'result', result, false, false), 'hostname'), J$.G(818153, J$.R(818145, 'result', result, false, false), 'domainLength'))))) {
                                                    return J$.Rt(818209, J$.F(818201, J$.R(818169, 'callback', callback, false, false), false)(J$.F(818193, J$.I(typeof Error === 'undefined' ? Error = J$.R(818177, 'Error', undefined, true, true) : Error = J$.R(818177, 'Error', Error, true, true)), true)(J$.T(818185, 'Server record does not share hostname with parent URI', 21, false))));
                                                }
                                            }
                                            var base = J$.W(818281, 'base', J$.C(52280, J$.G(818225, J$.R(818217, 'result', result, false, false), 'auth')) ? J$.M(818265, J$.T(818233, 'mongodb://', 21, false), 'concat', false)(J$.G(818249, J$.R(818241, 'result', result, false, false), 'auth'), J$.T(818257, '@', 21, false)) : J$.T(818273, 'mongodb://', 21, false), base, false, false);
                                            var connectionStrings = J$.W(818521, 'connectionStrings', J$.M(818513, J$.R(818289, 'addresses', addresses, false, false), 'map', false)(J$.T(818505, function (address, i) {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(818473, arguments.callee, this, arguments);
                                                            arguments = J$.N(818481, 'arguments', arguments, true, false, false);
                                                            address = J$.N(818489, 'address', address, true, false, false);
                                                            i = J$.N(818497, 'i', i, true, false, false);
                                                            if (J$.C(52288, J$.B(50714, '===', J$.R(818297, 'i', i, false, false), J$.T(818305, 0, 22, false))))
                                                                return J$.Rt(818393, J$.M(818385, J$.M(818361, J$.M(818329, J$.T(818313, '', 21, false), 'concat', false)(J$.R(818321, 'base', base, false, false)), 'concat', false)(J$.G(818345, J$.R(818337, 'address', address, false, false), 'name'), J$.T(818353, ':', 21, false)), 'concat', false)(J$.G(818377, J$.R(818369, 'address', address, false, false), 'port')));
                                                            else
                                                                return J$.Rt(818465, J$.M(818457, J$.M(818433, J$.T(818401, '', 21, false), 'concat', false)(J$.G(818417, J$.R(818409, 'address', address, false, false), 'name'), J$.T(818425, ':', 21, false)), 'concat', false)(J$.G(818449, J$.R(818441, 'address', address, false, false), 'port')));
                                                        } catch (J$e) {
                                                            J$.Ex(829457, J$e);
                                                        } finally {
                                                            if (J$.Fr(829465))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), connectionStrings, false, false);
                                            var connectionString = J$.W(818561, 'connectionString', J$.B(50722, '+', J$.M(818545, J$.R(818529, 'connectionStrings', connectionStrings, false, false), 'join', false)(J$.T(818537, ',', 21, false)), J$.T(818553, '/', 21, false)), connectionString, false, false);
                                            var connectionStringOptions = J$.W(818577, 'connectionStringOptions', J$.T(818569, [], 10, false), connectionStringOptions, false, false);
                                            if (J$.C(52304, J$.G(818593, J$.R(818585, 'result', result, false, false), 'path'))) {
                                                var defaultDb = J$.W(818633, 'defaultDb', J$.M(818625, J$.G(818609, J$.R(818601, 'result', result, false, false), 'path'), 'slice', false)(J$.T(818617, 1, 22, false)), defaultDb, false, false);
                                                if (J$.C(52296, J$.B(50738, '!==', J$.M(818657, J$.R(818641, 'defaultDb', defaultDb, false, false), 'indexOf', false)(J$.T(818649, '?', 21, false)), J$.U(50730, '-', J$.T(818665, 1, 22, false))))) {
                                                    defaultDb = J$.W(818721, 'defaultDb', J$.M(818713, J$.R(818673, 'defaultDb', defaultDb, false, false), 'slice', false)(J$.T(818681, 0, 22, false), J$.M(818705, J$.R(818689, 'defaultDb', defaultDb, false, false), 'indexOf', false)(J$.T(818697, '?', 21, false))), defaultDb, false, false);
                                                }
                                                connectionString = J$.W(818745, 'connectionString', J$.B(50746, '+', J$.R(818737, 'connectionString', connectionString, false, false), J$.R(818729, 'defaultDb', defaultDb, false, false)), connectionString, false, false);
                                            }
                                            if (J$.C(52344, J$.C(52312, J$.U(50754, '!', J$.G(818761, J$.R(818753, 'options', options, false, false), 'ssl'))) ? J$.U(50762, '!', J$.G(818777, J$.R(818769, 'result', result, false, false), 'search')) : J$._())) {
                                                J$.M(818801, J$.R(818785, 'connectionStringOptions', connectionStringOptions, false, false), 'push', false)(J$.T(818793, 'ssl=true', 21, false));
                                            } else if (J$.C(52336, J$.C(52328, J$.C(52320, J$.U(50770, '!', J$.G(818817, J$.R(818809, 'options', options, false, false), 'ssl'))) ? J$.G(818833, J$.R(818825, 'result', result, false, false), 'search') : J$._()) ? J$.U(50778, '!', J$.M(818865, J$.G(818849, J$.R(818841, 'result', result, false, false), 'search'), 'match', false)(J$.T(818857, 'ssl', 21, false))) : J$._())) {
                                                J$.M(818889, J$.R(818873, 'connectionStringOptions', connectionStringOptions, false, false), 'push', false)(J$.T(818881, 'ssl=true', 21, false));
                                            }
                                            if (J$.C(52352, J$.G(818905, J$.R(818897, 'result', result, false, false), 'search'))) {
                                                J$.M(818961, J$.R(818913, 'connectionStringOptions', connectionStringOptions, false, false), 'push', false)(J$.M(818953, J$.G(818929, J$.R(818921, 'result', result, false, false), 'search'), 'replace', false)(J$.T(818937, '?', 21, false), J$.T(818945, '', 21, false)));
                                            }
                                            J$.M(819577, J$.R(818969, 'dns', dns, false, true), 'resolveTxt', false)(J$.G(818985, J$.R(818977, 'result', result, false, false), 'host'), J$.T(819569, function (err, record) {
                                                jalangiLabel1:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(819537, arguments.callee, this, arguments);
                                                            arguments = J$.N(819545, 'arguments', arguments, true, false, false);
                                                            err = J$.N(819553, 'err', err, true, false, false);
                                                            record = J$.N(819561, 'record', record, true, false, false);
                                                            if (J$.C(52368, J$.C(52360, J$.R(818993, 'err', err, false, false)) ? J$.B(50786, '!==', J$.G(819009, J$.R(819001, 'err', err, false, false), 'code'), J$.T(819017, 'ENODATA', 21, false)) : J$._()))
                                                                return J$.Rt(819049, J$.F(819041, J$.R(819025, 'callback', callback, false, false), false)(J$.R(819033, 'err', err, false, false)));
                                                            if (J$.C(52384, J$.C(52376, J$.R(819057, 'err', err, false, false)) ? J$.B(50794, '===', J$.G(819073, J$.R(819065, 'err', err, false, false), 'code'), J$.T(819081, 'ENODATA', 21, false)) : J$._()))
                                                                record = J$.W(819097, 'record', J$.T(819089, null, 25, false), record, false, false);
                                                            if (J$.C(52424, J$.R(819105, 'record', record, false, false))) {
                                                                if (J$.C(52392, J$.B(50802, '>', J$.G(819121, J$.R(819113, 'record', record, false, false), 'length'), J$.T(819129, 1, 22, false)))) {
                                                                    return J$.Rt(819177, J$.F(819169, J$.R(819137, 'callback', callback, false, false), false)(J$.F(819161, J$.I(typeof Error === 'undefined' ? Error = J$.R(819145, 'Error', undefined, true, true) : Error = J$.R(819145, 'Error', Error, true, true)), true)(J$.T(819153, 'Multiple text records not allowed', 21, false))));
                                                                }
                                                                record = J$.W(819209, 'record', J$.G(819201, J$.R(819185, 'record', record, false, false), J$.T(819193, 0, 22, false)), record, false, false);
                                                                if (J$.C(52400, J$.B(50810, '>', J$.G(819225, J$.R(819217, 'record', record, false, false), 'length'), J$.T(819233, 1, 22, false))))
                                                                    record = J$.W(819265, 'record', J$.M(819257, J$.R(819241, 'record', record, false, false), 'join', false)(J$.T(819249, '', 21, false)), record, false, false);
                                                                else
                                                                    record = J$.W(819297, 'record', J$.G(819289, J$.R(819273, 'record', record, false, false), J$.T(819281, 0, 22, false)), record, false, false);
                                                                if (J$.C(52416, J$.C(52408, J$.U(50818, '!', J$.M(819321, J$.R(819305, 'record', record, false, false), 'includes', false)(J$.T(819313, 'authSource', 21, false)))) ? J$.U(50826, '!', J$.M(819345, J$.R(819329, 'record', record, false, false), 'includes', false)(J$.T(819337, 'replicaSet', 21, false))) : J$._())) {
                                                                    return J$.Rt(819393, J$.F(819385, J$.R(819353, 'callback', callback, false, false), false)(J$.F(819377, J$.I(typeof Error === 'undefined' ? Error = J$.R(819361, 'Error', undefined, true, true) : Error = J$.R(819361, 'Error', Error, true, true)), true)(J$.T(819369, 'Text record must only set `authSource` or `replicaSet`', 21, false))));
                                                                }
                                                                J$.M(819417, J$.R(819401, 'connectionStringOptions', connectionStringOptions, false, false), 'push', false)(J$.R(819409, 'record', record, false, false));
                                                            }
                                                            if (J$.C(52432, J$.G(819433, J$.R(819425, 'connectionStringOptions', connectionStringOptions, false, false), 'length'))) {
                                                                connectionString = J$.W(819489, 'connectionString', J$.B(50834, '+', J$.R(819481, 'connectionString', connectionString, false, false), J$.M(819473, J$.T(819441, '?', 21, false), 'concat', false)(J$.M(819465, J$.R(819449, 'connectionStringOptions', connectionStringOptions, false, false), 'join', false)(J$.T(819457, '&', 21, false)))), connectionString, false, false);
                                                            }
                                                            J$.F(819529, J$.R(819497, 'parseHandler', parseHandler, false, true), false)(J$.R(819505, 'connectionString', connectionString, false, false), J$.R(819513, 'options', options, false, false), J$.R(819521, 'callback', callback, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(829473, J$e);
                                                        } finally {
                                                            if (J$.Fr(829481))
                                                                continue jalangiLabel1;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(829489, J$e);
                                        } finally {
                                            if (J$.Fr(829497))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(829505, J$e);
                        } finally {
                            if (J$.Fr(829513))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(829649, J$e);
        } finally {
            if (J$.Sr(829657))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

