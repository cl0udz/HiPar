J$.noInstrEval = false;
jalangiLabel50:
    while (true) {
        try {
            J$.Se(587257, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/operations/connect.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(573833, arguments.callee, this, arguments);
                            arguments = J$.N(573841, 'arguments', arguments, true, false, false);
                            obj = J$.N(573849, 'obj', obj, true, false, false);
                            if (J$.C(36520, J$.C(36480, J$.B(35754, '===', J$.U(35746, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(573569, 'Symbol', undefined, true, true) : Symbol = J$.R(573569, 'Symbol', Symbol, true, true))), J$.T(573577, 'function', 21, false))) ? J$.B(35770, '===', J$.U(35762, 'typeof', J$.G(573593, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(573585, 'Symbol', undefined, true, true) : Symbol = J$.R(573585, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(573601, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(573657, '_typeof', J$.T(573649, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(573625, arguments.callee, this, arguments);
                                                arguments = J$.N(573633, 'arguments', arguments, true, false, false);
                                                obj = J$.N(573641, 'obj', obj, true, false, false);
                                                return J$.Rt(573617, J$.U(35778, 'typeof', J$.R(573609, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(587921, J$e);
                                            } finally {
                                                if (J$.Fr(587929))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(573793, '_typeof', J$.T(573785, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(573761, arguments.callee, this, arguments);
                                                arguments = J$.N(573769, 'arguments', arguments, true, false, false);
                                                obj = J$.N(573777, 'obj', obj, true, false, false);
                                                return J$.Rt(573753, J$.C(36512, J$.C(36504, J$.C(36496, J$.C(36488, J$.R(573665, 'obj', obj, false, false)) ? J$.B(35794, '===', J$.U(35786, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(573673, 'Symbol', undefined, true, true) : Symbol = J$.R(573673, 'Symbol', Symbol, true, true))), J$.T(573681, 'function', 21, false)) : J$._()) ? J$.B(35802, '===', J$.G(573697, J$.R(573689, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(573705, 'Symbol', undefined, true, true) : Symbol = J$.R(573705, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(35810, '!==', J$.R(573713, 'obj', obj, false, false), J$.G(573729, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(573721, 'Symbol', undefined, true, true) : Symbol = J$.R(573721, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(573737, 'symbol', 21, false) : J$.U(35818, 'typeof', J$.R(573745, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(587937, J$e);
                                            } finally {
                                                if (J$.Fr(587945))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(573825, J$.F(573817, J$.R(573801, '_typeof', _typeof, false, true), false)(J$.R(573809, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(587953, J$e);
                        } finally {
                            if (J$.Fr(587961))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _classCallCheck(instance, Constructor) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(573897, arguments.callee, this, arguments);
                            arguments = J$.N(573905, 'arguments', arguments, true, false, false);
                            instance = J$.N(573913, 'instance', instance, true, false, false);
                            Constructor = J$.N(573921, 'Constructor', Constructor, true, false, false);
                            if (J$.C(36528, J$.U(35834, '!', J$.B(35826, 'instanceof', J$.R(573857, 'instance', instance, false, false), J$.R(573865, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(573889, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(573873, 'TypeError', undefined, true, true) : TypeError = J$.R(573873, 'TypeError', TypeError, true, true)), true)(J$.T(573881, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(587969, J$e);
                        } finally {
                            if (J$.Fr(587977))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(574169, arguments.callee, this, arguments);
                            arguments = J$.N(574177, 'arguments', arguments, true, false, false);
                            target = J$.N(574185, 'target', target, true, false, false);
                            props = J$.N(574193, 'props', props, true, false, false);
                            J$.N(574201, 'i', i, false, false, false);
                            J$.N(574209, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(573937, 'i', J$.T(573929, 0, 22, false), i, false, false); J$.C(36552, J$.B(35842, '<', J$.R(573945, 'i', i, false, false), J$.G(573961, J$.R(573953, 'props', props, false, false), 'length'))); J$.B(35866, '-', i = J$.W(573977, 'i', J$.B(35858, '+', J$.U(35850, '+', J$.R(573969, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(574009, 'descriptor', J$.G(574001, J$.R(573985, 'props', props, false, false), J$.R(573993, 'i', i, false, false)), descriptor, false, false);
                                J$.P(574049, J$.R(574017, 'descriptor', descriptor, false, false), 'enumerable', J$.C(36536, J$.G(574033, J$.R(574025, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(574041, false, 23, false));
                                J$.P(574073, J$.R(574057, 'descriptor', descriptor, false, false), 'configurable', J$.T(574065, true, 23, false));
                                if (J$.C(36544, J$.B(35874, 'in', J$.T(574081, 'value', 21, false), J$.R(574089, 'descriptor', descriptor, false, false))))
                                    J$.P(574113, J$.R(574097, 'descriptor', descriptor, false, false), 'writable', J$.T(574105, true, 23, false));
                                J$.M(574161, J$.I(typeof Object === 'undefined' ? Object = J$.R(574121, 'Object', undefined, true, true) : Object = J$.R(574121, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(574129, 'target', target, false, false), J$.G(574145, J$.R(574137, 'descriptor', descriptor, false, false), 'key'), J$.R(574153, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(587985, J$e);
                        } finally {
                            if (J$.Fr(587993))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(574321, arguments.callee, this, arguments);
                            arguments = J$.N(574329, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(574337, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(574345, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(574353, 'staticProps', staticProps, true, false, false);
                            if (J$.C(36560, J$.R(574217, 'protoProps', protoProps, false, false)))
                                J$.F(574257, J$.R(574225, '_defineProperties', _defineProperties, false, true), false)(J$.G(574241, J$.R(574233, 'Constructor', Constructor, false, false), 'prototype'), J$.R(574249, 'protoProps', protoProps, false, false));
                            if (J$.C(36568, J$.R(574265, 'staticProps', staticProps, false, false)))
                                J$.F(574297, J$.R(574273, '_defineProperties', _defineProperties, false, true), false)(J$.R(574281, 'Constructor', Constructor, false, false), J$.R(574289, 'staticProps', staticProps, false, false));
                            return J$.Rt(574313, J$.R(574305, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(588001, J$e);
                        } finally {
                            if (J$.Fr(588009))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _possibleConstructorReturn(self, call) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(574465, arguments.callee, this, arguments);
                            arguments = J$.N(574473, 'arguments', arguments, true, false, false);
                            self = J$.N(574481, 'self', self, true, false, false);
                            call = J$.N(574489, 'call', call, true, false, false);
                            if (J$.C(36592, J$.C(36584, J$.R(574361, 'call', call, false, false)) ? J$.C(36576, J$.B(35882, '===', J$.F(574385, J$.R(574369, '_typeof', _typeof, false, true), false)(J$.R(574377, 'call', call, false, false)), J$.T(574393, 'object', 21, false))) ? J$._() : J$.B(35898, '===', J$.U(35890, 'typeof', J$.R(574401, 'call', call, false, false)), J$.T(574409, 'function', 21, false)) : J$._())) {
                                return J$.Rt(574425, J$.R(574417, 'call', call, false, false));
                            }
                            return J$.Rt(574457, J$.F(574449, J$.R(574433, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(574441, 'self', self, false, false)));
                        } catch (J$e) {
                            J$.Ex(588017, J$e);
                        } finally {
                            if (J$.Fr(588025))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _assertThisInitialized(self) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(574553, arguments.callee, this, arguments);
                            arguments = J$.N(574561, 'arguments', arguments, true, false, false);
                            self = J$.N(574569, 'self', self, true, false, false);
                            if (J$.C(36600, J$.B(35906, '===', J$.R(574497, 'self', self, false, false), void J$.T(574505, 0, 22, false)))) {
                                throw J$.F(574529, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(574513, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(574513, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(574521, 'this hasn\'t been initialised - super() hasn\'t been called', 21, false));
                            }
                            return J$.Rt(574545, J$.R(574537, 'self', self, false, false));
                        } catch (J$e) {
                            J$.Ex(588033, J$e);
                        } finally {
                            if (J$.Fr(588041))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _getPrototypeOf(o) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(574729, arguments.callee, this, arguments);
                            arguments = J$.N(574737, 'arguments', arguments, true, false, false);
                            o = J$.N(574745, 'o', o, true, false, false);
                            _getPrototypeOf = J$.W(574689, '_getPrototypeOf', J$.C(36616, J$.G(574585, J$.I(typeof Object === 'undefined' ? Object = J$.R(574577, 'Object', undefined, true, true) : Object = J$.R(574577, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$.G(574601, J$.I(typeof Object === 'undefined' ? Object = J$.R(574593, 'Object', undefined, true, true) : Object = J$.R(574593, 'Object', Object, true, true)), 'getPrototypeOf') : J$.T(574681, function _getPrototypeOf(o) {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(574657, arguments.callee, this, arguments);
                                            arguments = J$.N(574665, 'arguments', arguments, true, false, false);
                                            o = J$.N(574673, 'o', o, true, false, false);
                                            return J$.Rt(574649, J$.C(36608, J$.G(574617, J$.R(574609, 'o', o, false, false), '__proto__')) ? J$._() : J$.M(574641, J$.I(typeof Object === 'undefined' ? Object = J$.R(574625, 'Object', undefined, true, true) : Object = J$.R(574625, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(574633, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(588049, J$e);
                                        } finally {
                                            if (J$.Fr(588057))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _getPrototypeOf, false, true);
                            return J$.Rt(574721, J$.F(574713, J$.R(574697, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(574705, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(588065, J$e);
                        } finally {
                            if (J$.Fr(588073))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _inherits(subClass, superClass) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(574945, arguments.callee, this, arguments);
                            arguments = J$.N(574953, 'arguments', arguments, true, false, false);
                            subClass = J$.N(574961, 'subClass', subClass, true, false, false);
                            superClass = J$.N(574969, 'superClass', superClass, true, false, false);
                            if (J$.C(36632, J$.C(36624, J$.B(35922, '!==', J$.U(35914, 'typeof', J$.R(574753, 'superClass', superClass, false, false)), J$.T(574761, 'function', 21, false))) ? J$.B(35930, '!==', J$.R(574769, 'superClass', superClass, false, false), J$.T(574777, null, 25, false)) : J$._())) {
                                throw J$.F(574801, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(574785, 'TypeError', undefined, true, true) : TypeError = J$.R(574785, 'TypeError', TypeError, true, true)), true)(J$.T(574793, 'Super expression must either be null or a function', 21, false));
                            }
                            J$.P(574897, J$.R(574809, 'subClass', subClass, false, false), 'prototype', J$.M(574889, J$.I(typeof Object === 'undefined' ? Object = J$.R(574817, 'Object', undefined, true, true) : Object = J$.R(574817, 'Object', Object, true, true)), 'create', false)(J$.C(36640, J$.R(574825, 'superClass', superClass, false, false)) ? J$.G(574841, J$.R(574833, 'superClass', superClass, false, false), 'prototype') : J$._(), J$.T(574881, {
                                constructor: J$.T(574873, {
                                    value: J$.R(574849, 'subClass', subClass, false, false),
                                    writable: J$.T(574857, true, 23, false),
                                    configurable: J$.T(574865, true, 23, false)
                                }, 11, false)
                            }, 11, false)));
                            if (J$.C(36648, J$.R(574905, 'superClass', superClass, false, false)))
                                J$.F(574937, J$.R(574913, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(574921, 'subClass', subClass, false, false), J$.R(574929, 'superClass', superClass, false, false));
                        } catch (J$e) {
                            J$.Ex(588081, J$e);
                        } finally {
                            if (J$.Fr(588089))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _setPrototypeOf(o, p) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(575121, arguments.callee, this, arguments);
                            arguments = J$.N(575129, 'arguments', arguments, true, false, false);
                            o = J$.N(575137, 'o', o, true, false, false);
                            p = J$.N(575145, 'p', p, true, false, false);
                            _setPrototypeOf = J$.W(575073, '_setPrototypeOf', J$.C(36656, J$.G(574985, J$.I(typeof Object === 'undefined' ? Object = J$.R(574977, 'Object', undefined, true, true) : Object = J$.R(574977, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$._() : J$.T(575065, function _setPrototypeOf(o, p) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(575033, arguments.callee, this, arguments);
                                            arguments = J$.N(575041, 'arguments', arguments, true, false, false);
                                            o = J$.N(575049, 'o', o, true, false, false);
                                            p = J$.N(575057, 'p', p, true, false, false);
                                            J$.P(575009, J$.R(574993, 'o', o, false, false), '__proto__', J$.R(575001, 'p', p, false, false));
                                            return J$.Rt(575025, J$.R(575017, 'o', o, false, false));
                                        } catch (J$e) {
                                            J$.Ex(588097, J$e);
                                        } finally {
                                            if (J$.Fr(588105))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _setPrototypeOf, false, true);
                            return J$.Rt(575113, J$.F(575105, J$.R(575081, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(575089, 'o', o, false, false), J$.R(575097, 'p', p, false, false)));
                        } catch (J$e) {
                            J$.Ex(588113, J$e);
                        } finally {
                            if (J$.Fr(588121))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function loadClient() {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(575777, arguments.callee, this, arguments);
                            arguments = J$.N(575785, 'arguments', arguments, true, false, false);
                            if (J$.C(36664, J$.U(35938, '!', J$.R(575721, 'client', client, false, true)))) {
                                client = J$.W(575753, 'client', J$.F(575745, J$.I(typeof require === 'undefined' ? require = J$.R(575729, 'require', undefined, true, true) : require = J$.R(575729, 'require', require, true, true)), false)(J$.T(575737, '../mongo_client', 21, false)), client, false, true);
                            }
                            return J$.Rt(575769, J$.R(575761, 'client', client, false, true));
                        } catch (J$e) {
                            J$.Ex(588129, J$e);
                        } finally {
                            if (J$.Fr(588137))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validOptions(options) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(577129, arguments.callee, this, arguments);
                            arguments = J$.N(577137, 'arguments', arguments, true, false, false);
                            options = J$.N(577145, 'options', options, true, false, false);
                            J$.N(577153, '_validOptions', _validOptions, false, false, false);
                            J$.N(577161, 'name', name, false, false, false);
                            var _validOptions = J$.W(576825, '_validOptions', J$.M(576817, J$.R(576801, 'validOptionNames', validOptionNames, false, true), 'concat', false)(J$.R(576809, 'legacyOptionNames', legacyOptionNames, false, true)), _validOptions, false, false);
                            for (var name in J$.H(577113, J$.R(576833, 'options', options, false, false))) {
                                J$.N(577121, 'name', name, false, true, false);
                                {
                                    {
                                        if (J$.C(36672, J$.B(35962, '!==', J$.M(576857, J$.R(576841, 'ignoreOptionNames', ignoreOptionNames, false, true), 'indexOf', false)(J$.R(576849, 'name', name, false, false)), J$.U(35954, '-', J$.T(576865, 1, 22, false))))) {
                                            continue;
                                        }
                                        if (J$.C(36688, J$.B(35978, '===', J$.M(576889, J$.R(576873, '_validOptions', _validOptions, false, false), 'indexOf', false)(J$.R(576881, 'name', name, false, false)), J$.U(35970, '-', J$.T(576897, 1, 22, false))))) {
                                            if (J$.C(36680, J$.G(576913, J$.R(576905, 'options', options, false, false), 'validateOptions'))) {
                                                return J$.Rt(576969, J$.F(576961, J$.R(576921, 'MongoError', MongoError, false, true), true)(J$.M(576953, J$.T(576929, 'option ', 21, false), 'concat', false)(J$.R(576937, 'name', name, false, false), J$.T(576945, ' is not supported', 21, false))));
                                            } else {
                                                J$.M(577017, J$.I(typeof console === 'undefined' ? console = J$.R(576977, 'console', undefined, true, true) : console = J$.R(576977, 'console', console, true, true)), 'warn', false)(J$.M(577009, J$.T(576985, 'the options [', 21, false), 'concat', false)(J$.R(576993, 'name', name, false, false), J$.T(577001, '] is not supported', 21, false)));
                                            }
                                        }
                                        if (J$.C(36696, J$.B(35994, '!==', J$.M(577041, J$.R(577025, 'legacyOptionNames', legacyOptionNames, false, true), 'indexOf', false)(J$.R(577033, 'name', name, false, false)), J$.U(35986, '-', J$.T(577049, 1, 22, false))))) {
                                            J$.M(577105, J$.I(typeof console === 'undefined' ? console = J$.R(577057, 'console', undefined, true, true) : console = J$.R(577057, 'console', console, true, true)), 'warn', false)(J$.B(36002, '+', J$.T(577065, 'the server/replset/mongos/db options are deprecated, ', 21, false), J$.M(577097, J$.T(577073, 'all their options are supported at the top level of the options object [', 21, false), 'concat', false)(J$.R(577081, 'validOptionNames', validOptionNames, false, true), J$.T(577089, ']', 21, false))));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(588145, J$e);
                        } finally {
                            if (J$.Fr(588153))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addListeners(mongoClient, topology) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(578529, arguments.callee, this, arguments);
                            arguments = J$.N(578537, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(578545, 'mongoClient', mongoClient, true, false, false);
                            topology = J$.N(578553, 'topology', topology, true, false, false);
                            J$.M(578073, J$.R(578025, 'topology', topology, false, false), 'on', false)(J$.T(578033, 'authenticated', 21, false), J$.F(578065, J$.R(578041, 'createListener', createListener, false, true), false)(J$.R(578049, 'mongoClient', mongoClient, false, false), J$.T(578057, 'authenticated', 21, false)));
                            J$.M(578129, J$.R(578081, 'topology', topology, false, false), 'on', false)(J$.T(578089, 'error', 21, false), J$.F(578121, J$.R(578097, 'createListener', createListener, false, true), false)(J$.R(578105, 'mongoClient', mongoClient, false, false), J$.T(578113, 'error', 21, false)));
                            J$.M(578185, J$.R(578137, 'topology', topology, false, false), 'on', false)(J$.T(578145, 'timeout', 21, false), J$.F(578177, J$.R(578153, 'createListener', createListener, false, true), false)(J$.R(578161, 'mongoClient', mongoClient, false, false), J$.T(578169, 'timeout', 21, false)));
                            J$.M(578241, J$.R(578193, 'topology', topology, false, false), 'on', false)(J$.T(578201, 'close', 21, false), J$.F(578233, J$.R(578209, 'createListener', createListener, false, true), false)(J$.R(578217, 'mongoClient', mongoClient, false, false), J$.T(578225, 'close', 21, false)));
                            J$.M(578297, J$.R(578249, 'topology', topology, false, false), 'on', false)(J$.T(578257, 'parseError', 21, false), J$.F(578289, J$.R(578265, 'createListener', createListener, false, true), false)(J$.R(578273, 'mongoClient', mongoClient, false, false), J$.T(578281, 'parseError', 21, false)));
                            J$.M(578353, J$.R(578305, 'topology', topology, false, false), 'once', false)(J$.T(578313, 'open', 21, false), J$.F(578345, J$.R(578321, 'createListener', createListener, false, true), false)(J$.R(578329, 'mongoClient', mongoClient, false, false), J$.T(578337, 'open', 21, false)));
                            J$.M(578409, J$.R(578361, 'topology', topology, false, false), 'once', false)(J$.T(578369, 'fullsetup', 21, false), J$.F(578401, J$.R(578377, 'createListener', createListener, false, true), false)(J$.R(578385, 'mongoClient', mongoClient, false, false), J$.T(578393, 'fullsetup', 21, false)));
                            J$.M(578465, J$.R(578417, 'topology', topology, false, false), 'once', false)(J$.T(578425, 'all', 21, false), J$.F(578457, J$.R(578433, 'createListener', createListener, false, true), false)(J$.R(578441, 'mongoClient', mongoClient, false, false), J$.T(578449, 'all', 21, false)));
                            J$.M(578521, J$.R(578473, 'topology', topology, false, false), 'on', false)(J$.T(578481, 'reconnect', 21, false), J$.F(578513, J$.R(578489, 'createListener', createListener, false, true), false)(J$.R(578497, 'mongoClient', mongoClient, false, false), J$.T(578505, 'reconnect', 21, false)));
                        } catch (J$e) {
                            J$.Ex(588241, J$e);
                        } finally {
                            if (J$.Fr(588249))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function assignTopology(client, topology) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(578689, arguments.callee, this, arguments);
                            arguments = J$.N(578697, 'arguments', arguments, true, false, false);
                            client = J$.N(578705, 'client', client, true, false, false);
                            topology = J$.N(578713, 'topology', topology, true, false, false);
                            J$.P(578577, J$.R(578561, 'client', client, false, false), 'topology', J$.R(578569, 'topology', topology, false, false));
                            J$.P(578681, J$.G(578593, J$.R(578585, 'topology', topology, false, false), 's'), 'sessionPool', J$.C(36720, J$.B(36010, 'instanceof', J$.R(578601, 'topology', topology, false, false), J$.R(578609, 'NativeTopology', NativeTopology, false, true))) ? J$.F(578633, J$.R(578617, 'ServerSessionPool', ServerSessionPool, false, true), true)(J$.R(578625, 'topology', topology, false, false)) : J$.F(578673, J$.R(578641, 'ServerSessionPool', ServerSessionPool, false, true), true)(J$.G(578665, J$.G(578657, J$.R(578649, 'topology', topology, false, false), 's'), 'coreTopology')));
                        } catch (J$e) {
                            J$.Ex(588257, J$e);
                        } finally {
                            if (J$.Fr(588265))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function clearAllEvents(topology) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(578801, arguments.callee, this, arguments);
                            arguments = J$.N(578809, 'arguments', arguments, true, false, false);
                            topology = J$.N(578817, 'topology', topology, true, false, false);
                            J$.M(578793, J$.R(578721, 'monitoringEvents', monitoringEvents, false, true), 'forEach', false)(J$.T(578785, function (event) {
                                jalangiLabel22:
                                    while (true) {
                                        try {
                                            J$.Fe(578761, arguments.callee, this, arguments);
                                            arguments = J$.N(578769, 'arguments', arguments, true, false, false);
                                            event = J$.N(578777, 'event', event, true, false, false);
                                            return J$.Rt(578753, J$.M(578745, J$.R(578729, 'topology', topology, false, false), 'removeAllListeners', false)(J$.R(578737, 'event', event, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(588273, J$e);
                                        } finally {
                                            if (J$.Fr(588281))
                                                continue jalangiLabel22;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(588289, J$e);
                        } finally {
                            if (J$.Fr(588297))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function collectEvents(mongoClient, topology) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(579113, arguments.callee, this, arguments);
                            arguments = J$.N(579121, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(579129, 'mongoClient', mongoClient, true, false, false);
                            topology = J$.N(579137, 'topology', topology, true, false, false);
                            J$.N(579145, 'MongoClient', MongoClient, false, false, false);
                            J$.N(579153, 'collectedEvents', collectedEvents, false, false, false);
                            var MongoClient = J$.W(578841, 'MongoClient', J$.F(578833, J$.R(578825, 'loadClient', loadClient, false, true), false)(), MongoClient, false, false);
                            var collectedEvents = J$.W(578857, 'collectedEvents', J$.T(578849, [], 10, false), collectedEvents, false, false);
                            if (J$.C(36736, J$.B(36018, 'instanceof', J$.R(578865, 'mongoClient', mongoClient, false, false), J$.R(578873, 'MongoClient', MongoClient, false, false)))) {
                                J$.M(579089, J$.R(578881, 'monitoringEvents', monitoringEvents, false, true), 'forEach', false)(J$.T(579081, function (event) {
                                    jalangiLabel25:
                                        while (true) {
                                            try {
                                                J$.Fe(579057, arguments.callee, this, arguments);
                                                arguments = J$.N(579065, 'arguments', arguments, true, false, false);
                                                event = J$.N(579073, 'event', event, true, false, false);
                                                J$.M(579049, J$.R(578889, 'topology', topology, false, false), 'on', false)(J$.R(578897, 'event', event, false, false), J$.T(579041, function (object1, object2) {
                                                    jalangiLabel24:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(579009, arguments.callee, this, arguments);
                                                                arguments = J$.N(579017, 'arguments', arguments, true, false, false);
                                                                object1 = J$.N(579025, 'object1', object1, true, false, false);
                                                                object2 = J$.N(579033, 'object2', object2, true, false, false);
                                                                if (J$.C(36728, J$.B(36026, '===', J$.R(578905, 'event', event, false, false), J$.T(578913, 'open', 21, false)))) {
                                                                    J$.M(578953, J$.R(578921, 'collectedEvents', collectedEvents, false, false), 'push', false)(J$.T(578945, {
                                                                        event: J$.R(578929, 'event', event, false, false),
                                                                        object1: J$.R(578937, 'mongoClient', mongoClient, false, false)
                                                                    }, 11, false));
                                                                } else {
                                                                    J$.M(579001, J$.R(578961, 'collectedEvents', collectedEvents, false, false), 'push', false)(J$.T(578993, {
                                                                        event: J$.R(578969, 'event', event, false, false),
                                                                        object1: J$.R(578977, 'object1', object1, false, false),
                                                                        object2: J$.R(578985, 'object2', object2, false, false)
                                                                    }, 11, false));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(588305, J$e);
                                                            } finally {
                                                                if (J$.Fr(588313))
                                                                    continue jalangiLabel24;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } catch (J$e) {
                                                J$.Ex(588321, J$e);
                                            } finally {
                                                if (J$.Fr(588329))
                                                    continue jalangiLabel25;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            return J$.Rt(579105, J$.R(579097, 'collectedEvents', collectedEvents, false, false));
                        } catch (J$e) {
                            J$.Ex(588337, J$e);
                        } finally {
                            if (J$.Fr(588345))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connect(mongoClient, url, options, callback) {
                jalangiLabel30:
                    while (true) {
                        try {
                            J$.Fe(580921, arguments.callee, this, arguments);
                            function connectCallback(err, topology) {
                                jalangiLabel29:
                                    while (true) {
                                        try {
                                            J$.Fe(580881, arguments.callee, this, arguments);
                                            arguments = J$.N(580889, 'arguments', arguments, true, false, false);
                                            err = J$.N(580897, 'err', err, true, false, false);
                                            topology = J$.N(580905, 'topology', topology, true, false, false);
                                            J$.N(580913, 'warningMessage', warningMessage, false, false, false);
                                            var warningMessage = J$.W(580673, 'warningMessage', J$.T(580665, 'seed list contains no mongos proxies, replicaset connections requires the parameter replicaSet to be supplied in the URI or options object, mongodb://server:port/db?replicaSet=name', 21, false), warningMessage, false, false);
                                            if (J$.C(36928, J$.C(36912, J$.R(580681, 'err', err, false, false)) ? J$.B(36154, '===', J$.G(580697, J$.R(580689, 'err', err, false, false), 'message'), J$.T(580705, 'no mongos proxies found in seed list', 21, false)) : J$._())) {
                                                if (J$.C(36920, J$.M(580721, J$.R(580713, 'logger', logger, false, false), 'isWarn', false)())) {
                                                    J$.M(580745, J$.R(580729, 'logger', logger, false, false), 'warn', false)(J$.R(580737, 'warningMessage', warningMessage, false, false));
                                                }
                                                return J$.Rt(580793, J$.F(580785, J$.R(580753, 'callback', callback, false, false), false)(J$.F(580777, J$.R(580761, 'MongoError', MongoError, false, true), true)(J$.R(580769, 'warningMessage', warningMessage, false, false))));
                                            }
                                            if (J$.C(36936, J$.R(580801, 'didRequestAuthentication', didRequestAuthentication, false, false))) {
                                                J$.M(580841, J$.R(580809, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.T(580817, 'authenticated', 21, false), J$.T(580825, null, 25, false), J$.T(580833, true, 23, false));
                                            }
                                            J$.F(580873, J$.R(580849, 'callback', callback, false, false), false)(J$.R(580857, 'err', err, false, false), J$.R(580865, 'topology', topology, false, false));
                                        } catch (J$e) {
                                            J$.Ex(588385, J$e);
                                        } finally {
                                            if (J$.Fr(588393))
                                                continue jalangiLabel29;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(580929, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(580937, 'mongoClient', mongoClient, true, false, false);
                            url = J$.N(580945, 'url', url, true, false, false);
                            options = J$.N(580953, 'options', options, true, false, false);
                            callback = J$.N(580961, 'callback', callback, true, false, false);
                            J$.N(580969, 'didRequestAuthentication', didRequestAuthentication, false, false, false);
                            J$.N(580977, 'logger', logger, false, false, false);
                            J$.N(580985, 'useNewUrlParser', useNewUrlParser, false, false, false);
                            J$.N(580993, 'parseFn', parseFn, false, false, false);
                            J$.N(581001, 'transform', transform, false, false, false);
                            connectCallback = J$.N(581017, 'connectCallback', J$.T(581009, connectCallback, 12, false), true, false, false);
                            options = J$.W(579257, 'options', J$.M(579249, J$.I(typeof Object === 'undefined' ? Object = J$.R(579225, 'Object', undefined, true, true) : Object = J$.R(579225, 'Object', Object, true, true)), 'assign', false)(J$.T(579233, {}, 11, false), J$.R(579241, 'options', options, false, false)), options, false, false);
                            if (J$.C(36744, J$.B(36042, '==', J$.R(579265, 'callback', callback, false, false), J$.T(579273, null, 25, false)))) {
                                throw J$.F(579297, J$.I(typeof Error === 'undefined' ? Error = J$.R(579281, 'Error', undefined, true, true) : Error = J$.R(579281, 'Error', Error, true, true)), true)(J$.T(579289, 'no callback function provided', 21, false));
                            }
                            var didRequestAuthentication = J$.W(579313, 'didRequestAuthentication', J$.T(579305, false, 23, false), didRequestAuthentication, false, false);
                            var logger = J$.W(579353, 'logger', J$.F(579345, J$.R(579321, 'Logger', Logger, false, true), false)(J$.T(579329, 'MongoClient', 21, false), J$.R(579337, 'options', options, false, false)), logger, false, false);
                            if (J$.C(36768, J$.C(36760, J$.C(36752, J$.B(36050, 'instanceof', J$.R(579361, 'url', url, false, false), J$.R(579369, 'Server', Server, false, true))) ? J$._() : J$.B(36058, 'instanceof', J$.R(579377, 'url', url, false, false), J$.R(579385, 'ReplSet', ReplSet, false, true))) ? J$._() : J$.B(36066, 'instanceof', J$.R(579393, 'url', url, false, false), J$.R(579401, 'Mongos', Mongos, false, true)))) {
                                return J$.Rt(579457, J$.F(579449, J$.R(579409, 'connectWithUrl', connectWithUrl, false, true), false)(J$.R(579417, 'mongoClient', mongoClient, false, false), J$.R(579425, 'url', url, false, false), J$.R(579433, 'options', options, false, false), J$.R(579441, 'connectCallback', connectCallback, false, false)));
                            }
                            var useNewUrlParser = J$.W(579489, 'useNewUrlParser', J$.B(36074, '!==', J$.G(579473, J$.R(579465, 'options', options, false, false), 'useNewUrlParser'), J$.T(579481, false, 23, false)), useNewUrlParser, false, false);
                            var parseFn = J$.W(579521, 'parseFn', J$.C(36776, J$.R(579497, 'useNewUrlParser', useNewUrlParser, false, false)) ? J$.R(579505, 'parse', parse, false, true) : J$.R(579513, 'legacyParse', legacyParse, false, true), parseFn, false, false);
                            var transform = J$.W(579553, 'transform', J$.C(36784, J$.R(579529, 'useNewUrlParser', useNewUrlParser, false, false)) ? J$.R(579537, 'transformUrlOptions', transformUrlOptions, false, true) : J$.R(579545, 'legacyTransformUrlOptions', legacyTransformUrlOptions, false, true), transform, false, false);
                            J$.F(580657, J$.R(579561, 'parseFn', parseFn, false, false), false)(J$.R(579569, 'url', url, false, false), J$.R(579577, 'options', options, false, false), J$.T(580649, function (err, _object) {
                                jalangiLabel28:
                                    while (true) {
                                        try {
                                            J$.Fe(580601, arguments.callee, this, arguments);
                                            arguments = J$.N(580609, 'arguments', arguments, true, false, false);
                                            err = J$.N(580617, 'err', err, true, false, false);
                                            _object = J$.N(580625, '_object', _object, true, false, false);
                                            J$.N(580633, 'object', object, false, false, false);
                                            J$.N(580641, '_finalOptions', _finalOptions, false, false, false);
                                            if (J$.C(36792, J$.R(579585, 'err', err, false, false)))
                                                return J$.Rt(579617, J$.F(579609, J$.R(579593, 'callback', callback, false, false), false)(J$.R(579601, 'err', err, false, false)));
                                            var object = J$.W(579649, 'object', J$.F(579641, J$.R(579625, 'transform', transform, false, false), false)(J$.R(579633, '_object', _object, false, false)), object, false, false);
                                            var _finalOptions = J$.W(579689, '_finalOptions', J$.F(579681, J$.R(579657, 'createUnifiedOptions', createUnifiedOptions, false, true), false)(J$.R(579665, 'object', object, false, false), J$.R(579673, 'options', options, false, false)), _finalOptions, false, false);
                                            if (J$.C(36800, J$.B(36082, '==', J$.G(579705, J$.R(579697, '_finalOptions', _finalOptions, false, false), 'socketTimeoutMS'), J$.T(579713, null, 25, false))))
                                                J$.P(579737, J$.R(579721, '_finalOptions', _finalOptions, false, false), 'socketTimeoutMS', J$.T(579729, 360000, 22, false));
                                            if (J$.C(36808, J$.B(36090, '==', J$.G(579753, J$.R(579745, '_finalOptions', _finalOptions, false, false), 'connectTimeoutMS'), J$.T(579761, null, 25, false))))
                                                J$.P(579785, J$.R(579769, '_finalOptions', _finalOptions, false, false), 'connectTimeoutMS', J$.T(579777, 30000, 22, false));
                                            if (J$.C(36816, J$.B(36098, '==', J$.G(579801, J$.R(579793, '_finalOptions', _finalOptions, false, false), 'retryWrites'), J$.T(579809, null, 25, false))))
                                                J$.P(579833, J$.R(579817, '_finalOptions', _finalOptions, false, false), 'retryWrites', J$.T(579825, true, 23, false));
                                            if (J$.C(36824, J$.B(36106, '==', J$.G(579849, J$.R(579841, '_finalOptions', _finalOptions, false, false), 'useRecoveryToken'), J$.T(579857, null, 25, false))))
                                                J$.P(579881, J$.R(579865, '_finalOptions', _finalOptions, false, false), 'useRecoveryToken', J$.T(579873, true, 23, false));
                                            if (J$.C(36832, J$.B(36114, '==', J$.G(579897, J$.R(579889, '_finalOptions', _finalOptions, false, false), 'readPreference'), J$.T(579905, null, 25, false))))
                                                J$.P(579929, J$.R(579913, '_finalOptions', _finalOptions, false, false), 'readPreference', J$.T(579921, 'primary', 21, false));
                                            if (J$.C(36848, J$.C(36840, J$.G(579945, J$.R(579937, '_finalOptions', _finalOptions, false, false), 'db_options')) ? J$.G(579969, J$.G(579961, J$.R(579953, '_finalOptions', _finalOptions, false, false), 'db_options'), 'auth') : J$._())) {
                                                J$.B(36122, 'delete', J$.G(579985, J$.R(579977, '_finalOptions', _finalOptions, false, false), 'db_options'), 'auth');
                                            }
                                            J$.P(580017, J$.G(580001, J$.R(579993, 'mongoClient', mongoClient, false, false), 's'), 'options', J$.R(580009, '_finalOptions', _finalOptions, false, false));
                                            if (J$.C(36856, J$.B(36130, '===', J$.G(580041, J$.G(580033, J$.R(580025, 'object', object, false, false), 'servers'), 'length'), J$.T(580049, 0, 22, false)))) {
                                                return J$.Rt(580097, J$.F(580089, J$.R(580057, 'callback', callback, false, false), false)(J$.F(580081, J$.I(typeof Error === 'undefined' ? Error = J$.R(580065, 'Error', undefined, true, true) : Error = J$.R(580065, 'Error', Error, true, true)), true)(J$.T(580073, 'connection string must contain at least one seed host', 21, false))));
                                            }
                                            if (J$.C(36872, J$.C(36864, J$.G(580113, J$.R(580105, '_finalOptions', _finalOptions, false, false), 'auth')) ? J$.U(36138, '!', J$.G(580129, J$.R(580121, '_finalOptions', _finalOptions, false, false), 'credentials')) : J$._())) {
                                                try {
                                                    didRequestAuthentication = J$.W(580145, 'didRequestAuthentication', J$.T(580137, true, 23, false), didRequestAuthentication, false, false);
                                                    J$.P(580241, J$.R(580153, '_finalOptions', _finalOptions, false, false), 'credentials', J$.F(580233, J$.R(580161, 'generateCredentials', generateCredentials, false, true), false)(J$.R(580169, 'mongoClient', mongoClient, false, false), J$.G(580193, J$.G(580185, J$.R(580177, '_finalOptions', _finalOptions, false, false), 'auth'), 'user'), J$.G(580217, J$.G(580209, J$.R(580201, '_finalOptions', _finalOptions, false, false), 'auth'), 'password'), J$.R(580225, '_finalOptions', _finalOptions, false, false)));
                                                } catch (err) {
                                                    J$.N(580281, 'err', err, false, false, true);
                                                    return J$.Rt(580273, J$.F(580265, J$.R(580249, 'callback', callback, false, false), false)(J$.R(580257, 'err', err, false, false)));
                                                }
                                            }
                                            if (J$.C(36880, J$.G(580297, J$.R(580289, '_finalOptions', _finalOptions, false, false), 'useUnifiedTopology'))) {
                                                return J$.Rt(580353, J$.F(580345, J$.R(580305, 'createTopology', createTopology, false, true), false)(J$.R(580313, 'mongoClient', mongoClient, false, false), J$.T(580321, 'unified', 21, false), J$.R(580329, '_finalOptions', _finalOptions, false, false), J$.R(580337, 'connectCallback', connectCallback, false, false)));
                                            }
                                            J$.F(580369, J$.R(580361, 'emitDeprecationForNonUnifiedTopology', emitDeprecationForNonUnifiedTopology, false, true), false)();
                                            if (J$.C(36904, J$.C(36888, J$.G(580385, J$.R(580377, '_finalOptions', _finalOptions, false, false), 'replicaSet')) ? J$._() : J$.G(580401, J$.R(580393, '_finalOptions', _finalOptions, false, false), 'rs_name'))) {
                                                return J$.Rt(580457, J$.F(580449, J$.R(580409, 'createTopology', createTopology, false, true), false)(J$.R(580417, 'mongoClient', mongoClient, false, false), J$.T(580425, 'replicaset', 21, false), J$.R(580433, '_finalOptions', _finalOptions, false, false), J$.R(580441, 'connectCallback', connectCallback, false, false)));
                                            } else if (J$.C(36896, J$.B(36146, '>', J$.G(580481, J$.G(580473, J$.R(580465, 'object', object, false, false), 'servers'), 'length'), J$.T(580489, 1, 22, false)))) {
                                                return J$.Rt(580545, J$.F(580537, J$.R(580497, 'createTopology', createTopology, false, true), false)(J$.R(580505, 'mongoClient', mongoClient, false, false), J$.T(580513, 'mongos', 21, false), J$.R(580521, '_finalOptions', _finalOptions, false, false), J$.R(580529, 'connectCallback', connectCallback, false, false)));
                                            } else {
                                                return J$.Rt(580593, J$.F(580585, J$.R(580553, 'createServer', createServer, false, true), false)(J$.R(580561, 'mongoClient', mongoClient, false, false), J$.R(580569, '_finalOptions', _finalOptions, false, false), J$.R(580577, 'connectCallback', connectCallback, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(588369, J$e);
                                        } finally {
                                            if (J$.Fr(588377))
                                                continue jalangiLabel28;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(588401, J$e);
                        } finally {
                            if (J$.Fr(588409))
                                continue jalangiLabel30;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connectWithUrl(mongoClient, url, options, connectCallback) {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(581521, arguments.callee, this, arguments);
                            arguments = J$.N(581529, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(581537, 'mongoClient', mongoClient, true, false, false);
                            url = J$.N(581545, 'url', url, true, false, false);
                            options = J$.N(581553, 'options', options, true, false, false);
                            connectCallback = J$.N(581561, 'connectCallback', connectCallback, true, false, false);
                            J$.N(581569, 'finalOptions', finalOptions, false, false, false);
                            J$.N(581577, 'isDoingAuth', isDoingAuth, false, false, false);
                            J$.F(581049, J$.R(581025, 'assignTopology', assignTopology, false, true), false)(J$.R(581033, 'mongoClient', mongoClient, false, false), J$.R(581041, 'url', url, false, false));
                            J$.F(581081, J$.R(581057, 'addListeners', addListeners, false, true), false)(J$.R(581065, 'mongoClient', mongoClient, false, false), J$.R(581073, 'url', url, false, false));
                            J$.F(581113, J$.R(581089, 'relayEvents', relayEvents, false, true), false)(J$.R(581097, 'mongoClient', mongoClient, false, false), J$.R(581105, 'url', url, false, false));
                            var finalOptions = J$.W(581153, 'finalOptions', J$.M(581145, J$.I(typeof Object === 'undefined' ? Object = J$.R(581121, 'Object', undefined, true, true) : Object = J$.R(581121, 'Object', Object, true, true)), 'assign', false)(J$.T(581129, {}, 11, false), J$.R(581137, 'options', options, false, false)), finalOptions, false, false);
                            if (J$.C(36960, J$.C(36944, J$.B(36170, '===', J$.U(36162, 'typeof', J$.G(581169, J$.R(581161, 'options', options, false, false), 'readPreference')), J$.T(581177, 'string', 21, false))) ? J$._() : J$.B(36186, '===', J$.U(36178, 'typeof', J$.G(581193, J$.R(581185, 'options', options, false, false), 'read_preference')), J$.T(581201, 'string', 21, false)))) {
                                J$.P(581265, J$.R(581209, 'finalOptions', finalOptions, false, false), 'readPreference', J$.F(581257, J$.R(581217, 'ReadPreference', ReadPreference, false, true), true)(J$.C(36952, J$.G(581233, J$.R(581225, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(581249, J$.R(581241, 'options', options, false, false), 'read_preference')));
                            }
                            var isDoingAuth = J$.W(581321, 'isDoingAuth', J$.C(36976, J$.C(36968, J$.G(581281, J$.R(581273, 'finalOptions', finalOptions, false, false), 'user')) ? J$._() : J$.G(581297, J$.R(581289, 'finalOptions', finalOptions, false, false), 'password')) ? J$._() : J$.G(581313, J$.R(581305, 'finalOptions', finalOptions, false, false), 'authMechanism'), isDoingAuth, false, false);
                            if (J$.C(36992, J$.C(36984, J$.R(581329, 'isDoingAuth', isDoingAuth, false, false)) ? J$.U(36194, '!', J$.G(581345, J$.R(581337, 'finalOptions', finalOptions, false, false), 'credentials')) : J$._())) {
                                try {
                                    J$.P(581425, J$.R(581353, 'finalOptions', finalOptions, false, false), 'credentials', J$.F(581417, J$.R(581361, 'generateCredentials', generateCredentials, false, true), false)(J$.R(581369, 'mongoClient', mongoClient, false, false), J$.G(581385, J$.R(581377, 'finalOptions', finalOptions, false, false), 'user'), J$.G(581401, J$.R(581393, 'finalOptions', finalOptions, false, false), 'password'), J$.R(581409, 'finalOptions', finalOptions, false, false)));
                                } catch (err) {
                                    J$.N(581473, 'err', err, false, false, true);
                                    return J$.Rt(581465, J$.F(581457, J$.R(581433, 'connectCallback', connectCallback, false, false), false)(J$.R(581441, 'err', err, false, false), J$.R(581449, 'url', url, false, false)));
                                }
                            }
                            return J$.Rt(581513, J$.M(581505, J$.R(581481, 'url', url, false, false), 'connect', false)(J$.R(581489, 'finalOptions', finalOptions, false, false), J$.R(581497, 'connectCallback', connectCallback, false, false)));
                        } catch (J$e) {
                            J$.Ex(588417, J$e);
                        } finally {
                            if (J$.Fr(588425))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createListener(mongoClient, event) {
                jalangiLabel33:
                    while (true) {
                        try {
                            J$.Fe(581801, arguments.callee, this, arguments);
                            arguments = J$.N(581809, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(581817, 'mongoClient', mongoClient, true, false, false);
                            event = J$.N(581825, 'event', event, true, false, false);
                            J$.N(581833, 'eventSet', eventSet, false, false, false);
                            var eventSet = J$.W(581641, 'eventSet', J$.F(581633, J$.I(typeof Set === 'undefined' ? Set = J$.R(581585, 'Set', undefined, true, true) : Set = J$.R(581585, 'Set', Set, true, true)), true)(J$.T(581625, [
                                J$.T(581593, 'all', 21, false),
                                J$.T(581601, 'fullsetup', 21, false),
                                J$.T(581609, 'open', 21, false),
                                J$.T(581617, 'reconnect', 21, false)
                            ], 10, false)), eventSet, false, false);
                            return J$.Rt(581793, J$.T(581785, function (v1, v2) {
                                jalangiLabel32:
                                    while (true) {
                                        try {
                                            J$.Fe(581753, arguments.callee, this, arguments);
                                            arguments = J$.N(581761, 'arguments', arguments, true, false, false);
                                            v1 = J$.N(581769, 'v1', v1, true, false, false);
                                            v2 = J$.N(581777, 'v2', v2, true, false, false);
                                            if (J$.C(37000, J$.M(581665, J$.R(581649, 'eventSet', eventSet, false, false), 'has', false)(J$.R(581657, 'event', event, false, false)))) {
                                                return J$.Rt(581705, J$.M(581697, J$.R(581673, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.R(581681, 'event', event, false, false), J$.R(581689, 'mongoClient', mongoClient, false, false)));
                                            }
                                            J$.M(581745, J$.R(581713, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.R(581721, 'event', event, false, false), J$.R(581729, 'v1', v1, false, false), J$.R(581737, 'v2', v2, false, false));
                                        } catch (J$e) {
                                            J$.Ex(588433, J$e);
                                        } finally {
                                            if (J$.Fr(588441))
                                                continue jalangiLabel32;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(588449, J$e);
                        } finally {
                            if (J$.Fr(588457))
                                continue jalangiLabel33;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createServer(mongoClient, options, callback) {
                jalangiLabel35:
                    while (true) {
                        try {
                            J$.Fe(582433, arguments.callee, this, arguments);
                            arguments = J$.N(582441, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(582449, 'mongoClient', mongoClient, true, false, false);
                            options = J$.N(582457, 'options', options, true, false, false);
                            callback = J$.N(582465, 'callback', callback, true, false, false);
                            J$.N(582473, 'servers', servers, false, false, false);
                            J$.N(582481, 'server', server, false, false, false);
                            J$.N(582489, 'collectedEvents', collectedEvents, false, false, false);
                            J$.P(581873, J$.R(581841, 'options', options, false, false), 'promiseLibrary', J$.G(581865, J$.G(581857, J$.R(581849, 'mongoClient', mongoClient, false, false), 's'), 'promiseLibrary'));
                            var servers = J$.W(581905, 'servers', J$.F(581897, J$.R(581881, 'translateOptions', translateOptions, false, true), false)(J$.R(581889, 'options', options, false, false)), servers, false, false);
                            var server = J$.W(581937, 'server', J$.G(581929, J$.R(581913, 'servers', servers, false, false), J$.T(581921, 0, 22, false)), server, false, false);
                            var collectedEvents = J$.W(581977, 'collectedEvents', J$.F(581969, J$.R(581945, 'collectEvents', collectEvents, false, true), false)(J$.R(581953, 'mongoClient', mongoClient, false, false), J$.R(581961, 'server', server, false, false)), collectedEvents, false, false);
                            J$.M(582425, J$.R(581985, 'server', server, false, false), 'connect', false)(J$.R(581993, 'options', options, false, false), J$.T(582417, function (err, topology) {
                                jalangiLabel34:
                                    while (true) {
                                        try {
                                            J$.Fe(582377, arguments.callee, this, arguments);
                                            arguments = J$.N(582385, 'arguments', arguments, true, false, false);
                                            err = J$.N(582393, 'err', err, true, false, false);
                                            topology = J$.N(582401, 'topology', topology, true, false, false);
                                            J$.N(582409, 'ismaster', ismaster, false, false, false);
                                            if (J$.C(37008, J$.R(582001, 'err', err, false, false))) {
                                                J$.M(582025, J$.R(582009, 'server', server, false, false), 'close', false)(J$.T(582017, true, 23, false));
                                                return J$.Rt(582057, J$.F(582049, J$.R(582033, 'callback', callback, false, false), false)(J$.R(582041, 'err', err, false, false)));
                                            }
                                            J$.F(582081, J$.R(582065, 'clearAllEvents', clearAllEvents, false, true), false)(J$.R(582073, 'server', server, false, false));
                                            J$.F(582113, J$.R(582089, 'relayEvents', relayEvents, false, true), false)(J$.R(582097, 'mongoClient', mongoClient, false, false), J$.R(582105, 'server', server, false, false));
                                            J$.F(582145, J$.R(582121, 'addListeners', addListeners, false, true), false)(J$.R(582129, 'mongoClient', mongoClient, false, false), J$.R(582137, 'server', server, false, false));
                                            var ismaster = J$.W(582169, 'ismaster', J$.M(582161, J$.R(582153, 'topology', topology, false, false), 'lastIsMaster', false)(), ismaster, false, false);
                                            J$.F(582201, J$.R(582177, 'assignTopology', assignTopology, false, true), false)(J$.R(582185, 'mongoClient', mongoClient, false, false), J$.R(582193, 'topology', topology, false, false));
                                            if (J$.C(37024, J$.C(37016, J$.R(582209, 'ismaster', ismaster, false, false)) ? J$.B(36202, '===', J$.G(582225, J$.R(582217, 'ismaster', ismaster, false, false), 'msg'), J$.T(582233, 'isdbgrid', 21, false)) : J$._())) {
                                                J$.M(582249, J$.R(582241, 'topology', topology, false, false), 'close', false)();
                                                return J$.Rt(582305, J$.F(582297, J$.R(582257, 'createTopology', createTopology, false, true), false)(J$.R(582265, 'mongoClient', mongoClient, false, false), J$.T(582273, 'mongos', 21, false), J$.R(582281, 'options', options, false, false), J$.R(582289, 'callback', callback, false, false)));
                                            }
                                            J$.F(582337, J$.R(582313, 'replayEvents', replayEvents, false, true), false)(J$.R(582321, 'mongoClient', mongoClient, false, false), J$.R(582329, 'collectedEvents', collectedEvents, false, false));
                                            J$.F(582369, J$.R(582345, 'callback', callback, false, false), false)(J$.R(582353, 'err', err, false, false), J$.R(582361, 'topology', topology, false, false));
                                        } catch (J$e) {
                                            J$.Ex(588465, J$e);
                                        } finally {
                                            if (J$.Fr(588473))
                                                continue jalangiLabel34;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(588481, J$e);
                        } finally {
                            if (J$.Fr(588489))
                                continue jalangiLabel35;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createTopology(mongoClient, topologyType, options, callback) {
                jalangiLabel38:
                    while (true) {
                        try {
                            J$.Fe(583561, arguments.callee, this, arguments);
                            arguments = J$.N(583569, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(583577, 'mongoClient', mongoClient, true, false, false);
                            topologyType = J$.N(583585, 'topologyType', topologyType, true, false, false);
                            options = J$.N(583593, 'options', options, true, false, false);
                            callback = J$.N(583601, 'callback', callback, true, false, false);
                            J$.N(583609, 'translationOptions', translationOptions, false, false, false);
                            J$.N(583617, 'servers', servers, false, false, false);
                            J$.N(583625, 'topology', topology, false, false, false);
                            J$.P(582529, J$.R(582497, 'options', options, false, false), 'promiseLibrary', J$.G(582521, J$.G(582513, J$.R(582505, 'mongoClient', mongoClient, false, false), 's'), 'promiseLibrary'));
                            var translationOptions = J$.W(582545, 'translationOptions', J$.T(582537, {}, 11, false), translationOptions, false, false);
                            if (J$.C(37032, J$.B(36210, '===', J$.R(582553, 'topologyType', topologyType, false, false), J$.T(582561, 'unified', 21, false))))
                                J$.P(582585, J$.R(582569, 'translationOptions', translationOptions, false, false), 'createServers', J$.T(582577, false, 23, false));
                            var servers = J$.W(582625, 'servers', J$.F(582617, J$.R(582593, 'translateOptions', translateOptions, false, true), false)(J$.R(582601, 'options', options, false, false), J$.R(582609, 'translationOptions', translationOptions, false, false)), servers, false, false);
                            var topology;
                            if (J$.C(37056, J$.B(36218, '===', J$.R(582633, 'topologyType', topologyType, false, false), J$.T(582641, 'mongos', 21, false)))) {
                                topology = J$.W(582681, 'topology', J$.F(582673, J$.R(582649, 'Mongos', Mongos, false, true), true)(J$.R(582657, 'servers', servers, false, false), J$.R(582665, 'options', options, false, false)), topology, false, false);
                            } else if (J$.C(37048, J$.B(36226, '===', J$.R(582689, 'topologyType', topologyType, false, false), J$.T(582697, 'replicaset', 21, false)))) {
                                topology = J$.W(582737, 'topology', J$.F(582729, J$.R(582705, 'ReplSet', ReplSet, false, true), true)(J$.R(582713, 'servers', servers, false, false), J$.R(582721, 'options', options, false, false)), topology, false, false);
                            } else if (J$.C(37040, J$.B(36234, '===', J$.R(582745, 'topologyType', topologyType, false, false), J$.T(582753, 'unified', 21, false)))) {
                                topology = J$.W(582801, 'topology', J$.F(582793, J$.R(582761, 'NativeTopology', NativeTopology, false, true), true)(J$.G(582777, J$.R(582769, 'options', options, false, false), 'servers'), J$.R(582785, 'options', options, false, false)), topology, false, false);
                            }
                            J$.F(582833, J$.R(582809, 'addListeners', addListeners, false, true), false)(J$.R(582817, 'mongoClient', mongoClient, false, false), J$.R(582825, 'topology', topology, false, false));
                            J$.F(582865, J$.R(582841, 'relayEvents', relayEvents, false, true), false)(J$.R(582849, 'mongoClient', mongoClient, false, false), J$.R(582857, 'topology', topology, false, false));
                            J$.F(582897, J$.R(582873, 'assignTopology', assignTopology, false, true), false)(J$.R(582881, 'mongoClient', mongoClient, false, false), J$.R(582889, 'topology', topology, false, false));
                            J$.M(583553, J$.R(582905, 'topology', topology, false, false), 'connect', false)(J$.R(582913, 'options', options, false, false), J$.T(583545, function (err) {
                                jalangiLabel37:
                                    while (true) {
                                        try {
                                            J$.Fe(583505, arguments.callee, this, arguments);
                                            arguments = J$.N(583513, 'arguments', arguments, true, false, false);
                                            err = J$.N(583521, 'err', err, true, false, false);
                                            J$.N(583529, 'AutoEncrypter', AutoEncrypter, false, false, false);
                                            J$.N(583537, 'mongoCryptOptions', mongoCryptOptions, false, false, false);
                                            if (J$.C(37064, J$.R(582921, 'err', err, false, false))) {
                                                J$.M(582945, J$.R(582929, 'topology', topology, false, false), 'close', false)(J$.T(582937, true, 23, false));
                                                return J$.Rt(582977, J$.F(582969, J$.R(582953, 'callback', callback, false, false), false)(J$.R(582961, 'err', err, false, false)));
                                            }
                                            if (J$.C(37072, J$.B(36242, '==', J$.G(582993, J$.R(582985, 'options', options, false, false), 'autoEncryption'), J$.T(583001, null, 25, false)))) {
                                                J$.F(583033, J$.R(583009, 'callback', callback, false, false), false)(J$.T(583017, null, 25, false), J$.R(583025, 'topology', topology, false, false));
                                                return J$.Rt(583041, undefined);
                                            }
                                            var AutoEncrypter;
                                            try {
                                                J$.M(583065, J$.I(typeof require === 'undefined' ? require = J$.R(583049, 'require', undefined, true, true) : require = J$.R(583049, 'require', require, true, true)), 'resolve', false)(J$.T(583057, 'mongodb-client-encryption', 21, false));
                                            } catch (err) {
                                                J$.N(583121, 'err', err, false, false, true);
                                                J$.F(583105, J$.R(583073, 'callback', callback, false, false), false)(J$.F(583097, J$.R(583081, 'MongoError', MongoError, false, true), true)(J$.T(583089, 'Auto-encryption requested, but the module is not installed. Please add `mongodb-client-encryption` as a dependency of your project', 21, false)));
                                                return J$.Rt(583113, undefined);
                                            }
                                            try {
                                                AutoEncrypter = J$.W(583193, 'AutoEncrypter', J$.G(583185, J$.F(583177, J$.F(583145, J$.I(typeof require === 'undefined' ? require = J$.R(583129, 'require', undefined, true, true) : require = J$.R(583129, 'require', require, true, true)), false)(J$.T(583137, 'mongodb-client-encryption', 21, false)), false)(J$.F(583169, J$.I(typeof require === 'undefined' ? require = J$.R(583153, 'require', undefined, true, true) : require = J$.R(583153, 'require', require, true, true)), false)(J$.T(583161, '../../index', 21, false))), 'AutoEncrypter'), AutoEncrypter, false, false);
                                            } catch (err) {
                                                J$.N(583233, 'err', err, false, false, true);
                                                J$.F(583217, J$.R(583201, 'callback', callback, false, false), false)(J$.R(583209, 'err', err, false, false));
                                                return J$.Rt(583225, undefined);
                                            }
                                            var mongoCryptOptions = J$.W(583281, 'mongoCryptOptions', J$.M(583273, J$.I(typeof Object === 'undefined' ? Object = J$.R(583241, 'Object', undefined, true, true) : Object = J$.R(583241, 'Object', Object, true, true)), 'assign', false)(J$.T(583249, {}, 11, false), J$.G(583265, J$.R(583257, 'options', options, false, false), 'autoEncryption')), mongoCryptOptions, false, false);
                                            J$.P(583345, J$.G(583305, J$.G(583297, J$.R(583289, 'topology', topology, false, false), 's'), 'options'), 'autoEncrypter', J$.F(583337, J$.R(583313, 'AutoEncrypter', AutoEncrypter, false, false), true)(J$.R(583321, 'mongoClient', mongoClient, false, false), J$.R(583329, 'mongoCryptOptions', mongoCryptOptions, false, false)));
                                            J$.M(583497, J$.G(583377, J$.G(583369, J$.G(583361, J$.R(583353, 'topology', topology, false, false), 's'), 'options'), 'autoEncrypter'), 'init', false)(J$.T(583489, function (err) {
                                                jalangiLabel36:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(583465, arguments.callee, this, arguments);
                                                            arguments = J$.N(583473, 'arguments', arguments, true, false, false);
                                                            err = J$.N(583481, 'err', err, true, false, false);
                                                            if (J$.C(37080, J$.R(583385, 'err', err, false, false)))
                                                                return J$.Rt(583425, J$.F(583417, J$.R(583393, 'callback', callback, false, false), false)(J$.R(583401, 'err', err, false, false), J$.T(583409, null, 25, false)));
                                                            J$.F(583457, J$.R(583433, 'callback', callback, false, false), false)(J$.T(583441, null, 25, false), J$.R(583449, 'topology', topology, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(588497, J$e);
                                                        } finally {
                                                            if (J$.Fr(588505))
                                                                continue jalangiLabel36;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(588513, J$e);
                                        } finally {
                                            if (J$.Fr(588521))
                                                continue jalangiLabel37;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(588529, J$e);
                        } finally {
                            if (J$.Fr(588537))
                                continue jalangiLabel38;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createUnifiedOptions(finalOptions, options) {
                jalangiLabel39:
                    while (true) {
                        try {
                            J$.Fe(584241, arguments.callee, this, arguments);
                            arguments = J$.N(584249, 'arguments', arguments, true, false, false);
                            finalOptions = J$.N(584257, 'finalOptions', finalOptions, true, false, false);
                            options = J$.N(584265, 'options', options, true, false, false);
                            J$.N(584273, 'childOptions', childOptions, false, false, false);
                            J$.N(584281, 'noMerge', noMerge, false, false, false);
                            J$.N(584289, 'name', name, false, false, false);
                            var childOptions = J$.W(583705, 'childOptions', J$.T(583697, [
                                J$.T(583633, 'mongos', 21, false),
                                J$.T(583641, 'server', 21, false),
                                J$.T(583649, 'db', 21, false),
                                J$.T(583657, 'replset', 21, false),
                                J$.T(583665, 'db_options', 21, false),
                                J$.T(583673, 'server_options', 21, false),
                                J$.T(583681, 'rs_options', 21, false),
                                J$.T(583689, 'mongos_options', 21, false)
                            ], 10, false), childOptions, false, false);
                            var noMerge = J$.W(583737, 'noMerge', J$.T(583729, [
                                J$.T(583713, 'readconcern', 21, false),
                                J$.T(583721, 'compression', 21, false)
                            ], 10, false), noMerge, false, false);
                            for (var name in J$.H(584209, J$.R(583745, 'options', options, false, false))) {
                                J$.N(584217, 'name', name, false, true, false);
                                {
                                    {
                                        if (J$.C(37128, J$.B(36258, '!==', J$.M(583777, J$.R(583753, 'noMerge', noMerge, false, false), 'indexOf', false)(J$.M(583769, J$.R(583761, 'name', name, false, false), 'toLowerCase', false)()), J$.U(36250, '-', J$.T(583785, 1, 22, false))))) {
                                            J$.P(583833, J$.R(583793, 'finalOptions', finalOptions, false, false), J$.R(583801, 'name', name, false, false), J$.G(583825, J$.R(583809, 'options', options, false, false), J$.R(583817, 'name', name, false, false)));
                                        } else if (J$.C(37120, J$.B(36274, '!==', J$.M(583865, J$.R(583841, 'childOptions', childOptions, false, false), 'indexOf', false)(J$.M(583857, J$.R(583849, 'name', name, false, false), 'toLowerCase', false)()), J$.U(36266, '-', J$.T(583873, 1, 22, false))))) {
                                            finalOptions = J$.W(583937, 'finalOptions', J$.F(583929, J$.R(583881, 'mergeOptions', mergeOptions, false, true), false)(J$.R(583889, 'finalOptions', finalOptions, false, false), J$.G(583913, J$.R(583897, 'options', options, false, false), J$.R(583905, 'name', name, false, false)), J$.T(583921, false, 23, false)), finalOptions, false, false);
                                        } else {
                                            if (J$.C(37112, J$.C(37104, J$.C(37096, J$.C(37088, J$.G(583961, J$.R(583945, 'options', options, false, false), J$.R(583953, 'name', name, false, false))) ? J$.B(36282, '===', J$.F(584001, J$.R(583969, '_typeof', _typeof, false, true), false)(J$.G(583993, J$.R(583977, 'options', options, false, false), J$.R(583985, 'name', name, false, false))), J$.T(584009, 'object', 21, false)) : J$._()) ? J$.U(36290, '!', J$.M(584049, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(584017, 'Buffer', undefined, true, true) : Buffer = J$.R(584017, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.G(584041, J$.R(584025, 'options', options, false, false), J$.R(584033, 'name', name, false, false)))) : J$._()) ? J$.U(36298, '!', J$.M(584089, J$.I(typeof Array === 'undefined' ? Array = J$.R(584057, 'Array', undefined, true, true) : Array = J$.R(584057, 'Array', Array, true, true)), 'isArray', false)(J$.G(584081, J$.R(584065, 'options', options, false, false), J$.R(584073, 'name', name, false, false)))) : J$._())) {
                                                finalOptions = J$.W(584153, 'finalOptions', J$.F(584145, J$.R(584097, 'mergeOptions', mergeOptions, false, true), false)(J$.R(584105, 'finalOptions', finalOptions, false, false), J$.G(584129, J$.R(584113, 'options', options, false, false), J$.R(584121, 'name', name, false, false)), J$.T(584137, true, 23, false)), finalOptions, false, false);
                                            } else {
                                                J$.P(584201, J$.R(584161, 'finalOptions', finalOptions, false, false), J$.R(584169, 'name', name, false, false), J$.G(584193, J$.R(584177, 'options', options, false, false), J$.R(584185, 'name', name, false, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.Rt(584233, J$.R(584225, 'finalOptions', finalOptions, false, false));
                        } catch (J$e) {
                            J$.Ex(588545, J$e);
                        } finally {
                            if (J$.Fr(588553))
                                continue jalangiLabel39;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function generateCredentials(client, username, password, options) {
                jalangiLabel40:
                    while (true) {
                        try {
                            J$.Fe(584737, arguments.callee, this, arguments);
                            arguments = J$.N(584745, 'arguments', arguments, true, false, false);
                            client = J$.N(584753, 'client', client, true, false, false);
                            username = J$.N(584761, 'username', username, true, false, false);
                            password = J$.N(584769, 'password', password, true, false, false);
                            options = J$.N(584777, 'options', options, true, false, false);
                            J$.N(584785, 'source', source, false, false, false);
                            J$.N(584793, 'authMechanismRaw', authMechanismRaw, false, false, false);
                            J$.N(584801, 'authMechanism', authMechanism, false, false, false);
                            options = J$.W(584329, 'options', J$.M(584321, J$.I(typeof Object === 'undefined' ? Object = J$.R(584297, 'Object', undefined, true, true) : Object = J$.R(584297, 'Object', Object, true, true)), 'assign', false)(J$.T(584305, {}, 11, false), J$.R(584313, 'options', options, false, false)), options, false, false);
                            var source = J$.W(584385, 'source', J$.C(37144, J$.C(37136, J$.G(584345, J$.R(584337, 'options', options, false, false), 'authSource')) ? J$._() : J$.G(584361, J$.R(584353, 'options', options, false, false), 'authdb')) ? J$._() : J$.G(584377, J$.R(584369, 'options', options, false, false), 'dbName'), source, false, false);
                            var authMechanismRaw = J$.W(584417, 'authMechanismRaw', J$.C(37152, J$.G(584401, J$.R(584393, 'options', options, false, false), 'authMechanism')) ? J$._() : J$.T(584409, 'DEFAULT', 21, false), authMechanismRaw, false, false);
                            var authMechanism = J$.W(584441, 'authMechanism', J$.M(584433, J$.R(584425, 'authMechanismRaw', authMechanismRaw, false, false), 'toUpperCase', false)(), authMechanism, false, false);
                            if (J$.C(37160, J$.U(36306, '!', J$.M(584465, J$.R(584449, 'VALID_AUTH_MECHANISMS', VALID_AUTH_MECHANISMS, false, true), 'has', false)(J$.R(584457, 'authMechanism', authMechanism, false, false))))) {
                                throw J$.M(584529, J$.R(584473, 'MongoError', MongoError, false, true), 'create', false)(J$.T(584521, {
                                    message: J$.M(584505, J$.T(584481, 'authentication mechanism ', 21, false), 'concat', false)(J$.R(584489, 'authMechanismRaw', authMechanismRaw, false, false), J$.T(584497, ' not supported\', options.authMechanism', 21, false)),
                                    driver: J$.T(584513, true, 23, false)
                                }, 11, false));
                            }
                            if (J$.C(37176, J$.B(36314, '===', J$.R(584537, 'authMechanism', authMechanism, false, false), J$.T(584545, 'GSSAPI', 21, false)))) {
                                return J$.Rt(584649, J$.F(584641, J$.R(584553, 'MongoCredentials', MongoCredentials, false, true), true)(J$.T(584633, {
                                    mechanism: J$.C(37168, J$.B(36322, '===', J$.G(584569, J$.I(typeof process === 'undefined' ? process = J$.R(584561, 'process', undefined, true, true) : process = J$.R(584561, 'process', process, true, true)), 'platform'), J$.T(584577, 'win32', 21, false))) ? J$.T(584585, 'sspi', 21, false) : J$.T(584593, 'gssapi', 21, false),
                                    mechanismProperties: J$.R(584601, 'options', options, false, false),
                                    source: J$.R(584609, 'source', source, false, false),
                                    username: J$.R(584617, 'username', username, false, false),
                                    password: J$.R(584625, 'password', password, false, false)
                                }, 11, false)));
                            }
                            return J$.Rt(584729, J$.F(584721, J$.R(584657, 'MongoCredentials', MongoCredentials, false, true), true)(J$.T(584713, {
                                mechanism: J$.G(584681, J$.R(584665, 'AUTH_MECHANISM_INTERNAL_MAP', AUTH_MECHANISM_INTERNAL_MAP, false, true), J$.R(584673, 'authMechanism', authMechanism, false, false)),
                                source: J$.R(584689, 'source', source, false, false),
                                username: J$.R(584697, 'username', username, false, false),
                                password: J$.R(584705, 'password', password, false, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(588561, J$e);
                        } finally {
                            if (J$.Fr(588569))
                                continue jalangiLabel40;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function legacyTransformUrlOptions(object) {
                jalangiLabel41:
                    while (true) {
                        try {
                            J$.Fe(584881, arguments.callee, this, arguments);
                            arguments = J$.N(584889, 'arguments', arguments, true, false, false);
                            object = J$.N(584897, 'object', object, true, false, false);
                            return J$.Rt(584873, J$.F(584865, J$.R(584809, 'mergeOptions', mergeOptions, false, true), false)(J$.F(584841, J$.R(584817, 'createUnifiedOptions', createUnifiedOptions, false, true), false)(J$.T(584825, {}, 11, false), J$.R(584833, 'object', object, false, false)), J$.R(584849, 'object', object, false, false), J$.T(584857, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(588577, J$e);
                        } finally {
                            if (J$.Fr(588585))
                                continue jalangiLabel41;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mergeOptions(target, source, flatten) {
                jalangiLabel42:
                    while (true) {
                        try {
                            J$.Fe(585137, arguments.callee, this, arguments);
                            arguments = J$.N(585145, 'arguments', arguments, true, false, false);
                            target = J$.N(585153, 'target', target, true, false, false);
                            source = J$.N(585161, 'source', source, true, false, false);
                            flatten = J$.N(585169, 'flatten', flatten, true, false, false);
                            J$.N(585177, 'name', name, false, false, false);
                            for (var name in J$.H(585105, J$.R(584905, 'source', source, false, false))) {
                                J$.N(585113, 'name', name, false, true, false);
                                {
                                    {
                                        if (J$.C(37200, J$.C(37192, J$.C(37184, J$.G(584929, J$.R(584913, 'source', source, false, false), J$.R(584921, 'name', name, false, false))) ? J$.B(36330, '===', J$.F(584969, J$.R(584937, '_typeof', _typeof, false, true), false)(J$.G(584961, J$.R(584945, 'source', source, false, false), J$.R(584953, 'name', name, false, false))), J$.T(584977, 'object', 21, false)) : J$._()) ? J$.R(584985, 'flatten', flatten, false, false) : J$._())) {
                                            target = J$.W(585049, 'target', J$.F(585041, J$.R(584993, 'mergeOptions', mergeOptions, false, true), false)(J$.R(585001, 'target', target, false, false), J$.G(585025, J$.R(585009, 'source', source, false, false), J$.R(585017, 'name', name, false, false)), J$.R(585033, 'flatten', flatten, false, false)), target, false, false);
                                        } else {
                                            J$.P(585097, J$.R(585057, 'target', target, false, false), J$.R(585065, 'name', name, false, false), J$.G(585089, J$.R(585073, 'source', source, false, false), J$.R(585081, 'name', name, false, false)));
                                        }
                                    }
                                }
                            }
                            return J$.Rt(585129, J$.R(585121, 'target', target, false, false));
                        } catch (J$e) {
                            J$.Ex(588593, J$e);
                        } finally {
                            if (J$.Fr(588601))
                                continue jalangiLabel42;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function relayEvents(mongoClient, topology) {
                jalangiLabel45:
                    while (true) {
                        try {
                            J$.Fe(585481, arguments.callee, this, arguments);
                            arguments = J$.N(585489, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(585497, 'mongoClient', mongoClient, true, false, false);
                            topology = J$.N(585505, 'topology', topology, true, false, false);
                            J$.N(585513, 'serverOrCommandEvents', serverOrCommandEvents, false, false, false);
                            var serverOrCommandEvents = J$.W(585321, 'serverOrCommandEvents', J$.T(585313, [
                                J$.T(585185, 'serverOpening', 21, false),
                                J$.T(585193, 'serverDescriptionChanged', 21, false),
                                J$.T(585201, 'serverHeartbeatStarted', 21, false),
                                J$.T(585209, 'serverHeartbeatSucceeded', 21, false),
                                J$.T(585217, 'serverHeartbeatFailed', 21, false),
                                J$.T(585225, 'serverClosed', 21, false),
                                J$.T(585233, 'topologyOpening', 21, false),
                                J$.T(585241, 'topologyClosed', 21, false),
                                J$.T(585249, 'topologyDescriptionChanged', 21, false),
                                J$.T(585257, 'commandStarted', 21, false),
                                J$.T(585265, 'commandSucceeded', 21, false),
                                J$.T(585273, 'commandFailed', 21, false),
                                J$.T(585281, 'joined', 21, false),
                                J$.T(585289, 'left', 21, false),
                                J$.T(585297, 'ping', 21, false),
                                J$.T(585305, 'ha', 21, false)
                            ], 10, false), serverOrCommandEvents, false, false);
                            J$.M(585473, J$.R(585329, 'serverOrCommandEvents', serverOrCommandEvents, false, false), 'forEach', false)(J$.T(585465, function (event) {
                                jalangiLabel44:
                                    while (true) {
                                        try {
                                            J$.Fe(585441, arguments.callee, this, arguments);
                                            arguments = J$.N(585449, 'arguments', arguments, true, false, false);
                                            event = J$.N(585457, 'event', event, true, false, false);
                                            J$.M(585433, J$.R(585337, 'topology', topology, false, false), 'on', false)(J$.R(585345, 'event', event, false, false), J$.T(585425, function (object1, object2) {
                                                jalangiLabel43:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(585393, arguments.callee, this, arguments);
                                                            arguments = J$.N(585401, 'arguments', arguments, true, false, false);
                                                            object1 = J$.N(585409, 'object1', object1, true, false, false);
                                                            object2 = J$.N(585417, 'object2', object2, true, false, false);
                                                            J$.M(585385, J$.R(585353, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.R(585361, 'event', event, false, false), J$.R(585369, 'object1', object1, false, false), J$.R(585377, 'object2', object2, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(588609, J$e);
                                                        } finally {
                                                            if (J$.Fr(588617))
                                                                continue jalangiLabel43;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(588625, J$e);
                                        } finally {
                                            if (J$.Fr(588633))
                                                continue jalangiLabel44;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(588641, J$e);
                        } finally {
                            if (J$.Fr(588649))
                                continue jalangiLabel45;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function replayEvents(mongoClient, events) {
                jalangiLabel46:
                    while (true) {
                        try {
                            J$.Fe(585689, arguments.callee, this, arguments);
                            arguments = J$.N(585697, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(585705, 'mongoClient', mongoClient, true, false, false);
                            events = J$.N(585713, 'events', events, true, false, false);
                            J$.N(585721, 'i', i, false, false, false);
                            for (var i = J$.W(585529, 'i', J$.T(585521, 0, 22, false), i, false, false); J$.C(37208, J$.B(36338, '<', J$.R(585537, 'i', i, false, false), J$.G(585553, J$.R(585545, 'events', events, false, false), 'length'))); J$.B(36362, '-', i = J$.W(585569, 'i', J$.B(36354, '+', J$.U(36346, '+', J$.R(585561, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.M(585681, J$.R(585577, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.G(585609, J$.G(585601, J$.R(585585, 'events', events, false, false), J$.R(585593, 'i', i, false, false)), 'event'), J$.G(585641, J$.G(585633, J$.R(585617, 'events', events, false, false), J$.R(585625, 'i', i, false, false)), 'object1'), J$.G(585673, J$.G(585665, J$.R(585649, 'events', events, false, false), J$.R(585657, 'i', i, false, false)), 'object2'));
                            }
                        } catch (J$e) {
                            J$.Ex(588657, J$e);
                        } finally {
                            if (J$.Fr(588665))
                                continue jalangiLabel46;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function transformUrlOptions(_object) {
                jalangiLabel47:
                    while (true) {
                        try {
                            J$.Fe(586497, arguments.callee, this, arguments);
                            arguments = J$.N(586505, 'arguments', arguments, true, false, false);
                            _object = J$.N(586513, '_object', _object, true, false, false);
                            J$.N(586521, 'object', object, false, false, false);
                            J$.N(586529, 'name', name, false, false, false);
                            J$.N(586537, 'camelCaseName', camelCaseName, false, false, false);
                            J$.N(586545, 'hasUsername', hasUsername, false, false, false);
                            J$.N(586553, 'hasAuthMechanism', hasAuthMechanism, false, false, false);
                            var object = J$.W(585785, 'object', J$.M(585777, J$.I(typeof Object === 'undefined' ? Object = J$.R(585729, 'Object', undefined, true, true) : Object = J$.R(585729, 'Object', Object, true, true)), 'assign', false)(J$.T(585753, { servers: J$.G(585745, J$.R(585737, '_object', _object, false, false), 'hosts') }, 11, false), J$.G(585769, J$.R(585761, '_object', _object, false, false), 'options')), object, false, false);
                            for (var name in J$.H(585889, J$.R(585793, 'object', object, false, false))) {
                                J$.N(585897, 'name', name, false, true, false);
                                {
                                    {
                                        var camelCaseName = J$.W(585825, 'camelCaseName', J$.G(585817, J$.R(585801, 'LEGACY_OPTIONS_MAP', LEGACY_OPTIONS_MAP, false, true), J$.R(585809, 'name', name, false, false)), camelCaseName, false, false);
                                        if (J$.C(37216, J$.R(585833, 'camelCaseName', camelCaseName, false, false))) {
                                            J$.P(585881, J$.R(585841, 'object', object, false, false), J$.R(585849, 'camelCaseName', camelCaseName, false, false), J$.G(585873, J$.R(585857, 'object', object, false, false), J$.R(585865, 'name', name, false, false)));
                                        }
                                    }
                                }
                            }
                            var hasUsername = J$.W(585945, 'hasUsername', J$.C(37224, J$.G(585913, J$.R(585905, '_object', _object, false, false), 'auth')) ? J$.G(585937, J$.G(585929, J$.R(585921, '_object', _object, false, false), 'auth'), 'username') : J$._(), hasUsername, false, false);
                            var hasAuthMechanism = J$.W(585993, 'hasAuthMechanism', J$.C(37232, J$.G(585961, J$.R(585953, '_object', _object, false, false), 'options')) ? J$.G(585985, J$.G(585977, J$.R(585969, '_object', _object, false, false), 'options'), 'authMechanism') : J$._(), hasAuthMechanism, false, false);
                            if (J$.C(37272, J$.C(37240, J$.R(586001, 'hasUsername', hasUsername, false, false)) ? J$._() : J$.R(586009, 'hasAuthMechanism', hasAuthMechanism, false, false))) {
                                J$.P(586065, J$.R(586017, 'object', object, false, false), 'auth', J$.M(586057, J$.I(typeof Object === 'undefined' ? Object = J$.R(586025, 'Object', undefined, true, true) : Object = J$.R(586025, 'Object', Object, true, true)), 'assign', false)(J$.T(586033, {}, 11, false), J$.G(586049, J$.R(586041, '_object', _object, false, false), 'auth')));
                                if (J$.C(37256, J$.G(586089, J$.G(586081, J$.R(586073, 'object', object, false, false), 'auth'), 'db'))) {
                                    J$.P(586145, J$.R(586097, 'object', object, false, false), 'authSource', J$.C(37248, J$.G(586113, J$.R(586105, 'object', object, false, false), 'authSource')) ? J$._() : J$.G(586137, J$.G(586129, J$.R(586121, 'object', object, false, false), 'auth'), 'db'));
                                }
                                if (J$.C(37264, J$.G(586169, J$.G(586161, J$.R(586153, 'object', object, false, false), 'auth'), 'username'))) {
                                    J$.P(586217, J$.G(586185, J$.R(586177, 'object', object, false, false), 'auth'), 'user', J$.G(586209, J$.G(586201, J$.R(586193, 'object', object, false, false), 'auth'), 'username'));
                                }
                            }
                            if (J$.C(37280, J$.G(586233, J$.R(586225, '_object', _object, false, false), 'defaultDatabase'))) {
                                J$.P(586265, J$.R(586241, 'object', object, false, false), 'dbName', J$.G(586257, J$.R(586249, '_object', _object, false, false), 'defaultDatabase'));
                            }
                            if (J$.C(37288, J$.G(586281, J$.R(586273, 'object', object, false, false), 'maxPoolSize'))) {
                                J$.P(586313, J$.R(586289, 'object', object, false, false), 'poolSize', J$.G(586305, J$.R(586297, 'object', object, false, false), 'maxPoolSize'));
                            }
                            if (J$.C(37296, J$.G(586329, J$.R(586321, 'object', object, false, false), 'readConcernLevel'))) {
                                J$.P(586377, J$.R(586337, 'object', object, false, false), 'readConcern', J$.F(586369, J$.R(586345, 'ReadConcern', ReadConcern, false, true), true)(J$.G(586361, J$.R(586353, 'object', object, false, false), 'readConcernLevel')));
                            }
                            if (J$.C(37304, J$.G(586393, J$.R(586385, 'object', object, false, false), 'wTimeoutMS'))) {
                                J$.P(586425, J$.R(586401, 'object', object, false, false), 'wtimeout', J$.G(586417, J$.R(586409, 'object', object, false, false), 'wTimeoutMS'));
                            }
                            if (J$.C(37312, J$.G(586441, J$.R(586433, '_object', _object, false, false), 'srvHost'))) {
                                J$.P(586473, J$.R(586449, 'object', object, false, false), 'srvHost', J$.G(586465, J$.R(586457, '_object', _object, false, false), 'srvHost'));
                            }
                            return J$.Rt(586489, J$.R(586481, 'object', object, false, false));
                        } catch (J$e) {
                            J$.Ex(588673, J$e);
                        } finally {
                            if (J$.Fr(588681))
                                continue jalangiLabel47;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function translateOptions(options, translationOptions) {
                jalangiLabel49:
                    while (true) {
                        try {
                            J$.Fe(587201, arguments.callee, this, arguments);
                            arguments = J$.N(587209, 'arguments', arguments, true, false, false);
                            options = J$.N(587217, 'options', options, true, false, false);
                            translationOptions = J$.N(587225, 'translationOptions', translationOptions, true, false, false);
                            translationOptions = J$.W(586609, 'translationOptions', J$.M(586601, J$.I(typeof Object === 'undefined' ? Object = J$.R(586561, 'Object', undefined, true, true) : Object = J$.R(586561, 'Object', Object, true, true)), 'assign', false)(J$.T(586569, {}, 11, false), J$.T(586585, { createServers: J$.T(586577, true, 23, false) }, 11, false), J$.R(586593, 'translationOptions', translationOptions, false, false)), translationOptions, false, false);
                            if (J$.C(37336, J$.C(37320, J$.B(36378, '===', J$.U(36370, 'typeof', J$.G(586625, J$.R(586617, 'options', options, false, false), 'readPreference')), J$.T(586633, 'string', 21, false))) ? J$._() : J$.B(36394, '===', J$.U(36386, 'typeof', J$.G(586649, J$.R(586641, 'options', options, false, false), 'read_preference')), J$.T(586657, 'string', 21, false)))) {
                                J$.P(586721, J$.R(586665, 'options', options, false, false), 'readPreference', J$.F(586713, J$.R(586673, 'ReadPreference', ReadPreference, false, true), true)(J$.C(37328, J$.G(586689, J$.R(586681, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(586705, J$.R(586697, 'options', options, false, false), 'read_preference')));
                            }
                            if (J$.C(37368, J$.C(37352, J$.G(586737, J$.R(586729, 'options', options, false, false), 'readPreference')) ? J$.C(37344, J$.G(586753, J$.R(586745, 'options', options, false, false), 'readPreferenceTags')) ? J$._() : J$.G(586769, J$.R(586761, 'options', options, false, false), 'read_preference_tags') : J$._())) {
                                J$.P(586825, J$.G(586785, J$.R(586777, 'options', options, false, false), 'readPreference'), 'tags', J$.C(37360, J$.G(586801, J$.R(586793, 'options', options, false, false), 'readPreferenceTags')) ? J$._() : J$.G(586817, J$.R(586809, 'options', options, false, false), 'read_preference_tags'));
                            }
                            if (J$.C(37376, J$.G(586841, J$.R(586833, 'options', options, false, false), 'maxStalenessSeconds'))) {
                                J$.P(586881, J$.G(586857, J$.R(586849, 'options', options, false, false), 'readPreference'), 'maxStalenessSeconds', J$.G(586873, J$.R(586865, 'options', options, false, false), 'maxStalenessSeconds'));
                            }
                            if (J$.C(37384, J$.B(36402, '==', J$.G(586897, J$.R(586889, 'options', options, false, false), 'socketTimeoutMS'), J$.T(586905, null, 25, false))))
                                J$.P(586929, J$.R(586913, 'options', options, false, false), 'socketTimeoutMS', J$.T(586921, 360000, 22, false));
                            if (J$.C(37392, J$.B(36410, '==', J$.G(586945, J$.R(586937, 'options', options, false, false), 'connectTimeoutMS'), J$.T(586953, null, 25, false))))
                                J$.P(586977, J$.R(586961, 'options', options, false, false), 'connectTimeoutMS', J$.T(586969, 30000, 22, false));
                            if (J$.C(37400, J$.U(36418, '!', J$.G(586993, J$.R(586985, 'translationOptions', translationOptions, false, false), 'createServers')))) {
                                return J$.Rt(587001, undefined);
                            }
                            return J$.Rt(587193, J$.M(587185, J$.G(587017, J$.R(587009, 'options', options, false, false), 'servers'), 'map', false)(J$.T(587177, function (serverObj) {
                                jalangiLabel48:
                                    while (true) {
                                        try {
                                            J$.Fe(587153, arguments.callee, this, arguments);
                                            arguments = J$.N(587161, 'arguments', arguments, true, false, false);
                                            serverObj = J$.N(587169, 'serverObj', serverObj, true, false, false);
                                            return J$.Rt(587145, J$.C(37408, J$.G(587033, J$.R(587025, 'serverObj', serverObj, false, false), 'domain_socket')) ? J$.F(587081, J$.R(587041, 'Server', Server, false, true), true)(J$.G(587057, J$.R(587049, 'serverObj', serverObj, false, false), 'domain_socket'), J$.T(587065, 27017, 22, false), J$.R(587073, 'options', options, false, false)) : J$.F(587137, J$.R(587089, 'Server', Server, false, true), true)(J$.G(587105, J$.R(587097, 'serverObj', serverObj, false, false), 'host'), J$.G(587121, J$.R(587113, 'serverObj', serverObj, false, false), 'port'), J$.R(587129, 'options', options, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(588689, J$e);
                                        } finally {
                                            if (J$.Fr(588697))
                                                continue jalangiLabel48;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(588705, J$e);
                        } finally {
                            if (J$.Fr(588713))
                                continue jalangiLabel49;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(587273, '_typeof', J$.T(587265, _typeof, 12, false), true, false, false);
            _classCallCheck = J$.N(587289, '_classCallCheck', J$.T(587281, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(587305, '_defineProperties', J$.T(587297, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(587321, '_createClass', J$.T(587313, _createClass, 12, false), true, false, false);
            _possibleConstructorReturn = J$.N(587337, '_possibleConstructorReturn', J$.T(587329, _possibleConstructorReturn, 12, false), true, false, false);
            _assertThisInitialized = J$.N(587353, '_assertThisInitialized', J$.T(587345, _assertThisInitialized, 12, false), true, false, false);
            _getPrototypeOf = J$.N(587369, '_getPrototypeOf', J$.T(587361, _getPrototypeOf, 12, false), true, false, false);
            _inherits = J$.N(587385, '_inherits', J$.T(587377, _inherits, 12, false), true, false, false);
            _setPrototypeOf = J$.N(587401, '_setPrototypeOf', J$.T(587393, _setPrototypeOf, 12, false), true, false, false);
            J$.N(587409, 'OperationBase', OperationBase, false, false, false);
            J$.N(587417, 'defineAspects', defineAspects, false, false, false);
            J$.N(587425, 'Aspect', Aspect, false, false, false);
            J$.N(587433, 'deprecate', deprecate, false, false, false);
            J$.N(587441, 'Logger', Logger, false, false, false);
            J$.N(587449, 'MongoCredentials', MongoCredentials, false, false, false);
            J$.N(587457, 'MongoError', MongoError, false, false, false);
            J$.N(587465, 'Mongos', Mongos, false, false, false);
            J$.N(587473, 'NativeTopology', NativeTopology, false, false, false);
            J$.N(587481, 'parse', parse, false, false, false);
            J$.N(587489, 'ReadConcern', ReadConcern, false, false, false);
            J$.N(587497, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(587505, 'ReplSet', ReplSet, false, false, false);
            J$.N(587513, 'Server', Server, false, false, false);
            J$.N(587521, 'ServerSessionPool', ServerSessionPool, false, false, false);
            J$.N(587529, 'client', client, false, false, false);
            loadClient = J$.N(587545, 'loadClient', J$.T(587537, loadClient, 12, false), true, false, false);
            J$.N(587553, 'legacyParse', legacyParse, false, false, false);
            J$.N(587561, 'AUTH_MECHANISM_INTERNAL_MAP', AUTH_MECHANISM_INTERNAL_MAP, false, false, false);
            J$.N(587569, 'monitoringEvents', monitoringEvents, false, false, false);
            J$.N(587577, 'VALID_AUTH_MECHANISMS', VALID_AUTH_MECHANISMS, false, false, false);
            J$.N(587585, 'validOptionNames', validOptionNames, false, false, false);
            J$.N(587593, 'ignoreOptionNames', ignoreOptionNames, false, false, false);
            J$.N(587601, 'legacyOptionNames', legacyOptionNames, false, false, false);
            validOptions = J$.N(587617, 'validOptions', J$.T(587609, validOptions, 12, false), true, false, false);
            J$.N(587625, 'LEGACY_OPTIONS_MAP', LEGACY_OPTIONS_MAP, false, false, false);
            J$.N(587633, 'ConnectOperation', ConnectOperation, false, false, false);
            addListeners = J$.N(587649, 'addListeners', J$.T(587641, addListeners, 12, false), true, false, false);
            assignTopology = J$.N(587665, 'assignTopology', J$.T(587657, assignTopology, 12, false), true, false, false);
            clearAllEvents = J$.N(587681, 'clearAllEvents', J$.T(587673, clearAllEvents, 12, false), true, false, false);
            collectEvents = J$.N(587697, 'collectEvents', J$.T(587689, collectEvents, 12, false), true, false, false);
            J$.N(587705, 'emitDeprecationForNonUnifiedTopology', emitDeprecationForNonUnifiedTopology, false, false, false);
            connect = J$.N(587721, 'connect', J$.T(587713, connect, 12, false), true, false, false);
            connectWithUrl = J$.N(587737, 'connectWithUrl', J$.T(587729, connectWithUrl, 12, false), true, false, false);
            createListener = J$.N(587753, 'createListener', J$.T(587745, createListener, 12, false), true, false, false);
            createServer = J$.N(587769, 'createServer', J$.T(587761, createServer, 12, false), true, false, false);
            createTopology = J$.N(587785, 'createTopology', J$.T(587777, createTopology, 12, false), true, false, false);
            createUnifiedOptions = J$.N(587801, 'createUnifiedOptions', J$.T(587793, createUnifiedOptions, 12, false), true, false, false);
            generateCredentials = J$.N(587817, 'generateCredentials', J$.T(587809, generateCredentials, 12, false), true, false, false);
            legacyTransformUrlOptions = J$.N(587833, 'legacyTransformUrlOptions', J$.T(587825, legacyTransformUrlOptions, 12, false), true, false, false);
            mergeOptions = J$.N(587849, 'mergeOptions', J$.T(587841, mergeOptions, 12, false), true, false, false);
            relayEvents = J$.N(587865, 'relayEvents', J$.T(587857, relayEvents, 12, false), true, false, false);
            replayEvents = J$.N(587881, 'replayEvents', J$.T(587873, replayEvents, 12, false), true, false, false);
            transformUrlOptions = J$.N(587897, 'transformUrlOptions', J$.T(587889, transformUrlOptions, 12, false), true, false, false);
            translateOptions = J$.N(587913, 'translateOptions', J$.T(587905, translateOptions, 12, false), true, false, false);
            J$.T(573561, 'use strict', 21, false);
            var OperationBase = J$.W(575185, 'OperationBase', J$.G(575177, J$.F(575169, J$.I(typeof require === 'undefined' ? require = J$.R(575153, 'require', undefined, true, true) : require = J$.R(575153, 'require', require, true, true)), false)(J$.T(575161, './operation', 21, false)), 'OperationBase'), OperationBase, false, true);
            var defineAspects = J$.W(575225, 'defineAspects', J$.G(575217, J$.F(575209, J$.I(typeof require === 'undefined' ? require = J$.R(575193, 'require', undefined, true, true) : require = J$.R(575193, 'require', require, true, true)), false)(J$.T(575201, './operation', 21, false)), 'defineAspects'), defineAspects, false, true);
            var Aspect = J$.W(575265, 'Aspect', J$.G(575257, J$.F(575249, J$.I(typeof require === 'undefined' ? require = J$.R(575233, 'require', undefined, true, true) : require = J$.R(575233, 'require', require, true, true)), false)(J$.T(575241, './operation', 21, false)), 'Aspect'), Aspect, false, true);
            var deprecate = J$.W(575305, 'deprecate', J$.G(575297, J$.F(575289, J$.I(typeof require === 'undefined' ? require = J$.R(575273, 'require', undefined, true, true) : require = J$.R(575273, 'require', require, true, true)), false)(J$.T(575281, 'util', 21, false)), 'deprecate'), deprecate, false, true);
            var Logger = J$.W(575345, 'Logger', J$.G(575337, J$.F(575329, J$.I(typeof require === 'undefined' ? require = J$.R(575313, 'require', undefined, true, true) : require = J$.R(575313, 'require', require, true, true)), false)(J$.T(575321, '../core', 21, false)), 'Logger'), Logger, false, true);
            var MongoCredentials = J$.W(575385, 'MongoCredentials', J$.G(575377, J$.F(575369, J$.I(typeof require === 'undefined' ? require = J$.R(575353, 'require', undefined, true, true) : require = J$.R(575353, 'require', require, true, true)), false)(J$.T(575361, '../core', 21, false)), 'MongoCredentials'), MongoCredentials, false, true);
            var MongoError = J$.W(575425, 'MongoError', J$.G(575417, J$.F(575409, J$.I(typeof require === 'undefined' ? require = J$.R(575393, 'require', undefined, true, true) : require = J$.R(575393, 'require', require, true, true)), false)(J$.T(575401, '../core', 21, false)), 'MongoError'), MongoError, false, true);
            var Mongos = J$.W(575457, 'Mongos', J$.F(575449, J$.I(typeof require === 'undefined' ? require = J$.R(575433, 'require', undefined, true, true) : require = J$.R(575433, 'require', require, true, true)), false)(J$.T(575441, '../topologies/mongos', 21, false)), Mongos, false, true);
            var NativeTopology = J$.W(575489, 'NativeTopology', J$.F(575481, J$.I(typeof require === 'undefined' ? require = J$.R(575465, 'require', undefined, true, true) : require = J$.R(575465, 'require', require, true, true)), false)(J$.T(575473, '../topologies/native_topology', 21, false)), NativeTopology, false, true);
            var parse = J$.W(575529, 'parse', J$.G(575521, J$.F(575513, J$.I(typeof require === 'undefined' ? require = J$.R(575497, 'require', undefined, true, true) : require = J$.R(575497, 'require', require, true, true)), false)(J$.T(575505, '../core', 21, false)), 'parseConnectionString'), parse, false, true);
            var ReadConcern = J$.W(575561, 'ReadConcern', J$.F(575553, J$.I(typeof require === 'undefined' ? require = J$.R(575537, 'require', undefined, true, true) : require = J$.R(575537, 'require', require, true, true)), false)(J$.T(575545, '../read_concern', 21, false)), ReadConcern, false, true);
            var ReadPreference = J$.W(575601, 'ReadPreference', J$.G(575593, J$.F(575585, J$.I(typeof require === 'undefined' ? require = J$.R(575569, 'require', undefined, true, true) : require = J$.R(575569, 'require', require, true, true)), false)(J$.T(575577, '../core', 21, false)), 'ReadPreference'), ReadPreference, false, true);
            var ReplSet = J$.W(575633, 'ReplSet', J$.F(575625, J$.I(typeof require === 'undefined' ? require = J$.R(575609, 'require', undefined, true, true) : require = J$.R(575609, 'require', require, true, true)), false)(J$.T(575617, '../topologies/replset', 21, false)), ReplSet, false, true);
            var Server = J$.W(575665, 'Server', J$.F(575657, J$.I(typeof require === 'undefined' ? require = J$.R(575641, 'require', undefined, true, true) : require = J$.R(575641, 'require', require, true, true)), false)(J$.T(575649, '../topologies/server', 21, false)), Server, false, true);
            var ServerSessionPool = J$.W(575713, 'ServerSessionPool', J$.G(575705, J$.G(575697, J$.F(575689, J$.I(typeof require === 'undefined' ? require = J$.R(575673, 'require', undefined, true, true) : require = J$.R(575673, 'require', require, true, true)), false)(J$.T(575681, '../core', 21, false)), 'Sessions'), 'ServerSessionPool'), ServerSessionPool, false, true);
            var client;
            var legacyParse = J$.W(575849, 'legacyParse', J$.F(575841, J$.R(575793, 'deprecate', deprecate, false, true), false)(J$.F(575817, J$.I(typeof require === 'undefined' ? require = J$.R(575801, 'require', undefined, true, true) : require = J$.R(575801, 'require', require, true, true)), false)(J$.T(575809, '../url_parser', 21, false)), J$.B(35946, '+', J$.T(575825, 'current URL string parser is deprecated, and will be removed in a future version. ', 21, false), J$.T(575833, 'To use the new parser, pass option { useNewUrlParser: true } to MongoClient.connect.', 21, false))), legacyParse, false, true);
            var AUTH_MECHANISM_INTERNAL_MAP = J$.W(575913, 'AUTH_MECHANISM_INTERNAL_MAP', J$.T(575905, {
                DEFAULT: J$.T(575857, 'default', 21, false),
                'MONGODB-CR': J$.T(575865, 'mongocr', 21, false),
                PLAIN: J$.T(575873, 'plain', 21, false),
                'MONGODB-X509': J$.T(575881, 'x509', 21, false),
                'SCRAM-SHA-1': J$.T(575889, 'scram-sha-1', 21, false),
                'SCRAM-SHA-256': J$.T(575897, 'scram-sha-256', 21, false)
            }, 11, false), AUTH_MECHANISM_INTERNAL_MAP, false, true);
            var monitoringEvents = J$.W(576097, 'monitoringEvents', J$.T(576089, [
                J$.T(575921, 'timeout', 21, false),
                J$.T(575929, 'close', 21, false),
                J$.T(575937, 'serverOpening', 21, false),
                J$.T(575945, 'serverDescriptionChanged', 21, false),
                J$.T(575953, 'serverHeartbeatStarted', 21, false),
                J$.T(575961, 'serverHeartbeatSucceeded', 21, false),
                J$.T(575969, 'serverHeartbeatFailed', 21, false),
                J$.T(575977, 'serverClosed', 21, false),
                J$.T(575985, 'topologyOpening', 21, false),
                J$.T(575993, 'topologyClosed', 21, false),
                J$.T(576001, 'topologyDescriptionChanged', 21, false),
                J$.T(576009, 'commandStarted', 21, false),
                J$.T(576017, 'commandSucceeded', 21, false),
                J$.T(576025, 'commandFailed', 21, false),
                J$.T(576033, 'joined', 21, false),
                J$.T(576041, 'left', 21, false),
                J$.T(576049, 'ping', 21, false),
                J$.T(576057, 'ha', 21, false),
                J$.T(576065, 'all', 21, false),
                J$.T(576073, 'fullsetup', 21, false),
                J$.T(576081, 'open', 21, false)
            ], 10, false), monitoringEvents, false, true);
            var VALID_AUTH_MECHANISMS = J$.W(576185, 'VALID_AUTH_MECHANISMS', J$.F(576177, J$.I(typeof Set === 'undefined' ? Set = J$.R(576105, 'Set', undefined, true, true) : Set = J$.R(576105, 'Set', Set, true, true)), true)(J$.T(576169, [
                J$.T(576113, 'DEFAULT', 21, false),
                J$.T(576121, 'MONGODB-CR', 21, false),
                J$.T(576129, 'PLAIN', 21, false),
                J$.T(576137, 'MONGODB-X509', 21, false),
                J$.T(576145, 'SCRAM-SHA-1', 21, false),
                J$.T(576153, 'SCRAM-SHA-256', 21, false),
                J$.T(576161, 'GSSAPI', 21, false)
            ], 10, false)), VALID_AUTH_MECHANISMS, false, true);
            var validOptionNames = J$.W(576713, 'validOptionNames', J$.T(576705, [
                J$.T(576193, 'poolSize', 21, false),
                J$.T(576201, 'ssl', 21, false),
                J$.T(576209, 'sslValidate', 21, false),
                J$.T(576217, 'sslCA', 21, false),
                J$.T(576225, 'sslCert', 21, false),
                J$.T(576233, 'sslKey', 21, false),
                J$.T(576241, 'sslPass', 21, false),
                J$.T(576249, 'sslCRL', 21, false),
                J$.T(576257, 'autoReconnect', 21, false),
                J$.T(576265, 'noDelay', 21, false),
                J$.T(576273, 'keepAlive', 21, false),
                J$.T(576281, 'keepAliveInitialDelay', 21, false),
                J$.T(576289, 'connectTimeoutMS', 21, false),
                J$.T(576297, 'family', 21, false),
                J$.T(576305, 'socketTimeoutMS', 21, false),
                J$.T(576313, 'reconnectTries', 21, false),
                J$.T(576321, 'reconnectInterval', 21, false),
                J$.T(576329, 'ha', 21, false),
                J$.T(576337, 'haInterval', 21, false),
                J$.T(576345, 'replicaSet', 21, false),
                J$.T(576353, 'secondaryAcceptableLatencyMS', 21, false),
                J$.T(576361, 'acceptableLatencyMS', 21, false),
                J$.T(576369, 'connectWithNoPrimary', 21, false),
                J$.T(576377, 'authSource', 21, false),
                J$.T(576385, 'w', 21, false),
                J$.T(576393, 'wtimeout', 21, false),
                J$.T(576401, 'j', 21, false),
                J$.T(576409, 'forceServerObjectId', 21, false),
                J$.T(576417, 'serializeFunctions', 21, false),
                J$.T(576425, 'ignoreUndefined', 21, false),
                J$.T(576433, 'raw', 21, false),
                J$.T(576441, 'bufferMaxEntries', 21, false),
                J$.T(576449, 'readPreference', 21, false),
                J$.T(576457, 'pkFactory', 21, false),
                J$.T(576465, 'promiseLibrary', 21, false),
                J$.T(576473, 'readConcern', 21, false),
                J$.T(576481, 'maxStalenessSeconds', 21, false),
                J$.T(576489, 'loggerLevel', 21, false),
                J$.T(576497, 'logger', 21, false),
                J$.T(576505, 'promoteValues', 21, false),
                J$.T(576513, 'promoteBuffers', 21, false),
                J$.T(576521, 'promoteLongs', 21, false),
                J$.T(576529, 'domainsEnabled', 21, false),
                J$.T(576537, 'checkServerIdentity', 21, false),
                J$.T(576545, 'validateOptions', 21, false),
                J$.T(576553, 'appname', 21, false),
                J$.T(576561, 'auth', 21, false),
                J$.T(576569, 'user', 21, false),
                J$.T(576577, 'password', 21, false),
                J$.T(576585, 'authMechanism', 21, false),
                J$.T(576593, 'compression', 21, false),
                J$.T(576601, 'fsync', 21, false),
                J$.T(576609, 'readPreferenceTags', 21, false),
                J$.T(576617, 'numberOfRetries', 21, false),
                J$.T(576625, 'auto_reconnect', 21, false),
                J$.T(576633, 'minSize', 21, false),
                J$.T(576641, 'monitorCommands', 21, false),
                J$.T(576649, 'retryWrites', 21, false),
                J$.T(576657, 'retryReads', 21, false),
                J$.T(576665, 'useNewUrlParser', 21, false),
                J$.T(576673, 'useUnifiedTopology', 21, false),
                J$.T(576681, 'serverSelectionTimeoutMS', 21, false),
                J$.T(576689, 'useRecoveryToken', 21, false),
                J$.T(576697, 'autoEncryption', 21, false)
            ], 10, false), validOptionNames, false, true);
            var ignoreOptionNames = J$.W(576737, 'ignoreOptionNames', J$.T(576729, [J$.T(576721, 'native_parser', 21, false)], 10, false), ignoreOptionNames, false, true);
            var legacyOptionNames = J$.W(576793, 'legacyOptionNames', J$.T(576785, [
                J$.T(576745, 'server', 21, false),
                J$.T(576753, 'replset', 21, false),
                J$.T(576761, 'replSet', 21, false),
                J$.T(576769, 'mongos', 21, false),
                J$.T(576777, 'db', 21, false)
            ], 10, false), legacyOptionNames, false, true);
            var LEGACY_OPTIONS_MAP = J$.W(577289, 'LEGACY_OPTIONS_MAP', J$.M(577281, J$.R(577169, 'validOptionNames', validOptionNames, false, true), 'reduce', false)(J$.T(577265, function (obj, name) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(577233, arguments.callee, this, arguments);
                            arguments = J$.N(577241, 'arguments', arguments, true, false, false);
                            obj = J$.N(577249, 'obj', obj, true, false, false);
                            name = J$.N(577257, 'name', name, true, false, false);
                            J$.P(577209, J$.R(577177, 'obj', obj, false, false), J$.M(577193, J$.R(577185, 'name', name, false, false), 'toLowerCase', false)(), J$.R(577201, 'name', name, false, false));
                            return J$.Rt(577225, J$.R(577217, 'obj', obj, false, false));
                        } catch (J$e) {
                            J$.Ex(588161, J$e);
                        } finally {
                            if (J$.Fr(588169))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.T(577273, {}, 11, false)), LEGACY_OPTIONS_MAP, false, true);
            var ConnectOperation = J$.W(577969, 'ConnectOperation', J$.F(577961, J$.T(577945, function (_OperationBase) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(577905, arguments.callee, this, arguments);
                            function ConnectOperation(mongoClient) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(577473, arguments.callee, this, arguments);
                                            arguments = J$.N(577481, 'arguments', arguments, true, false, false);
                                            mongoClient = J$.N(577489, 'mongoClient', mongoClient, true, false, false);
                                            J$.N(577497, '_this', _this, false, false, false);
                                            var _this;
                                            J$.F(577353, J$.R(577329, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(577337, 'this', this, false, false), J$.R(577345, 'ConnectOperation', ConnectOperation, false, false));
                                            _this = J$.W(577425, '_this', J$.F(577417, J$.R(577361, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(577369, 'this', this, false, false), J$.M(577409, J$.F(577393, J$.R(577377, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(577385, 'ConnectOperation', ConnectOperation, false, false)), 'call', false)(J$.R(577401, 'this', this, false, false))), _this, false, false);
                                            J$.P(577449, J$.R(577433, '_this', _this, false, false), 'mongoClient', J$.R(577441, 'mongoClient', mongoClient, false, false));
                                            return J$.Rt(577465, J$.R(577457, '_this', _this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(588177, J$e);
                                        } finally {
                                            if (J$.Fr(588185))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(577913, 'arguments', arguments, true, false, false);
                            _OperationBase = J$.N(577921, '_OperationBase', _OperationBase, true, false, false);
                            ConnectOperation = J$.N(577937, 'ConnectOperation', J$.T(577929, ConnectOperation, 12, false), true, false, false);
                            J$.F(577321, J$.R(577297, '_inherits', _inherits, false, true), false)(J$.R(577305, 'ConnectOperation', ConnectOperation, false, false), J$.R(577313, '_OperationBase', _OperationBase, false, false));
                            J$.F(577881, J$.R(577505, '_createClass', _createClass, false, true), false)(J$.R(577513, 'ConnectOperation', ConnectOperation, false, false), J$.T(577873, [J$.T(577865, {
                                    key: J$.T(577521, 'execute', 21, false),
                                    value: J$.T(577857, function execute(callback) {
                                        jalangiLabel18:
                                            while (true) {
                                                try {
                                                    J$.Fe(577817, arguments.callee, this, arguments);
                                                    arguments = J$.N(577825, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(577833, 'callback', callback, true, false, false);
                                                    J$.N(577841, 'mongoClient', mongoClient, false, false, false);
                                                    J$.N(577849, 'err', err, false, false, false);
                                                    var mongoClient = J$.W(577545, 'mongoClient', J$.G(577537, J$.R(577529, 'this', this, false, false), 'mongoClient'), mongoClient, false, false);
                                                    var err = J$.W(577593, 'err', J$.F(577585, J$.R(577553, 'validOptions', validOptions, false, true), false)(J$.G(577577, J$.G(577569, J$.R(577561, 'mongoClient', mongoClient, false, false), 's'), 'options')), err, false, false);
                                                    if (J$.C(36704, J$.R(577601, 'err', err, false, false)))
                                                        return J$.Rt(577633, J$.F(577625, J$.R(577609, 'callback', callback, false, false), false)(J$.R(577617, 'err', err, false, false)));
                                                    J$.F(577809, J$.R(577641, 'connect', connect, false, true), false)(J$.R(577649, 'mongoClient', mongoClient, false, false), J$.G(577673, J$.G(577665, J$.R(577657, 'mongoClient', mongoClient, false, false), 's'), 'url'), J$.G(577697, J$.G(577689, J$.R(577681, 'mongoClient', mongoClient, false, false), 's'), 'options'), J$.T(577801, function (err) {
                                                        jalangiLabel17:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(577777, arguments.callee, this, arguments);
                                                                    arguments = J$.N(577785, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(577793, 'err', err, true, false, false);
                                                                    if (J$.C(36712, J$.R(577705, 'err', err, false, false)))
                                                                        return J$.Rt(577737, J$.F(577729, J$.R(577713, 'callback', callback, false, false), false)(J$.R(577721, 'err', err, false, false)));
                                                                    J$.F(577769, J$.R(577745, 'callback', callback, false, false), false)(J$.T(577753, null, 25, false), J$.R(577761, 'mongoClient', mongoClient, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(588193, J$e);
                                                                } finally {
                                                                    if (J$.Fr(588201))
                                                                        continue jalangiLabel17;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(588209, J$e);
                                                } finally {
                                                    if (J$.Fr(588217))
                                                        continue jalangiLabel18;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)], 10, false));
                            return J$.Rt(577897, J$.R(577889, 'ConnectOperation', ConnectOperation, false, false));
                        } catch (J$e) {
                            J$.Ex(588225, J$e);
                        } finally {
                            if (J$.Fr(588233))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(577953, 'OperationBase', OperationBase, false, true)), ConnectOperation, false, true);
            J$.F(578017, J$.R(577977, 'defineAspects', defineAspects, false, true), false)(J$.R(577985, 'ConnectOperation', ConnectOperation, false, true), J$.T(578009, [J$.G(578001, J$.R(577993, 'Aspect', Aspect, false, true), 'SKIP_SESSION')], 10, false));
            var emitDeprecationForNonUnifiedTopology = J$.W(579217, 'emitDeprecationForNonUnifiedTopology', J$.F(579209, J$.R(579161, 'deprecate', deprecate, false, true), false)(J$.T(579185, function () {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(579169, arguments.callee, this, arguments);
                            arguments = J$.N(579177, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(588353, J$e);
                        } finally {
                            if (J$.Fr(588361))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.B(36034, '+', J$.T(579193, 'current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. ', 21, false), J$.T(579201, 'To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.', 21, false))), emitDeprecationForNonUnifiedTopology, false, true);
            J$.P(587249, J$.I(typeof module === 'undefined' ? module = J$.R(587233, 'module', undefined, true, true) : module = J$.R(587233, 'module', module, true, true)), 'exports', J$.R(587241, 'ConnectOperation', ConnectOperation, false, true));
        } catch (J$e) {
            J$.Ex(588721, J$e);
        } finally {
            if (J$.Sr(588729))
                continue jalangiLabel50;
            else
                break jalangiLabel50;
        }
    }
// JALANGI DO NOT INSTRUMENT

