J$.noInstrEval = false;
jalangiLabel17:
    while (true) {
        try {
            J$.Se(550617, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/operations/collection_ops.js');
            function checkForAtomicOperators(update) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(545873, arguments.callee, this, arguments);
                            arguments = J$.N(545881, 'arguments', arguments, true, false, false);
                            update = J$.N(545889, 'update', update, true, false, false);
                            J$.N(545897, 'keys', keys, false, false, false);
                            if (J$.C(34496, J$.M(545585, J$.I(typeof Array === 'undefined' ? Array = J$.R(545569, 'Array', undefined, true, true) : Array = J$.R(545569, 'Array', Array, true, true)), 'isArray', false)(J$.R(545577, 'update', update, false, false)))) {
                                return J$.Rt(545697, J$.M(545689, J$.R(545593, 'update', update, false, false), 'reduce', false)(J$.T(545673, function (err, u) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(545641, arguments.callee, this, arguments);
                                                arguments = J$.N(545649, 'arguments', arguments, true, false, false);
                                                err = J$.N(545657, 'err', err, true, false, false);
                                                u = J$.N(545665, 'u', u, true, false, false);
                                                return J$.Rt(545633, J$.C(34488, J$.R(545601, 'err', err, false, false)) ? J$._() : J$.F(545625, J$.R(545609, 'checkForAtomicOperators', checkForAtomicOperators, false, true), false)(J$.R(545617, 'u', u, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(550929, J$e);
                                            } finally {
                                                if (J$.Fr(550937))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.T(545681, null, 25, false)));
                            }
                            var keys = J$.W(545729, 'keys', J$.M(545721, J$.I(typeof Object === 'undefined' ? Object = J$.R(545705, 'Object', undefined, true, true) : Object = J$.R(545705, 'Object', Object, true, true)), 'keys', false)(J$.R(545713, 'update', update, false, false)), keys, false, false);
                            if (J$.C(34504, J$.B(34138, '===', J$.G(545745, J$.R(545737, 'keys', keys, false, false), 'length'), J$.T(545753, 0, 22, false)))) {
                                return J$.Rt(545785, J$.F(545777, J$.R(545761, 'toError', toError, false, true), false)(J$.T(545769, 'The update operation document must contain at least one atomic operator.', 21, false)));
                            }
                            if (J$.C(34512, J$.B(34146, '!==', J$.G(545825, J$.G(545809, J$.R(545793, 'keys', keys, false, false), J$.T(545801, 0, 22, false)), J$.T(545817, 0, 22, false)), J$.T(545833, '$', 21, false)))) {
                                return J$.Rt(545865, J$.F(545857, J$.R(545841, 'toError', toError, false, true), false)(J$.T(545849, 'the update operation document must contain atomic operators.', 21, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(550945, J$e);
                        } finally {
                            if (J$.Fr(550953))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createIndex(coll, fieldOrSpec, options, callback) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(545985, arguments.callee, this, arguments);
                            arguments = J$.N(545993, 'arguments', arguments, true, false, false);
                            coll = J$.N(546001, 'coll', coll, true, false, false);
                            fieldOrSpec = J$.N(546009, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(546017, 'options', options, true, false, false);
                            callback = J$.N(546025, 'callback', callback, true, false, false);
                            J$.F(545977, J$.R(545905, 'createIndexDb', createIndexDb, false, true), false)(J$.G(545929, J$.G(545921, J$.R(545913, 'coll', coll, false, false), 's'), 'db'), J$.G(545945, J$.R(545937, 'coll', coll, false, false), 'collectionName'), J$.R(545953, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(545961, 'options', options, false, false), J$.R(545969, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(550961, J$e);
                        } finally {
                            if (J$.Fr(550969))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createIndexes(coll, indexSpecs, options, callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(546649, arguments.callee, this, arguments);
                            arguments = J$.N(546657, 'arguments', arguments, true, false, false);
                            coll = J$.N(546665, 'coll', coll, true, false, false);
                            indexSpecs = J$.N(546673, 'indexSpecs', indexSpecs, true, false, false);
                            options = J$.N(546681, 'options', options, true, false, false);
                            callback = J$.N(546689, 'callback', callback, true, false, false);
                            J$.N(546697, 'capabilities', capabilities, false, false, false);
                            J$.N(546705, 'i', i, false, false, false);
                            J$.N(546713, 'keys', keys, false, false, false);
                            J$.N(546721, 'name', name, false, false, false);
                            var capabilities = J$.W(546065, 'capabilities', J$.M(546057, J$.G(546049, J$.G(546041, J$.R(546033, 'coll', coll, false, false), 's'), 'topology'), 'capabilities', false)(), capabilities, false, false);
                            for (var i = J$.W(546081, 'i', J$.T(546073, 0, 22, false), i, false, false); J$.C(34552, J$.B(34154, '<', J$.R(546089, 'i', i, false, false), J$.G(546105, J$.R(546097, 'indexSpecs', indexSpecs, false, false), 'length'))); J$.B(34178, '-', i = J$.W(546121, 'i', J$.B(34170, '+', J$.U(34162, '+', J$.R(546113, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(34544, J$.B(34186, '==', J$.G(546153, J$.G(546145, J$.R(546129, 'indexSpecs', indexSpecs, false, false), J$.R(546137, 'i', i, false, false)), 'name'), J$.T(546161, null, 25, false)))) {
                                    var keys = J$.W(546177, 'keys', J$.T(546169, [], 10, false), keys, false, false);
                                    if (J$.C(34536, J$.C(34528, J$.C(34520, J$.G(546209, J$.G(546201, J$.R(546185, 'indexSpecs', indexSpecs, false, false), J$.R(546193, 'i', i, false, false)), 'collation')) ? J$.R(546217, 'capabilities', capabilities, false, false) : J$._()) ? J$.U(34194, '!', J$.G(546233, J$.R(546225, 'capabilities', capabilities, false, false), 'commandsTakeCollation')) : J$._())) {
                                        return J$.Rt(546281, J$.F(546273, J$.R(546241, 'callback', callback, false, false), false)(J$.F(546265, J$.R(546249, 'MongoError', MongoError, false, true), true)(J$.T(546257, 'server/primary/mongos does not support collation', 21, false))));
                                    }
                                    for (var name in J$.H(546425, J$.G(546313, J$.G(546305, J$.R(546289, 'indexSpecs', indexSpecs, false, false), J$.R(546297, 'i', i, false, false)), 'key'))) {
                                        J$.N(546433, 'name', name, false, true, false);
                                        {
                                            {
                                                J$.M(546417, J$.R(546321, 'keys', keys, false, false), 'push', false)(J$.M(546409, J$.M(546353, J$.T(546329, '', 21, false), 'concat', false)(J$.R(546337, 'name', name, false, false), J$.T(546345, '_', 21, false)), 'concat', false)(J$.G(546401, J$.G(546385, J$.G(546377, J$.R(546361, 'indexSpecs', indexSpecs, false, false), J$.R(546369, 'i', i, false, false)), 'key'), J$.R(546393, 'name', name, false, false))));
                                            }
                                        }
                                    }
                                    J$.P(546489, J$.G(546457, J$.R(546441, 'indexSpecs', indexSpecs, false, false), J$.R(546449, 'i', i, false, false)), 'name', J$.M(546481, J$.R(546465, 'keys', keys, false, false), 'join', false)(J$.T(546473, '_', 21, false)));
                                }
                            }
                            options = J$.W(546553, 'options', J$.M(546545, J$.I(typeof Object === 'undefined' ? Object = J$.R(546497, 'Object', undefined, true, true) : Object = J$.R(546497, 'Object', Object, true, true)), 'assign', false)(J$.T(546505, {}, 11, false), J$.R(546513, 'options', options, false, false), J$.T(546537, { readPreference: J$.G(546529, J$.R(546521, 'ReadPreference', ReadPreference, false, true), 'PRIMARY') }, 11, false)), options, false, false);
                            J$.F(546641, J$.R(546561, 'executeCommand', executeCommand, false, true), false)(J$.G(546585, J$.G(546577, J$.R(546569, 'coll', coll, false, false), 's'), 'db'), J$.T(546617, {
                                createIndexes: J$.G(546601, J$.R(546593, 'coll', coll, false, false), 'collectionName'),
                                indexes: J$.R(546609, 'indexSpecs', indexSpecs, false, false)
                            }, 11, false), J$.R(546625, 'options', options, false, false), J$.R(546633, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(550977, J$e);
                        } finally {
                            if (J$.Fr(550985))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ensureIndex(coll, fieldOrSpec, options, callback) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(546809, arguments.callee, this, arguments);
                            arguments = J$.N(546817, 'arguments', arguments, true, false, false);
                            coll = J$.N(546825, 'coll', coll, true, false, false);
                            fieldOrSpec = J$.N(546833, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(546841, 'options', options, true, false, false);
                            callback = J$.N(546849, 'callback', callback, true, false, false);
                            J$.F(546801, J$.R(546729, 'ensureIndexDb', ensureIndexDb, false, true), false)(J$.G(546753, J$.G(546745, J$.R(546737, 'coll', coll, false, false), 's'), 'db'), J$.G(546769, J$.R(546761, 'coll', coll, false, false), 'collectionName'), J$.R(546777, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(546785, 'options', options, false, false), J$.R(546793, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(550993, J$e);
                        } finally {
                            if (J$.Fr(551001))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function group(coll, keys, condition, initial, reduce, finalize, command, options, callback) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(548217, arguments.callee, this, arguments);
                            arguments = J$.N(548225, 'arguments', arguments, true, false, false);
                            coll = J$.N(548233, 'coll', coll, true, false, false);
                            keys = J$.N(548241, 'keys', keys, true, false, false);
                            condition = J$.N(548249, 'condition', condition, true, false, false);
                            initial = J$.N(548257, 'initial', initial, true, false, false);
                            reduce = J$.N(548265, 'reduce', reduce, true, false, false);
                            finalize = J$.N(548273, 'finalize', finalize, true, false, false);
                            command = J$.N(548281, 'command', command, true, false, false);
                            options = J$.N(548289, 'options', options, true, false, false);
                            callback = J$.N(548297, 'callback', callback, true, false, false);
                            J$.N(548305, 'reduceFunction', reduceFunction, false, false, false);
                            J$.N(548313, 'selector', selector, false, false, false);
                            J$.N(548321, 'hash', hash, false, false, false);
                            J$.N(548329, 'scope', scope, false, false, false);
                            J$.N(548337, 'groupfn', groupfn, false, false, false);
                            if (J$.C(34664, J$.R(546857, 'command', command, false, false))) {
                                var reduceFunction = J$.W(546929, 'reduceFunction', J$.C(34568, J$.C(34560, J$.R(546865, 'reduce', reduce, false, false)) ? J$.B(34202, '===', J$.G(546881, J$.R(546873, 'reduce', reduce, false, false), '_bsontype'), J$.T(546889, 'Code', 21, false)) : J$._()) ? J$.R(546897, 'reduce', reduce, false, false) : J$.F(546921, J$.R(546905, 'Code', Code, false, true), true)(J$.R(546913, 'reduce', reduce, false, false)), reduceFunction, false, false);
                                var selector = J$.W(547001, 'selector', J$.T(546993, {
                                    group: J$.T(546985, {
                                        ns: J$.G(546945, J$.R(546937, 'coll', coll, false, false), 'collectionName'),
                                        $reduce: J$.R(546953, 'reduceFunction', reduceFunction, false, false),
                                        cond: J$.R(546961, 'condition', condition, false, false),
                                        initial: J$.R(546969, 'initial', initial, false, false),
                                        out: J$.T(546977, 'inline', 21, false)
                                    }, 11, false)
                                }, 11, false), selector, false, false);
                                if (J$.C(34576, J$.B(34210, '!=', J$.R(547009, 'finalize', finalize, false, false), J$.T(547017, null, 25, false))))
                                    J$.P(547057, J$.G(547033, J$.R(547025, 'selector', selector, false, false), 'group'), J$.T(547041, 'finalize', 21, false), J$.R(547049, 'finalize', finalize, false, false));
                                if (J$.C(34616, J$.C(34592, J$.B(34226, '===', J$.T(547065, 'function', 21, false), J$.U(34218, 'typeof', J$.R(547073, 'keys', keys, false, false)))) ? J$._() : J$.C(34584, J$.R(547081, 'keys', keys, false, false)) ? J$.B(34234, '===', J$.G(547097, J$.R(547089, 'keys', keys, false, false), '_bsontype'), J$.T(547105, 'Code', 21, false)) : J$._())) {
                                    J$.P(547193, J$.G(547121, J$.R(547113, 'selector', selector, false, false), 'group'), '$keyf', J$.C(34608, J$.C(34600, J$.R(547129, 'keys', keys, false, false)) ? J$.B(34242, '===', J$.G(547145, J$.R(547137, 'keys', keys, false, false), '_bsontype'), J$.T(547153, 'Code', 21, false)) : J$._()) ? J$.R(547161, 'keys', keys, false, false) : J$.F(547185, J$.R(547169, 'Code', Code, false, true), true)(J$.R(547177, 'keys', keys, false, false)));
                                } else {
                                    var hash = J$.W(547209, 'hash', J$.T(547201, {}, 11, false), hash, false, false);
                                    J$.M(547289, J$.R(547217, 'keys', keys, false, false), 'forEach', false)(J$.T(547281, function (key) {
                                        jalangiLabel5:
                                            while (true) {
                                                try {
                                                    J$.Fe(547257, arguments.callee, this, arguments);
                                                    arguments = J$.N(547265, 'arguments', arguments, true, false, false);
                                                    key = J$.N(547273, 'key', key, true, false, false);
                                                    J$.P(547249, J$.R(547225, 'hash', hash, false, false), J$.R(547233, 'key', key, false, false), J$.T(547241, 1, 22, false));
                                                } catch (J$e) {
                                                    J$.Ex(551009, J$e);
                                                } finally {
                                                    if (J$.Fr(551017))
                                                        continue jalangiLabel5;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                    J$.P(547321, J$.G(547305, J$.R(547297, 'selector', selector, false, false), 'group'), 'key', J$.R(547313, 'hash', hash, false, false));
                                }
                                options = J$.W(547361, 'options', J$.M(547353, J$.I(typeof Object === 'undefined' ? Object = J$.R(547329, 'Object', undefined, true, true) : Object = J$.R(547329, 'Object', Object, true, true)), 'assign', false)(J$.T(547337, {}, 11, false), J$.R(547345, 'options', options, false, false)), options, false, false);
                                J$.P(547409, J$.R(547369, 'options', options, false, false), 'readPreference', J$.F(547401, J$.R(547377, 'resolveReadPreference', resolveReadPreference, false, true), false)(J$.R(547385, 'coll', coll, false, false), J$.R(547393, 'options', options, false, false)));
                                J$.F(547449, J$.R(547417, 'decorateWithReadConcern', decorateWithReadConcern, false, true), false)(J$.R(547425, 'selector', selector, false, false), J$.R(547433, 'coll', coll, false, false), J$.R(547441, 'options', options, false, false));
                                try {
                                    J$.F(547489, J$.R(547457, 'decorateWithCollation', decorateWithCollation, false, true), false)(J$.R(547465, 'selector', selector, false, false), J$.R(547473, 'coll', coll, false, false), J$.R(547481, 'options', options, false, false));
                                } catch (err) {
                                    J$.N(547537, 'err', err, false, false, true);
                                    return J$.Rt(547529, J$.F(547521, J$.R(547497, 'callback', callback, false, false), false)(J$.R(547505, 'err', err, false, false), J$.T(547513, null, 25, false)));
                                }
                                J$.F(547737, J$.R(547545, 'executeCommand', executeCommand, false, true), false)(J$.G(547569, J$.G(547561, J$.R(547553, 'coll', coll, false, false), 's'), 'db'), J$.R(547577, 'selector', selector, false, false), J$.R(547585, 'options', options, false, false), J$.T(547729, function (err, result) {
                                    jalangiLabel6:
                                        while (true) {
                                            try {
                                                J$.Fe(547697, arguments.callee, this, arguments);
                                                arguments = J$.N(547705, 'arguments', arguments, true, false, false);
                                                err = J$.N(547713, 'err', err, true, false, false);
                                                result = J$.N(547721, 'result', result, true, false, false);
                                                if (J$.C(34624, J$.R(547593, 'err', err, false, false)))
                                                    return J$.Rt(547641, J$.F(547633, J$.R(547601, 'handleCallback', handleCallback, false, true), false)(J$.R(547609, 'callback', callback, false, false), J$.R(547617, 'err', err, false, false), J$.T(547625, null, 25, false)));
                                                J$.F(547689, J$.R(547649, 'handleCallback', handleCallback, false, true), false)(J$.R(547657, 'callback', callback, false, false), J$.T(547665, null, 25, false), J$.G(547681, J$.R(547673, 'result', result, false, false), 'retval'));
                                            } catch (J$e) {
                                                J$.Ex(551025, J$e);
                                            } finally {
                                                if (J$.Fr(551033))
                                                    continue jalangiLabel6;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                var scope = J$.W(547809, 'scope', J$.C(34640, J$.C(34632, J$.B(34250, '!=', J$.R(547745, 'reduce', reduce, false, false), J$.T(547753, null, 25, false))) ? J$.B(34258, '===', J$.G(547769, J$.R(547761, 'reduce', reduce, false, false), '_bsontype'), J$.T(547777, 'Code', 21, false)) : J$._()) ? J$.G(547793, J$.R(547785, 'reduce', reduce, false, false), 'scope') : J$.T(547801, {}, 11, false), scope, false, false);
                                J$.P(547841, J$.R(547817, 'scope', scope, false, false), 'ns', J$.G(547833, J$.R(547825, 'coll', coll, false, false), 'collectionName'));
                                J$.P(547865, J$.R(547849, 'scope', scope, false, false), 'keys', J$.R(547857, 'keys', keys, false, false));
                                J$.P(547889, J$.R(547873, 'scope', scope, false, false), 'condition', J$.R(547881, 'condition', condition, false, false));
                                J$.P(547913, J$.R(547897, 'scope', scope, false, false), 'initial', J$.R(547905, 'initial', initial, false, false));
                                var groupfn = J$.W(547969, 'groupfn', J$.M(547961, J$.R(547921, 'groupFunction', groupFunction, false, true), 'replace', false)(J$.T(547929, / reduce;/, 14, false), J$.B(34266, '+', J$.M(547945, J$.R(547937, 'reduce', reduce, false, false), 'toString', false)(), J$.T(547953, ';', 21, false))), groupfn, false, false);
                                J$.F(548209, J$.R(547977, 'evaluate', evaluate, false, true), false)(J$.G(548001, J$.G(547993, J$.R(547985, 'coll', coll, false, false), 's'), 'db'), J$.F(548033, J$.R(548009, 'Code', Code, false, true), true)(J$.R(548017, 'groupfn', groupfn, false, false), J$.R(548025, 'scope', scope, false, false)), J$.T(548041, null, 25, false), J$.R(548049, 'options', options, false, false), J$.T(548201, function (err, results) {
                                    jalangiLabel7:
                                        while (true) {
                                            try {
                                                J$.Fe(548169, arguments.callee, this, arguments);
                                                arguments = J$.N(548177, 'arguments', arguments, true, false, false);
                                                err = J$.N(548185, 'err', err, true, false, false);
                                                results = J$.N(548193, 'results', results, true, false, false);
                                                if (J$.C(34648, J$.R(548057, 'err', err, false, false)))
                                                    return J$.Rt(548105, J$.F(548097, J$.R(548065, 'handleCallback', handleCallback, false, true), false)(J$.R(548073, 'callback', callback, false, false), J$.R(548081, 'err', err, false, false), J$.T(548089, null, 25, false)));
                                                J$.F(548161, J$.R(548113, 'handleCallback', handleCallback, false, true), false)(J$.R(548121, 'callback', callback, false, false), J$.T(548129, null, 25, false), J$.C(34656, J$.G(548145, J$.R(548137, 'results', results, false, false), 'result')) ? J$._() : J$.R(548153, 'results', results, false, false));
                                            } catch (J$e) {
                                                J$.Ex(551041, J$e);
                                            } finally {
                                                if (J$.Fr(551049))
                                                    continue jalangiLabel7;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(551057, J$e);
                        } finally {
                            if (J$.Fr(551065))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function indexes(coll, options, callback) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(548473, arguments.callee, this, arguments);
                            arguments = J$.N(548481, 'arguments', arguments, true, false, false);
                            coll = J$.N(548489, 'coll', coll, true, false, false);
                            options = J$.N(548497, 'options', options, true, false, false);
                            callback = J$.N(548505, 'callback', callback, true, false, false);
                            options = J$.W(548393, 'options', J$.M(548385, J$.I(typeof Object === 'undefined' ? Object = J$.R(548345, 'Object', undefined, true, true) : Object = J$.R(548345, 'Object', Object, true, true)), 'assign', false)(J$.T(548353, {}, 11, false), J$.T(548369, { full: J$.T(548361, true, 23, false) }, 11, false), J$.R(548377, 'options', options, false, false)), options, false, false);
                            J$.F(548465, J$.R(548401, 'indexInformationDb', indexInformationDb, false, true), false)(J$.G(548425, J$.G(548417, J$.R(548409, 'coll', coll, false, false), 's'), 'db'), J$.G(548441, J$.R(548433, 'coll', coll, false, false), 'collectionName'), J$.R(548449, 'options', options, false, false), J$.R(548457, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(551073, J$e);
                        } finally {
                            if (J$.Fr(551081))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function indexExists(coll, indexes, options, callback) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(548953, arguments.callee, this, arguments);
                            arguments = J$.N(548961, 'arguments', arguments, true, false, false);
                            coll = J$.N(548969, 'coll', coll, true, false, false);
                            indexes = J$.N(548977, 'indexes', indexes, true, false, false);
                            options = J$.N(548985, 'options', options, true, false, false);
                            callback = J$.N(548993, 'callback', callback, true, false, false);
                            J$.F(548945, J$.R(548513, 'indexInformation', indexInformation, false, true), false)(J$.R(548521, 'coll', coll, false, false), J$.R(548529, 'options', options, false, false), J$.T(548937, function (err, indexInformation) {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(548897, arguments.callee, this, arguments);
                                            arguments = J$.N(548905, 'arguments', arguments, true, false, false);
                                            err = J$.N(548913, 'err', err, true, false, false);
                                            indexInformation = J$.N(548921, 'indexInformation', indexInformation, true, false, false);
                                            J$.N(548929, 'i', i, false, false, false);
                                            if (J$.C(34672, J$.B(34274, '!=', J$.R(548537, 'err', err, false, false), J$.T(548545, null, 25, false))))
                                                return J$.Rt(548593, J$.F(548585, J$.R(548553, 'handleCallback', handleCallback, false, true), false)(J$.R(548561, 'callback', callback, false, false), J$.R(548569, 'err', err, false, false), J$.T(548577, null, 25, false)));
                                            if (J$.C(34680, J$.U(34282, '!', J$.M(548617, J$.I(typeof Array === 'undefined' ? Array = J$.R(548601, 'Array', undefined, true, true) : Array = J$.R(548601, 'Array', Array, true, true)), 'isArray', false)(J$.R(548609, 'indexes', indexes, false, false)))))
                                                return J$.Rt(548689, J$.F(548681, J$.R(548625, 'handleCallback', handleCallback, false, true), false)(J$.R(548633, 'callback', callback, false, false), J$.T(548641, null, 25, false), J$.B(34290, '!=', J$.G(548665, J$.R(548649, 'indexInformation', indexInformation, false, false), J$.R(548657, 'indexes', indexes, false, false)), J$.T(548673, null, 25, false))));
                                            for (var i = J$.W(548705, 'i', J$.T(548697, 0, 22, false), i, false, false); J$.C(34696, J$.B(34298, '<', J$.R(548713, 'i', i, false, false), J$.G(548729, J$.R(548721, 'indexes', indexes, false, false), 'length'))); J$.B(34322, '-', i = J$.W(548745, 'i', J$.B(34314, '+', J$.U(34306, '+', J$.R(548737, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                if (J$.C(34688, J$.B(34330, '==', J$.G(548785, J$.R(548753, 'indexInformation', indexInformation, false, false), J$.G(548777, J$.R(548761, 'indexes', indexes, false, false), J$.R(548769, 'i', i, false, false))), J$.T(548793, null, 25, false)))) {
                                                    return J$.Rt(548841, J$.F(548833, J$.R(548801, 'handleCallback', handleCallback, false, true), false)(J$.R(548809, 'callback', callback, false, false), J$.T(548817, null, 25, false), J$.T(548825, false, 23, false)));
                                                }
                                            }
                                            return J$.Rt(548889, J$.F(548881, J$.R(548849, 'handleCallback', handleCallback, false, true), false)(J$.R(548857, 'callback', callback, false, false), J$.T(548865, null, 25, false), J$.T(548873, true, 23, false)));
                                        } catch (J$e) {
                                            J$.Ex(551089, J$e);
                                        } finally {
                                            if (J$.Fr(551097))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(551105, J$e);
                        } finally {
                            if (J$.Fr(551113))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function indexInformation(coll, options, callback) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(549073, arguments.callee, this, arguments);
                            arguments = J$.N(549081, 'arguments', arguments, true, false, false);
                            coll = J$.N(549089, 'coll', coll, true, false, false);
                            options = J$.N(549097, 'options', options, true, false, false);
                            callback = J$.N(549105, 'callback', callback, true, false, false);
                            J$.F(549065, J$.R(549001, 'indexInformationDb', indexInformationDb, false, true), false)(J$.G(549025, J$.G(549017, J$.R(549009, 'coll', coll, false, false), 's'), 'db'), J$.G(549041, J$.R(549033, 'coll', coll, false, false), 'collectionName'), J$.R(549049, 'options', options, false, false), J$.R(549057, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(551121, J$e);
                        } finally {
                            if (J$.Fr(551129))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parallelCollectionScan(coll, options, callback) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(549897, arguments.callee, this, arguments);
                            arguments = J$.N(549905, 'arguments', arguments, true, false, false);
                            coll = J$.N(549913, 'coll', coll, true, false, false);
                            options = J$.N(549921, 'options', options, true, false, false);
                            callback = J$.N(549929, 'callback', callback, true, false, false);
                            J$.N(549937, 'commandObject', commandObject, false, false, false);
                            J$.N(549945, 'raw', raw, false, false, false);
                            var commandObject = J$.W(549153, 'commandObject', J$.T(549145, {
                                parallelCollectionScan: J$.G(549121, J$.R(549113, 'coll', coll, false, false), 'collectionName'),
                                numCursors: J$.G(549137, J$.R(549129, 'options', options, false, false), 'numCursors')
                            }, 11, false), commandObject, false, false);
                            J$.F(549193, J$.R(549161, 'decorateWithReadConcern', decorateWithReadConcern, false, true), false)(J$.R(549169, 'commandObject', commandObject, false, false), J$.R(549177, 'coll', coll, false, false), J$.R(549185, 'options', options, false, false));
                            var raw = J$.W(549217, 'raw', J$.G(549209, J$.R(549201, 'options', options, false, false), 'raw'), raw, false, false);
                            J$.B(34338, 'delete', J$.R(549225, 'options', options, false, false), J$.T(549233, 'raw', 21, false));
                            J$.F(549889, J$.R(549241, 'executeCommand', executeCommand, false, true), false)(J$.G(549265, J$.G(549257, J$.R(549249, 'coll', coll, false, false), 's'), 'db'), J$.R(549273, 'commandObject', commandObject, false, false), J$.R(549281, 'options', options, false, false), J$.T(549881, function (err, result) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(549817, arguments.callee, this, arguments);
                                            arguments = J$.N(549825, 'arguments', arguments, true, false, false);
                                            err = J$.N(549833, 'err', err, true, false, false);
                                            result = J$.N(549841, 'result', result, true, false, false);
                                            J$.N(549849, 'cursors', cursors, false, false, false);
                                            J$.N(549857, 'i', i, false, false, false);
                                            J$.N(549865, 'rawId', rawId, false, false, false);
                                            J$.N(549873, 'cursorId', cursorId, false, false, false);
                                            if (J$.C(34704, J$.R(549289, 'err', err, false, false)))
                                                return J$.Rt(549337, J$.F(549329, J$.R(549297, 'handleCallback', handleCallback, false, true), false)(J$.R(549305, 'callback', callback, false, false), J$.R(549313, 'err', err, false, false), J$.T(549321, null, 25, false)));
                                            if (J$.C(34712, J$.B(34346, '==', J$.R(549345, 'result', result, false, false), J$.T(549353, null, 25, false))))
                                                return J$.Rt(549417, J$.F(549409, J$.R(549361, 'handleCallback', handleCallback, false, true), false)(J$.R(549369, 'callback', callback, false, false), J$.F(549393, J$.I(typeof Error === 'undefined' ? Error = J$.R(549377, 'Error', undefined, true, true) : Error = J$.R(549377, 'Error', Error, true, true)), true)(J$.T(549385, 'no result returned for parallelCollectionScan', 21, false)), J$.T(549401, null, 25, false)));
                                            options = J$.W(549465, 'options', J$.M(549457, J$.I(typeof Object === 'undefined' ? Object = J$.R(549425, 'Object', undefined, true, true) : Object = J$.R(549425, 'Object', Object, true, true)), 'assign', false)(J$.T(549441, { explicitlyIgnoreSession: J$.T(549433, true, 23, false) }, 11, false), J$.R(549449, 'options', options, false, false)), options, false, false);
                                            var cursors = J$.W(549481, 'cursors', J$.T(549473, [], 10, false), cursors, false, false);
                                            if (J$.C(34720, J$.R(549489, 'raw', raw, false, false)))
                                                J$.P(549513, J$.R(549497, 'options', options, false, false), 'raw', J$.R(549505, 'raw', raw, false, false));
                                            for (var i = J$.W(549529, 'i', J$.T(549521, 0, 22, false), i, false, false); J$.C(34736, J$.B(34354, '<', J$.R(549537, 'i', i, false, false), J$.G(549561, J$.G(549553, J$.R(549545, 'result', result, false, false), 'cursors'), 'length'))); J$.B(34378, '-', i = J$.W(549577, 'i', J$.B(34370, '+', J$.U(34362, '+', J$.R(549569, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                var rawId = J$.W(549633, 'rawId', J$.G(549625, J$.G(549617, J$.G(549609, J$.G(549593, J$.R(549585, 'result', result, false, false), 'cursors'), J$.R(549601, 'i', i, false, false)), 'cursor'), 'id'), rawId, false, false);
                                                var cursorId = J$.W(549689, 'cursorId', J$.C(34728, J$.B(34394, '===', J$.U(34386, 'typeof', J$.R(549641, 'rawId', rawId, false, false)), J$.T(549649, 'number', 21, false))) ? J$.M(549673, J$.R(549657, 'Long', Long, false, true), 'fromNumber', false)(J$.R(549665, 'rawId', rawId, false, false)) : J$.R(549681, 'rawId', rawId, false, false), cursorId, false, false);
                                                J$.M(549769, J$.R(549697, 'cursors', cursors, false, false), 'push', false)(J$.M(549761, J$.G(549721, J$.G(549713, J$.R(549705, 'coll', coll, false, false), 's'), 'topology'), 'cursor', false)(J$.G(549737, J$.R(549729, 'coll', coll, false, false), 'namespace'), J$.R(549745, 'cursorId', cursorId, false, false), J$.R(549753, 'options', options, false, false)));
                                            }
                                            J$.F(549809, J$.R(549777, 'handleCallback', handleCallback, false, true), false)(J$.R(549785, 'callback', callback, false, false), J$.T(549793, null, 25, false), J$.R(549801, 'cursors', cursors, false, false));
                                        } catch (J$e) {
                                            J$.Ex(551137, J$e);
                                        } finally {
                                            if (J$.Fr(551145))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(551153, J$e);
                        } finally {
                            if (J$.Fr(551161))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function save(coll, doc, options, callback) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(550457, arguments.callee, this, arguments);
                            arguments = J$.N(550465, 'arguments', arguments, true, false, false);
                            coll = J$.N(550473, 'coll', coll, true, false, false);
                            doc = J$.N(550481, 'doc', doc, true, false, false);
                            options = J$.N(550489, 'options', options, true, false, false);
                            callback = J$.N(550497, 'callback', callback, true, false, false);
                            J$.N(550505, 'finalOptions', finalOptions, false, false, false);
                            var finalOptions = J$.W(550049, 'finalOptions', J$.F(550041, J$.R(549953, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.M(549985, J$.I(typeof Object === 'undefined' ? Object = J$.R(549961, 'Object', undefined, true, true) : Object = J$.R(549961, 'Object', Object, true, true)), 'assign', false)(J$.T(549969, {}, 11, false), J$.R(549977, 'options', options, false, false)), J$.T(550025, {
                                db: J$.G(550009, J$.G(550001, J$.R(549993, 'coll', coll, false, false), 's'), 'db'),
                                collection: J$.R(550017, 'coll', coll, false, false)
                            }, 11, false), J$.R(550033, 'options', options, false, false)), finalOptions, false, false);
                            if (J$.C(34744, J$.B(34402, '!=', J$.G(550065, J$.R(550057, 'doc', doc, false, false), '_id'), J$.T(550073, null, 25, false)))) {
                                J$.P(550097, J$.R(550081, 'finalOptions', finalOptions, false, false), 'upsert', J$.T(550089, true, 23, false));
                                return J$.Rt(550177, J$.F(550169, J$.R(550105, 'updateDocuments', updateDocuments, false, true), false)(J$.R(550113, 'coll', coll, false, false), J$.T(550137, { _id: J$.G(550129, J$.R(550121, 'doc', doc, false, false), '_id') }, 11, false), J$.R(550145, 'doc', doc, false, false), J$.R(550153, 'finalOptions', finalOptions, false, false), J$.R(550161, 'callback', callback, false, false)));
                            }
                            J$.F(550449, J$.R(550185, 'insertDocuments', insertDocuments, false, true), false)(J$.R(550193, 'coll', coll, false, false), J$.T(550209, [J$.R(550201, 'doc', doc, false, false)], 10, false), J$.R(550217, 'finalOptions', finalOptions, false, false), J$.T(550441, function (err, result) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(550409, arguments.callee, this, arguments);
                                            arguments = J$.N(550417, 'arguments', arguments, true, false, false);
                                            err = J$.N(550425, 'err', err, true, false, false);
                                            result = J$.N(550433, 'result', result, true, false, false);
                                            if (J$.C(34752, J$.B(34410, '==', J$.R(550225, 'callback', callback, false, false), J$.T(550233, null, 25, false))))
                                                return J$.Rt(550241, undefined);
                                            if (J$.C(34760, J$.B(34418, '==', J$.R(550249, 'doc', doc, false, false), J$.T(550257, null, 25, false))))
                                                return J$.Rt(550305, J$.F(550297, J$.R(550265, 'handleCallback', handleCallback, false, true), false)(J$.R(550273, 'callback', callback, false, false), J$.T(550281, null, 25, false), J$.T(550289, null, 25, false)));
                                            if (J$.C(34768, J$.R(550313, 'err', err, false, false)))
                                                return J$.Rt(550361, J$.F(550353, J$.R(550321, 'handleCallback', handleCallback, false, true), false)(J$.R(550329, 'callback', callback, false, false), J$.R(550337, 'err', err, false, false), J$.T(550345, null, 25, false)));
                                            J$.F(550401, J$.R(550369, 'handleCallback', handleCallback, false, true), false)(J$.R(550377, 'callback', callback, false, false), J$.T(550385, null, 25, false), J$.R(550393, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(551169, J$e);
                                        } finally {
                                            if (J$.Fr(551177))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(551185, J$e);
                        } finally {
                            if (J$.Fr(551193))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(550625, 'applyWriteConcern', applyWriteConcern, false, false, false);
            J$.N(550633, 'Code', Code, false, false, false);
            J$.N(550641, 'createIndexDb', createIndexDb, false, false, false);
            J$.N(550649, 'decorateWithCollation', decorateWithCollation, false, false, false);
            J$.N(550657, 'decorateWithReadConcern', decorateWithReadConcern, false, false, false);
            J$.N(550665, 'ensureIndexDb', ensureIndexDb, false, false, false);
            J$.N(550673, 'evaluate', evaluate, false, false, false);
            J$.N(550681, 'executeCommand', executeCommand, false, false, false);
            J$.N(550689, 'resolveReadPreference', resolveReadPreference, false, false, false);
            J$.N(550697, 'handleCallback', handleCallback, false, false, false);
            J$.N(550705, 'indexInformationDb', indexInformationDb, false, false, false);
            J$.N(550713, 'Long', Long, false, false, false);
            J$.N(550721, 'MongoError', MongoError, false, false, false);
            J$.N(550729, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(550737, 'toError', toError, false, false, false);
            J$.N(550745, 'insertDocuments', insertDocuments, false, false, false);
            J$.N(550753, 'updateDocuments', updateDocuments, false, false, false);
            J$.N(550761, 'groupFunction', groupFunction, false, false, false);
            checkForAtomicOperators = J$.N(550777, 'checkForAtomicOperators', J$.T(550769, checkForAtomicOperators, 12, false), true, false, false);
            createIndex = J$.N(550793, 'createIndex', J$.T(550785, createIndex, 12, false), true, false, false);
            createIndexes = J$.N(550809, 'createIndexes', J$.T(550801, createIndexes, 12, false), true, false, false);
            ensureIndex = J$.N(550825, 'ensureIndex', J$.T(550817, ensureIndex, 12, false), true, false, false);
            group = J$.N(550841, 'group', J$.T(550833, group, 12, false), true, false, false);
            indexes = J$.N(550857, 'indexes', J$.T(550849, indexes, 12, false), true, false, false);
            indexExists = J$.N(550873, 'indexExists', J$.T(550865, indexExists, 12, false), true, false, false);
            indexInformation = J$.N(550889, 'indexInformation', J$.T(550881, indexInformation, 12, false), true, false, false);
            parallelCollectionScan = J$.N(550905, 'parallelCollectionScan', J$.T(550897, parallelCollectionScan, 12, false), true, false, false);
            save = J$.N(550921, 'save', J$.T(550913, save, 12, false), true, false, false);
            J$.T(544849, 'use strict', 21, false);
            var applyWriteConcern = J$.W(544889, 'applyWriteConcern', J$.G(544881, J$.F(544873, J$.I(typeof require === 'undefined' ? require = J$.R(544857, 'require', undefined, true, true) : require = J$.R(544857, 'require', require, true, true)), false)(J$.T(544865, '../utils', 21, false)), 'applyWriteConcern'), applyWriteConcern, false, true);
            var Code = J$.W(544937, 'Code', J$.G(544929, J$.G(544921, J$.F(544913, J$.I(typeof require === 'undefined' ? require = J$.R(544897, 'require', undefined, true, true) : require = J$.R(544897, 'require', require, true, true)), false)(J$.T(544905, '../core', 21, false)), 'BSON'), 'Code'), Code, false, true);
            var createIndexDb = J$.W(544977, 'createIndexDb', J$.G(544969, J$.F(544961, J$.I(typeof require === 'undefined' ? require = J$.R(544945, 'require', undefined, true, true) : require = J$.R(544945, 'require', require, true, true)), false)(J$.T(544953, './db_ops', 21, false)), 'createIndex'), createIndexDb, false, true);
            var decorateWithCollation = J$.W(545017, 'decorateWithCollation', J$.G(545009, J$.F(545001, J$.I(typeof require === 'undefined' ? require = J$.R(544985, 'require', undefined, true, true) : require = J$.R(544985, 'require', require, true, true)), false)(J$.T(544993, '../utils', 21, false)), 'decorateWithCollation'), decorateWithCollation, false, true);
            var decorateWithReadConcern = J$.W(545057, 'decorateWithReadConcern', J$.G(545049, J$.F(545041, J$.I(typeof require === 'undefined' ? require = J$.R(545025, 'require', undefined, true, true) : require = J$.R(545025, 'require', require, true, true)), false)(J$.T(545033, '../utils', 21, false)), 'decorateWithReadConcern'), decorateWithReadConcern, false, true);
            var ensureIndexDb = J$.W(545097, 'ensureIndexDb', J$.G(545089, J$.F(545081, J$.I(typeof require === 'undefined' ? require = J$.R(545065, 'require', undefined, true, true) : require = J$.R(545065, 'require', require, true, true)), false)(J$.T(545073, './db_ops', 21, false)), 'ensureIndex'), ensureIndexDb, false, true);
            var evaluate = J$.W(545137, 'evaluate', J$.G(545129, J$.F(545121, J$.I(typeof require === 'undefined' ? require = J$.R(545105, 'require', undefined, true, true) : require = J$.R(545105, 'require', require, true, true)), false)(J$.T(545113, './db_ops', 21, false)), 'evaluate'), evaluate, false, true);
            var executeCommand = J$.W(545177, 'executeCommand', J$.G(545169, J$.F(545161, J$.I(typeof require === 'undefined' ? require = J$.R(545145, 'require', undefined, true, true) : require = J$.R(545145, 'require', require, true, true)), false)(J$.T(545153, './db_ops', 21, false)), 'executeCommand'), executeCommand, false, true);
            var resolveReadPreference = J$.W(545217, 'resolveReadPreference', J$.G(545209, J$.F(545201, J$.I(typeof require === 'undefined' ? require = J$.R(545185, 'require', undefined, true, true) : require = J$.R(545185, 'require', require, true, true)), false)(J$.T(545193, '../utils', 21, false)), 'resolveReadPreference'), resolveReadPreference, false, true);
            var handleCallback = J$.W(545257, 'handleCallback', J$.G(545249, J$.F(545241, J$.I(typeof require === 'undefined' ? require = J$.R(545225, 'require', undefined, true, true) : require = J$.R(545225, 'require', require, true, true)), false)(J$.T(545233, '../utils', 21, false)), 'handleCallback'), handleCallback, false, true);
            var indexInformationDb = J$.W(545297, 'indexInformationDb', J$.G(545289, J$.F(545281, J$.I(typeof require === 'undefined' ? require = J$.R(545265, 'require', undefined, true, true) : require = J$.R(545265, 'require', require, true, true)), false)(J$.T(545273, './db_ops', 21, false)), 'indexInformation'), indexInformationDb, false, true);
            var Long = J$.W(545345, 'Long', J$.G(545337, J$.G(545329, J$.F(545321, J$.I(typeof require === 'undefined' ? require = J$.R(545305, 'require', undefined, true, true) : require = J$.R(545305, 'require', require, true, true)), false)(J$.T(545313, '../core', 21, false)), 'BSON'), 'Long'), Long, false, true);
            var MongoError = J$.W(545385, 'MongoError', J$.G(545377, J$.F(545369, J$.I(typeof require === 'undefined' ? require = J$.R(545353, 'require', undefined, true, true) : require = J$.R(545353, 'require', require, true, true)), false)(J$.T(545361, '../core', 21, false)), 'MongoError'), MongoError, false, true);
            var ReadPreference = J$.W(545425, 'ReadPreference', J$.G(545417, J$.F(545409, J$.I(typeof require === 'undefined' ? require = J$.R(545393, 'require', undefined, true, true) : require = J$.R(545393, 'require', require, true, true)), false)(J$.T(545401, '../core', 21, false)), 'ReadPreference'), ReadPreference, false, true);
            var toError = J$.W(545465, 'toError', J$.G(545457, J$.F(545449, J$.I(typeof require === 'undefined' ? require = J$.R(545433, 'require', undefined, true, true) : require = J$.R(545433, 'require', require, true, true)), false)(J$.T(545441, '../utils', 21, false)), 'toError'), toError, false, true);
            var insertDocuments = J$.W(545505, 'insertDocuments', J$.G(545497, J$.F(545489, J$.I(typeof require === 'undefined' ? require = J$.R(545473, 'require', undefined, true, true) : require = J$.R(545473, 'require', require, true, true)), false)(J$.T(545481, './common_functions', 21, false)), 'insertDocuments'), insertDocuments, false, true);
            var updateDocuments = J$.W(545545, 'updateDocuments', J$.G(545537, J$.F(545529, J$.I(typeof require === 'undefined' ? require = J$.R(545513, 'require', undefined, true, true) : require = J$.R(545513, 'require', require, true, true)), false)(J$.T(545521, './common_functions', 21, false)), 'updateDocuments'), updateDocuments, false, true);
            var groupFunction = J$.W(545561, 'groupFunction', J$.T(545553, 'function () {\nvar c = db[ns].find(condition);\nvar map = new Map();\nvar reduce_function = reduce;\n\nwhile (c.hasNext()) {\nvar obj = c.next();\nvar key = {};\n\nfor (var i = 0, len = keys.length; i < len; ++i) {\nvar k = keys[i];\nkey[k] = obj[k];\n}\n\nvar aggObj = map.get(key);\n\nif (aggObj == null) {\nvar newObj = Object.extend({}, key);\naggObj = Object.extend(newObj, initial);\nmap.put(key, aggObj);\n}\n\nreduce_function(obj, aggObj);\n}\n\nreturn { "result": map.values() };\n}', 21, false), groupFunction, false, true);
            J$.P(550609, J$.I(typeof module === 'undefined' ? module = J$.R(550513, 'module', undefined, true, true) : module = J$.R(550513, 'module', module, true, true)), 'exports', J$.T(550601, {
                checkForAtomicOperators: J$.R(550521, 'checkForAtomicOperators', checkForAtomicOperators, false, true),
                createIndex: J$.R(550529, 'createIndex', createIndex, false, true),
                createIndexes: J$.R(550537, 'createIndexes', createIndexes, false, true),
                ensureIndex: J$.R(550545, 'ensureIndex', ensureIndex, false, true),
                group: J$.R(550553, 'group', group, false, true),
                indexes: J$.R(550561, 'indexes', indexes, false, true),
                indexExists: J$.R(550569, 'indexExists', indexExists, false, true),
                indexInformation: J$.R(550577, 'indexInformation', indexInformation, false, true),
                parallelCollectionScan: J$.R(550585, 'parallelCollectionScan', parallelCollectionScan, false, true),
                save: J$.R(550593, 'save', save, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(551201, J$e);
        } finally {
            if (J$.Sr(551209))
                continue jalangiLabel17;
            else
                break jalangiLabel17;
        }
    }
// JALANGI DO NOT INSTRUMENT

