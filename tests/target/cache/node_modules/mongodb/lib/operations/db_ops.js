J$.noInstrEval = false;
jalangiLabel47:
    while (true) {
        try {
            J$.Se(629065, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/operations/db_ops.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(614305, arguments.callee, this, arguments);
                            arguments = J$.N(614313, 'arguments', arguments, true, false, false);
                            obj = J$.N(614321, 'obj', obj, true, false, false);
                            if (J$.C(39144, J$.C(39104, J$.B(37978, '===', J$.U(37970, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(614041, 'Symbol', undefined, true, true) : Symbol = J$.R(614041, 'Symbol', Symbol, true, true))), J$.T(614049, 'function', 21, false))) ? J$.B(37994, '===', J$.U(37986, 'typeof', J$.G(614065, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(614057, 'Symbol', undefined, true, true) : Symbol = J$.R(614057, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(614073, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(614129, '_typeof', J$.T(614121, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(614097, arguments.callee, this, arguments);
                                                arguments = J$.N(614105, 'arguments', arguments, true, false, false);
                                                obj = J$.N(614113, 'obj', obj, true, false, false);
                                                return J$.Rt(614089, J$.U(38002, 'typeof', J$.R(614081, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(629561, J$e);
                                            } finally {
                                                if (J$.Fr(629569))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(614265, '_typeof', J$.T(614257, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(614233, arguments.callee, this, arguments);
                                                arguments = J$.N(614241, 'arguments', arguments, true, false, false);
                                                obj = J$.N(614249, 'obj', obj, true, false, false);
                                                return J$.Rt(614225, J$.C(39136, J$.C(39128, J$.C(39120, J$.C(39112, J$.R(614137, 'obj', obj, false, false)) ? J$.B(38018, '===', J$.U(38010, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(614145, 'Symbol', undefined, true, true) : Symbol = J$.R(614145, 'Symbol', Symbol, true, true))), J$.T(614153, 'function', 21, false)) : J$._()) ? J$.B(38026, '===', J$.G(614169, J$.R(614161, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(614177, 'Symbol', undefined, true, true) : Symbol = J$.R(614177, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(38034, '!==', J$.R(614185, 'obj', obj, false, false), J$.G(614201, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(614193, 'Symbol', undefined, true, true) : Symbol = J$.R(614193, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(614209, 'symbol', 21, false) : J$.U(38042, 'typeof', J$.R(614217, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(629577, J$e);
                                            } finally {
                                                if (J$.Fr(629585))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(614297, J$.F(614289, J$.R(614273, '_typeof', _typeof, false, true), false)(J$.R(614281, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(629593, J$e);
                        } finally {
                            if (J$.Fr(629601))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function loadCollection() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(615017, arguments.callee, this, arguments);
                            arguments = J$.N(615025, 'arguments', arguments, true, false, false);
                            if (J$.C(39152, J$.U(38050, '!', J$.R(614961, 'collection', collection, false, true)))) {
                                collection = J$.W(614993, 'collection', J$.F(614985, J$.I(typeof require === 'undefined' ? require = J$.R(614969, 'require', undefined, true, true) : require = J$.R(614969, 'require', require, true, true)), false)(J$.T(614977, '../collection', 21, false)), collection, false, true);
                            }
                            return J$.Rt(615009, J$.R(615001, 'collection', collection, false, true));
                        } catch (J$e) {
                            J$.Ex(629609, J$e);
                        } finally {
                            if (J$.Fr(629617))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function loadDb() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(615089, arguments.callee, this, arguments);
                            arguments = J$.N(615097, 'arguments', arguments, true, false, false);
                            if (J$.C(39160, J$.U(38058, '!', J$.R(615033, 'db', db, false, true)))) {
                                db = J$.W(615065, 'db', J$.F(615057, J$.I(typeof require === 'undefined' ? require = J$.R(615041, 'require', undefined, true, true) : require = J$.R(615041, 'require', require, true, true)), false)(J$.T(615049, '../db', 21, false)), db, false, true);
                            }
                            return J$.Rt(615081, J$.R(615073, 'db', db, false, true));
                        } catch (J$e) {
                            J$.Ex(629625, J$e);
                        } finally {
                            if (J$.Fr(629633))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addUser(db, username, password, options, callback) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(616681, arguments.callee, this, arguments);
                            arguments = J$.N(616689, 'arguments', arguments, true, false, false);
                            db = J$.N(616697, 'db', db, true, false, false);
                            username = J$.N(616705, 'username', username, true, false, false);
                            password = J$.N(616713, 'password', password, true, false, false);
                            options = J$.N(616721, 'options', options, true, false, false);
                            callback = J$.N(616729, 'callback', callback, true, false, false);
                            J$.N(616737, 'Db', Db, false, false, false);
                            var Db = J$.W(615289, 'Db', J$.F(615281, J$.R(615273, 'loadDb', loadDb, false, true), false)(), Db, false, false);
                            if (J$.C(39176, J$.C(39168, J$.G(615305, J$.R(615297, 'db', db, false, false), 'serverConfig')) ? J$.M(615329, J$.G(615321, J$.R(615313, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(615377, J$.F(615369, J$.R(615337, 'callback', callback, false, false), false)(J$.F(615361, J$.R(615345, 'MongoError', MongoError, false, true), true)(J$.T(615353, 'topology was destroyed', 21, false))));
                            J$.F(616673, J$.R(615385, 'executeAuthCreateUserCommand', executeAuthCreateUserCommand, false, true), false)(J$.R(615393, 'db', db, false, false), J$.R(615401, 'username', username, false, false), J$.R(615409, 'password', password, false, false), J$.R(615417, 'options', options, false, false), J$.T(616665, function (err, r) {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(616593, arguments.callee, this, arguments);
                                            arguments = J$.N(616601, 'arguments', arguments, true, false, false);
                                            err = J$.N(616609, 'err', err, true, false, false);
                                            r = J$.N(616617, 'r', r, true, false, false);
                                            J$.N(616625, 'finalOptions', finalOptions, false, false, false);
                                            J$.N(616633, 'md5', md5, false, false, false);
                                            J$.N(616641, 'userPassword', userPassword, false, false, false);
                                            J$.N(616649, 'dbToUse', dbToUse, false, false, false);
                                            J$.N(616657, '_collection', _collection, false, false, false);
                                            if (J$.C(39240, J$.C(39184, J$.R(615425, 'err', err, false, false)) ? J$.B(38074, '===', J$.G(615441, J$.R(615433, 'err', err, false, false), 'code'), J$.U(38066, '-', J$.T(615449, 5000, 22, false))) : J$._())) {
                                                var finalOptions = J$.W(615529, 'finalOptions', J$.F(615521, J$.R(615457, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.M(615489, J$.I(typeof Object === 'undefined' ? Object = J$.R(615465, 'Object', undefined, true, true) : Object = J$.R(615465, 'Object', Object, true, true)), 'assign', false)(J$.T(615473, {}, 11, false), J$.R(615481, 'options', options, false, false)), J$.T(615505, { db: J$.R(615497, 'db', db, false, false) }, 11, false), J$.R(615513, 'options', options, false, false)), finalOptions, false, false);
                                                var md5 = J$.W(615561, 'md5', J$.M(615553, J$.R(615537, 'crypto', crypto, false, true), 'createHash', false)(J$.T(615545, 'md5', 21, false)), md5, false, false);
                                                J$.M(615601, J$.R(615569, 'md5', md5, false, false), 'update', false)(J$.B(38090, '+', J$.B(38082, '+', J$.R(615577, 'username', username, false, false), J$.T(615585, ':mongo:', 21, false)), J$.R(615593, 'password', password, false, false)));
                                                var userPassword = J$.W(615633, 'userPassword', J$.M(615625, J$.R(615609, 'md5', md5, false, false), 'digest', false)(J$.T(615617, 'hex', 21, false)), userPassword, false, false);
                                                var dbToUse = J$.W(615745, 'dbToUse', J$.C(39192, J$.G(615649, J$.R(615641, 'options', options, false, false), 'dbName')) ? J$.F(615729, J$.R(615657, 'Db', Db, false, false), true)(J$.G(615673, J$.R(615665, 'options', options, false, false), 'dbName'), J$.G(615697, J$.G(615689, J$.R(615681, 'db', db, false, false), 's'), 'topology'), J$.G(615721, J$.G(615713, J$.R(615705, 'db', db, false, false), 's'), 'options')) : J$.R(615737, 'db', db, false, false), dbToUse, false, false);
                                                var _collection = J$.W(615785, '_collection', J$.M(615777, J$.R(615753, 'dbToUse', dbToUse, false, false), 'collection', false)(J$.G(615769, J$.R(615761, 'CONSTANTS', CONSTANTS, false, true), 'SYSTEM_USER_COLLECTION')), _collection, false, false);
                                                J$.F(616489, J$.R(615793, 'count', count, false, true), false)(J$.R(615801, '_collection', _collection, false, false), J$.T(615809, {}, 11, false), J$.R(615817, 'finalOptions', finalOptions, false, false), J$.T(616481, function (err, count) {
                                                    jalangiLabel7:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(616441, arguments.callee, this, arguments);
                                                                arguments = J$.N(616449, 'arguments', arguments, true, false, false);
                                                                err = J$.N(616457, 'err', err, true, false, false);
                                                                count = J$.N(616465, 'count', count, true, false, false);
                                                                J$.N(616473, 'findOptions', findOptions, false, false, false);
                                                                if (J$.C(39200, J$.B(38098, '!=', J$.R(615825, 'err', err, false, false), J$.T(615833, null, 25, false))))
                                                                    return J$.Rt(615881, J$.F(615873, J$.R(615841, 'handleCallback', handleCallback, false, true), false)(J$.R(615849, 'callback', callback, false, false), J$.R(615857, 'err', err, false, false), J$.T(615865, null, 25, false)));
                                                                var findOptions = J$.W(615937, 'findOptions', J$.M(615929, J$.I(typeof Object === 'undefined' ? Object = J$.R(615889, 'Object', undefined, true, true) : Object = J$.R(615889, 'Object', Object, true, true)), 'assign', false)(J$.T(615913, { projection: J$.T(615905, { dbName: J$.T(615897, 1, 22, false) }, 11, false) }, 11, false), J$.R(615921, 'finalOptions', finalOptions, false, false)), findOptions, false, false);
                                                                J$.M(616433, J$.M(615977, J$.R(615945, '_collection', _collection, false, false), 'find', false)(J$.T(615961, { user: J$.R(615953, 'username', username, false, false) }, 11, false), J$.R(615969, 'findOptions', findOptions, false, false)), 'toArray', false)(J$.T(616425, function (err) {
                                                                    jalangiLabel6:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(616401, arguments.callee, this, arguments);
                                                                                arguments = J$.N(616409, 'arguments', arguments, true, false, false);
                                                                                err = J$.N(616417, 'err', err, true, false, false);
                                                                                if (J$.C(39208, J$.B(38106, '!=', J$.R(615985, 'err', err, false, false), J$.T(615993, null, 25, false))))
                                                                                    return J$.Rt(616041, J$.F(616033, J$.R(616001, 'handleCallback', handleCallback, false, true), false)(J$.R(616009, 'callback', callback, false, false), J$.R(616017, 'err', err, false, false), J$.T(616025, null, 25, false)));
                                                                                J$.P(616065, J$.R(616049, 'finalOptions', finalOptions, false, false), 'upsert', J$.T(616057, true, 23, false));
                                                                                J$.F(616393, J$.R(616073, 'updateOne', updateOne, false, true), false)(J$.R(616081, '_collection', _collection, false, false), J$.T(616097, { user: J$.R(616089, 'username', username, false, false) }, 11, false), J$.T(616129, {
                                                                                    $set: J$.T(616121, {
                                                                                        user: J$.R(616105, 'username', username, false, false),
                                                                                        pwd: J$.R(616113, 'userPassword', userPassword, false, false)
                                                                                    }, 11, false)
                                                                                }, 11, false), J$.R(616137, 'finalOptions', finalOptions, false, false), J$.T(616385, function (err) {
                                                                                    jalangiLabel5:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(616361, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(616369, 'arguments', arguments, true, false, false);
                                                                                                err = J$.N(616377, 'err', err, true, false, false);
                                                                                                if (J$.C(39224, J$.C(39216, J$.B(38114, '===', J$.R(616145, 'count', count, false, false), J$.T(616153, 0, 22, false))) ? J$.R(616161, 'err', err, false, false) : J$._()))
                                                                                                    return J$.Rt(616233, J$.F(616225, J$.R(616169, 'handleCallback', handleCallback, false, true), false)(J$.R(616177, 'callback', callback, false, false), J$.T(616185, null, 25, false), J$.T(616217, [J$.T(616209, {
                                                                                                            user: J$.R(616193, 'username', username, false, false),
                                                                                                            pwd: J$.R(616201, 'userPassword', userPassword, false, false)
                                                                                                        }, 11, false)], 10, false)));
                                                                                                if (J$.C(39232, J$.R(616241, 'err', err, false, false)))
                                                                                                    return J$.Rt(616289, J$.F(616281, J$.R(616249, 'handleCallback', handleCallback, false, true), false)(J$.R(616257, 'callback', callback, false, false), J$.R(616265, 'err', err, false, false), J$.T(616273, null, 25, false)));
                                                                                                J$.F(616353, J$.R(616297, 'handleCallback', handleCallback, false, true), false)(J$.R(616305, 'callback', callback, false, false), J$.T(616313, null, 25, false), J$.T(616345, [J$.T(616337, {
                                                                                                        user: J$.R(616321, 'username', username, false, false),
                                                                                                        pwd: J$.R(616329, 'userPassword', userPassword, false, false)
                                                                                                    }, 11, false)], 10, false));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(629641, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(629649))
                                                                                                    continue jalangiLabel5;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(629657, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(629665))
                                                                                    continue jalangiLabel6;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } catch (J$e) {
                                                                J$.Ex(629673, J$e);
                                                            } finally {
                                                                if (J$.Fr(629681))
                                                                    continue jalangiLabel7;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(616497, undefined);
                                            }
                                            if (J$.C(39248, J$.R(616505, 'err', err, false, false)))
                                                return J$.Rt(616545, J$.F(616537, J$.R(616513, 'handleCallback', handleCallback, false, true), false)(J$.R(616521, 'callback', callback, false, false), J$.R(616529, 'err', err, false, false)));
                                            J$.F(616585, J$.R(616553, 'handleCallback', handleCallback, false, true), false)(J$.R(616561, 'callback', callback, false, false), J$.R(616569, 'err', err, false, false), J$.R(616577, 'r', r, false, false));
                                        } catch (J$e) {
                                            J$.Ex(629689, J$e);
                                        } finally {
                                            if (J$.Fr(629697))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(629705, J$e);
                        } finally {
                            if (J$.Fr(629713))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function collections(db, options, callback) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(617289, arguments.callee, this, arguments);
                            arguments = J$.N(617297, 'arguments', arguments, true, false, false);
                            db = J$.N(617305, 'db', db, true, false, false);
                            options = J$.N(617313, 'options', options, true, false, false);
                            callback = J$.N(617321, 'callback', callback, true, false, false);
                            J$.N(617329, 'Collection', Collection, false, false, false);
                            var Collection = J$.W(616761, 'Collection', J$.F(616753, J$.R(616745, 'loadCollection', loadCollection, false, true), false)(), Collection, false, false);
                            options = J$.W(616817, 'options', J$.M(616809, J$.I(typeof Object === 'undefined' ? Object = J$.R(616769, 'Object', undefined, true, true) : Object = J$.R(616769, 'Object', Object, true, true)), 'assign', false)(J$.T(616777, {}, 11, false), J$.R(616785, 'options', options, false, false), J$.T(616801, { nameOnly: J$.T(616793, true, 23, false) }, 11, false)), options, false, false);
                            J$.M(617281, J$.M(616849, J$.R(616825, 'db', db, false, false), 'listCollections', false)(J$.T(616833, {}, 11, false), J$.R(616841, 'options', options, false, false)), 'toArray', false)(J$.T(617273, function (err, documents) {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(617241, arguments.callee, this, arguments);
                                            arguments = J$.N(617249, 'arguments', arguments, true, false, false);
                                            err = J$.N(617257, 'err', err, true, false, false);
                                            documents = J$.N(617265, 'documents', documents, true, false, false);
                                            if (J$.C(39256, J$.B(38122, '!=', J$.R(616857, 'err', err, false, false), J$.T(616865, null, 25, false))))
                                                return J$.Rt(616913, J$.F(616905, J$.R(616873, 'handleCallback', handleCallback, false, true), false)(J$.R(616881, 'callback', callback, false, false), J$.R(616889, 'err', err, false, false), J$.T(616897, null, 25, false)));
                                            documents = J$.W(617017, 'documents', J$.M(617009, J$.R(616921, 'documents', documents, false, false), 'filter', false)(J$.T(617001, function (doc) {
                                                jalangiLabel10:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(616977, arguments.callee, this, arguments);
                                                            arguments = J$.N(616985, 'arguments', arguments, true, false, false);
                                                            doc = J$.N(616993, 'doc', doc, true, false, false);
                                                            return J$.Rt(616969, J$.B(38138, '===', J$.M(616953, J$.G(616937, J$.R(616929, 'doc', doc, false, false), 'name'), 'indexOf', false)(J$.T(616945, '$', 21, false)), J$.U(38130, '-', J$.T(616961, 1, 22, false))));
                                                        } catch (J$e) {
                                                            J$.Ex(629721, J$e);
                                                        } finally {
                                                            if (J$.Fr(629729))
                                                                continue jalangiLabel10;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), documents, false, false);
                                            J$.F(617233, J$.R(617025, 'handleCallback', handleCallback, false, true), false)(J$.R(617033, 'callback', callback, false, false), J$.T(617041, null, 25, false), J$.M(617225, J$.R(617049, 'documents', documents, false, false), 'map', false)(J$.T(617217, function (d) {
                                                jalangiLabel11:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(617193, arguments.callee, this, arguments);
                                                            arguments = J$.N(617201, 'arguments', arguments, true, false, false);
                                                            d = J$.N(617209, 'd', d, true, false, false);
                                                            return J$.Rt(617185, J$.F(617177, J$.R(617057, 'Collection', Collection, false, false), true)(J$.R(617065, 'db', db, false, false), J$.G(617089, J$.G(617081, J$.R(617073, 'db', db, false, false), 's'), 'topology'), J$.G(617105, J$.R(617097, 'db', db, false, false), 'databaseName'), J$.G(617121, J$.R(617113, 'd', d, false, false), 'name'), J$.G(617145, J$.G(617137, J$.R(617129, 'db', db, false, false), 's'), 'pkFactory'), J$.G(617169, J$.G(617161, J$.R(617153, 'db', db, false, false), 's'), 'options')));
                                                        } catch (J$e) {
                                                            J$.Ex(629737, J$e);
                                                        } finally {
                                                            if (J$.Fr(629745))
                                                                continue jalangiLabel11;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(629753, J$e);
                                        } finally {
                                            if (J$.Fr(629761))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(629769, J$e);
                        } finally {
                            if (J$.Fr(629777))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createIndex(db, name, fieldOrSpec, options, callback) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(618489, arguments.callee, this, arguments);
                            arguments = J$.N(618497, 'arguments', arguments, true, false, false);
                            db = J$.N(618505, 'db', db, true, false, false);
                            name = J$.N(618513, 'name', name, true, false, false);
                            fieldOrSpec = J$.N(618521, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(618529, 'options', options, true, false, false);
                            callback = J$.N(618537, 'callback', callback, true, false, false);
                            J$.N(618545, 'finalOptions', finalOptions, false, false, false);
                            var finalOptions = J$.W(617393, 'finalOptions', J$.M(617385, J$.I(typeof Object === 'undefined' ? Object = J$.R(617337, 'Object', undefined, true, true) : Object = J$.R(617337, 'Object', Object, true, true)), 'assign', false)(J$.T(617345, {}, 11, false), J$.T(617369, { readPreference: J$.G(617361, J$.R(617353, 'ReadPreference', ReadPreference, false, true), 'PRIMARY') }, 11, false), J$.R(617377, 'options', options, false, false)), finalOptions, false, false);
                            finalOptions = J$.W(617449, 'finalOptions', J$.F(617441, J$.R(617401, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.R(617409, 'finalOptions', finalOptions, false, false), J$.T(617425, { db: J$.R(617417, 'db', db, false, false) }, 11, false), J$.R(617433, 'options', options, false, false)), finalOptions, false, false);
                            if (J$.C(39272, J$.C(39264, J$.G(617465, J$.R(617457, 'finalOptions', finalOptions, false, false), 'writeConcern')) ? J$.B(38154, '!==', J$.U(38146, 'typeof', J$.R(617473, 'callback', callback, false, false)), J$.T(617481, 'function', 21, false)) : J$._())) {
                                throw J$.M(617521, J$.R(617489, 'MongoError', MongoError, false, true), 'create', false)(J$.T(617513, {
                                    message: J$.T(617497, 'Cannot use a writeConcern without a provided callback', 21, false),
                                    driver: J$.T(617505, true, 23, false)
                                }, 11, false));
                            }
                            if (J$.C(39288, J$.C(39280, J$.G(617537, J$.R(617529, 'db', db, false, false), 'serverConfig')) ? J$.M(617561, J$.G(617553, J$.R(617545, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(617609, J$.F(617601, J$.R(617569, 'callback', callback, false, false), false)(J$.F(617593, J$.R(617577, 'MongoError', MongoError, false, true), true)(J$.T(617585, 'topology was destroyed', 21, false))));
                            J$.F(618481, J$.R(617617, 'createIndexUsingCreateIndexes', createIndexUsingCreateIndexes, false, true), false)(J$.R(617625, 'db', db, false, false), J$.R(617633, 'name', name, false, false), J$.R(617641, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(617649, 'finalOptions', finalOptions, false, false), J$.T(618473, function (err, result) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(618433, arguments.callee, this, arguments);
                                            arguments = J$.N(618441, 'arguments', arguments, true, false, false);
                                            err = J$.N(618449, 'err', err, true, false, false);
                                            result = J$.N(618457, 'result', result, true, false, false);
                                            J$.N(618465, 'doc', doc, false, false, false);
                                            if (J$.C(39296, J$.B(38162, '==', J$.R(617657, 'err', err, false, false), J$.T(617665, null, 25, false))))
                                                return J$.Rt(617713, J$.F(617705, J$.R(617673, 'handleCallback', handleCallback, false, true), false)(J$.R(617681, 'callback', callback, false, false), J$.R(617689, 'err', err, false, false), J$.R(617697, 'result', result, false, false)));
                                            if (J$.C(39344, J$.C(39336, J$.C(39328, J$.C(39320, J$.C(39312, J$.C(39304, J$.B(38170, '===', J$.G(617729, J$.R(617721, 'err', err, false, false), 'code'), J$.T(617737, 67, 22, false))) ? J$._() : J$.B(38178, '===', J$.G(617753, J$.R(617745, 'err', err, false, false), 'code'), J$.T(617761, 11000, 22, false))) ? J$._() : J$.B(38186, '===', J$.G(617777, J$.R(617769, 'err', err, false, false), 'code'), J$.T(617785, 85, 22, false))) ? J$._() : J$.B(38194, '===', J$.G(617801, J$.R(617793, 'err', err, false, false), 'code'), J$.T(617809, 86, 22, false))) ? J$._() : J$.B(38202, '===', J$.G(617825, J$.R(617817, 'err', err, false, false), 'code'), J$.T(617833, 11600, 22, false))) ? J$._() : J$.B(38210, '===', J$.G(617849, J$.R(617841, 'err', err, false, false), 'code'), J$.T(617857, 197, 22, false)))) {
                                                return J$.Rt(617905, J$.F(617897, J$.R(617865, 'handleCallback', handleCallback, false, true), false)(J$.R(617873, 'callback', callback, false, false), J$.R(617881, 'err', err, false, false), J$.R(617889, 'result', result, false, false)));
                                            }
                                            var doc = J$.W(617961, 'doc', J$.F(617953, J$.R(617913, 'createCreateIndexCommand', createCreateIndexCommand, false, true), false)(J$.R(617921, 'db', db, false, false), J$.R(617929, 'name', name, false, false), J$.R(617937, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(617945, 'options', options, false, false)), doc, false, false);
                                            J$.P(617985, J$.R(617969, 'finalOptions', finalOptions, false, false), 'checkKeys', J$.T(617977, false, 23, false));
                                            J$.M(618425, J$.G(618009, J$.G(618001, J$.R(617993, 'db', db, false, false), 's'), 'topology'), 'insert', false)(J$.M(618057, J$.G(618033, J$.G(618025, J$.R(618017, 'db', db, false, false), 's'), 'namespace'), 'withCollection', false)(J$.G(618049, J$.R(618041, 'CONSTANTS', CONSTANTS, false, true), 'SYSTEM_INDEX_COLLECTION')), J$.R(618065, 'doc', doc, false, false), J$.R(618073, 'finalOptions', finalOptions, false, false), J$.T(618417, function (err, result) {
                                                jalangiLabel14:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(618385, arguments.callee, this, arguments);
                                                            arguments = J$.N(618393, 'arguments', arguments, true, false, false);
                                                            err = J$.N(618401, 'err', err, true, false, false);
                                                            result = J$.N(618409, 'result', result, true, false, false);
                                                            if (J$.C(39352, J$.B(38218, '==', J$.R(618081, 'callback', callback, false, false), J$.T(618089, null, 25, false))))
                                                                return J$.Rt(618097, undefined);
                                                            if (J$.C(39360, J$.R(618105, 'err', err, false, false)))
                                                                return J$.Rt(618145, J$.F(618137, J$.R(618113, 'handleCallback', handleCallback, false, true), false)(J$.R(618121, 'callback', callback, false, false), J$.R(618129, 'err', err, false, false)));
                                                            if (J$.C(39368, J$.B(38226, '==', J$.R(618153, 'result', result, false, false), J$.T(618161, null, 25, false))))
                                                                return J$.Rt(618209, J$.F(618201, J$.R(618169, 'handleCallback', handleCallback, false, true), false)(J$.R(618177, 'callback', callback, false, false), J$.T(618185, null, 25, false), J$.T(618193, null, 25, false)));
                                                            if (J$.C(39376, J$.G(618233, J$.G(618225, J$.R(618217, 'result', result, false, false), 'result'), 'writeErrors')))
                                                                return J$.Rt(618329, J$.F(618321, J$.R(618241, 'handleCallback', handleCallback, false, true), false)(J$.R(618249, 'callback', callback, false, false), J$.M(618305, J$.R(618257, 'MongoError', MongoError, false, true), 'create', false)(J$.G(618297, J$.G(618281, J$.G(618273, J$.R(618265, 'result', result, false, false), 'result'), 'writeErrors'), J$.T(618289, 0, 22, false))), J$.T(618313, null, 25, false)));
                                                            J$.F(618377, J$.R(618337, 'handleCallback', handleCallback, false, true), false)(J$.R(618345, 'callback', callback, false, false), J$.T(618353, null, 25, false), J$.G(618369, J$.R(618361, 'doc', doc, false, false), 'name'));
                                                        } catch (J$e) {
                                                            J$.Ex(629785, J$e);
                                                        } finally {
                                                            if (J$.Fr(629793))
                                                                continue jalangiLabel14;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(629801, J$e);
                                        } finally {
                                            if (J$.Fr(629809))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(629817, J$e);
                        } finally {
                            if (J$.Fr(629825))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createListener(db, e, object) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(618857, arguments.callee, this, arguments);
                            function listener(err) {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(618809, arguments.callee, this, arguments);
                                            arguments = J$.N(618817, 'arguments', arguments, true, false, false);
                                            err = J$.N(618825, 'err', err, true, false, false);
                                            J$.N(618833, 'i', i, false, false, false);
                                            if (J$.C(39392, J$.B(38234, '>', J$.G(618577, J$.M(618569, J$.R(618553, 'object', object, false, false), 'listeners', false)(J$.R(618561, 'e', e, false, false)), 'length'), J$.T(618585, 0, 22, false)))) {
                                                J$.M(618625, J$.R(618593, 'object', object, false, false), 'emit', false)(J$.R(618601, 'e', e, false, false), J$.R(618609, 'err', err, false, false), J$.R(618617, 'db', db, false, false));
                                                for (var i = J$.W(618641, 'i', J$.T(618633, 0, 22, false), i, false, false); J$.C(39384, J$.B(38242, '<', J$.R(618649, 'i', i, false, false), J$.G(618681, J$.G(618673, J$.G(618665, J$.R(618657, 'db', db, false, false), 's'), 'children'), 'length'))); J$.B(38266, '-', i = J$.W(618697, 'i', J$.B(38258, '+', J$.U(38250, '+', J$.R(618689, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                    J$.M(618801, J$.G(618737, J$.G(618721, J$.G(618713, J$.R(618705, 'db', db, false, false), 's'), 'children'), J$.R(618729, 'i', i, false, false)), 'emit', false)(J$.R(618745, 'e', e, false, false), J$.R(618753, 'err', err, false, false), J$.G(618793, J$.G(618777, J$.G(618769, J$.R(618761, 'db', db, false, false), 's'), 'children'), J$.R(618785, 'i', i, false, false)));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(629833, J$e);
                                        } finally {
                                            if (J$.Fr(629841))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(618865, 'arguments', arguments, true, false, false);
                            db = J$.N(618873, 'db', db, true, false, false);
                            e = J$.N(618881, 'e', e, true, false, false);
                            object = J$.N(618889, 'object', object, true, false, false);
                            listener = J$.N(618905, 'listener', J$.T(618897, listener, 12, false), true, false, false);
                            return J$.Rt(618849, J$.R(618841, 'listener', listener, false, false));
                        } catch (J$e) {
                            J$.Ex(629849, J$e);
                        } finally {
                            if (J$.Fr(629857))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function dropCollection(db, name, options, callback) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(619233, arguments.callee, this, arguments);
                            arguments = J$.N(619241, 'arguments', arguments, true, false, false);
                            db = J$.N(619249, 'db', db, true, false, false);
                            name = J$.N(619257, 'name', name, true, false, false);
                            options = J$.N(619265, 'options', options, true, false, false);
                            callback = J$.N(619273, 'callback', callback, true, false, false);
                            J$.F(619225, J$.R(618913, 'executeCommand', executeCommand, false, true), false)(J$.R(618921, 'db', db, false, false), J$.R(618929, 'name', name, false, false), J$.R(618937, 'options', options, false, false), J$.T(619217, function (err, result) {
                                jalangiLabel19:
                                    while (true) {
                                        try {
                                            J$.Fe(619185, arguments.callee, this, arguments);
                                            arguments = J$.N(619193, 'arguments', arguments, true, false, false);
                                            err = J$.N(619201, 'err', err, true, false, false);
                                            result = J$.N(619209, 'result', result, true, false, false);
                                            if (J$.C(39408, J$.C(39400, J$.G(618953, J$.R(618945, 'db', db, false, false), 'serverConfig')) ? J$.M(618977, J$.G(618969, J$.R(618961, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._())) {
                                                return J$.Rt(619025, J$.F(619017, J$.R(618985, 'callback', callback, false, false), false)(J$.F(619009, J$.R(618993, 'MongoError', MongoError, false, true), true)(J$.T(619001, 'topology was destroyed', 21, false))));
                                            }
                                            if (J$.C(39416, J$.R(619033, 'err', err, false, false)))
                                                return J$.Rt(619073, J$.F(619065, J$.R(619041, 'handleCallback', handleCallback, false, true), false)(J$.R(619049, 'callback', callback, false, false), J$.R(619057, 'err', err, false, false)));
                                            if (J$.C(39424, J$.G(619089, J$.R(619081, 'result', result, false, false), 'ok')))
                                                return J$.Rt(619137, J$.F(619129, J$.R(619097, 'handleCallback', handleCallback, false, true), false)(J$.R(619105, 'callback', callback, false, false), J$.T(619113, null, 25, false), J$.T(619121, true, 23, false)));
                                            J$.F(619177, J$.R(619145, 'handleCallback', handleCallback, false, true), false)(J$.R(619153, 'callback', callback, false, false), J$.T(619161, null, 25, false), J$.T(619169, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(629865, J$e);
                                        } finally {
                                            if (J$.Fr(629873))
                                                continue jalangiLabel19;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(629881, J$e);
                        } finally {
                            if (J$.Fr(629889))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function dropDatabase(db, cmd, options, callback) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(619593, arguments.callee, this, arguments);
                            arguments = J$.N(619601, 'arguments', arguments, true, false, false);
                            db = J$.N(619609, 'db', db, true, false, false);
                            cmd = J$.N(619617, 'cmd', cmd, true, false, false);
                            options = J$.N(619625, 'options', options, true, false, false);
                            callback = J$.N(619633, 'callback', callback, true, false, false);
                            J$.F(619585, J$.R(619281, 'executeCommand', executeCommand, false, true), false)(J$.R(619289, 'db', db, false, false), J$.R(619297, 'cmd', cmd, false, false), J$.R(619305, 'options', options, false, false), J$.T(619577, function (err, result) {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(619545, arguments.callee, this, arguments);
                                            arguments = J$.N(619553, 'arguments', arguments, true, false, false);
                                            err = J$.N(619561, 'err', err, true, false, false);
                                            result = J$.N(619569, 'result', result, true, false, false);
                                            if (J$.C(39440, J$.C(39432, J$.G(619321, J$.R(619313, 'db', db, false, false), 'serverConfig')) ? J$.M(619345, J$.G(619337, J$.R(619329, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._())) {
                                                return J$.Rt(619393, J$.F(619385, J$.R(619353, 'callback', callback, false, false), false)(J$.F(619377, J$.R(619361, 'MongoError', MongoError, false, true), true)(J$.T(619369, 'topology was destroyed', 21, false))));
                                            }
                                            if (J$.C(39448, J$.B(38274, '==', J$.R(619401, 'callback', callback, false, false), J$.T(619409, null, 25, false))))
                                                return J$.Rt(619417, undefined);
                                            if (J$.C(39456, J$.R(619425, 'err', err, false, false)))
                                                return J$.Rt(619473, J$.F(619465, J$.R(619433, 'handleCallback', handleCallback, false, true), false)(J$.R(619441, 'callback', callback, false, false), J$.R(619449, 'err', err, false, false), J$.T(619457, null, 25, false)));
                                            J$.F(619537, J$.R(619481, 'handleCallback', handleCallback, false, true), false)(J$.R(619489, 'callback', callback, false, false), J$.T(619497, null, 25, false), J$.C(39464, J$.G(619513, J$.R(619505, 'result', result, false, false), 'ok')) ? J$.T(619521, true, 23, false) : J$.T(619529, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(629897, J$e);
                                        } finally {
                                            if (J$.Fr(629905))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(629913, J$e);
                        } finally {
                            if (J$.Fr(629921))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ensureIndex(db, name, fieldOrSpec, options, callback) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(620225, arguments.callee, this, arguments);
                            arguments = J$.N(620233, 'arguments', arguments, true, false, false);
                            db = J$.N(620241, 'db', db, true, false, false);
                            name = J$.N(620249, 'name', name, true, false, false);
                            fieldOrSpec = J$.N(620257, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(620265, 'options', options, true, false, false);
                            callback = J$.N(620273, 'callback', callback, true, false, false);
                            J$.N(620281, 'finalOptions', finalOptions, false, false, false);
                            J$.N(620289, 'selector', selector, false, false, false);
                            J$.N(620297, 'index_name', index_name, false, false, false);
                            var finalOptions = J$.W(619689, 'finalOptions', J$.F(619681, J$.R(619641, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.T(619649, {}, 11, false), J$.T(619665, { db: J$.R(619657, 'db', db, false, false) }, 11, false), J$.R(619673, 'options', options, false, false)), finalOptions, false, false);
                            var selector = J$.W(619745, 'selector', J$.F(619737, J$.R(619697, 'createCreateIndexCommand', createCreateIndexCommand, false, true), false)(J$.R(619705, 'db', db, false, false), J$.R(619713, 'name', name, false, false), J$.R(619721, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(619729, 'options', options, false, false)), selector, false, false);
                            var index_name = J$.W(619769, 'index_name', J$.G(619761, J$.R(619753, 'selector', selector, false, false), 'name'), index_name, false, false);
                            if (J$.C(39480, J$.C(39472, J$.G(619785, J$.R(619777, 'db', db, false, false), 'serverConfig')) ? J$.M(619809, J$.G(619801, J$.R(619793, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(619857, J$.F(619849, J$.R(619817, 'callback', callback, false, false), false)(J$.F(619841, J$.R(619825, 'MongoError', MongoError, false, true), true)(J$.T(619833, 'topology was destroyed', 21, false))));
                            J$.P(619889, J$.R(619865, 'finalOptions', finalOptions, false, false), 'readPreference', J$.G(619881, J$.R(619873, 'ReadPreference', ReadPreference, false, true), 'PRIMARY'));
                            J$.F(620217, J$.R(619897, 'indexInformation', indexInformation, false, true), false)(J$.R(619905, 'db', db, false, false), J$.R(619913, 'name', name, false, false), J$.R(619921, 'finalOptions', finalOptions, false, false), J$.T(620209, function (err, indexInformation) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(620177, arguments.callee, this, arguments);
                                            arguments = J$.N(620185, 'arguments', arguments, true, false, false);
                                            err = J$.N(620193, 'err', err, true, false, false);
                                            indexInformation = J$.N(620201, 'indexInformation', indexInformation, true, false, false);
                                            if (J$.C(39496, J$.C(39488, J$.B(38282, '!=', J$.R(619929, 'err', err, false, false), J$.T(619937, null, 25, false))) ? J$.B(38290, '!==', J$.G(619953, J$.R(619945, 'err', err, false, false), 'code'), J$.T(619961, 26, 22, false)) : J$._()))
                                                return J$.Rt(620009, J$.F(620001, J$.R(619969, 'handleCallback', handleCallback, false, true), false)(J$.R(619977, 'callback', callback, false, false), J$.R(619985, 'err', err, false, false), J$.T(619993, null, 25, false)));
                                            if (J$.C(39520, J$.C(39504, J$.B(38298, '==', J$.R(620017, 'indexInformation', indexInformation, false, false), J$.T(620025, null, 25, false))) ? J$._() : J$.U(38306, '!', J$.G(620049, J$.R(620033, 'indexInformation', indexInformation, false, false), J$.R(620041, 'index_name', index_name, false, false))))) {
                                                J$.F(620105, J$.R(620057, 'createIndex', createIndex, false, true), false)(J$.R(620065, 'db', db, false, false), J$.R(620073, 'name', name, false, false), J$.R(620081, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(620089, 'options', options, false, false), J$.R(620097, 'callback', callback, false, false));
                                            } else {
                                                if (J$.C(39512, J$.B(38322, '===', J$.U(38314, 'typeof', J$.R(620113, 'callback', callback, false, false)), J$.T(620121, 'function', 21, false))))
                                                    return J$.Rt(620169, J$.F(620161, J$.R(620129, 'handleCallback', handleCallback, false, true), false)(J$.R(620137, 'callback', callback, false, false), J$.T(620145, null, 25, false), J$.R(620153, 'index_name', index_name, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(629929, J$e);
                                        } finally {
                                            if (J$.Fr(629937))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(629945, J$e);
                        } finally {
                            if (J$.Fr(629953))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function evaluate(db, code, parameters, options, callback) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(621169, arguments.callee, this, arguments);
                            arguments = J$.N(621177, 'arguments', arguments, true, false, false);
                            db = J$.N(621185, 'db', db, true, false, false);
                            code = J$.N(621193, 'code', code, true, false, false);
                            parameters = J$.N(621201, 'parameters', parameters, true, false, false);
                            options = J$.N(621209, 'options', options, true, false, false);
                            callback = J$.N(621217, 'callback', callback, true, false, false);
                            J$.N(621225, 'finalCode', finalCode, false, false, false);
                            J$.N(621233, 'finalParameters', finalParameters, false, false, false);
                            J$.N(621241, 'cmd', cmd, false, false, false);
                            var finalCode = J$.W(620313, 'finalCode', J$.R(620305, 'code', code, false, false), finalCode, false, false);
                            var finalParameters = J$.W(620329, 'finalParameters', J$.T(620321, [], 10, false), finalParameters, false, false);
                            if (J$.C(39536, J$.C(39528, J$.G(620345, J$.R(620337, 'db', db, false, false), 'serverConfig')) ? J$.M(620369, J$.G(620361, J$.R(620353, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(620417, J$.F(620409, J$.R(620377, 'callback', callback, false, false), false)(J$.F(620401, J$.R(620385, 'MongoError', MongoError, false, true), true)(J$.T(620393, 'topology was destroyed', 21, false))));
                            if (J$.C(39552, J$.U(38338, '!', J$.C(39544, J$.R(620425, 'finalCode', finalCode, false, false)) ? J$.B(38330, '===', J$.G(620441, J$.R(620433, 'finalCode', finalCode, false, false), '_bsontype'), J$.T(620449, 'Code', 21, false)) : J$._())))
                                finalCode = J$.W(620481, 'finalCode', J$.F(620473, J$.R(620457, 'Code', Code, false, true), true)(J$.R(620465, 'finalCode', finalCode, false, false)), finalCode, false, false);
                            if (J$.C(39600, J$.C(39568, J$.C(39560, J$.B(38346, '!=', J$.R(620489, 'parameters', parameters, false, false), J$.T(620497, null, 25, false))) ? J$.U(38354, '!', J$.M(620521, J$.I(typeof Array === 'undefined' ? Array = J$.R(620505, 'Array', undefined, true, true) : Array = J$.R(620505, 'Array', Array, true, true)), 'isArray', false)(J$.R(620513, 'parameters', parameters, false, false))) : J$._()) ? J$.B(38370, '!==', J$.U(38362, 'typeof', J$.R(620529, 'parameters', parameters, false, false)), J$.T(620537, 'function', 21, false)) : J$._())) {
                                finalParameters = J$.W(620561, 'finalParameters', J$.T(620553, [J$.R(620545, 'parameters', parameters, false, false)], 10, false), finalParameters, false, false);
                            } else if (J$.C(39592, J$.C(39584, J$.C(39576, J$.B(38378, '!=', J$.R(620569, 'parameters', parameters, false, false), J$.T(620577, null, 25, false))) ? J$.M(620601, J$.I(typeof Array === 'undefined' ? Array = J$.R(620585, 'Array', undefined, true, true) : Array = J$.R(620585, 'Array', Array, true, true)), 'isArray', false)(J$.R(620593, 'parameters', parameters, false, false)) : J$._()) ? J$.B(38394, '!==', J$.U(38386, 'typeof', J$.R(620609, 'parameters', parameters, false, false)), J$.T(620617, 'function', 21, false)) : J$._())) {
                                finalParameters = J$.W(620633, 'finalParameters', J$.R(620625, 'parameters', parameters, false, false), finalParameters, false, false);
                            }
                            var cmd = J$.W(620665, 'cmd', J$.T(620657, {
                                $eval: J$.R(620641, 'finalCode', finalCode, false, false),
                                args: J$.R(620649, 'finalParameters', finalParameters, false, false)
                            }, 11, false), cmd, false, false);
                            if (J$.C(39608, J$.G(620689, J$.R(620673, 'options', options, false, false), J$.T(620681, 'nolock', 21, false)))) {
                                J$.P(620737, J$.R(620697, 'cmd', cmd, false, false), J$.T(620705, 'nolock', 21, false), J$.G(620729, J$.R(620713, 'options', options, false, false), J$.T(620721, 'nolock', 21, false)));
                            }
                            J$.P(620785, J$.R(620745, 'options', options, false, false), 'readPreference', J$.F(620777, J$.R(620753, 'ReadPreference', ReadPreference, false, true), true)(J$.G(620769, J$.R(620761, 'ReadPreference', ReadPreference, false, true), 'PRIMARY')));
                            J$.F(621161, J$.R(620793, 'executeCommand', executeCommand, false, true), false)(J$.R(620801, 'db', db, false, false), J$.R(620809, 'cmd', cmd, false, false), J$.R(620817, 'options', options, false, false), J$.T(621153, function (err, result) {
                                jalangiLabel25:
                                    while (true) {
                                        try {
                                            J$.Fe(621121, arguments.callee, this, arguments);
                                            arguments = J$.N(621129, 'arguments', arguments, true, false, false);
                                            err = J$.N(621137, 'err', err, true, false, false);
                                            result = J$.N(621145, 'result', result, true, false, false);
                                            if (J$.C(39616, J$.R(620825, 'err', err, false, false)))
                                                return J$.Rt(620873, J$.F(620865, J$.R(620833, 'handleCallback', handleCallback, false, true), false)(J$.R(620841, 'callback', callback, false, false), J$.R(620849, 'err', err, false, false), J$.T(620857, null, 25, false)));
                                            if (J$.C(39632, J$.C(39624, J$.R(620881, 'result', result, false, false)) ? J$.B(38402, '===', J$.G(620897, J$.R(620889, 'result', result, false, false), 'ok'), J$.T(620905, 1, 22, false)) : J$._()))
                                                return J$.Rt(620961, J$.F(620953, J$.R(620913, 'handleCallback', handleCallback, false, true), false)(J$.R(620921, 'callback', callback, false, false), J$.T(620929, null, 25, false), J$.G(620945, J$.R(620937, 'result', result, false, false), 'retval')));
                                            if (J$.C(39640, J$.R(620969, 'result', result, false, false)))
                                                return J$.Rt(621073, J$.F(621065, J$.R(620977, 'handleCallback', handleCallback, false, true), false)(J$.R(620985, 'callback', callback, false, false), J$.M(621049, J$.R(620993, 'MongoError', MongoError, false, true), 'create', false)(J$.T(621041, {
                                                    message: J$.M(621025, J$.T(621001, 'eval failed: ', 21, false), 'concat', false)(J$.G(621017, J$.R(621009, 'result', result, false, false), 'errmsg')),
                                                    driver: J$.T(621033, true, 23, false)
                                                }, 11, false)), J$.T(621057, null, 25, false)));
                                            J$.F(621113, J$.R(621081, 'handleCallback', handleCallback, false, true), false)(J$.R(621089, 'callback', callback, false, false), J$.R(621097, 'err', err, false, false), J$.R(621105, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(629961, J$e);
                                        } finally {
                                            if (J$.Fr(629969))
                                                continue jalangiLabel25;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(629977, J$e);
                        } finally {
                            if (J$.Fr(629985))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeCommand(db, command, options, callback) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(621929, arguments.callee, this, arguments);
                            arguments = J$.N(621937, 'arguments', arguments, true, false, false);
                            db = J$.N(621945, 'db', db, true, false, false);
                            command = J$.N(621953, 'command', command, true, false, false);
                            options = J$.N(621961, 'options', options, true, false, false);
                            callback = J$.N(621969, 'callback', callback, true, false, false);
                            J$.N(621977, 'dbName', dbName, false, false, false);
                            if (J$.C(39656, J$.C(39648, J$.G(621257, J$.R(621249, 'db', db, false, false), 'serverConfig')) ? J$.M(621281, J$.G(621273, J$.R(621265, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(621329, J$.F(621321, J$.R(621289, 'callback', callback, false, false), false)(J$.F(621313, J$.R(621297, 'MongoError', MongoError, false, true), true)(J$.T(621305, 'topology was destroyed', 21, false))));
                            var dbName = J$.W(621385, 'dbName', J$.C(39672, J$.C(39664, J$.G(621345, J$.R(621337, 'options', options, false, false), 'dbName')) ? J$._() : J$.G(621361, J$.R(621353, 'options', options, false, false), 'authdb')) ? J$._() : J$.G(621377, J$.R(621369, 'db', db, false, false), 'databaseName'), dbName, false, false);
                            J$.P(621433, J$.R(621393, 'options', options, false, false), 'readPreference', J$.F(621425, J$.R(621401, 'resolveReadPreference', resolveReadPreference, false, true), false)(J$.R(621409, 'db', db, false, false), J$.R(621417, 'options', options, false, false)));
                            if (J$.C(39680, J$.M(621465, J$.G(621457, J$.G(621449, J$.R(621441, 'db', db, false, false), 's'), 'logger'), 'isDebug', false)()))
                                J$.M(621633, J$.G(621489, J$.G(621481, J$.R(621473, 'db', db, false, false), 's'), 'logger'), 'debug', false)(J$.M(621625, J$.M(621561, J$.M(621537, J$.T(621497, 'executing command ', 21, false), 'concat', false)(J$.M(621521, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(621505, 'JSON', undefined, true, true) : JSON = J$.R(621505, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(621513, 'command', command, false, false)), J$.T(621529, ' against ', 21, false)), 'concat', false)(J$.R(621545, 'dbName', dbName, false, false), J$.T(621553, '.$cmd with options [', 21, false)), 'concat', false)(J$.M(621609, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(621569, 'JSON', undefined, true, true) : JSON = J$.R(621569, 'JSON', JSON, true, true)), 'stringify', false)(J$.F(621601, J$.R(621577, 'debugOptions', debugOptions, false, true), false)(J$.R(621585, 'debugFields', debugFields, false, true), J$.R(621593, 'options', options, false, false))), J$.T(621617, ']', 21, false)));
                            J$.M(621921, J$.G(621657, J$.G(621649, J$.R(621641, 'db', db, false, false), 's'), 'topology'), 'command', false)(J$.M(621697, J$.G(621681, J$.G(621673, J$.R(621665, 'db', db, false, false), 's'), 'namespace'), 'withCollection', false)(J$.T(621689, '$cmd', 21, false)), J$.R(621705, 'command', command, false, false), J$.R(621713, 'options', options, false, false), J$.T(621913, function (err, result) {
                                jalangiLabel27:
                                    while (true) {
                                        try {
                                            J$.Fe(621881, arguments.callee, this, arguments);
                                            arguments = J$.N(621889, 'arguments', arguments, true, false, false);
                                            err = J$.N(621897, 'err', err, true, false, false);
                                            result = J$.N(621905, 'result', result, true, false, false);
                                            if (J$.C(39688, J$.R(621721, 'err', err, false, false)))
                                                return J$.Rt(621761, J$.F(621753, J$.R(621729, 'handleCallback', handleCallback, false, true), false)(J$.R(621737, 'callback', callback, false, false), J$.R(621745, 'err', err, false, false)));
                                            if (J$.C(39696, J$.G(621777, J$.R(621769, 'options', options, false, false), 'full')))
                                                return J$.Rt(621825, J$.F(621817, J$.R(621785, 'handleCallback', handleCallback, false, true), false)(J$.R(621793, 'callback', callback, false, false), J$.T(621801, null, 25, false), J$.R(621809, 'result', result, false, false)));
                                            J$.F(621873, J$.R(621833, 'handleCallback', handleCallback, false, true), false)(J$.R(621841, 'callback', callback, false, false), J$.T(621849, null, 25, false), J$.G(621865, J$.R(621857, 'result', result, false, false), 'result'));
                                        } catch (J$e) {
                                            J$.Ex(629993, J$e);
                                        } finally {
                                            if (J$.Fr(630001))
                                                continue jalangiLabel27;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(630009, J$e);
                        } finally {
                            if (J$.Fr(630017))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeDbAdminCommand(db, command, options, callback) {
                jalangiLabel30:
                    while (true) {
                        try {
                            J$.Fe(622305, arguments.callee, this, arguments);
                            arguments = J$.N(622313, 'arguments', arguments, true, false, false);
                            db = J$.N(622321, 'db', db, true, false, false);
                            command = J$.N(622329, 'command', command, true, false, false);
                            options = J$.N(622337, 'options', options, true, false, false);
                            callback = J$.N(622345, 'callback', callback, true, false, false);
                            J$.N(622353, 'namespace', namespace, false, false, false);
                            var namespace = J$.W(622017, 'namespace', J$.F(622009, J$.R(621985, 'MongoDBNamespace', MongoDBNamespace, false, true), true)(J$.T(621993, 'admin', 21, false), J$.T(622001, '$cmd', 21, false)), namespace, false, false);
                            J$.M(622297, J$.G(622041, J$.G(622033, J$.R(622025, 'db', db, false, false), 's'), 'topology'), 'command', false)(J$.R(622049, 'namespace', namespace, false, false), J$.R(622057, 'command', command, false, false), J$.R(622065, 'options', options, false, false), J$.T(622289, function (err, result) {
                                jalangiLabel29:
                                    while (true) {
                                        try {
                                            J$.Fe(622257, arguments.callee, this, arguments);
                                            arguments = J$.N(622265, 'arguments', arguments, true, false, false);
                                            err = J$.N(622273, 'err', err, true, false, false);
                                            result = J$.N(622281, 'result', result, true, false, false);
                                            if (J$.C(39712, J$.C(39704, J$.G(622081, J$.R(622073, 'db', db, false, false), 'serverConfig')) ? J$.M(622105, J$.G(622097, J$.R(622089, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._())) {
                                                return J$.Rt(622153, J$.F(622145, J$.R(622113, 'callback', callback, false, false), false)(J$.F(622137, J$.R(622121, 'MongoError', MongoError, false, true), true)(J$.T(622129, 'topology was destroyed', 21, false))));
                                            }
                                            if (J$.C(39720, J$.R(622161, 'err', err, false, false)))
                                                return J$.Rt(622201, J$.F(622193, J$.R(622169, 'handleCallback', handleCallback, false, true), false)(J$.R(622177, 'callback', callback, false, false), J$.R(622185, 'err', err, false, false)));
                                            J$.F(622249, J$.R(622209, 'handleCallback', handleCallback, false, true), false)(J$.R(622217, 'callback', callback, false, false), J$.T(622225, null, 25, false), J$.G(622241, J$.R(622233, 'result', result, false, false), 'result'));
                                        } catch (J$e) {
                                            J$.Ex(630025, J$e);
                                        } finally {
                                            if (J$.Fr(630033))
                                                continue jalangiLabel29;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(630041, J$e);
                        } finally {
                            if (J$.Fr(630049))
                                continue jalangiLabel30;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function indexInformation(db, name, options, callback) {
                jalangiLabel33:
                    while (true) {
                        try {
                            J$.Fe(623185, arguments.callee, this, arguments);
                            function processResults(indexes) {
                                jalangiLabel31:
                                    while (true) {
                                        try {
                                            J$.Fe(622801, arguments.callee, this, arguments);
                                            arguments = J$.N(622809, 'arguments', arguments, true, false, false);
                                            indexes = J$.N(622817, 'indexes', indexes, true, false, false);
                                            J$.N(622825, 'info', info, false, false, false);
                                            J$.N(622833, 'i', i, false, false, false);
                                            J$.N(622841, 'index', index, false, false, false);
                                            J$.N(622849, '_name', _name, false, false, false);
                                            var info = J$.W(622529, 'info', J$.T(622521, {}, 11, false), info, false, false);
                                            for (var i = J$.W(622545, 'i', J$.T(622537, 0, 22, false), i, false, false); J$.C(39752, J$.B(38418, '<', J$.R(622553, 'i', i, false, false), J$.G(622569, J$.R(622561, 'indexes', indexes, false, false), 'length'))); J$.B(38442, '-', i = J$.W(622585, 'i', J$.B(38434, '+', J$.U(38426, '+', J$.R(622577, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                var index = J$.W(622617, 'index', J$.G(622609, J$.R(622593, 'indexes', indexes, false, false), J$.R(622601, 'i', i, false, false)), index, false, false);
                                                J$.P(622657, J$.R(622625, 'info', info, false, false), J$.G(622641, J$.R(622633, 'index', index, false, false), 'name'), J$.T(622649, [], 10, false));
                                                for (var _name in J$.H(622769, J$.G(622673, J$.R(622665, 'index', index, false, false), 'key'))) {
                                                    J$.N(622777, '_name', _name, false, true, false);
                                                    {
                                                        {
                                                            J$.M(622761, J$.G(622705, J$.R(622681, 'info', info, false, false), J$.G(622697, J$.R(622689, 'index', index, false, false), 'name')), 'push', false)(J$.T(622753, [
                                                                J$.R(622713, '_name', _name, false, false),
                                                                J$.G(622745, J$.G(622729, J$.R(622721, 'index', index, false, false), 'key'), J$.R(622737, '_name', _name, false, false))
                                                            ], 10, false));
                                                        }
                                                    }
                                                }
                                            }
                                            return J$.Rt(622793, J$.R(622785, 'info', info, false, false));
                                        } catch (J$e) {
                                            J$.Ex(630057, J$e);
                                        } finally {
                                            if (J$.Fr(630065))
                                                continue jalangiLabel31;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(623193, 'arguments', arguments, true, false, false);
                            db = J$.N(623201, 'db', db, true, false, false);
                            name = J$.N(623209, 'name', name, true, false, false);
                            options = J$.N(623217, 'options', options, true, false, false);
                            callback = J$.N(623225, 'callback', callback, true, false, false);
                            J$.N(623233, 'full', full, false, false, false);
                            processResults = J$.N(623249, 'processResults', J$.T(623241, processResults, 12, false), true, false, false);
                            var full = J$.W(622425, 'full', J$.C(39728, J$.B(38410, '==', J$.G(622377, J$.R(622361, 'options', options, false, false), J$.T(622369, 'full', 21, false)), J$.T(622385, null, 25, false))) ? J$.T(622393, false, 23, false) : J$.G(622417, J$.R(622401, 'options', options, false, false), J$.T(622409, 'full', 21, false)), full, false, false);
                            if (J$.C(39744, J$.C(39736, J$.G(622441, J$.R(622433, 'db', db, false, false), 'serverConfig')) ? J$.M(622465, J$.G(622457, J$.R(622449, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(622513, J$.F(622505, J$.R(622473, 'callback', callback, false, false), false)(J$.F(622497, J$.R(622481, 'MongoError', MongoError, false, true), true)(J$.T(622489, 'topology was destroyed', 21, false))));
                            J$.M(623177, J$.M(622889, J$.M(622873, J$.R(622857, 'db', db, false, false), 'collection', false)(J$.R(622865, 'name', name, false, false)), 'listIndexes', false)(J$.R(622881, 'options', options, false, false)), 'toArray', false)(J$.T(623169, function (err, indexes) {
                                jalangiLabel32:
                                    while (true) {
                                        try {
                                            J$.Fe(623137, arguments.callee, this, arguments);
                                            arguments = J$.N(623145, 'arguments', arguments, true, false, false);
                                            err = J$.N(623153, 'err', err, true, false, false);
                                            indexes = J$.N(623161, 'indexes', indexes, true, false, false);
                                            if (J$.C(39760, J$.R(622897, 'err', err, false, false)))
                                                return J$.Rt(622945, J$.F(622937, J$.R(622905, 'callback', callback, false, false), false)(J$.F(622929, J$.R(622913, 'toError', toError, false, true), false)(J$.R(622921, 'err', err, false, false))));
                                            if (J$.C(39768, J$.U(38450, '!', J$.M(622969, J$.I(typeof Array === 'undefined' ? Array = J$.R(622953, 'Array', undefined, true, true) : Array = J$.R(622953, 'Array', Array, true, true)), 'isArray', false)(J$.R(622961, 'indexes', indexes, false, false)))))
                                                return J$.Rt(623017, J$.F(623009, J$.R(622977, 'handleCallback', handleCallback, false, true), false)(J$.R(622985, 'callback', callback, false, false), J$.T(622993, null, 25, false), J$.T(623001, [], 10, false)));
                                            if (J$.C(39776, J$.R(623025, 'full', full, false, false)))
                                                return J$.Rt(623073, J$.F(623065, J$.R(623033, 'handleCallback', handleCallback, false, true), false)(J$.R(623041, 'callback', callback, false, false), J$.T(623049, null, 25, false), J$.R(623057, 'indexes', indexes, false, false)));
                                            J$.F(623129, J$.R(623081, 'handleCallback', handleCallback, false, true), false)(J$.R(623089, 'callback', callback, false, false), J$.T(623097, null, 25, false), J$.F(623121, J$.R(623105, 'processResults', processResults, false, false), false)(J$.R(623113, 'indexes', indexes, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(630073, J$e);
                                        } finally {
                                            if (J$.Fr(630081))
                                                continue jalangiLabel32;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(630089, J$e);
                        } finally {
                            if (J$.Fr(630097))
                                continue jalangiLabel33;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function profilingInfo(db, options, callback) {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(623369, arguments.callee, this, arguments);
                            arguments = J$.N(623377, 'arguments', arguments, true, false, false);
                            db = J$.N(623385, 'db', db, true, false, false);
                            options = J$.N(623393, 'options', options, true, false, false);
                            callback = J$.N(623401, 'callback', callback, true, false, false);
                            try {
                                J$.M(623313, J$.M(623297, J$.M(623273, J$.R(623257, 'db', db, false, false), 'collection', false)(J$.T(623265, 'system.profile', 21, false)), 'find', false)(J$.T(623281, {}, 11, false), J$.R(623289, 'options', options, false, false)), 'toArray', false)(J$.R(623305, 'callback', callback, false, false));
                            } catch (err) {
                                J$.N(623361, 'err', err, false, false, true);
                                return J$.Rt(623353, J$.F(623345, J$.R(623321, 'callback', callback, false, false), false)(J$.R(623329, 'err', err, false, false), J$.T(623337, null, 25, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(630105, J$e);
                        } finally {
                            if (J$.Fr(630113))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function removeUser(db, username, options, callback) {
                jalangiLabel38:
                    while (true) {
                        try {
                            J$.Fe(624169, arguments.callee, this, arguments);
                            arguments = J$.N(624177, 'arguments', arguments, true, false, false);
                            db = J$.N(624185, 'db', db, true, false, false);
                            username = J$.N(624193, 'username', username, true, false, false);
                            options = J$.N(624201, 'options', options, true, false, false);
                            callback = J$.N(624209, 'callback', callback, true, false, false);
                            J$.N(624217, 'Db', Db, false, false, false);
                            var Db = J$.W(623425, 'Db', J$.F(623417, J$.R(623409, 'loadDb', loadDb, false, true), false)(), Db, false, false);
                            J$.F(624161, J$.R(623433, 'executeAuthRemoveUserCommand', executeAuthRemoveUserCommand, false, true), false)(J$.R(623441, 'db', db, false, false), J$.R(623449, 'username', username, false, false), J$.R(623457, 'options', options, false, false), J$.T(624153, function (err, result) {
                                jalangiLabel37:
                                    while (true) {
                                        try {
                                            J$.Fe(624097, arguments.callee, this, arguments);
                                            arguments = J$.N(624105, 'arguments', arguments, true, false, false);
                                            err = J$.N(624113, 'err', err, true, false, false);
                                            result = J$.N(624121, 'result', result, true, false, false);
                                            J$.N(624129, 'finalOptions', finalOptions, false, false, false);
                                            J$.N(624137, '_db', _db, false, false, false);
                                            J$.N(624145, '_collection2', _collection2, false, false, false);
                                            if (J$.C(39808, J$.C(39784, J$.R(623465, 'err', err, false, false)) ? J$.B(38466, '===', J$.G(623481, J$.R(623473, 'err', err, false, false), 'code'), J$.U(38458, '-', J$.T(623489, 5000, 22, false))) : J$._())) {
                                                var finalOptions = J$.W(623569, 'finalOptions', J$.F(623561, J$.R(623497, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.M(623529, J$.I(typeof Object === 'undefined' ? Object = J$.R(623505, 'Object', undefined, true, true) : Object = J$.R(623505, 'Object', Object, true, true)), 'assign', false)(J$.T(623513, {}, 11, false), J$.R(623521, 'options', options, false, false)), J$.T(623545, { db: J$.R(623537, '_db', _db, false, false) }, 11, false), J$.R(623553, 'options', options, false, false)), finalOptions, false, false);
                                                var _db = J$.W(623681, '_db', J$.C(39792, J$.G(623585, J$.R(623577, 'options', options, false, false), 'dbName')) ? J$.F(623665, J$.R(623593, 'Db', Db, false, false), true)(J$.G(623609, J$.R(623601, 'options', options, false, false), 'dbName'), J$.G(623633, J$.G(623625, J$.R(623617, '_db', _db, false, false), 's'), 'topology'), J$.G(623657, J$.G(623649, J$.R(623641, '_db', _db, false, false), 's'), 'options')) : J$.R(623673, '_db', _db, false, false), _db, false, false);
                                                var _collection2 = J$.W(623721, '_collection2', J$.M(623713, J$.R(623689, '_db', _db, false, false), 'collection', false)(J$.G(623705, J$.R(623697, 'CONSTANTS', CONSTANTS, false, true), 'SYSTEM_USER_COLLECTION')), _collection2, false, false);
                                                J$.F(623993, J$.R(623729, 'findOne', findOne, false, true), false)(J$.R(623737, '_collection2', _collection2, false, false), J$.T(623753, { user: J$.R(623745, 'username', username, false, false) }, 11, false), J$.R(623761, 'finalOptions', finalOptions, false, false), J$.T(623985, function (err, user) {
                                                    jalangiLabel36:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(623953, arguments.callee, this, arguments);
                                                                arguments = J$.N(623961, 'arguments', arguments, true, false, false);
                                                                err = J$.N(623969, 'err', err, true, false, false);
                                                                user = J$.N(623977, 'user', user, true, false, false);
                                                                if (J$.C(39800, J$.B(38474, '==', J$.R(623769, 'user', user, false, false), J$.T(623777, null, 25, false))))
                                                                    return J$.Rt(623825, J$.F(623817, J$.R(623785, 'handleCallback', handleCallback, false, true), false)(J$.R(623793, 'callback', callback, false, false), J$.R(623801, 'err', err, false, false), J$.T(623809, false, 23, false)));
                                                                J$.F(623945, J$.R(623833, 'remove', remove, false, true), false)(J$.R(623841, '_collection2', _collection2, false, false), J$.T(623857, { user: J$.R(623849, 'username', username, false, false) }, 11, false), J$.R(623865, 'finalOptions', finalOptions, false, false), J$.T(623937, function (err) {
                                                                    jalangiLabel35:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(623913, arguments.callee, this, arguments);
                                                                                arguments = J$.N(623921, 'arguments', arguments, true, false, false);
                                                                                err = J$.N(623929, 'err', err, true, false, false);
                                                                                J$.F(623905, J$.R(623873, 'handleCallback', handleCallback, false, true), false)(J$.R(623881, 'callback', callback, false, false), J$.R(623889, 'err', err, false, false), J$.T(623897, true, 23, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(630121, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(630129))
                                                                                    continue jalangiLabel35;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } catch (J$e) {
                                                                J$.Ex(630137, J$e);
                                                            } finally {
                                                                if (J$.Fr(630145))
                                                                    continue jalangiLabel36;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(624001, undefined);
                                            }
                                            if (J$.C(39816, J$.R(624009, 'err', err, false, false)))
                                                return J$.Rt(624049, J$.F(624041, J$.R(624017, 'handleCallback', handleCallback, false, true), false)(J$.R(624025, 'callback', callback, false, false), J$.R(624033, 'err', err, false, false)));
                                            J$.F(624089, J$.R(624057, 'handleCallback', handleCallback, false, true), false)(J$.R(624065, 'callback', callback, false, false), J$.R(624073, 'err', err, false, false), J$.R(624081, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(630153, J$e);
                                        } finally {
                                            if (J$.Fr(630161))
                                                continue jalangiLabel37;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(630169, J$e);
                        } finally {
                            if (J$.Fr(630177))
                                continue jalangiLabel38;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateDatabaseName(databaseName) {
                jalangiLabel39:
                    while (true) {
                        try {
                            J$.Fe(624601, arguments.callee, this, arguments);
                            arguments = J$.N(624609, 'arguments', arguments, true, false, false);
                            databaseName = J$.N(624617, 'databaseName', databaseName, true, false, false);
                            J$.N(624625, 'invalidChars', invalidChars, false, false, false);
                            J$.N(624633, 'i', i, false, false, false);
                            if (J$.C(39824, J$.B(38490, '!==', J$.U(38482, 'typeof', J$.R(624225, 'databaseName', databaseName, false, false)), J$.T(624233, 'string', 21, false))))
                                throw J$.M(624273, J$.R(624241, 'MongoError', MongoError, false, true), 'create', false)(J$.T(624265, {
                                    message: J$.T(624249, 'database name must be a string', 21, false),
                                    driver: J$.T(624257, true, 23, false)
                                }, 11, false));
                            if (J$.C(39832, J$.B(38498, '===', J$.G(624289, J$.R(624281, 'databaseName', databaseName, false, false), 'length'), J$.T(624297, 0, 22, false))))
                                throw J$.M(624337, J$.R(624305, 'MongoError', MongoError, false, true), 'create', false)(J$.T(624329, {
                                    message: J$.T(624313, 'database name cannot be the empty string', 21, false),
                                    driver: J$.T(624321, true, 23, false)
                                }, 11, false));
                            if (J$.C(39840, J$.B(38506, '===', J$.R(624345, 'databaseName', databaseName, false, false), J$.T(624353, '$external', 21, false))))
                                return J$.Rt(624361, undefined);
                            var invalidChars = J$.W(624417, 'invalidChars', J$.T(624409, [
                                J$.T(624369, ' ', 21, false),
                                J$.T(624377, '.', 21, false),
                                J$.T(624385, '$', 21, false),
                                J$.T(624393, '/', 21, false),
                                J$.T(624401, '\\', 21, false)
                            ], 10, false), invalidChars, false, false);
                            for (var i = J$.W(624433, 'i', J$.T(624425, 0, 22, false), i, false, false); J$.C(39856, J$.B(38514, '<', J$.R(624441, 'i', i, false, false), J$.G(624457, J$.R(624449, 'invalidChars', invalidChars, false, false), 'length'))); J$.B(38538, '-', i = J$.W(624473, 'i', J$.B(38530, '+', J$.U(38522, '+', J$.R(624465, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(39848, J$.B(38554, '!==', J$.M(624513, J$.R(624481, 'databaseName', databaseName, false, false), 'indexOf', false)(J$.G(624505, J$.R(624489, 'invalidChars', invalidChars, false, false), J$.R(624497, 'i', i, false, false))), J$.U(38546, '-', J$.T(624521, 1, 22, false)))))
                                    throw J$.M(624593, J$.R(624529, 'MongoError', MongoError, false, true), 'create', false)(J$.T(624585, {
                                        message: J$.B(38570, '+', J$.B(38562, '+', J$.T(624537, 'database names cannot contain the character \'', 21, false), J$.G(624561, J$.R(624545, 'invalidChars', invalidChars, false, false), J$.R(624553, 'i', i, false, false))), J$.T(624569, '\'', 21, false)),
                                        driver: J$.T(624577, true, 23, false)
                                    }, 11, false));
                            }
                        } catch (J$e) {
                            J$.Ex(630185, J$e);
                        } finally {
                            if (J$.Fr(630193))
                                continue jalangiLabel39;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createCreateIndexCommand(db, name, fieldOrSpec, options) {
                jalangiLabel40:
                    while (true) {
                        try {
                            J$.Fe(625337, arguments.callee, this, arguments);
                            arguments = J$.N(625345, 'arguments', arguments, true, false, false);
                            db = J$.N(625353, 'db', db, true, false, false);
                            name = J$.N(625361, 'name', name, true, false, false);
                            fieldOrSpec = J$.N(625369, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(625377, 'options', options, true, false, false);
                            J$.N(625385, 'indexParameters', indexParameters, false, false, false);
                            J$.N(625393, 'fieldHash', fieldHash, false, false, false);
                            J$.N(625401, 'indexName', indexName, false, false, false);
                            J$.N(625409, 'selector', selector, false, false, false);
                            J$.N(625417, 'finalUnique', finalUnique, false, false, false);
                            J$.N(625425, 'keysToOmit', keysToOmit, false, false, false);
                            J$.N(625433, 'optionName', optionName, false, false, false);
                            J$.N(625441, 'removeKeys', removeKeys, false, false, false);
                            J$.N(625449, 'i', i, false, false, false);
                            var indexParameters = J$.W(624665, 'indexParameters', J$.F(624657, J$.R(624641, 'parseIndexOptions', parseIndexOptions, false, true), false)(J$.R(624649, 'fieldOrSpec', fieldOrSpec, false, false)), indexParameters, false, false);
                            var fieldHash = J$.W(624689, 'fieldHash', J$.G(624681, J$.R(624673, 'indexParameters', indexParameters, false, false), 'fieldHash'), fieldHash, false, false);
                            var indexName = J$.W(624753, 'indexName', J$.C(39864, J$.B(38586, '===', J$.U(38578, 'typeof', J$.G(624705, J$.R(624697, 'options', options, false, false), 'name')), J$.T(624713, 'string', 21, false))) ? J$.G(624729, J$.R(624721, 'options', options, false, false), 'name') : J$.G(624745, J$.R(624737, 'indexParameters', indexParameters, false, false), 'name'), indexName, false, false);
                            var selector = J$.W(624833, 'selector', J$.T(624825, {
                                ns: J$.M(624801, J$.M(624793, J$.G(624777, J$.G(624769, J$.R(624761, 'db', db, false, false), 's'), 'namespace'), 'withCollection', false)(J$.R(624785, 'name', name, false, false)), 'toString', false)(),
                                key: J$.R(624809, 'fieldHash', fieldHash, false, false),
                                name: J$.R(624817, 'indexName', indexName, false, false)
                            }, 11, false), selector, false, false);
                            var finalUnique = J$.W(624905, 'finalUnique', J$.C(39880, J$.C(39872, J$.B(38594, '==', J$.R(624841, 'options', options, false, false), J$.T(624849, null, 25, false))) ? J$._() : J$.B(38602, '===', J$.T(624857, 'object', 21, false), J$.F(624881, J$.R(624865, '_typeof', _typeof, false, true), false)(J$.R(624873, 'options', options, false, false)))) ? J$.T(624889, false, 23, false) : J$.R(624897, 'options', options, false, false), finalUnique, false, false);
                            options = J$.W(624961, 'options', J$.C(39896, J$.C(39888, J$.B(38610, '==', J$.R(624913, 'options', options, false, false), J$.T(624921, null, 25, false))) ? J$._() : J$.B(38626, '===', J$.U(38618, 'typeof', J$.R(624929, 'options', options, false, false)), J$.T(624937, 'boolean', 21, false))) ? J$.T(624945, {}, 11, false) : J$.R(624953, 'options', options, false, false), options, false, false);
                            var keysToOmit = J$.W(624993, 'keysToOmit', J$.M(624985, J$.I(typeof Object === 'undefined' ? Object = J$.R(624969, 'Object', undefined, true, true) : Object = J$.R(624969, 'Object', Object, true, true)), 'keys', false)(J$.R(624977, 'selector', selector, false, false)), keysToOmit, false, false);
                            for (var optionName in J$.H(625089, J$.R(625001, 'options', options, false, false))) {
                                J$.N(625097, 'optionName', optionName, false, true, false);
                                {
                                    {
                                        if (J$.C(39904, J$.B(38642, '===', J$.M(625025, J$.R(625009, 'keysToOmit', keysToOmit, false, false), 'indexOf', false)(J$.R(625017, 'optionName', optionName, false, false)), J$.U(38634, '-', J$.T(625033, 1, 22, false))))) {
                                            J$.P(625081, J$.R(625041, 'selector', selector, false, false), J$.R(625049, 'optionName', optionName, false, false), J$.G(625073, J$.R(625057, 'options', options, false, false), J$.R(625065, 'optionName', optionName, false, false)));
                                        }
                                    }
                                }
                            }
                            if (J$.C(39912, J$.B(38650, '==', J$.G(625121, J$.R(625105, 'selector', selector, false, false), J$.T(625113, 'unique', 21, false)), J$.T(625129, null, 25, false))))
                                J$.P(625161, J$.R(625137, 'selector', selector, false, false), J$.T(625145, 'unique', 21, false), J$.R(625153, 'finalUnique', finalUnique, false, false));
                            var removeKeys = J$.W(625225, 'removeKeys', J$.T(625217, [
                                J$.T(625169, 'w', 21, false),
                                J$.T(625177, 'wtimeout', 21, false),
                                J$.T(625185, 'j', 21, false),
                                J$.T(625193, 'fsync', 21, false),
                                J$.T(625201, 'readPreference', 21, false),
                                J$.T(625209, 'session', 21, false)
                            ], 10, false), removeKeys, false, false);
                            for (var i = J$.W(625241, 'i', J$.T(625233, 0, 22, false), i, false, false); J$.C(39920, J$.B(38658, '<', J$.R(625249, 'i', i, false, false), J$.G(625265, J$.R(625257, 'removeKeys', removeKeys, false, false), 'length'))); J$.B(38682, '-', i = J$.W(625281, 'i', J$.B(38674, '+', J$.U(38666, '+', J$.R(625273, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.B(38690, 'delete', J$.R(625289, 'selector', selector, false, false), J$.G(625313, J$.R(625297, 'removeKeys', removeKeys, false, false), J$.R(625305, 'i', i, false, false)));
                            }
                            return J$.Rt(625329, J$.R(625321, 'selector', selector, false, false));
                        } catch (J$e) {
                            J$.Ex(630201, J$e);
                        } finally {
                            if (J$.Fr(630209))
                                continue jalangiLabel40;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createIndexUsingCreateIndexes(db, name, fieldOrSpec, options, callback) {
                jalangiLabel42:
                    while (true) {
                        try {
                            J$.Fe(626393, arguments.callee, this, arguments);
                            arguments = J$.N(626401, 'arguments', arguments, true, false, false);
                            db = J$.N(626409, 'db', db, true, false, false);
                            name = J$.N(626417, 'name', name, true, false, false);
                            fieldOrSpec = J$.N(626425, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(626433, 'options', options, true, false, false);
                            callback = J$.N(626441, 'callback', callback, true, false, false);
                            J$.N(626449, 'indexParameters', indexParameters, false, false, false);
                            J$.N(626457, 'indexName', indexName, false, false, false);
                            J$.N(626465, 'indexes', indexes, false, false, false);
                            J$.N(626473, 'keysToOmit', keysToOmit, false, false, false);
                            J$.N(626481, 'optionName', optionName, false, false, false);
                            J$.N(626489, 'capabilities', capabilities, false, false, false);
                            J$.N(626497, 'error', error, false, false, false);
                            J$.N(626505, 'cmd', cmd, false, false, false);
                            var indexParameters = J$.W(625481, 'indexParameters', J$.F(625473, J$.R(625457, 'parseIndexOptions', parseIndexOptions, false, true), false)(J$.R(625465, 'fieldOrSpec', fieldOrSpec, false, false)), indexParameters, false, false);
                            var indexName = J$.W(625545, 'indexName', J$.C(39928, J$.B(38706, '===', J$.U(38698, 'typeof', J$.G(625497, J$.R(625489, 'options', options, false, false), 'name')), J$.T(625505, 'string', 21, false))) ? J$.G(625521, J$.R(625513, 'options', options, false, false), 'name') : J$.G(625537, J$.R(625529, 'indexParameters', indexParameters, false, false), 'name'), indexName, false, false);
                            var indexes = J$.W(625593, 'indexes', J$.T(625585, [J$.T(625577, {
                                    name: J$.R(625553, 'indexName', indexName, false, false),
                                    key: J$.G(625569, J$.R(625561, 'indexParameters', indexParameters, false, false), 'fieldHash')
                                }, 11, false)], 10, false), indexes, false, false);
                            var keysToOmit = J$.W(625713, 'keysToOmit', J$.M(625705, J$.M(625633, J$.I(typeof Object === 'undefined' ? Object = J$.R(625601, 'Object', undefined, true, true) : Object = J$.R(625601, 'Object', Object, true, true)), 'keys', false)(J$.G(625625, J$.R(625609, 'indexes', indexes, false, false), J$.T(625617, 0, 22, false))), 'concat', false)(J$.T(625697, [
                                J$.T(625641, 'writeConcern', 21, false),
                                J$.T(625649, 'w', 21, false),
                                J$.T(625657, 'wtimeout', 21, false),
                                J$.T(625665, 'j', 21, false),
                                J$.T(625673, 'fsync', 21, false),
                                J$.T(625681, 'readPreference', 21, false),
                                J$.T(625689, 'session', 21, false)
                            ], 10, false)), keysToOmit, false, false);
                            for (var optionName in J$.H(625825, J$.R(625721, 'options', options, false, false))) {
                                J$.N(625833, 'optionName', optionName, false, true, false);
                                {
                                    {
                                        if (J$.C(39936, J$.B(38722, '===', J$.M(625745, J$.R(625729, 'keysToOmit', keysToOmit, false, false), 'indexOf', false)(J$.R(625737, 'optionName', optionName, false, false)), J$.U(38714, '-', J$.T(625753, 1, 22, false))))) {
                                            J$.P(625817, J$.G(625777, J$.R(625761, 'indexes', indexes, false, false), J$.T(625769, 0, 22, false)), J$.R(625785, 'optionName', optionName, false, false), J$.G(625809, J$.R(625793, 'options', options, false, false), J$.R(625801, 'optionName', optionName, false, false)));
                                        }
                                    }
                                }
                            }
                            var capabilities = J$.W(625873, 'capabilities', J$.M(625865, J$.G(625857, J$.G(625849, J$.R(625841, 'db', db, false, false), 's'), 'topology'), 'capabilities', false)(), capabilities, false, false);
                            if (J$.C(39960, J$.C(39952, J$.C(39944, J$.G(625905, J$.G(625897, J$.R(625881, 'indexes', indexes, false, false), J$.T(625889, 0, 22, false)), 'collation')) ? J$.R(625913, 'capabilities', capabilities, false, false) : J$._()) ? J$.U(38730, '!', J$.G(625929, J$.R(625921, 'capabilities', capabilities, false, false), 'commandsTakeCollation')) : J$._())) {
                                var error = J$.W(625961, 'error', J$.F(625953, J$.R(625937, 'MongoError', MongoError, false, true), true)(J$.T(625945, 'server/primary/mongos does not support collation', 21, false)), error, false, false);
                                J$.P(625985, J$.R(625969, 'error', error, false, false), 'code', J$.T(625977, 67, 22, false));
                                return J$.Rt(626017, J$.F(626009, J$.R(625993, 'callback', callback, false, false), false)(J$.R(626001, 'error', error, false, false)));
                            }
                            var cmd = J$.W(626089, 'cmd', J$.F(626081, J$.R(626025, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.T(626049, {
                                createIndexes: J$.R(626033, 'name', name, false, false),
                                indexes: J$.R(626041, 'indexes', indexes, false, false)
                            }, 11, false), J$.T(626065, { db: J$.R(626057, 'db', db, false, false) }, 11, false), J$.R(626073, 'options', options, false, false)), cmd, false, false);
                            J$.P(626121, J$.R(626097, 'options', options, false, false), 'readPreference', J$.G(626113, J$.R(626105, 'ReadPreference', ReadPreference, false, true), 'PRIMARY'));
                            J$.F(626385, J$.R(626129, 'executeCommand', executeCommand, false, true), false)(J$.R(626137, 'db', db, false, false), J$.R(626145, 'cmd', cmd, false, false), J$.R(626153, 'options', options, false, false), J$.T(626377, function (err, result) {
                                jalangiLabel41:
                                    while (true) {
                                        try {
                                            J$.Fe(626345, arguments.callee, this, arguments);
                                            arguments = J$.N(626353, 'arguments', arguments, true, false, false);
                                            err = J$.N(626361, 'err', err, true, false, false);
                                            result = J$.N(626369, 'result', result, true, false, false);
                                            if (J$.C(39968, J$.R(626161, 'err', err, false, false)))
                                                return J$.Rt(626209, J$.F(626201, J$.R(626169, 'handleCallback', handleCallback, false, true), false)(J$.R(626177, 'callback', callback, false, false), J$.R(626185, 'err', err, false, false), J$.T(626193, null, 25, false)));
                                            if (J$.C(39976, J$.B(38738, '===', J$.G(626225, J$.R(626217, 'result', result, false, false), 'ok'), J$.T(626233, 0, 22, false))))
                                                return J$.Rt(626297, J$.F(626289, J$.R(626241, 'handleCallback', handleCallback, false, true), false)(J$.R(626249, 'callback', callback, false, false), J$.F(626273, J$.R(626257, 'toError', toError, false, true), false)(J$.R(626265, 'result', result, false, false)), J$.T(626281, null, 25, false)));
                                            J$.F(626337, J$.R(626305, 'handleCallback', handleCallback, false, true), false)(J$.R(626313, 'callback', callback, false, false), J$.T(626321, null, 25, false), J$.R(626329, 'indexName', indexName, false, false));
                                        } catch (J$e) {
                                            J$.Ex(630217, J$e);
                                        } finally {
                                            if (J$.Fr(630225))
                                                continue jalangiLabel41;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(630233, J$e);
                        } finally {
                            if (J$.Fr(630241))
                                continue jalangiLabel42;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeAuthCreateUserCommand(db, username, password, options, callback) {
                jalangiLabel44:
                    while (true) {
                        try {
                            J$.Fe(627985, arguments.callee, this, arguments);
                            arguments = J$.N(627993, 'arguments', arguments, true, false, false);
                            db = J$.N(628001, 'db', db, true, false, false);
                            username = J$.N(628009, 'username', username, true, false, false);
                            password = J$.N(628017, 'password', password, true, false, false);
                            options = J$.N(628025, 'options', options, true, false, false);
                            callback = J$.N(628033, 'callback', callback, true, false, false);
                            J$.N(628041, 'customData', customData, false, false, false);
                            J$.N(628049, 'roles', roles, false, false, false);
                            J$.N(628057, 'maxTimeMS', maxTimeMS, false, false, false);
                            J$.N(628065, 'commandOptions', commandOptions, false, false, false);
                            J$.N(628073, 'digestPassword', digestPassword, false, false, false);
                            J$.N(628081, 'command', command, false, false, false);
                            J$.N(628089, 'userPassword', userPassword, false, false, false);
                            J$.N(628097, 'md5', md5, false, false, false);
                            if (J$.C(40000, J$.C(39992, J$.C(39984, J$.B(38754, '===', J$.U(38746, 'typeof', J$.R(626513, 'username', username, false, false)), J$.T(626521, 'string', 21, false))) ? J$.B(38762, '!=', J$.R(626529, 'password', password, false, false), J$.T(626537, null, 25, false)) : J$._()) ? J$.B(38770, '===', J$.F(626561, J$.R(626545, '_typeof', _typeof, false, true), false)(J$.R(626553, 'password', password, false, false)), J$.T(626569, 'object', 21, false)) : J$._())) {
                                options = J$.W(626585, 'options', J$.R(626577, 'password', password, false, false), options, false, false);
                                password = J$.W(626601, 'password', J$.T(626593, null, 25, false), password, false, false);
                            }
                            if (J$.C(40008, J$.B(38786, '===', J$.U(38778, 'typeof', J$.R(626609, 'options', options, false, false)), J$.T(626617, 'function', 21, false)))) {
                                callback = J$.W(626633, 'callback', J$.R(626625, 'options', options, false, false), callback, false, false);
                                options = J$.W(626649, 'options', J$.T(626641, {}, 11, false), options, false, false);
                            }
                            if (J$.C(40016, J$.B(38794, '!=', J$.G(626665, J$.R(626657, 'options', options, false, false), 'digestPassword'), J$.T(626673, null, 25, false)))) {
                                return J$.Rt(626721, J$.F(626713, J$.R(626681, 'callback', callback, false, false), false)(J$.F(626705, J$.R(626689, 'toError', toError, false, true), false)(J$.T(626697, 'The digestPassword option is not supported via add_user. Please use db.command(\'createUser\', ...) instead for this option.', 21, false))));
                            }
                            var customData = J$.W(626777, 'customData', J$.C(40024, J$.B(38802, '!=', J$.G(626737, J$.R(626729, 'options', options, false, false), 'customData'), J$.T(626745, null, 25, false))) ? J$.G(626761, J$.R(626753, 'options', options, false, false), 'customData') : J$.T(626769, {}, 11, false), customData, false, false);
                            var roles = J$.W(626841, 'roles', J$.C(40032, J$.M(626809, J$.I(typeof Array === 'undefined' ? Array = J$.R(626785, 'Array', undefined, true, true) : Array = J$.R(626785, 'Array', Array, true, true)), 'isArray', false)(J$.G(626801, J$.R(626793, 'options', options, false, false), 'roles'))) ? J$.G(626825, J$.R(626817, 'options', options, false, false), 'roles') : J$.T(626833, [], 10, false), roles, false, false);
                            var maxTimeMS = J$.W(626897, 'maxTimeMS', J$.C(40040, J$.B(38818, '===', J$.U(38810, 'typeof', J$.G(626857, J$.R(626849, 'options', options, false, false), 'maxTimeMS')), J$.T(626865, 'number', 21, false))) ? J$.G(626881, J$.R(626873, 'options', options, false, false), 'maxTimeMS') : J$.T(626889, null, 25, false), maxTimeMS, false, false);
                            if (J$.C(40048, J$.B(38826, '===', J$.G(626913, J$.R(626905, 'roles', roles, false, false), 'length'), J$.T(626921, 0, 22, false)))) {
                                J$.M(626945, J$.I(typeof console === 'undefined' ? console = J$.R(626929, 'console', undefined, true, true) : console = J$.R(626929, 'console', console, true, true)), 'log', false)(J$.T(626937, 'Creating a user without roles is deprecated in MongoDB >= 2.6', 21, false));
                            }
                            var commandOptions = J$.W(626969, 'commandOptions', J$.T(626961, { writeCommand: J$.T(626953, true, 23, false) }, 11, false), commandOptions, false, false);
                            if (J$.C(40056, J$.G(626993, J$.R(626977, 'options', options, false, false), J$.T(626985, 'dbName', 21, false))))
                                J$.P(627033, J$.R(627001, 'commandOptions', commandOptions, false, false), 'dbName', J$.G(627025, J$.R(627009, 'options', options, false, false), J$.T(627017, 'dbName', 21, false)));
                            if (J$.C(40064, J$.B(38834, '!=', J$.R(627041, 'maxTimeMS', maxTimeMS, false, false), J$.T(627049, null, 25, false))))
                                J$.P(627073, J$.R(627057, 'commandOptions', commandOptions, false, false), 'maxTimeMS', J$.R(627065, 'maxTimeMS', maxTimeMS, false, false));
                            if (J$.C(40096, J$.C(40080, J$.C(40072, J$.B(38842, '===', J$.M(627097, J$.G(627089, J$.R(627081, 'db', db, false, false), 'databaseName'), 'toLowerCase', false)(), J$.T(627105, 'admin', 21, false))) ? J$._() : J$.B(38850, '===', J$.G(627121, J$.R(627113, 'options', options, false, false), 'dbName'), J$.T(627129, 'admin', 21, false))) ? J$.U(38858, '!', J$.M(627161, J$.I(typeof Array === 'undefined' ? Array = J$.R(627137, 'Array', undefined, true, true) : Array = J$.R(627137, 'Array', Array, true, true)), 'isArray', false)(J$.G(627153, J$.R(627145, 'options', options, false, false), 'roles'))) : J$._())) {
                                roles = J$.W(627185, 'roles', J$.T(627177, [J$.T(627169, 'root', 21, false)], 10, false), roles, false, false);
                            } else if (J$.C(40088, J$.U(38866, '!', J$.M(627217, J$.I(typeof Array === 'undefined' ? Array = J$.R(627193, 'Array', undefined, true, true) : Array = J$.R(627193, 'Array', Array, true, true)), 'isArray', false)(J$.G(627209, J$.R(627201, 'options', options, false, false), 'roles'))))) {
                                roles = J$.W(627241, 'roles', J$.T(627233, [J$.T(627225, 'dbOwner', 21, false)], 10, false), roles, false, false);
                            }
                            var digestPassword = J$.W(627297, 'digestPassword', J$.B(38874, '>=', J$.G(627281, J$.M(627273, J$.G(627265, J$.G(627257, J$.R(627249, 'db', db, false, false), 's'), 'topology'), 'lastIsMaster', false)(), 'maxWireVersion'), J$.T(627289, 7, 22, false)), digestPassword, false, false);
                            var command = J$.W(627345, 'command', J$.T(627337, {
                                createUser: J$.R(627305, 'username', username, false, false),
                                customData: J$.R(627313, 'customData', customData, false, false),
                                roles: J$.R(627321, 'roles', roles, false, false),
                                digestPassword: J$.R(627329, 'digestPassword', digestPassword, false, false)
                            }, 11, false), command, false, false);
                            command = J$.W(627401, 'command', J$.F(627393, J$.R(627353, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.R(627361, 'command', command, false, false), J$.T(627377, { db: J$.R(627369, 'db', db, false, false) }, 11, false), J$.R(627385, 'options', options, false, false)), command, false, false);
                            var userPassword = J$.W(627417, 'userPassword', J$.R(627409, 'password', password, false, false), userPassword, false, false);
                            if (J$.C(40104, J$.U(38882, '!', J$.R(627425, 'digestPassword', digestPassword, false, false)))) {
                                var md5 = J$.W(627457, 'md5', J$.M(627449, J$.R(627433, 'crypto', crypto, false, true), 'createHash', false)(J$.T(627441, 'md5', 21, false)), md5, false, false);
                                J$.M(627497, J$.R(627465, 'md5', md5, false, false), 'update', false)(J$.B(38898, '+', J$.B(38890, '+', J$.R(627473, 'username', username, false, false), J$.T(627481, ':mongo:', 21, false)), J$.R(627489, 'password', password, false, false)));
                                userPassword = J$.W(627529, 'userPassword', J$.M(627521, J$.R(627505, 'md5', md5, false, false), 'digest', false)(J$.T(627513, 'hex', 21, false)), userPassword, false, false);
                            }
                            if (J$.C(40112, J$.B(38914, '===', J$.U(38906, 'typeof', J$.R(627537, 'password', password, false, false)), J$.T(627545, 'string', 21, false)))) {
                                J$.P(627569, J$.R(627553, 'command', command, false, false), 'pwd', J$.R(627561, 'userPassword', userPassword, false, false));
                            }
                            J$.P(627601, J$.R(627577, 'commandOptions', commandOptions, false, false), 'readPreference', J$.G(627593, J$.R(627585, 'ReadPreference', ReadPreference, false, true), 'primary'));
                            J$.F(627977, J$.R(627609, 'executeCommand', executeCommand, false, true), false)(J$.R(627617, 'db', db, false, false), J$.R(627625, 'command', command, false, false), J$.R(627633, 'commandOptions', commandOptions, false, false), J$.T(627969, function (err, result) {
                                jalangiLabel43:
                                    while (true) {
                                        try {
                                            J$.Fe(627937, arguments.callee, this, arguments);
                                            arguments = J$.N(627945, 'arguments', arguments, true, false, false);
                                            err = J$.N(627953, 'err', err, true, false, false);
                                            result = J$.N(627961, 'result', result, true, false, false);
                                            if (J$.C(40136, J$.C(40128, J$.C(40120, J$.R(627641, 'err', err, false, false)) ? J$.B(38922, '===', J$.G(627657, J$.R(627649, 'err', err, false, false), 'ok'), J$.T(627665, 0, 22, false)) : J$._()) ? J$.B(38930, '===', J$.G(627681, J$.R(627673, 'err', err, false, false), 'code'), J$.T(627689, undefined, 24, false)) : J$._()))
                                                return J$.Rt(627745, J$.F(627737, J$.R(627697, 'handleCallback', handleCallback, false, true), false)(J$.R(627705, 'callback', callback, false, false), J$.T(627721, { code: J$.U(38938, '-', J$.T(627713, 5000, 22, false)) }, 11, false), J$.T(627729, null, 25, false)));
                                            if (J$.C(40144, J$.R(627753, 'err', err, false, false)))
                                                return J$.Rt(627801, J$.F(627793, J$.R(627761, 'handleCallback', handleCallback, false, true), false)(J$.R(627769, 'callback', callback, false, false), J$.R(627777, 'err', err, false, false), J$.T(627785, null, 25, false)));
                                            J$.F(627929, J$.R(627809, 'handleCallback', handleCallback, false, true), false)(J$.R(627817, 'callback', callback, false, false), J$.C(40152, J$.U(38946, '!', J$.G(627833, J$.R(627825, 'result', result, false, false), 'ok'))) ? J$.F(627857, J$.R(627841, 'toError', toError, false, true), false)(J$.R(627849, 'result', result, false, false)) : J$.T(627865, null, 25, false), J$.C(40160, J$.G(627881, J$.R(627873, 'result', result, false, false), 'ok')) ? J$.T(627913, [J$.T(627905, {
                                                    user: J$.R(627889, 'username', username, false, false),
                                                    pwd: J$.T(627897, '', 21, false)
                                                }, 11, false)], 10, false) : J$.T(627921, null, 25, false));
                                        } catch (J$e) {
                                            J$.Ex(630249, J$e);
                                        } finally {
                                            if (J$.Fr(630257))
                                                continue jalangiLabel43;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(630265, J$e);
                        } finally {
                            if (J$.Fr(630273))
                                continue jalangiLabel44;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeAuthRemoveUserCommand(db, username, options, callback) {
                jalangiLabel46:
                    while (true) {
                        try {
                            J$.Fe(628857, arguments.callee, this, arguments);
                            arguments = J$.N(628865, 'arguments', arguments, true, false, false);
                            db = J$.N(628873, 'db', db, true, false, false);
                            username = J$.N(628881, 'username', username, true, false, false);
                            options = J$.N(628889, 'options', options, true, false, false);
                            callback = J$.N(628897, 'callback', callback, true, false, false);
                            J$.N(628905, 'commandOptions', commandOptions, false, false, false);
                            J$.N(628913, 'maxTimeMS', maxTimeMS, false, false, false);
                            J$.N(628921, 'command', command, false, false, false);
                            if (J$.C(40168, J$.B(38962, '===', J$.U(38954, 'typeof', J$.R(628105, 'options', options, false, false)), J$.T(628113, 'function', 21, false))))
                                callback = J$.W(628129, 'callback', J$.R(628121, 'options', options, false, false), callback, false, false), options = J$.W(628145, 'options', J$.T(628137, {}, 11, false), options, false, false);
                            options = J$.W(628169, 'options', J$.C(40176, J$.R(628153, 'options', options, false, false)) ? J$._() : J$.T(628161, {}, 11, false), options, false, false);
                            if (J$.C(40192, J$.C(40184, J$.G(628185, J$.R(628177, 'db', db, false, false), 'serverConfig')) ? J$.M(628209, J$.G(628201, J$.R(628193, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(628257, J$.F(628249, J$.R(628217, 'callback', callback, false, false), false)(J$.F(628241, J$.R(628225, 'MongoError', MongoError, false, true), true)(J$.T(628233, 'topology was destroyed', 21, false))));
                            var commandOptions = J$.W(628281, 'commandOptions', J$.T(628273, { writeCommand: J$.T(628265, true, 23, false) }, 11, false), commandOptions, false, false);
                            if (J$.C(40200, J$.G(628305, J$.R(628289, 'options', options, false, false), J$.T(628297, 'dbName', 21, false))))
                                J$.P(628345, J$.R(628313, 'commandOptions', commandOptions, false, false), 'dbName', J$.G(628337, J$.R(628321, 'options', options, false, false), J$.T(628329, 'dbName', 21, false)));
                            var maxTimeMS = J$.W(628401, 'maxTimeMS', J$.C(40208, J$.B(38978, '===', J$.U(38970, 'typeof', J$.G(628361, J$.R(628353, 'options', options, false, false), 'maxTimeMS')), J$.T(628369, 'number', 21, false))) ? J$.G(628385, J$.R(628377, 'options', options, false, false), 'maxTimeMS') : J$.T(628393, null, 25, false), maxTimeMS, false, false);
                            if (J$.C(40216, J$.B(38986, '!=', J$.R(628409, 'maxTimeMS', maxTimeMS, false, false), J$.T(628417, null, 25, false))))
                                J$.P(628441, J$.R(628425, 'commandOptions', commandOptions, false, false), 'maxTimeMS', J$.R(628433, 'maxTimeMS', maxTimeMS, false, false));
                            var command = J$.W(628465, 'command', J$.T(628457, { dropUser: J$.R(628449, 'username', username, false, false) }, 11, false), command, false, false);
                            command = J$.W(628521, 'command', J$.F(628513, J$.R(628473, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.R(628481, 'command', command, false, false), J$.T(628497, { db: J$.R(628489, 'db', db, false, false) }, 11, false), J$.R(628505, 'options', options, false, false)), command, false, false);
                            J$.P(628553, J$.R(628529, 'commandOptions', commandOptions, false, false), 'readPreference', J$.G(628545, J$.R(628537, 'ReadPreference', ReadPreference, false, true), 'primary'));
                            J$.F(628849, J$.R(628561, 'executeCommand', executeCommand, false, true), false)(J$.R(628569, 'db', db, false, false), J$.R(628577, 'command', command, false, false), J$.R(628585, 'commandOptions', commandOptions, false, false), J$.T(628841, function (err, result) {
                                jalangiLabel45:
                                    while (true) {
                                        try {
                                            J$.Fe(628809, arguments.callee, this, arguments);
                                            arguments = J$.N(628817, 'arguments', arguments, true, false, false);
                                            err = J$.N(628825, 'err', err, true, false, false);
                                            result = J$.N(628833, 'result', result, true, false, false);
                                            if (J$.C(40240, J$.C(40232, J$.C(40224, J$.R(628593, 'err', err, false, false)) ? J$.U(38994, '!', J$.G(628609, J$.R(628601, 'err', err, false, false), 'ok')) : J$._()) ? J$.B(39002, '===', J$.G(628625, J$.R(628617, 'err', err, false, false), 'code'), J$.T(628633, undefined, 24, false)) : J$._()))
                                                return J$.Rt(628681, J$.F(628673, J$.R(628641, 'handleCallback', handleCallback, false, true), false)(J$.R(628649, 'callback', callback, false, false), J$.T(628665, { code: J$.U(39010, '-', J$.T(628657, 5000, 22, false)) }, 11, false)));
                                            if (J$.C(40248, J$.R(628689, 'err', err, false, false)))
                                                return J$.Rt(628737, J$.F(628729, J$.R(628697, 'handleCallback', handleCallback, false, true), false)(J$.R(628705, 'callback', callback, false, false), J$.R(628713, 'err', err, false, false), J$.T(628721, null, 25, false)));
                                            J$.F(628801, J$.R(628745, 'handleCallback', handleCallback, false, true), false)(J$.R(628753, 'callback', callback, false, false), J$.T(628761, null, 25, false), J$.C(40256, J$.G(628777, J$.R(628769, 'result', result, false, false), 'ok')) ? J$.T(628785, true, 23, false) : J$.T(628793, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(630281, J$e);
                                        } finally {
                                            if (J$.Fr(630289))
                                                continue jalangiLabel45;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(630297, J$e);
                        } finally {
                            if (J$.Fr(630305))
                                continue jalangiLabel46;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(629081, '_typeof', J$.T(629073, _typeof, 12, false), true, false, false);
            J$.N(629089, 'applyWriteConcern', applyWriteConcern, false, false, false);
            J$.N(629097, 'Code', Code, false, false, false);
            J$.N(629105, 'resolveReadPreference', resolveReadPreference, false, false, false);
            J$.N(629113, 'crypto', crypto, false, false, false);
            J$.N(629121, 'debugOptions', debugOptions, false, false, false);
            J$.N(629129, 'handleCallback', handleCallback, false, false, false);
            J$.N(629137, 'MongoError', MongoError, false, false, false);
            J$.N(629145, 'parseIndexOptions', parseIndexOptions, false, false, false);
            J$.N(629153, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(629161, 'toError', toError, false, false, false);
            J$.N(629169, 'CONSTANTS', CONSTANTS, false, false, false);
            J$.N(629177, 'MongoDBNamespace', MongoDBNamespace, false, false, false);
            J$.N(629185, 'count', count, false, false, false);
            J$.N(629193, 'findOne', findOne, false, false, false);
            J$.N(629201, 'remove', remove, false, false, false);
            J$.N(629209, 'updateOne', updateOne, false, false, false);
            J$.N(629217, 'collection', collection, false, false, false);
            loadCollection = J$.N(629233, 'loadCollection', J$.T(629225, loadCollection, 12, false), true, false, false);
            J$.N(629241, 'db', db, false, false, false);
            loadDb = J$.N(629257, 'loadDb', J$.T(629249, loadDb, 12, false), true, false, false);
            J$.N(629265, 'debugFields', debugFields, false, false, false);
            addUser = J$.N(629281, 'addUser', J$.T(629273, addUser, 12, false), true, false, false);
            collections = J$.N(629297, 'collections', J$.T(629289, collections, 12, false), true, false, false);
            createIndex = J$.N(629313, 'createIndex', J$.T(629305, createIndex, 12, false), true, false, false);
            createListener = J$.N(629329, 'createListener', J$.T(629321, createListener, 12, false), true, false, false);
            dropCollection = J$.N(629345, 'dropCollection', J$.T(629337, dropCollection, 12, false), true, false, false);
            dropDatabase = J$.N(629361, 'dropDatabase', J$.T(629353, dropDatabase, 12, false), true, false, false);
            ensureIndex = J$.N(629377, 'ensureIndex', J$.T(629369, ensureIndex, 12, false), true, false, false);
            evaluate = J$.N(629393, 'evaluate', J$.T(629385, evaluate, 12, false), true, false, false);
            executeCommand = J$.N(629409, 'executeCommand', J$.T(629401, executeCommand, 12, false), true, false, false);
            executeDbAdminCommand = J$.N(629425, 'executeDbAdminCommand', J$.T(629417, executeDbAdminCommand, 12, false), true, false, false);
            indexInformation = J$.N(629441, 'indexInformation', J$.T(629433, indexInformation, 12, false), true, false, false);
            profilingInfo = J$.N(629457, 'profilingInfo', J$.T(629449, profilingInfo, 12, false), true, false, false);
            removeUser = J$.N(629473, 'removeUser', J$.T(629465, removeUser, 12, false), true, false, false);
            validateDatabaseName = J$.N(629489, 'validateDatabaseName', J$.T(629481, validateDatabaseName, 12, false), true, false, false);
            createCreateIndexCommand = J$.N(629505, 'createCreateIndexCommand', J$.T(629497, createCreateIndexCommand, 12, false), true, false, false);
            createIndexUsingCreateIndexes = J$.N(629521, 'createIndexUsingCreateIndexes', J$.T(629513, createIndexUsingCreateIndexes, 12, false), true, false, false);
            executeAuthCreateUserCommand = J$.N(629537, 'executeAuthCreateUserCommand', J$.T(629529, executeAuthCreateUserCommand, 12, false), true, false, false);
            executeAuthRemoveUserCommand = J$.N(629553, 'executeAuthRemoveUserCommand', J$.T(629545, executeAuthRemoveUserCommand, 12, false), true, false, false);
            J$.T(614033, 'use strict', 21, false);
            var applyWriteConcern = J$.W(614361, 'applyWriteConcern', J$.G(614353, J$.F(614345, J$.I(typeof require === 'undefined' ? require = J$.R(614329, 'require', undefined, true, true) : require = J$.R(614329, 'require', require, true, true)), false)(J$.T(614337, '../utils', 21, false)), 'applyWriteConcern'), applyWriteConcern, false, true);
            var Code = J$.W(614409, 'Code', J$.G(614401, J$.G(614393, J$.F(614385, J$.I(typeof require === 'undefined' ? require = J$.R(614369, 'require', undefined, true, true) : require = J$.R(614369, 'require', require, true, true)), false)(J$.T(614377, '../core', 21, false)), 'BSON'), 'Code'), Code, false, true);
            var resolveReadPreference = J$.W(614449, 'resolveReadPreference', J$.G(614441, J$.F(614433, J$.I(typeof require === 'undefined' ? require = J$.R(614417, 'require', undefined, true, true) : require = J$.R(614417, 'require', require, true, true)), false)(J$.T(614425, '../utils', 21, false)), 'resolveReadPreference'), resolveReadPreference, false, true);
            var crypto = J$.W(614481, 'crypto', J$.F(614473, J$.I(typeof require === 'undefined' ? require = J$.R(614457, 'require', undefined, true, true) : require = J$.R(614457, 'require', require, true, true)), false)(J$.T(614465, 'crypto', 21, false)), crypto, false, true);
            var debugOptions = J$.W(614521, 'debugOptions', J$.G(614513, J$.F(614505, J$.I(typeof require === 'undefined' ? require = J$.R(614489, 'require', undefined, true, true) : require = J$.R(614489, 'require', require, true, true)), false)(J$.T(614497, '../utils', 21, false)), 'debugOptions'), debugOptions, false, true);
            var handleCallback = J$.W(614561, 'handleCallback', J$.G(614553, J$.F(614545, J$.I(typeof require === 'undefined' ? require = J$.R(614529, 'require', undefined, true, true) : require = J$.R(614529, 'require', require, true, true)), false)(J$.T(614537, '../utils', 21, false)), 'handleCallback'), handleCallback, false, true);
            var MongoError = J$.W(614601, 'MongoError', J$.G(614593, J$.F(614585, J$.I(typeof require === 'undefined' ? require = J$.R(614569, 'require', undefined, true, true) : require = J$.R(614569, 'require', require, true, true)), false)(J$.T(614577, '../core', 21, false)), 'MongoError'), MongoError, false, true);
            var parseIndexOptions = J$.W(614641, 'parseIndexOptions', J$.G(614633, J$.F(614625, J$.I(typeof require === 'undefined' ? require = J$.R(614609, 'require', undefined, true, true) : require = J$.R(614609, 'require', require, true, true)), false)(J$.T(614617, '../utils', 21, false)), 'parseIndexOptions'), parseIndexOptions, false, true);
            var ReadPreference = J$.W(614681, 'ReadPreference', J$.G(614673, J$.F(614665, J$.I(typeof require === 'undefined' ? require = J$.R(614649, 'require', undefined, true, true) : require = J$.R(614649, 'require', require, true, true)), false)(J$.T(614657, '../core', 21, false)), 'ReadPreference'), ReadPreference, false, true);
            var toError = J$.W(614721, 'toError', J$.G(614713, J$.F(614705, J$.I(typeof require === 'undefined' ? require = J$.R(614689, 'require', undefined, true, true) : require = J$.R(614689, 'require', require, true, true)), false)(J$.T(614697, '../utils', 21, false)), 'toError'), toError, false, true);
            var CONSTANTS = J$.W(614753, 'CONSTANTS', J$.F(614745, J$.I(typeof require === 'undefined' ? require = J$.R(614729, 'require', undefined, true, true) : require = J$.R(614729, 'require', require, true, true)), false)(J$.T(614737, '../constants', 21, false)), CONSTANTS, false, true);
            var MongoDBNamespace = J$.W(614793, 'MongoDBNamespace', J$.G(614785, J$.F(614777, J$.I(typeof require === 'undefined' ? require = J$.R(614761, 'require', undefined, true, true) : require = J$.R(614761, 'require', require, true, true)), false)(J$.T(614769, '../utils', 21, false)), 'MongoDBNamespace'), MongoDBNamespace, false, true);
            var count = J$.W(614833, 'count', J$.G(614825, J$.F(614817, J$.I(typeof require === 'undefined' ? require = J$.R(614801, 'require', undefined, true, true) : require = J$.R(614801, 'require', require, true, true)), false)(J$.T(614809, './collection_ops', 21, false)), 'count'), count, false, true);
            var findOne = J$.W(614873, 'findOne', J$.G(614865, J$.F(614857, J$.I(typeof require === 'undefined' ? require = J$.R(614841, 'require', undefined, true, true) : require = J$.R(614841, 'require', require, true, true)), false)(J$.T(614849, './collection_ops', 21, false)), 'findOne'), findOne, false, true);
            var remove = J$.W(614913, 'remove', J$.G(614905, J$.F(614897, J$.I(typeof require === 'undefined' ? require = J$.R(614881, 'require', undefined, true, true) : require = J$.R(614881, 'require', require, true, true)), false)(J$.T(614889, './collection_ops', 21, false)), 'remove'), remove, false, true);
            var updateOne = J$.W(614953, 'updateOne', J$.G(614945, J$.F(614937, J$.I(typeof require === 'undefined' ? require = J$.R(614921, 'require', undefined, true, true) : require = J$.R(614921, 'require', require, true, true)), false)(J$.T(614929, './collection_ops', 21, false)), 'updateOne'), updateOne, false, true);
            var collection;
            var db;
            var debugFields = J$.W(615265, 'debugFields', J$.T(615257, [
                J$.T(615105, 'authSource', 21, false),
                J$.T(615113, 'w', 21, false),
                J$.T(615121, 'wtimeout', 21, false),
                J$.T(615129, 'j', 21, false),
                J$.T(615137, 'native_parser', 21, false),
                J$.T(615145, 'forceServerObjectId', 21, false),
                J$.T(615153, 'serializeFunctions', 21, false),
                J$.T(615161, 'raw', 21, false),
                J$.T(615169, 'promoteLongs', 21, false),
                J$.T(615177, 'promoteValues', 21, false),
                J$.T(615185, 'promoteBuffers', 21, false),
                J$.T(615193, 'bufferMaxEntries', 21, false),
                J$.T(615201, 'numberOfRetries', 21, false),
                J$.T(615209, 'retryMiliSeconds', 21, false),
                J$.T(615217, 'readPreference', 21, false),
                J$.T(615225, 'pkFactory', 21, false),
                J$.T(615233, 'parentDb', 21, false),
                J$.T(615241, 'promiseLibrary', 21, false),
                J$.T(615249, 'noListener', 21, false)
            ], 10, false), debugFields, false, true);
            J$.P(629057, J$.I(typeof module === 'undefined' ? module = J$.R(628929, 'module', undefined, true, true) : module = J$.R(628929, 'module', module, true, true)), 'exports', J$.T(629049, {
                addUser: J$.R(628937, 'addUser', addUser, false, true),
                collections: J$.R(628945, 'collections', collections, false, true),
                createListener: J$.R(628953, 'createListener', createListener, false, true),
                createIndex: J$.R(628961, 'createIndex', createIndex, false, true),
                dropCollection: J$.R(628969, 'dropCollection', dropCollection, false, true),
                dropDatabase: J$.R(628977, 'dropDatabase', dropDatabase, false, true),
                ensureIndex: J$.R(628985, 'ensureIndex', ensureIndex, false, true),
                evaluate: J$.R(628993, 'evaluate', evaluate, false, true),
                executeCommand: J$.R(629001, 'executeCommand', executeCommand, false, true),
                executeDbAdminCommand: J$.R(629009, 'executeDbAdminCommand', executeDbAdminCommand, false, true),
                indexInformation: J$.R(629017, 'indexInformation', indexInformation, false, true),
                profilingInfo: J$.R(629025, 'profilingInfo', profilingInfo, false, true),
                removeUser: J$.R(629033, 'removeUser', removeUser, false, true),
                validateDatabaseName: J$.R(629041, 'validateDatabaseName', validateDatabaseName, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(630313, J$e);
        } finally {
            if (J$.Sr(630321))
                continue jalangiLabel47;
            else
                break jalangiLabel47;
        }
    }
// JALANGI DO NOT INSTRUMENT

