J$.noInstrEval = false;
jalangiLabel29:
    while (true) {
        try {
            J$.Se(155625, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/connection/connect.js');
            function connect(options, callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(149241, arguments.callee, this, arguments);
                            arguments = J$.N(149249, 'arguments', arguments, true, false, false);
                            options = J$.N(149257, 'options', options, true, false, false);
                            callback = J$.N(149265, 'callback', callback, true, false, false);
                            if (J$.C(7944, J$.B(9922, '==', J$.R(148617, 'AUTH_PROVIDERS', AUTH_PROVIDERS, false, true), J$.T(148625, null, 25, false)))) {
                                AUTH_PROVIDERS = J$.W(148665, 'AUTH_PROVIDERS', J$.F(148657, J$.R(148633, 'defaultAuthProviders', defaultAuthProviders, false, true), false)(J$.G(148649, J$.R(148641, 'options', options, false, false), 'bson')), AUTH_PROVIDERS, false, true);
                            }
                            if (J$.C(7960, J$.B(9930, '!==', J$.G(148681, J$.R(148673, 'options', options, false, false), 'family'), void J$.T(148689, 0, 22, false)))) {
                                J$.F(148881, J$.R(148697, 'makeConnection', makeConnection, false, true), false)(J$.G(148713, J$.R(148705, 'options', options, false, false), 'family'), J$.R(148721, 'options', options, false, false), J$.T(148873, function (err, socket) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(148841, arguments.callee, this, arguments);
                                                arguments = J$.N(148849, 'arguments', arguments, true, false, false);
                                                err = J$.N(148857, 'err', err, true, false, false);
                                                socket = J$.N(148865, 'socket', socket, true, false, false);
                                                if (J$.C(7952, J$.R(148729, 'err', err, false, false))) {
                                                    J$.F(148761, J$.R(148737, 'callback', callback, false, false), false)(J$.R(148745, 'err', err, false, false), J$.R(148753, 'socket', socket, false, false));
                                                    return J$.Rt(148769, undefined);
                                                }
                                                J$.F(148833, J$.R(148777, 'performInitialHandshake', performInitialHandshake, false, true), false)(J$.F(148809, J$.R(148785, 'Connection', Connection, false, true), true)(J$.R(148793, 'socket', socket, false, false), J$.R(148801, 'options', options, false, false)), J$.R(148817, 'options', options, false, false), J$.R(148825, 'callback', callback, false, false));
                                            } catch (J$e) {
                                                J$.Ex(155921, J$e);
                                            } finally {
                                                if (J$.Fr(155929))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                return J$.Rt(148889, undefined);
                            }
                            return J$.Rt(149233, J$.F(149225, J$.R(148897, 'makeConnection', makeConnection, false, true), false)(J$.T(148905, 6, 22, false), J$.R(148913, 'options', options, false, false), J$.T(149217, function (err, ipv6Socket) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(149185, arguments.callee, this, arguments);
                                            arguments = J$.N(149193, 'arguments', arguments, true, false, false);
                                            err = J$.N(149201, 'err', err, true, false, false);
                                            ipv6Socket = J$.N(149209, 'ipv6Socket', ipv6Socket, true, false, false);
                                            if (J$.C(7976, J$.R(148921, 'err', err, false, false))) {
                                                J$.F(149105, J$.R(148929, 'makeConnection', makeConnection, false, true), false)(J$.T(148937, 4, 22, false), J$.R(148945, 'options', options, false, false), J$.T(149097, function (err, ipv4Socket) {
                                                    jalangiLabel1:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(149065, arguments.callee, this, arguments);
                                                                arguments = J$.N(149073, 'arguments', arguments, true, false, false);
                                                                err = J$.N(149081, 'err', err, true, false, false);
                                                                ipv4Socket = J$.N(149089, 'ipv4Socket', ipv4Socket, true, false, false);
                                                                if (J$.C(7968, J$.R(148953, 'err', err, false, false))) {
                                                                    J$.F(148985, J$.R(148961, 'callback', callback, false, false), false)(J$.R(148969, 'err', err, false, false), J$.R(148977, 'ipv4Socket', ipv4Socket, false, false));
                                                                    return J$.Rt(148993, undefined);
                                                                }
                                                                J$.F(149057, J$.R(149001, 'performInitialHandshake', performInitialHandshake, false, true), false)(J$.F(149033, J$.R(149009, 'Connection', Connection, false, true), true)(J$.R(149017, 'ipv4Socket', ipv4Socket, false, false), J$.R(149025, 'options', options, false, false)), J$.R(149041, 'options', options, false, false), J$.R(149049, 'callback', callback, false, false));
                                                            } catch (J$e) {
                                                                J$.Ex(155937, J$e);
                                                            } finally {
                                                                if (J$.Fr(155945))
                                                                    continue jalangiLabel1;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(149113, undefined);
                                            }
                                            J$.F(149177, J$.R(149121, 'performInitialHandshake', performInitialHandshake, false, true), false)(J$.F(149153, J$.R(149129, 'Connection', Connection, false, true), true)(J$.R(149137, 'ipv6Socket', ipv6Socket, false, false), J$.R(149145, 'options', options, false, false)), J$.R(149161, 'options', options, false, false), J$.R(149169, 'callback', callback, false, false));
                                        } catch (J$e) {
                                            J$.Ex(155953, J$e);
                                        } finally {
                                            if (J$.Fr(155961))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(155969, J$e);
                        } finally {
                            if (J$.Fr(155977))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getSaslSupportedMechs(options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(149593, arguments.callee, this, arguments);
                            arguments = J$.N(149601, 'arguments', arguments, true, false, false);
                            options = J$.N(149609, 'options', options, true, false, false);
                            J$.N(149617, 'credentials', credentials, false, false, false);
                            J$.N(149625, 'authMechanism', authMechanism, false, false, false);
                            J$.N(149633, 'authSource', authSource, false, false, false);
                            J$.N(149641, 'user', user, false, false, false);
                            if (J$.C(7992, J$.U(9938, '!', J$.C(7984, J$.R(149273, 'options', options, false, false)) ? J$.G(149289, J$.R(149281, 'options', options, false, false), 'credentials') : J$._()))) {
                                return J$.Rt(149305, J$.T(149297, {}, 11, false));
                            }
                            var credentials = J$.W(149329, 'credentials', J$.G(149321, J$.R(149313, 'options', options, false, false), 'credentials'), credentials, false, false);
                            var authMechanism = J$.W(149353, 'authMechanism', J$.G(149345, J$.R(149337, 'credentials', credentials, false, false), 'mechanism'), authMechanism, false, false);
                            var authSource = J$.W(149401, 'authSource', J$.C(8008, J$.C(8000, J$.G(149369, J$.R(149361, 'credentials', credentials, false, false), 'source')) ? J$._() : J$.G(149385, J$.R(149377, 'options', options, false, false), 'dbName')) ? J$._() : J$.T(149393, 'admin', 21, false), authSource, false, false);
                            var user = J$.W(149441, 'user', J$.C(8016, J$.G(149417, J$.R(149409, 'credentials', credentials, false, false), 'username')) ? J$._() : J$.G(149433, J$.R(149425, 'options', options, false, false), 'user'), user, false, false);
                            if (J$.C(8032, J$.C(8024, J$.B(9954, '===', J$.U(9946, 'typeof', J$.R(149449, 'authMechanism', authMechanism, false, false)), J$.T(149457, 'string', 21, false))) ? J$.B(9962, '!==', J$.M(149473, J$.R(149465, 'authMechanism', authMechanism, false, false), 'toUpperCase', false)(), J$.T(149481, 'DEFAULT', 21, false)) : J$._())) {
                                return J$.Rt(149497, J$.T(149489, {}, 11, false));
                            }
                            if (J$.C(8040, J$.U(9970, '!', J$.R(149505, 'user', user, false, false)))) {
                                return J$.Rt(149521, J$.T(149513, {}, 11, false));
                            }
                            return J$.Rt(149585, J$.T(149577, { saslSupportedMechs: J$.M(149569, J$.M(149553, J$.T(149529, '', 21, false), 'concat', false)(J$.R(149537, 'authSource', authSource, false, false), J$.T(149545, '.', 21, false)), 'concat', false)(J$.R(149561, 'user', user, false, false)) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(155985, J$e);
                        } finally {
                            if (J$.Fr(155993))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkSupportedServer(ismaster, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(150201, arguments.callee, this, arguments);
                            arguments = J$.N(150209, 'arguments', arguments, true, false, false);
                            ismaster = J$.N(150217, 'ismaster', ismaster, true, false, false);
                            options = J$.N(150225, 'options', options, true, false, false);
                            J$.N(150233, 'serverVersionHighEnough', serverVersionHighEnough, false, false, false);
                            J$.N(150241, 'serverVersionLowEnough', serverVersionLowEnough, false, false, false);
                            J$.N(150249, '_message', _message, false, false, false);
                            J$.N(150257, 'message', message, false, false, false);
                            var serverVersionHighEnough = J$.W(149705, 'serverVersionHighEnough', J$.C(8056, J$.C(8048, J$.R(149649, 'ismaster', ismaster, false, false)) ? J$.B(9986, '===', J$.U(9978, 'typeof', J$.G(149665, J$.R(149657, 'ismaster', ismaster, false, false), 'maxWireVersion')), J$.T(149673, 'number', 21, false)) : J$._()) ? J$.B(9994, '>=', J$.G(149689, J$.R(149681, 'ismaster', ismaster, false, false), 'maxWireVersion'), J$.R(149697, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, true)) : J$._(), serverVersionHighEnough, false, false);
                            var serverVersionLowEnough = J$.W(149769, 'serverVersionLowEnough', J$.C(8072, J$.C(8064, J$.R(149713, 'ismaster', ismaster, false, false)) ? J$.B(10010, '===', J$.U(10002, 'typeof', J$.G(149729, J$.R(149721, 'ismaster', ismaster, false, false), 'minWireVersion')), J$.T(149737, 'number', 21, false)) : J$._()) ? J$.B(10018, '<=', J$.G(149753, J$.R(149745, 'ismaster', ismaster, false, false), 'minWireVersion'), J$.R(149761, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, true)) : J$._(), serverVersionLowEnough, false, false);
                            if (J$.C(8088, J$.R(149777, 'serverVersionHighEnough', serverVersionHighEnough, false, false))) {
                                if (J$.C(8080, J$.R(149785, 'serverVersionLowEnough', serverVersionLowEnough, false, false))) {
                                    return J$.Rt(149801, J$.T(149793, null, 25, false));
                                }
                                var _message = J$.W(149961, '_message', J$.M(149953, J$.M(149929, J$.M(149905, J$.M(149873, J$.M(149841, J$.T(149809, 'Server at ', 21, false), 'concat', false)(J$.G(149825, J$.R(149817, 'options', options, false, false), 'host'), J$.T(149833, ':', 21, false)), 'concat', false)(J$.G(149857, J$.R(149849, 'options', options, false, false), 'port'), J$.T(149865, ' reports minimum wire version ', 21, false)), 'concat', false)(J$.G(149889, J$.R(149881, 'ismaster', ismaster, false, false), 'minWireVersion'), J$.T(149897, ', but this version of the Node.js Driver requires at most ', 21, false)), 'concat', false)(J$.R(149913, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, true), J$.T(149921, ' (MongoDB ', 21, false)), 'concat', false)(J$.R(149937, 'MAX_SUPPORTED_SERVER_VERSION', MAX_SUPPORTED_SERVER_VERSION, false, true), J$.T(149945, ')', 21, false)), _message, false, false);
                                return J$.Rt(149993, J$.F(149985, J$.R(149969, 'MongoError', MongoError, false, true), true)(J$.R(149977, '_message', _message, false, false)));
                            }
                            var message = J$.W(150161, 'message', J$.M(150153, J$.M(150129, J$.M(150105, J$.M(150065, J$.M(150033, J$.T(150001, 'Server at ', 21, false), 'concat', false)(J$.G(150017, J$.R(150009, 'options', options, false, false), 'host'), J$.T(150025, ':', 21, false)), 'concat', false)(J$.G(150049, J$.R(150041, 'options', options, false, false), 'port'), J$.T(150057, ' reports maximum wire version ', 21, false)), 'concat', false)(J$.C(8096, J$.G(150081, J$.R(150073, 'ismaster', ismaster, false, false), 'maxWireVersion')) ? J$._() : J$.T(150089, 0, 22, false), J$.T(150097, ', but this version of the Node.js Driver requires at least ', 21, false)), 'concat', false)(J$.R(150113, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, true), J$.T(150121, ' (MongoDB ', 21, false)), 'concat', false)(J$.R(150137, 'MIN_SUPPORTED_SERVER_VERSION', MIN_SUPPORTED_SERVER_VERSION, false, true), J$.T(150145, ')', 21, false)), message, false, false);
                            return J$.Rt(150193, J$.F(150185, J$.R(150169, 'MongoError', MongoError, false, true), true)(J$.R(150177, 'message', message, false, false)));
                        } catch (J$e) {
                            J$.Ex(156001, J$e);
                        } finally {
                            if (J$.Fr(156009))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function performInitialHandshake(conn, options, _callback) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(151401, arguments.callee, this, arguments);
                            arguments = J$.N(151409, 'arguments', arguments, true, false, false);
                            conn = J$.N(151417, 'conn', conn, true, false, false);
                            options = J$.N(151425, 'options', options, true, false, false);
                            _callback = J$.N(151433, '_callback', _callback, true, false, false);
                            J$.N(151441, 'callback', callback, false, false, false);
                            J$.N(151449, 'compressors', compressors, false, false, false);
                            J$.N(151457, 'handshakeDoc', handshakeDoc, false, false, false);
                            J$.N(151465, 'start', start, false, false, false);
                            var callback = J$.W(150369, 'callback', J$.T(150361, function callback(err, ret) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(150329, arguments.callee, this, arguments);
                                            arguments = J$.N(150337, 'arguments', arguments, true, false, false);
                                            err = J$.N(150345, 'err', err, true, false, false);
                                            ret = J$.N(150353, 'ret', ret, true, false, false);
                                            if (J$.C(8112, J$.C(8104, J$.R(150265, 'err', err, false, false)) ? J$.R(150273, 'conn', conn, false, false) : J$._())) {
                                                J$.M(150289, J$.R(150281, 'conn', conn, false, false), 'destroy', false)();
                                            }
                                            J$.F(150321, J$.R(150297, '_callback', _callback, false, false), false)(J$.R(150305, 'err', err, false, false), J$.R(150313, 'ret', ret, false, false));
                                        } catch (J$e) {
                                            J$.Ex(156017, J$e);
                                        } finally {
                                            if (J$.Fr(156025))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), callback, false, false);
                            var compressors = J$.W(150385, 'compressors', J$.T(150377, [], 10, false), compressors, false, false);
                            if (J$.C(8128, J$.C(8120, J$.G(150401, J$.R(150393, 'options', options, false, false), 'compression')) ? J$.G(150425, J$.G(150417, J$.R(150409, 'options', options, false, false), 'compression'), 'compressors') : J$._())) {
                                compressors = J$.W(150457, 'compressors', J$.G(150449, J$.G(150441, J$.R(150433, 'options', options, false, false), 'compression'), 'compressors'), compressors, false, false);
                            }
                            var handshakeDoc = J$.W(150553, 'handshakeDoc', J$.M(150545, J$.I(typeof Object === 'undefined' ? Object = J$.R(150465, 'Object', undefined, true, true) : Object = J$.R(150465, 'Object', Object, true, true)), 'assign', false)(J$.T(150513, {
                                ismaster: J$.T(150473, true, 23, false),
                                client: J$.F(150497, J$.R(150481, 'createClientInfo', createClientInfo, false, true), false)(J$.R(150489, 'options', options, false, false)),
                                compression: J$.R(150505, 'compressors', compressors, false, false)
                            }, 11, false), J$.F(150537, J$.R(150521, 'getSaslSupportedMechs', getSaslSupportedMechs, false, true), false)(J$.R(150529, 'options', options, false, false))), handshakeDoc, false, false);
                            var start = J$.W(150585, 'start', J$.M(150577, J$.F(150569, J$.I(typeof Date === 'undefined' ? Date = J$.R(150561, 'Date', undefined, true, true) : Date = J$.R(150561, 'Date', Date, true, true)), true)(), 'getTime', false)(), start, false, false);
                            J$.F(151393, J$.R(150593, 'runCommand', runCommand, false, true), false)(J$.R(150601, 'conn', conn, false, false), J$.T(150609, 'admin.$cmd', 21, false), J$.R(150617, 'handshakeDoc', handshakeDoc, false, false), J$.R(150625, 'options', options, false, false), J$.T(151385, function (err, ismaster) {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(151329, arguments.callee, this, arguments);
                                            arguments = J$.N(151337, 'arguments', arguments, true, false, false);
                                            err = J$.N(151345, 'err', err, true, false, false);
                                            ismaster = J$.N(151353, 'ismaster', ismaster, true, false, false);
                                            J$.N(151361, 'supportedServerErr', supportedServerErr, false, false, false);
                                            J$.N(151369, 'agreedCompressors', agreedCompressors, false, false, false);
                                            J$.N(151377, 'credentials', credentials, false, false, false);
                                            if (J$.C(8136, J$.R(150633, 'err', err, false, false))) {
                                                J$.F(150665, J$.R(150641, 'callback', callback, false, false), false)(J$.R(150649, 'err', err, false, false), J$.T(150657, null, 25, false));
                                                return J$.Rt(150673, undefined);
                                            }
                                            if (J$.C(8144, J$.B(10026, '===', J$.G(150689, J$.R(150681, 'ismaster', ismaster, false, false), 'ok'), J$.T(150697, 0, 22, false)))) {
                                                J$.F(150745, J$.R(150705, 'callback', callback, false, false), false)(J$.F(150729, J$.R(150713, 'MongoError', MongoError, false, true), true)(J$.R(150721, 'ismaster', ismaster, false, false)), J$.T(150737, null, 25, false));
                                                return J$.Rt(150753, undefined);
                                            }
                                            var supportedServerErr = J$.W(150793, 'supportedServerErr', J$.F(150785, J$.R(150761, 'checkSupportedServer', checkSupportedServer, false, true), false)(J$.R(150769, 'ismaster', ismaster, false, false), J$.R(150777, 'options', options, false, false)), supportedServerErr, false, false);
                                            if (J$.C(8152, J$.R(150801, 'supportedServerErr', supportedServerErr, false, false))) {
                                                J$.F(150833, J$.R(150809, 'callback', callback, false, false), false)(J$.R(150817, 'supportedServerErr', supportedServerErr, false, false), J$.T(150825, null, 25, false));
                                                return J$.Rt(150841, undefined);
                                            }
                                            if (J$.C(8184, J$.G(150857, J$.R(150849, 'ismaster', ismaster, false, false), 'compression'))) {
                                                var agreedCompressors = J$.W(150961, 'agreedCompressors', J$.M(150953, J$.R(150865, 'compressors', compressors, false, false), 'filter', false)(J$.T(150945, function (compressor) {
                                                    jalangiLabel7:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(150921, arguments.callee, this, arguments);
                                                                arguments = J$.N(150929, 'arguments', arguments, true, false, false);
                                                                compressor = J$.N(150937, 'compressor', compressor, true, false, false);
                                                                return J$.Rt(150913, J$.B(10042, '!==', J$.M(150897, J$.G(150881, J$.R(150873, 'ismaster', ismaster, false, false), 'compression'), 'indexOf', false)(J$.R(150889, 'compressor', compressor, false, false)), J$.U(10034, '-', J$.T(150905, 1, 22, false))));
                                                            } catch (J$e) {
                                                                J$.Ex(156033, J$e);
                                                            } finally {
                                                                if (J$.Fr(156041))
                                                                    continue jalangiLabel7;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), agreedCompressors, false, false);
                                                if (J$.C(8160, J$.G(150977, J$.R(150969, 'agreedCompressors', agreedCompressors, false, false), 'length'))) {
                                                    J$.P(151017, J$.R(150985, 'conn', conn, false, false), 'agreedCompressor', J$.G(151009, J$.R(150993, 'agreedCompressors', agreedCompressors, false, false), J$.T(151001, 0, 22, false)));
                                                }
                                                if (J$.C(8176, J$.C(8168, J$.G(151033, J$.R(151025, 'options', options, false, false), 'compression')) ? J$.G(151057, J$.G(151049, J$.R(151041, 'options', options, false, false), 'compression'), 'zlibCompressionLevel') : J$._())) {
                                                    J$.P(151097, J$.R(151065, 'conn', conn, false, false), 'zlibCompressionLevel', J$.G(151089, J$.G(151081, J$.R(151073, 'options', options, false, false), 'compression'), 'zlibCompressionLevel'));
                                                }
                                            }
                                            J$.P(151121, J$.R(151105, 'conn', conn, false, false), 'ismaster', J$.R(151113, 'ismaster', ismaster, false, false));
                                            J$.P(151169, J$.R(151129, 'conn', conn, false, false), 'lastIsMasterMS', J$.B(10050, '-', J$.M(151153, J$.F(151145, J$.I(typeof Date === 'undefined' ? Date = J$.R(151137, 'Date', undefined, true, true) : Date = J$.R(151137, 'Date', Date, true, true)), true)(), 'getTime', false)(), J$.R(151161, 'start', start, false, false)));
                                            var credentials = J$.W(151193, 'credentials', J$.G(151185, J$.R(151177, 'options', options, false, false), 'credentials'), credentials, false, false);
                                            if (J$.C(8200, J$.C(8192, J$.U(10058, '!', J$.G(151209, J$.R(151201, 'ismaster', ismaster, false, false), 'arbiterOnly'))) ? J$.R(151217, 'credentials', credentials, false, false) : J$._())) {
                                                J$.M(151241, J$.R(151225, 'credentials', credentials, false, false), 'resolveAuthMechanism', false)(J$.R(151233, 'ismaster', ismaster, false, false));
                                                J$.F(151281, J$.R(151249, 'authenticate', authenticate, false, true), false)(J$.R(151257, 'conn', conn, false, false), J$.R(151265, 'credentials', credentials, false, false), J$.R(151273, 'callback', callback, false, false));
                                                return J$.Rt(151289, undefined);
                                            }
                                            J$.F(151321, J$.R(151297, 'callback', callback, false, false), false)(J$.T(151305, null, 25, false), J$.R(151313, 'conn', conn, false, false));
                                        } catch (J$e) {
                                            J$.Ex(156049, J$e);
                                        } finally {
                                            if (J$.Fr(156057))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(156065, J$e);
                        } finally {
                            if (J$.Fr(156073))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseConnectOptions(family, options) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(151833, arguments.callee, this, arguments);
                            arguments = J$.N(151841, 'arguments', arguments, true, false, false);
                            family = J$.N(151849, 'family', family, true, false, false);
                            options = J$.N(151857, 'options', options, true, false, false);
                            J$.N(151865, 'host', host, false, false, false);
                            J$.N(151873, 'result', result, false, false, false);
                            var host = J$.W(151665, 'host', J$.C(8208, J$.B(10074, '===', J$.U(10066, 'typeof', J$.G(151625, J$.R(151617, 'options', options, false, false), 'host')), J$.T(151633, 'string', 21, false))) ? J$.G(151649, J$.R(151641, 'options', options, false, false), 'host') : J$.T(151657, 'localhost', 21, false), host, false, false);
                            if (J$.C(8216, J$.B(10090, '!==', J$.M(151689, J$.R(151673, 'host', host, false, false), 'indexOf', false)(J$.T(151681, '/', 21, false)), J$.U(10082, '-', J$.T(151697, 1, 22, false))))) {
                                return J$.Rt(151721, J$.T(151713, { path: J$.R(151705, 'host', host, false, false) }, 11, false));
                            }
                            var result = J$.W(151809, 'result', J$.T(151801, {
                                family: J$.R(151729, 'family', family, false, false),
                                host: J$.R(151737, 'host', host, false, false),
                                port: J$.C(8224, J$.B(10106, '===', J$.U(10098, 'typeof', J$.G(151753, J$.R(151745, 'options', options, false, false), 'port')), J$.T(151761, 'number', 21, false))) ? J$.G(151777, J$.R(151769, 'options', options, false, false), 'port') : J$.T(151785, 27017, 22, false),
                                rejectUnauthorized: J$.T(151793, false, 23, false)
                            }, 11, false), result, false, false);
                            return J$.Rt(151825, J$.R(151817, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(156081, J$e);
                        } finally {
                            if (J$.Fr(156089))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseSslOptions(family, options) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(152265, arguments.callee, this, arguments);
                            arguments = J$.N(152273, 'arguments', arguments, true, false, false);
                            family = J$.N(152281, 'family', family, true, false, false);
                            options = J$.N(152289, 'options', options, true, false, false);
                            J$.N(152297, 'result', result, false, false, false);
                            J$.N(152305, 'name', name, false, false, false);
                            var result = J$.W(151913, 'result', J$.F(151905, J$.R(151881, 'parseConnectOptions', parseConnectOptions, false, true), false)(J$.R(151889, 'family', family, false, false), J$.R(151897, 'options', options, false, false)), result, false, false);
                            for (var name in J$.H(152041, J$.R(151921, 'options', options, false, false))) {
                                J$.N(152049, 'name', name, false, true, false);
                                {
                                    {
                                        if (J$.C(8240, J$.C(8232, J$.B(10114, '!=', J$.G(151945, J$.R(151929, 'options', options, false, false), J$.R(151937, 'name', name, false, false)), J$.T(151953, null, 25, false))) ? J$.B(10130, '!==', J$.M(151977, J$.R(151961, 'LEGAL_SSL_SOCKET_OPTIONS', LEGAL_SSL_SOCKET_OPTIONS, false, true), 'indexOf', false)(J$.R(151969, 'name', name, false, false)), J$.U(10122, '-', J$.T(151985, 1, 22, false))) : J$._())) {
                                            J$.P(152033, J$.R(151993, 'result', result, false, false), J$.R(152001, 'name', name, false, false), J$.G(152025, J$.R(152009, 'options', options, false, false), J$.R(152017, 'name', name, false, false)));
                                        }
                                    }
                                }
                            }
                            if (J$.C(8256, J$.B(10138, '===', J$.G(152065, J$.R(152057, 'options', options, false, false), 'checkServerIdentity'), J$.T(152073, false, 23, false)))) {
                                J$.P(152129, J$.R(152081, 'result', result, false, false), 'checkServerIdentity', J$.T(152121, function () {
                                    jalangiLabel11:
                                        while (true) {
                                            try {
                                                J$.Fe(152105, arguments.callee, this, arguments);
                                                arguments = J$.N(152113, 'arguments', arguments, true, false, false);
                                                return J$.Rt(152097, J$.T(152089, undefined, 24, false));
                                            } catch (J$e) {
                                                J$.Ex(156097, J$e);
                                            } finally {
                                                if (J$.Fr(156105))
                                                    continue jalangiLabel11;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else if (J$.C(8248, J$.B(10154, '===', J$.U(10146, 'typeof', J$.G(152145, J$.R(152137, 'options', options, false, false), 'checkServerIdentity')), J$.T(152153, 'function', 21, false)))) {
                                J$.P(152185, J$.R(152161, 'result', result, false, false), 'checkServerIdentity', J$.G(152177, J$.R(152169, 'options', options, false, false), 'checkServerIdentity'));
                            }
                            if (J$.C(8264, J$.B(10162, '==', J$.G(152201, J$.R(152193, 'result', result, false, false), 'servername'), J$.T(152209, null, 25, false)))) {
                                J$.P(152241, J$.R(152217, 'result', result, false, false), 'servername', J$.G(152233, J$.R(152225, 'result', result, false, false), 'host'));
                            }
                            return J$.Rt(152257, J$.R(152249, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(156113, J$e);
                        } finally {
                            if (J$.Fr(156121))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function makeConnection(family, options, _callback) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(153873, arguments.callee, this, arguments);
                            function errorHandler(eventName) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(153409, arguments.callee, this, arguments);
                                            arguments = J$.N(153417, 'arguments', arguments, true, false, false);
                                            eventName = J$.N(153425, 'eventName', eventName, true, false, false);
                                            return J$.Rt(153401, J$.T(153393, function (err) {
                                                jalangiLabel15:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(153369, arguments.callee, this, arguments);
                                                            arguments = J$.N(153377, 'arguments', arguments, true, false, false);
                                                            err = J$.N(153385, 'err', err, true, false, false);
                                                            J$.M(153273, J$.R(153201, 'errorEvents', errorEvents, false, false), 'forEach', false)(J$.T(153265, function (event) {
                                                                jalangiLabel14:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(153241, arguments.callee, this, arguments);
                                                                            arguments = J$.N(153249, 'arguments', arguments, true, false, false);
                                                                            event = J$.N(153257, 'event', event, true, false, false);
                                                                            return J$.Rt(153233, J$.M(153225, J$.R(153209, 'socket', socket, false, false), 'removeAllListeners', false)(J$.R(153217, 'event', event, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(156145, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(156153))
                                                                                continue jalangiLabel14;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            J$.M(153305, J$.R(153281, 'socket', socket, false, false), 'removeListener', false)(J$.T(153289, 'connect', 21, false), J$.R(153297, 'connectHandler', connectHandler, false, false));
                                                            J$.F(153361, J$.R(153313, 'callback', callback, false, false), false)(J$.F(153345, J$.R(153321, 'connectionFailureError', connectionFailureError, false, true), false)(J$.R(153329, 'eventName', eventName, false, false), J$.R(153337, 'err', err, false, false)), J$.R(153353, 'eventName', eventName, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(156161, J$e);
                                                        } finally {
                                                            if (J$.Fr(156169))
                                                                continue jalangiLabel15;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(156177, J$e);
                                        } finally {
                                            if (J$.Fr(156185))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function connectHandler() {
                                jalangiLabel18:
                                    while (true) {
                                        try {
                                            J$.Fe(153633, arguments.callee, this, arguments);
                                            arguments = J$.N(153641, 'arguments', arguments, true, false, false);
                                            J$.M(153505, J$.R(153433, 'errorEvents', errorEvents, false, false), 'forEach', false)(J$.T(153497, function (event) {
                                                jalangiLabel17:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(153473, arguments.callee, this, arguments);
                                                            arguments = J$.N(153481, 'arguments', arguments, true, false, false);
                                                            event = J$.N(153489, 'event', event, true, false, false);
                                                            return J$.Rt(153465, J$.M(153457, J$.R(153441, 'socket', socket, false, false), 'removeAllListeners', false)(J$.R(153449, 'event', event, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(156193, J$e);
                                                        } finally {
                                                            if (J$.Fr(156201))
                                                                continue jalangiLabel17;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            if (J$.C(8376, J$.C(8368, J$.G(153521, J$.R(153513, 'socket', socket, false, false), 'authorizationError')) ? J$.R(153529, 'rejectUnauthorized', rejectUnauthorized, false, false) : J$._())) {
                                                return J$.Rt(153569, J$.F(153561, J$.R(153537, 'callback', callback, false, false), false)(J$.G(153553, J$.R(153545, 'socket', socket, false, false), 'authorizationError')));
                                            }
                                            J$.M(153593, J$.R(153577, 'socket', socket, false, false), 'setTimeout', false)(J$.R(153585, 'socketTimeout', socketTimeout, false, false));
                                            J$.F(153625, J$.R(153601, 'callback', callback, false, false), false)(J$.T(153609, null, 25, false), J$.R(153617, 'socket', socket, false, false));
                                        } catch (J$e) {
                                            J$.Ex(156209, J$e);
                                        } finally {
                                            if (J$.Fr(156217))
                                                continue jalangiLabel18;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(153881, 'arguments', arguments, true, false, false);
                            family = J$.N(153889, 'family', family, true, false, false);
                            options = J$.N(153897, 'options', options, true, false, false);
                            _callback = J$.N(153905, '_callback', _callback, true, false, false);
                            J$.N(153913, 'useSsl', useSsl, false, false, false);
                            J$.N(153921, 'keepAlive', keepAlive, false, false, false);
                            J$.N(153929, 'keepAliveInitialDelay', keepAliveInitialDelay, false, false, false);
                            J$.N(153937, 'noDelay', noDelay, false, false, false);
                            J$.N(153945, 'connectionTimeout', connectionTimeout, false, false, false);
                            J$.N(153953, 'socketTimeout', socketTimeout, false, false, false);
                            J$.N(153961, 'rejectUnauthorized', rejectUnauthorized, false, false, false);
                            J$.N(153969, 'socket', socket, false, false, false);
                            J$.N(153977, 'callback', callback, false, false, false);
                            J$.N(153985, 'errorEvents', errorEvents, false, false, false);
                            errorHandler = J$.N(154001, 'errorHandler', J$.T(153993, errorHandler, 12, false), true, false, false);
                            connectHandler = J$.N(154017, 'connectHandler', J$.T(154009, connectHandler, 12, false), true, false, false);
                            var useSsl = J$.W(152361, 'useSsl', J$.C(8272, J$.B(10178, '===', J$.U(10170, 'typeof', J$.G(152321, J$.R(152313, 'options', options, false, false), 'ssl')), J$.T(152329, 'boolean', 21, false))) ? J$.G(152345, J$.R(152337, 'options', options, false, false), 'ssl') : J$.T(152353, false, 23, false), useSsl, false, false);
                            var keepAlive = J$.W(152417, 'keepAlive', J$.C(8280, J$.B(10194, '===', J$.U(10186, 'typeof', J$.G(152377, J$.R(152369, 'options', options, false, false), 'keepAlive')), J$.T(152385, 'boolean', 21, false))) ? J$.G(152401, J$.R(152393, 'options', options, false, false), 'keepAlive') : J$.T(152409, true, 23, false), keepAlive, false, false);
                            var keepAliveInitialDelay = J$.W(152473, 'keepAliveInitialDelay', J$.C(8288, J$.B(10210, '===', J$.U(10202, 'typeof', J$.G(152433, J$.R(152425, 'options', options, false, false), 'keepAliveInitialDelay')), J$.T(152441, 'number', 21, false))) ? J$.G(152457, J$.R(152449, 'options', options, false, false), 'keepAliveInitialDelay') : J$.T(152465, 300000, 22, false), keepAliveInitialDelay, false, false);
                            var noDelay = J$.W(152529, 'noDelay', J$.C(8296, J$.B(10226, '===', J$.U(10218, 'typeof', J$.G(152489, J$.R(152481, 'options', options, false, false), 'noDelay')), J$.T(152497, 'boolean', 21, false))) ? J$.G(152513, J$.R(152505, 'options', options, false, false), 'noDelay') : J$.T(152521, true, 23, false), noDelay, false, false);
                            var connectionTimeout = J$.W(152585, 'connectionTimeout', J$.C(8304, J$.B(10242, '===', J$.U(10234, 'typeof', J$.G(152545, J$.R(152537, 'options', options, false, false), 'connectionTimeout')), J$.T(152553, 'number', 21, false))) ? J$.G(152569, J$.R(152561, 'options', options, false, false), 'connectionTimeout') : J$.T(152577, 30000, 22, false), connectionTimeout, false, false);
                            var socketTimeout = J$.W(152641, 'socketTimeout', J$.C(8312, J$.B(10258, '===', J$.U(10250, 'typeof', J$.G(152601, J$.R(152593, 'options', options, false, false), 'socketTimeout')), J$.T(152609, 'number', 21, false))) ? J$.G(152625, J$.R(152617, 'options', options, false, false), 'socketTimeout') : J$.T(152633, 360000, 22, false), socketTimeout, false, false);
                            var rejectUnauthorized = J$.W(152697, 'rejectUnauthorized', J$.C(8320, J$.B(10274, '===', J$.U(10266, 'typeof', J$.G(152657, J$.R(152649, 'options', options, false, false), 'rejectUnauthorized')), J$.T(152665, 'boolean', 21, false))) ? J$.G(152681, J$.R(152673, 'options', options, false, false), 'rejectUnauthorized') : J$.T(152689, true, 23, false), rejectUnauthorized, false, false);
                            if (J$.C(8328, J$.B(10282, '>', J$.R(152705, 'keepAliveInitialDelay', keepAliveInitialDelay, false, false), J$.R(152713, 'socketTimeout', socketTimeout, false, false)))) {
                                keepAliveInitialDelay = J$.W(152753, 'keepAliveInitialDelay', J$.M(152745, J$.I(typeof Math === 'undefined' ? Math = J$.R(152721, 'Math', undefined, true, true) : Math = J$.R(152721, 'Math', Math, true, true)), 'round', false)(J$.B(10290, '/', J$.R(152729, 'socketTimeout', socketTimeout, false, false), J$.T(152737, 2, 22, false))), keepAliveInitialDelay, false, false);
                            }
                            var socket;
                            var callback = J$.W(152865, 'callback', J$.T(152857, function callback(err, ret) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(152825, arguments.callee, this, arguments);
                                            arguments = J$.N(152833, 'arguments', arguments, true, false, false);
                                            err = J$.N(152841, 'err', err, true, false, false);
                                            ret = J$.N(152849, 'ret', ret, true, false, false);
                                            if (J$.C(8344, J$.C(8336, J$.R(152761, 'err', err, false, false)) ? J$.R(152769, 'socket', socket, false, false) : J$._())) {
                                                J$.M(152785, J$.R(152777, 'socket', socket, false, false), 'destroy', false)();
                                            }
                                            J$.F(152817, J$.R(152793, '_callback', _callback, false, false), false)(J$.R(152801, 'err', err, false, false), J$.R(152809, 'ret', ret, false, false));
                                        } catch (J$e) {
                                            J$.Ex(156129, J$e);
                                        } finally {
                                            if (J$.Fr(156137))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), callback, false, false);
                            try {
                                if (J$.C(8360, J$.R(152873, 'useSsl', useSsl, false, false))) {
                                    socket = J$.W(152929, 'socket', J$.M(152921, J$.R(152881, 'tls', tls, false, true), 'connect', false)(J$.F(152913, J$.R(152889, 'parseSslOptions', parseSslOptions, false, true), false)(J$.R(152897, 'family', family, false, false), J$.R(152905, 'options', options, false, false))), socket, false, false);
                                    if (J$.C(8352, J$.B(10306, '===', J$.U(10298, 'typeof', J$.G(152945, J$.R(152937, 'socket', socket, false, false), 'disableRenegotiation')), J$.T(152953, 'function', 21, false)))) {
                                        J$.M(152969, J$.R(152961, 'socket', socket, false, false), 'disableRenegotiation', false)();
                                    }
                                } else {
                                    socket = J$.W(153025, 'socket', J$.M(153017, J$.R(152977, 'net', net, false, true), 'createConnection', false)(J$.F(153009, J$.R(152985, 'parseConnectOptions', parseConnectOptions, false, true), false)(J$.R(152993, 'family', family, false, false), J$.R(153001, 'options', options, false, false))), socket, false, false);
                                }
                            } catch (err) {
                                J$.N(153065, 'err', err, false, false, true);
                                return J$.Rt(153057, J$.F(153049, J$.R(153033, 'callback', callback, false, false), false)(J$.R(153041, 'err', err, false, false)));
                            }
                            J$.M(153097, J$.R(153073, 'socket', socket, false, false), 'setKeepAlive', false)(J$.R(153081, 'keepAlive', keepAlive, false, false), J$.R(153089, 'keepAliveInitialDelay', keepAliveInitialDelay, false, false));
                            J$.M(153121, J$.R(153105, 'socket', socket, false, false), 'setTimeout', false)(J$.R(153113, 'connectionTimeout', connectionTimeout, false, false));
                            J$.M(153145, J$.R(153129, 'socket', socket, false, false), 'setNoDelay', false)(J$.R(153137, 'noDelay', noDelay, false, false));
                            var errorEvents = J$.W(153193, 'errorEvents', J$.T(153185, [
                                J$.T(153153, 'error', 21, false),
                                J$.T(153161, 'close', 21, false),
                                J$.T(153169, 'timeout', 21, false),
                                J$.T(153177, 'parseError', 21, false)
                            ], 10, false), errorEvents, false, false);
                            J$.M(153689, J$.R(153649, 'socket', socket, false, false), 'once', false)(J$.T(153657, 'error', 21, false), J$.F(153681, J$.R(153665, 'errorHandler', errorHandler, false, false), false)(J$.T(153673, 'error', 21, false)));
                            J$.M(153737, J$.R(153697, 'socket', socket, false, false), 'once', false)(J$.T(153705, 'close', 21, false), J$.F(153729, J$.R(153713, 'errorHandler', errorHandler, false, false), false)(J$.T(153721, 'close', 21, false)));
                            J$.M(153785, J$.R(153745, 'socket', socket, false, false), 'once', false)(J$.T(153753, 'timeout', 21, false), J$.F(153777, J$.R(153761, 'errorHandler', errorHandler, false, false), false)(J$.T(153769, 'timeout', 21, false)));
                            J$.M(153833, J$.R(153793, 'socket', socket, false, false), 'once', false)(J$.T(153801, 'parseError', 21, false), J$.F(153825, J$.R(153809, 'errorHandler', errorHandler, false, false), false)(J$.T(153817, 'parseError', 21, false)));
                            J$.M(153865, J$.R(153841, 'socket', socket, false, false), 'once', false)(J$.T(153849, 'connect', 21, false), J$.R(153857, 'connectHandler', connectHandler, false, false));
                        } catch (J$e) {
                            J$.Ex(156225, J$e);
                        } finally {
                            if (J$.Fr(156233))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function runCommand(conn, ns, command, options, callback) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(154937, arguments.callee, this, arguments);
                            function errorHandler(err) {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(154449, arguments.callee, this, arguments);
                                            arguments = J$.N(154457, 'arguments', arguments, true, false, false);
                                            err = J$.N(154465, 'err', err, true, false, false);
                                            J$.M(154289, J$.R(154281, 'conn', conn, false, false), 'resetSocketTimeout', false)();
                                            J$.M(154377, J$.R(154297, 'CONNECTION_ERROR_EVENTS', CONNECTION_ERROR_EVENTS, false, true), 'forEach', false)(J$.T(154369, function (eventName) {
                                                jalangiLabel20:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(154345, arguments.callee, this, arguments);
                                                            arguments = J$.N(154353, 'arguments', arguments, true, false, false);
                                                            eventName = J$.N(154361, 'eventName', eventName, true, false, false);
                                                            return J$.Rt(154337, J$.M(154329, J$.R(154305, 'conn', conn, false, false), 'removeListener', false)(J$.R(154313, 'eventName', eventName, false, false), J$.R(154321, 'errorHandler', errorHandler, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(156241, J$e);
                                                        } finally {
                                                            if (J$.Fr(156249))
                                                                continue jalangiLabel20;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.M(154409, J$.R(154385, 'conn', conn, false, false), 'removeListener', false)(J$.T(154393, 'message', 21, false), J$.R(154401, 'messageHandler', messageHandler, false, false));
                                            J$.F(154441, J$.R(154417, 'callback', callback, false, false), false)(J$.R(154425, 'err', err, false, false), J$.T(154433, null, 25, false));
                                        } catch (J$e) {
                                            J$.Ex(156257, J$e);
                                        } finally {
                                            if (J$.Fr(156265))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function messageHandler(msg) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(154737, arguments.callee, this, arguments);
                                            arguments = J$.N(154745, 'arguments', arguments, true, false, false);
                                            msg = J$.N(154753, 'msg', msg, true, false, false);
                                            if (J$.C(8400, J$.B(10346, '!==', J$.G(154481, J$.R(154473, 'msg', msg, false, false), 'responseTo'), J$.G(154497, J$.R(154489, 'query', query, false, false), 'requestId')))) {
                                                return J$.Rt(154505, undefined);
                                            }
                                            J$.M(154521, J$.R(154513, 'conn', conn, false, false), 'resetSocketTimeout', false)();
                                            J$.M(154609, J$.R(154529, 'CONNECTION_ERROR_EVENTS', CONNECTION_ERROR_EVENTS, false, true), 'forEach', false)(J$.T(154601, function (eventName) {
                                                jalangiLabel22:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(154577, arguments.callee, this, arguments);
                                                            arguments = J$.N(154585, 'arguments', arguments, true, false, false);
                                                            eventName = J$.N(154593, 'eventName', eventName, true, false, false);
                                                            return J$.Rt(154569, J$.M(154561, J$.R(154537, 'conn', conn, false, false), 'removeListener', false)(J$.R(154545, 'eventName', eventName, false, false), J$.R(154553, 'errorHandler', errorHandler, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(156273, J$e);
                                                        } finally {
                                                            if (J$.Fr(156281))
                                                                continue jalangiLabel22;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.M(154641, J$.R(154617, 'conn', conn, false, false), 'removeListener', false)(J$.T(154625, 'message', 21, false), J$.R(154633, 'messageHandler', messageHandler, false, false));
                                            J$.M(154673, J$.R(154649, 'msg', msg, false, false), 'parse', false)(J$.T(154665, { promoteValues: J$.T(154657, true, 23, false) }, 11, false));
                                            J$.F(154729, J$.R(154681, 'callback', callback, false, false), false)(J$.T(154689, null, 25, false), J$.G(154721, J$.G(154705, J$.R(154697, 'msg', msg, false, false), 'documents'), J$.T(154713, 0, 22, false)));
                                        } catch (J$e) {
                                            J$.Ex(156289, J$e);
                                        } finally {
                                            if (J$.Fr(156297))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(154945, 'arguments', arguments, true, false, false);
                            conn = J$.N(154953, 'conn', conn, true, false, false);
                            ns = J$.N(154961, 'ns', ns, true, false, false);
                            command = J$.N(154969, 'command', command, true, false, false);
                            options = J$.N(154977, 'options', options, true, false, false);
                            callback = J$.N(154985, 'callback', callback, true, false, false);
                            J$.N(154993, 'socketTimeout', socketTimeout, false, false, false);
                            J$.N(155001, 'bson', bson, false, false, false);
                            J$.N(155009, 'query', query, false, false, false);
                            errorHandler = J$.N(155025, 'errorHandler', J$.T(155017, errorHandler, 12, false), true, false, false);
                            messageHandler = J$.N(155041, 'messageHandler', J$.T(155033, messageHandler, 12, false), true, false, false);
                            if (J$.C(8384, J$.B(10322, '===', J$.U(10314, 'typeof', J$.R(154073, 'options', options, false, false)), J$.T(154081, 'function', 21, false))))
                                callback = J$.W(154097, 'callback', J$.R(154089, 'options', options, false, false), callback, false, false), options = J$.W(154113, 'options', J$.T(154105, {}, 11, false), options, false, false);
                            var socketTimeout = J$.W(154169, 'socketTimeout', J$.C(8392, J$.B(10338, '===', J$.U(10330, 'typeof', J$.G(154129, J$.R(154121, 'options', options, false, false), 'socketTimeout')), J$.T(154137, 'number', 21, false))) ? J$.G(154153, J$.R(154145, 'options', options, false, false), 'socketTimeout') : J$.T(154161, 360000, 22, false), socketTimeout, false, false);
                            var bson = J$.W(154201, 'bson', J$.G(154193, J$.G(154185, J$.R(154177, 'conn', conn, false, false), 'options'), 'bson'), bson, false, false);
                            var query = J$.W(154273, 'query', J$.F(154265, J$.R(154209, 'Query', Query, false, true), true)(J$.R(154217, 'bson', bson, false, false), J$.R(154225, 'ns', ns, false, false), J$.R(154233, 'command', command, false, false), J$.T(154257, {
                                numberToSkip: J$.T(154241, 0, 22, false),
                                numberToReturn: J$.T(154249, 1, 22, false)
                            }, 11, false)), query, false, false);
                            J$.M(154777, J$.R(154761, 'conn', conn, false, false), 'setSocketTimeout', false)(J$.R(154769, 'socketTimeout', socketTimeout, false, false));
                            J$.M(154865, J$.R(154785, 'CONNECTION_ERROR_EVENTS', CONNECTION_ERROR_EVENTS, false, true), 'forEach', false)(J$.T(154857, function (eventName) {
                                jalangiLabel24:
                                    while (true) {
                                        try {
                                            J$.Fe(154833, arguments.callee, this, arguments);
                                            arguments = J$.N(154841, 'arguments', arguments, true, false, false);
                                            eventName = J$.N(154849, 'eventName', eventName, true, false, false);
                                            return J$.Rt(154825, J$.M(154817, J$.R(154793, 'conn', conn, false, false), 'once', false)(J$.R(154801, 'eventName', eventName, false, false), J$.R(154809, 'errorHandler', errorHandler, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(156305, J$e);
                                        } finally {
                                            if (J$.Fr(156313))
                                                continue jalangiLabel24;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(154897, J$.R(154873, 'conn', conn, false, false), 'on', false)(J$.T(154881, 'message', 21, false), J$.R(154889, 'messageHandler', messageHandler, false, false));
                            J$.M(154929, J$.R(154905, 'conn', conn, false, false), 'write', false)(J$.M(154921, J$.R(154913, 'query', query, false, false), 'toBin', false)());
                        } catch (J$e) {
                            J$.Ex(156321, J$e);
                        } finally {
                            if (J$.Fr(156329))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function authenticate(conn, credentials, callback) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(155353, arguments.callee, this, arguments);
                            arguments = J$.N(155361, 'arguments', arguments, true, false, false);
                            conn = J$.N(155369, 'conn', conn, true, false, false);
                            credentials = J$.N(155377, 'credentials', credentials, true, false, false);
                            callback = J$.N(155385, 'callback', callback, true, false, false);
                            J$.N(155393, 'mechanism', mechanism, false, false, false);
                            J$.N(155401, 'provider', provider, false, false, false);
                            var mechanism = J$.W(155065, 'mechanism', J$.G(155057, J$.R(155049, 'credentials', credentials, false, false), 'mechanism'), mechanism, false, false);
                            if (J$.C(8408, J$.U(10354, '!', J$.G(155089, J$.R(155073, 'AUTH_PROVIDERS', AUTH_PROVIDERS, false, true), J$.R(155081, 'mechanism', mechanism, false, false))))) {
                                J$.F(155153, J$.R(155097, 'callback', callback, false, false), false)(J$.F(155145, J$.R(155105, 'MongoError', MongoError, false, true), true)(J$.M(155137, J$.T(155113, 'authMechanism \'', 21, false), 'concat', false)(J$.R(155121, 'mechanism', mechanism, false, false), J$.T(155129, '\' not supported', 21, false))));
                                return J$.Rt(155161, undefined);
                            }
                            var provider = J$.W(155193, 'provider', J$.G(155185, J$.R(155169, 'AUTH_PROVIDERS', AUTH_PROVIDERS, false, true), J$.R(155177, 'mechanism', mechanism, false, false)), provider, false, false);
                            J$.M(155345, J$.R(155201, 'provider', provider, false, false), 'auth', false)(J$.R(155209, 'runCommand', runCommand, false, true), J$.T(155225, [J$.R(155217, 'conn', conn, false, false)], 10, false), J$.R(155233, 'credentials', credentials, false, false), J$.T(155337, function (err) {
                                jalangiLabel26:
                                    while (true) {
                                        try {
                                            J$.Fe(155313, arguments.callee, this, arguments);
                                            arguments = J$.N(155321, 'arguments', arguments, true, false, false);
                                            err = J$.N(155329, 'err', err, true, false, false);
                                            if (J$.C(8416, J$.R(155241, 'err', err, false, false)))
                                                return J$.Rt(155273, J$.F(155265, J$.R(155249, 'callback', callback, false, false), false)(J$.R(155257, 'err', err, false, false)));
                                            J$.F(155305, J$.R(155281, 'callback', callback, false, false), false)(J$.T(155289, null, 25, false), J$.R(155297, 'conn', conn, false, false));
                                        } catch (J$e) {
                                            J$.Ex(156337, J$e);
                                        } finally {
                                            if (J$.Fr(156345))
                                                continue jalangiLabel26;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(156353, J$e);
                        } finally {
                            if (J$.Fr(156361))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connectionFailureError(type, err) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(155569, arguments.callee, this, arguments);
                            arguments = J$.N(155577, 'arguments', arguments, true, false, false);
                            type = J$.N(155585, 'type', type, true, false, false);
                            err = J$.N(155593, 'err', err, true, false, false);
                            switch (J$.C1(8424, J$.R(155409, 'type', type, false, false))) {
                            case J$.C2(8432, J$.T(155449, 'error', 21, false)):
                                return J$.Rt(155441, J$.F(155433, J$.R(155417, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.R(155425, 'err', err, false, false)));
                            case J$.C2(8440, J$.T(155489, 'timeout', 21, false)):
                                return J$.Rt(155481, J$.F(155473, J$.R(155457, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.T(155465, 'connection timed out', 21, false)));
                            case J$.C2(8448, J$.T(155529, 'close', 21, false)):
                                return J$.Rt(155521, J$.F(155513, J$.R(155497, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.T(155505, 'connection closed', 21, false)));
                            default:
                                return J$.Rt(155561, J$.F(155553, J$.R(155537, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.T(155545, 'unknown network error', 21, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(156369, J$e);
                        } finally {
                            if (J$.Fr(156377))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(155633, 'net', net, false, false, false);
            J$.N(155641, 'tls', tls, false, false, false);
            J$.N(155649, 'Connection', Connection, false, false, false);
            J$.N(155657, 'Query', Query, false, false, false);
            J$.N(155665, 'createClientInfo', createClientInfo, false, false, false);
            J$.N(155673, 'MongoError', MongoError, false, false, false);
            J$.N(155681, 'MongoNetworkError', MongoNetworkError, false, false, false);
            J$.N(155689, 'defaultAuthProviders', defaultAuthProviders, false, false, false);
            J$.N(155697, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, false, false);
            J$.N(155705, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, false, false);
            J$.N(155713, 'MAX_SUPPORTED_SERVER_VERSION', MAX_SUPPORTED_SERVER_VERSION, false, false, false);
            J$.N(155721, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, false, false);
            J$.N(155729, 'MIN_SUPPORTED_SERVER_VERSION', MIN_SUPPORTED_SERVER_VERSION, false, false, false);
            J$.N(155737, 'AUTH_PROVIDERS', AUTH_PROVIDERS, false, false, false);
            connect = J$.N(155753, 'connect', J$.T(155745, connect, 12, false), true, false, false);
            getSaslSupportedMechs = J$.N(155769, 'getSaslSupportedMechs', J$.T(155761, getSaslSupportedMechs, 12, false), true, false, false);
            checkSupportedServer = J$.N(155785, 'checkSupportedServer', J$.T(155777, checkSupportedServer, 12, false), true, false, false);
            performInitialHandshake = J$.N(155801, 'performInitialHandshake', J$.T(155793, performInitialHandshake, 12, false), true, false, false);
            J$.N(155809, 'LEGAL_SSL_SOCKET_OPTIONS', LEGAL_SSL_SOCKET_OPTIONS, false, false, false);
            parseConnectOptions = J$.N(155825, 'parseConnectOptions', J$.T(155817, parseConnectOptions, 12, false), true, false, false);
            parseSslOptions = J$.N(155841, 'parseSslOptions', J$.T(155833, parseSslOptions, 12, false), true, false, false);
            makeConnection = J$.N(155857, 'makeConnection', J$.T(155849, makeConnection, 12, false), true, false, false);
            J$.N(155865, 'CONNECTION_ERROR_EVENTS', CONNECTION_ERROR_EVENTS, false, false, false);
            runCommand = J$.N(155881, 'runCommand', J$.T(155873, runCommand, 12, false), true, false, false);
            authenticate = J$.N(155897, 'authenticate', J$.T(155889, authenticate, 12, false), true, false, false);
            connectionFailureError = J$.N(155913, 'connectionFailureError', J$.T(155905, connectionFailureError, 12, false), true, false, false);
            J$.T(148185, 'use strict', 21, false);
            var net = J$.W(148217, 'net', J$.F(148209, J$.I(typeof require === 'undefined' ? require = J$.R(148193, 'require', undefined, true, true) : require = J$.R(148193, 'require', require, true, true)), false)(J$.T(148201, 'net', 21, false)), net, false, true);
            var tls = J$.W(148249, 'tls', J$.F(148241, J$.I(typeof require === 'undefined' ? require = J$.R(148225, 'require', undefined, true, true) : require = J$.R(148225, 'require', require, true, true)), false)(J$.T(148233, 'tls', 21, false)), tls, false, true);
            var Connection = J$.W(148281, 'Connection', J$.F(148273, J$.I(typeof require === 'undefined' ? require = J$.R(148257, 'require', undefined, true, true) : require = J$.R(148257, 'require', require, true, true)), false)(J$.T(148265, './connection', 21, false)), Connection, false, true);
            var Query = J$.W(148321, 'Query', J$.G(148313, J$.F(148305, J$.I(typeof require === 'undefined' ? require = J$.R(148289, 'require', undefined, true, true) : require = J$.R(148289, 'require', require, true, true)), false)(J$.T(148297, './commands', 21, false)), 'Query'), Query, false, true);
            var createClientInfo = J$.W(148361, 'createClientInfo', J$.G(148353, J$.F(148345, J$.I(typeof require === 'undefined' ? require = J$.R(148329, 'require', undefined, true, true) : require = J$.R(148329, 'require', require, true, true)), false)(J$.T(148337, '../topologies/shared', 21, false)), 'createClientInfo'), createClientInfo, false, true);
            var MongoError = J$.W(148401, 'MongoError', J$.G(148393, J$.F(148385, J$.I(typeof require === 'undefined' ? require = J$.R(148369, 'require', undefined, true, true) : require = J$.R(148369, 'require', require, true, true)), false)(J$.T(148377, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var MongoNetworkError = J$.W(148441, 'MongoNetworkError', J$.G(148433, J$.F(148425, J$.I(typeof require === 'undefined' ? require = J$.R(148409, 'require', undefined, true, true) : require = J$.R(148409, 'require', require, true, true)), false)(J$.T(148417, '../error', 21, false)), 'MongoNetworkError'), MongoNetworkError, false, true);
            var defaultAuthProviders = J$.W(148481, 'defaultAuthProviders', J$.G(148473, J$.F(148465, J$.I(typeof require === 'undefined' ? require = J$.R(148449, 'require', undefined, true, true) : require = J$.R(148449, 'require', require, true, true)), false)(J$.T(148457, '../auth/defaultAuthProviders', 21, false)), 'defaultAuthProviders'), defaultAuthProviders, false, true);
            var WIRE_CONSTANTS = J$.W(148513, 'WIRE_CONSTANTS', J$.F(148505, J$.I(typeof require === 'undefined' ? require = J$.R(148489, 'require', undefined, true, true) : require = J$.R(148489, 'require', require, true, true)), false)(J$.T(148497, '../wireprotocol/constants', 21, false)), WIRE_CONSTANTS, false, true);
            var MAX_SUPPORTED_WIRE_VERSION = J$.W(148537, 'MAX_SUPPORTED_WIRE_VERSION', J$.G(148529, J$.R(148521, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MAX_SUPPORTED_WIRE_VERSION'), MAX_SUPPORTED_WIRE_VERSION, false, true);
            var MAX_SUPPORTED_SERVER_VERSION = J$.W(148561, 'MAX_SUPPORTED_SERVER_VERSION', J$.G(148553, J$.R(148545, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MAX_SUPPORTED_SERVER_VERSION'), MAX_SUPPORTED_SERVER_VERSION, false, true);
            var MIN_SUPPORTED_WIRE_VERSION = J$.W(148585, 'MIN_SUPPORTED_WIRE_VERSION', J$.G(148577, J$.R(148569, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MIN_SUPPORTED_WIRE_VERSION'), MIN_SUPPORTED_WIRE_VERSION, false, true);
            var MIN_SUPPORTED_SERVER_VERSION = J$.W(148609, 'MIN_SUPPORTED_SERVER_VERSION', J$.G(148601, J$.R(148593, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MIN_SUPPORTED_SERVER_VERSION'), MIN_SUPPORTED_SERVER_VERSION, false, true);
            var AUTH_PROVIDERS;
            var LEGAL_SSL_SOCKET_OPTIONS = J$.W(151609, 'LEGAL_SSL_SOCKET_OPTIONS', J$.T(151601, [
                J$.T(151473, 'pfx', 21, false),
                J$.T(151481, 'key', 21, false),
                J$.T(151489, 'passphrase', 21, false),
                J$.T(151497, 'cert', 21, false),
                J$.T(151505, 'ca', 21, false),
                J$.T(151513, 'ciphers', 21, false),
                J$.T(151521, 'NPNProtocols', 21, false),
                J$.T(151529, 'ALPNProtocols', 21, false),
                J$.T(151537, 'servername', 21, false),
                J$.T(151545, 'ecdhCurve', 21, false),
                J$.T(151553, 'secureProtocol', 21, false),
                J$.T(151561, 'secureContext', 21, false),
                J$.T(151569, 'session', 21, false),
                J$.T(151577, 'minDHSize', 21, false),
                J$.T(151585, 'crl', 21, false),
                J$.T(151593, 'rejectUnauthorized', 21, false)
            ], 10, false), LEGAL_SSL_SOCKET_OPTIONS, false, true);
            var CONNECTION_ERROR_EVENTS = J$.W(154065, 'CONNECTION_ERROR_EVENTS', J$.T(154057, [
                J$.T(154025, 'error', 21, false),
                J$.T(154033, 'close', 21, false),
                J$.T(154041, 'timeout', 21, false),
                J$.T(154049, 'parseError', 21, false)
            ], 10, false), CONNECTION_ERROR_EVENTS, false, true);
            J$.P(155617, J$.I(typeof module === 'undefined' ? module = J$.R(155601, 'module', undefined, true, true) : module = J$.R(155601, 'module', module, true, true)), 'exports', J$.R(155609, 'connect', connect, false, true));
        } catch (J$e) {
            J$.Ex(156385, J$e);
        } finally {
            if (J$.Sr(156393))
                continue jalangiLabel29;
            else
                break jalangiLabel29;
        }
    }
// JALANGI DO NOT INSTRUMENT

