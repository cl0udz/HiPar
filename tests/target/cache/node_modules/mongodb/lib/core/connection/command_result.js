J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(135497, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/connection/command_result.js');
            J$.N(135505, 'CommandResult', CommandResult, false, false, false);
            J$.T(135113, 'use strict', 21, false);
            var CommandResult = J$.W(135241, 'CommandResult', J$.T(135233, function CommandResult(result, connection, message) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(135193, arguments.callee, this, arguments);
                            arguments = J$.N(135201, 'arguments', arguments, true, false, false);
                            result = J$.N(135209, 'result', result, true, false, false);
                            connection = J$.N(135217, 'connection', connection, true, false, false);
                            message = J$.N(135225, 'message', message, true, false, false);
                            J$.P(135137, J$.R(135121, 'this', this, false, false), 'result', J$.R(135129, 'result', result, false, false));
                            J$.P(135161, J$.R(135145, 'this', this, false, false), 'connection', J$.R(135153, 'connection', connection, false, false));
                            J$.P(135185, J$.R(135169, 'this', this, false, false), 'message', J$.R(135177, 'message', message, false, false));
                        } catch (J$e) {
                            J$.Ex(135513, J$e);
                        } finally {
                            if (J$.Fr(135521))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), CommandResult, false, true);
            J$.P(135377, J$.G(135257, J$.R(135249, 'CommandResult', CommandResult, false, true), 'prototype'), 'toJSON', J$.T(135369, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(135345, arguments.callee, this, arguments);
                            arguments = J$.N(135353, 'arguments', arguments, true, false, false);
                            J$.N(135361, 'result', result, false, false, false);
                            var result = J$.W(135313, 'result', J$.M(135305, J$.I(typeof Object === 'undefined' ? Object = J$.R(135265, 'Object', undefined, true, true) : Object = J$.R(135265, 'Object', Object, true, true)), 'assign', false)(J$.T(135273, {}, 11, false), J$.R(135281, 'this', this, false, false), J$.G(135297, J$.R(135289, 'this', this, false, false), 'result')), result, false, false);
                            J$.B(7106, 'delete', J$.R(135321, 'result', result, false, false), 'message');
                            return J$.Rt(135337, J$.R(135329, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(135529, J$e);
                        } finally {
                            if (J$.Fr(135537))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(135465, J$.G(135393, J$.R(135385, 'CommandResult', CommandResult, false, true), 'prototype'), 'toString', J$.T(135457, function () {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(135441, arguments.callee, this, arguments);
                            arguments = J$.N(135449, 'arguments', arguments, true, false, false);
                            return J$.Rt(135433, J$.M(135425, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(135401, 'JSON', undefined, true, true) : JSON = J$.R(135401, 'JSON', JSON, true, true)), 'stringify', false)(J$.M(135417, J$.R(135409, 'this', this, false, false), 'toJSON', false)()));
                        } catch (J$e) {
                            J$.Ex(135545, J$e);
                        } finally {
                            if (J$.Fr(135553))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(135489, J$.I(typeof module === 'undefined' ? module = J$.R(135473, 'module', undefined, true, true) : module = J$.R(135473, 'module', module, true, true)), 'exports', J$.R(135481, 'CommandResult', CommandResult, false, true));
        } catch (J$e) {
            J$.Ex(135561, J$e);
        } finally {
            if (J$.Sr(135569))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

