J$.noInstrEval = false;
jalangiLabel41:
    while (true) {
        try {
            J$.Se(167689, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/connection/connection.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(156673, arguments.callee, this, arguments);
                            arguments = J$.N(156681, 'arguments', arguments, true, false, false);
                            obj = J$.N(156689, 'obj', obj, true, false, false);
                            if (J$.C(8496, J$.C(8456, J$.B(10370, '===', J$.U(10362, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(156409, 'Symbol', undefined, true, true) : Symbol = J$.R(156409, 'Symbol', Symbol, true, true))), J$.T(156417, 'function', 21, false))) ? J$.B(10386, '===', J$.U(10378, 'typeof', J$.G(156433, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(156425, 'Symbol', undefined, true, true) : Symbol = J$.R(156425, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(156441, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(156497, '_typeof', J$.T(156489, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(156465, arguments.callee, this, arguments);
                                                arguments = J$.N(156473, 'arguments', arguments, true, false, false);
                                                obj = J$.N(156481, 'obj', obj, true, false, false);
                                                return J$.Rt(156457, J$.U(10394, 'typeof', J$.R(156449, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(168121, J$e);
                                            } finally {
                                                if (J$.Fr(168129))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(156633, '_typeof', J$.T(156625, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(156601, arguments.callee, this, arguments);
                                                arguments = J$.N(156609, 'arguments', arguments, true, false, false);
                                                obj = J$.N(156617, 'obj', obj, true, false, false);
                                                return J$.Rt(156593, J$.C(8488, J$.C(8480, J$.C(8472, J$.C(8464, J$.R(156505, 'obj', obj, false, false)) ? J$.B(10410, '===', J$.U(10402, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(156513, 'Symbol', undefined, true, true) : Symbol = J$.R(156513, 'Symbol', Symbol, true, true))), J$.T(156521, 'function', 21, false)) : J$._()) ? J$.B(10418, '===', J$.G(156537, J$.R(156529, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(156545, 'Symbol', undefined, true, true) : Symbol = J$.R(156545, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(10426, '!==', J$.R(156553, 'obj', obj, false, false), J$.G(156569, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(156561, 'Symbol', undefined, true, true) : Symbol = J$.R(156561, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(156577, 'symbol', 21, false) : J$.U(10434, 'typeof', J$.R(156585, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(168137, J$e);
                                            } finally {
                                                if (J$.Fr(168145))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(156665, J$.F(156657, J$.R(156641, '_typeof', _typeof, false, true), false)(J$.R(156649, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(168153, J$e);
                        } finally {
                            if (J$.Fr(168161))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _classCallCheck(instance, Constructor) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(156737, arguments.callee, this, arguments);
                            arguments = J$.N(156745, 'arguments', arguments, true, false, false);
                            instance = J$.N(156753, 'instance', instance, true, false, false);
                            Constructor = J$.N(156761, 'Constructor', Constructor, true, false, false);
                            if (J$.C(8504, J$.U(10450, '!', J$.B(10442, 'instanceof', J$.R(156697, 'instance', instance, false, false), J$.R(156705, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(156729, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(156713, 'TypeError', undefined, true, true) : TypeError = J$.R(156713, 'TypeError', TypeError, true, true)), true)(J$.T(156721, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(168169, J$e);
                        } finally {
                            if (J$.Fr(168177))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(157009, arguments.callee, this, arguments);
                            arguments = J$.N(157017, 'arguments', arguments, true, false, false);
                            target = J$.N(157025, 'target', target, true, false, false);
                            props = J$.N(157033, 'props', props, true, false, false);
                            J$.N(157041, 'i', i, false, false, false);
                            J$.N(157049, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(156777, 'i', J$.T(156769, 0, 22, false), i, false, false); J$.C(8528, J$.B(10458, '<', J$.R(156785, 'i', i, false, false), J$.G(156801, J$.R(156793, 'props', props, false, false), 'length'))); J$.B(10482, '-', i = J$.W(156817, 'i', J$.B(10474, '+', J$.U(10466, '+', J$.R(156809, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(156849, 'descriptor', J$.G(156841, J$.R(156825, 'props', props, false, false), J$.R(156833, 'i', i, false, false)), descriptor, false, false);
                                J$.P(156889, J$.R(156857, 'descriptor', descriptor, false, false), 'enumerable', J$.C(8512, J$.G(156873, J$.R(156865, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(156881, false, 23, false));
                                J$.P(156913, J$.R(156897, 'descriptor', descriptor, false, false), 'configurable', J$.T(156905, true, 23, false));
                                if (J$.C(8520, J$.B(10490, 'in', J$.T(156921, 'value', 21, false), J$.R(156929, 'descriptor', descriptor, false, false))))
                                    J$.P(156953, J$.R(156937, 'descriptor', descriptor, false, false), 'writable', J$.T(156945, true, 23, false));
                                J$.M(157001, J$.I(typeof Object === 'undefined' ? Object = J$.R(156961, 'Object', undefined, true, true) : Object = J$.R(156961, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(156969, 'target', target, false, false), J$.G(156985, J$.R(156977, 'descriptor', descriptor, false, false), 'key'), J$.R(156993, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(168185, J$e);
                        } finally {
                            if (J$.Fr(168193))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(157161, arguments.callee, this, arguments);
                            arguments = J$.N(157169, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(157177, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(157185, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(157193, 'staticProps', staticProps, true, false, false);
                            if (J$.C(8536, J$.R(157057, 'protoProps', protoProps, false, false)))
                                J$.F(157097, J$.R(157065, '_defineProperties', _defineProperties, false, true), false)(J$.G(157081, J$.R(157073, 'Constructor', Constructor, false, false), 'prototype'), J$.R(157089, 'protoProps', protoProps, false, false));
                            if (J$.C(8544, J$.R(157105, 'staticProps', staticProps, false, false)))
                                J$.F(157137, J$.R(157113, '_defineProperties', _defineProperties, false, true), false)(J$.R(157121, 'Constructor', Constructor, false, false), J$.R(157129, 'staticProps', staticProps, false, false));
                            return J$.Rt(157153, J$.R(157145, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(168201, J$e);
                        } finally {
                            if (J$.Fr(168209))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _possibleConstructorReturn(self, call) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(157305, arguments.callee, this, arguments);
                            arguments = J$.N(157313, 'arguments', arguments, true, false, false);
                            self = J$.N(157321, 'self', self, true, false, false);
                            call = J$.N(157329, 'call', call, true, false, false);
                            if (J$.C(8568, J$.C(8560, J$.R(157201, 'call', call, false, false)) ? J$.C(8552, J$.B(10498, '===', J$.F(157225, J$.R(157209, '_typeof', _typeof, false, true), false)(J$.R(157217, 'call', call, false, false)), J$.T(157233, 'object', 21, false))) ? J$._() : J$.B(10514, '===', J$.U(10506, 'typeof', J$.R(157241, 'call', call, false, false)), J$.T(157249, 'function', 21, false)) : J$._())) {
                                return J$.Rt(157265, J$.R(157257, 'call', call, false, false));
                            }
                            return J$.Rt(157297, J$.F(157289, J$.R(157273, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(157281, 'self', self, false, false)));
                        } catch (J$e) {
                            J$.Ex(168217, J$e);
                        } finally {
                            if (J$.Fr(168225))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _getPrototypeOf(o) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(157489, arguments.callee, this, arguments);
                            arguments = J$.N(157497, 'arguments', arguments, true, false, false);
                            o = J$.N(157505, 'o', o, true, false, false);
                            _getPrototypeOf = J$.W(157449, '_getPrototypeOf', J$.C(8584, J$.G(157345, J$.I(typeof Object === 'undefined' ? Object = J$.R(157337, 'Object', undefined, true, true) : Object = J$.R(157337, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$.G(157361, J$.I(typeof Object === 'undefined' ? Object = J$.R(157353, 'Object', undefined, true, true) : Object = J$.R(157353, 'Object', Object, true, true)), 'getPrototypeOf') : J$.T(157441, function _getPrototypeOf(o) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(157417, arguments.callee, this, arguments);
                                            arguments = J$.N(157425, 'arguments', arguments, true, false, false);
                                            o = J$.N(157433, 'o', o, true, false, false);
                                            return J$.Rt(157409, J$.C(8576, J$.G(157377, J$.R(157369, 'o', o, false, false), '__proto__')) ? J$._() : J$.M(157401, J$.I(typeof Object === 'undefined' ? Object = J$.R(157385, 'Object', undefined, true, true) : Object = J$.R(157385, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(157393, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(168233, J$e);
                                        } finally {
                                            if (J$.Fr(168241))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _getPrototypeOf, false, true);
                            return J$.Rt(157481, J$.F(157473, J$.R(157457, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(157465, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(168249, J$e);
                        } finally {
                            if (J$.Fr(168257))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _assertThisInitialized(self) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(157569, arguments.callee, this, arguments);
                            arguments = J$.N(157577, 'arguments', arguments, true, false, false);
                            self = J$.N(157585, 'self', self, true, false, false);
                            if (J$.C(8592, J$.B(10522, '===', J$.R(157513, 'self', self, false, false), void J$.T(157521, 0, 22, false)))) {
                                throw J$.F(157545, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(157529, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(157529, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(157537, 'this hasn\'t been initialised - super() hasn\'t been called', 21, false));
                            }
                            return J$.Rt(157561, J$.R(157553, 'self', self, false, false));
                        } catch (J$e) {
                            J$.Ex(168265, J$e);
                        } finally {
                            if (J$.Fr(168273))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _inherits(subClass, superClass) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(157785, arguments.callee, this, arguments);
                            arguments = J$.N(157793, 'arguments', arguments, true, false, false);
                            subClass = J$.N(157801, 'subClass', subClass, true, false, false);
                            superClass = J$.N(157809, 'superClass', superClass, true, false, false);
                            if (J$.C(8608, J$.C(8600, J$.B(10538, '!==', J$.U(10530, 'typeof', J$.R(157593, 'superClass', superClass, false, false)), J$.T(157601, 'function', 21, false))) ? J$.B(10546, '!==', J$.R(157609, 'superClass', superClass, false, false), J$.T(157617, null, 25, false)) : J$._())) {
                                throw J$.F(157641, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(157625, 'TypeError', undefined, true, true) : TypeError = J$.R(157625, 'TypeError', TypeError, true, true)), true)(J$.T(157633, 'Super expression must either be null or a function', 21, false));
                            }
                            J$.P(157737, J$.R(157649, 'subClass', subClass, false, false), 'prototype', J$.M(157729, J$.I(typeof Object === 'undefined' ? Object = J$.R(157657, 'Object', undefined, true, true) : Object = J$.R(157657, 'Object', Object, true, true)), 'create', false)(J$.C(8616, J$.R(157665, 'superClass', superClass, false, false)) ? J$.G(157681, J$.R(157673, 'superClass', superClass, false, false), 'prototype') : J$._(), J$.T(157721, {
                                constructor: J$.T(157713, {
                                    value: J$.R(157689, 'subClass', subClass, false, false),
                                    writable: J$.T(157697, true, 23, false),
                                    configurable: J$.T(157705, true, 23, false)
                                }, 11, false)
                            }, 11, false)));
                            if (J$.C(8624, J$.R(157745, 'superClass', superClass, false, false)))
                                J$.F(157777, J$.R(157753, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(157761, 'subClass', subClass, false, false), J$.R(157769, 'superClass', superClass, false, false));
                        } catch (J$e) {
                            J$.Ex(168281, J$e);
                        } finally {
                            if (J$.Fr(168289))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _setPrototypeOf(o, p) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(157961, arguments.callee, this, arguments);
                            arguments = J$.N(157969, 'arguments', arguments, true, false, false);
                            o = J$.N(157977, 'o', o, true, false, false);
                            p = J$.N(157985, 'p', p, true, false, false);
                            _setPrototypeOf = J$.W(157913, '_setPrototypeOf', J$.C(8632, J$.G(157825, J$.I(typeof Object === 'undefined' ? Object = J$.R(157817, 'Object', undefined, true, true) : Object = J$.R(157817, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$._() : J$.T(157905, function _setPrototypeOf(o, p) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(157873, arguments.callee, this, arguments);
                                            arguments = J$.N(157881, 'arguments', arguments, true, false, false);
                                            o = J$.N(157889, 'o', o, true, false, false);
                                            p = J$.N(157897, 'p', p, true, false, false);
                                            J$.P(157849, J$.R(157833, 'o', o, false, false), '__proto__', J$.R(157841, 'p', p, false, false));
                                            return J$.Rt(157865, J$.R(157857, 'o', o, false, false));
                                        } catch (J$e) {
                                            J$.Ex(168297, J$e);
                                        } finally {
                                            if (J$.Fr(168305))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _setPrototypeOf, false, true);
                            return J$.Rt(157953, J$.F(157945, J$.R(157921, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(157929, 'o', o, false, false), J$.R(157937, 'p', p, false, false)));
                        } catch (J$e) {
                            J$.Ex(168313, J$e);
                        } finally {
                            if (J$.Fr(168321))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function deleteConnection(id) {
                jalangiLabel29:
                    while (true) {
                        try {
                            J$.Fe(162993, arguments.callee, this, arguments);
                            arguments = J$.N(163001, 'arguments', arguments, true, false, false);
                            id = J$.N(163009, 'id', id, true, false, false);
                            J$.B(10906, 'delete', J$.R(162945, '_connections', _connections, false, true), J$.R(162953, 'id', id, false, false));
                            if (J$.C(8904, J$.R(162961, 'connectionAccountingSpy', connectionAccountingSpy, false, true))) {
                                J$.M(162985, J$.R(162969, 'connectionAccountingSpy', connectionAccountingSpy, false, true), 'deleteConnection', false)(J$.R(162977, 'id', id, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(168585, J$e);
                        } finally {
                            if (J$.Fr(168593))
                                continue jalangiLabel29;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addConnection(id, connection) {
                jalangiLabel30:
                    while (true) {
                        try {
                            J$.Fe(163089, arguments.callee, this, arguments);
                            arguments = J$.N(163097, 'arguments', arguments, true, false, false);
                            id = J$.N(163105, 'id', id, true, false, false);
                            connection = J$.N(163113, 'connection', connection, true, false, false);
                            J$.P(163041, J$.R(163017, '_connections', _connections, false, true), J$.R(163025, 'id', id, false, false), J$.R(163033, 'connection', connection, false, false));
                            if (J$.C(8912, J$.R(163049, 'connectionAccountingSpy', connectionAccountingSpy, false, true))) {
                                J$.M(163081, J$.R(163057, 'connectionAccountingSpy', connectionAccountingSpy, false, true), 'addConnection', false)(J$.R(163065, 'id', id, false, false), J$.R(163073, 'connection', connection, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(168601, J$e);
                        } finally {
                            if (J$.Fr(168609))
                                continue jalangiLabel30;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function errorHandler(conn) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(163417, arguments.callee, this, arguments);
                            arguments = J$.N(163425, 'arguments', arguments, true, false, false);
                            conn = J$.N(163433, 'conn', conn, true, false, false);
                            return J$.Rt(163409, J$.T(163401, function (err) {
                                jalangiLabel31:
                                    while (true) {
                                        try {
                                            J$.Fe(163377, arguments.callee, this, arguments);
                                            arguments = J$.N(163385, 'arguments', arguments, true, false, false);
                                            err = J$.N(163393, 'err', err, true, false, false);
                                            if (J$.C(8920, J$.R(163121, 'connectionAccounting', connectionAccounting, false, true)))
                                                J$.F(163153, J$.R(163129, 'deleteConnection', deleteConnection, false, true), false)(J$.G(163145, J$.R(163137, 'conn', conn, false, false), 'id'));
                                            if (J$.C(8928, J$.M(163177, J$.G(163169, J$.R(163161, 'conn', conn, false, false), 'logger'), 'isDebug', false)())) {
                                                J$.M(163313, J$.G(163193, J$.R(163185, 'conn', conn, false, false), 'logger'), 'debug', false)(J$.M(163305, J$.M(163265, J$.M(163233, J$.T(163201, 'connection ', 21, false), 'concat', false)(J$.G(163217, J$.R(163209, 'conn', conn, false, false), 'id'), J$.T(163225, ' for [', 21, false)), 'concat', false)(J$.G(163249, J$.R(163241, 'conn', conn, false, false), 'address'), J$.T(163257, '] errored out with [', 21, false)), 'concat', false)(J$.M(163289, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(163273, 'JSON', undefined, true, true) : JSON = J$.R(163273, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(163281, 'err', err, false, false)), J$.T(163297, ']', 21, false)));
                                            }
                                            J$.M(163369, J$.R(163321, 'conn', conn, false, false), 'emit', false)(J$.T(163329, 'error', 21, false), J$.F(163353, J$.R(163337, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.R(163345, 'err', err, false, false)), J$.R(163361, 'conn', conn, false, false));
                                        } catch (J$e) {
                                            J$.Ex(168617, J$e);
                                        } finally {
                                            if (J$.Fr(168625))
                                                continue jalangiLabel31;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(168633, J$e);
                        } finally {
                            if (J$.Fr(168641))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function timeoutHandler(conn) {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(163753, arguments.callee, this, arguments);
                            arguments = J$.N(163761, 'arguments', arguments, true, false, false);
                            conn = J$.N(163769, 'conn', conn, true, false, false);
                            return J$.Rt(163745, J$.T(163737, function () {
                                jalangiLabel33:
                                    while (true) {
                                        try {
                                            J$.Fe(163721, arguments.callee, this, arguments);
                                            arguments = J$.N(163729, 'arguments', arguments, true, false, false);
                                            if (J$.C(8936, J$.R(163441, 'connectionAccounting', connectionAccounting, false, true)))
                                                J$.F(163473, J$.R(163449, 'deleteConnection', deleteConnection, false, true), false)(J$.G(163465, J$.R(163457, 'conn', conn, false, false), 'id'));
                                            if (J$.C(8944, J$.M(163497, J$.G(163489, J$.R(163481, 'conn', conn, false, false), 'logger'), 'isDebug', false)())) {
                                                J$.M(163593, J$.G(163513, J$.R(163505, 'conn', conn, false, false), 'logger'), 'debug', false)(J$.M(163585, J$.M(163553, J$.T(163521, 'connection ', 21, false), 'concat', false)(J$.G(163537, J$.R(163529, 'conn', conn, false, false), 'id'), J$.T(163545, ' for [', 21, false)), 'concat', false)(J$.G(163569, J$.R(163561, 'conn', conn, false, false), 'address'), J$.T(163577, '] timed out', 21, false)));
                                            }
                                            J$.M(163713, J$.R(163601, 'conn', conn, false, false), 'emit', false)(J$.T(163609, 'timeout', 21, false), J$.F(163697, J$.R(163617, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.M(163689, J$.M(163657, J$.T(163625, 'connection ', 21, false), 'concat', false)(J$.G(163641, J$.R(163633, 'conn', conn, false, false), 'id'), J$.T(163649, ' to ', 21, false)), 'concat', false)(J$.G(163673, J$.R(163665, 'conn', conn, false, false), 'address'), J$.T(163681, ' timed out', 21, false))), J$.R(163705, 'conn', conn, false, false));
                                        } catch (J$e) {
                                            J$.Ex(168649, J$e);
                                        } finally {
                                            if (J$.Fr(168657))
                                                continue jalangiLabel33;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(168665, J$e);
                        } finally {
                            if (J$.Fr(168673))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function closeHandler(conn) {
                jalangiLabel36:
                    while (true) {
                        try {
                            J$.Fe(164105, arguments.callee, this, arguments);
                            arguments = J$.N(164113, 'arguments', arguments, true, false, false);
                            conn = J$.N(164121, 'conn', conn, true, false, false);
                            return J$.Rt(164097, J$.T(164089, function (hadError) {
                                jalangiLabel35:
                                    while (true) {
                                        try {
                                            J$.Fe(164065, arguments.callee, this, arguments);
                                            arguments = J$.N(164073, 'arguments', arguments, true, false, false);
                                            hadError = J$.N(164081, 'hadError', hadError, true, false, false);
                                            if (J$.C(8952, J$.R(163777, 'connectionAccounting', connectionAccounting, false, true)))
                                                J$.F(163809, J$.R(163785, 'deleteConnection', deleteConnection, false, true), false)(J$.G(163801, J$.R(163793, 'conn', conn, false, false), 'id'));
                                            if (J$.C(8960, J$.M(163833, J$.G(163825, J$.R(163817, 'conn', conn, false, false), 'logger'), 'isDebug', false)())) {
                                                J$.M(163929, J$.G(163849, J$.R(163841, 'conn', conn, false, false), 'logger'), 'debug', false)(J$.M(163921, J$.M(163889, J$.T(163857, 'connection ', 21, false), 'concat', false)(J$.G(163873, J$.R(163865, 'conn', conn, false, false), 'id'), J$.T(163881, ' with for [', 21, false)), 'concat', false)(J$.G(163905, J$.R(163897, 'conn', conn, false, false), 'address'), J$.T(163913, '] closed', 21, false)));
                                            }
                                            if (J$.C(8968, J$.U(10914, '!', J$.R(163937, 'hadError', hadError, false, false)))) {
                                                J$.M(164057, J$.R(163945, 'conn', conn, false, false), 'emit', false)(J$.T(163953, 'close', 21, false), J$.F(164041, J$.R(163961, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.M(164033, J$.M(164001, J$.T(163969, 'connection ', 21, false), 'concat', false)(J$.G(163985, J$.R(163977, 'conn', conn, false, false), 'id'), J$.T(163993, ' to ', 21, false)), 'concat', false)(J$.G(164017, J$.R(164009, 'conn', conn, false, false), 'address'), J$.T(164025, ' closed', 21, false))), J$.R(164049, 'conn', conn, false, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(168681, J$e);
                                        } finally {
                                            if (J$.Fr(168689))
                                                continue jalangiLabel35;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(168697, J$e);
                        } finally {
                            if (J$.Fr(168705))
                                continue jalangiLabel36;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function processMessage(conn, message) {
                jalangiLabel38:
                    while (true) {
                        try {
                            J$.Fe(164961, arguments.callee, this, arguments);
                            arguments = J$.N(164969, 'arguments', arguments, true, false, false);
                            conn = J$.N(164977, 'conn', conn, true, false, false);
                            message = J$.N(164985, 'message', message, true, false, false);
                            J$.N(164993, 'msgHeader', msgHeader, false, false, false);
                            J$.N(165001, 'ResponseConstructor', ResponseConstructor, false, false, false);
                            J$.N(165009, 'index', index, false, false, false);
                            J$.N(165017, 'compressorID', compressorID, false, false, false);
                            var msgHeader = J$.W(164153, 'msgHeader', J$.F(164145, J$.R(164129, 'parseHeader', parseHeader, false, true), false)(J$.R(164137, 'message', message, false, false)), msgHeader, false, false);
                            if (J$.C(8984, J$.B(10922, '!==', J$.G(164169, J$.R(164161, 'msgHeader', msgHeader, false, false), 'opCode'), J$.R(164177, 'OP_COMPRESSED', OP_COMPRESSED, false, true)))) {
                                var ResponseConstructor = J$.W(164225, 'ResponseConstructor', J$.C(8976, J$.B(10930, '===', J$.G(164193, J$.R(164185, 'msgHeader', msgHeader, false, false), 'opCode'), J$.R(164201, 'OP_MSG', OP_MSG, false, true))) ? J$.R(164209, 'BinMsg', BinMsg, false, true) : J$.R(164217, 'Response', Response, false, true), ResponseConstructor, false, false);
                                J$.M(164345, J$.R(164233, 'conn', conn, false, false), 'emit', false)(J$.T(164241, 'message', 21, false), J$.F(164329, J$.R(164249, 'ResponseConstructor', ResponseConstructor, false, false), true)(J$.G(164265, J$.R(164257, 'conn', conn, false, false), 'bson'), J$.R(164273, 'message', message, false, false), J$.R(164281, 'msgHeader', msgHeader, false, false), J$.M(164305, J$.R(164289, 'message', message, false, false), 'slice', false)(J$.R(164297, 'MESSAGE_HEADER_SIZE', MESSAGE_HEADER_SIZE, false, true)), J$.G(164321, J$.R(164313, 'conn', conn, false, false), 'responseOptions')), J$.R(164337, 'conn', conn, false, false));
                                return J$.Rt(164353, undefined);
                            }
                            J$.P(164377, J$.R(164361, 'msgHeader', msgHeader, false, false), 'fromCompressed', J$.T(164369, true, 23, false));
                            var index = J$.W(164393, 'index', J$.R(164385, 'MESSAGE_HEADER_SIZE', MESSAGE_HEADER_SIZE, false, true), index, false, false);
                            J$.P(164433, J$.R(164401, 'msgHeader', msgHeader, false, false), 'opCode', J$.M(164425, J$.R(164409, 'message', message, false, false), 'readInt32LE', false)(J$.R(164417, 'index', index, false, false)));
                            index = J$.W(164457, 'index', J$.B(10938, '+', J$.R(164449, 'index', index, false, false), J$.T(164441, 4, 22, false)), index, false, false);
                            J$.P(164497, J$.R(164465, 'msgHeader', msgHeader, false, false), 'length', J$.M(164489, J$.R(164473, 'message', message, false, false), 'readInt32LE', false)(J$.R(164481, 'index', index, false, false)));
                            index = J$.W(164521, 'index', J$.B(10946, '+', J$.R(164513, 'index', index, false, false), J$.T(164505, 4, 22, false)), index, false, false);
                            var compressorID = J$.W(164553, 'compressorID', J$.G(164545, J$.R(164529, 'message', message, false, false), J$.R(164537, 'index', index, false, false)), compressorID, false, false);
                            J$.B(10970, '-', index = J$.W(164569, 'index', J$.B(10962, '+', J$.U(10954, '+', J$.R(164561, 'index', index, false, false)), 1), index, false, false), 1);
                            J$.F(164953, J$.R(164577, 'decompress', decompress, false, true), false)(J$.R(164585, 'compressorID', compressorID, false, false), J$.M(164609, J$.R(164593, 'message', message, false, false), 'slice', false)(J$.R(164601, 'index', index, false, false)), J$.T(164945, function (err, decompressedMsgBody) {
                                jalangiLabel37:
                                    while (true) {
                                        try {
                                            J$.Fe(164905, arguments.callee, this, arguments);
                                            arguments = J$.N(164913, 'arguments', arguments, true, false, false);
                                            err = J$.N(164921, 'err', err, true, false, false);
                                            decompressedMsgBody = J$.N(164929, 'decompressedMsgBody', decompressedMsgBody, true, false, false);
                                            J$.N(164937, 'ResponseConstructor', ResponseConstructor, false, false, false);
                                            if (J$.C(8992, J$.R(164617, 'err', err, false, false))) {
                                                J$.M(164649, J$.R(164625, 'conn', conn, false, false), 'emit', false)(J$.T(164633, 'error', 21, false), J$.R(164641, 'err', err, false, false));
                                                return J$.Rt(164657, undefined);
                                            }
                                            if (J$.C(9000, J$.B(10978, '!==', J$.G(164673, J$.R(164665, 'decompressedMsgBody', decompressedMsgBody, false, false), 'length'), J$.G(164689, J$.R(164681, 'msgHeader', msgHeader, false, false), 'length')))) {
                                                J$.M(164737, J$.R(164697, 'conn', conn, false, false), 'emit', false)(J$.T(164705, 'error', 21, false), J$.F(164729, J$.R(164713, 'MongoError', MongoError, false, true), true)(J$.T(164721, 'Decompressing a compressed message from the server failed. The message is corrupt.', 21, false)));
                                                return J$.Rt(164745, undefined);
                                            }
                                            var ResponseConstructor = J$.W(164793, 'ResponseConstructor', J$.C(9008, J$.B(10986, '===', J$.G(164761, J$.R(164753, 'msgHeader', msgHeader, false, false), 'opCode'), J$.R(164769, 'OP_MSG', OP_MSG, false, true))) ? J$.R(164777, 'BinMsg', BinMsg, false, true) : J$.R(164785, 'Response', Response, false, true), ResponseConstructor, false, false);
                                            J$.M(164897, J$.R(164801, 'conn', conn, false, false), 'emit', false)(J$.T(164809, 'message', 21, false), J$.F(164881, J$.R(164817, 'ResponseConstructor', ResponseConstructor, false, false), true)(J$.G(164833, J$.R(164825, 'conn', conn, false, false), 'bson'), J$.R(164841, 'message', message, false, false), J$.R(164849, 'msgHeader', msgHeader, false, false), J$.R(164857, 'decompressedMsgBody', decompressedMsgBody, false, false), J$.G(164873, J$.R(164865, 'conn', conn, false, false), 'responseOptions')), J$.R(164889, 'conn', conn, false, false));
                                        } catch (J$e) {
                                            J$.Ex(168713, J$e);
                                        } finally {
                                            if (J$.Fr(168721))
                                                continue jalangiLabel37;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(168729, J$e);
                        } finally {
                            if (J$.Fr(168737))
                                continue jalangiLabel38;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function dataHandler(conn) {
                jalangiLabel40:
                    while (true) {
                        try {
                            J$.Fe(167641, arguments.callee, this, arguments);
                            arguments = J$.N(167649, 'arguments', arguments, true, false, false);
                            conn = J$.N(167657, 'conn', conn, true, false, false);
                            return J$.Rt(167633, J$.T(167625, function (data) {
                                jalangiLabel39:
                                    while (true) {
                                        try {
                                            J$.Fe(167529, arguments.callee, this, arguments);
                                            arguments = J$.N(167537, 'arguments', arguments, true, false, false);
                                            data = J$.N(167545, 'data', data, true, false, false);
                                            J$.N(167553, 'remainingBytesToRead', remainingBytesToRead, false, false, false);
                                            J$.N(167561, 'emitBuffer', emitBuffer, false, false, false);
                                            J$.N(167569, 'newData', newData, false, false, false);
                                            J$.N(167577, 'newStubBuffer', newStubBuffer, false, false, false);
                                            J$.N(167585, 'sizeOfMessage', sizeOfMessage, false, false, false);
                                            J$.N(167593, 'errorObject', errorObject, false, false, false);
                                            J$.N(167601, '_emitBuffer', _emitBuffer, false, false, false);
                                            J$.N(167609, '_errorObject', _errorObject, false, false, false);
                                            J$.N(167617, '_emitBuffer2', _emitBuffer2, false, false, false);
                                            while (J$.C(9152, J$.B(10994, '>', J$.G(165033, J$.R(165025, 'data', data, false, false), 'length'), J$.T(165041, 0, 22, false)))) {
                                                if (J$.C(9144, J$.C(9016, J$.B(11002, '>', J$.G(165057, J$.R(165049, 'conn', conn, false, false), 'bytesRead'), J$.T(165065, 0, 22, false))) ? J$.B(11010, '>', J$.G(165081, J$.R(165073, 'conn', conn, false, false), 'sizeOfMessage'), J$.T(165089, 0, 22, false)) : J$._())) {
                                                    var remainingBytesToRead = J$.W(165129, 'remainingBytesToRead', J$.B(11018, '-', J$.G(165105, J$.R(165097, 'conn', conn, false, false), 'sizeOfMessage'), J$.G(165121, J$.R(165113, 'conn', conn, false, false), 'bytesRead')), remainingBytesToRead, false, false);
                                                    if (J$.C(9024, J$.B(11026, '>', J$.R(165137, 'remainingBytesToRead', remainingBytesToRead, false, false), J$.G(165153, J$.R(165145, 'data', data, false, false), 'length')))) {
                                                        J$.M(165201, J$.R(165161, 'data', data, false, false), 'copy', false)(J$.G(165177, J$.R(165169, 'conn', conn, false, false), 'buffer'), J$.G(165193, J$.R(165185, 'conn', conn, false, false), 'bytesRead'));
                                                        J$.P(165249, J$.R(165209, 'conn', conn, false, false), 'bytesRead', J$.B(11034, '+', J$.G(165225, J$.R(165217, 'conn', conn, false, false), 'bytesRead'), J$.G(165241, J$.R(165233, 'data', data, false, false), 'length')));
                                                        data = J$.W(165281, 'data', J$.M(165273, J$.R(165257, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(165265, 0, 22, false)), data, false, false);
                                                    } else {
                                                        J$.M(165345, J$.R(165289, 'data', data, false, false), 'copy', false)(J$.G(165305, J$.R(165297, 'conn', conn, false, false), 'buffer'), J$.G(165321, J$.R(165313, 'conn', conn, false, false), 'bytesRead'), J$.T(165329, 0, 22, false), J$.R(165337, 'remainingBytesToRead', remainingBytesToRead, false, false));
                                                        data = J$.W(165377, 'data', J$.M(165369, J$.R(165353, 'data', data, false, false), 'slice', false)(J$.R(165361, 'remainingBytesToRead', remainingBytesToRead, false, false)), data, false, false);
                                                        var emitBuffer = J$.W(165401, 'emitBuffer', J$.G(165393, J$.R(165385, 'conn', conn, false, false), 'buffer'), emitBuffer, false, false);
                                                        J$.P(165425, J$.R(165409, 'conn', conn, false, false), 'buffer', J$.T(165417, null, 25, false));
                                                        J$.P(165449, J$.R(165433, 'conn', conn, false, false), 'sizeOfMessage', J$.T(165441, 0, 22, false));
                                                        J$.P(165473, J$.R(165457, 'conn', conn, false, false), 'bytesRead', J$.T(165465, 0, 22, false));
                                                        J$.P(165497, J$.R(165481, 'conn', conn, false, false), 'stubBuffer', J$.T(165489, null, 25, false));
                                                        J$.F(165529, J$.R(165505, 'processMessage', processMessage, false, true), false)(J$.R(165513, 'conn', conn, false, false), J$.R(165521, 'emitBuffer', emitBuffer, false, false));
                                                    }
                                                } else {
                                                    if (J$.C(9136, J$.C(9032, J$.B(11042, '!=', J$.G(165545, J$.R(165537, 'conn', conn, false, false), 'stubBuffer'), J$.T(165553, null, 25, false))) ? J$.B(11050, '>', J$.G(165577, J$.G(165569, J$.R(165561, 'conn', conn, false, false), 'stubBuffer'), 'length'), J$.T(165585, 0, 22, false)) : J$._())) {
                                                        if (J$.C(9040, J$.B(11066, '>', J$.B(11058, '+', J$.G(165609, J$.G(165601, J$.R(165593, 'conn', conn, false, false), 'stubBuffer'), 'length'), J$.G(165625, J$.R(165617, 'data', data, false, false), 'length')), J$.T(165633, 4, 22, false)))) {
                                                            var newData = J$.W(165697, 'newData', J$.M(165689, J$.R(165641, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(11074, '+', J$.G(165665, J$.G(165657, J$.R(165649, 'conn', conn, false, false), 'stubBuffer'), 'length'), J$.G(165681, J$.R(165673, 'data', data, false, false), 'length'))), newData, false, false);
                                                            J$.M(165737, J$.G(165713, J$.R(165705, 'conn', conn, false, false), 'stubBuffer'), 'copy', false)(J$.R(165721, 'newData', newData, false, false), J$.T(165729, 0, 22, false));
                                                            J$.M(165785, J$.R(165745, 'data', data, false, false), 'copy', false)(J$.R(165753, 'newData', newData, false, false), J$.G(165777, J$.G(165769, J$.R(165761, 'conn', conn, false, false), 'stubBuffer'), 'length'));
                                                            data = J$.W(165801, 'data', J$.R(165793, 'newData', newData, false, false), data, false, false);
                                                            J$.P(165825, J$.R(165809, 'conn', conn, false, false), 'buffer', J$.T(165817, null, 25, false));
                                                            J$.P(165849, J$.R(165833, 'conn', conn, false, false), 'sizeOfMessage', J$.T(165841, 0, 22, false));
                                                            J$.P(165873, J$.R(165857, 'conn', conn, false, false), 'bytesRead', J$.T(165865, 0, 22, false));
                                                            J$.P(165897, J$.R(165881, 'conn', conn, false, false), 'stubBuffer', J$.T(165889, null, 25, false));
                                                        } else {
                                                            var newStubBuffer = J$.W(165961, 'newStubBuffer', J$.M(165953, J$.R(165905, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(11082, '+', J$.G(165929, J$.G(165921, J$.R(165913, 'conn', conn, false, false), 'stubBuffer'), 'length'), J$.G(165945, J$.R(165937, 'data', data, false, false), 'length'))), newStubBuffer, false, false);
                                                            J$.M(166001, J$.G(165977, J$.R(165969, 'conn', conn, false, false), 'stubBuffer'), 'copy', false)(J$.R(165985, 'newStubBuffer', newStubBuffer, false, false), J$.T(165993, 0, 22, false));
                                                            J$.M(166049, J$.R(166009, 'data', data, false, false), 'copy', false)(J$.R(166017, 'newStubBuffer', newStubBuffer, false, false), J$.G(166041, J$.G(166033, J$.R(166025, 'conn', conn, false, false), 'stubBuffer'), 'length'));
                                                            data = J$.W(166081, 'data', J$.M(166073, J$.R(166057, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(166065, 0, 22, false)), data, false, false);
                                                        }
                                                    } else {
                                                        if (J$.C(9128, J$.B(11090, '>', J$.G(166097, J$.R(166089, 'data', data, false, false), 'length'), J$.T(166105, 4, 22, false)))) {
                                                            var sizeOfMessage = J$.W(166233, 'sizeOfMessage', J$.B(11138, '|', J$.B(11122, '|', J$.B(11106, '|', J$.G(166129, J$.R(166113, 'data', data, false, false), J$.T(166121, 0, 22, false)), J$.B(11098, '<<', J$.G(166153, J$.R(166137, 'data', data, false, false), J$.T(166145, 1, 22, false)), J$.T(166161, 8, 22, false))), J$.B(11114, '<<', J$.G(166185, J$.R(166169, 'data', data, false, false), J$.T(166177, 2, 22, false)), J$.T(166193, 16, 22, false))), J$.B(11130, '<<', J$.G(166217, J$.R(166201, 'data', data, false, false), J$.T(166209, 3, 22, false)), J$.T(166225, 24, 22, false))), sizeOfMessage, false, false);
                                                            if (J$.C(9056, J$.C(9048, J$.B(11146, '<', J$.R(166241, 'sizeOfMessage', sizeOfMessage, false, false), J$.T(166249, 0, 22, false))) ? J$._() : J$.B(11154, '>', J$.R(166257, 'sizeOfMessage', sizeOfMessage, false, false), J$.G(166273, J$.R(166265, 'conn', conn, false, false), 'maxBsonMessageSize')))) {
                                                                var errorObject = J$.W(166369, 'errorObject', J$.T(166361, {
                                                                    err: J$.T(166281, 'socketHandler', 21, false),
                                                                    trace: J$.T(166289, '', 21, false),
                                                                    bin: J$.G(166305, J$.R(166297, 'conn', conn, false, false), 'buffer'),
                                                                    parseState: J$.T(166353, {
                                                                        sizeOfMessage: J$.R(166313, 'sizeOfMessage', sizeOfMessage, false, false),
                                                                        bytesRead: J$.G(166329, J$.R(166321, 'conn', conn, false, false), 'bytesRead'),
                                                                        stubBuffer: J$.G(166345, J$.R(166337, 'conn', conn, false, false), 'stubBuffer')
                                                                    }, 11, false)
                                                                }, 11, false), errorObject, false, false);
                                                                J$.M(166409, J$.R(166377, 'conn', conn, false, false), 'emit', false)(J$.T(166385, 'parseError', 21, false), J$.R(166393, 'errorObject', errorObject, false, false), J$.R(166401, 'conn', conn, false, false));
                                                                return J$.Rt(166417, undefined);
                                                            }
                                                            if (J$.C(9120, J$.C(9072, J$.C(9064, J$.B(11162, '>', J$.R(166425, 'sizeOfMessage', sizeOfMessage, false, false), J$.T(166433, 4, 22, false))) ? J$.B(11170, '<', J$.R(166441, 'sizeOfMessage', sizeOfMessage, false, false), J$.G(166457, J$.R(166449, 'conn', conn, false, false), 'maxBsonMessageSize')) : J$._()) ? J$.B(11178, '>', J$.R(166465, 'sizeOfMessage', sizeOfMessage, false, false), J$.G(166481, J$.R(166473, 'data', data, false, false), 'length')) : J$._())) {
                                                                J$.P(166521, J$.R(166489, 'conn', conn, false, false), 'buffer', J$.M(166513, J$.R(166497, 'Buffer', Buffer, false, true), 'alloc', false)(J$.R(166505, 'sizeOfMessage', sizeOfMessage, false, false)));
                                                                J$.M(166561, J$.R(166529, 'data', data, false, false), 'copy', false)(J$.G(166545, J$.R(166537, 'conn', conn, false, false), 'buffer'), J$.T(166553, 0, 22, false));
                                                                J$.P(166593, J$.R(166569, 'conn', conn, false, false), 'bytesRead', J$.G(166585, J$.R(166577, 'data', data, false, false), 'length'));
                                                                J$.P(166617, J$.R(166601, 'conn', conn, false, false), 'sizeOfMessage', J$.R(166609, 'sizeOfMessage', sizeOfMessage, false, false));
                                                                J$.P(166641, J$.R(166625, 'conn', conn, false, false), 'stubBuffer', J$.T(166633, null, 25, false));
                                                                data = J$.W(166673, 'data', J$.M(166665, J$.R(166649, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(166657, 0, 22, false)), data, false, false);
                                                            } else if (J$.C(9112, J$.C(9088, J$.C(9080, J$.B(11186, '>', J$.R(166681, 'sizeOfMessage', sizeOfMessage, false, false), J$.T(166689, 4, 22, false))) ? J$.B(11194, '<', J$.R(166697, 'sizeOfMessage', sizeOfMessage, false, false), J$.G(166713, J$.R(166705, 'conn', conn, false, false), 'maxBsonMessageSize')) : J$._()) ? J$.B(11202, '===', J$.R(166721, 'sizeOfMessage', sizeOfMessage, false, false), J$.G(166737, J$.R(166729, 'data', data, false, false), 'length')) : J$._())) {
                                                                var _emitBuffer = J$.W(166753, '_emitBuffer', J$.R(166745, 'data', data, false, false), _emitBuffer, false, false);
                                                                J$.P(166777, J$.R(166761, 'conn', conn, false, false), 'buffer', J$.T(166769, null, 25, false));
                                                                J$.P(166801, J$.R(166785, 'conn', conn, false, false), 'sizeOfMessage', J$.T(166793, 0, 22, false));
                                                                J$.P(166825, J$.R(166809, 'conn', conn, false, false), 'bytesRead', J$.T(166817, 0, 22, false));
                                                                J$.P(166849, J$.R(166833, 'conn', conn, false, false), 'stubBuffer', J$.T(166841, null, 25, false));
                                                                data = J$.W(166881, 'data', J$.M(166873, J$.R(166857, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(166865, 0, 22, false)), data, false, false);
                                                                J$.F(166913, J$.R(166889, 'processMessage', processMessage, false, true), false)(J$.R(166897, 'conn', conn, false, false), J$.R(166905, '_emitBuffer', _emitBuffer, false, false));
                                                            } else if (J$.C(9104, J$.C(9096, J$.B(11210, '<=', J$.R(166921, 'sizeOfMessage', sizeOfMessage, false, false), J$.T(166929, 4, 22, false))) ? J$._() : J$.B(11218, '>', J$.R(166937, 'sizeOfMessage', sizeOfMessage, false, false), J$.G(166953, J$.R(166945, 'conn', conn, false, false), 'maxBsonMessageSize')))) {
                                                                var _errorObject = J$.W(167033, '_errorObject', J$.T(167025, {
                                                                    err: J$.T(166961, 'socketHandler', 21, false),
                                                                    trace: J$.T(166969, null, 25, false),
                                                                    bin: J$.R(166977, 'data', data, false, false),
                                                                    parseState: J$.T(167017, {
                                                                        sizeOfMessage: J$.R(166985, 'sizeOfMessage', sizeOfMessage, false, false),
                                                                        bytesRead: J$.T(166993, 0, 22, false),
                                                                        buffer: J$.T(167001, null, 25, false),
                                                                        stubBuffer: J$.T(167009, null, 25, false)
                                                                    }, 11, false)
                                                                }, 11, false), _errorObject, false, false);
                                                                J$.M(167073, J$.R(167041, 'conn', conn, false, false), 'emit', false)(J$.T(167049, 'parseError', 21, false), J$.R(167057, '_errorObject', _errorObject, false, false), J$.R(167065, 'conn', conn, false, false));
                                                                J$.P(167097, J$.R(167081, 'conn', conn, false, false), 'buffer', J$.T(167089, null, 25, false));
                                                                J$.P(167121, J$.R(167105, 'conn', conn, false, false), 'sizeOfMessage', J$.T(167113, 0, 22, false));
                                                                J$.P(167145, J$.R(167129, 'conn', conn, false, false), 'bytesRead', J$.T(167137, 0, 22, false));
                                                                J$.P(167169, J$.R(167153, 'conn', conn, false, false), 'stubBuffer', J$.T(167161, null, 25, false));
                                                                data = J$.W(167201, 'data', J$.M(167193, J$.R(167177, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(167185, 0, 22, false)), data, false, false);
                                                            } else {
                                                                var _emitBuffer2 = J$.W(167241, '_emitBuffer2', J$.M(167233, J$.R(167209, 'data', data, false, false), 'slice', false)(J$.T(167217, 0, 22, false), J$.R(167225, 'sizeOfMessage', sizeOfMessage, false, false)), _emitBuffer2, false, false);
                                                                J$.P(167265, J$.R(167249, 'conn', conn, false, false), 'buffer', J$.T(167257, null, 25, false));
                                                                J$.P(167289, J$.R(167273, 'conn', conn, false, false), 'sizeOfMessage', J$.T(167281, 0, 22, false));
                                                                J$.P(167313, J$.R(167297, 'conn', conn, false, false), 'bytesRead', J$.T(167305, 0, 22, false));
                                                                J$.P(167337, J$.R(167321, 'conn', conn, false, false), 'stubBuffer', J$.T(167329, null, 25, false));
                                                                data = J$.W(167369, 'data', J$.M(167361, J$.R(167345, 'data', data, false, false), 'slice', false)(J$.R(167353, 'sizeOfMessage', sizeOfMessage, false, false)), data, false, false);
                                                                J$.F(167401, J$.R(167377, 'processMessage', processMessage, false, true), false)(J$.R(167385, 'conn', conn, false, false), J$.R(167393, '_emitBuffer2', _emitBuffer2, false, false));
                                                            }
                                                        } else {
                                                            J$.P(167449, J$.R(167409, 'conn', conn, false, false), 'stubBuffer', J$.M(167441, J$.R(167417, 'Buffer', Buffer, false, true), 'alloc', false)(J$.G(167433, J$.R(167425, 'data', data, false, false), 'length')));
                                                            J$.M(167489, J$.R(167457, 'data', data, false, false), 'copy', false)(J$.G(167473, J$.R(167465, 'conn', conn, false, false), 'stubBuffer'), J$.T(167481, 0, 22, false));
                                                            data = J$.W(167521, 'data', J$.M(167513, J$.R(167497, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(167505, 0, 22, false)), data, false, false);
                                                        }
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(168745, J$e);
                                        } finally {
                                            if (J$.Fr(168753))
                                                continue jalangiLabel39;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(168761, J$e);
                        } finally {
                            if (J$.Fr(168769))
                                continue jalangiLabel40;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(167705, '_typeof', J$.T(167697, _typeof, 12, false), true, false, false);
            _classCallCheck = J$.N(167721, '_classCallCheck', J$.T(167713, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(167737, '_defineProperties', J$.T(167729, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(167753, '_createClass', J$.T(167745, _createClass, 12, false), true, false, false);
            _possibleConstructorReturn = J$.N(167769, '_possibleConstructorReturn', J$.T(167761, _possibleConstructorReturn, 12, false), true, false, false);
            _getPrototypeOf = J$.N(167785, '_getPrototypeOf', J$.T(167777, _getPrototypeOf, 12, false), true, false, false);
            _assertThisInitialized = J$.N(167801, '_assertThisInitialized', J$.T(167793, _assertThisInitialized, 12, false), true, false, false);
            _inherits = J$.N(167817, '_inherits', J$.T(167809, _inherits, 12, false), true, false, false);
            _setPrototypeOf = J$.N(167833, '_setPrototypeOf', J$.T(167825, _setPrototypeOf, 12, false), true, false, false);
            J$.N(167841, 'EventEmitter', EventEmitter, false, false, false);
            J$.N(167849, 'crypto', crypto, false, false, false);
            J$.N(167857, 'debugOptions', debugOptions, false, false, false);
            J$.N(167865, 'parseHeader', parseHeader, false, false, false);
            J$.N(167873, 'decompress', decompress, false, false, false);
            J$.N(167881, 'Response', Response, false, false, false);
            J$.N(167889, 'BinMsg', BinMsg, false, false, false);
            J$.N(167897, 'MongoNetworkError', MongoNetworkError, false, false, false);
            J$.N(167905, 'MongoError', MongoError, false, false, false);
            J$.N(167913, 'Logger', Logger, false, false, false);
            J$.N(167921, 'OP_COMPRESSED', OP_COMPRESSED, false, false, false);
            J$.N(167929, 'OP_MSG', OP_MSG, false, false, false);
            J$.N(167937, 'MESSAGE_HEADER_SIZE', MESSAGE_HEADER_SIZE, false, false, false);
            J$.N(167945, 'Buffer', Buffer, false, false, false);
            J$.N(167953, '_id', _id, false, false, false);
            J$.N(167961, 'DEFAULT_MAX_BSON_MESSAGE_SIZE', DEFAULT_MAX_BSON_MESSAGE_SIZE, false, false, false);
            J$.N(167969, 'DEBUG_FIELDS', DEBUG_FIELDS, false, false, false);
            J$.N(167977, 'connectionAccountingSpy', connectionAccountingSpy, false, false, false);
            J$.N(167985, 'connectionAccounting', connectionAccounting, false, false, false);
            J$.N(167993, '_connections', _connections, false, false, false);
            J$.N(168001, 'Connection', Connection, false, false, false);
            deleteConnection = J$.N(168017, 'deleteConnection', J$.T(168009, deleteConnection, 12, false), true, false, false);
            addConnection = J$.N(168033, 'addConnection', J$.T(168025, addConnection, 12, false), true, false, false);
            errorHandler = J$.N(168049, 'errorHandler', J$.T(168041, errorHandler, 12, false), true, false, false);
            timeoutHandler = J$.N(168065, 'timeoutHandler', J$.T(168057, timeoutHandler, 12, false), true, false, false);
            closeHandler = J$.N(168081, 'closeHandler', J$.T(168073, closeHandler, 12, false), true, false, false);
            processMessage = J$.N(168097, 'processMessage', J$.T(168089, processMessage, 12, false), true, false, false);
            dataHandler = J$.N(168113, 'dataHandler', J$.T(168105, dataHandler, 12, false), true, false, false);
            J$.T(156401, 'use strict', 21, false);
            var EventEmitter = J$.W(158025, 'EventEmitter', J$.G(158017, J$.F(158009, J$.I(typeof require === 'undefined' ? require = J$.R(157993, 'require', undefined, true, true) : require = J$.R(157993, 'require', require, true, true)), false)(J$.T(158001, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            var crypto = J$.W(158057, 'crypto', J$.F(158049, J$.I(typeof require === 'undefined' ? require = J$.R(158033, 'require', undefined, true, true) : require = J$.R(158033, 'require', require, true, true)), false)(J$.T(158041, 'crypto', 21, false)), crypto, false, true);
            var debugOptions = J$.W(158097, 'debugOptions', J$.G(158089, J$.F(158081, J$.I(typeof require === 'undefined' ? require = J$.R(158065, 'require', undefined, true, true) : require = J$.R(158065, 'require', require, true, true)), false)(J$.T(158073, './utils', 21, false)), 'debugOptions'), debugOptions, false, true);
            var parseHeader = J$.W(158137, 'parseHeader', J$.G(158129, J$.F(158121, J$.I(typeof require === 'undefined' ? require = J$.R(158105, 'require', undefined, true, true) : require = J$.R(158105, 'require', require, true, true)), false)(J$.T(158113, '../wireprotocol/shared', 21, false)), 'parseHeader'), parseHeader, false, true);
            var decompress = J$.W(158177, 'decompress', J$.G(158169, J$.F(158161, J$.I(typeof require === 'undefined' ? require = J$.R(158145, 'require', undefined, true, true) : require = J$.R(158145, 'require', require, true, true)), false)(J$.T(158153, '../wireprotocol/compression', 21, false)), 'decompress'), decompress, false, true);
            var Response = J$.W(158217, 'Response', J$.G(158209, J$.F(158201, J$.I(typeof require === 'undefined' ? require = J$.R(158185, 'require', undefined, true, true) : require = J$.R(158185, 'require', require, true, true)), false)(J$.T(158193, './commands', 21, false)), 'Response'), Response, false, true);
            var BinMsg = J$.W(158257, 'BinMsg', J$.G(158249, J$.F(158241, J$.I(typeof require === 'undefined' ? require = J$.R(158225, 'require', undefined, true, true) : require = J$.R(158225, 'require', require, true, true)), false)(J$.T(158233, './msg', 21, false)), 'BinMsg'), BinMsg, false, true);
            var MongoNetworkError = J$.W(158297, 'MongoNetworkError', J$.G(158289, J$.F(158281, J$.I(typeof require === 'undefined' ? require = J$.R(158265, 'require', undefined, true, true) : require = J$.R(158265, 'require', require, true, true)), false)(J$.T(158273, '../error', 21, false)), 'MongoNetworkError'), MongoNetworkError, false, true);
            var MongoError = J$.W(158337, 'MongoError', J$.G(158329, J$.F(158321, J$.I(typeof require === 'undefined' ? require = J$.R(158305, 'require', undefined, true, true) : require = J$.R(158305, 'require', require, true, true)), false)(J$.T(158313, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var Logger = J$.W(158369, 'Logger', J$.F(158361, J$.I(typeof require === 'undefined' ? require = J$.R(158345, 'require', undefined, true, true) : require = J$.R(158345, 'require', require, true, true)), false)(J$.T(158353, './logger', 21, false)), Logger, false, true);
            var OP_COMPRESSED = J$.W(158417, 'OP_COMPRESSED', J$.G(158409, J$.G(158401, J$.F(158393, J$.I(typeof require === 'undefined' ? require = J$.R(158377, 'require', undefined, true, true) : require = J$.R(158377, 'require', require, true, true)), false)(J$.T(158385, '../wireprotocol/shared', 21, false)), 'opcodes'), 'OP_COMPRESSED'), OP_COMPRESSED, false, true);
            var OP_MSG = J$.W(158465, 'OP_MSG', J$.G(158457, J$.G(158449, J$.F(158441, J$.I(typeof require === 'undefined' ? require = J$.R(158425, 'require', undefined, true, true) : require = J$.R(158425, 'require', require, true, true)), false)(J$.T(158433, '../wireprotocol/shared', 21, false)), 'opcodes'), 'OP_MSG'), OP_MSG, false, true);
            var MESSAGE_HEADER_SIZE = J$.W(158505, 'MESSAGE_HEADER_SIZE', J$.G(158497, J$.F(158489, J$.I(typeof require === 'undefined' ? require = J$.R(158473, 'require', undefined, true, true) : require = J$.R(158473, 'require', require, true, true)), false)(J$.T(158481, '../wireprotocol/shared', 21, false)), 'MESSAGE_HEADER_SIZE'), MESSAGE_HEADER_SIZE, false, true);
            var Buffer = J$.W(158545, 'Buffer', J$.G(158537, J$.F(158529, J$.I(typeof require === 'undefined' ? require = J$.R(158513, 'require', undefined, true, true) : require = J$.R(158513, 'require', require, true, true)), false)(J$.T(158521, 'safe-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var _id = J$.W(158561, '_id', J$.T(158553, 0, 22, false), _id, false, true);
            var DEFAULT_MAX_BSON_MESSAGE_SIZE = J$.W(158601, 'DEFAULT_MAX_BSON_MESSAGE_SIZE', J$.B(10570, '*', J$.B(10562, '*', J$.B(10554, '*', J$.T(158569, 1024, 22, false), J$.T(158577, 1024, 22, false)), J$.T(158585, 16, 22, false)), J$.T(158593, 4, 22, false)), DEFAULT_MAX_BSON_MESSAGE_SIZE, false, true);
            var DEBUG_FIELDS = J$.W(158753, 'DEBUG_FIELDS', J$.T(158745, [
                J$.T(158609, 'host', 21, false),
                J$.T(158617, 'port', 21, false),
                J$.T(158625, 'size', 21, false),
                J$.T(158633, 'keepAlive', 21, false),
                J$.T(158641, 'keepAliveInitialDelay', 21, false),
                J$.T(158649, 'noDelay', 21, false),
                J$.T(158657, 'connectionTimeout', 21, false),
                J$.T(158665, 'socketTimeout', 21, false),
                J$.T(158673, 'ssl', 21, false),
                J$.T(158681, 'ca', 21, false),
                J$.T(158689, 'crl', 21, false),
                J$.T(158697, 'cert', 21, false),
                J$.T(158705, 'rejectUnauthorized', 21, false),
                J$.T(158713, 'promoteLongs', 21, false),
                J$.T(158721, 'promoteValues', 21, false),
                J$.T(158729, 'promoteBuffers', 21, false),
                J$.T(158737, 'checkServerIdentity', 21, false)
            ], 10, false), DEBUG_FIELDS, false, true);
            var connectionAccountingSpy = J$.W(158769, 'connectionAccountingSpy', J$.T(158761, undefined, 24, false), connectionAccountingSpy, false, true);
            var connectionAccounting = J$.W(158785, 'connectionAccounting', J$.T(158777, false, 23, false), connectionAccounting, false, true);
            var _connections = J$.W(158801, '_connections', J$.T(158793, {}, 11, false), _connections, false, true);
            var Connection = J$.W(162937, 'Connection', J$.F(162929, J$.T(162913, function (_EventEmitter) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(162873, arguments.callee, this, arguments);
                            function Connection(socket, options) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(160577, arguments.callee, this, arguments);
                                            arguments = J$.N(160585, 'arguments', arguments, true, false, false);
                                            socket = J$.N(160593, 'socket', socket, true, false, false);
                                            options = J$.N(160601, 'options', options, true, false, false);
                                            J$.N(160609, '_this', _this, false, false, false);
                                            J$.N(160617, 'hash', hash, false, false, false);
                                            var _this;
                                            J$.F(158865, J$.R(158841, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(158849, 'this', this, false, false), J$.R(158857, 'Connection', Connection, false, false));
                                            _this = J$.W(158937, '_this', J$.F(158929, J$.R(158873, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(158881, 'this', this, false, false), J$.M(158921, J$.F(158905, J$.R(158889, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(158897, 'Connection', Connection, false, false)), 'call', false)(J$.R(158913, 'this', this, false, false))), _this, false, false);
                                            options = J$.W(158961, 'options', J$.C(8640, J$.R(158945, 'options', options, false, false)) ? J$._() : J$.T(158953, {}, 11, false), options, false, false);
                                            if (J$.C(8648, J$.U(10578, '!', J$.G(158977, J$.R(158969, 'options', options, false, false), 'bson')))) {
                                                throw J$.F(159001, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(158985, 'TypeError', undefined, true, true) : TypeError = J$.R(158985, 'TypeError', TypeError, true, true)), true)(J$.T(158993, 'must pass in valid bson parser', 21, false));
                                            }
                                            J$.P(159033, J$.R(159009, '_this', _this, false, false), 'id', J$.B(10602, '-', _id = J$.W(159025, '_id', J$.B(10594, '+', J$.U(10586, '+', J$.R(159017, '_id', _id, false, true)), 1), _id, false, true), 1));
                                            J$.P(159057, J$.R(159041, '_this', _this, false, false), 'options', J$.R(159049, 'options', options, false, false));
                                            J$.P(159105, J$.R(159065, '_this', _this, false, false), 'logger', J$.F(159097, J$.R(159073, 'Logger', Logger, false, true), false)(J$.T(159081, 'Connection', 21, false), J$.R(159089, 'options', options, false, false)));
                                            J$.P(159137, J$.R(159113, '_this', _this, false, false), 'bson', J$.G(159129, J$.R(159121, 'options', options, false, false), 'bson'));
                                            J$.P(159169, J$.R(159145, '_this', _this, false, false), 'tag', J$.G(159161, J$.R(159153, 'options', options, false, false), 'tag'));
                                            J$.P(159209, J$.R(159177, '_this', _this, false, false), 'maxBsonMessageSize', J$.C(8656, J$.G(159193, J$.R(159185, 'options', options, false, false), 'maxBsonMessageSize')) ? J$._() : J$.R(159201, 'DEFAULT_MAX_BSON_MESSAGE_SIZE', DEFAULT_MAX_BSON_MESSAGE_SIZE, false, true));
                                            J$.P(159249, J$.R(159217, '_this', _this, false, false), 'port', J$.C(8664, J$.G(159233, J$.R(159225, 'options', options, false, false), 'port')) ? J$._() : J$.T(159241, 27017, 22, false));
                                            J$.P(159289, J$.R(159257, '_this', _this, false, false), 'host', J$.C(8672, J$.G(159273, J$.R(159265, 'options', options, false, false), 'host')) ? J$._() : J$.T(159281, 'localhost', 21, false));
                                            J$.P(159353, J$.R(159297, '_this', _this, false, false), 'socketTimeout', J$.C(8680, J$.B(10618, '===', J$.U(10610, 'typeof', J$.G(159313, J$.R(159305, 'options', options, false, false), 'socketTimeout')), J$.T(159321, 'number', 21, false))) ? J$.G(159337, J$.R(159329, 'options', options, false, false), 'socketTimeout') : J$.T(159345, 360000, 22, false));
                                            J$.P(159417, J$.R(159361, '_this', _this, false, false), 'keepAlive', J$.C(8688, J$.B(10634, '===', J$.U(10626, 'typeof', J$.G(159377, J$.R(159369, 'options', options, false, false), 'keepAlive')), J$.T(159385, 'boolean', 21, false))) ? J$.G(159401, J$.R(159393, 'options', options, false, false), 'keepAlive') : J$.T(159409, true, 23, false));
                                            J$.P(159481, J$.R(159425, '_this', _this, false, false), 'keepAliveInitialDelay', J$.C(8696, J$.B(10650, '===', J$.U(10642, 'typeof', J$.G(159441, J$.R(159433, 'options', options, false, false), 'keepAliveInitialDelay')), J$.T(159449, 'number', 21, false))) ? J$.G(159465, J$.R(159457, 'options', options, false, false), 'keepAliveInitialDelay') : J$.T(159473, 300000, 22, false));
                                            J$.P(159545, J$.R(159489, '_this', _this, false, false), 'connectionTimeout', J$.C(8704, J$.B(10666, '===', J$.U(10658, 'typeof', J$.G(159505, J$.R(159497, 'options', options, false, false), 'connectionTimeout')), J$.T(159513, 'number', 21, false))) ? J$.G(159529, J$.R(159521, 'options', options, false, false), 'connectionTimeout') : J$.T(159537, 30000, 22, false));
                                            if (J$.C(8712, J$.B(10674, '>', J$.G(159561, J$.R(159553, '_this', _this, false, false), 'keepAliveInitialDelay'), J$.G(159577, J$.R(159569, '_this', _this, false, false), 'socketTimeout')))) {
                                                J$.P(159633, J$.R(159585, '_this', _this, false, false), 'keepAliveInitialDelay', J$.M(159625, J$.I(typeof Math === 'undefined' ? Math = J$.R(159593, 'Math', undefined, true, true) : Math = J$.R(159593, 'Math', Math, true, true)), 'round', false)(J$.B(10682, '/', J$.G(159609, J$.R(159601, '_this', _this, false, false), 'socketTimeout'), J$.T(159617, 2, 22, false))));
                                            }
                                            if (J$.C(8720, J$.M(159657, J$.G(159649, J$.R(159641, '_this', _this, false, false), 'logger'), 'isDebug', false)())) {
                                                J$.M(159785, J$.G(159673, J$.R(159665, '_this', _this, false, false), 'logger'), 'debug', false)(J$.M(159777, J$.M(159713, J$.T(159681, 'creating connection ', 21, false), 'concat', false)(J$.G(159697, J$.R(159689, '_this', _this, false, false), 'id'), J$.T(159705, ' with options [', 21, false)), 'concat', false)(J$.M(159761, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(159721, 'JSON', undefined, true, true) : JSON = J$.R(159721, 'JSON', JSON, true, true)), 'stringify', false)(J$.F(159753, J$.R(159729, 'debugOptions', debugOptions, false, true), false)(J$.R(159737, 'DEBUG_FIELDS', DEBUG_FIELDS, false, true), J$.R(159745, 'options', options, false, false))), J$.T(159769, ']', 21, false)));
                                            }
                                            J$.P(159953, J$.R(159793, '_this', _this, false, false), 'responseOptions', J$.T(159945, {
                                                promoteLongs: J$.C(8728, J$.B(10698, '===', J$.U(10690, 'typeof', J$.G(159809, J$.R(159801, 'options', options, false, false), 'promoteLongs')), J$.T(159817, 'boolean', 21, false))) ? J$.G(159833, J$.R(159825, 'options', options, false, false), 'promoteLongs') : J$.T(159841, true, 23, false),
                                                promoteValues: J$.C(8736, J$.B(10714, '===', J$.U(10706, 'typeof', J$.G(159857, J$.R(159849, 'options', options, false, false), 'promoteValues')), J$.T(159865, 'boolean', 21, false))) ? J$.G(159881, J$.R(159873, 'options', options, false, false), 'promoteValues') : J$.T(159889, true, 23, false),
                                                promoteBuffers: J$.C(8744, J$.B(10730, '===', J$.U(10722, 'typeof', J$.G(159905, J$.R(159897, 'options', options, false, false), 'promoteBuffers')), J$.T(159913, 'boolean', 21, false))) ? J$.G(159929, J$.R(159921, 'options', options, false, false), 'promoteBuffers') : J$.T(159937, false, 23, false)
                                            }, 11, false));
                                            J$.P(159977, J$.R(159961, '_this', _this, false, false), 'flushing', J$.T(159969, false, 23, false));
                                            J$.P(160001, J$.R(159985, '_this', _this, false, false), 'queue', J$.T(159993, [], 10, false));
                                            J$.P(160025, J$.R(160009, '_this', _this, false, false), 'writeStream', J$.T(160017, null, 25, false));
                                            J$.P(160049, J$.R(160033, '_this', _this, false, false), 'destroyed', J$.T(160041, false, 23, false));
                                            var hash = J$.W(160081, 'hash', J$.M(160073, J$.R(160057, 'crypto', crypto, false, true), 'createHash', false)(J$.T(160065, 'sha1', 21, false)), hash, false, false);
                                            J$.M(160113, J$.R(160089, 'hash', hash, false, false), 'update', false)(J$.G(160105, J$.R(160097, '_this', _this, false, false), 'address'));
                                            J$.P(160153, J$.R(160121, '_this', _this, false, false), 'hashedName', J$.M(160145, J$.R(160129, 'hash', hash, false, false), 'digest', false)(J$.T(160137, 'hex', 21, false)));
                                            J$.P(160177, J$.R(160161, '_this', _this, false, false), 'workItems', J$.T(160169, [], 10, false));
                                            J$.P(160201, J$.R(160185, '_this', _this, false, false), 'socket', J$.R(160193, 'socket', socket, false, false));
                                            J$.M(160273, J$.G(160217, J$.R(160209, '_this', _this, false, false), 'socket'), 'once', false)(J$.T(160225, 'error', 21, false), J$.F(160265, J$.R(160233, 'errorHandler', errorHandler, false, true), false)(J$.F(160257, J$.R(160241, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(160249, '_this', _this, false, false))));
                                            J$.M(160345, J$.G(160289, J$.R(160281, '_this', _this, false, false), 'socket'), 'once', false)(J$.T(160297, 'timeout', 21, false), J$.F(160337, J$.R(160305, 'timeoutHandler', timeoutHandler, false, true), false)(J$.F(160329, J$.R(160313, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(160321, '_this', _this, false, false))));
                                            J$.M(160417, J$.G(160361, J$.R(160353, '_this', _this, false, false), 'socket'), 'once', false)(J$.T(160369, 'close', 21, false), J$.F(160409, J$.R(160377, 'closeHandler', closeHandler, false, true), false)(J$.F(160401, J$.R(160385, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(160393, '_this', _this, false, false))));
                                            J$.M(160489, J$.G(160433, J$.R(160425, '_this', _this, false, false), 'socket'), 'on', false)(J$.T(160441, 'data', 21, false), J$.F(160481, J$.R(160449, 'dataHandler', dataHandler, false, true), false)(J$.F(160473, J$.R(160457, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(160465, '_this', _this, false, false))));
                                            if (J$.C(8752, J$.R(160497, 'connectionAccounting', connectionAccounting, false, true))) {
                                                J$.F(160553, J$.R(160505, 'addConnection', addConnection, false, true), false)(J$.G(160521, J$.R(160513, '_this', _this, false, false), 'id'), J$.F(160545, J$.R(160529, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(160537, '_this', _this, false, false)));
                                            }
                                            return J$.Rt(160569, J$.R(160561, '_this', _this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(168329, J$e);
                                        } finally {
                                            if (J$.Fr(168337))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(162881, 'arguments', arguments, true, false, false);
                            _EventEmitter = J$.N(162889, '_EventEmitter', _EventEmitter, true, false, false);
                            Connection = J$.N(162905, 'Connection', J$.T(162897, Connection, 12, false), true, false, false);
                            J$.F(158833, J$.R(158809, '_inherits', _inherits, false, true), false)(J$.R(158817, 'Connection', Connection, false, false), J$.R(158825, '_EventEmitter', _EventEmitter, false, false));
                            J$.F(162849, J$.R(160625, '_createClass', _createClass, false, true), false)(J$.R(160633, 'Connection', Connection, false, false), J$.T(162601, [
                                J$.T(160729, {
                                    key: J$.T(160641, 'setSocketTimeout', 21, false),
                                    value: J$.T(160721, function setSocketTimeout(value) {
                                        jalangiLabel14:
                                            while (true) {
                                                try {
                                                    J$.Fe(160697, arguments.callee, this, arguments);
                                                    arguments = J$.N(160705, 'arguments', arguments, true, false, false);
                                                    value = J$.N(160713, 'value', value, true, false, false);
                                                    if (J$.C(8760, J$.G(160657, J$.R(160649, 'this', this, false, false), 'socket'))) {
                                                        J$.M(160689, J$.G(160673, J$.R(160665, 'this', this, false, false), 'socket'), 'setTimeout', false)(J$.R(160681, 'value', value, false, false));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(168345, J$e);
                                                } finally {
                                                    if (J$.Fr(168353))
                                                        continue jalangiLabel14;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(160825, {
                                    key: J$.T(160737, 'resetSocketTimeout', 21, false),
                                    value: J$.T(160817, function resetSocketTimeout() {
                                        jalangiLabel15:
                                            while (true) {
                                                try {
                                                    J$.Fe(160801, arguments.callee, this, arguments);
                                                    arguments = J$.N(160809, 'arguments', arguments, true, false, false);
                                                    if (J$.C(8768, J$.G(160753, J$.R(160745, 'this', this, false, false), 'socket'))) {
                                                        J$.M(160793, J$.G(160769, J$.R(160761, 'this', this, false, false), 'socket'), 'setTimeout', false)(J$.G(160785, J$.R(160777, 'this', this, false, false), 'socketTimeout'));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(168361, J$e);
                                                } finally {
                                                    if (J$.Fr(168369))
                                                        continue jalangiLabel15;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(161025, {
                                    key: J$.T(160833, 'unref', 21, false),
                                    value: J$.T(161017, function unref() {
                                        jalangiLabel17:
                                            while (true) {
                                                try {
                                                    J$.Fe(160993, arguments.callee, this, arguments);
                                                    arguments = J$.N(161001, 'arguments', arguments, true, false, false);
                                                    J$.N(161009, '_this2', _this2, false, false, false);
                                                    var _this2 = J$.W(160849, '_this2', J$.R(160841, 'this', this, false, false), _this2, false, false);
                                                    if (J$.C(8776, J$.B(10738, '==', J$.G(160865, J$.R(160857, 'this', this, false, false), 'socket'), J$.T(160873, null, 25, false)))) {
                                                        J$.M(160953, J$.R(160881, 'this', this, false, false), 'once', false)(J$.T(160889, 'connect', 21, false), J$.T(160945, function () {
                                                            jalangiLabel16:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(160929, arguments.callee, this, arguments);
                                                                        arguments = J$.N(160937, 'arguments', arguments, true, false, false);
                                                                        return J$.Rt(160921, J$.M(160913, J$.G(160905, J$.R(160897, '_this2', _this2, false, false), 'socket'), 'unref', false)());
                                                                    } catch (J$e) {
                                                                        J$.Ex(168377, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(168385))
                                                                            continue jalangiLabel16;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false));
                                                        return J$.Rt(160961, undefined);
                                                    }
                                                    J$.M(160985, J$.G(160977, J$.R(160969, 'this', this, false, false), 'socket'), 'unref', false)();
                                                } catch (J$e) {
                                                    J$.Ex(168393, J$e);
                                                } finally {
                                                    if (J$.Fr(168401))
                                                        continue jalangiLabel17;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(161545, {
                                    key: J$.T(161033, 'destroy', 21, false),
                                    value: J$.T(161537, function destroy(options, callback) {
                                        jalangiLabel19:
                                            while (true) {
                                                try {
                                                    J$.Fe(161497, arguments.callee, this, arguments);
                                                    arguments = J$.N(161505, 'arguments', arguments, true, false, false);
                                                    options = J$.N(161513, 'options', options, true, false, false);
                                                    callback = J$.N(161521, 'callback', callback, true, false, false);
                                                    J$.N(161529, '_this3', _this3, false, false, false);
                                                    var _this3 = J$.W(161049, '_this3', J$.R(161041, 'this', this, false, false), _this3, false, false);
                                                    if (J$.C(8784, J$.B(10754, '===', J$.U(10746, 'typeof', J$.R(161057, 'options', options, false, false)), J$.T(161065, 'function', 21, false)))) {
                                                        callback = J$.W(161081, 'callback', J$.R(161073, 'options', options, false, false), callback, false, false);
                                                        options = J$.W(161097, 'options', J$.T(161089, {}, 11, false), options, false, false);
                                                    }
                                                    options = J$.W(161145, 'options', J$.M(161137, J$.I(typeof Object === 'undefined' ? Object = J$.R(161105, 'Object', undefined, true, true) : Object = J$.R(161105, 'Object', Object, true, true)), 'assign', false)(J$.T(161121, { force: J$.T(161113, false, 23, false) }, 11, false), J$.R(161129, 'options', options, false, false)), options, false, false);
                                                    if (J$.C(8792, J$.R(161153, 'connectionAccounting', connectionAccounting, false, true))) {
                                                        J$.F(161185, J$.R(161161, 'deleteConnection', deleteConnection, false, true), false)(J$.G(161177, J$.R(161169, 'this', this, false, false), 'id'));
                                                    }
                                                    if (J$.C(8800, J$.B(10762, '==', J$.G(161201, J$.R(161193, 'this', this, false, false), 'socket'), J$.T(161209, null, 25, false)))) {
                                                        J$.P(161233, J$.R(161217, 'this', this, false, false), 'destroyed', J$.T(161225, true, 23, false));
                                                        return J$.Rt(161241, undefined);
                                                    }
                                                    if (J$.C(8816, J$.G(161257, J$.R(161249, 'options', options, false, false), 'force'))) {
                                                        J$.M(161281, J$.G(161273, J$.R(161265, 'this', this, false, false), 'socket'), 'destroy', false)();
                                                        J$.P(161305, J$.R(161289, 'this', this, false, false), 'destroyed', J$.T(161297, true, 23, false));
                                                        if (J$.C(8808, J$.B(10778, '===', J$.U(10770, 'typeof', J$.R(161313, 'callback', callback, false, false)), J$.T(161321, 'function', 21, false))))
                                                            J$.F(161353, J$.R(161329, 'callback', callback, false, false), false)(J$.T(161337, null, 25, false), J$.T(161345, null, 25, false));
                                                        return J$.Rt(161361, undefined);
                                                    }
                                                    J$.M(161489, J$.G(161377, J$.R(161369, 'this', this, false, false), 'socket'), 'end', false)(J$.T(161481, function (err) {
                                                        jalangiLabel18:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(161457, arguments.callee, this, arguments);
                                                                    arguments = J$.N(161465, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(161473, 'err', err, true, false, false);
                                                                    J$.P(161401, J$.R(161385, '_this3', _this3, false, false), 'destroyed', J$.T(161393, true, 23, false));
                                                                    if (J$.C(8824, J$.B(10794, '===', J$.U(10786, 'typeof', J$.R(161409, 'callback', callback, false, false)), J$.T(161417, 'function', 21, false))))
                                                                        J$.F(161449, J$.R(161425, 'callback', callback, false, false), false)(J$.R(161433, 'err', err, false, false), J$.T(161441, null, 25, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(168409, J$e);
                                                                } finally {
                                                                    if (J$.Fr(168417))
                                                                        continue jalangiLabel18;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(168425, J$e);
                                                } finally {
                                                    if (J$.Fr(168433))
                                                        continue jalangiLabel19;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(162177, {
                                    key: J$.T(161553, 'write', 21, false),
                                    value: J$.T(162169, function write(buffer) {
                                        jalangiLabel20:
                                            while (true) {
                                                try {
                                                    J$.Fe(162129, arguments.callee, this, arguments);
                                                    arguments = J$.N(162137, 'arguments', arguments, true, false, false);
                                                    buffer = J$.N(162145, 'buffer', buffer, true, false, false);
                                                    J$.N(162153, 'i', i, false, false, false);
                                                    J$.N(162161, '_i', _i, false, false, false);
                                                    if (J$.C(8848, J$.M(161577, J$.G(161569, J$.R(161561, 'this', this, false, false), 'logger'), 'isDebug', false)())) {
                                                        if (J$.C(8840, J$.U(10802, '!', J$.M(161601, J$.I(typeof Array === 'undefined' ? Array = J$.R(161585, 'Array', undefined, true, true) : Array = J$.R(161585, 'Array', Array, true, true)), 'isArray', false)(J$.R(161593, 'buffer', buffer, false, false))))) {
                                                            J$.M(161697, J$.G(161617, J$.R(161609, 'this', this, false, false), 'logger'), 'debug', false)(J$.M(161689, J$.M(161665, J$.T(161625, 'writing buffer [', 21, false), 'concat', false)(J$.M(161649, J$.R(161633, 'buffer', buffer, false, false), 'toString', false)(J$.T(161641, 'hex', 21, false)), J$.T(161657, '] to ', 21, false)), 'concat', false)(J$.G(161681, J$.R(161673, 'this', this, false, false), 'address')));
                                                        } else {
                                                            for (var i = J$.W(161713, 'i', J$.T(161705, 0, 22, false), i, false, false); J$.C(8832, J$.B(10810, '<', J$.R(161721, 'i', i, false, false), J$.G(161737, J$.R(161729, 'buffer', buffer, false, false), 'length'))); J$.B(10834, '-', i = J$.W(161753, 'i', J$.B(10826, '+', J$.U(10818, '+', J$.R(161745, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                                J$.M(161865, J$.G(161769, J$.R(161761, 'this', this, false, false), 'logger'), 'debug', false)(J$.M(161857, J$.M(161833, J$.T(161777, 'writing buffer [', 21, false), 'concat', false)(J$.M(161817, J$.G(161801, J$.R(161785, 'buffer', buffer, false, false), J$.R(161793, 'i', i, false, false)), 'toString', false)(J$.T(161809, 'hex', 21, false)), J$.T(161825, '] to ', 21, false)), 'concat', false)(J$.G(161849, J$.R(161841, 'this', this, false, false), 'address')));
                                                            }
                                                        }
                                                    }
                                                    if (J$.C(8872, J$.B(10842, '===', J$.G(161889, J$.G(161881, J$.R(161873, 'this', this, false, false), 'socket'), 'destroyed'), J$.T(161897, false, 23, false)))) {
                                                        if (J$.C(8856, J$.U(10850, '!', J$.M(161921, J$.I(typeof Array === 'undefined' ? Array = J$.R(161905, 'Array', undefined, true, true) : Array = J$.R(161905, 'Array', Array, true, true)), 'isArray', false)(J$.R(161913, 'buffer', buffer, false, false))))) {
                                                            J$.M(161961, J$.G(161937, J$.R(161929, 'this', this, false, false), 'socket'), 'write', false)(J$.R(161945, 'buffer', buffer, false, false), J$.T(161953, 'binary', 21, false));
                                                            return J$.Rt(161977, J$.T(161969, true, 23, false));
                                                        }
                                                        for (var _i = J$.W(161993, '_i', J$.T(161985, 0, 22, false), _i, false, false); J$.C(8864, J$.B(10858, '<', J$.R(162001, '_i', _i, false, false), J$.G(162017, J$.R(162009, 'buffer', buffer, false, false), 'length'))); J$.B(10882, '-', _i = J$.W(162033, '_i', J$.B(10874, '+', J$.U(10866, '+', J$.R(162025, '_i', _i, false, false)), 1), _i, false, false), 1)) {
                                                            J$.M(162089, J$.G(162049, J$.R(162041, 'this', this, false, false), 'socket'), 'write', false)(J$.G(162073, J$.R(162057, 'buffer', buffer, false, false), J$.R(162065, '_i', _i, false, false)), J$.T(162081, 'binary', 21, false));
                                                        }
                                                        return J$.Rt(162105, J$.T(162097, true, 23, false));
                                                    }
                                                    return J$.Rt(162121, J$.T(162113, false, 23, false));
                                                } catch (J$e) {
                                                    J$.Ex(168441, J$e);
                                                } finally {
                                                    if (J$.Fr(168449))
                                                        continue jalangiLabel20;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(162249, {
                                    key: J$.T(162185, 'toString', 21, false),
                                    value: J$.T(162241, function toString() {
                                        jalangiLabel21:
                                            while (true) {
                                                try {
                                                    J$.Fe(162225, arguments.callee, this, arguments);
                                                    arguments = J$.N(162233, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(162217, J$.B(10890, '+', J$.T(162193, '', 21, false), J$.G(162209, J$.R(162201, 'this', this, false, false), 'id')));
                                                } catch (J$e) {
                                                    J$.Ex(168457, J$e);
                                                } finally {
                                                    if (J$.Fr(168465))
                                                        continue jalangiLabel21;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(162353, {
                                    key: J$.T(162257, 'toJSON', 21, false),
                                    value: J$.T(162345, function toJSON() {
                                        jalangiLabel22:
                                            while (true) {
                                                try {
                                                    J$.Fe(162329, arguments.callee, this, arguments);
                                                    arguments = J$.N(162337, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(162321, J$.T(162313, {
                                                        id: J$.G(162273, J$.R(162265, 'this', this, false, false), 'id'),
                                                        host: J$.G(162289, J$.R(162281, 'this', this, false, false), 'host'),
                                                        port: J$.G(162305, J$.R(162297, 'this', this, false, false), 'port')
                                                    }, 11, false));
                                                } catch (J$e) {
                                                    J$.Ex(168473, J$e);
                                                } finally {
                                                    if (J$.Fr(168481))
                                                        continue jalangiLabel22;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(162481, {
                                    key: J$.T(162361, 'isConnected', 21, false),
                                    value: J$.T(162473, function isConnected() {
                                        jalangiLabel23:
                                            while (true) {
                                                try {
                                                    J$.Fe(162457, arguments.callee, this, arguments);
                                                    arguments = J$.N(162465, 'arguments', arguments, true, false, false);
                                                    if (J$.C(8880, J$.G(162377, J$.R(162369, 'this', this, false, false), 'destroyed')))
                                                        return J$.Rt(162393, J$.T(162385, false, 23, false));
                                                    return J$.Rt(162449, J$.C(8888, J$.U(10898, '!', J$.G(162417, J$.G(162409, J$.R(162401, 'this', this, false, false), 'socket'), 'destroyed'))) ? J$.G(162441, J$.G(162433, J$.R(162425, 'this', this, false, false), 'socket'), 'writable') : J$._());
                                                } catch (J$e) {
                                                    J$.Ex(168489, J$e);
                                                } finally {
                                                    if (J$.Fr(168497))
                                                        continue jalangiLabel23;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(162593, {
                                    key: J$.T(162489, 'address', 21, false),
                                    get: J$.T(162585, function get() {
                                        jalangiLabel24:
                                            while (true) {
                                                try {
                                                    J$.Fe(162569, arguments.callee, this, arguments);
                                                    arguments = J$.N(162577, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(162561, J$.M(162553, J$.M(162529, J$.T(162497, '', 21, false), 'concat', false)(J$.G(162513, J$.R(162505, 'this', this, false, false), 'host'), J$.T(162521, ':', 21, false)), 'concat', false)(J$.G(162545, J$.R(162537, 'this', this, false, false), 'port')));
                                                } catch (J$e) {
                                                    J$.Ex(168505, J$e);
                                                } finally {
                                                    if (J$.Fr(168513))
                                                        continue jalangiLabel24;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false), J$.T(162841, [
                                J$.T(162705, {
                                    key: J$.T(162609, 'enableConnectionAccounting', 21, false),
                                    value: J$.T(162697, function enableConnectionAccounting(spy) {
                                        jalangiLabel25:
                                            while (true) {
                                                try {
                                                    J$.Fe(162673, arguments.callee, this, arguments);
                                                    arguments = J$.N(162681, 'arguments', arguments, true, false, false);
                                                    spy = J$.N(162689, 'spy', spy, true, false, false);
                                                    if (J$.C(8896, J$.R(162617, 'spy', spy, false, false))) {
                                                        connectionAccountingSpy = J$.W(162633, 'connectionAccountingSpy', J$.R(162625, 'spy', spy, false, false), connectionAccountingSpy, false, true);
                                                    }
                                                    connectionAccounting = J$.W(162649, 'connectionAccounting', J$.T(162641, true, 23, false), connectionAccounting, false, true);
                                                    _connections = J$.W(162665, '_connections', J$.T(162657, {}, 11, false), _connections, false, true);
                                                } catch (J$e) {
                                                    J$.Ex(168521, J$e);
                                                } finally {
                                                    if (J$.Fr(168529))
                                                        continue jalangiLabel25;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(162777, {
                                    key: J$.T(162713, 'disableConnectionAccounting', 21, false),
                                    value: J$.T(162769, function disableConnectionAccounting() {
                                        jalangiLabel26:
                                            while (true) {
                                                try {
                                                    J$.Fe(162753, arguments.callee, this, arguments);
                                                    arguments = J$.N(162761, 'arguments', arguments, true, false, false);
                                                    connectionAccounting = J$.W(162729, 'connectionAccounting', J$.T(162721, false, 23, false), connectionAccounting, false, true);
                                                    connectionAccountingSpy = J$.W(162745, 'connectionAccountingSpy', J$.T(162737, undefined, 24, false), connectionAccountingSpy, false, true);
                                                } catch (J$e) {
                                                    J$.Ex(168537, J$e);
                                                } finally {
                                                    if (J$.Fr(168545))
                                                        continue jalangiLabel26;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(162833, {
                                    key: J$.T(162785, 'connections', 21, false),
                                    value: J$.T(162825, function connections() {
                                        jalangiLabel27:
                                            while (true) {
                                                try {
                                                    J$.Fe(162809, arguments.callee, this, arguments);
                                                    arguments = J$.N(162817, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(162801, J$.R(162793, '_connections', _connections, false, true));
                                                } catch (J$e) {
                                                    J$.Ex(168553, J$e);
                                                } finally {
                                                    if (J$.Fr(168561))
                                                        continue jalangiLabel27;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(162865, J$.R(162857, 'Connection', Connection, false, false));
                        } catch (J$e) {
                            J$.Ex(168569, J$e);
                        } finally {
                            if (J$.Fr(168577))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(162921, 'EventEmitter', EventEmitter, false, true)), Connection, false, true);
            J$.P(167681, J$.I(typeof module === 'undefined' ? module = J$.R(167665, 'module', undefined, true, true) : module = J$.R(167665, 'module', module, true, true)), 'exports', J$.R(167673, 'Connection', Connection, false, true));
        } catch (J$e) {
            J$.Ex(168777, J$e);
        } finally {
            if (J$.Sr(168785))
                continue jalangiLabel41;
            else
                break jalangiLabel41;
        }
    }
// JALANGI DO NOT INSTRUMENT

