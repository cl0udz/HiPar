J$.noInstrEval = false;
jalangiLabel14:
    while (true) {
        try {
            J$.Se(410977, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/utils.js');
            function relayEvents(listener, emitter, events) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(409601, arguments.callee, this, arguments);
                            arguments = J$.N(409609, 'arguments', arguments, true, false, false);
                            listener = J$.N(409617, 'listener', listener, true, false, false);
                            emitter = J$.N(409625, 'emitter', emitter, true, false, false);
                            events = J$.N(409633, 'events', events, true, false, false);
                            J$.M(409593, J$.R(409449, 'events', events, false, false), 'forEach', false)(J$.T(409585, function (eventName) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(409561, arguments.callee, this, arguments);
                                            arguments = J$.N(409569, 'arguments', arguments, true, false, false);
                                            eventName = J$.N(409577, 'eventName', eventName, true, false, false);
                                            return J$.Rt(409553, J$.M(409545, J$.R(409457, 'listener', listener, false, false), 'on', false)(J$.R(409465, 'eventName', eventName, false, false), J$.T(409537, function (event) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(409513, arguments.callee, this, arguments);
                                                            arguments = J$.N(409521, 'arguments', arguments, true, false, false);
                                                            event = J$.N(409529, 'event', event, true, false, false);
                                                            return J$.Rt(409505, J$.M(409497, J$.R(409473, 'emitter', emitter, false, false), 'emit', false)(J$.R(409481, 'eventName', eventName, false, false), J$.R(409489, 'event', event, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(411185, J$e);
                                                        } finally {
                                                            if (J$.Fr(411193))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(411201, J$e);
                                        } finally {
                                            if (J$.Fr(411209))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(411217, J$e);
                        } finally {
                            if (J$.Fr(411225))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function retrieveKerberos() {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(409753, arguments.callee, this, arguments);
                            arguments = J$.N(409761, 'arguments', arguments, true, false, false);
                            J$.N(409769, 'kerberos', kerberos, false, false, false);
                            var kerberos;
                            try {
                                kerberos = J$.W(409665, 'kerberos', J$.F(409657, J$.R(409641, 'requireOptional', requireOptional, false, true), false)(J$.T(409649, 'kerberos', 21, false)), kerberos, false, false);
                            } catch (err) {
                                J$.N(409729, 'err', err, false, false, true);
                                if (J$.C(25544, J$.B(25626, '===', J$.G(409681, J$.R(409673, 'err', err, false, false), 'code'), J$.T(409689, 'MODULE_NOT_FOUND', 21, false)))) {
                                    throw J$.F(409713, J$.I(typeof Error === 'undefined' ? Error = J$.R(409697, 'Error', undefined, true, true) : Error = J$.R(409697, 'Error', Error, true, true)), true)(J$.T(409705, 'The `kerberos` module was not found. Please install it and try again.', 21, false));
                                }
                                throw J$.R(409721, 'err', err, false, false);
                            }
                            return J$.Rt(409745, J$.R(409737, 'kerberos', kerberos, false, false));
                        } catch (J$e) {
                            J$.Ex(411233, J$e);
                        } finally {
                            if (J$.Fr(411241))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function retrieveEJSON() {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(409977, arguments.callee, this, arguments);
                            arguments = J$.N(409985, 'arguments', arguments, true, false, false);
                            J$.N(409993, 'EJSON', EJSON, false, false, false);
                            var EJSON = J$.W(409841, 'EJSON', J$.T(409833, null, 25, false), EJSON, false, false);
                            try {
                                EJSON = J$.W(409873, 'EJSON', J$.F(409865, J$.R(409849, 'requireOptional', requireOptional, false, true), false)(J$.T(409857, 'mongodb-extjson', 21, false)), EJSON, false, false);
                            } catch (error) {
                                J$.N(409881, 'error', error, false, false, true);
                            }
                            if (J$.C(25552, J$.U(25634, '!', J$.R(409889, 'EJSON', EJSON, false, false)))) {
                                EJSON = J$.W(409953, 'EJSON', J$.T(409945, {
                                    parse: J$.R(409897, 'noEJSONError', noEJSONError, false, true),
                                    deserialize: J$.R(409905, 'noEJSONError', noEJSONError, false, true),
                                    serialize: J$.R(409913, 'noEJSONError', noEJSONError, false, true),
                                    stringify: J$.R(409921, 'noEJSONError', noEJSONError, false, true),
                                    setBSONModule: J$.R(409929, 'noEJSONError', noEJSONError, false, true),
                                    BSON: J$.R(409937, 'noEJSONError', noEJSONError, false, true)
                                }, 11, false), EJSON, false, false);
                            }
                            return J$.Rt(409969, J$.R(409961, 'EJSON', EJSON, false, false));
                        } catch (J$e) {
                            J$.Ex(411265, J$e);
                        } finally {
                            if (J$.Fr(411273))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function maxWireVersion(topologyOrServer) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(410193, arguments.callee, this, arguments);
                            arguments = J$.N(410201, 'arguments', arguments, true, false, false);
                            topologyOrServer = J$.N(410209, 'topologyOrServer', topologyOrServer, true, false, false);
                            J$.N(410217, 'lastIsMaster', lastIsMaster, false, false, false);
                            if (J$.C(25560, J$.G(410009, J$.R(410001, 'topologyOrServer', topologyOrServer, false, false), 'ismaster'))) {
                                return J$.Rt(410041, J$.G(410033, J$.G(410025, J$.R(410017, 'topologyOrServer', topologyOrServer, false, false), 'ismaster'), 'maxWireVersion'));
                            }
                            if (J$.C(25576, J$.B(25650, '===', J$.U(25642, 'typeof', J$.G(410057, J$.R(410049, 'topologyOrServer', topologyOrServer, false, false), 'lastIsMaster')), J$.T(410065, 'function', 21, false)))) {
                                var lastIsMaster = J$.W(410089, 'lastIsMaster', J$.M(410081, J$.R(410073, 'topologyOrServer', topologyOrServer, false, false), 'lastIsMaster', false)(), lastIsMaster, false, false);
                                if (J$.C(25568, J$.R(410097, 'lastIsMaster', lastIsMaster, false, false))) {
                                    return J$.Rt(410121, J$.G(410113, J$.R(410105, 'lastIsMaster', lastIsMaster, false, false), 'maxWireVersion'));
                                }
                            }
                            if (J$.C(25584, J$.G(410137, J$.R(410129, 'topologyOrServer', topologyOrServer, false, false), 'description'))) {
                                return J$.Rt(410169, J$.G(410161, J$.G(410153, J$.R(410145, 'topologyOrServer', topologyOrServer, false, false), 'description'), 'maxWireVersion'));
                            }
                            return J$.Rt(410185, J$.T(410177, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(411281, J$e);
                        } finally {
                            if (J$.Fr(411289))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function collationNotSupported(server, cmd) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(410289, arguments.callee, this, arguments);
                            arguments = J$.N(410297, 'arguments', arguments, true, false, false);
                            server = J$.N(410305, 'server', server, true, false, false);
                            cmd = J$.N(410313, 'cmd', cmd, true, false, false);
                            return J$.Rt(410281, J$.C(25600, J$.C(25592, J$.R(410225, 'cmd', cmd, false, false)) ? J$.G(410241, J$.R(410233, 'cmd', cmd, false, false), 'collation') : J$._()) ? J$.B(25658, '<', J$.F(410265, J$.R(410249, 'maxWireVersion', maxWireVersion, false, true), false)(J$.R(410257, 'server', server, false, false)), J$.T(410273, 5, 22, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(411297, J$e);
                        } finally {
                            if (J$.Fr(411305))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isPromiseLike(maybePromise) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(410361, arguments.callee, this, arguments);
                            arguments = J$.N(410369, 'arguments', arguments, true, false, false);
                            maybePromise = J$.N(410377, 'maybePromise', maybePromise, true, false, false);
                            return J$.Rt(410353, J$.C(25608, J$.R(410321, 'maybePromise', maybePromise, false, false)) ? J$.B(25674, '===', J$.U(25666, 'typeof', J$.G(410337, J$.R(410329, 'maybePromise', maybePromise, false, false), 'then')), J$.T(410345, 'function', 21, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(411313, J$e);
                        } finally {
                            if (J$.Fr(411321))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function eachAsync(arr, eachFn, callback) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(410737, arguments.callee, this, arguments);
                            function eachCallback(err) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(410577, arguments.callee, this, arguments);
                                            arguments = J$.N(410585, 'arguments', arguments, true, false, false);
                                            err = J$.N(410593, 'err', err, true, false, false);
                                            if (J$.C(25624, J$.R(410481, 'err', err, false, false))) {
                                                J$.F(410513, J$.R(410489, 'callback', callback, false, false), false)(J$.R(410497, 'err', err, false, false), J$.T(410505, null, 25, false));
                                                return J$.Rt(410521, undefined);
                                            }
                                            if (J$.C(25632, J$.B(25706, '===', completed = J$.W(410537, 'completed', J$.B(25698, '+', J$.U(25690, '+', J$.R(410529, 'completed', completed, false, false)), 1), completed, false, false), J$.R(410545, 'length', length, false, false)))) {
                                                J$.F(410569, J$.R(410553, 'callback', callback, false, false), false)(J$.T(410561, null, 25, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(411329, J$e);
                                        } finally {
                                            if (J$.Fr(411337))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(410745, 'arguments', arguments, true, false, false);
                            arr = J$.N(410753, 'arr', arr, true, false, false);
                            eachFn = J$.N(410761, 'eachFn', eachFn, true, false, false);
                            callback = J$.N(410769, 'callback', callback, true, false, false);
                            J$.N(410777, 'length', length, false, false, false);
                            J$.N(410785, 'completed', completed, false, false, false);
                            eachCallback = J$.N(410801, 'eachCallback', J$.T(410793, eachCallback, 12, false), true, false, false);
                            J$.N(410809, 'idx', idx, false, false, false);
                            if (J$.C(25616, J$.B(25682, '===', J$.G(410393, J$.R(410385, 'arr', arr, false, false), 'length'), J$.T(410401, 0, 22, false)))) {
                                J$.F(410425, J$.R(410409, 'callback', callback, false, false), false)(J$.T(410417, null, 25, false));
                                return J$.Rt(410433, undefined);
                            }
                            var length = J$.W(410457, 'length', J$.G(410449, J$.R(410441, 'arr', arr, false, false), 'length'), length, false, false);
                            var completed = J$.W(410473, 'completed', J$.T(410465, 0, 22, false), completed, false, false);
                            for (var idx = J$.W(410609, 'idx', J$.T(410601, 0, 22, false), idx, false, false); J$.C(25640, J$.B(25714, '<', J$.R(410617, 'idx', idx, false, false), J$.R(410625, 'length', length, false, false))); idx = J$.W(410641, 'idx', J$.B(25730, '+', J$.U(25722, '+', J$.R(410633, 'idx', idx, false, false)), 1), idx, false, false)) {
                                try {
                                    J$.F(410689, J$.R(410649, 'eachFn', eachFn, false, false), false)(J$.G(410673, J$.R(410657, 'arr', arr, false, false), J$.R(410665, 'idx', idx, false, false)), J$.R(410681, 'eachCallback', eachCallback, false, false));
                                } catch (err) {
                                    J$.N(410729, 'err', err, false, false, true);
                                    J$.F(410713, J$.R(410697, 'callback', callback, false, false), false)(J$.R(410705, 'err', err, false, false));
                                    return J$.Rt(410721, undefined);
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(411345, J$e);
                        } finally {
                            if (J$.Fr(411353))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isUnifiedTopology(topology) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(410849, arguments.callee, this, arguments);
                            arguments = J$.N(410857, 'arguments', arguments, true, false, false);
                            topology = J$.N(410865, 'topology', topology, true, false, false);
                            return J$.Rt(410841, J$.B(25738, '!=', J$.G(410825, J$.R(410817, 'topology', topology, false, false), 'description'), J$.T(410833, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(411361, J$e);
                        } finally {
                            if (J$.Fr(411369))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(410985, 'crypto', crypto, false, false, false);
            J$.N(410993, 'requireOptional', requireOptional, false, false, false);
            J$.N(411001, 'uuidV4', uuidV4, false, false, false);
            J$.N(411009, 'calculateDurationInMs', calculateDurationInMs, false, false, false);
            relayEvents = J$.N(411025, 'relayEvents', J$.T(411017, relayEvents, 12, false), true, false, false);
            retrieveKerberos = J$.N(411041, 'retrieveKerberos', J$.T(411033, retrieveKerberos, 12, false), true, false, false);
            J$.N(411049, 'noEJSONError', noEJSONError, false, false, false);
            retrieveEJSON = J$.N(411065, 'retrieveEJSON', J$.T(411057, retrieveEJSON, 12, false), true, false, false);
            maxWireVersion = J$.N(411081, 'maxWireVersion', J$.T(411073, maxWireVersion, 12, false), true, false, false);
            collationNotSupported = J$.N(411097, 'collationNotSupported', J$.T(411089, collationNotSupported, 12, false), true, false, false);
            isPromiseLike = J$.N(411113, 'isPromiseLike', J$.T(411105, isPromiseLike, 12, false), true, false, false);
            eachAsync = J$.N(411129, 'eachAsync', J$.T(411121, eachAsync, 12, false), true, false, false);
            isUnifiedTopology = J$.N(411145, 'isUnifiedTopology', J$.T(411137, isUnifiedTopology, 12, false), true, false, false);
            J$.T(409009, 'use strict', 21, false);
            var crypto = J$.W(409041, 'crypto', J$.F(409033, J$.I(typeof require === 'undefined' ? require = J$.R(409017, 'require', undefined, true, true) : require = J$.R(409017, 'require', require, true, true)), false)(J$.T(409025, 'crypto', 21, false)), crypto, false, true);
            var requireOptional = J$.W(409073, 'requireOptional', J$.F(409065, J$.I(typeof require === 'undefined' ? require = J$.R(409049, 'require', undefined, true, true) : require = J$.R(409049, 'require', require, true, true)), false)(J$.T(409057, 'require_optional', 21, false)), requireOptional, false, true);
            var uuidV4 = J$.W(409289, 'uuidV4', J$.T(409281, function uuidV4() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(409257, arguments.callee, this, arguments);
                            arguments = J$.N(409265, 'arguments', arguments, true, false, false);
                            J$.N(409273, 'result', result, false, false, false);
                            var result = J$.W(409105, 'result', J$.M(409097, J$.R(409081, 'crypto', crypto, false, true), 'randomBytes', false)(J$.T(409089, 16, 22, false)), result, false, false);
                            J$.P(409169, J$.R(409113, 'result', result, false, false), J$.T(409121, 6, 22, false), J$.B(25578, '|', J$.B(25570, '&', J$.G(409145, J$.R(409129, 'result', result, false, false), J$.T(409137, 6, 22, false)), J$.T(409153, 15, 22, false)), J$.T(409161, 64, 22, false)));
                            J$.P(409233, J$.R(409177, 'result', result, false, false), J$.T(409185, 8, 22, false), J$.B(25594, '|', J$.B(25586, '&', J$.G(409209, J$.R(409193, 'result', result, false, false), J$.T(409201, 8, 22, false)), J$.T(409217, 63, 22, false)), J$.T(409225, 128, 22, false)));
                            return J$.Rt(409249, J$.R(409241, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(411153, J$e);
                        } finally {
                            if (J$.Fr(411161))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), uuidV4, false, true);
            var calculateDurationInMs = J$.W(409441, 'calculateDurationInMs', J$.T(409433, function calculateDurationInMs(started) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(409401, arguments.callee, this, arguments);
                            arguments = J$.N(409409, 'arguments', arguments, true, false, false);
                            started = J$.N(409417, 'started', started, true, false, false);
                            J$.N(409425, 'hrtime', hrtime, false, false, false);
                            var hrtime = J$.W(409321, 'hrtime', J$.M(409313, J$.I(typeof process === 'undefined' ? process = J$.R(409297, 'process', undefined, true, true) : process = J$.R(409297, 'process', process, true, true)), 'hrtime', false)(J$.R(409305, 'started', started, false, false)), hrtime, false, false);
                            return J$.Rt(409393, J$.B(25618, '/', J$.B(25610, '+', J$.B(25602, '*', J$.G(409345, J$.R(409329, 'hrtime', hrtime, false, false), J$.T(409337, 0, 22, false)), J$.T(409353, 1000000000, 22, false)), J$.G(409377, J$.R(409361, 'hrtime', hrtime, false, false), J$.T(409369, 1, 22, false))), J$.T(409385, 1000000, 22, false)));
                        } catch (J$e) {
                            J$.Ex(411169, J$e);
                        } finally {
                            if (J$.Fr(411177))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), calculateDurationInMs, false, true);
            var noEJSONError = J$.W(409825, 'noEJSONError', J$.T(409817, function noEJSONError() {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(409801, arguments.callee, this, arguments);
                            arguments = J$.N(409809, 'arguments', arguments, true, false, false);
                            throw J$.F(409793, J$.I(typeof Error === 'undefined' ? Error = J$.R(409777, 'Error', undefined, true, true) : Error = J$.R(409777, 'Error', Error, true, true)), true)(J$.T(409785, 'The `mongodb-extjson` module was not found. Please install it and try again.', 21, false));
                        } catch (J$e) {
                            J$.Ex(411249, J$e);
                        } finally {
                            if (J$.Fr(411257))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), noEJSONError, false, true);
            J$.P(410969, J$.I(typeof module === 'undefined' ? module = J$.R(410873, 'module', undefined, true, true) : module = J$.R(410873, 'module', module, true, true)), 'exports', J$.T(410961, {
                uuidV4: J$.R(410881, 'uuidV4', uuidV4, false, true),
                calculateDurationInMs: J$.R(410889, 'calculateDurationInMs', calculateDurationInMs, false, true),
                relayEvents: J$.R(410897, 'relayEvents', relayEvents, false, true),
                collationNotSupported: J$.R(410905, 'collationNotSupported', collationNotSupported, false, true),
                retrieveEJSON: J$.R(410913, 'retrieveEJSON', retrieveEJSON, false, true),
                retrieveKerberos: J$.R(410921, 'retrieveKerberos', retrieveKerberos, false, true),
                maxWireVersion: J$.R(410929, 'maxWireVersion', maxWireVersion, false, true),
                isPromiseLike: J$.R(410937, 'isPromiseLike', isPromiseLike, false, true),
                eachAsync: J$.R(410945, 'eachAsync', eachAsync, false, true),
                isUnifiedTopology: J$.R(410953, 'isUnifiedTopology', isUnifiedTopology, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(411377, J$e);
        } finally {
            if (J$.Sr(411385))
                continue jalangiLabel14;
            else
                break jalangiLabel14;
        }
    }
// JALANGI DO NOT INSTRUMENT

