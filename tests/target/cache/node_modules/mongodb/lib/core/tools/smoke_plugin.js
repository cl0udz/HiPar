J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(302025, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/tools/smoke_plugin.js');
            J$.N(302033, 'fs', fs, false, false, false);
            J$.T(301057, 'use strict', 21, false);
            var fs = J$.W(301089, 'fs', J$.F(301081, J$.I(typeof require === 'undefined' ? require = J$.R(301065, 'require', undefined, true, true) : require = J$.R(301065, 'require', require, true, true)), false)(J$.T(301073, 'fs', 21, false)), fs, false, true);
            J$.P(302017, J$.I(typeof exports === 'undefined' ? exports = J$.R(301097, 'exports', undefined, true, true) : exports = J$.R(301097, 'exports', exports, true, true)), 'attachToRunner', J$.T(302009, function (runner, outputFile) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(301953, arguments.callee, this, arguments);
                            arguments = J$.N(301961, 'arguments', arguments, true, false, false);
                            runner = J$.N(301969, 'runner', runner, true, false, false);
                            outputFile = J$.N(301977, 'outputFile', outputFile, true, false, false);
                            J$.N(301985, 'smokeOutput', smokeOutput, false, false, false);
                            J$.N(301993, 'runningTests', runningTests, false, false, false);
                            J$.N(302001, 'integraPlugin', integraPlugin, false, false, false);
                            var smokeOutput = J$.W(301121, 'smokeOutput', J$.T(301113, { results: J$.T(301105, [], 10, false) }, 11, false), smokeOutput, false, false);
                            var runningTests = J$.W(301137, 'runningTests', J$.T(301129, {}, 11, false), runningTests, false, false);
                            var integraPlugin = J$.W(301601, 'integraPlugin', J$.T(301593, {
                                beforeTest: J$.T(301265, function beforeTest(test, callback) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(301233, arguments.callee, this, arguments);
                                                arguments = J$.N(301241, 'arguments', arguments, true, false, false);
                                                test = J$.N(301249, 'test', test, true, false, false);
                                                callback = J$.N(301257, 'callback', callback, true, false, false);
                                                J$.P(301169, J$.R(301145, 'test', test, false, false), 'startTime', J$.M(301161, J$.I(typeof Date === 'undefined' ? Date = J$.R(301153, 'Date', undefined, true, true) : Date = J$.R(301153, 'Date', Date, true, true)), 'now', false)());
                                                J$.P(301209, J$.R(301177, 'runningTests', runningTests, false, false), J$.G(301193, J$.R(301185, 'test', test, false, false), 'name'), J$.R(301201, 'test', test, false, false));
                                                J$.F(301225, J$.R(301217, 'callback', callback, false, false), false)();
                                            } catch (J$e) {
                                                J$.Ex(302041, J$e);
                                            } finally {
                                                if (J$.Fr(302049))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                afterTest: J$.T(301457, function afterTest(test, callback) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(301425, arguments.callee, this, arguments);
                                                arguments = J$.N(301433, 'arguments', arguments, true, false, false);
                                                test = J$.N(301441, 'test', test, true, false, false);
                                                callback = J$.N(301449, 'callback', callback, true, false, false);
                                                J$.M(301377, J$.G(301281, J$.R(301273, 'smokeOutput', smokeOutput, false, false), 'results'), 'push', false)(J$.T(301369, {
                                                    status: J$.G(301297, J$.R(301289, 'test', test, false, false), 'status'),
                                                    start: J$.G(301313, J$.R(301305, 'test', test, false, false), 'startTime'),
                                                    end: J$.M(301329, J$.I(typeof Date === 'undefined' ? Date = J$.R(301321, 'Date', undefined, true, true) : Date = J$.R(301321, 'Date', Date, true, true)), 'now', false)(),
                                                    test_file: J$.G(301345, J$.R(301337, 'test', test, false, false), 'name'),
                                                    exit_code: J$.T(301353, 0, 22, false),
                                                    url: J$.T(301361, '', 21, false)
                                                }, 11, false));
                                                J$.B(18490, 'delete', J$.R(301385, 'runningTests', runningTests, false, false), J$.G(301401, J$.R(301393, 'test', test, false, false), 'name'));
                                                J$.F(301417, J$.R(301409, 'callback', callback, false, false), false)();
                                            } catch (J$e) {
                                                J$.Ex(302057, J$e);
                                            } finally {
                                                if (J$.Fr(302065))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                beforeExit: J$.T(301585, function beforeExit(obj, callback) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(301553, arguments.callee, this, arguments);
                                                arguments = J$.N(301561, 'arguments', arguments, true, false, false);
                                                obj = J$.N(301569, 'obj', obj, true, false, false);
                                                callback = J$.N(301577, 'callback', callback, true, false, false);
                                                J$.M(301545, J$.R(301465, 'fs', fs, false, true), 'writeFile', false)(J$.R(301473, 'outputFile', outputFile, false, false), J$.M(301497, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(301481, 'JSON', undefined, true, true) : JSON = J$.R(301481, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(301489, 'smokeOutput', smokeOutput, false, false)), J$.T(301537, function () {
                                                    jalangiLabel2:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(301521, arguments.callee, this, arguments);
                                                                arguments = J$.N(301529, 'arguments', arguments, true, false, false);
                                                                J$.F(301513, J$.R(301505, 'callback', callback, false, false), false)();
                                                            } catch (J$e) {
                                                                J$.Ex(302073, J$e);
                                                            } finally {
                                                                if (J$.Fr(302081))
                                                                    continue jalangiLabel2;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } catch (J$e) {
                                                J$.Ex(302089, J$e);
                                            } finally {
                                                if (J$.Fr(302097))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false), integraPlugin, false, false);
                            J$.M(301905, J$.I(typeof process === 'undefined' ? process = J$.R(301609, 'process', undefined, true, true) : process = J$.R(301609, 'process', process, true, true)), 'on', false)(J$.T(301617, 'uncaughtException', 21, false), J$.T(301897, function (err) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(301865, arguments.callee, this, arguments);
                                            arguments = J$.N(301873, 'arguments', arguments, true, false, false);
                                            err = J$.N(301881, 'err', err, true, false, false);
                                            J$.N(301889, 'testName', testName, false, false, false);
                                            for (var testName in J$.H(301745, J$.R(301625, 'runningTests', runningTests, false, false))) {
                                                J$.N(301753, 'testName', testName, false, true, false);
                                                {
                                                    {
                                                        J$.M(301737, J$.G(301641, J$.R(301633, 'smokeOutput', smokeOutput, false, false), 'results'), 'push', false)(J$.T(301729, {
                                                            status: J$.T(301649, 'fail', 21, false),
                                                            start: J$.G(301681, J$.G(301673, J$.R(301657, 'runningTests', runningTests, false, false), J$.R(301665, 'testName', testName, false, false)), 'startTime'),
                                                            end: J$.M(301697, J$.I(typeof Date === 'undefined' ? Date = J$.R(301689, 'Date', undefined, true, true) : Date = J$.R(301689, 'Date', Date, true, true)), 'now', false)(),
                                                            test_file: J$.R(301705, 'testName', testName, false, false),
                                                            exit_code: J$.T(301713, 0, 22, false),
                                                            url: J$.T(301721, '', 21, false)
                                                        }, 11, false));
                                                    }
                                                }
                                            }
                                            J$.M(301801, J$.R(301761, 'fs', fs, false, true), 'writeFileSync', false)(J$.R(301769, 'outputFile', outputFile, false, false), J$.M(301793, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(301777, 'JSON', undefined, true, true) : JSON = J$.R(301777, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(301785, 'smokeOutput', smokeOutput, false, false)));
                                            J$.M(301833, J$.I(typeof console === 'undefined' ? console = J$.R(301809, 'console', undefined, true, true) : console = J$.R(301809, 'console', console, true, true)), 'error', false)(J$.G(301825, J$.R(301817, 'err', err, false, false), 'stack'));
                                            J$.M(301857, J$.I(typeof process === 'undefined' ? process = J$.R(301841, 'process', undefined, true, true) : process = J$.R(301841, 'process', process, true, true)), 'exit', false)(J$.T(301849, 1, 22, false));
                                        } catch (J$e) {
                                            J$.Ex(302105, J$e);
                                        } finally {
                                            if (J$.Fr(302113))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(301929, J$.R(301913, 'runner', runner, false, false), 'plugin', false)(J$.R(301921, 'integraPlugin', integraPlugin, false, false));
                            return J$.Rt(301945, J$.R(301937, 'integraPlugin', integraPlugin, false, false));
                        } catch (J$e) {
                            J$.Ex(302121, J$e);
                        } finally {
                            if (J$.Fr(302129))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(302137, J$e);
        } finally {
            if (J$.Sr(302145))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

