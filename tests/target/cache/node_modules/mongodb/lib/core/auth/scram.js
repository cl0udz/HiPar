J$.noInstrEval = false;
jalangiLabel37:
    while (true) {
        try {
            J$.Se(122217, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/auth/scram.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(114433, arguments.callee, this, arguments);
                            arguments = J$.N(114441, 'arguments', arguments, true, false, false);
                            obj = J$.N(114449, 'obj', obj, true, false, false);
                            if (J$.C(6544, J$.C(6504, J$.B(6114, '===', J$.U(6106, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(114169, 'Symbol', undefined, true, true) : Symbol = J$.R(114169, 'Symbol', Symbol, true, true))), J$.T(114177, 'function', 21, false))) ? J$.B(6130, '===', J$.U(6122, 'typeof', J$.G(114193, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(114185, 'Symbol', undefined, true, true) : Symbol = J$.R(114185, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(114201, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(114257, '_typeof', J$.T(114249, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(114225, arguments.callee, this, arguments);
                                                arguments = J$.N(114233, 'arguments', arguments, true, false, false);
                                                obj = J$.N(114241, 'obj', obj, true, false, false);
                                                return J$.Rt(114217, J$.U(6138, 'typeof', J$.R(114209, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(122601, J$e);
                                            } finally {
                                                if (J$.Fr(122609))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(114393, '_typeof', J$.T(114385, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(114361, arguments.callee, this, arguments);
                                                arguments = J$.N(114369, 'arguments', arguments, true, false, false);
                                                obj = J$.N(114377, 'obj', obj, true, false, false);
                                                return J$.Rt(114353, J$.C(6536, J$.C(6528, J$.C(6520, J$.C(6512, J$.R(114265, 'obj', obj, false, false)) ? J$.B(6154, '===', J$.U(6146, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(114273, 'Symbol', undefined, true, true) : Symbol = J$.R(114273, 'Symbol', Symbol, true, true))), J$.T(114281, 'function', 21, false)) : J$._()) ? J$.B(6162, '===', J$.G(114297, J$.R(114289, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(114305, 'Symbol', undefined, true, true) : Symbol = J$.R(114305, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(6170, '!==', J$.R(114313, 'obj', obj, false, false), J$.G(114329, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(114321, 'Symbol', undefined, true, true) : Symbol = J$.R(114321, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(114337, 'symbol', 21, false) : J$.U(6178, 'typeof', J$.R(114345, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(122617, J$e);
                                            } finally {
                                                if (J$.Fr(122625))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(114425, J$.F(114417, J$.R(114401, '_typeof', _typeof, false, true), false)(J$.R(114409, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(122633, J$e);
                        } finally {
                            if (J$.Fr(122641))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _classCallCheck(instance, Constructor) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(114497, arguments.callee, this, arguments);
                            arguments = J$.N(114505, 'arguments', arguments, true, false, false);
                            instance = J$.N(114513, 'instance', instance, true, false, false);
                            Constructor = J$.N(114521, 'Constructor', Constructor, true, false, false);
                            if (J$.C(6552, J$.U(6194, '!', J$.B(6186, 'instanceof', J$.R(114457, 'instance', instance, false, false), J$.R(114465, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(114489, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(114473, 'TypeError', undefined, true, true) : TypeError = J$.R(114473, 'TypeError', TypeError, true, true)), true)(J$.T(114481, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(122649, J$e);
                        } finally {
                            if (J$.Fr(122657))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(114769, arguments.callee, this, arguments);
                            arguments = J$.N(114777, 'arguments', arguments, true, false, false);
                            target = J$.N(114785, 'target', target, true, false, false);
                            props = J$.N(114793, 'props', props, true, false, false);
                            J$.N(114801, 'i', i, false, false, false);
                            J$.N(114809, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(114537, 'i', J$.T(114529, 0, 22, false), i, false, false); J$.C(6576, J$.B(6202, '<', J$.R(114545, 'i', i, false, false), J$.G(114561, J$.R(114553, 'props', props, false, false), 'length'))); J$.B(6226, '-', i = J$.W(114577, 'i', J$.B(6218, '+', J$.U(6210, '+', J$.R(114569, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(114609, 'descriptor', J$.G(114601, J$.R(114585, 'props', props, false, false), J$.R(114593, 'i', i, false, false)), descriptor, false, false);
                                J$.P(114649, J$.R(114617, 'descriptor', descriptor, false, false), 'enumerable', J$.C(6560, J$.G(114633, J$.R(114625, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(114641, false, 23, false));
                                J$.P(114673, J$.R(114657, 'descriptor', descriptor, false, false), 'configurable', J$.T(114665, true, 23, false));
                                if (J$.C(6568, J$.B(6234, 'in', J$.T(114681, 'value', 21, false), J$.R(114689, 'descriptor', descriptor, false, false))))
                                    J$.P(114713, J$.R(114697, 'descriptor', descriptor, false, false), 'writable', J$.T(114705, true, 23, false));
                                J$.M(114761, J$.I(typeof Object === 'undefined' ? Object = J$.R(114721, 'Object', undefined, true, true) : Object = J$.R(114721, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(114729, 'target', target, false, false), J$.G(114745, J$.R(114737, 'descriptor', descriptor, false, false), 'key'), J$.R(114753, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(122665, J$e);
                        } finally {
                            if (J$.Fr(122673))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(114921, arguments.callee, this, arguments);
                            arguments = J$.N(114929, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(114937, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(114945, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(114953, 'staticProps', staticProps, true, false, false);
                            if (J$.C(6584, J$.R(114817, 'protoProps', protoProps, false, false)))
                                J$.F(114857, J$.R(114825, '_defineProperties', _defineProperties, false, true), false)(J$.G(114841, J$.R(114833, 'Constructor', Constructor, false, false), 'prototype'), J$.R(114849, 'protoProps', protoProps, false, false));
                            if (J$.C(6592, J$.R(114865, 'staticProps', staticProps, false, false)))
                                J$.F(114897, J$.R(114873, '_defineProperties', _defineProperties, false, true), false)(J$.R(114881, 'Constructor', Constructor, false, false), J$.R(114889, 'staticProps', staticProps, false, false));
                            return J$.Rt(114913, J$.R(114905, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(122681, J$e);
                        } finally {
                            if (J$.Fr(122689))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _possibleConstructorReturn(self, call) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(115065, arguments.callee, this, arguments);
                            arguments = J$.N(115073, 'arguments', arguments, true, false, false);
                            self = J$.N(115081, 'self', self, true, false, false);
                            call = J$.N(115089, 'call', call, true, false, false);
                            if (J$.C(6616, J$.C(6608, J$.R(114961, 'call', call, false, false)) ? J$.C(6600, J$.B(6242, '===', J$.F(114985, J$.R(114969, '_typeof', _typeof, false, true), false)(J$.R(114977, 'call', call, false, false)), J$.T(114993, 'object', 21, false))) ? J$._() : J$.B(6258, '===', J$.U(6250, 'typeof', J$.R(115001, 'call', call, false, false)), J$.T(115009, 'function', 21, false)) : J$._())) {
                                return J$.Rt(115025, J$.R(115017, 'call', call, false, false));
                            }
                            return J$.Rt(115057, J$.F(115049, J$.R(115033, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(115041, 'self', self, false, false)));
                        } catch (J$e) {
                            J$.Ex(122697, J$e);
                        } finally {
                            if (J$.Fr(122705))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _assertThisInitialized(self) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(115153, arguments.callee, this, arguments);
                            arguments = J$.N(115161, 'arguments', arguments, true, false, false);
                            self = J$.N(115169, 'self', self, true, false, false);
                            if (J$.C(6624, J$.B(6266, '===', J$.R(115097, 'self', self, false, false), void J$.T(115105, 0, 22, false)))) {
                                throw J$.F(115129, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(115113, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(115113, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(115121, 'this hasn\'t been initialised - super() hasn\'t been called', 21, false));
                            }
                            return J$.Rt(115145, J$.R(115137, 'self', self, false, false));
                        } catch (J$e) {
                            J$.Ex(122713, J$e);
                        } finally {
                            if (J$.Fr(122721))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _get(target, property, receiver) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(115537, arguments.callee, this, arguments);
                            arguments = J$.N(115545, 'arguments', arguments, true, false, false);
                            target = J$.N(115553, 'target', target, true, false, false);
                            property = J$.N(115561, 'property', property, true, false, false);
                            receiver = J$.N(115569, 'receiver', receiver, true, false, false);
                            if (J$.C(6656, J$.C(6632, J$.B(6282, '!==', J$.U(6274, 'typeof', J$.I(typeof Reflect === 'undefined' ? Reflect = J$.R(115177, 'Reflect', undefined, true, true) : Reflect = J$.R(115177, 'Reflect', Reflect, true, true))), J$.T(115185, 'undefined', 21, false))) ? J$.G(115201, J$.I(typeof Reflect === 'undefined' ? Reflect = J$.R(115193, 'Reflect', undefined, true, true) : Reflect = J$.R(115193, 'Reflect', Reflect, true, true)), 'get') : J$._())) {
                                _get = J$.W(115225, '_get', J$.G(115217, J$.I(typeof Reflect === 'undefined' ? Reflect = J$.R(115209, 'Reflect', undefined, true, true) : Reflect = J$.R(115209, 'Reflect', Reflect, true, true)), 'get'), _get, false, true);
                            } else {
                                _get = J$.W(115473, '_get', J$.T(115465, function _get(target, property, receiver) {
                                    jalangiLabel8:
                                        while (true) {
                                            try {
                                                J$.Fe(115409, arguments.callee, this, arguments);
                                                arguments = J$.N(115417, 'arguments', arguments, true, false, false);
                                                target = J$.N(115425, 'target', target, true, false, false);
                                                property = J$.N(115433, 'property', property, true, false, false);
                                                receiver = J$.N(115441, 'receiver', receiver, true, false, false);
                                                J$.N(115449, 'base', base, false, false, false);
                                                J$.N(115457, 'desc', desc, false, false, false);
                                                var base = J$.W(115265, 'base', J$.F(115257, J$.R(115233, '_superPropBase', _superPropBase, false, true), false)(J$.R(115241, 'target', target, false, false), J$.R(115249, 'property', property, false, false)), base, false, false);
                                                if (J$.C(6640, J$.U(6290, '!', J$.R(115273, 'base', base, false, false))))
                                                    return J$.Rt(115281, undefined);
                                                var desc = J$.W(115321, 'desc', J$.M(115313, J$.I(typeof Object === 'undefined' ? Object = J$.R(115289, 'Object', undefined, true, true) : Object = J$.R(115289, 'Object', Object, true, true)), 'getOwnPropertyDescriptor', false)(J$.R(115297, 'base', base, false, false), J$.R(115305, 'property', property, false, false)), desc, false, false);
                                                if (J$.C(6648, J$.G(115337, J$.R(115329, 'desc', desc, false, false), 'get'))) {
                                                    return J$.Rt(115377, J$.M(115369, J$.G(115353, J$.R(115345, 'desc', desc, false, false), 'get'), 'call', false)(J$.R(115361, 'receiver', receiver, false, false)));
                                                }
                                                return J$.Rt(115401, J$.G(115393, J$.R(115385, 'desc', desc, false, false), 'value'));
                                            } catch (J$e) {
                                                J$.Ex(122729, J$e);
                                            } finally {
                                                if (J$.Fr(122737))
                                                    continue jalangiLabel8;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _get, false, true);
                            }
                            return J$.Rt(115529, J$.F(115521, J$.R(115481, '_get', _get, false, true), false)(J$.R(115489, 'target', target, false, false), J$.R(115497, 'property', property, false, false), J$.C(6664, J$.R(115505, 'receiver', receiver, false, false)) ? J$._() : J$.R(115513, 'target', target, false, false)));
                        } catch (J$e) {
                            J$.Ex(122745, J$e);
                        } finally {
                            if (J$.Fr(122753))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _superPropBase(object, property) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(115689, arguments.callee, this, arguments);
                            arguments = J$.N(115697, 'arguments', arguments, true, false, false);
                            object = J$.N(115705, 'object', object, true, false, false);
                            property = J$.N(115713, 'property', property, true, false, false);
                            while (J$.C(6680, J$.U(6298, '!', J$.M(115617, J$.G(115593, J$.G(115585, J$.I(typeof Object === 'undefined' ? Object = J$.R(115577, 'Object', undefined, true, true) : Object = J$.R(115577, 'Object', Object, true, true)), 'prototype'), 'hasOwnProperty'), 'call', false)(J$.R(115601, 'object', object, false, false), J$.R(115609, 'property', property, false, false))))) {
                                object = J$.W(115649, 'object', J$.F(115641, J$.R(115625, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(115633, 'object', object, false, false)), object, false, false);
                                if (J$.C(6672, J$.B(6306, '===', J$.R(115657, 'object', object, false, false), J$.T(115665, null, 25, false))))
                                    break;
                            }
                            return J$.Rt(115681, J$.R(115673, 'object', object, false, false));
                        } catch (J$e) {
                            J$.Ex(122761, J$e);
                        } finally {
                            if (J$.Fr(122769))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _getPrototypeOf(o) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(115873, arguments.callee, this, arguments);
                            arguments = J$.N(115881, 'arguments', arguments, true, false, false);
                            o = J$.N(115889, 'o', o, true, false, false);
                            _getPrototypeOf = J$.W(115833, '_getPrototypeOf', J$.C(6696, J$.G(115729, J$.I(typeof Object === 'undefined' ? Object = J$.R(115721, 'Object', undefined, true, true) : Object = J$.R(115721, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$.G(115745, J$.I(typeof Object === 'undefined' ? Object = J$.R(115737, 'Object', undefined, true, true) : Object = J$.R(115737, 'Object', Object, true, true)), 'getPrototypeOf') : J$.T(115825, function _getPrototypeOf(o) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(115801, arguments.callee, this, arguments);
                                            arguments = J$.N(115809, 'arguments', arguments, true, false, false);
                                            o = J$.N(115817, 'o', o, true, false, false);
                                            return J$.Rt(115793, J$.C(6688, J$.G(115761, J$.R(115753, 'o', o, false, false), '__proto__')) ? J$._() : J$.M(115785, J$.I(typeof Object === 'undefined' ? Object = J$.R(115769, 'Object', undefined, true, true) : Object = J$.R(115769, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(115777, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(122777, J$e);
                                        } finally {
                                            if (J$.Fr(122785))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _getPrototypeOf, false, true);
                            return J$.Rt(115865, J$.F(115857, J$.R(115841, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(115849, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(122793, J$e);
                        } finally {
                            if (J$.Fr(122801))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _inherits(subClass, superClass) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(116089, arguments.callee, this, arguments);
                            arguments = J$.N(116097, 'arguments', arguments, true, false, false);
                            subClass = J$.N(116105, 'subClass', subClass, true, false, false);
                            superClass = J$.N(116113, 'superClass', superClass, true, false, false);
                            if (J$.C(6712, J$.C(6704, J$.B(6322, '!==', J$.U(6314, 'typeof', J$.R(115897, 'superClass', superClass, false, false)), J$.T(115905, 'function', 21, false))) ? J$.B(6330, '!==', J$.R(115913, 'superClass', superClass, false, false), J$.T(115921, null, 25, false)) : J$._())) {
                                throw J$.F(115945, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(115929, 'TypeError', undefined, true, true) : TypeError = J$.R(115929, 'TypeError', TypeError, true, true)), true)(J$.T(115937, 'Super expression must either be null or a function', 21, false));
                            }
                            J$.P(116041, J$.R(115953, 'subClass', subClass, false, false), 'prototype', J$.M(116033, J$.I(typeof Object === 'undefined' ? Object = J$.R(115961, 'Object', undefined, true, true) : Object = J$.R(115961, 'Object', Object, true, true)), 'create', false)(J$.C(6720, J$.R(115969, 'superClass', superClass, false, false)) ? J$.G(115985, J$.R(115977, 'superClass', superClass, false, false), 'prototype') : J$._(), J$.T(116025, {
                                constructor: J$.T(116017, {
                                    value: J$.R(115993, 'subClass', subClass, false, false),
                                    writable: J$.T(116001, true, 23, false),
                                    configurable: J$.T(116009, true, 23, false)
                                }, 11, false)
                            }, 11, false)));
                            if (J$.C(6728, J$.R(116049, 'superClass', superClass, false, false)))
                                J$.F(116081, J$.R(116057, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(116065, 'subClass', subClass, false, false), J$.R(116073, 'superClass', superClass, false, false));
                        } catch (J$e) {
                            J$.Ex(122809, J$e);
                        } finally {
                            if (J$.Fr(122817))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _setPrototypeOf(o, p) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(116265, arguments.callee, this, arguments);
                            arguments = J$.N(116273, 'arguments', arguments, true, false, false);
                            o = J$.N(116281, 'o', o, true, false, false);
                            p = J$.N(116289, 'p', p, true, false, false);
                            _setPrototypeOf = J$.W(116217, '_setPrototypeOf', J$.C(6736, J$.G(116129, J$.I(typeof Object === 'undefined' ? Object = J$.R(116121, 'Object', undefined, true, true) : Object = J$.R(116121, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$._() : J$.T(116209, function _setPrototypeOf(o, p) {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(116177, arguments.callee, this, arguments);
                                            arguments = J$.N(116185, 'arguments', arguments, true, false, false);
                                            o = J$.N(116193, 'o', o, true, false, false);
                                            p = J$.N(116201, 'p', p, true, false, false);
                                            J$.P(116153, J$.R(116137, 'o', o, false, false), '__proto__', J$.R(116145, 'p', p, false, false));
                                            return J$.Rt(116169, J$.R(116161, 'o', o, false, false));
                                        } catch (J$e) {
                                            J$.Ex(122825, J$e);
                                        } finally {
                                            if (J$.Fr(122833))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _setPrototypeOf, false, true);
                            return J$.Rt(116257, J$.F(116249, J$.R(116225, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(116233, 'o', o, false, false), J$.R(116241, 'p', p, false, false)));
                        } catch (J$e) {
                            J$.Ex(122841, J$e);
                        } finally {
                            if (J$.Fr(122849))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function xor(a, b) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(117529, arguments.callee, this, arguments);
                            arguments = J$.N(117537, 'arguments', arguments, true, false, false);
                            a = J$.N(117545, 'a', a, true, false, false);
                            b = J$.N(117553, 'b', b, true, false, false);
                            J$.N(117561, 'length', length, false, false, false);
                            J$.N(117569, 'res', res, false, false, false);
                            J$.N(117577, 'i', i, false, false, false);
                            if (J$.C(6776, J$.U(6426, '!', J$.M(117193, J$.R(117177, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.R(117185, 'a', a, false, false)))))
                                a = J$.W(117225, 'a', J$.M(117217, J$.R(117201, 'Buffer', Buffer, false, true), 'from', false)(J$.R(117209, 'a', a, false, false)), a, false, false);
                            if (J$.C(6784, J$.U(6434, '!', J$.M(117249, J$.R(117233, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.R(117241, 'b', b, false, false)))))
                                b = J$.W(117281, 'b', J$.M(117273, J$.R(117257, 'Buffer', Buffer, false, true), 'from', false)(J$.R(117265, 'b', b, false, false)), b, false, false);
                            var length = J$.W(117337, 'length', J$.M(117329, J$.I(typeof Math === 'undefined' ? Math = J$.R(117289, 'Math', undefined, true, true) : Math = J$.R(117289, 'Math', Math, true, true)), 'max', false)(J$.G(117305, J$.R(117297, 'a', a, false, false), 'length'), J$.G(117321, J$.R(117313, 'b', b, false, false), 'length')), length, false, false);
                            var res = J$.W(117353, 'res', J$.T(117345, [], 10, false), res, false, false);
                            for (var i = J$.W(117369, 'i', J$.T(117361, 0, 22, false), i, false, false); J$.C(6792, J$.B(6442, '<', J$.R(117377, 'i', i, false, false), J$.R(117385, 'length', length, false, false))); i = J$.W(117409, 'i', J$.B(6450, '+', J$.R(117401, 'i', i, false, false), J$.T(117393, 1, 22, false)), i, false, false)) {
                                J$.M(117473, J$.R(117417, 'res', res, false, false), 'push', false)(J$.B(6458, '^', J$.G(117441, J$.R(117425, 'a', a, false, false), J$.R(117433, 'i', i, false, false)), J$.G(117465, J$.R(117449, 'b', b, false, false), J$.R(117457, 'i', i, false, false))));
                            }
                            return J$.Rt(117521, J$.M(117513, J$.M(117497, J$.R(117481, 'Buffer', Buffer, false, true), 'from', false)(J$.R(117489, 'res', res, false, false)), 'toString', false)(J$.T(117505, 'base64', 21, false)));
                        } catch (J$e) {
                            J$.Ex(122889, J$e);
                        } finally {
                            if (J$.Fr(122897))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function H(method, text) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(117641, arguments.callee, this, arguments);
                            arguments = J$.N(117649, 'arguments', arguments, true, false, false);
                            method = J$.N(117657, 'method', method, true, false, false);
                            text = J$.N(117665, 'text', text, true, false, false);
                            return J$.Rt(117633, J$.M(117625, J$.M(117617, J$.M(117601, J$.R(117585, 'crypto', crypto, false, true), 'createHash', false)(J$.R(117593, 'method', method, false, false)), 'update', false)(J$.R(117609, 'text', text, false, false)), 'digest', false)());
                        } catch (J$e) {
                            J$.Ex(122905, J$e);
                        } finally {
                            if (J$.Fr(122913))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function HMAC(method, key, text) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(117737, arguments.callee, this, arguments);
                            arguments = J$.N(117745, 'arguments', arguments, true, false, false);
                            method = J$.N(117753, 'method', method, true, false, false);
                            key = J$.N(117761, 'key', key, true, false, false);
                            text = J$.N(117769, 'text', text, true, false, false);
                            return J$.Rt(117729, J$.M(117721, J$.M(117713, J$.M(117697, J$.R(117673, 'crypto', crypto, false, true), 'createHmac', false)(J$.R(117681, 'method', method, false, false), J$.R(117689, 'key', key, false, false)), 'update', false)(J$.R(117705, 'text', text, false, false)), 'digest', false)());
                        } catch (J$e) {
                            J$.Ex(122921, J$e);
                        } finally {
                            if (J$.Fr(122929))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function HI(data, salt, iterations, cryptoMethod) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(118225, arguments.callee, this, arguments);
                            arguments = J$.N(118233, 'arguments', arguments, true, false, false);
                            data = J$.N(118241, 'data', data, true, false, false);
                            salt = J$.N(118249, 'salt', salt, true, false, false);
                            iterations = J$.N(118257, 'iterations', iterations, true, false, false);
                            cryptoMethod = J$.N(118265, 'cryptoMethod', cryptoMethod, true, false, false);
                            J$.N(118273, 'key', key, false, false, false);
                            J$.N(118281, 'saltedData', saltedData, false, false, false);
                            var key = J$.W(117969, 'key', J$.M(117961, J$.T(117945, [
                                J$.R(117905, 'data', data, false, false),
                                J$.M(117929, J$.R(117913, 'salt', salt, false, false), 'toString', false)(J$.T(117921, 'base64', 21, false)),
                                J$.R(117937, 'iterations', iterations, false, false)
                            ], 10, false), 'join', false)(J$.T(117953, '_', 21, false)), key, false, false);
                            if (J$.C(6800, J$.B(6466, '!==', J$.G(117993, J$.R(117977, '_hiCache', _hiCache, false, true), J$.R(117985, 'key', key, false, false)), J$.T(118001, undefined, 24, false)))) {
                                return J$.Rt(118033, J$.G(118025, J$.R(118009, '_hiCache', _hiCache, false, true), J$.R(118017, 'key', key, false, false)));
                            }
                            var saltedData = J$.W(118113, 'saltedData', J$.M(118105, J$.R(118041, 'crypto', crypto, false, true), 'pbkdf2Sync', false)(J$.R(118049, 'data', data, false, false), J$.R(118057, 'salt', salt, false, false), J$.R(118065, 'iterations', iterations, false, false), J$.G(118089, J$.R(118073, 'hiLengthMap', hiLengthMap, false, true), J$.R(118081, 'cryptoMethod', cryptoMethod, false, false)), J$.R(118097, 'cryptoMethod', cryptoMethod, false, false)), saltedData, false, false);
                            if (J$.C(6808, J$.B(6474, '>=', J$.R(118121, '_hiCacheCount', _hiCacheCount, false, true), J$.T(118129, 200, 22, false)))) {
                                J$.F(118145, J$.R(118137, '_hiCachePurge', _hiCachePurge, false, true), false)();
                            }
                            J$.P(118177, J$.R(118153, '_hiCache', _hiCache, false, true), J$.R(118161, 'key', key, false, false), J$.R(118169, 'saltedData', saltedData, false, false));
                            _hiCacheCount = J$.W(118201, '_hiCacheCount', J$.B(6482, '+', J$.R(118193, '_hiCacheCount', _hiCacheCount, false, true), J$.T(118185, 1, 22, false)), _hiCacheCount, false, true);
                            return J$.Rt(118217, J$.R(118209, 'saltedData', saltedData, false, false));
                        } catch (J$e) {
                            J$.Ex(122953, J$e);
                        } finally {
                            if (J$.Fr(122961))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(122233, '_typeof', J$.T(122225, _typeof, 12, false), true, false, false);
            _classCallCheck = J$.N(122249, '_classCallCheck', J$.T(122241, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(122265, '_defineProperties', J$.T(122257, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(122281, '_createClass', J$.T(122273, _createClass, 12, false), true, false, false);
            _possibleConstructorReturn = J$.N(122297, '_possibleConstructorReturn', J$.T(122289, _possibleConstructorReturn, 12, false), true, false, false);
            _assertThisInitialized = J$.N(122313, '_assertThisInitialized', J$.T(122305, _assertThisInitialized, 12, false), true, false, false);
            _get = J$.N(122329, '_get', J$.T(122321, _get, 12, false), true, false, false);
            _superPropBase = J$.N(122345, '_superPropBase', J$.T(122337, _superPropBase, 12, false), true, false, false);
            _getPrototypeOf = J$.N(122361, '_getPrototypeOf', J$.T(122353, _getPrototypeOf, 12, false), true, false, false);
            _inherits = J$.N(122377, '_inherits', J$.T(122369, _inherits, 12, false), true, false, false);
            _setPrototypeOf = J$.N(122393, '_setPrototypeOf', J$.T(122385, _setPrototypeOf, 12, false), true, false, false);
            J$.N(122401, 'crypto', crypto, false, false, false);
            J$.N(122409, 'Buffer', Buffer, false, false, false);
            J$.N(122417, 'retrieveBSON', retrieveBSON, false, false, false);
            J$.N(122425, 'MongoError', MongoError, false, false, false);
            J$.N(122433, 'AuthProvider', AuthProvider, false, false, false);
            J$.N(122441, 'BSON', BSON, false, false, false);
            J$.N(122449, 'Binary', Binary, false, false, false);
            J$.N(122457, 'saslprep', saslprep, false, false, false);
            J$.N(122465, 'parsePayload', parsePayload, false, false, false);
            J$.N(122473, 'passwordDigest', passwordDigest, false, false, false);
            xor = J$.N(122489, 'xor', J$.T(122481, xor, 12, false), true, false, false);
            H = J$.N(122505, 'H', J$.T(122497, H, 12, false), true, false, false);
            HMAC = J$.N(122521, 'HMAC', J$.T(122513, HMAC, 12, false), true, false, false);
            J$.N(122529, '_hiCache', _hiCache, false, false, false);
            J$.N(122537, '_hiCacheCount', _hiCacheCount, false, false, false);
            J$.N(122545, '_hiCachePurge', _hiCachePurge, false, false, false);
            J$.N(122553, 'hiLengthMap', hiLengthMap, false, false, false);
            HI = J$.N(122569, 'HI', J$.T(122561, HI, 12, false), true, false, false);
            J$.N(122577, 'ScramSHA', ScramSHA, false, false, false);
            J$.N(122585, 'ScramSHA1', ScramSHA1, false, false, false);
            J$.N(122593, 'ScramSHA256', ScramSHA256, false, false, false);
            J$.T(114161, 'use strict', 21, false);
            var crypto = J$.W(116321, 'crypto', J$.F(116313, J$.I(typeof require === 'undefined' ? require = J$.R(116297, 'require', undefined, true, true) : require = J$.R(116297, 'require', require, true, true)), false)(J$.T(116305, 'crypto', 21, false)), crypto, false, true);
            var Buffer = J$.W(116361, 'Buffer', J$.G(116353, J$.F(116345, J$.I(typeof require === 'undefined' ? require = J$.R(116329, 'require', undefined, true, true) : require = J$.R(116329, 'require', require, true, true)), false)(J$.T(116337, 'safe-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var retrieveBSON = J$.W(116401, 'retrieveBSON', J$.G(116393, J$.F(116385, J$.I(typeof require === 'undefined' ? require = J$.R(116369, 'require', undefined, true, true) : require = J$.R(116369, 'require', require, true, true)), false)(J$.T(116377, '../connection/utils', 21, false)), 'retrieveBSON'), retrieveBSON, false, true);
            var MongoError = J$.W(116441, 'MongoError', J$.G(116433, J$.F(116425, J$.I(typeof require === 'undefined' ? require = J$.R(116409, 'require', undefined, true, true) : require = J$.R(116409, 'require', require, true, true)), false)(J$.T(116417, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var AuthProvider = J$.W(116481, 'AuthProvider', J$.G(116473, J$.F(116465, J$.I(typeof require === 'undefined' ? require = J$.R(116449, 'require', undefined, true, true) : require = J$.R(116449, 'require', require, true, true)), false)(J$.T(116457, './auth_provider', 21, false)), 'AuthProvider'), AuthProvider, false, true);
            var BSON = J$.W(116505, 'BSON', J$.F(116497, J$.R(116489, 'retrieveBSON', retrieveBSON, false, true), false)(), BSON, false, true);
            var Binary = J$.W(116529, 'Binary', J$.G(116521, J$.R(116513, 'BSON', BSON, false, true), 'Binary'), Binary, false, true);
            var saslprep;
            try {
                saslprep = J$.W(116561, 'saslprep', J$.F(116553, J$.I(typeof require === 'undefined' ? require = J$.R(116537, 'require', undefined, true, true) : require = J$.R(116537, 'require', require, true, true)), false)(J$.T(116545, 'saslprep', 21, false)), saslprep, false, true);
            } catch (e) {
                J$.N(116569, 'e', e, false, false, true);
            }
            var parsePayload = J$.W(116873, 'parsePayload', J$.T(116865, function parsePayload(payload) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(116809, arguments.callee, this, arguments);
                            arguments = J$.N(116817, 'arguments', arguments, true, false, false);
                            payload = J$.N(116825, 'payload', payload, true, false, false);
                            J$.N(116833, 'dict', dict, false, false, false);
                            J$.N(116841, 'parts', parts, false, false, false);
                            J$.N(116849, 'i', i, false, false, false);
                            J$.N(116857, 'valueParts', valueParts, false, false, false);
                            var dict = J$.W(116585, 'dict', J$.T(116577, {}, 11, false), dict, false, false);
                            var parts = J$.W(116617, 'parts', J$.M(116609, J$.R(116593, 'payload', payload, false, false), 'split', false)(J$.T(116601, ',', 21, false)), parts, false, false);
                            for (var i = J$.W(116633, 'i', J$.T(116625, 0, 22, false), i, false, false); J$.C(6744, J$.B(6338, '<', J$.R(116641, 'i', i, false, false), J$.G(116657, J$.R(116649, 'parts', parts, false, false), 'length'))); J$.B(6362, '-', i = J$.W(116673, 'i', J$.B(6354, '+', J$.U(6346, '+', J$.R(116665, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var valueParts = J$.W(116721, 'valueParts', J$.M(116713, J$.G(116697, J$.R(116681, 'parts', parts, false, false), J$.R(116689, 'i', i, false, false)), 'split', false)(J$.T(116705, '=', 21, false)), valueParts, false, false);
                                J$.P(116785, J$.R(116729, 'dict', dict, false, false), J$.G(116753, J$.R(116737, 'valueParts', valueParts, false, false), J$.T(116745, 0, 22, false)), J$.G(116777, J$.R(116761, 'valueParts', valueParts, false, false), J$.T(116769, 1, 22, false)));
                            }
                            return J$.Rt(116801, J$.R(116793, 'dict', dict, false, false));
                        } catch (J$e) {
                            J$.Ex(122857, J$e);
                        } finally {
                            if (J$.Fr(122865))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), parsePayload, false, true);
            var passwordDigest = J$.W(117169, 'passwordDigest', J$.T(117161, function passwordDigest(username, password) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(117121, arguments.callee, this, arguments);
                            arguments = J$.N(117129, 'arguments', arguments, true, false, false);
                            username = J$.N(117137, 'username', username, true, false, false);
                            password = J$.N(117145, 'password', password, true, false, false);
                            J$.N(117153, 'md5', md5, false, false, false);
                            if (J$.C(6752, J$.B(6378, '!==', J$.U(6370, 'typeof', J$.R(116881, 'username', username, false, false)), J$.T(116889, 'string', 21, false))))
                                throw J$.F(116913, J$.R(116897, 'MongoError', MongoError, false, true), true)(J$.T(116905, 'username must be a string', 21, false));
                            if (J$.C(6760, J$.B(6394, '!==', J$.U(6386, 'typeof', J$.R(116921, 'password', password, false, false)), J$.T(116929, 'string', 21, false))))
                                throw J$.F(116953, J$.R(116937, 'MongoError', MongoError, false, true), true)(J$.T(116945, 'password must be a string', 21, false));
                            if (J$.C(6768, J$.B(6402, '===', J$.G(116969, J$.R(116961, 'password', password, false, false), 'length'), J$.T(116977, 0, 22, false))))
                                throw J$.F(117001, J$.R(116985, 'MongoError', MongoError, false, true), true)(J$.T(116993, 'password cannot be empty', 21, false));
                            var md5 = J$.W(117033, 'md5', J$.M(117025, J$.R(117009, 'crypto', crypto, false, true), 'createHash', false)(J$.T(117017, 'md5', 21, false)), md5, false, false);
                            J$.M(117081, J$.R(117041, 'md5', md5, false, false), 'update', false)(J$.B(6418, '+', J$.B(6410, '+', J$.R(117049, 'username', username, false, false), J$.T(117057, ':mongo:', 21, false)), J$.R(117065, 'password', password, false, false)), J$.T(117073, 'utf8', 21, false));
                            return J$.Rt(117113, J$.M(117105, J$.R(117089, 'md5', md5, false, false), 'digest', false)(J$.T(117097, 'hex', 21, false)));
                        } catch (J$e) {
                            J$.Ex(122873, J$e);
                        } finally {
                            if (J$.Fr(122881))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), passwordDigest, false, true);
            var _hiCache = J$.W(117785, '_hiCache', J$.T(117777, {}, 11, false), _hiCache, false, true);
            var _hiCacheCount = J$.W(117801, '_hiCacheCount', J$.T(117793, 0, 22, false), _hiCacheCount, false, true);
            var _hiCachePurge = J$.W(117865, '_hiCachePurge', J$.T(117857, function _hiCachePurge() {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(117841, arguments.callee, this, arguments);
                            arguments = J$.N(117849, 'arguments', arguments, true, false, false);
                            _hiCache = J$.W(117817, '_hiCache', J$.T(117809, {}, 11, false), _hiCache, false, true);
                            _hiCacheCount = J$.W(117833, '_hiCacheCount', J$.T(117825, 0, 22, false), _hiCacheCount, false, true);
                        } catch (J$e) {
                            J$.Ex(122937, J$e);
                        } finally {
                            if (J$.Fr(122945))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), _hiCachePurge, false, true);
            var hiLengthMap = J$.W(117897, 'hiLengthMap', J$.T(117889, {
                sha256: J$.T(117873, 32, 22, false),
                sha1: J$.T(117881, 20, 22, false)
            }, 11, false), hiLengthMap, false, true);
            var ScramSHA = J$.W(121641, 'ScramSHA', J$.F(121633, J$.T(121617, function (_AuthProvider) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(121577, arguments.callee, this, arguments);
                            function ScramSHA(bson, cryptoMethod) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(118481, arguments.callee, this, arguments);
                                            arguments = J$.N(118489, 'arguments', arguments, true, false, false);
                                            bson = J$.N(118497, 'bson', bson, true, false, false);
                                            cryptoMethod = J$.N(118505, 'cryptoMethod', cryptoMethod, true, false, false);
                                            J$.N(118513, '_this', _this, false, false, false);
                                            var _this;
                                            J$.F(118345, J$.R(118321, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(118329, 'this', this, false, false), J$.R(118337, 'ScramSHA', ScramSHA, false, false));
                                            _this = J$.W(118425, '_this', J$.F(118417, J$.R(118353, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(118361, 'this', this, false, false), J$.M(118409, J$.F(118385, J$.R(118369, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(118377, 'ScramSHA', ScramSHA, false, false)), 'call', false)(J$.R(118393, 'this', this, false, false), J$.R(118401, 'bson', bson, false, false))), _this, false, false);
                                            J$.P(118457, J$.R(118433, '_this', _this, false, false), 'cryptoMethod', J$.C(6816, J$.R(118441, 'cryptoMethod', cryptoMethod, false, false)) ? J$._() : J$.T(118449, 'sha1', 21, false));
                                            return J$.Rt(118473, J$.R(118465, '_this', _this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(122969, J$e);
                                        } finally {
                                            if (J$.Fr(122977))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(121585, 'arguments', arguments, true, false, false);
                            _AuthProvider = J$.N(121593, '_AuthProvider', _AuthProvider, true, false, false);
                            ScramSHA = J$.N(121609, 'ScramSHA', J$.T(121601, ScramSHA, 12, false), true, false, false);
                            J$.F(118313, J$.R(118289, '_inherits', _inherits, false, true), false)(J$.R(118297, 'ScramSHA', ScramSHA, false, false), J$.R(118305, '_AuthProvider', _AuthProvider, false, false));
                            J$.F(121553, J$.R(118521, '_createClass', _createClass, false, true), false)(J$.R(118529, 'ScramSHA', ScramSHA, false, false), J$.T(121393, [
                                J$.T(120777, {
                                    key: J$.T(118537, '_executeScram', 21, false),
                                    value: J$.T(120769, function _executeScram(sendAuthCommand, connection, credentials, nonce, callback) {
                                        jalangiLabel26:
                                            while (true) {
                                                try {
                                                    J$.Fe(120649, arguments.callee, this, arguments);
                                                    arguments = J$.N(120657, 'arguments', arguments, true, false, false);
                                                    sendAuthCommand = J$.N(120665, 'sendAuthCommand', sendAuthCommand, true, false, false);
                                                    connection = J$.N(120673, 'connection', connection, true, false, false);
                                                    credentials = J$.N(120681, 'credentials', credentials, true, false, false);
                                                    nonce = J$.N(120689, 'nonce', nonce, true, false, false);
                                                    callback = J$.N(120697, 'callback', callback, true, false, false);
                                                    J$.N(120705, 'username', username, false, false, false);
                                                    J$.N(120713, 'password', password, false, false, false);
                                                    J$.N(120721, 'db', db, false, false, false);
                                                    J$.N(120729, 'cryptoMethod', cryptoMethod, false, false, false);
                                                    J$.N(120737, 'mechanism', mechanism, false, false, false);
                                                    J$.N(120745, 'processedPassword', processedPassword, false, false, false);
                                                    J$.N(120753, 'firstBare', firstBare, false, false, false);
                                                    J$.N(120761, 'saslStartCmd', saslStartCmd, false, false, false);
                                                    var username = J$.W(118561, 'username', J$.G(118553, J$.R(118545, 'credentials', credentials, false, false), 'username'), username, false, false);
                                                    var password = J$.W(118585, 'password', J$.G(118577, J$.R(118569, 'credentials', credentials, false, false), 'password'), password, false, false);
                                                    var db = J$.W(118609, 'db', J$.G(118601, J$.R(118593, 'credentials', credentials, false, false), 'source'), db, false, false);
                                                    var cryptoMethod = J$.W(118633, 'cryptoMethod', J$.G(118625, J$.R(118617, 'this', this, false, false), 'cryptoMethod'), cryptoMethod, false, false);
                                                    var mechanism = J$.W(118649, 'mechanism', J$.T(118641, 'SCRAM-SHA-1', 21, false), mechanism, false, false);
                                                    var processedPassword;
                                                    if (J$.C(6832, J$.B(6490, '===', J$.R(118657, 'cryptoMethod', cryptoMethod, false, false), J$.T(118665, 'sha256', 21, false)))) {
                                                        mechanism = J$.W(118681, 'mechanism', J$.T(118673, 'SCRAM-SHA-256', 21, false), mechanism, false, false);
                                                        processedPassword = J$.W(118729, 'processedPassword', J$.C(6824, J$.R(118689, 'saslprep', saslprep, false, true)) ? J$.F(118713, J$.R(118697, 'saslprep', saslprep, false, true), false)(J$.R(118705, 'password', password, false, false)) : J$.R(118721, 'password', password, false, false), processedPassword, false, false);
                                                    } else {
                                                        try {
                                                            processedPassword = J$.W(118769, 'processedPassword', J$.F(118761, J$.R(118737, 'passwordDigest', passwordDigest, false, true), false)(J$.R(118745, 'username', username, false, false), J$.R(118753, 'password', password, false, false)), processedPassword, false, false);
                                                        } catch (e) {
                                                            J$.N(118809, 'e', e, false, false, true);
                                                            return J$.Rt(118801, J$.F(118793, J$.R(118777, 'callback', callback, false, false), false)(J$.R(118785, 'e', e, false, false)));
                                                        }
                                                    }
                                                    username = J$.W(118873, 'username', J$.M(118865, J$.M(118841, J$.R(118817, 'username', username, false, false), 'replace', false)(J$.T(118825, '=', 21, false), J$.T(118833, '=3D', 21, false)), 'replace', false)(J$.T(118849, ',', 21, false), J$.T(118857, '=2C', 21, false)), username, false, false);
                                                    var firstBare = J$.W(119033, 'firstBare', J$.M(119025, J$.R(118881, 'Buffer', Buffer, false, true), 'concat', false)(J$.T(119017, [
                                                        J$.M(118913, J$.R(118889, 'Buffer', Buffer, false, true), 'from', false)(J$.T(118897, 'n=', 21, false), J$.T(118905, 'utf8', 21, false)),
                                                        J$.M(118945, J$.R(118921, 'Buffer', Buffer, false, true), 'from', false)(J$.R(118929, 'username', username, false, false), J$.T(118937, 'utf8', 21, false)),
                                                        J$.M(118977, J$.R(118953, 'Buffer', Buffer, false, true), 'from', false)(J$.T(118961, ',r=', 21, false), J$.T(118969, 'utf8', 21, false)),
                                                        J$.M(119009, J$.R(118985, 'Buffer', Buffer, false, true), 'from', false)(J$.R(118993, 'nonce', nonce, false, false), J$.T(119001, 'utf8', 21, false))
                                                    ], 10, false)), firstBare, false, false);
                                                    var saslStartCmd = J$.W(119153, 'saslStartCmd', J$.T(119145, {
                                                        saslStart: J$.T(119041, 1, 22, false),
                                                        mechanism: J$.R(119049, 'mechanism', mechanism, false, false),
                                                        payload: J$.F(119129, J$.R(119057, 'Binary', Binary, false, true), true)(J$.M(119121, J$.R(119065, 'Buffer', Buffer, false, true), 'concat', false)(J$.T(119113, [
                                                            J$.M(119097, J$.R(119073, 'Buffer', Buffer, false, true), 'from', false)(J$.T(119081, 'n,,', 21, false), J$.T(119089, 'utf8', 21, false)),
                                                            J$.R(119105, 'firstBare', firstBare, false, false)
                                                        ], 10, false))),
                                                        autoAuthorize: J$.T(119137, 1, 22, false)
                                                    }, 11, false), saslStartCmd, false, false);
                                                    J$.F(120641, J$.R(119161, 'sendAuthCommand', sendAuthCommand, false, false), false)(J$.R(119169, 'connection', connection, false, false), J$.M(119201, J$.T(119177, '', 21, false), 'concat', false)(J$.R(119185, 'db', db, false, false), J$.T(119193, '.$cmd', 21, false)), J$.R(119209, 'saslStartCmd', saslStartCmd, false, false), J$.T(120633, function (err, r) {
                                                        jalangiLabel25:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(120473, arguments.callee, this, arguments);
                                                                    arguments = J$.N(120481, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(120489, 'err', err, true, false, false);
                                                                    r = J$.N(120497, 'r', r, true, false, false);
                                                                    J$.N(120505, 'tmpError', tmpError, false, false, false);
                                                                    J$.N(120513, 'payload', payload, false, false, false);
                                                                    J$.N(120521, 'dict', dict, false, false, false);
                                                                    J$.N(120529, 'iterations', iterations, false, false, false);
                                                                    J$.N(120537, 'salt', salt, false, false, false);
                                                                    J$.N(120545, 'rnonce', rnonce, false, false, false);
                                                                    J$.N(120553, 'withoutProof', withoutProof, false, false, false);
                                                                    J$.N(120561, 'saltedPassword', saltedPassword, false, false, false);
                                                                    J$.N(120569, 'error', error, false, false, false);
                                                                    J$.N(120577, 'clientKey', clientKey, false, false, false);
                                                                    J$.N(120585, 'storedKey', storedKey, false, false, false);
                                                                    J$.N(120593, 'authMessage', authMessage, false, false, false);
                                                                    J$.N(120601, 'clientSignature', clientSignature, false, false, false);
                                                                    J$.N(120609, 'clientProof', clientProof, false, false, false);
                                                                    J$.N(120617, 'clientFinal', clientFinal, false, false, false);
                                                                    J$.N(120625, 'saslContinueCmd', saslContinueCmd, false, false, false);
                                                                    var tmpError = J$.W(119249, 'tmpError', J$.M(119241, J$.R(119217, 'ScramSHA', ScramSHA, false, false), '_getError', false)(J$.R(119225, 'err', err, false, false), J$.R(119233, 'r', r, false, false)), tmpError, false, false);
                                                                    if (J$.C(6840, J$.R(119257, 'tmpError', tmpError, false, false))) {
                                                                        return J$.Rt(119297, J$.F(119289, J$.R(119265, 'callback', callback, false, false), false)(J$.R(119273, 'tmpError', tmpError, false, false), J$.T(119281, null, 25, false)));
                                                                    }
                                                                    var payload = J$.W(119385, 'payload', J$.C(6848, J$.M(119329, J$.R(119305, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(119321, J$.R(119313, 'r', r, false, false), 'payload'))) ? J$.F(119361, J$.R(119337, 'Binary', Binary, false, true), true)(J$.G(119353, J$.R(119345, 'r', r, false, false), 'payload')) : J$.G(119377, J$.R(119369, 'r', r, false, false), 'payload'), payload, false, false);
                                                                    var dict = J$.W(119425, 'dict', J$.F(119417, J$.R(119393, 'parsePayload', parsePayload, false, true), false)(J$.M(119409, J$.R(119401, 'payload', payload, false, false), 'value', false)()), dict, false, false);
                                                                    var iterations = J$.W(119473, 'iterations', J$.F(119465, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(119433, 'parseInt', undefined, true, true) : parseInt = J$.R(119433, 'parseInt', parseInt, true, true)), false)(J$.G(119449, J$.R(119441, 'dict', dict, false, false), 'i'), J$.T(119457, 10, 22, false)), iterations, false, false);
                                                                    var salt = J$.W(119497, 'salt', J$.G(119489, J$.R(119481, 'dict', dict, false, false), 's'), salt, false, false);
                                                                    var rnonce = J$.W(119521, 'rnonce', J$.G(119513, J$.R(119505, 'dict', dict, false, false), 'r'), rnonce, false, false);
                                                                    var withoutProof = J$.W(119553, 'withoutProof', J$.M(119545, J$.T(119529, 'c=biws,r=', 21, false), 'concat', false)(J$.R(119537, 'rnonce', rnonce, false, false)), withoutProof, false, false);
                                                                    var saltedPassword = J$.W(119633, 'saltedPassword', J$.F(119625, J$.R(119561, 'HI', HI, false, true), false)(J$.R(119569, 'processedPassword', processedPassword, false, false), J$.M(119601, J$.R(119577, 'Buffer', Buffer, false, true), 'from', false)(J$.R(119585, 'salt', salt, false, false), J$.T(119593, 'base64', 21, false)), J$.R(119609, 'iterations', iterations, false, false), J$.R(119617, 'cryptoMethod', cryptoMethod, false, false)), saltedPassword, false, false);
                                                                    if (J$.C(6864, J$.C(6856, J$.R(119641, 'iterations', iterations, false, false)) ? J$.B(6498, '<', J$.R(119649, 'iterations', iterations, false, false), J$.T(119657, 4096, 22, false)) : J$._())) {
                                                                        var error = J$.W(119705, 'error', J$.F(119697, J$.R(119665, 'MongoError', MongoError, false, true), true)(J$.M(119689, J$.T(119673, 'Server returned an invalid iteration count ', 21, false), 'concat', false)(J$.R(119681, 'iterations', iterations, false, false))), error, false, false);
                                                                        return J$.Rt(119745, J$.F(119737, J$.R(119713, 'callback', callback, false, false), false)(J$.R(119721, 'error', error, false, false), J$.T(119729, false, 23, false)));
                                                                    }
                                                                    var clientKey = J$.W(119793, 'clientKey', J$.F(119785, J$.R(119753, 'HMAC', HMAC, false, true), false)(J$.R(119761, 'cryptoMethod', cryptoMethod, false, false), J$.R(119769, 'saltedPassword', saltedPassword, false, false), J$.T(119777, 'Client Key', 21, false)), clientKey, false, false);
                                                                    var storedKey = J$.W(119833, 'storedKey', J$.F(119825, J$.R(119801, 'H', H, false, true), false)(J$.R(119809, 'cryptoMethod', cryptoMethod, false, false), J$.R(119817, 'clientKey', clientKey, false, false)), storedKey, false, false);
                                                                    var authMessage = J$.W(119913, 'authMessage', J$.M(119905, J$.T(119889, [
                                                                        J$.R(119841, 'firstBare', firstBare, false, false),
                                                                        J$.M(119873, J$.M(119857, J$.R(119849, 'payload', payload, false, false), 'value', false)(), 'toString', false)(J$.T(119865, 'base64', 21, false)),
                                                                        J$.R(119881, 'withoutProof', withoutProof, false, false)
                                                                    ], 10, false), 'join', false)(J$.T(119897, ',', 21, false)), authMessage, false, false);
                                                                    var clientSignature = J$.W(119961, 'clientSignature', J$.F(119953, J$.R(119921, 'HMAC', HMAC, false, true), false)(J$.R(119929, 'cryptoMethod', cryptoMethod, false, false), J$.R(119937, 'storedKey', storedKey, false, false), J$.R(119945, 'authMessage', authMessage, false, false)), clientSignature, false, false);
                                                                    var clientProof = J$.W(120017, 'clientProof', J$.M(120009, J$.T(119969, 'p=', 21, false), 'concat', false)(J$.F(120001, J$.R(119977, 'xor', xor, false, true), false)(J$.R(119985, 'clientKey', clientKey, false, false), J$.R(119993, 'clientSignature', clientSignature, false, false))), clientProof, false, false);
                                                                    var clientFinal = J$.W(120065, 'clientFinal', J$.M(120057, J$.T(120041, [
                                                                        J$.R(120025, 'withoutProof', withoutProof, false, false),
                                                                        J$.R(120033, 'clientProof', clientProof, false, false)
                                                                    ], 10, false), 'join', false)(J$.T(120049, ',', 21, false)), clientFinal, false, false);
                                                                    var saslContinueCmd = J$.W(120145, 'saslContinueCmd', J$.T(120137, {
                                                                        saslContinue: J$.T(120073, 1, 22, false),
                                                                        conversationId: J$.G(120089, J$.R(120081, 'r', r, false, false), 'conversationId'),
                                                                        payload: J$.F(120129, J$.R(120097, 'Binary', Binary, false, true), true)(J$.M(120121, J$.R(120105, 'Buffer', Buffer, false, true), 'from', false)(J$.R(120113, 'clientFinal', clientFinal, false, false)))
                                                                    }, 11, false), saslContinueCmd, false, false);
                                                                    J$.F(120465, J$.R(120153, 'sendAuthCommand', sendAuthCommand, false, false), false)(J$.R(120161, 'connection', connection, false, false), J$.M(120193, J$.T(120169, '', 21, false), 'concat', false)(J$.R(120177, 'db', db, false, false), J$.T(120185, '.$cmd', 21, false)), J$.R(120201, 'saslContinueCmd', saslContinueCmd, false, false), J$.T(120457, function (err, r) {
                                                                        jalangiLabel24:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(120417, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(120425, 'arguments', arguments, true, false, false);
                                                                                    err = J$.N(120433, 'err', err, true, false, false);
                                                                                    r = J$.N(120441, 'r', r, true, false, false);
                                                                                    J$.N(120449, 'retrySaslContinueCmd', retrySaslContinueCmd, false, false, false);
                                                                                    if (J$.C(6880, J$.C(6872, J$.U(6506, '!', J$.R(120209, 'r', r, false, false))) ? J$._() : J$.B(6514, '!==', J$.G(120225, J$.R(120217, 'r', r, false, false), 'done'), J$.T(120233, false, 23, false)))) {
                                                                                        return J$.Rt(120273, J$.F(120265, J$.R(120241, 'callback', callback, false, false), false)(J$.R(120249, 'err', err, false, false), J$.R(120257, 'r', r, false, false)));
                                                                                    }
                                                                                    var retrySaslContinueCmd = J$.W(120337, 'retrySaslContinueCmd', J$.T(120329, {
                                                                                        saslContinue: J$.T(120281, 1, 22, false),
                                                                                        conversationId: J$.G(120297, J$.R(120289, 'r', r, false, false), 'conversationId'),
                                                                                        payload: J$.M(120321, J$.R(120305, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(120313, 0, 22, false))
                                                                                    }, 11, false), retrySaslContinueCmd, false, false);
                                                                                    J$.F(120409, J$.R(120345, 'sendAuthCommand', sendAuthCommand, false, false), false)(J$.R(120353, 'connection', connection, false, false), J$.M(120385, J$.T(120361, '', 21, false), 'concat', false)(J$.R(120369, 'db', db, false, false), J$.T(120377, '.$cmd', 21, false)), J$.R(120393, 'retrySaslContinueCmd', retrySaslContinueCmd, false, false), J$.R(120401, 'callback', callback, false, false));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(122985, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(122993))
                                                                                        continue jalangiLabel24;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(123001, J$e);
                                                                } finally {
                                                                    if (J$.Fr(123009))
                                                                        continue jalangiLabel25;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(123017, J$e);
                                                } finally {
                                                    if (J$.Fr(123025))
                                                        continue jalangiLabel26;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(121065, {
                                    key: J$.T(120785, '_authenticateSingleConnection', 21, false),
                                    value: J$.T(121057, function _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {
                                        jalangiLabel28:
                                            while (true) {
                                                try {
                                                    J$.Fe(121001, arguments.callee, this, arguments);
                                                    arguments = J$.N(121009, 'arguments', arguments, true, false, false);
                                                    sendAuthCommand = J$.N(121017, 'sendAuthCommand', sendAuthCommand, true, false, false);
                                                    connection = J$.N(121025, 'connection', connection, true, false, false);
                                                    credentials = J$.N(121033, 'credentials', credentials, true, false, false);
                                                    callback = J$.N(121041, 'callback', callback, true, false, false);
                                                    J$.N(121049, '_this2', _this2, false, false, false);
                                                    var _this2 = J$.W(120801, '_this2', J$.R(120793, 'this', this, false, false), _this2, false, false);
                                                    J$.M(120993, J$.R(120809, 'crypto', crypto, false, true), 'randomBytes', false)(J$.T(120817, 24, 22, false), J$.T(120985, function (err, buff) {
                                                        jalangiLabel27:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(120953, arguments.callee, this, arguments);
                                                                    arguments = J$.N(120961, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(120969, 'err', err, true, false, false);
                                                                    buff = J$.N(120977, 'buff', buff, true, false, false);
                                                                    if (J$.C(6888, J$.R(120825, 'err', err, false, false))) {
                                                                        return J$.Rt(120865, J$.F(120857, J$.R(120833, 'callback', callback, false, false), false)(J$.R(120841, 'err', err, false, false), J$.T(120849, null, 25, false)));
                                                                    }
                                                                    return J$.Rt(120945, J$.M(120937, J$.R(120873, '_this2', _this2, false, false), '_executeScram', false)(J$.R(120881, 'sendAuthCommand', sendAuthCommand, false, false), J$.R(120889, 'connection', connection, false, false), J$.R(120897, 'credentials', credentials, false, false), J$.M(120921, J$.R(120905, 'buff', buff, false, false), 'toString', false)(J$.T(120913, 'base64', 21, false)), J$.R(120929, 'callback', callback, false, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(123033, J$e);
                                                                } finally {
                                                                    if (J$.Fr(123041))
                                                                        continue jalangiLabel27;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(123049, J$e);
                                                } finally {
                                                    if (J$.Fr(123057))
                                                        continue jalangiLabel28;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(121265, {
                                    key: J$.T(121073, 'auth', 21, false),
                                    value: J$.T(121257, function auth(sendAuthCommand, connections, credentials, callback) {
                                        jalangiLabel29:
                                            while (true) {
                                                try {
                                                    J$.Fe(121209, arguments.callee, this, arguments);
                                                    arguments = J$.N(121217, 'arguments', arguments, true, false, false);
                                                    sendAuthCommand = J$.N(121225, 'sendAuthCommand', sendAuthCommand, true, false, false);
                                                    connections = J$.N(121233, 'connections', connections, true, false, false);
                                                    credentials = J$.N(121241, 'credentials', credentials, true, false, false);
                                                    callback = J$.N(121249, 'callback', callback, true, false, false);
                                                    J$.M(121089, J$.R(121081, 'this', this, false, false), '_checkSaslprep', false)();
                                                    J$.M(121201, J$.F(121153, J$.R(121097, '_get', _get, false, true), false)(J$.F(121129, J$.R(121105, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.G(121121, J$.R(121113, 'ScramSHA', ScramSHA, false, false), 'prototype')), J$.T(121137, 'auth', 21, false), J$.R(121145, 'this', this, false, false)), 'call', false)(J$.R(121161, 'this', this, false, false), J$.R(121169, 'sendAuthCommand', sendAuthCommand, false, false), J$.R(121177, 'connections', connections, false, false), J$.R(121185, 'credentials', credentials, false, false), J$.R(121193, 'callback', callback, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(123065, J$e);
                                                } finally {
                                                    if (J$.Fr(123073))
                                                        continue jalangiLabel29;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(121385, {
                                    key: J$.T(121273, '_checkSaslprep', 21, false),
                                    value: J$.T(121377, function _checkSaslprep() {
                                        jalangiLabel30:
                                            while (true) {
                                                try {
                                                    J$.Fe(121353, arguments.callee, this, arguments);
                                                    arguments = J$.N(121361, 'arguments', arguments, true, false, false);
                                                    J$.N(121369, 'cryptoMethod', cryptoMethod, false, false, false);
                                                    var cryptoMethod = J$.W(121297, 'cryptoMethod', J$.G(121289, J$.R(121281, 'this', this, false, false), 'cryptoMethod'), cryptoMethod, false, false);
                                                    if (J$.C(6904, J$.B(6522, '===', J$.R(121305, 'cryptoMethod', cryptoMethod, false, false), J$.T(121313, 'sha256', 21, false)))) {
                                                        if (J$.C(6896, J$.U(6530, '!', J$.R(121321, 'saslprep', saslprep, false, true)))) {
                                                            J$.M(121345, J$.I(typeof console === 'undefined' ? console = J$.R(121329, 'console', undefined, true, true) : console = J$.R(121329, 'console', console, true, true)), 'warn', false)(J$.T(121337, 'Warning: no saslprep library specified. Passwords will not be sanitized', 21, false));
                                                        }
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(123081, J$e);
                                                } finally {
                                                    if (J$.Fr(123089))
                                                        continue jalangiLabel30;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false), J$.T(121545, [J$.T(121537, {
                                    key: J$.T(121401, '_getError', 21, false),
                                    value: J$.T(121529, function _getError(err, r) {
                                        jalangiLabel31:
                                            while (true) {
                                                try {
                                                    J$.Fe(121497, arguments.callee, this, arguments);
                                                    arguments = J$.N(121505, 'arguments', arguments, true, false, false);
                                                    err = J$.N(121513, 'err', err, true, false, false);
                                                    r = J$.N(121521, 'r', r, true, false, false);
                                                    if (J$.C(6912, J$.R(121409, 'err', err, false, false))) {
                                                        return J$.Rt(121425, J$.R(121417, 'err', err, false, false));
                                                    }
                                                    if (J$.C(6928, J$.C(6920, J$.G(121441, J$.R(121433, 'r', r, false, false), '$err')) ? J$._() : J$.G(121457, J$.R(121449, 'r', r, false, false), 'errmsg'))) {
                                                        return J$.Rt(121489, J$.F(121481, J$.R(121465, 'MongoError', MongoError, false, true), true)(J$.R(121473, 'r', r, false, false)));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(123097, J$e);
                                                } finally {
                                                    if (J$.Fr(123105))
                                                        continue jalangiLabel31;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)], 10, false));
                            return J$.Rt(121569, J$.R(121561, 'ScramSHA', ScramSHA, false, false));
                        } catch (J$e) {
                            J$.Ex(123113, J$e);
                        } finally {
                            if (J$.Fr(123121))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(121625, 'AuthProvider', AuthProvider, false, true)), ScramSHA, false, true);
            var ScramSHA1 = J$.W(121905, 'ScramSHA1', J$.F(121897, J$.T(121881, function (_ScramSHA) {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(121841, arguments.callee, this, arguments);
                            function ScramSHA1(bson) {
                                jalangiLabel33:
                                    while (true) {
                                        try {
                                            J$.Fe(121801, arguments.callee, this, arguments);
                                            arguments = J$.N(121809, 'arguments', arguments, true, false, false);
                                            bson = J$.N(121817, 'bson', bson, true, false, false);
                                            J$.F(121705, J$.R(121681, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(121689, 'this', this, false, false), J$.R(121697, 'ScramSHA1', ScramSHA1, false, false));
                                            return J$.Rt(121793, J$.F(121785, J$.R(121713, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(121721, 'this', this, false, false), J$.M(121777, J$.F(121745, J$.R(121729, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(121737, 'ScramSHA1', ScramSHA1, false, false)), 'call', false)(J$.R(121753, 'this', this, false, false), J$.R(121761, 'bson', bson, false, false), J$.T(121769, 'sha1', 21, false))));
                                        } catch (J$e) {
                                            J$.Ex(123129, J$e);
                                        } finally {
                                            if (J$.Fr(123137))
                                                continue jalangiLabel33;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(121849, 'arguments', arguments, true, false, false);
                            _ScramSHA = J$.N(121857, '_ScramSHA', _ScramSHA, true, false, false);
                            ScramSHA1 = J$.N(121873, 'ScramSHA1', J$.T(121865, ScramSHA1, 12, false), true, false, false);
                            J$.F(121673, J$.R(121649, '_inherits', _inherits, false, true), false)(J$.R(121657, 'ScramSHA1', ScramSHA1, false, false), J$.R(121665, '_ScramSHA', _ScramSHA, false, false));
                            return J$.Rt(121833, J$.R(121825, 'ScramSHA1', ScramSHA1, false, false));
                        } catch (J$e) {
                            J$.Ex(123145, J$e);
                        } finally {
                            if (J$.Fr(123153))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(121889, 'ScramSHA', ScramSHA, false, true)), ScramSHA1, false, true);
            var ScramSHA256 = J$.W(122169, 'ScramSHA256', J$.F(122161, J$.T(122145, function (_ScramSHA2) {
                jalangiLabel36:
                    while (true) {
                        try {
                            J$.Fe(122105, arguments.callee, this, arguments);
                            function ScramSHA256(bson) {
                                jalangiLabel35:
                                    while (true) {
                                        try {
                                            J$.Fe(122065, arguments.callee, this, arguments);
                                            arguments = J$.N(122073, 'arguments', arguments, true, false, false);
                                            bson = J$.N(122081, 'bson', bson, true, false, false);
                                            J$.F(121969, J$.R(121945, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(121953, 'this', this, false, false), J$.R(121961, 'ScramSHA256', ScramSHA256, false, false));
                                            return J$.Rt(122057, J$.F(122049, J$.R(121977, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(121985, 'this', this, false, false), J$.M(122041, J$.F(122009, J$.R(121993, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(122001, 'ScramSHA256', ScramSHA256, false, false)), 'call', false)(J$.R(122017, 'this', this, false, false), J$.R(122025, 'bson', bson, false, false), J$.T(122033, 'sha256', 21, false))));
                                        } catch (J$e) {
                                            J$.Ex(123161, J$e);
                                        } finally {
                                            if (J$.Fr(123169))
                                                continue jalangiLabel35;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(122113, 'arguments', arguments, true, false, false);
                            _ScramSHA2 = J$.N(122121, '_ScramSHA2', _ScramSHA2, true, false, false);
                            ScramSHA256 = J$.N(122137, 'ScramSHA256', J$.T(122129, ScramSHA256, 12, false), true, false, false);
                            J$.F(121937, J$.R(121913, '_inherits', _inherits, false, true), false)(J$.R(121921, 'ScramSHA256', ScramSHA256, false, false), J$.R(121929, '_ScramSHA2', _ScramSHA2, false, false));
                            return J$.Rt(122097, J$.R(122089, 'ScramSHA256', ScramSHA256, false, false));
                        } catch (J$e) {
                            J$.Ex(123177, J$e);
                        } finally {
                            if (J$.Fr(123185))
                                continue jalangiLabel36;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(122153, 'ScramSHA', ScramSHA, false, true)), ScramSHA256, false, true);
            J$.P(122209, J$.I(typeof module === 'undefined' ? module = J$.R(122177, 'module', undefined, true, true) : module = J$.R(122177, 'module', module, true, true)), 'exports', J$.T(122201, {
                ScramSHA1: J$.R(122185, 'ScramSHA1', ScramSHA1, false, true),
                ScramSHA256: J$.R(122193, 'ScramSHA256', ScramSHA256, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(123193, J$e);
        } finally {
            if (J$.Sr(123201))
                continue jalangiLabel37;
            else
                break jalangiLabel37;
        }
    }
// JALANGI DO NOT INSTRUMENT

