J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(107961, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/auth/mongo_credentials.js');
            function _classCallCheck(instance, Constructor) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(106609, arguments.callee, this, arguments);
                            arguments = J$.N(106617, 'arguments', arguments, true, false, false);
                            instance = J$.N(106625, 'instance', instance, true, false, false);
                            Constructor = J$.N(106633, 'Constructor', Constructor, true, false, false);
                            if (J$.C(5992, J$.U(5578, '!', J$.B(5570, 'instanceof', J$.R(106569, 'instance', instance, false, false), J$.R(106577, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(106601, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(106585, 'TypeError', undefined, true, true) : TypeError = J$.R(106585, 'TypeError', TypeError, true, true)), true)(J$.T(106593, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(108041, J$e);
                        } finally {
                            if (J$.Fr(108049))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(106881, arguments.callee, this, arguments);
                            arguments = J$.N(106889, 'arguments', arguments, true, false, false);
                            target = J$.N(106897, 'target', target, true, false, false);
                            props = J$.N(106905, 'props', props, true, false, false);
                            J$.N(106913, 'i', i, false, false, false);
                            J$.N(106921, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(106649, 'i', J$.T(106641, 0, 22, false), i, false, false); J$.C(6016, J$.B(5586, '<', J$.R(106657, 'i', i, false, false), J$.G(106673, J$.R(106665, 'props', props, false, false), 'length'))); J$.B(5610, '-', i = J$.W(106689, 'i', J$.B(5602, '+', J$.U(5594, '+', J$.R(106681, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(106721, 'descriptor', J$.G(106713, J$.R(106697, 'props', props, false, false), J$.R(106705, 'i', i, false, false)), descriptor, false, false);
                                J$.P(106761, J$.R(106729, 'descriptor', descriptor, false, false), 'enumerable', J$.C(6000, J$.G(106745, J$.R(106737, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(106753, false, 23, false));
                                J$.P(106785, J$.R(106769, 'descriptor', descriptor, false, false), 'configurable', J$.T(106777, true, 23, false));
                                if (J$.C(6008, J$.B(5618, 'in', J$.T(106793, 'value', 21, false), J$.R(106801, 'descriptor', descriptor, false, false))))
                                    J$.P(106825, J$.R(106809, 'descriptor', descriptor, false, false), 'writable', J$.T(106817, true, 23, false));
                                J$.M(106873, J$.I(typeof Object === 'undefined' ? Object = J$.R(106833, 'Object', undefined, true, true) : Object = J$.R(106833, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(106841, 'target', target, false, false), J$.G(106857, J$.R(106849, 'descriptor', descriptor, false, false), 'key'), J$.R(106865, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(108057, J$e);
                        } finally {
                            if (J$.Fr(108065))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(107033, arguments.callee, this, arguments);
                            arguments = J$.N(107041, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(107049, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(107057, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(107065, 'staticProps', staticProps, true, false, false);
                            if (J$.C(6024, J$.R(106929, 'protoProps', protoProps, false, false)))
                                J$.F(106969, J$.R(106937, '_defineProperties', _defineProperties, false, true), false)(J$.G(106953, J$.R(106945, 'Constructor', Constructor, false, false), 'prototype'), J$.R(106961, 'protoProps', protoProps, false, false));
                            if (J$.C(6032, J$.R(106977, 'staticProps', staticProps, false, false)))
                                J$.F(107009, J$.R(106985, '_defineProperties', _defineProperties, false, true), false)(J$.R(106993, 'Constructor', Constructor, false, false), J$.R(107001, 'staticProps', staticProps, false, false));
                            return J$.Rt(107025, J$.R(107017, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(108073, J$e);
                        } finally {
                            if (J$.Fr(108081))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getDefaultAuthMechanism(ismaster) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(107233, arguments.callee, this, arguments);
                            arguments = J$.N(107241, 'arguments', arguments, true, false, false);
                            ismaster = J$.N(107249, 'ismaster', ismaster, true, false, false);
                            if (J$.C(6064, J$.R(107073, 'ismaster', ismaster, false, false))) {
                                if (J$.C(6048, J$.M(107105, J$.I(typeof Array === 'undefined' ? Array = J$.R(107081, 'Array', undefined, true, true) : Array = J$.R(107081, 'Array', Array, true, true)), 'isArray', false)(J$.G(107097, J$.R(107089, 'ismaster', ismaster, false, false), 'saslSupportedMechs')))) {
                                    return J$.Rt(107169, J$.C(6040, J$.B(5626, '>=', J$.M(107137, J$.G(107121, J$.R(107113, 'ismaster', ismaster, false, false), 'saslSupportedMechs'), 'indexOf', false)(J$.T(107129, 'SCRAM-SHA-256', 21, false)), J$.T(107145, 0, 22, false))) ? J$.T(107153, 'scram-sha-256', 21, false) : J$.T(107161, 'scram-sha-1', 21, false));
                                }
                                if (J$.C(6056, J$.B(5634, '>=', J$.G(107185, J$.R(107177, 'ismaster', ismaster, false, false), 'maxWireVersion'), J$.T(107193, 3, 22, false)))) {
                                    return J$.Rt(107209, J$.T(107201, 'scram-sha-1', 21, false));
                                }
                            }
                            return J$.Rt(107225, J$.T(107217, 'mongocr', 21, false));
                        } catch (J$e) {
                            J$.Ex(108089, J$e);
                        } finally {
                            if (J$.Fr(108097))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _classCallCheck = J$.N(107977, '_classCallCheck', J$.T(107969, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(107993, '_defineProperties', J$.T(107985, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(108009, '_createClass', J$.T(108001, _createClass, 12, false), true, false, false);
            getDefaultAuthMechanism = J$.N(108025, 'getDefaultAuthMechanism', J$.T(108017, getDefaultAuthMechanism, 12, false), true, false, false);
            J$.N(108033, 'MongoCredentials', MongoCredentials, false, false, false);
            J$.T(106561, 'use strict', 21, false);
            var MongoCredentials = J$.W(107921, 'MongoCredentials', J$.F(107913, J$.T(107905, function () {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(107873, arguments.callee, this, arguments);
                            function MongoCredentials(options) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(107497, arguments.callee, this, arguments);
                                            arguments = J$.N(107505, 'arguments', arguments, true, false, false);
                                            options = J$.N(107513, 'options', options, true, false, false);
                                            J$.F(107281, J$.R(107257, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(107265, 'this', this, false, false), J$.R(107273, 'MongoCredentials', MongoCredentials, false, false));
                                            options = J$.W(107305, 'options', J$.C(6072, J$.R(107289, 'options', options, false, false)) ? J$._() : J$.T(107297, {}, 11, false), options, false, false);
                                            J$.P(107337, J$.R(107313, 'this', this, false, false), 'username', J$.G(107329, J$.R(107321, 'options', options, false, false), 'username'));
                                            J$.P(107369, J$.R(107345, 'this', this, false, false), 'password', J$.G(107361, J$.R(107353, 'options', options, false, false), 'password'));
                                            J$.P(107417, J$.R(107377, 'this', this, false, false), 'source', J$.C(6080, J$.G(107393, J$.R(107385, 'options', options, false, false), 'source')) ? J$._() : J$.G(107409, J$.R(107401, 'options', options, false, false), 'db'));
                                            J$.P(107457, J$.R(107425, 'this', this, false, false), 'mechanism', J$.C(6088, J$.G(107441, J$.R(107433, 'options', options, false, false), 'mechanism')) ? J$._() : J$.T(107449, 'default', 21, false));
                                            J$.P(107489, J$.R(107465, 'this', this, false, false), 'mechanismProperties', J$.G(107481, J$.R(107473, 'options', options, false, false), 'mechanismProperties'));
                                        } catch (J$e) {
                                            J$.Ex(108105, J$e);
                                        } finally {
                                            if (J$.Fr(108113))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(107881, 'arguments', arguments, true, false, false);
                            MongoCredentials = J$.N(107897, 'MongoCredentials', J$.T(107889, MongoCredentials, 12, false), true, false, false);
                            J$.F(107849, J$.R(107521, '_createClass', _createClass, false, true), false)(J$.R(107529, 'MongoCredentials', MongoCredentials, false, false), J$.T(107841, [
                                J$.T(107713, {
                                    key: J$.T(107537, 'equals', 21, false),
                                    value: J$.T(107705, function equals(other) {
                                        jalangiLabel5:
                                            while (true) {
                                                try {
                                                    J$.Fe(107681, arguments.callee, this, arguments);
                                                    arguments = J$.N(107689, 'arguments', arguments, true, false, false);
                                                    other = J$.N(107697, 'other', other, true, false, false);
                                                    return J$.Rt(107673, J$.C(6112, J$.C(6104, J$.C(6096, J$.B(5642, '===', J$.G(107553, J$.R(107545, 'this', this, false, false), 'mechanism'), J$.G(107569, J$.R(107561, 'other', other, false, false), 'mechanism'))) ? J$.B(5650, '===', J$.G(107585, J$.R(107577, 'this', this, false, false), 'username'), J$.G(107601, J$.R(107593, 'other', other, false, false), 'username')) : J$._()) ? J$.B(5658, '===', J$.G(107617, J$.R(107609, 'this', this, false, false), 'password'), J$.G(107633, J$.R(107625, 'other', other, false, false), 'password')) : J$._()) ? J$.B(5666, '===', J$.G(107649, J$.R(107641, 'this', this, false, false), 'source'), J$.G(107665, J$.R(107657, 'other', other, false, false), 'source')) : J$._());
                                                } catch (J$e) {
                                                    J$.Ex(108121, J$e);
                                                } finally {
                                                    if (J$.Fr(108129))
                                                        continue jalangiLabel5;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(107833, {
                                    key: J$.T(107721, 'resolveAuthMechanism', 21, false),
                                    value: J$.T(107825, function resolveAuthMechanism(ismaster) {
                                        jalangiLabel6:
                                            while (true) {
                                                try {
                                                    J$.Fe(107801, arguments.callee, this, arguments);
                                                    arguments = J$.N(107809, 'arguments', arguments, true, false, false);
                                                    ismaster = J$.N(107817, 'ismaster', ismaster, true, false, false);
                                                    if (J$.C(6120, J$.B(5674, '===', J$.M(107745, J$.G(107737, J$.R(107729, 'this', this, false, false), 'mechanism'), 'toLowerCase', false)(), J$.T(107753, 'default', 21, false)))) {
                                                        J$.P(107793, J$.R(107761, 'this', this, false, false), 'mechanism', J$.F(107785, J$.R(107769, 'getDefaultAuthMechanism', getDefaultAuthMechanism, false, true), false)(J$.R(107777, 'ismaster', ismaster, false, false)));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(108137, J$e);
                                                } finally {
                                                    if (J$.Fr(108145))
                                                        continue jalangiLabel6;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(107865, J$.R(107857, 'MongoCredentials', MongoCredentials, false, false));
                        } catch (J$e) {
                            J$.Ex(108153, J$e);
                        } finally {
                            if (J$.Fr(108161))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), MongoCredentials, false, true);
            J$.P(107953, J$.I(typeof module === 'undefined' ? module = J$.R(107929, 'module', undefined, true, true) : module = J$.R(107929, 'module', module, true, true)), 'exports', J$.T(107945, { MongoCredentials: J$.R(107937, 'MongoCredentials', MongoCredentials, false, true) }, 11, false));
        } catch (J$e) {
            J$.Ex(108169, J$e);
        } finally {
            if (J$.Sr(108177))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

