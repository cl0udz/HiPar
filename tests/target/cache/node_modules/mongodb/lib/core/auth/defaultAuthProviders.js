J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(100481, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/auth/defaultAuthProviders.js');
            function defaultAuthProviders(bson) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(100425, arguments.callee, this, arguments);
                            arguments = J$.N(100433, 'arguments', arguments, true, false, false);
                            bson = J$.N(100441, 'bson', bson, true, false, false);
                            return J$.Rt(100417, J$.T(100409, {
                                mongocr: J$.F(100257, J$.R(100241, 'MongoCR', MongoCR, false, true), true)(J$.R(100249, 'bson', bson, false, false)),
                                x509: J$.F(100281, J$.R(100265, 'X509', X509, false, true), true)(J$.R(100273, 'bson', bson, false, false)),
                                plain: J$.F(100305, J$.R(100289, 'Plain', Plain, false, true), true)(J$.R(100297, 'bson', bson, false, false)),
                                gssapi: J$.F(100329, J$.R(100313, 'GSSAPI', GSSAPI, false, true), true)(J$.R(100321, 'bson', bson, false, false)),
                                sspi: J$.F(100353, J$.R(100337, 'SSPI', SSPI, false, true), true)(J$.R(100345, 'bson', bson, false, false)),
                                'scram-sha-1': J$.F(100377, J$.R(100361, 'ScramSHA1', ScramSHA1, false, true), true)(J$.R(100369, 'bson', bson, false, false)),
                                'scram-sha-256': J$.F(100401, J$.R(100385, 'ScramSHA256', ScramSHA256, false, true), true)(J$.R(100393, 'bson', bson, false, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(100561, J$e);
                        } finally {
                            if (J$.Fr(100569))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(100489, 'MongoCR', MongoCR, false, false, false);
            J$.N(100497, 'X509', X509, false, false, false);
            J$.N(100505, 'Plain', Plain, false, false, false);
            J$.N(100513, 'GSSAPI', GSSAPI, false, false, false);
            J$.N(100521, 'SSPI', SSPI, false, false, false);
            J$.N(100529, 'ScramSHA1', ScramSHA1, false, false, false);
            J$.N(100537, 'ScramSHA256', ScramSHA256, false, false, false);
            defaultAuthProviders = J$.N(100553, 'defaultAuthProviders', J$.T(100545, defaultAuthProviders, 12, false), true, false, false);
            J$.T(99993, 'use strict', 21, false);
            var MongoCR = J$.W(100025, 'MongoCR', J$.F(100017, J$.I(typeof require === 'undefined' ? require = J$.R(100001, 'require', undefined, true, true) : require = J$.R(100001, 'require', require, true, true)), false)(J$.T(100009, './mongocr', 21, false)), MongoCR, false, true);
            var X509 = J$.W(100057, 'X509', J$.F(100049, J$.I(typeof require === 'undefined' ? require = J$.R(100033, 'require', undefined, true, true) : require = J$.R(100033, 'require', require, true, true)), false)(J$.T(100041, './x509', 21, false)), X509, false, true);
            var Plain = J$.W(100089, 'Plain', J$.F(100081, J$.I(typeof require === 'undefined' ? require = J$.R(100065, 'require', undefined, true, true) : require = J$.R(100065, 'require', require, true, true)), false)(J$.T(100073, './plain', 21, false)), Plain, false, true);
            var GSSAPI = J$.W(100121, 'GSSAPI', J$.F(100113, J$.I(typeof require === 'undefined' ? require = J$.R(100097, 'require', undefined, true, true) : require = J$.R(100097, 'require', require, true, true)), false)(J$.T(100105, './gssapi', 21, false)), GSSAPI, false, true);
            var SSPI = J$.W(100153, 'SSPI', J$.F(100145, J$.I(typeof require === 'undefined' ? require = J$.R(100129, 'require', undefined, true, true) : require = J$.R(100129, 'require', require, true, true)), false)(J$.T(100137, './sspi', 21, false)), SSPI, false, true);
            var ScramSHA1 = J$.W(100193, 'ScramSHA1', J$.G(100185, J$.F(100177, J$.I(typeof require === 'undefined' ? require = J$.R(100161, 'require', undefined, true, true) : require = J$.R(100161, 'require', require, true, true)), false)(J$.T(100169, './scram', 21, false)), 'ScramSHA1'), ScramSHA1, false, true);
            var ScramSHA256 = J$.W(100233, 'ScramSHA256', J$.G(100225, J$.F(100217, J$.I(typeof require === 'undefined' ? require = J$.R(100201, 'require', undefined, true, true) : require = J$.R(100201, 'require', require, true, true)), false)(J$.T(100209, './scram', 21, false)), 'ScramSHA256'), ScramSHA256, false, true);
            J$.P(100473, J$.I(typeof module === 'undefined' ? module = J$.R(100449, 'module', undefined, true, true) : module = J$.R(100449, 'module', module, true, true)), 'exports', J$.T(100465, { defaultAuthProviders: J$.R(100457, 'defaultAuthProviders', defaultAuthProviders, false, true) }, 11, false));
        } catch (J$e) {
            J$.Ex(100577, J$e);
        } finally {
            if (J$.Sr(100585))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

