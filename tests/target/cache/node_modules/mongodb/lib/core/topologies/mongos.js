J$.noInstrEval = false;
jalangiLabel58:
    while (true) {
        try {
            J$.Se(321929, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/topologies/mongos.js');
            function stateTransition(self, newState) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(303353, arguments.callee, this, arguments);
                            arguments = J$.N(303361, 'arguments', arguments, true, false, false);
                            self = J$.N(303369, 'self', self, true, false, false);
                            newState = J$.N(303377, 'newState', newState, true, false, false);
                            J$.N(303385, 'legalTransitions', legalTransitions, false, false, false);
                            J$.N(303393, 'legalStates', legalStates, false, false, false);
                            var legalTransitions = J$.W(303137, 'legalTransitions', J$.T(303129, {
                                disconnected: J$.T(302977, [
                                    J$.R(302945, 'CONNECTING', CONNECTING, false, true),
                                    J$.R(302953, 'DESTROYING', DESTROYING, false, true),
                                    J$.R(302961, 'DESTROYED', DESTROYED, false, true),
                                    J$.R(302969, 'DISCONNECTED', DISCONNECTED, false, true)
                                ], 10, false),
                                connecting: J$.T(303025, [
                                    J$.R(302985, 'CONNECTING', CONNECTING, false, true),
                                    J$.R(302993, 'DESTROYING', DESTROYING, false, true),
                                    J$.R(303001, 'DESTROYED', DESTROYED, false, true),
                                    J$.R(303009, 'CONNECTED', CONNECTED, false, true),
                                    J$.R(303017, 'DISCONNECTED', DISCONNECTED, false, true)
                                ], 10, false),
                                connected: J$.T(303073, [
                                    J$.R(303033, 'CONNECTED', CONNECTED, false, true),
                                    J$.R(303041, 'DISCONNECTED', DISCONNECTED, false, true),
                                    J$.R(303049, 'DESTROYING', DESTROYING, false, true),
                                    J$.R(303057, 'DESTROYED', DESTROYED, false, true),
                                    J$.R(303065, 'UNREFERENCED', UNREFERENCED, false, true)
                                ], 10, false),
                                unreferenced: J$.T(303105, [
                                    J$.R(303081, 'UNREFERENCED', UNREFERENCED, false, true),
                                    J$.R(303089, 'DESTROYING', DESTROYING, false, true),
                                    J$.R(303097, 'DESTROYED', DESTROYED, false, true)
                                ], 10, false),
                                destroyed: J$.T(303121, [J$.R(303113, 'DESTROYED', DESTROYED, false, true)], 10, false)
                            }, 11, false), legalTransitions, false, false);
                            var legalStates = J$.W(303177, 'legalStates', J$.G(303169, J$.R(303145, 'legalTransitions', legalTransitions, false, false), J$.G(303161, J$.R(303153, 'self', self, false, false), 'state')), legalStates, false, false);
                            if (J$.C(17672, J$.C(17664, J$.R(303185, 'legalStates', legalStates, false, false)) ? J$.B(18506, '!==', J$.M(303209, J$.R(303193, 'legalStates', legalStates, false, false), 'indexOf', false)(J$.R(303201, 'newState', newState, false, false)), J$.U(18498, '-', J$.T(303217, 1, 22, false))) : J$._())) {
                                J$.P(303241, J$.R(303225, 'self', self, false, false), 'state', J$.R(303233, 'newState', newState, false, false));
                            } else {
                                J$.M(303345, J$.G(303265, J$.G(303257, J$.R(303249, 'self', self, false, false), 's'), 'logger'), 'error', false)(J$.F(303337, J$.R(303273, 'f', f, false, true), false)(J$.T(303281, 'Mongos with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]', 21, false), J$.G(303297, J$.R(303289, 'self', self, false, false), 'id'), J$.G(303313, J$.R(303305, 'self', self, false, false), 'state'), J$.R(303321, 'newState', newState, false, false), J$.R(303329, 'legalStates', legalStates, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(322393, J$e);
                        } finally {
                            if (J$.Fr(322401))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function emitSDAMEvent(self, event, description) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(305201, arguments.callee, this, arguments);
                            arguments = J$.N(305209, 'arguments', arguments, true, false, false);
                            self = J$.N(305217, 'self', self, true, false, false);
                            event = J$.N(305225, 'event', event, true, false, false);
                            description = J$.N(305233, 'description', description, true, false, false);
                            if (J$.C(17776, J$.B(18578, '>', J$.G(305153, J$.M(305145, J$.R(305129, 'self', self, false, false), 'listeners', false)(J$.R(305137, 'event', event, false, false)), 'length'), J$.T(305161, 0, 22, false)))) {
                                J$.M(305193, J$.R(305169, 'self', self, false, false), 'emit', false)(J$.R(305177, 'event', event, false, false), J$.R(305185, 'description', description, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(322473, J$e);
                        } finally {
                            if (J$.Fr(322481))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function destroyServer(server, options, callback) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(305433, arguments.callee, this, arguments);
                            arguments = J$.N(305441, 'arguments', arguments, true, false, false);
                            server = J$.N(305449, 'server', server, true, false, false);
                            options = J$.N(305457, 'options', options, true, false, false);
                            callback = J$.N(305465, 'callback', callback, true, false, false);
                            options = J$.W(305313, 'options', J$.C(17784, J$.R(305297, 'options', options, false, false)) ? J$._() : J$.T(305305, {}, 11, false), options, false, false);
                            J$.M(305393, J$.R(305321, 'SERVER_EVENTS', SERVER_EVENTS, false, true), 'forEach', false)(J$.T(305385, function (event) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(305361, arguments.callee, this, arguments);
                                            arguments = J$.N(305369, 'arguments', arguments, true, false, false);
                                            event = J$.N(305377, 'event', event, true, false, false);
                                            return J$.Rt(305353, J$.M(305345, J$.R(305329, 'server', server, false, false), 'removeAllListeners', false)(J$.R(305337, 'event', event, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(322489, J$e);
                                        } finally {
                                            if (J$.Fr(322497))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(305425, J$.R(305401, 'server', server, false, false), 'destroy', false)(J$.R(305409, 'options', options, false, false), J$.R(305417, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(322505, J$e);
                        } finally {
                            if (J$.Fr(322513))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function handleEvent(self) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(306409, arguments.callee, this, arguments);
                            arguments = J$.N(306417, 'arguments', arguments, true, false, false);
                            self = J$.N(306425, 'self', self, true, false, false);
                            return J$.Rt(306401, J$.T(306393, function () {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(306377, arguments.callee, this, arguments);
                                            arguments = J$.N(306385, 'arguments', arguments, true, false, false);
                                            if (J$.C(17816, J$.C(17808, J$.B(18602, '===', J$.G(306145, J$.R(306137, 'self', self, false, false), 'state'), J$.R(306153, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(18610, '===', J$.G(306169, J$.R(306161, 'self', self, false, false), 'state'), J$.R(306177, 'DESTROYING', DESTROYING, false, true)))) {
                                                return J$.Rt(306185, undefined);
                                            }
                                            J$.F(306241, J$.R(306193, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(306209, J$.R(306201, 'self', self, false, false), 'connectedProxies'), J$.G(306225, J$.R(306217, 'self', self, false, false), 'disconnectedProxies'), J$.R(306233, 'this', this, false, false));
                                            J$.F(306265, J$.R(306249, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(306257, 'self', self, false, false));
                                            J$.M(306305, J$.R(306273, 'self', self, false, false), 'emit', false)(J$.T(306281, 'left', 21, false), J$.T(306289, 'mongos', 21, false), J$.R(306297, 'this', this, false, false));
                                            J$.M(306369, J$.R(306313, 'self', self, false, false), 'emit', false)(J$.T(306321, 'serverClosed', 21, false), J$.T(306361, {
                                                topologyId: J$.G(306337, J$.R(306329, 'self', self, false, false), 'id'),
                                                address: J$.G(306353, J$.R(306345, 'this', this, false, false), 'name')
                                            }, 11, false));
                                        } catch (J$e) {
                                            J$.Ex(322569, J$e);
                                        } finally {
                                            if (J$.Fr(322577))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(322585, J$e);
                        } finally {
                            if (J$.Fr(322593))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function handleInitialConnectEvent(self, event) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(308273, arguments.callee, this, arguments);
                            arguments = J$.N(308281, 'arguments', arguments, true, false, false);
                            self = J$.N(308289, 'self', self, true, false, false);
                            event = J$.N(308297, 'event', event, true, false, false);
                            return J$.Rt(308265, J$.T(308257, function () {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(308209, arguments.callee, this, arguments);
                                            arguments = J$.N(308217, 'arguments', arguments, true, false, false);
                                            J$.N(308225, '_this', _this, false, false, false);
                                            J$.N(308233, 'i', i, false, false, false);
                                            J$.N(308241, '_i', _i, false, false, false);
                                            J$.N(308249, 'message', message, false, false, false);
                                            var _this = J$.W(306441, '_this', J$.R(306433, 'this', this, false, false), _this, false, false);
                                            if (J$.C(17824, J$.B(18618, '===', J$.G(306457, J$.R(306449, 'self', self, false, false), 'state'), J$.R(306465, 'DESTROYED', DESTROYED, false, true)))) {
                                                J$.F(306489, J$.R(306473, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(306481, 'self', self, false, false));
                                                J$.F(306545, J$.R(306497, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(306513, J$.R(306505, 'self', self, false, false), 'connectingProxies'), J$.G(306529, J$.R(306521, 'self', self, false, false), 'disconnectedProxies'), J$.R(306537, 'this', this, false, false));
                                                return J$.Rt(306569, J$.M(306561, J$.R(306553, 'this', this, false, false), 'destroy', false)());
                                            }
                                            if (J$.C(17880, J$.B(18626, '===', J$.R(306577, 'event', event, false, false), J$.T(306585, 'connect', 21, false)))) {
                                                J$.P(306617, J$.R(306593, 'self', self, false, false), 'ismaster', J$.M(306609, J$.R(306601, '_this', _this, false, false), 'lastIsMaster', false)());
                                                if (J$.C(17872, J$.B(18634, '===', J$.G(306641, J$.G(306633, J$.R(306625, 'self', self, false, false), 'ismaster'), 'msg'), J$.T(306649, 'isdbgrid', 21, false)))) {
                                                    for (var i = J$.W(306665, 'i', J$.T(306657, 0, 22, false), i, false, false); J$.C(17840, J$.B(18642, '<', J$.R(306673, 'i', i, false, false), J$.G(306697, J$.G(306689, J$.R(306681, 'self', self, false, false), 'connectedProxies'), 'length'))); J$.B(18666, '-', i = J$.W(306713, 'i', J$.B(18658, '+', J$.U(18650, '+', J$.R(306705, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                        if (J$.C(17832, J$.B(18674, '===', J$.G(306753, J$.G(306745, J$.G(306729, J$.R(306721, 'self', self, false, false), 'connectedProxies'), J$.R(306737, 'i', i, false, false)), 'name'), J$.G(306769, J$.R(306761, '_this', _this, false, false), 'name')))) {
                                                            J$.F(306825, J$.R(306777, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(306793, J$.R(306785, 'self', self, false, false), 'connectingProxies'), J$.G(306809, J$.R(306801, 'self', self, false, false), 'disconnectedProxies'), J$.R(306817, '_this', _this, false, false));
                                                            J$.F(306849, J$.R(306833, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(306841, 'self', self, false, false));
                                                            J$.M(306865, J$.R(306857, '_this', _this, false, false), 'destroy', false)();
                                                            return J$.Rt(306905, J$.M(306897, J$.R(306873, 'self', self, false, false), 'emit', false)(J$.T(306881, 'failed', 21, false), J$.R(306889, '_this', _this, false, false)));
                                                        }
                                                    }
                                                    for (var _i = J$.W(306921, '_i', J$.T(306913, 0, 22, false), _i, false, false); J$.C(17848, J$.B(18682, '<', J$.R(306929, '_i', _i, false, false), J$.G(306945, J$.R(306937, 'handlers', handlers, false, true), 'length'))); J$.B(18706, '-', _i = J$.W(306961, '_i', J$.B(18698, '+', J$.U(18690, '+', J$.R(306953, '_i', _i, false, false)), 1), _i, false, false), 1)) {
                                                        J$.M(307001, J$.R(306969, '_this', _this, false, false), 'removeAllListeners', false)(J$.G(306993, J$.R(306977, 'handlers', handlers, false, true), J$.R(306985, '_i', _i, false, false)));
                                                    }
                                                    J$.M(307057, J$.R(307009, '_this', _this, false, false), 'on', false)(J$.T(307017, 'error', 21, false), J$.F(307049, J$.R(307025, 'handleEvent', handleEvent, false, true), false)(J$.R(307033, 'self', self, false, false), J$.T(307041, 'error', 21, false)));
                                                    J$.M(307113, J$.R(307065, '_this', _this, false, false), 'on', false)(J$.T(307073, 'close', 21, false), J$.F(307105, J$.R(307081, 'handleEvent', handleEvent, false, true), false)(J$.R(307089, 'self', self, false, false), J$.T(307097, 'close', 21, false)));
                                                    J$.M(307169, J$.R(307121, '_this', _this, false, false), 'on', false)(J$.T(307129, 'timeout', 21, false), J$.F(307161, J$.R(307137, 'handleEvent', handleEvent, false, true), false)(J$.R(307145, 'self', self, false, false), J$.T(307153, 'timeout', 21, false)));
                                                    J$.M(307225, J$.R(307177, '_this', _this, false, false), 'on', false)(J$.T(307185, 'parseError', 21, false), J$.F(307217, J$.R(307193, 'handleEvent', handleEvent, false, true), false)(J$.R(307201, 'self', self, false, false), J$.T(307209, 'parseError', 21, false)));
                                                    J$.F(307281, J$.R(307233, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(307249, J$.R(307241, 'self', self, false, false), 'connectingProxies'), J$.G(307265, J$.R(307257, 'self', self, false, false), 'connectedProxies'), J$.R(307273, '_this', _this, false, false));
                                                    J$.M(307321, J$.R(307289, 'self', self, false, false), 'emit', false)(J$.T(307297, 'joined', 21, false), J$.T(307305, 'mongos', 21, false), J$.R(307313, '_this', _this, false, false));
                                                } else {
                                                    if (J$.C(17864, J$.M(307353, J$.G(307345, J$.G(307337, J$.R(307329, 'self', self, false, false), 's'), 'logger'), 'isWarn', false)())) {
                                                        var message = J$.W(307369, 'message', J$.T(307361, 'expected mongos proxy, but found replicaset member mongod for server %s', 21, false), message, false, false);
                                                        if (J$.C(17856, J$.U(18714, '!', J$.G(307393, J$.G(307385, J$.R(307377, 'self', self, false, false), 'ismaster'), 'hosts')))) {
                                                            message = J$.W(307409, 'message', J$.T(307401, 'expected mongos proxy, but found standalone mongod for server %s', 21, false), message, false, false);
                                                        }
                                                        J$.M(307481, J$.G(307433, J$.G(307425, J$.R(307417, 'self', self, false, false), 's'), 'logger'), 'warn', false)(J$.F(307473, J$.R(307441, 'f', f, false, true), false)(J$.R(307449, 'message', message, false, false), J$.G(307465, J$.R(307457, '_this', _this, false, false), 'name')));
                                                    }
                                                    J$.M(307505, J$.R(307489, '_this', _this, false, false), 'destroy', false)(J$.T(307497, true, 23, false));
                                                    J$.F(307545, J$.R(307513, 'removeProxyFrom', removeProxyFrom, false, true), false)(J$.G(307529, J$.R(307521, 'self', self, false, false), 'connectingProxies'), J$.R(307537, '_this', _this, false, false));
                                                    J$.M(307585, J$.R(307553, 'self', self, false, false), 'emit', false)(J$.T(307561, 'left', 21, false), J$.T(307569, 'server', 21, false), J$.R(307577, '_this', _this, false, false));
                                                    J$.M(307617, J$.R(307593, 'self', self, false, false), 'emit', false)(J$.T(307601, 'failed', 21, false), J$.R(307609, '_this', _this, false, false));
                                                }
                                            } else {
                                                J$.F(307673, J$.R(307625, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(307641, J$.R(307633, 'self', self, false, false), 'connectingProxies'), J$.G(307657, J$.R(307649, 'self', self, false, false), 'disconnectedProxies'), J$.R(307665, 'this', this, false, false));
                                                J$.M(307713, J$.R(307681, 'self', self, false, false), 'emit', false)(J$.T(307689, 'left', 21, false), J$.T(307697, 'mongos', 21, false), J$.R(307705, 'this', this, false, false));
                                                J$.M(307745, J$.R(307721, 'self', self, false, false), 'emit', false)(J$.T(307729, 'failed', 21, false), J$.R(307737, 'this', this, false, false));
                                            }
                                            J$.F(307769, J$.R(307753, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(307761, 'self', self, false, false));
                                            if (J$.C(17920, J$.B(18722, '===', J$.G(307793, J$.G(307785, J$.R(307777, 'self', self, false, false), 'connectingProxies'), 'length'), J$.T(307801, 0, 22, false)))) {
                                                if (J$.C(17912, J$.C(17888, J$.B(18730, '>', J$.G(307825, J$.G(307817, J$.R(307809, 'self', self, false, false), 'connectedProxies'), 'length'), J$.T(307833, 0, 22, false))) ? J$.B(18738, '===', J$.G(307849, J$.R(307841, 'self', self, false, false), 'state'), J$.R(307857, 'CONNECTING', CONNECTING, false, true)) : J$._())) {
                                                    J$.F(307889, J$.R(307865, 'stateTransition', stateTransition, false, true), false)(J$.R(307873, 'self', self, false, false), J$.R(307881, 'CONNECTED', CONNECTED, false, true));
                                                    J$.M(307921, J$.R(307897, 'self', self, false, false), 'emit', false)(J$.T(307905, 'connect', 21, false), J$.R(307913, 'self', self, false, false));
                                                    J$.M(307953, J$.R(307929, 'self', self, false, false), 'emit', false)(J$.T(307937, 'fullsetup', 21, false), J$.R(307945, 'self', self, false, false));
                                                    J$.M(307985, J$.R(307961, 'self', self, false, false), 'emit', false)(J$.T(307969, 'all', 21, false), J$.R(307977, 'self', self, false, false));
                                                } else if (J$.C(17904, J$.B(18746, '===', J$.G(308009, J$.G(308001, J$.R(307993, 'self', self, false, false), 'disconnectedProxies'), 'length'), J$.T(308017, 0, 22, false)))) {
                                                    if (J$.C(17896, J$.M(308049, J$.G(308041, J$.G(308033, J$.R(308025, 'self', self, false, false), 's'), 'logger'), 'isWarn', false)())) {
                                                        J$.M(308105, J$.G(308073, J$.G(308065, J$.R(308057, 'self', self, false, false), 's'), 'logger'), 'warn', false)(J$.F(308097, J$.R(308081, 'f', f, false, true), false)(J$.T(308089, 'no mongos proxies found in seed list, did you mean to connect to a replicaset', 21, false)));
                                                    }
                                                    return J$.Rt(308161, J$.M(308153, J$.R(308113, 'self', self, false, false), 'emit', false)(J$.T(308121, 'error', 21, false), J$.F(308145, J$.R(308129, 'MongoError', MongoError, false, true), true)(J$.T(308137, 'no mongos proxies found in seed list', 21, false))));
                                                }
                                                J$.F(308201, J$.R(308169, 'topologyMonitor', topologyMonitor, false, true), false)(J$.R(308177, 'self', self, false, false), J$.T(308193, { firstConnect: J$.T(308185, true, 23, false) }, 11, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(322601, J$e);
                                        } finally {
                                            if (J$.Fr(322609))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(322617, J$e);
                        } finally {
                            if (J$.Fr(322625))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connectProxies(self, servers) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(309017, arguments.callee, this, arguments);
                            function connect(server, timeoutInterval) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(308889, arguments.callee, this, arguments);
                                            arguments = J$.N(308897, 'arguments', arguments, true, false, false);
                                            server = J$.N(308905, 'server', server, true, false, false);
                                            timeoutInterval = J$.N(308913, 'timeoutInterval', timeoutInterval, true, false, false);
                                            J$.F(308881, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(308369, 'setTimeout', undefined, true, true) : setTimeout = J$.R(308369, 'setTimeout', setTimeout, true, true)), false)(J$.T(308865, function () {
                                                jalangiLabel15:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(308849, arguments.callee, this, arguments);
                                                            arguments = J$.N(308857, 'arguments', arguments, true, false, false);
                                                            J$.M(308433, J$.R(308377, 'self', self, false, false), 'emit', false)(J$.T(308385, 'serverOpening', 21, false), J$.T(308425, {
                                                                topologyId: J$.G(308401, J$.R(308393, 'self', self, false, false), 'id'),
                                                                address: J$.G(308417, J$.R(308409, 'server', server, false, false), 'name')
                                                            }, 11, false));
                                                            J$.F(308457, J$.R(308441, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(308449, 'self', self, false, false));
                                                            J$.M(308513, J$.R(308465, 'server', server, false, false), 'once', false)(J$.T(308473, 'close', 21, false), J$.F(308505, J$.R(308481, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(308489, 'self', self, false, false), J$.T(308497, 'close', 21, false)));
                                                            J$.M(308569, J$.R(308521, 'server', server, false, false), 'once', false)(J$.T(308529, 'timeout', 21, false), J$.F(308561, J$.R(308537, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(308545, 'self', self, false, false), J$.T(308553, 'timeout', 21, false)));
                                                            J$.M(308625, J$.R(308577, 'server', server, false, false), 'once', false)(J$.T(308585, 'parseError', 21, false), J$.F(308617, J$.R(308593, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(308601, 'self', self, false, false), J$.T(308609, 'parseError', 21, false)));
                                                            J$.M(308681, J$.R(308633, 'server', server, false, false), 'once', false)(J$.T(308641, 'error', 21, false), J$.F(308673, J$.R(308649, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(308657, 'self', self, false, false), J$.T(308665, 'error', 21, false)));
                                                            J$.M(308737, J$.R(308689, 'server', server, false, false), 'once', false)(J$.T(308697, 'connect', 21, false), J$.F(308729, J$.R(308705, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(308713, 'self', self, false, false), J$.T(308721, 'connect', 21, false)));
                                                            J$.F(308801, J$.R(308745, 'relayEvents', relayEvents, false, true), false)(J$.R(308753, 'server', server, false, false), J$.R(308761, 'self', self, false, false), J$.T(308793, [
                                                                J$.T(308769, 'commandStarted', 21, false),
                                                                J$.T(308777, 'commandSucceeded', 21, false),
                                                                J$.T(308785, 'commandFailed', 21, false)
                                                            ], 10, false));
                                                            J$.M(308841, J$.R(308809, 'server', server, false, false), 'connect', false)(J$.G(308833, J$.G(308825, J$.R(308817, 'self', self, false, false), 's'), 'connectOptions'));
                                                        } catch (J$e) {
                                                            J$.Ex(322633, J$e);
                                                        } finally {
                                                            if (J$.Fr(322641))
                                                                continue jalangiLabel15;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.R(308873, 'timeoutInterval', timeoutInterval, false, false));
                                        } catch (J$e) {
                                            J$.Ex(322649, J$e);
                                        } finally {
                                            if (J$.Fr(322657))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(309025, 'arguments', arguments, true, false, false);
                            self = J$.N(309033, 'self', self, true, false, false);
                            servers = J$.N(309041, 'servers', servers, true, false, false);
                            J$.N(309049, 'timeoutInterval', timeoutInterval, false, false, false);
                            connect = J$.N(309065, 'connect', J$.T(309057, connect, 12, false), true, false, false);
                            J$.P(308345, J$.R(308305, 'self', self, false, false), 'connectingProxies', J$.M(308337, J$.G(308321, J$.R(308313, 'self', self, false, false), 'connectingProxies'), 'concat', false)(J$.R(308329, 'servers', servers, false, false)));
                            var timeoutInterval = J$.W(308361, 'timeoutInterval', J$.T(308353, 0, 22, false), timeoutInterval, false, false);
                            J$.M(309009, J$.R(308921, 'servers', servers, false, false), 'forEach', false)(J$.T(309001, function (server) {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(308977, arguments.callee, this, arguments);
                                            arguments = J$.N(308985, 'arguments', arguments, true, false, false);
                                            server = J$.N(308993, 'server', server, true, false, false);
                                            return J$.Rt(308969, J$.F(308961, J$.R(308929, 'connect', connect, false, false), false)(J$.R(308937, 'server', server, false, false), J$.B(18770, '-', timeoutInterval = J$.W(308953, 'timeoutInterval', J$.B(18762, '+', J$.U(18754, '+', J$.R(308945, 'timeoutInterval', timeoutInterval, false, false)), 1), timeoutInterval, false, false), 1)));
                                        } catch (J$e) {
                                            J$.Ex(322665, J$e);
                                        } finally {
                                            if (J$.Fr(322673))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(322681, J$e);
                        } finally {
                            if (J$.Fr(322689))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pickProxy(self, session) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(309793, arguments.callee, this, arguments);
                            arguments = J$.N(309801, 'arguments', arguments, true, false, false);
                            self = J$.N(309809, 'self', self, true, false, false);
                            session = J$.N(309817, 'session', session, true, false, false);
                            J$.N(309825, 'transaction', transaction, false, false, false);
                            J$.N(309833, 'connectedProxies', connectedProxies, false, false, false);
                            J$.N(309841, 'lowerBoundLatency', lowerBoundLatency, false, false, false);
                            J$.N(309849, 'i', i, false, false, false);
                            J$.N(309857, 'proxy', proxy, false, false, false);
                            var transaction = J$.W(309097, 'transaction', J$.C(17928, J$.R(309073, 'session', session, false, false)) ? J$.G(309089, J$.R(309081, 'session', session, false, false), 'transaction') : J$._(), transaction, false, false);
                            if (J$.C(17952, J$.C(17936, J$.R(309105, 'transaction', transaction, false, false)) ? J$.G(309121, J$.R(309113, 'transaction', transaction, false, false), 'server') : J$._())) {
                                if (J$.C(17944, J$.M(309145, J$.G(309137, J$.R(309129, 'transaction', transaction, false, false), 'server'), 'isConnected', false)())) {
                                    return J$.Rt(309169, J$.G(309161, J$.R(309153, 'transaction', transaction, false, false), 'server'));
                                } else {
                                    J$.M(309185, J$.R(309177, 'transaction', transaction, false, false), 'unpinServer', false)();
                                }
                            }
                            var connectedProxies = J$.W(309225, 'connectedProxies', J$.M(309217, J$.G(309201, J$.R(309193, 'self', self, false, false), 'connectedProxies'), 'slice', false)(J$.T(309209, 0, 22, false)), connectedProxies, false, false);
                            var lowerBoundLatency = J$.W(309249, 'lowerBoundLatency', J$.G(309241, J$.I(typeof Number === 'undefined' ? Number = J$.R(309233, 'Number', undefined, true, true) : Number = J$.R(309233, 'Number', Number, true, true)), 'MAX_VALUE'), lowerBoundLatency, false, false);
                            for (var i = J$.W(309265, 'i', J$.T(309257, 0, 22, false), i, false, false); J$.C(17968, J$.B(18778, '<', J$.R(309273, 'i', i, false, false), J$.G(309289, J$.R(309281, 'connectedProxies', connectedProxies, false, false), 'length'))); J$.B(18802, '-', i = J$.W(309305, 'i', J$.B(18794, '+', J$.U(18786, '+', J$.R(309297, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(17960, J$.B(18810, '<', J$.G(309337, J$.G(309329, J$.R(309313, 'connectedProxies', connectedProxies, false, false), J$.R(309321, 'i', i, false, false)), 'lastIsMasterMS'), J$.R(309345, 'lowerBoundLatency', lowerBoundLatency, false, false)))) {
                                    lowerBoundLatency = J$.W(309385, 'lowerBoundLatency', J$.G(309377, J$.G(309369, J$.R(309353, 'connectedProxies', connectedProxies, false, false), J$.R(309361, 'i', i, false, false)), 'lastIsMasterMS'), lowerBoundLatency, false, false);
                                }
                            }
                            connectedProxies = J$.W(309521, 'connectedProxies', J$.M(309513, J$.R(309393, 'connectedProxies', connectedProxies, false, false), 'filter', false)(J$.T(309505, function (server) {
                                jalangiLabel19:
                                    while (true) {
                                        try {
                                            J$.Fe(309481, arguments.callee, this, arguments);
                                            arguments = J$.N(309489, 'arguments', arguments, true, false, false);
                                            server = J$.N(309497, 'server', server, true, false, false);
                                            if (J$.C(17984, J$.C(17976, J$.B(18826, '<=', J$.G(309409, J$.R(309401, 'server', server, false, false), 'lastIsMasterMS'), J$.B(18818, '+', J$.R(309417, 'lowerBoundLatency', lowerBoundLatency, false, false), J$.G(309441, J$.G(309433, J$.R(309425, 'self', self, false, false), 's'), 'localThresholdMS')))) ? J$.M(309457, J$.R(309449, 'server', server, false, false), 'isConnected', false)() : J$._())) {
                                                return J$.Rt(309473, J$.T(309465, true, 23, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(322697, J$e);
                                        } finally {
                                            if (J$.Fr(322705))
                                                continue jalangiLabel19;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), connectedProxies, false, false);
                            var proxy;
                            if (J$.C(17992, J$.B(18834, '===', J$.G(309537, J$.R(309529, 'connectedProxies', connectedProxies, false, false), 'length'), J$.T(309545, 0, 22, false)))) {
                                proxy = J$.W(309585, 'proxy', J$.G(309577, J$.G(309561, J$.R(309553, 'self', self, false, false), 'connectedProxies'), J$.T(309569, 0, 22, false)), proxy, false, false);
                            } else {
                                proxy = J$.W(309641, 'proxy', J$.G(309633, J$.R(309593, 'connectedProxies', connectedProxies, false, false), J$.B(18842, '%', J$.G(309609, J$.R(309601, 'self', self, false, false), 'index'), J$.G(309625, J$.R(309617, 'connectedProxies', connectedProxies, false, false), 'length'))), proxy, false, false);
                                J$.P(309697, J$.R(309649, 'self', self, false, false), 'index', J$.B(18858, '%', J$.B(18850, '+', J$.G(309665, J$.R(309657, 'self', self, false, false), 'index'), J$.T(309673, 1, 22, false)), J$.G(309689, J$.R(309681, 'connectedProxies', connectedProxies, false, false), 'length')));
                            }
                            if (J$.C(18024, J$.C(18016, J$.C(18008, J$.C(18000, J$.R(309705, 'transaction', transaction, false, false)) ? J$.G(309721, J$.R(309713, 'transaction', transaction, false, false), 'isActive') : J$._()) ? J$.R(309729, 'proxy', proxy, false, false) : J$._()) ? J$.M(309745, J$.R(309737, 'proxy', proxy, false, false), 'isConnected', false)() : J$._())) {
                                J$.M(309769, J$.R(309753, 'transaction', transaction, false, false), 'pinServer', false)(J$.R(309761, 'proxy', proxy, false, false));
                            }
                            return J$.Rt(309785, J$.R(309777, 'proxy', proxy, false, false));
                        } catch (J$e) {
                            J$.Ex(322713, J$e);
                        } finally {
                            if (J$.Fr(322721))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function moveServerFrom(from, to, proxy) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(310161, arguments.callee, this, arguments);
                            arguments = J$.N(310169, 'arguments', arguments, true, false, false);
                            from = J$.N(310177, 'from', from, true, false, false);
                            to = J$.N(310185, 'to', to, true, false, false);
                            proxy = J$.N(310193, 'proxy', proxy, true, false, false);
                            J$.N(310201, 'i', i, false, false, false);
                            for (var i = J$.W(309873, 'i', J$.T(309865, 0, 22, false), i, false, false); J$.C(18040, J$.B(18866, '<', J$.R(309881, 'i', i, false, false), J$.G(309897, J$.R(309889, 'from', from, false, false), 'length'))); J$.B(18890, '-', i = J$.W(309913, 'i', J$.B(18882, '+', J$.U(18874, '+', J$.R(309905, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(18032, J$.B(18898, '===', J$.G(309945, J$.G(309937, J$.R(309921, 'from', from, false, false), J$.R(309929, 'i', i, false, false)), 'name'), J$.G(309961, J$.R(309953, 'proxy', proxy, false, false), 'name')))) {
                                    J$.M(309993, J$.R(309969, 'from', from, false, false), 'splice', false)(J$.R(309977, 'i', i, false, false), J$.T(309985, 1, 22, false));
                                }
                            }
                            for (i = J$.W(310009, 'i', J$.T(310001, 0, 22, false), i, false, false); J$.C(18056, J$.B(18906, '<', J$.R(310017, 'i', i, false, false), J$.G(310033, J$.R(310025, 'to', to, false, false), 'length'))); J$.B(18930, '-', i = J$.W(310049, 'i', J$.B(18922, '+', J$.U(18914, '+', J$.R(310041, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(18048, J$.B(18938, '===', J$.G(310081, J$.G(310073, J$.R(310057, 'to', to, false, false), J$.R(310065, 'i', i, false, false)), 'name'), J$.G(310097, J$.R(310089, 'proxy', proxy, false, false), 'name')))) {
                                    J$.M(310129, J$.R(310105, 'to', to, false, false), 'splice', false)(J$.R(310113, 'i', i, false, false), J$.T(310121, 1, 22, false));
                                }
                            }
                            J$.M(310153, J$.R(310137, 'to', to, false, false), 'push', false)(J$.R(310145, 'proxy', proxy, false, false));
                        } catch (J$e) {
                            J$.Ex(322729, J$e);
                        } finally {
                            if (J$.Fr(322737))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function removeProxyFrom(from, proxy) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(310345, arguments.callee, this, arguments);
                            arguments = J$.N(310353, 'arguments', arguments, true, false, false);
                            from = J$.N(310361, 'from', from, true, false, false);
                            proxy = J$.N(310369, 'proxy', proxy, true, false, false);
                            J$.N(310377, 'i', i, false, false, false);
                            for (var i = J$.W(310217, 'i', J$.T(310209, 0, 22, false), i, false, false); J$.C(18072, J$.B(18946, '<', J$.R(310225, 'i', i, false, false), J$.G(310241, J$.R(310233, 'from', from, false, false), 'length'))); J$.B(18970, '-', i = J$.W(310257, 'i', J$.B(18962, '+', J$.U(18954, '+', J$.R(310249, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(18064, J$.B(18978, '===', J$.G(310289, J$.G(310281, J$.R(310265, 'from', from, false, false), J$.R(310273, 'i', i, false, false)), 'name'), J$.G(310305, J$.R(310297, 'proxy', proxy, false, false), 'name')))) {
                                    J$.M(310337, J$.R(310313, 'from', from, false, false), 'splice', false)(J$.R(310321, 'i', i, false, false), J$.T(310329, 1, 22, false));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(322745, J$e);
                        } finally {
                            if (J$.Fr(322753))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function reconnectProxies(self, proxies, callback) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(312649, arguments.callee, this, arguments);
                            function execute(_server, i) {
                                jalangiLabel26:
                                    while (true) {
                                        try {
                                            J$.Fe(312513, arguments.callee, this, arguments);
                                            arguments = J$.N(312521, 'arguments', arguments, true, false, false);
                                            _server = J$.N(312529, '_server', _server, true, false, false);
                                            i = J$.N(312537, 'i', i, true, false, false);
                                            J$.F(312505, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(311449, 'setTimeout', undefined, true, true) : setTimeout = J$.R(311449, 'setTimeout', setTimeout, true, true)), false)(J$.T(312489, function () {
                                                jalangiLabel25:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(312465, arguments.callee, this, arguments);
                                                            arguments = J$.N(312473, 'arguments', arguments, true, false, false);
                                                            J$.N(312481, 'server', server, false, false, false);
                                                            if (J$.C(18176, J$.C(18168, J$.C(18160, J$.B(19098, '===', J$.G(311465, J$.R(311457, 'self', self, false, false), 'state'), J$.R(311473, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(19106, '===', J$.G(311489, J$.R(311481, 'self', self, false, false), 'state'), J$.R(311497, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(19114, '===', J$.G(311513, J$.R(311505, 'self', self, false, false), 'state'), J$.R(311521, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                return J$.Rt(311529, undefined);
                                                            }
                                                            var server = J$.W(311793, 'server', J$.F(311785, J$.R(311537, 'Server', Server, false, true), true)(J$.M(311777, J$.I(typeof Object === 'undefined' ? Object = J$.R(311545, 'Object', undefined, true, true) : Object = J$.R(311545, 'Object', Object, true, true)), 'assign', false)(J$.T(311553, {}, 11, false), J$.G(311577, J$.G(311569, J$.R(311561, 'self', self, false, false), 's'), 'options'), J$.T(311769, {
                                                                host: J$.G(311625, J$.M(311609, J$.G(311593, J$.R(311585, '_server', _server, false, false), 'name'), 'split', false)(J$.T(311601, ':', 21, false)), J$.T(311617, 0, 22, false)),
                                                                port: J$.F(311697, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(311633, 'parseInt', undefined, true, true) : parseInt = J$.R(311633, 'parseInt', parseInt, true, true)), false)(J$.G(311681, J$.M(311665, J$.G(311649, J$.R(311641, '_server', _server, false, false), 'name'), 'split', false)(J$.T(311657, ':', 21, false)), J$.T(311673, 1, 22, false)), J$.T(311689, 10, 22, false)),
                                                                reconnect: J$.T(311705, false, 23, false),
                                                                monitoring: J$.T(311713, false, 23, false),
                                                                parent: J$.R(311721, 'self', self, false, false),
                                                                clientInfo: J$.F(311761, J$.R(311729, 'clone', clone, false, true), false)(J$.G(311753, J$.G(311745, J$.R(311737, 'self', self, false, false), 's'), 'clientInfo'))
                                                            }, 11, false))), server, false, false);
                                                            J$.F(311833, J$.R(311801, 'destroyServer', destroyServer, false, true), false)(J$.R(311809, '_server', _server, false, false), J$.T(311825, { force: J$.T(311817, true, 23, false) }, 11, false));
                                                            J$.F(311873, J$.R(311841, 'removeProxyFrom', removeProxyFrom, false, true), false)(J$.G(311857, J$.R(311849, 'self', self, false, false), 'disconnectedProxies'), J$.R(311865, '_server', _server, false, false));
                                                            J$.F(311921, J$.R(311881, 'relayEvents', relayEvents, false, true), false)(J$.R(311889, 'server', server, false, false), J$.R(311897, 'self', self, false, false), J$.T(311913, [J$.T(311905, 'serverDescriptionChanged', 21, false)], 10, false));
                                                            J$.M(312041, J$.R(311929, 'self', self, false, false), 'emit', false)(J$.T(311937, 'serverOpening', 21, false), J$.T(312033, {
                                                                topologyId: J$.C(18184, J$.B(19130, '!==', J$.G(311961, J$.G(311953, J$.R(311945, 'server', server, false, false), 's'), 'topologyId'), J$.U(19122, '-', J$.T(311969, 1, 22, false)))) ? J$.G(311993, J$.G(311985, J$.R(311977, 'server', server, false, false), 's'), 'topologyId') : J$.G(312009, J$.R(312001, 'self', self, false, false), 'id'),
                                                                address: J$.G(312025, J$.R(312017, 'server', server, false, false), 'name')
                                                            }, 11, false));
                                                            J$.M(312097, J$.R(312049, 'server', server, false, false), 'once', false)(J$.T(312057, 'connect', 21, false), J$.F(312089, J$.R(312065, '_handleEvent', _handleEvent, false, false), false)(J$.R(312073, 'self', self, false, false), J$.T(312081, 'connect', 21, false)));
                                                            J$.M(312153, J$.R(312105, 'server', server, false, false), 'once', false)(J$.T(312113, 'close', 21, false), J$.F(312145, J$.R(312121, '_handleEvent', _handleEvent, false, false), false)(J$.R(312129, 'self', self, false, false), J$.T(312137, 'close', 21, false)));
                                                            J$.M(312209, J$.R(312161, 'server', server, false, false), 'once', false)(J$.T(312169, 'timeout', 21, false), J$.F(312201, J$.R(312177, '_handleEvent', _handleEvent, false, false), false)(J$.R(312185, 'self', self, false, false), J$.T(312193, 'timeout', 21, false)));
                                                            J$.M(312265, J$.R(312217, 'server', server, false, false), 'once', false)(J$.T(312225, 'error', 21, false), J$.F(312257, J$.R(312233, '_handleEvent', _handleEvent, false, false), false)(J$.R(312241, 'self', self, false, false), J$.T(312249, 'error', 21, false)));
                                                            J$.M(312321, J$.R(312273, 'server', server, false, false), 'once', false)(J$.T(312281, 'parseError', 21, false), J$.F(312313, J$.R(312289, '_handleEvent', _handleEvent, false, false), false)(J$.R(312297, 'self', self, false, false), J$.T(312305, 'parseError', 21, false)));
                                                            J$.F(312385, J$.R(312329, 'relayEvents', relayEvents, false, true), false)(J$.R(312337, 'server', server, false, false), J$.R(312345, 'self', self, false, false), J$.T(312377, [
                                                                J$.T(312353, 'commandStarted', 21, false),
                                                                J$.T(312361, 'commandSucceeded', 21, false),
                                                                J$.T(312369, 'commandFailed', 21, false)
                                                            ], 10, false));
                                                            J$.M(312417, J$.G(312401, J$.R(312393, 'self', self, false, false), 'connectingProxies'), 'push', false)(J$.R(312409, 'server', server, false, false));
                                                            J$.M(312457, J$.R(312425, 'server', server, false, false), 'connect', false)(J$.G(312449, J$.G(312441, J$.R(312433, 'self', self, false, false), 's'), 'connectOptions'));
                                                        } catch (J$e) {
                                                            J$.Ex(322793, J$e);
                                                        } finally {
                                                            if (J$.Fr(322801))
                                                                continue jalangiLabel25;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.R(312497, 'i', i, false, false));
                                        } catch (J$e) {
                                            J$.Ex(322809, J$e);
                                        } finally {
                                            if (J$.Fr(322817))
                                                continue jalangiLabel26;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(312657, 'arguments', arguments, true, false, false);
                            self = J$.N(312665, 'self', self, true, false, false);
                            proxies = J$.N(312673, 'proxies', proxies, true, false, false);
                            callback = J$.N(312681, 'callback', callback, true, false, false);
                            J$.N(312689, 'count', count, false, false, false);
                            J$.N(312697, '_handleEvent', _handleEvent, false, false, false);
                            execute = J$.N(312713, 'execute', J$.T(312705, execute, 12, false), true, false, false);
                            J$.N(312721, 'i', i, false, false, false);
                            var count = J$.W(310401, 'count', J$.G(310393, J$.R(310385, 'proxies', proxies, false, false), 'length'), count, false, false);
                            var _handleEvent = J$.W(311401, '_handleEvent', J$.T(311393, function _handleEvent(self, event) {
                                jalangiLabel24:
                                    while (true) {
                                        try {
                                            J$.Fe(311361, arguments.callee, this, arguments);
                                            arguments = J$.N(311369, 'arguments', arguments, true, false, false);
                                            self = J$.N(311377, 'self', self, true, false, false);
                                            event = J$.N(311385, 'event', event, true, false, false);
                                            return J$.Rt(311353, J$.T(311345, function () {
                                                jalangiLabel23:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(311313, arguments.callee, this, arguments);
                                                            arguments = J$.N(311321, 'arguments', arguments, true, false, false);
                                                            J$.N(311329, '_self', _self, false, false, false);
                                                            J$.N(311337, 'i', i, false, false, false);
                                                            var _self = J$.W(310417, '_self', J$.R(310409, 'this', this, false, false), _self, false, false);
                                                            count = J$.W(310441, 'count', J$.B(18986, '-', J$.R(310425, 'count', count, false, false), J$.T(310433, 1, 22, false)), count, false, false);
                                                            if (J$.C(18096, J$.C(18088, J$.C(18080, J$.B(18994, '===', J$.G(310457, J$.R(310449, 'self', self, false, false), 'state'), J$.R(310465, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(19002, '===', J$.G(310481, J$.R(310473, 'self', self, false, false), 'state'), J$.R(310489, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(19010, '===', J$.G(310505, J$.R(310497, 'self', self, false, false), 'state'), J$.R(310513, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                J$.F(310569, J$.R(310521, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(310537, J$.R(310529, 'self', self, false, false), 'connectingProxies'), J$.G(310553, J$.R(310545, 'self', self, false, false), 'disconnectedProxies'), J$.R(310561, '_self', _self, false, false));
                                                                return J$.Rt(310593, J$.M(310585, J$.R(310577, 'this', this, false, false), 'destroy', false)());
                                                            }
                                                            if (J$.C(18136, J$.B(19018, '===', J$.R(310601, 'event', event, false, false), J$.T(310609, 'connect', 21, false)))) {
                                                                if (J$.C(18120, J$.C(18112, J$.C(18104, J$.B(19026, '===', J$.G(310625, J$.R(310617, 'self', self, false, false), 'state'), J$.R(310633, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(19034, '===', J$.G(310649, J$.R(310641, 'self', self, false, false), 'state'), J$.R(310657, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(19042, '===', J$.G(310673, J$.R(310665, 'self', self, false, false), 'state'), J$.R(310681, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                    J$.F(310737, J$.R(310689, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(310705, J$.R(310697, 'self', self, false, false), 'connectingProxies'), J$.G(310721, J$.R(310713, 'self', self, false, false), 'disconnectedProxies'), J$.R(310729, '_self', _self, false, false));
                                                                    return J$.Rt(310761, J$.M(310753, J$.R(310745, '_self', _self, false, false), 'destroy', false)());
                                                                }
                                                                for (var i = J$.W(310777, 'i', J$.T(310769, 0, 22, false), i, false, false); J$.C(18128, J$.B(19050, '<', J$.R(310785, 'i', i, false, false), J$.G(310801, J$.R(310793, 'handlers', handlers, false, true), 'length'))); J$.B(19074, '-', i = J$.W(310817, 'i', J$.B(19066, '+', J$.U(19058, '+', J$.R(310809, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                                    J$.M(310857, J$.R(310825, '_self', _self, false, false), 'removeAllListeners', false)(J$.G(310849, J$.R(310833, 'handlers', handlers, false, true), J$.R(310841, 'i', i, false, false)));
                                                                }
                                                                J$.M(310913, J$.R(310865, '_self', _self, false, false), 'on', false)(J$.T(310873, 'error', 21, false), J$.F(310905, J$.R(310881, 'handleEvent', handleEvent, false, true), false)(J$.R(310889, 'self', self, false, false), J$.T(310897, 'error', 21, false)));
                                                                J$.M(310969, J$.R(310921, '_self', _self, false, false), 'on', false)(J$.T(310929, 'close', 21, false), J$.F(310961, J$.R(310937, 'handleEvent', handleEvent, false, true), false)(J$.R(310945, 'self', self, false, false), J$.T(310953, 'close', 21, false)));
                                                                J$.M(311025, J$.R(310977, '_self', _self, false, false), 'on', false)(J$.T(310985, 'timeout', 21, false), J$.F(311017, J$.R(310993, 'handleEvent', handleEvent, false, true), false)(J$.R(311001, 'self', self, false, false), J$.T(311009, 'timeout', 21, false)));
                                                                J$.M(311081, J$.R(311033, '_self', _self, false, false), 'on', false)(J$.T(311041, 'parseError', 21, false), J$.F(311073, J$.R(311049, 'handleEvent', handleEvent, false, true), false)(J$.R(311057, 'self', self, false, false), J$.T(311065, 'parseError', 21, false)));
                                                                J$.F(311137, J$.R(311089, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(311105, J$.R(311097, 'self', self, false, false), 'connectingProxies'), J$.G(311121, J$.R(311113, 'self', self, false, false), 'connectedProxies'), J$.R(311129, '_self', _self, false, false));
                                                                J$.F(311161, J$.R(311145, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(311153, 'self', self, false, false));
                                                                J$.M(311201, J$.R(311169, 'self', self, false, false), 'emit', false)(J$.T(311177, 'joined', 21, false), J$.T(311185, 'mongos', 21, false), J$.R(311193, '_self', _self, false, false));
                                                            } else {
                                                                J$.F(311257, J$.R(311209, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(311225, J$.R(311217, 'self', self, false, false), 'connectingProxies'), J$.G(311241, J$.R(311233, 'self', self, false, false), 'disconnectedProxies'), J$.R(311249, '_self', _self, false, false));
                                                                J$.M(311273, J$.R(311265, 'this', this, false, false), 'destroy', false)();
                                                            }
                                                            if (J$.C(18144, J$.B(19082, '===', J$.R(311281, 'count', count, false, false), J$.T(311289, 0, 22, false)))) {
                                                                J$.F(311305, J$.R(311297, 'callback', callback, false, false), false)();
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(322761, J$e);
                                                        } finally {
                                                            if (J$.Fr(322769))
                                                                continue jalangiLabel23;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(322777, J$e);
                                        } finally {
                                            if (J$.Fr(322785))
                                                continue jalangiLabel24;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _handleEvent, false, false);
                            if (J$.C(18152, J$.B(19090, '===', J$.R(311409, 'count', count, false, false), J$.T(311417, 0, 22, false)))) {
                                return J$.Rt(311441, J$.F(311433, J$.R(311425, 'callback', callback, false, false), false)());
                            }
                            for (var i = J$.W(312553, 'i', J$.T(312545, 0, 22, false), i, false, false); J$.C(18192, J$.B(19138, '<', J$.R(312561, 'i', i, false, false), J$.G(312577, J$.R(312569, 'proxies', proxies, false, false), 'length'))); J$.B(19162, '-', i = J$.W(312593, 'i', J$.B(19154, '+', J$.U(19146, '+', J$.R(312585, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.F(312641, J$.R(312601, 'execute', execute, false, false), false)(J$.G(312625, J$.R(312609, 'proxies', proxies, false, false), J$.R(312617, 'i', i, false, false)), J$.R(312633, 'i', i, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(322825, J$e);
                        } finally {
                            if (J$.Fr(322833))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function topologyMonitor(self, options) {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(315009, arguments.callee, this, arguments);
                            arguments = J$.N(315017, 'arguments', arguments, true, false, false);
                            self = J$.N(315025, 'self', self, true, false, false);
                            options = J$.N(315033, 'options', options, true, false, false);
                            options = J$.W(312745, 'options', J$.C(18200, J$.R(312729, 'options', options, false, false)) ? J$._() : J$.T(312737, {}, 11, false), options, false, false);
                            if (J$.C(18224, J$.C(18216, J$.C(18208, J$.B(19170, '===', J$.G(312761, J$.R(312753, 'self', self, false, false), 'state'), J$.R(312769, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(19178, '===', J$.G(312785, J$.R(312777, 'self', self, false, false), 'state'), J$.R(312793, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(19186, '===', J$.G(312809, J$.R(312801, 'self', self, false, false), 'state'), J$.R(312817, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                return J$.Rt(312825, undefined);
                            }
                            J$.P(315001, J$.R(312833, 'self', self, false, false), 'haTimeoutId', J$.F(314993, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(312841, 'setTimeout', undefined, true, true) : setTimeout = J$.R(312841, 'setTimeout', setTimeout, true, true)), false)(J$.T(314961, function () {
                                jalangiLabel33:
                                    while (true) {
                                        try {
                                            J$.Fe(314905, arguments.callee, this, arguments);
                                            function pingServer(_self, _server, cb) {
                                                jalangiLabel29:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(313825, arguments.callee, this, arguments);
                                                            arguments = J$.N(313833, 'arguments', arguments, true, false, false);
                                                            _self = J$.N(313841, '_self', _self, true, false, false);
                                                            _server = J$.N(313849, '_server', _server, true, false, false);
                                                            cb = J$.N(313857, 'cb', cb, true, false, false);
                                                            J$.N(313865, 'start', start, false, false, false);
                                                            var start = J$.W(313089, 'start', J$.M(313081, J$.F(313073, J$.I(typeof Date === 'undefined' ? Date = J$.R(313065, 'Date', undefined, true, true) : Date = J$.R(313065, 'Date', Date, true, true)), true)(), 'getTime', false)(), start, false, false);
                                                            J$.F(313145, J$.R(313097, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(313105, 'self', self, false, false), J$.T(313113, 'serverHeartbeatStarted', 21, false), J$.T(313137, { connectionId: J$.G(313129, J$.R(313121, '_server', _server, false, false), 'name') }, 11, false));
                                                            J$.M(313817, J$.R(313153, '_server', _server, false, false), 'command', false)(J$.T(313161, 'admin.$cmd', 21, false), J$.T(313177, { ismaster: J$.T(313169, true, 23, false) }, 11, false), J$.T(313233, {
                                                                monitoring: J$.T(313185, true, 23, false),
                                                                socketTimeout: J$.C(18272, J$.G(313217, J$.G(313209, J$.G(313201, J$.R(313193, 'self', self, false, false), 's'), 'options'), 'connectionTimeout')) ? J$._() : J$.T(313225, 2000, 22, false)
                                                            }, 11, false), J$.T(313809, function (err, r) {
                                                                jalangiLabel28:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(313769, arguments.callee, this, arguments);
                                                                            arguments = J$.N(313777, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(313785, 'err', err, true, false, false);
                                                                            r = J$.N(313793, 'r', r, true, false, false);
                                                                            J$.N(313801, 'latencyMS', latencyMS, false, false, false);
                                                                            if (J$.C(18296, J$.C(18288, J$.C(18280, J$.B(19218, '===', J$.G(313249, J$.R(313241, 'self', self, false, false), 'state'), J$.R(313257, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(19226, '===', J$.G(313273, J$.R(313265, 'self', self, false, false), 'state'), J$.R(313281, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(19234, '===', J$.G(313297, J$.R(313289, 'self', self, false, false), 'state'), J$.R(313305, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                                J$.F(313361, J$.R(313313, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(313329, J$.R(313321, 'self', self, false, false), 'connectedProxies'), J$.G(313345, J$.R(313337, 'self', self, false, false), 'disconnectedProxies'), J$.R(313353, '_server', _server, false, false));
                                                                                J$.M(313377, J$.R(313369, '_server', _server, false, false), 'destroy', false)();
                                                                                return J$.Rt(313417, J$.F(313409, J$.R(313385, 'cb', cb, false, false), false)(J$.R(313393, 'err', err, false, false), J$.R(313401, 'r', r, false, false)));
                                                                            }
                                                                            var latencyMS = J$.W(313457, 'latencyMS', J$.B(19242, '-', J$.M(313441, J$.F(313433, J$.I(typeof Date === 'undefined' ? Date = J$.R(313425, 'Date', undefined, true, true) : Date = J$.R(313425, 'Date', Date, true, true)), true)(), 'getTime', false)(), J$.R(313449, 'start', start, false, false)), latencyMS, false, false);
                                                                            if (J$.C(18304, J$.R(313465, 'err', err, false, false))) {
                                                                                J$.F(313537, J$.R(313473, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(313481, 'self', self, false, false), J$.T(313489, 'serverHeartbeatFailed', 21, false), J$.T(313529, {
                                                                                    durationMS: J$.R(313497, 'latencyMS', latencyMS, false, false),
                                                                                    failure: J$.R(313505, 'err', err, false, false),
                                                                                    connectionId: J$.G(313521, J$.R(313513, '_server', _server, false, false), 'name')
                                                                                }, 11, false));
                                                                                J$.F(313593, J$.R(313545, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(313561, J$.R(313553, 'self', self, false, false), 'connectedProxies'), J$.G(313577, J$.R(313569, 'self', self, false, false), 'disconnectedProxies'), J$.R(313585, '_server', _server, false, false));
                                                                            } else {
                                                                                J$.P(313625, J$.R(313601, '_server', _server, false, false), 'ismaster', J$.G(313617, J$.R(313609, 'r', r, false, false), 'result'));
                                                                                J$.P(313649, J$.R(313633, '_server', _server, false, false), 'lastIsMasterMS', J$.R(313641, 'latencyMS', latencyMS, false, false));
                                                                                J$.F(313729, J$.R(313657, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(313665, 'self', self, false, false), J$.T(313673, 'serverHeartbeatSucceeded', 21, false), J$.T(313721, {
                                                                                    durationMS: J$.R(313681, 'latencyMS', latencyMS, false, false),
                                                                                    reply: J$.G(313697, J$.R(313689, 'r', r, false, false), 'result'),
                                                                                    connectionId: J$.G(313713, J$.R(313705, '_server', _server, false, false), 'name')
                                                                                }, 11, false));
                                                                            }
                                                                            J$.F(313761, J$.R(313737, 'cb', cb, false, false), false)(J$.R(313745, 'err', err, false, false), J$.R(313753, 'r', r, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(322841, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(322849))
                                                                                continue jalangiLabel28;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(322857, J$e);
                                                        } finally {
                                                            if (J$.Fr(322865))
                                                                continue jalangiLabel29;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(314913, 'arguments', arguments, true, false, false);
                                            J$.N(314921, 'proxies', proxies, false, false, false);
                                            J$.N(314929, 'count', count, false, false, false);
                                            pingServer = J$.N(314945, 'pingServer', J$.T(314937, pingServer, 12, false), true, false, false);
                                            J$.N(314953, 'i', i, false, false, false);
                                            if (J$.C(18248, J$.C(18240, J$.C(18232, J$.B(19194, '===', J$.G(312857, J$.R(312849, 'self', self, false, false), 'state'), J$.R(312865, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(19202, '===', J$.G(312881, J$.R(312873, 'self', self, false, false), 'state'), J$.R(312889, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(19210, '===', J$.G(312905, J$.R(312897, 'self', self, false, false), 'state'), J$.R(312913, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                return J$.Rt(312921, undefined);
                                            }
                                            if (J$.C(18264, J$.C(18256, J$.M(312937, J$.R(312929, 'self', self, false, false), 'isConnected', false)()) ? J$.G(312961, J$.G(312953, J$.R(312945, 'self', self, false, false), 's'), 'disconnectHandler') : J$._())) {
                                                J$.M(312993, J$.G(312985, J$.G(312977, J$.R(312969, 'self', self, false, false), 's'), 'disconnectHandler'), 'execute', false)();
                                            }
                                            var proxies = J$.W(313033, 'proxies', J$.M(313025, J$.G(313009, J$.R(313001, 'self', self, false, false), 'connectedProxies'), 'slice', false)(J$.T(313017, 0, 22, false)), proxies, false, false);
                                            var count = J$.W(313057, 'count', J$.G(313049, J$.R(313041, 'proxies', proxies, false, false), 'length'), count, false, false);
                                            if (J$.C(18392, J$.B(19250, '===', J$.G(313881, J$.R(313873, 'proxies', proxies, false, false), 'length'), J$.T(313889, 0, 22, false)))) {
                                                if (J$.C(18320, J$.C(18312, J$.B(19258, '>', J$.G(313921, J$.M(313913, J$.R(313897, 'self', self, false, false), 'listeners', false)(J$.T(313905, 'close', 21, false)), 'length'), J$.T(313929, 0, 22, false))) ? J$.B(19266, '===', J$.G(313945, J$.R(313937, 'self', self, false, false), 'state'), J$.R(313953, 'CONNECTING', CONNECTING, false, true)) : J$._())) {
                                                    J$.M(314001, J$.R(313961, 'self', self, false, false), 'emit', false)(J$.T(313969, 'error', 21, false), J$.F(313993, J$.R(313977, 'MongoError', MongoError, false, true), true)(J$.T(313985, 'no mongos proxy available', 21, false)));
                                                } else {
                                                    J$.M(314033, J$.R(314009, 'self', self, false, false), 'emit', false)(J$.T(314017, 'close', 21, false), J$.R(314025, 'self', self, false, false));
                                                }
                                                return J$.Rt(314481, J$.F(314473, J$.R(314041, 'reconnectProxies', reconnectProxies, false, true), false)(J$.R(314049, 'self', self, false, false), J$.G(314065, J$.R(314057, 'self', self, false, false), 'disconnectedProxies'), J$.T(314465, function () {
                                                    jalangiLabel30:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(314449, arguments.callee, this, arguments);
                                                                arguments = J$.N(314457, 'arguments', arguments, true, false, false);
                                                                if (J$.C(18344, J$.C(18336, J$.C(18328, J$.B(19274, '===', J$.G(314081, J$.R(314073, 'self', self, false, false), 'state'), J$.R(314089, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(19282, '===', J$.G(314105, J$.R(314097, 'self', self, false, false), 'state'), J$.R(314113, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(19290, '===', J$.G(314129, J$.R(314121, 'self', self, false, false), 'state'), J$.R(314137, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                    return J$.Rt(314145, undefined);
                                                                }
                                                                if (J$.C(18384, J$.C(18352, J$.B(19298, '===', J$.G(314161, J$.R(314153, 'self', self, false, false), 'state'), J$.R(314169, 'CONNECTING', CONNECTING, false, true))) ? J$.G(314185, J$.R(314177, 'options', options, false, false), 'firstConnect') : J$._())) {
                                                                    J$.M(314217, J$.R(314193, 'self', self, false, false), 'emit', false)(J$.T(314201, 'connect', 21, false), J$.R(314209, 'self', self, false, false));
                                                                    J$.M(314249, J$.R(314225, 'self', self, false, false), 'emit', false)(J$.T(314233, 'fullsetup', 21, false), J$.R(314241, 'self', self, false, false));
                                                                    J$.M(314281, J$.R(314257, 'self', self, false, false), 'emit', false)(J$.T(314265, 'all', 21, false), J$.R(314273, 'self', self, false, false));
                                                                } else if (J$.C(18376, J$.M(314297, J$.R(314289, 'self', self, false, false), 'isConnected', false)())) {
                                                                    J$.M(314329, J$.R(314305, 'self', self, false, false), 'emit', false)(J$.T(314313, 'reconnect', 21, false), J$.R(314321, 'self', self, false, false));
                                                                } else if (J$.C(18368, J$.C(18360, J$.U(19306, '!', J$.M(314345, J$.R(314337, 'self', self, false, false), 'isConnected', false)())) ? J$.B(19314, '>', J$.G(314377, J$.M(314369, J$.R(314353, 'self', self, false, false), 'listeners', false)(J$.T(314361, 'close', 21, false)), 'length'), J$.T(314385, 0, 22, false)) : J$._())) {
                                                                    J$.M(314417, J$.R(314393, 'self', self, false, false), 'emit', false)(J$.T(314401, 'close', 21, false), J$.R(314409, 'self', self, false, false));
                                                                }
                                                                J$.F(314441, J$.R(314425, 'topologyMonitor', topologyMonitor, false, true), false)(J$.R(314433, 'self', self, false, false));
                                                            } catch (J$e) {
                                                                J$.Ex(322873, J$e);
                                                            } finally {
                                                                if (J$.Fr(322881))
                                                                    continue jalangiLabel30;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)));
                                            }
                                            for (var i = J$.W(314497, 'i', J$.T(314489, 0, 22, false), i, false, false); J$.C(18456, J$.B(19322, '<', J$.R(314505, 'i', i, false, false), J$.G(314521, J$.R(314513, 'proxies', proxies, false, false), 'length'))); J$.B(19346, '-', i = J$.W(314537, 'i', J$.B(19338, '+', J$.U(19330, '+', J$.R(314529, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                J$.F(314897, J$.R(314545, 'pingServer', pingServer, false, false), false)(J$.R(314553, 'self', self, false, false), J$.G(314577, J$.R(314561, 'proxies', proxies, false, false), J$.R(314569, 'i', i, false, false)), J$.T(314889, function () {
                                                    jalangiLabel32:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(314873, arguments.callee, this, arguments);
                                                                arguments = J$.N(314881, 'arguments', arguments, true, false, false);
                                                                count = J$.W(314601, 'count', J$.B(19354, '-', J$.R(314585, 'count', count, false, false), J$.T(314593, 1, 22, false)), count, false, false);
                                                                if (J$.C(18448, J$.B(19362, '===', J$.R(314609, 'count', count, false, false), J$.T(314617, 0, 22, false)))) {
                                                                    if (J$.C(18416, J$.C(18408, J$.C(18400, J$.B(19370, '===', J$.G(314633, J$.R(314625, 'self', self, false, false), 'state'), J$.R(314641, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(19378, '===', J$.G(314657, J$.R(314649, 'self', self, false, false), 'state'), J$.R(314665, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(19386, '===', J$.G(314681, J$.R(314673, 'self', self, false, false), 'state'), J$.R(314689, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                        return J$.Rt(314697, undefined);
                                                                    }
                                                                    J$.F(314865, J$.R(314705, 'reconnectProxies', reconnectProxies, false, true), false)(J$.R(314713, 'self', self, false, false), J$.G(314729, J$.R(314721, 'self', self, false, false), 'disconnectedProxies'), J$.T(314857, function () {
                                                                        jalangiLabel31:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(314841, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(314849, 'arguments', arguments, true, false, false);
                                                                                    if (J$.C(18440, J$.C(18432, J$.C(18424, J$.B(19394, '===', J$.G(314745, J$.R(314737, 'self', self, false, false), 'state'), J$.R(314753, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(19402, '===', J$.G(314769, J$.R(314761, 'self', self, false, false), 'state'), J$.R(314777, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(19410, '===', J$.G(314793, J$.R(314785, 'self', self, false, false), 'state'), J$.R(314801, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                                        return J$.Rt(314809, undefined);
                                                                                    }
                                                                                    J$.F(314833, J$.R(314817, 'topologyMonitor', topologyMonitor, false, true), false)(J$.R(314825, 'self', self, false, false));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(322889, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(322897))
                                                                                        continue jalangiLabel31;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(322905, J$e);
                                                            } finally {
                                                                if (J$.Fr(322913))
                                                                    continue jalangiLabel32;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(322921, J$e);
                                        } finally {
                                            if (J$.Fr(322929))
                                                continue jalangiLabel33;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.G(314985, J$.G(314977, J$.R(314969, 'self', self, false, false), 's'), 'haInterval')));
                        } catch (J$e) {
                            J$.Ex(322937, J$e);
                        } finally {
                            if (J$.Fr(322945))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeWriteOperation(args, options, callback) {
                jalangiLabel44:
                    while (true) {
                        try {
                            J$.Fe(317257, arguments.callee, this, arguments);
                            arguments = J$.N(317265, 'arguments', arguments, true, false, false);
                            args = J$.N(317273, 'args', args, true, false, false);
                            options = J$.N(317281, 'options', options, true, false, false);
                            callback = J$.N(317289, 'callback', callback, true, false, false);
                            J$.N(317297, 'self', self, false, false, false);
                            J$.N(317305, 'op', op, false, false, false);
                            J$.N(317313, 'ns', ns, false, false, false);
                            J$.N(317321, 'ops', ops, false, false, false);
                            J$.N(317329, 'server', server, false, false, false);
                            J$.N(317337, 'willRetryWrite', willRetryWrite, false, false, false);
                            J$.N(317345, 'handler', handler, false, false, false);
                            if (J$.C(18512, J$.B(19514, '===', J$.U(19506, 'typeof', J$.R(316329, 'options', options, false, false)), J$.T(316337, 'function', 21, false))))
                                callback = J$.W(316353, 'callback', J$.R(316345, 'options', options, false, false), callback, false, false), options = J$.W(316369, 'options', J$.T(316361, {}, 11, false), options, false, false);
                            options = J$.W(316393, 'options', J$.C(18520, J$.R(316377, 'options', options, false, false)) ? J$._() : J$.T(316385, {}, 11, false), options, false, false);
                            var self = J$.W(316417, 'self', J$.G(316409, J$.R(316401, 'args', args, false, false), 'self'), self, false, false);
                            var op = J$.W(316441, 'op', J$.G(316433, J$.R(316425, 'args', args, false, false), 'op'), op, false, false);
                            var ns = J$.W(316465, 'ns', J$.G(316457, J$.R(316449, 'args', args, false, false), 'ns'), ns, false, false);
                            var ops = J$.W(316489, 'ops', J$.G(316481, J$.R(316473, 'args', args, false, false), 'ops'), ops, false, false);
                            var server = J$.W(316537, 'server', J$.F(316529, J$.R(316497, 'pickProxy', pickProxy, false, true), false)(J$.R(316505, 'self', self, false, false), J$.G(316521, J$.R(316513, 'options', options, false, false), 'session')), server, false, false);
                            if (J$.C(18528, J$.U(19522, '!', J$.R(316545, 'server', server, false, false))))
                                return J$.Rt(316593, J$.F(316585, J$.R(316553, 'callback', callback, false, false), false)(J$.F(316577, J$.R(316561, 'MongoError', MongoError, false, true), true)(J$.T(316569, 'no mongos proxy available', 21, false))));
                            var willRetryWrite = J$.W(316697, 'willRetryWrite', J$.C(18560, J$.C(18552, J$.C(18544, J$.C(18536, J$.U(19530, '!', J$.G(316609, J$.R(316601, 'args', args, false, false), 'retrying'))) ? J$.U(19546, '!', J$.U(19538, '!', J$.G(316625, J$.R(316617, 'options', options, false, false), 'retryWrites'))) : J$._()) ? J$.G(316641, J$.R(316633, 'options', options, false, false), 'session') : J$._()) ? J$.F(316665, J$.R(316649, 'isRetryableWritesSupported', isRetryableWritesSupported, false, true), false)(J$.R(316657, 'self', self, false, false)) : J$._()) ? J$.U(19554, '!', J$.M(316689, J$.G(316681, J$.R(316673, 'options', options, false, false), 'session'), 'inTransaction', false)()) : J$._(), willRetryWrite, false, false);
                            var handler = J$.W(317089, 'handler', J$.T(317081, function handler(err, result) {
                                jalangiLabel43:
                                    while (true) {
                                        try {
                                            J$.Fe(317041, arguments.callee, this, arguments);
                                            arguments = J$.N(317049, 'arguments', arguments, true, false, false);
                                            err = J$.N(317057, 'err', err, true, false, false);
                                            result = J$.N(317065, 'result', result, true, false, false);
                                            J$.N(317073, 'newArgs', newArgs, false, false, false);
                                            if (J$.C(18568, J$.U(19562, '!', J$.R(316705, 'err', err, false, false))))
                                                return J$.Rt(316745, J$.F(316737, J$.R(316713, 'callback', callback, false, false), false)(J$.T(316721, null, 25, false), J$.R(316729, 'result', result, false, false)));
                                            if (J$.C(18584, J$.C(18576, J$.U(19570, '!', J$.F(316769, J$.R(316753, 'isRetryableError', isRetryableError, false, true), false)(J$.R(316761, 'err', err, false, false)))) ? J$._() : J$.U(19578, '!', J$.R(316777, 'willRetryWrite', willRetryWrite, false, false)))) {
                                                err = J$.W(316809, 'err', J$.F(316801, J$.R(316785, 'getMMAPError', getMMAPError, false, true), false)(J$.R(316793, 'err', err, false, false)), err, false, false);
                                                return J$.Rt(316841, J$.F(316833, J$.R(316817, 'callback', callback, false, false), false)(J$.R(316825, 'err', err, false, false)));
                                            }
                                            server = J$.W(316889, 'server', J$.F(316881, J$.R(316849, 'pickProxy', pickProxy, false, true), false)(J$.R(316857, 'self', self, false, false), J$.G(316873, J$.R(316865, 'options', options, false, false), 'session')), server, false, false);
                                            if (J$.C(18592, J$.U(19586, '!', J$.R(316897, 'server', server, false, false)))) {
                                                return J$.Rt(316929, J$.F(316921, J$.R(316905, 'callback', callback, false, false), false)(J$.R(316913, 'err', err, false, false)));
                                            }
                                            var newArgs = J$.W(316985, 'newArgs', J$.M(316977, J$.I(typeof Object === 'undefined' ? Object = J$.R(316937, 'Object', undefined, true, true) : Object = J$.R(316937, 'Object', Object, true, true)), 'assign', false)(J$.T(316945, {}, 11, false), J$.R(316953, 'args', args, false, false), J$.T(316969, { retrying: J$.T(316961, true, 23, false) }, 11, false)), newArgs, false, false);
                                            return J$.Rt(317033, J$.F(317025, J$.R(316993, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.R(317001, 'newArgs', newArgs, false, false), J$.R(317009, 'options', options, false, false), J$.R(317017, 'callback', callback, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(323081, J$e);
                                        } finally {
                                            if (J$.Fr(323089))
                                                continue jalangiLabel43;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), handler, false, false);
                            if (J$.C(18600, J$.G(317105, J$.R(317097, 'callback', callback, false, false), 'operationId'))) {
                                J$.P(317137, J$.R(317113, 'handler', handler, false, false), 'operationId', J$.G(317129, J$.R(317121, 'callback', callback, false, false), 'operationId'));
                            }
                            if (J$.C(18608, J$.R(317145, 'willRetryWrite', willRetryWrite, false, false))) {
                                J$.M(317169, J$.G(317161, J$.R(317153, 'options', options, false, false), 'session'), 'incrementTransactionNumber', false)();
                                J$.P(317193, J$.R(317177, 'options', options, false, false), 'willRetryWrite', J$.R(317185, 'willRetryWrite', willRetryWrite, false, false));
                            }
                            J$.M(317249, J$.R(317201, 'server', server, false, false), J$.R(317209, 'op', op, false, false), false)(J$.R(317217, 'ns', ns, false, false), J$.R(317225, 'ops', ops, false, false), J$.R(317233, 'options', options, false, false), J$.R(317241, 'handler', handler, false, false));
                        } catch (J$e) {
                            J$.Ex(323097, J$e);
                        } finally {
                            if (J$.Fr(323105))
                                continue jalangiLabel44;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isWriteCommand(command) {
                jalangiLabel49:
                    while (true) {
                        try {
                            J$.Fe(319001, arguments.callee, this, arguments);
                            arguments = J$.N(319009, 'arguments', arguments, true, false, false);
                            command = J$.N(319017, 'command', command, true, false, false);
                            return J$.Rt(318993, J$.M(318985, J$.R(318913, 'RETRYABLE_WRITE_OPERATIONS', RETRYABLE_WRITE_OPERATIONS, false, true), 'some', false)(J$.T(318977, function (op) {
                                jalangiLabel48:
                                    while (true) {
                                        try {
                                            J$.Fe(318953, arguments.callee, this, arguments);
                                            arguments = J$.N(318961, 'arguments', arguments, true, false, false);
                                            op = J$.N(318969, 'op', op, true, false, false);
                                            return J$.Rt(318945, J$.G(318937, J$.R(318921, 'command', command, false, false), J$.R(318929, 'op', op, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(323161, J$e);
                                        } finally {
                                            if (J$.Fr(323169))
                                                continue jalangiLabel48;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(323177, J$e);
                        } finally {
                            if (J$.Fr(323185))
                                continue jalangiLabel49;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function emitTopologyDescriptionChanged(self) {
                jalangiLabel57:
                    while (true) {
                        try {
                            J$.Fe(321841, arguments.callee, this, arguments);
                            arguments = J$.N(321849, 'arguments', arguments, true, false, false);
                            self = J$.N(321857, 'self', self, true, false, false);
                            J$.N(321865, 'topology', topology, false, false, false);
                            J$.N(321873, 'description', description, false, false, false);
                            J$.N(321881, 'proxies', proxies, false, false, false);
                            J$.N(321889, 'diffResult', diffResult, false, false, false);
                            J$.N(321897, 'result', result, false, false, false);
                            if (J$.C(18984, J$.B(19914, '>', J$.G(321153, J$.M(321145, J$.R(321129, 'self', self, false, false), 'listeners', false)(J$.T(321137, 'topologyDescriptionChanged', 21, false)), 'length'), J$.T(321161, 0, 22, false)))) {
                                var topology = J$.W(321177, 'topology', J$.T(321169, 'Unknown', 21, false), topology, false, false);
                                if (J$.C(18968, J$.B(19922, '>', J$.G(321201, J$.G(321193, J$.R(321185, 'self', self, false, false), 'connectedProxies'), 'length'), J$.T(321209, 0, 22, false)))) {
                                    topology = J$.W(321225, 'topology', J$.T(321217, 'Sharded', 21, false), topology, false, false);
                                }
                                var description = J$.W(321257, 'description', J$.T(321249, {
                                    topologyType: J$.R(321233, 'topology', topology, false, false),
                                    servers: J$.T(321241, [], 10, false)
                                }, 11, false), description, false, false);
                                var proxies = J$.W(321305, 'proxies', J$.M(321297, J$.G(321273, J$.R(321265, 'self', self, false, false), 'disconnectedProxies'), 'concat', false)(J$.G(321289, J$.R(321281, 'self', self, false, false), 'connectingProxies')), proxies, false, false);
                                J$.P(321465, J$.R(321313, 'description', description, false, false), 'servers', J$.M(321457, J$.G(321329, J$.R(321321, 'description', description, false, false), 'servers'), 'concat', false)(J$.M(321449, J$.R(321337, 'proxies', proxies, false, false), 'map', false)(J$.T(321441, function (x) {
                                    jalangiLabel55:
                                        while (true) {
                                            try {
                                                J$.Fe(321409, arguments.callee, this, arguments);
                                                arguments = J$.N(321417, 'arguments', arguments, true, false, false);
                                                x = J$.N(321425, 'x', x, true, false, false);
                                                J$.N(321433, 'description', description, false, false, false);
                                                var description = J$.W(321361, 'description', J$.M(321353, J$.R(321345, 'x', x, false, false), 'getDescription', false)(), description, false, false);
                                                J$.P(321385, J$.R(321369, 'description', description, false, false), 'type', J$.T(321377, 'Unknown', 21, false));
                                                return J$.Rt(321401, J$.R(321393, 'description', description, false, false));
                                            } catch (J$e) {
                                                J$.Ex(323273, J$e);
                                            } finally {
                                                if (J$.Fr(323281))
                                                    continue jalangiLabel55;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false))));
                                J$.P(321633, J$.R(321473, 'description', description, false, false), 'servers', J$.M(321625, J$.G(321489, J$.R(321481, 'description', description, false, false), 'servers'), 'concat', false)(J$.M(321617, J$.G(321505, J$.R(321497, 'self', self, false, false), 'connectedProxies'), 'map', false)(J$.T(321609, function (x) {
                                    jalangiLabel56:
                                        while (true) {
                                            try {
                                                J$.Fe(321577, arguments.callee, this, arguments);
                                                arguments = J$.N(321585, 'arguments', arguments, true, false, false);
                                                x = J$.N(321593, 'x', x, true, false, false);
                                                J$.N(321601, 'description', description, false, false, false);
                                                var description = J$.W(321529, 'description', J$.M(321521, J$.R(321513, 'x', x, false, false), 'getDescription', false)(), description, false, false);
                                                J$.P(321553, J$.R(321537, 'description', description, false, false), 'type', J$.T(321545, 'Mongos', 21, false));
                                                return J$.Rt(321569, J$.R(321561, 'description', description, false, false));
                                            } catch (J$e) {
                                                J$.Ex(323289, J$e);
                                            } finally {
                                                if (J$.Fr(323297))
                                                    continue jalangiLabel56;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false))));
                                var diffResult = J$.W(321681, 'diffResult', J$.F(321673, J$.R(321641, 'diff', diff, false, true), false)(J$.G(321657, J$.R(321649, 'self', self, false, false), 'topologyDescription'), J$.R(321665, 'description', description, false, false)), diffResult, false, false);
                                var result = J$.W(321745, 'result', J$.T(321737, {
                                    topologyId: J$.G(321697, J$.R(321689, 'self', self, false, false), 'id'),
                                    previousDescription: J$.G(321713, J$.R(321705, 'self', self, false, false), 'topologyDescription'),
                                    newDescription: J$.R(321721, 'description', description, false, false),
                                    diff: J$.R(321729, 'diffResult', diffResult, false, false)
                                }, 11, false), result, false, false);
                                if (J$.C(18976, J$.B(19930, '>', J$.G(321769, J$.G(321761, J$.R(321753, 'diffResult', diffResult, false, false), 'servers'), 'length'), J$.T(321777, 0, 22, false)))) {
                                    J$.M(321809, J$.R(321785, 'self', self, false, false), 'emit', false)(J$.T(321793, 'topologyDescriptionChanged', 21, false), J$.R(321801, 'result', result, false, false));
                                }
                                J$.P(321833, J$.R(321817, 'self', self, false, false), 'topologyDescription', J$.R(321825, 'description', description, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(323305, J$e);
                        } finally {
                            if (J$.Fr(323313))
                                continue jalangiLabel57;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(321937, 'inherits', inherits, false, false, false);
            J$.N(321945, 'f', f, false, false, false);
            J$.N(321953, 'EventEmitter', EventEmitter, false, false, false);
            J$.N(321961, 'CoreCursor', CoreCursor, false, false, false);
            J$.N(321969, 'Logger', Logger, false, false, false);
            J$.N(321977, 'retrieveBSON', retrieveBSON, false, false, false);
            J$.N(321985, 'MongoError', MongoError, false, false, false);
            J$.N(321993, 'Server', Server, false, false, false);
            J$.N(322001, 'clone', clone, false, false, false);
            J$.N(322009, 'diff', diff, false, false, false);
            J$.N(322017, 'cloneOptions', cloneOptions, false, false, false);
            J$.N(322025, 'createClientInfo', createClientInfo, false, false, false);
            J$.N(322033, 'SessionMixins', SessionMixins, false, false, false);
            J$.N(322041, 'isRetryableWritesSupported', isRetryableWritesSupported, false, false, false);
            J$.N(322049, 'relayEvents', relayEvents, false, false, false);
            J$.N(322057, 'isRetryableError', isRetryableError, false, false, false);
            J$.N(322065, 'BSON', BSON, false, false, false);
            J$.N(322073, 'getMMAPError', getMMAPError, false, false, false);
            J$.N(322081, 'DISCONNECTED', DISCONNECTED, false, false, false);
            J$.N(322089, 'CONNECTING', CONNECTING, false, false, false);
            J$.N(322097, 'CONNECTED', CONNECTED, false, false, false);
            J$.N(322105, 'UNREFERENCED', UNREFERENCED, false, false, false);
            J$.N(322113, 'DESTROYING', DESTROYING, false, false, false);
            J$.N(322121, 'DESTROYED', DESTROYED, false, false, false);
            stateTransition = J$.N(322137, 'stateTransition', J$.T(322129, stateTransition, 12, false), true, false, false);
            J$.N(322145, 'id', id, false, false, false);
            J$.N(322153, 'handlers', handlers, false, false, false);
            J$.N(322161, 'Mongos', Mongos, false, false, false);
            emitSDAMEvent = J$.N(322177, 'emitSDAMEvent', J$.T(322169, emitSDAMEvent, 12, false), true, false, false);
            J$.N(322185, 'SERVER_EVENTS', SERVER_EVENTS, false, false, false);
            destroyServer = J$.N(322201, 'destroyServer', J$.T(322193, destroyServer, 12, false), true, false, false);
            handleEvent = J$.N(322217, 'handleEvent', J$.T(322209, handleEvent, 12, false), true, false, false);
            handleInitialConnectEvent = J$.N(322233, 'handleInitialConnectEvent', J$.T(322225, handleInitialConnectEvent, 12, false), true, false, false);
            connectProxies = J$.N(322249, 'connectProxies', J$.T(322241, connectProxies, 12, false), true, false, false);
            pickProxy = J$.N(322265, 'pickProxy', J$.T(322257, pickProxy, 12, false), true, false, false);
            moveServerFrom = J$.N(322281, 'moveServerFrom', J$.T(322273, moveServerFrom, 12, false), true, false, false);
            removeProxyFrom = J$.N(322297, 'removeProxyFrom', J$.T(322289, removeProxyFrom, 12, false), true, false, false);
            reconnectProxies = J$.N(322313, 'reconnectProxies', J$.T(322305, reconnectProxies, 12, false), true, false, false);
            topologyMonitor = J$.N(322329, 'topologyMonitor', J$.T(322321, topologyMonitor, 12, false), true, false, false);
            executeWriteOperation = J$.N(322345, 'executeWriteOperation', J$.T(322337, executeWriteOperation, 12, false), true, false, false);
            J$.N(322353, 'RETRYABLE_WRITE_OPERATIONS', RETRYABLE_WRITE_OPERATIONS, false, false, false);
            isWriteCommand = J$.N(322369, 'isWriteCommand', J$.T(322361, isWriteCommand, 12, false), true, false, false);
            emitTopologyDescriptionChanged = J$.N(322385, 'emitTopologyDescriptionChanged', J$.T(322377, emitTopologyDescriptionChanged, 12, false), true, false, false);
            J$.T(302153, 'use strict', 21, false);
            var inherits = J$.W(302193, 'inherits', J$.G(302185, J$.F(302177, J$.I(typeof require === 'undefined' ? require = J$.R(302161, 'require', undefined, true, true) : require = J$.R(302161, 'require', require, true, true)), false)(J$.T(302169, 'util', 21, false)), 'inherits'), inherits, false, true);
            var f = J$.W(302233, 'f', J$.G(302225, J$.F(302217, J$.I(typeof require === 'undefined' ? require = J$.R(302201, 'require', undefined, true, true) : require = J$.R(302201, 'require', require, true, true)), false)(J$.T(302209, 'util', 21, false)), 'format'), f, false, true);
            var EventEmitter = J$.W(302273, 'EventEmitter', J$.G(302265, J$.F(302257, J$.I(typeof require === 'undefined' ? require = J$.R(302241, 'require', undefined, true, true) : require = J$.R(302241, 'require', require, true, true)), false)(J$.T(302249, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            var CoreCursor = J$.W(302313, 'CoreCursor', J$.G(302305, J$.F(302297, J$.I(typeof require === 'undefined' ? require = J$.R(302281, 'require', undefined, true, true) : require = J$.R(302281, 'require', require, true, true)), false)(J$.T(302289, '../cursor', 21, false)), 'CoreCursor'), CoreCursor, false, true);
            var Logger = J$.W(302345, 'Logger', J$.F(302337, J$.I(typeof require === 'undefined' ? require = J$.R(302321, 'require', undefined, true, true) : require = J$.R(302321, 'require', require, true, true)), false)(J$.T(302329, '../connection/logger', 21, false)), Logger, false, true);
            var retrieveBSON = J$.W(302385, 'retrieveBSON', J$.G(302377, J$.F(302369, J$.I(typeof require === 'undefined' ? require = J$.R(302353, 'require', undefined, true, true) : require = J$.R(302353, 'require', require, true, true)), false)(J$.T(302361, '../connection/utils', 21, false)), 'retrieveBSON'), retrieveBSON, false, true);
            var MongoError = J$.W(302425, 'MongoError', J$.G(302417, J$.F(302409, J$.I(typeof require === 'undefined' ? require = J$.R(302393, 'require', undefined, true, true) : require = J$.R(302393, 'require', require, true, true)), false)(J$.T(302401, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var Server = J$.W(302457, 'Server', J$.F(302449, J$.I(typeof require === 'undefined' ? require = J$.R(302433, 'require', undefined, true, true) : require = J$.R(302433, 'require', require, true, true)), false)(J$.T(302441, './server', 21, false)), Server, false, true);
            var clone = J$.W(302497, 'clone', J$.G(302489, J$.F(302481, J$.I(typeof require === 'undefined' ? require = J$.R(302465, 'require', undefined, true, true) : require = J$.R(302465, 'require', require, true, true)), false)(J$.T(302473, './shared', 21, false)), 'clone'), clone, false, true);
            var diff = J$.W(302537, 'diff', J$.G(302529, J$.F(302521, J$.I(typeof require === 'undefined' ? require = J$.R(302505, 'require', undefined, true, true) : require = J$.R(302505, 'require', require, true, true)), false)(J$.T(302513, './shared', 21, false)), 'diff'), diff, false, true);
            var cloneOptions = J$.W(302577, 'cloneOptions', J$.G(302569, J$.F(302561, J$.I(typeof require === 'undefined' ? require = J$.R(302545, 'require', undefined, true, true) : require = J$.R(302545, 'require', require, true, true)), false)(J$.T(302553, './shared', 21, false)), 'cloneOptions'), cloneOptions, false, true);
            var createClientInfo = J$.W(302617, 'createClientInfo', J$.G(302609, J$.F(302601, J$.I(typeof require === 'undefined' ? require = J$.R(302585, 'require', undefined, true, true) : require = J$.R(302585, 'require', require, true, true)), false)(J$.T(302593, './shared', 21, false)), 'createClientInfo'), createClientInfo, false, true);
            var SessionMixins = J$.W(302657, 'SessionMixins', J$.G(302649, J$.F(302641, J$.I(typeof require === 'undefined' ? require = J$.R(302625, 'require', undefined, true, true) : require = J$.R(302625, 'require', require, true, true)), false)(J$.T(302633, './shared', 21, false)), 'SessionMixins'), SessionMixins, false, true);
            var isRetryableWritesSupported = J$.W(302697, 'isRetryableWritesSupported', J$.G(302689, J$.F(302681, J$.I(typeof require === 'undefined' ? require = J$.R(302665, 'require', undefined, true, true) : require = J$.R(302665, 'require', require, true, true)), false)(J$.T(302673, './shared', 21, false)), 'isRetryableWritesSupported'), isRetryableWritesSupported, false, true);
            var relayEvents = J$.W(302737, 'relayEvents', J$.G(302729, J$.F(302721, J$.I(typeof require === 'undefined' ? require = J$.R(302705, 'require', undefined, true, true) : require = J$.R(302705, 'require', require, true, true)), false)(J$.T(302713, '../utils', 21, false)), 'relayEvents'), relayEvents, false, true);
            var isRetryableError = J$.W(302777, 'isRetryableError', J$.G(302769, J$.F(302761, J$.I(typeof require === 'undefined' ? require = J$.R(302745, 'require', undefined, true, true) : require = J$.R(302745, 'require', require, true, true)), false)(J$.T(302753, '../error', 21, false)), 'isRetryableError'), isRetryableError, false, true);
            var BSON = J$.W(302801, 'BSON', J$.F(302793, J$.R(302785, 'retrieveBSON', retrieveBSON, false, true), false)(), BSON, false, true);
            var getMMAPError = J$.W(302841, 'getMMAPError', J$.G(302833, J$.F(302825, J$.I(typeof require === 'undefined' ? require = J$.R(302809, 'require', undefined, true, true) : require = J$.R(302809, 'require', require, true, true)), false)(J$.T(302817, './shared', 21, false)), 'getMMAPError'), getMMAPError, false, true);
            var DISCONNECTED = J$.W(302857, 'DISCONNECTED', J$.T(302849, 'disconnected', 21, false), DISCONNECTED, false, true);
            var CONNECTING = J$.W(302873, 'CONNECTING', J$.T(302865, 'connecting', 21, false), CONNECTING, false, true);
            var CONNECTED = J$.W(302889, 'CONNECTED', J$.T(302881, 'connected', 21, false), CONNECTED, false, true);
            var UNREFERENCED = J$.W(302905, 'UNREFERENCED', J$.T(302897, 'unreferenced', 21, false), UNREFERENCED, false, true);
            var DESTROYING = J$.W(302921, 'DESTROYING', J$.T(302913, 'destroying', 21, false), DESTROYING, false, true);
            var DESTROYED = J$.W(302937, 'DESTROYED', J$.T(302929, 'destroyed', 21, false), DESTROYED, false, true);
            var id = J$.W(303409, 'id', J$.T(303401, 1, 22, false), id, false, true);
            var handlers = J$.W(303465, 'handlers', J$.T(303457, [
                J$.T(303417, 'connect', 21, false),
                J$.T(303425, 'close', 21, false),
                J$.T(303433, 'error', 21, false),
                J$.T(303441, 'timeout', 21, false),
                J$.T(303449, 'parseError', 21, false)
            ], 10, false), handlers, false, true);
            var Mongos = J$.W(304673, 'Mongos', J$.T(304665, function Mongos(seedlist, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(304633, arguments.callee, this, arguments);
                            arguments = J$.N(304641, 'arguments', arguments, true, false, false);
                            seedlist = J$.N(304649, 'seedlist', seedlist, true, false, false);
                            options = J$.N(304657, 'options', options, true, false, false);
                            options = J$.W(303489, 'options', J$.C(17680, J$.R(303473, 'options', options, false, false)) ? J$._() : J$.T(303481, {}, 11, false), options, false, false);
                            J$.P(303521, J$.R(303497, 'this', this, false, false), 'id', J$.B(18530, '-', id = J$.W(303513, 'id', J$.B(18522, '+', J$.U(18514, '+', J$.R(303505, 'id', id, false, true)), 1), id, false, true), 1));
                            J$.P(304073, J$.R(303529, 'this', this, false, false), 's', J$.T(304065, {
                                options: J$.M(303561, J$.I(typeof Object === 'undefined' ? Object = J$.R(303537, 'Object', undefined, true, true) : Object = J$.R(303537, 'Object', Object, true, true)), 'assign', false)(J$.T(303545, {}, 11, false), J$.R(303553, 'options', options, false, false)),
                                bson: J$.C(17688, J$.G(303577, J$.R(303569, 'options', options, false, false), 'bson')) ? J$._() : J$.F(303825, J$.R(303585, 'BSON', BSON, false, true), true)(J$.T(303817, [
                                    J$.G(303601, J$.R(303593, 'BSON', BSON, false, true), 'Binary'),
                                    J$.G(303617, J$.R(303609, 'BSON', BSON, false, true), 'Code'),
                                    J$.G(303633, J$.R(303625, 'BSON', BSON, false, true), 'DBRef'),
                                    J$.G(303649, J$.R(303641, 'BSON', BSON, false, true), 'Decimal128'),
                                    J$.G(303665, J$.R(303657, 'BSON', BSON, false, true), 'Double'),
                                    J$.G(303681, J$.R(303673, 'BSON', BSON, false, true), 'Int32'),
                                    J$.G(303697, J$.R(303689, 'BSON', BSON, false, true), 'Long'),
                                    J$.G(303713, J$.R(303705, 'BSON', BSON, false, true), 'Map'),
                                    J$.G(303729, J$.R(303721, 'BSON', BSON, false, true), 'MaxKey'),
                                    J$.G(303745, J$.R(303737, 'BSON', BSON, false, true), 'MinKey'),
                                    J$.G(303761, J$.R(303753, 'BSON', BSON, false, true), 'ObjectId'),
                                    J$.G(303777, J$.R(303769, 'BSON', BSON, false, true), 'BSONRegExp'),
                                    J$.G(303793, J$.R(303785, 'BSON', BSON, false, true), 'Symbol'),
                                    J$.G(303809, J$.R(303801, 'BSON', BSON, false, true), 'Timestamp')
                                ], 10, false)),
                                Cursor: J$.C(17696, J$.G(303841, J$.R(303833, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.R(303849, 'CoreCursor', CoreCursor, false, true),
                                logger: J$.F(303881, J$.R(303857, 'Logger', Logger, false, true), false)(J$.T(303865, 'Mongos', 21, false), J$.R(303873, 'options', options, false, false)),
                                seedlist: J$.R(303889, 'seedlist', seedlist, false, false),
                                haInterval: J$.C(17704, J$.G(303905, J$.R(303897, 'options', options, false, false), 'haInterval')) ? J$.G(303921, J$.R(303913, 'options', options, false, false), 'haInterval') : J$.T(303929, 10000, 22, false),
                                disconnectHandler: J$.G(303945, J$.R(303937, 'options', options, false, false), 'disconnectHandler'),
                                index: J$.T(303953, 0, 22, false),
                                connectOptions: J$.T(303961, {}, 11, false),
                                debug: J$.C(17712, J$.B(18546, '===', J$.U(18538, 'typeof', J$.G(303977, J$.R(303969, 'options', options, false, false), 'debug')), J$.T(303985, 'boolean', 21, false))) ? J$.G(304001, J$.R(303993, 'options', options, false, false), 'debug') : J$.T(304009, false, 23, false),
                                localThresholdMS: J$.C(17720, J$.G(304025, J$.R(304017, 'options', options, false, false), 'localThresholdMS')) ? J$._() : J$.T(304033, 15, 22, false),
                                clientInfo: J$.F(304057, J$.R(304041, 'createClientInfo', createClientInfo, false, true), false)(J$.R(304049, 'options', options, false, false))
                            }, 11, false));
                            J$.P(304129, J$.G(304097, J$.G(304089, J$.R(304081, 'this', this, false, false), 's'), 'options'), 'clientInfo', J$.F(304121, J$.R(304105, 'createClientInfo', createClientInfo, false, true), false)(J$.R(304113, 'options', options, false, false)));
                            if (J$.C(17744, J$.C(17736, J$.C(17728, J$.M(304161, J$.G(304153, J$.G(304145, J$.R(304137, 'this', this, false, false), 's'), 'logger'), 'isWarn', false)()) ? J$.B(18554, '!==', J$.G(304193, J$.G(304185, J$.G(304177, J$.R(304169, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.T(304201, 0, 22, false)) : J$._()) ? J$.B(18562, '<', J$.G(304233, J$.G(304225, J$.G(304217, J$.R(304209, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.G(304257, J$.G(304249, J$.R(304241, 'this', this, false, false), 's'), 'haInterval')) : J$._())) {
                                J$.M(304369, J$.G(304281, J$.G(304273, J$.R(304265, 'this', this, false, false), 's'), 'logger'), 'warn', false)(J$.F(304361, J$.R(304289, 'f', f, false, true), false)(J$.T(304297, 'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts', 21, false), J$.G(304329, J$.G(304321, J$.G(304313, J$.R(304305, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.G(304353, J$.G(304345, J$.R(304337, 'this', this, false, false), 's'), 'haInterval')));
                            }
                            J$.P(304393, J$.R(304377, 'this', this, false, false), 'state', J$.R(304385, 'DISCONNECTED', DISCONNECTED, false, true));
                            J$.P(304417, J$.R(304401, 'this', this, false, false), 'connectingProxies', J$.T(304409, [], 10, false));
                            J$.P(304441, J$.R(304425, 'this', this, false, false), 'connectedProxies', J$.T(304433, [], 10, false));
                            J$.P(304465, J$.R(304449, 'this', this, false, false), 'disconnectedProxies', J$.T(304457, [], 10, false));
                            J$.P(304489, J$.R(304473, 'this', this, false, false), 'index', J$.T(304481, 0, 22, false));
                            J$.P(304513, J$.R(304497, 'this', this, false, false), 'haTimeoutId', J$.T(304505, null, 25, false));
                            J$.P(304537, J$.R(304521, 'this', this, false, false), 'ismaster', J$.T(304529, null, 25, false));
                            J$.P(304577, J$.R(304545, 'this', this, false, false), 'topologyDescription', J$.T(304569, {
                                topologyType: J$.T(304553, 'Unknown', 21, false),
                                servers: J$.T(304561, [], 10, false)
                            }, 11, false));
                            J$.P(304601, J$.R(304585, 'this', this, false, false), 'clusterTime', J$.T(304593, null, 25, false));
                            J$.M(304625, J$.R(304609, 'EventEmitter', EventEmitter, false, true), 'call', false)(J$.R(304617, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(322409, J$e);
                        } finally {
                            if (J$.Fr(322417))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), Mongos, false, true);
            J$.F(304705, J$.R(304681, 'inherits', inherits, false, true), false)(J$.R(304689, 'Mongos', Mongos, false, true), J$.R(304697, 'EventEmitter', EventEmitter, false, true));
            J$.M(304745, J$.I(typeof Object === 'undefined' ? Object = J$.R(304713, 'Object', undefined, true, true) : Object = J$.R(304713, 'Object', Object, true, true)), 'assign', false)(J$.G(304729, J$.R(304721, 'Mongos', Mongos, false, true), 'prototype'), J$.R(304737, 'SessionMixins', SessionMixins, false, true));
            J$.M(304841, J$.I(typeof Object === 'undefined' ? Object = J$.R(304753, 'Object', undefined, true, true) : Object = J$.R(304753, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(304769, J$.R(304761, 'Mongos', Mongos, false, true), 'prototype'), J$.T(304777, 'type', 21, false), J$.T(304833, {
                enumerable: J$.T(304785, true, 23, false),
                get: J$.T(304825, function get() {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(304809, arguments.callee, this, arguments);
                                arguments = J$.N(304817, 'arguments', arguments, true, false, false);
                                return J$.Rt(304801, J$.T(304793, 'mongos', 21, false));
                            } catch (J$e) {
                                J$.Ex(322425, J$e);
                            } finally {
                                if (J$.Fr(322433))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(304969, J$.I(typeof Object === 'undefined' ? Object = J$.R(304849, 'Object', undefined, true, true) : Object = J$.R(304849, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(304865, J$.R(304857, 'Mongos', Mongos, false, true), 'prototype'), J$.T(304873, 'parserType', 21, false), J$.T(304961, {
                enumerable: J$.T(304881, true, 23, false),
                get: J$.T(304953, function get() {
                    jalangiLabel3:
                        while (true) {
                            try {
                                J$.Fe(304937, arguments.callee, this, arguments);
                                arguments = J$.N(304945, 'arguments', arguments, true, false, false);
                                return J$.Rt(304929, J$.C(17752, J$.G(304905, J$.R(304889, 'BSON', BSON, false, true), J$.T(304897, 'native', 21, false))) ? J$.T(304913, 'c++', 21, false) : J$.T(304921, 'js', 21, false));
                            } catch (J$e) {
                                J$.Ex(322441, J$e);
                            } finally {
                                if (J$.Fr(322449))
                                    continue jalangiLabel3;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(305121, J$.I(typeof Object === 'undefined' ? Object = J$.R(304977, 'Object', undefined, true, true) : Object = J$.R(304977, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(304993, J$.R(304985, 'Mongos', Mongos, false, true), 'prototype'), J$.T(305001, 'logicalSessionTimeoutMinutes', 21, false), J$.T(305113, {
                enumerable: J$.T(305009, true, 23, false),
                get: J$.T(305105, function get() {
                    jalangiLabel4:
                        while (true) {
                            try {
                                J$.Fe(305089, arguments.callee, this, arguments);
                                arguments = J$.N(305097, 'arguments', arguments, true, false, false);
                                if (J$.C(17760, J$.U(18570, '!', J$.G(305025, J$.R(305017, 'this', this, false, false), 'ismaster'))))
                                    return J$.Rt(305041, J$.T(305033, null, 25, false));
                                return J$.Rt(305081, J$.C(17768, J$.G(305065, J$.G(305057, J$.R(305049, 'this', this, false, false), 'ismaster'), 'logicalSessionTimeoutMinutes')) ? J$._() : J$.T(305073, null, 25, false));
                            } catch (J$e) {
                                J$.Ex(322457, J$e);
                            } finally {
                                if (J$.Fr(322465))
                                    continue jalangiLabel4;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            var SERVER_EVENTS = J$.W(305289, 'SERVER_EVENTS', J$.T(305281, [
                J$.T(305241, 'serverDescriptionChanged', 21, false),
                J$.T(305249, 'error', 21, false),
                J$.T(305257, 'close', 21, false),
                J$.T(305265, 'timeout', 21, false),
                J$.T(305273, 'parseError', 21, false)
            ], 10, false), SERVER_EVENTS, false, true);
            J$.P(306017, J$.G(305481, J$.R(305473, 'Mongos', Mongos, false, true), 'prototype'), 'connect', J$.T(306009, function (options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(305969, arguments.callee, this, arguments);
                            arguments = J$.N(305977, 'arguments', arguments, true, false, false);
                            options = J$.N(305985, 'options', options, true, false, false);
                            J$.N(305993, 'self', self, false, false, false);
                            J$.N(306001, 'servers', servers, false, false, false);
                            var self = J$.W(305497, 'self', J$.R(305489, 'this', this, false, false), self, false, false);
                            J$.P(305537, J$.G(305513, J$.R(305505, 'this', this, false, false), 's'), 'connectOptions', J$.C(17792, J$.R(305521, 'options', options, false, false)) ? J$._() : J$.T(305529, {}, 11, false));
                            J$.F(305569, J$.R(305545, 'stateTransition', stateTransition, false, true), false)(J$.R(305553, 'this', this, false, false), J$.R(305561, 'CONNECTING', CONNECTING, false, true));
                            var servers = J$.W(305873, 'servers', J$.M(305865, J$.G(305593, J$.G(305585, J$.R(305577, 'this', this, false, false), 's'), 'seedlist'), 'map', false)(J$.T(305857, function (x) {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(305825, arguments.callee, this, arguments);
                                            arguments = J$.N(305833, 'arguments', arguments, true, false, false);
                                            x = J$.N(305841, 'x', x, true, false, false);
                                            J$.N(305849, 'server', server, false, false, false);
                                            var server = J$.W(305753, 'server', J$.F(305745, J$.R(305601, 'Server', Server, false, true), true)(J$.M(305737, J$.I(typeof Object === 'undefined' ? Object = J$.R(305609, 'Object', undefined, true, true) : Object = J$.R(305609, 'Object', Object, true, true)), 'assign', false)(J$.T(305617, {}, 11, false), J$.G(305641, J$.G(305633, J$.R(305625, 'self', self, false, false), 's'), 'options'), J$.R(305649, 'x', x, false, false), J$.R(305657, 'options', options, false, false), J$.T(305729, {
                                                reconnect: J$.T(305665, false, 23, false),
                                                monitoring: J$.T(305673, false, 23, false),
                                                parent: J$.R(305681, 'self', self, false, false),
                                                clientInfo: J$.F(305721, J$.R(305689, 'clone', clone, false, true), false)(J$.G(305713, J$.G(305705, J$.R(305697, 'self', self, false, false), 's'), 'clientInfo'))
                                            }, 11, false))), server, false, false);
                                            J$.F(305801, J$.R(305761, 'relayEvents', relayEvents, false, true), false)(J$.R(305769, 'server', server, false, false), J$.R(305777, 'self', self, false, false), J$.T(305793, [J$.T(305785, 'serverDescriptionChanged', 21, false)], 10, false));
                                            return J$.Rt(305817, J$.R(305809, 'server', server, false, false));
                                        } catch (J$e) {
                                            J$.Ex(322521, J$e);
                                        } finally {
                                            if (J$.Fr(322529))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), servers, false, false);
                            J$.F(305929, J$.R(305881, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(305889, 'this', this, false, false), J$.T(305897, 'topologyOpening', 21, false), J$.T(305921, { topologyId: J$.G(305913, J$.R(305905, 'this', this, false, false), 'id') }, 11, false));
                            J$.F(305961, J$.R(305937, 'connectProxies', connectProxies, false, true), false)(J$.R(305945, 'self', self, false, false), J$.R(305953, 'servers', servers, false, false));
                        } catch (J$e) {
                            J$.Ex(322537, J$e);
                        } finally {
                            if (J$.Fr(322545))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(306129, J$.G(306033, J$.R(306025, 'Mongos', Mongos, false, true), 'prototype'), 'auth', J$.T(306121, function (credentials, callback) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(306089, arguments.callee, this, arguments);
                            arguments = J$.N(306097, 'arguments', arguments, true, false, false);
                            credentials = J$.N(306105, 'credentials', credentials, true, false, false);
                            callback = J$.N(306113, 'callback', callback, true, false, false);
                            if (J$.C(17800, J$.B(18594, '===', J$.U(18586, 'typeof', J$.R(306041, 'callback', callback, false, false)), J$.T(306049, 'function', 21, false))))
                                J$.F(306081, J$.R(306057, 'callback', callback, false, false), false)(J$.T(306065, null, 25, false), J$.T(306073, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(322553, J$e);
                        } finally {
                            if (J$.Fr(322561))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(315105, J$.G(315049, J$.R(315041, 'Mongos', Mongos, false, true), 'prototype'), 'lastIsMaster', J$.T(315097, function () {
                jalangiLabel35:
                    while (true) {
                        try {
                            J$.Fe(315081, arguments.callee, this, arguments);
                            arguments = J$.N(315089, 'arguments', arguments, true, false, false);
                            return J$.Rt(315073, J$.G(315065, J$.R(315057, 'this', this, false, false), 'ismaster'));
                        } catch (J$e) {
                            J$.Ex(322953, J$e);
                        } finally {
                            if (J$.Fr(322961))
                                continue jalangiLabel35;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(315337, J$.G(315121, J$.R(315113, 'Mongos', Mongos, false, true), 'prototype'), 'unref', J$.T(315329, function () {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(315305, arguments.callee, this, arguments);
                            arguments = J$.N(315313, 'arguments', arguments, true, false, false);
                            J$.N(315321, 'proxies', proxies, false, false, false);
                            J$.F(315153, J$.R(315129, 'stateTransition', stateTransition, false, true), false)(J$.R(315137, 'this', this, false, false), J$.R(315145, 'UNREFERENCED', UNREFERENCED, false, true));
                            var proxies = J$.W(315201, 'proxies', J$.M(315193, J$.G(315169, J$.R(315161, 'this', this, false, false), 'connectedProxies'), 'concat', false)(J$.G(315185, J$.R(315177, 'this', this, false, false), 'connectingProxies')), proxies, false, false);
                            J$.M(315265, J$.R(315209, 'proxies', proxies, false, false), 'forEach', false)(J$.T(315257, function (x) {
                                jalangiLabel36:
                                    while (true) {
                                        try {
                                            J$.Fe(315233, arguments.callee, this, arguments);
                                            arguments = J$.N(315241, 'arguments', arguments, true, false, false);
                                            x = J$.N(315249, 'x', x, true, false, false);
                                            J$.M(315225, J$.R(315217, 'x', x, false, false), 'unref', false)();
                                        } catch (J$e) {
                                            J$.Ex(322969, J$e);
                                        } finally {
                                            if (J$.Fr(322977))
                                                continue jalangiLabel36;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(315297, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(315273, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(315273, 'clearTimeout', clearTimeout, true, true)), false)(J$.G(315289, J$.R(315281, 'this', this, false, false), 'haTimeoutId'));
                        } catch (J$e) {
                            J$.Ex(322985, J$e);
                        } finally {
                            if (J$.Fr(322993))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(316153, J$.G(315353, J$.R(315345, 'Mongos', Mongos, false, true), 'prototype'), 'destroy', J$.T(316145, function (options, callback) {
                jalangiLabel40:
                    while (true) {
                        try {
                            J$.Fe(316081, arguments.callee, this, arguments);
                            arguments = J$.N(316089, 'arguments', arguments, true, false, false);
                            options = J$.N(316097, 'options', options, true, false, false);
                            callback = J$.N(316105, 'callback', callback, true, false, false);
                            J$.N(316113, '_this2', _this2, false, false, false);
                            J$.N(316121, 'proxies', proxies, false, false, false);
                            J$.N(316129, 'serverCount', serverCount, false, false, false);
                            J$.N(316137, 'serverDestroyed', serverDestroyed, false, false, false);
                            var _this2 = J$.W(315369, '_this2', J$.R(315361, 'this', this, false, false), _this2, false, false);
                            if (J$.C(18464, J$.B(19426, '===', J$.U(19418, 'typeof', J$.R(315377, 'options', options, false, false)), J$.T(315385, 'function', 21, false)))) {
                                callback = J$.W(315401, 'callback', J$.R(315393, 'options', options, false, false), callback, false, false);
                                options = J$.W(315417, 'options', J$.T(315409, {}, 11, false), options, false, false);
                            }
                            options = J$.W(315441, 'options', J$.C(18472, J$.R(315425, 'options', options, false, false)) ? J$._() : J$.T(315433, {}, 11, false), options, false, false);
                            J$.F(315473, J$.R(315449, 'stateTransition', stateTransition, false, true), false)(J$.R(315457, 'this', this, false, false), J$.R(315465, 'DESTROYING', DESTROYING, false, true));
                            if (J$.C(18480, J$.G(315489, J$.R(315481, 'this', this, false, false), 'haTimeoutId'))) {
                                J$.F(315521, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(315497, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(315497, 'clearTimeout', clearTimeout, true, true)), false)(J$.G(315513, J$.R(315505, 'this', this, false, false), 'haTimeoutId'));
                            }
                            var proxies = J$.W(315569, 'proxies', J$.M(315561, J$.G(315537, J$.R(315529, 'this', this, false, false), 'connectedProxies'), 'concat', false)(J$.G(315553, J$.R(315545, 'this', this, false, false), 'connectingProxies')), proxies, false, false);
                            var serverCount = J$.W(315593, 'serverCount', J$.G(315585, J$.R(315577, 'proxies', proxies, false, false), 'length'), serverCount, false, false);
                            var serverDestroyed = J$.W(315825, 'serverDestroyed', J$.T(315817, function serverDestroyed() {
                                jalangiLabel38:
                                    while (true) {
                                        try {
                                            J$.Fe(315801, arguments.callee, this, arguments);
                                            arguments = J$.N(315809, 'arguments', arguments, true, false, false);
                                            J$.B(19450, '+', serverCount = J$.W(315609, 'serverCount', J$.B(19442, '-', J$.U(19434, '+', J$.R(315601, 'serverCount', serverCount, false, false)), 1), serverCount, false, false), 1);
                                            if (J$.C(18488, J$.B(19458, '>', J$.R(315617, 'serverCount', serverCount, false, false), J$.T(315625, 0, 22, false)))) {
                                                return J$.Rt(315633, undefined);
                                            }
                                            J$.F(315657, J$.R(315641, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(315649, '_this2', _this2, false, false));
                                            J$.F(315713, J$.R(315665, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(315673, '_this2', _this2, false, false), J$.T(315681, 'topologyClosed', 21, false), J$.T(315705, { topologyId: J$.G(315697, J$.R(315689, '_this2', _this2, false, false), 'id') }, 11, false));
                                            J$.F(315745, J$.R(315721, 'stateTransition', stateTransition, false, true), false)(J$.R(315729, '_this2', _this2, false, false), J$.R(315737, 'DESTROYED', DESTROYED, false, true));
                                            if (J$.C(18496, J$.B(19474, '===', J$.U(19466, 'typeof', J$.R(315753, 'callback', callback, false, false)), J$.T(315761, 'function', 21, false)))) {
                                                J$.F(315793, J$.R(315769, 'callback', callback, false, false), false)(J$.T(315777, null, 25, false), J$.T(315785, null, 25, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(323001, J$e);
                                        } finally {
                                            if (J$.Fr(323009))
                                                continue jalangiLabel38;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), serverDestroyed, false, false);
                            if (J$.C(18504, J$.B(19482, '===', J$.R(315833, 'serverCount', serverCount, false, false), J$.T(315841, 0, 22, false)))) {
                                J$.F(315857, J$.R(315849, 'serverDestroyed', serverDestroyed, false, false), false)();
                                return J$.Rt(315865, undefined);
                            }
                            J$.M(316073, J$.R(315873, 'proxies', proxies, false, false), 'forEach', false)(J$.T(316065, function (server) {
                                jalangiLabel39:
                                    while (true) {
                                        try {
                                            J$.Fe(316041, arguments.callee, this, arguments);
                                            arguments = J$.N(316049, 'arguments', arguments, true, false, false);
                                            server = J$.N(316057, 'server', server, true, false, false);
                                            J$.M(315937, J$.R(315881, '_this2', _this2, false, false), 'emit', false)(J$.T(315889, 'serverClosed', 21, false), J$.T(315929, {
                                                topologyId: J$.G(315905, J$.R(315897, '_this2', _this2, false, false), 'id'),
                                                address: J$.G(315921, J$.R(315913, 'server', server, false, false), 'name')
                                            }, 11, false));
                                            J$.F(315977, J$.R(315945, 'destroyServer', destroyServer, false, true), false)(J$.R(315953, 'server', server, false, false), J$.R(315961, 'options', options, false, false), J$.R(315969, 'serverDestroyed', serverDestroyed, false, false));
                                            J$.F(316033, J$.R(315985, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(316001, J$.R(315993, '_this2', _this2, false, false), 'connectedProxies'), J$.G(316017, J$.R(316009, '_this2', _this2, false, false), 'disconnectedProxies'), J$.R(316025, 'server', server, false, false));
                                        } catch (J$e) {
                                            J$.Ex(323017, J$e);
                                        } finally {
                                            if (J$.Fr(323025))
                                                continue jalangiLabel39;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(323033, J$e);
                        } finally {
                            if (J$.Fr(323041))
                                continue jalangiLabel40;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(316241, J$.G(316169, J$.R(316161, 'Mongos', Mongos, false, true), 'prototype'), 'isConnected', J$.T(316233, function () {
                jalangiLabel41:
                    while (true) {
                        try {
                            J$.Fe(316217, arguments.callee, this, arguments);
                            arguments = J$.N(316225, 'arguments', arguments, true, false, false);
                            return J$.Rt(316209, J$.B(19490, '>', J$.G(316193, J$.G(316185, J$.R(316177, 'this', this, false, false), 'connectedProxies'), 'length'), J$.T(316201, 0, 22, false)));
                        } catch (J$e) {
                            J$.Ex(323049, J$e);
                        } finally {
                            if (J$.Fr(323057))
                                continue jalangiLabel41;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(316321, J$.G(316257, J$.R(316249, 'Mongos', Mongos, false, true), 'prototype'), 'isDestroyed', J$.T(316313, function () {
                jalangiLabel42:
                    while (true) {
                        try {
                            J$.Fe(316297, arguments.callee, this, arguments);
                            arguments = J$.N(316305, 'arguments', arguments, true, false, false);
                            return J$.Rt(316289, J$.B(19498, '===', J$.G(316273, J$.R(316265, 'this', this, false, false), 'state'), J$.R(316281, 'DESTROYED', DESTROYED, false, true)));
                        } catch (J$e) {
                            J$.Ex(323065, J$e);
                        } finally {
                            if (J$.Fr(323073))
                                continue jalangiLabel42;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(317849, J$.G(317361, J$.R(317353, 'Mongos', Mongos, false, true), 'prototype'), 'insert', J$.T(317841, function (ns, ops, options, callback) {
                jalangiLabel45:
                    while (true) {
                        try {
                            J$.Fe(317793, arguments.callee, this, arguments);
                            arguments = J$.N(317801, 'arguments', arguments, true, false, false);
                            ns = J$.N(317809, 'ns', ns, true, false, false);
                            ops = J$.N(317817, 'ops', ops, true, false, false);
                            options = J$.N(317825, 'options', options, true, false, false);
                            callback = J$.N(317833, 'callback', callback, true, false, false);
                            if (J$.C(18624, J$.B(19602, '===', J$.U(19594, 'typeof', J$.R(317369, 'options', options, false, false)), J$.T(317377, 'function', 21, false)))) {
                                callback = J$.W(317393, 'callback', J$.R(317385, 'options', options, false, false), callback, false, false), options = J$.W(317409, 'options', J$.T(317401, {}, 11, false), options, false, false), options = J$.W(317433, 'options', J$.C(18616, J$.R(317417, 'options', options, false, false)) ? J$._() : J$.T(317425, {}, 11, false), options, false, false);
                            }
                            if (J$.C(18632, J$.B(19610, '===', J$.G(317449, J$.R(317441, 'this', this, false, false), 'state'), J$.R(317457, 'DESTROYED', DESTROYED, false, true)))) {
                                return J$.Rt(317521, J$.F(317513, J$.R(317465, 'callback', callback, false, false), false)(J$.F(317505, J$.R(317473, 'MongoError', MongoError, false, true), true)(J$.F(317497, J$.R(317481, 'f', f, false, true), false)(J$.T(317489, 'topology was destroyed', 21, false)))));
                            }
                            if (J$.C(18648, J$.C(18640, J$.U(19618, '!', J$.M(317537, J$.R(317529, 'this', this, false, false), 'isConnected', false)())) ? J$.B(19626, '!=', J$.G(317561, J$.G(317553, J$.R(317545, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(317569, null, 25, false)) : J$._())) {
                                return J$.Rt(317649, J$.M(317641, J$.G(317593, J$.G(317585, J$.R(317577, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(317601, 'insert', 21, false), J$.R(317609, 'ns', ns, false, false), J$.R(317617, 'ops', ops, false, false), J$.R(317625, 'options', options, false, false), J$.R(317633, 'callback', callback, false, false)));
                            }
                            if (J$.C(18656, J$.U(19634, '!', J$.M(317665, J$.R(317657, 'this', this, false, false), 'isConnected', false)()))) {
                                return J$.Rt(317713, J$.F(317705, J$.R(317673, 'callback', callback, false, false), false)(J$.F(317697, J$.R(317681, 'MongoError', MongoError, false, true), true)(J$.T(317689, 'no mongos proxy available', 21, false))));
                            }
                            J$.F(317785, J$.R(317721, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(317761, {
                                self: J$.R(317729, 'this', this, false, false),
                                op: J$.T(317737, 'insert', 21, false),
                                ns: J$.R(317745, 'ns', ns, false, false),
                                ops: J$.R(317753, 'ops', ops, false, false)
                            }, 11, false), J$.R(317769, 'options', options, false, false), J$.R(317777, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(323113, J$e);
                        } finally {
                            if (J$.Fr(323121))
                                continue jalangiLabel45;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(318353, J$.G(317865, J$.R(317857, 'Mongos', Mongos, false, true), 'prototype'), 'update', J$.T(318345, function (ns, ops, options, callback) {
                jalangiLabel46:
                    while (true) {
                        try {
                            J$.Fe(318297, arguments.callee, this, arguments);
                            arguments = J$.N(318305, 'arguments', arguments, true, false, false);
                            ns = J$.N(318313, 'ns', ns, true, false, false);
                            ops = J$.N(318321, 'ops', ops, true, false, false);
                            options = J$.N(318329, 'options', options, true, false, false);
                            callback = J$.N(318337, 'callback', callback, true, false, false);
                            if (J$.C(18672, J$.B(19650, '===', J$.U(19642, 'typeof', J$.R(317873, 'options', options, false, false)), J$.T(317881, 'function', 21, false)))) {
                                callback = J$.W(317897, 'callback', J$.R(317889, 'options', options, false, false), callback, false, false), options = J$.W(317913, 'options', J$.T(317905, {}, 11, false), options, false, false), options = J$.W(317937, 'options', J$.C(18664, J$.R(317921, 'options', options, false, false)) ? J$._() : J$.T(317929, {}, 11, false), options, false, false);
                            }
                            if (J$.C(18680, J$.B(19658, '===', J$.G(317953, J$.R(317945, 'this', this, false, false), 'state'), J$.R(317961, 'DESTROYED', DESTROYED, false, true)))) {
                                return J$.Rt(318025, J$.F(318017, J$.R(317969, 'callback', callback, false, false), false)(J$.F(318009, J$.R(317977, 'MongoError', MongoError, false, true), true)(J$.F(318001, J$.R(317985, 'f', f, false, true), false)(J$.T(317993, 'topology was destroyed', 21, false)))));
                            }
                            if (J$.C(18696, J$.C(18688, J$.U(19666, '!', J$.M(318041, J$.R(318033, 'this', this, false, false), 'isConnected', false)())) ? J$.B(19674, '!=', J$.G(318065, J$.G(318057, J$.R(318049, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(318073, null, 25, false)) : J$._())) {
                                return J$.Rt(318153, J$.M(318145, J$.G(318097, J$.G(318089, J$.R(318081, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(318105, 'update', 21, false), J$.R(318113, 'ns', ns, false, false), J$.R(318121, 'ops', ops, false, false), J$.R(318129, 'options', options, false, false), J$.R(318137, 'callback', callback, false, false)));
                            }
                            if (J$.C(18704, J$.U(19682, '!', J$.M(318169, J$.R(318161, 'this', this, false, false), 'isConnected', false)()))) {
                                return J$.Rt(318217, J$.F(318209, J$.R(318177, 'callback', callback, false, false), false)(J$.F(318201, J$.R(318185, 'MongoError', MongoError, false, true), true)(J$.T(318193, 'no mongos proxy available', 21, false))));
                            }
                            J$.F(318289, J$.R(318225, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(318265, {
                                self: J$.R(318233, 'this', this, false, false),
                                op: J$.T(318241, 'update', 21, false),
                                ns: J$.R(318249, 'ns', ns, false, false),
                                ops: J$.R(318257, 'ops', ops, false, false)
                            }, 11, false), J$.R(318273, 'options', options, false, false), J$.R(318281, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(323129, J$e);
                        } finally {
                            if (J$.Fr(323137))
                                continue jalangiLabel46;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(318857, J$.G(318369, J$.R(318361, 'Mongos', Mongos, false, true), 'prototype'), 'remove', J$.T(318849, function (ns, ops, options, callback) {
                jalangiLabel47:
                    while (true) {
                        try {
                            J$.Fe(318801, arguments.callee, this, arguments);
                            arguments = J$.N(318809, 'arguments', arguments, true, false, false);
                            ns = J$.N(318817, 'ns', ns, true, false, false);
                            ops = J$.N(318825, 'ops', ops, true, false, false);
                            options = J$.N(318833, 'options', options, true, false, false);
                            callback = J$.N(318841, 'callback', callback, true, false, false);
                            if (J$.C(18720, J$.B(19698, '===', J$.U(19690, 'typeof', J$.R(318377, 'options', options, false, false)), J$.T(318385, 'function', 21, false)))) {
                                callback = J$.W(318401, 'callback', J$.R(318393, 'options', options, false, false), callback, false, false), options = J$.W(318417, 'options', J$.T(318409, {}, 11, false), options, false, false), options = J$.W(318441, 'options', J$.C(18712, J$.R(318425, 'options', options, false, false)) ? J$._() : J$.T(318433, {}, 11, false), options, false, false);
                            }
                            if (J$.C(18728, J$.B(19706, '===', J$.G(318457, J$.R(318449, 'this', this, false, false), 'state'), J$.R(318465, 'DESTROYED', DESTROYED, false, true)))) {
                                return J$.Rt(318529, J$.F(318521, J$.R(318473, 'callback', callback, false, false), false)(J$.F(318513, J$.R(318481, 'MongoError', MongoError, false, true), true)(J$.F(318505, J$.R(318489, 'f', f, false, true), false)(J$.T(318497, 'topology was destroyed', 21, false)))));
                            }
                            if (J$.C(18744, J$.C(18736, J$.U(19714, '!', J$.M(318545, J$.R(318537, 'this', this, false, false), 'isConnected', false)())) ? J$.B(19722, '!=', J$.G(318569, J$.G(318561, J$.R(318553, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(318577, null, 25, false)) : J$._())) {
                                return J$.Rt(318657, J$.M(318649, J$.G(318601, J$.G(318593, J$.R(318585, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(318609, 'remove', 21, false), J$.R(318617, 'ns', ns, false, false), J$.R(318625, 'ops', ops, false, false), J$.R(318633, 'options', options, false, false), J$.R(318641, 'callback', callback, false, false)));
                            }
                            if (J$.C(18752, J$.U(19730, '!', J$.M(318673, J$.R(318665, 'this', this, false, false), 'isConnected', false)()))) {
                                return J$.Rt(318721, J$.F(318713, J$.R(318681, 'callback', callback, false, false), false)(J$.F(318705, J$.R(318689, 'MongoError', MongoError, false, true), true)(J$.T(318697, 'no mongos proxy available', 21, false))));
                            }
                            J$.F(318793, J$.R(318729, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(318769, {
                                self: J$.R(318737, 'this', this, false, false),
                                op: J$.T(318745, 'remove', 21, false),
                                ns: J$.R(318753, 'ns', ns, false, false),
                                ops: J$.R(318761, 'ops', ops, false, false)
                            }, 11, false), J$.R(318777, 'options', options, false, false), J$.R(318785, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(323145, J$e);
                        } finally {
                            if (J$.Fr(323153))
                                continue jalangiLabel47;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var RETRYABLE_WRITE_OPERATIONS = J$.W(318905, 'RETRYABLE_WRITE_OPERATIONS', J$.T(318897, [
                J$.T(318865, 'findAndModify', 21, false),
                J$.T(318873, 'insert', 21, false),
                J$.T(318881, 'update', 21, false),
                J$.T(318889, 'delete', 21, false)
            ], 10, false), RETRYABLE_WRITE_OPERATIONS, false, true);
            J$.P(320193, J$.G(319033, J$.R(319025, 'Mongos', Mongos, false, true), 'prototype'), 'command', J$.T(320185, function (ns, cmd, options, callback) {
                jalangiLabel51:
                    while (true) {
                        try {
                            J$.Fe(320089, arguments.callee, this, arguments);
                            arguments = J$.N(320097, 'arguments', arguments, true, false, false);
                            ns = J$.N(320105, 'ns', ns, true, false, false);
                            cmd = J$.N(320113, 'cmd', cmd, true, false, false);
                            options = J$.N(320121, 'options', options, true, false, false);
                            callback = J$.N(320129, 'callback', callback, true, false, false);
                            J$.N(320137, '_this3', _this3, false, false, false);
                            J$.N(320145, 'self', self, false, false, false);
                            J$.N(320153, 'server', server, false, false, false);
                            J$.N(320161, 'clonedOptions', clonedOptions, false, false, false);
                            J$.N(320169, 'willRetryWrite', willRetryWrite, false, false, false);
                            J$.N(320177, 'cb', cb, false, false, false);
                            var _this3 = J$.W(319049, '_this3', J$.R(319041, 'this', this, false, false), _this3, false, false);
                            if (J$.C(18768, J$.B(19746, '===', J$.U(19738, 'typeof', J$.R(319057, 'options', options, false, false)), J$.T(319065, 'function', 21, false)))) {
                                callback = J$.W(319081, 'callback', J$.R(319073, 'options', options, false, false), callback, false, false), options = J$.W(319097, 'options', J$.T(319089, {}, 11, false), options, false, false), options = J$.W(319121, 'options', J$.C(18760, J$.R(319105, 'options', options, false, false)) ? J$._() : J$.T(319113, {}, 11, false), options, false, false);
                            }
                            if (J$.C(18776, J$.B(19754, '===', J$.G(319137, J$.R(319129, 'this', this, false, false), 'state'), J$.R(319145, 'DESTROYED', DESTROYED, false, true)))) {
                                return J$.Rt(319209, J$.F(319201, J$.R(319153, 'callback', callback, false, false), false)(J$.F(319193, J$.R(319161, 'MongoError', MongoError, false, true), true)(J$.F(319185, J$.R(319169, 'f', f, false, true), false)(J$.T(319177, 'topology was destroyed', 21, false)))));
                            }
                            var self = J$.W(319225, 'self', J$.R(319217, 'this', this, false, false), self, false, false);
                            var server = J$.W(319273, 'server', J$.F(319265, J$.R(319233, 'pickProxy', pickProxy, false, true), false)(J$.R(319241, 'self', self, false, false), J$.G(319257, J$.R(319249, 'options', options, false, false), 'session')), server, false, false);
                            if (J$.C(18800, J$.C(18792, J$.C(18784, J$.B(19762, '==', J$.R(319281, 'server', server, false, false), J$.T(319289, null, 25, false))) ? J$._() : J$.U(19770, '!', J$.M(319305, J$.R(319297, 'server', server, false, false), 'isConnected', false)())) ? J$.B(19778, '!=', J$.G(319329, J$.G(319321, J$.R(319313, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(319337, null, 25, false)) : J$._())) {
                                return J$.Rt(319417, J$.M(319409, J$.G(319361, J$.G(319353, J$.R(319345, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(319369, 'command', 21, false), J$.R(319377, 'ns', ns, false, false), J$.R(319385, 'cmd', cmd, false, false), J$.R(319393, 'options', options, false, false), J$.R(319401, 'callback', callback, false, false)));
                            }
                            if (J$.C(18808, J$.B(19786, '==', J$.R(319425, 'server', server, false, false), J$.T(319433, null, 25, false)))) {
                                return J$.Rt(319481, J$.F(319473, J$.R(319441, 'callback', callback, false, false), false)(J$.F(319465, J$.R(319449, 'MongoError', MongoError, false, true), true)(J$.T(319457, 'no mongos proxy available', 21, false))));
                            }
                            var clonedOptions = J$.W(319513, 'clonedOptions', J$.F(319505, J$.R(319489, 'cloneOptions', cloneOptions, false, true), false)(J$.R(319497, 'options', options, false, false)), clonedOptions, false, false);
                            J$.P(319537, J$.R(319521, 'clonedOptions', clonedOptions, false, false), 'topology', J$.R(319529, 'self', self, false, false));
                            var willRetryWrite = J$.W(319665, 'willRetryWrite', J$.C(18848, J$.C(18840, J$.C(18832, J$.C(18824, J$.C(18816, J$.U(19794, '!', J$.G(319553, J$.R(319545, 'options', options, false, false), 'retrying'))) ? J$.G(319569, J$.R(319561, 'options', options, false, false), 'retryWrites') : J$._()) ? J$.G(319585, J$.R(319577, 'options', options, false, false), 'session') : J$._()) ? J$.F(319609, J$.R(319593, 'isRetryableWritesSupported', isRetryableWritesSupported, false, true), false)(J$.R(319601, 'self', self, false, false)) : J$._()) ? J$.U(19802, '!', J$.M(319633, J$.G(319625, J$.R(319617, 'options', options, false, false), 'session'), 'inTransaction', false)()) : J$._()) ? J$.F(319657, J$.R(319641, 'isWriteCommand', isWriteCommand, false, true), false)(J$.R(319649, 'cmd', cmd, false, false)) : J$._(), willRetryWrite, false, false);
                            var cb = J$.W(319977, 'cb', J$.T(319969, function cb(err, result) {
                                jalangiLabel50:
                                    while (true) {
                                        try {
                                            J$.Fe(319929, arguments.callee, this, arguments);
                                            arguments = J$.N(319937, 'arguments', arguments, true, false, false);
                                            err = J$.N(319945, 'err', err, true, false, false);
                                            result = J$.N(319953, 'result', result, true, false, false);
                                            J$.N(319961, 'newOptions', newOptions, false, false, false);
                                            if (J$.C(18856, J$.U(19810, '!', J$.R(319673, 'err', err, false, false))))
                                                return J$.Rt(319713, J$.F(319705, J$.R(319681, 'callback', callback, false, false), false)(J$.T(319689, null, 25, false), J$.R(319697, 'result', result, false, false)));
                                            if (J$.C(18864, J$.U(19818, '!', J$.F(319737, J$.R(319721, 'isRetryableError', isRetryableError, false, true), false)(J$.R(319729, 'err', err, false, false))))) {
                                                return J$.Rt(319769, J$.F(319761, J$.R(319745, 'callback', callback, false, false), false)(J$.R(319753, 'err', err, false, false)));
                                            }
                                            if (J$.C(18872, J$.R(319777, 'willRetryWrite', willRetryWrite, false, false))) {
                                                var newOptions = J$.W(319833, 'newOptions', J$.M(319825, J$.I(typeof Object === 'undefined' ? Object = J$.R(319785, 'Object', undefined, true, true) : Object = J$.R(319785, 'Object', Object, true, true)), 'assign', false)(J$.T(319793, {}, 11, false), J$.R(319801, 'clonedOptions', clonedOptions, false, false), J$.T(319817, { retrying: J$.T(319809, true, 23, false) }, 11, false)), newOptions, false, false);
                                                return J$.Rt(319889, J$.M(319881, J$.R(319841, '_this3', _this3, false, false), 'command', false)(J$.R(319849, 'ns', ns, false, false), J$.R(319857, 'cmd', cmd, false, false), J$.R(319865, 'newOptions', newOptions, false, false), J$.R(319873, 'callback', callback, false, false)));
                                            }
                                            return J$.Rt(319921, J$.F(319913, J$.R(319897, 'callback', callback, false, false), false)(J$.R(319905, 'err', err, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(323193, J$e);
                                        } finally {
                                            if (J$.Fr(323201))
                                                continue jalangiLabel50;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), cb, false, false);
                            if (J$.C(18880, J$.R(319985, 'willRetryWrite', willRetryWrite, false, false))) {
                                J$.M(320009, J$.G(320001, J$.R(319993, 'options', options, false, false), 'session'), 'incrementTransactionNumber', false)();
                                J$.P(320033, J$.R(320017, 'options', options, false, false), 'willRetryWrite', J$.R(320025, 'willRetryWrite', willRetryWrite, false, false));
                            }
                            J$.M(320081, J$.R(320041, 'server', server, false, false), 'command', false)(J$.R(320049, 'ns', ns, false, false), J$.R(320057, 'cmd', cmd, false, false), J$.R(320065, 'clonedOptions', clonedOptions, false, false), J$.R(320073, 'cb', cb, false, false));
                        } catch (J$e) {
                            J$.Ex(323209, J$e);
                        } finally {
                            if (J$.Fr(323217))
                                continue jalangiLabel51;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(320441, J$.G(320209, J$.R(320201, 'Mongos', Mongos, false, true), 'prototype'), 'cursor', J$.T(320433, function (ns, cmd, options) {
                jalangiLabel52:
                    while (true) {
                        try {
                            J$.Fe(320377, arguments.callee, this, arguments);
                            arguments = J$.N(320385, 'arguments', arguments, true, false, false);
                            ns = J$.N(320393, 'ns', ns, true, false, false);
                            cmd = J$.N(320401, 'cmd', cmd, true, false, false);
                            options = J$.N(320409, 'options', options, true, false, false);
                            J$.N(320417, 'topology', topology, false, false, false);
                            J$.N(320425, 'FinalCursor', FinalCursor, false, false, false);
                            options = J$.W(320233, 'options', J$.C(18888, J$.R(320217, 'options', options, false, false)) ? J$._() : J$.T(320225, {}, 11, false), options, false, false);
                            var topology = J$.W(320265, 'topology', J$.C(18896, J$.G(320249, J$.R(320241, 'options', options, false, false), 'topology')) ? J$._() : J$.R(320257, 'this', this, false, false), topology, false, false);
                            var FinalCursor = J$.W(320313, 'FinalCursor', J$.C(18904, J$.G(320281, J$.R(320273, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.G(320305, J$.G(320297, J$.R(320289, 'this', this, false, false), 's'), 'Cursor'), FinalCursor, false, false);
                            return J$.Rt(320369, J$.F(320361, J$.R(320321, 'FinalCursor', FinalCursor, false, false), true)(J$.R(320329, 'topology', topology, false, false), J$.R(320337, 'ns', ns, false, false), J$.R(320345, 'cmd', cmd, false, false), J$.R(320353, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(323225, J$e);
                        } finally {
                            if (J$.Fr(323233))
                                continue jalangiLabel52;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(320897, J$.G(320457, J$.R(320449, 'Mongos', Mongos, false, true), 'prototype'), 'selectServer', J$.T(320889, function (selector, options, callback) {
                jalangiLabel53:
                    while (true) {
                        try {
                            J$.Fe(320841, arguments.callee, this, arguments);
                            arguments = J$.N(320849, 'arguments', arguments, true, false, false);
                            selector = J$.N(320857, 'selector', selector, true, false, false);
                            options = J$.N(320865, 'options', options, true, false, false);
                            callback = J$.N(320873, 'callback', callback, true, false, false);
                            J$.N(320881, 'server', server, false, false, false);
                            if (J$.C(18920, J$.C(18912, J$.B(19834, '===', J$.U(19826, 'typeof', J$.R(320465, 'selector', selector, false, false)), J$.T(320473, 'function', 21, false))) ? J$.B(19850, '===', J$.U(19842, 'typeof', J$.R(320481, 'callback', callback, false, false)), J$.T(320489, 'undefined', 21, false)) : J$._()))
                                callback = J$.W(320505, 'callback', J$.R(320497, 'selector', selector, false, false), callback, false, false), selector = J$.W(320521, 'selector', J$.T(320513, undefined, 24, false), selector, false, false), options = J$.W(320537, 'options', J$.T(320529, {}, 11, false), options, false, false);
                            if (J$.C(18928, J$.B(19866, '===', J$.U(19858, 'typeof', J$.R(320545, 'options', options, false, false)), J$.T(320553, 'function', 21, false))))
                                callback = J$.W(320569, 'callback', J$.R(320561, 'options', options, false, false), callback, false, false), options = J$.W(320585, 'options', J$.R(320577, 'selector', selector, false, false), options, false, false), selector = J$.W(320601, 'selector', J$.T(320593, undefined, 24, false), selector, false, false);
                            options = J$.W(320625, 'options', J$.C(18936, J$.R(320609, 'options', options, false, false)) ? J$._() : J$.T(320617, {}, 11, false), options, false, false);
                            var server = J$.W(320673, 'server', J$.F(320665, J$.R(320633, 'pickProxy', pickProxy, false, true), false)(J$.R(320641, 'this', this, false, false), J$.G(320657, J$.R(320649, 'options', options, false, false), 'session')), server, false, false);
                            if (J$.C(18944, J$.B(19874, '==', J$.R(320681, 'server', server, false, false), J$.T(320689, null, 25, false)))) {
                                J$.F(320729, J$.R(320697, 'callback', callback, false, false), false)(J$.F(320721, J$.R(320705, 'MongoError', MongoError, false, true), true)(J$.T(320713, 'server selection failed', 21, false)));
                                return J$.Rt(320737, undefined);
                            }
                            if (J$.C(18952, J$.G(320761, J$.G(320753, J$.R(320745, 'this', this, false, false), 's'), 'debug')))
                                J$.M(320801, J$.R(320769, 'this', this, false, false), 'emit', false)(J$.T(320777, 'pickedServer', 21, false), J$.T(320785, null, 25, false), J$.R(320793, 'server', server, false, false));
                            J$.F(320833, J$.R(320809, 'callback', callback, false, false), false)(J$.T(320817, null, 25, false), J$.R(320825, 'server', server, false, false));
                        } catch (J$e) {
                            J$.Ex(323241, J$e);
                        } finally {
                            if (J$.Fr(323249))
                                continue jalangiLabel53;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(321121, J$.G(320913, J$.R(320905, 'Mongos', Mongos, false, true), 'prototype'), 'connections', J$.T(321113, function () {
                jalangiLabel54:
                    while (true) {
                        try {
                            J$.Fe(321081, arguments.callee, this, arguments);
                            arguments = J$.N(321089, 'arguments', arguments, true, false, false);
                            J$.N(321097, 'connections', connections, false, false, false);
                            J$.N(321105, 'i', i, false, false, false);
                            var connections = J$.W(320929, 'connections', J$.T(320921, [], 10, false), connections, false, false);
                            for (var i = J$.W(320945, 'i', J$.T(320937, 0, 22, false), i, false, false); J$.C(18960, J$.B(19882, '<', J$.R(320953, 'i', i, false, false), J$.G(320977, J$.G(320969, J$.R(320961, 'this', this, false, false), 'connectedProxies'), 'length'))); J$.B(19906, '-', i = J$.W(320993, 'i', J$.B(19898, '+', J$.U(19890, '+', J$.R(320985, 'i', i, false, false)), 1), i, false, false), 1)) {
                                connections = J$.W(321057, 'connections', J$.M(321049, J$.R(321001, 'connections', connections, false, false), 'concat', false)(J$.M(321041, J$.G(321033, J$.G(321017, J$.R(321009, 'this', this, false, false), 'connectedProxies'), J$.R(321025, 'i', i, false, false)), 'connections', false)()), connections, false, false);
                            }
                            return J$.Rt(321073, J$.R(321065, 'connections', connections, false, false));
                        } catch (J$e) {
                            J$.Ex(323257, J$e);
                        } finally {
                            if (J$.Fr(323265))
                                continue jalangiLabel54;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(321921, J$.I(typeof module === 'undefined' ? module = J$.R(321905, 'module', undefined, true, true) : module = J$.R(321905, 'module', module, true, true)), 'exports', J$.R(321913, 'Mongos', Mongos, false, true));
        } catch (J$e) {
            J$.Ex(323321, J$e);
        } finally {
            if (J$.Sr(323329))
                continue jalangiLabel58;
            else
                break jalangiLabel58;
        }
    }
// JALANGI DO NOT INSTRUMENT

