J$.noInstrEval = false;
jalangiLabel38:
    while (true) {
        try {
            J$.Se(384705, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/topologies/server.js');
            function disconnectHandler(self, type, ns, cmd, options, callback) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(374865, arguments.callee, this, arguments);
                            arguments = J$.N(374873, 'arguments', arguments, true, false, false);
                            self = J$.N(374881, 'self', self, true, false, false);
                            type = J$.N(374889, 'type', type, true, false, false);
                            ns = J$.N(374897, 'ns', ns, true, false, false);
                            cmd = J$.N(374905, 'cmd', cmd, true, false, false);
                            options = J$.N(374913, 'options', options, true, false, false);
                            callback = J$.N(374921, 'callback', callback, true, false, false);
                            if (J$.C(23048, J$.C(23040, J$.C(23032, J$.C(23024, J$.U(23322, '!', J$.M(374569, J$.G(374561, J$.G(374553, J$.R(374545, 'self', self, false, false), 's'), 'pool'), 'isConnected', false)())) ? J$.G(374601, J$.G(374593, J$.G(374585, J$.R(374577, 'self', self, false, false), 's'), 'options'), 'reconnect') : J$._()) ? J$.B(23330, '!=', J$.G(374625, J$.G(374617, J$.R(374609, 'self', self, false, false), 's'), 'disconnectHandler'), J$.T(374633, null, 25, false)) : J$._()) ? J$.U(23338, '!', J$.G(374649, J$.R(374641, 'options', options, false, false), 'monitoring')) : J$._())) {
                                J$.M(374721, J$.G(374673, J$.G(374665, J$.R(374657, 'self', self, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.R(374681, 'type', type, false, false), J$.R(374689, 'ns', ns, false, false), J$.R(374697, 'cmd', cmd, false, false), J$.R(374705, 'options', options, false, false), J$.R(374713, 'callback', callback, false, false));
                                return J$.Rt(374737, J$.T(374729, true, 23, false));
                            }
                            if (J$.C(23056, J$.U(23346, '!', J$.M(374769, J$.G(374761, J$.G(374753, J$.R(374745, 'self', self, false, false), 's'), 'pool'), 'isConnected', false)()))) {
                                J$.F(374841, J$.R(374777, 'callback', callback, false, false), false)(J$.F(374833, J$.R(374785, 'MongoError', MongoError, false, true), true)(J$.F(374825, J$.R(374793, 'f', f, false, true), false)(J$.T(374801, 'no connection available to server %s', 21, false), J$.G(374817, J$.R(374809, 'self', self, false, false), 'name'))));
                                return J$.Rt(374857, J$.T(374849, true, 23, false));
                            }
                        } catch (J$e) {
                            J$.Ex(385153, J$e);
                        } finally {
                            if (J$.Fr(385161))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function monitoringProcess(self) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(375457, arguments.callee, this, arguments);
                            arguments = J$.N(375465, 'arguments', arguments, true, false, false);
                            self = J$.N(375473, 'self', self, true, false, false);
                            return J$.Rt(375449, J$.T(375441, function () {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(375417, arguments.callee, this, arguments);
                                            arguments = J$.N(375425, 'arguments', arguments, true, false, false);
                                            J$.N(375433, 'start', start, false, false, false);
                                            if (J$.C(23064, J$.M(374953, J$.G(374945, J$.G(374937, J$.R(374929, 'self', self, false, false), 's'), 'pool'), 'isDestroyed', false)()))
                                                return J$.Rt(374961, undefined);
                                            J$.M(374993, J$.R(374969, 'self', self, false, false), 'emit', false)(J$.T(374977, 'monitoring', 21, false), J$.R(374985, 'self', self, false, false));
                                            var start = J$.W(375025, 'start', J$.M(375017, J$.F(375009, J$.I(typeof Date === 'undefined' ? Date = J$.R(375001, 'Date', undefined, true, true) : Date = J$.R(375001, 'Date', Date, true, true)), true)(), 'getTime', false)(), start, false, false);
                                            J$.M(375409, J$.R(375033, 'self', self, false, false), 'command', false)(J$.T(375041, 'admin.$cmd', 21, false), J$.T(375057, { ismaster: J$.T(375049, true, 23, false) }, 11, false), J$.T(375153, {
                                                socketTimeout: J$.C(23072, J$.B(23362, '!==', J$.U(23354, 'typeof', J$.G(375089, J$.G(375081, J$.G(375073, J$.R(375065, 'self', self, false, false), 's'), 'options'), 'connectionTimeout')), J$.T(375097, 'number', 21, false))) ? J$.T(375105, 2000, 22, false) : J$.G(375137, J$.G(375129, J$.G(375121, J$.R(375113, 'self', self, false, false), 's'), 'options'), 'connectionTimeout'),
                                                monitoring: J$.T(375145, true, 23, false)
                                            }, 11, false), J$.T(375401, function (err, result) {
                                                jalangiLabel11:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(375369, arguments.callee, this, arguments);
                                                            arguments = J$.N(375377, 'arguments', arguments, true, false, false);
                                                            err = J$.N(375385, 'err', err, true, false, false);
                                                            result = J$.N(375393, 'result', result, true, false, false);
                                                            J$.P(375201, J$.R(375161, 'self', self, false, false), 'lastIsMasterMS', J$.B(23370, '-', J$.M(375185, J$.F(375177, J$.I(typeof Date === 'undefined' ? Date = J$.R(375169, 'Date', undefined, true, true) : Date = J$.R(375169, 'Date', Date, true, true)), true)(), 'getTime', false)(), J$.R(375193, 'start', start, false, false)));
                                                            if (J$.C(23080, J$.M(375233, J$.G(375225, J$.G(375217, J$.R(375209, 'self', self, false, false), 's'), 'pool'), 'isDestroyed', false)()))
                                                                return J$.Rt(375241, undefined);
                                                            if (J$.C(23088, J$.R(375249, 'result', result, false, false))) {
                                                                J$.P(375281, J$.R(375257, 'self', self, false, false), 'ismaster', J$.G(375273, J$.R(375265, 'result', result, false, false), 'result'));
                                                            }
                                                            J$.P(375361, J$.R(375289, 'self', self, false, false), 'monitoringProcessId', J$.F(375353, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(375297, 'setTimeout', undefined, true, true) : setTimeout = J$.R(375297, 'setTimeout', setTimeout, true, true)), false)(J$.F(375321, J$.R(375305, 'monitoringProcess', monitoringProcess, false, true), false)(J$.R(375313, 'self', self, false, false)), J$.G(375345, J$.G(375337, J$.R(375329, 'self', self, false, false), 's'), 'monitoringInterval')));
                                                        } catch (J$e) {
                                                            J$.Ex(385169, J$e);
                                                        } finally {
                                                            if (J$.Fr(385177))
                                                                continue jalangiLabel11;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(385185, J$e);
                                        } finally {
                                            if (J$.Fr(385193))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(385201, J$e);
                        } finally {
                            if (J$.Fr(385209))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function basicWriteValidations(self) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(379873, arguments.callee, this, arguments);
                            arguments = J$.N(379881, 'arguments', arguments, true, false, false);
                            self = J$.N(379889, 'self', self, true, false, false);
                            if (J$.C(23432, J$.U(23626, '!', J$.G(379769, J$.G(379761, J$.R(379753, 'self', self, false, false), 's'), 'pool'))))
                                return J$.Rt(379801, J$.F(379793, J$.R(379777, 'MongoError', MongoError, false, true), true)(J$.T(379785, 'server instance is not connected', 21, false)));
                            if (J$.C(23440, J$.M(379833, J$.G(379825, J$.G(379817, J$.R(379809, 'self', self, false, false), 's'), 'pool'), 'isDestroyed', false)()))
                                return J$.Rt(379865, J$.F(379857, J$.R(379841, 'MongoError', MongoError, false, true), true)(J$.T(379849, 'server instance pool was destroyed', 21, false)));
                        } catch (J$e) {
                            J$.Ex(385361, J$e);
                        } finally {
                            if (J$.Fr(385369))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function basicReadValidations(self, options) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(379993, arguments.callee, this, arguments);
                            arguments = J$.N(380001, 'arguments', arguments, true, false, false);
                            self = J$.N(380009, 'self', self, true, false, false);
                            options = J$.N(380017, 'options', options, true, false, false);
                            J$.F(379921, J$.R(379897, 'basicWriteValidations', basicWriteValidations, false, true), false)(J$.R(379905, 'self', self, false, false), J$.R(379913, 'options', options, false, false));
                            if (J$.C(23456, J$.C(23448, J$.G(379937, J$.R(379929, 'options', options, false, false), 'readPreference')) ? J$.U(23642, '!', J$.B(23634, 'instanceof', J$.G(379953, J$.R(379945, 'options', options, false, false), 'readPreference'), J$.R(379961, 'ReadPreference', ReadPreference, false, true))) : J$._())) {
                                throw J$.F(379985, J$.I(typeof Error === 'undefined' ? Error = J$.R(379969, 'Error', undefined, true, true) : Error = J$.R(379969, 'Error', Error, true, true)), true)(J$.T(379977, 'readPreference must be an instance of ReadPreference', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(385377, J$e);
                        } finally {
                            if (J$.Fr(385385))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(384713, 'inherits', inherits, false, false, false);
            J$.N(384721, 'f', f, false, false, false);
            J$.N(384729, 'EventEmitter', EventEmitter, false, false, false);
            J$.N(384737, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(384745, 'Logger', Logger, false, false, false);
            J$.N(384753, 'debugOptions', debugOptions, false, false, false);
            J$.N(384761, 'retrieveBSON', retrieveBSON, false, false, false);
            J$.N(384769, 'Pool', Pool, false, false, false);
            J$.N(384777, 'MongoError', MongoError, false, false, false);
            J$.N(384785, 'MongoNetworkError', MongoNetworkError, false, false, false);
            J$.N(384793, 'wireProtocol', wireProtocol, false, false, false);
            J$.N(384801, 'CoreCursor', CoreCursor, false, false, false);
            J$.N(384809, 'sdam', sdam, false, false, false);
            J$.N(384817, 'createClientInfo', createClientInfo, false, false, false);
            J$.N(384825, 'createCompressionInfo', createCompressionInfo, false, false, false);
            J$.N(384833, 'resolveClusterTime', resolveClusterTime, false, false, false);
            J$.N(384841, 'SessionMixins', SessionMixins, false, false, false);
            J$.N(384849, 'relayEvents', relayEvents, false, false, false);
            J$.N(384857, 'collationNotSupported', collationNotSupported, false, false, false);
            J$.N(384865, 'debugFields', debugFields, false, false, false);
            J$.N(384873, 'id', id, false, false, false);
            J$.N(384881, 'serverAccounting', serverAccounting, false, false, false);
            J$.N(384889, 'servers', servers, false, false, false);
            J$.N(384897, 'BSON', BSON, false, false, false);
            J$.N(384905, 'Server', Server, false, false, false);
            disconnectHandler = J$.N(384921, 'disconnectHandler', J$.T(384913, disconnectHandler, 12, false), true, false, false);
            monitoringProcess = J$.N(384937, 'monitoringProcess', J$.T(384929, monitoringProcess, 12, false), true, false, false);
            J$.N(384945, 'eventHandler', eventHandler, false, false, false);
            basicWriteValidations = J$.N(384961, 'basicWriteValidations', J$.T(384953, basicWriteValidations, 12, false), true, false, false);
            basicReadValidations = J$.N(384977, 'basicReadValidations', J$.T(384969, basicReadValidations, 12, false), true, false, false);
            J$.N(384985, 'listeners', listeners, false, false, false);
            J$.T(371449, 'use strict', 21, false);
            var inherits = J$.W(371993, 'inherits', J$.G(371481, J$.F(371473, J$.I(typeof require === 'undefined' ? require = J$.R(371457, 'require', undefined, true, true) : require = J$.R(371457, 'require', require, true, true)), false)(J$.T(371465, 'util', 21, false)), 'inherits'), inherits, false, true), f = J$.W(372001, 'f', J$.G(371513, J$.F(371505, J$.I(typeof require === 'undefined' ? require = J$.R(371489, 'require', undefined, true, true) : require = J$.R(371489, 'require', require, true, true)), false)(J$.T(371497, 'util', 21, false)), 'format'), f, false, true), EventEmitter = J$.W(372009, 'EventEmitter', J$.G(371545, J$.F(371537, J$.I(typeof require === 'undefined' ? require = J$.R(371521, 'require', undefined, true, true) : require = J$.R(371521, 'require', require, true, true)), false)(J$.T(371529, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true), ReadPreference = J$.W(372017, 'ReadPreference', J$.F(371569, J$.I(typeof require === 'undefined' ? require = J$.R(371553, 'require', undefined, true, true) : require = J$.R(371553, 'require', require, true, true)), false)(J$.T(371561, './read_preference', 21, false)), ReadPreference, false, true), Logger = J$.W(372025, 'Logger', J$.F(371593, J$.I(typeof require === 'undefined' ? require = J$.R(371577, 'require', undefined, true, true) : require = J$.R(371577, 'require', require, true, true)), false)(J$.T(371585, '../connection/logger', 21, false)), Logger, false, true), debugOptions = J$.W(372033, 'debugOptions', J$.G(371625, J$.F(371617, J$.I(typeof require === 'undefined' ? require = J$.R(371601, 'require', undefined, true, true) : require = J$.R(371601, 'require', require, true, true)), false)(J$.T(371609, '../connection/utils', 21, false)), 'debugOptions'), debugOptions, false, true), retrieveBSON = J$.W(372041, 'retrieveBSON', J$.G(371657, J$.F(371649, J$.I(typeof require === 'undefined' ? require = J$.R(371633, 'require', undefined, true, true) : require = J$.R(371633, 'require', require, true, true)), false)(J$.T(371641, '../connection/utils', 21, false)), 'retrieveBSON'), retrieveBSON, false, true), Pool = J$.W(372049, 'Pool', J$.F(371681, J$.I(typeof require === 'undefined' ? require = J$.R(371665, 'require', undefined, true, true) : require = J$.R(371665, 'require', require, true, true)), false)(J$.T(371673, '../connection/pool', 21, false)), Pool, false, true), MongoError = J$.W(372057, 'MongoError', J$.G(371713, J$.F(371705, J$.I(typeof require === 'undefined' ? require = J$.R(371689, 'require', undefined, true, true) : require = J$.R(371689, 'require', require, true, true)), false)(J$.T(371697, '../error', 21, false)), 'MongoError'), MongoError, false, true), MongoNetworkError = J$.W(372065, 'MongoNetworkError', J$.G(371745, J$.F(371737, J$.I(typeof require === 'undefined' ? require = J$.R(371721, 'require', undefined, true, true) : require = J$.R(371721, 'require', require, true, true)), false)(J$.T(371729, '../error', 21, false)), 'MongoNetworkError'), MongoNetworkError, false, true), wireProtocol = J$.W(372073, 'wireProtocol', J$.F(371769, J$.I(typeof require === 'undefined' ? require = J$.R(371753, 'require', undefined, true, true) : require = J$.R(371753, 'require', require, true, true)), false)(J$.T(371761, '../wireprotocol', 21, false)), wireProtocol, false, true), CoreCursor = J$.W(372081, 'CoreCursor', J$.G(371801, J$.F(371793, J$.I(typeof require === 'undefined' ? require = J$.R(371777, 'require', undefined, true, true) : require = J$.R(371777, 'require', require, true, true)), false)(J$.T(371785, '../cursor', 21, false)), 'CoreCursor'), CoreCursor, false, true), sdam = J$.W(372089, 'sdam', J$.F(371825, J$.I(typeof require === 'undefined' ? require = J$.R(371809, 'require', undefined, true, true) : require = J$.R(371809, 'require', require, true, true)), false)(J$.T(371817, './shared', 21, false)), sdam, false, true), createClientInfo = J$.W(372097, 'createClientInfo', J$.G(371857, J$.F(371849, J$.I(typeof require === 'undefined' ? require = J$.R(371833, 'require', undefined, true, true) : require = J$.R(371833, 'require', require, true, true)), false)(J$.T(371841, './shared', 21, false)), 'createClientInfo'), createClientInfo, false, true), createCompressionInfo = J$.W(372105, 'createCompressionInfo', J$.G(371889, J$.F(371881, J$.I(typeof require === 'undefined' ? require = J$.R(371865, 'require', undefined, true, true) : require = J$.R(371865, 'require', require, true, true)), false)(J$.T(371873, './shared', 21, false)), 'createCompressionInfo'), createCompressionInfo, false, true), resolveClusterTime = J$.W(372113, 'resolveClusterTime', J$.G(371921, J$.F(371913, J$.I(typeof require === 'undefined' ? require = J$.R(371897, 'require', undefined, true, true) : require = J$.R(371897, 'require', require, true, true)), false)(J$.T(371905, './shared', 21, false)), 'resolveClusterTime'), resolveClusterTime, false, true), SessionMixins = J$.W(372121, 'SessionMixins', J$.G(371953, J$.F(371945, J$.I(typeof require === 'undefined' ? require = J$.R(371929, 'require', undefined, true, true) : require = J$.R(371929, 'require', require, true, true)), false)(J$.T(371937, './shared', 21, false)), 'SessionMixins'), SessionMixins, false, true), relayEvents = J$.W(372129, 'relayEvents', J$.G(371985, J$.F(371977, J$.I(typeof require === 'undefined' ? require = J$.R(371961, 'require', undefined, true, true) : require = J$.R(371961, 'require', require, true, true)), false)(J$.T(371969, '../utils', 21, false)), 'relayEvents'), relayEvents, false, true);
            var collationNotSupported = J$.W(372169, 'collationNotSupported', J$.G(372161, J$.F(372153, J$.I(typeof require === 'undefined' ? require = J$.R(372137, 'require', undefined, true, true) : require = J$.R(372137, 'require', require, true, true)), false)(J$.T(372145, '../utils', 21, false)), 'collationNotSupported'), collationNotSupported, false, true);
            var debugFields = J$.W(372377, 'debugFields', J$.T(372369, [
                J$.T(372177, 'reconnect', 21, false),
                J$.T(372185, 'reconnectTries', 21, false),
                J$.T(372193, 'reconnectInterval', 21, false),
                J$.T(372201, 'emitError', 21, false),
                J$.T(372209, 'cursorFactory', 21, false),
                J$.T(372217, 'host', 21, false),
                J$.T(372225, 'port', 21, false),
                J$.T(372233, 'size', 21, false),
                J$.T(372241, 'keepAlive', 21, false),
                J$.T(372249, 'keepAliveInitialDelay', 21, false),
                J$.T(372257, 'noDelay', 21, false),
                J$.T(372265, 'connectionTimeout', 21, false),
                J$.T(372273, 'checkServerIdentity', 21, false),
                J$.T(372281, 'socketTimeout', 21, false),
                J$.T(372289, 'ssl', 21, false),
                J$.T(372297, 'ca', 21, false),
                J$.T(372305, 'crl', 21, false),
                J$.T(372313, 'cert', 21, false),
                J$.T(372321, 'key', 21, false),
                J$.T(372329, 'rejectUnauthorized', 21, false),
                J$.T(372337, 'promoteLongs', 21, false),
                J$.T(372345, 'promoteValues', 21, false),
                J$.T(372353, 'promoteBuffers', 21, false),
                J$.T(372361, 'servername', 21, false)
            ], 10, false), debugFields, false, true);
            var id = J$.W(372393, 'id', J$.T(372385, 0, 22, false), id, false, true);
            var serverAccounting = J$.W(372409, 'serverAccounting', J$.T(372401, false, 23, false), serverAccounting, false, true);
            var servers = J$.W(372425, 'servers', J$.T(372417, {}, 11, false), servers, false, true);
            var BSON = J$.W(372449, 'BSON', J$.F(372441, J$.R(372433, 'retrieveBSON', retrieveBSON, false, true), false)(), BSON, false, true);
            var Server = J$.W(373401, 'Server', J$.T(373393, function Server(options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(373369, arguments.callee, this, arguments);
                            arguments = J$.N(373377, 'arguments', arguments, true, false, false);
                            options = J$.N(373385, 'options', options, true, false, false);
                            options = J$.W(372473, 'options', J$.C(22928, J$.R(372457, 'options', options, false, false)) ? J$._() : J$.T(372465, {}, 11, false), options, false, false);
                            J$.M(372497, J$.R(372481, 'EventEmitter', EventEmitter, false, true), 'call', false)(J$.R(372489, 'this', this, false, false));
                            J$.P(372529, J$.R(372505, 'this', this, false, false), 'id', J$.B(23218, '-', id = J$.W(372521, 'id', J$.B(23210, '+', J$.U(23202, '+', J$.R(372513, 'id', id, false, true)), 1), id, false, true), 1));
                            J$.P(373073, J$.R(372537, 'this', this, false, false), 's', J$.T(373065, {
                                options: J$.R(372545, 'options', options, false, false),
                                logger: J$.F(372577, J$.R(372553, 'Logger', Logger, false, true), false)(J$.T(372561, 'Server', 21, false), J$.R(372569, 'options', options, false, false)),
                                Cursor: J$.C(22936, J$.G(372593, J$.R(372585, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.R(372601, 'CoreCursor', CoreCursor, false, true),
                                bson: J$.C(22944, J$.G(372617, J$.R(372609, 'options', options, false, false), 'bson')) ? J$._() : J$.F(372865, J$.R(372625, 'BSON', BSON, false, true), true)(J$.T(372857, [
                                    J$.G(372641, J$.R(372633, 'BSON', BSON, false, true), 'Binary'),
                                    J$.G(372657, J$.R(372649, 'BSON', BSON, false, true), 'Code'),
                                    J$.G(372673, J$.R(372665, 'BSON', BSON, false, true), 'DBRef'),
                                    J$.G(372689, J$.R(372681, 'BSON', BSON, false, true), 'Decimal128'),
                                    J$.G(372705, J$.R(372697, 'BSON', BSON, false, true), 'Double'),
                                    J$.G(372721, J$.R(372713, 'BSON', BSON, false, true), 'Int32'),
                                    J$.G(372737, J$.R(372729, 'BSON', BSON, false, true), 'Long'),
                                    J$.G(372753, J$.R(372745, 'BSON', BSON, false, true), 'Map'),
                                    J$.G(372769, J$.R(372761, 'BSON', BSON, false, true), 'MaxKey'),
                                    J$.G(372785, J$.R(372777, 'BSON', BSON, false, true), 'MinKey'),
                                    J$.G(372801, J$.R(372793, 'BSON', BSON, false, true), 'ObjectId'),
                                    J$.G(372817, J$.R(372809, 'BSON', BSON, false, true), 'BSONRegExp'),
                                    J$.G(372833, J$.R(372825, 'BSON', BSON, false, true), 'Symbol'),
                                    J$.G(372849, J$.R(372841, 'BSON', BSON, false, true), 'Timestamp')
                                ], 10, false)),
                                pool: J$.T(372873, null, 25, false),
                                disconnectHandler: J$.G(372889, J$.R(372881, 'options', options, false, false), 'disconnectHandler'),
                                monitoring: J$.C(22952, J$.B(23234, '===', J$.U(23226, 'typeof', J$.G(372905, J$.R(372897, 'options', options, false, false), 'monitoring')), J$.T(372913, 'boolean', 21, false))) ? J$.G(372929, J$.R(372921, 'options', options, false, false), 'monitoring') : J$.T(372937, true, 23, false),
                                inTopology: J$.U(23250, '!', J$.U(23242, '!', J$.G(372953, J$.R(372945, 'options', options, false, false), 'parent'))),
                                monitoringInterval: J$.C(22960, J$.B(23266, '===', J$.U(23258, 'typeof', J$.G(372969, J$.R(372961, 'options', options, false, false), 'monitoringInterval')), J$.T(372977, 'number', 21, false))) ? J$.G(372993, J$.R(372985, 'options', options, false, false), 'monitoringInterval') : J$.T(373001, 5000, 22, false),
                                topologyId: J$.U(23274, '-', J$.T(373009, 1, 22, false)),
                                compression: J$.T(373041, { compressors: J$.F(373033, J$.R(373017, 'createCompressionInfo', createCompressionInfo, false, true), false)(J$.R(373025, 'options', options, false, false)) }, 11, false),
                                parent: J$.G(373057, J$.R(373049, 'options', options, false, false), 'parent')
                            }, 11, false));
                            if (J$.C(22968, J$.U(23282, '!', J$.G(373097, J$.G(373089, J$.R(373081, 'this', this, false, false), 's'), 'parent')))) {
                                J$.P(373129, J$.G(373113, J$.R(373105, 'this', this, false, false), 's'), 'clusterTime', J$.T(373121, null, 25, false));
                            }
                            J$.P(373153, J$.R(373137, 'this', this, false, false), 'ismaster', J$.T(373145, null, 25, false));
                            J$.P(373177, J$.R(373161, 'this', this, false, false), 'lastIsMasterMS', J$.U(23290, '-', J$.T(373169, 1, 22, false)));
                            J$.P(373201, J$.R(373185, 'this', this, false, false), 'monitoringProcessId', J$.T(373193, null, 25, false));
                            J$.P(373225, J$.R(373209, 'this', this, false, false), 'initialConnect', J$.T(373217, true, 23, false));
                            J$.P(373249, J$.R(373233, 'this', this, false, false), '_type', J$.T(373241, 'server', 21, false));
                            J$.P(373289, J$.R(373257, 'this', this, false, false), 'clientInfo', J$.F(373281, J$.R(373265, 'createClientInfo', createClientInfo, false, true), false)(J$.R(373273, 'options', options, false, false)));
                            J$.P(373313, J$.R(373297, 'this', this, false, false), 'lastUpdateTime', J$.T(373305, 0, 22, false));
                            J$.P(373337, J$.R(373321, 'this', this, false, false), 'lastWriteDate', J$.T(373329, 0, 22, false));
                            J$.P(373361, J$.R(373345, 'this', this, false, false), 'staleness', J$.T(373353, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(384993, J$e);
                        } finally {
                            if (J$.Fr(385001))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), Server, false, true);
            J$.F(373433, J$.R(373409, 'inherits', inherits, false, true), false)(J$.R(373417, 'Server', Server, false, true), J$.R(373425, 'EventEmitter', EventEmitter, false, true));
            J$.M(373473, J$.I(typeof Object === 'undefined' ? Object = J$.R(373441, 'Object', undefined, true, true) : Object = J$.R(373441, 'Object', Object, true, true)), 'assign', false)(J$.G(373457, J$.R(373449, 'Server', Server, false, true), 'prototype'), J$.R(373465, 'SessionMixins', SessionMixins, false, true));
            J$.M(373577, J$.I(typeof Object === 'undefined' ? Object = J$.R(373481, 'Object', undefined, true, true) : Object = J$.R(373481, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(373497, J$.R(373489, 'Server', Server, false, true), 'prototype'), J$.T(373505, 'type', 21, false), J$.T(373569, {
                enumerable: J$.T(373513, true, 23, false),
                get: J$.T(373561, function get() {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.Fe(373545, arguments.callee, this, arguments);
                                arguments = J$.N(373553, 'arguments', arguments, true, false, false);
                                return J$.Rt(373537, J$.G(373529, J$.R(373521, 'this', this, false, false), '_type'));
                            } catch (J$e) {
                                J$.Ex(385009, J$e);
                            } finally {
                                if (J$.Fr(385017))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(373705, J$.I(typeof Object === 'undefined' ? Object = J$.R(373585, 'Object', undefined, true, true) : Object = J$.R(373585, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(373601, J$.R(373593, 'Server', Server, false, true), 'prototype'), J$.T(373609, 'parserType', 21, false), J$.T(373697, {
                enumerable: J$.T(373617, true, 23, false),
                get: J$.T(373689, function get() {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(373673, arguments.callee, this, arguments);
                                arguments = J$.N(373681, 'arguments', arguments, true, false, false);
                                return J$.Rt(373665, J$.C(22976, J$.G(373641, J$.R(373625, 'BSON', BSON, false, true), J$.T(373633, 'native', 21, false))) ? J$.T(373649, 'c++', 21, false) : J$.T(373657, 'js', 21, false));
                            } catch (J$e) {
                                J$.Ex(385025, J$e);
                            } finally {
                                if (J$.Fr(385033))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(373857, J$.I(typeof Object === 'undefined' ? Object = J$.R(373713, 'Object', undefined, true, true) : Object = J$.R(373713, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(373729, J$.R(373721, 'Server', Server, false, true), 'prototype'), J$.T(373737, 'logicalSessionTimeoutMinutes', 21, false), J$.T(373849, {
                enumerable: J$.T(373745, true, 23, false),
                get: J$.T(373841, function get() {
                    jalangiLabel3:
                        while (true) {
                            try {
                                J$.Fe(373825, arguments.callee, this, arguments);
                                arguments = J$.N(373833, 'arguments', arguments, true, false, false);
                                if (J$.C(22984, J$.U(23298, '!', J$.G(373761, J$.R(373753, 'this', this, false, false), 'ismaster'))))
                                    return J$.Rt(373777, J$.T(373769, null, 25, false));
                                return J$.Rt(373817, J$.C(22992, J$.G(373801, J$.G(373793, J$.R(373785, 'this', this, false, false), 'ismaster'), 'logicalSessionTimeoutMinutes')) ? J$._() : J$.T(373809, null, 25, false));
                            } catch (J$e) {
                                J$.Ex(385041, J$e);
                            } finally {
                                if (J$.Fr(385049))
                                    continue jalangiLabel3;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(374193, J$.I(typeof Object === 'undefined' ? Object = J$.R(373865, 'Object', undefined, true, true) : Object = J$.R(373865, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(373881, J$.R(373873, 'Server', Server, false, true), 'prototype'), J$.T(373889, 'clusterTime', 21, false), J$.T(374185, {
                enumerable: J$.T(373897, true, 23, false),
                set: J$.T(374041, function set(clusterTime) {
                    jalangiLabel4:
                        while (true) {
                            try {
                                J$.Fe(374009, arguments.callee, this, arguments);
                                arguments = J$.N(374017, 'arguments', arguments, true, false, false);
                                clusterTime = J$.N(374025, 'clusterTime', clusterTime, true, false, false);
                                J$.N(374033, 'settings', settings, false, false, false);
                                var settings = J$.W(373969, 'settings', J$.C(23000, J$.G(373921, J$.G(373913, J$.R(373905, 'this', this, false, false), 's'), 'parent')) ? J$.G(373945, J$.G(373937, J$.R(373929, 'this', this, false, false), 's'), 'parent') : J$.G(373961, J$.R(373953, 'this', this, false, false), 's'), settings, false, false);
                                J$.F(374001, J$.R(373977, 'resolveClusterTime', resolveClusterTime, false, true), false)(J$.R(373985, 'settings', settings, false, false), J$.R(373993, 'clusterTime', clusterTime, false, false));
                            } catch (J$e) {
                                J$.Ex(385057, J$e);
                            } finally {
                                if (J$.Fr(385065))
                                    continue jalangiLabel4;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                get: J$.T(374177, function get() {
                    jalangiLabel5:
                        while (true) {
                            try {
                                J$.Fe(374153, arguments.callee, this, arguments);
                                arguments = J$.N(374161, 'arguments', arguments, true, false, false);
                                J$.N(374169, 'settings', settings, false, false, false);
                                var settings = J$.W(374113, 'settings', J$.C(23008, J$.G(374065, J$.G(374057, J$.R(374049, 'this', this, false, false), 's'), 'parent')) ? J$.G(374089, J$.G(374081, J$.R(374073, 'this', this, false, false), 's'), 'parent') : J$.G(374105, J$.R(374097, 'this', this, false, false), 's'), settings, false, false);
                                return J$.Rt(374145, J$.C(23016, J$.G(374129, J$.R(374121, 'settings', settings, false, false), 'clusterTime')) ? J$._() : J$.T(374137, null, 25, false));
                            } catch (J$e) {
                                J$.Ex(385073, J$e);
                            } finally {
                                if (J$.Fr(385081))
                                    continue jalangiLabel5;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.P(374265, J$.R(374201, 'Server', Server, false, true), 'enableServerAccounting', J$.T(374257, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(374241, arguments.callee, this, arguments);
                            arguments = J$.N(374249, 'arguments', arguments, true, false, false);
                            serverAccounting = J$.W(374217, 'serverAccounting', J$.T(374209, true, 23, false), serverAccounting, false, true);
                            servers = J$.W(374233, 'servers', J$.T(374225, {}, 11, false), servers, false, true);
                        } catch (J$e) {
                            J$.Ex(385089, J$e);
                        } finally {
                            if (J$.Fr(385097))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(374321, J$.R(374273, 'Server', Server, false, true), 'disableServerAccounting', J$.T(374313, function () {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(374297, arguments.callee, this, arguments);
                            arguments = J$.N(374305, 'arguments', arguments, true, false, false);
                            serverAccounting = J$.W(374289, 'serverAccounting', J$.T(374281, false, 23, false), serverAccounting, false, true);
                        } catch (J$e) {
                            J$.Ex(385105, J$e);
                        } finally {
                            if (J$.Fr(385113))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(374377, J$.R(374329, 'Server', Server, false, true), 'servers', J$.T(374369, function () {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(374353, arguments.callee, this, arguments);
                            arguments = J$.N(374361, 'arguments', arguments, true, false, false);
                            return J$.Rt(374345, J$.R(374337, 'servers', servers, false, true));
                        } catch (J$e) {
                            J$.Ex(385121, J$e);
                        } finally {
                            if (J$.Fr(385129))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.M(374537, J$.I(typeof Object === 'undefined' ? Object = J$.R(374385, 'Object', undefined, true, true) : Object = J$.R(374385, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(374401, J$.R(374393, 'Server', Server, false, true), 'prototype'), J$.T(374409, 'name', 21, false), J$.T(374529, {
                enumerable: J$.T(374417, true, 23, false),
                get: J$.T(374521, function get() {
                    jalangiLabel9:
                        while (true) {
                            try {
                                J$.Fe(374505, arguments.callee, this, arguments);
                                arguments = J$.N(374513, 'arguments', arguments, true, false, false);
                                return J$.Rt(374497, J$.B(23314, '+', J$.B(23306, '+', J$.G(374449, J$.G(374441, J$.G(374433, J$.R(374425, 'this', this, false, false), 's'), 'options'), 'host'), J$.T(374457, ':', 21, false)), J$.G(374489, J$.G(374481, J$.G(374473, J$.R(374465, 'this', this, false, false), 's'), 'options'), 'port')));
                            } catch (J$e) {
                                J$.Ex(385137, J$e);
                            } finally {
                                if (J$.Fr(385145))
                                    continue jalangiLabel9;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            var eventHandler = J$.W(377617, 'eventHandler', J$.T(377609, function eventHandler(self, event) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(377577, arguments.callee, this, arguments);
                            arguments = J$.N(377585, 'arguments', arguments, true, false, false);
                            self = J$.N(377593, 'self', self, true, false, false);
                            event = J$.N(377601, 'event', event, true, false, false);
                            return J$.Rt(377569, J$.T(377561, function (err, conn) {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(377513, arguments.callee, this, arguments);
                                            arguments = J$.N(377521, 'arguments', arguments, true, false, false);
                                            err = J$.N(377529, 'err', err, true, false, false);
                                            conn = J$.N(377537, 'conn', conn, true, false, false);
                                            J$.N(377545, 'object', object, false, false, false);
                                            J$.N(377553, '$clusterTime', $clusterTime, false, false, false);
                                            if (J$.C(23104, J$.M(375505, J$.G(375497, J$.G(375489, J$.R(375481, 'self', self, false, false), 's'), 'logger'), 'isInfo', false)())) {
                                                var object = J$.W(375561, 'object', J$.C(23096, J$.B(23378, 'instanceof', J$.R(375513, 'err', err, false, false), J$.R(375521, 'MongoError', MongoError, false, true))) ? J$.M(375545, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(375529, 'JSON', undefined, true, true) : JSON = J$.R(375529, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(375537, 'err', err, false, false)) : J$.T(375553, {}, 11, false), object, false, false);
                                                J$.M(375649, J$.G(375585, J$.G(375577, J$.R(375569, 'self', self, false, false), 's'), 'logger'), 'info', false)(J$.F(375641, J$.R(375593, 'f', f, false, true), false)(J$.T(375601, 'server %s fired event %s out with message %s', 21, false), J$.G(375617, J$.R(375609, 'self', self, false, false), 'name'), J$.R(375625, 'event', event, false, false), J$.R(375633, 'object', object, false, false)));
                                            }
                                            if (J$.C(23304, J$.B(23386, '===', J$.R(375657, 'event', event, false, false), J$.T(375665, 'connect', 21, false)))) {
                                                J$.P(375689, J$.R(375673, 'self', self, false, false), 'initialConnect', J$.T(375681, false, 23, false));
                                                J$.P(375721, J$.R(375697, 'self', self, false, false), 'ismaster', J$.G(375713, J$.R(375705, 'conn', conn, false, false), 'ismaster'));
                                                J$.P(375753, J$.R(375729, 'self', self, false, false), 'lastIsMasterMS', J$.G(375745, J$.R(375737, 'conn', conn, false, false), 'lastIsMasterMS'));
                                                if (J$.C(23112, J$.G(375769, J$.R(375761, 'conn', conn, false, false), 'agreedCompressor'))) {
                                                    J$.P(375825, J$.G(375801, J$.G(375793, J$.G(375785, J$.R(375777, 'self', self, false, false), 's'), 'pool'), 'options'), 'agreedCompressor', J$.G(375817, J$.R(375809, 'conn', conn, false, false), 'agreedCompressor'));
                                                }
                                                if (J$.C(23120, J$.G(375841, J$.R(375833, 'conn', conn, false, false), 'zlibCompressionLevel'))) {
                                                    J$.P(375897, J$.G(375873, J$.G(375865, J$.G(375857, J$.R(375849, 'self', self, false, false), 's'), 'pool'), 'options'), 'zlibCompressionLevel', J$.G(375889, J$.R(375881, 'conn', conn, false, false), 'zlibCompressionLevel'));
                                                }
                                                if (J$.C(23128, J$.G(375921, J$.G(375913, J$.R(375905, 'conn', conn, false, false), 'ismaster'), '$clusterTime'))) {
                                                    var $clusterTime = J$.W(375953, '$clusterTime', J$.G(375945, J$.G(375937, J$.R(375929, 'conn', conn, false, false), 'ismaster'), '$clusterTime'), $clusterTime, false, false);
                                                    J$.P(375977, J$.R(375961, 'self', self, false, false), 'clusterTime', J$.R(375969, '$clusterTime', $clusterTime, false, false));
                                                }
                                                if (J$.C(23136, J$.B(23394, '===', J$.G(376001, J$.G(375993, J$.R(375985, 'self', self, false, false), 'ismaster'), 'msg'), J$.T(376009, 'isdbgrid', 21, false)))) {
                                                    J$.P(376033, J$.R(376017, 'self', self, false, false), '_type', J$.T(376025, 'mongos', 21, false));
                                                }
                                                if (J$.C(23144, J$.G(376057, J$.G(376049, J$.R(376041, 'self', self, false, false), 's'), 'monitoring'))) {
                                                    J$.P(376137, J$.R(376065, 'self', self, false, false), 'monitoringProcessId', J$.F(376129, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(376073, 'setTimeout', undefined, true, true) : setTimeout = J$.R(376073, 'setTimeout', setTimeout, true, true)), false)(J$.F(376097, J$.R(376081, 'monitoringProcess', monitoringProcess, false, true), false)(J$.R(376089, 'self', self, false, false)), J$.G(376121, J$.G(376113, J$.R(376105, 'self', self, false, false), 's'), 'monitoringInterval')));
                                                }
                                                J$.M(376233, J$.R(376145, 'sdam', sdam, false, true), 'emitServerDescriptionChanged', false)(J$.R(376153, 'self', self, false, false), J$.T(376225, {
                                                    address: J$.G(376169, J$.R(376161, 'self', self, false, false), 'name'),
                                                    arbiters: J$.T(376177, [], 10, false),
                                                    hosts: J$.T(376185, [], 10, false),
                                                    passives: J$.T(376193, [], 10, false),
                                                    type: J$.M(376217, J$.R(376201, 'sdam', sdam, false, true), 'getTopologyType', false)(J$.R(376209, 'self', self, false, false))
                                                }, 11, false));
                                                if (J$.C(23152, J$.U(23402, '!', J$.G(376257, J$.G(376249, J$.R(376241, 'self', self, false, false), 's'), 'inTopology')))) {
                                                    J$.M(376377, J$.R(376265, 'sdam', sdam, false, true), 'emitTopologyDescriptionChanged', false)(J$.R(376273, 'self', self, false, false), J$.T(376369, {
                                                        topologyType: J$.T(376281, 'Single', 21, false),
                                                        servers: J$.T(376361, [J$.T(376353, {
                                                                address: J$.G(376297, J$.R(376289, 'self', self, false, false), 'name'),
                                                                arbiters: J$.T(376305, [], 10, false),
                                                                hosts: J$.T(376313, [], 10, false),
                                                                passives: J$.T(376321, [], 10, false),
                                                                type: J$.M(376345, J$.R(376329, 'sdam', sdam, false, true), 'getTopologyType', false)(J$.R(376337, 'self', self, false, false))
                                                            }, 11, false)], 10, false)
                                                    }, 11, false));
                                                }
                                                if (J$.C(23160, J$.M(376409, J$.G(376401, J$.G(376393, J$.R(376385, 'self', self, false, false), 's'), 'logger'), 'isInfo', false)())) {
                                                    J$.M(376513, J$.G(376433, J$.G(376425, J$.R(376417, 'self', self, false, false), 's'), 'logger'), 'info', false)(J$.F(376505, J$.R(376441, 'f', f, false, true), false)(J$.T(376449, 'server %s connected with ismaster [%s]', 21, false), J$.G(376465, J$.R(376457, 'self', self, false, false), 'name'), J$.M(376497, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(376473, 'JSON', undefined, true, true) : JSON = J$.R(376473, 'JSON', JSON, true, true)), 'stringify', false)(J$.G(376489, J$.R(376481, 'self', self, false, false), 'ismaster'))));
                                                }
                                                J$.M(376545, J$.R(376521, 'self', self, false, false), 'emit', false)(J$.T(376529, 'connect', 21, false), J$.R(376537, 'self', self, false, false));
                                            } else if (J$.C(23296, J$.C(23208, J$.C(23200, J$.C(23192, J$.C(23184, J$.C(23176, J$.C(23168, J$.B(23410, '===', J$.R(376553, 'event', event, false, false), J$.T(376561, 'error', 21, false))) ? J$._() : J$.B(23418, '===', J$.R(376569, 'event', event, false, false), J$.T(376577, 'parseError', 21, false))) ? J$._() : J$.B(23426, '===', J$.R(376585, 'event', event, false, false), J$.T(376593, 'close', 21, false))) ? J$._() : J$.B(23434, '===', J$.R(376601, 'event', event, false, false), J$.T(376609, 'timeout', 21, false))) ? J$._() : J$.B(23442, '===', J$.R(376617, 'event', event, false, false), J$.T(376625, 'reconnect', 21, false))) ? J$._() : J$.B(23450, '===', J$.R(376633, 'event', event, false, false), J$.T(376641, 'attemptReconnect', 21, false))) ? J$._() : J$.T(376649, 'reconnectFailed', 21, false))) {
                                                if (J$.C(23232, J$.C(23216, J$.R(376657, 'serverAccounting', serverAccounting, false, true)) ? J$.B(23466, '!==', J$.M(376721, J$.T(376705, [
                                                        J$.T(376665, 'close', 21, false),
                                                        J$.T(376673, 'timeout', 21, false),
                                                        J$.T(376681, 'error', 21, false),
                                                        J$.T(376689, 'parseError', 21, false),
                                                        J$.T(376697, 'reconnectFailed', 21, false)
                                                    ], 10, false), 'indexOf', false)(J$.R(376713, 'event', event, false, false)), J$.U(23458, '-', J$.T(376729, 1, 22, false))) : J$._())) {
                                                    if (J$.C(23224, J$.U(23474, '!', J$.G(376753, J$.G(376745, J$.R(376737, 'self', self, false, false), 's'), 'inTopology')))) {
                                                        J$.M(376801, J$.R(376761, 'self', self, false, false), 'emit', false)(J$.T(376769, 'topologyOpening', 21, false), J$.T(376793, { topologyId: J$.G(376785, J$.R(376777, 'self', self, false, false), 'id') }, 11, false));
                                                    }
                                                    J$.B(23482, 'delete', J$.R(376809, 'servers', servers, false, true), J$.G(376825, J$.R(376817, 'self', self, false, false), 'id'));
                                                }
                                                if (J$.C(23240, J$.B(23490, '===', J$.R(376833, 'event', event, false, false), J$.T(376841, 'close', 21, false)))) {
                                                    J$.M(376921, J$.R(376849, 'sdam', sdam, false, true), 'emitServerDescriptionChanged', false)(J$.R(376857, 'self', self, false, false), J$.T(376913, {
                                                        address: J$.G(376873, J$.R(376865, 'self', self, false, false), 'name'),
                                                        arbiters: J$.T(376881, [], 10, false),
                                                        hosts: J$.T(376889, [], 10, false),
                                                        passives: J$.T(376897, [], 10, false),
                                                        type: J$.T(376905, 'Unknown', 21, false)
                                                    }, 11, false));
                                                }
                                                if (J$.C(23256, J$.B(23498, '===', J$.R(376929, 'event', event, false, false), J$.T(376937, 'reconnectFailed', 21, false)))) {
                                                    J$.M(376969, J$.R(376945, 'self', self, false, false), 'emit', false)(J$.T(376953, 'reconnectFailed', 21, false), J$.R(376961, 'err', err, false, false));
                                                    if (J$.C(23248, J$.B(23506, '>', J$.G(377001, J$.M(376993, J$.R(376977, 'self', self, false, false), 'listeners', false)(J$.T(376985, 'error', 21, false)), 'length'), J$.T(377009, 0, 22, false)))) {
                                                        J$.M(377041, J$.R(377017, 'self', self, false, false), 'emit', false)(J$.T(377025, 'error', 21, false), J$.R(377033, 'err', err, false, false));
                                                    }
                                                    return J$.Rt(377049, undefined);
                                                }
                                                if (J$.C(23280, J$.C(23272, J$.C(23264, J$.B(23522, '!==', J$.M(377113, J$.T(377073, [
                                                        J$.T(377057, 'disconnected', 21, false),
                                                        J$.T(377065, 'connecting', 21, false)
                                                    ], 10, false), 'indexOf', false)(J$.G(377105, J$.G(377097, J$.G(377089, J$.R(377081, 'self', self, false, false), 's'), 'pool'), 'state')), J$.U(23514, '-', J$.T(377121, 1, 22, false)))) ? J$.G(377137, J$.R(377129, 'self', self, false, false), 'initialConnect') : J$._()) ? J$.B(23538, '!==', J$.M(377193, J$.T(377177, [
                                                        J$.T(377145, 'close', 21, false),
                                                        J$.T(377153, 'timeout', 21, false),
                                                        J$.T(377161, 'error', 21, false),
                                                        J$.T(377169, 'parseError', 21, false)
                                                    ], 10, false), 'indexOf', false)(J$.R(377185, 'event', event, false, false)), J$.U(23530, '-', J$.T(377201, 1, 22, false))) : J$._())) {
                                                    J$.P(377225, J$.R(377209, 'self', self, false, false), 'initialConnect', J$.T(377217, false, 23, false));
                                                    return J$.Rt(377321, J$.M(377313, J$.R(377233, 'self', self, false, false), 'emit', false)(J$.T(377241, 'error', 21, false), J$.F(377305, J$.R(377249, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.F(377297, J$.R(377257, 'f', f, false, true), false)(J$.T(377265, 'failed to connect to server [%s] on first connect [%s]', 21, false), J$.G(377281, J$.R(377273, 'self', self, false, false), 'name'), J$.R(377289, 'err', err, false, false)))));
                                                }
                                                if (J$.C(23288, J$.B(23546, '===', J$.R(377329, 'event', event, false, false), J$.T(377337, 'reconnect', 21, false)))) {
                                                    J$.M(377433, J$.R(377345, 'sdam', sdam, false, true), 'emitServerDescriptionChanged', false)(J$.R(377353, 'self', self, false, false), J$.T(377425, {
                                                        address: J$.G(377369, J$.R(377361, 'self', self, false, false), 'name'),
                                                        arbiters: J$.T(377377, [], 10, false),
                                                        hosts: J$.T(377385, [], 10, false),
                                                        passives: J$.T(377393, [], 10, false),
                                                        type: J$.M(377417, J$.R(377401, 'sdam', sdam, false, true), 'getTopologyType', false)(J$.R(377409, 'self', self, false, false))
                                                    }, 11, false));
                                                    return J$.Rt(377473, J$.M(377465, J$.R(377441, 'self', self, false, false), 'emit', false)(J$.R(377449, 'event', event, false, false), J$.R(377457, 'self', self, false, false)));
                                                }
                                                J$.M(377505, J$.R(377481, 'self', self, false, false), 'emit', false)(J$.R(377489, 'event', event, false, false), J$.R(377497, 'err', err, false, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(385217, J$e);
                                        } finally {
                                            if (J$.Fr(385225))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(385233, J$e);
                        } finally {
                            if (J$.Fr(385241))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), eventHandler, false, true);
            J$.P(378865, J$.G(377633, J$.R(377625, 'Server', Server, false, true), 'prototype'), 'connect', J$.T(378857, function (options) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(378825, arguments.callee, this, arguments);
                            arguments = J$.N(378833, 'arguments', arguments, true, false, false);
                            options = J$.N(378841, 'options', options, true, false, false);
                            J$.N(378849, 'self', self, false, false, false);
                            var self = J$.W(377649, 'self', J$.R(377641, 'this', this, false, false), self, false, false);
                            options = J$.W(377673, 'options', J$.C(23312, J$.R(377657, 'options', options, false, false)) ? J$._() : J$.T(377665, {}, 11, false), options, false, false);
                            if (J$.C(23320, J$.R(377681, 'serverAccounting', serverAccounting, false, true)))
                                J$.P(377721, J$.R(377689, 'servers', servers, false, true), J$.G(377705, J$.R(377697, 'this', this, false, false), 'id'), J$.R(377713, 'this', this, false, false));
                            if (J$.C(23344, J$.C(23336, J$.C(23328, J$.G(377745, J$.G(377737, J$.R(377729, 'self', self, false, false), 's'), 'pool')) ? J$.U(23554, '!', J$.M(377777, J$.G(377769, J$.G(377761, J$.R(377753, 'self', self, false, false), 's'), 'pool'), 'isDisconnected', false)()) : J$._()) ? J$.U(23562, '!', J$.M(377809, J$.G(377801, J$.G(377793, J$.R(377785, 'self', self, false, false), 's'), 'pool'), 'isDestroyed', false)()) : J$._())) {
                                throw J$.F(377881, J$.R(377817, 'MongoError', MongoError, false, true), true)(J$.F(377873, J$.R(377825, 'f', f, false, true), false)(J$.T(377833, 'server instance in invalid state %s', 21, false), J$.G(377865, J$.G(377857, J$.G(377849, J$.R(377841, 'self', self, false, false), 's'), 'pool'), 'state')));
                            }
                            J$.P(378009, J$.G(377897, J$.R(377889, 'self', self, false, false), 's'), 'pool', J$.F(378001, J$.R(377905, 'Pool', Pool, false, true), true)(J$.R(377913, 'this', this, false, false), J$.M(377993, J$.I(typeof Object === 'undefined' ? Object = J$.R(377921, 'Object', undefined, true, true) : Object = J$.R(377921, 'Object', Object, true, true)), 'assign', false)(J$.G(377945, J$.G(377937, J$.R(377929, 'self', self, false, false), 's'), 'options'), J$.R(377953, 'options', options, false, false), J$.T(377985, { bson: J$.G(377977, J$.G(377969, J$.R(377961, 'this', this, false, false), 's'), 'bson') }, 11, false))));
                            J$.M(378081, J$.G(378033, J$.G(378025, J$.R(378017, 'self', self, false, false), 's'), 'pool'), 'on', false)(J$.T(378041, 'close', 21, false), J$.F(378073, J$.R(378049, 'eventHandler', eventHandler, false, true), false)(J$.R(378057, 'self', self, false, false), J$.T(378065, 'close', 21, false)));
                            J$.M(378153, J$.G(378105, J$.G(378097, J$.R(378089, 'self', self, false, false), 's'), 'pool'), 'on', false)(J$.T(378113, 'error', 21, false), J$.F(378145, J$.R(378121, 'eventHandler', eventHandler, false, true), false)(J$.R(378129, 'self', self, false, false), J$.T(378137, 'error', 21, false)));
                            J$.M(378225, J$.G(378177, J$.G(378169, J$.R(378161, 'self', self, false, false), 's'), 'pool'), 'on', false)(J$.T(378185, 'timeout', 21, false), J$.F(378217, J$.R(378193, 'eventHandler', eventHandler, false, true), false)(J$.R(378201, 'self', self, false, false), J$.T(378209, 'timeout', 21, false)));
                            J$.M(378297, J$.G(378249, J$.G(378241, J$.R(378233, 'self', self, false, false), 's'), 'pool'), 'on', false)(J$.T(378257, 'parseError', 21, false), J$.F(378289, J$.R(378265, 'eventHandler', eventHandler, false, true), false)(J$.R(378273, 'self', self, false, false), J$.T(378281, 'parseError', 21, false)));
                            J$.M(378369, J$.G(378321, J$.G(378313, J$.R(378305, 'self', self, false, false), 's'), 'pool'), 'on', false)(J$.T(378329, 'connect', 21, false), J$.F(378361, J$.R(378337, 'eventHandler', eventHandler, false, true), false)(J$.R(378345, 'self', self, false, false), J$.T(378353, 'connect', 21, false)));
                            J$.M(378441, J$.G(378393, J$.G(378385, J$.R(378377, 'self', self, false, false), 's'), 'pool'), 'on', false)(J$.T(378401, 'reconnect', 21, false), J$.F(378433, J$.R(378409, 'eventHandler', eventHandler, false, true), false)(J$.R(378417, 'self', self, false, false), J$.T(378425, 'reconnect', 21, false)));
                            J$.M(378513, J$.G(378465, J$.G(378457, J$.R(378449, 'self', self, false, false), 's'), 'pool'), 'on', false)(J$.T(378473, 'reconnectFailed', 21, false), J$.F(378505, J$.R(378481, 'eventHandler', eventHandler, false, true), false)(J$.R(378489, 'self', self, false, false), J$.T(378497, 'reconnectFailed', 21, false)));
                            J$.F(378593, J$.R(378521, 'relayEvents', relayEvents, false, true), false)(J$.G(378545, J$.G(378537, J$.R(378529, 'self', self, false, false), 's'), 'pool'), J$.R(378553, 'self', self, false, false), J$.T(378585, [
                                J$.T(378561, 'commandStarted', 21, false),
                                J$.T(378569, 'commandSucceeded', 21, false),
                                J$.T(378577, 'commandFailed', 21, false)
                            ], 10, false));
                            if (J$.C(23352, J$.U(23570, '!', J$.G(378617, J$.G(378609, J$.R(378601, 'self', self, false, false), 's'), 'inTopology')))) {
                                J$.M(378665, J$.R(378625, 'this', this, false, false), 'emit', false)(J$.T(378633, 'topologyOpening', 21, false), J$.T(378657, { topologyId: J$.G(378649, J$.R(378641, 'self', self, false, false), 'id') }, 11, false));
                            }
                            J$.M(378785, J$.R(378673, 'self', self, false, false), 'emit', false)(J$.T(378681, 'serverOpening', 21, false), J$.T(378777, {
                                topologyId: J$.C(23360, J$.B(23586, '!==', J$.G(378705, J$.G(378697, J$.R(378689, 'self', self, false, false), 's'), 'topologyId'), J$.U(23578, '-', J$.T(378713, 1, 22, false)))) ? J$.G(378737, J$.G(378729, J$.R(378721, 'self', self, false, false), 's'), 'topologyId') : J$.G(378753, J$.R(378745, 'self', self, false, false), 'id'),
                                address: J$.G(378769, J$.R(378761, 'self', self, false, false), 'name')
                            }, 11, false));
                            J$.M(378817, J$.G(378809, J$.G(378801, J$.R(378793, 'self', self, false, false), 's'), 'pool'), 'connect', false)();
                        } catch (J$e) {
                            J$.Ex(385249, J$e);
                        } finally {
                            if (J$.Fr(385257))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(378977, J$.G(378881, J$.R(378873, 'Server', Server, false, true), 'prototype'), 'auth', J$.T(378969, function (credentials, callback) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(378937, arguments.callee, this, arguments);
                            arguments = J$.N(378945, 'arguments', arguments, true, false, false);
                            credentials = J$.N(378953, 'credentials', credentials, true, false, false);
                            callback = J$.N(378961, 'callback', callback, true, false, false);
                            if (J$.C(23368, J$.B(23602, '===', J$.U(23594, 'typeof', J$.R(378889, 'callback', callback, false, false)), J$.T(378897, 'function', 21, false))))
                                J$.F(378929, J$.R(378905, 'callback', callback, false, false), false)(J$.T(378913, null, 25, false), J$.T(378921, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(385265, J$e);
                        } finally {
                            if (J$.Fr(385273))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(379337, J$.G(378993, J$.R(378985, 'Server', Server, false, true), 'prototype'), 'getDescription', J$.T(379329, function () {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(379297, arguments.callee, this, arguments);
                            arguments = J$.N(379305, 'arguments', arguments, true, false, false);
                            J$.N(379313, 'ismaster', ismaster, false, false, false);
                            J$.N(379321, 'description', description, false, false, false);
                            var ismaster = J$.W(379025, 'ismaster', J$.C(23376, J$.G(379009, J$.R(379001, 'this', this, false, false), 'ismaster')) ? J$._() : J$.T(379017, {}, 11, false), ismaster, false, false);
                            var description = J$.W(379081, 'description', J$.T(379073, {
                                type: J$.M(379049, J$.R(379033, 'sdam', sdam, false, true), 'getTopologyType', false)(J$.R(379041, 'this', this, false, false)),
                                address: J$.G(379065, J$.R(379057, 'this', this, false, false), 'name')
                            }, 11, false), description, false, false);
                            if (J$.C(23384, J$.G(379097, J$.R(379089, 'ismaster', ismaster, false, false), 'hosts')))
                                J$.P(379129, J$.R(379105, 'description', description, false, false), 'hosts', J$.G(379121, J$.R(379113, 'ismaster', ismaster, false, false), 'hosts'));
                            if (J$.C(23392, J$.G(379145, J$.R(379137, 'ismaster', ismaster, false, false), 'arbiters')))
                                J$.P(379177, J$.R(379153, 'description', description, false, false), 'arbiters', J$.G(379169, J$.R(379161, 'ismaster', ismaster, false, false), 'arbiters'));
                            if (J$.C(23400, J$.G(379193, J$.R(379185, 'ismaster', ismaster, false, false), 'passives')))
                                J$.P(379225, J$.R(379201, 'description', description, false, false), 'passives', J$.G(379217, J$.R(379209, 'ismaster', ismaster, false, false), 'passives'));
                            if (J$.C(23408, J$.G(379241, J$.R(379233, 'ismaster', ismaster, false, false), 'setName')))
                                J$.P(379273, J$.R(379249, 'description', description, false, false), 'setName', J$.G(379265, J$.R(379257, 'ismaster', ismaster, false, false), 'setName'));
                            return J$.Rt(379289, J$.R(379281, 'description', description, false, false));
                        } catch (J$e) {
                            J$.Ex(385281, J$e);
                        } finally {
                            if (J$.Fr(385289))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(379409, J$.G(379353, J$.R(379345, 'Server', Server, false, true), 'prototype'), 'lastIsMaster', J$.T(379401, function () {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(379385, arguments.callee, this, arguments);
                            arguments = J$.N(379393, 'arguments', arguments, true, false, false);
                            return J$.Rt(379377, J$.G(379369, J$.R(379361, 'this', this, false, false), 'ismaster'));
                        } catch (J$e) {
                            J$.Ex(385297, J$e);
                        } finally {
                            if (J$.Fr(385305))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(379489, J$.G(379425, J$.R(379417, 'Server', Server, false, true), 'prototype'), 'unref', J$.T(379481, function () {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(379465, arguments.callee, this, arguments);
                            arguments = J$.N(379473, 'arguments', arguments, true, false, false);
                            J$.M(379457, J$.G(379449, J$.G(379441, J$.R(379433, 'this', this, false, false), 's'), 'pool'), 'unref', false)();
                        } catch (J$e) {
                            J$.Ex(385313, J$e);
                        } finally {
                            if (J$.Fr(385321))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(379617, J$.G(379505, J$.R(379497, 'Server', Server, false, true), 'prototype'), 'isConnected', J$.T(379609, function () {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(379593, arguments.callee, this, arguments);
                            arguments = J$.N(379601, 'arguments', arguments, true, false, false);
                            if (J$.C(23416, J$.U(23610, '!', J$.G(379529, J$.G(379521, J$.R(379513, 'this', this, false, false), 's'), 'pool'))))
                                return J$.Rt(379545, J$.T(379537, false, 23, false));
                            return J$.Rt(379585, J$.M(379577, J$.G(379569, J$.G(379561, J$.R(379553, 'this', this, false, false), 's'), 'pool'), 'isConnected', false)());
                        } catch (J$e) {
                            J$.Ex(385329, J$e);
                        } finally {
                            if (J$.Fr(385337))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(379745, J$.G(379633, J$.R(379625, 'Server', Server, false, true), 'prototype'), 'isDestroyed', J$.T(379737, function () {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(379721, arguments.callee, this, arguments);
                            arguments = J$.N(379729, 'arguments', arguments, true, false, false);
                            if (J$.C(23424, J$.U(23618, '!', J$.G(379657, J$.G(379649, J$.R(379641, 'this', this, false, false), 's'), 'pool'))))
                                return J$.Rt(379673, J$.T(379665, false, 23, false));
                            return J$.Rt(379713, J$.M(379705, J$.G(379697, J$.G(379689, J$.R(379681, 'this', this, false, false), 's'), 'pool'), 'isDestroyed', false)());
                        } catch (J$e) {
                            J$.Ex(385345, J$e);
                        } finally {
                            if (J$.Fr(385353))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(380753, J$.G(380033, J$.R(380025, 'Server', Server, false, true), 'prototype'), 'command', J$.T(380745, function (ns, cmd, options, callback) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(380681, arguments.callee, this, arguments);
                            arguments = J$.N(380689, 'arguments', arguments, true, false, false);
                            ns = J$.N(380697, 'ns', ns, true, false, false);
                            cmd = J$.N(380705, 'cmd', cmd, true, false, false);
                            options = J$.N(380713, 'options', options, true, false, false);
                            callback = J$.N(380721, 'callback', callback, true, false, false);
                            J$.N(380729, 'self', self, false, false, false);
                            J$.N(380737, 'result', result, false, false, false);
                            var self = J$.W(380049, 'self', J$.R(380041, 'this', this, false, false), self, false, false);
                            if (J$.C(23472, J$.B(23658, '===', J$.U(23650, 'typeof', J$.R(380057, 'options', options, false, false)), J$.T(380065, 'function', 21, false)))) {
                                callback = J$.W(380081, 'callback', J$.R(380073, 'options', options, false, false), callback, false, false), options = J$.W(380097, 'options', J$.T(380089, {}, 11, false), options, false, false), options = J$.W(380121, 'options', J$.C(23464, J$.R(380105, 'options', options, false, false)) ? J$._() : J$.T(380113, {}, 11, false), options, false, false);
                            }
                            var result = J$.W(380161, 'result', J$.F(380153, J$.R(380129, 'basicReadValidations', basicReadValidations, false, true), false)(J$.R(380137, 'self', self, false, false), J$.R(380145, 'options', options, false, false)), result, false, false);
                            if (J$.C(23480, J$.R(380169, 'result', result, false, false)))
                                return J$.Rt(380201, J$.F(380193, J$.R(380177, 'callback', callback, false, false), false)(J$.R(380185, 'result', result, false, false)));
                            options = J$.W(380257, 'options', J$.M(380249, J$.I(typeof Object === 'undefined' ? Object = J$.R(380209, 'Object', undefined, true, true) : Object = J$.R(380209, 'Object', Object, true, true)), 'assign', false)(J$.T(380217, {}, 11, false), J$.R(380225, 'options', options, false, false), J$.T(380241, { wireProtocolCommand: J$.T(380233, false, 23, false) }, 11, false)), options, false, false);
                            if (J$.C(23488, J$.M(380289, J$.G(380281, J$.G(380273, J$.R(380265, 'self', self, false, false), 's'), 'logger'), 'isDebug', false)()))
                                J$.M(380433, J$.G(380313, J$.G(380305, J$.R(380297, 'self', self, false, false), 's'), 'logger'), 'debug', false)(J$.F(380425, J$.R(380321, 'f', f, false, true), false)(J$.T(380329, 'executing command [%s] against %s', 21, false), J$.M(380401, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(380337, 'JSON', undefined, true, true) : JSON = J$.R(380337, 'JSON', JSON, true, true)), 'stringify', false)(J$.T(380393, {
                                    ns: J$.R(380345, 'ns', ns, false, false),
                                    cmd: J$.R(380353, 'cmd', cmd, false, false),
                                    options: J$.F(380385, J$.R(380361, 'debugOptions', debugOptions, false, true), false)(J$.R(380369, 'debugFields', debugFields, false, true), J$.R(380377, 'options', options, false, false))
                                }, 11, false)), J$.G(380417, J$.R(380409, 'self', self, false, false), 'name')));
                            if (J$.C(23496, J$.F(380497, J$.R(380441, 'disconnectHandler', disconnectHandler, false, true), false)(J$.R(380449, 'self', self, false, false), J$.T(380457, 'command', 21, false), J$.R(380465, 'ns', ns, false, false), J$.R(380473, 'cmd', cmd, false, false), J$.R(380481, 'options', options, false, false), J$.R(380489, 'callback', callback, false, false))))
                                return J$.Rt(380505, undefined);
                            if (J$.C(23504, J$.F(380537, J$.R(380513, 'collationNotSupported', collationNotSupported, false, true), false)(J$.R(380521, 'this', this, false, false), J$.R(380529, 'cmd', cmd, false, false)))) {
                                return J$.Rt(380617, J$.F(380609, J$.R(380545, 'callback', callback, false, false), false)(J$.F(380601, J$.R(380553, 'MongoError', MongoError, false, true), true)(J$.M(380593, J$.T(380561, 'server ', 21, false), 'concat', false)(J$.G(380577, J$.R(380569, 'this', this, false, false), 'name'), J$.T(380585, ' does not support collation', 21, false)))));
                            }
                            J$.M(380673, J$.R(380625, 'wireProtocol', wireProtocol, false, true), 'command', false)(J$.R(380633, 'self', self, false, false), J$.R(380641, 'ns', ns, false, false), J$.R(380649, 'cmd', cmd, false, false), J$.R(380657, 'options', options, false, false), J$.R(380665, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(385393, J$e);
                        } finally {
                            if (J$.Fr(385401))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(380905, J$.G(380769, J$.R(380761, 'Server', Server, false, true), 'prototype'), 'query', J$.T(380897, function (ns, cmd, cursorState, options, callback) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(380841, arguments.callee, this, arguments);
                            arguments = J$.N(380849, 'arguments', arguments, true, false, false);
                            ns = J$.N(380857, 'ns', ns, true, false, false);
                            cmd = J$.N(380865, 'cmd', cmd, true, false, false);
                            cursorState = J$.N(380873, 'cursorState', cursorState, true, false, false);
                            options = J$.N(380881, 'options', options, true, false, false);
                            callback = J$.N(380889, 'callback', callback, true, false, false);
                            J$.M(380833, J$.R(380777, 'wireProtocol', wireProtocol, false, true), 'query', false)(J$.R(380785, 'this', this, false, false), J$.R(380793, 'ns', ns, false, false), J$.R(380801, 'cmd', cmd, false, false), J$.R(380809, 'cursorState', cursorState, false, false), J$.R(380817, 'options', options, false, false), J$.R(380825, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(385409, J$e);
                        } finally {
                            if (J$.Fr(385417))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(381057, J$.G(380921, J$.R(380913, 'Server', Server, false, true), 'prototype'), 'getMore', J$.T(381049, function (ns, cursorState, batchSize, options, callback) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(380993, arguments.callee, this, arguments);
                            arguments = J$.N(381001, 'arguments', arguments, true, false, false);
                            ns = J$.N(381009, 'ns', ns, true, false, false);
                            cursorState = J$.N(381017, 'cursorState', cursorState, true, false, false);
                            batchSize = J$.N(381025, 'batchSize', batchSize, true, false, false);
                            options = J$.N(381033, 'options', options, true, false, false);
                            callback = J$.N(381041, 'callback', callback, true, false, false);
                            J$.M(380985, J$.R(380929, 'wireProtocol', wireProtocol, false, true), 'getMore', false)(J$.R(380937, 'this', this, false, false), J$.R(380945, 'ns', ns, false, false), J$.R(380953, 'cursorState', cursorState, false, false), J$.R(380961, 'batchSize', batchSize, false, false), J$.R(380969, 'options', options, false, false), J$.R(380977, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(385425, J$e);
                        } finally {
                            if (J$.Fr(385433))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(381177, J$.G(381073, J$.R(381065, 'Server', Server, false, true), 'prototype'), 'killCursors', J$.T(381169, function (ns, cursorState, callback) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(381129, arguments.callee, this, arguments);
                            arguments = J$.N(381137, 'arguments', arguments, true, false, false);
                            ns = J$.N(381145, 'ns', ns, true, false, false);
                            cursorState = J$.N(381153, 'cursorState', cursorState, true, false, false);
                            callback = J$.N(381161, 'callback', callback, true, false, false);
                            J$.M(381121, J$.R(381081, 'wireProtocol', wireProtocol, false, true), 'killCursors', false)(J$.R(381089, 'this', this, false, false), J$.R(381097, 'ns', ns, false, false), J$.R(381105, 'cursorState', cursorState, false, false), J$.R(381113, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(385441, J$e);
                        } finally {
                            if (J$.Fr(385449))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(381633, J$.G(381193, J$.R(381185, 'Server', Server, false, true), 'prototype'), 'insert', J$.T(381625, function (ns, ops, options, callback) {
                jalangiLabel29:
                    while (true) {
                        try {
                            J$.Fe(381561, arguments.callee, this, arguments);
                            arguments = J$.N(381569, 'arguments', arguments, true, false, false);
                            ns = J$.N(381577, 'ns', ns, true, false, false);
                            ops = J$.N(381585, 'ops', ops, true, false, false);
                            options = J$.N(381593, 'options', options, true, false, false);
                            callback = J$.N(381601, 'callback', callback, true, false, false);
                            J$.N(381609, 'self', self, false, false, false);
                            J$.N(381617, 'result', result, false, false, false);
                            var self = J$.W(381209, 'self', J$.R(381201, 'this', this, false, false), self, false, false);
                            if (J$.C(23520, J$.B(23674, '===', J$.U(23666, 'typeof', J$.R(381217, 'options', options, false, false)), J$.T(381225, 'function', 21, false)))) {
                                callback = J$.W(381241, 'callback', J$.R(381233, 'options', options, false, false), callback, false, false), options = J$.W(381257, 'options', J$.T(381249, {}, 11, false), options, false, false), options = J$.W(381281, 'options', J$.C(23512, J$.R(381265, 'options', options, false, false)) ? J$._() : J$.T(381273, {}, 11, false), options, false, false);
                            }
                            var result = J$.W(381321, 'result', J$.F(381313, J$.R(381289, 'basicWriteValidations', basicWriteValidations, false, true), false)(J$.R(381297, 'self', self, false, false), J$.R(381305, 'options', options, false, false)), result, false, false);
                            if (J$.C(23528, J$.R(381329, 'result', result, false, false)))
                                return J$.Rt(381361, J$.F(381353, J$.R(381337, 'callback', callback, false, false), false)(J$.R(381345, 'result', result, false, false)));
                            if (J$.C(23536, J$.F(381425, J$.R(381369, 'disconnectHandler', disconnectHandler, false, true), false)(J$.R(381377, 'self', self, false, false), J$.T(381385, 'insert', 21, false), J$.R(381393, 'ns', ns, false, false), J$.R(381401, 'ops', ops, false, false), J$.R(381409, 'options', options, false, false), J$.R(381417, 'callback', callback, false, false))))
                                return J$.Rt(381433, undefined);
                            ops = J$.W(381489, 'ops', J$.C(23544, J$.M(381457, J$.I(typeof Array === 'undefined' ? Array = J$.R(381441, 'Array', undefined, true, true) : Array = J$.R(381441, 'Array', Array, true, true)), 'isArray', false)(J$.R(381449, 'ops', ops, false, false))) ? J$.R(381465, 'ops', ops, false, false) : J$.T(381481, [J$.R(381473, 'ops', ops, false, false)], 10, false), ops, false, false);
                            return J$.Rt(381553, J$.M(381545, J$.R(381497, 'wireProtocol', wireProtocol, false, true), 'insert', false)(J$.R(381505, 'self', self, false, false), J$.R(381513, 'ns', ns, false, false), J$.R(381521, 'ops', ops, false, false), J$.R(381529, 'options', options, false, false), J$.R(381537, 'callback', callback, false, false)));
                        } catch (J$e) {
                            J$.Ex(385457, J$e);
                        } finally {
                            if (J$.Fr(385465))
                                continue jalangiLabel29;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(382201, J$.G(381649, J$.R(381641, 'Server', Server, false, true), 'prototype'), 'update', J$.T(382193, function (ns, ops, options, callback) {
                jalangiLabel30:
                    while (true) {
                        try {
                            J$.Fe(382129, arguments.callee, this, arguments);
                            arguments = J$.N(382137, 'arguments', arguments, true, false, false);
                            ns = J$.N(382145, 'ns', ns, true, false, false);
                            ops = J$.N(382153, 'ops', ops, true, false, false);
                            options = J$.N(382161, 'options', options, true, false, false);
                            callback = J$.N(382169, 'callback', callback, true, false, false);
                            J$.N(382177, 'self', self, false, false, false);
                            J$.N(382185, 'result', result, false, false, false);
                            var self = J$.W(381665, 'self', J$.R(381657, 'this', this, false, false), self, false, false);
                            if (J$.C(23560, J$.B(23690, '===', J$.U(23682, 'typeof', J$.R(381673, 'options', options, false, false)), J$.T(381681, 'function', 21, false)))) {
                                callback = J$.W(381697, 'callback', J$.R(381689, 'options', options, false, false), callback, false, false), options = J$.W(381713, 'options', J$.T(381705, {}, 11, false), options, false, false), options = J$.W(381737, 'options', J$.C(23552, J$.R(381721, 'options', options, false, false)) ? J$._() : J$.T(381729, {}, 11, false), options, false, false);
                            }
                            var result = J$.W(381777, 'result', J$.F(381769, J$.R(381745, 'basicWriteValidations', basicWriteValidations, false, true), false)(J$.R(381753, 'self', self, false, false), J$.R(381761, 'options', options, false, false)), result, false, false);
                            if (J$.C(23568, J$.R(381785, 'result', result, false, false)))
                                return J$.Rt(381817, J$.F(381809, J$.R(381793, 'callback', callback, false, false), false)(J$.R(381801, 'result', result, false, false)));
                            if (J$.C(23576, J$.F(381881, J$.R(381825, 'disconnectHandler', disconnectHandler, false, true), false)(J$.R(381833, 'self', self, false, false), J$.T(381841, 'update', 21, false), J$.R(381849, 'ns', ns, false, false), J$.R(381857, 'ops', ops, false, false), J$.R(381865, 'options', options, false, false), J$.R(381873, 'callback', callback, false, false))))
                                return J$.Rt(381889, undefined);
                            if (J$.C(23584, J$.F(381921, J$.R(381897, 'collationNotSupported', collationNotSupported, false, true), false)(J$.R(381905, 'this', this, false, false), J$.R(381913, 'options', options, false, false)))) {
                                return J$.Rt(382001, J$.F(381993, J$.R(381929, 'callback', callback, false, false), false)(J$.F(381985, J$.R(381937, 'MongoError', MongoError, false, true), true)(J$.M(381977, J$.T(381945, 'server ', 21, false), 'concat', false)(J$.G(381961, J$.R(381953, 'this', this, false, false), 'name'), J$.T(381969, ' does not support collation', 21, false)))));
                            }
                            ops = J$.W(382057, 'ops', J$.C(23592, J$.M(382025, J$.I(typeof Array === 'undefined' ? Array = J$.R(382009, 'Array', undefined, true, true) : Array = J$.R(382009, 'Array', Array, true, true)), 'isArray', false)(J$.R(382017, 'ops', ops, false, false))) ? J$.R(382033, 'ops', ops, false, false) : J$.T(382049, [J$.R(382041, 'ops', ops, false, false)], 10, false), ops, false, false);
                            return J$.Rt(382121, J$.M(382113, J$.R(382065, 'wireProtocol', wireProtocol, false, true), 'update', false)(J$.R(382073, 'self', self, false, false), J$.R(382081, 'ns', ns, false, false), J$.R(382089, 'ops', ops, false, false), J$.R(382097, 'options', options, false, false), J$.R(382105, 'callback', callback, false, false)));
                        } catch (J$e) {
                            J$.Ex(385473, J$e);
                        } finally {
                            if (J$.Fr(385481))
                                continue jalangiLabel30;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(382769, J$.G(382217, J$.R(382209, 'Server', Server, false, true), 'prototype'), 'remove', J$.T(382761, function (ns, ops, options, callback) {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(382697, arguments.callee, this, arguments);
                            arguments = J$.N(382705, 'arguments', arguments, true, false, false);
                            ns = J$.N(382713, 'ns', ns, true, false, false);
                            ops = J$.N(382721, 'ops', ops, true, false, false);
                            options = J$.N(382729, 'options', options, true, false, false);
                            callback = J$.N(382737, 'callback', callback, true, false, false);
                            J$.N(382745, 'self', self, false, false, false);
                            J$.N(382753, 'result', result, false, false, false);
                            var self = J$.W(382233, 'self', J$.R(382225, 'this', this, false, false), self, false, false);
                            if (J$.C(23608, J$.B(23706, '===', J$.U(23698, 'typeof', J$.R(382241, 'options', options, false, false)), J$.T(382249, 'function', 21, false)))) {
                                callback = J$.W(382265, 'callback', J$.R(382257, 'options', options, false, false), callback, false, false), options = J$.W(382281, 'options', J$.T(382273, {}, 11, false), options, false, false), options = J$.W(382305, 'options', J$.C(23600, J$.R(382289, 'options', options, false, false)) ? J$._() : J$.T(382297, {}, 11, false), options, false, false);
                            }
                            var result = J$.W(382345, 'result', J$.F(382337, J$.R(382313, 'basicWriteValidations', basicWriteValidations, false, true), false)(J$.R(382321, 'self', self, false, false), J$.R(382329, 'options', options, false, false)), result, false, false);
                            if (J$.C(23616, J$.R(382353, 'result', result, false, false)))
                                return J$.Rt(382385, J$.F(382377, J$.R(382361, 'callback', callback, false, false), false)(J$.R(382369, 'result', result, false, false)));
                            if (J$.C(23624, J$.F(382449, J$.R(382393, 'disconnectHandler', disconnectHandler, false, true), false)(J$.R(382401, 'self', self, false, false), J$.T(382409, 'remove', 21, false), J$.R(382417, 'ns', ns, false, false), J$.R(382425, 'ops', ops, false, false), J$.R(382433, 'options', options, false, false), J$.R(382441, 'callback', callback, false, false))))
                                return J$.Rt(382457, undefined);
                            if (J$.C(23632, J$.F(382489, J$.R(382465, 'collationNotSupported', collationNotSupported, false, true), false)(J$.R(382473, 'this', this, false, false), J$.R(382481, 'options', options, false, false)))) {
                                return J$.Rt(382569, J$.F(382561, J$.R(382497, 'callback', callback, false, false), false)(J$.F(382553, J$.R(382505, 'MongoError', MongoError, false, true), true)(J$.M(382545, J$.T(382513, 'server ', 21, false), 'concat', false)(J$.G(382529, J$.R(382521, 'this', this, false, false), 'name'), J$.T(382537, ' does not support collation', 21, false)))));
                            }
                            ops = J$.W(382625, 'ops', J$.C(23640, J$.M(382593, J$.I(typeof Array === 'undefined' ? Array = J$.R(382577, 'Array', undefined, true, true) : Array = J$.R(382577, 'Array', Array, true, true)), 'isArray', false)(J$.R(382585, 'ops', ops, false, false))) ? J$.R(382601, 'ops', ops, false, false) : J$.T(382617, [J$.R(382609, 'ops', ops, false, false)], 10, false), ops, false, false);
                            return J$.Rt(382689, J$.M(382681, J$.R(382633, 'wireProtocol', wireProtocol, false, true), 'remove', false)(J$.R(382641, 'self', self, false, false), J$.R(382649, 'ns', ns, false, false), J$.R(382657, 'ops', ops, false, false), J$.R(382665, 'options', options, false, false), J$.R(382673, 'callback', callback, false, false)));
                        } catch (J$e) {
                            J$.Ex(385489, J$e);
                        } finally {
                            if (J$.Fr(385497))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(383017, J$.G(382785, J$.R(382777, 'Server', Server, false, true), 'prototype'), 'cursor', J$.T(383009, function (ns, cmd, options) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(382953, arguments.callee, this, arguments);
                            arguments = J$.N(382961, 'arguments', arguments, true, false, false);
                            ns = J$.N(382969, 'ns', ns, true, false, false);
                            cmd = J$.N(382977, 'cmd', cmd, true, false, false);
                            options = J$.N(382985, 'options', options, true, false, false);
                            J$.N(382993, 'topology', topology, false, false, false);
                            J$.N(383001, 'FinalCursor', FinalCursor, false, false, false);
                            options = J$.W(382809, 'options', J$.C(23648, J$.R(382793, 'options', options, false, false)) ? J$._() : J$.T(382801, {}, 11, false), options, false, false);
                            var topology = J$.W(382841, 'topology', J$.C(23656, J$.G(382825, J$.R(382817, 'options', options, false, false), 'topology')) ? J$._() : J$.R(382833, 'this', this, false, false), topology, false, false);
                            var FinalCursor = J$.W(382889, 'FinalCursor', J$.C(23664, J$.G(382857, J$.R(382849, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.G(382881, J$.G(382873, J$.R(382865, 'this', this, false, false), 's'), 'Cursor'), FinalCursor, false, false);
                            return J$.Rt(382945, J$.F(382937, J$.R(382897, 'FinalCursor', FinalCursor, false, false), true)(J$.R(382905, 'topology', topology, false, false), J$.R(382913, 'ns', ns, false, false), J$.R(382921, 'cmd', cmd, false, false), J$.R(382929, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(385505, J$e);
                        } finally {
                            if (J$.Fr(385513))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(383225, J$.G(383033, J$.R(383025, 'Server', Server, false, true), 'prototype'), 'equals', J$.T(383217, function (server) {
                jalangiLabel33:
                    while (true) {
                        try {
                            J$.Fe(383193, arguments.callee, this, arguments);
                            arguments = J$.N(383201, 'arguments', arguments, true, false, false);
                            server = J$.N(383209, 'server', server, true, false, false);
                            if (J$.C(23672, J$.B(23722, '===', J$.U(23714, 'typeof', J$.R(383041, 'server', server, false, false)), J$.T(383049, 'string', 21, false))))
                                return J$.Rt(383097, J$.B(23730, '===', J$.M(383073, J$.G(383065, J$.R(383057, 'this', this, false, false), 'name'), 'toLowerCase', false)(), J$.M(383089, J$.R(383081, 'server', server, false, false), 'toLowerCase', false)()));
                            if (J$.C(23680, J$.G(383113, J$.R(383105, 'server', server, false, false), 'name')))
                                return J$.Rt(383169, J$.B(23738, '===', J$.M(383137, J$.G(383129, J$.R(383121, 'this', this, false, false), 'name'), 'toLowerCase', false)(), J$.M(383161, J$.G(383153, J$.R(383145, 'server', server, false, false), 'name'), 'toLowerCase', false)()));
                            return J$.Rt(383185, J$.T(383177, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(385521, J$e);
                        } finally {
                            if (J$.Fr(385529))
                                continue jalangiLabel33;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(383313, J$.G(383241, J$.R(383233, 'Server', Server, false, true), 'prototype'), 'connections', J$.T(383305, function () {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(383289, arguments.callee, this, arguments);
                            arguments = J$.N(383297, 'arguments', arguments, true, false, false);
                            return J$.Rt(383281, J$.M(383273, J$.G(383265, J$.G(383257, J$.R(383249, 'this', this, false, false), 's'), 'pool'), 'allConnections', false)());
                        } catch (J$e) {
                            J$.Ex(385537, J$e);
                        } finally {
                            if (J$.Fr(385545))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(383561, J$.G(383329, J$.R(383321, 'Server', Server, false, true), 'prototype'), 'selectServer', J$.T(383553, function (selector, options, callback) {
                jalangiLabel35:
                    while (true) {
                        try {
                            J$.Fe(383513, arguments.callee, this, arguments);
                            arguments = J$.N(383521, 'arguments', arguments, true, false, false);
                            selector = J$.N(383529, 'selector', selector, true, false, false);
                            options = J$.N(383537, 'options', options, true, false, false);
                            callback = J$.N(383545, 'callback', callback, true, false, false);
                            if (J$.C(23696, J$.C(23688, J$.B(23754, '===', J$.U(23746, 'typeof', J$.R(383337, 'selector', selector, false, false)), J$.T(383345, 'function', 21, false))) ? J$.B(23770, '===', J$.U(23762, 'typeof', J$.R(383353, 'callback', callback, false, false)), J$.T(383361, 'undefined', 21, false)) : J$._()))
                                callback = J$.W(383377, 'callback', J$.R(383369, 'selector', selector, false, false), callback, false, false), selector = J$.W(383393, 'selector', J$.T(383385, undefined, 24, false), selector, false, false), options = J$.W(383409, 'options', J$.T(383401, {}, 11, false), options, false, false);
                            if (J$.C(23704, J$.B(23786, '===', J$.U(23778, 'typeof', J$.R(383417, 'options', options, false, false)), J$.T(383425, 'function', 21, false))))
                                callback = J$.W(383441, 'callback', J$.R(383433, 'options', options, false, false), callback, false, false), options = J$.W(383457, 'options', J$.R(383449, 'selector', selector, false, false), options, false, false), selector = J$.W(383473, 'selector', J$.T(383465, undefined, 24, false), selector, false, false);
                            J$.F(383505, J$.R(383481, 'callback', callback, false, false), false)(J$.T(383489, null, 25, false), J$.R(383497, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(385553, J$e);
                        } finally {
                            if (J$.Fr(385561))
                                continue jalangiLabel35;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var listeners = J$.W(383617, 'listeners', J$.T(383609, [
                J$.T(383569, 'close', 21, false),
                J$.T(383577, 'error', 21, false),
                J$.T(383585, 'timeout', 21, false),
                J$.T(383593, 'parseError', 21, false),
                J$.T(383601, 'connect', 21, false)
            ], 10, false), listeners, false, true);
            J$.P(384673, J$.G(383633, J$.R(383625, 'Server', Server, false, true), 'prototype'), 'destroy', J$.T(384665, function (options, callback) {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(384625, arguments.callee, this, arguments);
                            arguments = J$.N(384633, 'arguments', arguments, true, false, false);
                            options = J$.N(384641, 'options', options, true, false, false);
                            callback = J$.N(384649, 'callback', callback, true, false, false);
                            J$.N(384657, 'self', self, false, false, false);
                            if (J$.C(23720, J$.G(383649, J$.R(383641, 'this', this, false, false), '_destroyed'))) {
                                if (J$.C(23712, J$.B(23802, '===', J$.U(23794, 'typeof', J$.R(383657, 'callback', callback, false, false)), J$.T(383665, 'function', 21, false))))
                                    J$.F(383697, J$.R(383673, 'callback', callback, false, false), false)(J$.T(383681, null, 25, false), J$.T(383689, null, 25, false));
                                return J$.Rt(383705, undefined);
                            }
                            if (J$.C(23728, J$.B(23818, '===', J$.U(23810, 'typeof', J$.R(383713, 'options', options, false, false)), J$.T(383721, 'function', 21, false)))) {
                                callback = J$.W(383737, 'callback', J$.R(383729, 'options', options, false, false), callback, false, false);
                                options = J$.W(383753, 'options', J$.T(383745, {}, 11, false), options, false, false);
                            }
                            options = J$.W(383777, 'options', J$.C(23736, J$.R(383761, 'options', options, false, false)) ? J$._() : J$.T(383769, {}, 11, false), options, false, false);
                            var self = J$.W(383793, 'self', J$.R(383785, 'this', this, false, false), self, false, false);
                            if (J$.C(23744, J$.R(383801, 'serverAccounting', serverAccounting, false, true)))
                                J$.B(23826, 'delete', J$.R(383809, 'servers', servers, false, true), J$.G(383825, J$.R(383817, 'this', this, false, false), 'id'));
                            if (J$.C(23752, J$.G(383841, J$.R(383833, 'this', this, false, false), 'monitoringProcessId'))) {
                                J$.F(383873, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(383849, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(383849, 'clearTimeout', clearTimeout, true, true)), false)(J$.G(383865, J$.R(383857, 'this', this, false, false), 'monitoringProcessId'));
                            }
                            if (J$.C(23768, J$.U(23834, '!', J$.G(383897, J$.G(383889, J$.R(383881, 'self', self, false, false), 's'), 'pool')))) {
                                J$.P(383921, J$.R(383905, 'this', this, false, false), '_destroyed', J$.T(383913, true, 23, false));
                                if (J$.C(23760, J$.B(23850, '===', J$.U(23842, 'typeof', J$.R(383929, 'callback', callback, false, false)), J$.T(383937, 'function', 21, false))))
                                    J$.F(383969, J$.R(383945, 'callback', callback, false, false), false)(J$.T(383953, null, 25, false), J$.T(383961, null, 25, false));
                                return J$.Rt(383977, undefined);
                            }
                            if (J$.C(23776, J$.G(383993, J$.R(383985, 'options', options, false, false), 'emitClose'))) {
                                J$.M(384025, J$.R(384001, 'self', self, false, false), 'emit', false)(J$.T(384009, 'close', 21, false), J$.R(384017, 'self', self, false, false));
                            }
                            if (J$.C(23784, J$.G(384041, J$.R(384033, 'options', options, false, false), 'emitDestroy'))) {
                                J$.M(384073, J$.R(384049, 'self', self, false, false), 'emit', false)(J$.T(384057, 'destroy', 21, false), J$.R(384065, 'self', self, false, false));
                            }
                            J$.M(384161, J$.R(384081, 'listeners', listeners, false, true), 'forEach', false)(J$.T(384153, function (event) {
                                jalangiLabel36:
                                    while (true) {
                                        try {
                                            J$.Fe(384129, arguments.callee, this, arguments);
                                            arguments = J$.N(384137, 'arguments', arguments, true, false, false);
                                            event = J$.N(384145, 'event', event, true, false, false);
                                            J$.M(384121, J$.G(384105, J$.G(384097, J$.R(384089, 'self', self, false, false), 's'), 'pool'), 'removeAllListeners', false)(J$.R(384113, 'event', event, false, false));
                                        } catch (J$e) {
                                            J$.Ex(385569, J$e);
                                        } finally {
                                            if (J$.Fr(385577))
                                                continue jalangiLabel36;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            if (J$.C(23800, J$.B(23858, '>', J$.G(384193, J$.M(384185, J$.R(384169, 'self', self, false, false), 'listeners', false)(J$.T(384177, 'serverClosed', 21, false)), 'length'), J$.T(384201, 0, 22, false))))
                                J$.M(384321, J$.R(384209, 'self', self, false, false), 'emit', false)(J$.T(384217, 'serverClosed', 21, false), J$.T(384313, {
                                    topologyId: J$.C(23792, J$.B(23874, '!==', J$.G(384241, J$.G(384233, J$.R(384225, 'self', self, false, false), 's'), 'topologyId'), J$.U(23866, '-', J$.T(384249, 1, 22, false)))) ? J$.G(384273, J$.G(384265, J$.R(384257, 'self', self, false, false), 's'), 'topologyId') : J$.G(384289, J$.R(384281, 'self', self, false, false), 'id'),
                                    address: J$.G(384305, J$.R(384297, 'self', self, false, false), 'name')
                                }, 11, false));
                            if (J$.C(23816, J$.C(23808, J$.B(23882, '>', J$.G(384353, J$.M(384345, J$.R(384329, 'self', self, false, false), 'listeners', false)(J$.T(384337, 'topologyClosed', 21, false)), 'length'), J$.T(384361, 0, 22, false))) ? J$.U(23890, '!', J$.G(384385, J$.G(384377, J$.R(384369, 'self', self, false, false), 's'), 'inTopology')) : J$._())) {
                                J$.M(384433, J$.R(384393, 'self', self, false, false), 'emit', false)(J$.T(384401, 'topologyClosed', 21, false), J$.T(384425, { topologyId: J$.G(384417, J$.R(384409, 'self', self, false, false), 'id') }, 11, false));
                            }
                            if (J$.C(23824, J$.M(384465, J$.G(384457, J$.G(384449, J$.R(384441, 'self', self, false, false), 's'), 'logger'), 'isDebug', false)())) {
                                J$.M(384537, J$.G(384489, J$.G(384481, J$.R(384473, 'self', self, false, false), 's'), 'logger'), 'debug', false)(J$.F(384529, J$.R(384497, 'f', f, false, true), false)(J$.T(384505, 'destroy called on server %s', 21, false), J$.G(384521, J$.R(384513, 'self', self, false, false), 'name')));
                            }
                            J$.M(384593, J$.G(384561, J$.G(384553, J$.R(384545, 'this', this, false, false), 's'), 'pool'), 'destroy', false)(J$.G(384577, J$.R(384569, 'options', options, false, false), 'force'), J$.R(384585, 'callback', callback, false, false));
                            J$.P(384617, J$.R(384601, 'this', this, false, false), '_destroyed', J$.T(384609, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(385585, J$e);
                        } finally {
                            if (J$.Fr(385593))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(384697, J$.I(typeof module === 'undefined' ? module = J$.R(384681, 'module', undefined, true, true) : module = J$.R(384681, 'module', module, true, true)), 'exports', J$.R(384689, 'Server', Server, false, true));
        } catch (J$e) {
            J$.Ex(385601, J$e);
        } finally {
            if (J$.Sr(385609))
                continue jalangiLabel38;
            else
                break jalangiLabel38;
        }
    }
// JALANGI DO NOT INSTRUMENT

