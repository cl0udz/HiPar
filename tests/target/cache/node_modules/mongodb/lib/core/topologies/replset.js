J$.noInstrEval = false;
jalangiLabel72:
    while (true) {
        try {
            J$.Se(349401, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/topologies/replset.js');
            function stateTransition(self, newState) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(327385, arguments.callee, this, arguments);
                            arguments = J$.N(327393, 'arguments', arguments, true, false, false);
                            self = J$.N(327401, 'self', self, true, false, false);
                            newState = J$.N(327409, 'newState', newState, true, false, false);
                            J$.N(327417, 'legalTransitions', legalTransitions, false, false, false);
                            J$.N(327425, 'legalStates', legalStates, false, false, false);
                            var legalTransitions = J$.W(327169, 'legalTransitions', J$.T(327161, {
                                disconnected: J$.T(327033, [
                                    J$.R(327009, 'CONNECTING', CONNECTING, false, true),
                                    J$.R(327017, 'DESTROYED', DESTROYED, false, true),
                                    J$.R(327025, 'DISCONNECTED', DISCONNECTED, false, true)
                                ], 10, false),
                                connecting: J$.T(327073, [
                                    J$.R(327041, 'CONNECTING', CONNECTING, false, true),
                                    J$.R(327049, 'DESTROYED', DESTROYED, false, true),
                                    J$.R(327057, 'CONNECTED', CONNECTED, false, true),
                                    J$.R(327065, 'DISCONNECTED', DISCONNECTED, false, true)
                                ], 10, false),
                                connected: J$.T(327113, [
                                    J$.R(327081, 'CONNECTED', CONNECTED, false, true),
                                    J$.R(327089, 'DISCONNECTED', DISCONNECTED, false, true),
                                    J$.R(327097, 'DESTROYED', DESTROYED, false, true),
                                    J$.R(327105, 'UNREFERENCED', UNREFERENCED, false, true)
                                ], 10, false),
                                unreferenced: J$.T(327137, [
                                    J$.R(327121, 'UNREFERENCED', UNREFERENCED, false, true),
                                    J$.R(327129, 'DESTROYED', DESTROYED, false, true)
                                ], 10, false),
                                destroyed: J$.T(327153, [J$.R(327145, 'DESTROYED', DESTROYED, false, true)], 10, false)
                            }, 11, false), legalTransitions, false, false);
                            var legalStates = J$.W(327209, 'legalStates', J$.G(327201, J$.R(327177, 'legalTransitions', legalTransitions, false, false), J$.G(327193, J$.R(327185, 'self', self, false, false), 'state')), legalStates, false, false);
                            if (J$.C(19224, J$.C(19216, J$.R(327217, 'legalStates', legalStates, false, false)) ? J$.B(20210, '!==', J$.M(327241, J$.R(327225, 'legalStates', legalStates, false, false), 'indexOf', false)(J$.R(327233, 'newState', newState, false, false)), J$.U(20202, '-', J$.T(327249, 1, 22, false))) : J$._())) {
                                J$.P(327273, J$.R(327257, 'self', self, false, false), 'state', J$.R(327265, 'newState', newState, false, false));
                            } else {
                                J$.M(327377, J$.G(327297, J$.G(327289, J$.R(327281, 'self', self, false, false), 's'), 'logger'), 'error', false)(J$.F(327369, J$.R(327305, 'f', f, false, true), false)(J$.T(327313, 'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]', 21, false), J$.G(327329, J$.R(327321, 'self', self, false, false), 'id'), J$.G(327345, J$.R(327337, 'self', self, false, false), 'state'), J$.R(327353, 'newState', newState, false, false), J$.R(327361, 'legalStates', legalStates, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(349873, J$e);
                        } finally {
                            if (J$.Fr(349881))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function rexecuteOperations(self) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(330073, arguments.callee, this, arguments);
                            arguments = J$.N(330081, 'arguments', arguments, true, false, false);
                            self = J$.N(330089, 'self', self, true, false, false);
                            if (J$.C(19408, J$.C(19368, J$.M(329801, J$.G(329793, J$.G(329785, J$.R(329777, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimaryAndSecondary', false)()) ? J$.G(329825, J$.G(329817, J$.R(329809, 'self', self, false, false), 's'), 'disconnectHandler') : J$._())) {
                                J$.M(329857, J$.G(329849, J$.G(329841, J$.R(329833, 'self', self, false, false), 's'), 'disconnectHandler'), 'execute', false)();
                            } else if (J$.C(19400, J$.C(19376, J$.M(329889, J$.G(329881, J$.G(329873, J$.R(329865, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)()) ? J$.G(329913, J$.G(329905, J$.R(329897, 'self', self, false, false), 's'), 'disconnectHandler') : J$._())) {
                                J$.M(329961, J$.G(329937, J$.G(329929, J$.R(329921, 'self', self, false, false), 's'), 'disconnectHandler'), 'execute', false)(J$.T(329953, { executePrimary: J$.T(329945, true, 23, false) }, 11, false));
                            } else if (J$.C(19392, J$.C(19384, J$.M(329993, J$.G(329985, J$.G(329977, J$.R(329969, 'self', self, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)()) ? J$.G(330017, J$.G(330009, J$.R(330001, 'self', self, false, false), 's'), 'disconnectHandler') : J$._())) {
                                J$.M(330065, J$.G(330041, J$.G(330033, J$.R(330025, 'self', self, false, false), 's'), 'disconnectHandler'), 'execute', false)(J$.T(330057, { executeSecondary: J$.T(330049, true, 23, false) }, 11, false));
                            }
                        } catch (J$e) {
                            J$.Ex(350017, J$e);
                        } finally {
                            if (J$.Fr(350025))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connectNewServers(self, servers, callback) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(332385, arguments.callee, this, arguments);
                            function execute(_server, i) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(332249, arguments.callee, this, arguments);
                                            arguments = J$.N(332257, 'arguments', arguments, true, false, false);
                                            _server = J$.N(332265, '_server', _server, true, false, false);
                                            i = J$.N(332273, 'i', i, true, false, false);
                                            J$.F(332241, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(331177, 'setTimeout', undefined, true, true) : setTimeout = J$.R(331177, 'setTimeout', setTimeout, true, true)), false)(J$.T(332225, function () {
                                                jalangiLabel15:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(332201, arguments.callee, this, arguments);
                                                            arguments = J$.N(332209, 'arguments', arguments, true, false, false);
                                                            J$.N(332217, 'server', server, false, false, false);
                                                            if (J$.C(19520, J$.C(19512, J$.B(20426, '===', J$.G(331193, J$.R(331185, 'self', self, false, false), 'state'), J$.R(331201, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20434, '===', J$.G(331217, J$.R(331209, 'self', self, false, false), 'state'), J$.R(331225, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                return J$.Rt(331233, undefined);
                                                            }
                                                            var server = J$.W(331481, 'server', J$.F(331473, J$.R(331241, 'Server', Server, false, true), true)(J$.M(331465, J$.I(typeof Object === 'undefined' ? Object = J$.R(331249, 'Object', undefined, true, true) : Object = J$.R(331249, 'Object', Object, true, true)), 'assign', false)(J$.T(331257, {}, 11, false), J$.G(331281, J$.G(331273, J$.R(331265, 'self', self, false, false), 's'), 'options'), J$.T(331457, {
                                                                host: J$.G(331321, J$.M(331305, J$.R(331289, '_server', _server, false, false), 'split', false)(J$.T(331297, ':', 21, false)), J$.T(331313, 0, 22, false)),
                                                                port: J$.F(331385, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(331329, 'parseInt', undefined, true, true) : parseInt = J$.R(331329, 'parseInt', parseInt, true, true)), false)(J$.G(331369, J$.M(331353, J$.R(331337, '_server', _server, false, false), 'split', false)(J$.T(331345, ':', 21, false)), J$.T(331361, 1, 22, false)), J$.T(331377, 10, 22, false)),
                                                                reconnect: J$.T(331393, false, 23, false),
                                                                monitoring: J$.T(331401, false, 23, false),
                                                                parent: J$.R(331409, 'self', self, false, false),
                                                                clientInfo: J$.F(331449, J$.R(331417, 'clone', clone, false, true), false)(J$.G(331441, J$.G(331433, J$.R(331425, 'self', self, false, false), 's'), 'clientInfo'))
                                                            }, 11, false))), server, false, false);
                                                            J$.M(331537, J$.R(331489, 'server', server, false, false), 'once', false)(J$.T(331497, 'connect', 21, false), J$.F(331529, J$.R(331505, '_handleEvent', _handleEvent, false, false), false)(J$.R(331513, 'self', self, false, false), J$.T(331521, 'connect', 21, false)));
                                                            J$.M(331593, J$.R(331545, 'server', server, false, false), 'once', false)(J$.T(331553, 'close', 21, false), J$.F(331585, J$.R(331561, '_handleEvent', _handleEvent, false, false), false)(J$.R(331569, 'self', self, false, false), J$.T(331577, 'close', 21, false)));
                                                            J$.M(331649, J$.R(331601, 'server', server, false, false), 'once', false)(J$.T(331609, 'timeout', 21, false), J$.F(331641, J$.R(331617, '_handleEvent', _handleEvent, false, false), false)(J$.R(331625, 'self', self, false, false), J$.T(331633, 'timeout', 21, false)));
                                                            J$.M(331705, J$.R(331657, 'server', server, false, false), 'once', false)(J$.T(331665, 'error', 21, false), J$.F(331697, J$.R(331673, '_handleEvent', _handleEvent, false, false), false)(J$.R(331681, 'self', self, false, false), J$.T(331689, 'error', 21, false)));
                                                            J$.M(331761, J$.R(331713, 'server', server, false, false), 'once', false)(J$.T(331721, 'parseError', 21, false), J$.F(331753, J$.R(331729, '_handleEvent', _handleEvent, false, false), false)(J$.R(331737, 'self', self, false, false), J$.T(331745, 'parseError', 21, false)));
                                                            J$.M(331857, J$.R(331769, 'server', server, false, false), 'on', false)(J$.T(331777, 'serverOpening', 21, false), J$.T(331849, function (e) {
                                                                jalangiLabel12:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(331825, arguments.callee, this, arguments);
                                                                            arguments = J$.N(331833, 'arguments', arguments, true, false, false);
                                                                            e = J$.N(331841, 'e', e, true, false, false);
                                                                            return J$.Rt(331817, J$.M(331809, J$.R(331785, 'self', self, false, false), 'emit', false)(J$.T(331793, 'serverOpening', 21, false), J$.R(331801, 'e', e, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(350065, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(350073))
                                                                                continue jalangiLabel12;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            J$.M(331953, J$.R(331865, 'server', server, false, false), 'on', false)(J$.T(331873, 'serverDescriptionChanged', 21, false), J$.T(331945, function (e) {
                                                                jalangiLabel13:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(331921, arguments.callee, this, arguments);
                                                                            arguments = J$.N(331929, 'arguments', arguments, true, false, false);
                                                                            e = J$.N(331937, 'e', e, true, false, false);
                                                                            return J$.Rt(331913, J$.M(331905, J$.R(331881, 'self', self, false, false), 'emit', false)(J$.T(331889, 'serverDescriptionChanged', 21, false), J$.R(331897, 'e', e, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(350081, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(350089))
                                                                                continue jalangiLabel13;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            J$.M(332049, J$.R(331961, 'server', server, false, false), 'on', false)(J$.T(331969, 'serverClosed', 21, false), J$.T(332041, function (e) {
                                                                jalangiLabel14:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(332017, arguments.callee, this, arguments);
                                                                            arguments = J$.N(332025, 'arguments', arguments, true, false, false);
                                                                            e = J$.N(332033, 'e', e, true, false, false);
                                                                            return J$.Rt(332009, J$.M(332001, J$.R(331977, 'self', self, false, false), 'emit', false)(J$.T(331985, 'serverClosed', 21, false), J$.R(331993, 'e', e, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(350097, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(350105))
                                                                                continue jalangiLabel14;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            J$.F(332113, J$.R(332057, 'relayEvents', relayEvents, false, true), false)(J$.R(332065, 'server', server, false, false), J$.R(332073, 'self', self, false, false), J$.T(332105, [
                                                                J$.T(332081, 'commandStarted', 21, false),
                                                                J$.T(332089, 'commandSucceeded', 21, false),
                                                                J$.T(332097, 'commandFailed', 21, false)
                                                            ], 10, false));
                                                            J$.M(332153, J$.G(332137, J$.G(332129, J$.R(332121, 'self', self, false, false), 's'), 'connectingServers'), 'push', false)(J$.R(332145, 'server', server, false, false));
                                                            J$.M(332193, J$.R(332161, 'server', server, false, false), 'connect', false)(J$.G(332185, J$.G(332177, J$.R(332169, 'self', self, false, false), 's'), 'connectOptions'));
                                                        } catch (J$e) {
                                                            J$.Ex(350113, J$e);
                                                        } finally {
                                                            if (J$.Fr(350121))
                                                                continue jalangiLabel15;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.R(332233, 'i', i, false, false));
                                        } catch (J$e) {
                                            J$.Ex(350129, J$e);
                                        } finally {
                                            if (J$.Fr(350137))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(332393, 'arguments', arguments, true, false, false);
                            self = J$.N(332401, 'self', self, true, false, false);
                            servers = J$.N(332409, 'servers', servers, true, false, false);
                            callback = J$.N(332417, 'callback', callback, true, false, false);
                            J$.N(332425, 'count', count, false, false, false);
                            J$.N(332433, 'error', error, false, false, false);
                            J$.N(332441, '_handleEvent', _handleEvent, false, false, false);
                            execute = J$.N(332457, 'execute', J$.T(332449, execute, 12, false), true, false, false);
                            J$.N(332465, 'i', i, false, false, false);
                            var count = J$.W(330113, 'count', J$.G(330105, J$.R(330097, 'servers', servers, false, false), 'length'), count, false, false);
                            var error = J$.W(330129, 'error', J$.T(330121, null, 25, false), error, false, false);
                            var _handleEvent = J$.W(331129, '_handleEvent', J$.T(331121, function _handleEvent(self, event) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(331089, arguments.callee, this, arguments);
                                            arguments = J$.N(331097, 'arguments', arguments, true, false, false);
                                            self = J$.N(331105, 'self', self, true, false, false);
                                            event = J$.N(331113, 'event', event, true, false, false);
                                            return J$.Rt(331081, J$.T(331073, function (err) {
                                                jalangiLabel10:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(331025, arguments.callee, this, arguments);
                                                            arguments = J$.N(331033, 'arguments', arguments, true, false, false);
                                                            err = J$.N(331041, 'err', err, true, false, false);
                                                            J$.N(331049, '_self', _self, false, false, false);
                                                            J$.N(331057, 'result', result, false, false, false);
                                                            J$.N(331065, '_i', _i, false, false, false);
                                                            var _self = J$.W(330145, '_self', J$.R(330137, 'this', this, false, false), _self, false, false);
                                                            count = J$.W(330169, 'count', J$.B(20322, '-', J$.R(330153, 'count', count, false, false), J$.T(330161, 1, 22, false)), count, false, false);
                                                            if (J$.C(19424, J$.C(19416, J$.B(20330, '===', J$.G(330185, J$.R(330177, 'self', self, false, false), 'state'), J$.R(330193, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20338, '===', J$.G(330209, J$.R(330201, 'self', self, false, false), 'state'), J$.R(330217, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                return J$.Rt(330257, J$.M(330249, J$.R(330225, 'this', this, false, false), 'destroy', false)(J$.T(330241, { force: J$.T(330233, true, 23, false) }, 11, false)));
                                                            }
                                                            if (J$.C(19488, J$.B(20346, '===', J$.R(330265, 'event', event, false, false), J$.T(330273, 'connect', 21, false)))) {
                                                                if (J$.C(19440, J$.C(19432, J$.B(20354, '===', J$.G(330289, J$.R(330281, 'self', self, false, false), 'state'), J$.R(330297, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20362, '===', J$.G(330313, J$.R(330305, 'self', self, false, false), 'state'), J$.R(330321, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                    return J$.Rt(330361, J$.M(330353, J$.R(330329, '_self', _self, false, false), 'destroy', false)(J$.T(330345, { force: J$.T(330337, true, 23, false) }, 11, false)));
                                                                }
                                                                var result = J$.W(330409, 'result', J$.M(330401, J$.G(330385, J$.G(330377, J$.R(330369, 'self', self, false, false), 's'), 'replicaSetState'), 'update', false)(J$.R(330393, '_self', _self, false, false)), result, false, false);
                                                                if (J$.C(19472, J$.R(330417, 'result', result, false, false))) {
                                                                    if (J$.C(19456, J$.C(19448, J$.M(330433, J$.R(330425, '_self', _self, false, false), 'lastIsMaster', false)()) ? J$.G(330457, J$.M(330449, J$.R(330441, '_self', _self, false, false), 'lastIsMaster', false)(), 'ismaster') : J$._())) {
                                                                        J$.P(330489, J$.R(330465, 'self', self, false, false), 'ismaster', J$.M(330481, J$.R(330473, '_self', _self, false, false), 'lastIsMaster', false)());
                                                                    }
                                                                    for (var _i = J$.W(330505, '_i', J$.T(330497, 0, 22, false), _i, false, false); J$.C(19464, J$.B(20370, '<', J$.R(330513, '_i', _i, false, false), J$.G(330529, J$.R(330521, 'handlers', handlers, false, true), 'length'))); J$.B(20394, '-', _i = J$.W(330545, '_i', J$.B(20386, '+', J$.U(20378, '+', J$.R(330537, '_i', _i, false, false)), 1), _i, false, false), 1)) {
                                                                        J$.M(330585, J$.R(330553, '_self', _self, false, false), 'removeAllListeners', false)(J$.G(330577, J$.R(330561, 'handlers', handlers, false, true), J$.R(330569, '_i', _i, false, false)));
                                                                    }
                                                                    J$.M(330641, J$.R(330593, '_self', _self, false, false), 'on', false)(J$.T(330601, 'error', 21, false), J$.F(330633, J$.R(330609, 'handleEvent', handleEvent, false, true), false)(J$.R(330617, 'self', self, false, false), J$.T(330625, 'error', 21, false)));
                                                                    J$.M(330697, J$.R(330649, '_self', _self, false, false), 'on', false)(J$.T(330657, 'close', 21, false), J$.F(330689, J$.R(330665, 'handleEvent', handleEvent, false, true), false)(J$.R(330673, 'self', self, false, false), J$.T(330681, 'close', 21, false)));
                                                                    J$.M(330753, J$.R(330705, '_self', _self, false, false), 'on', false)(J$.T(330713, 'timeout', 21, false), J$.F(330745, J$.R(330721, 'handleEvent', handleEvent, false, true), false)(J$.R(330729, 'self', self, false, false), J$.T(330737, 'timeout', 21, false)));
                                                                    J$.M(330809, J$.R(330761, '_self', _self, false, false), 'on', false)(J$.T(330769, 'parseError', 21, false), J$.F(330801, J$.R(330777, 'handleEvent', handleEvent, false, true), false)(J$.R(330785, 'self', self, false, false), J$.T(330793, 'parseError', 21, false)));
                                                                    J$.F(330865, J$.R(330817, 'monitorServer', monitorServer, false, true), false)(J$.G(330841, J$.M(330833, J$.R(330825, '_self', _self, false, false), 'lastIsMaster', false)(), 'me'), J$.R(330849, 'self', self, false, false), J$.T(330857, {}, 11, false));
                                                                    J$.F(330889, J$.R(330873, 'rexecuteOperations', rexecuteOperations, false, true), false)(J$.R(330881, 'self', self, false, false));
                                                                } else {
                                                                    J$.M(330921, J$.R(330897, '_self', _self, false, false), 'destroy', false)(J$.T(330913, { force: J$.T(330905, true, 23, false) }, 11, false));
                                                                }
                                                            } else if (J$.C(19480, J$.B(20402, '===', J$.R(330929, 'event', event, false, false), J$.T(330937, 'error', 21, false)))) {
                                                                error = J$.W(330953, 'error', J$.R(330945, 'err', err, false, false), error, false, false);
                                                            }
                                                            J$.F(330977, J$.R(330961, 'rexecuteOperations', rexecuteOperations, false, true), false)(J$.R(330969, 'self', self, false, false));
                                                            if (J$.C(19496, J$.B(20410, '===', J$.R(330985, 'count', count, false, false), J$.T(330993, 0, 22, false)))) {
                                                                J$.F(331017, J$.R(331001, 'callback', callback, false, false), false)(J$.R(331009, 'error', error, false, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(350033, J$e);
                                                        } finally {
                                                            if (J$.Fr(350041))
                                                                continue jalangiLabel10;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(350049, J$e);
                                        } finally {
                                            if (J$.Fr(350057))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _handleEvent, false, false);
                            if (J$.C(19504, J$.B(20418, '===', J$.R(331137, 'count', count, false, false), J$.T(331145, 0, 22, false))))
                                return J$.Rt(331169, J$.F(331161, J$.R(331153, 'callback', callback, false, false), false)());
                            for (var i = J$.W(332289, 'i', J$.T(332281, 0, 22, false), i, false, false); J$.C(19528, J$.B(20442, '<', J$.R(332297, 'i', i, false, false), J$.G(332313, J$.R(332305, 'servers', servers, false, false), 'length'))); J$.B(20466, '-', i = J$.W(332329, 'i', J$.B(20458, '+', J$.U(20450, '+', J$.R(332321, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.F(332377, J$.R(332337, 'execute', execute, false, false), false)(J$.G(332361, J$.R(332345, 'servers', servers, false, false), J$.R(332353, 'i', i, false, false)), J$.R(332369, 'i', i, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(350145, J$e);
                        } finally {
                            if (J$.Fr(350153))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function topologyMonitor(self, options) {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(336865, arguments.callee, this, arguments);
                            function executeReconnect(self) {
                                jalangiLabel30:
                                    while (true) {
                                        try {
                                            J$.Fe(336689, arguments.callee, this, arguments);
                                            arguments = J$.N(336697, 'arguments', arguments, true, false, false);
                                            self = J$.N(336705, 'self', self, true, false, false);
                                            return J$.Rt(336681, J$.T(336673, function () {
                                                jalangiLabel29:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(336657, arguments.callee, this, arguments);
                                                            arguments = J$.N(336665, 'arguments', arguments, true, false, false);
                                                            if (J$.C(19944, J$.C(19936, J$.B(20810, '===', J$.G(336369, J$.R(336361, 'self', self, false, false), 'state'), J$.R(336377, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20818, '===', J$.G(336393, J$.R(336385, 'self', self, false, false), 'state'), J$.R(336401, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                return J$.Rt(336409, undefined);
                                                            }
                                                            J$.F(336649, J$.R(336417, 'connectNewServers', connectNewServers, false, true), false)(J$.R(336425, 'self', self, false, false), J$.G(336457, J$.G(336449, J$.G(336441, J$.R(336433, 'self', self, false, false), 's'), 'replicaSetState'), 'unknownServers'), J$.T(336641, function () {
                                                                jalangiLabel28:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(336617, arguments.callee, this, arguments);
                                                                            arguments = J$.N(336625, 'arguments', arguments, true, false, false);
                                                                            J$.N(336633, 'monitoringFrequencey', monitoringFrequencey, false, false, false);
                                                                            var monitoringFrequencey = J$.W(336529, 'monitoringFrequencey', J$.C(19952, J$.M(336489, J$.G(336481, J$.G(336473, J$.R(336465, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)()) ? J$.R(336497, '_haInterval', _haInterval, false, false) : J$.G(336521, J$.G(336513, J$.R(336505, 'self', self, false, false), 's'), 'minHeartbeatFrequencyMS'), monitoringFrequencey, false, false);
                                                                            J$.M(336609, J$.G(336545, J$.R(336537, 'self', self, false, false), 'intervalIds'), 'push', false)(J$.M(336601, J$.F(336593, J$.R(336553, 'Timeout', Timeout, false, true), true)(J$.F(336577, J$.R(336561, 'executeReconnect', executeReconnect, false, false), false)(J$.R(336569, 'self', self, false, false)), J$.R(336585, 'monitoringFrequencey', monitoringFrequencey, false, false)), 'start', false)());
                                                                        } catch (J$e) {
                                                                            J$.Ex(350321, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(350329))
                                                                                continue jalangiLabel28;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(350337, J$e);
                                                        } finally {
                                                            if (J$.Fr(350345))
                                                                continue jalangiLabel29;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(350353, J$e);
                                        } finally {
                                            if (J$.Fr(350361))
                                                continue jalangiLabel30;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(336873, 'arguments', arguments, true, false, false);
                            self = J$.N(336881, 'self', self, true, false, false);
                            options = J$.N(336889, 'options', options, true, false, false);
                            J$.N(336897, 'servers', servers, false, false, false);
                            J$.N(336905, '_process', _process, false, false, false);
                            J$.N(336913, '_haInterval', _haInterval, false, false, false);
                            J$.N(336921, 'i', i, false, false, false);
                            executeReconnect = J$.N(336937, 'executeReconnect', J$.T(336929, executeReconnect, 12, false), true, false, false);
                            J$.N(336945, 'intervalTime', intervalTime, false, false, false);
                            if (J$.C(19816, J$.C(19808, J$.B(20682, '===', J$.G(335329, J$.R(335321, 'self', self, false, false), 'state'), J$.R(335337, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20690, '===', J$.G(335353, J$.R(335345, 'self', self, false, false), 'state'), J$.R(335361, 'UNREFERENCED', UNREFERENCED, false, true))))
                                return J$.Rt(335369, undefined);
                            options = J$.W(335393, 'options', J$.C(19824, J$.R(335377, 'options', options, false, false)) ? J$._() : J$.T(335385, {}, 11, false), options, false, false);
                            var servers = J$.W(335449, 'servers', J$.M(335441, J$.I(typeof Object === 'undefined' ? Object = J$.R(335401, 'Object', undefined, true, true) : Object = J$.R(335401, 'Object', Object, true, true)), 'keys', false)(J$.G(335433, J$.G(335425, J$.G(335417, J$.R(335409, 'self', self, false, false), 's'), 'replicaSetState'), 'set')), servers, false, false);
                            var _process = J$.W(335489, '_process', J$.C(19832, J$.G(335465, J$.R(335457, 'options', options, false, false), 'haInterval')) ? J$.R(335473, 'Timeout', Timeout, false, true) : J$.R(335481, 'Interval', Interval, false, true), _process, false, false);
                            var _haInterval = J$.W(335553, '_haInterval', J$.C(19840, J$.G(335505, J$.R(335497, 'options', options, false, false), 'haInterval')) ? J$.G(335521, J$.R(335513, 'options', options, false, false), 'haInterval') : J$.G(335545, J$.G(335537, J$.R(335529, 'self', self, false, false), 's'), 'haInterval'), _haInterval, false, false);
                            if (J$.C(19928, J$.B(20698, '===', J$.R(335561, '_process', _process, false, false), J$.R(335569, 'Timeout', Timeout, false, true)))) {
                                return J$.Rt(336241, J$.F(336233, J$.R(335577, 'connectNewServers', connectNewServers, false, true), false)(J$.R(335585, 'self', self, false, false), J$.G(335617, J$.G(335609, J$.G(335601, J$.R(335593, 'self', self, false, false), 's'), 'replicaSetState'), 'unknownServers'), J$.T(336225, function (err) {
                                    jalangiLabel27:
                                        while (true) {
                                            try {
                                                J$.Fe(336193, arguments.callee, this, arguments);
                                                arguments = J$.N(336201, 'arguments', arguments, true, false, false);
                                                err = J$.N(336209, 'err', err, true, false, false);
                                                J$.N(336217, 'i', i, false, false, false);
                                                if (J$.C(19856, J$.C(19848, J$.B(20706, '===', J$.G(335633, J$.R(335625, 'self', self, false, false), 'state'), J$.R(335641, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20714, '===', J$.G(335657, J$.R(335649, 'self', self, false, false), 'state'), J$.R(335665, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                    return J$.Rt(335673, undefined);
                                                }
                                                if (J$.C(19904, J$.C(19864, J$.U(20722, '!', J$.M(335705, J$.G(335697, J$.G(335689, J$.R(335681, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)())) ? J$.U(20730, '!', J$.G(335737, J$.G(335729, J$.G(335721, J$.R(335713, 'self', self, false, false), 's'), 'options'), 'secondaryOnlyConnectionAllowed')) : J$._())) {
                                                    if (J$.C(19872, J$.R(335745, 'err', err, false, false))) {
                                                        return J$.Rt(335785, J$.M(335777, J$.R(335753, 'self', self, false, false), 'emit', false)(J$.T(335761, 'error', 21, false), J$.R(335769, 'err', err, false, false)));
                                                    }
                                                    J$.M(335833, J$.R(335793, 'self', self, false, false), 'emit', false)(J$.T(335801, 'error', 21, false), J$.F(335825, J$.R(335809, 'MongoError', MongoError, false, true), true)(J$.T(335817, 'no primary found in replicaset or invalid replica set name', 21, false)));
                                                    return J$.Rt(335873, J$.M(335865, J$.R(335841, 'self', self, false, false), 'destroy', false)(J$.T(335857, { force: J$.T(335849, true, 23, false) }, 11, false)));
                                                } else if (J$.C(19896, J$.C(19880, J$.U(20738, '!', J$.M(335905, J$.G(335897, J$.G(335889, J$.R(335881, 'self', self, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)())) ? J$.G(335937, J$.G(335929, J$.G(335921, J$.R(335913, 'self', self, false, false), 's'), 'options'), 'secondaryOnlyConnectionAllowed') : J$._())) {
                                                    if (J$.C(19888, J$.R(335945, 'err', err, false, false))) {
                                                        return J$.Rt(335985, J$.M(335977, J$.R(335953, 'self', self, false, false), 'emit', false)(J$.T(335961, 'error', 21, false), J$.R(335969, 'err', err, false, false)));
                                                    }
                                                    J$.M(336033, J$.R(335993, 'self', self, false, false), 'emit', false)(J$.T(336001, 'error', 21, false), J$.F(336025, J$.R(336009, 'MongoError', MongoError, false, true), true)(J$.T(336017, 'no secondary found in replicaset or invalid replica set name', 21, false)));
                                                    return J$.Rt(336073, J$.M(336065, J$.R(336041, 'self', self, false, false), 'destroy', false)(J$.T(336057, { force: J$.T(336049, true, 23, false) }, 11, false)));
                                                }
                                                for (var i = J$.W(336089, 'i', J$.T(336081, 0, 22, false), i, false, false); J$.C(19912, J$.B(20746, '<', J$.R(336097, 'i', i, false, false), J$.G(336113, J$.R(336105, 'servers', servers, false, false), 'length'))); J$.B(20770, '-', i = J$.W(336129, 'i', J$.B(20762, '+', J$.U(20754, '+', J$.R(336121, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                    J$.F(336185, J$.R(336137, 'monitorServer', monitorServer, false, true), false)(J$.G(336161, J$.R(336145, 'servers', servers, false, false), J$.R(336153, 'i', i, false, false)), J$.R(336169, 'self', self, false, false), J$.R(336177, 'options', options, false, false));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(350305, J$e);
                                            } finally {
                                                if (J$.Fr(350313))
                                                    continue jalangiLabel27;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)));
                            } else {
                                for (var i = J$.W(336257, 'i', J$.T(336249, 0, 22, false), i, false, false); J$.C(19920, J$.B(20778, '<', J$.R(336265, 'i', i, false, false), J$.G(336281, J$.R(336273, 'servers', servers, false, false), 'length'))); J$.B(20802, '-', i = J$.W(336297, 'i', J$.B(20794, '+', J$.U(20786, '+', J$.R(336289, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.F(336353, J$.R(336305, 'monitorServer', monitorServer, false, true), false)(J$.G(336329, J$.R(336313, 'servers', servers, false, false), J$.R(336321, 'i', i, false, false)), J$.R(336337, 'self', self, false, false), J$.R(336345, 'options', options, false, false));
                                }
                            }
                            var intervalTime = J$.W(336777, 'intervalTime', J$.C(19960, J$.U(20826, '!', J$.M(336737, J$.G(336729, J$.G(336721, J$.R(336713, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)())) ? J$.G(336761, J$.G(336753, J$.R(336745, 'self', self, false, false), 's'), 'minHeartbeatFrequencyMS') : J$.R(336769, '_haInterval', _haInterval, false, false), intervalTime, false, false);
                            J$.M(336857, J$.G(336793, J$.R(336785, 'self', self, false, false), 'intervalIds'), 'push', false)(J$.M(336849, J$.F(336841, J$.R(336801, 'Timeout', Timeout, false, true), true)(J$.F(336825, J$.R(336809, 'executeReconnect', executeReconnect, false, false), false)(J$.R(336817, 'self', self, false, false)), J$.R(336833, 'intervalTime', intervalTime, false, false)), 'start', false)());
                        } catch (J$e) {
                            J$.Ex(350369, J$e);
                        } finally {
                            if (J$.Fr(350377))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addServerToList(list, server) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(337113, arguments.callee, this, arguments);
                            arguments = J$.N(337121, 'arguments', arguments, true, false, false);
                            list = J$.N(337129, 'list', list, true, false, false);
                            server = J$.N(337137, 'server', server, true, false, false);
                            J$.N(337145, 'i', i, false, false, false);
                            for (var i = J$.W(336961, 'i', J$.T(336953, 0, 22, false), i, false, false); J$.C(19976, J$.B(20834, '<', J$.R(336969, 'i', i, false, false), J$.G(336985, J$.R(336977, 'list', list, false, false), 'length'))); J$.B(20858, '-', i = J$.W(337001, 'i', J$.B(20850, '+', J$.U(20842, '+', J$.R(336993, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(19968, J$.B(20866, '===', J$.M(337041, J$.G(337033, J$.G(337025, J$.R(337009, 'list', list, false, false), J$.R(337017, 'i', i, false, false)), 'name'), 'toLowerCase', false)(), J$.M(337065, J$.G(337057, J$.R(337049, 'server', server, false, false), 'name'), 'toLowerCase', false)())))
                                    return J$.Rt(337081, J$.T(337073, true, 23, false));
                            }
                            J$.M(337105, J$.R(337089, 'list', list, false, false), 'push', false)(J$.R(337097, 'server', server, false, false));
                        } catch (J$e) {
                            J$.Ex(350385, J$e);
                        } finally {
                            if (J$.Fr(350393))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function handleEvent(self, event) {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(337705, arguments.callee, this, arguments);
                            arguments = J$.N(337713, 'arguments', arguments, true, false, false);
                            self = J$.N(337721, 'self', self, true, false, false);
                            event = J$.N(337729, 'event', event, true, false, false);
                            return J$.Rt(337697, J$.T(337689, function () {
                                jalangiLabel33:
                                    while (true) {
                                        try {
                                            J$.Fe(337673, arguments.callee, this, arguments);
                                            arguments = J$.N(337681, 'arguments', arguments, true, false, false);
                                            if (J$.C(19992, J$.C(19984, J$.B(20874, '===', J$.G(337161, J$.R(337153, 'self', self, false, false), 'state'), J$.R(337169, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20882, '===', J$.G(337185, J$.R(337177, 'self', self, false, false), 'state'), J$.R(337193, 'UNREFERENCED', UNREFERENCED, false, true))))
                                                return J$.Rt(337201, undefined);
                                            if (J$.C(20000, J$.M(337233, J$.G(337225, J$.G(337217, J$.R(337209, 'self', self, false, false), 's'), 'logger'), 'isDebug', false)())) {
                                                J$.M(337329, J$.G(337257, J$.G(337249, J$.R(337241, 'self', self, false, false), 's'), 'logger'), 'debug', false)(J$.F(337321, J$.R(337265, 'f', f, false, true), false)(J$.T(337273, 'handleEvent %s from server %s in replset with id %s', 21, false), J$.R(337281, 'event', event, false, false), J$.G(337297, J$.R(337289, 'this', this, false, false), 'name'), J$.G(337313, J$.R(337305, 'self', self, false, false), 'id')));
                                            }
                                            J$.M(337369, J$.G(337353, J$.G(337345, J$.R(337337, 'self', self, false, false), 's'), 'replicaSetState'), 'remove', false)(J$.R(337361, 'this', this, false, false));
                                            if (J$.C(20016, J$.C(20008, J$.B(20890, '===', J$.G(337385, J$.R(337377, 'self', self, false, false), 'state'), J$.R(337393, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20898, '===', J$.G(337409, J$.R(337401, 'self', self, false, false), 'state'), J$.R(337417, 'UNREFERENCED', UNREFERENCED, false, true))))
                                                return J$.Rt(337425, undefined);
                                            if (J$.C(20048, J$.C(20032, J$.C(20024, J$.U(20906, '!', J$.M(337457, J$.G(337449, J$.G(337441, J$.R(337433, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)())) ? J$.U(20914, '!', J$.M(337489, J$.G(337481, J$.G(337473, J$.R(337465, 'self', self, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)()) : J$._()) ? J$.G(337521, J$.G(337513, J$.G(337505, J$.R(337497, 'self', self, false, false), 's'), 'options'), 'secondaryOnlyConnectionAllowed') : J$._())) {
                                                J$.F(337553, J$.R(337529, 'stateTransition', stateTransition, false, true), false)(J$.R(337537, 'self', self, false, false), J$.R(337545, 'DISCONNECTED', DISCONNECTED, false, true));
                                            } else if (J$.C(20040, J$.U(20922, '!', J$.M(337585, J$.G(337577, J$.G(337569, J$.R(337561, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)()))) {
                                                J$.F(337617, J$.R(337593, 'stateTransition', stateTransition, false, true), false)(J$.R(337601, 'self', self, false, false), J$.R(337609, 'DISCONNECTED', DISCONNECTED, false, true));
                                            }
                                            J$.F(337665, J$.R(337625, 'addServerToList', addServerToList, false, true), false)(J$.G(337649, J$.G(337641, J$.R(337633, 'self', self, false, false), 's'), 'connectingServers'), J$.R(337657, 'this', this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(350401, J$e);
                                        } finally {
                                            if (J$.Fr(350409))
                                                continue jalangiLabel33;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(350417, J$e);
                        } finally {
                            if (J$.Fr(350425))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function shouldTriggerConnect(self) {
                jalangiLabel35:
                    while (true) {
                        try {
                            J$.Fe(338049, arguments.callee, this, arguments);
                            arguments = J$.N(338057, 'arguments', arguments, true, false, false);
                            self = J$.N(338065, 'self', self, true, false, false);
                            J$.N(338073, 'isConnecting', isConnecting, false, false, false);
                            J$.N(338081, 'hasPrimary', hasPrimary, false, false, false);
                            J$.N(338089, 'hasSecondary', hasSecondary, false, false, false);
                            J$.N(338097, 'secondaryOnlyConnectionAllowed', secondaryOnlyConnectionAllowed, false, false, false);
                            J$.N(338105, 'readPreferenceSecondary', readPreferenceSecondary, false, false, false);
                            var isConnecting = J$.W(337761, 'isConnecting', J$.B(20930, '===', J$.G(337745, J$.R(337737, 'self', self, false, false), 'state'), J$.R(337753, 'CONNECTING', CONNECTING, false, true)), isConnecting, false, false);
                            var hasPrimary = J$.W(337801, 'hasPrimary', J$.M(337793, J$.G(337785, J$.G(337777, J$.R(337769, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)(), hasPrimary, false, false);
                            var hasSecondary = J$.W(337841, 'hasSecondary', J$.M(337833, J$.G(337825, J$.G(337817, J$.R(337809, 'self', self, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)(), hasSecondary, false, false);
                            var secondaryOnlyConnectionAllowed = J$.W(337881, 'secondaryOnlyConnectionAllowed', J$.G(337873, J$.G(337865, J$.G(337857, J$.R(337849, 'self', self, false, false), 's'), 'options'), 'secondaryOnlyConnectionAllowed'), secondaryOnlyConnectionAllowed, false, false);
                            var readPreferenceSecondary = J$.W(337977, 'readPreferenceSecondary', J$.C(20056, J$.G(337913, J$.G(337905, J$.G(337897, J$.R(337889, 'self', self, false, false), 's'), 'connectOptions'), 'readPreference')) ? J$.M(337969, J$.G(337945, J$.G(337937, J$.G(337929, J$.R(337921, 'self', self, false, false), 's'), 'connectOptions'), 'readPreference'), 'equals', false)(J$.G(337961, J$.R(337953, 'ReadPreference', ReadPreference, false, true), 'secondary')) : J$._(), readPreferenceSecondary, false, false);
                            return J$.Rt(338041, J$.C(20104, J$.C(20088, J$.R(337985, 'isConnecting', isConnecting, false, false)) ? J$.C(20080, J$.C(20064, J$.R(337993, 'readPreferenceSecondary', readPreferenceSecondary, false, false)) ? J$.R(338001, 'hasSecondary', hasSecondary, false, false) : J$._()) ? J$._() : J$.C(20072, J$.U(20938, '!', J$.R(338009, 'readPreferenceSecondary', readPreferenceSecondary, false, false))) ? J$.R(338017, 'hasPrimary', hasPrimary, false, false) : J$._() : J$._()) ? J$._() : J$.C(20096, J$.R(338025, 'hasSecondary', hasSecondary, false, false)) ? J$.R(338033, 'secondaryOnlyConnectionAllowed', secondaryOnlyConnectionAllowed, false, false) : J$._());
                        } catch (J$e) {
                            J$.Ex(350433, J$e);
                        } finally {
                            if (J$.Fr(350441))
                                continue jalangiLabel35;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function handleInitialConnectEvent(self, event) {
                jalangiLabel39:
                    while (true) {
                        try {
                            J$.Fe(340041, arguments.callee, this, arguments);
                            arguments = J$.N(340049, 'arguments', arguments, true, false, false);
                            self = J$.N(340057, 'self', self, true, false, false);
                            event = J$.N(340065, 'event', event, true, false, false);
                            return J$.Rt(340033, J$.T(340025, function () {
                                jalangiLabel38:
                                    while (true) {
                                        try {
                                            J$.Fe(339977, arguments.callee, this, arguments);
                                            arguments = J$.N(339985, 'arguments', arguments, true, false, false);
                                            J$.N(339993, '_this', _this, false, false, false);
                                            J$.N(340001, 'result', result, false, false, false);
                                            J$.N(340009, '_i2', _i2, false, false, false);
                                            J$.N(340017, 'i', i, false, false, false);
                                            var _this = J$.W(338121, '_this', J$.R(338113, 'this', this, false, false), _this, false, false);
                                            if (J$.C(20112, J$.M(338153, J$.G(338145, J$.G(338137, J$.R(338129, 'self', self, false, false), 's'), 'logger'), 'isDebug', false)())) {
                                                J$.M(338249, J$.G(338177, J$.G(338169, J$.R(338161, 'self', self, false, false), 's'), 'logger'), 'debug', false)(J$.F(338241, J$.R(338185, 'f', f, false, true), false)(J$.T(338193, 'handleInitialConnectEvent %s from server %s in replset with id %s', 21, false), J$.R(338201, 'event', event, false, false), J$.G(338217, J$.R(338209, 'this', this, false, false), 'name'), J$.G(338233, J$.R(338225, 'self', self, false, false), 'id')));
                                            }
                                            if (J$.C(20128, J$.C(20120, J$.B(20946, '===', J$.G(338265, J$.R(338257, 'self', self, false, false), 'state'), J$.R(338273, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20954, '===', J$.G(338289, J$.R(338281, 'self', self, false, false), 'state'), J$.R(338297, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                return J$.Rt(338337, J$.M(338329, J$.R(338305, 'this', this, false, false), 'destroy', false)(J$.T(338321, { force: J$.T(338313, true, 23, false) }, 11, false)));
                                            }
                                            if (J$.C(20192, J$.B(20962, '===', J$.R(338345, 'event', event, false, false), J$.T(338353, 'connect', 21, false)))) {
                                                var result = J$.W(338401, 'result', J$.M(338393, J$.G(338377, J$.G(338369, J$.R(338361, 'self', self, false, false), 's'), 'replicaSetState'), 'update', false)(J$.R(338385, '_this', _this, false, false)), result, false, false);
                                                if (J$.C(20184, J$.B(20970, '===', J$.R(338409, 'result', result, false, false), J$.T(338417, true, 23, false)))) {
                                                    if (J$.C(20144, J$.C(20136, J$.M(338433, J$.R(338425, '_this', _this, false, false), 'lastIsMaster', false)()) ? J$.G(338457, J$.M(338449, J$.R(338441, '_this', _this, false, false), 'lastIsMaster', false)(), 'ismaster') : J$._())) {
                                                        J$.P(338489, J$.R(338465, 'self', self, false, false), 'ismaster', J$.M(338481, J$.R(338473, '_this', _this, false, false), 'lastIsMaster', false)());
                                                    }
                                                    if (J$.C(20152, J$.M(338521, J$.G(338513, J$.G(338505, J$.R(338497, 'self', self, false, false), 's'), 'logger'), 'isDebug', false)())) {
                                                        J$.M(338665, J$.G(338545, J$.G(338537, J$.R(338529, 'self', self, false, false), 's'), 'logger'), 'debug', false)(J$.F(338657, J$.R(338553, 'f', f, false, true), false)(J$.T(338561, 'handleInitialConnectEvent %s from server %s in replset with id %s has state [%s]', 21, false), J$.R(338569, 'event', event, false, false), J$.G(338585, J$.R(338577, '_this', _this, false, false), 'name'), J$.G(338601, J$.R(338593, 'self', self, false, false), 'id'), J$.M(338649, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(338609, 'JSON', undefined, true, true) : JSON = J$.R(338609, 'JSON', JSON, true, true)), 'stringify', false)(J$.G(338641, J$.G(338633, J$.G(338625, J$.R(338617, 'self', self, false, false), 's'), 'replicaSetState'), 'set'))));
                                                    }
                                                    for (var _i2 = J$.W(338681, '_i2', J$.T(338673, 0, 22, false), _i2, false, false); J$.C(20160, J$.B(20978, '<', J$.R(338689, '_i2', _i2, false, false), J$.G(338705, J$.R(338697, 'handlers', handlers, false, true), 'length'))); J$.B(21002, '-', _i2 = J$.W(338721, '_i2', J$.B(20994, '+', J$.U(20986, '+', J$.R(338713, '_i2', _i2, false, false)), 1), _i2, false, false), 1)) {
                                                        J$.M(338761, J$.R(338729, '_this', _this, false, false), 'removeAllListeners', false)(J$.G(338753, J$.R(338737, 'handlers', handlers, false, true), J$.R(338745, '_i2', _i2, false, false)));
                                                    }
                                                    J$.M(338817, J$.R(338769, '_this', _this, false, false), 'on', false)(J$.T(338777, 'error', 21, false), J$.F(338809, J$.R(338785, 'handleEvent', handleEvent, false, true), false)(J$.R(338793, 'self', self, false, false), J$.T(338801, 'error', 21, false)));
                                                    J$.M(338873, J$.R(338825, '_this', _this, false, false), 'on', false)(J$.T(338833, 'close', 21, false), J$.F(338865, J$.R(338841, 'handleEvent', handleEvent, false, true), false)(J$.R(338849, 'self', self, false, false), J$.T(338857, 'close', 21, false)));
                                                    J$.M(338929, J$.R(338881, '_this', _this, false, false), 'on', false)(J$.T(338889, 'timeout', 21, false), J$.F(338921, J$.R(338897, 'handleEvent', handleEvent, false, true), false)(J$.R(338905, 'self', self, false, false), J$.T(338913, 'timeout', 21, false)));
                                                    J$.M(338985, J$.R(338937, '_this', _this, false, false), 'on', false)(J$.T(338945, 'parseError', 21, false), J$.F(338977, J$.R(338953, 'handleEvent', handleEvent, false, true), false)(J$.R(338961, 'self', self, false, false), J$.T(338969, 'parseError', 21, false)));
                                                    if (J$.C(20168, J$.F(339009, J$.R(338993, 'shouldTriggerConnect', shouldTriggerConnect, false, true), false)(J$.R(339001, 'self', self, false, false)))) {
                                                        J$.P(339033, J$.R(339017, 'self', self, false, false), 'state', J$.R(339025, 'CONNECTED', CONNECTED, false, true));
                                                        J$.P(339065, J$.G(339049, J$.R(339041, 'self', self, false, false), 'initialConnectState'), 'connect', J$.T(339057, true, 23, false));
                                                        J$.M(339137, J$.I(typeof process === 'undefined' ? process = J$.R(339073, 'process', undefined, true, true) : process = J$.R(339073, 'process', process, true, true)), 'nextTick', false)(J$.T(339129, function () {
                                                            jalangiLabel36:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(339113, arguments.callee, this, arguments);
                                                                        arguments = J$.N(339121, 'arguments', arguments, true, false, false);
                                                                        J$.M(339105, J$.R(339081, 'self', self, false, false), 'emit', false)(J$.T(339089, 'connect', 21, false), J$.R(339097, 'self', self, false, false));
                                                                    } catch (J$e) {
                                                                        J$.Ex(350449, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(350457))
                                                                            continue jalangiLabel36;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false));
                                                        J$.F(339169, J$.R(339145, 'topologyMonitor', topologyMonitor, false, true), false)(J$.R(339153, 'self', self, false, false), J$.T(339161, {}, 11, false));
                                                    }
                                                } else if (J$.C(20176, J$.B(21010, 'instanceof', J$.R(339177, 'result', result, false, false), J$.R(339185, 'MongoError', MongoError, false, true)))) {
                                                    J$.M(339217, J$.R(339193, '_this', _this, false, false), 'destroy', false)(J$.T(339209, { force: J$.T(339201, true, 23, false) }, 11, false));
                                                    J$.M(339249, J$.R(339225, 'self', self, false, false), 'destroy', false)(J$.T(339241, { force: J$.T(339233, true, 23, false) }, 11, false));
                                                    return J$.Rt(339289, J$.M(339281, J$.R(339257, 'self', self, false, false), 'emit', false)(J$.T(339265, 'error', 21, false), J$.R(339273, 'result', result, false, false)));
                                                } else {
                                                    J$.M(339321, J$.R(339297, '_this', _this, false, false), 'destroy', false)(J$.T(339313, { force: J$.T(339305, true, 23, false) }, 11, false));
                                                }
                                            } else {
                                                J$.M(339353, J$.R(339329, 'self', self, false, false), 'emit', false)(J$.T(339337, 'failed', 21, false), J$.R(339345, 'this', this, false, false));
                                                J$.F(339401, J$.R(339361, 'addServerToList', addServerToList, false, true), false)(J$.G(339385, J$.G(339377, J$.R(339369, 'self', self, false, false), 's'), 'connectingServers'), J$.R(339393, 'this', this, false, false));
                                                J$.M(339441, J$.G(339425, J$.G(339417, J$.R(339409, 'self', self, false, false), 's'), 'replicaSetState'), 'remove', false)(J$.R(339433, 'this', this, false, false));
                                            }
                                            if (J$.C(20216, J$.C(20208, J$.C(20200, J$.G(339465, J$.G(339457, J$.R(339449, 'self', self, false, false), 'initialConnectState'), 'connect')) ? J$.U(21018, '!', J$.G(339489, J$.G(339481, J$.R(339473, 'self', self, false, false), 'initialConnectState'), 'fullsetup')) : J$._()) ? J$.M(339521, J$.G(339513, J$.G(339505, J$.R(339497, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimaryAndSecondary', false)() : J$._())) {
                                                J$.P(339553, J$.G(339537, J$.R(339529, 'self', self, false, false), 'initialConnectState'), 'fullsetup', J$.T(339545, true, 23, false));
                                                J$.P(339585, J$.G(339569, J$.R(339561, 'self', self, false, false), 'initialConnectState'), 'all', J$.T(339577, true, 23, false));
                                                J$.M(339689, J$.I(typeof process === 'undefined' ? process = J$.R(339593, 'process', undefined, true, true) : process = J$.R(339593, 'process', process, true, true)), 'nextTick', false)(J$.T(339681, function () {
                                                    jalangiLabel37:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(339665, arguments.callee, this, arguments);
                                                                arguments = J$.N(339673, 'arguments', arguments, true, false, false);
                                                                J$.M(339625, J$.R(339601, 'self', self, false, false), 'emit', false)(J$.T(339609, 'fullsetup', 21, false), J$.R(339617, 'self', self, false, false));
                                                                J$.M(339657, J$.R(339633, 'self', self, false, false), 'emit', false)(J$.T(339641, 'all', 21, false), J$.R(339649, 'self', self, false, false));
                                                            } catch (J$e) {
                                                                J$.Ex(350465, J$e);
                                                            } finally {
                                                                if (J$.Fr(350473))
                                                                    continue jalangiLabel37;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                            for (var i = J$.W(339705, 'i', J$.T(339697, 0, 22, false), i, false, false); J$.C(20232, J$.B(21026, '<', J$.R(339713, 'i', i, false, false), J$.G(339745, J$.G(339737, J$.G(339729, J$.R(339721, 'self', self, false, false), 's'), 'connectingServers'), 'length'))); J$.B(21050, '-', i = J$.W(339761, 'i', J$.B(21042, '+', J$.U(21034, '+', J$.R(339753, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                if (J$.C(20224, J$.M(339817, J$.G(339801, J$.G(339785, J$.G(339777, J$.R(339769, 'self', self, false, false), 's'), 'connectingServers'), J$.R(339793, 'i', i, false, false)), 'equals', false)(J$.R(339809, 'this', this, false, false)))) {
                                                    J$.M(339865, J$.G(339841, J$.G(339833, J$.R(339825, 'self', self, false, false), 's'), 'connectingServers'), 'splice', false)(J$.R(339849, 'i', i, false, false), J$.T(339857, 1, 22, false));
                                                }
                                            }
                                            if (J$.C(20248, J$.C(20240, J$.B(21058, '===', J$.G(339897, J$.G(339889, J$.G(339881, J$.R(339873, 'self', self, false, false), 's'), 'connectingServers'), 'length'), J$.T(339905, 0, 22, false))) ? J$.B(21066, '===', J$.G(339921, J$.R(339913, 'self', self, false, false), 'state'), J$.R(339929, 'CONNECTING', CONNECTING, false, true)) : J$._())) {
                                                J$.F(339969, J$.R(339937, 'topologyMonitor', topologyMonitor, false, true), false)(J$.R(339945, 'self', self, false, false), J$.T(339961, { haInterval: J$.T(339953, 1, 22, false) }, 11, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(350481, J$e);
                                        } finally {
                                            if (J$.Fr(350489))
                                                continue jalangiLabel38;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(350497, J$e);
                        } finally {
                            if (J$.Fr(350505))
                                continue jalangiLabel39;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connectServers(self, servers) {
                jalangiLabel45:
                    while (true) {
                        try {
                            J$.Fe(341089, arguments.callee, this, arguments);
                            function connect(server, timeoutInterval) {
                                jalangiLabel44:
                                    while (true) {
                                        try {
                                            J$.Fe(340985, arguments.callee, this, arguments);
                                            arguments = J$.N(340993, 'arguments', arguments, true, false, false);
                                            server = J$.N(341001, 'server', server, true, false, false);
                                            timeoutInterval = J$.N(341009, 'timeoutInterval', timeoutInterval, true, false, false);
                                            J$.F(340977, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(340153, 'setTimeout', undefined, true, true) : setTimeout = J$.R(340153, 'setTimeout', setTimeout, true, true)), false)(J$.T(340961, function () {
                                                jalangiLabel43:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(340945, arguments.callee, this, arguments);
                                                            arguments = J$.N(340953, 'arguments', arguments, true, false, false);
                                                            if (J$.C(20272, J$.M(340193, J$.G(340177, J$.G(340169, J$.R(340161, 'self', self, false, false), 's'), 'replicaSetState'), 'update', false)(J$.R(340185, 'server', server, false, false)))) {
                                                                if (J$.C(20264, J$.C(20256, J$.M(340209, J$.R(340201, 'server', server, false, false), 'lastIsMaster', false)()) ? J$.G(340233, J$.M(340225, J$.R(340217, 'server', server, false, false), 'lastIsMaster', false)(), 'ismaster') : J$._())) {
                                                                    J$.P(340265, J$.R(340241, 'self', self, false, false), 'ismaster', J$.M(340257, J$.R(340249, 'server', server, false, false), 'lastIsMaster', false)());
                                                                }
                                                            }
                                                            J$.M(340321, J$.R(340273, 'server', server, false, false), 'once', false)(J$.T(340281, 'close', 21, false), J$.F(340313, J$.R(340289, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(340297, 'self', self, false, false), J$.T(340305, 'close', 21, false)));
                                                            J$.M(340377, J$.R(340329, 'server', server, false, false), 'once', false)(J$.T(340337, 'timeout', 21, false), J$.F(340369, J$.R(340345, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(340353, 'self', self, false, false), J$.T(340361, 'timeout', 21, false)));
                                                            J$.M(340433, J$.R(340385, 'server', server, false, false), 'once', false)(J$.T(340393, 'parseError', 21, false), J$.F(340425, J$.R(340401, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(340409, 'self', self, false, false), J$.T(340417, 'parseError', 21, false)));
                                                            J$.M(340489, J$.R(340441, 'server', server, false, false), 'once', false)(J$.T(340449, 'error', 21, false), J$.F(340481, J$.R(340457, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(340465, 'self', self, false, false), J$.T(340473, 'error', 21, false)));
                                                            J$.M(340545, J$.R(340497, 'server', server, false, false), 'once', false)(J$.T(340505, 'connect', 21, false), J$.F(340537, J$.R(340513, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(340521, 'self', self, false, false), J$.T(340529, 'connect', 21, false)));
                                                            J$.M(340641, J$.R(340553, 'server', server, false, false), 'on', false)(J$.T(340561, 'serverOpening', 21, false), J$.T(340633, function (e) {
                                                                jalangiLabel40:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(340609, arguments.callee, this, arguments);
                                                                            arguments = J$.N(340617, 'arguments', arguments, true, false, false);
                                                                            e = J$.N(340625, 'e', e, true, false, false);
                                                                            return J$.Rt(340601, J$.M(340593, J$.R(340569, 'self', self, false, false), 'emit', false)(J$.T(340577, 'serverOpening', 21, false), J$.R(340585, 'e', e, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(350513, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(350521))
                                                                                continue jalangiLabel40;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            J$.M(340737, J$.R(340649, 'server', server, false, false), 'on', false)(J$.T(340657, 'serverDescriptionChanged', 21, false), J$.T(340729, function (e) {
                                                                jalangiLabel41:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(340705, arguments.callee, this, arguments);
                                                                            arguments = J$.N(340713, 'arguments', arguments, true, false, false);
                                                                            e = J$.N(340721, 'e', e, true, false, false);
                                                                            return J$.Rt(340697, J$.M(340689, J$.R(340665, 'self', self, false, false), 'emit', false)(J$.T(340673, 'serverDescriptionChanged', 21, false), J$.R(340681, 'e', e, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(350529, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(350537))
                                                                                continue jalangiLabel41;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            J$.M(340833, J$.R(340745, 'server', server, false, false), 'on', false)(J$.T(340753, 'serverClosed', 21, false), J$.T(340825, function (e) {
                                                                jalangiLabel42:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(340801, arguments.callee, this, arguments);
                                                                            arguments = J$.N(340809, 'arguments', arguments, true, false, false);
                                                                            e = J$.N(340817, 'e', e, true, false, false);
                                                                            return J$.Rt(340793, J$.M(340785, J$.R(340761, 'self', self, false, false), 'emit', false)(J$.T(340769, 'serverClosed', 21, false), J$.R(340777, 'e', e, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(350545, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(350553))
                                                                                continue jalangiLabel42;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            J$.F(340897, J$.R(340841, 'relayEvents', relayEvents, false, true), false)(J$.R(340849, 'server', server, false, false), J$.R(340857, 'self', self, false, false), J$.T(340889, [
                                                                J$.T(340865, 'commandStarted', 21, false),
                                                                J$.T(340873, 'commandSucceeded', 21, false),
                                                                J$.T(340881, 'commandFailed', 21, false)
                                                            ], 10, false));
                                                            J$.M(340937, J$.R(340905, 'server', server, false, false), 'connect', false)(J$.G(340929, J$.G(340921, J$.R(340913, 'self', self, false, false), 's'), 'connectOptions'));
                                                        } catch (J$e) {
                                                            J$.Ex(350561, J$e);
                                                        } finally {
                                                            if (J$.Fr(350569))
                                                                continue jalangiLabel43;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.R(340969, 'timeoutInterval', timeoutInterval, false, false));
                                        } catch (J$e) {
                                            J$.Ex(350577, J$e);
                                        } finally {
                                            if (J$.Fr(350585))
                                                continue jalangiLabel44;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(341097, 'arguments', arguments, true, false, false);
                            self = J$.N(341105, 'self', self, true, false, false);
                            servers = J$.N(341113, 'servers', servers, true, false, false);
                            J$.N(341121, 'timeoutInterval', timeoutInterval, false, false, false);
                            connect = J$.N(341137, 'connect', J$.T(341129, connect, 12, false), true, false, false);
                            J$.P(340129, J$.G(340081, J$.R(340073, 'self', self, false, false), 's'), 'connectingServers', J$.M(340121, J$.G(340105, J$.G(340097, J$.R(340089, 'self', self, false, false), 's'), 'connectingServers'), 'concat', false)(J$.R(340113, 'servers', servers, false, false)));
                            var timeoutInterval = J$.W(340145, 'timeoutInterval', J$.T(340137, 0, 22, false), timeoutInterval, false, false);
                            while (J$.C(20280, J$.B(21074, '>', J$.G(341025, J$.R(341017, 'servers', servers, false, false), 'length'), J$.T(341033, 0, 22, false)))) {
                                J$.F(341081, J$.R(341041, 'connect', connect, false, false), false)(J$.M(341057, J$.R(341049, 'servers', servers, false, false), 'shift', false)(), J$.B(21098, '-', timeoutInterval = J$.W(341073, 'timeoutInterval', J$.B(21090, '+', J$.U(21082, '+', J$.R(341065, 'timeoutInterval', timeoutInterval, false, false)), 1), timeoutInterval, false, false), 1));
                            }
                        } catch (J$e) {
                            J$.Ex(350593, J$e);
                        } finally {
                            if (J$.Fr(350601))
                                continue jalangiLabel45;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function emitSDAMEvent(self, event, description) {
                jalangiLabel46:
                    while (true) {
                        try {
                            J$.Fe(341217, arguments.callee, this, arguments);
                            arguments = J$.N(341225, 'arguments', arguments, true, false, false);
                            self = J$.N(341233, 'self', self, true, false, false);
                            event = J$.N(341241, 'event', event, true, false, false);
                            description = J$.N(341249, 'description', description, true, false, false);
                            if (J$.C(20288, J$.B(21106, '>', J$.G(341169, J$.M(341161, J$.R(341145, 'self', self, false, false), 'listeners', false)(J$.R(341153, 'event', event, false, false)), 'length'), J$.T(341177, 0, 22, false)))) {
                                J$.M(341209, J$.R(341185, 'self', self, false, false), 'emit', false)(J$.R(341193, 'event', event, false, false), J$.R(341201, 'description', description, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(350609, J$e);
                        } finally {
                            if (J$.Fr(350617))
                                continue jalangiLabel46;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeWriteOperation(args, options, callback) {
                jalangiLabel63:
                    while (true) {
                        try {
                            J$.Fe(346561, arguments.callee, this, arguments);
                            arguments = J$.N(346569, 'arguments', arguments, true, false, false);
                            args = J$.N(346577, 'args', args, true, false, false);
                            options = J$.N(346585, 'options', options, true, false, false);
                            callback = J$.N(346593, 'callback', callback, true, false, false);
                            J$.N(346601, 'self', self, false, false, false);
                            J$.N(346609, 'op', op, false, false, false);
                            J$.N(346617, 'ns', ns, false, false, false);
                            J$.N(346625, 'ops', ops, false, false, false);
                            J$.N(346633, 'willRetryWrite', willRetryWrite, false, false, false);
                            J$.N(346641, 'handler', handler, false, false, false);
                            if (J$.C(20616, J$.B(21410, '===', J$.U(21402, 'typeof', J$.R(345337, 'options', options, false, false)), J$.T(345345, 'function', 21, false))))
                                callback = J$.W(345361, 'callback', J$.R(345353, 'options', options, false, false), callback, false, false), options = J$.W(345377, 'options', J$.T(345369, {}, 11, false), options, false, false);
                            options = J$.W(345401, 'options', J$.C(20624, J$.R(345385, 'options', options, false, false)) ? J$._() : J$.T(345393, {}, 11, false), options, false, false);
                            var self = J$.W(345425, 'self', J$.G(345417, J$.R(345409, 'args', args, false, false), 'self'), self, false, false);
                            var op = J$.W(345449, 'op', J$.G(345441, J$.R(345433, 'args', args, false, false), 'op'), op, false, false);
                            var ns = J$.W(345473, 'ns', J$.G(345465, J$.R(345457, 'args', args, false, false), 'ns'), ns, false, false);
                            var ops = J$.W(345497, 'ops', J$.G(345489, J$.R(345481, 'args', args, false, false), 'ops'), ops, false, false);
                            if (J$.C(20632, J$.B(21418, '===', J$.G(345513, J$.R(345505, 'self', self, false, false), 'state'), J$.R(345521, 'DESTROYED', DESTROYED, false, true)))) {
                                return J$.Rt(345585, J$.F(345577, J$.R(345529, 'callback', callback, false, false), false)(J$.F(345569, J$.R(345537, 'MongoError', MongoError, false, true), true)(J$.F(345561, J$.R(345545, 'f', f, false, true), false)(J$.T(345553, 'topology was destroyed', 21, false)))));
                            }
                            var willRetryWrite = J$.W(345689, 'willRetryWrite', J$.C(20664, J$.C(20656, J$.C(20648, J$.C(20640, J$.U(21426, '!', J$.G(345601, J$.R(345593, 'args', args, false, false), 'retrying'))) ? J$.U(21442, '!', J$.U(21434, '!', J$.G(345617, J$.R(345609, 'options', options, false, false), 'retryWrites'))) : J$._()) ? J$.G(345633, J$.R(345625, 'options', options, false, false), 'session') : J$._()) ? J$.F(345657, J$.R(345641, 'isRetryableWritesSupported', isRetryableWritesSupported, false, true), false)(J$.R(345649, 'self', self, false, false)) : J$._()) ? J$.U(21450, '!', J$.M(345681, J$.G(345673, J$.R(345665, 'options', options, false, false), 'session'), 'inTransaction', false)()) : J$._(), willRetryWrite, false, false);
                            if (J$.C(20688, J$.U(21458, '!', J$.M(345721, J$.G(345713, J$.G(345705, J$.R(345697, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)()))) {
                                if (J$.C(20680, J$.G(345745, J$.G(345737, J$.R(345729, 'self', self, false, false), 's'), 'disconnectHandler'))) {
                                    return J$.Rt(345825, J$.M(345817, J$.G(345769, J$.G(345761, J$.R(345753, 'self', self, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.R(345777, 'op', op, false, false), J$.R(345785, 'ns', ns, false, false), J$.R(345793, 'ops', ops, false, false), J$.R(345801, 'options', options, false, false), J$.R(345809, 'callback', callback, false, false)));
                                } else if (J$.C(20672, J$.U(21466, '!', J$.R(345833, 'willRetryWrite', willRetryWrite, false, false)))) {
                                    return J$.Rt(345881, J$.F(345873, J$.R(345841, 'callback', callback, false, false), false)(J$.F(345865, J$.R(345849, 'MongoError', MongoError, false, true), true)(J$.T(345857, 'no primary server found', 21, false))));
                                }
                            }
                            var handler = J$.W(346369, 'handler', J$.T(346361, function handler(err, result) {
                                jalangiLabel62:
                                    while (true) {
                                        try {
                                            J$.Fe(346321, arguments.callee, this, arguments);
                                            arguments = J$.N(346329, 'arguments', arguments, true, false, false);
                                            err = J$.N(346337, 'err', err, true, false, false);
                                            result = J$.N(346345, 'result', result, true, false, false);
                                            J$.N(346353, 'newArgs', newArgs, false, false, false);
                                            if (J$.C(20696, J$.U(21474, '!', J$.R(345889, 'err', err, false, false))))
                                                return J$.Rt(345929, J$.F(345921, J$.R(345897, 'callback', callback, false, false), false)(J$.T(345905, null, 25, false), J$.R(345913, 'result', result, false, false)));
                                            if (J$.C(20704, J$.U(21482, '!', J$.F(345953, J$.R(345937, 'isRetryableError', isRetryableError, false, true), false)(J$.R(345945, 'err', err, false, false))))) {
                                                err = J$.W(345985, 'err', J$.F(345977, J$.R(345961, 'getMMAPError', getMMAPError, false, true), false)(J$.R(345969, 'err', err, false, false)), err, false, false);
                                                return J$.Rt(346017, J$.F(346009, J$.R(345993, 'callback', callback, false, false), false)(J$.R(346001, 'err', err, false, false)));
                                            }
                                            if (J$.C(20712, J$.R(346025, 'willRetryWrite', willRetryWrite, false, false))) {
                                                var newArgs = J$.W(346081, 'newArgs', J$.M(346073, J$.I(typeof Object === 'undefined' ? Object = J$.R(346033, 'Object', undefined, true, true) : Object = J$.R(346033, 'Object', Object, true, true)), 'assign', false)(J$.T(346041, {}, 11, false), J$.R(346049, 'args', args, false, false), J$.T(346065, { retrying: J$.T(346057, true, 23, false) }, 11, false)), newArgs, false, false);
                                                return J$.Rt(346129, J$.F(346121, J$.R(346089, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.R(346097, 'newArgs', newArgs, false, false), J$.R(346105, 'options', options, false, false), J$.R(346113, 'callback', callback, false, false)));
                                            }
                                            if (J$.C(20720, J$.G(346161, J$.G(346153, J$.G(346145, J$.R(346137, 'self', self, false, false), 's'), 'replicaSetState'), 'primary'))) {
                                                J$.M(346201, J$.G(346193, J$.G(346185, J$.G(346177, J$.R(346169, 'self', self, false, false), 's'), 'replicaSetState'), 'primary'), 'destroy', false)();
                                                J$.M(346281, J$.G(346225, J$.G(346217, J$.R(346209, 'self', self, false, false), 's'), 'replicaSetState'), 'remove', false)(J$.G(346257, J$.G(346249, J$.G(346241, J$.R(346233, 'self', self, false, false), 's'), 'replicaSetState'), 'primary'), J$.T(346273, { force: J$.T(346265, true, 23, false) }, 11, false));
                                            }
                                            return J$.Rt(346313, J$.F(346305, J$.R(346289, 'callback', callback, false, false), false)(J$.R(346297, 'err', err, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(350865, J$e);
                                        } finally {
                                            if (J$.Fr(350873))
                                                continue jalangiLabel62;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), handler, false, false);
                            if (J$.C(20728, J$.G(346385, J$.R(346377, 'callback', callback, false, false), 'operationId'))) {
                                J$.P(346417, J$.R(346393, 'handler', handler, false, false), 'operationId', J$.G(346409, J$.R(346401, 'callback', callback, false, false), 'operationId'));
                            }
                            if (J$.C(20736, J$.R(346425, 'willRetryWrite', willRetryWrite, false, false))) {
                                J$.M(346449, J$.G(346441, J$.R(346433, 'options', options, false, false), 'session'), 'incrementTransactionNumber', false)();
                                J$.P(346473, J$.R(346457, 'options', options, false, false), 'willRetryWrite', J$.R(346465, 'willRetryWrite', willRetryWrite, false, false));
                            }
                            J$.M(346553, J$.G(346505, J$.G(346497, J$.G(346489, J$.R(346481, 'self', self, false, false), 's'), 'replicaSetState'), 'primary'), J$.R(346513, 'op', op, false, false), false)(J$.R(346521, 'ns', ns, false, false), J$.R(346529, 'ops', ops, false, false), J$.R(346537, 'options', options, false, false), J$.R(346545, 'handler', handler, false, false));
                        } catch (J$e) {
                            J$.Ex(350881, J$e);
                        } finally {
                            if (J$.Fr(350889))
                                continue jalangiLabel63;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isWriteCommand(command) {
                jalangiLabel68:
                    while (true) {
                        try {
                            J$.Fe(347241, arguments.callee, this, arguments);
                            arguments = J$.N(347249, 'arguments', arguments, true, false, false);
                            command = J$.N(347257, 'command', command, true, false, false);
                            return J$.Rt(347233, J$.M(347225, J$.R(347153, 'RETRYABLE_WRITE_OPERATIONS', RETRYABLE_WRITE_OPERATIONS, false, true), 'some', false)(J$.T(347217, function (op) {
                                jalangiLabel67:
                                    while (true) {
                                        try {
                                            J$.Fe(347193, arguments.callee, this, arguments);
                                            arguments = J$.N(347201, 'arguments', arguments, true, false, false);
                                            op = J$.N(347209, 'op', op, true, false, false);
                                            return J$.Rt(347185, J$.G(347177, J$.R(347161, 'command', command, false, false), J$.R(347169, 'op', op, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(350945, J$e);
                                        } finally {
                                            if (J$.Fr(350953))
                                                continue jalangiLabel67;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(350961, J$e);
                        } finally {
                            if (J$.Fr(350969))
                                continue jalangiLabel68;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(349409, 'inherits', inherits, false, false, false);
            J$.N(349417, 'f', f, false, false, false);
            J$.N(349425, 'EventEmitter', EventEmitter, false, false, false);
            J$.N(349433, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(349441, 'CoreCursor', CoreCursor, false, false, false);
            J$.N(349449, 'retrieveBSON', retrieveBSON, false, false, false);
            J$.N(349457, 'Logger', Logger, false, false, false);
            J$.N(349465, 'MongoError', MongoError, false, false, false);
            J$.N(349473, 'Server', Server, false, false, false);
            J$.N(349481, 'ReplSetState', ReplSetState, false, false, false);
            J$.N(349489, 'clone', clone, false, false, false);
            J$.N(349497, 'Timeout', Timeout, false, false, false);
            J$.N(349505, 'Interval', Interval, false, false, false);
            J$.N(349513, 'createClientInfo', createClientInfo, false, false, false);
            J$.N(349521, 'SessionMixins', SessionMixins, false, false, false);
            J$.N(349529, 'isRetryableWritesSupported', isRetryableWritesSupported, false, false, false);
            J$.N(349537, 'relayEvents', relayEvents, false, false, false);
            J$.N(349545, 'isRetryableError', isRetryableError, false, false, false);
            J$.N(349553, 'BSON', BSON, false, false, false);
            J$.N(349561, 'calculateDurationInMs', calculateDurationInMs, false, false, false);
            J$.N(349569, 'getMMAPError', getMMAPError, false, false, false);
            J$.N(349577, 'DISCONNECTED', DISCONNECTED, false, false, false);
            J$.N(349585, 'CONNECTING', CONNECTING, false, false, false);
            J$.N(349593, 'CONNECTED', CONNECTED, false, false, false);
            J$.N(349601, 'UNREFERENCED', UNREFERENCED, false, false, false);
            J$.N(349609, 'DESTROYED', DESTROYED, false, false, false);
            stateTransition = J$.N(349625, 'stateTransition', J$.T(349617, stateTransition, 12, false), true, false, false);
            J$.N(349633, 'id', id, false, false, false);
            J$.N(349641, 'handlers', handlers, false, false, false);
            J$.N(349649, 'ReplSet', ReplSet, false, false, false);
            rexecuteOperations = J$.N(349665, 'rexecuteOperations', J$.T(349657, rexecuteOperations, 12, false), true, false, false);
            connectNewServers = J$.N(349681, 'connectNewServers', J$.T(349673, connectNewServers, 12, false), true, false, false);
            J$.N(349689, 'pingServer', pingServer, false, false, false);
            J$.N(349697, 'monitorServer', monitorServer, false, false, false);
            topologyMonitor = J$.N(349713, 'topologyMonitor', J$.T(349705, topologyMonitor, 12, false), true, false, false);
            addServerToList = J$.N(349729, 'addServerToList', J$.T(349721, addServerToList, 12, false), true, false, false);
            handleEvent = J$.N(349745, 'handleEvent', J$.T(349737, handleEvent, 12, false), true, false, false);
            shouldTriggerConnect = J$.N(349761, 'shouldTriggerConnect', J$.T(349753, shouldTriggerConnect, 12, false), true, false, false);
            handleInitialConnectEvent = J$.N(349777, 'handleInitialConnectEvent', J$.T(349769, handleInitialConnectEvent, 12, false), true, false, false);
            connectServers = J$.N(349793, 'connectServers', J$.T(349785, connectServers, 12, false), true, false, false);
            emitSDAMEvent = J$.N(349809, 'emitSDAMEvent', J$.T(349801, emitSDAMEvent, 12, false), true, false, false);
            J$.N(349817, 'SERVER_SELECTION_TIMEOUT_MS', SERVER_SELECTION_TIMEOUT_MS, false, false, false);
            J$.N(349825, 'SERVER_SELECTION_INTERVAL_MS', SERVER_SELECTION_INTERVAL_MS, false, false, false);
            executeWriteOperation = J$.N(349841, 'executeWriteOperation', J$.T(349833, executeWriteOperation, 12, false), true, false, false);
            J$.N(349849, 'RETRYABLE_WRITE_OPERATIONS', RETRYABLE_WRITE_OPERATIONS, false, false, false);
            isWriteCommand = J$.N(349865, 'isWriteCommand', J$.T(349857, isWriteCommand, 12, false), true, false, false);
            J$.T(326129, 'use strict', 21, false);
            var inherits = J$.W(326169, 'inherits', J$.G(326161, J$.F(326153, J$.I(typeof require === 'undefined' ? require = J$.R(326137, 'require', undefined, true, true) : require = J$.R(326137, 'require', require, true, true)), false)(J$.T(326145, 'util', 21, false)), 'inherits'), inherits, false, true);
            var f = J$.W(326209, 'f', J$.G(326201, J$.F(326193, J$.I(typeof require === 'undefined' ? require = J$.R(326177, 'require', undefined, true, true) : require = J$.R(326177, 'require', require, true, true)), false)(J$.T(326185, 'util', 21, false)), 'format'), f, false, true);
            var EventEmitter = J$.W(326249, 'EventEmitter', J$.G(326241, J$.F(326233, J$.I(typeof require === 'undefined' ? require = J$.R(326217, 'require', undefined, true, true) : require = J$.R(326217, 'require', require, true, true)), false)(J$.T(326225, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            var ReadPreference = J$.W(326281, 'ReadPreference', J$.F(326273, J$.I(typeof require === 'undefined' ? require = J$.R(326257, 'require', undefined, true, true) : require = J$.R(326257, 'require', require, true, true)), false)(J$.T(326265, './read_preference', 21, false)), ReadPreference, false, true);
            var CoreCursor = J$.W(326321, 'CoreCursor', J$.G(326313, J$.F(326305, J$.I(typeof require === 'undefined' ? require = J$.R(326289, 'require', undefined, true, true) : require = J$.R(326289, 'require', require, true, true)), false)(J$.T(326297, '../cursor', 21, false)), 'CoreCursor'), CoreCursor, false, true);
            var retrieveBSON = J$.W(326361, 'retrieveBSON', J$.G(326353, J$.F(326345, J$.I(typeof require === 'undefined' ? require = J$.R(326329, 'require', undefined, true, true) : require = J$.R(326329, 'require', require, true, true)), false)(J$.T(326337, '../connection/utils', 21, false)), 'retrieveBSON'), retrieveBSON, false, true);
            var Logger = J$.W(326393, 'Logger', J$.F(326385, J$.I(typeof require === 'undefined' ? require = J$.R(326369, 'require', undefined, true, true) : require = J$.R(326369, 'require', require, true, true)), false)(J$.T(326377, '../connection/logger', 21, false)), Logger, false, true);
            var MongoError = J$.W(326433, 'MongoError', J$.G(326425, J$.F(326417, J$.I(typeof require === 'undefined' ? require = J$.R(326401, 'require', undefined, true, true) : require = J$.R(326401, 'require', require, true, true)), false)(J$.T(326409, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var Server = J$.W(326465, 'Server', J$.F(326457, J$.I(typeof require === 'undefined' ? require = J$.R(326441, 'require', undefined, true, true) : require = J$.R(326441, 'require', require, true, true)), false)(J$.T(326449, './server', 21, false)), Server, false, true);
            var ReplSetState = J$.W(326497, 'ReplSetState', J$.F(326489, J$.I(typeof require === 'undefined' ? require = J$.R(326473, 'require', undefined, true, true) : require = J$.R(326473, 'require', require, true, true)), false)(J$.T(326481, './replset_state', 21, false)), ReplSetState, false, true);
            var clone = J$.W(326537, 'clone', J$.G(326529, J$.F(326521, J$.I(typeof require === 'undefined' ? require = J$.R(326505, 'require', undefined, true, true) : require = J$.R(326505, 'require', require, true, true)), false)(J$.T(326513, './shared', 21, false)), 'clone'), clone, false, true);
            var Timeout = J$.W(326577, 'Timeout', J$.G(326569, J$.F(326561, J$.I(typeof require === 'undefined' ? require = J$.R(326545, 'require', undefined, true, true) : require = J$.R(326545, 'require', require, true, true)), false)(J$.T(326553, './shared', 21, false)), 'Timeout'), Timeout, false, true);
            var Interval = J$.W(326617, 'Interval', J$.G(326609, J$.F(326601, J$.I(typeof require === 'undefined' ? require = J$.R(326585, 'require', undefined, true, true) : require = J$.R(326585, 'require', require, true, true)), false)(J$.T(326593, './shared', 21, false)), 'Interval'), Interval, false, true);
            var createClientInfo = J$.W(326657, 'createClientInfo', J$.G(326649, J$.F(326641, J$.I(typeof require === 'undefined' ? require = J$.R(326625, 'require', undefined, true, true) : require = J$.R(326625, 'require', require, true, true)), false)(J$.T(326633, './shared', 21, false)), 'createClientInfo'), createClientInfo, false, true);
            var SessionMixins = J$.W(326697, 'SessionMixins', J$.G(326689, J$.F(326681, J$.I(typeof require === 'undefined' ? require = J$.R(326665, 'require', undefined, true, true) : require = J$.R(326665, 'require', require, true, true)), false)(J$.T(326673, './shared', 21, false)), 'SessionMixins'), SessionMixins, false, true);
            var isRetryableWritesSupported = J$.W(326737, 'isRetryableWritesSupported', J$.G(326729, J$.F(326721, J$.I(typeof require === 'undefined' ? require = J$.R(326705, 'require', undefined, true, true) : require = J$.R(326705, 'require', require, true, true)), false)(J$.T(326713, './shared', 21, false)), 'isRetryableWritesSupported'), isRetryableWritesSupported, false, true);
            var relayEvents = J$.W(326777, 'relayEvents', J$.G(326769, J$.F(326761, J$.I(typeof require === 'undefined' ? require = J$.R(326745, 'require', undefined, true, true) : require = J$.R(326745, 'require', require, true, true)), false)(J$.T(326753, '../utils', 21, false)), 'relayEvents'), relayEvents, false, true);
            var isRetryableError = J$.W(326817, 'isRetryableError', J$.G(326809, J$.F(326801, J$.I(typeof require === 'undefined' ? require = J$.R(326785, 'require', undefined, true, true) : require = J$.R(326785, 'require', require, true, true)), false)(J$.T(326793, '../error', 21, false)), 'isRetryableError'), isRetryableError, false, true);
            var BSON = J$.W(326841, 'BSON', J$.F(326833, J$.R(326825, 'retrieveBSON', retrieveBSON, false, true), false)(), BSON, false, true);
            var calculateDurationInMs = J$.W(326881, 'calculateDurationInMs', J$.G(326873, J$.F(326865, J$.I(typeof require === 'undefined' ? require = J$.R(326849, 'require', undefined, true, true) : require = J$.R(326849, 'require', require, true, true)), false)(J$.T(326857, '../utils', 21, false)), 'calculateDurationInMs'), calculateDurationInMs, false, true);
            var getMMAPError = J$.W(326921, 'getMMAPError', J$.G(326913, J$.F(326905, J$.I(typeof require === 'undefined' ? require = J$.R(326889, 'require', undefined, true, true) : require = J$.R(326889, 'require', require, true, true)), false)(J$.T(326897, './shared', 21, false)), 'getMMAPError'), getMMAPError, false, true);
            var DISCONNECTED = J$.W(326937, 'DISCONNECTED', J$.T(326929, 'disconnected', 21, false), DISCONNECTED, false, true);
            var CONNECTING = J$.W(326953, 'CONNECTING', J$.T(326945, 'connecting', 21, false), CONNECTING, false, true);
            var CONNECTED = J$.W(326969, 'CONNECTED', J$.T(326961, 'connected', 21, false), CONNECTED, false, true);
            var UNREFERENCED = J$.W(326985, 'UNREFERENCED', J$.T(326977, 'unreferenced', 21, false), UNREFERENCED, false, true);
            var DESTROYED = J$.W(327001, 'DESTROYED', J$.T(326993, 'destroyed', 21, false), DESTROYED, false, true);
            var id = J$.W(327441, 'id', J$.T(327433, 1, 22, false), id, false, true);
            var handlers = J$.W(327497, 'handlers', J$.T(327489, [
                J$.T(327449, 'connect', 21, false),
                J$.T(327457, 'close', 21, false),
                J$.T(327465, 'error', 21, false),
                J$.T(327473, 'timeout', 21, false),
                J$.T(327481, 'parseError', 21, false)
            ], 10, false), handlers, false, true);
            var ReplSet = J$.W(329345, 'ReplSet', J$.T(329337, function ReplSet(seedlist, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(329273, arguments.callee, this, arguments);
                            arguments = J$.N(329281, 'arguments', arguments, true, false, false);
                            seedlist = J$.N(329289, 'seedlist', seedlist, true, false, false);
                            options = J$.N(329297, 'options', options, true, false, false);
                            J$.N(329305, 'self', self, false, false, false);
                            J$.N(329313, 'localThresholdMS', localThresholdMS, false, false, false);
                            J$.N(329321, 'logger', logger, false, false, false);
                            J$.N(329329, 'types', types, false, false, false);
                            var self = J$.W(327513, 'self', J$.R(327505, 'this', this, false, false), self, false, false);
                            options = J$.W(327537, 'options', J$.C(19232, J$.R(327521, 'options', options, false, false)) ? J$._() : J$.T(327529, {}, 11, false), options, false, false);
                            if (J$.C(19240, J$.U(20218, '!', J$.M(327561, J$.I(typeof Array === 'undefined' ? Array = J$.R(327545, 'Array', undefined, true, true) : Array = J$.R(327545, 'Array', Array, true, true)), 'isArray', false)(J$.R(327553, 'seedlist', seedlist, false, false)))))
                                throw J$.F(327585, J$.R(327569, 'MongoError', MongoError, false, true), true)(J$.T(327577, 'seedlist must be an array', 21, false));
                            if (J$.C(19248, J$.B(20226, '===', J$.G(327601, J$.R(327593, 'seedlist', seedlist, false, false), 'length'), J$.T(327609, 0, 22, false))))
                                throw J$.F(327633, J$.R(327617, 'MongoError', MongoError, false, true), true)(J$.T(327625, 'seedlist must contain at least one entry', 21, false));
                            J$.M(327753, J$.R(327641, 'seedlist', seedlist, false, false), 'forEach', false)(J$.T(327745, function (e) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(327721, arguments.callee, this, arguments);
                                            arguments = J$.N(327729, 'arguments', arguments, true, false, false);
                                            e = J$.N(327737, 'e', e, true, false, false);
                                            if (J$.C(19264, J$.C(19256, J$.B(20242, '!==', J$.U(20234, 'typeof', J$.G(327657, J$.R(327649, 'e', e, false, false), 'host')), J$.T(327665, 'string', 21, false))) ? J$._() : J$.B(20258, '!==', J$.U(20250, 'typeof', J$.G(327681, J$.R(327673, 'e', e, false, false), 'port')), J$.T(327689, 'number', 21, false))))
                                                throw J$.F(327713, J$.R(327697, 'MongoError', MongoError, false, true), true)(J$.T(327705, 'seedlist entry must contain a host and port', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(349889, J$e);
                                        } finally {
                                            if (J$.Fr(349897))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(327777, J$.R(327761, 'EventEmitter', EventEmitter, false, true), 'call', false)(J$.R(327769, 'this', this, false, false));
                            J$.P(327809, J$.R(327785, 'this', this, false, false), 'id', J$.B(20282, '-', id = J$.W(327801, 'id', J$.B(20274, '+', J$.U(20266, '+', J$.R(327793, 'id', id, false, true)), 1), id, false, true), 1));
                            var localThresholdMS = J$.W(327841, 'localThresholdMS', J$.C(19272, J$.G(327825, J$.R(327817, 'options', options, false, false), 'localThresholdMS')) ? J$._() : J$.T(327833, 15, 22, false), localThresholdMS, false, false);
                            if (J$.C(19280, J$.G(327857, J$.R(327849, 'options', options, false, false), 'acceptableLatency')))
                                localThresholdMS = J$.W(327881, 'localThresholdMS', J$.G(327873, J$.R(327865, 'options', options, false, false), 'acceptableLatency'), localThresholdMS, false, false);
                            var logger = J$.W(327921, 'logger', J$.F(327913, J$.R(327889, 'Logger', Logger, false, true), false)(J$.T(327897, 'ReplSet', 21, false), J$.R(327905, 'options', options, false, false)), logger, false, false);
                            J$.P(328553, J$.R(327929, 'this', this, false, false), 's', J$.T(328545, {
                                options: J$.M(327961, J$.I(typeof Object === 'undefined' ? Object = J$.R(327937, 'Object', undefined, true, true) : Object = J$.R(327937, 'Object', Object, true, true)), 'assign', false)(J$.T(327945, {}, 11, false), J$.R(327953, 'options', options, false, false)),
                                bson: J$.C(19288, J$.G(327977, J$.R(327969, 'options', options, false, false), 'bson')) ? J$._() : J$.F(328225, J$.R(327985, 'BSON', BSON, false, true), true)(J$.T(328217, [
                                    J$.G(328001, J$.R(327993, 'BSON', BSON, false, true), 'Binary'),
                                    J$.G(328017, J$.R(328009, 'BSON', BSON, false, true), 'Code'),
                                    J$.G(328033, J$.R(328025, 'BSON', BSON, false, true), 'DBRef'),
                                    J$.G(328049, J$.R(328041, 'BSON', BSON, false, true), 'Decimal128'),
                                    J$.G(328065, J$.R(328057, 'BSON', BSON, false, true), 'Double'),
                                    J$.G(328081, J$.R(328073, 'BSON', BSON, false, true), 'Int32'),
                                    J$.G(328097, J$.R(328089, 'BSON', BSON, false, true), 'Long'),
                                    J$.G(328113, J$.R(328105, 'BSON', BSON, false, true), 'Map'),
                                    J$.G(328129, J$.R(328121, 'BSON', BSON, false, true), 'MaxKey'),
                                    J$.G(328145, J$.R(328137, 'BSON', BSON, false, true), 'MinKey'),
                                    J$.G(328161, J$.R(328153, 'BSON', BSON, false, true), 'ObjectId'),
                                    J$.G(328177, J$.R(328169, 'BSON', BSON, false, true), 'BSONRegExp'),
                                    J$.G(328193, J$.R(328185, 'BSON', BSON, false, true), 'Symbol'),
                                    J$.G(328209, J$.R(328201, 'BSON', BSON, false, true), 'Timestamp')
                                ], 10, false)),
                                Cursor: J$.C(19296, J$.G(328241, J$.R(328233, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.R(328249, 'CoreCursor', CoreCursor, false, true),
                                logger: J$.R(328257, 'logger', logger, false, false),
                                seedlist: J$.R(328265, 'seedlist', seedlist, false, false),
                                replicaSetState: J$.F(328377, J$.R(328273, 'ReplSetState', ReplSetState, false, true), true)(J$.T(328369, {
                                    id: J$.G(328289, J$.R(328281, 'this', this, false, false), 'id'),
                                    setName: J$.G(328305, J$.R(328297, 'options', options, false, false), 'setName'),
                                    acceptableLatency: J$.R(328313, 'localThresholdMS', localThresholdMS, false, false),
                                    heartbeatFrequencyMS: J$.C(19304, J$.G(328329, J$.R(328321, 'options', options, false, false), 'haInterval')) ? J$.G(328345, J$.R(328337, 'options', options, false, false), 'haInterval') : J$.T(328353, 10000, 22, false),
                                    logger: J$.R(328361, 'logger', logger, false, false)
                                }, 11, false)),
                                connectingServers: J$.T(328385, [], 10, false),
                                haInterval: J$.C(19312, J$.G(328401, J$.R(328393, 'options', options, false, false), 'haInterval')) ? J$.G(328417, J$.R(328409, 'options', options, false, false), 'haInterval') : J$.T(328425, 10000, 22, false),
                                minHeartbeatFrequencyMS: J$.T(328433, 500, 22, false),
                                disconnectHandler: J$.G(328449, J$.R(328441, 'options', options, false, false), 'disconnectHandler'),
                                index: J$.T(328457, 0, 22, false),
                                connectOptions: J$.T(328465, {}, 11, false),
                                debug: J$.C(19320, J$.B(20298, '===', J$.U(20290, 'typeof', J$.G(328481, J$.R(328473, 'options', options, false, false), 'debug')), J$.T(328489, 'boolean', 21, false))) ? J$.G(328505, J$.R(328497, 'options', options, false, false), 'debug') : J$.T(328513, false, 23, false),
                                clientInfo: J$.F(328537, J$.R(328521, 'createClientInfo', createClientInfo, false, true), false)(J$.R(328529, 'options', options, false, false))
                            }, 11, false));
                            J$.M(328657, J$.G(328577, J$.G(328569, J$.R(328561, 'this', this, false, false), 's'), 'replicaSetState'), 'on', false)(J$.T(328585, 'topologyDescriptionChanged', 21, false), J$.T(328649, function (r) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(328625, arguments.callee, this, arguments);
                                            arguments = J$.N(328633, 'arguments', arguments, true, false, false);
                                            r = J$.N(328641, 'r', r, true, false, false);
                                            J$.M(328617, J$.R(328593, 'self', self, false, false), 'emit', false)(J$.T(328601, 'topologyDescriptionChanged', 21, false), J$.R(328609, 'r', r, false, false));
                                        } catch (J$e) {
                                            J$.Ex(349905, J$e);
                                        } finally {
                                            if (J$.Fr(349913))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            if (J$.C(19344, J$.C(19336, J$.C(19328, J$.M(328689, J$.G(328681, J$.G(328673, J$.R(328665, 'this', this, false, false), 's'), 'logger'), 'isWarn', false)()) ? J$.B(20306, '!==', J$.G(328721, J$.G(328713, J$.G(328705, J$.R(328697, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.T(328729, 0, 22, false)) : J$._()) ? J$.B(20314, '<', J$.G(328761, J$.G(328753, J$.G(328745, J$.R(328737, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.G(328785, J$.G(328777, J$.R(328769, 'this', this, false, false), 's'), 'haInterval')) : J$._())) {
                                J$.M(328897, J$.G(328809, J$.G(328801, J$.R(328793, 'this', this, false, false), 's'), 'logger'), 'warn', false)(J$.F(328889, J$.R(328817, 'f', f, false, true), false)(J$.T(328825, 'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts', 21, false), J$.G(328857, J$.G(328849, J$.G(328841, J$.R(328833, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.G(328881, J$.G(328873, J$.R(328865, 'this', this, false, false), 's'), 'haInterval')));
                            }
                            var types = J$.W(328929, 'types', J$.T(328921, [
                                J$.T(328905, 'joined', 21, false),
                                J$.T(328913, 'left', 21, false)
                            ], 10, false), types, false, false);
                            J$.M(329097, J$.R(328937, 'types', types, false, false), 'forEach', false)(J$.T(329089, function (x) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(329065, arguments.callee, this, arguments);
                                            arguments = J$.N(329073, 'arguments', arguments, true, false, false);
                                            x = J$.N(329081, 'x', x, true, false, false);
                                            J$.M(329057, J$.G(328961, J$.G(328953, J$.R(328945, 'self', self, false, false), 's'), 'replicaSetState'), 'on', false)(J$.R(328969, 'x', x, false, false), J$.T(329049, function (t, s) {
                                                jalangiLabel3:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(329017, arguments.callee, this, arguments);
                                                            arguments = J$.N(329025, 'arguments', arguments, true, false, false);
                                                            t = J$.N(329033, 't', t, true, false, false);
                                                            s = J$.N(329041, 's', s, true, false, false);
                                                            J$.M(329009, J$.R(328977, 'self', self, false, false), 'emit', false)(J$.R(328985, 'x', x, false, false), J$.R(328993, 't', t, false, false), J$.R(329001, 's', s, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(349921, J$e);
                                                        } finally {
                                                            if (J$.Fr(349929))
                                                                continue jalangiLabel3;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(349937, J$e);
                                        } finally {
                                            if (J$.Fr(349945))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(329145, J$.R(329105, 'this', this, false, false), 'initialConnectState', J$.T(329137, {
                                connect: J$.T(329113, false, 23, false),
                                fullsetup: J$.T(329121, false, 23, false),
                                all: J$.T(329129, false, 23, false)
                            }, 11, false));
                            J$.P(329169, J$.R(329153, 'this', this, false, false), 'state', J$.R(329161, 'DISCONNECTED', DISCONNECTED, false, true));
                            J$.P(329193, J$.R(329177, 'this', this, false, false), 'haTimeoutId', J$.T(329185, null, 25, false));
                            J$.P(329217, J$.R(329201, 'this', this, false, false), 'ismaster', J$.T(329209, null, 25, false));
                            J$.P(329241, J$.R(329225, 'this', this, false, false), 'intervalIds', J$.T(329233, [], 10, false));
                            J$.P(329265, J$.R(329249, 'this', this, false, false), 'clusterTime', J$.T(329257, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(349953, J$e);
                        } finally {
                            if (J$.Fr(349961))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ReplSet, false, true);
            J$.F(329377, J$.R(329353, 'inherits', inherits, false, true), false)(J$.R(329361, 'ReplSet', ReplSet, false, true), J$.R(329369, 'EventEmitter', EventEmitter, false, true));
            J$.M(329417, J$.I(typeof Object === 'undefined' ? Object = J$.R(329385, 'Object', undefined, true, true) : Object = J$.R(329385, 'Object', Object, true, true)), 'assign', false)(J$.G(329401, J$.R(329393, 'ReplSet', ReplSet, false, true), 'prototype'), J$.R(329409, 'SessionMixins', SessionMixins, false, true));
            J$.M(329513, J$.I(typeof Object === 'undefined' ? Object = J$.R(329425, 'Object', undefined, true, true) : Object = J$.R(329425, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(329441, J$.R(329433, 'ReplSet', ReplSet, false, true), 'prototype'), J$.T(329449, 'type', 21, false), J$.T(329505, {
                enumerable: J$.T(329457, true, 23, false),
                get: J$.T(329497, function get() {
                    jalangiLabel6:
                        while (true) {
                            try {
                                J$.Fe(329481, arguments.callee, this, arguments);
                                arguments = J$.N(329489, 'arguments', arguments, true, false, false);
                                return J$.Rt(329473, J$.T(329465, 'replset', 21, false));
                            } catch (J$e) {
                                J$.Ex(349969, J$e);
                            } finally {
                                if (J$.Fr(349977))
                                    continue jalangiLabel6;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(329641, J$.I(typeof Object === 'undefined' ? Object = J$.R(329521, 'Object', undefined, true, true) : Object = J$.R(329521, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(329537, J$.R(329529, 'ReplSet', ReplSet, false, true), 'prototype'), J$.T(329545, 'parserType', 21, false), J$.T(329633, {
                enumerable: J$.T(329553, true, 23, false),
                get: J$.T(329625, function get() {
                    jalangiLabel7:
                        while (true) {
                            try {
                                J$.Fe(329609, arguments.callee, this, arguments);
                                arguments = J$.N(329617, 'arguments', arguments, true, false, false);
                                return J$.Rt(329601, J$.C(19352, J$.G(329577, J$.R(329561, 'BSON', BSON, false, true), J$.T(329569, 'native', 21, false))) ? J$.T(329585, 'c++', 21, false) : J$.T(329593, 'js', 21, false));
                            } catch (J$e) {
                                J$.Ex(349985, J$e);
                            } finally {
                                if (J$.Fr(349993))
                                    continue jalangiLabel7;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(329769, J$.I(typeof Object === 'undefined' ? Object = J$.R(329649, 'Object', undefined, true, true) : Object = J$.R(329649, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(329665, J$.R(329657, 'ReplSet', ReplSet, false, true), 'prototype'), J$.T(329673, 'logicalSessionTimeoutMinutes', 21, false), J$.T(329761, {
                enumerable: J$.T(329681, true, 23, false),
                get: J$.T(329753, function get() {
                    jalangiLabel8:
                        while (true) {
                            try {
                                J$.Fe(329737, arguments.callee, this, arguments);
                                arguments = J$.N(329745, 'arguments', arguments, true, false, false);
                                return J$.Rt(329729, J$.C(19360, J$.G(329713, J$.G(329705, J$.G(329697, J$.R(329689, 'this', this, false, false), 's'), 'replicaSetState'), 'logicalSessionTimeoutMinutes')) ? J$._() : J$.T(329721, null, 25, false));
                            } catch (J$e) {
                                J$.Ex(350001, J$e);
                            } finally {
                                if (J$.Fr(350009))
                                    continue jalangiLabel8;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            var pingServer = J$.W(333713, 'pingServer', J$.T(333705, function pingServer(self, server, cb) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(333657, arguments.callee, this, arguments);
                            arguments = J$.N(333665, 'arguments', arguments, true, false, false);
                            self = J$.N(333673, 'self', self, true, false, false);
                            server = J$.N(333681, 'server', server, true, false, false);
                            cb = J$.N(333689, 'cb', cb, true, false, false);
                            J$.N(333697, 'start', start, false, false, false);
                            var start = J$.W(332497, 'start', J$.M(332489, J$.F(332481, J$.I(typeof Date === 'undefined' ? Date = J$.R(332473, 'Date', undefined, true, true) : Date = J$.R(332473, 'Date', Date, true, true)), true)(), 'getTime', false)(), start, false, false);
                            J$.F(332553, J$.R(332505, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(332513, 'self', self, false, false), J$.T(332521, 'serverHeartbeatStarted', 21, false), J$.T(332545, { connectionId: J$.G(332537, J$.R(332529, 'server', server, false, false), 'name') }, 11, false));
                            J$.M(333649, J$.R(332561, 'server', server, false, false), 'command', false)(J$.T(332569, 'admin.$cmd', 21, false), J$.T(332585, { ismaster: J$.T(332577, true, 23, false) }, 11, false), J$.T(332641, {
                                monitoring: J$.T(332593, true, 23, false),
                                socketTimeout: J$.C(19536, J$.G(332625, J$.G(332617, J$.G(332609, J$.R(332601, 'self', self, false, false), 's'), 'options'), 'connectionTimeout')) ? J$._() : J$.T(332633, 2000, 22, false)
                            }, 11, false), J$.T(333641, function (err, r) {
                                jalangiLabel18:
                                    while (true) {
                                        try {
                                            J$.Fe(333593, arguments.callee, this, arguments);
                                            arguments = J$.N(333601, 'arguments', arguments, true, false, false);
                                            err = J$.N(333609, 'err', err, true, false, false);
                                            r = J$.N(333617, 'r', r, true, false, false);
                                            J$.N(333625, 'latencyMS', latencyMS, false, false, false);
                                            J$.N(333633, 'hrtime', hrtime, false, false, false);
                                            if (J$.C(19552, J$.C(19544, J$.B(20474, '===', J$.G(332657, J$.R(332649, 'self', self, false, false), 'state'), J$.R(332665, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20482, '===', J$.G(332681, J$.R(332673, 'self', self, false, false), 'state'), J$.R(332689, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                J$.M(332721, J$.R(332697, 'server', server, false, false), 'destroy', false)(J$.T(332713, { force: J$.T(332705, true, 23, false) }, 11, false));
                                                return J$.Rt(332761, J$.F(332753, J$.R(332729, 'cb', cb, false, false), false)(J$.R(332737, 'err', err, false, false), J$.R(332745, 'r', r, false, false)));
                                            }
                                            var latencyMS = J$.W(332801, 'latencyMS', J$.B(20490, '-', J$.M(332785, J$.F(332777, J$.I(typeof Date === 'undefined' ? Date = J$.R(332769, 'Date', undefined, true, true) : Date = J$.R(332769, 'Date', Date, true, true)), true)(), 'getTime', false)(), J$.R(332793, 'start', start, false, false)), latencyMS, false, false);
                                            var hrtime = J$.W(332825, 'hrtime', J$.M(332817, J$.I(typeof process === 'undefined' ? process = J$.R(332809, 'process', undefined, true, true) : process = J$.R(332809, 'process', process, true, true)), 'hrtime', false)(), hrtime, false, false);
                                            J$.P(332905, J$.R(332833, 'server', server, false, false), 'lastUpdateTime', J$.B(20514, '/', J$.B(20506, '+', J$.B(20498, '*', J$.G(332857, J$.R(332841, 'hrtime', hrtime, false, false), J$.T(332849, 0, 22, false)), J$.T(332865, 1000000000, 22, false)), J$.G(332889, J$.R(332873, 'hrtime', hrtime, false, false), J$.T(332881, 1, 22, false))), J$.T(332897, 1000000, 22, false)));
                                            if (J$.C(19616, J$.R(332913, 'err', err, false, false))) {
                                                J$.F(332985, J$.R(332921, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(332929, 'self', self, false, false), J$.T(332937, 'serverHeartbeatFailed', 21, false), J$.T(332977, {
                                                    durationMS: J$.R(332945, 'latencyMS', latencyMS, false, false),
                                                    failure: J$.R(332953, 'err', err, false, false),
                                                    connectionId: J$.G(332969, J$.R(332961, 'server', server, false, false), 'name')
                                                }, 11, false));
                                                J$.M(333025, J$.G(333009, J$.G(333001, J$.R(332993, 'self', self, false, false), 's'), 'replicaSetState'), 'remove', false)(J$.R(333017, 'server', server, false, false));
                                            } else {
                                                J$.P(333057, J$.R(333033, 'server', server, false, false), 'ismaster', J$.G(333049, J$.R(333041, 'r', r, false, false), 'result'));
                                                if (J$.C(19568, J$.C(19560, J$.G(333081, J$.G(333073, J$.R(333065, 'server', server, false, false), 'ismaster'), 'lastWrite')) ? J$.G(333113, J$.G(333105, J$.G(333097, J$.R(333089, 'server', server, false, false), 'ismaster'), 'lastWrite'), 'lastWriteDate') : J$._())) {
                                                    J$.P(333169, J$.R(333121, 'server', server, false, false), 'lastWriteDate', J$.M(333161, J$.G(333153, J$.G(333145, J$.G(333137, J$.R(333129, 'server', server, false, false), 'ismaster'), 'lastWrite'), 'lastWriteDate'), 'getTime', false)());
                                                }
                                                if (J$.C(19584, J$.B(20530, '===', J$.G(333185, J$.R(333177, 'server', server, false, false), 'lastIsMasterMS'), J$.U(20522, '-', J$.T(333193, 1, 22, false))))) {
                                                    J$.P(333217, J$.R(333201, 'server', server, false, false), 'lastIsMasterMS', J$.R(333209, 'latencyMS', latencyMS, false, false));
                                                } else if (J$.C(19576, J$.G(333233, J$.R(333225, 'server', server, false, false), 'lastIsMasterMS'))) {
                                                    J$.P(333297, J$.R(333241, 'server', server, false, false), 'lastIsMasterMS', J$.B(20562, '+', J$.B(20538, '*', J$.T(333249, 0.2, 22, false), J$.R(333257, 'latencyMS', latencyMS, false, false)), J$.B(20554, '*', J$.B(20546, '-', J$.T(333265, 1, 22, false), J$.T(333273, 0.2, 22, false)), J$.G(333289, J$.R(333281, 'server', server, false, false), 'lastIsMasterMS'))));
                                                }
                                                if (J$.C(19608, J$.M(333337, J$.G(333321, J$.G(333313, J$.R(333305, 'self', self, false, false), 's'), 'replicaSetState'), 'update', false)(J$.R(333329, 'server', server, false, false)))) {
                                                    if (J$.C(19600, J$.C(19592, J$.M(333353, J$.R(333345, 'server', server, false, false), 'lastIsMaster', false)()) ? J$.G(333377, J$.M(333369, J$.R(333361, 'server', server, false, false), 'lastIsMaster', false)(), 'ismaster') : J$._())) {
                                                        J$.P(333409, J$.R(333385, 'self', self, false, false), 'ismaster', J$.M(333401, J$.R(333393, 'server', server, false, false), 'lastIsMaster', false)());
                                                    }
                                                }
                                                J$.F(333489, J$.R(333417, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(333425, 'self', self, false, false), J$.T(333433, 'serverHeartbeatSucceeded', 21, false), J$.T(333481, {
                                                    durationMS: J$.R(333441, 'latencyMS', latencyMS, false, false),
                                                    reply: J$.G(333457, J$.R(333449, 'r', r, false, false), 'result'),
                                                    connectionId: J$.G(333473, J$.R(333465, 'server', server, false, false), 'name')
                                                }, 11, false));
                                            }
                                            J$.M(333553, J$.G(333513, J$.G(333505, J$.R(333497, 'self', self, false, false), 's'), 'replicaSetState'), 'updateServerMaxStaleness', false)(J$.R(333521, 'server', server, false, false), J$.G(333545, J$.G(333537, J$.R(333529, 'self', self, false, false), 's'), 'haInterval'));
                                            J$.F(333585, J$.R(333561, 'cb', cb, false, false), false)(J$.R(333569, 'err', err, false, false), J$.R(333577, 'r', r, false, false));
                                        } catch (J$e) {
                                            J$.Ex(350161, J$e);
                                        } finally {
                                            if (J$.Fr(350169))
                                                continue jalangiLabel18;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(350177, J$e);
                        } finally {
                            if (J$.Fr(350185))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), pingServer, false, true);
            var monitorServer = J$.W(335313, 'monitorServer', J$.T(335305, function monitorServer(host, self, options) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(335233, arguments.callee, this, arguments);
                            arguments = J$.N(335241, 'arguments', arguments, true, false, false);
                            host = J$.N(335249, 'host', host, true, false, false);
                            self = J$.N(335257, 'self', self, true, false, false);
                            options = J$.N(335265, 'options', options, true, false, false);
                            J$.N(335273, 'i', i, false, false, false);
                            J$.N(335281, '_process', _process, false, false, false);
                            J$.N(335289, '_haInterval', _haInterval, false, false, false);
                            J$.N(335297, 'intervalId', intervalId, false, false, false);
                            if (J$.C(19640, J$.U(20570, '!', J$.G(333729, J$.R(333721, 'options', options, false, false), 'haInterval')))) {
                                for (var i = J$.W(333745, 'i', J$.T(333737, 0, 22, false), i, false, false); J$.C(19632, J$.B(20578, '<', J$.R(333753, 'i', i, false, false), J$.G(333777, J$.G(333769, J$.R(333761, 'self', self, false, false), 'intervalIds'), 'length'))); J$.B(20602, '-', i = J$.W(333793, 'i', J$.B(20594, '+', J$.U(20586, '+', J$.R(333785, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    if (J$.C(19624, J$.B(20610, '===', J$.G(333833, J$.G(333825, J$.G(333809, J$.R(333801, 'self', self, false, false), 'intervalIds'), J$.R(333817, 'i', i, false, false)), '__host'), J$.R(333841, 'host', host, false, false)))) {
                                        return J$.Rt(333849, undefined);
                                    }
                                }
                            }
                            var _process = J$.W(333889, '_process', J$.C(19648, J$.G(333865, J$.R(333857, 'options', options, false, false), 'haInterval')) ? J$.R(333873, 'Timeout', Timeout, false, true) : J$.R(333881, 'Interval', Interval, false, true), _process, false, false);
                            var _haInterval = J$.W(333953, '_haInterval', J$.C(19656, J$.G(333905, J$.R(333897, 'options', options, false, false), 'haInterval')) ? J$.G(333921, J$.R(333913, 'options', options, false, false), 'haInterval') : J$.G(333945, J$.G(333937, J$.R(333929, 'self', self, false, false), 's'), 'haInterval'), _haInterval, false, false);
                            var intervalId = J$.W(335153, 'intervalId', J$.F(335145, J$.R(333961, '_process', _process, false, false), true)(J$.T(335129, function () {
                                jalangiLabel25:
                                    while (true) {
                                        try {
                                            J$.Fe(335105, arguments.callee, this, arguments);
                                            arguments = J$.N(335113, 'arguments', arguments, true, false, false);
                                            J$.N(335121, '_server', _server, false, false, false);
                                            if (J$.C(19672, J$.C(19664, J$.B(20618, '===', J$.G(333977, J$.R(333969, 'self', self, false, false), 'state'), J$.R(333985, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20626, '===', J$.G(334001, J$.R(333993, 'self', self, false, false), 'state'), J$.R(334009, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                J$.M(334025, J$.R(334017, 'intervalId', intervalId, false, false), 'stop', false)();
                                                return J$.Rt(334033, undefined);
                                            }
                                            var _server = J$.W(334081, '_server', J$.M(334073, J$.G(334057, J$.G(334049, J$.R(334041, 'self', self, false, false), 's'), 'replicaSetState'), 'get', false)(J$.R(334065, 'host', host, false, false)), _server, false, false);
                                            if (J$.C(19800, J$.R(334089, '_server', _server, false, false))) {
                                                return J$.Rt(335097, J$.F(335089, J$.R(334097, 'pingServer', pingServer, false, true), false)(J$.R(334105, 'self', self, false, false), J$.R(334113, '_server', _server, false, false), J$.T(335081, function (err) {
                                                    jalangiLabel24:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(335057, arguments.callee, this, arguments);
                                                                arguments = J$.N(335065, 'arguments', arguments, true, false, false);
                                                                err = J$.N(335073, 'err', err, true, false, false);
                                                                if (J$.C(19680, J$.R(334121, 'err', err, false, false))) {
                                                                    return J$.Rt(334129, undefined);
                                                                }
                                                                if (J$.C(19696, J$.C(19688, J$.B(20634, '===', J$.G(334145, J$.R(334137, 'self', self, false, false), 'state'), J$.R(334153, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(20642, '===', J$.G(334169, J$.R(334161, 'self', self, false, false), 'state'), J$.R(334177, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                    J$.M(334193, J$.R(334185, 'intervalId', intervalId, false, false), 'stop', false)();
                                                                    return J$.Rt(334201, undefined);
                                                                }
                                                                J$.P(334297, J$.R(334209, 'self', self, false, false), 'intervalIds', J$.M(334289, J$.G(334225, J$.R(334217, 'self', self, false, false), 'intervalIds'), 'filter', false)(J$.T(334281, function (intervalId) {
                                                                    jalangiLabel20:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(334257, arguments.callee, this, arguments);
                                                                                arguments = J$.N(334265, 'arguments', arguments, true, false, false);
                                                                                intervalId = J$.N(334273, 'intervalId', intervalId, true, false, false);
                                                                                return J$.Rt(334249, J$.M(334241, J$.R(334233, 'intervalId', intervalId, false, false), 'isRunning', false)());
                                                                            } catch (J$e) {
                                                                                J$.Ex(350193, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(350201))
                                                                                    continue jalangiLabel20;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false)));
                                                                if (J$.C(19768, J$.B(20650, '===', J$.R(334305, '_process', _process, false, false), J$.R(334313, 'Timeout', Timeout, false, true)))) {
                                                                    if (J$.C(19728, J$.C(19720, J$.B(20658, '===', J$.G(334329, J$.R(334321, 'self', self, false, false), 'state'), J$.R(334337, 'CONNECTING', CONNECTING, false, true))) ? J$.C(19712, J$.C(19704, J$.M(334369, J$.G(334361, J$.G(334353, J$.R(334345, 'self', self, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)()) ? J$.G(334401, J$.G(334393, J$.G(334385, J$.R(334377, 'self', self, false, false), 's'), 'options'), 'secondaryOnlyConnectionAllowed') : J$._()) ? J$._() : J$.M(334433, J$.G(334425, J$.G(334417, J$.R(334409, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)() : J$._())) {
                                                                        J$.P(334457, J$.R(334441, 'self', self, false, false), 'state', J$.R(334449, 'CONNECTED', CONNECTED, false, true));
                                                                        J$.M(334529, J$.I(typeof process === 'undefined' ? process = J$.R(334465, 'process', undefined, true, true) : process = J$.R(334465, 'process', process, true, true)), 'nextTick', false)(J$.T(334521, function () {
                                                                            jalangiLabel21:
                                                                                while (true) {
                                                                                    try {
                                                                                        J$.Fe(334505, arguments.callee, this, arguments);
                                                                                        arguments = J$.N(334513, 'arguments', arguments, true, false, false);
                                                                                        J$.M(334497, J$.R(334473, 'self', self, false, false), 'emit', false)(J$.T(334481, 'connect', 21, false), J$.R(334489, 'self', self, false, false));
                                                                                    } catch (J$e) {
                                                                                        J$.Ex(350209, J$e);
                                                                                    } finally {
                                                                                        if (J$.Fr(350217))
                                                                                            continue jalangiLabel21;
                                                                                        else
                                                                                            return J$.Ra();
                                                                                    }
                                                                                }
                                                                        }, 12, false));
                                                                        J$.F(334561, J$.R(334537, 'topologyMonitor', topologyMonitor, false, true), false)(J$.R(334545, 'self', self, false, false), J$.T(334553, {}, 11, false));
                                                                    }
                                                                } else {
                                                                    if (J$.C(19760, J$.C(19752, J$.B(20666, '===', J$.G(334577, J$.R(334569, 'self', self, false, false), 'state'), J$.R(334585, 'DISCONNECTED', DISCONNECTED, false, true))) ? J$.C(19744, J$.C(19736, J$.M(334617, J$.G(334609, J$.G(334601, J$.R(334593, 'self', self, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)()) ? J$.G(334649, J$.G(334641, J$.G(334633, J$.R(334625, 'self', self, false, false), 's'), 'options'), 'secondaryOnlyConnectionAllowed') : J$._()) ? J$._() : J$.M(334681, J$.G(334673, J$.G(334665, J$.R(334657, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)() : J$._())) {
                                                                        J$.P(334705, J$.R(334689, 'self', self, false, false), 'state', J$.R(334697, 'CONNECTED', CONNECTED, false, true));
                                                                        J$.F(334729, J$.R(334713, 'rexecuteOperations', rexecuteOperations, false, true), false)(J$.R(334721, 'self', self, false, false));
                                                                        J$.M(334801, J$.I(typeof process === 'undefined' ? process = J$.R(334737, 'process', undefined, true, true) : process = J$.R(334737, 'process', process, true, true)), 'nextTick', false)(J$.T(334793, function () {
                                                                            jalangiLabel22:
                                                                                while (true) {
                                                                                    try {
                                                                                        J$.Fe(334777, arguments.callee, this, arguments);
                                                                                        arguments = J$.N(334785, 'arguments', arguments, true, false, false);
                                                                                        J$.M(334769, J$.R(334745, 'self', self, false, false), 'emit', false)(J$.T(334753, 'reconnect', 21, false), J$.R(334761, 'self', self, false, false));
                                                                                    } catch (J$e) {
                                                                                        J$.Ex(350225, J$e);
                                                                                    } finally {
                                                                                        if (J$.Fr(350233))
                                                                                            continue jalangiLabel22;
                                                                                        else
                                                                                            return J$.Ra();
                                                                                    }
                                                                                }
                                                                        }, 12, false));
                                                                    }
                                                                }
                                                                if (J$.C(19792, J$.C(19784, J$.C(19776, J$.G(334825, J$.G(334817, J$.R(334809, 'self', self, false, false), 'initialConnectState'), 'connect')) ? J$.U(20674, '!', J$.G(334849, J$.G(334841, J$.R(334833, 'self', self, false, false), 'initialConnectState'), 'fullsetup')) : J$._()) ? J$.M(334881, J$.G(334873, J$.G(334865, J$.R(334857, 'self', self, false, false), 's'), 'replicaSetState'), 'hasPrimaryAndSecondary', false)() : J$._())) {
                                                                    J$.P(334913, J$.G(334897, J$.R(334889, 'self', self, false, false), 'initialConnectState'), 'fullsetup', J$.T(334905, true, 23, false));
                                                                    J$.P(334945, J$.G(334929, J$.R(334921, 'self', self, false, false), 'initialConnectState'), 'all', J$.T(334937, true, 23, false));
                                                                    J$.M(335049, J$.I(typeof process === 'undefined' ? process = J$.R(334953, 'process', undefined, true, true) : process = J$.R(334953, 'process', process, true, true)), 'nextTick', false)(J$.T(335041, function () {
                                                                        jalangiLabel23:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(335025, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(335033, 'arguments', arguments, true, false, false);
                                                                                    J$.M(334985, J$.R(334961, 'self', self, false, false), 'emit', false)(J$.T(334969, 'fullsetup', 21, false), J$.R(334977, 'self', self, false, false));
                                                                                    J$.M(335017, J$.R(334993, 'self', self, false, false), 'emit', false)(J$.T(335001, 'all', 21, false), J$.R(335009, 'self', self, false, false));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(350241, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(350249))
                                                                                        continue jalangiLabel23;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(350257, J$e);
                                                            } finally {
                                                                if (J$.Fr(350265))
                                                                    continue jalangiLabel24;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(350273, J$e);
                                        } finally {
                                            if (J$.Fr(350281))
                                                continue jalangiLabel25;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.R(335137, '_haInterval', _haInterval, false, false)), intervalId, false, false);
                            J$.M(335169, J$.R(335161, 'intervalId', intervalId, false, false), 'start', false)();
                            J$.P(335193, J$.R(335177, 'intervalId', intervalId, false, false), '__host', J$.R(335185, 'host', host, false, false));
                            J$.M(335225, J$.G(335209, J$.R(335201, 'self', self, false, false), 'intervalIds'), 'push', false)(J$.R(335217, 'intervalId', intervalId, false, false));
                        } catch (J$e) {
                            J$.Ex(350289, J$e);
                        } finally {
                            if (J$.Fr(350297))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), monitorServer, false, true);
            J$.P(341969, J$.G(341265, J$.R(341257, 'ReplSet', ReplSet, false, true), 'prototype'), 'connect', J$.T(341961, function (options) {
                jalangiLabel48:
                    while (true) {
                        try {
                            J$.Fe(341921, arguments.callee, this, arguments);
                            arguments = J$.N(341929, 'arguments', arguments, true, false, false);
                            options = J$.N(341937, 'options', options, true, false, false);
                            J$.N(341945, 'self', self, false, false, false);
                            J$.N(341953, 'servers', servers, false, false, false);
                            var self = J$.W(341281, 'self', J$.R(341273, 'this', this, false, false), self, false, false);
                            J$.P(341321, J$.G(341297, J$.R(341289, 'this', this, false, false), 's'), 'connectOptions', J$.C(20296, J$.R(341305, 'options', options, false, false)) ? J$._() : J$.T(341313, {}, 11, false));
                            J$.F(341353, J$.R(341329, 'stateTransition', stateTransition, false, true), false)(J$.R(341337, 'this', this, false, false), J$.R(341345, 'CONNECTING', CONNECTING, false, true));
                            var servers = J$.W(341585, 'servers', J$.M(341577, J$.G(341377, J$.G(341369, J$.R(341361, 'this', this, false, false), 's'), 'seedlist'), 'map', false)(J$.T(341569, function (x) {
                                jalangiLabel47:
                                    while (true) {
                                        try {
                                            J$.Fe(341545, arguments.callee, this, arguments);
                                            arguments = J$.N(341553, 'arguments', arguments, true, false, false);
                                            x = J$.N(341561, 'x', x, true, false, false);
                                            return J$.Rt(341537, J$.F(341529, J$.R(341385, 'Server', Server, false, true), true)(J$.M(341521, J$.I(typeof Object === 'undefined' ? Object = J$.R(341393, 'Object', undefined, true, true) : Object = J$.R(341393, 'Object', Object, true, true)), 'assign', false)(J$.T(341401, {}, 11, false), J$.G(341425, J$.G(341417, J$.R(341409, 'self', self, false, false), 's'), 'options'), J$.R(341433, 'x', x, false, false), J$.R(341441, 'options', options, false, false), J$.T(341513, {
                                                reconnect: J$.T(341449, false, 23, false),
                                                monitoring: J$.T(341457, false, 23, false),
                                                parent: J$.R(341465, 'self', self, false, false),
                                                clientInfo: J$.F(341505, J$.R(341473, 'clone', clone, false, true), false)(J$.G(341497, J$.G(341489, J$.R(341481, 'self', self, false, false), 's'), 'clientInfo'))
                                            }, 11, false))));
                                        } catch (J$e) {
                                            J$.Ex(350625, J$e);
                                        } finally {
                                            if (J$.Fr(350633))
                                                continue jalangiLabel47;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), servers, false, false);
                            if (J$.C(20312, J$.C(20304, J$.B(21114, '>', J$.G(341617, J$.G(341609, J$.G(341601, J$.R(341593, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.T(341625, 0, 22, false))) ? J$.B(21122, '<=', J$.G(341657, J$.G(341649, J$.G(341641, J$.R(341633, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.G(341689, J$.G(341681, J$.G(341673, J$.R(341665, 'this', this, false, false), 's'), 'options'), 'haInterval')) : J$._())) {
                                return J$.Rt(341825, J$.M(341817, J$.R(341697, 'self', self, false, false), 'emit', false)(J$.T(341705, 'error', 21, false), J$.F(341809, J$.R(341713, 'MongoError', MongoError, false, true), true)(J$.F(341801, J$.R(341721, 'f', f, false, true), false)(J$.T(341729, 'haInterval [%s] MS must be set to less than socketTimeout [%s] MS', 21, false), J$.G(341761, J$.G(341753, J$.G(341745, J$.R(341737, 'this', this, false, false), 's'), 'options'), 'haInterval'), J$.G(341793, J$.G(341785, J$.G(341777, J$.R(341769, 'this', this, false, false), 's'), 'options'), 'socketTimeout')))));
                            }
                            J$.F(341881, J$.R(341833, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(341841, 'this', this, false, false), J$.T(341849, 'topologyOpening', 21, false), J$.T(341873, { topologyId: J$.G(341865, J$.R(341857, 'this', this, false, false), 'id') }, 11, false));
                            J$.F(341913, J$.R(341889, 'connectServers', connectServers, false, true), false)(J$.R(341897, 'self', self, false, false), J$.R(341905, 'servers', servers, false, false));
                        } catch (J$e) {
                            J$.Ex(350641, J$e);
                        } finally {
                            if (J$.Fr(350649))
                                continue jalangiLabel48;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(342081, J$.G(341985, J$.R(341977, 'ReplSet', ReplSet, false, true), 'prototype'), 'auth', J$.T(342073, function (credentials, callback) {
                jalangiLabel49:
                    while (true) {
                        try {
                            J$.Fe(342041, arguments.callee, this, arguments);
                            arguments = J$.N(342049, 'arguments', arguments, true, false, false);
                            credentials = J$.N(342057, 'credentials', credentials, true, false, false);
                            callback = J$.N(342065, 'callback', callback, true, false, false);
                            if (J$.C(20320, J$.B(21138, '===', J$.U(21130, 'typeof', J$.R(341993, 'callback', callback, false, false)), J$.T(342001, 'function', 21, false))))
                                J$.F(342033, J$.R(342009, 'callback', callback, false, false), false)(J$.T(342017, null, 25, false), J$.T(342025, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(350657, J$e);
                        } finally {
                            if (J$.Fr(350665))
                                continue jalangiLabel49;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(342881, J$.G(342097, J$.R(342089, 'ReplSet', ReplSet, false, true), 'prototype'), 'destroy', J$.T(342873, function (options, callback) {
                jalangiLabel52:
                    while (true) {
                        try {
                            J$.Fe(342809, arguments.callee, this, arguments);
                            arguments = J$.N(342817, 'arguments', arguments, true, false, false);
                            options = J$.N(342825, 'options', options, true, false, false);
                            callback = J$.N(342833, 'callback', callback, true, false, false);
                            J$.N(342841, '_this2', _this2, false, false, false);
                            J$.N(342849, 'destroyCount', destroyCount, false, false, false);
                            J$.N(342857, 'serverDestroyed', serverDestroyed, false, false, false);
                            J$.N(342865, 'i', i, false, false, false);
                            var _this2 = J$.W(342113, '_this2', J$.R(342105, 'this', this, false, false), _this2, false, false);
                            if (J$.C(20328, J$.B(21154, '===', J$.U(21146, 'typeof', J$.R(342121, 'options', options, false, false)), J$.T(342129, 'function', 21, false)))) {
                                callback = J$.W(342145, 'callback', J$.R(342137, 'options', options, false, false), callback, false, false);
                                options = J$.W(342161, 'options', J$.T(342153, {}, 11, false), options, false, false);
                            }
                            options = J$.W(342185, 'options', J$.C(20336, J$.R(342169, 'options', options, false, false)) ? J$._() : J$.T(342177, {}, 11, false), options, false, false);
                            var destroyCount = J$.W(342233, 'destroyCount', J$.B(21162, '+', J$.G(342217, J$.G(342209, J$.G(342201, J$.R(342193, 'this', this, false, false), 's'), 'connectingServers'), 'length'), J$.T(342225, 1, 22, false)), destroyCount, false, false);
                            var serverDestroyed = J$.W(342441, 'serverDestroyed', J$.T(342433, function serverDestroyed() {
                                jalangiLabel50:
                                    while (true) {
                                        try {
                                            J$.Fe(342417, arguments.callee, this, arguments);
                                            arguments = J$.N(342425, 'arguments', arguments, true, false, false);
                                            J$.B(21186, '+', destroyCount = J$.W(342249, 'destroyCount', J$.B(21178, '-', J$.U(21170, '+', J$.R(342241, 'destroyCount', destroyCount, false, false)), 1), destroyCount, false, false), 1);
                                            if (J$.C(20344, J$.B(21194, '>', J$.R(342257, 'destroyCount', destroyCount, false, false), J$.T(342265, 0, 22, false)))) {
                                                return J$.Rt(342273, undefined);
                                            }
                                            J$.F(342329, J$.R(342281, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(342289, '_this2', _this2, false, false), J$.T(342297, 'topologyClosed', 21, false), J$.T(342321, { topologyId: J$.G(342313, J$.R(342305, '_this2', _this2, false, false), 'id') }, 11, false));
                                            J$.F(342361, J$.R(342337, 'stateTransition', stateTransition, false, true), false)(J$.R(342345, '_this2', _this2, false, false), J$.R(342353, 'DESTROYED', DESTROYED, false, true));
                                            if (J$.C(20352, J$.B(21210, '===', J$.U(21202, 'typeof', J$.R(342369, 'callback', callback, false, false)), J$.T(342377, 'function', 21, false)))) {
                                                J$.F(342409, J$.R(342385, 'callback', callback, false, false), false)(J$.T(342393, null, 25, false), J$.T(342401, null, 25, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(350673, J$e);
                                        } finally {
                                            if (J$.Fr(350681))
                                                continue jalangiLabel50;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), serverDestroyed, false, false);
                            if (J$.C(20360, J$.G(342457, J$.R(342449, 'this', this, false, false), 'haTimeoutId')))
                                J$.F(342489, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(342465, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(342465, 'clearTimeout', clearTimeout, true, true)), false)(J$.G(342481, J$.R(342473, 'this', this, false, false), 'haTimeoutId'));
                            for (var i = J$.W(342505, 'i', J$.T(342497, 0, 22, false), i, false, false); J$.C(20368, J$.B(21218, '<', J$.R(342513, 'i', i, false, false), J$.G(342537, J$.G(342529, J$.R(342521, 'this', this, false, false), 'intervalIds'), 'length'))); J$.B(21242, '-', i = J$.W(342553, 'i', J$.B(21234, '+', J$.U(21226, '+', J$.R(342545, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.M(342593, J$.G(342585, J$.G(342569, J$.R(342561, 'this', this, false, false), 'intervalIds'), J$.R(342577, 'i', i, false, false)), 'stop', false)();
                            }
                            J$.P(342617, J$.R(342601, 'this', this, false, false), 'intervalIds', J$.T(342609, [], 10, false));
                            if (J$.C(20376, J$.B(21250, '===', J$.R(342625, 'destroyCount', destroyCount, false, false), J$.T(342633, 0, 22, false)))) {
                                J$.F(342649, J$.R(342641, 'serverDestroyed', serverDestroyed, false, false), false)();
                                return J$.Rt(342657, undefined);
                            }
                            J$.M(342705, J$.G(342681, J$.G(342673, J$.R(342665, 'this', this, false, false), 's'), 'replicaSetState'), 'destroy', false)(J$.R(342689, 'options', options, false, false), J$.R(342697, 'serverDestroyed', serverDestroyed, false, false));
                            J$.M(342801, J$.G(342729, J$.G(342721, J$.R(342713, 'this', this, false, false), 's'), 'connectingServers'), 'forEach', false)(J$.T(342793, function (x) {
                                jalangiLabel51:
                                    while (true) {
                                        try {
                                            J$.Fe(342769, arguments.callee, this, arguments);
                                            arguments = J$.N(342777, 'arguments', arguments, true, false, false);
                                            x = J$.N(342785, 'x', x, true, false, false);
                                            J$.M(342761, J$.R(342737, 'x', x, false, false), 'destroy', false)(J$.R(342745, 'options', options, false, false), J$.R(342753, 'serverDestroyed', serverDestroyed, false, false));
                                        } catch (J$e) {
                                            J$.Ex(350689, J$e);
                                        } finally {
                                            if (J$.Fr(350697))
                                                continue jalangiLabel51;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(350705, J$e);
                        } finally {
                            if (J$.Fr(350713))
                                continue jalangiLabel52;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(343081, J$.G(342897, J$.R(342889, 'ReplSet', ReplSet, false, true), 'prototype'), 'unref', J$.T(343073, function () {
                jalangiLabel54:
                    while (true) {
                        try {
                            J$.Fe(343057, arguments.callee, this, arguments);
                            arguments = J$.N(343065, 'arguments', arguments, true, false, false);
                            J$.F(342929, J$.R(342905, 'stateTransition', stateTransition, false, true), false)(J$.R(342913, 'this', this, false, false), J$.R(342921, 'UNREFERENCED', UNREFERENCED, false, true));
                            J$.M(343017, J$.M(342961, J$.G(342953, J$.G(342945, J$.R(342937, 'this', this, false, false), 's'), 'replicaSetState'), 'allServers', false)(), 'forEach', false)(J$.T(343009, function (x) {
                                jalangiLabel53:
                                    while (true) {
                                        try {
                                            J$.Fe(342985, arguments.callee, this, arguments);
                                            arguments = J$.N(342993, 'arguments', arguments, true, false, false);
                                            x = J$.N(343001, 'x', x, true, false, false);
                                            J$.M(342977, J$.R(342969, 'x', x, false, false), 'unref', false)();
                                        } catch (J$e) {
                                            J$.Ex(350721, J$e);
                                        } finally {
                                            if (J$.Fr(350729))
                                                continue jalangiLabel53;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(343049, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(343025, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(343025, 'clearTimeout', clearTimeout, true, true)), false)(J$.G(343041, J$.R(343033, 'this', this, false, false), 'haTimeoutId'));
                        } catch (J$e) {
                            J$.Ex(350737, J$e);
                        } finally {
                            if (J$.Fr(350745))
                                continue jalangiLabel54;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(343385, J$.G(343097, J$.R(343089, 'ReplSet', ReplSet, false, true), 'prototype'), 'lastIsMaster', J$.T(343377, function () {
                jalangiLabel55:
                    while (true) {
                        try {
                            J$.Fe(343361, arguments.callee, this, arguments);
                            arguments = J$.N(343369, 'arguments', arguments, true, false, false);
                            if (J$.C(20400, J$.C(20392, J$.C(20384, J$.G(343129, J$.G(343121, J$.G(343113, J$.R(343105, 'this', this, false, false), 's'), 'options'), 'secondaryOnlyConnectionAllowed')) ? J$.U(21258, '!', J$.M(343161, J$.G(343153, J$.G(343145, J$.R(343137, 'this', this, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)()) : J$._()) ? J$.M(343193, J$.G(343185, J$.G(343177, J$.R(343169, 'this', this, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)() : J$._())) {
                                return J$.Rt(343257, J$.M(343249, J$.G(343241, J$.G(343225, J$.G(343217, J$.G(343209, J$.R(343201, 'this', this, false, false), 's'), 'replicaSetState'), 'secondaries'), J$.T(343233, 0, 22, false)), 'lastIsMaster', false)());
                            }
                            return J$.Rt(343353, J$.C(20408, J$.G(343289, J$.G(343281, J$.G(343273, J$.R(343265, 'this', this, false, false), 's'), 'replicaSetState'), 'primary')) ? J$.M(343329, J$.G(343321, J$.G(343313, J$.G(343305, J$.R(343297, 'this', this, false, false), 's'), 'replicaSetState'), 'primary'), 'lastIsMaster', false)() : J$.G(343345, J$.R(343337, 'this', this, false, false), 'ismaster'));
                        } catch (J$e) {
                            J$.Ex(350753, J$e);
                        } finally {
                            if (J$.Fr(350761))
                                continue jalangiLabel55;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(343641, J$.G(343401, J$.R(343393, 'ReplSet', ReplSet, false, true), 'prototype'), 'connections', J$.T(343633, function () {
                jalangiLabel56:
                    while (true) {
                        try {
                            J$.Fe(343593, arguments.callee, this, arguments);
                            arguments = J$.N(343601, 'arguments', arguments, true, false, false);
                            J$.N(343609, 'servers', servers, false, false, false);
                            J$.N(343617, 'connections', connections, false, false, false);
                            J$.N(343625, 'i', i, false, false, false);
                            var servers = J$.W(343441, 'servers', J$.M(343433, J$.G(343425, J$.G(343417, J$.R(343409, 'this', this, false, false), 's'), 'replicaSetState'), 'allServers', false)(), servers, false, false);
                            var connections = J$.W(343457, 'connections', J$.T(343449, [], 10, false), connections, false, false);
                            for (var i = J$.W(343473, 'i', J$.T(343465, 0, 22, false), i, false, false); J$.C(20416, J$.B(21266, '<', J$.R(343481, 'i', i, false, false), J$.G(343497, J$.R(343489, 'servers', servers, false, false), 'length'))); J$.B(21290, '-', i = J$.W(343513, 'i', J$.B(21282, '+', J$.U(21274, '+', J$.R(343505, 'i', i, false, false)), 1), i, false, false), 1)) {
                                connections = J$.W(343569, 'connections', J$.M(343561, J$.R(343521, 'connections', connections, false, false), 'concat', false)(J$.M(343553, J$.G(343545, J$.R(343529, 'servers', servers, false, false), J$.R(343537, 'i', i, false, false)), 'connections', false)()), connections, false, false);
                            }
                            return J$.Rt(343585, J$.R(343577, 'connections', connections, false, false));
                        } catch (J$e) {
                            J$.Ex(350769, J$e);
                        } finally {
                            if (J$.Fr(350777))
                                continue jalangiLabel56;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(344289, J$.G(343657, J$.R(343649, 'ReplSet', ReplSet, false, true), 'prototype'), 'isConnected', J$.T(344281, function (options) {
                jalangiLabel57:
                    while (true) {
                        try {
                            J$.Fe(344257, arguments.callee, this, arguments);
                            arguments = J$.N(344265, 'arguments', arguments, true, false, false);
                            options = J$.N(344273, 'options', options, true, false, false);
                            options = J$.W(343681, 'options', J$.C(20424, J$.R(343665, 'options', options, false, false)) ? J$._() : J$.T(343673, {}, 11, false), options, false, false);
                            if (J$.C(20440, J$.C(20432, J$.G(343697, J$.R(343689, 'options', options, false, false), 'readPreference')) ? J$.M(343737, J$.G(343713, J$.R(343705, 'options', options, false, false), 'readPreference'), 'equals', false)(J$.G(343729, J$.R(343721, 'ReadPreference', ReadPreference, false, true), 'secondary')) : J$._())) {
                                return J$.Rt(343777, J$.M(343769, J$.G(343761, J$.G(343753, J$.R(343745, 'this', this, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)());
                            }
                            if (J$.C(20456, J$.C(20448, J$.G(343793, J$.R(343785, 'options', options, false, false), 'readPreference')) ? J$.M(343833, J$.G(343809, J$.R(343801, 'options', options, false, false), 'readPreference'), 'equals', false)(J$.G(343825, J$.R(343817, 'ReadPreference', ReadPreference, false, true), 'primary')) : J$._())) {
                                return J$.Rt(343873, J$.M(343865, J$.G(343857, J$.G(343849, J$.R(343841, 'this', this, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)());
                            }
                            if (J$.C(20480, J$.C(20464, J$.G(343889, J$.R(343881, 'options', options, false, false), 'readPreference')) ? J$.M(343929, J$.G(343905, J$.R(343897, 'options', options, false, false), 'readPreference'), 'equals', false)(J$.G(343921, J$.R(343913, 'ReadPreference', ReadPreference, false, true), 'primaryPreferred')) : J$._())) {
                                return J$.Rt(344001, J$.C(20472, J$.M(343961, J$.G(343953, J$.G(343945, J$.R(343937, 'this', this, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)()) ? J$._() : J$.M(343993, J$.G(343985, J$.G(343977, J$.R(343969, 'this', this, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)());
                            }
                            if (J$.C(20504, J$.C(20488, J$.G(344017, J$.R(344009, 'options', options, false, false), 'readPreference')) ? J$.M(344057, J$.G(344033, J$.R(344025, 'options', options, false, false), 'readPreference'), 'equals', false)(J$.G(344049, J$.R(344041, 'ReadPreference', ReadPreference, false, true), 'secondaryPreferred')) : J$._())) {
                                return J$.Rt(344129, J$.C(20496, J$.M(344089, J$.G(344081, J$.G(344073, J$.R(344065, 'this', this, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)()) ? J$._() : J$.M(344121, J$.G(344113, J$.G(344105, J$.R(344097, 'this', this, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)());
                            }
                            if (J$.C(20520, J$.C(20512, J$.G(344161, J$.G(344153, J$.G(344145, J$.R(344137, 'this', this, false, false), 's'), 'options'), 'secondaryOnlyConnectionAllowed')) ? J$.M(344193, J$.G(344185, J$.G(344177, J$.R(344169, 'this', this, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)() : J$._())) {
                                return J$.Rt(344209, J$.T(344201, true, 23, false));
                            }
                            return J$.Rt(344249, J$.M(344241, J$.G(344233, J$.G(344225, J$.R(344217, 'this', this, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)());
                        } catch (J$e) {
                            J$.Ex(350785, J$e);
                        } finally {
                            if (J$.Fr(350793))
                                continue jalangiLabel57;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(344369, J$.G(344305, J$.R(344297, 'ReplSet', ReplSet, false, true), 'prototype'), 'isDestroyed', J$.T(344361, function () {
                jalangiLabel58:
                    while (true) {
                        try {
                            J$.Fe(344345, arguments.callee, this, arguments);
                            arguments = J$.N(344353, 'arguments', arguments, true, false, false);
                            return J$.Rt(344337, J$.B(21298, '===', J$.G(344321, J$.R(344313, 'this', this, false, false), 'state'), J$.R(344329, 'DESTROYED', DESTROYED, false, true)));
                        } catch (J$e) {
                            J$.Ex(350801, J$e);
                        } finally {
                            if (J$.Fr(350809))
                                continue jalangiLabel58;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var SERVER_SELECTION_TIMEOUT_MS = J$.W(344385, 'SERVER_SELECTION_TIMEOUT_MS', J$.T(344377, 10000, 22, false), SERVER_SELECTION_TIMEOUT_MS, false, true);
            var SERVER_SELECTION_INTERVAL_MS = J$.W(344401, 'SERVER_SELECTION_INTERVAL_MS', J$.T(344393, 1000, 22, false), SERVER_SELECTION_INTERVAL_MS, false, true);
            J$.P(345241, J$.G(344417, J$.R(344409, 'ReplSet', ReplSet, false, true), 'prototype'), 'selectServer', J$.T(345233, function (selector, options, callback) {
                jalangiLabel60:
                    while (true) {
                        try {
                            J$.Fe(345153, arguments.callee, this, arguments);
                            arguments = J$.N(345161, 'arguments', arguments, true, false, false);
                            selector = J$.N(345169, 'selector', selector, true, false, false);
                            options = J$.N(345177, 'options', options, true, false, false);
                            callback = J$.N(345185, 'callback', callback, true, false, false);
                            J$.N(345193, '_this3', _this3, false, false, false);
                            J$.N(345201, 'readPreference', readPreference, false, false, false);
                            J$.N(345209, 'lastError', lastError, false, false, false);
                            J$.N(345217, 'start', start, false, false, false);
                            J$.N(345225, '_selectServer', _selectServer, false, false, false);
                            var _this3 = J$.W(344433, '_this3', J$.R(344425, 'this', this, false, false), _this3, false, false);
                            if (J$.C(20536, J$.C(20528, J$.B(21314, '===', J$.U(21306, 'typeof', J$.R(344441, 'selector', selector, false, false)), J$.T(344449, 'function', 21, false))) ? J$.B(21330, '===', J$.U(21322, 'typeof', J$.R(344457, 'callback', callback, false, false)), J$.T(344465, 'undefined', 21, false)) : J$._()))
                                callback = J$.W(344481, 'callback', J$.R(344473, 'selector', selector, false, false), callback, false, false), selector = J$.W(344497, 'selector', J$.T(344489, undefined, 24, false), selector, false, false), options = J$.W(344513, 'options', J$.T(344505, {}, 11, false), options, false, false);
                            if (J$.C(20544, J$.B(21346, '===', J$.U(21338, 'typeof', J$.R(344521, 'options', options, false, false)), J$.T(344529, 'function', 21, false))))
                                callback = J$.W(344545, 'callback', J$.R(344537, 'options', options, false, false), callback, false, false), options = J$.W(344561, 'options', J$.R(344553, 'selector', selector, false, false), options, false, false);
                            options = J$.W(344585, 'options', J$.C(20552, J$.R(344569, 'options', options, false, false)) ? J$._() : J$.T(344577, {}, 11, false), options, false, false);
                            var readPreference;
                            if (J$.C(20568, J$.B(21354, 'instanceof', J$.R(344593, 'selector', selector, false, false), J$.R(344601, 'ReadPreference', ReadPreference, false, true)))) {
                                readPreference = J$.W(344617, 'readPreference', J$.R(344609, 'selector', selector, false, false), readPreference, false, false);
                            } else {
                                readPreference = J$.W(344657, 'readPreference', J$.C(20560, J$.G(344633, J$.R(344625, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(344649, J$.R(344641, 'ReadPreference', ReadPreference, false, true), 'primary'), readPreference, false, false);
                            }
                            var lastError;
                            var start = J$.W(344681, 'start', J$.M(344673, J$.I(typeof process === 'undefined' ? process = J$.R(344665, 'process', undefined, true, true) : process = J$.R(344665, 'process', process, true, true)), 'hrtime', false)(), start, false, false);
                            var _selectServer = J$.W(345129, '_selectServer', J$.T(345121, function _selectServer() {
                                jalangiLabel59:
                                    while (true) {
                                        try {
                                            J$.Fe(345097, arguments.callee, this, arguments);
                                            arguments = J$.N(345105, 'arguments', arguments, true, false, false);
                                            J$.N(345113, 'server', server, false, false, false);
                                            if (J$.C(20584, J$.B(21362, '>=', J$.F(344705, J$.R(344689, 'calculateDurationInMs', calculateDurationInMs, false, true), false)(J$.R(344697, 'start', start, false, false)), J$.R(344713, 'SERVER_SELECTION_TIMEOUT_MS', SERVER_SELECTION_TIMEOUT_MS, false, true)))) {
                                                if (J$.C(20576, J$.B(21370, '!=', J$.R(344721, 'lastError', lastError, false, false), J$.T(344729, null, 25, false)))) {
                                                    J$.F(344761, J$.R(344737, 'callback', callback, false, false), false)(J$.R(344745, 'lastError', lastError, false, false), J$.T(344753, null, 25, false));
                                                } else {
                                                    J$.F(344801, J$.R(344769, 'callback', callback, false, false), false)(J$.F(344793, J$.R(344777, 'MongoError', MongoError, false, true), true)(J$.T(344785, 'Server selection timed out', 21, false)));
                                                }
                                                return J$.Rt(344809, undefined);
                                            }
                                            var server = J$.W(344857, 'server', J$.M(344849, J$.G(344833, J$.G(344825, J$.R(344817, '_this3', _this3, false, false), 's'), 'replicaSetState'), 'pickServer', false)(J$.R(344841, 'readPreference', readPreference, false, false)), server, false, false);
                                            if (J$.C(20592, J$.B(21378, '==', J$.R(344865, 'server', server, false, false), J$.T(344873, null, 25, false)))) {
                                                J$.F(344905, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(344881, 'setTimeout', undefined, true, true) : setTimeout = J$.R(344881, 'setTimeout', setTimeout, true, true)), false)(J$.R(344889, '_selectServer', _selectServer, false, false), J$.R(344897, 'SERVER_SELECTION_INTERVAL_MS', SERVER_SELECTION_INTERVAL_MS, false, true));
                                                return J$.Rt(344913, undefined);
                                            }
                                            if (J$.C(20600, J$.U(21394, '!', J$.B(21386, 'instanceof', J$.R(344921, 'server', server, false, false), J$.R(344929, 'Server', Server, false, true))))) {
                                                lastError = J$.W(344945, 'lastError', J$.R(344937, 'server', server, false, false), lastError, false, false);
                                                J$.F(344977, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(344953, 'setTimeout', undefined, true, true) : setTimeout = J$.R(344953, 'setTimeout', setTimeout, true, true)), false)(J$.R(344961, '_selectServer', _selectServer, false, false), J$.R(344969, 'SERVER_SELECTION_INTERVAL_MS', SERVER_SELECTION_INTERVAL_MS, false, true));
                                                return J$.Rt(344985, undefined);
                                            }
                                            if (J$.C(20608, J$.G(345009, J$.G(345001, J$.R(344993, '_this3', _this3, false, false), 's'), 'debug')))
                                                J$.M(345057, J$.R(345017, '_this3', _this3, false, false), 'emit', false)(J$.T(345025, 'pickedServer', 21, false), J$.G(345041, J$.R(345033, 'options', options, false, false), 'readPreference'), J$.R(345049, 'server', server, false, false));
                                            J$.F(345089, J$.R(345065, 'callback', callback, false, false), false)(J$.T(345073, null, 25, false), J$.R(345081, 'server', server, false, false));
                                        } catch (J$e) {
                                            J$.Ex(350817, J$e);
                                        } finally {
                                            if (J$.Fr(350825))
                                                continue jalangiLabel59;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _selectServer, false, false);
                            J$.F(345145, J$.R(345137, '_selectServer', _selectServer, false, false), false)();
                        } catch (J$e) {
                            J$.Ex(350833, J$e);
                        } finally {
                            if (J$.Fr(350841))
                                continue jalangiLabel60;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(345329, J$.G(345257, J$.R(345249, 'ReplSet', ReplSet, false, true), 'prototype'), 'getServers', J$.T(345321, function () {
                jalangiLabel61:
                    while (true) {
                        try {
                            J$.Fe(345305, arguments.callee, this, arguments);
                            arguments = J$.N(345313, 'arguments', arguments, true, false, false);
                            return J$.Rt(345297, J$.M(345289, J$.G(345281, J$.G(345273, J$.R(345265, 'this', this, false, false), 's'), 'replicaSetState'), 'allServers', false)());
                        } catch (J$e) {
                            J$.Ex(350849, J$e);
                        } finally {
                            if (J$.Fr(350857))
                                continue jalangiLabel61;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(346793, J$.G(346657, J$.R(346649, 'ReplSet', ReplSet, false, true), 'prototype'), 'insert', J$.T(346785, function (ns, ops, options, callback) {
                jalangiLabel64:
                    while (true) {
                        try {
                            J$.Fe(346737, arguments.callee, this, arguments);
                            arguments = J$.N(346745, 'arguments', arguments, true, false, false);
                            ns = J$.N(346753, 'ns', ns, true, false, false);
                            ops = J$.N(346761, 'ops', ops, true, false, false);
                            options = J$.N(346769, 'options', options, true, false, false);
                            callback = J$.N(346777, 'callback', callback, true, false, false);
                            J$.F(346729, J$.R(346665, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(346705, {
                                self: J$.R(346673, 'this', this, false, false),
                                op: J$.T(346681, 'insert', 21, false),
                                ns: J$.R(346689, 'ns', ns, false, false),
                                ops: J$.R(346697, 'ops', ops, false, false)
                            }, 11, false), J$.R(346713, 'options', options, false, false), J$.R(346721, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(350897, J$e);
                        } finally {
                            if (J$.Fr(350905))
                                continue jalangiLabel64;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(346945, J$.G(346809, J$.R(346801, 'ReplSet', ReplSet, false, true), 'prototype'), 'update', J$.T(346937, function (ns, ops, options, callback) {
                jalangiLabel65:
                    while (true) {
                        try {
                            J$.Fe(346889, arguments.callee, this, arguments);
                            arguments = J$.N(346897, 'arguments', arguments, true, false, false);
                            ns = J$.N(346905, 'ns', ns, true, false, false);
                            ops = J$.N(346913, 'ops', ops, true, false, false);
                            options = J$.N(346921, 'options', options, true, false, false);
                            callback = J$.N(346929, 'callback', callback, true, false, false);
                            J$.F(346881, J$.R(346817, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(346857, {
                                self: J$.R(346825, 'this', this, false, false),
                                op: J$.T(346833, 'update', 21, false),
                                ns: J$.R(346841, 'ns', ns, false, false),
                                ops: J$.R(346849, 'ops', ops, false, false)
                            }, 11, false), J$.R(346865, 'options', options, false, false), J$.R(346873, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(350913, J$e);
                        } finally {
                            if (J$.Fr(350921))
                                continue jalangiLabel65;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(347097, J$.G(346961, J$.R(346953, 'ReplSet', ReplSet, false, true), 'prototype'), 'remove', J$.T(347089, function (ns, ops, options, callback) {
                jalangiLabel66:
                    while (true) {
                        try {
                            J$.Fe(347041, arguments.callee, this, arguments);
                            arguments = J$.N(347049, 'arguments', arguments, true, false, false);
                            ns = J$.N(347057, 'ns', ns, true, false, false);
                            ops = J$.N(347065, 'ops', ops, true, false, false);
                            options = J$.N(347073, 'options', options, true, false, false);
                            callback = J$.N(347081, 'callback', callback, true, false, false);
                            J$.F(347033, J$.R(346969, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(347009, {
                                self: J$.R(346977, 'this', this, false, false),
                                op: J$.T(346985, 'remove', 21, false),
                                ns: J$.R(346993, 'ns', ns, false, false),
                                ops: J$.R(347001, 'ops', ops, false, false)
                            }, 11, false), J$.R(347017, 'options', options, false, false), J$.R(347025, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(350929, J$e);
                        } finally {
                            if (J$.Fr(350937))
                                continue jalangiLabel66;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var RETRYABLE_WRITE_OPERATIONS = J$.W(347145, 'RETRYABLE_WRITE_OPERATIONS', J$.T(347137, [
                J$.T(347105, 'findAndModify', 21, false),
                J$.T(347113, 'insert', 21, false),
                J$.T(347121, 'update', 21, false),
                J$.T(347129, 'delete', 21, false)
            ], 10, false), RETRYABLE_WRITE_OPERATIONS, false, true);
            J$.P(349121, J$.G(347273, J$.R(347265, 'ReplSet', ReplSet, false, true), 'prototype'), 'command', J$.T(349113, function (ns, cmd, options, callback) {
                jalangiLabel70:
                    while (true) {
                        try {
                            J$.Fe(349017, arguments.callee, this, arguments);
                            arguments = J$.N(349025, 'arguments', arguments, true, false, false);
                            ns = J$.N(349033, 'ns', ns, true, false, false);
                            cmd = J$.N(349041, 'cmd', cmd, true, false, false);
                            options = J$.N(349049, 'options', options, true, false, false);
                            callback = J$.N(349057, 'callback', callback, true, false, false);
                            J$.N(349065, '_this4', _this4, false, false, false);
                            J$.N(349073, 'self', self, false, false, false);
                            J$.N(349081, 'readPreference', readPreference, false, false, false);
                            J$.N(349089, 'server', server, false, false, false);
                            J$.N(349097, 'willRetryWrite', willRetryWrite, false, false, false);
                            J$.N(349105, 'cb', cb, false, false, false);
                            var _this4 = J$.W(347289, '_this4', J$.R(347281, 'this', this, false, false), _this4, false, false);
                            if (J$.C(20752, J$.B(21498, '===', J$.U(21490, 'typeof', J$.R(347297, 'options', options, false, false)), J$.T(347305, 'function', 21, false)))) {
                                callback = J$.W(347321, 'callback', J$.R(347313, 'options', options, false, false), callback, false, false), options = J$.W(347337, 'options', J$.T(347329, {}, 11, false), options, false, false), options = J$.W(347361, 'options', J$.C(20744, J$.R(347345, 'options', options, false, false)) ? J$._() : J$.T(347353, {}, 11, false), options, false, false);
                            }
                            if (J$.C(20760, J$.B(21506, '===', J$.G(347377, J$.R(347369, 'this', this, false, false), 'state'), J$.R(347385, 'DESTROYED', DESTROYED, false, true))))
                                return J$.Rt(347449, J$.F(347441, J$.R(347393, 'callback', callback, false, false), false)(J$.F(347433, J$.R(347401, 'MongoError', MongoError, false, true), true)(J$.F(347425, J$.R(347409, 'f', f, false, true), false)(J$.T(347417, 'topology was destroyed', 21, false)))));
                            var self = J$.W(347465, 'self', J$.R(347457, 'this', this, false, false), self, false, false);
                            var readPreference = J$.W(347521, 'readPreference', J$.C(20768, J$.G(347481, J$.R(347473, 'options', options, false, false), 'readPreference')) ? J$.G(347497, J$.R(347489, 'options', options, false, false), 'readPreference') : J$.G(347513, J$.R(347505, 'ReadPreference', ReadPreference, false, true), 'primary'), readPreference, false, false);
                            if (J$.C(20848, J$.C(20784, J$.C(20776, J$.B(21514, '===', J$.G(347537, J$.R(347529, 'readPreference', readPreference, false, false), 'preference'), J$.T(347545, 'primary', 21, false))) ? J$.U(21522, '!', J$.M(347577, J$.G(347569, J$.G(347561, J$.R(347553, 'this', this, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)()) : J$._()) ? J$.B(21530, '!=', J$.G(347601, J$.G(347593, J$.R(347585, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(347609, null, 25, false)) : J$._())) {
                                return J$.Rt(347689, J$.M(347681, J$.G(347633, J$.G(347625, J$.R(347617, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(347641, 'command', 21, false), J$.R(347649, 'ns', ns, false, false), J$.R(347657, 'cmd', cmd, false, false), J$.R(347665, 'options', options, false, false), J$.R(347673, 'callback', callback, false, false)));
                            } else if (J$.C(20840, J$.C(20800, J$.C(20792, J$.B(21538, '===', J$.G(347705, J$.R(347697, 'readPreference', readPreference, false, false), 'preference'), J$.T(347713, 'secondary', 21, false))) ? J$.U(21546, '!', J$.M(347745, J$.G(347737, J$.G(347729, J$.R(347721, 'this', this, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)()) : J$._()) ? J$.B(21554, '!=', J$.G(347769, J$.G(347761, J$.R(347753, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(347777, null, 25, false)) : J$._())) {
                                return J$.Rt(347857, J$.M(347849, J$.G(347801, J$.G(347793, J$.R(347785, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(347809, 'command', 21, false), J$.R(347817, 'ns', ns, false, false), J$.R(347825, 'cmd', cmd, false, false), J$.R(347833, 'options', options, false, false), J$.R(347841, 'callback', callback, false, false)));
                            } else if (J$.C(20832, J$.C(20824, J$.C(20816, J$.C(20808, J$.B(21562, '!==', J$.G(347873, J$.R(347865, 'readPreference', readPreference, false, false), 'preference'), J$.T(347881, 'primary', 21, false))) ? J$.U(21570, '!', J$.M(347913, J$.G(347905, J$.G(347897, J$.R(347889, 'this', this, false, false), 's'), 'replicaSetState'), 'hasSecondary', false)()) : J$._()) ? J$.U(21578, '!', J$.M(347945, J$.G(347937, J$.G(347929, J$.R(347921, 'this', this, false, false), 's'), 'replicaSetState'), 'hasPrimary', false)()) : J$._()) ? J$.B(21586, '!=', J$.G(347969, J$.G(347961, J$.R(347953, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(347977, null, 25, false)) : J$._())) {
                                return J$.Rt(348057, J$.M(348049, J$.G(348001, J$.G(347993, J$.R(347985, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(348009, 'command', 21, false), J$.R(348017, 'ns', ns, false, false), J$.R(348025, 'cmd', cmd, false, false), J$.R(348033, 'options', options, false, false), J$.R(348041, 'callback', callback, false, false)));
                            }
                            var server = J$.W(348105, 'server', J$.M(348097, J$.G(348081, J$.G(348073, J$.R(348065, 'this', this, false, false), 's'), 'replicaSetState'), 'pickServer', false)(J$.R(348089, 'readPreference', readPreference, false, false)), server, false, false);
                            if (J$.C(20856, J$.U(21602, '!', J$.B(21594, 'instanceof', J$.R(348113, 'server', server, false, false), J$.R(348121, 'Server', Server, false, true)))))
                                return J$.Rt(348153, J$.F(348145, J$.R(348129, 'callback', callback, false, false), false)(J$.R(348137, 'server', server, false, false)));
                            if (J$.C(20864, J$.G(348177, J$.G(348169, J$.R(348161, 'self', self, false, false), 's'), 'debug')))
                                J$.M(348225, J$.R(348185, 'self', self, false, false), 'emit', false)(J$.T(348193, 'pickedServer', 21, false), J$.G(348209, J$.R(348201, 'ReadPreference', ReadPreference, false, true), 'primary'), J$.R(348217, 'server', server, false, false));
                            if (J$.C(20872, J$.B(21610, '==', J$.R(348233, 'server', server, false, false), J$.T(348241, null, 25, false)))) {
                                return J$.Rt(348313, J$.F(348305, J$.R(348249, 'callback', callback, false, false), false)(J$.F(348297, J$.R(348257, 'MongoError', MongoError, false, true), true)(J$.F(348289, J$.R(348265, 'f', f, false, true), false)(J$.T(348273, 'no server found that matches the provided readPreference %s', 21, false), J$.R(348281, 'readPreference', readPreference, false, false)))));
                            }
                            var willRetryWrite = J$.W(348441, 'willRetryWrite', J$.C(20912, J$.C(20904, J$.C(20896, J$.C(20888, J$.C(20880, J$.U(21618, '!', J$.G(348329, J$.R(348321, 'options', options, false, false), 'retrying'))) ? J$.U(21634, '!', J$.U(21626, '!', J$.G(348345, J$.R(348337, 'options', options, false, false), 'retryWrites'))) : J$._()) ? J$.G(348361, J$.R(348353, 'options', options, false, false), 'session') : J$._()) ? J$.F(348385, J$.R(348369, 'isRetryableWritesSupported', isRetryableWritesSupported, false, true), false)(J$.R(348377, 'self', self, false, false)) : J$._()) ? J$.U(21642, '!', J$.M(348409, J$.G(348401, J$.R(348393, 'options', options, false, false), 'session'), 'inTransaction', false)()) : J$._()) ? J$.F(348433, J$.R(348417, 'isWriteCommand', isWriteCommand, false, true), false)(J$.R(348425, 'cmd', cmd, false, false)) : J$._(), willRetryWrite, false, false);
                            var cb = J$.W(348905, 'cb', J$.T(348897, function cb(err, result) {
                                jalangiLabel69:
                                    while (true) {
                                        try {
                                            J$.Fe(348857, arguments.callee, this, arguments);
                                            arguments = J$.N(348865, 'arguments', arguments, true, false, false);
                                            err = J$.N(348873, 'err', err, true, false, false);
                                            result = J$.N(348881, 'result', result, true, false, false);
                                            J$.N(348889, 'newOptions', newOptions, false, false, false);
                                            if (J$.C(20920, J$.U(21650, '!', J$.R(348449, 'err', err, false, false))))
                                                return J$.Rt(348489, J$.F(348481, J$.R(348457, 'callback', callback, false, false), false)(J$.T(348465, null, 25, false), J$.R(348473, 'result', result, false, false)));
                                            if (J$.C(20928, J$.U(21658, '!', J$.F(348513, J$.R(348497, 'isRetryableError', isRetryableError, false, true), false)(J$.R(348505, 'err', err, false, false))))) {
                                                return J$.Rt(348545, J$.F(348537, J$.R(348521, 'callback', callback, false, false), false)(J$.R(348529, 'err', err, false, false)));
                                            }
                                            if (J$.C(20936, J$.R(348553, 'willRetryWrite', willRetryWrite, false, false))) {
                                                var newOptions = J$.W(348609, 'newOptions', J$.M(348601, J$.I(typeof Object === 'undefined' ? Object = J$.R(348561, 'Object', undefined, true, true) : Object = J$.R(348561, 'Object', Object, true, true)), 'assign', false)(J$.T(348569, {}, 11, false), J$.R(348577, 'options', options, false, false), J$.T(348593, { retrying: J$.T(348585, true, 23, false) }, 11, false)), newOptions, false, false);
                                                return J$.Rt(348665, J$.M(348657, J$.R(348617, '_this4', _this4, false, false), 'command', false)(J$.R(348625, 'ns', ns, false, false), J$.R(348633, 'cmd', cmd, false, false), J$.R(348641, 'newOptions', newOptions, false, false), J$.R(348649, 'callback', callback, false, false)));
                                            }
                                            if (J$.C(20944, J$.G(348697, J$.G(348689, J$.G(348681, J$.R(348673, '_this4', _this4, false, false), 's'), 'replicaSetState'), 'primary'))) {
                                                J$.M(348737, J$.G(348729, J$.G(348721, J$.G(348713, J$.R(348705, '_this4', _this4, false, false), 's'), 'replicaSetState'), 'primary'), 'destroy', false)();
                                                J$.M(348817, J$.G(348761, J$.G(348753, J$.R(348745, '_this4', _this4, false, false), 's'), 'replicaSetState'), 'remove', false)(J$.G(348793, J$.G(348785, J$.G(348777, J$.R(348769, '_this4', _this4, false, false), 's'), 'replicaSetState'), 'primary'), J$.T(348809, { force: J$.T(348801, true, 23, false) }, 11, false));
                                            }
                                            return J$.Rt(348849, J$.F(348841, J$.R(348825, 'callback', callback, false, false), false)(J$.R(348833, 'err', err, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(350977, J$e);
                                        } finally {
                                            if (J$.Fr(350985))
                                                continue jalangiLabel69;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), cb, false, false);
                            if (J$.C(20952, J$.R(348913, 'willRetryWrite', willRetryWrite, false, false))) {
                                J$.M(348937, J$.G(348929, J$.R(348921, 'options', options, false, false), 'session'), 'incrementTransactionNumber', false)();
                                J$.P(348961, J$.R(348945, 'options', options, false, false), 'willRetryWrite', J$.R(348953, 'willRetryWrite', willRetryWrite, false, false));
                            }
                            J$.M(349009, J$.R(348969, 'server', server, false, false), 'command', false)(J$.R(348977, 'ns', ns, false, false), J$.R(348985, 'cmd', cmd, false, false), J$.R(348993, 'options', options, false, false), J$.R(349001, 'cb', cb, false, false));
                        } catch (J$e) {
                            J$.Ex(350993, J$e);
                        } finally {
                            if (J$.Fr(351001))
                                continue jalangiLabel70;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(349369, J$.G(349137, J$.R(349129, 'ReplSet', ReplSet, false, true), 'prototype'), 'cursor', J$.T(349361, function (ns, cmd, options) {
                jalangiLabel71:
                    while (true) {
                        try {
                            J$.Fe(349305, arguments.callee, this, arguments);
                            arguments = J$.N(349313, 'arguments', arguments, true, false, false);
                            ns = J$.N(349321, 'ns', ns, true, false, false);
                            cmd = J$.N(349329, 'cmd', cmd, true, false, false);
                            options = J$.N(349337, 'options', options, true, false, false);
                            J$.N(349345, 'topology', topology, false, false, false);
                            J$.N(349353, 'FinalCursor', FinalCursor, false, false, false);
                            options = J$.W(349161, 'options', J$.C(20960, J$.R(349145, 'options', options, false, false)) ? J$._() : J$.T(349153, {}, 11, false), options, false, false);
                            var topology = J$.W(349193, 'topology', J$.C(20968, J$.G(349177, J$.R(349169, 'options', options, false, false), 'topology')) ? J$._() : J$.R(349185, 'this', this, false, false), topology, false, false);
                            var FinalCursor = J$.W(349241, 'FinalCursor', J$.C(20976, J$.G(349209, J$.R(349201, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.G(349233, J$.G(349225, J$.R(349217, 'this', this, false, false), 's'), 'Cursor'), FinalCursor, false, false);
                            return J$.Rt(349297, J$.F(349289, J$.R(349249, 'FinalCursor', FinalCursor, false, false), true)(J$.R(349257, 'topology', topology, false, false), J$.R(349265, 'ns', ns, false, false), J$.R(349273, 'cmd', cmd, false, false), J$.R(349281, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(351009, J$e);
                        } finally {
                            if (J$.Fr(351017))
                                continue jalangiLabel71;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(349393, J$.I(typeof module === 'undefined' ? module = J$.R(349377, 'module', undefined, true, true) : module = J$.R(349377, 'module', module, true, true)), 'exports', J$.R(349385, 'ReplSet', ReplSet, false, true));
        } catch (J$e) {
            J$.Ex(351025, J$e);
        } finally {
            if (J$.Sr(351033))
                continue jalangiLabel72;
            else
                break jalangiLabel72;
        }
    }
// JALANGI DO NOT INSTRUMENT

