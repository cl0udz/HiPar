J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(428273, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/wireprotocol/shared.js');
            function applyCommonQueryOptions(queryOptions, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(427633, arguments.callee, this, arguments);
                            arguments = J$.N(427641, 'arguments', arguments, true, false, false);
                            queryOptions = J$.N(427649, 'queryOptions', queryOptions, true, false, false);
                            options = J$.N(427657, 'options', options, true, false, false);
                            J$.M(427449, J$.I(typeof Object === 'undefined' ? Object = J$.R(427137, 'Object', undefined, true, true) : Object = J$.R(427137, 'Object', Object, true, true)), 'assign', false)(J$.R(427145, 'queryOptions', queryOptions, false, false), J$.T(427441, {
                                raw: J$.C(26864, J$.B(26618, '===', J$.U(26610, 'typeof', J$.G(427161, J$.R(427153, 'options', options, false, false), 'raw')), J$.T(427169, 'boolean', 21, false))) ? J$.G(427185, J$.R(427177, 'options', options, false, false), 'raw') : J$.T(427193, false, 23, false),
                                promoteLongs: J$.C(26872, J$.B(26634, '===', J$.U(26626, 'typeof', J$.G(427209, J$.R(427201, 'options', options, false, false), 'promoteLongs')), J$.T(427217, 'boolean', 21, false))) ? J$.G(427233, J$.R(427225, 'options', options, false, false), 'promoteLongs') : J$.T(427241, true, 23, false),
                                promoteValues: J$.C(26880, J$.B(26650, '===', J$.U(26642, 'typeof', J$.G(427257, J$.R(427249, 'options', options, false, false), 'promoteValues')), J$.T(427265, 'boolean', 21, false))) ? J$.G(427281, J$.R(427273, 'options', options, false, false), 'promoteValues') : J$.T(427289, true, 23, false),
                                promoteBuffers: J$.C(26888, J$.B(26666, '===', J$.U(26658, 'typeof', J$.G(427305, J$.R(427297, 'options', options, false, false), 'promoteBuffers')), J$.T(427313, 'boolean', 21, false))) ? J$.G(427329, J$.R(427321, 'options', options, false, false), 'promoteBuffers') : J$.T(427337, false, 23, false),
                                monitoring: J$.C(26896, J$.B(26682, '===', J$.U(26674, 'typeof', J$.G(427353, J$.R(427345, 'options', options, false, false), 'monitoring')), J$.T(427361, 'boolean', 21, false))) ? J$.G(427377, J$.R(427369, 'options', options, false, false), 'monitoring') : J$.T(427385, false, 23, false),
                                fullResult: J$.C(26904, J$.B(26698, '===', J$.U(26690, 'typeof', J$.G(427401, J$.R(427393, 'options', options, false, false), 'fullResult')), J$.T(427409, 'boolean', 21, false))) ? J$.G(427425, J$.R(427417, 'options', options, false, false), 'fullResult') : J$.T(427433, false, 23, false)
                            }, 11, false));
                            if (J$.C(26912, J$.B(26714, '===', J$.U(26706, 'typeof', J$.G(427465, J$.R(427457, 'options', options, false, false), 'socketTimeout')), J$.T(427473, 'number', 21, false)))) {
                                J$.P(427505, J$.R(427481, 'queryOptions', queryOptions, false, false), 'socketTimeout', J$.G(427497, J$.R(427489, 'options', options, false, false), 'socketTimeout'));
                            }
                            if (J$.C(26920, J$.G(427521, J$.R(427513, 'options', options, false, false), 'session'))) {
                                J$.P(427553, J$.R(427529, 'queryOptions', queryOptions, false, false), 'session', J$.G(427545, J$.R(427537, 'options', options, false, false), 'session'));
                            }
                            if (J$.C(26928, J$.B(26730, '===', J$.U(26722, 'typeof', J$.G(427569, J$.R(427561, 'options', options, false, false), 'documentsReturnedIn')), J$.T(427577, 'string', 21, false)))) {
                                J$.P(427609, J$.R(427585, 'queryOptions', queryOptions, false, false), 'documentsReturnedIn', J$.G(427601, J$.R(427593, 'options', options, false, false), 'documentsReturnedIn'));
                            }
                            return J$.Rt(427625, J$.R(427617, 'queryOptions', queryOptions, false, false));
                        } catch (J$e) {
                            J$.Ex(428449, J$e);
                        } finally {
                            if (J$.Fr(428457))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isSharded(topologyOrServer) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(427985, arguments.callee, this, arguments);
                            arguments = J$.N(427993, 'arguments', arguments, true, false, false);
                            topologyOrServer = J$.N(428001, 'topologyOrServer', topologyOrServer, true, false, false);
                            J$.N(428009, 'servers', servers, false, false, false);
                            if (J$.C(26936, J$.B(26738, '===', J$.G(427673, J$.R(427665, 'topologyOrServer', topologyOrServer, false, false), 'type'), J$.T(427681, 'mongos', 21, false))))
                                return J$.Rt(427697, J$.T(427689, true, 23, false));
                            if (J$.C(26952, J$.C(26944, J$.G(427713, J$.R(427705, 'topologyOrServer', topologyOrServer, false, false), 'description')) ? J$.B(26746, '===', J$.G(427737, J$.G(427729, J$.R(427721, 'topologyOrServer', topologyOrServer, false, false), 'description'), 'type'), J$.G(427753, J$.R(427745, 'ServerType', ServerType, false, true), 'Mongos')) : J$._())) {
                                return J$.Rt(427769, J$.T(427761, true, 23, false));
                            }
                            if (J$.C(26968, J$.C(26960, J$.G(427785, J$.R(427777, 'topologyOrServer', topologyOrServer, false, false), 'description')) ? J$.B(26754, 'instanceof', J$.G(427801, J$.R(427793, 'topologyOrServer', topologyOrServer, false, false), 'description'), J$.R(427809, 'TopologyDescription', TopologyDescription, false, true)) : J$._())) {
                                var servers = J$.W(427865, 'servers', J$.M(427857, J$.I(typeof Array === 'undefined' ? Array = J$.R(427817, 'Array', undefined, true, true) : Array = J$.R(427817, 'Array', Array, true, true)), 'from', false)(J$.M(427849, J$.G(427841, J$.G(427833, J$.R(427825, 'topologyOrServer', topologyOrServer, false, false), 'description'), 'servers'), 'values', false)()), servers, false, false);
                                return J$.Rt(427961, J$.M(427953, J$.R(427873, 'servers', servers, false, false), 'some', false)(J$.T(427945, function (server) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(427921, arguments.callee, this, arguments);
                                                arguments = J$.N(427929, 'arguments', arguments, true, false, false);
                                                server = J$.N(427937, 'server', server, true, false, false);
                                                return J$.Rt(427913, J$.B(26762, '===', J$.G(427889, J$.R(427881, 'server', server, false, false), 'type'), J$.G(427905, J$.R(427897, 'ServerType', ServerType, false, true), 'Mongos')));
                                            } catch (J$e) {
                                                J$.Ex(428465, J$e);
                                            } finally {
                                                if (J$.Fr(428473))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)));
                            }
                            return J$.Rt(427977, J$.T(427969, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(428481, J$e);
                        } finally {
                            if (J$.Fr(428489))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function databaseNamespace(ns) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(428065, arguments.callee, this, arguments);
                            arguments = J$.N(428073, 'arguments', arguments, true, false, false);
                            ns = J$.N(428081, 'ns', ns, true, false, false);
                            return J$.Rt(428057, J$.G(428049, J$.M(428033, J$.R(428017, 'ns', ns, false, false), 'split', false)(J$.T(428025, '.', 21, false)), J$.T(428041, 0, 22, false)));
                        } catch (J$e) {
                            J$.Ex(428497, J$e);
                        } finally {
                            if (J$.Fr(428505))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function collectionNamespace(ns) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(428153, arguments.callee, this, arguments);
                            arguments = J$.N(428161, 'arguments', arguments, true, false, false);
                            ns = J$.N(428169, 'ns', ns, true, false, false);
                            return J$.Rt(428145, J$.M(428137, J$.M(428121, J$.M(428105, J$.R(428089, 'ns', ns, false, false), 'split', false)(J$.T(428097, '.', 21, false)), 'slice', false)(J$.T(428113, 1, 22, false)), 'join', false)(J$.T(428129, '.', 21, false)));
                        } catch (J$e) {
                            J$.Ex(428513, J$e);
                        } finally {
                            if (J$.Fr(428521))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(428281, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(428289, 'MongoError', MongoError, false, false, false);
            J$.N(428297, 'ServerType', ServerType, false, false, false);
            J$.N(428305, 'TopologyDescription', TopologyDescription, false, false, false);
            J$.N(428313, 'MESSAGE_HEADER_SIZE', MESSAGE_HEADER_SIZE, false, false, false);
            J$.N(428321, 'COMPRESSION_DETAILS_SIZE', COMPRESSION_DETAILS_SIZE, false, false, false);
            J$.N(428329, 'opcodes', opcodes, false, false, false);
            J$.N(428337, 'getReadPreference', getReadPreference, false, false, false);
            J$.N(428345, 'parseHeader', parseHeader, false, false, false);
            applyCommonQueryOptions = J$.N(428361, 'applyCommonQueryOptions', J$.T(428353, applyCommonQueryOptions, 12, false), true, false, false);
            isSharded = J$.N(428377, 'isSharded', J$.T(428369, isSharded, 12, false), true, false, false);
            databaseNamespace = J$.N(428393, 'databaseNamespace', J$.T(428385, databaseNamespace, 12, false), true, false, false);
            collectionNamespace = J$.N(428409, 'collectionNamespace', J$.T(428401, collectionNamespace, 12, false), true, false, false);
            J$.T(426457, 'use strict', 21, false);
            var ReadPreference = J$.W(426489, 'ReadPreference', J$.F(426481, J$.I(typeof require === 'undefined' ? require = J$.R(426465, 'require', undefined, true, true) : require = J$.R(426465, 'require', require, true, true)), false)(J$.T(426473, '../topologies/read_preference', 21, false)), ReadPreference, false, true);
            var MongoError = J$.W(426529, 'MongoError', J$.G(426521, J$.F(426513, J$.I(typeof require === 'undefined' ? require = J$.R(426497, 'require', undefined, true, true) : require = J$.R(426497, 'require', require, true, true)), false)(J$.T(426505, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var ServerType = J$.W(426569, 'ServerType', J$.G(426561, J$.F(426553, J$.I(typeof require === 'undefined' ? require = J$.R(426537, 'require', undefined, true, true) : require = J$.R(426537, 'require', require, true, true)), false)(J$.T(426545, '../sdam/server_description', 21, false)), 'ServerType'), ServerType, false, true);
            var TopologyDescription = J$.W(426609, 'TopologyDescription', J$.G(426601, J$.F(426593, J$.I(typeof require === 'undefined' ? require = J$.R(426577, 'require', undefined, true, true) : require = J$.R(426577, 'require', require, true, true)), false)(J$.T(426585, '../sdam/topology_description', 21, false)), 'TopologyDescription'), TopologyDescription, false, true);
            var MESSAGE_HEADER_SIZE = J$.W(426625, 'MESSAGE_HEADER_SIZE', J$.T(426617, 16, 22, false), MESSAGE_HEADER_SIZE, false, true);
            var COMPRESSION_DETAILS_SIZE = J$.W(426641, 'COMPRESSION_DETAILS_SIZE', J$.T(426633, 9, 22, false), COMPRESSION_DETAILS_SIZE, false, true);
            var opcodes = J$.W(426729, 'opcodes', J$.T(426721, {
                OP_REPLY: J$.T(426649, 1, 22, false),
                OP_UPDATE: J$.T(426657, 2001, 22, false),
                OP_INSERT: J$.T(426665, 2002, 22, false),
                OP_QUERY: J$.T(426673, 2004, 22, false),
                OP_GETMORE: J$.T(426681, 2005, 22, false),
                OP_DELETE: J$.T(426689, 2006, 22, false),
                OP_KILL_CURSORS: J$.T(426697, 2007, 22, false),
                OP_COMPRESSED: J$.T(426705, 2012, 22, false),
                OP_MSG: J$.T(426713, 2013, 22, false)
            }, 11, false), opcodes, false, true);
            var getReadPreference = J$.W(426977, 'getReadPreference', J$.T(426969, function getReadPreference(cmd, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(426929, arguments.callee, this, arguments);
                            arguments = J$.N(426937, 'arguments', arguments, true, false, false);
                            cmd = J$.N(426945, 'cmd', cmd, true, false, false);
                            options = J$.N(426953, 'options', options, true, false, false);
                            J$.N(426961, 'readPreference', readPreference, false, false, false);
                            var readPreference = J$.W(426777, 'readPreference', J$.C(26832, J$.G(426745, J$.R(426737, 'cmd', cmd, false, false), 'readPreference')) ? J$._() : J$.F(426769, J$.R(426753, 'ReadPreference', ReadPreference, false, true), true)(J$.T(426761, 'primary', 21, false)), readPreference, false, false);
                            if (J$.C(26840, J$.G(426793, J$.R(426785, 'options', options, false, false), 'readPreference'))) {
                                readPreference = J$.W(426817, 'readPreference', J$.G(426809, J$.R(426801, 'options', options, false, false), 'readPreference'), readPreference, false, false);
                            }
                            if (J$.C(26848, J$.B(26586, '===', J$.U(26578, 'typeof', J$.R(426825, 'readPreference', readPreference, false, false)), J$.T(426833, 'string', 21, false)))) {
                                readPreference = J$.W(426865, 'readPreference', J$.F(426857, J$.R(426841, 'ReadPreference', ReadPreference, false, true), true)(J$.R(426849, 'readPreference', readPreference, false, false)), readPreference, false, false);
                            }
                            if (J$.C(26856, J$.U(26602, '!', J$.B(26594, 'instanceof', J$.R(426873, 'readPreference', readPreference, false, false), J$.R(426881, 'ReadPreference', ReadPreference, false, true))))) {
                                throw J$.F(426905, J$.R(426889, 'MongoError', MongoError, false, true), true)(J$.T(426897, 'read preference must be a ReadPreference instance', 21, false));
                            }
                            return J$.Rt(426921, J$.R(426913, 'readPreference', readPreference, false, false));
                        } catch (J$e) {
                            J$.Ex(428417, J$e);
                        } finally {
                            if (J$.Fr(428425))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), getReadPreference, false, true);
            var parseHeader = J$.W(427129, 'parseHeader', J$.T(427121, function parseHeader(message) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(427097, arguments.callee, this, arguments);
                            arguments = J$.N(427105, 'arguments', arguments, true, false, false);
                            message = J$.N(427113, 'message', message, true, false, false);
                            return J$.Rt(427089, J$.T(427081, {
                                length: J$.M(427001, J$.R(426985, 'message', message, false, false), 'readInt32LE', false)(J$.T(426993, 0, 22, false)),
                                requestId: J$.M(427025, J$.R(427009, 'message', message, false, false), 'readInt32LE', false)(J$.T(427017, 4, 22, false)),
                                responseTo: J$.M(427049, J$.R(427033, 'message', message, false, false), 'readInt32LE', false)(J$.T(427041, 8, 22, false)),
                                opCode: J$.M(427073, J$.R(427057, 'message', message, false, false), 'readInt32LE', false)(J$.T(427065, 12, 22, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(428433, J$e);
                        } finally {
                            if (J$.Fr(428441))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), parseHeader, false, true);
            J$.P(428265, J$.I(typeof module === 'undefined' ? module = J$.R(428177, 'module', undefined, true, true) : module = J$.R(428177, 'module', module, true, true)), 'exports', J$.T(428257, {
                getReadPreference: J$.R(428185, 'getReadPreference', getReadPreference, false, true),
                MESSAGE_HEADER_SIZE: J$.R(428193, 'MESSAGE_HEADER_SIZE', MESSAGE_HEADER_SIZE, false, true),
                COMPRESSION_DETAILS_SIZE: J$.R(428201, 'COMPRESSION_DETAILS_SIZE', COMPRESSION_DETAILS_SIZE, false, true),
                opcodes: J$.R(428209, 'opcodes', opcodes, false, true),
                parseHeader: J$.R(428217, 'parseHeader', parseHeader, false, true),
                applyCommonQueryOptions: J$.R(428225, 'applyCommonQueryOptions', applyCommonQueryOptions, false, true),
                isSharded: J$.R(428233, 'isSharded', isSharded, false, true),
                databaseNamespace: J$.R(428241, 'databaseNamespace', databaseNamespace, false, true),
                collectionNamespace: J$.R(428249, 'collectionNamespace', collectionNamespace, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(428529, J$e);
        } finally {
            if (J$.Sr(428537))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

