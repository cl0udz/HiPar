J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(418745, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/wireprotocol/index.js');
            J$.N(418753, 'writeCommand', writeCommand, false, false, false);
            J$.T(418177, 'use strict', 21, false);
            var writeCommand = J$.W(418209, 'writeCommand', J$.F(418201, J$.I(typeof require === 'undefined' ? require = J$.R(418185, 'require', undefined, true, true) : require = J$.R(418185, 'require', require, true, true)), false)(J$.T(418193, './write_command', 21, false)), writeCommand, false, true);
            J$.P(418737, J$.I(typeof module === 'undefined' ? module = J$.R(418217, 'module', undefined, true, true) : module = J$.R(418217, 'module', module, true, true)), 'exports', J$.T(418729, {
                insert: J$.T(418353, function insert(server, ns, ops, options, callback) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(418297, arguments.callee, this, arguments);
                                arguments = J$.N(418305, 'arguments', arguments, true, false, false);
                                server = J$.N(418313, 'server', server, true, false, false);
                                ns = J$.N(418321, 'ns', ns, true, false, false);
                                ops = J$.N(418329, 'ops', ops, true, false, false);
                                options = J$.N(418337, 'options', options, true, false, false);
                                callback = J$.N(418345, 'callback', callback, true, false, false);
                                J$.F(418289, J$.R(418225, 'writeCommand', writeCommand, false, true), false)(J$.R(418233, 'server', server, false, false), J$.T(418241, 'insert', 21, false), J$.T(418249, 'documents', 21, false), J$.R(418257, 'ns', ns, false, false), J$.R(418265, 'ops', ops, false, false), J$.R(418273, 'options', options, false, false), J$.R(418281, 'callback', callback, false, false));
                            } catch (J$e) {
                                J$.Ex(418761, J$e);
                            } finally {
                                if (J$.Fr(418769))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                update: J$.T(418489, function update(server, ns, ops, options, callback) {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.Fe(418433, arguments.callee, this, arguments);
                                arguments = J$.N(418441, 'arguments', arguments, true, false, false);
                                server = J$.N(418449, 'server', server, true, false, false);
                                ns = J$.N(418457, 'ns', ns, true, false, false);
                                ops = J$.N(418465, 'ops', ops, true, false, false);
                                options = J$.N(418473, 'options', options, true, false, false);
                                callback = J$.N(418481, 'callback', callback, true, false, false);
                                J$.F(418425, J$.R(418361, 'writeCommand', writeCommand, false, true), false)(J$.R(418369, 'server', server, false, false), J$.T(418377, 'update', 21, false), J$.T(418385, 'updates', 21, false), J$.R(418393, 'ns', ns, false, false), J$.R(418401, 'ops', ops, false, false), J$.R(418409, 'options', options, false, false), J$.R(418417, 'callback', callback, false, false));
                            } catch (J$e) {
                                J$.Ex(418777, J$e);
                            } finally {
                                if (J$.Fr(418785))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                remove: J$.T(418625, function remove(server, ns, ops, options, callback) {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(418569, arguments.callee, this, arguments);
                                arguments = J$.N(418577, 'arguments', arguments, true, false, false);
                                server = J$.N(418585, 'server', server, true, false, false);
                                ns = J$.N(418593, 'ns', ns, true, false, false);
                                ops = J$.N(418601, 'ops', ops, true, false, false);
                                options = J$.N(418609, 'options', options, true, false, false);
                                callback = J$.N(418617, 'callback', callback, true, false, false);
                                J$.F(418561, J$.R(418497, 'writeCommand', writeCommand, false, true), false)(J$.R(418505, 'server', server, false, false), J$.T(418513, 'delete', 21, false), J$.T(418521, 'deletes', 21, false), J$.R(418529, 'ns', ns, false, false), J$.R(418537, 'ops', ops, false, false), J$.R(418545, 'options', options, false, false), J$.R(418553, 'callback', callback, false, false));
                            } catch (J$e) {
                                J$.Ex(418793, J$e);
                            } finally {
                                if (J$.Fr(418801))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                killCursors: J$.F(418649, J$.I(typeof require === 'undefined' ? require = J$.R(418633, 'require', undefined, true, true) : require = J$.R(418633, 'require', require, true, true)), false)(J$.T(418641, './kill_cursors', 21, false)),
                getMore: J$.F(418673, J$.I(typeof require === 'undefined' ? require = J$.R(418657, 'require', undefined, true, true) : require = J$.R(418657, 'require', require, true, true)), false)(J$.T(418665, './get_more', 21, false)),
                query: J$.F(418697, J$.I(typeof require === 'undefined' ? require = J$.R(418681, 'require', undefined, true, true) : require = J$.R(418681, 'require', require, true, true)), false)(J$.T(418689, './query', 21, false)),
                command: J$.F(418721, J$.I(typeof require === 'undefined' ? require = J$.R(418705, 'require', undefined, true, true) : require = J$.R(418705, 'require', require, true, true)), false)(J$.T(418713, './command', 21, false))
            }, 11, false));
        } catch (J$e) {
            J$.Ex(418809, J$e);
        } finally {
            if (J$.Sr(418817))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

