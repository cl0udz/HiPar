J$.noInstrEval = false;
jalangiLabel10:
    while (true) {
        try {
            J$.Se(414553, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/wireprotocol/command.js');
            function isClientEncryptionEnabled(server) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(411745, arguments.callee, this, arguments);
                            arguments = J$.N(411753, 'arguments', arguments, true, false, false);
                            server = J$.N(411761, 'server', server, true, false, false);
                            return J$.Rt(411737, J$.G(411729, J$.R(411721, 'server', server, false, false), 'autoEncrypter'));
                        } catch (J$e) {
                            J$.Ex(414721, J$e);
                        } finally {
                            if (J$.Fr(414729))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function command(server, ns, cmd, options, callback) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(412089, arguments.callee, this, arguments);
                            arguments = J$.N(412097, 'arguments', arguments, true, false, false);
                            server = J$.N(412105, 'server', server, true, false, false);
                            ns = J$.N(412113, 'ns', ns, true, false, false);
                            cmd = J$.N(412121, 'cmd', cmd, true, false, false);
                            options = J$.N(412129, 'options', options, true, false, false);
                            callback = J$.N(412137, 'callback', callback, true, false, false);
                            if (J$.C(25648, J$.B(25754, '===', J$.U(25746, 'typeof', J$.R(411769, 'options', options, false, false)), J$.T(411777, 'function', 21, false))))
                                callback = J$.W(411793, 'callback', J$.R(411785, 'options', options, false, false), callback, false, false), options = J$.W(411809, 'options', J$.T(411801, {}, 11, false), options, false, false);
                            options = J$.W(411833, 'options', J$.C(25656, J$.R(411817, 'options', options, false, false)) ? J$._() : J$.T(411825, {}, 11, false), options, false, false);
                            if (J$.C(25664, J$.B(25762, '==', J$.R(411841, 'cmd', cmd, false, false), J$.T(411849, null, 25, false)))) {
                                return J$.Rt(411937, J$.F(411929, J$.R(411857, 'callback', callback, false, false), false)(J$.F(411921, J$.R(411865, 'MongoError', MongoError, false, true), true)(J$.M(411913, J$.T(411873, 'command ', 21, false), 'concat', false)(J$.M(411897, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(411881, 'JSON', undefined, true, true) : JSON = J$.R(411881, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(411889, 'cmd', cmd, false, false)), J$.T(411905, ' does not return a cursor', 21, false)))));
                            }
                            if (J$.C(25672, J$.U(25770, '!', J$.F(411961, J$.R(411945, 'isClientEncryptionEnabled', isClientEncryptionEnabled, false, true), false)(J$.R(411953, 'server', server, false, false))))) {
                                J$.F(412017, J$.R(411969, '_command', _command, false, true), false)(J$.R(411977, 'server', server, false, false), J$.R(411985, 'ns', ns, false, false), J$.R(411993, 'cmd', cmd, false, false), J$.R(412001, 'options', options, false, false), J$.R(412009, 'callback', callback, false, false));
                                return J$.Rt(412025, undefined);
                            }
                            J$.F(412081, J$.R(412033, '_cryptCommand', _cryptCommand, false, true), false)(J$.R(412041, 'server', server, false, false), J$.R(412049, 'ns', ns, false, false), J$.R(412057, 'cmd', cmd, false, false), J$.R(412065, 'options', options, false, false), J$.R(412073, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(414737, J$e);
                        } finally {
                            if (J$.Fr(414745))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _command(server, ns, cmd, options, callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(413297, arguments.callee, this, arguments);
                            arguments = J$.N(413305, 'arguments', arguments, true, false, false);
                            server = J$.N(413313, 'server', server, true, false, false);
                            ns = J$.N(413321, 'ns', ns, true, false, false);
                            cmd = J$.N(413329, 'cmd', cmd, true, false, false);
                            options = J$.N(413337, 'options', options, true, false, false);
                            callback = J$.N(413345, 'callback', callback, true, false, false);
                            J$.N(413353, 'bson', bson, false, false, false);
                            J$.N(413361, 'pool', pool, false, false, false);
                            J$.N(413369, 'readPreference', readPreference, false, false, false);
                            J$.N(413377, 'shouldUseOpMsg', shouldUseOpMsg, false, false, false);
                            J$.N(413385, 'session', session, false, false, false);
                            J$.N(413393, 'clusterTime', clusterTime, false, false, false);
                            J$.N(413401, 'finalCmd', finalCmd, false, false, false);
                            J$.N(413409, 'err', err, false, false, false);
                            J$.N(413417, 'commandOptions', commandOptions, false, false, false);
                            J$.N(413425, 'cmdNs', cmdNs, false, false, false);
                            J$.N(413433, 'message', message, false, false, false);
                            J$.N(413441, 'inTransaction', inTransaction, false, false, false);
                            J$.N(413449, 'commandResponseHandler', commandResponseHandler, false, false, false);
                            var bson = J$.W(412169, 'bson', J$.G(412161, J$.G(412153, J$.R(412145, 'server', server, false, false), 's'), 'bson'), bson, false, false);
                            var pool = J$.W(412201, 'pool', J$.G(412193, J$.G(412185, J$.R(412177, 'server', server, false, false), 's'), 'pool'), pool, false, false);
                            var readPreference = J$.W(412241, 'readPreference', J$.F(412233, J$.R(412209, 'getReadPreference', getReadPreference, false, true), false)(J$.R(412217, 'cmd', cmd, false, false), J$.R(412225, 'options', options, false, false)), readPreference, false, false);
                            var shouldUseOpMsg = J$.W(412273, 'shouldUseOpMsg', J$.F(412265, J$.R(412249, 'supportsOpMsg', supportsOpMsg, false, true), false)(J$.R(412257, 'server', server, false, false)), shouldUseOpMsg, false, false);
                            var session = J$.W(412297, 'session', J$.G(412289, J$.R(412281, 'options', options, false, false), 'session'), session, false, false);
                            var clusterTime = J$.W(412321, 'clusterTime', J$.G(412313, J$.R(412305, 'server', server, false, false), 'clusterTime'), clusterTime, false, false);
                            var finalCmd = J$.W(412361, 'finalCmd', J$.M(412353, J$.I(typeof Object === 'undefined' ? Object = J$.R(412329, 'Object', undefined, true, true) : Object = J$.R(412329, 'Object', Object, true, true)), 'assign', false)(J$.T(412337, {}, 11, false), J$.R(412345, 'cmd', cmd, false, false)), finalCmd, false, false);
                            if (J$.C(25712, J$.C(25680, J$.F(412385, J$.R(412369, 'hasSessionSupport', hasSessionSupport, false, true), false)(J$.R(412377, 'server', server, false, false))) ? J$.R(412393, 'session', session, false, false) : J$._())) {
                                if (J$.C(25696, J$.C(25688, J$.G(412409, J$.R(412401, 'session', session, false, false), 'clusterTime')) ? J$.M(412457, J$.G(412433, J$.G(412425, J$.R(412417, 'session', session, false, false), 'clusterTime'), 'clusterTime'), 'greaterThan', false)(J$.G(412449, J$.R(412441, 'clusterTime', clusterTime, false, false), 'clusterTime')) : J$._())) {
                                    clusterTime = J$.W(412481, 'clusterTime', J$.G(412473, J$.R(412465, 'session', session, false, false), 'clusterTime'), clusterTime, false, false);
                                }
                                var err = J$.W(412529, 'err', J$.F(412521, J$.R(412489, 'applySession', applySession, false, true), false)(J$.R(412497, 'session', session, false, false), J$.R(412505, 'finalCmd', finalCmd, false, false), J$.R(412513, 'options', options, false, false)), err, false, false);
                                if (J$.C(25704, J$.R(412537, 'err', err, false, false))) {
                                    return J$.Rt(412569, J$.F(412561, J$.R(412545, 'callback', callback, false, false), false)(J$.R(412553, 'err', err, false, false)));
                                }
                            }
                            if (J$.C(25720, J$.R(412577, 'clusterTime', clusterTime, false, false))) {
                                J$.P(412601, J$.R(412585, 'finalCmd', finalCmd, false, false), '$clusterTime', J$.R(412593, 'clusterTime', clusterTime, false, false));
                            }
                            if (J$.C(25752, J$.C(25744, J$.C(25736, J$.C(25728, J$.F(412625, J$.R(412609, 'isSharded', isSharded, false, true), false)(J$.R(412617, 'server', server, false, false))) ? J$.U(25778, '!', J$.R(412633, 'shouldUseOpMsg', shouldUseOpMsg, false, false)) : J$._()) ? J$.R(412641, 'readPreference', readPreference, false, false) : J$._()) ? J$.B(25786, '!==', J$.G(412657, J$.R(412649, 'readPreference', readPreference, false, false), 'preference'), J$.T(412665, 'primary', 21, false)) : J$._())) {
                                finalCmd = J$.W(412705, 'finalCmd', J$.T(412697, {
                                    $query: J$.R(412673, 'finalCmd', finalCmd, false, false),
                                    $readPreference: J$.M(412689, J$.R(412681, 'readPreference', readPreference, false, false), 'toJSON', false)()
                                }, 11, false), finalCmd, false, false);
                            }
                            var commandOptions = J$.W(412777, 'commandOptions', J$.M(412769, J$.I(typeof Object === 'undefined' ? Object = J$.R(412713, 'Object', undefined, true, true) : Object = J$.R(412713, 'Object', Object, true, true)), 'assign', false)(J$.T(412753, {
                                command: J$.T(412721, true, 23, false),
                                numberToSkip: J$.T(412729, 0, 22, false),
                                numberToReturn: J$.U(25794, '-', J$.T(412737, 1, 22, false)),
                                checkKeys: J$.T(412745, false, 23, false)
                            }, 11, false), J$.R(412761, 'options', options, false, false)), commandOptions, false, false);
                            J$.P(412809, J$.R(412785, 'commandOptions', commandOptions, false, false), 'slaveOk', J$.M(412801, J$.R(412793, 'readPreference', readPreference, false, false), 'slaveOk', false)());
                            var cmdNs = J$.W(412865, 'cmdNs', J$.M(412857, J$.T(412817, '', 21, false), 'concat', false)(J$.F(412841, J$.R(412825, 'databaseNamespace', databaseNamespace, false, true), false)(J$.R(412833, 'ns', ns, false, false)), J$.T(412849, '.$cmd', 21, false)), cmdNs, false, false);
                            var message = J$.W(412977, 'message', J$.C(25760, J$.R(412873, 'shouldUseOpMsg', shouldUseOpMsg, false, false)) ? J$.F(412921, J$.R(412881, 'Msg', Msg, false, true), true)(J$.R(412889, 'bson', bson, false, false), J$.R(412897, 'cmdNs', cmdNs, false, false), J$.R(412905, 'finalCmd', finalCmd, false, false), J$.R(412913, 'commandOptions', commandOptions, false, false)) : J$.F(412969, J$.R(412929, 'Query', Query, false, true), true)(J$.R(412937, 'bson', bson, false, false), J$.R(412945, 'cmdNs', cmdNs, false, false), J$.R(412953, 'finalCmd', finalCmd, false, false), J$.R(412961, 'commandOptions', commandOptions, false, false)), message, false, false);
                            var inTransaction = J$.W(413033, 'inTransaction', J$.C(25776, J$.R(412985, 'session', session, false, false)) ? J$.C(25768, J$.M(413001, J$.R(412993, 'session', session, false, false), 'inTransaction', false)()) ? J$._() : J$.F(413025, J$.R(413009, 'isTransactionCommand', isTransactionCommand, false, true), false)(J$.R(413017, 'finalCmd', finalCmd, false, false)) : J$._(), inTransaction, false, false);
                            var commandResponseHandler = J$.W(413217, 'commandResponseHandler', J$.C(25816, J$.R(413041, 'inTransaction', inTransaction, false, false)) ? J$.T(413201, function (err) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(413177, arguments.callee, this, arguments);
                                            arguments = J$.N(413185, 'arguments', arguments, true, false, false);
                                            err = J$.N(413193, 'err', err, true, false, false);
                                            if (J$.C(25808, J$.C(25800, J$.C(25792, J$.C(25784, J$.U(25802, '!', J$.G(413057, J$.R(413049, 'cmd', cmd, false, false), 'commitTransaction'))) ? J$.R(413065, 'err', err, false, false) : J$._()) ? J$.B(25810, 'instanceof', J$.R(413073, 'err', err, false, false), J$.R(413081, 'MongoError', MongoError, false, true)) : J$._()) ? J$.M(413105, J$.R(413089, 'err', err, false, false), 'hasErrorLabel', false)(J$.T(413097, 'TransientTransactionError', 21, false)) : J$._())) {
                                                J$.M(413129, J$.G(413121, J$.R(413113, 'session', session, false, false), 'transaction'), 'unpinServer', false)();
                                            }
                                            return J$.Rt(413169, J$.M(413161, J$.R(413137, 'callback', callback, false, false), 'apply', false)(J$.T(413145, null, 25, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(413153, 'arguments', undefined, true, true) : arguments = J$.R(413153, 'arguments', arguments, true, true))));
                                        } catch (J$e) {
                                            J$.Ex(414753, J$e);
                                        } finally {
                                            if (J$.Fr(414761))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false) : J$.R(413209, 'callback', callback, false, false), commandResponseHandler, false, false);
                            try {
                                J$.M(413257, J$.R(413225, 'pool', pool, false, false), 'write', false)(J$.R(413233, 'message', message, false, false), J$.R(413241, 'commandOptions', commandOptions, false, false), J$.R(413249, 'commandResponseHandler', commandResponseHandler, false, false));
                            } catch (err) {
                                J$.N(413289, 'err', err, false, false, true);
                                J$.F(413281, J$.R(413265, 'commandResponseHandler', commandResponseHandler, false, false), false)(J$.R(413273, 'err', err, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(414769, J$e);
                        } finally {
                            if (J$.Fr(414777))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function hasSessionSupport(topology) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(413617, arguments.callee, this, arguments);
                            arguments = J$.N(413625, 'arguments', arguments, true, false, false);
                            topology = J$.N(413633, 'topology', topology, true, false, false);
                            if (J$.C(25824, J$.B(25818, '==', J$.R(413457, 'topology', topology, false, false), J$.T(413465, null, 25, false))))
                                return J$.Rt(413481, J$.T(413473, false, 23, false));
                            if (J$.C(25832, J$.G(413497, J$.R(413489, 'topology', topology, false, false), 'description'))) {
                                return J$.Rt(413537, J$.B(25826, '>=', J$.G(413521, J$.G(413513, J$.R(413505, 'topology', topology, false, false), 'description'), 'maxWireVersion'), J$.T(413529, 6, 22, false)));
                            }
                            return J$.Rt(413609, J$.C(25840, J$.B(25834, '==', J$.G(413553, J$.R(413545, 'topology', topology, false, false), 'ismaster'), J$.T(413561, null, 25, false))) ? J$.T(413569, false, 23, false) : J$.B(25842, '>=', J$.G(413593, J$.G(413585, J$.R(413577, 'topology', topology, false, false), 'ismaster'), 'maxWireVersion'), J$.T(413601, 6, 22, false)));
                        } catch (J$e) {
                            J$.Ex(414785, J$e);
                        } finally {
                            if (J$.Fr(414793))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function supportsOpMsg(topologyOrServer) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(413785, arguments.callee, this, arguments);
                            arguments = J$.N(413793, 'arguments', arguments, true, false, false);
                            topologyOrServer = J$.N(413801, 'topologyOrServer', topologyOrServer, true, false, false);
                            J$.N(413809, 'description', description, false, false, false);
                            var description = J$.W(413689, 'description', J$.C(25848, J$.G(413649, J$.R(413641, 'topologyOrServer', topologyOrServer, false, false), 'ismaster')) ? J$.G(413665, J$.R(413657, 'topologyOrServer', topologyOrServer, false, false), 'ismaster') : J$.G(413681, J$.R(413673, 'topologyOrServer', topologyOrServer, false, false), 'description'), description, false, false);
                            if (J$.C(25856, J$.B(25850, '==', J$.R(413697, 'description', description, false, false), J$.T(413705, null, 25, false)))) {
                                return J$.Rt(413721, J$.T(413713, false, 23, false));
                            }
                            return J$.Rt(413777, J$.C(25864, J$.B(25858, '>=', J$.G(413737, J$.R(413729, 'description', description, false, false), 'maxWireVersion'), J$.T(413745, 6, 22, false))) ? J$.B(25866, '==', J$.G(413761, J$.R(413753, 'description', description, false, false), '__nodejs_mock_server__'), J$.T(413769, null, 25, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(414801, J$e);
                        } finally {
                            if (J$.Fr(414809))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _cryptCommand(server, ns, cmd, options, callback) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(414441, arguments.callee, this, arguments);
                            function commandResponseHandler(err, response) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(414161, arguments.callee, this, arguments);
                                            arguments = J$.N(414169, 'arguments', arguments, true, false, false);
                                            err = J$.N(414177, 'err', err, true, false, false);
                                            response = J$.N(414185, 'response', response, true, false, false);
                                            if (J$.C(25880, J$.C(25872, J$.R(413881, 'err', err, false, false)) ? J$._() : J$.B(25890, '==', J$.R(413889, 'response', response, false, false), J$.T(413897, null, 25, false)))) {
                                                J$.F(413929, J$.R(413905, 'callback', callback, false, false), false)(J$.R(413913, 'err', err, false, false), J$.R(413921, 'response', response, false, false));
                                                return J$.Rt(413937, undefined);
                                            }
                                            J$.M(414153, J$.R(413945, 'autoEncrypter', autoEncrypter, false, false), 'decrypt', false)(J$.G(413961, J$.R(413953, 'response', response, false, false), 'result'), J$.T(414145, function (err, decrypted) {
                                                jalangiLabel6:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(414113, arguments.callee, this, arguments);
                                                            arguments = J$.N(414121, 'arguments', arguments, true, false, false);
                                                            err = J$.N(414129, 'err', err, true, false, false);
                                                            decrypted = J$.N(414137, 'decrypted', decrypted, true, false, false);
                                                            if (J$.C(25888, J$.R(413969, 'err', err, false, false))) {
                                                                J$.F(414001, J$.R(413977, 'callback', callback, false, false), false)(J$.R(413985, 'err', err, false, false), J$.T(413993, null, 25, false));
                                                                return J$.Rt(414009, undefined);
                                                            }
                                                            J$.P(414033, J$.R(414017, 'response', response, false, false), 'result', J$.R(414025, 'decrypted', decrypted, false, false));
                                                            J$.P(414073, J$.G(414049, J$.R(414041, 'response', response, false, false), 'message'), 'documents', J$.T(414065, [J$.R(414057, 'decrypted', decrypted, false, false)], 10, false));
                                                            J$.F(414105, J$.R(414081, 'callback', callback, false, false), false)(J$.T(414089, null, 25, false), J$.R(414097, 'response', response, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(414817, J$e);
                                                        } finally {
                                                            if (J$.Fr(414825))
                                                                continue jalangiLabel6;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(414833, J$e);
                                        } finally {
                                            if (J$.Fr(414841))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(414449, 'arguments', arguments, true, false, false);
                            server = J$.N(414457, 'server', server, true, false, false);
                            ns = J$.N(414465, 'ns', ns, true, false, false);
                            cmd = J$.N(414473, 'cmd', cmd, true, false, false);
                            options = J$.N(414481, 'options', options, true, false, false);
                            callback = J$.N(414489, 'callback', callback, true, false, false);
                            J$.N(414497, 'shouldBypassAutoEncryption', shouldBypassAutoEncryption, false, false, false);
                            J$.N(414505, 'autoEncrypter', autoEncrypter, false, false, false);
                            commandResponseHandler = J$.N(414521, 'commandResponseHandler', J$.T(414513, commandResponseHandler, 12, false), true, false, false);
                            var shouldBypassAutoEncryption = J$.W(413849, 'shouldBypassAutoEncryption', J$.U(25882, '!', J$.U(25874, '!', J$.G(413841, J$.G(413833, J$.G(413825, J$.R(413817, 'server', server, false, false), 's'), 'options'), 'bypassAutoEncryption'))), shouldBypassAutoEncryption, false, false);
                            var autoEncrypter = J$.W(413873, 'autoEncrypter', J$.G(413865, J$.R(413857, 'server', server, false, false), 'autoEncrypter'), autoEncrypter, false, false);
                            if (J$.C(25896, J$.R(414193, 'shouldBypassAutoEncryption', shouldBypassAutoEncryption, false, false))) {
                                J$.F(414249, J$.R(414201, '_command', _command, false, true), false)(J$.R(414209, 'server', server, false, false), J$.R(414217, 'ns', ns, false, false), J$.R(414225, 'cmd', cmd, false, false), J$.R(414233, 'options', options, false, false), J$.R(414241, 'commandResponseHandler', commandResponseHandler, false, false));
                                return J$.Rt(414257, undefined);
                            }
                            J$.M(414433, J$.R(414265, 'autoEncrypter', autoEncrypter, false, false), 'encrypt', false)(J$.R(414273, 'ns', ns, false, false), J$.R(414281, 'cmd', cmd, false, false), J$.T(414425, function (err, encrypted) {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(414393, arguments.callee, this, arguments);
                                            arguments = J$.N(414401, 'arguments', arguments, true, false, false);
                                            err = J$.N(414409, 'err', err, true, false, false);
                                            encrypted = J$.N(414417, 'encrypted', encrypted, true, false, false);
                                            if (J$.C(25904, J$.R(414289, 'err', err, false, false))) {
                                                J$.F(414321, J$.R(414297, 'callback', callback, false, false), false)(J$.R(414305, 'err', err, false, false), J$.T(414313, null, 25, false));
                                                return J$.Rt(414329, undefined);
                                            }
                                            J$.F(414385, J$.R(414337, '_command', _command, false, true), false)(J$.R(414345, 'server', server, false, false), J$.R(414353, 'ns', ns, false, false), J$.R(414361, 'encrypted', encrypted, false, false), J$.R(414369, 'options', options, false, false), J$.R(414377, 'commandResponseHandler', commandResponseHandler, false, false));
                                        } catch (J$e) {
                                            J$.Ex(414849, J$e);
                                        } finally {
                                            if (J$.Fr(414857))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(414865, J$e);
                        } finally {
                            if (J$.Fr(414873))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(414561, 'Query', Query, false, false, false);
            J$.N(414569, 'Msg', Msg, false, false, false);
            J$.N(414577, 'MongoError', MongoError, false, false, false);
            J$.N(414585, 'getReadPreference', getReadPreference, false, false, false);
            J$.N(414593, 'isSharded', isSharded, false, false, false);
            J$.N(414601, 'databaseNamespace', databaseNamespace, false, false, false);
            J$.N(414609, 'isTransactionCommand', isTransactionCommand, false, false, false);
            J$.N(414617, 'applySession', applySession, false, false, false);
            isClientEncryptionEnabled = J$.N(414633, 'isClientEncryptionEnabled', J$.T(414625, isClientEncryptionEnabled, 12, false), true, false, false);
            command = J$.N(414649, 'command', J$.T(414641, command, 12, false), true, false, false);
            _command = J$.N(414665, '_command', J$.T(414657, _command, 12, false), true, false, false);
            hasSessionSupport = J$.N(414681, 'hasSessionSupport', J$.T(414673, hasSessionSupport, 12, false), true, false, false);
            supportsOpMsg = J$.N(414697, 'supportsOpMsg', J$.T(414689, supportsOpMsg, 12, false), true, false, false);
            _cryptCommand = J$.N(414713, '_cryptCommand', J$.T(414705, _cryptCommand, 12, false), true, false, false);
            J$.T(411393, 'use strict', 21, false);
            var Query = J$.W(411433, 'Query', J$.G(411425, J$.F(411417, J$.I(typeof require === 'undefined' ? require = J$.R(411401, 'require', undefined, true, true) : require = J$.R(411401, 'require', require, true, true)), false)(J$.T(411409, '../connection/commands', 21, false)), 'Query'), Query, false, true);
            var Msg = J$.W(411473, 'Msg', J$.G(411465, J$.F(411457, J$.I(typeof require === 'undefined' ? require = J$.R(411441, 'require', undefined, true, true) : require = J$.R(411441, 'require', require, true, true)), false)(J$.T(411449, '../connection/msg', 21, false)), 'Msg'), Msg, false, true);
            var MongoError = J$.W(411513, 'MongoError', J$.G(411505, J$.F(411497, J$.I(typeof require === 'undefined' ? require = J$.R(411481, 'require', undefined, true, true) : require = J$.R(411481, 'require', require, true, true)), false)(J$.T(411489, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var getReadPreference = J$.W(411553, 'getReadPreference', J$.G(411545, J$.F(411537, J$.I(typeof require === 'undefined' ? require = J$.R(411521, 'require', undefined, true, true) : require = J$.R(411521, 'require', require, true, true)), false)(J$.T(411529, './shared', 21, false)), 'getReadPreference'), getReadPreference, false, true);
            var isSharded = J$.W(411593, 'isSharded', J$.G(411585, J$.F(411577, J$.I(typeof require === 'undefined' ? require = J$.R(411561, 'require', undefined, true, true) : require = J$.R(411561, 'require', require, true, true)), false)(J$.T(411569, './shared', 21, false)), 'isSharded'), isSharded, false, true);
            var databaseNamespace = J$.W(411633, 'databaseNamespace', J$.G(411625, J$.F(411617, J$.I(typeof require === 'undefined' ? require = J$.R(411601, 'require', undefined, true, true) : require = J$.R(411601, 'require', require, true, true)), false)(J$.T(411609, './shared', 21, false)), 'databaseNamespace'), databaseNamespace, false, true);
            var isTransactionCommand = J$.W(411673, 'isTransactionCommand', J$.G(411665, J$.F(411657, J$.I(typeof require === 'undefined' ? require = J$.R(411641, 'require', undefined, true, true) : require = J$.R(411641, 'require', require, true, true)), false)(J$.T(411649, '../transactions', 21, false)), 'isTransactionCommand'), isTransactionCommand, false, true);
            var applySession = J$.W(411713, 'applySession', J$.G(411705, J$.F(411697, J$.I(typeof require === 'undefined' ? require = J$.R(411681, 'require', undefined, true, true) : require = J$.R(411681, 'require', require, true, true)), false)(J$.T(411689, '../sessions', 21, false)), 'applySession'), applySession, false, true);
            J$.P(414545, J$.I(typeof module === 'undefined' ? module = J$.R(414529, 'module', undefined, true, true) : module = J$.R(414529, 'module', module, true, true)), 'exports', J$.R(414537, 'command', command, false, true));
        } catch (J$e) {
            J$.Ex(414881, J$e);
        } finally {
            if (J$.Sr(414889))
                continue jalangiLabel10;
            else
                break jalangiLabel10;
        }
    }
// JALANGI DO NOT INSTRUMENT

