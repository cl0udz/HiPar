J$.noInstrEval = false;
jalangiLabel14:
    while (true) {
        try {
            J$.Se(243225, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/sdam/server_description.js');
            function _classCallCheck(instance, Constructor) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(240433, arguments.callee, this, arguments);
                            arguments = J$.N(240441, 'arguments', arguments, true, false, false);
                            instance = J$.N(240449, 'instance', instance, true, false, false);
                            Constructor = J$.N(240457, 'Constructor', Constructor, true, false, false);
                            if (J$.C(13824, J$.U(15290, '!', J$.B(15282, 'instanceof', J$.R(240393, 'instance', instance, false, false), J$.R(240401, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(240425, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(240409, 'TypeError', undefined, true, true) : TypeError = J$.R(240409, 'TypeError', TypeError, true, true)), true)(J$.T(240417, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(243337, J$e);
                        } finally {
                            if (J$.Fr(243345))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(240705, arguments.callee, this, arguments);
                            arguments = J$.N(240713, 'arguments', arguments, true, false, false);
                            target = J$.N(240721, 'target', target, true, false, false);
                            props = J$.N(240729, 'props', props, true, false, false);
                            J$.N(240737, 'i', i, false, false, false);
                            J$.N(240745, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(240473, 'i', J$.T(240465, 0, 22, false), i, false, false); J$.C(13848, J$.B(15298, '<', J$.R(240481, 'i', i, false, false), J$.G(240497, J$.R(240489, 'props', props, false, false), 'length'))); J$.B(15322, '-', i = J$.W(240513, 'i', J$.B(15314, '+', J$.U(15306, '+', J$.R(240505, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(240545, 'descriptor', J$.G(240537, J$.R(240521, 'props', props, false, false), J$.R(240529, 'i', i, false, false)), descriptor, false, false);
                                J$.P(240585, J$.R(240553, 'descriptor', descriptor, false, false), 'enumerable', J$.C(13832, J$.G(240569, J$.R(240561, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(240577, false, 23, false));
                                J$.P(240609, J$.R(240593, 'descriptor', descriptor, false, false), 'configurable', J$.T(240601, true, 23, false));
                                if (J$.C(13840, J$.B(15330, 'in', J$.T(240617, 'value', 21, false), J$.R(240625, 'descriptor', descriptor, false, false))))
                                    J$.P(240649, J$.R(240633, 'descriptor', descriptor, false, false), 'writable', J$.T(240641, true, 23, false));
                                J$.M(240697, J$.I(typeof Object === 'undefined' ? Object = J$.R(240657, 'Object', undefined, true, true) : Object = J$.R(240657, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(240665, 'target', target, false, false), J$.G(240681, J$.R(240673, 'descriptor', descriptor, false, false), 'key'), J$.R(240689, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(243353, J$e);
                        } finally {
                            if (J$.Fr(243361))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(240857, arguments.callee, this, arguments);
                            arguments = J$.N(240865, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(240873, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(240881, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(240889, 'staticProps', staticProps, true, false, false);
                            if (J$.C(13856, J$.R(240753, 'protoProps', protoProps, false, false)))
                                J$.F(240793, J$.R(240761, '_defineProperties', _defineProperties, false, true), false)(J$.G(240777, J$.R(240769, 'Constructor', Constructor, false, false), 'prototype'), J$.R(240785, 'protoProps', protoProps, false, false));
                            if (J$.C(13864, J$.R(240801, 'staticProps', staticProps, false, false)))
                                J$.F(240833, J$.R(240809, '_defineProperties', _defineProperties, false, true), false)(J$.R(240817, 'Constructor', Constructor, false, false), J$.R(240825, 'staticProps', staticProps, false, false));
                            return J$.Rt(240849, J$.R(240841, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(243369, J$e);
                        } finally {
                            if (J$.Fr(243377))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseServerType(ismaster) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(243161, arguments.callee, this, arguments);
                            arguments = J$.N(243169, 'arguments', arguments, true, false, false);
                            ismaster = J$.N(243177, 'ismaster', ismaster, true, false, false);
                            if (J$.C(13944, J$.C(13936, J$.U(15362, '!', J$.R(242785, 'ismaster', ismaster, false, false))) ? J$._() : J$.U(15370, '!', J$.G(242801, J$.R(242793, 'ismaster', ismaster, false, false), 'ok')))) {
                                return J$.Rt(242825, J$.G(242817, J$.R(242809, 'ServerType', ServerType, false, true), 'Unknown'));
                            }
                            if (J$.C(13952, J$.G(242841, J$.R(242833, 'ismaster', ismaster, false, false), 'isreplicaset'))) {
                                return J$.Rt(242865, J$.G(242857, J$.R(242849, 'ServerType', ServerType, false, true), 'RSGhost'));
                            }
                            if (J$.C(13968, J$.C(13960, J$.G(242881, J$.R(242873, 'ismaster', ismaster, false, false), 'msg')) ? J$.B(15378, '===', J$.G(242897, J$.R(242889, 'ismaster', ismaster, false, false), 'msg'), J$.T(242905, 'isdbgrid', 21, false)) : J$._())) {
                                return J$.Rt(242929, J$.G(242921, J$.R(242913, 'ServerType', ServerType, false, true), 'Mongos'));
                            }
                            if (J$.C(14008, J$.G(242945, J$.R(242937, 'ismaster', ismaster, false, false), 'setName'))) {
                                if (J$.C(14000, J$.G(242961, J$.R(242953, 'ismaster', ismaster, false, false), 'hidden'))) {
                                    return J$.Rt(242985, J$.G(242977, J$.R(242969, 'ServerType', ServerType, false, true), 'RSOther'));
                                } else if (J$.C(13992, J$.G(243001, J$.R(242993, 'ismaster', ismaster, false, false), 'ismaster'))) {
                                    return J$.Rt(243025, J$.G(243017, J$.R(243009, 'ServerType', ServerType, false, true), 'RSPrimary'));
                                } else if (J$.C(13984, J$.G(243041, J$.R(243033, 'ismaster', ismaster, false, false), 'secondary'))) {
                                    return J$.Rt(243065, J$.G(243057, J$.R(243049, 'ServerType', ServerType, false, true), 'RSSecondary'));
                                } else if (J$.C(13976, J$.G(243081, J$.R(243073, 'ismaster', ismaster, false, false), 'arbiterOnly'))) {
                                    return J$.Rt(243105, J$.G(243097, J$.R(243089, 'ServerType', ServerType, false, true), 'RSArbiter'));
                                } else {
                                    return J$.Rt(243129, J$.G(243121, J$.R(243113, 'ServerType', ServerType, false, true), 'RSOther'));
                                }
                            }
                            return J$.Rt(243153, J$.G(243145, J$.R(243137, 'ServerType', ServerType, false, true), 'Standalone'));
                        } catch (J$e) {
                            J$.Ex(243545, J$e);
                        } finally {
                            if (J$.Fr(243553))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _classCallCheck = J$.N(243241, '_classCallCheck', J$.T(243233, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(243257, '_defineProperties', J$.T(243249, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(243273, '_createClass', J$.T(243265, _createClass, 12, false), true, false, false);
            J$.N(243281, 'ServerType', ServerType, false, false, false);
            J$.N(243289, 'WRITABLE_SERVER_TYPES', WRITABLE_SERVER_TYPES, false, false, false);
            J$.N(243297, 'DATA_BEARING_SERVER_TYPES', DATA_BEARING_SERVER_TYPES, false, false, false);
            J$.N(243305, 'ISMASTER_FIELDS', ISMASTER_FIELDS, false, false, false);
            J$.N(243313, 'ServerDescription', ServerDescription, false, false, false);
            parseServerType = J$.N(243329, 'parseServerType', J$.T(243321, parseServerType, 12, false), true, false, false);
            J$.T(240385, 'use strict', 21, false);
            var ServerType = J$.W(240977, 'ServerType', J$.T(240969, {
                Standalone: J$.T(240897, 'Standalone', 21, false),
                Mongos: J$.T(240905, 'Mongos', 21, false),
                PossiblePrimary: J$.T(240913, 'PossiblePrimary', 21, false),
                RSPrimary: J$.T(240921, 'RSPrimary', 21, false),
                RSSecondary: J$.T(240929, 'RSSecondary', 21, false),
                RSArbiter: J$.T(240937, 'RSArbiter', 21, false),
                RSOther: J$.T(240945, 'RSOther', 21, false),
                RSGhost: J$.T(240953, 'RSGhost', 21, false),
                Unknown: J$.T(240961, 'Unknown', 21, false)
            }, 11, false), ServerType, false, true);
            var WRITABLE_SERVER_TYPES = J$.W(241057, 'WRITABLE_SERVER_TYPES', J$.F(241049, J$.I(typeof Set === 'undefined' ? Set = J$.R(240985, 'Set', undefined, true, true) : Set = J$.R(240985, 'Set', Set, true, true)), true)(J$.T(241041, [
                J$.G(241001, J$.R(240993, 'ServerType', ServerType, false, true), 'RSPrimary'),
                J$.G(241017, J$.R(241009, 'ServerType', ServerType, false, true), 'Standalone'),
                J$.G(241033, J$.R(241025, 'ServerType', ServerType, false, true), 'Mongos')
            ], 10, false)), WRITABLE_SERVER_TYPES, false, true);
            var DATA_BEARING_SERVER_TYPES = J$.W(241153, 'DATA_BEARING_SERVER_TYPES', J$.F(241145, J$.I(typeof Set === 'undefined' ? Set = J$.R(241065, 'Set', undefined, true, true) : Set = J$.R(241065, 'Set', Set, true, true)), true)(J$.T(241137, [
                J$.G(241081, J$.R(241073, 'ServerType', ServerType, false, true), 'RSPrimary'),
                J$.G(241097, J$.R(241089, 'ServerType', ServerType, false, true), 'RSSecondary'),
                J$.G(241113, J$.R(241105, 'ServerType', ServerType, false, true), 'Mongos'),
                J$.G(241129, J$.R(241121, 'ServerType', ServerType, false, true), 'Standalone')
            ], 10, false)), DATA_BEARING_SERVER_TYPES, false, true);
            var ISMASTER_FIELDS = J$.W(241321, 'ISMASTER_FIELDS', J$.T(241313, [
                J$.T(241161, 'minWireVersion', 21, false),
                J$.T(241169, 'maxWireVersion', 21, false),
                J$.T(241177, 'maxBsonObjectSize', 21, false),
                J$.T(241185, 'maxMessageSizeBytes', 21, false),
                J$.T(241193, 'maxWriteBatchSize', 21, false),
                J$.T(241201, 'compression', 21, false),
                J$.T(241209, 'me', 21, false),
                J$.T(241217, 'hosts', 21, false),
                J$.T(241225, 'passives', 21, false),
                J$.T(241233, 'arbiters', 21, false),
                J$.T(241241, 'tags', 21, false),
                J$.T(241249, 'setName', 21, false),
                J$.T(241257, 'setVersion', 21, false),
                J$.T(241265, 'electionId', 21, false),
                J$.T(241273, 'primary', 21, false),
                J$.T(241281, 'logicalSessionTimeoutMinutes', 21, false),
                J$.T(241289, 'saslSupportedMechs', 21, false),
                J$.T(241297, '__nodejs_mock_server__', 21, false),
                J$.T(241305, '$clusterTime', 21, false)
            ], 10, false), ISMASTER_FIELDS, false, true);
            var ServerDescription = J$.W(242777, 'ServerDescription', J$.F(242769, J$.T(242761, function () {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(242729, arguments.callee, this, arguments);
                            function ServerDescription(address, ismaster, options) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(242265, arguments.callee, this, arguments);
                                            arguments = J$.N(242273, 'arguments', arguments, true, false, false);
                                            address = J$.N(242281, 'address', address, true, false, false);
                                            ismaster = J$.N(242289, 'ismaster', ismaster, true, false, false);
                                            options = J$.N(242297, 'options', options, true, false, false);
                                            J$.N(242305, '_this', _this, false, false, false);
                                            var _this = J$.W(241337, '_this', J$.R(241329, 'this', this, false, false), _this, false, false);
                                            J$.F(241369, J$.R(241345, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(241353, 'this', this, false, false), J$.R(241361, 'ServerDescription', ServerDescription, false, false));
                                            options = J$.W(241393, 'options', J$.C(13872, J$.R(241377, 'options', options, false, false)) ? J$._() : J$.T(241385, {}, 11, false), options, false, false);
                                            ismaster = J$.W(241481, 'ismaster', J$.M(241473, J$.I(typeof Object === 'undefined' ? Object = J$.R(241401, 'Object', undefined, true, true) : Object = J$.R(241401, 'Object', Object, true, true)), 'assign', false)(J$.T(241457, {
                                                minWireVersion: J$.T(241409, 0, 22, false),
                                                maxWireVersion: J$.T(241417, 0, 22, false),
                                                hosts: J$.T(241425, [], 10, false),
                                                passives: J$.T(241433, [], 10, false),
                                                arbiters: J$.T(241441, [], 10, false),
                                                tags: J$.T(241449, [], 10, false)
                                            }, 11, false), J$.R(241465, 'ismaster', ismaster, false, false)), ismaster, false, false);
                                            J$.P(241505, J$.R(241489, 'this', this, false, false), 'address', J$.R(241497, 'address', address, false, false));
                                            J$.P(241545, J$.R(241513, 'this', this, false, false), 'error', J$.C(13880, J$.G(241529, J$.R(241521, 'options', options, false, false), 'error')) ? J$._() : J$.T(241537, null, 25, false));
                                            J$.P(241585, J$.R(241553, 'this', this, false, false), 'roundTripTime', J$.C(13888, J$.G(241569, J$.R(241561, 'options', options, false, false), 'roundTripTime')) ? J$._() : J$.T(241577, 0, 22, false));
                                            J$.P(241617, J$.R(241593, 'this', this, false, false), 'lastUpdateTime', J$.M(241609, J$.I(typeof Date === 'undefined' ? Date = J$.R(241601, 'Date', undefined, true, true) : Date = J$.R(241601, 'Date', Date, true, true)), 'now', false)());
                                            J$.P(241681, J$.R(241625, 'this', this, false, false), 'lastWriteDate', J$.C(13896, J$.G(241641, J$.R(241633, 'ismaster', ismaster, false, false), 'lastWrite')) ? J$.G(241665, J$.G(241657, J$.R(241649, 'ismaster', ismaster, false, false), 'lastWrite'), 'lastWriteDate') : J$.T(241673, null, 25, false));
                                            J$.P(241745, J$.R(241689, 'this', this, false, false), 'opTime', J$.C(13904, J$.G(241705, J$.R(241697, 'ismaster', ismaster, false, false), 'lastWrite')) ? J$.G(241729, J$.G(241721, J$.R(241713, 'ismaster', ismaster, false, false), 'lastWrite'), 'opTime') : J$.T(241737, null, 25, false));
                                            J$.P(241785, J$.R(241753, 'this', this, false, false), 'type', J$.F(241777, J$.R(241761, 'parseServerType', parseServerType, false, true), false)(J$.R(241769, 'ismaster', ismaster, false, false)));
                                            J$.M(241913, J$.R(241793, 'ISMASTER_FIELDS', ISMASTER_FIELDS, false, true), 'forEach', false)(J$.T(241905, function (field) {
                                                jalangiLabel3:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(241881, arguments.callee, this, arguments);
                                                            arguments = J$.N(241889, 'arguments', arguments, true, false, false);
                                                            field = J$.N(241897, 'field', field, true, false, false);
                                                            if (J$.C(13912, J$.B(15346, '!==', J$.U(15338, 'typeof', J$.G(241817, J$.R(241801, 'ismaster', ismaster, false, false), J$.R(241809, 'field', field, false, false))), J$.T(241825, 'undefined', 21, false))))
                                                                J$.P(241873, J$.R(241833, '_this', _this, false, false), J$.R(241841, 'field', field, false, false), J$.G(241865, J$.R(241849, 'ismaster', ismaster, false, false), J$.R(241857, 'field', field, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(243385, J$e);
                                                        } finally {
                                                            if (J$.Fr(243393))
                                                                continue jalangiLabel3;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            if (J$.C(13920, J$.G(241929, J$.R(241921, 'this', this, false, false), 'me')))
                                                J$.P(241969, J$.R(241937, 'this', this, false, false), 'me', J$.M(241961, J$.G(241953, J$.R(241945, 'this', this, false, false), 'me'), 'toLowerCase', false)());
                                            J$.P(242065, J$.R(241977, 'this', this, false, false), 'hosts', J$.M(242057, J$.G(241993, J$.R(241985, 'this', this, false, false), 'hosts'), 'map', false)(J$.T(242049, function (host) {
                                                jalangiLabel4:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(242025, arguments.callee, this, arguments);
                                                            arguments = J$.N(242033, 'arguments', arguments, true, false, false);
                                                            host = J$.N(242041, 'host', host, true, false, false);
                                                            return J$.Rt(242017, J$.M(242009, J$.R(242001, 'host', host, false, false), 'toLowerCase', false)());
                                                        } catch (J$e) {
                                                            J$.Ex(243401, J$e);
                                                        } finally {
                                                            if (J$.Fr(243409))
                                                                continue jalangiLabel4;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                            J$.P(242161, J$.R(242073, 'this', this, false, false), 'passives', J$.M(242153, J$.G(242089, J$.R(242081, 'this', this, false, false), 'passives'), 'map', false)(J$.T(242145, function (host) {
                                                jalangiLabel5:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(242121, arguments.callee, this, arguments);
                                                            arguments = J$.N(242129, 'arguments', arguments, true, false, false);
                                                            host = J$.N(242137, 'host', host, true, false, false);
                                                            return J$.Rt(242113, J$.M(242105, J$.R(242097, 'host', host, false, false), 'toLowerCase', false)());
                                                        } catch (J$e) {
                                                            J$.Ex(243417, J$e);
                                                        } finally {
                                                            if (J$.Fr(243425))
                                                                continue jalangiLabel5;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                            J$.P(242257, J$.R(242169, 'this', this, false, false), 'arbiters', J$.M(242249, J$.G(242185, J$.R(242177, 'this', this, false, false), 'arbiters'), 'map', false)(J$.T(242241, function (host) {
                                                jalangiLabel6:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(242217, arguments.callee, this, arguments);
                                                            arguments = J$.N(242225, 'arguments', arguments, true, false, false);
                                                            host = J$.N(242233, 'host', host, true, false, false);
                                                            return J$.Rt(242209, J$.M(242201, J$.R(242193, 'host', host, false, false), 'toLowerCase', false)());
                                                        } catch (J$e) {
                                                            J$.Ex(243433, J$e);
                                                        } finally {
                                                            if (J$.Fr(243441))
                                                                continue jalangiLabel6;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(243449, J$e);
                                        } finally {
                                            if (J$.Fr(243457))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(242737, 'arguments', arguments, true, false, false);
                            ServerDescription = J$.N(242753, 'ServerDescription', J$.T(242745, ServerDescription, 12, false), true, false, false);
                            J$.F(242705, J$.R(242313, '_createClass', _createClass, false, true), false)(J$.R(242321, 'ServerDescription', ServerDescription, false, false), J$.T(242697, [
                                J$.T(242433, {
                                    key: J$.T(242329, 'allHosts', 21, false),
                                    get: J$.T(242425, function get() {
                                        jalangiLabel8:
                                            while (true) {
                                                try {
                                                    J$.Fe(242409, arguments.callee, this, arguments);
                                                    arguments = J$.N(242417, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(242401, J$.M(242393, J$.M(242369, J$.G(242345, J$.R(242337, 'this', this, false, false), 'hosts'), 'concat', false)(J$.G(242361, J$.R(242353, 'this', this, false, false), 'arbiters')), 'concat', false)(J$.G(242385, J$.R(242377, 'this', this, false, false), 'passives')));
                                                } catch (J$e) {
                                                    J$.Ex(243465, J$e);
                                                } finally {
                                                    if (J$.Fr(243473))
                                                        continue jalangiLabel8;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(242529, {
                                    key: J$.T(242441, 'isReadable', 21, false),
                                    get: J$.T(242521, function get() {
                                        jalangiLabel9:
                                            while (true) {
                                                try {
                                                    J$.Fe(242505, arguments.callee, this, arguments);
                                                    arguments = J$.N(242513, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(242497, J$.C(13928, J$.B(15354, '===', J$.G(242457, J$.R(242449, 'this', this, false, false), 'type'), J$.G(242473, J$.R(242465, 'ServerType', ServerType, false, true), 'RSSecondary'))) ? J$._() : J$.G(242489, J$.R(242481, 'this', this, false, false), 'isWritable'));
                                                } catch (J$e) {
                                                    J$.Ex(243481, J$e);
                                                } finally {
                                                    if (J$.Fr(243489))
                                                        continue jalangiLabel9;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(242609, {
                                    key: J$.T(242537, 'isDataBearing', 21, false),
                                    get: J$.T(242601, function get() {
                                        jalangiLabel10:
                                            while (true) {
                                                try {
                                                    J$.Fe(242585, arguments.callee, this, arguments);
                                                    arguments = J$.N(242593, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(242577, J$.M(242569, J$.R(242545, 'DATA_BEARING_SERVER_TYPES', DATA_BEARING_SERVER_TYPES, false, true), 'has', false)(J$.G(242561, J$.R(242553, 'this', this, false, false), 'type')));
                                                } catch (J$e) {
                                                    J$.Ex(243497, J$e);
                                                } finally {
                                                    if (J$.Fr(243505))
                                                        continue jalangiLabel10;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(242689, {
                                    key: J$.T(242617, 'isWritable', 21, false),
                                    get: J$.T(242681, function get() {
                                        jalangiLabel11:
                                            while (true) {
                                                try {
                                                    J$.Fe(242665, arguments.callee, this, arguments);
                                                    arguments = J$.N(242673, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(242657, J$.M(242649, J$.R(242625, 'WRITABLE_SERVER_TYPES', WRITABLE_SERVER_TYPES, false, true), 'has', false)(J$.G(242641, J$.R(242633, 'this', this, false, false), 'type')));
                                                } catch (J$e) {
                                                    J$.Ex(243513, J$e);
                                                } finally {
                                                    if (J$.Fr(243521))
                                                        continue jalangiLabel11;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(242721, J$.R(242713, 'ServerDescription', ServerDescription, false, false));
                        } catch (J$e) {
                            J$.Ex(243529, J$e);
                        } finally {
                            if (J$.Fr(243537))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), ServerDescription, false, true);
            J$.P(243217, J$.I(typeof module === 'undefined' ? module = J$.R(243185, 'module', undefined, true, true) : module = J$.R(243185, 'module', module, true, true)), 'exports', J$.T(243209, {
                ServerDescription: J$.R(243193, 'ServerDescription', ServerDescription, false, true),
                ServerType: J$.R(243201, 'ServerType', ServerType, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(243561, J$e);
        } finally {
            if (J$.Sr(243569))
                continue jalangiLabel14;
            else
                break jalangiLabel14;
        }
    }
// JALANGI DO NOT INSTRUMENT

