J$.noInstrEval = false;
jalangiLabel20:
    while (true) {
        try {
            J$.Se(228609, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/sdam/monitoring.js');
            function _classCallCheck(instance, Constructor) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(225561, arguments.callee, this, arguments);
                            arguments = J$.N(225569, 'arguments', arguments, true, false, false);
                            instance = J$.N(225577, 'instance', instance, true, false, false);
                            Constructor = J$.N(225585, 'Constructor', Constructor, true, false, false);
                            if (J$.C(13112, J$.U(14882, '!', J$.B(14874, 'instanceof', J$.R(225521, 'instance', instance, false, false), J$.R(225529, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(225553, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(225537, 'TypeError', undefined, true, true) : TypeError = J$.R(225537, 'TypeError', TypeError, true, true)), true)(J$.T(225545, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(228753, J$e);
                        } finally {
                            if (J$.Fr(228761))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function monitorServer(server, options) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(228449, arguments.callee, this, arguments);
                            arguments = J$.N(228457, 'arguments', arguments, true, false, false);
                            server = J$.N(228465, 'server', server, true, false, false);
                            options = J$.N(228473, 'options', options, true, false, false);
                            J$.N(228481, 'heartbeatFrequencyMS', heartbeatFrequencyMS, false, false, false);
                            J$.N(228489, 'checkServer', checkServer, false, false, false);
                            J$.N(228497, 'successHandler', successHandler, false, false, false);
                            options = J$.W(226905, 'options', J$.C(13120, J$.R(226889, 'options', options, false, false)) ? J$._() : J$.T(226897, {}, 11, false), options, false, false);
                            var heartbeatFrequencyMS = J$.W(226937, 'heartbeatFrequencyMS', J$.C(13128, J$.G(226921, J$.R(226913, 'options', options, false, false), 'heartbeatFrequencyMS')) ? J$._() : J$.T(226929, 10000, 22, false), heartbeatFrequencyMS, false, false);
                            if (J$.C(13136, J$.B(14890, '===', J$.G(226953, J$.R(226945, 'options', options, false, false), 'initial'), J$.T(226961, true, 23, false)))) {
                                J$.P(227065, J$.G(226977, J$.R(226969, 'server', server, false, false), 's'), 'monitorId', J$.F(227057, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(226985, 'setTimeout', undefined, true, true) : setTimeout = J$.R(226985, 'setTimeout', setTimeout, true, true)), false)(J$.T(227041, function () {
                                    jalangiLabel10:
                                        while (true) {
                                            try {
                                                J$.Fe(227025, arguments.callee, this, arguments);
                                                arguments = J$.N(227033, 'arguments', arguments, true, false, false);
                                                return J$.Rt(227017, J$.F(227009, J$.R(226993, 'monitorServer', monitorServer, false, true), false)(J$.R(227001, 'server', server, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(228913, J$e);
                                            } finally {
                                                if (J$.Fr(228921))
                                                    continue jalangiLabel10;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.R(227049, 'heartbeatFrequencyMS', heartbeatFrequencyMS, false, false)));
                                return J$.Rt(227073, undefined);
                            }
                            var checkServer = J$.W(227721, 'checkServer', J$.T(227713, function checkServer(callback) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(227681, arguments.callee, this, arguments);
                                            arguments = J$.N(227689, 'arguments', arguments, true, false, false);
                                            callback = J$.N(227697, 'callback', callback, true, false, false);
                                            J$.N(227705, 'start', start, false, false, false);
                                            var start = J$.W(227097, 'start', J$.M(227089, J$.I(typeof process === 'undefined' ? process = J$.R(227081, 'process', undefined, true, true) : process = J$.R(227081, 'process', process, true, true)), 'hrtime', false)(), start, false, false);
                                            J$.M(227153, J$.R(227105, 'server', server, false, false), 'emit', false)(J$.T(227113, 'serverHeartbeatStarted', 21, false), J$.F(227145, J$.R(227121, 'ServerHeartbeatStartedEvent', ServerHeartbeatStartedEvent, false, true), true)(J$.G(227137, J$.R(227129, 'server', server, false, false), 'name')));
                                            J$.M(227233, J$.I(typeof process === 'undefined' ? process = J$.R(227161, 'process', undefined, true, true) : process = J$.R(227161, 'process', process, true, true)), 'nextTick', false)(J$.T(227225, function () {
                                                jalangiLabel11:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(227209, arguments.callee, this, arguments);
                                                            arguments = J$.N(227217, 'arguments', arguments, true, false, false);
                                                            return J$.Rt(227201, J$.M(227193, J$.R(227169, 'server', server, false, false), 'emit', false)(J$.T(227177, 'monitoring', 21, false), J$.R(227185, 'server', server, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(228929, J$e);
                                                        } finally {
                                                            if (J$.Fr(228937))
                                                                continue jalangiLabel11;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.M(227673, J$.R(227241, 'server', server, false, false), 'command', false)(J$.T(227249, 'admin.$cmd', 21, false), J$.T(227265, { ismaster: J$.T(227257, true, 23, false) }, 11, false), J$.T(227321, {
                                                monitoring: J$.T(227273, true, 23, false),
                                                socketTimeout: J$.C(13144, J$.G(227305, J$.G(227297, J$.G(227289, J$.R(227281, 'server', server, false, false), 's'), 'options'), 'connectionTimeout')) ? J$._() : J$.T(227313, 2000, 22, false)
                                            }, 11, false), J$.T(227665, function (err, result) {
                                                jalangiLabel12:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(227617, arguments.callee, this, arguments);
                                                            arguments = J$.N(227625, 'arguments', arguments, true, false, false);
                                                            err = J$.N(227633, 'err', err, true, false, false);
                                                            result = J$.N(227641, 'result', result, true, false, false);
                                                            J$.N(227649, 'duration', duration, false, false, false);
                                                            J$.N(227657, 'isMaster', isMaster, false, false, false);
                                                            var duration = J$.W(227353, 'duration', J$.F(227345, J$.R(227329, 'calculateDurationInMs', calculateDurationInMs, false, true), false)(J$.R(227337, 'start', start, false, false)), duration, false, false);
                                                            if (J$.C(13152, J$.R(227361, 'err', err, false, false))) {
                                                                J$.M(227433, J$.R(227369, 'server', server, false, false), 'emit', false)(J$.T(227377, 'serverHeartbeatFailed', 21, false), J$.F(227425, J$.R(227385, 'ServerHeartbeatFailedEvent', ServerHeartbeatFailedEvent, false, true), true)(J$.R(227393, 'duration', duration, false, false), J$.R(227401, 'err', err, false, false), J$.G(227417, J$.R(227409, 'server', server, false, false), 'name')));
                                                                return J$.Rt(227473, J$.F(227465, J$.R(227441, 'callback', callback, false, false), false)(J$.R(227449, 'err', err, false, false), J$.T(227457, null, 25, false)));
                                                            }
                                                            var isMaster = J$.W(227497, 'isMaster', J$.G(227489, J$.R(227481, 'result', result, false, false), 'result'), isMaster, false, false);
                                                            J$.M(227569, J$.R(227505, 'server', server, false, false), 'emit', false)(J$.T(227513, 'serverHeartbeatSucceeded', 21, false), J$.F(227561, J$.R(227521, 'ServerHeartbeatSucceededEvent', ServerHeartbeatSucceededEvent, false, true), true)(J$.R(227529, 'duration', duration, false, false), J$.R(227537, 'isMaster', isMaster, false, false), J$.G(227553, J$.R(227545, 'server', server, false, false), 'name')));
                                                            return J$.Rt(227609, J$.F(227601, J$.R(227577, 'callback', callback, false, false), false)(J$.T(227585, null, 25, false), J$.R(227593, 'isMaster', isMaster, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(228945, J$e);
                                                        } finally {
                                                            if (J$.Fr(228953))
                                                                continue jalangiLabel12;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(228961, J$e);
                                        } finally {
                                            if (J$.Fr(228969))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), checkServer, false, false);
                            var successHandler = J$.W(228041, 'successHandler', J$.T(228033, function successHandler(isMaster) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(228009, arguments.callee, this, arguments);
                                            arguments = J$.N(228017, 'arguments', arguments, true, false, false);
                                            isMaster = J$.N(228025, 'isMaster', isMaster, true, false, false);
                                            J$.P(227753, J$.G(227737, J$.R(227729, 'server', server, false, false), 's'), 'monitoring', J$.T(227745, false, 23, false));
                                            J$.M(227825, J$.R(227761, 'server', server, false, false), 'emit', false)(J$.T(227769, 'descriptionReceived', 21, false), J$.F(227817, J$.R(227777, 'ServerDescription', ServerDescription, false, true), true)(J$.G(227801, J$.G(227793, J$.R(227785, 'server', server, false, false), 'description'), 'address'), J$.R(227809, 'isMaster', isMaster, false, false)));
                                            if (J$.C(13168, J$.C(13160, J$.B(14898, '===', J$.G(227849, J$.G(227841, J$.R(227833, 'server', server, false, false), 's'), 'state'), J$.R(227857, 'STATE_DISCONNECTED', STATE_DISCONNECTED, false, true))) ? J$._() : J$.B(14906, '===', J$.G(227881, J$.G(227873, J$.R(227865, 'server', server, false, false), 's'), 'state'), J$.R(227889, 'STATE_DISCONNECTING', STATE_DISCONNECTING, false, true)))) {
                                                return J$.Rt(227897, undefined);
                                            }
                                            J$.P(228001, J$.G(227913, J$.R(227905, 'server', server, false, false), 's'), 'monitorId', J$.F(227993, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(227921, 'setTimeout', undefined, true, true) : setTimeout = J$.R(227921, 'setTimeout', setTimeout, true, true)), false)(J$.T(227977, function () {
                                                jalangiLabel14:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(227961, arguments.callee, this, arguments);
                                                            arguments = J$.N(227969, 'arguments', arguments, true, false, false);
                                                            return J$.Rt(227953, J$.F(227945, J$.R(227929, 'monitorServer', monitorServer, false, true), false)(J$.R(227937, 'server', server, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(228977, J$e);
                                                        } finally {
                                                            if (J$.Fr(228985))
                                                                continue jalangiLabel14;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.R(227985, 'heartbeatFrequencyMS', heartbeatFrequencyMS, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(228993, J$e);
                                        } finally {
                                            if (J$.Fr(229001))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), successHandler, false, false);
                            J$.P(228073, J$.G(228057, J$.R(228049, 'server', server, false, false), 's'), 'monitoring', J$.T(228065, true, 23, false));
                            J$.F(228441, J$.R(228081, 'checkServer', checkServer, false, false), false)(J$.T(228433, function (err, isMaster) {
                                jalangiLabel18:
                                    while (true) {
                                        try {
                                            J$.Fe(228401, arguments.callee, this, arguments);
                                            arguments = J$.N(228409, 'arguments', arguments, true, false, false);
                                            err = J$.N(228417, 'err', err, true, false, false);
                                            isMaster = J$.N(228425, 'isMaster', isMaster, true, false, false);
                                            if (J$.C(13176, J$.U(14914, '!', J$.R(228089, 'err', err, false, false)))) {
                                                J$.F(228113, J$.R(228097, 'successHandler', successHandler, false, false), false)(J$.R(228105, 'isMaster', isMaster, false, false));
                                                return J$.Rt(228121, undefined);
                                            }
                                            J$.M(228393, J$.G(228145, J$.G(228137, J$.R(228129, 'server', server, false, false), 's'), 'pool'), 'reset', false)(J$.T(228385, function () {
                                                jalangiLabel17:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(228369, arguments.callee, this, arguments);
                                                            arguments = J$.N(228377, 'arguments', arguments, true, false, false);
                                                            J$.F(228361, J$.R(228153, 'checkServer', checkServer, false, false), false)(J$.T(228353, function (error, isMaster) {
                                                                jalangiLabel16:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(228321, arguments.callee, this, arguments);
                                                                            arguments = J$.N(228329, 'arguments', arguments, true, false, false);
                                                                            error = J$.N(228337, 'error', error, true, false, false);
                                                                            isMaster = J$.N(228345, 'isMaster', isMaster, true, false, false);
                                                                            if (J$.C(13184, J$.R(228161, 'error', error, false, false))) {
                                                                                J$.P(228193, J$.G(228177, J$.R(228169, 'server', server, false, false), 's'), 'monitoring', J$.T(228185, false, 23, false));
                                                                                J$.M(228281, J$.R(228201, 'server', server, false, false), 'emit', false)(J$.T(228209, 'descriptionReceived', 21, false), J$.F(228273, J$.R(228217, 'ServerDescription', ServerDescription, false, true), true)(J$.G(228241, J$.G(228233, J$.R(228225, 'server', server, false, false), 'description'), 'address'), J$.T(228249, null, 25, false), J$.T(228265, { error: J$.R(228257, 'error', error, false, false) }, 11, false)));
                                                                                return J$.Rt(228289, undefined);
                                                                            }
                                                                            J$.F(228313, J$.R(228297, 'successHandler', successHandler, false, false), false)(J$.R(228305, 'isMaster', isMaster, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(229009, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(229017))
                                                                                continue jalangiLabel16;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(229025, J$e);
                                                        } finally {
                                                            if (J$.Fr(229033))
                                                                continue jalangiLabel17;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(229041, J$e);
                                        } finally {
                                            if (J$.Fr(229049))
                                                continue jalangiLabel18;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(229057, J$e);
                        } finally {
                            if (J$.Fr(229065))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _classCallCheck = J$.N(228625, '_classCallCheck', J$.T(228617, _classCallCheck, 12, false), true, false, false);
            J$.N(228633, 'ServerDescription', ServerDescription, false, false, false);
            J$.N(228641, 'calculateDurationInMs', calculateDurationInMs, false, false, false);
            J$.N(228649, 'STATE_DISCONNECTED', STATE_DISCONNECTED, false, false, false);
            J$.N(228657, 'STATE_DISCONNECTING', STATE_DISCONNECTING, false, false, false);
            J$.N(228665, 'ServerDescriptionChangedEvent', ServerDescriptionChangedEvent, false, false, false);
            J$.N(228673, 'ServerOpeningEvent', ServerOpeningEvent, false, false, false);
            J$.N(228681, 'ServerClosedEvent', ServerClosedEvent, false, false, false);
            J$.N(228689, 'TopologyDescriptionChangedEvent', TopologyDescriptionChangedEvent, false, false, false);
            J$.N(228697, 'TopologyOpeningEvent', TopologyOpeningEvent, false, false, false);
            J$.N(228705, 'TopologyClosedEvent', TopologyClosedEvent, false, false, false);
            J$.N(228713, 'ServerHeartbeatStartedEvent', ServerHeartbeatStartedEvent, false, false, false);
            J$.N(228721, 'ServerHeartbeatSucceededEvent', ServerHeartbeatSucceededEvent, false, false, false);
            J$.N(228729, 'ServerHeartbeatFailedEvent', ServerHeartbeatFailedEvent, false, false, false);
            monitorServer = J$.N(228745, 'monitorServer', J$.T(228737, monitorServer, 12, false), true, false, false);
            J$.T(225513, 'use strict', 21, false);
            var ServerDescription = J$.W(225625, 'ServerDescription', J$.G(225617, J$.F(225609, J$.I(typeof require === 'undefined' ? require = J$.R(225593, 'require', undefined, true, true) : require = J$.R(225593, 'require', require, true, true)), false)(J$.T(225601, './server_description', 21, false)), 'ServerDescription'), ServerDescription, false, true);
            var calculateDurationInMs = J$.W(225665, 'calculateDurationInMs', J$.G(225657, J$.F(225649, J$.I(typeof require === 'undefined' ? require = J$.R(225633, 'require', undefined, true, true) : require = J$.R(225633, 'require', require, true, true)), false)(J$.T(225641, '../utils', 21, false)), 'calculateDurationInMs'), calculateDurationInMs, false, true);
            var STATE_DISCONNECTED = J$.W(225681, 'STATE_DISCONNECTED', J$.T(225673, 'disconnected', 21, false), STATE_DISCONNECTED, false, true);
            var STATE_DISCONNECTING = J$.W(225697, 'STATE_DISCONNECTING', J$.T(225689, 'disconnecting', 21, false), STATE_DISCONNECTING, false, true);
            var ServerDescriptionChangedEvent = J$.W(225857, 'ServerDescriptionChangedEvent', J$.T(225849, function ServerDescriptionChangedEvent(topologyId, address, previousDescription, newDescription) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(225801, arguments.callee, this, arguments);
                            arguments = J$.N(225809, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(225817, 'topologyId', topologyId, true, false, false);
                            address = J$.N(225825, 'address', address, true, false, false);
                            previousDescription = J$.N(225833, 'previousDescription', previousDescription, true, false, false);
                            newDescription = J$.N(225841, 'newDescription', newDescription, true, false, false);
                            J$.F(225729, J$.R(225705, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(225713, 'this', this, false, false), J$.R(225721, 'ServerDescriptionChangedEvent', ServerDescriptionChangedEvent, false, false));
                            J$.M(225793, J$.I(typeof Object === 'undefined' ? Object = J$.R(225737, 'Object', undefined, true, true) : Object = J$.R(225737, 'Object', Object, true, true)), 'assign', false)(J$.R(225745, 'this', this, false, false), J$.T(225785, {
                                topologyId: J$.R(225753, 'topologyId', topologyId, false, false),
                                address: J$.R(225761, 'address', address, false, false),
                                previousDescription: J$.R(225769, 'previousDescription', previousDescription, false, false),
                                newDescription: J$.R(225777, 'newDescription', newDescription, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(228769, J$e);
                        } finally {
                            if (J$.Fr(228777))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerDescriptionChangedEvent, false, true);
            var ServerOpeningEvent = J$.W(225985, 'ServerOpeningEvent', J$.T(225977, function ServerOpeningEvent(topologyId, address) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(225945, arguments.callee, this, arguments);
                            arguments = J$.N(225953, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(225961, 'topologyId', topologyId, true, false, false);
                            address = J$.N(225969, 'address', address, true, false, false);
                            J$.F(225889, J$.R(225865, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(225873, 'this', this, false, false), J$.R(225881, 'ServerOpeningEvent', ServerOpeningEvent, false, false));
                            J$.M(225937, J$.I(typeof Object === 'undefined' ? Object = J$.R(225897, 'Object', undefined, true, true) : Object = J$.R(225897, 'Object', Object, true, true)), 'assign', false)(J$.R(225905, 'this', this, false, false), J$.T(225929, {
                                topologyId: J$.R(225913, 'topologyId', topologyId, false, false),
                                address: J$.R(225921, 'address', address, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(228785, J$e);
                        } finally {
                            if (J$.Fr(228793))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerOpeningEvent, false, true);
            var ServerClosedEvent = J$.W(226113, 'ServerClosedEvent', J$.T(226105, function ServerClosedEvent(topologyId, address) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(226073, arguments.callee, this, arguments);
                            arguments = J$.N(226081, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(226089, 'topologyId', topologyId, true, false, false);
                            address = J$.N(226097, 'address', address, true, false, false);
                            J$.F(226017, J$.R(225993, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(226001, 'this', this, false, false), J$.R(226009, 'ServerClosedEvent', ServerClosedEvent, false, false));
                            J$.M(226065, J$.I(typeof Object === 'undefined' ? Object = J$.R(226025, 'Object', undefined, true, true) : Object = J$.R(226025, 'Object', Object, true, true)), 'assign', false)(J$.R(226033, 'this', this, false, false), J$.T(226057, {
                                topologyId: J$.R(226041, 'topologyId', topologyId, false, false),
                                address: J$.R(226049, 'address', address, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(228801, J$e);
                        } finally {
                            if (J$.Fr(228809))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerClosedEvent, false, true);
            var TopologyDescriptionChangedEvent = J$.W(226257, 'TopologyDescriptionChangedEvent', J$.T(226249, function TopologyDescriptionChangedEvent(topologyId, previousDescription, newDescription) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(226209, arguments.callee, this, arguments);
                            arguments = J$.N(226217, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(226225, 'topologyId', topologyId, true, false, false);
                            previousDescription = J$.N(226233, 'previousDescription', previousDescription, true, false, false);
                            newDescription = J$.N(226241, 'newDescription', newDescription, true, false, false);
                            J$.F(226145, J$.R(226121, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(226129, 'this', this, false, false), J$.R(226137, 'TopologyDescriptionChangedEvent', TopologyDescriptionChangedEvent, false, false));
                            J$.M(226201, J$.I(typeof Object === 'undefined' ? Object = J$.R(226153, 'Object', undefined, true, true) : Object = J$.R(226153, 'Object', Object, true, true)), 'assign', false)(J$.R(226161, 'this', this, false, false), J$.T(226193, {
                                topologyId: J$.R(226169, 'topologyId', topologyId, false, false),
                                previousDescription: J$.R(226177, 'previousDescription', previousDescription, false, false),
                                newDescription: J$.R(226185, 'newDescription', newDescription, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(228817, J$e);
                        } finally {
                            if (J$.Fr(228825))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), TopologyDescriptionChangedEvent, false, true);
            var TopologyOpeningEvent = J$.W(226369, 'TopologyOpeningEvent', J$.T(226361, function TopologyOpeningEvent(topologyId) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(226337, arguments.callee, this, arguments);
                            arguments = J$.N(226345, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(226353, 'topologyId', topologyId, true, false, false);
                            J$.F(226289, J$.R(226265, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(226273, 'this', this, false, false), J$.R(226281, 'TopologyOpeningEvent', TopologyOpeningEvent, false, false));
                            J$.M(226329, J$.I(typeof Object === 'undefined' ? Object = J$.R(226297, 'Object', undefined, true, true) : Object = J$.R(226297, 'Object', Object, true, true)), 'assign', false)(J$.R(226305, 'this', this, false, false), J$.T(226321, { topologyId: J$.R(226313, 'topologyId', topologyId, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(228833, J$e);
                        } finally {
                            if (J$.Fr(228841))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), TopologyOpeningEvent, false, true);
            var TopologyClosedEvent = J$.W(226481, 'TopologyClosedEvent', J$.T(226473, function TopologyClosedEvent(topologyId) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(226449, arguments.callee, this, arguments);
                            arguments = J$.N(226457, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(226465, 'topologyId', topologyId, true, false, false);
                            J$.F(226401, J$.R(226377, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(226385, 'this', this, false, false), J$.R(226393, 'TopologyClosedEvent', TopologyClosedEvent, false, false));
                            J$.M(226441, J$.I(typeof Object === 'undefined' ? Object = J$.R(226409, 'Object', undefined, true, true) : Object = J$.R(226409, 'Object', Object, true, true)), 'assign', false)(J$.R(226417, 'this', this, false, false), J$.T(226433, { topologyId: J$.R(226425, 'topologyId', topologyId, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(228849, J$e);
                        } finally {
                            if (J$.Fr(228857))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), TopologyClosedEvent, false, true);
            var ServerHeartbeatStartedEvent = J$.W(226593, 'ServerHeartbeatStartedEvent', J$.T(226585, function ServerHeartbeatStartedEvent(connectionId) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(226561, arguments.callee, this, arguments);
                            arguments = J$.N(226569, 'arguments', arguments, true, false, false);
                            connectionId = J$.N(226577, 'connectionId', connectionId, true, false, false);
                            J$.F(226513, J$.R(226489, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(226497, 'this', this, false, false), J$.R(226505, 'ServerHeartbeatStartedEvent', ServerHeartbeatStartedEvent, false, false));
                            J$.M(226553, J$.I(typeof Object === 'undefined' ? Object = J$.R(226521, 'Object', undefined, true, true) : Object = J$.R(226521, 'Object', Object, true, true)), 'assign', false)(J$.R(226529, 'this', this, false, false), J$.T(226545, { connectionId: J$.R(226537, 'connectionId', connectionId, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(228865, J$e);
                        } finally {
                            if (J$.Fr(228873))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerHeartbeatStartedEvent, false, true);
            var ServerHeartbeatSucceededEvent = J$.W(226737, 'ServerHeartbeatSucceededEvent', J$.T(226729, function ServerHeartbeatSucceededEvent(duration, reply, connectionId) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(226689, arguments.callee, this, arguments);
                            arguments = J$.N(226697, 'arguments', arguments, true, false, false);
                            duration = J$.N(226705, 'duration', duration, true, false, false);
                            reply = J$.N(226713, 'reply', reply, true, false, false);
                            connectionId = J$.N(226721, 'connectionId', connectionId, true, false, false);
                            J$.F(226625, J$.R(226601, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(226609, 'this', this, false, false), J$.R(226617, 'ServerHeartbeatSucceededEvent', ServerHeartbeatSucceededEvent, false, false));
                            J$.M(226681, J$.I(typeof Object === 'undefined' ? Object = J$.R(226633, 'Object', undefined, true, true) : Object = J$.R(226633, 'Object', Object, true, true)), 'assign', false)(J$.R(226641, 'this', this, false, false), J$.T(226673, {
                                duration: J$.R(226649, 'duration', duration, false, false),
                                reply: J$.R(226657, 'reply', reply, false, false),
                                connectionId: J$.R(226665, 'connectionId', connectionId, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(228881, J$e);
                        } finally {
                            if (J$.Fr(228889))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerHeartbeatSucceededEvent, false, true);
            var ServerHeartbeatFailedEvent = J$.W(226881, 'ServerHeartbeatFailedEvent', J$.T(226873, function ServerHeartbeatFailedEvent(duration, failure, connectionId) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(226833, arguments.callee, this, arguments);
                            arguments = J$.N(226841, 'arguments', arguments, true, false, false);
                            duration = J$.N(226849, 'duration', duration, true, false, false);
                            failure = J$.N(226857, 'failure', failure, true, false, false);
                            connectionId = J$.N(226865, 'connectionId', connectionId, true, false, false);
                            J$.F(226769, J$.R(226745, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(226753, 'this', this, false, false), J$.R(226761, 'ServerHeartbeatFailedEvent', ServerHeartbeatFailedEvent, false, false));
                            J$.M(226825, J$.I(typeof Object === 'undefined' ? Object = J$.R(226777, 'Object', undefined, true, true) : Object = J$.R(226777, 'Object', Object, true, true)), 'assign', false)(J$.R(226785, 'this', this, false, false), J$.T(226817, {
                                duration: J$.R(226793, 'duration', duration, false, false),
                                failure: J$.R(226801, 'failure', failure, false, false),
                                connectionId: J$.R(226809, 'connectionId', connectionId, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(228897, J$e);
                        } finally {
                            if (J$.Fr(228905))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerHeartbeatFailedEvent, false, true);
            J$.P(228601, J$.I(typeof module === 'undefined' ? module = J$.R(228505, 'module', undefined, true, true) : module = J$.R(228505, 'module', module, true, true)), 'exports', J$.T(228593, {
                ServerDescriptionChangedEvent: J$.R(228513, 'ServerDescriptionChangedEvent', ServerDescriptionChangedEvent, false, true),
                ServerOpeningEvent: J$.R(228521, 'ServerOpeningEvent', ServerOpeningEvent, false, true),
                ServerClosedEvent: J$.R(228529, 'ServerClosedEvent', ServerClosedEvent, false, true),
                TopologyDescriptionChangedEvent: J$.R(228537, 'TopologyDescriptionChangedEvent', TopologyDescriptionChangedEvent, false, true),
                TopologyOpeningEvent: J$.R(228545, 'TopologyOpeningEvent', TopologyOpeningEvent, false, true),
                TopologyClosedEvent: J$.R(228553, 'TopologyClosedEvent', TopologyClosedEvent, false, true),
                ServerHeartbeatStartedEvent: J$.R(228561, 'ServerHeartbeatStartedEvent', ServerHeartbeatStartedEvent, false, true),
                ServerHeartbeatSucceededEvent: J$.R(228569, 'ServerHeartbeatSucceededEvent', ServerHeartbeatSucceededEvent, false, true),
                ServerHeartbeatFailedEvent: J$.R(228577, 'ServerHeartbeatFailedEvent', ServerHeartbeatFailedEvent, false, true),
                monitorServer: J$.R(228585, 'monitorServer', monitorServer, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(229073, J$e);
        } finally {
            if (J$.Sr(229081))
                continue jalangiLabel20;
            else
                break jalangiLabel20;
        }
    }
// JALANGI DO NOT INSTRUMENT

