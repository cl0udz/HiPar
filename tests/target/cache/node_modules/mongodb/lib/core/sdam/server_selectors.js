J$.noInstrEval = false;
jalangiLabel23:
    while (true) {
        try {
            J$.Se(248137, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/sdam/server_selectors.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(243849, arguments.callee, this, arguments);
                            arguments = J$.N(243857, 'arguments', arguments, true, false, false);
                            obj = J$.N(243865, 'obj', obj, true, false, false);
                            if (J$.C(14056, J$.C(14016, J$.B(15394, '===', J$.U(15386, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(243585, 'Symbol', undefined, true, true) : Symbol = J$.R(243585, 'Symbol', Symbol, true, true))), J$.T(243593, 'function', 21, false))) ? J$.B(15410, '===', J$.U(15402, 'typeof', J$.G(243609, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(243601, 'Symbol', undefined, true, true) : Symbol = J$.R(243601, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(243617, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(243673, '_typeof', J$.T(243665, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(243641, arguments.callee, this, arguments);
                                                arguments = J$.N(243649, 'arguments', arguments, true, false, false);
                                                obj = J$.N(243657, 'obj', obj, true, false, false);
                                                return J$.Rt(243633, J$.U(15418, 'typeof', J$.R(243625, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(248369, J$e);
                                            } finally {
                                                if (J$.Fr(248377))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(243809, '_typeof', J$.T(243801, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(243777, arguments.callee, this, arguments);
                                                arguments = J$.N(243785, 'arguments', arguments, true, false, false);
                                                obj = J$.N(243793, 'obj', obj, true, false, false);
                                                return J$.Rt(243769, J$.C(14048, J$.C(14040, J$.C(14032, J$.C(14024, J$.R(243681, 'obj', obj, false, false)) ? J$.B(15434, '===', J$.U(15426, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(243689, 'Symbol', undefined, true, true) : Symbol = J$.R(243689, 'Symbol', Symbol, true, true))), J$.T(243697, 'function', 21, false)) : J$._()) ? J$.B(15442, '===', J$.G(243713, J$.R(243705, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(243721, 'Symbol', undefined, true, true) : Symbol = J$.R(243721, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(15450, '!==', J$.R(243729, 'obj', obj, false, false), J$.G(243745, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(243737, 'Symbol', undefined, true, true) : Symbol = J$.R(243737, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(243753, 'symbol', 21, false) : J$.U(15458, 'typeof', J$.R(243761, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(248385, J$e);
                                            } finally {
                                                if (J$.Fr(248393))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(243841, J$.F(243833, J$.R(243817, '_typeof', _typeof, false, true), false)(J$.R(243825, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(248401, J$e);
                        } finally {
                            if (J$.Fr(248409))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writableServerSelector() {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(244209, arguments.callee, this, arguments);
                            arguments = J$.N(244217, 'arguments', arguments, true, false, false);
                            return J$.Rt(244201, J$.T(244193, function (topologyDescription, servers) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(244161, arguments.callee, this, arguments);
                                            arguments = J$.N(244169, 'arguments', arguments, true, false, false);
                                            topologyDescription = J$.N(244177, 'topologyDescription', topologyDescription, true, false, false);
                                            servers = J$.N(244185, 'servers', servers, true, false, false);
                                            return J$.Rt(244153, J$.F(244145, J$.R(244057, 'latencyWindowReducer', latencyWindowReducer, false, true), false)(J$.R(244065, 'topologyDescription', topologyDescription, false, false), J$.M(244137, J$.R(244073, 'servers', servers, false, false), 'filter', false)(J$.T(244129, function (s) {
                                                jalangiLabel3:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(244105, arguments.callee, this, arguments);
                                                            arguments = J$.N(244113, 'arguments', arguments, true, false, false);
                                                            s = J$.N(244121, 's', s, true, false, false);
                                                            return J$.Rt(244097, J$.G(244089, J$.R(244081, 's', s, false, false), 'isWritable'));
                                                        } catch (J$e) {
                                                            J$.Ex(248417, J$e);
                                                        } finally {
                                                            if (J$.Fr(248425))
                                                                continue jalangiLabel3;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false))));
                                        } catch (J$e) {
                                            J$.Ex(248433, J$e);
                                        } finally {
                                            if (J$.Fr(248441))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(248449, J$e);
                        } finally {
                            if (J$.Fr(248457))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function maxStalenessReducer(readPreference, topologyDescription, servers) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(245225, arguments.callee, this, arguments);
                            arguments = J$.N(245233, 'arguments', arguments, true, false, false);
                            readPreference = J$.N(245241, 'readPreference', readPreference, true, false, false);
                            topologyDescription = J$.N(245249, 'topologyDescription', topologyDescription, true, false, false);
                            servers = J$.N(245257, 'servers', servers, true, false, false);
                            J$.N(245265, 'maxStaleness', maxStaleness, false, false, false);
                            J$.N(245273, 'maxStalenessVariance', maxStalenessVariance, false, false, false);
                            J$.N(245281, 'primary', primary, false, false, false);
                            J$.N(245289, 'sMax', sMax, false, false, false);
                            if (J$.C(14072, J$.C(14064, J$.B(15466, '==', J$.G(244233, J$.R(244225, 'readPreference', readPreference, false, false), 'maxStalenessSeconds'), J$.T(244241, null, 25, false))) ? J$._() : J$.B(15474, '<', J$.G(244257, J$.R(244249, 'readPreference', readPreference, false, false), 'maxStalenessSeconds'), J$.T(244265, 0, 22, false)))) {
                                return J$.Rt(244281, J$.R(244273, 'servers', servers, false, false));
                            }
                            var maxStaleness = J$.W(244305, 'maxStaleness', J$.G(244297, J$.R(244289, 'readPreference', readPreference, false, false), 'maxStalenessSeconds'), maxStaleness, false, false);
                            var maxStalenessVariance = J$.W(244345, 'maxStalenessVariance', J$.B(15490, '/', J$.B(15482, '+', J$.G(244321, J$.R(244313, 'topologyDescription', topologyDescription, false, false), 'heartbeatFrequencyMS'), J$.R(244329, 'IDLE_WRITE_PERIOD', IDLE_WRITE_PERIOD, false, true)), J$.T(244337, 1000, 22, false)), maxStalenessVariance, false, false);
                            if (J$.C(14080, J$.B(15498, '<', J$.R(244353, 'maxStaleness', maxStaleness, false, false), J$.R(244361, 'maxStalenessVariance', maxStalenessVariance, false, false)))) {
                                throw J$.F(244409, J$.R(244369, 'MongoError', MongoError, false, true), true)(J$.M(244401, J$.T(244377, 'maxStalenessSeconds must be at least ', 21, false), 'concat', false)(J$.R(244385, 'maxStalenessVariance', maxStalenessVariance, false, false), J$.T(244393, ' seconds', 21, false)));
                            }
                            if (J$.C(14088, J$.B(15506, '<', J$.R(244417, 'maxStaleness', maxStaleness, false, false), J$.R(244425, 'SMALLEST_MAX_STALENESS_SECONDS', SMALLEST_MAX_STALENESS_SECONDS, false, true)))) {
                                throw J$.F(244473, J$.R(244433, 'MongoError', MongoError, false, true), true)(J$.M(244465, J$.T(244441, 'maxStalenessSeconds must be at least ', 21, false), 'concat', false)(J$.R(244449, 'SMALLEST_MAX_STALENESS_SECONDS', SMALLEST_MAX_STALENESS_SECONDS, false, true), J$.T(244457, ' seconds', 21, false)));
                            }
                            if (J$.C(14128, J$.B(15514, '===', J$.G(244489, J$.R(244481, 'topologyDescription', topologyDescription, false, false), 'type'), J$.G(244505, J$.R(244497, 'TopologyType', TopologyType, false, true), 'ReplicaSetWithPrimary')))) {
                                var primary = J$.W(244553, 'primary', J$.G(244545, J$.M(244529, J$.R(244513, 'servers', servers, false, false), 'filter', false)(J$.R(244521, 'primaryFilter', primaryFilter, false, true)), J$.T(244537, 0, 22, false)), primary, false, false);
                                return J$.Rt(244817, J$.M(244809, J$.R(244561, 'servers', servers, false, false), 'reduce', false)(J$.T(244793, function (result, server) {
                                    jalangiLabel6:
                                        while (true) {
                                            try {
                                                J$.Fe(244745, arguments.callee, this, arguments);
                                                arguments = J$.N(244753, 'arguments', arguments, true, false, false);
                                                result = J$.N(244761, 'result', result, true, false, false);
                                                server = J$.N(244769, 'server', server, true, false, false);
                                                J$.N(244777, 'stalenessMS', stalenessMS, false, false, false);
                                                J$.N(244785, 'staleness', staleness, false, false, false);
                                                var stalenessMS = J$.W(244649, 'stalenessMS', J$.B(15546, '+', J$.B(15538, '-', J$.B(15522, '-', J$.G(244577, J$.R(244569, 'server', server, false, false), 'lastUpdateTime'), J$.G(244593, J$.R(244585, 'server', server, false, false), 'lastWriteDate')), J$.B(15530, '-', J$.G(244609, J$.R(244601, 'primary', primary, false, false), 'lastUpdateTime'), J$.G(244625, J$.R(244617, 'primary', primary, false, false), 'lastWriteDate'))), J$.G(244641, J$.R(244633, 'topologyDescription', topologyDescription, false, false), 'heartbeatFrequencyMS')), stalenessMS, false, false);
                                                var staleness = J$.W(244673, 'staleness', J$.B(15554, '/', J$.R(244657, 'stalenessMS', stalenessMS, false, false), J$.T(244665, 1000, 22, false)), staleness, false, false);
                                                if (J$.C(14096, J$.B(15562, '<=', J$.R(244681, 'staleness', staleness, false, false), J$.G(244697, J$.R(244689, 'readPreference', readPreference, false, false), 'maxStalenessSeconds'))))
                                                    J$.M(244721, J$.R(244705, 'result', result, false, false), 'push', false)(J$.R(244713, 'server', server, false, false));
                                                return J$.Rt(244737, J$.R(244729, 'result', result, false, false));
                                            } catch (J$e) {
                                                J$.Ex(248465, J$e);
                                            } finally {
                                                if (J$.Fr(248473))
                                                    continue jalangiLabel6;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.T(244801, [], 10, false)));
                            } else if (J$.C(14120, J$.B(15570, '===', J$.G(244833, J$.R(244825, 'topologyDescription', topologyDescription, false, false), 'type'), J$.G(244849, J$.R(244841, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary')))) {
                                var sMax = J$.W(244969, 'sMax', J$.M(244961, J$.R(244857, 'servers', servers, false, false), 'reduce', false)(J$.T(244953, function (max, s) {
                                    jalangiLabel7:
                                        while (true) {
                                            try {
                                                J$.Fe(244921, arguments.callee, this, arguments);
                                                arguments = J$.N(244929, 'arguments', arguments, true, false, false);
                                                max = J$.N(244937, 'max', max, true, false, false);
                                                s = J$.N(244945, 's', s, true, false, false);
                                                return J$.Rt(244913, J$.C(14104, J$.B(15578, '>', J$.G(244873, J$.R(244865, 's', s, false, false), 'lastWriteDate'), J$.G(244889, J$.R(244881, 'max', max, false, false), 'lastWriteDate'))) ? J$.R(244897, 's', s, false, false) : J$.R(244905, 'max', max, false, false));
                                            } catch (J$e) {
                                                J$.Ex(248481, J$e);
                                            } finally {
                                                if (J$.Fr(248489))
                                                    continue jalangiLabel7;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), sMax, false, false);
                                return J$.Rt(245201, J$.M(245193, J$.R(244977, 'servers', servers, false, false), 'reduce', false)(J$.T(245177, function (result, server) {
                                    jalangiLabel8:
                                        while (true) {
                                            try {
                                                J$.Fe(245129, arguments.callee, this, arguments);
                                                arguments = J$.N(245137, 'arguments', arguments, true, false, false);
                                                result = J$.N(245145, 'result', result, true, false, false);
                                                server = J$.N(245153, 'server', server, true, false, false);
                                                J$.N(245161, 'stalenessMS', stalenessMS, false, false, false);
                                                J$.N(245169, 'staleness', staleness, false, false, false);
                                                var stalenessMS = J$.W(245033, 'stalenessMS', J$.B(15594, '+', J$.B(15586, '-', J$.G(244993, J$.R(244985, 'sMax', sMax, false, false), 'lastWriteDate'), J$.G(245009, J$.R(245001, 'server', server, false, false), 'lastWriteDate')), J$.G(245025, J$.R(245017, 'topologyDescription', topologyDescription, false, false), 'heartbeatFrequencyMS')), stalenessMS, false, false);
                                                var staleness = J$.W(245057, 'staleness', J$.B(15602, '/', J$.R(245041, 'stalenessMS', stalenessMS, false, false), J$.T(245049, 1000, 22, false)), staleness, false, false);
                                                if (J$.C(14112, J$.B(15610, '<=', J$.R(245065, 'staleness', staleness, false, false), J$.G(245081, J$.R(245073, 'readPreference', readPreference, false, false), 'maxStalenessSeconds'))))
                                                    J$.M(245105, J$.R(245089, 'result', result, false, false), 'push', false)(J$.R(245097, 'server', server, false, false));
                                                return J$.Rt(245121, J$.R(245113, 'result', result, false, false));
                                            } catch (J$e) {
                                                J$.Ex(248497, J$e);
                                            } finally {
                                                if (J$.Fr(248505))
                                                    continue jalangiLabel8;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.T(245185, [], 10, false)));
                            }
                            return J$.Rt(245217, J$.R(245209, 'servers', servers, false, false));
                        } catch (J$e) {
                            J$.Ex(248513, J$e);
                        } finally {
                            if (J$.Fr(248521))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tagSetMatch(tagSet, serverTags) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(245561, arguments.callee, this, arguments);
                            arguments = J$.N(245569, 'arguments', arguments, true, false, false);
                            tagSet = J$.N(245577, 'tagSet', tagSet, true, false, false);
                            serverTags = J$.N(245585, 'serverTags', serverTags, true, false, false);
                            J$.N(245593, 'keys', keys, false, false, false);
                            J$.N(245601, 'serverTagKeys', serverTagKeys, false, false, false);
                            J$.N(245609, 'i', i, false, false, false);
                            J$.N(245617, 'key', key, false, false, false);
                            var keys = J$.W(245321, 'keys', J$.M(245313, J$.I(typeof Object === 'undefined' ? Object = J$.R(245297, 'Object', undefined, true, true) : Object = J$.R(245297, 'Object', Object, true, true)), 'keys', false)(J$.R(245305, 'tagSet', tagSet, false, false)), keys, false, false);
                            var serverTagKeys = J$.W(245353, 'serverTagKeys', J$.M(245345, J$.I(typeof Object === 'undefined' ? Object = J$.R(245329, 'Object', undefined, true, true) : Object = J$.R(245329, 'Object', Object, true, true)), 'keys', false)(J$.R(245337, 'serverTags', serverTags, false, false)), serverTagKeys, false, false);
                            for (var i = J$.W(245369, 'i', J$.T(245361, 0, 22, false), i, false, false); J$.C(14152, J$.B(15618, '<', J$.R(245377, 'i', i, false, false), J$.G(245393, J$.R(245385, 'keys', keys, false, false), 'length'))); i = J$.W(245409, 'i', J$.B(15634, '+', J$.U(15626, '+', J$.R(245401, 'i', i, false, false)), 1), i, false, false)) {
                                var key = J$.W(245441, 'key', J$.G(245433, J$.R(245417, 'keys', keys, false, false), J$.R(245425, 'i', i, false, false)), key, false, false);
                                if (J$.C(14144, J$.C(14136, J$.B(15650, '===', J$.M(245465, J$.R(245449, 'serverTagKeys', serverTagKeys, false, false), 'indexOf', false)(J$.R(245457, 'key', key, false, false)), J$.U(15642, '-', J$.T(245473, 1, 22, false)))) ? J$._() : J$.B(15658, '!==', J$.G(245497, J$.R(245481, 'serverTags', serverTags, false, false), J$.R(245489, 'key', key, false, false)), J$.G(245521, J$.R(245505, 'tagSet', tagSet, false, false), J$.R(245513, 'key', key, false, false))))) {
                                    return J$.Rt(245537, J$.T(245529, false, 23, false));
                                }
                            }
                            return J$.Rt(245553, J$.T(245545, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(248529, J$e);
                        } finally {
                            if (J$.Fr(248537))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tagSetReducer(readPreference, servers) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(246185, arguments.callee, this, arguments);
                            arguments = J$.N(246193, 'arguments', arguments, true, false, false);
                            readPreference = J$.N(246201, 'readPreference', readPreference, true, false, false);
                            servers = J$.N(246209, 'servers', servers, true, false, false);
                            J$.N(246217, '_loop', _loop, false, false, false);
                            J$.N(246225, 'i', i, false, false, false);
                            J$.N(246233, '_ret', _ret, false, false, false);
                            if (J$.C(14176, J$.C(14168, J$.B(15666, '==', J$.G(245633, J$.R(245625, 'readPreference', readPreference, false, false), 'tags'), J$.T(245641, null, 25, false))) ? J$._() : J$.C(14160, J$.M(245673, J$.I(typeof Array === 'undefined' ? Array = J$.R(245649, 'Array', undefined, true, true) : Array = J$.R(245649, 'Array', Array, true, true)), 'isArray', false)(J$.G(245665, J$.R(245657, 'readPreference', readPreference, false, false), 'tags'))) ? J$.B(15674, '===', J$.G(245697, J$.G(245689, J$.R(245681, 'readPreference', readPreference, false, false), 'tags'), 'length'), J$.T(245705, 0, 22, false)) : J$._())) {
                                return J$.Rt(245721, J$.R(245713, 'servers', servers, false, false));
                            }
                            var _loop = J$.W(246009, '_loop', J$.T(246001, function _loop(i) {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(245961, arguments.callee, this, arguments);
                                            arguments = J$.N(245969, 'arguments', arguments, true, false, false);
                                            i = J$.N(245977, 'i', i, true, false, false);
                                            J$.N(245985, 'tagSet', tagSet, false, false, false);
                                            J$.N(245993, 'serversMatchingTagset', serversMatchingTagset, false, false, false);
                                            var tagSet = J$.W(245761, 'tagSet', J$.G(245753, J$.G(245737, J$.R(245729, 'readPreference', readPreference, false, false), 'tags'), J$.R(245745, 'i', i, false, false)), tagSet, false, false);
                                            var serversMatchingTagset = J$.W(245913, 'serversMatchingTagset', J$.M(245905, J$.R(245769, 'servers', servers, false, false), 'reduce', false)(J$.T(245889, function (matched, server) {
                                                jalangiLabel11:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(245857, arguments.callee, this, arguments);
                                                            arguments = J$.N(245865, 'arguments', arguments, true, false, false);
                                                            matched = J$.N(245873, 'matched', matched, true, false, false);
                                                            server = J$.N(245881, 'server', server, true, false, false);
                                                            if (J$.C(14184, J$.F(245809, J$.R(245777, 'tagSetMatch', tagSetMatch, false, true), false)(J$.R(245785, 'tagSet', tagSet, false, false), J$.G(245801, J$.R(245793, 'server', server, false, false), 'tags'))))
                                                                J$.M(245833, J$.R(245817, 'matched', matched, false, false), 'push', false)(J$.R(245825, 'server', server, false, false));
                                                            return J$.Rt(245849, J$.R(245841, 'matched', matched, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(248545, J$e);
                                                        } finally {
                                                            if (J$.Fr(248553))
                                                                continue jalangiLabel11;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.T(245897, [], 10, false)), serversMatchingTagset, false, false);
                                            if (J$.C(14192, J$.G(245929, J$.R(245921, 'serversMatchingTagset', serversMatchingTagset, false, false), 'length'))) {
                                                return J$.Rt(245953, J$.T(245945, { v: J$.R(245937, 'serversMatchingTagset', serversMatchingTagset, false, false) }, 11, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(248561, J$e);
                                        } finally {
                                            if (J$.Fr(248569))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _loop, false, false);
                            for (var i = J$.W(246025, 'i', J$.T(246017, 0, 22, false), i, false, false); J$.C(14208, J$.B(15682, '<', J$.R(246033, 'i', i, false, false), J$.G(246057, J$.G(246049, J$.R(246041, 'readPreference', readPreference, false, false), 'tags'), 'length'))); i = J$.W(246073, 'i', J$.B(15698, '+', J$.U(15690, '+', J$.R(246065, 'i', i, false, false)), 1), i, false, false)) {
                                var _ret = J$.W(246105, '_ret', J$.F(246097, J$.R(246081, '_loop', _loop, false, false), false)(J$.R(246089, 'i', i, false, false)), _ret, false, false);
                                if (J$.C(14200, J$.B(15706, '===', J$.F(246129, J$.R(246113, '_typeof', _typeof, false, true), false)(J$.R(246121, '_ret', _ret, false, false)), J$.T(246137, 'object', 21, false))))
                                    return J$.Rt(246161, J$.G(246153, J$.R(246145, '_ret', _ret, false, false), 'v'));
                            }
                            return J$.Rt(246177, J$.T(246169, [], 10, false));
                        } catch (J$e) {
                            J$.Ex(248577, J$e);
                        } finally {
                            if (J$.Fr(248585))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function latencyWindowReducer(topologyDescription, servers) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(246585, arguments.callee, this, arguments);
                            arguments = J$.N(246593, 'arguments', arguments, true, false, false);
                            topologyDescription = J$.N(246601, 'topologyDescription', topologyDescription, true, false, false);
                            servers = J$.N(246609, 'servers', servers, true, false, false);
                            J$.N(246617, 'low', low, false, false, false);
                            J$.N(246625, 'high', high, false, false, false);
                            var low = J$.W(246385, 'low', J$.M(246377, J$.R(246241, 'servers', servers, false, false), 'reduce', false)(J$.T(246361, function (min, server) {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(246329, arguments.callee, this, arguments);
                                            arguments = J$.N(246337, 'arguments', arguments, true, false, false);
                                            min = J$.N(246345, 'min', min, true, false, false);
                                            server = J$.N(246353, 'server', server, true, false, false);
                                            return J$.Rt(246321, J$.C(14216, J$.B(15722, '===', J$.R(246249, 'min', min, false, false), J$.U(15714, '-', J$.T(246257, 1, 22, false)))) ? J$.G(246273, J$.R(246265, 'server', server, false, false), 'roundTripTime') : J$.M(246313, J$.I(typeof Math === 'undefined' ? Math = J$.R(246281, 'Math', undefined, true, true) : Math = J$.R(246281, 'Math', Math, true, true)), 'min', false)(J$.G(246297, J$.R(246289, 'server', server, false, false), 'roundTripTime'), J$.R(246305, 'min', min, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(248593, J$e);
                                        } finally {
                                            if (J$.Fr(248601))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.U(15730, '-', J$.T(246369, 1, 22, false))), low, false, false);
                            var high = J$.W(246417, 'high', J$.B(15738, '+', J$.R(246393, 'low', low, false, false), J$.G(246409, J$.R(246401, 'topologyDescription', topologyDescription, false, false), 'localThresholdMS')), high, false, false);
                            return J$.Rt(246577, J$.M(246569, J$.R(246425, 'servers', servers, false, false), 'reduce', false)(J$.T(246553, function (result, server) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(246521, arguments.callee, this, arguments);
                                            arguments = J$.N(246529, 'arguments', arguments, true, false, false);
                                            result = J$.N(246537, 'result', result, true, false, false);
                                            server = J$.N(246545, 'server', server, true, false, false);
                                            if (J$.C(14232, J$.C(14224, J$.B(15746, '<=', J$.G(246441, J$.R(246433, 'server', server, false, false), 'roundTripTime'), J$.R(246449, 'high', high, false, false))) ? J$.B(15754, '>=', J$.G(246465, J$.R(246457, 'server', server, false, false), 'roundTripTime'), J$.R(246473, 'low', low, false, false)) : J$._()))
                                                J$.M(246497, J$.R(246481, 'result', result, false, false), 'push', false)(J$.R(246489, 'server', server, false, false));
                                            return J$.Rt(246513, J$.R(246505, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(248609, J$e);
                                        } finally {
                                            if (J$.Fr(248617))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.T(246561, [], 10, false)));
                        } catch (J$e) {
                            J$.Ex(248625, J$e);
                        } finally {
                            if (J$.Fr(248633))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function primaryFilter(server) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(246673, arguments.callee, this, arguments);
                            arguments = J$.N(246681, 'arguments', arguments, true, false, false);
                            server = J$.N(246689, 'server', server, true, false, false);
                            return J$.Rt(246665, J$.B(15762, '===', J$.G(246641, J$.R(246633, 'server', server, false, false), 'type'), J$.G(246657, J$.R(246649, 'ServerType', ServerType, false, true), 'RSPrimary')));
                        } catch (J$e) {
                            J$.Ex(248641, J$e);
                        } finally {
                            if (J$.Fr(248649))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function secondaryFilter(server) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(246737, arguments.callee, this, arguments);
                            arguments = J$.N(246745, 'arguments', arguments, true, false, false);
                            server = J$.N(246753, 'server', server, true, false, false);
                            return J$.Rt(246729, J$.B(15770, '===', J$.G(246705, J$.R(246697, 'server', server, false, false), 'type'), J$.G(246721, J$.R(246713, 'ServerType', ServerType, false, true), 'RSSecondary')));
                        } catch (J$e) {
                            J$.Ex(248657, J$e);
                        } finally {
                            if (J$.Fr(248665))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function nearestFilter(server) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(246833, arguments.callee, this, arguments);
                            arguments = J$.N(246841, 'arguments', arguments, true, false, false);
                            server = J$.N(246849, 'server', server, true, false, false);
                            return J$.Rt(246825, J$.C(14240, J$.B(15778, '===', J$.G(246769, J$.R(246761, 'server', server, false, false), 'type'), J$.G(246785, J$.R(246777, 'ServerType', ServerType, false, true), 'RSSecondary'))) ? J$._() : J$.B(15786, '===', J$.G(246801, J$.R(246793, 'server', server, false, false), 'type'), J$.G(246817, J$.R(246809, 'ServerType', ServerType, false, true), 'RSPrimary')));
                        } catch (J$e) {
                            J$.Ex(248673, J$e);
                        } finally {
                            if (J$.Fr(248681))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function knownFilter(server) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(246897, arguments.callee, this, arguments);
                            arguments = J$.N(246905, 'arguments', arguments, true, false, false);
                            server = J$.N(246913, 'server', server, true, false, false);
                            return J$.Rt(246889, J$.B(15794, '!==', J$.G(246865, J$.R(246857, 'server', server, false, false), 'type'), J$.G(246881, J$.R(246873, 'ServerType', ServerType, false, true), 'Unknown')));
                        } catch (J$e) {
                            J$.Ex(248689, J$e);
                        } finally {
                            if (J$.Fr(248697))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPreferenceServerSelector(readPreference) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(248073, arguments.callee, this, arguments);
                            arguments = J$.N(248081, 'arguments', arguments, true, false, false);
                            readPreference = J$.N(248089, 'readPreference', readPreference, true, false, false);
                            if (J$.C(14248, J$.U(15802, '!', J$.M(246929, J$.R(246921, 'readPreference', readPreference, false, false), 'isValid', false)()))) {
                                throw J$.F(246953, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(246937, 'TypeError', undefined, true, true) : TypeError = J$.R(246937, 'TypeError', TypeError, true, true)), true)(J$.T(246945, 'Invalid read preference specified', 21, false));
                            }
                            return J$.Rt(248065, J$.T(248057, function (topologyDescription, servers) {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(248001, arguments.callee, this, arguments);
                                            arguments = J$.N(248009, 'arguments', arguments, true, false, false);
                                            topologyDescription = J$.N(248017, 'topologyDescription', topologyDescription, true, false, false);
                                            servers = J$.N(248025, 'servers', servers, true, false, false);
                                            J$.N(248033, 'commonWireVersion', commonWireVersion, false, false, false);
                                            J$.N(248041, 'result', result, false, false, false);
                                            J$.N(248049, '_result', _result, false, false, false);
                                            var commonWireVersion = J$.W(246977, 'commonWireVersion', J$.G(246969, J$.R(246961, 'topologyDescription', topologyDescription, false, false), 'commonWireVersion'), commonWireVersion, false, false);
                                            if (J$.C(14272, J$.C(14264, J$.C(14256, J$.R(246985, 'commonWireVersion', commonWireVersion, false, false)) ? J$.G(247001, J$.R(246993, 'readPreference', readPreference, false, false), 'minWireVersion') : J$._()) ? J$.B(15810, '>', J$.G(247017, J$.R(247009, 'readPreference', readPreference, false, false), 'minWireVersion'), J$.R(247025, 'commonWireVersion', commonWireVersion, false, false)) : J$._())) {
                                                throw J$.F(247105, J$.R(247033, 'MongoError', MongoError, false, true), true)(J$.M(247097, J$.M(247073, J$.T(247041, 'Minimum wire version \'', 21, false), 'concat', false)(J$.G(247057, J$.R(247049, 'readPreference', readPreference, false, false), 'minWireVersion'), J$.T(247065, '\' required, but found \'', 21, false)), 'concat', false)(J$.R(247081, 'commonWireVersion', commonWireVersion, false, false), J$.T(247089, '\'', 21, false)));
                                            }
                                            if (J$.C(14288, J$.C(14280, J$.B(15818, '===', J$.G(247121, J$.R(247113, 'topologyDescription', topologyDescription, false, false), 'type'), J$.G(247137, J$.R(247129, 'TopologyType', TopologyType, false, true), 'Single'))) ? J$._() : J$.B(15826, '===', J$.G(247153, J$.R(247145, 'topologyDescription', topologyDescription, false, false), 'type'), J$.G(247169, J$.R(247161, 'TopologyType', TopologyType, false, true), 'Sharded')))) {
                                                return J$.Rt(247225, J$.F(247217, J$.R(247177, 'latencyWindowReducer', latencyWindowReducer, false, true), false)(J$.R(247185, 'topologyDescription', topologyDescription, false, false), J$.M(247209, J$.R(247193, 'servers', servers, false, false), 'filter', false)(J$.R(247201, 'knownFilter', knownFilter, false, true))));
                                            }
                                            if (J$.C(14296, J$.B(15834, '===', J$.G(247241, J$.R(247233, 'readPreference', readPreference, false, false), 'mode'), J$.G(247257, J$.R(247249, 'ReadPreference', ReadPreference, false, true), 'PRIMARY')))) {
                                                return J$.Rt(247289, J$.M(247281, J$.R(247265, 'servers', servers, false, false), 'filter', false)(J$.R(247273, 'primaryFilter', primaryFilter, false, true)));
                                            }
                                            if (J$.C(14344, J$.B(15842, '===', J$.G(247305, J$.R(247297, 'readPreference', readPreference, false, false), 'mode'), J$.G(247321, J$.R(247313, 'ReadPreference', ReadPreference, false, true), 'SECONDARY')))) {
                                                return J$.Rt(247433, J$.M(247425, J$.F(247409, J$.R(247329, 'latencyWindowReducer', latencyWindowReducer, false, true), false)(J$.R(247337, 'topologyDescription', topologyDescription, false, false), J$.F(247401, J$.R(247345, 'tagSetReducer', tagSetReducer, false, true), false)(J$.R(247353, 'readPreference', readPreference, false, false), J$.F(247393, J$.R(247361, 'maxStalenessReducer', maxStalenessReducer, false, true), false)(J$.R(247369, 'readPreference', readPreference, false, false), J$.R(247377, 'topologyDescription', topologyDescription, false, false), J$.R(247385, 'servers', servers, false, false)))), 'filter', false)(J$.R(247417, 'secondaryFilter', secondaryFilter, false, true)));
                                            } else if (J$.C(14336, J$.B(15850, '===', J$.G(247449, J$.R(247441, 'readPreference', readPreference, false, false), 'mode'), J$.G(247465, J$.R(247457, 'ReadPreference', ReadPreference, false, true), 'NEAREST')))) {
                                                return J$.Rt(247577, J$.M(247569, J$.F(247553, J$.R(247473, 'latencyWindowReducer', latencyWindowReducer, false, true), false)(J$.R(247481, 'topologyDescription', topologyDescription, false, false), J$.F(247545, J$.R(247489, 'tagSetReducer', tagSetReducer, false, true), false)(J$.R(247497, 'readPreference', readPreference, false, false), J$.F(247537, J$.R(247505, 'maxStalenessReducer', maxStalenessReducer, false, true), false)(J$.R(247513, 'readPreference', readPreference, false, false), J$.R(247521, 'topologyDescription', topologyDescription, false, false), J$.R(247529, 'servers', servers, false, false)))), 'filter', false)(J$.R(247561, 'nearestFilter', nearestFilter, false, true)));
                                            } else if (J$.C(14328, J$.B(15858, '===', J$.G(247593, J$.R(247585, 'readPreference', readPreference, false, false), 'mode'), J$.G(247609, J$.R(247601, 'ReadPreference', ReadPreference, false, true), 'SECONDARY_PREFERRED')))) {
                                                var result = J$.W(247721, 'result', J$.M(247713, J$.F(247697, J$.R(247617, 'latencyWindowReducer', latencyWindowReducer, false, true), false)(J$.R(247625, 'topologyDescription', topologyDescription, false, false), J$.F(247689, J$.R(247633, 'tagSetReducer', tagSetReducer, false, true), false)(J$.R(247641, 'readPreference', readPreference, false, false), J$.F(247681, J$.R(247649, 'maxStalenessReducer', maxStalenessReducer, false, true), false)(J$.R(247657, 'readPreference', readPreference, false, false), J$.R(247665, 'topologyDescription', topologyDescription, false, false), J$.R(247673, 'servers', servers, false, false)))), 'filter', false)(J$.R(247705, 'secondaryFilter', secondaryFilter, false, true)), result, false, false);
                                                return J$.Rt(247785, J$.C(14304, J$.B(15866, '===', J$.G(247737, J$.R(247729, 'result', result, false, false), 'length'), J$.T(247745, 0, 22, false))) ? J$.M(247769, J$.R(247753, 'servers', servers, false, false), 'filter', false)(J$.R(247761, 'primaryFilter', primaryFilter, false, true)) : J$.R(247777, 'result', result, false, false));
                                            } else if (J$.C(14320, J$.B(15874, '===', J$.G(247801, J$.R(247793, 'readPreference', readPreference, false, false), 'mode'), J$.G(247817, J$.R(247809, 'ReadPreference', ReadPreference, false, true), 'PRIMARY_PREFERRED')))) {
                                                var _result = J$.W(247849, '_result', J$.M(247841, J$.R(247825, 'servers', servers, false, false), 'filter', false)(J$.R(247833, 'primaryFilter', primaryFilter, false, true)), _result, false, false);
                                                if (J$.C(14312, J$.G(247865, J$.R(247857, '_result', _result, false, false), 'length'))) {
                                                    return J$.Rt(247881, J$.R(247873, '_result', _result, false, false));
                                                }
                                                return J$.Rt(247993, J$.M(247985, J$.F(247969, J$.R(247889, 'latencyWindowReducer', latencyWindowReducer, false, true), false)(J$.R(247897, 'topologyDescription', topologyDescription, false, false), J$.F(247961, J$.R(247905, 'tagSetReducer', tagSetReducer, false, true), false)(J$.R(247913, 'readPreference', readPreference, false, false), J$.F(247953, J$.R(247921, 'maxStalenessReducer', maxStalenessReducer, false, true), false)(J$.R(247929, 'readPreference', readPreference, false, false), J$.R(247937, 'topologyDescription', topologyDescription, false, false), J$.R(247945, 'servers', servers, false, false)))), 'filter', false)(J$.R(247977, 'secondaryFilter', secondaryFilter, false, true)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(248705, J$e);
                                        } finally {
                                            if (J$.Fr(248713))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(248721, J$e);
                        } finally {
                            if (J$.Fr(248729))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(248153, '_typeof', J$.T(248145, _typeof, 12, false), true, false, false);
            J$.N(248161, 'ServerType', ServerType, false, false, false);
            J$.N(248169, 'TopologyType', TopologyType, false, false, false);
            J$.N(248177, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(248185, 'MongoError', MongoError, false, false, false);
            J$.N(248193, 'IDLE_WRITE_PERIOD', IDLE_WRITE_PERIOD, false, false, false);
            J$.N(248201, 'SMALLEST_MAX_STALENESS_SECONDS', SMALLEST_MAX_STALENESS_SECONDS, false, false, false);
            writableServerSelector = J$.N(248217, 'writableServerSelector', J$.T(248209, writableServerSelector, 12, false), true, false, false);
            maxStalenessReducer = J$.N(248233, 'maxStalenessReducer', J$.T(248225, maxStalenessReducer, 12, false), true, false, false);
            tagSetMatch = J$.N(248249, 'tagSetMatch', J$.T(248241, tagSetMatch, 12, false), true, false, false);
            tagSetReducer = J$.N(248265, 'tagSetReducer', J$.T(248257, tagSetReducer, 12, false), true, false, false);
            latencyWindowReducer = J$.N(248281, 'latencyWindowReducer', J$.T(248273, latencyWindowReducer, 12, false), true, false, false);
            primaryFilter = J$.N(248297, 'primaryFilter', J$.T(248289, primaryFilter, 12, false), true, false, false);
            secondaryFilter = J$.N(248313, 'secondaryFilter', J$.T(248305, secondaryFilter, 12, false), true, false, false);
            nearestFilter = J$.N(248329, 'nearestFilter', J$.T(248321, nearestFilter, 12, false), true, false, false);
            knownFilter = J$.N(248345, 'knownFilter', J$.T(248337, knownFilter, 12, false), true, false, false);
            readPreferenceServerSelector = J$.N(248361, 'readPreferenceServerSelector', J$.T(248353, readPreferenceServerSelector, 12, false), true, false, false);
            J$.T(243577, 'use strict', 21, false);
            var ServerType = J$.W(243905, 'ServerType', J$.G(243897, J$.F(243889, J$.I(typeof require === 'undefined' ? require = J$.R(243873, 'require', undefined, true, true) : require = J$.R(243873, 'require', require, true, true)), false)(J$.T(243881, './server_description', 21, false)), 'ServerType'), ServerType, false, true);
            var TopologyType = J$.W(243945, 'TopologyType', J$.G(243937, J$.F(243929, J$.I(typeof require === 'undefined' ? require = J$.R(243913, 'require', undefined, true, true) : require = J$.R(243913, 'require', require, true, true)), false)(J$.T(243921, './topology_description', 21, false)), 'TopologyType'), TopologyType, false, true);
            var ReadPreference = J$.W(243977, 'ReadPreference', J$.F(243969, J$.I(typeof require === 'undefined' ? require = J$.R(243953, 'require', undefined, true, true) : require = J$.R(243953, 'require', require, true, true)), false)(J$.T(243961, '../topologies/read_preference', 21, false)), ReadPreference, false, true);
            var MongoError = J$.W(244017, 'MongoError', J$.G(244009, J$.F(244001, J$.I(typeof require === 'undefined' ? require = J$.R(243985, 'require', undefined, true, true) : require = J$.R(243985, 'require', require, true, true)), false)(J$.T(243993, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var IDLE_WRITE_PERIOD = J$.W(244033, 'IDLE_WRITE_PERIOD', J$.T(244025, 10000, 22, false), IDLE_WRITE_PERIOD, false, true);
            var SMALLEST_MAX_STALENESS_SECONDS = J$.W(244049, 'SMALLEST_MAX_STALENESS_SECONDS', J$.T(244041, 90, 22, false), SMALLEST_MAX_STALENESS_SECONDS, false, true);
            J$.P(248129, J$.I(typeof module === 'undefined' ? module = J$.R(248097, 'module', undefined, true, true) : module = J$.R(248097, 'module', module, true, true)), 'exports', J$.T(248121, {
                writableServerSelector: J$.R(248105, 'writableServerSelector', writableServerSelector, false, true),
                readPreferenceServerSelector: J$.R(248113, 'readPreferenceServerSelector', readPreferenceServerSelector, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(248737, J$e);
        } finally {
            if (J$.Sr(248745))
                continue jalangiLabel23;
            else
                break jalangiLabel23;
        }
    }
// JALANGI DO NOT INSTRUMENT

