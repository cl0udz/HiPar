J$.noInstrEval = false;
jalangiLabel98:
    while (true) {
        try {
            J$.Se(274521, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/sdam/topology.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(254169, arguments.callee, this, arguments);
                            arguments = J$.N(254177, 'arguments', arguments, true, false, false);
                            obj = J$.N(254185, 'obj', obj, true, false, false);
                            if (J$.C(14656, J$.C(14616, J$.B(16122, '===', J$.U(16114, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(253905, 'Symbol', undefined, true, true) : Symbol = J$.R(253905, 'Symbol', Symbol, true, true))), J$.T(253913, 'function', 21, false))) ? J$.B(16138, '===', J$.U(16130, 'typeof', J$.G(253929, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(253921, 'Symbol', undefined, true, true) : Symbol = J$.R(253921, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(253937, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(253993, '_typeof', J$.T(253985, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(253961, arguments.callee, this, arguments);
                                                arguments = J$.N(253969, 'arguments', arguments, true, false, false);
                                                obj = J$.N(253977, 'obj', obj, true, false, false);
                                                return J$.Rt(253953, J$.U(16146, 'typeof', J$.R(253945, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(275169, J$e);
                                            } finally {
                                                if (J$.Fr(275177))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(254129, '_typeof', J$.T(254121, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(254097, arguments.callee, this, arguments);
                                                arguments = J$.N(254105, 'arguments', arguments, true, false, false);
                                                obj = J$.N(254113, 'obj', obj, true, false, false);
                                                return J$.Rt(254089, J$.C(14648, J$.C(14640, J$.C(14632, J$.C(14624, J$.R(254001, 'obj', obj, false, false)) ? J$.B(16162, '===', J$.U(16154, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(254009, 'Symbol', undefined, true, true) : Symbol = J$.R(254009, 'Symbol', Symbol, true, true))), J$.T(254017, 'function', 21, false)) : J$._()) ? J$.B(16170, '===', J$.G(254033, J$.R(254025, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(254041, 'Symbol', undefined, true, true) : Symbol = J$.R(254041, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(16178, '!==', J$.R(254049, 'obj', obj, false, false), J$.G(254065, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(254057, 'Symbol', undefined, true, true) : Symbol = J$.R(254057, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(254073, 'symbol', 21, false) : J$.U(16186, 'typeof', J$.R(254081, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(275185, J$e);
                                            } finally {
                                                if (J$.Fr(275193))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(254161, J$.F(254153, J$.R(254137, '_typeof', _typeof, false, true), false)(J$.R(254145, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(275201, J$e);
                        } finally {
                            if (J$.Fr(275209))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _classCallCheck(instance, Constructor) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(254233, arguments.callee, this, arguments);
                            arguments = J$.N(254241, 'arguments', arguments, true, false, false);
                            instance = J$.N(254249, 'instance', instance, true, false, false);
                            Constructor = J$.N(254257, 'Constructor', Constructor, true, false, false);
                            if (J$.C(14664, J$.U(16202, '!', J$.B(16194, 'instanceof', J$.R(254193, 'instance', instance, false, false), J$.R(254201, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(254225, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(254209, 'TypeError', undefined, true, true) : TypeError = J$.R(254209, 'TypeError', TypeError, true, true)), true)(J$.T(254217, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(275217, J$e);
                        } finally {
                            if (J$.Fr(275225))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(254505, arguments.callee, this, arguments);
                            arguments = J$.N(254513, 'arguments', arguments, true, false, false);
                            target = J$.N(254521, 'target', target, true, false, false);
                            props = J$.N(254529, 'props', props, true, false, false);
                            J$.N(254537, 'i', i, false, false, false);
                            J$.N(254545, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(254273, 'i', J$.T(254265, 0, 22, false), i, false, false); J$.C(14688, J$.B(16210, '<', J$.R(254281, 'i', i, false, false), J$.G(254297, J$.R(254289, 'props', props, false, false), 'length'))); J$.B(16234, '-', i = J$.W(254313, 'i', J$.B(16226, '+', J$.U(16218, '+', J$.R(254305, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(254345, 'descriptor', J$.G(254337, J$.R(254321, 'props', props, false, false), J$.R(254329, 'i', i, false, false)), descriptor, false, false);
                                J$.P(254385, J$.R(254353, 'descriptor', descriptor, false, false), 'enumerable', J$.C(14672, J$.G(254369, J$.R(254361, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(254377, false, 23, false));
                                J$.P(254409, J$.R(254393, 'descriptor', descriptor, false, false), 'configurable', J$.T(254401, true, 23, false));
                                if (J$.C(14680, J$.B(16242, 'in', J$.T(254417, 'value', 21, false), J$.R(254425, 'descriptor', descriptor, false, false))))
                                    J$.P(254449, J$.R(254433, 'descriptor', descriptor, false, false), 'writable', J$.T(254441, true, 23, false));
                                J$.M(254497, J$.I(typeof Object === 'undefined' ? Object = J$.R(254457, 'Object', undefined, true, true) : Object = J$.R(254457, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(254465, 'target', target, false, false), J$.G(254481, J$.R(254473, 'descriptor', descriptor, false, false), 'key'), J$.R(254489, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(275233, J$e);
                        } finally {
                            if (J$.Fr(275241))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(254657, arguments.callee, this, arguments);
                            arguments = J$.N(254665, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(254673, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(254681, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(254689, 'staticProps', staticProps, true, false, false);
                            if (J$.C(14696, J$.R(254553, 'protoProps', protoProps, false, false)))
                                J$.F(254593, J$.R(254561, '_defineProperties', _defineProperties, false, true), false)(J$.G(254577, J$.R(254569, 'Constructor', Constructor, false, false), 'prototype'), J$.R(254585, 'protoProps', protoProps, false, false));
                            if (J$.C(14704, J$.R(254601, 'staticProps', staticProps, false, false)))
                                J$.F(254633, J$.R(254609, '_defineProperties', _defineProperties, false, true), false)(J$.R(254617, 'Constructor', Constructor, false, false), J$.R(254625, 'staticProps', staticProps, false, false));
                            return J$.Rt(254649, J$.R(254641, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(275249, J$e);
                        } finally {
                            if (J$.Fr(275257))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _possibleConstructorReturn(self, call) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(254801, arguments.callee, this, arguments);
                            arguments = J$.N(254809, 'arguments', arguments, true, false, false);
                            self = J$.N(254817, 'self', self, true, false, false);
                            call = J$.N(254825, 'call', call, true, false, false);
                            if (J$.C(14728, J$.C(14720, J$.R(254697, 'call', call, false, false)) ? J$.C(14712, J$.B(16250, '===', J$.F(254721, J$.R(254705, '_typeof', _typeof, false, true), false)(J$.R(254713, 'call', call, false, false)), J$.T(254729, 'object', 21, false))) ? J$._() : J$.B(16266, '===', J$.U(16258, 'typeof', J$.R(254737, 'call', call, false, false)), J$.T(254745, 'function', 21, false)) : J$._())) {
                                return J$.Rt(254761, J$.R(254753, 'call', call, false, false));
                            }
                            return J$.Rt(254793, J$.F(254785, J$.R(254769, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(254777, 'self', self, false, false)));
                        } catch (J$e) {
                            J$.Ex(275265, J$e);
                        } finally {
                            if (J$.Fr(275273))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _getPrototypeOf(o) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(254985, arguments.callee, this, arguments);
                            arguments = J$.N(254993, 'arguments', arguments, true, false, false);
                            o = J$.N(255001, 'o', o, true, false, false);
                            _getPrototypeOf = J$.W(254945, '_getPrototypeOf', J$.C(14744, J$.G(254841, J$.I(typeof Object === 'undefined' ? Object = J$.R(254833, 'Object', undefined, true, true) : Object = J$.R(254833, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$.G(254857, J$.I(typeof Object === 'undefined' ? Object = J$.R(254849, 'Object', undefined, true, true) : Object = J$.R(254849, 'Object', Object, true, true)), 'getPrototypeOf') : J$.T(254937, function _getPrototypeOf(o) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(254913, arguments.callee, this, arguments);
                                            arguments = J$.N(254921, 'arguments', arguments, true, false, false);
                                            o = J$.N(254929, 'o', o, true, false, false);
                                            return J$.Rt(254905, J$.C(14736, J$.G(254873, J$.R(254865, 'o', o, false, false), '__proto__')) ? J$._() : J$.M(254897, J$.I(typeof Object === 'undefined' ? Object = J$.R(254881, 'Object', undefined, true, true) : Object = J$.R(254881, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(254889, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(275281, J$e);
                                        } finally {
                                            if (J$.Fr(275289))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _getPrototypeOf, false, true);
                            return J$.Rt(254977, J$.F(254969, J$.R(254953, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(254961, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(275297, J$e);
                        } finally {
                            if (J$.Fr(275305))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _assertThisInitialized(self) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(255065, arguments.callee, this, arguments);
                            arguments = J$.N(255073, 'arguments', arguments, true, false, false);
                            self = J$.N(255081, 'self', self, true, false, false);
                            if (J$.C(14752, J$.B(16274, '===', J$.R(255009, 'self', self, false, false), void J$.T(255017, 0, 22, false)))) {
                                throw J$.F(255041, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(255025, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(255025, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(255033, 'this hasn\'t been initialised - super() hasn\'t been called', 21, false));
                            }
                            return J$.Rt(255057, J$.R(255049, 'self', self, false, false));
                        } catch (J$e) {
                            J$.Ex(275313, J$e);
                        } finally {
                            if (J$.Fr(275321))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _inherits(subClass, superClass) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(255281, arguments.callee, this, arguments);
                            arguments = J$.N(255289, 'arguments', arguments, true, false, false);
                            subClass = J$.N(255297, 'subClass', subClass, true, false, false);
                            superClass = J$.N(255305, 'superClass', superClass, true, false, false);
                            if (J$.C(14768, J$.C(14760, J$.B(16290, '!==', J$.U(16282, 'typeof', J$.R(255089, 'superClass', superClass, false, false)), J$.T(255097, 'function', 21, false))) ? J$.B(16298, '!==', J$.R(255105, 'superClass', superClass, false, false), J$.T(255113, null, 25, false)) : J$._())) {
                                throw J$.F(255137, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(255121, 'TypeError', undefined, true, true) : TypeError = J$.R(255121, 'TypeError', TypeError, true, true)), true)(J$.T(255129, 'Super expression must either be null or a function', 21, false));
                            }
                            J$.P(255233, J$.R(255145, 'subClass', subClass, false, false), 'prototype', J$.M(255225, J$.I(typeof Object === 'undefined' ? Object = J$.R(255153, 'Object', undefined, true, true) : Object = J$.R(255153, 'Object', Object, true, true)), 'create', false)(J$.C(14776, J$.R(255161, 'superClass', superClass, false, false)) ? J$.G(255177, J$.R(255169, 'superClass', superClass, false, false), 'prototype') : J$._(), J$.T(255217, {
                                constructor: J$.T(255209, {
                                    value: J$.R(255185, 'subClass', subClass, false, false),
                                    writable: J$.T(255193, true, 23, false),
                                    configurable: J$.T(255201, true, 23, false)
                                }, 11, false)
                            }, 11, false)));
                            if (J$.C(14784, J$.R(255241, 'superClass', superClass, false, false)))
                                J$.F(255273, J$.R(255249, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(255257, 'subClass', subClass, false, false), J$.R(255265, 'superClass', superClass, false, false));
                        } catch (J$e) {
                            J$.Ex(275329, J$e);
                        } finally {
                            if (J$.Fr(275337))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _setPrototypeOf(o, p) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(255457, arguments.callee, this, arguments);
                            arguments = J$.N(255465, 'arguments', arguments, true, false, false);
                            o = J$.N(255473, 'o', o, true, false, false);
                            p = J$.N(255481, 'p', p, true, false, false);
                            _setPrototypeOf = J$.W(255409, '_setPrototypeOf', J$.C(14792, J$.G(255321, J$.I(typeof Object === 'undefined' ? Object = J$.R(255313, 'Object', undefined, true, true) : Object = J$.R(255313, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$._() : J$.T(255401, function _setPrototypeOf(o, p) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(255369, arguments.callee, this, arguments);
                                            arguments = J$.N(255377, 'arguments', arguments, true, false, false);
                                            o = J$.N(255385, 'o', o, true, false, false);
                                            p = J$.N(255393, 'p', p, true, false, false);
                                            J$.P(255345, J$.R(255329, 'o', o, false, false), '__proto__', J$.R(255337, 'p', p, false, false));
                                            return J$.Rt(255361, J$.R(255353, 'o', o, false, false));
                                        } catch (J$e) {
                                            J$.Ex(275345, J$e);
                                        } finally {
                                            if (J$.Fr(275353))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _setPrototypeOf, false, true);
                            return J$.Rt(255449, J$.F(255441, J$.R(255417, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(255425, 'o', o, false, false), J$.R(255433, 'p', p, false, false)));
                        } catch (J$e) {
                            J$.Ex(275361, J$e);
                        } finally {
                            if (J$.Fr(275369))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isWriteCommand(command) {
                jalangiLabel61:
                    while (true) {
                        try {
                            J$.Fe(267241, arguments.callee, this, arguments);
                            arguments = J$.N(267249, 'arguments', arguments, true, false, false);
                            command = J$.N(267257, 'command', command, true, false, false);
                            return J$.Rt(267233, J$.M(267225, J$.R(267153, 'RETRYABLE_WRITE_OPERATIONS', RETRYABLE_WRITE_OPERATIONS, false, true), 'some', false)(J$.T(267217, function (op) {
                                jalangiLabel60:
                                    while (true) {
                                        try {
                                            J$.Fe(267193, arguments.callee, this, arguments);
                                            arguments = J$.N(267201, 'arguments', arguments, true, false, false);
                                            op = J$.N(267209, 'op', op, true, false, false);
                                            return J$.Rt(267185, J$.G(267177, J$.R(267161, 'command', command, false, false), J$.R(267169, 'op', op, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(276129, J$e);
                                        } finally {
                                            if (J$.Fr(276137))
                                                continue jalangiLabel60;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(276145, J$e);
                        } finally {
                            if (J$.Fr(276153))
                                continue jalangiLabel61;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function destroyServer(server, topology, options, callback) {
                jalangiLabel64:
                    while (true) {
                        try {
                            J$.Fe(267553, arguments.callee, this, arguments);
                            arguments = J$.N(267561, 'arguments', arguments, true, false, false);
                            server = J$.N(267569, 'server', server, true, false, false);
                            topology = J$.N(267577, 'topology', topology, true, false, false);
                            options = J$.N(267585, 'options', options, true, false, false);
                            callback = J$.N(267593, 'callback', callback, true, false, false);
                            options = J$.W(267281, 'options', J$.C(15392, J$.R(267265, 'options', options, false, false)) ? J$._() : J$.T(267273, {}, 11, false), options, false, false);
                            J$.M(267361, J$.R(267289, 'LOCAL_SERVER_EVENTS', LOCAL_SERVER_EVENTS, false, true), 'forEach', false)(J$.T(267353, function (event) {
                                jalangiLabel62:
                                    while (true) {
                                        try {
                                            J$.Fe(267329, arguments.callee, this, arguments);
                                            arguments = J$.N(267337, 'arguments', arguments, true, false, false);
                                            event = J$.N(267345, 'event', event, true, false, false);
                                            return J$.Rt(267321, J$.M(267313, J$.R(267297, 'server', server, false, false), 'removeAllListeners', false)(J$.R(267305, 'event', event, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(276161, J$e);
                                        } finally {
                                            if (J$.Fr(276169))
                                                continue jalangiLabel62;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(267545, J$.R(267369, 'server', server, false, false), 'destroy', false)(J$.R(267377, 'options', options, false, false), J$.T(267537, function () {
                                jalangiLabel63:
                                    while (true) {
                                        try {
                                            J$.Fe(267521, arguments.callee, this, arguments);
                                            arguments = J$.N(267529, 'arguments', arguments, true, false, false);
                                            J$.M(267465, J$.R(267385, 'topology', topology, false, false), 'emit', false)(J$.T(267393, 'serverClosed', 21, false), J$.M(267457, J$.R(267401, 'monitoring', monitoring, false, true), 'ServerClosedEvent', true)(J$.G(267425, J$.G(267417, J$.R(267409, 'topology', topology, false, false), 's'), 'id'), J$.G(267449, J$.G(267441, J$.R(267433, 'server', server, false, false), 'description'), 'address')));
                                            if (J$.C(15400, J$.B(16834, '===', J$.U(16826, 'typeof', J$.R(267473, 'callback', callback, false, false)), J$.T(267481, 'function', 21, false))))
                                                J$.F(267513, J$.R(267489, 'callback', callback, false, false), false)(J$.T(267497, null, 25, false), J$.T(267505, null, 25, false));
                                        } catch (J$e) {
                                            J$.Ex(276177, J$e);
                                        } finally {
                                            if (J$.Fr(276185))
                                                continue jalangiLabel63;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(276193, J$e);
                        } finally {
                            if (J$.Fr(276201))
                                continue jalangiLabel64;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseStringSeedlist(seedlist) {
                jalangiLabel66:
                    while (true) {
                        try {
                            J$.Fe(267777, arguments.callee, this, arguments);
                            arguments = J$.N(267785, 'arguments', arguments, true, false, false);
                            seedlist = J$.N(267793, 'seedlist', seedlist, true, false, false);
                            return J$.Rt(267769, J$.M(267761, J$.M(267617, J$.R(267601, 'seedlist', seedlist, false, false), 'split', false)(J$.T(267609, ',', 21, false)), 'map', false)(J$.T(267753, function (seed) {
                                jalangiLabel65:
                                    while (true) {
                                        try {
                                            J$.Fe(267729, arguments.callee, this, arguments);
                                            arguments = J$.N(267737, 'arguments', arguments, true, false, false);
                                            seed = J$.N(267745, 'seed', seed, true, false, false);
                                            return J$.Rt(267721, J$.T(267713, {
                                                host: J$.G(267657, J$.M(267641, J$.R(267625, 'seed', seed, false, false), 'split', false)(J$.T(267633, ':', 21, false)), J$.T(267649, 0, 22, false)),
                                                port: J$.C(15408, J$.G(267697, J$.M(267681, J$.R(267665, 'seed', seed, false, false), 'split', false)(J$.T(267673, ':', 21, false)), J$.T(267689, 1, 22, false))) ? J$._() : J$.T(267705, 27017, 22, false)
                                            }, 11, false));
                                        } catch (J$e) {
                                            J$.Ex(276209, J$e);
                                        } finally {
                                            if (J$.Fr(276217))
                                                continue jalangiLabel65;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(276225, J$e);
                        } finally {
                            if (J$.Fr(276233))
                                continue jalangiLabel66;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function topologyTypeFromSeedlist(seedlist, options) {
                jalangiLabel67:
                    while (true) {
                        try {
                            J$.Fe(267969, arguments.callee, this, arguments);
                            arguments = J$.N(267977, 'arguments', arguments, true, false, false);
                            seedlist = J$.N(267985, 'seedlist', seedlist, true, false, false);
                            options = J$.N(267993, 'options', options, true, false, false);
                            J$.N(268001, 'replicaSet', replicaSet, false, false, false);
                            var replicaSet = J$.W(267849, 'replicaSet', J$.C(15424, J$.C(15416, J$.G(267809, J$.R(267801, 'options', options, false, false), 'replicaSet')) ? J$._() : J$.G(267825, J$.R(267817, 'options', options, false, false), 'setName')) ? J$._() : J$.G(267841, J$.R(267833, 'options', options, false, false), 'rs_name'), replicaSet, false, false);
                            if (J$.C(15440, J$.C(15432, J$.B(16842, '===', J$.G(267865, J$.R(267857, 'seedlist', seedlist, false, false), 'length'), J$.T(267873, 1, 22, false))) ? J$.U(16850, '!', J$.R(267881, 'replicaSet', replicaSet, false, false)) : J$._()))
                                return J$.Rt(267905, J$.G(267897, J$.R(267889, 'TopologyType', TopologyType, false, true), 'Single'));
                            if (J$.C(15448, J$.R(267913, 'replicaSet', replicaSet, false, false)))
                                return J$.Rt(267937, J$.G(267929, J$.R(267921, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary'));
                            return J$.Rt(267961, J$.G(267953, J$.R(267945, 'TopologyType', TopologyType, false, true), 'Unknown'));
                        } catch (J$e) {
                            J$.Ex(276241, J$e);
                        } finally {
                            if (J$.Fr(276249))
                                continue jalangiLabel67;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function randomSelection(array) {
                jalangiLabel68:
                    while (true) {
                        try {
                            J$.Fe(268081, arguments.callee, this, arguments);
                            arguments = J$.N(268089, 'arguments', arguments, true, false, false);
                            array = J$.N(268097, 'array', array, true, false, false);
                            return J$.Rt(268073, J$.G(268065, J$.R(268009, 'array', array, false, false), J$.M(268057, J$.I(typeof Math === 'undefined' ? Math = J$.R(268017, 'Math', undefined, true, true) : Math = J$.R(268017, 'Math', Math, true, true)), 'floor', false)(J$.B(16858, '*', J$.M(268033, J$.I(typeof Math === 'undefined' ? Math = J$.R(268025, 'Math', undefined, true, true) : Math = J$.R(268025, 'Math', Math, true, true)), 'random', false)(), J$.G(268049, J$.R(268041, 'array', array, false, false), 'length')))));
                        } catch (J$e) {
                            J$.Ex(276257, J$e);
                        } finally {
                            if (J$.Fr(276265))
                                continue jalangiLabel68;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function selectServers(topology, selector, timeout, start, callback) {
                jalangiLabel78:
                    while (true) {
                        try {
                            J$.Fe(269921, arguments.callee, this, arguments);
                            arguments = J$.N(269929, 'arguments', arguments, true, false, false);
                            topology = J$.N(269937, 'topology', topology, true, false, false);
                            selector = J$.N(269945, 'selector', selector, true, false, false);
                            timeout = J$.N(269953, 'timeout', timeout, true, false, false);
                            start = J$.N(269961, 'start', start, true, false, false);
                            callback = J$.N(269969, 'callback', callback, true, false, false);
                            J$.N(269977, 'duration', duration, false, false, false);
                            J$.N(269985, 'failToConnectTimer', failToConnectTimer, false, false, false);
                            J$.N(269993, 'connectHandler', connectHandler, false, false, false);
                            J$.N(270001, 'serverDescriptions', serverDescriptions, false, false, false);
                            J$.N(270009, 'descriptions', descriptions, false, false, false);
                            J$.N(270017, 'readPreference', readPreference, false, false, false);
                            J$.N(270025, 'servers', servers, false, false, false);
                            J$.N(270033, 'retrySelection', retrySelection, false, false, false);
                            var duration = J$.W(268129, 'duration', J$.F(268121, J$.R(268105, 'calculateDurationInMs', calculateDurationInMs, false, true), false)(J$.R(268113, 'start', start, false, false)), duration, false, false);
                            if (J$.C(15456, J$.B(16866, '>=', J$.R(268137, 'duration', duration, false, false), J$.R(268145, 'timeout', timeout, false, false)))) {
                                return J$.Rt(268241, J$.F(268233, J$.R(268153, 'callback', callback, false, false), false)(J$.F(268201, J$.R(268161, 'MongoTimeoutError', MongoTimeoutError, false, true), true)(J$.M(268193, J$.T(268169, 'Server selection timed out after ', 21, false), 'concat', false)(J$.R(268177, 'timeout', timeout, false, false), J$.T(268185, ' ms', 21, false))), J$.G(268225, J$.G(268217, J$.R(268209, 'topology', topology, false, false), 'description'), 'error')));
                            }
                            if (J$.C(15464, J$.U(16874, '!', J$.G(268265, J$.G(268257, J$.R(268249, 'topology', topology, false, false), 's'), 'connected')))) {
                                J$.M(268281, J$.R(268273, 'topology', topology, false, false), 'connect', false)();
                                var failToConnectTimer = J$.W(268441, 'failToConnectTimer', J$.F(268433, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(268289, 'setTimeout', undefined, true, true) : setTimeout = J$.R(268289, 'setTimeout', setTimeout, true, true)), false)(J$.T(268409, function () {
                                    jalangiLabel69:
                                        while (true) {
                                            try {
                                                J$.Fe(268393, arguments.callee, this, arguments);
                                                arguments = J$.N(268401, 'arguments', arguments, true, false, false);
                                                J$.M(268321, J$.R(268297, 'topology', topology, false, false), 'removeListener', false)(J$.T(268305, 'connect', 21, false), J$.R(268313, 'connectHandler', connectHandler, false, false));
                                                J$.F(268385, J$.R(268329, 'callback', callback, false, false), false)(J$.F(268353, J$.R(268337, 'MongoTimeoutError', MongoTimeoutError, false, true), true)(J$.T(268345, 'Server selection timed out waiting to connect', 21, false)), J$.G(268377, J$.G(268369, J$.R(268361, 'topology', topology, false, false), 'description'), 'error'));
                                            } catch (J$e) {
                                                J$.Ex(276273, J$e);
                                            } finally {
                                                if (J$.Fr(276281))
                                                    continue jalangiLabel69;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.B(16882, '-', J$.R(268417, 'timeout', timeout, false, false), J$.R(268425, 'duration', duration, false, false))), failToConnectTimer, false, false);
                                var connectHandler = J$.W(268561, 'connectHandler', J$.T(268553, function connectHandler() {
                                    jalangiLabel70:
                                        while (true) {
                                            try {
                                                J$.Fe(268537, arguments.callee, this, arguments);
                                                arguments = J$.N(268545, 'arguments', arguments, true, false, false);
                                                J$.F(268465, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(268449, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(268449, 'clearTimeout', clearTimeout, true, true)), false)(J$.R(268457, 'failToConnectTimer', failToConnectTimer, false, false));
                                                J$.F(268529, J$.R(268473, 'selectServers', selectServers, false, true), false)(J$.R(268481, 'topology', topology, false, false), J$.R(268489, 'selector', selector, false, false), J$.R(268497, 'timeout', timeout, false, false), J$.M(268513, J$.I(typeof process === 'undefined' ? process = J$.R(268505, 'process', undefined, true, true) : process = J$.R(268505, 'process', process, true, true)), 'hrtime', false)(), J$.R(268521, 'callback', callback, false, false));
                                            } catch (J$e) {
                                                J$.Ex(276289, J$e);
                                            } finally {
                                                if (J$.Fr(276297))
                                                    continue jalangiLabel70;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), connectHandler, false, false);
                                J$.M(268593, J$.R(268569, 'topology', topology, false, false), 'once', false)(J$.T(268577, 'connect', 21, false), J$.R(268585, 'connectHandler', connectHandler, false, false));
                                return J$.Rt(268601, undefined);
                            }
                            var serverDescriptions = J$.W(268657, 'serverDescriptions', J$.M(268649, J$.I(typeof Array === 'undefined' ? Array = J$.R(268609, 'Array', undefined, true, true) : Array = J$.R(268609, 'Array', Array, true, true)), 'from', false)(J$.M(268641, J$.G(268633, J$.G(268625, J$.R(268617, 'topology', topology, false, false), 'description'), 'servers'), 'values', false)()), serverDescriptions, false, false);
                            var descriptions;
                            if (J$.C(15480, J$.B(16890, '===', J$.F(268681, J$.R(268665, '_typeof', _typeof, false, true), false)(J$.R(268673, 'selector', selector, false, false)), J$.T(268689, 'object', 21, false)))) {
                                var readPreference = J$.W(268745, 'readPreference', J$.C(15472, J$.G(268705, J$.R(268697, 'selector', selector, false, false), 'readPreference')) ? J$.G(268721, J$.R(268713, 'selector', selector, false, false), 'readPreference') : J$.G(268737, J$.R(268729, 'ReadPreference', ReadPreference, false, true), 'primary'), readPreference, false, false);
                                selector = J$.W(268777, 'selector', J$.F(268769, J$.R(268753, 'readPreferenceServerSelector', readPreferenceServerSelector, false, true), false)(J$.R(268761, 'readPreference', readPreference, false, false)), selector, false, false);
                            }
                            try {
                                descriptions = J$.W(268841, 'descriptions', J$.C(15488, J$.R(268785, 'selector', selector, false, false)) ? J$.F(268825, J$.R(268793, 'selector', selector, false, false), false)(J$.G(268809, J$.R(268801, 'topology', topology, false, false), 'description'), J$.R(268817, 'serverDescriptions', serverDescriptions, false, false)) : J$.R(268833, 'serverDescriptions', serverDescriptions, false, false), descriptions, false, false);
                            } catch (e) {
                                J$.N(268889, 'e', e, false, false, true);
                                return J$.Rt(268881, J$.F(268873, J$.R(268849, 'callback', callback, false, false), false)(J$.R(268857, 'e', e, false, false), J$.T(268865, null, 25, false)));
                            }
                            if (J$.C(15496, J$.G(268905, J$.R(268897, 'descriptions', descriptions, false, false), 'length'))) {
                                var servers = J$.W(269017, 'servers', J$.M(269009, J$.R(268913, 'descriptions', descriptions, false, false), 'map', false)(J$.T(269001, function (description) {
                                    jalangiLabel71:
                                        while (true) {
                                            try {
                                                J$.Fe(268977, arguments.callee, this, arguments);
                                                arguments = J$.N(268985, 'arguments', arguments, true, false, false);
                                                description = J$.N(268993, 'description', description, true, false, false);
                                                return J$.Rt(268969, J$.M(268961, J$.G(268937, J$.G(268929, J$.R(268921, 'topology', topology, false, false), 's'), 'servers'), 'get', false)(J$.G(268953, J$.R(268945, 'description', description, false, false), 'address')));
                                            } catch (J$e) {
                                                J$.Ex(276305, J$e);
                                            } finally {
                                                if (J$.Fr(276313))
                                                    continue jalangiLabel71;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), servers, false, false);
                                return J$.Rt(269057, J$.F(269049, J$.R(269025, 'callback', callback, false, false), false)(J$.T(269033, null, 25, false), J$.R(269041, 'servers', servers, false, false)));
                            }
                            var retrySelection = J$.W(269897, 'retrySelection', J$.T(269889, function retrySelection() {
                                jalangiLabel77:
                                    while (true) {
                                        try {
                                            J$.Fe(269849, arguments.callee, this, arguments);
                                            arguments = J$.N(269857, 'arguments', arguments, true, false, false);
                                            J$.N(269865, 'descriptionChangedHandler', descriptionChangedHandler, false, false, false);
                                            J$.N(269873, 'iterationTimer', iterationTimer, false, false, false);
                                            J$.N(269881, 'timerIndex', timerIndex, false, false, false);
                                            J$.M(269153, J$.G(269081, J$.G(269073, J$.R(269065, 'topology', topology, false, false), 's'), 'monitorTimers'), 'map', false)(J$.T(269145, function (timer) {
                                                jalangiLabel72:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(269121, arguments.callee, this, arguments);
                                                            arguments = J$.N(269129, 'arguments', arguments, true, false, false);
                                                            timer = J$.N(269137, 'timer', timer, true, false, false);
                                                            return J$.Rt(269113, J$.F(269105, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(269089, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(269089, 'clearTimeout', clearTimeout, true, true)), false)(J$.R(269097, 'timer', timer, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(276321, J$e);
                                                        } finally {
                                                            if (J$.Fr(276329))
                                                                continue jalangiLabel72;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.P(269185, J$.G(269169, J$.R(269161, 'topology', topology, false, false), 's'), 'monitorTimers', J$.T(269177, [], 10, false));
                                            J$.M(269417, J$.G(269209, J$.G(269201, J$.R(269193, 'topology', topology, false, false), 's'), 'servers'), 'forEach', false)(J$.T(269409, function (server) {
                                                jalangiLabel74:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(269377, arguments.callee, this, arguments);
                                                            arguments = J$.N(269385, 'arguments', arguments, true, false, false);
                                                            server = J$.N(269393, 'server', server, true, false, false);
                                                            J$.N(269401, 'timer', timer, false, false, false);
                                                            var timer = J$.W(269329, 'timer', J$.F(269321, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(269217, 'setTimeout', undefined, true, true) : setTimeout = J$.R(269217, 'setTimeout', setTimeout, true, true)), false)(J$.T(269297, function () {
                                                                jalangiLabel73:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(269281, arguments.callee, this, arguments);
                                                                            arguments = J$.N(269289, 'arguments', arguments, true, false, false);
                                                                            return J$.Rt(269273, J$.M(269265, J$.R(269225, 'server', server, false, false), 'monitor', false)(J$.T(269257, { heartbeatFrequencyMS: J$.G(269249, J$.G(269241, J$.R(269233, 'topology', topology, false, false), 'description'), 'heartbeatFrequencyMS') }, 11, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(276337, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(276345))
                                                                                continue jalangiLabel73;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false), J$.G(269313, J$.R(269305, 'TOPOLOGY_DEFAULTS', TOPOLOGY_DEFAULTS, false, true), 'minHeartbeatFrequencyMS')), timer, false, false);
                                                            J$.M(269369, J$.G(269353, J$.G(269345, J$.R(269337, 'topology', topology, false, false), 's'), 'monitorTimers'), 'push', false)(J$.R(269361, 'timer', timer, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(276353, J$e);
                                                        } finally {
                                                            if (J$.Fr(276361))
                                                                continue jalangiLabel74;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            var descriptionChangedHandler = J$.W(269577, 'descriptionChangedHandler', J$.T(269569, function descriptionChangedHandler() {
                                                jalangiLabel75:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(269553, arguments.callee, this, arguments);
                                                            arguments = J$.N(269561, 'arguments', arguments, true, false, false);
                                                            J$.F(269441, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(269425, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(269425, 'clearTimeout', clearTimeout, true, true)), false)(J$.R(269433, 'iterationTimer', iterationTimer, false, false));
                                                            J$.M(269489, J$.G(269465, J$.G(269457, J$.R(269449, 'topology', topology, false, false), 's'), 'iterationTimers'), 'splice', false)(J$.R(269473, 'timerIndex', timerIndex, false, false), J$.T(269481, 1, 22, false));
                                                            J$.F(269545, J$.R(269497, 'selectServers', selectServers, false, true), false)(J$.R(269505, 'topology', topology, false, false), J$.R(269513, 'selector', selector, false, false), J$.R(269521, 'timeout', timeout, false, false), J$.R(269529, 'start', start, false, false), J$.R(269537, 'callback', callback, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(276369, J$e);
                                                        } finally {
                                                            if (J$.Fr(276377))
                                                                continue jalangiLabel75;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), descriptionChangedHandler, false, false);
                                            var iterationTimer = J$.W(269761, 'iterationTimer', J$.F(269753, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(269585, 'setTimeout', undefined, true, true) : setTimeout = J$.R(269585, 'setTimeout', setTimeout, true, true)), false)(J$.T(269729, function () {
                                                jalangiLabel76:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(269713, arguments.callee, this, arguments);
                                                            arguments = J$.N(269721, 'arguments', arguments, true, false, false);
                                                            J$.M(269617, J$.R(269593, 'topology', topology, false, false), 'removeListener', false)(J$.T(269601, 'topologyDescriptionChanged', 21, false), J$.R(269609, 'descriptionChangedHandler', descriptionChangedHandler, false, false));
                                                            J$.F(269705, J$.R(269625, 'callback', callback, false, false), false)(J$.F(269697, J$.R(269633, 'MongoTimeoutError', MongoTimeoutError, false, true), true)(J$.M(269665, J$.T(269641, 'Server selection timed out after ', 21, false), 'concat', false)(J$.R(269649, 'timeout', timeout, false, false), J$.T(269657, ' ms', 21, false)), J$.G(269689, J$.G(269681, J$.R(269673, 'topology', topology, false, false), 'description'), 'error')));
                                                        } catch (J$e) {
                                                            J$.Ex(276385, J$e);
                                                        } finally {
                                                            if (J$.Fr(276393))
                                                                continue jalangiLabel76;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.B(16898, '-', J$.R(269737, 'timeout', timeout, false, false), J$.R(269745, 'duration', duration, false, false))), iterationTimer, false, false);
                                            var timerIndex = J$.W(269809, 'timerIndex', J$.M(269801, J$.G(269785, J$.G(269777, J$.R(269769, 'topology', topology, false, false), 's'), 'iterationTimers'), 'push', false)(J$.R(269793, 'iterationTimer', iterationTimer, false, false)), timerIndex, false, false);
                                            J$.M(269841, J$.R(269817, 'topology', topology, false, false), 'once', false)(J$.T(269825, 'topologyDescriptionChanged', 21, false), J$.R(269833, 'descriptionChangedHandler', descriptionChangedHandler, false, false));
                                        } catch (J$e) {
                                            J$.Ex(276401, J$e);
                                        } finally {
                                            if (J$.Fr(276409))
                                                continue jalangiLabel77;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), retrySelection, false, false);
                            J$.F(269913, J$.R(269905, 'retrySelection', retrySelection, false, false), false)();
                        } catch (J$e) {
                            J$.Ex(276417, J$e);
                        } finally {
                            if (J$.Fr(276425))
                                continue jalangiLabel78;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createAndConnectServer(topology, serverDescription) {
                jalangiLabel80:
                    while (true) {
                        try {
                            J$.Fe(270513, arguments.callee, this, arguments);
                            arguments = J$.N(270521, 'arguments', arguments, true, false, false);
                            topology = J$.N(270529, 'topology', topology, true, false, false);
                            serverDescription = J$.N(270537, 'serverDescription', serverDescription, true, false, false);
                            J$.N(270545, 'server', server, false, false, false);
                            J$.M(270113, J$.R(270041, 'topology', topology, false, false), 'emit', false)(J$.T(270049, 'serverOpening', 21, false), J$.M(270105, J$.R(270057, 'monitoring', monitoring, false, true), 'ServerOpeningEvent', true)(J$.G(270081, J$.G(270073, J$.R(270065, 'topology', topology, false, false), 's'), 'id'), J$.G(270097, J$.R(270089, 'serverDescription', serverDescription, false, false), 'address')));
                            var server = J$.W(270177, 'server', J$.F(270169, J$.R(270121, 'Server', Server, false, true), true)(J$.R(270129, 'serverDescription', serverDescription, false, false), J$.G(270153, J$.G(270145, J$.R(270137, 'topology', topology, false, false), 's'), 'options'), J$.R(270161, 'topology', topology, false, false)), server, false, false);
                            J$.F(270217, J$.R(270185, 'relayEvents', relayEvents, false, true), false)(J$.R(270193, 'server', server, false, false), J$.R(270201, 'topology', topology, false, false), J$.R(270209, 'SERVER_RELAY_EVENTS', SERVER_RELAY_EVENTS, false, true));
                            J$.M(270273, J$.R(270225, 'server', server, false, false), 'once', false)(J$.T(270233, 'connect', 21, false), J$.F(270265, J$.R(270241, 'serverConnectEventHandler', serverConnectEventHandler, false, true), false)(J$.R(270249, 'server', server, false, false), J$.R(270257, 'topology', topology, false, false)));
                            J$.M(270329, J$.R(270281, 'server', server, false, false), 'on', false)(J$.T(270289, 'descriptionReceived', 21, false), J$.M(270321, J$.G(270305, J$.R(270297, 'topology', topology, false, false), 'serverUpdateHandler'), 'bind', false)(J$.R(270313, 'topology', topology, false, false)));
                            J$.M(270385, J$.R(270337, 'server', server, false, false), 'on', false)(J$.T(270345, 'error', 21, false), J$.F(270377, J$.R(270353, 'serverErrorEventHandler', serverErrorEventHandler, false, true), false)(J$.R(270361, 'server', server, false, false), J$.R(270369, 'topology', topology, false, false)));
                            J$.M(270473, J$.R(270393, 'server', server, false, false), 'on', false)(J$.T(270401, 'close', 21, false), J$.T(270465, function () {
                                jalangiLabel79:
                                    while (true) {
                                        try {
                                            J$.Fe(270449, arguments.callee, this, arguments);
                                            arguments = J$.N(270457, 'arguments', arguments, true, false, false);
                                            return J$.Rt(270441, J$.M(270433, J$.R(270409, 'topology', topology, false, false), 'emit', false)(J$.T(270417, 'close', 21, false), J$.R(270425, 'server', server, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(276433, J$e);
                                        } finally {
                                            if (J$.Fr(276441))
                                                continue jalangiLabel79;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(270489, J$.R(270481, 'server', server, false, false), 'connect', false)();
                            return J$.Rt(270505, J$.R(270497, 'server', server, false, false));
                        } catch (J$e) {
                            J$.Ex(276449, J$e);
                        } finally {
                            if (J$.Fr(276457))
                                continue jalangiLabel80;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connectServers(topology, serverDescriptions) {
                jalangiLabel82:
                    while (true) {
                        try {
                            J$.Fe(270753, arguments.callee, this, arguments);
                            arguments = J$.N(270761, 'arguments', arguments, true, false, false);
                            topology = J$.N(270769, 'topology', topology, true, false, false);
                            serverDescriptions = J$.N(270777, 'serverDescriptions', serverDescriptions, true, false, false);
                            J$.P(270745, J$.G(270561, J$.R(270553, 'topology', topology, false, false), 's'), 'servers', J$.M(270737, J$.R(270569, 'serverDescriptions', serverDescriptions, false, false), 'reduce', false)(J$.T(270713, function (servers, serverDescription) {
                                jalangiLabel81:
                                    while (true) {
                                        try {
                                            J$.Fe(270673, arguments.callee, this, arguments);
                                            arguments = J$.N(270681, 'arguments', arguments, true, false, false);
                                            servers = J$.N(270689, 'servers', servers, true, false, false);
                                            serverDescription = J$.N(270697, 'serverDescription', serverDescription, true, false, false);
                                            J$.N(270705, 'server', server, false, false, false);
                                            var server = J$.W(270609, 'server', J$.F(270601, J$.R(270577, 'createAndConnectServer', createAndConnectServer, false, true), false)(J$.R(270585, 'topology', topology, false, false), J$.R(270593, 'serverDescription', serverDescription, false, false)), server, false, false);
                                            J$.M(270649, J$.R(270617, 'servers', servers, false, false), 'set', false)(J$.G(270633, J$.R(270625, 'serverDescription', serverDescription, false, false), 'address'), J$.R(270641, 'server', server, false, false));
                                            return J$.Rt(270665, J$.R(270657, 'servers', servers, false, false));
                                        } catch (J$e) {
                                            J$.Ex(276465, J$e);
                                        } finally {
                                            if (J$.Fr(276473))
                                                continue jalangiLabel81;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.F(270729, J$.I(typeof Map === 'undefined' ? Map = J$.R(270721, 'Map', undefined, true, true) : Map = J$.R(270721, 'Map', Map, true, true)), true)()));
                        } catch (J$e) {
                            J$.Ex(276481, J$e);
                        } finally {
                            if (J$.Fr(276489))
                                continue jalangiLabel82;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function updateServers(topology, incomingServerDescription) {
                jalangiLabel83:
                    while (true) {
                        try {
                            J$.Fe(271881, arguments.callee, this, arguments);
                            arguments = J$.N(271889, 'arguments', arguments, true, false, false);
                            topology = J$.N(271897, 'topology', topology, true, false, false);
                            incomingServerDescription = J$.N(271905, 'incomingServerDescription', incomingServerDescription, true, false, false);
                            J$.N(271913, 'server', server, false, false, false);
                            J$.N(271921, '_iteratorNormalCompletion', _iteratorNormalCompletion, false, false, false);
                            J$.N(271929, '_didIteratorError', _didIteratorError, false, false, false);
                            J$.N(271937, '_iteratorError', _iteratorError, false, false, false);
                            J$.N(271945, '_iterator', _iterator, false, false, false);
                            J$.N(271953, '_step', _step, false, false, false);
                            J$.N(271961, 'serverDescription', serverDescription, false, false, false);
                            J$.N(271969, '_server', _server, false, false, false);
                            J$.N(271977, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, false, false, false);
                            J$.N(271985, '_didIteratorError2', _didIteratorError2, false, false, false);
                            J$.N(271993, '_iteratorError2', _iteratorError2, false, false, false);
                            J$.N(272001, '_iterator2', _iterator2, false, false, false);
                            J$.N(272009, '_step2', _step2, false, false, false);
                            J$.N(272017, 'entry', entry, false, false, false);
                            J$.N(272025, 'serverAddress', serverAddress, false, false, false);
                            J$.N(272033, '_server2', _server2, false, false, false);
                            if (J$.C(15512, J$.C(15504, J$.R(270785, 'incomingServerDescription', incomingServerDescription, false, false)) ? J$.M(270833, J$.G(270809, J$.G(270801, J$.R(270793, 'topology', topology, false, false), 's'), 'servers'), 'has', false)(J$.G(270825, J$.R(270817, 'incomingServerDescription', incomingServerDescription, false, false), 'address')) : J$._())) {
                                var server = J$.W(270889, 'server', J$.M(270881, J$.G(270857, J$.G(270849, J$.R(270841, 'topology', topology, false, false), 's'), 'servers'), 'get', false)(J$.G(270873, J$.R(270865, 'incomingServerDescription', incomingServerDescription, false, false), 'address')), server, false, false);
                                J$.P(270921, J$.G(270905, J$.R(270897, 'server', server, false, false), 's'), 'description', J$.R(270913, 'incomingServerDescription', incomingServerDescription, false, false));
                            }
                            var _iteratorNormalCompletion = J$.W(270937, '_iteratorNormalCompletion', J$.T(270929, true, 23, false), _iteratorNormalCompletion, false, false);
                            var _didIteratorError = J$.W(270953, '_didIteratorError', J$.T(270945, false, 23, false), _didIteratorError, false, false);
                            var _iteratorError = J$.W(270969, '_iteratorError', J$.T(270961, undefined, 24, false), _iteratorError, false, false);
                            try {
                                for (var _iterator = J$.W(271033, '_iterator', J$.M(271025, J$.M(271001, J$.G(270993, J$.G(270985, J$.R(270977, 'topology', topology, false, false), 'description'), 'servers'), 'values', false)(), J$.G(271017, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(271009, 'Symbol', undefined, true, true) : Symbol = J$.R(271009, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator, false, false), _step; J$.C(15528, J$.U(16906, '!', _iteratorNormalCompletion = J$.W(271073, '_iteratorNormalCompletion', J$.G(271065, _step = J$.W(271057, '_step', J$.M(271049, J$.R(271041, '_iterator', _iterator, false, false), 'next', false)(), _step, false, false), 'done'), _iteratorNormalCompletion, false, false))); _iteratorNormalCompletion = J$.W(271089, '_iteratorNormalCompletion', J$.T(271081, true, 23, false), _iteratorNormalCompletion, false, false)) {
                                    var serverDescription = J$.W(271113, 'serverDescription', J$.G(271105, J$.R(271097, '_step', _step, false, false), 'value'), serverDescription, false, false);
                                    if (J$.C(15520, J$.U(16914, '!', J$.M(271161, J$.G(271137, J$.G(271129, J$.R(271121, 'topology', topology, false, false), 's'), 'servers'), 'has', false)(J$.G(271153, J$.R(271145, 'serverDescription', serverDescription, false, false), 'address'))))) {
                                        var _server = J$.W(271201, '_server', J$.F(271193, J$.R(271169, 'createAndConnectServer', createAndConnectServer, false, true), false)(J$.R(271177, 'topology', topology, false, false), J$.R(271185, 'serverDescription', serverDescription, false, false)), _server, false, false);
                                        J$.M(271257, J$.G(271225, J$.G(271217, J$.R(271209, 'topology', topology, false, false), 's'), 'servers'), 'set', false)(J$.G(271241, J$.R(271233, 'serverDescription', serverDescription, false, false), 'address'), J$.R(271249, '_server', _server, false, false));
                                    }
                                }
                            } catch (err) {
                                J$.N(271297, 'err', err, false, false, true);
                                _didIteratorError = J$.W(271273, '_didIteratorError', J$.T(271265, true, 23, false), _didIteratorError, false, false);
                                _iteratorError = J$.W(271289, '_iteratorError', J$.R(271281, 'err', err, false, false), _iteratorError, false, false);
                            } finally {
                                try {
                                    if (J$.C(15544, J$.C(15536, J$.U(16922, '!', J$.R(271305, '_iteratorNormalCompletion', _iteratorNormalCompletion, false, false))) ? J$.B(16930, '!=', J$.G(271329, J$.R(271313, '_iterator', _iterator, false, false), J$.T(271321, 'return', 21, false)), J$.T(271337, null, 25, false)) : J$._())) {
                                        J$.M(271361, J$.R(271345, '_iterator', _iterator, false, false), J$.T(271353, 'return', 21, false), false)();
                                    }
                                } finally {
                                    if (J$.C(15552, J$.R(271369, '_didIteratorError', _didIteratorError, false, false))) {
                                        throw J$.R(271377, '_iteratorError', _iteratorError, false, false);
                                    }
                                }
                            }
                            var _iteratorNormalCompletion2 = J$.W(271393, '_iteratorNormalCompletion2', J$.T(271385, true, 23, false), _iteratorNormalCompletion2, false, false);
                            var _didIteratorError2 = J$.W(271409, '_didIteratorError2', J$.T(271401, false, 23, false), _didIteratorError2, false, false);
                            var _iteratorError2 = J$.W(271425, '_iteratorError2', J$.T(271417, undefined, 24, false), _iteratorError2, false, false);
                            try {
                                for (var _iterator2 = J$.W(271481, '_iterator2', J$.M(271473, J$.G(271449, J$.G(271441, J$.R(271433, 'topology', topology, false, false), 's'), 'servers'), J$.G(271465, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(271457, 'Symbol', undefined, true, true) : Symbol = J$.R(271457, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator2, false, false), _step2; J$.C(15568, J$.U(16938, '!', _iteratorNormalCompletion2 = J$.W(271521, '_iteratorNormalCompletion2', J$.G(271513, _step2 = J$.W(271505, '_step2', J$.M(271497, J$.R(271489, '_iterator2', _iterator2, false, false), 'next', false)(), _step2, false, false), 'done'), _iteratorNormalCompletion2, false, false))); _iteratorNormalCompletion2 = J$.W(271537, '_iteratorNormalCompletion2', J$.T(271529, true, 23, false), _iteratorNormalCompletion2, false, false)) {
                                    var entry = J$.W(271561, 'entry', J$.G(271553, J$.R(271545, '_step2', _step2, false, false), 'value'), entry, false, false);
                                    var serverAddress = J$.W(271593, 'serverAddress', J$.G(271585, J$.R(271569, 'entry', entry, false, false), J$.T(271577, 0, 22, false)), serverAddress, false, false);
                                    if (J$.C(15560, J$.M(271625, J$.G(271609, J$.R(271601, 'topology', topology, false, false), 'description'), 'hasServer', false)(J$.R(271617, 'serverAddress', serverAddress, false, false)))) {
                                        continue;
                                    }
                                    var _server2 = J$.W(271673, '_server2', J$.M(271665, J$.G(271649, J$.G(271641, J$.R(271633, 'topology', topology, false, false), 's'), 'servers'), 'get', false)(J$.R(271657, 'serverAddress', serverAddress, false, false)), _server2, false, false);
                                    J$.M(271721, J$.G(271697, J$.G(271689, J$.R(271681, 'topology', topology, false, false), 's'), 'servers'), J$.T(271705, 'delete', 21, false), false)(J$.R(271713, 'serverAddress', serverAddress, false, false));
                                    J$.F(271753, J$.R(271729, 'destroyServer', destroyServer, false, true), false)(J$.R(271737, '_server2', _server2, false, false), J$.R(271745, 'topology', topology, false, false));
                                }
                            } catch (err) {
                                J$.N(271793, 'err', err, false, false, true);
                                _didIteratorError2 = J$.W(271769, '_didIteratorError2', J$.T(271761, true, 23, false), _didIteratorError2, false, false);
                                _iteratorError2 = J$.W(271785, '_iteratorError2', J$.R(271777, 'err', err, false, false), _iteratorError2, false, false);
                            } finally {
                                try {
                                    if (J$.C(15584, J$.C(15576, J$.U(16946, '!', J$.R(271801, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, false, false))) ? J$.B(16954, '!=', J$.G(271825, J$.R(271809, '_iterator2', _iterator2, false, false), J$.T(271817, 'return', 21, false)), J$.T(271833, null, 25, false)) : J$._())) {
                                        J$.M(271857, J$.R(271841, '_iterator2', _iterator2, false, false), J$.T(271849, 'return', 21, false), false)();
                                    }
                                } finally {
                                    if (J$.C(15592, J$.R(271865, '_didIteratorError2', _didIteratorError2, false, false))) {
                                        throw J$.R(271873, '_iteratorError2', _iteratorError2, false, false);
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(276497, J$e);
                        } finally {
                            if (J$.Fr(276505))
                                continue jalangiLabel83;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function serverConnectEventHandler(server, topology) {
                jalangiLabel85:
                    while (true) {
                        try {
                            J$.Fe(272129, arguments.callee, this, arguments);
                            arguments = J$.N(272137, 'arguments', arguments, true, false, false);
                            server = J$.N(272145, 'server', server, true, false, false);
                            topology = J$.N(272153, 'topology', topology, true, false, false);
                            return J$.Rt(272121, J$.T(272113, function () {
                                jalangiLabel84:
                                    while (true) {
                                        try {
                                            J$.Fe(272097, arguments.callee, this, arguments);
                                            arguments = J$.N(272105, 'arguments', arguments, true, false, false);
                                            J$.M(272089, J$.R(272041, 'server', server, false, false), 'monitor', false)(J$.T(272081, {
                                                initial: J$.T(272049, true, 23, false),
                                                heartbeatFrequencyMS: J$.G(272073, J$.G(272065, J$.R(272057, 'topology', topology, false, false), 'description'), 'heartbeatFrequencyMS')
                                            }, 11, false));
                                        } catch (J$e) {
                                            J$.Ex(276513, J$e);
                                        } finally {
                                            if (J$.Fr(276521))
                                                continue jalangiLabel84;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(276529, J$e);
                        } finally {
                            if (J$.Fr(276537))
                                continue jalangiLabel85;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function serverErrorEventHandler(server) {
                jalangiLabel87:
                    while (true) {
                        try {
                            J$.Fe(272321, arguments.callee, this, arguments);
                            arguments = J$.N(272329, 'arguments', arguments, true, false, false);
                            server = J$.N(272337, 'server', server, true, false, false);
                            return J$.Rt(272313, J$.T(272305, function (err) {
                                jalangiLabel86:
                                    while (true) {
                                        try {
                                            J$.Fe(272281, arguments.callee, this, arguments);
                                            arguments = J$.N(272289, 'arguments', arguments, true, false, false);
                                            err = J$.N(272297, 'err', err, true, false, false);
                                            if (J$.C(15600, J$.F(272185, J$.R(272161, 'isSDAMUnrecoverableError', isSDAMUnrecoverableError, false, true), false)(J$.R(272169, 'err', err, false, false), J$.R(272177, 'server', server, false, false)))) {
                                                J$.F(272233, J$.R(272193, 'resetServerState', resetServerState, false, true), false)(J$.R(272201, 'server', server, false, false), J$.R(272209, 'err', err, false, false), J$.T(272225, { clearPool: J$.T(272217, true, 23, false) }, 11, false));
                                                return J$.Rt(272241, undefined);
                                            }
                                            J$.F(272273, J$.R(272249, 'resetServerState', resetServerState, false, true), false)(J$.R(272257, 'server', server, false, false), J$.R(272265, 'err', err, false, false));
                                        } catch (J$e) {
                                            J$.Ex(276545, J$e);
                                        } finally {
                                            if (J$.Fr(276553))
                                                continue jalangiLabel86;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(276561, J$e);
                        } finally {
                            if (J$.Fr(276569))
                                continue jalangiLabel87;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeWriteOperation(args, options, callback) {
                jalangiLabel90:
                    while (true) {
                        try {
                            J$.Fe(273249, arguments.callee, this, arguments);
                            arguments = J$.N(273257, 'arguments', arguments, true, false, false);
                            args = J$.N(273265, 'args', args, true, false, false);
                            options = J$.N(273273, 'options', options, true, false, false);
                            callback = J$.N(273281, 'callback', callback, true, false, false);
                            J$.N(273289, 'topology', topology, false, false, false);
                            J$.N(273297, 'op', op, false, false, false);
                            J$.N(273305, 'ns', ns, false, false, false);
                            J$.N(273313, 'ops', ops, false, false, false);
                            J$.N(273321, 'willRetryWrite', willRetryWrite, false, false, false);
                            if (J$.C(15608, J$.B(16970, '===', J$.U(16962, 'typeof', J$.R(272345, 'options', options, false, false)), J$.T(272353, 'function', 21, false))))
                                callback = J$.W(272369, 'callback', J$.R(272361, 'options', options, false, false), callback, false, false), options = J$.W(272385, 'options', J$.T(272377, {}, 11, false), options, false, false);
                            options = J$.W(272409, 'options', J$.C(15616, J$.R(272393, 'options', options, false, false)) ? J$._() : J$.T(272401, {}, 11, false), options, false, false);
                            var topology = J$.W(272433, 'topology', J$.G(272425, J$.R(272417, 'args', args, false, false), 'topology'), topology, false, false);
                            var op = J$.W(272457, 'op', J$.G(272449, J$.R(272441, 'args', args, false, false), 'op'), op, false, false);
                            var ns = J$.W(272481, 'ns', J$.G(272473, J$.R(272465, 'args', args, false, false), 'ns'), ns, false, false);
                            var ops = J$.W(272505, 'ops', J$.G(272497, J$.R(272489, 'args', args, false, false), 'ops'), ops, false, false);
                            var willRetryWrite = J$.W(272609, 'willRetryWrite', J$.C(15648, J$.C(15640, J$.C(15632, J$.C(15624, J$.U(16978, '!', J$.G(272521, J$.R(272513, 'args', args, false, false), 'retrying'))) ? J$.U(16994, '!', J$.U(16986, '!', J$.G(272537, J$.R(272529, 'options', options, false, false), 'retryWrites'))) : J$._()) ? J$.G(272553, J$.R(272545, 'options', options, false, false), 'session') : J$._()) ? J$.F(272577, J$.R(272561, 'isRetryableWritesSupported', isRetryableWritesSupported, false, true), false)(J$.R(272569, 'topology', topology, false, false)) : J$._()) ? J$.U(17002, '!', J$.M(272601, J$.G(272593, J$.R(272585, 'options', options, false, false), 'session'), 'inTransaction', false)()) : J$._(), willRetryWrite, false, false);
                            J$.M(273241, J$.R(272617, 'topology', topology, false, false), 'selectServer', false)(J$.F(272633, J$.R(272625, 'writableServerSelector', writableServerSelector, false, true), false)(), J$.R(272641, 'options', options, false, false), J$.T(273233, function (err, server) {
                                jalangiLabel89:
                                    while (true) {
                                        try {
                                            J$.Fe(273193, arguments.callee, this, arguments);
                                            arguments = J$.N(273201, 'arguments', arguments, true, false, false);
                                            err = J$.N(273209, 'err', err, true, false, false);
                                            server = J$.N(273217, 'server', server, true, false, false);
                                            J$.N(273225, 'handler', handler, false, false, false);
                                            if (J$.C(15656, J$.R(272649, 'err', err, false, false))) {
                                                J$.F(272681, J$.R(272657, 'callback', callback, false, false), false)(J$.R(272665, 'err', err, false, false), J$.T(272673, null, 25, false));
                                                return J$.Rt(272689, undefined);
                                            }
                                            var handler = J$.W(273025, 'handler', J$.T(273017, function handler(err, result) {
                                                jalangiLabel88:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(272977, arguments.callee, this, arguments);
                                                            arguments = J$.N(272985, 'arguments', arguments, true, false, false);
                                                            err = J$.N(272993, 'err', err, true, false, false);
                                                            result = J$.N(273001, 'result', result, true, false, false);
                                                            J$.N(273009, 'newArgs', newArgs, false, false, false);
                                                            if (J$.C(15664, J$.U(17010, '!', J$.R(272697, 'err', err, false, false))))
                                                                return J$.Rt(272737, J$.F(272729, J$.R(272705, 'callback', callback, false, false), false)(J$.T(272713, null, 25, false), J$.R(272721, 'result', result, false, false)));
                                                            if (J$.C(15672, J$.U(17018, '!', J$.F(272761, J$.R(272745, 'isRetryableError', isRetryableError, false, true), false)(J$.R(272753, 'err', err, false, false))))) {
                                                                err = J$.W(272793, 'err', J$.F(272785, J$.R(272769, 'getMMAPError', getMMAPError, false, true), false)(J$.R(272777, 'err', err, false, false)), err, false, false);
                                                                return J$.Rt(272825, J$.F(272817, J$.R(272801, 'callback', callback, false, false), false)(J$.R(272809, 'err', err, false, false)));
                                                            }
                                                            if (J$.C(15680, J$.R(272833, 'willRetryWrite', willRetryWrite, false, false))) {
                                                                var newArgs = J$.W(272889, 'newArgs', J$.M(272881, J$.I(typeof Object === 'undefined' ? Object = J$.R(272841, 'Object', undefined, true, true) : Object = J$.R(272841, 'Object', Object, true, true)), 'assign', false)(J$.T(272849, {}, 11, false), J$.R(272857, 'args', args, false, false), J$.T(272873, { retrying: J$.T(272865, true, 23, false) }, 11, false)), newArgs, false, false);
                                                                return J$.Rt(272937, J$.F(272929, J$.R(272897, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.R(272905, 'newArgs', newArgs, false, false), J$.R(272913, 'options', options, false, false), J$.R(272921, 'callback', callback, false, false)));
                                                            }
                                                            return J$.Rt(272969, J$.F(272961, J$.R(272945, 'callback', callback, false, false), false)(J$.R(272953, 'err', err, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(276577, J$e);
                                                        } finally {
                                                            if (J$.Fr(276585))
                                                                continue jalangiLabel88;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), handler, false, false);
                                            if (J$.C(15688, J$.G(273041, J$.R(273033, 'callback', callback, false, false), 'operationId'))) {
                                                J$.P(273073, J$.R(273049, 'handler', handler, false, false), 'operationId', J$.G(273065, J$.R(273057, 'callback', callback, false, false), 'operationId'));
                                            }
                                            if (J$.C(15696, J$.R(273081, 'willRetryWrite', willRetryWrite, false, false))) {
                                                J$.M(273105, J$.G(273097, J$.R(273089, 'options', options, false, false), 'session'), 'incrementTransactionNumber', false)();
                                                J$.P(273129, J$.R(273113, 'options', options, false, false), 'willRetryWrite', J$.R(273121, 'willRetryWrite', willRetryWrite, false, false));
                                            }
                                            J$.M(273185, J$.R(273137, 'server', server, false, false), J$.R(273145, 'op', op, false, false), false)(J$.R(273153, 'ns', ns, false, false), J$.R(273161, 'ops', ops, false, false), J$.R(273169, 'options', options, false, false), J$.R(273177, 'handler', handler, false, false));
                                        } catch (J$e) {
                                            J$.Ex(276593, J$e);
                                        } finally {
                                            if (J$.Fr(276601))
                                                continue jalangiLabel89;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(276609, J$e);
                        } finally {
                            if (J$.Fr(276617))
                                continue jalangiLabel90;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function resetServerState(server, error, options) {
                jalangiLabel94:
                    while (true) {
                        try {
                            J$.Fe(273697, arguments.callee, this, arguments);
                            function resetState() {
                                jalangiLabel92:
                                    while (true) {
                                        try {
                                            J$.Fe(273537, arguments.callee, this, arguments);
                                            arguments = J$.N(273545, 'arguments', arguments, true, false, false);
                                            J$.M(273465, J$.R(273385, 'server', server, false, false), 'emit', false)(J$.T(273393, 'descriptionReceived', 21, false), J$.F(273457, J$.R(273401, 'ServerDescription', ServerDescription, false, true), true)(J$.G(273425, J$.G(273417, J$.R(273409, 'server', server, false, false), 'description'), 'address'), J$.T(273433, null, 25, false), J$.T(273449, { error: J$.R(273441, 'error', error, false, false) }, 11, false)));
                                            J$.M(273529, J$.I(typeof process === 'undefined' ? process = J$.R(273473, 'process', undefined, true, true) : process = J$.R(273473, 'process', process, true, true)), 'nextTick', false)(J$.T(273521, function () {
                                                jalangiLabel91:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(273505, arguments.callee, this, arguments);
                                                            arguments = J$.N(273513, 'arguments', arguments, true, false, false);
                                                            return J$.Rt(273497, J$.M(273489, J$.R(273481, 'server', server, false, false), 'monitor', false)());
                                                        } catch (J$e) {
                                                            J$.Ex(276625, J$e);
                                                        } finally {
                                                            if (J$.Fr(276633))
                                                                continue jalangiLabel91;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(276641, J$e);
                                        } finally {
                                            if (J$.Fr(276649))
                                                continue jalangiLabel92;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(273705, 'arguments', arguments, true, false, false);
                            server = J$.N(273713, 'server', server, true, false, false);
                            error = J$.N(273721, 'error', error, true, false, false);
                            options = J$.N(273729, 'options', options, true, false, false);
                            resetState = J$.N(273745, 'resetState', J$.T(273737, resetState, 12, false), true, false, false);
                            options = J$.W(273377, 'options', J$.M(273369, J$.I(typeof Object === 'undefined' ? Object = J$.R(273329, 'Object', undefined, true, true) : Object = J$.R(273329, 'Object', Object, true, true)), 'assign', false)(J$.T(273337, {}, 11, false), J$.T(273353, { clearPool: J$.T(273345, false, 23, false) }, 11, false), J$.R(273361, 'options', options, false, false)), options, false, false);
                            if (J$.C(15712, J$.C(15704, J$.G(273561, J$.R(273553, 'options', options, false, false), 'clearPool')) ? J$.G(273585, J$.G(273577, J$.R(273569, 'server', server, false, false), 's'), 'pool') : J$._())) {
                                J$.M(273665, J$.G(273609, J$.G(273601, J$.R(273593, 'server', server, false, false), 's'), 'pool'), 'reset', false)(J$.T(273657, function () {
                                    jalangiLabel93:
                                        while (true) {
                                            try {
                                                J$.Fe(273641, arguments.callee, this, arguments);
                                                arguments = J$.N(273649, 'arguments', arguments, true, false, false);
                                                return J$.Rt(273633, J$.F(273625, J$.R(273617, 'resetState', resetState, false, false), false)());
                                            } catch (J$e) {
                                                J$.Ex(276657, J$e);
                                            } finally {
                                                if (J$.Fr(276665))
                                                    continue jalangiLabel93;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                return J$.Rt(273673, undefined);
                            }
                            J$.F(273689, J$.R(273681, 'resetState', resetState, false, false), false)();
                        } catch (J$e) {
                            J$.Ex(276673, J$e);
                        } finally {
                            if (J$.Fr(276681))
                                continue jalangiLabel94;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function translateReadPreference(options) {
                jalangiLabel95:
                    while (true) {
                        try {
                            J$.Fe(274129, arguments.callee, this, arguments);
                            arguments = J$.N(274137, 'arguments', arguments, true, false, false);
                            options = J$.N(274145, 'options', options, true, false, false);
                            J$.N(274153, 'r', r, false, false, false);
                            J$.N(274161, 'mode', mode, false, false, false);
                            if (J$.C(15720, J$.B(17026, '==', J$.G(273761, J$.R(273753, 'options', options, false, false), 'readPreference'), J$.T(273769, null, 25, false)))) {
                                return J$.Rt(273777, undefined);
                            }
                            var r = J$.W(273801, 'r', J$.G(273793, J$.R(273785, 'options', options, false, false), 'readPreference'), r, false, false);
                            if (J$.C(15784, J$.B(17042, '===', J$.U(17034, 'typeof', J$.R(273809, 'r', r, false, false)), J$.T(273817, 'string', 21, false)))) {
                                J$.P(273857, J$.R(273825, 'options', options, false, false), 'readPreference', J$.F(273849, J$.R(273833, 'ReadPreference', ReadPreference, false, true), true)(J$.R(273841, 'r', r, false, false)));
                            } else if (J$.C(15776, J$.C(15736, J$.C(15728, J$.R(273865, 'r', r, false, false)) ? J$.U(17058, '!', J$.B(17050, 'instanceof', J$.R(273873, 'r', r, false, false), J$.R(273881, 'ReadPreference', ReadPreference, false, true))) : J$._()) ? J$.B(17066, '===', J$.F(273905, J$.R(273889, '_typeof', _typeof, false, true), false)(J$.R(273897, 'r', r, false, false)), J$.T(273913, 'object', 21, false)) : J$._())) {
                                var mode = J$.W(273953, 'mode', J$.C(15744, J$.G(273929, J$.R(273921, 'r', r, false, false), 'mode')) ? J$._() : J$.G(273945, J$.R(273937, 'r', r, false, false), 'preference'), mode, false, false);
                                if (J$.C(15760, J$.C(15752, J$.R(273961, 'mode', mode, false, false)) ? J$.B(17082, '===', J$.U(17074, 'typeof', J$.R(273969, 'mode', mode, false, false)), J$.T(273977, 'string', 21, false)) : J$._())) {
                                    J$.P(274057, J$.R(273985, 'options', options, false, false), 'readPreference', J$.F(274049, J$.R(273993, 'ReadPreference', ReadPreference, false, true), true)(J$.R(274001, 'mode', mode, false, false), J$.G(274017, J$.R(274009, 'r', r, false, false), 'tags'), J$.T(274041, { maxStalenessSeconds: J$.G(274033, J$.R(274025, 'r', r, false, false), 'maxStalenessSeconds') }, 11, false)));
                                }
                            } else if (J$.C(15768, J$.U(17098, '!', J$.B(17090, 'instanceof', J$.R(274065, 'r', r, false, false), J$.R(274073, 'ReadPreference', ReadPreference, false, true))))) {
                                throw J$.F(274105, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(274081, 'TypeError', undefined, true, true) : TypeError = J$.R(274081, 'TypeError', TypeError, true, true)), true)(J$.B(17106, '+', J$.T(274089, 'Invalid read preference: ', 21, false), J$.R(274097, 'r', r, false, false)));
                            }
                            return J$.Rt(274121, J$.R(274113, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(276689, J$e);
                        } finally {
                            if (J$.Fr(276697))
                                continue jalangiLabel95;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function srvPollingHandler(topology) {
                jalangiLabel97:
                    while (true) {
                        try {
                            J$.Fe(274473, arguments.callee, this, arguments);
                            arguments = J$.N(274481, 'arguments', arguments, true, false, false);
                            topology = J$.N(274489, 'topology', topology, true, false, false);
                            return J$.Rt(274465, J$.T(274457, function handleSrvPolling(ev) {
                                jalangiLabel96:
                                    while (true) {
                                        try {
                                            J$.Fe(274425, arguments.callee, this, arguments);
                                            arguments = J$.N(274433, 'arguments', arguments, true, false, false);
                                            ev = J$.N(274441, 'ev', ev, true, false, false);
                                            J$.N(274449, 'previousTopologyDescription', previousTopologyDescription, false, false, false);
                                            var previousTopologyDescription = J$.W(274193, 'previousTopologyDescription', J$.G(274185, J$.G(274177, J$.R(274169, 'topology', topology, false, false), 's'), 'description'), previousTopologyDescription, false, false);
                                            J$.P(274257, J$.G(274209, J$.R(274201, 'topology', topology, false, false), 's'), 'description', J$.M(274249, J$.G(274233, J$.G(274225, J$.R(274217, 'topology', topology, false, false), 's'), 'description'), 'updateFromSrvPollingEvent', false)(J$.R(274241, 'ev', ev, false, false)));
                                            if (J$.C(15792, J$.B(17114, '===', J$.G(274281, J$.G(274273, J$.R(274265, 'topology', topology, false, false), 's'), 'description'), J$.R(274289, 'previousTopologyDescription', previousTopologyDescription, false, false)))) {
                                                return J$.Rt(274297, undefined);
                                            }
                                            J$.F(274321, J$.R(274305, 'updateServers', updateServers, false, true), false)(J$.R(274313, 'topology', topology, false, false));
                                            J$.M(274417, J$.R(274329, 'topology', topology, false, false), 'emit', false)(J$.T(274337, 'topologyDescriptionChanged', 21, false), J$.M(274409, J$.R(274345, 'monitoring', monitoring, false, true), 'TopologyDescriptionChangedEvent', true)(J$.G(274369, J$.G(274361, J$.R(274353, 'topology', topology, false, false), 's'), 'id'), J$.R(274377, 'previousTopologyDescription', previousTopologyDescription, false, false), J$.G(274401, J$.G(274393, J$.R(274385, 'topology', topology, false, false), 's'), 'description')));
                                        } catch (J$e) {
                                            J$.Ex(276705, J$e);
                                        } finally {
                                            if (J$.Fr(276713))
                                                continue jalangiLabel96;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(276721, J$e);
                        } finally {
                            if (J$.Fr(276729))
                                continue jalangiLabel97;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(274537, '_typeof', J$.T(274529, _typeof, 12, false), true, false, false);
            _classCallCheck = J$.N(274553, '_classCallCheck', J$.T(274545, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(274569, '_defineProperties', J$.T(274561, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(274585, '_createClass', J$.T(274577, _createClass, 12, false), true, false, false);
            _possibleConstructorReturn = J$.N(274601, '_possibleConstructorReturn', J$.T(274593, _possibleConstructorReturn, 12, false), true, false, false);
            _getPrototypeOf = J$.N(274617, '_getPrototypeOf', J$.T(274609, _getPrototypeOf, 12, false), true, false, false);
            _assertThisInitialized = J$.N(274633, '_assertThisInitialized', J$.T(274625, _assertThisInitialized, 12, false), true, false, false);
            _inherits = J$.N(274649, '_inherits', J$.T(274641, _inherits, 12, false), true, false, false);
            _setPrototypeOf = J$.N(274665, '_setPrototypeOf', J$.T(274657, _setPrototypeOf, 12, false), true, false, false);
            J$.N(274673, 'EventEmitter', EventEmitter, false, false, false);
            J$.N(274681, 'ServerDescription', ServerDescription, false, false, false);
            J$.N(274689, 'ServerType', ServerType, false, false, false);
            J$.N(274697, 'TopologyDescription', TopologyDescription, false, false, false);
            J$.N(274705, 'TopologyType', TopologyType, false, false, false);
            J$.N(274713, 'monitoring', monitoring, false, false, false);
            J$.N(274721, 'calculateDurationInMs', calculateDurationInMs, false, false, false);
            J$.N(274729, 'MongoTimeoutError', MongoTimeoutError, false, false, false);
            J$.N(274737, 'Server', Server, false, false, false);
            J$.N(274745, 'relayEvents', relayEvents, false, false, false);
            J$.N(274753, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(274761, 'readPreferenceServerSelector', readPreferenceServerSelector, false, false, false);
            J$.N(274769, 'writableServerSelector', writableServerSelector, false, false, false);
            J$.N(274777, 'isRetryableWritesSupported', isRetryableWritesSupported, false, false, false);
            J$.N(274785, 'CoreCursor', CoreCursor, false, false, false);
            J$.N(274793, 'deprecate', deprecate, false, false, false);
            J$.N(274801, 'BSON', BSON, false, false, false);
            J$.N(274809, 'createCompressionInfo', createCompressionInfo, false, false, false);
            J$.N(274817, 'isRetryableError', isRetryableError, false, false, false);
            J$.N(274825, 'isSDAMUnrecoverableError', isSDAMUnrecoverableError, false, false, false);
            J$.N(274833, 'ClientSession', ClientSession, false, false, false);
            J$.N(274841, 'createClientInfo', createClientInfo, false, false, false);
            J$.N(274849, 'MongoError', MongoError, false, false, false);
            J$.N(274857, 'resolveClusterTime', resolveClusterTime, false, false, false);
            J$.N(274865, 'SrvPoller', SrvPoller, false, false, false);
            J$.N(274873, 'getMMAPError', getMMAPError, false, false, false);
            J$.N(274881, 'globalTopologyCounter', globalTopologyCounter, false, false, false);
            J$.N(274889, 'TOPOLOGY_DEFAULTS', TOPOLOGY_DEFAULTS, false, false, false);
            J$.N(274897, 'SERVER_RELAY_EVENTS', SERVER_RELAY_EVENTS, false, false, false);
            J$.N(274905, 'LOCAL_SERVER_EVENTS', LOCAL_SERVER_EVENTS, false, false, false);
            J$.N(274913, 'Topology', Topology, false, false, false);
            J$.N(274921, 'RETRYABLE_WRITE_OPERATIONS', RETRYABLE_WRITE_OPERATIONS, false, false, false);
            isWriteCommand = J$.N(274937, 'isWriteCommand', J$.T(274929, isWriteCommand, 12, false), true, false, false);
            destroyServer = J$.N(274953, 'destroyServer', J$.T(274945, destroyServer, 12, false), true, false, false);
            parseStringSeedlist = J$.N(274969, 'parseStringSeedlist', J$.T(274961, parseStringSeedlist, 12, false), true, false, false);
            topologyTypeFromSeedlist = J$.N(274985, 'topologyTypeFromSeedlist', J$.T(274977, topologyTypeFromSeedlist, 12, false), true, false, false);
            randomSelection = J$.N(275001, 'randomSelection', J$.T(274993, randomSelection, 12, false), true, false, false);
            selectServers = J$.N(275017, 'selectServers', J$.T(275009, selectServers, 12, false), true, false, false);
            createAndConnectServer = J$.N(275033, 'createAndConnectServer', J$.T(275025, createAndConnectServer, 12, false), true, false, false);
            connectServers = J$.N(275049, 'connectServers', J$.T(275041, connectServers, 12, false), true, false, false);
            updateServers = J$.N(275065, 'updateServers', J$.T(275057, updateServers, 12, false), true, false, false);
            serverConnectEventHandler = J$.N(275081, 'serverConnectEventHandler', J$.T(275073, serverConnectEventHandler, 12, false), true, false, false);
            serverErrorEventHandler = J$.N(275097, 'serverErrorEventHandler', J$.T(275089, serverErrorEventHandler, 12, false), true, false, false);
            executeWriteOperation = J$.N(275113, 'executeWriteOperation', J$.T(275105, executeWriteOperation, 12, false), true, false, false);
            resetServerState = J$.N(275129, 'resetServerState', J$.T(275121, resetServerState, 12, false), true, false, false);
            translateReadPreference = J$.N(275145, 'translateReadPreference', J$.T(275137, translateReadPreference, 12, false), true, false, false);
            srvPollingHandler = J$.N(275161, 'srvPollingHandler', J$.T(275153, srvPollingHandler, 12, false), true, false, false);
            J$.T(253897, 'use strict', 21, false);
            var EventEmitter = J$.W(255513, 'EventEmitter', J$.F(255505, J$.I(typeof require === 'undefined' ? require = J$.R(255489, 'require', undefined, true, true) : require = J$.R(255489, 'require', require, true, true)), false)(J$.T(255497, 'events', 21, false)), EventEmitter, false, true);
            var ServerDescription = J$.W(255553, 'ServerDescription', J$.G(255545, J$.F(255537, J$.I(typeof require === 'undefined' ? require = J$.R(255521, 'require', undefined, true, true) : require = J$.R(255521, 'require', require, true, true)), false)(J$.T(255529, './server_description', 21, false)), 'ServerDescription'), ServerDescription, false, true);
            var ServerType = J$.W(255593, 'ServerType', J$.G(255585, J$.F(255577, J$.I(typeof require === 'undefined' ? require = J$.R(255561, 'require', undefined, true, true) : require = J$.R(255561, 'require', require, true, true)), false)(J$.T(255569, './server_description', 21, false)), 'ServerType'), ServerType, false, true);
            var TopologyDescription = J$.W(255633, 'TopologyDescription', J$.G(255625, J$.F(255617, J$.I(typeof require === 'undefined' ? require = J$.R(255601, 'require', undefined, true, true) : require = J$.R(255601, 'require', require, true, true)), false)(J$.T(255609, './topology_description', 21, false)), 'TopologyDescription'), TopologyDescription, false, true);
            var TopologyType = J$.W(255673, 'TopologyType', J$.G(255665, J$.F(255657, J$.I(typeof require === 'undefined' ? require = J$.R(255641, 'require', undefined, true, true) : require = J$.R(255641, 'require', require, true, true)), false)(J$.T(255649, './topology_description', 21, false)), 'TopologyType'), TopologyType, false, true);
            var monitoring = J$.W(255705, 'monitoring', J$.F(255697, J$.I(typeof require === 'undefined' ? require = J$.R(255681, 'require', undefined, true, true) : require = J$.R(255681, 'require', require, true, true)), false)(J$.T(255689, './monitoring', 21, false)), monitoring, false, true);
            var calculateDurationInMs = J$.W(255745, 'calculateDurationInMs', J$.G(255737, J$.F(255729, J$.I(typeof require === 'undefined' ? require = J$.R(255713, 'require', undefined, true, true) : require = J$.R(255713, 'require', require, true, true)), false)(J$.T(255721, '../utils', 21, false)), 'calculateDurationInMs'), calculateDurationInMs, false, true);
            var MongoTimeoutError = J$.W(255785, 'MongoTimeoutError', J$.G(255777, J$.F(255769, J$.I(typeof require === 'undefined' ? require = J$.R(255753, 'require', undefined, true, true) : require = J$.R(255753, 'require', require, true, true)), false)(J$.T(255761, '../error', 21, false)), 'MongoTimeoutError'), MongoTimeoutError, false, true);
            var Server = J$.W(255817, 'Server', J$.F(255809, J$.I(typeof require === 'undefined' ? require = J$.R(255793, 'require', undefined, true, true) : require = J$.R(255793, 'require', require, true, true)), false)(J$.T(255801, './server', 21, false)), Server, false, true);
            var relayEvents = J$.W(255857, 'relayEvents', J$.G(255849, J$.F(255841, J$.I(typeof require === 'undefined' ? require = J$.R(255825, 'require', undefined, true, true) : require = J$.R(255825, 'require', require, true, true)), false)(J$.T(255833, '../utils', 21, false)), 'relayEvents'), relayEvents, false, true);
            var ReadPreference = J$.W(255889, 'ReadPreference', J$.F(255881, J$.I(typeof require === 'undefined' ? require = J$.R(255865, 'require', undefined, true, true) : require = J$.R(255865, 'require', require, true, true)), false)(J$.T(255873, '../topologies/read_preference', 21, false)), ReadPreference, false, true);
            var readPreferenceServerSelector = J$.W(255929, 'readPreferenceServerSelector', J$.G(255921, J$.F(255913, J$.I(typeof require === 'undefined' ? require = J$.R(255897, 'require', undefined, true, true) : require = J$.R(255897, 'require', require, true, true)), false)(J$.T(255905, './server_selectors', 21, false)), 'readPreferenceServerSelector'), readPreferenceServerSelector, false, true);
            var writableServerSelector = J$.W(255969, 'writableServerSelector', J$.G(255961, J$.F(255953, J$.I(typeof require === 'undefined' ? require = J$.R(255937, 'require', undefined, true, true) : require = J$.R(255937, 'require', require, true, true)), false)(J$.T(255945, './server_selectors', 21, false)), 'writableServerSelector'), writableServerSelector, false, true);
            var isRetryableWritesSupported = J$.W(256009, 'isRetryableWritesSupported', J$.G(256001, J$.F(255993, J$.I(typeof require === 'undefined' ? require = J$.R(255977, 'require', undefined, true, true) : require = J$.R(255977, 'require', require, true, true)), false)(J$.T(255985, '../topologies/shared', 21, false)), 'isRetryableWritesSupported'), isRetryableWritesSupported, false, true);
            var CoreCursor = J$.W(256049, 'CoreCursor', J$.G(256041, J$.F(256033, J$.I(typeof require === 'undefined' ? require = J$.R(256017, 'require', undefined, true, true) : require = J$.R(256017, 'require', require, true, true)), false)(J$.T(256025, '../cursor', 21, false)), 'CoreCursor'), CoreCursor, false, true);
            var deprecate = J$.W(256089, 'deprecate', J$.G(256081, J$.F(256073, J$.I(typeof require === 'undefined' ? require = J$.R(256057, 'require', undefined, true, true) : require = J$.R(256057, 'require', require, true, true)), false)(J$.T(256065, 'util', 21, false)), 'deprecate'), deprecate, false, true);
            var BSON = J$.W(256129, 'BSON', J$.M(256121, J$.F(256113, J$.I(typeof require === 'undefined' ? require = J$.R(256097, 'require', undefined, true, true) : require = J$.R(256097, 'require', require, true, true)), false)(J$.T(256105, '../connection/utils', 21, false)), 'retrieveBSON', false)(), BSON, false, true);
            var createCompressionInfo = J$.W(256169, 'createCompressionInfo', J$.G(256161, J$.F(256153, J$.I(typeof require === 'undefined' ? require = J$.R(256137, 'require', undefined, true, true) : require = J$.R(256137, 'require', require, true, true)), false)(J$.T(256145, '../topologies/shared', 21, false)), 'createCompressionInfo'), createCompressionInfo, false, true);
            var isRetryableError = J$.W(256209, 'isRetryableError', J$.G(256201, J$.F(256193, J$.I(typeof require === 'undefined' ? require = J$.R(256177, 'require', undefined, true, true) : require = J$.R(256177, 'require', require, true, true)), false)(J$.T(256185, '../error', 21, false)), 'isRetryableError'), isRetryableError, false, true);
            var isSDAMUnrecoverableError = J$.W(256249, 'isSDAMUnrecoverableError', J$.G(256241, J$.F(256233, J$.I(typeof require === 'undefined' ? require = J$.R(256217, 'require', undefined, true, true) : require = J$.R(256217, 'require', require, true, true)), false)(J$.T(256225, '../error', 21, false)), 'isSDAMUnrecoverableError'), isSDAMUnrecoverableError, false, true);
            var ClientSession = J$.W(256289, 'ClientSession', J$.G(256281, J$.F(256273, J$.I(typeof require === 'undefined' ? require = J$.R(256257, 'require', undefined, true, true) : require = J$.R(256257, 'require', require, true, true)), false)(J$.T(256265, '../sessions', 21, false)), 'ClientSession'), ClientSession, false, true);
            var createClientInfo = J$.W(256329, 'createClientInfo', J$.G(256321, J$.F(256313, J$.I(typeof require === 'undefined' ? require = J$.R(256297, 'require', undefined, true, true) : require = J$.R(256297, 'require', require, true, true)), false)(J$.T(256305, '../topologies/shared', 21, false)), 'createClientInfo'), createClientInfo, false, true);
            var MongoError = J$.W(256369, 'MongoError', J$.G(256361, J$.F(256353, J$.I(typeof require === 'undefined' ? require = J$.R(256337, 'require', undefined, true, true) : require = J$.R(256337, 'require', require, true, true)), false)(J$.T(256345, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var resolveClusterTime = J$.W(256409, 'resolveClusterTime', J$.G(256401, J$.F(256393, J$.I(typeof require === 'undefined' ? require = J$.R(256377, 'require', undefined, true, true) : require = J$.R(256377, 'require', require, true, true)), false)(J$.T(256385, '../topologies/shared', 21, false)), 'resolveClusterTime'), resolveClusterTime, false, true);
            var SrvPoller = J$.W(256449, 'SrvPoller', J$.G(256441, J$.F(256433, J$.I(typeof require === 'undefined' ? require = J$.R(256417, 'require', undefined, true, true) : require = J$.R(256417, 'require', require, true, true)), false)(J$.T(256425, './srv_polling', 21, false)), 'SrvPoller'), SrvPoller, false, true);
            var getMMAPError = J$.W(256489, 'getMMAPError', J$.G(256481, J$.F(256473, J$.I(typeof require === 'undefined' ? require = J$.R(256457, 'require', undefined, true, true) : require = J$.R(256457, 'require', require, true, true)), false)(J$.T(256465, '../topologies/shared', 21, false)), 'getMMAPError'), getMMAPError, false, true);
            var globalTopologyCounter = J$.W(256505, 'globalTopologyCounter', J$.T(256497, 0, 22, false), globalTopologyCounter, false, true);
            var TOPOLOGY_DEFAULTS = J$.W(256553, 'TOPOLOGY_DEFAULTS', J$.T(256545, {
                localThresholdMS: J$.T(256513, 15, 22, false),
                serverSelectionTimeoutMS: J$.T(256521, 30000, 22, false),
                heartbeatFrequencyMS: J$.T(256529, 10000, 22, false),
                minHeartbeatFrequencyMS: J$.T(256537, 500, 22, false)
            }, 11, false), TOPOLOGY_DEFAULTS, false, true);
            var SERVER_RELAY_EVENTS = J$.W(256625, 'SERVER_RELAY_EVENTS', J$.T(256617, [
                J$.T(256561, 'serverHeartbeatStarted', 21, false),
                J$.T(256569, 'serverHeartbeatSucceeded', 21, false),
                J$.T(256577, 'serverHeartbeatFailed', 21, false),
                J$.T(256585, 'commandStarted', 21, false),
                J$.T(256593, 'commandSucceeded', 21, false),
                J$.T(256601, 'commandFailed', 21, false),
                J$.T(256609, 'monitoring', 21, false)
            ], 10, false), SERVER_RELAY_EVENTS, false, true);
            var LOCAL_SERVER_EVENTS = J$.W(256697, 'LOCAL_SERVER_EVENTS', J$.M(256689, J$.R(256633, 'SERVER_RELAY_EVENTS', SERVER_RELAY_EVENTS, false, true), 'concat', false)(J$.T(256681, [
                J$.T(256641, 'error', 21, false),
                J$.T(256649, 'connect', 21, false),
                J$.T(256657, 'descriptionReceived', 21, false),
                J$.T(256665, 'close', 21, false),
                J$.T(256673, 'ended', 21, false)
            ], 10, false)), LOCAL_SERVER_EVENTS, false, true);
            var Topology = J$.W(266849, 'Topology', J$.F(266841, J$.T(266825, function (_EventEmitter) {
                jalangiLabel57:
                    while (true) {
                        try {
                            J$.Fe(266785, arguments.callee, this, arguments);
                            function Topology(seedlist, options) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(258729, arguments.callee, this, arguments);
                                            arguments = J$.N(258737, 'arguments', arguments, true, false, false);
                                            seedlist = J$.N(258745, 'seedlist', seedlist, true, false, false);
                                            options = J$.N(258753, 'options', options, true, false, false);
                                            J$.N(258761, '_this', _this, false, false, false);
                                            J$.N(258769, 'topologyType', topologyType, false, false, false);
                                            J$.N(258777, 'topologyId', topologyId, false, false, false);
                                            J$.N(258785, 'serverDescriptions', serverDescriptions, false, false, false);
                                            var _this;
                                            J$.F(256761, J$.R(256737, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(256745, 'this', this, false, false), J$.R(256753, 'Topology', Topology, false, false));
                                            _this = J$.W(256833, '_this', J$.F(256825, J$.R(256769, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(256777, 'this', this, false, false), J$.M(256817, J$.F(256801, J$.R(256785, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(256793, 'Topology', Topology, false, false)), 'call', false)(J$.R(256809, 'this', this, false, false))), _this, false, false);
                                            if (J$.C(14816, J$.C(14800, J$.B(16314, '===', J$.U(16306, 'typeof', J$.R(256841, 'options', options, false, false)), J$.T(256849, 'undefined', 21, false))) ? J$.B(16330, '!==', J$.U(16322, 'typeof', J$.R(256857, 'seedlist', seedlist, false, false)), J$.T(256865, 'string', 21, false)) : J$._())) {
                                                options = J$.W(256881, 'options', J$.R(256873, 'seedlist', seedlist, false, false), options, false, false);
                                                seedlist = J$.W(256897, 'seedlist', J$.T(256889, [], 10, false), seedlist, false, false);
                                                if (J$.C(14808, J$.G(256913, J$.R(256905, 'options', options, false, false), 'host'))) {
                                                    J$.M(256969, J$.R(256921, 'seedlist', seedlist, false, false), 'push', false)(J$.T(256961, {
                                                        host: J$.G(256937, J$.R(256929, 'options', options, false, false), 'host'),
                                                        port: J$.G(256953, J$.R(256945, 'options', options, false, false), 'port')
                                                    }, 11, false));
                                                }
                                            }
                                            seedlist = J$.W(256993, 'seedlist', J$.C(14824, J$.R(256977, 'seedlist', seedlist, false, false)) ? J$._() : J$.T(256985, [], 10, false), seedlist, false, false);
                                            if (J$.C(14832, J$.B(16346, '===', J$.U(16338, 'typeof', J$.R(257001, 'seedlist', seedlist, false, false)), J$.T(257009, 'string', 21, false)))) {
                                                seedlist = J$.W(257041, 'seedlist', J$.F(257033, J$.R(257017, 'parseStringSeedlist', parseStringSeedlist, false, true), false)(J$.R(257025, 'seedlist', seedlist, false, false)), seedlist, false, false);
                                            }
                                            options = J$.W(257089, 'options', J$.M(257081, J$.I(typeof Object === 'undefined' ? Object = J$.R(257049, 'Object', undefined, true, true) : Object = J$.R(257049, 'Object', Object, true, true)), 'assign', false)(J$.T(257057, {}, 11, false), J$.R(257065, 'TOPOLOGY_DEFAULTS', TOPOLOGY_DEFAULTS, false, true), J$.R(257073, 'options', options, false, false)), options, false, false);
                                            var topologyType = J$.W(257129, 'topologyType', J$.F(257121, J$.R(257097, 'topologyTypeFromSeedlist', topologyTypeFromSeedlist, false, true), false)(J$.R(257105, 'seedlist', seedlist, false, false), J$.R(257113, 'options', options, false, false)), topologyType, false, false);
                                            var topologyId = J$.W(257153, 'topologyId', J$.B(16370, '-', globalTopologyCounter = J$.W(257145, 'globalTopologyCounter', J$.B(16362, '+', J$.U(16354, '+', J$.R(257137, 'globalTopologyCounter', globalTopologyCounter, false, true)), 1), globalTopologyCounter, false, true), 1), topologyId, false, false);
                                            var serverDescriptions = J$.W(257481, 'serverDescriptions', J$.M(257473, J$.R(257161, 'seedlist', seedlist, false, false), 'reduce', false)(J$.T(257449, function (result, seed) {
                                                jalangiLabel13:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(257409, arguments.callee, this, arguments);
                                                            arguments = J$.N(257417, 'arguments', arguments, true, false, false);
                                                            result = J$.N(257425, 'result', result, true, false, false);
                                                            seed = J$.N(257433, 'seed', seed, true, false, false);
                                                            J$.N(257441, 'address', address, false, false, false);
                                                            if (J$.C(14840, J$.G(257177, J$.R(257169, 'seed', seed, false, false), 'domain_socket')))
                                                                J$.P(257209, J$.R(257185, 'seed', seed, false, false), 'host', J$.G(257201, J$.R(257193, 'seed', seed, false, false), 'domain_socket'));
                                                            var address = J$.W(257337, 'address', J$.C(14848, J$.G(257225, J$.R(257217, 'seed', seed, false, false), 'port')) ? J$.M(257289, J$.M(257265, J$.T(257233, '', 21, false), 'concat', false)(J$.G(257249, J$.R(257241, 'seed', seed, false, false), 'host'), J$.T(257257, ':', 21, false)), 'concat', false)(J$.G(257281, J$.R(257273, 'seed', seed, false, false), 'port')) : J$.M(257329, J$.T(257297, '', 21, false), 'concat', false)(J$.G(257313, J$.R(257305, 'seed', seed, false, false), 'host'), J$.T(257321, ':27017', 21, false)), address, false, false);
                                                            J$.M(257385, J$.R(257345, 'result', result, false, false), 'set', false)(J$.R(257353, 'address', address, false, false), J$.F(257377, J$.R(257361, 'ServerDescription', ServerDescription, false, true), true)(J$.R(257369, 'address', address, false, false)));
                                                            return J$.Rt(257401, J$.R(257393, 'result', result, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(275377, J$e);
                                                        } finally {
                                                            if (J$.Fr(275385))
                                                                continue jalangiLabel13;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.F(257465, J$.I(typeof Map === 'undefined' ? Map = J$.R(257457, 'Map', undefined, true, true) : Map = J$.R(257457, 'Map', Map, true, true)), true)()), serverDescriptions, false, false);
                                            J$.P(258049, J$.R(257489, '_this', _this, false, false), 's', J$.T(258041, {
                                                id: J$.R(257497, 'topologyId', topologyId, false, false),
                                                options: J$.R(257505, 'options', options, false, false),
                                                seedlist: J$.R(257513, 'seedlist', seedlist, false, false),
                                                description: J$.F(257593, J$.R(257521, 'TopologyDescription', TopologyDescription, false, true), true)(J$.R(257529, 'topologyType', topologyType, false, false), J$.R(257537, 'serverDescriptions', serverDescriptions, false, false), J$.G(257553, J$.R(257545, 'options', options, false, false), 'replicaSet'), J$.T(257561, null, 25, false), J$.T(257569, null, 25, false), J$.T(257577, null, 25, false), J$.R(257585, 'options', options, false, false)),
                                                serverSelectionTimeoutMS: J$.G(257609, J$.R(257601, 'options', options, false, false), 'serverSelectionTimeoutMS'),
                                                heartbeatFrequencyMS: J$.G(257625, J$.R(257617, 'options', options, false, false), 'heartbeatFrequencyMS'),
                                                minHeartbeatIntervalMS: J$.G(257641, J$.R(257633, 'options', options, false, false), 'minHeartbeatIntervalMS'),
                                                Cursor: J$.C(14856, J$.G(257657, J$.R(257649, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.R(257665, 'CoreCursor', CoreCursor, false, true),
                                                bson: J$.C(14864, J$.G(257681, J$.R(257673, 'options', options, false, false), 'bson')) ? J$._() : J$.F(257929, J$.R(257689, 'BSON', BSON, false, true), true)(J$.T(257921, [
                                                    J$.G(257705, J$.R(257697, 'BSON', BSON, false, true), 'Binary'),
                                                    J$.G(257721, J$.R(257713, 'BSON', BSON, false, true), 'Code'),
                                                    J$.G(257737, J$.R(257729, 'BSON', BSON, false, true), 'DBRef'),
                                                    J$.G(257753, J$.R(257745, 'BSON', BSON, false, true), 'Decimal128'),
                                                    J$.G(257769, J$.R(257761, 'BSON', BSON, false, true), 'Double'),
                                                    J$.G(257785, J$.R(257777, 'BSON', BSON, false, true), 'Int32'),
                                                    J$.G(257801, J$.R(257793, 'BSON', BSON, false, true), 'Long'),
                                                    J$.G(257817, J$.R(257809, 'BSON', BSON, false, true), 'Map'),
                                                    J$.G(257833, J$.R(257825, 'BSON', BSON, false, true), 'MaxKey'),
                                                    J$.G(257849, J$.R(257841, 'BSON', BSON, false, true), 'MinKey'),
                                                    J$.G(257865, J$.R(257857, 'BSON', BSON, false, true), 'ObjectId'),
                                                    J$.G(257881, J$.R(257873, 'BSON', BSON, false, true), 'BSONRegExp'),
                                                    J$.G(257897, J$.R(257889, 'BSON', BSON, false, true), 'Symbol'),
                                                    J$.G(257913, J$.R(257905, 'BSON', BSON, false, true), 'Timestamp')
                                                ], 10, false)),
                                                servers: J$.F(257945, J$.I(typeof Map === 'undefined' ? Map = J$.R(257937, 'Map', undefined, true, true) : Map = J$.R(257937, 'Map', Map, true, true)), true)(),
                                                sessionPool: J$.T(257953, null, 25, false),
                                                sessions: J$.F(257969, J$.I(typeof Set === 'undefined' ? Set = J$.R(257961, 'Set', undefined, true, true) : Set = J$.R(257961, 'Set', Set, true, true)), true)(),
                                                promiseLibrary: J$.C(14872, J$.G(257985, J$.R(257977, 'options', options, false, false), 'promiseLibrary')) ? J$._() : J$.I(typeof Promise === 'undefined' ? Promise = J$.R(257993, 'Promise', undefined, true, true) : Promise = J$.R(257993, 'Promise', Promise, true, true)),
                                                credentials: J$.G(258009, J$.R(258001, 'options', options, false, false), 'credentials'),
                                                clusterTime: J$.T(258017, null, 25, false),
                                                monitorTimers: J$.T(258025, [], 10, false),
                                                iterationTimers: J$.T(258033, [], 10, false)
                                            }, 11, false));
                                            J$.P(258113, J$.G(258073, J$.G(258065, J$.R(258057, '_this', _this, false, false), 's'), 'options'), 'compression', J$.T(258105, { compressors: J$.F(258097, J$.R(258081, 'createCompressionInfo', createCompressionInfo, false, true), false)(J$.R(258089, 'options', options, false, false)) }, 11, false));
                                            J$.P(258161, J$.G(258129, J$.R(258121, '_this', _this, false, false), 's'), 'clientInfo', J$.F(258153, J$.R(258137, 'createClientInfo', createClientInfo, false, true), false)(J$.R(258145, 'options', options, false, false)));
                                            if (J$.C(14904, J$.G(258177, J$.R(258169, 'options', options, false, false), 'srvHost'))) {
                                                J$.P(258313, J$.G(258193, J$.R(258185, '_this', _this, false, false), 's'), 'srvPoller', J$.C(14880, J$.G(258209, J$.R(258201, 'options', options, false, false), 'srvPoller')) ? J$._() : J$.F(258305, J$.R(258217, 'SrvPoller', SrvPoller, false, true), true)(J$.T(258297, {
                                                    heartbeatFrequencyMS: J$.G(258241, J$.G(258233, J$.R(258225, '_this', _this, false, false), 's'), 'heartbeatFrequencyMS'),
                                                    srvHost: J$.G(258257, J$.R(258249, 'options', options, false, false), 'srvHost'),
                                                    logger: J$.G(258273, J$.R(258265, 'options', options, false, false), 'logger'),
                                                    loggerLevel: J$.G(258289, J$.R(258281, 'options', options, false, false), 'loggerLevel')
                                                }, 11, false)));
                                                J$.P(258657, J$.G(258329, J$.R(258321, '_this', _this, false, false), 's'), 'detectTopologyDescriptionChange', J$.T(258649, function (ev) {
                                                    jalangiLabel14:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(258609, arguments.callee, this, arguments);
                                                                arguments = J$.N(258617, 'arguments', arguments, true, false, false);
                                                                ev = J$.N(258625, 'ev', ev, true, false, false);
                                                                J$.N(258633, 'previousType', previousType, false, false, false);
                                                                J$.N(258641, 'newType', newType, false, false, false);
                                                                var previousType = J$.W(258361, 'previousType', J$.G(258353, J$.G(258345, J$.R(258337, 'ev', ev, false, false), 'previousDescription'), 'type'), previousType, false, false);
                                                                var newType = J$.W(258393, 'newType', J$.G(258385, J$.G(258377, J$.R(258369, 'ev', ev, false, false), 'newDescription'), 'type'), newType, false, false);
                                                                if (J$.C(14896, J$.C(14888, J$.B(16378, '!==', J$.R(258401, 'previousType', previousType, false, false), J$.G(258417, J$.R(258409, 'TopologyType', TopologyType, false, true), 'Sharded'))) ? J$.B(16386, '===', J$.R(258425, 'newType', newType, false, false), J$.G(258441, J$.R(258433, 'TopologyType', TopologyType, false, true), 'Sharded')) : J$._())) {
                                                                    J$.P(258505, J$.G(258457, J$.R(258449, '_this', _this, false, false), 's'), 'handleSrvPolling', J$.F(258497, J$.R(258465, 'srvPollingHandler', srvPollingHandler, false, true), false)(J$.F(258489, J$.R(258473, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(258481, '_this', _this, false, false))));
                                                                    J$.M(258569, J$.G(258529, J$.G(258521, J$.R(258513, '_this', _this, false, false), 's'), 'srvPoller'), 'on', false)(J$.T(258537, 'srvRecordDiscovery', 21, false), J$.G(258561, J$.G(258553, J$.R(258545, '_this', _this, false, false), 's'), 'handleSrvPolling'));
                                                                    J$.M(258601, J$.G(258593, J$.G(258585, J$.R(258577, '_this', _this, false, false), 's'), 'srvPoller'), 'start', false)();
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(275393, J$e);
                                                            } finally {
                                                                if (J$.Fr(275401))
                                                                    continue jalangiLabel14;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                J$.M(258705, J$.R(258665, '_this', _this, false, false), 'on', false)(J$.T(258673, 'topologyDescriptionChanged', 21, false), J$.G(258697, J$.G(258689, J$.R(258681, '_this', _this, false, false), 's'), 'detectTopologyDescriptionChange'));
                                            }
                                            return J$.Rt(258721, J$.R(258713, '_this', _this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(275409, J$e);
                                        } finally {
                                            if (J$.Fr(275417))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(266793, 'arguments', arguments, true, false, false);
                            _EventEmitter = J$.N(266801, '_EventEmitter', _EventEmitter, true, false, false);
                            Topology = J$.N(266817, 'Topology', J$.T(266809, Topology, 12, false), true, false, false);
                            J$.F(256729, J$.R(256705, '_inherits', _inherits, false, true), false)(J$.R(256713, 'Topology', Topology, false, false), J$.R(256721, '_EventEmitter', _EventEmitter, false, false));
                            J$.F(266761, J$.R(258793, '_createClass', _createClass, false, true), false)(J$.R(258801, 'Topology', Topology, false, false), J$.T(266753, [
                                J$.T(259009, {
                                    key: J$.T(258809, 'connections', 21, false),
                                    value: J$.T(259001, function connections() {
                                        jalangiLabel17:
                                            while (true) {
                                                try {
                                                    J$.Fe(258985, arguments.callee, this, arguments);
                                                    arguments = J$.N(258993, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(258977, J$.M(258969, J$.M(258857, J$.I(typeof Array === 'undefined' ? Array = J$.R(258817, 'Array', undefined, true, true) : Array = J$.R(258817, 'Array', Array, true, true)), 'from', false)(J$.M(258849, J$.G(258841, J$.G(258833, J$.R(258825, 'this', this, false, false), 's'), 'servers'), 'values', false)()), 'reduce', false)(J$.T(258953, function (result, server) {
                                                        jalangiLabel16:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(258921, arguments.callee, this, arguments);
                                                                    arguments = J$.N(258929, 'arguments', arguments, true, false, false);
                                                                    result = J$.N(258937, 'result', result, true, false, false);
                                                                    server = J$.N(258945, 'server', server, true, false, false);
                                                                    return J$.Rt(258913, J$.M(258905, J$.R(258865, 'result', result, false, false), 'concat', false)(J$.M(258897, J$.G(258889, J$.G(258881, J$.R(258873, 'server', server, false, false), 's'), 'pool'), 'allConnections', false)()));
                                                                } catch (J$e) {
                                                                    J$.Ex(275425, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275433))
                                                                        continue jalangiLabel16;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false), J$.T(258961, [], 10, false)));
                                                } catch (J$e) {
                                                    J$.Ex(275441, J$e);
                                                } finally {
                                                    if (J$.Fr(275449))
                                                        continue jalangiLabel17;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(260193, {
                                    key: J$.T(259017, 'connect', 21, false),
                                    value: J$.T(260185, function connect(options, callback) {
                                        jalangiLabel21:
                                            while (true) {
                                                try {
                                                    J$.Fe(260137, arguments.callee, this, arguments);
                                                    arguments = J$.N(260145, 'arguments', arguments, true, false, false);
                                                    options = J$.N(260153, 'options', options, true, false, false);
                                                    callback = J$.N(260161, 'callback', callback, true, false, false);
                                                    J$.N(260169, '_this2', _this2, false, false, false);
                                                    J$.N(260177, 'readPreference', readPreference, false, false, false);
                                                    var _this2 = J$.W(259033, '_this2', J$.R(259025, 'this', this, false, false), _this2, false, false);
                                                    if (J$.C(14912, J$.B(16402, '===', J$.U(16394, 'typeof', J$.R(259041, 'options', options, false, false)), J$.T(259049, 'function', 21, false))))
                                                        callback = J$.W(259065, 'callback', J$.R(259057, 'options', options, false, false), callback, false, false), options = J$.W(259081, 'options', J$.T(259073, {}, 11, false), options, false, false);
                                                    options = J$.W(259105, 'options', J$.C(14920, J$.R(259089, 'options', options, false, false)) ? J$._() : J$.T(259097, {}, 11, false), options, false, false);
                                                    J$.M(259169, J$.R(259113, 'this', this, false, false), 'emit', false)(J$.T(259121, 'topologyOpening', 21, false), J$.M(259161, J$.R(259129, 'monitoring', monitoring, false, true), 'TopologyOpeningEvent', true)(J$.G(259153, J$.G(259145, J$.R(259137, 'this', this, false, false), 's'), 'id')));
                                                    J$.M(259289, J$.R(259177, 'this', this, false, false), 'emit', false)(J$.T(259185, 'topologyDescriptionChanged', 21, false), J$.M(259281, J$.R(259193, 'monitoring', monitoring, false, true), 'TopologyDescriptionChangedEvent', true)(J$.G(259217, J$.G(259209, J$.R(259201, 'this', this, false, false), 's'), 'id'), J$.F(259249, J$.R(259225, 'TopologyDescription', TopologyDescription, false, true), true)(J$.G(259241, J$.R(259233, 'TopologyType', TopologyType, false, true), 'Unknown')), J$.G(259273, J$.G(259265, J$.R(259257, 'this', this, false, false), 's'), 'description')));
                                                    J$.F(259369, J$.R(259297, 'connectServers', connectServers, false, true), false)(J$.R(259305, 'this', this, false, false), J$.M(259361, J$.I(typeof Array === 'undefined' ? Array = J$.R(259313, 'Array', undefined, true, true) : Array = J$.R(259313, 'Array', Array, true, true)), 'from', false)(J$.M(259353, J$.G(259345, J$.G(259337, J$.G(259329, J$.R(259321, 'this', this, false, false), 's'), 'description'), 'servers'), 'values', false)()));
                                                    J$.P(259401, J$.G(259385, J$.R(259377, 'this', this, false, false), 's'), 'connected', J$.T(259393, true, 23, false));
                                                    J$.F(259425, J$.R(259409, 'translateReadPreference', translateReadPreference, false, true), false)(J$.R(259417, 'options', options, false, false));
                                                    var readPreference = J$.W(259465, 'readPreference', J$.C(14928, J$.G(259441, J$.R(259433, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(259457, J$.R(259449, 'ReadPreference', ReadPreference, false, true), 'primary'), readPreference, false, false);
                                                    J$.M(260129, J$.R(259473, 'this', this, false, false), 'selectServer', false)(J$.F(259497, J$.R(259481, 'readPreferenceServerSelector', readPreferenceServerSelector, false, true), false)(J$.R(259489, 'readPreference', readPreference, false, false)), J$.R(259505, 'options', options, false, false), J$.T(260121, function (err, server) {
                                                        jalangiLabel20:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(260065, arguments.callee, this, arguments);
                                                                    arguments = J$.N(260073, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(260081, 'err', err, true, false, false);
                                                                    server = J$.N(260089, 'server', server, true, false, false);
                                                                    J$.N(260097, 'errorHandler', errorHandler, false, false, false);
                                                                    J$.N(260105, 'connectHandler', connectHandler, false, false, false);
                                                                    J$.N(260113, 'STATE_CONNECTING', STATE_CONNECTING, false, false, false);
                                                                    if (J$.C(14944, J$.R(259513, 'err', err, false, false))) {
                                                                        if (J$.C(14936, J$.B(16418, '===', J$.U(16410, 'typeof', J$.R(259521, 'callback', callback, false, false)), J$.T(259529, 'function', 21, false)))) {
                                                                            J$.F(259561, J$.R(259537, 'callback', callback, false, false), false)(J$.R(259545, 'err', err, false, false), J$.T(259553, null, 25, false));
                                                                        } else {
                                                                            J$.M(259593, J$.R(259569, '_this2', _this2, false, false), 'emit', false)(J$.T(259577, 'error', 21, false), J$.R(259585, 'err', err, false, false));
                                                                        }
                                                                        return J$.Rt(259601, undefined);
                                                                    }
                                                                    var errorHandler = J$.W(259721, 'errorHandler', J$.T(259713, function errorHandler(err) {
                                                                        jalangiLabel18:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(259689, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(259697, 'arguments', arguments, true, false, false);
                                                                                    err = J$.N(259705, 'err', err, true, false, false);
                                                                                    J$.M(259633, J$.R(259609, 'server', server, false, false), 'removeListener', false)(J$.T(259617, 'connect', 21, false), J$.R(259625, 'connectHandler', connectHandler, false, false));
                                                                                    if (J$.C(14952, J$.B(16434, '===', J$.U(16426, 'typeof', J$.R(259641, 'callback', callback, false, false)), J$.T(259649, 'function', 21, false))))
                                                                                        J$.F(259681, J$.R(259657, 'callback', callback, false, false), false)(J$.R(259665, 'err', err, false, false), J$.T(259673, null, 25, false));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(275457, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(275465))
                                                                                        continue jalangiLabel18;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false), errorHandler, false, false);
                                                                    var connectHandler = J$.W(259921, 'connectHandler', J$.T(259913, function connectHandler(_, err) {
                                                                        jalangiLabel19:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(259881, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(259889, 'arguments', arguments, true, false, false);
                                                                                    _ = J$.N(259897, '_', _, true, false, false);
                                                                                    err = J$.N(259905, 'err', err, true, false, false);
                                                                                    J$.M(259753, J$.R(259729, 'server', server, false, false), 'removeListener', false)(J$.T(259737, 'error', 21, false), J$.R(259745, 'errorHandler', errorHandler, false, false));
                                                                                    J$.M(259793, J$.R(259761, '_this2', _this2, false, false), 'emit', false)(J$.T(259769, 'open', 21, false), J$.R(259777, 'err', err, false, false), J$.R(259785, '_this2', _this2, false, false));
                                                                                    J$.M(259825, J$.R(259801, '_this2', _this2, false, false), 'emit', false)(J$.T(259809, 'connect', 21, false), J$.R(259817, '_this2', _this2, false, false));
                                                                                    if (J$.C(14960, J$.B(16450, '===', J$.U(16442, 'typeof', J$.R(259833, 'callback', callback, false, false)), J$.T(259841, 'function', 21, false))))
                                                                                        J$.F(259873, J$.R(259849, 'callback', callback, false, false), false)(J$.R(259857, 'err', err, false, false), J$.R(259865, '_this2', _this2, false, false));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(275473, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(275481))
                                                                                        continue jalangiLabel19;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false), connectHandler, false, false);
                                                                    var STATE_CONNECTING = J$.W(259937, 'STATE_CONNECTING', J$.T(259929, 1, 22, false), STATE_CONNECTING, false, false);
                                                                    if (J$.C(14968, J$.B(16458, '===', J$.G(259961, J$.G(259953, J$.R(259945, 'server', server, false, false), 's'), 'state'), J$.R(259969, 'STATE_CONNECTING', STATE_CONNECTING, false, false)))) {
                                                                        J$.M(260001, J$.R(259977, 'server', server, false, false), 'once', false)(J$.T(259985, 'error', 21, false), J$.R(259993, 'errorHandler', errorHandler, false, false));
                                                                        J$.M(260033, J$.R(260009, 'server', server, false, false), 'once', false)(J$.T(260017, 'connect', 21, false), J$.R(260025, 'connectHandler', connectHandler, false, false));
                                                                        return J$.Rt(260041, undefined);
                                                                    }
                                                                    J$.F(260057, J$.R(260049, 'connectHandler', connectHandler, false, false), false)();
                                                                } catch (J$e) {
                                                                    J$.Ex(275489, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275497))
                                                                        continue jalangiLabel20;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(275505, J$e);
                                                } finally {
                                                    if (J$.Fr(275513))
                                                        continue jalangiLabel21;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(261513, {
                                    key: J$.T(260201, 'close', 21, false),
                                    value: J$.T(261505, function close(options, callback) {
                                        jalangiLabel27:
                                            while (true) {
                                                try {
                                                    J$.Fe(261449, arguments.callee, this, arguments);
                                                    arguments = J$.N(261457, 'arguments', arguments, true, false, false);
                                                    options = J$.N(261465, 'options', options, true, false, false);
                                                    callback = J$.N(261473, 'callback', callback, true, false, false);
                                                    J$.N(261481, '_this3', _this3, false, false, false);
                                                    J$.N(261489, 'servers', servers, false, false, false);
                                                    J$.N(261497, 'destroyed', destroyed, false, false, false);
                                                    var _this3 = J$.W(260217, '_this3', J$.R(260209, 'this', this, false, false), _this3, false, false);
                                                    if (J$.C(14976, J$.B(16474, '===', J$.U(16466, 'typeof', J$.R(260225, 'options', options, false, false)), J$.T(260233, 'function', 21, false)))) {
                                                        callback = J$.W(260249, 'callback', J$.R(260241, 'options', options, false, false), callback, false, false);
                                                        options = J$.W(260265, 'options', J$.T(260257, {}, 11, false), options, false, false);
                                                    }
                                                    if (J$.C(14984, J$.B(16490, '===', J$.U(16482, 'typeof', J$.R(260273, 'options', options, false, false)), J$.T(260281, 'boolean', 21, false)))) {
                                                        options = J$.W(260305, 'options', J$.T(260297, { force: J$.R(260289, 'options', options, false, false) }, 11, false), options, false, false);
                                                    }
                                                    options = J$.W(260329, 'options', J$.C(14992, J$.R(260313, 'options', options, false, false)) ? J$._() : J$.T(260321, {}, 11, false), options, false, false);
                                                    J$.M(260425, J$.G(260353, J$.G(260345, J$.R(260337, 'this', this, false, false), 's'), 'monitorTimers'), 'map', false)(J$.T(260417, function (timer) {
                                                        jalangiLabel22:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(260393, arguments.callee, this, arguments);
                                                                    arguments = J$.N(260401, 'arguments', arguments, true, false, false);
                                                                    timer = J$.N(260409, 'timer', timer, true, false, false);
                                                                    return J$.Rt(260385, J$.F(260377, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(260361, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(260361, 'clearTimeout', clearTimeout, true, true)), false)(J$.R(260369, 'timer', timer, false, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(275521, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275529))
                                                                        continue jalangiLabel22;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(260457, J$.G(260441, J$.R(260433, 'this', this, false, false), 's'), 'monitorTimers', J$.T(260449, [], 10, false));
                                                    J$.M(260553, J$.G(260481, J$.G(260473, J$.R(260465, 'this', this, false, false), 's'), 'iterationTimers'), 'map', false)(J$.T(260545, function (timer) {
                                                        jalangiLabel23:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(260521, arguments.callee, this, arguments);
                                                                    arguments = J$.N(260529, 'arguments', arguments, true, false, false);
                                                                    timer = J$.N(260537, 'timer', timer, true, false, false);
                                                                    return J$.Rt(260513, J$.F(260505, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(260489, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(260489, 'clearTimeout', clearTimeout, true, true)), false)(J$.R(260497, 'timer', timer, false, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(275537, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275545))
                                                                        continue jalangiLabel23;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(260585, J$.G(260569, J$.R(260561, 'this', this, false, false), 's'), 'iterationTimers', J$.T(260577, [], 10, false));
                                                    if (J$.C(15000, J$.G(260609, J$.G(260601, J$.R(260593, 'this', this, false, false), 's'), 'sessionPool'))) {
                                                        J$.M(260697, J$.G(260633, J$.G(260625, J$.R(260617, 'this', this, false, false), 's'), 'sessions'), 'forEach', false)(J$.T(260689, function (session) {
                                                            jalangiLabel24:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(260665, arguments.callee, this, arguments);
                                                                        arguments = J$.N(260673, 'arguments', arguments, true, false, false);
                                                                        session = J$.N(260681, 'session', session, true, false, false);
                                                                        return J$.Rt(260657, J$.M(260649, J$.R(260641, 'session', session, false, false), 'endSession', false)());
                                                                    } catch (J$e) {
                                                                        J$.Ex(275553, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(275561))
                                                                            continue jalangiLabel24;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false));
                                                        J$.M(260729, J$.G(260721, J$.G(260713, J$.R(260705, 'this', this, false, false), 's'), 'sessionPool'), 'endAllPooledSessions', false)();
                                                    }
                                                    if (J$.C(15016, J$.G(260753, J$.G(260745, J$.R(260737, 'this', this, false, false), 's'), 'srvPoller'))) {
                                                        J$.M(260785, J$.G(260777, J$.G(260769, J$.R(260761, 'this', this, false, false), 's'), 'srvPoller'), 'stop', false)();
                                                        if (J$.C(15008, J$.G(260809, J$.G(260801, J$.R(260793, 'this', this, false, false), 's'), 'handleSrvPolling'))) {
                                                            J$.M(260873, J$.G(260833, J$.G(260825, J$.R(260817, 'this', this, false, false), 's'), 'srvPoller'), 'removeListener', false)(J$.T(260841, 'srvRecordDiscovery', 21, false), J$.G(260865, J$.G(260857, J$.R(260849, 'this', this, false, false), 's'), 'handleSrvPolling'));
                                                            J$.B(16498, 'delete', J$.G(260889, J$.R(260881, 'this', this, false, false), 's'), 'handleSrvPolling');
                                                        }
                                                    }
                                                    if (J$.C(15024, J$.G(260913, J$.G(260905, J$.R(260897, 'this', this, false, false), 's'), 'detectTopologyDescriptionChange'))) {
                                                        J$.M(260961, J$.R(260921, 'this', this, false, false), 'removeListener', false)(J$.T(260929, 'topologyDescriptionChanged', 21, false), J$.G(260953, J$.G(260945, J$.R(260937, 'this', this, false, false), 's'), 'detectTopologyDescriptionChange'));
                                                        J$.B(16506, 'delete', J$.G(260977, J$.R(260969, 'this', this, false, false), 's'), 'detectTopologyDescriptionChange');
                                                    }
                                                    var servers = J$.W(261009, 'servers', J$.G(261001, J$.G(260993, J$.R(260985, 'this', this, false, false), 's'), 'servers'), servers, false, false);
                                                    if (J$.C(15040, J$.B(16514, '===', J$.G(261025, J$.R(261017, 'servers', servers, false, false), 'size'), J$.T(261033, 0, 22, false)))) {
                                                        J$.P(261065, J$.G(261049, J$.R(261041, 'this', this, false, false), 's'), 'connected', J$.T(261057, false, 23, false));
                                                        if (J$.C(15032, J$.B(16530, '===', J$.U(16522, 'typeof', J$.R(261073, 'callback', callback, false, false)), J$.T(261081, 'function', 21, false)))) {
                                                            J$.F(261113, J$.R(261089, 'callback', callback, false, false), false)(J$.T(261097, null, 25, false), J$.T(261105, null, 25, false));
                                                        }
                                                        return J$.Rt(261121, undefined);
                                                    }
                                                    var destroyed = J$.W(261137, 'destroyed', J$.T(261129, 0, 22, false), destroyed, false, false);
                                                    J$.M(261441, J$.R(261145, 'servers', servers, false, false), 'forEach', false)(J$.T(261433, function (server) {
                                                        jalangiLabel26:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(261409, arguments.callee, this, arguments);
                                                                    arguments = J$.N(261417, 'arguments', arguments, true, false, false);
                                                                    server = J$.N(261425, 'server', server, true, false, false);
                                                                    return J$.Rt(261401, J$.F(261393, J$.R(261153, 'destroyServer', destroyServer, false, true), false)(J$.R(261161, 'server', server, false, false), J$.R(261169, '_this3', _this3, false, false), J$.R(261177, 'options', options, false, false), J$.T(261385, function () {
                                                                        jalangiLabel25:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(261369, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(261377, 'arguments', arguments, true, false, false);
                                                                                    J$.B(16554, '-', destroyed = J$.W(261193, 'destroyed', J$.B(16546, '+', J$.U(16538, '+', J$.R(261185, 'destroyed', destroyed, false, false)), 1), destroyed, false, false), 1);
                                                                                    if (J$.C(15056, J$.B(16562, '===', J$.R(261201, 'destroyed', destroyed, false, false), J$.G(261217, J$.R(261209, 'servers', servers, false, false), 'size')))) {
                                                                                        J$.M(261281, J$.R(261225, '_this3', _this3, false, false), 'emit', false)(J$.T(261233, 'topologyClosed', 21, false), J$.M(261273, J$.R(261241, 'monitoring', monitoring, false, true), 'TopologyClosedEvent', true)(J$.G(261265, J$.G(261257, J$.R(261249, '_this3', _this3, false, false), 's'), 'id')));
                                                                                        J$.P(261313, J$.G(261297, J$.R(261289, '_this3', _this3, false, false), 's'), 'connected', J$.T(261305, false, 23, false));
                                                                                        if (J$.C(15048, J$.B(16578, '===', J$.U(16570, 'typeof', J$.R(261321, 'callback', callback, false, false)), J$.T(261329, 'function', 21, false)))) {
                                                                                            J$.F(261361, J$.R(261337, 'callback', callback, false, false), false)(J$.T(261345, null, 25, false), J$.T(261353, null, 25, false));
                                                                                        }
                                                                                    }
                                                                                } catch (J$e) {
                                                                                    J$.Ex(275569, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(275577))
                                                                                        continue jalangiLabel25;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(275585, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275593))
                                                                        continue jalangiLabel26;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(275601, J$e);
                                                } finally {
                                                    if (J$.Fr(275609))
                                                        continue jalangiLabel27;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(262481, {
                                    key: J$.T(261521, 'selectServer', 21, false),
                                    value: J$.T(262473, function selectServer(selector, options, callback) {
                                        jalangiLabel30:
                                            while (true) {
                                                try {
                                                    J$.Fe(262401, arguments.callee, this, arguments);
                                                    arguments = J$.N(262409, 'arguments', arguments, true, false, false);
                                                    selector = J$.N(262417, 'selector', selector, true, false, false);
                                                    options = J$.N(262425, 'options', options, true, false, false);
                                                    callback = J$.N(262433, 'callback', callback, true, false, false);
                                                    J$.N(262441, 'readPreference', readPreference, false, false, false);
                                                    J$.N(262449, 'isSharded', isSharded, false, false, false);
                                                    J$.N(262457, 'session', session, false, false, false);
                                                    J$.N(262465, 'transaction', transaction, false, false, false);
                                                    if (J$.C(15088, J$.B(16594, '===', J$.U(16586, 'typeof', J$.R(261529, 'options', options, false, false)), J$.T(261537, 'function', 21, false)))) {
                                                        callback = J$.W(261553, 'callback', J$.R(261545, 'options', options, false, false), callback, false, false);
                                                        if (J$.C(15080, J$.B(16610, '!==', J$.U(16602, 'typeof', J$.R(261561, 'selector', selector, false, false)), J$.T(261569, 'function', 21, false)))) {
                                                            options = J$.W(261585, 'options', J$.R(261577, 'selector', selector, false, false), options, false, false);
                                                            var readPreference;
                                                            if (J$.C(15072, J$.B(16618, 'instanceof', J$.R(261593, 'selector', selector, false, false), J$.R(261601, 'ReadPreference', ReadPreference, false, true)))) {
                                                                readPreference = J$.W(261617, 'readPreference', J$.R(261609, 'selector', selector, false, false), readPreference, false, false);
                                                            } else {
                                                                J$.F(261641, J$.R(261625, 'translateReadPreference', translateReadPreference, false, true), false)(J$.R(261633, 'options', options, false, false));
                                                                readPreference = J$.W(261681, 'readPreference', J$.C(15064, J$.G(261657, J$.R(261649, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(261673, J$.R(261665, 'ReadPreference', ReadPreference, false, true), 'primary'), readPreference, false, false);
                                                            }
                                                            selector = J$.W(261713, 'selector', J$.F(261705, J$.R(261689, 'readPreferenceServerSelector', readPreferenceServerSelector, false, true), false)(J$.R(261697, 'readPreference', readPreference, false, false)), selector, false, false);
                                                        } else {
                                                            options = J$.W(261729, 'options', J$.T(261721, {}, 11, false), options, false, false);
                                                        }
                                                    }
                                                    options = J$.W(261801, 'options', J$.M(261793, J$.I(typeof Object === 'undefined' ? Object = J$.R(261737, 'Object', undefined, true, true) : Object = J$.R(261737, 'Object', Object, true, true)), 'assign', false)(J$.T(261745, {}, 11, false), J$.T(261777, { serverSelectionTimeoutMS: J$.G(261769, J$.G(261761, J$.R(261753, 'this', this, false, false), 's'), 'serverSelectionTimeoutMS') }, 11, false), J$.R(261785, 'options', options, false, false)), options, false, false);
                                                    var isSharded = J$.W(261849, 'isSharded', J$.B(16626, '===', J$.G(261825, J$.G(261817, J$.R(261809, 'this', this, false, false), 'description'), 'type'), J$.G(261841, J$.R(261833, 'TopologyType', TopologyType, false, true), 'Sharded')), isSharded, false, false);
                                                    var session = J$.W(261873, 'session', J$.G(261865, J$.R(261857, 'options', options, false, false), 'session'), session, false, false);
                                                    var transaction = J$.W(261905, 'transaction', J$.C(15096, J$.R(261881, 'session', session, false, false)) ? J$.G(261897, J$.R(261889, 'session', session, false, false), 'transaction') : J$._(), transaction, false, false);
                                                    if (J$.C(15120, J$.C(15112, J$.C(15104, J$.R(261913, 'isSharded', isSharded, false, false)) ? J$.R(261921, 'transaction', transaction, false, false) : J$._()) ? J$.G(261937, J$.R(261929, 'transaction', transaction, false, false), 'server') : J$._())) {
                                                        J$.F(261977, J$.R(261945, 'callback', callback, false, false), false)(J$.T(261953, null, 25, false), J$.G(261969, J$.R(261961, 'transaction', transaction, false, false), 'server'));
                                                        return J$.Rt(261985, undefined);
                                                    }
                                                    J$.M(262081, J$.G(262009, J$.G(262001, J$.R(261993, 'this', this, false, false), 's'), 'iterationTimers'), 'map', false)(J$.T(262073, function (timer) {
                                                        jalangiLabel28:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(262049, arguments.callee, this, arguments);
                                                                    arguments = J$.N(262057, 'arguments', arguments, true, false, false);
                                                                    timer = J$.N(262065, 'timer', timer, true, false, false);
                                                                    return J$.Rt(262041, J$.F(262033, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(262017, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(262017, 'clearTimeout', clearTimeout, true, true)), false)(J$.R(262025, 'timer', timer, false, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(275617, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275625))
                                                                        continue jalangiLabel28;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(262113, J$.G(262097, J$.R(262089, 'this', this, false, false), 's'), 'iterationTimers', J$.T(262105, [], 10, false));
                                                    J$.F(262393, J$.R(262121, 'selectServers', selectServers, false, true), false)(J$.R(262129, 'this', this, false, false), J$.R(262137, 'selector', selector, false, false), J$.G(262153, J$.R(262145, 'options', options, false, false), 'serverSelectionTimeoutMS'), J$.M(262169, J$.I(typeof process === 'undefined' ? process = J$.R(262161, 'process', undefined, true, true) : process = J$.R(262161, 'process', process, true, true)), 'hrtime', false)(), J$.T(262385, function (err, servers) {
                                                        jalangiLabel29:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(262345, arguments.callee, this, arguments);
                                                                    arguments = J$.N(262353, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(262361, 'err', err, true, false, false);
                                                                    servers = J$.N(262369, 'servers', servers, true, false, false);
                                                                    J$.N(262377, 'selectedServer', selectedServer, false, false, false);
                                                                    if (J$.C(15128, J$.R(262177, 'err', err, false, false)))
                                                                        return J$.Rt(262217, J$.F(262209, J$.R(262185, 'callback', callback, false, false), false)(J$.R(262193, 'err', err, false, false), J$.T(262201, null, 25, false)));
                                                                    var selectedServer = J$.W(262249, 'selectedServer', J$.F(262241, J$.R(262225, 'randomSelection', randomSelection, false, true), false)(J$.R(262233, 'servers', servers, false, false)), selectedServer, false, false);
                                                                    if (J$.C(15152, J$.C(15144, J$.C(15136, J$.R(262257, 'isSharded', isSharded, false, false)) ? J$.R(262265, 'transaction', transaction, false, false) : J$._()) ? J$.G(262281, J$.R(262273, 'transaction', transaction, false, false), 'isActive') : J$._())) {
                                                                        J$.M(262305, J$.R(262289, 'transaction', transaction, false, false), 'pinServer', false)(J$.R(262297, 'selectedServer', selectedServer, false, false));
                                                                    }
                                                                    J$.F(262337, J$.R(262313, 'callback', callback, false, false), false)(J$.T(262321, null, 25, false), J$.R(262329, 'selectedServer', selectedServer, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(275633, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275641))
                                                                        continue jalangiLabel29;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(275649, J$e);
                                                } finally {
                                                    if (J$.Fr(275657))
                                                        continue jalangiLabel30;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(262617, {
                                    key: J$.T(262489, 'shouldCheckForSessionSupport', 21, false),
                                    value: J$.T(262609, function shouldCheckForSessionSupport() {
                                        jalangiLabel31:
                                            while (true) {
                                                try {
                                                    J$.Fe(262593, arguments.callee, this, arguments);
                                                    arguments = J$.N(262601, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(262585, J$.C(15168, J$.C(15160, J$.B(16634, '===', J$.G(262513, J$.G(262505, J$.R(262497, 'this', this, false, false), 'description'), 'type'), J$.G(262529, J$.R(262521, 'TopologyType', TopologyType, false, true), 'Single'))) ? J$.U(16642, '!', J$.G(262553, J$.G(262545, J$.R(262537, 'this', this, false, false), 'description'), 'hasKnownServers')) : J$._()) ? J$._() : J$.U(16650, '!', J$.G(262577, J$.G(262569, J$.R(262561, 'this', this, false, false), 'description'), 'hasDataBearingServers')));
                                                } catch (J$e) {
                                                    J$.Ex(275665, J$e);
                                                } finally {
                                                    if (J$.Fr(275673))
                                                        continue jalangiLabel31;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(262697, {
                                    key: J$.T(262625, 'hasSessionSupport', 21, false),
                                    value: J$.T(262689, function hasSessionSupport() {
                                        jalangiLabel32:
                                            while (true) {
                                                try {
                                                    J$.Fe(262673, arguments.callee, this, arguments);
                                                    arguments = J$.N(262681, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(262665, J$.B(16658, '!=', J$.G(262649, J$.G(262641, J$.R(262633, 'this', this, false, false), 'description'), 'logicalSessionTimeoutMinutes'), J$.T(262657, null, 25, false)));
                                                } catch (J$e) {
                                                    J$.Ex(275681, J$e);
                                                } finally {
                                                    if (J$.Fr(275689))
                                                        continue jalangiLabel32;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(263009, {
                                    key: J$.T(262705, 'startSession', 21, false),
                                    value: J$.T(263001, function startSession(options, clientOptions) {
                                        jalangiLabel34:
                                            while (true) {
                                                try {
                                                    J$.Fe(262953, arguments.callee, this, arguments);
                                                    arguments = J$.N(262961, 'arguments', arguments, true, false, false);
                                                    options = J$.N(262969, 'options', options, true, false, false);
                                                    clientOptions = J$.N(262977, 'clientOptions', clientOptions, true, false, false);
                                                    J$.N(262985, '_this4', _this4, false, false, false);
                                                    J$.N(262993, 'session', session, false, false, false);
                                                    var _this4 = J$.W(262721, '_this4', J$.R(262713, 'this', this, false, false), _this4, false, false);
                                                    var session = J$.W(262793, 'session', J$.F(262785, J$.R(262729, 'ClientSession', ClientSession, false, true), true)(J$.R(262737, 'this', this, false, false), J$.G(262761, J$.G(262753, J$.R(262745, 'this', this, false, false), 's'), 'sessionPool'), J$.R(262769, 'options', options, false, false), J$.R(262777, 'clientOptions', clientOptions, false, false)), session, false, false);
                                                    J$.M(262889, J$.R(262801, 'session', session, false, false), 'once', false)(J$.T(262809, 'ended', 21, false), J$.T(262881, function () {
                                                        jalangiLabel33:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(262865, arguments.callee, this, arguments);
                                                                    arguments = J$.N(262873, 'arguments', arguments, true, false, false);
                                                                    J$.M(262857, J$.G(262833, J$.G(262825, J$.R(262817, '_this4', _this4, false, false), 's'), 'sessions'), J$.T(262841, 'delete', 21, false), false)(J$.R(262849, 'session', session, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(275697, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275705))
                                                                        continue jalangiLabel33;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.M(262929, J$.G(262913, J$.G(262905, J$.R(262897, 'this', this, false, false), 's'), 'sessions'), 'add', false)(J$.R(262921, 'session', session, false, false));
                                                    return J$.Rt(262945, J$.R(262937, 'session', session, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(275713, J$e);
                                                } finally {
                                                    if (J$.Fr(275721))
                                                        continue jalangiLabel34;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(263241, {
                                    key: J$.T(263017, 'endSessions', 21, false),
                                    value: J$.T(263233, function endSessions(sessions, callback) {
                                        jalangiLabel36:
                                            while (true) {
                                                try {
                                                    J$.Fe(263201, arguments.callee, this, arguments);
                                                    arguments = J$.N(263209, 'arguments', arguments, true, false, false);
                                                    sessions = J$.N(263217, 'sessions', sessions, true, false, false);
                                                    callback = J$.N(263225, 'callback', callback, true, false, false);
                                                    if (J$.C(15176, J$.U(16666, '!', J$.M(263041, J$.I(typeof Array === 'undefined' ? Array = J$.R(263025, 'Array', undefined, true, true) : Array = J$.R(263025, 'Array', Array, true, true)), 'isArray', false)(J$.R(263033, 'sessions', sessions, false, false))))) {
                                                        sessions = J$.W(263065, 'sessions', J$.T(263057, [J$.R(263049, 'sessions', sessions, false, false)], 10, false), sessions, false, false);
                                                    }
                                                    J$.M(263193, J$.R(263073, 'this', this, false, false), 'command', false)(J$.T(263081, 'admin.$cmd', 21, false), J$.T(263097, { endSessions: J$.R(263089, 'sessions', sessions, false, false) }, 11, false), J$.T(263129, {
                                                        readPreference: J$.G(263113, J$.R(263105, 'ReadPreference', ReadPreference, false, true), 'primaryPreferred'),
                                                        noResponse: J$.T(263121, true, 23, false)
                                                    }, 11, false), J$.T(263185, function () {
                                                        jalangiLabel35:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(263169, arguments.callee, this, arguments);
                                                                    arguments = J$.N(263177, 'arguments', arguments, true, false, false);
                                                                    if (J$.C(15184, J$.B(16682, '===', J$.U(16674, 'typeof', J$.R(263137, 'callback', callback, false, false)), J$.T(263145, 'function', 21, false))))
                                                                        J$.F(263161, J$.R(263153, 'callback', callback, false, false), false)();
                                                                } catch (J$e) {
                                                                    J$.Ex(275729, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275737))
                                                                        continue jalangiLabel35;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(275745, J$e);
                                                } finally {
                                                    if (J$.Fr(275753))
                                                        continue jalangiLabel36;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(263977, {
                                    key: J$.T(263249, 'serverUpdateHandler', 21, false),
                                    value: J$.T(263969, function serverUpdateHandler(serverDescription) {
                                        jalangiLabel37:
                                            while (true) {
                                                try {
                                                    J$.Fe(263921, arguments.callee, this, arguments);
                                                    arguments = J$.N(263929, 'arguments', arguments, true, false, false);
                                                    serverDescription = J$.N(263937, 'serverDescription', serverDescription, true, false, false);
                                                    J$.N(263945, 'previousTopologyDescription', previousTopologyDescription, false, false, false);
                                                    J$.N(263953, 'previousServerDescription', previousServerDescription, false, false, false);
                                                    J$.N(263961, 'clusterTime', clusterTime, false, false, false);
                                                    if (J$.C(15192, J$.U(16690, '!', J$.M(263297, J$.G(263273, J$.G(263265, J$.R(263257, 'this', this, false, false), 's'), 'description'), 'hasServer', false)(J$.G(263289, J$.R(263281, 'serverDescription', serverDescription, false, false), 'address'))))) {
                                                        return J$.Rt(263305, undefined);
                                                    }
                                                    var previousTopologyDescription = J$.W(263337, 'previousTopologyDescription', J$.G(263329, J$.G(263321, J$.R(263313, 'this', this, false, false), 's'), 'description'), previousTopologyDescription, false, false);
                                                    var previousServerDescription = J$.W(263401, 'previousServerDescription', J$.M(263393, J$.G(263369, J$.G(263361, J$.G(263353, J$.R(263345, 'this', this, false, false), 's'), 'description'), 'servers'), 'get', false)(J$.G(263385, J$.R(263377, 'serverDescription', serverDescription, false, false), 'address')), previousServerDescription, false, false);
                                                    J$.P(263465, J$.G(263417, J$.R(263409, 'this', this, false, false), 's'), 'description', J$.M(263457, J$.G(263441, J$.G(263433, J$.R(263425, 'this', this, false, false), 's'), 'description'), 'update', false)(J$.R(263449, 'serverDescription', serverDescription, false, false)));
                                                    if (J$.C(15200, J$.G(263497, J$.G(263489, J$.G(263481, J$.R(263473, 'this', this, false, false), 's'), 'description'), 'compatibilityError'))) {
                                                        J$.M(263569, J$.R(263505, 'this', this, false, false), 'emit', false)(J$.T(263513, 'error', 21, false), J$.F(263561, J$.R(263521, 'MongoError', MongoError, false, true), true)(J$.G(263553, J$.G(263545, J$.G(263537, J$.R(263529, 'this', this, false, false), 's'), 'description'), 'compatibilityError')));
                                                        return J$.Rt(263577, undefined);
                                                    }
                                                    J$.M(263721, J$.R(263585, 'this', this, false, false), 'emit', false)(J$.T(263593, 'serverDescriptionChanged', 21, false), J$.M(263713, J$.R(263601, 'monitoring', monitoring, false, true), 'ServerDescriptionChangedEvent', true)(J$.G(263625, J$.G(263617, J$.R(263609, 'this', this, false, false), 's'), 'id'), J$.G(263641, J$.R(263633, 'serverDescription', serverDescription, false, false), 'address'), J$.R(263649, 'previousServerDescription', previousServerDescription, false, false), J$.M(263705, J$.G(263681, J$.G(263673, J$.G(263665, J$.R(263657, 'this', this, false, false), 's'), 'description'), 'servers'), 'get', false)(J$.G(263697, J$.R(263689, 'serverDescription', serverDescription, false, false), 'address'))));
                                                    J$.F(263753, J$.R(263729, 'updateServers', updateServers, false, true), false)(J$.R(263737, 'this', this, false, false), J$.R(263745, 'serverDescription', serverDescription, false, false));
                                                    var clusterTime = J$.W(263777, 'clusterTime', J$.G(263769, J$.R(263761, 'serverDescription', serverDescription, false, false), '$clusterTime'), clusterTime, false, false);
                                                    if (J$.C(15208, J$.R(263785, 'clusterTime', clusterTime, false, false))) {
                                                        J$.F(263817, J$.R(263793, 'resolveClusterTime', resolveClusterTime, false, true), false)(J$.R(263801, 'this', this, false, false), J$.R(263809, 'clusterTime', clusterTime, false, false));
                                                    }
                                                    J$.M(263913, J$.R(263825, 'this', this, false, false), 'emit', false)(J$.T(263833, 'topologyDescriptionChanged', 21, false), J$.M(263905, J$.R(263841, 'monitoring', monitoring, false, true), 'TopologyDescriptionChangedEvent', true)(J$.G(263865, J$.G(263857, J$.R(263849, 'this', this, false, false), 's'), 'id'), J$.R(263873, 'previousTopologyDescription', previousTopologyDescription, false, false), J$.G(263897, J$.G(263889, J$.R(263881, 'this', this, false, false), 's'), 'description')));
                                                } catch (J$e) {
                                                    J$.Ex(275761, J$e);
                                                } finally {
                                                    if (J$.Fr(275769))
                                                        continue jalangiLabel37;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(264129, {
                                    key: J$.T(263985, 'auth', 21, false),
                                    value: J$.T(264121, function auth(credentials, callback) {
                                        jalangiLabel38:
                                            while (true) {
                                                try {
                                                    J$.Fe(264089, arguments.callee, this, arguments);
                                                    arguments = J$.N(264097, 'arguments', arguments, true, false, false);
                                                    credentials = J$.N(264105, 'credentials', credentials, true, false, false);
                                                    callback = J$.N(264113, 'callback', callback, true, false, false);
                                                    if (J$.C(15216, J$.B(16706, '===', J$.U(16698, 'typeof', J$.R(263993, 'credentials', credentials, false, false)), J$.T(264001, 'function', 21, false))))
                                                        callback = J$.W(264017, 'callback', J$.R(264009, 'credentials', credentials, false, false), callback, false, false), credentials = J$.W(264033, 'credentials', J$.T(264025, null, 25, false), credentials, false, false);
                                                    if (J$.C(15224, J$.B(16722, '===', J$.U(16714, 'typeof', J$.R(264041, 'callback', callback, false, false)), J$.T(264049, 'function', 21, false))))
                                                        J$.F(264081, J$.R(264057, 'callback', callback, false, false), false)(J$.T(264065, null, 25, false), J$.T(264073, true, 23, false));
                                                } catch (J$e) {
                                                    J$.Ex(275777, J$e);
                                                } finally {
                                                    if (J$.Fr(275785))
                                                        continue jalangiLabel38;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(264225, {
                                    key: J$.T(264137, 'logout', 21, false),
                                    value: J$.T(264217, function logout(callback) {
                                        jalangiLabel39:
                                            while (true) {
                                                try {
                                                    J$.Fe(264193, arguments.callee, this, arguments);
                                                    arguments = J$.N(264201, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(264209, 'callback', callback, true, false, false);
                                                    if (J$.C(15232, J$.B(16738, '===', J$.U(16730, 'typeof', J$.R(264145, 'callback', callback, false, false)), J$.T(264153, 'function', 21, false))))
                                                        J$.F(264185, J$.R(264161, 'callback', callback, false, false), false)(J$.T(264169, null, 25, false), J$.T(264177, true, 23, false));
                                                } catch (J$e) {
                                                    J$.Ex(275793, J$e);
                                                } finally {
                                                    if (J$.Fr(275801))
                                                        continue jalangiLabel39;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(264369, {
                                    key: J$.T(264233, 'insert', 21, false),
                                    value: J$.T(264361, function insert(ns, ops, options, callback) {
                                        jalangiLabel40:
                                            while (true) {
                                                try {
                                                    J$.Fe(264313, arguments.callee, this, arguments);
                                                    arguments = J$.N(264321, 'arguments', arguments, true, false, false);
                                                    ns = J$.N(264329, 'ns', ns, true, false, false);
                                                    ops = J$.N(264337, 'ops', ops, true, false, false);
                                                    options = J$.N(264345, 'options', options, true, false, false);
                                                    callback = J$.N(264353, 'callback', callback, true, false, false);
                                                    J$.F(264305, J$.R(264241, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(264281, {
                                                        topology: J$.R(264249, 'this', this, false, false),
                                                        op: J$.T(264257, 'insert', 21, false),
                                                        ns: J$.R(264265, 'ns', ns, false, false),
                                                        ops: J$.R(264273, 'ops', ops, false, false)
                                                    }, 11, false), J$.R(264289, 'options', options, false, false), J$.R(264297, 'callback', callback, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(275809, J$e);
                                                } finally {
                                                    if (J$.Fr(275817))
                                                        continue jalangiLabel40;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(264513, {
                                    key: J$.T(264377, 'update', 21, false),
                                    value: J$.T(264505, function update(ns, ops, options, callback) {
                                        jalangiLabel41:
                                            while (true) {
                                                try {
                                                    J$.Fe(264457, arguments.callee, this, arguments);
                                                    arguments = J$.N(264465, 'arguments', arguments, true, false, false);
                                                    ns = J$.N(264473, 'ns', ns, true, false, false);
                                                    ops = J$.N(264481, 'ops', ops, true, false, false);
                                                    options = J$.N(264489, 'options', options, true, false, false);
                                                    callback = J$.N(264497, 'callback', callback, true, false, false);
                                                    J$.F(264449, J$.R(264385, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(264425, {
                                                        topology: J$.R(264393, 'this', this, false, false),
                                                        op: J$.T(264401, 'update', 21, false),
                                                        ns: J$.R(264409, 'ns', ns, false, false),
                                                        ops: J$.R(264417, 'ops', ops, false, false)
                                                    }, 11, false), J$.R(264433, 'options', options, false, false), J$.R(264441, 'callback', callback, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(275825, J$e);
                                                } finally {
                                                    if (J$.Fr(275833))
                                                        continue jalangiLabel41;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(264657, {
                                    key: J$.T(264521, 'remove', 21, false),
                                    value: J$.T(264649, function remove(ns, ops, options, callback) {
                                        jalangiLabel42:
                                            while (true) {
                                                try {
                                                    J$.Fe(264601, arguments.callee, this, arguments);
                                                    arguments = J$.N(264609, 'arguments', arguments, true, false, false);
                                                    ns = J$.N(264617, 'ns', ns, true, false, false);
                                                    ops = J$.N(264625, 'ops', ops, true, false, false);
                                                    options = J$.N(264633, 'options', options, true, false, false);
                                                    callback = J$.N(264641, 'callback', callback, true, false, false);
                                                    J$.F(264593, J$.R(264529, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(264569, {
                                                        topology: J$.R(264537, 'this', this, false, false),
                                                        op: J$.T(264545, 'remove', 21, false),
                                                        ns: J$.R(264553, 'ns', ns, false, false),
                                                        ops: J$.R(264561, 'ops', ops, false, false)
                                                    }, 11, false), J$.R(264577, 'options', options, false, false), J$.R(264585, 'callback', callback, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(275841, J$e);
                                                } finally {
                                                    if (J$.Fr(275849))
                                                        continue jalangiLabel42;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(265593, {
                                    key: J$.T(264665, 'command', 21, false),
                                    value: J$.T(265585, function command(ns, cmd, options, callback) {
                                        jalangiLabel45:
                                            while (true) {
                                                try {
                                                    J$.Fe(265521, arguments.callee, this, arguments);
                                                    arguments = J$.N(265529, 'arguments', arguments, true, false, false);
                                                    ns = J$.N(265537, 'ns', ns, true, false, false);
                                                    cmd = J$.N(265545, 'cmd', cmd, true, false, false);
                                                    options = J$.N(265553, 'options', options, true, false, false);
                                                    callback = J$.N(265561, 'callback', callback, true, false, false);
                                                    J$.N(265569, '_this5', _this5, false, false, false);
                                                    J$.N(265577, 'readPreference', readPreference, false, false, false);
                                                    var _this5 = J$.W(264681, '_this5', J$.R(264673, 'this', this, false, false), _this5, false, false);
                                                    if (J$.C(15248, J$.B(16754, '===', J$.U(16746, 'typeof', J$.R(264689, 'options', options, false, false)), J$.T(264697, 'function', 21, false)))) {
                                                        callback = J$.W(264713, 'callback', J$.R(264705, 'options', options, false, false), callback, false, false), options = J$.W(264729, 'options', J$.T(264721, {}, 11, false), options, false, false), options = J$.W(264753, 'options', J$.C(15240, J$.R(264737, 'options', options, false, false)) ? J$._() : J$.T(264745, {}, 11, false), options, false, false);
                                                    }
                                                    J$.F(264777, J$.R(264761, 'translateReadPreference', translateReadPreference, false, true), false)(J$.R(264769, 'options', options, false, false));
                                                    var readPreference = J$.W(264817, 'readPreference', J$.C(15256, J$.G(264793, J$.R(264785, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(264809, J$.R(264801, 'ReadPreference', ReadPreference, false, true), 'primary'), readPreference, false, false);
                                                    J$.M(265513, J$.R(264825, 'this', this, false, false), 'selectServer', false)(J$.F(264849, J$.R(264833, 'readPreferenceServerSelector', readPreferenceServerSelector, false, true), false)(J$.R(264841, 'readPreference', readPreference, false, false)), J$.R(264857, 'options', options, false, false), J$.T(265505, function (err, server) {
                                                        jalangiLabel44:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(265457, arguments.callee, this, arguments);
                                                                    arguments = J$.N(265465, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(265473, 'err', err, true, false, false);
                                                                    server = J$.N(265481, 'server', server, true, false, false);
                                                                    J$.N(265489, 'willRetryWrite', willRetryWrite, false, false, false);
                                                                    J$.N(265497, 'cb', cb, false, false, false);
                                                                    if (J$.C(15264, J$.R(264865, 'err', err, false, false))) {
                                                                        J$.F(264897, J$.R(264873, 'callback', callback, false, false), false)(J$.R(264881, 'err', err, false, false), J$.T(264889, null, 25, false));
                                                                        return J$.Rt(264905, undefined);
                                                                    }
                                                                    var willRetryWrite = J$.W(265033, 'willRetryWrite', J$.C(15304, J$.C(15296, J$.C(15288, J$.C(15280, J$.C(15272, J$.U(16762, '!', J$.G(264921, J$.R(264913, 'options', options, false, false), 'retrying'))) ? J$.U(16778, '!', J$.U(16770, '!', J$.G(264937, J$.R(264929, 'options', options, false, false), 'retryWrites'))) : J$._()) ? J$.G(264953, J$.R(264945, 'options', options, false, false), 'session') : J$._()) ? J$.F(264977, J$.R(264961, 'isRetryableWritesSupported', isRetryableWritesSupported, false, true), false)(J$.R(264969, '_this5', _this5, false, false)) : J$._()) ? J$.U(16786, '!', J$.M(265001, J$.G(264993, J$.R(264985, 'options', options, false, false), 'session'), 'inTransaction', false)()) : J$._()) ? J$.F(265025, J$.R(265009, 'isWriteCommand', isWriteCommand, false, true), false)(J$.R(265017, 'cmd', cmd, false, false)) : J$._(), willRetryWrite, false, false);
                                                                    var cb = J$.W(265345, 'cb', J$.T(265337, function cb(err, result) {
                                                                        jalangiLabel43:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(265297, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(265305, 'arguments', arguments, true, false, false);
                                                                                    err = J$.N(265313, 'err', err, true, false, false);
                                                                                    result = J$.N(265321, 'result', result, true, false, false);
                                                                                    J$.N(265329, 'newOptions', newOptions, false, false, false);
                                                                                    if (J$.C(15312, J$.U(16794, '!', J$.R(265041, 'err', err, false, false))))
                                                                                        return J$.Rt(265081, J$.F(265073, J$.R(265049, 'callback', callback, false, false), false)(J$.T(265057, null, 25, false), J$.R(265065, 'result', result, false, false)));
                                                                                    if (J$.C(15320, J$.U(16802, '!', J$.F(265105, J$.R(265089, 'isRetryableError', isRetryableError, false, true), false)(J$.R(265097, 'err', err, false, false))))) {
                                                                                        return J$.Rt(265137, J$.F(265129, J$.R(265113, 'callback', callback, false, false), false)(J$.R(265121, 'err', err, false, false)));
                                                                                    }
                                                                                    if (J$.C(15328, J$.R(265145, 'willRetryWrite', willRetryWrite, false, false))) {
                                                                                        var newOptions = J$.W(265201, 'newOptions', J$.M(265193, J$.I(typeof Object === 'undefined' ? Object = J$.R(265153, 'Object', undefined, true, true) : Object = J$.R(265153, 'Object', Object, true, true)), 'assign', false)(J$.T(265161, {}, 11, false), J$.R(265169, 'options', options, false, false), J$.T(265185, { retrying: J$.T(265177, true, 23, false) }, 11, false)), newOptions, false, false);
                                                                                        return J$.Rt(265257, J$.M(265249, J$.R(265209, '_this5', _this5, false, false), 'command', false)(J$.R(265217, 'ns', ns, false, false), J$.R(265225, 'cmd', cmd, false, false), J$.R(265233, 'newOptions', newOptions, false, false), J$.R(265241, 'callback', callback, false, false)));
                                                                                    }
                                                                                    return J$.Rt(265289, J$.F(265281, J$.R(265265, 'callback', callback, false, false), false)(J$.R(265273, 'err', err, false, false)));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(275857, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(275865))
                                                                                        continue jalangiLabel43;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false), cb, false, false);
                                                                    if (J$.C(15336, J$.R(265353, 'willRetryWrite', willRetryWrite, false, false))) {
                                                                        J$.M(265377, J$.G(265369, J$.R(265361, 'options', options, false, false), 'session'), 'incrementTransactionNumber', false)();
                                                                        J$.P(265401, J$.R(265385, 'options', options, false, false), 'willRetryWrite', J$.R(265393, 'willRetryWrite', willRetryWrite, false, false));
                                                                    }
                                                                    J$.M(265449, J$.R(265409, 'server', server, false, false), 'command', false)(J$.R(265417, 'ns', ns, false, false), J$.R(265425, 'cmd', cmd, false, false), J$.R(265433, 'options', options, false, false), J$.R(265441, 'cb', cb, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(275873, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275881))
                                                                        continue jalangiLabel44;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(275889, J$e);
                                                } finally {
                                                    if (J$.Fr(275897))
                                                        continue jalangiLabel45;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(265857, {
                                    key: J$.T(265601, 'cursor', 21, false),
                                    value: J$.T(265849, function cursor(ns, cmd, options) {
                                        jalangiLabel46:
                                            while (true) {
                                                try {
                                                    J$.Fe(265793, arguments.callee, this, arguments);
                                                    arguments = J$.N(265801, 'arguments', arguments, true, false, false);
                                                    ns = J$.N(265809, 'ns', ns, true, false, false);
                                                    cmd = J$.N(265817, 'cmd', cmd, true, false, false);
                                                    options = J$.N(265825, 'options', options, true, false, false);
                                                    J$.N(265833, 'topology', topology, false, false, false);
                                                    J$.N(265841, 'CursorClass', CursorClass, false, false, false);
                                                    options = J$.W(265625, 'options', J$.C(15344, J$.R(265609, 'options', options, false, false)) ? J$._() : J$.T(265617, {}, 11, false), options, false, false);
                                                    var topology = J$.W(265657, 'topology', J$.C(15352, J$.G(265641, J$.R(265633, 'options', options, false, false), 'topology')) ? J$._() : J$.R(265649, 'this', this, false, false), topology, false, false);
                                                    var CursorClass = J$.W(265705, 'CursorClass', J$.C(15360, J$.G(265673, J$.R(265665, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.G(265697, J$.G(265689, J$.R(265681, 'this', this, false, false), 's'), 'Cursor'), CursorClass, false, false);
                                                    J$.F(265729, J$.R(265713, 'translateReadPreference', translateReadPreference, false, true), false)(J$.R(265721, 'options', options, false, false));
                                                    return J$.Rt(265785, J$.F(265777, J$.R(265737, 'CursorClass', CursorClass, false, false), true)(J$.R(265745, 'topology', topology, false, false), J$.R(265753, 'ns', ns, false, false), J$.R(265761, 'cmd', cmd, false, false), J$.R(265769, 'options', options, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(275905, J$e);
                                                } finally {
                                                    if (J$.Fr(275913))
                                                        continue jalangiLabel46;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(265913, {
                                    key: J$.T(265865, 'isConnected', 21, false),
                                    value: J$.T(265905, function isConnected() {
                                        jalangiLabel47:
                                            while (true) {
                                                try {
                                                    J$.Fe(265889, arguments.callee, this, arguments);
                                                    arguments = J$.N(265897, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(265881, J$.T(265873, true, 23, false));
                                                } catch (J$e) {
                                                    J$.Ex(275921, J$e);
                                                } finally {
                                                    if (J$.Fr(275929))
                                                        continue jalangiLabel47;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(265969, {
                                    key: J$.T(265921, 'isDestroyed', 21, false),
                                    value: J$.T(265961, function isDestroyed() {
                                        jalangiLabel48:
                                            while (true) {
                                                try {
                                                    J$.Fe(265945, arguments.callee, this, arguments);
                                                    arguments = J$.N(265953, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(265937, J$.T(265929, false, 23, false));
                                                } catch (J$e) {
                                                    J$.Ex(275937, J$e);
                                                } finally {
                                                    if (J$.Fr(275945))
                                                        continue jalangiLabel48;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(266033, {
                                    key: J$.T(265977, 'unref', 21, false),
                                    value: J$.T(266025, function unref() {
                                        jalangiLabel49:
                                            while (true) {
                                                try {
                                                    J$.Fe(266009, arguments.callee, this, arguments);
                                                    arguments = J$.N(266017, 'arguments', arguments, true, false, false);
                                                    J$.M(266001, J$.I(typeof console === 'undefined' ? console = J$.R(265985, 'console', undefined, true, true) : console = J$.R(265985, 'console', console, true, true)), 'log', false)(J$.T(265993, 'not implemented: `unref`', 21, false));
                                                } catch (J$e) {
                                                    J$.Ex(275953, J$e);
                                                } finally {
                                                    if (J$.Fr(275961))
                                                        continue jalangiLabel49;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(266369, {
                                    key: J$.T(266041, 'lastIsMaster', 21, false),
                                    value: J$.T(266361, function lastIsMaster() {
                                        jalangiLabel51:
                                            while (true) {
                                                try {
                                                    J$.Fe(266321, arguments.callee, this, arguments);
                                                    arguments = J$.N(266329, 'arguments', arguments, true, false, false);
                                                    J$.N(266337, 'serverDescriptions', serverDescriptions, false, false, false);
                                                    J$.N(266345, 'sd', sd, false, false, false);
                                                    J$.N(266353, 'result', result, false, false, false);
                                                    var serverDescriptions = J$.W(266097, 'serverDescriptions', J$.M(266089, J$.I(typeof Array === 'undefined' ? Array = J$.R(266049, 'Array', undefined, true, true) : Array = J$.R(266049, 'Array', Array, true, true)), 'from', false)(J$.M(266081, J$.G(266073, J$.G(266065, J$.R(266057, 'this', this, false, false), 'description'), 'servers'), 'values', false)()), serverDescriptions, false, false);
                                                    if (J$.C(15368, J$.B(16810, '===', J$.G(266113, J$.R(266105, 'serverDescriptions', serverDescriptions, false, false), 'length'), J$.T(266121, 0, 22, false))))
                                                        return J$.Rt(266137, J$.T(266129, {}, 11, false));
                                                    var sd = J$.W(266249, 'sd', J$.G(266241, J$.M(266225, J$.R(266145, 'serverDescriptions', serverDescriptions, false, false), 'filter', false)(J$.T(266217, function (sd) {
                                                        jalangiLabel50:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(266193, arguments.callee, this, arguments);
                                                                    arguments = J$.N(266201, 'arguments', arguments, true, false, false);
                                                                    sd = J$.N(266209, 'sd', sd, true, false, false);
                                                                    return J$.Rt(266185, J$.B(16818, '!==', J$.G(266161, J$.R(266153, 'sd', sd, false, false), 'type'), J$.G(266177, J$.R(266169, 'ServerType', ServerType, false, true), 'Unknown')));
                                                                } catch (J$e) {
                                                                    J$.Ex(275969, J$e);
                                                                } finally {
                                                                    if (J$.Fr(275977))
                                                                        continue jalangiLabel50;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false)), J$.T(266233, 0, 22, false)), sd, false, false);
                                                    var result = J$.W(266297, 'result', J$.C(15376, J$.R(266257, 'sd', sd, false, false)) ? J$._() : J$.T(266289, { maxWireVersion: J$.G(266281, J$.G(266273, J$.R(266265, 'this', this, false, false), 'description'), 'commonWireVersion') }, 11, false), result, false, false);
                                                    return J$.Rt(266313, J$.R(266305, 'result', result, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(275985, J$e);
                                                } finally {
                                                    if (J$.Fr(275993))
                                                        continue jalangiLabel51;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(266441, {
                                    key: J$.T(266377, 'description', 21, false),
                                    get: J$.T(266433, function get() {
                                        jalangiLabel52:
                                            while (true) {
                                                try {
                                                    J$.Fe(266417, arguments.callee, this, arguments);
                                                    arguments = J$.N(266425, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(266409, J$.G(266401, J$.G(266393, J$.R(266385, 'this', this, false, false), 's'), 'description'));
                                                } catch (J$e) {
                                                    J$.Ex(276001, J$e);
                                                } finally {
                                                    if (J$.Fr(276009))
                                                        continue jalangiLabel52;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(266529, {
                                    key: J$.T(266449, 'parserType', 21, false),
                                    get: J$.T(266521, function get() {
                                        jalangiLabel53:
                                            while (true) {
                                                try {
                                                    J$.Fe(266505, arguments.callee, this, arguments);
                                                    arguments = J$.N(266513, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(266497, J$.C(15384, J$.G(266473, J$.R(266457, 'BSON', BSON, false, true), J$.T(266465, 'native', 21, false))) ? J$.T(266481, 'c++', 21, false) : J$.T(266489, 'js', 21, false));
                                                } catch (J$e) {
                                                    J$.Ex(276017, J$e);
                                                } finally {
                                                    if (J$.Fr(276025))
                                                        continue jalangiLabel53;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(266601, {
                                    key: J$.T(266537, 'clientInfo', 21, false),
                                    get: J$.T(266593, function get() {
                                        jalangiLabel54:
                                            while (true) {
                                                try {
                                                    J$.Fe(266577, arguments.callee, this, arguments);
                                                    arguments = J$.N(266585, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(266569, J$.G(266561, J$.G(266553, J$.R(266545, 'this', this, false, false), 's'), 'clientInfo'));
                                                } catch (J$e) {
                                                    J$.Ex(276033, J$e);
                                                } finally {
                                                    if (J$.Fr(276041))
                                                        continue jalangiLabel54;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(266673, {
                                    key: J$.T(266609, 'logicalSessionTimeoutMinutes', 21, false),
                                    get: J$.T(266665, function get() {
                                        jalangiLabel55:
                                            while (true) {
                                                try {
                                                    J$.Fe(266649, arguments.callee, this, arguments);
                                                    arguments = J$.N(266657, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(266641, J$.G(266633, J$.G(266625, J$.R(266617, 'this', this, false, false), 'description'), 'logicalSessionTimeoutMinutes'));
                                                } catch (J$e) {
                                                    J$.Ex(276049, J$e);
                                                } finally {
                                                    if (J$.Fr(276057))
                                                        continue jalangiLabel55;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(266745, {
                                    key: J$.T(266681, 'bson', 21, false),
                                    get: J$.T(266737, function get() {
                                        jalangiLabel56:
                                            while (true) {
                                                try {
                                                    J$.Fe(266721, arguments.callee, this, arguments);
                                                    arguments = J$.N(266729, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(266713, J$.G(266705, J$.G(266697, J$.R(266689, 'this', this, false, false), 's'), 'bson'));
                                                } catch (J$e) {
                                                    J$.Ex(276065, J$e);
                                                } finally {
                                                    if (J$.Fr(276073))
                                                        continue jalangiLabel56;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(266777, J$.R(266769, 'Topology', Topology, false, false));
                        } catch (J$e) {
                            J$.Ex(276081, J$e);
                        } finally {
                            if (J$.Fr(276089))
                                continue jalangiLabel57;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(266833, 'EventEmitter', EventEmitter, false, true)), Topology, false, true);
            J$.M(267025, J$.I(typeof Object === 'undefined' ? Object = J$.R(266857, 'Object', undefined, true, true) : Object = J$.R(266857, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(266873, J$.R(266865, 'Topology', Topology, false, true), 'prototype'), J$.T(266881, 'clusterTime', 21, false), J$.T(267017, {
                enumerable: J$.T(266889, true, 23, false),
                get: J$.T(266945, function get() {
                    jalangiLabel58:
                        while (true) {
                            try {
                                J$.Fe(266929, arguments.callee, this, arguments);
                                arguments = J$.N(266937, 'arguments', arguments, true, false, false);
                                return J$.Rt(266921, J$.G(266913, J$.G(266905, J$.R(266897, 'this', this, false, false), 's'), 'clusterTime'));
                            } catch (J$e) {
                                J$.Ex(276097, J$e);
                            } finally {
                                if (J$.Fr(276105))
                                    continue jalangiLabel58;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                set: J$.T(267009, function set(clusterTime) {
                    jalangiLabel59:
                        while (true) {
                            try {
                                J$.Fe(266985, arguments.callee, this, arguments);
                                arguments = J$.N(266993, 'arguments', arguments, true, false, false);
                                clusterTime = J$.N(267001, 'clusterTime', clusterTime, true, false, false);
                                J$.P(266977, J$.G(266961, J$.R(266953, 'this', this, false, false), 's'), 'clusterTime', J$.R(266969, 'clusterTime', clusterTime, false, false));
                            } catch (J$e) {
                                J$.Ex(276113, J$e);
                            } finally {
                                if (J$.Fr(276121))
                                    continue jalangiLabel59;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.P(267097, J$.G(267041, J$.R(267033, 'Topology', Topology, false, true), 'prototype'), 'destroy', J$.F(267089, J$.R(267049, 'deprecate', deprecate, false, true), false)(J$.G(267073, J$.G(267065, J$.R(267057, 'Topology', Topology, false, true), 'prototype'), 'close'), J$.T(267081, 'destroy() is deprecated, please use close() instead', 21, false)));
            var RETRYABLE_WRITE_OPERATIONS = J$.W(267145, 'RETRYABLE_WRITE_OPERATIONS', J$.T(267137, [
                J$.T(267105, 'findAndModify', 21, false),
                J$.T(267113, 'insert', 21, false),
                J$.T(267121, 'update', 21, false),
                J$.T(267129, 'delete', 21, false)
            ], 10, false), RETRYABLE_WRITE_OPERATIONS, false, true);
            J$.P(274513, J$.I(typeof module === 'undefined' ? module = J$.R(274497, 'module', undefined, true, true) : module = J$.R(274497, 'module', module, true, true)), 'exports', J$.R(274505, 'Topology', Topology, false, true));
        } catch (J$e) {
            J$.Ex(276737, J$e);
        } finally {
            if (J$.Sr(276745))
                continue jalangiLabel98;
            else
                break jalangiLabel98;
        }
    }
// JALANGI DO NOT INSTRUMENT

