J$.noInstrEval = false;
jalangiLabel23:
    while (true) {
        try {
            J$.Se(285881, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/core/sdam/topology_description.js');
            function _classCallCheck(instance, Constructor) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(276801, arguments.callee, this, arguments);
                            arguments = J$.N(276809, 'arguments', arguments, true, false, false);
                            instance = J$.N(276817, 'instance', instance, true, false, false);
                            Constructor = J$.N(276825, 'Constructor', Constructor, true, false, false);
                            if (J$.C(15800, J$.U(17130, '!', J$.B(17122, 'instanceof', J$.R(276761, 'instance', instance, false, false), J$.R(276769, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(276793, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(276777, 'TypeError', undefined, true, true) : TypeError = J$.R(276777, 'TypeError', TypeError, true, true)), true)(J$.T(276785, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(286089, J$e);
                        } finally {
                            if (J$.Fr(286097))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(277073, arguments.callee, this, arguments);
                            arguments = J$.N(277081, 'arguments', arguments, true, false, false);
                            target = J$.N(277089, 'target', target, true, false, false);
                            props = J$.N(277097, 'props', props, true, false, false);
                            J$.N(277105, 'i', i, false, false, false);
                            J$.N(277113, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(276841, 'i', J$.T(276833, 0, 22, false), i, false, false); J$.C(15824, J$.B(17138, '<', J$.R(276849, 'i', i, false, false), J$.G(276865, J$.R(276857, 'props', props, false, false), 'length'))); J$.B(17162, '-', i = J$.W(276881, 'i', J$.B(17154, '+', J$.U(17146, '+', J$.R(276873, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(276913, 'descriptor', J$.G(276905, J$.R(276889, 'props', props, false, false), J$.R(276897, 'i', i, false, false)), descriptor, false, false);
                                J$.P(276953, J$.R(276921, 'descriptor', descriptor, false, false), 'enumerable', J$.C(15808, J$.G(276937, J$.R(276929, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(276945, false, 23, false));
                                J$.P(276977, J$.R(276961, 'descriptor', descriptor, false, false), 'configurable', J$.T(276969, true, 23, false));
                                if (J$.C(15816, J$.B(17170, 'in', J$.T(276985, 'value', 21, false), J$.R(276993, 'descriptor', descriptor, false, false))))
                                    J$.P(277017, J$.R(277001, 'descriptor', descriptor, false, false), 'writable', J$.T(277009, true, 23, false));
                                J$.M(277065, J$.I(typeof Object === 'undefined' ? Object = J$.R(277025, 'Object', undefined, true, true) : Object = J$.R(277025, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(277033, 'target', target, false, false), J$.G(277049, J$.R(277041, 'descriptor', descriptor, false, false), 'key'), J$.R(277057, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(286105, J$e);
                        } finally {
                            if (J$.Fr(286113))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(277225, arguments.callee, this, arguments);
                            arguments = J$.N(277233, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(277241, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(277249, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(277257, 'staticProps', staticProps, true, false, false);
                            if (J$.C(15832, J$.R(277121, 'protoProps', protoProps, false, false)))
                                J$.F(277161, J$.R(277129, '_defineProperties', _defineProperties, false, true), false)(J$.G(277145, J$.R(277137, 'Constructor', Constructor, false, false), 'prototype'), J$.R(277153, 'protoProps', protoProps, false, false));
                            if (J$.C(15840, J$.R(277169, 'staticProps', staticProps, false, false)))
                                J$.F(277201, J$.R(277177, '_defineProperties', _defineProperties, false, true), false)(J$.R(277185, 'Constructor', Constructor, false, false), J$.R(277193, 'staticProps', staticProps, false, false));
                            return J$.Rt(277217, J$.R(277209, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(286121, J$e);
                        } finally {
                            if (J$.Fr(286129))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function topologyTypeForServerType(serverType) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(283065, arguments.callee, this, arguments);
                            arguments = J$.N(283073, 'arguments', arguments, true, false, false);
                            serverType = J$.N(283081, 'serverType', serverType, true, false, false);
                            if (J$.C(16208, J$.B(17442, '===', J$.R(282945, 'serverType', serverType, false, false), J$.G(282961, J$.R(282953, 'ServerType', ServerType, false, true), 'Mongos'))))
                                return J$.Rt(282985, J$.G(282977, J$.R(282969, 'TopologyType', TopologyType, false, true), 'Sharded'));
                            if (J$.C(16216, J$.B(17450, '===', J$.R(282993, 'serverType', serverType, false, false), J$.G(283009, J$.R(283001, 'ServerType', ServerType, false, true), 'RSPrimary'))))
                                return J$.Rt(283033, J$.G(283025, J$.R(283017, 'TopologyType', TopologyType, false, true), 'ReplicaSetWithPrimary'));
                            return J$.Rt(283057, J$.G(283049, J$.R(283041, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary'));
                        } catch (J$e) {
                            J$.Ex(286313, J$e);
                        } finally {
                            if (J$.Fr(286321))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function updateRsFromPrimary(serverDescriptions, setName, serverDescription, maxSetVersion, maxElectionId) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(284561, arguments.callee, this, arguments);
                            arguments = J$.N(284569, 'arguments', arguments, true, false, false);
                            serverDescriptions = J$.N(284577, 'serverDescriptions', serverDescriptions, true, false, false);
                            setName = J$.N(284585, 'setName', setName, true, false, false);
                            serverDescription = J$.N(284593, 'serverDescription', serverDescription, true, false, false);
                            maxSetVersion = J$.N(284601, 'maxSetVersion', maxSetVersion, true, false, false);
                            maxElectionId = J$.N(284609, 'maxElectionId', maxElectionId, true, false, false);
                            J$.N(284617, 'electionIdOID', electionIdOID, false, false, false);
                            J$.N(284625, 'maxElectionIdOID', maxElectionIdOID, false, false, false);
                            J$.N(284633, '_iteratorNormalCompletion4', _iteratorNormalCompletion4, false, false, false);
                            J$.N(284641, '_didIteratorError4', _didIteratorError4, false, false, false);
                            J$.N(284649, '_iteratorError4', _iteratorError4, false, false, false);
                            J$.N(284657, '_iterator4', _iterator4, false, false, false);
                            J$.N(284665, '_step4', _step4, false, false, false);
                            J$.N(284673, 'address', address, false, false, false);
                            J$.N(284681, 'server', server, false, false, false);
                            J$.N(284689, 'currentAddresses', currentAddresses, false, false, false);
                            J$.N(284697, 'responseAddresses', responseAddresses, false, false, false);
                            setName = J$.W(283113, 'setName', J$.C(16224, J$.R(283089, 'setName', setName, false, false)) ? J$._() : J$.G(283105, J$.R(283097, 'serverDescription', serverDescription, false, false), 'setName'), setName, false, false);
                            if (J$.C(16232, J$.B(17458, '!==', J$.R(283121, 'setName', setName, false, false), J$.G(283137, J$.R(283129, 'serverDescription', serverDescription, false, false), 'setName')))) {
                                J$.M(283177, J$.R(283145, 'serverDescriptions', serverDescriptions, false, false), J$.T(283153, 'delete', 21, false), false)(J$.G(283169, J$.R(283161, 'serverDescription', serverDescription, false, false), 'address'));
                                return J$.Rt(283241, J$.T(283233, [
                                    J$.F(283201, J$.R(283185, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(283193, 'serverDescriptions', serverDescriptions, false, false)),
                                    J$.R(283209, 'setName', setName, false, false),
                                    J$.R(283217, 'maxSetVersion', maxSetVersion, false, false),
                                    J$.R(283225, 'maxElectionId', maxElectionId, false, false)
                                ], 10, false));
                            }
                            var electionIdOID = J$.W(283297, 'electionIdOID', J$.C(16240, J$.G(283257, J$.R(283249, 'serverDescription', serverDescription, false, false), 'electionId')) ? J$.G(283281, J$.G(283273, J$.R(283265, 'serverDescription', serverDescription, false, false), 'electionId'), '$oid') : J$.T(283289, null, 25, false), electionIdOID, false, false);
                            var maxElectionIdOID = J$.W(283337, 'maxElectionIdOID', J$.C(16248, J$.R(283305, 'maxElectionId', maxElectionId, false, false)) ? J$.G(283321, J$.R(283313, 'maxElectionId', maxElectionId, false, false), '$oid') : J$.T(283329, null, 25, false), maxElectionIdOID, false, false);
                            if (J$.C(16296, J$.C(16256, J$.B(17466, '!=', J$.G(283353, J$.R(283345, 'serverDescription', serverDescription, false, false), 'setVersion'), J$.T(283361, null, 25, false))) ? J$.B(17474, '!=', J$.R(283369, 'electionIdOID', electionIdOID, false, false), J$.T(283377, null, 25, false)) : J$._())) {
                                if (J$.C(16288, J$.C(16264, J$.B(17482, '!=', J$.R(283385, 'maxSetVersion', maxSetVersion, false, false), J$.T(283393, null, 25, false))) ? J$.B(17490, '!=', J$.R(283401, 'maxElectionIdOID', maxElectionIdOID, false, false), J$.T(283409, null, 25, false)) : J$._())) {
                                    if (J$.C(16280, J$.C(16272, J$.B(17498, '>', J$.R(283417, 'maxSetVersion', maxSetVersion, false, false), J$.G(283433, J$.R(283425, 'serverDescription', serverDescription, false, false), 'setVersion'))) ? J$._() : J$.B(17506, '>', J$.R(283441, 'maxElectionIdOID', maxElectionIdOID, false, false), J$.R(283449, 'electionIdOID', electionIdOID, false, false)))) {
                                        J$.M(283513, J$.R(283457, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.G(283473, J$.R(283465, 'serverDescription', serverDescription, false, false), 'address'), J$.F(283505, J$.R(283481, 'ServerDescription', ServerDescription, false, true), true)(J$.G(283497, J$.R(283489, 'serverDescription', serverDescription, false, false), 'address')));
                                        return J$.Rt(283577, J$.T(283569, [
                                            J$.F(283537, J$.R(283521, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(283529, 'serverDescriptions', serverDescriptions, false, false)),
                                            J$.R(283545, 'setName', setName, false, false),
                                            J$.R(283553, 'maxSetVersion', maxSetVersion, false, false),
                                            J$.R(283561, 'maxElectionId', maxElectionId, false, false)
                                        ], 10, false));
                                    }
                                }
                                maxElectionId = J$.W(283601, 'maxElectionId', J$.G(283593, J$.R(283585, 'serverDescription', serverDescription, false, false), 'electionId'), maxElectionId, false, false);
                            }
                            if (J$.C(16320, J$.C(16312, J$.B(17514, '!=', J$.G(283617, J$.R(283609, 'serverDescription', serverDescription, false, false), 'setVersion'), J$.T(283625, null, 25, false))) ? J$.C(16304, J$.B(17522, '==', J$.R(283633, 'maxSetVersion', maxSetVersion, false, false), J$.T(283641, null, 25, false))) ? J$._() : J$.B(17530, '>', J$.G(283657, J$.R(283649, 'serverDescription', serverDescription, false, false), 'setVersion'), J$.R(283665, 'maxSetVersion', maxSetVersion, false, false)) : J$._())) {
                                maxSetVersion = J$.W(283689, 'maxSetVersion', J$.G(283681, J$.R(283673, 'serverDescription', serverDescription, false, false), 'setVersion'), maxSetVersion, false, false);
                            }
                            var _iteratorNormalCompletion4 = J$.W(283705, '_iteratorNormalCompletion4', J$.T(283697, true, 23, false), _iteratorNormalCompletion4, false, false);
                            var _didIteratorError4 = J$.W(283721, '_didIteratorError4', J$.T(283713, false, 23, false), _didIteratorError4, false, false);
                            var _iteratorError4 = J$.W(283737, '_iteratorError4', J$.T(283729, undefined, 24, false), _iteratorError4, false, false);
                            try {
                                for (var _iterator4 = J$.W(283785, '_iterator4', J$.M(283777, J$.M(283753, J$.R(283745, 'serverDescriptions', serverDescriptions, false, false), 'keys', false)(), J$.G(283769, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(283761, 'Symbol', undefined, true, true) : Symbol = J$.R(283761, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator4, false, false), _step4; J$.C(16344, J$.U(17538, '!', _iteratorNormalCompletion4 = J$.W(283825, '_iteratorNormalCompletion4', J$.G(283817, _step4 = J$.W(283809, '_step4', J$.M(283801, J$.R(283793, '_iterator4', _iterator4, false, false), 'next', false)(), _step4, false, false), 'done'), _iteratorNormalCompletion4, false, false))); _iteratorNormalCompletion4 = J$.W(283841, '_iteratorNormalCompletion4', J$.T(283833, true, 23, false), _iteratorNormalCompletion4, false, false)) {
                                    var address = J$.W(283865, 'address', J$.G(283857, J$.R(283849, '_step4', _step4, false, false), 'value'), address, false, false);
                                    var server = J$.W(283897, 'server', J$.M(283889, J$.R(283873, 'serverDescriptions', serverDescriptions, false, false), 'get', false)(J$.R(283881, 'address', address, false, false)), server, false, false);
                                    if (J$.C(16336, J$.C(16328, J$.B(17546, '===', J$.G(283913, J$.R(283905, 'server', server, false, false), 'type'), J$.G(283929, J$.R(283921, 'ServerType', ServerType, false, true), 'RSPrimary'))) ? J$.B(17554, '!==', J$.G(283945, J$.R(283937, 'server', server, false, false), 'address'), J$.G(283961, J$.R(283953, 'serverDescription', serverDescription, false, false), 'address')) : J$._())) {
                                        J$.M(284017, J$.R(283969, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(283977, 'address', address, false, false), J$.F(284009, J$.R(283985, 'ServerDescription', ServerDescription, false, true), true)(J$.G(284001, J$.R(283993, 'server', server, false, false), 'address')));
                                        break;
                                    }
                                }
                            } catch (err) {
                                J$.N(284057, 'err', err, false, false, true);
                                _didIteratorError4 = J$.W(284033, '_didIteratorError4', J$.T(284025, true, 23, false), _didIteratorError4, false, false);
                                _iteratorError4 = J$.W(284049, '_iteratorError4', J$.R(284041, 'err', err, false, false), _iteratorError4, false, false);
                            } finally {
                                try {
                                    if (J$.C(16360, J$.C(16352, J$.U(17562, '!', J$.R(284065, '_iteratorNormalCompletion4', _iteratorNormalCompletion4, false, false))) ? J$.B(17570, '!=', J$.G(284089, J$.R(284073, '_iterator4', _iterator4, false, false), J$.T(284081, 'return', 21, false)), J$.T(284097, null, 25, false)) : J$._())) {
                                        J$.M(284121, J$.R(284105, '_iterator4', _iterator4, false, false), J$.T(284113, 'return', 21, false), false)();
                                    }
                                } finally {
                                    if (J$.C(16368, J$.R(284129, '_didIteratorError4', _didIteratorError4, false, false))) {
                                        throw J$.R(284137, '_iteratorError4', _iteratorError4, false, false);
                                    }
                                }
                            }
                            J$.M(284265, J$.G(284153, J$.R(284145, 'serverDescription', serverDescription, false, false), 'allHosts'), 'forEach', false)(J$.T(284257, function (address) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(284233, arguments.callee, this, arguments);
                                            arguments = J$.N(284241, 'arguments', arguments, true, false, false);
                                            address = J$.N(284249, 'address', address, true, false, false);
                                            if (J$.C(16376, J$.U(17578, '!', J$.M(284177, J$.R(284161, 'serverDescriptions', serverDescriptions, false, false), 'has', false)(J$.R(284169, 'address', address, false, false))))) {
                                                J$.M(284225, J$.R(284185, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(284193, 'address', address, false, false), J$.F(284217, J$.R(284201, 'ServerDescription', ServerDescription, false, true), true)(J$.R(284209, 'address', address, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(286329, J$e);
                                        } finally {
                                            if (J$.Fr(286337))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var currentAddresses = J$.W(284305, 'currentAddresses', J$.M(284297, J$.I(typeof Array === 'undefined' ? Array = J$.R(284273, 'Array', undefined, true, true) : Array = J$.R(284273, 'Array', Array, true, true)), 'from', false)(J$.M(284289, J$.R(284281, 'serverDescriptions', serverDescriptions, false, false), 'keys', false)()), currentAddresses, false, false);
                            var responseAddresses = J$.W(284329, 'responseAddresses', J$.G(284321, J$.R(284313, 'serverDescription', serverDescription, false, false), 'allHosts'), responseAddresses, false, false);
                            J$.M(284489, J$.M(284417, J$.R(284337, 'currentAddresses', currentAddresses, false, false), 'filter', false)(J$.T(284409, function (addr) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(284385, arguments.callee, this, arguments);
                                            arguments = J$.N(284393, 'arguments', arguments, true, false, false);
                                            addr = J$.N(284401, 'addr', addr, true, false, false);
                                            return J$.Rt(284377, J$.B(17594, '===', J$.M(284361, J$.R(284345, 'responseAddresses', responseAddresses, false, false), 'indexOf', false)(J$.R(284353, 'addr', addr, false, false)), J$.U(17586, '-', J$.T(284369, 1, 22, false))));
                                        } catch (J$e) {
                                            J$.Ex(286345, J$e);
                                        } finally {
                                            if (J$.Fr(286353))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'forEach', false)(J$.T(284481, function (address) {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(284457, arguments.callee, this, arguments);
                                            arguments = J$.N(284465, 'arguments', arguments, true, false, false);
                                            address = J$.N(284473, 'address', address, true, false, false);
                                            J$.M(284449, J$.R(284425, 'serverDescriptions', serverDescriptions, false, false), J$.T(284433, 'delete', 21, false), false)(J$.R(284441, 'address', address, false, false));
                                        } catch (J$e) {
                                            J$.Ex(286361, J$e);
                                        } finally {
                                            if (J$.Fr(286369))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(284553, J$.T(284545, [
                                J$.F(284513, J$.R(284497, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(284505, 'serverDescriptions', serverDescriptions, false, false)),
                                J$.R(284521, 'setName', setName, false, false),
                                J$.R(284529, 'maxSetVersion', maxSetVersion, false, false),
                                J$.R(284537, 'maxElectionId', maxElectionId, false, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(286377, J$e);
                        } finally {
                            if (J$.Fr(286385))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function updateRsWithPrimaryFromMember(serverDescriptions, setName, serverDescription) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(284889, arguments.callee, this, arguments);
                            arguments = J$.N(284897, 'arguments', arguments, true, false, false);
                            serverDescriptions = J$.N(284905, 'serverDescriptions', serverDescriptions, true, false, false);
                            setName = J$.N(284913, 'setName', setName, true, false, false);
                            serverDescription = J$.N(284921, 'serverDescription', serverDescription, true, false, false);
                            if (J$.C(16384, J$.B(17602, '==', J$.R(284705, 'setName', setName, false, false), J$.T(284713, null, 25, false)))) {
                                throw J$.F(284737, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(284721, 'TypeError', undefined, true, true) : TypeError = J$.R(284721, 'TypeError', TypeError, true, true)), true)(J$.T(284729, 'setName is required', 21, false));
                            }
                            if (J$.C(16408, J$.C(16400, J$.B(17610, '!==', J$.R(284745, 'setName', setName, false, false), J$.G(284761, J$.R(284753, 'serverDescription', serverDescription, false, false), 'setName'))) ? J$._() : J$.C(16392, J$.G(284777, J$.R(284769, 'serverDescription', serverDescription, false, false), 'me')) ? J$.B(17618, '!==', J$.G(284793, J$.R(284785, 'serverDescription', serverDescription, false, false), 'address'), J$.G(284809, J$.R(284801, 'serverDescription', serverDescription, false, false), 'me')) : J$._())) {
                                J$.M(284849, J$.R(284817, 'serverDescriptions', serverDescriptions, false, false), J$.T(284825, 'delete', 21, false), false)(J$.G(284841, J$.R(284833, 'serverDescription', serverDescription, false, false), 'address'));
                            }
                            return J$.Rt(284881, J$.F(284873, J$.R(284857, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(284865, 'serverDescriptions', serverDescriptions, false, false)));
                        } catch (J$e) {
                            J$.Ex(286393, J$e);
                        } finally {
                            if (J$.Fr(286401))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function updateRsNoPrimaryFromMember(serverDescriptions, setName, serverDescription) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(285329, arguments.callee, this, arguments);
                            arguments = J$.N(285337, 'arguments', arguments, true, false, false);
                            serverDescriptions = J$.N(285345, 'serverDescriptions', serverDescriptions, true, false, false);
                            setName = J$.N(285353, 'setName', setName, true, false, false);
                            serverDescription = J$.N(285361, 'serverDescription', serverDescription, true, false, false);
                            J$.N(285369, 'topologyType', topologyType, false, false, false);
                            var topologyType = J$.W(284945, 'topologyType', J$.G(284937, J$.R(284929, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary'), topologyType, false, false);
                            setName = J$.W(284977, 'setName', J$.C(16416, J$.R(284953, 'setName', setName, false, false)) ? J$._() : J$.G(284969, J$.R(284961, 'serverDescription', serverDescription, false, false), 'setName'), setName, false, false);
                            if (J$.C(16424, J$.B(17626, '!==', J$.R(284985, 'setName', setName, false, false), J$.G(285001, J$.R(284993, 'serverDescription', serverDescription, false, false), 'setName')))) {
                                J$.M(285041, J$.R(285009, 'serverDescriptions', serverDescriptions, false, false), J$.T(285017, 'delete', 21, false), false)(J$.G(285033, J$.R(285025, 'serverDescription', serverDescription, false, false), 'address'));
                                return J$.Rt(285073, J$.T(285065, [
                                    J$.R(285049, 'topologyType', topologyType, false, false),
                                    J$.R(285057, 'setName', setName, false, false)
                                ], 10, false));
                            }
                            J$.M(285201, J$.G(285089, J$.R(285081, 'serverDescription', serverDescription, false, false), 'allHosts'), 'forEach', false)(J$.T(285193, function (address) {
                                jalangiLabel20:
                                    while (true) {
                                        try {
                                            J$.Fe(285169, arguments.callee, this, arguments);
                                            arguments = J$.N(285177, 'arguments', arguments, true, false, false);
                                            address = J$.N(285185, 'address', address, true, false, false);
                                            if (J$.C(16432, J$.U(17634, '!', J$.M(285113, J$.R(285097, 'serverDescriptions', serverDescriptions, false, false), 'has', false)(J$.R(285105, 'address', address, false, false))))) {
                                                J$.M(285161, J$.R(285121, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(285129, 'address', address, false, false), J$.F(285153, J$.R(285137, 'ServerDescription', ServerDescription, false, true), true)(J$.R(285145, 'address', address, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(286409, J$e);
                                        } finally {
                                            if (J$.Fr(286417))
                                                continue jalangiLabel20;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            if (J$.C(16448, J$.C(16440, J$.G(285217, J$.R(285209, 'serverDescription', serverDescription, false, false), 'me')) ? J$.B(17642, '!==', J$.G(285233, J$.R(285225, 'serverDescription', serverDescription, false, false), 'address'), J$.G(285249, J$.R(285241, 'serverDescription', serverDescription, false, false), 'me')) : J$._())) {
                                J$.M(285289, J$.R(285257, 'serverDescriptions', serverDescriptions, false, false), J$.T(285265, 'delete', 21, false), false)(J$.G(285281, J$.R(285273, 'serverDescription', serverDescription, false, false), 'address'));
                            }
                            return J$.Rt(285321, J$.T(285313, [
                                J$.R(285297, 'topologyType', topologyType, false, false),
                                J$.R(285305, 'setName', setName, false, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(286425, J$e);
                        } finally {
                            if (J$.Fr(286433))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkHasPrimary(serverDescriptions) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(285769, arguments.callee, this, arguments);
                            arguments = J$.N(285777, 'arguments', arguments, true, false, false);
                            serverDescriptions = J$.N(285785, 'serverDescriptions', serverDescriptions, true, false, false);
                            J$.N(285793, '_iteratorNormalCompletion5', _iteratorNormalCompletion5, false, false, false);
                            J$.N(285801, '_didIteratorError5', _didIteratorError5, false, false, false);
                            J$.N(285809, '_iteratorError5', _iteratorError5, false, false, false);
                            J$.N(285817, '_iterator5', _iterator5, false, false, false);
                            J$.N(285825, '_step5', _step5, false, false, false);
                            J$.N(285833, 'addr', addr, false, false, false);
                            var _iteratorNormalCompletion5 = J$.W(285385, '_iteratorNormalCompletion5', J$.T(285377, true, 23, false), _iteratorNormalCompletion5, false, false);
                            var _didIteratorError5 = J$.W(285401, '_didIteratorError5', J$.T(285393, false, 23, false), _didIteratorError5, false, false);
                            var _iteratorError5 = J$.W(285417, '_iteratorError5', J$.T(285409, undefined, 24, false), _iteratorError5, false, false);
                            try {
                                for (var _iterator5 = J$.W(285465, '_iterator5', J$.M(285457, J$.M(285433, J$.R(285425, 'serverDescriptions', serverDescriptions, false, false), 'keys', false)(), J$.G(285449, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(285441, 'Symbol', undefined, true, true) : Symbol = J$.R(285441, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator5, false, false), _step5; J$.C(16464, J$.U(17650, '!', _iteratorNormalCompletion5 = J$.W(285505, '_iteratorNormalCompletion5', J$.G(285497, _step5 = J$.W(285489, '_step5', J$.M(285481, J$.R(285473, '_iterator5', _iterator5, false, false), 'next', false)(), _step5, false, false), 'done'), _iteratorNormalCompletion5, false, false))); _iteratorNormalCompletion5 = J$.W(285521, '_iteratorNormalCompletion5', J$.T(285513, true, 23, false), _iteratorNormalCompletion5, false, false)) {
                                    var addr = J$.W(285545, 'addr', J$.G(285537, J$.R(285529, '_step5', _step5, false, false), 'value'), addr, false, false);
                                    if (J$.C(16456, J$.B(17658, '===', J$.G(285577, J$.M(285569, J$.R(285553, 'serverDescriptions', serverDescriptions, false, false), 'get', false)(J$.R(285561, 'addr', addr, false, false)), 'type'), J$.G(285593, J$.R(285585, 'ServerType', ServerType, false, true), 'RSPrimary')))) {
                                        return J$.Rt(285617, J$.G(285609, J$.R(285601, 'TopologyType', TopologyType, false, true), 'ReplicaSetWithPrimary'));
                                    }
                                }
                            } catch (err) {
                                J$.N(285657, 'err', err, false, false, true);
                                _didIteratorError5 = J$.W(285633, '_didIteratorError5', J$.T(285625, true, 23, false), _didIteratorError5, false, false);
                                _iteratorError5 = J$.W(285649, '_iteratorError5', J$.R(285641, 'err', err, false, false), _iteratorError5, false, false);
                            } finally {
                                try {
                                    if (J$.C(16480, J$.C(16472, J$.U(17666, '!', J$.R(285665, '_iteratorNormalCompletion5', _iteratorNormalCompletion5, false, false))) ? J$.B(17674, '!=', J$.G(285689, J$.R(285673, '_iterator5', _iterator5, false, false), J$.T(285681, 'return', 21, false)), J$.T(285697, null, 25, false)) : J$._())) {
                                        J$.M(285721, J$.R(285705, '_iterator5', _iterator5, false, false), J$.T(285713, 'return', 21, false), false)();
                                    }
                                } finally {
                                    if (J$.C(16488, J$.R(285729, '_didIteratorError5', _didIteratorError5, false, false))) {
                                        throw J$.R(285737, '_iteratorError5', _iteratorError5, false, false);
                                    }
                                }
                            }
                            return J$.Rt(285761, J$.G(285753, J$.R(285745, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary'));
                        } catch (J$e) {
                            J$.Ex(286441, J$e);
                        } finally {
                            if (J$.Fr(286449))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _classCallCheck = J$.N(285897, '_classCallCheck', J$.T(285889, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(285913, '_defineProperties', J$.T(285905, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(285929, '_createClass', J$.T(285921, _createClass, 12, false), true, false, false);
            J$.N(285937, 'ServerType', ServerType, false, false, false);
            J$.N(285945, 'ServerDescription', ServerDescription, false, false, false);
            J$.N(285953, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, false, false);
            J$.N(285961, 'MIN_SUPPORTED_SERVER_VERSION', MIN_SUPPORTED_SERVER_VERSION, false, false, false);
            J$.N(285969, 'MAX_SUPPORTED_SERVER_VERSION', MAX_SUPPORTED_SERVER_VERSION, false, false, false);
            J$.N(285977, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, false, false);
            J$.N(285985, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, false, false);
            J$.N(285993, 'TopologyType', TopologyType, false, false, false);
            J$.N(286001, 'TopologyDescription', TopologyDescription, false, false, false);
            topologyTypeForServerType = J$.N(286017, 'topologyTypeForServerType', J$.T(286009, topologyTypeForServerType, 12, false), true, false, false);
            updateRsFromPrimary = J$.N(286033, 'updateRsFromPrimary', J$.T(286025, updateRsFromPrimary, 12, false), true, false, false);
            updateRsWithPrimaryFromMember = J$.N(286049, 'updateRsWithPrimaryFromMember', J$.T(286041, updateRsWithPrimaryFromMember, 12, false), true, false, false);
            updateRsNoPrimaryFromMember = J$.N(286065, 'updateRsNoPrimaryFromMember', J$.T(286057, updateRsNoPrimaryFromMember, 12, false), true, false, false);
            checkHasPrimary = J$.N(286081, 'checkHasPrimary', J$.T(286073, checkHasPrimary, 12, false), true, false, false);
            J$.T(276753, 'use strict', 21, false);
            var ServerType = J$.W(277297, 'ServerType', J$.G(277289, J$.F(277281, J$.I(typeof require === 'undefined' ? require = J$.R(277265, 'require', undefined, true, true) : require = J$.R(277265, 'require', require, true, true)), false)(J$.T(277273, './server_description', 21, false)), 'ServerType'), ServerType, false, true);
            var ServerDescription = J$.W(277337, 'ServerDescription', J$.G(277329, J$.F(277321, J$.I(typeof require === 'undefined' ? require = J$.R(277305, 'require', undefined, true, true) : require = J$.R(277305, 'require', require, true, true)), false)(J$.T(277313, './server_description', 21, false)), 'ServerDescription'), ServerDescription, false, true);
            var WIRE_CONSTANTS = J$.W(277369, 'WIRE_CONSTANTS', J$.F(277361, J$.I(typeof require === 'undefined' ? require = J$.R(277345, 'require', undefined, true, true) : require = J$.R(277345, 'require', require, true, true)), false)(J$.T(277353, '../wireprotocol/constants', 21, false)), WIRE_CONSTANTS, false, true);
            var MIN_SUPPORTED_SERVER_VERSION = J$.W(277393, 'MIN_SUPPORTED_SERVER_VERSION', J$.G(277385, J$.R(277377, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MIN_SUPPORTED_SERVER_VERSION'), MIN_SUPPORTED_SERVER_VERSION, false, true);
            var MAX_SUPPORTED_SERVER_VERSION = J$.W(277417, 'MAX_SUPPORTED_SERVER_VERSION', J$.G(277409, J$.R(277401, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MAX_SUPPORTED_SERVER_VERSION'), MAX_SUPPORTED_SERVER_VERSION, false, true);
            var MIN_SUPPORTED_WIRE_VERSION = J$.W(277441, 'MIN_SUPPORTED_WIRE_VERSION', J$.G(277433, J$.R(277425, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MIN_SUPPORTED_WIRE_VERSION'), MIN_SUPPORTED_WIRE_VERSION, false, true);
            var MAX_SUPPORTED_WIRE_VERSION = J$.W(277465, 'MAX_SUPPORTED_WIRE_VERSION', J$.G(277457, J$.R(277449, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MAX_SUPPORTED_WIRE_VERSION'), MAX_SUPPORTED_WIRE_VERSION, false, true);
            var TopologyType = J$.W(277521, 'TopologyType', J$.T(277513, {
                Single: J$.T(277473, 'Single', 21, false),
                ReplicaSetNoPrimary: J$.T(277481, 'ReplicaSetNoPrimary', 21, false),
                ReplicaSetWithPrimary: J$.T(277489, 'ReplicaSetWithPrimary', 21, false),
                Sharded: J$.T(277497, 'Sharded', 21, false),
                Unknown: J$.T(277505, 'Unknown', 21, false)
            }, 11, false), TopologyType, false, true);
            var TopologyDescription = J$.W(282937, 'TopologyDescription', J$.F(282929, J$.T(282921, function () {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(282889, arguments.callee, this, arguments);
                            function TopologyDescription(topologyType, serverDescriptions, setName, maxSetVersion, maxElectionId, commonWireVersion, options, error) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(279041, arguments.callee, this, arguments);
                                            arguments = J$.N(279049, 'arguments', arguments, true, false, false);
                                            topologyType = J$.N(279057, 'topologyType', topologyType, true, false, false);
                                            serverDescriptions = J$.N(279065, 'serverDescriptions', serverDescriptions, true, false, false);
                                            setName = J$.N(279073, 'setName', setName, true, false, false);
                                            maxSetVersion = J$.N(279081, 'maxSetVersion', maxSetVersion, true, false, false);
                                            maxElectionId = J$.N(279089, 'maxElectionId', maxElectionId, true, false, false);
                                            commonWireVersion = J$.N(279097, 'commonWireVersion', commonWireVersion, true, false, false);
                                            options = J$.N(279105, 'options', options, true, false, false);
                                            error = J$.N(279113, 'error', error, true, false, false);
                                            J$.N(279121, '_iteratorNormalCompletion', _iteratorNormalCompletion, false, false, false);
                                            J$.N(279129, '_didIteratorError', _didIteratorError, false, false, false);
                                            J$.N(279137, '_iteratorError', _iteratorError, false, false, false);
                                            J$.N(279145, '_iterator', _iterator, false, false, false);
                                            J$.N(279153, '_step', _step, false, false, false);
                                            J$.N(279161, 'serverDescription', serverDescription, false, false, false);
                                            J$.N(279169, 'readableServers', readableServers, false, false, false);
                                            J$.F(277553, J$.R(277529, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(277537, 'this', this, false, false), J$.R(277545, 'TopologyDescription', TopologyDescription, false, false));
                                            options = J$.W(277577, 'options', J$.C(15848, J$.R(277561, 'options', options, false, false)) ? J$._() : J$.T(277569, {}, 11, false), options, false, false);
                                            J$.P(277617, J$.R(277585, 'this', this, false, false), 'type', J$.C(15856, J$.R(277593, 'topologyType', topologyType, false, false)) ? J$._() : J$.G(277609, J$.R(277601, 'TopologyType', TopologyType, false, true), 'Unknown'));
                                            J$.P(277649, J$.R(277625, 'this', this, false, false), 'setName', J$.C(15864, J$.R(277633, 'setName', setName, false, false)) ? J$._() : J$.T(277641, null, 25, false));
                                            J$.P(277681, J$.R(277657, 'this', this, false, false), 'maxSetVersion', J$.C(15872, J$.R(277665, 'maxSetVersion', maxSetVersion, false, false)) ? J$._() : J$.T(277673, null, 25, false));
                                            J$.P(277713, J$.R(277689, 'this', this, false, false), 'maxElectionId', J$.C(15880, J$.R(277697, 'maxElectionId', maxElectionId, false, false)) ? J$._() : J$.T(277705, null, 25, false));
                                            J$.P(277753, J$.R(277721, 'this', this, false, false), 'servers', J$.C(15888, J$.R(277729, 'serverDescriptions', serverDescriptions, false, false)) ? J$._() : J$.F(277745, J$.I(typeof Map === 'undefined' ? Map = J$.R(277737, 'Map', undefined, true, true) : Map = J$.R(277737, 'Map', Map, true, true)), true)());
                                            J$.P(277777, J$.R(277761, 'this', this, false, false), 'stale', J$.T(277769, false, 23, false));
                                            J$.P(277801, J$.R(277785, 'this', this, false, false), 'compatible', J$.T(277793, true, 23, false));
                                            J$.P(277825, J$.R(277809, 'this', this, false, false), 'compatibilityError', J$.T(277817, null, 25, false));
                                            J$.P(277849, J$.R(277833, 'this', this, false, false), 'logicalSessionTimeoutMinutes', J$.T(277841, null, 25, false));
                                            J$.P(277889, J$.R(277857, 'this', this, false, false), 'heartbeatFrequencyMS', J$.C(15896, J$.G(277873, J$.R(277865, 'options', options, false, false), 'heartbeatFrequencyMS')) ? J$._() : J$.T(277881, 0, 22, false));
                                            J$.P(277929, J$.R(277897, 'this', this, false, false), 'localThresholdMS', J$.C(15904, J$.G(277913, J$.R(277905, 'options', options, false, false), 'localThresholdMS')) ? J$._() : J$.T(277921, 0, 22, false));
                                            J$.P(277953, J$.R(277937, 'this', this, false, false), 'options', J$.R(277945, 'options', options, false, false));
                                            J$.P(277977, J$.R(277961, 'this', this, false, false), 'error', J$.R(277969, 'error', error, false, false));
                                            J$.P(278009, J$.R(277985, 'this', this, false, false), 'commonWireVersion', J$.C(15912, J$.R(277993, 'commonWireVersion', commonWireVersion, false, false)) ? J$._() : J$.T(278001, null, 25, false));
                                            var _iteratorNormalCompletion = J$.W(278025, '_iteratorNormalCompletion', J$.T(278017, true, 23, false), _iteratorNormalCompletion, false, false);
                                            var _didIteratorError = J$.W(278041, '_didIteratorError', J$.T(278033, false, 23, false), _didIteratorError, false, false);
                                            var _iteratorError = J$.W(278057, '_iteratorError', J$.T(278049, undefined, 24, false), _iteratorError, false, false);
                                            try {
                                                for (var _iterator = J$.W(278113, '_iterator', J$.M(278105, J$.M(278081, J$.G(278073, J$.R(278065, 'this', this, false, false), 'servers'), 'values', false)(), J$.G(278097, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(278089, 'Symbol', undefined, true, true) : Symbol = J$.R(278089, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator, false, false), _step; J$.C(15944, J$.U(17178, '!', _iteratorNormalCompletion = J$.W(278153, '_iteratorNormalCompletion', J$.G(278145, _step = J$.W(278137, '_step', J$.M(278129, J$.R(278121, '_iterator', _iterator, false, false), 'next', false)(), _step, false, false), 'done'), _iteratorNormalCompletion, false, false))); _iteratorNormalCompletion = J$.W(278169, '_iteratorNormalCompletion', J$.T(278161, true, 23, false), _iteratorNormalCompletion, false, false)) {
                                                    var serverDescription = J$.W(278193, 'serverDescription', J$.G(278185, J$.R(278177, '_step', _step, false, false), 'value'), serverDescription, false, false);
                                                    if (J$.C(15920, J$.B(17186, '===', J$.G(278209, J$.R(278201, 'serverDescription', serverDescription, false, false), 'type'), J$.G(278225, J$.R(278217, 'ServerType', ServerType, false, true), 'Unknown'))))
                                                        continue;
                                                    if (J$.C(15928, J$.B(17194, '>', J$.G(278241, J$.R(278233, 'serverDescription', serverDescription, false, false), 'minWireVersion'), J$.R(278249, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, true)))) {
                                                        J$.P(278273, J$.R(278257, 'this', this, false, false), 'compatible', J$.T(278265, false, 23, false));
                                                        J$.P(278409, J$.R(278281, 'this', this, false, false), 'compatibilityError', J$.M(278401, J$.M(278377, J$.M(278353, J$.M(278321, J$.T(278289, 'Server at ', 21, false), 'concat', false)(J$.G(278305, J$.R(278297, 'serverDescription', serverDescription, false, false), 'address'), J$.T(278313, ' requires wire version ', 21, false)), 'concat', false)(J$.G(278337, J$.R(278329, 'serverDescription', serverDescription, false, false), 'minWireVersion'), J$.T(278345, ', but this version of the driver only supports up to ', 21, false)), 'concat', false)(J$.R(278361, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, true), J$.T(278369, ' (MongoDB ', 21, false)), 'concat', false)(J$.R(278385, 'MAX_SUPPORTED_SERVER_VERSION', MAX_SUPPORTED_SERVER_VERSION, false, true), J$.T(278393, ')', 21, false)));
                                                    }
                                                    if (J$.C(15936, J$.B(17202, '<', J$.G(278425, J$.R(278417, 'serverDescription', serverDescription, false, false), 'maxWireVersion'), J$.R(278433, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, true)))) {
                                                        J$.P(278457, J$.R(278441, 'this', this, false, false), 'compatible', J$.T(278449, false, 23, false));
                                                        J$.P(278593, J$.R(278465, 'this', this, false, false), 'compatibilityError', J$.M(278585, J$.M(278561, J$.M(278537, J$.M(278505, J$.T(278473, 'Server at ', 21, false), 'concat', false)(J$.G(278489, J$.R(278481, 'serverDescription', serverDescription, false, false), 'address'), J$.T(278497, ' reports wire version ', 21, false)), 'concat', false)(J$.G(278521, J$.R(278513, 'serverDescription', serverDescription, false, false), 'maxWireVersion'), J$.T(278529, ', but this version of the driver requires at least ', 21, false)), 'concat', false)(J$.R(278545, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, true), J$.T(278553, ' (MongoDB ', 21, false)), 'concat', false)(J$.R(278569, 'MIN_SUPPORTED_SERVER_VERSION', MIN_SUPPORTED_SERVER_VERSION, false, true), J$.T(278577, ').', 21, false)));
                                                        break;
                                                    }
                                                }
                                            } catch (err) {
                                                J$.N(278633, 'err', err, false, false, true);
                                                _didIteratorError = J$.W(278609, '_didIteratorError', J$.T(278601, true, 23, false), _didIteratorError, false, false);
                                                _iteratorError = J$.W(278625, '_iteratorError', J$.R(278617, 'err', err, false, false), _iteratorError, false, false);
                                            } finally {
                                                try {
                                                    if (J$.C(15960, J$.C(15952, J$.U(17210, '!', J$.R(278641, '_iteratorNormalCompletion', _iteratorNormalCompletion, false, false))) ? J$.B(17218, '!=', J$.G(278665, J$.R(278649, '_iterator', _iterator, false, false), J$.T(278657, 'return', 21, false)), J$.T(278673, null, 25, false)) : J$._())) {
                                                        J$.M(278697, J$.R(278681, '_iterator', _iterator, false, false), J$.T(278689, 'return', 21, false), false)();
                                                    }
                                                } finally {
                                                    if (J$.C(15968, J$.R(278705, '_didIteratorError', _didIteratorError, false, false))) {
                                                        throw J$.R(278713, '_iteratorError', _iteratorError, false, false);
                                                    }
                                                }
                                            }
                                            var readableServers = J$.W(278825, 'readableServers', J$.M(278817, J$.M(278753, J$.I(typeof Array === 'undefined' ? Array = J$.R(278721, 'Array', undefined, true, true) : Array = J$.R(278721, 'Array', Array, true, true)), 'from', false)(J$.M(278745, J$.G(278737, J$.R(278729, 'this', this, false, false), 'servers'), 'values', false)()), 'filter', false)(J$.T(278809, function (s) {
                                                jalangiLabel3:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(278785, arguments.callee, this, arguments);
                                                            arguments = J$.N(278793, 'arguments', arguments, true, false, false);
                                                            s = J$.N(278801, 's', s, true, false, false);
                                                            return J$.Rt(278777, J$.G(278769, J$.R(278761, 's', s, false, false), 'isReadable'));
                                                        } catch (J$e) {
                                                            J$.Ex(286137, J$e);
                                                        } finally {
                                                            if (J$.Fr(286145))
                                                                continue jalangiLabel3;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), readableServers, false, false);
                                            J$.P(279033, J$.R(278833, 'this', this, false, false), 'logicalSessionTimeoutMinutes', J$.M(279025, J$.R(278841, 'readableServers', readableServers, false, false), 'reduce', false)(J$.T(279009, function (result, server) {
                                                jalangiLabel4:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(278977, arguments.callee, this, arguments);
                                                            arguments = J$.N(278985, 'arguments', arguments, true, false, false);
                                                            result = J$.N(278993, 'result', result, true, false, false);
                                                            server = J$.N(279001, 'server', server, true, false, false);
                                                            if (J$.C(15976, J$.B(17226, '==', J$.G(278857, J$.R(278849, 'server', server, false, false), 'logicalSessionTimeoutMinutes'), J$.T(278865, null, 25, false))))
                                                                return J$.Rt(278881, J$.T(278873, null, 25, false));
                                                            if (J$.C(15984, J$.B(17234, '==', J$.R(278889, 'result', result, false, false), J$.T(278897, null, 25, false))))
                                                                return J$.Rt(278921, J$.G(278913, J$.R(278905, 'server', server, false, false), 'logicalSessionTimeoutMinutes'));
                                                            return J$.Rt(278969, J$.M(278961, J$.I(typeof Math === 'undefined' ? Math = J$.R(278929, 'Math', undefined, true, true) : Math = J$.R(278929, 'Math', Math, true, true)), 'min', false)(J$.R(278937, 'result', result, false, false), J$.G(278953, J$.R(278945, 'server', server, false, false), 'logicalSessionTimeoutMinutes')));
                                                        } catch (J$e) {
                                                            J$.Ex(286153, J$e);
                                                        } finally {
                                                            if (J$.Fr(286161))
                                                                continue jalangiLabel4;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.T(279017, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(286169, J$e);
                                        } finally {
                                            if (J$.Fr(286177))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(282897, 'arguments', arguments, true, false, false);
                            TopologyDescription = J$.N(282913, 'TopologyDescription', J$.T(282905, TopologyDescription, 12, false), true, false, false);
                            J$.F(282865, J$.R(279177, '_createClass', _createClass, false, true), false)(J$.R(279185, 'TopologyDescription', TopologyDescription, false, false), J$.T(282857, [
                                J$.T(280393, {
                                    key: J$.T(279193, 'updateFromSrvPollingEvent', 21, false),
                                    value: J$.T(280385, function updateFromSrvPollingEvent(ev) {
                                        jalangiLabel6:
                                            while (true) {
                                                try {
                                                    J$.Fe(280249, arguments.callee, this, arguments);
                                                    arguments = J$.N(280257, 'arguments', arguments, true, false, false);
                                                    ev = J$.N(280265, 'ev', ev, true, false, false);
                                                    J$.N(280273, 'newAddresses', newAddresses, false, false, false);
                                                    J$.N(280281, 'serverDescriptions', serverDescriptions, false, false, false);
                                                    J$.N(280289, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, false, false, false);
                                                    J$.N(280297, '_didIteratorError2', _didIteratorError2, false, false, false);
                                                    J$.N(280305, '_iteratorError2', _iteratorError2, false, false, false);
                                                    J$.N(280313, '_iterator2', _iterator2, false, false, false);
                                                    J$.N(280321, '_step2', _step2, false, false, false);
                                                    J$.N(280329, 'server', server, false, false, false);
                                                    J$.N(280337, '_iteratorNormalCompletion3', _iteratorNormalCompletion3, false, false, false);
                                                    J$.N(280345, '_didIteratorError3', _didIteratorError3, false, false, false);
                                                    J$.N(280353, '_iteratorError3', _iteratorError3, false, false, false);
                                                    J$.N(280361, '_iterator3', _iterator3, false, false, false);
                                                    J$.N(280369, '_step3', _step3, false, false, false);
                                                    J$.N(280377, 'address', address, false, false, false);
                                                    var newAddresses = J$.W(279217, 'newAddresses', J$.M(279209, J$.R(279201, 'ev', ev, false, false), 'addresses', false)(), newAddresses, false, false);
                                                    var serverDescriptions = J$.W(279257, 'serverDescriptions', J$.F(279249, J$.I(typeof Map === 'undefined' ? Map = J$.R(279225, 'Map', undefined, true, true) : Map = J$.R(279225, 'Map', Map, true, true)), true)(J$.G(279241, J$.R(279233, 'this', this, false, false), 'servers')), serverDescriptions, false, false);
                                                    var _iteratorNormalCompletion2 = J$.W(279273, '_iteratorNormalCompletion2', J$.T(279265, true, 23, false), _iteratorNormalCompletion2, false, false);
                                                    var _didIteratorError2 = J$.W(279289, '_didIteratorError2', J$.T(279281, false, 23, false), _didIteratorError2, false, false);
                                                    var _iteratorError2 = J$.W(279305, '_iteratorError2', J$.T(279297, undefined, 24, false), _iteratorError2, false, false);
                                                    try {
                                                        for (var _iterator2 = J$.W(279353, '_iterator2', J$.M(279345, J$.G(279321, J$.R(279313, 'this', this, false, false), 'servers'), J$.G(279337, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(279329, 'Symbol', undefined, true, true) : Symbol = J$.R(279329, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator2, false, false), _step2; J$.C(16000, J$.U(17242, '!', _iteratorNormalCompletion2 = J$.W(279393, '_iteratorNormalCompletion2', J$.G(279385, _step2 = J$.W(279377, '_step2', J$.M(279369, J$.R(279361, '_iterator2', _iterator2, false, false), 'next', false)(), _step2, false, false), 'done'), _iteratorNormalCompletion2, false, false))); _iteratorNormalCompletion2 = J$.W(279409, '_iteratorNormalCompletion2', J$.T(279401, true, 23, false), _iteratorNormalCompletion2, false, false)) {
                                                            var server = J$.W(279433, 'server', J$.G(279425, J$.R(279417, '_step2', _step2, false, false), 'value'), server, false, false);
                                                            if (J$.C(15992, J$.M(279473, J$.R(279441, 'newAddresses', newAddresses, false, false), 'has', false)(J$.G(279465, J$.R(279449, 'server', server, false, false), J$.T(279457, 0, 22, false))))) {
                                                                J$.M(279521, J$.R(279481, 'newAddresses', newAddresses, false, false), J$.T(279489, 'delete', 21, false), false)(J$.G(279513, J$.R(279497, 'server', server, false, false), J$.T(279505, 0, 22, false)));
                                                            } else {
                                                                J$.M(279569, J$.R(279529, 'serverDescriptions', serverDescriptions, false, false), J$.T(279537, 'delete', 21, false), false)(J$.G(279561, J$.R(279545, 'server', server, false, false), J$.T(279553, 0, 22, false)));
                                                            }
                                                        }
                                                    } catch (err) {
                                                        J$.N(279609, 'err', err, false, false, true);
                                                        _didIteratorError2 = J$.W(279585, '_didIteratorError2', J$.T(279577, true, 23, false), _didIteratorError2, false, false);
                                                        _iteratorError2 = J$.W(279601, '_iteratorError2', J$.R(279593, 'err', err, false, false), _iteratorError2, false, false);
                                                    } finally {
                                                        try {
                                                            if (J$.C(16016, J$.C(16008, J$.U(17250, '!', J$.R(279617, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, false, false))) ? J$.B(17258, '!=', J$.G(279641, J$.R(279625, '_iterator2', _iterator2, false, false), J$.T(279633, 'return', 21, false)), J$.T(279649, null, 25, false)) : J$._())) {
                                                                J$.M(279673, J$.R(279657, '_iterator2', _iterator2, false, false), J$.T(279665, 'return', 21, false), false)();
                                                            }
                                                        } finally {
                                                            if (J$.C(16024, J$.R(279681, '_didIteratorError2', _didIteratorError2, false, false))) {
                                                                throw J$.R(279689, '_iteratorError2', _iteratorError2, false, false);
                                                            }
                                                        }
                                                    }
                                                    if (J$.C(16040, J$.C(16032, J$.B(17266, '===', J$.G(279705, J$.R(279697, 'serverDescriptions', serverDescriptions, false, false), 'size'), J$.G(279729, J$.G(279721, J$.R(279713, 'this', this, false, false), 'servers'), 'size'))) ? J$.B(17274, '===', J$.G(279745, J$.R(279737, 'newAddresses', newAddresses, false, false), 'size'), J$.T(279753, 0, 22, false)) : J$._())) {
                                                        return J$.Rt(279769, J$.R(279761, 'this', this, false, false));
                                                    }
                                                    var _iteratorNormalCompletion3 = J$.W(279785, '_iteratorNormalCompletion3', J$.T(279777, true, 23, false), _iteratorNormalCompletion3, false, false);
                                                    var _didIteratorError3 = J$.W(279801, '_didIteratorError3', J$.T(279793, false, 23, false), _didIteratorError3, false, false);
                                                    var _iteratorError3 = J$.W(279817, '_iteratorError3', J$.T(279809, undefined, 24, false), _iteratorError3, false, false);
                                                    try {
                                                        for (var _iterator3 = J$.W(279857, '_iterator3', J$.M(279849, J$.R(279825, 'newAddresses', newAddresses, false, false), J$.G(279841, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(279833, 'Symbol', undefined, true, true) : Symbol = J$.R(279833, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator3, false, false), _step3; J$.C(16048, J$.U(17282, '!', _iteratorNormalCompletion3 = J$.W(279897, '_iteratorNormalCompletion3', J$.G(279889, _step3 = J$.W(279881, '_step3', J$.M(279873, J$.R(279865, '_iterator3', _iterator3, false, false), 'next', false)(), _step3, false, false), 'done'), _iteratorNormalCompletion3, false, false))); _iteratorNormalCompletion3 = J$.W(279913, '_iteratorNormalCompletion3', J$.T(279905, true, 23, false), _iteratorNormalCompletion3, false, false)) {
                                                            var address = J$.W(279937, 'address', J$.G(279929, J$.R(279921, '_step3', _step3, false, false), 'value'), address, false, false);
                                                            J$.M(279985, J$.R(279945, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(279953, 'address', address, false, false), J$.F(279977, J$.R(279961, 'ServerDescription', ServerDescription, false, true), true)(J$.R(279969, 'address', address, false, false)));
                                                        }
                                                    } catch (err) {
                                                        J$.N(280025, 'err', err, false, false, true);
                                                        _didIteratorError3 = J$.W(280001, '_didIteratorError3', J$.T(279993, true, 23, false), _didIteratorError3, false, false);
                                                        _iteratorError3 = J$.W(280017, '_iteratorError3', J$.R(280009, 'err', err, false, false), _iteratorError3, false, false);
                                                    } finally {
                                                        try {
                                                            if (J$.C(16064, J$.C(16056, J$.U(17290, '!', J$.R(280033, '_iteratorNormalCompletion3', _iteratorNormalCompletion3, false, false))) ? J$.B(17298, '!=', J$.G(280057, J$.R(280041, '_iterator3', _iterator3, false, false), J$.T(280049, 'return', 21, false)), J$.T(280065, null, 25, false)) : J$._())) {
                                                                J$.M(280089, J$.R(280073, '_iterator3', _iterator3, false, false), J$.T(280081, 'return', 21, false), false)();
                                                            }
                                                        } finally {
                                                            if (J$.C(16072, J$.R(280097, '_didIteratorError3', _didIteratorError3, false, false))) {
                                                                throw J$.R(280105, '_iteratorError3', _iteratorError3, false, false);
                                                            }
                                                        }
                                                    }
                                                    return J$.Rt(280241, J$.F(280233, J$.R(280113, 'TopologyDescription', TopologyDescription, false, false), true)(J$.G(280129, J$.R(280121, 'this', this, false, false), 'type'), J$.R(280137, 'serverDescriptions', serverDescriptions, false, false), J$.G(280153, J$.R(280145, 'this', this, false, false), 'setName'), J$.G(280169, J$.R(280161, 'this', this, false, false), 'maxSetVersion'), J$.G(280185, J$.R(280177, 'this', this, false, false), 'maxElectionId'), J$.G(280201, J$.R(280193, 'this', this, false, false), 'commonWireVersion'), J$.G(280217, J$.R(280209, 'this', this, false, false), 'options'), J$.T(280225, null, 25, false)));
                                                } catch (J$e) {
                                                    J$.Ex(286185, J$e);
                                                } finally {
                                                    if (J$.Fr(286193))
                                                        continue jalangiLabel6;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(282441, {
                                    key: J$.T(280401, 'update', 21, false),
                                    value: J$.T(282433, function update(serverDescription) {
                                        jalangiLabel7:
                                            while (true) {
                                                try {
                                                    J$.Fe(282313, arguments.callee, this, arguments);
                                                    arguments = J$.N(282321, 'arguments', arguments, true, false, false);
                                                    serverDescription = J$.N(282329, 'serverDescription', serverDescription, true, false, false);
                                                    J$.N(282337, 'address', address, false, false, false);
                                                    J$.N(282345, 'topologyType', topologyType, false, false, false);
                                                    J$.N(282353, 'setName', setName, false, false, false);
                                                    J$.N(282361, 'maxSetVersion', maxSetVersion, false, false, false);
                                                    J$.N(282369, 'maxElectionId', maxElectionId, false, false, false);
                                                    J$.N(282377, 'commonWireVersion', commonWireVersion, false, false, false);
                                                    J$.N(282385, 'error', error, false, false, false);
                                                    J$.N(282393, 'serverType', serverType, false, false, false);
                                                    J$.N(282401, 'serverDescriptions', serverDescriptions, false, false, false);
                                                    J$.N(282409, 'result', result, false, false, false);
                                                    J$.N(282417, '_result', _result, false, false, false);
                                                    J$.N(282425, '_result2', _result2, false, false, false);
                                                    var address = J$.W(280425, 'address', J$.G(280417, J$.R(280409, 'serverDescription', serverDescription, false, false), 'address'), address, false, false);
                                                    var topologyType = J$.W(280449, 'topologyType', J$.G(280441, J$.R(280433, 'this', this, false, false), 'type'), topologyType, false, false);
                                                    var setName = J$.W(280473, 'setName', J$.G(280465, J$.R(280457, 'this', this, false, false), 'setName'), setName, false, false);
                                                    var maxSetVersion = J$.W(280497, 'maxSetVersion', J$.G(280489, J$.R(280481, 'this', this, false, false), 'maxSetVersion'), maxSetVersion, false, false);
                                                    var maxElectionId = J$.W(280521, 'maxElectionId', J$.G(280513, J$.R(280505, 'this', this, false, false), 'maxElectionId'), maxElectionId, false, false);
                                                    var commonWireVersion = J$.W(280545, 'commonWireVersion', J$.G(280537, J$.R(280529, 'this', this, false, false), 'commonWireVersion'), commonWireVersion, false, false);
                                                    var error = J$.W(280585, 'error', J$.C(16080, J$.G(280561, J$.R(280553, 'serverDescription', serverDescription, false, false), 'error')) ? J$._() : J$.G(280577, J$.R(280569, 'this', this, false, false), 'error'), error, false, false);
                                                    var serverType = J$.W(280609, 'serverType', J$.G(280601, J$.R(280593, 'serverDescription', serverDescription, false, false), 'type'), serverType, false, false);
                                                    var serverDescriptions = J$.W(280649, 'serverDescriptions', J$.F(280641, J$.I(typeof Map === 'undefined' ? Map = J$.R(280617, 'Map', undefined, true, true) : Map = J$.R(280617, 'Map', Map, true, true)), true)(J$.G(280633, J$.R(280625, 'this', this, false, false), 'servers')), serverDescriptions, false, false);
                                                    if (J$.C(16096, J$.B(17306, '!==', J$.G(280665, J$.R(280657, 'serverDescription', serverDescription, false, false), 'maxWireVersion'), J$.T(280673, 0, 22, false)))) {
                                                        if (J$.C(16088, J$.B(17314, '==', J$.R(280681, 'commonWireVersion', commonWireVersion, false, false), J$.T(280689, null, 25, false)))) {
                                                            commonWireVersion = J$.W(280713, 'commonWireVersion', J$.G(280705, J$.R(280697, 'serverDescription', serverDescription, false, false), 'maxWireVersion'), commonWireVersion, false, false);
                                                        } else {
                                                            commonWireVersion = J$.W(280761, 'commonWireVersion', J$.M(280753, J$.I(typeof Math === 'undefined' ? Math = J$.R(280721, 'Math', undefined, true, true) : Math = J$.R(280721, 'Math', Math, true, true)), 'min', false)(J$.R(280729, 'commonWireVersion', commonWireVersion, false, false), J$.G(280745, J$.R(280737, 'serverDescription', serverDescription, false, false), 'maxWireVersion')), commonWireVersion, false, false);
                                                        }
                                                    }
                                                    J$.M(280793, J$.R(280769, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(280777, 'address', address, false, false), J$.R(280785, 'serverDescription', serverDescription, false, false));
                                                    if (J$.C(16104, J$.B(17322, '===', J$.R(280801, 'topologyType', topologyType, false, false), J$.G(280817, J$.R(280809, 'TopologyType', TopologyType, false, true), 'Single')))) {
                                                        return J$.Rt(280921, J$.F(280913, J$.R(280825, 'TopologyDescription', TopologyDescription, false, false), true)(J$.G(280841, J$.R(280833, 'TopologyType', TopologyType, false, true), 'Single'), J$.R(280849, 'serverDescriptions', serverDescriptions, false, false), J$.R(280857, 'setName', setName, false, false), J$.R(280865, 'maxSetVersion', maxSetVersion, false, false), J$.R(280873, 'maxElectionId', maxElectionId, false, false), J$.R(280881, 'commonWireVersion', commonWireVersion, false, false), J$.G(280897, J$.R(280889, 'this', this, false, false), 'options'), J$.R(280905, 'error', error, false, false)));
                                                    }
                                                    if (J$.C(16120, J$.B(17330, '===', J$.R(280929, 'topologyType', topologyType, false, false), J$.G(280945, J$.R(280937, 'TopologyType', TopologyType, false, true), 'Unknown')))) {
                                                        if (J$.C(16112, J$.B(17338, '===', J$.R(280953, 'serverType', serverType, false, false), J$.G(280969, J$.R(280961, 'ServerType', ServerType, false, true), 'Standalone')))) {
                                                            J$.M(281001, J$.R(280977, 'serverDescriptions', serverDescriptions, false, false), J$.T(280985, 'delete', 21, false), false)(J$.R(280993, 'address', address, false, false));
                                                        } else {
                                                            topologyType = J$.W(281033, 'topologyType', J$.F(281025, J$.R(281009, 'topologyTypeForServerType', topologyTypeForServerType, false, true), false)(J$.R(281017, 'serverType', serverType, false, false)), topologyType, false, false);
                                                        }
                                                    }
                                                    if (J$.C(16136, J$.B(17346, '===', J$.R(281041, 'topologyType', topologyType, false, false), J$.G(281057, J$.R(281049, 'TopologyType', TopologyType, false, true), 'Sharded')))) {
                                                        if (J$.C(16128, J$.B(17362, '===', J$.M(281113, J$.T(281097, [
                                                                J$.G(281073, J$.R(281065, 'ServerType', ServerType, false, true), 'Mongos'),
                                                                J$.G(281089, J$.R(281081, 'ServerType', ServerType, false, true), 'Unknown')
                                                            ], 10, false), 'indexOf', false)(J$.R(281105, 'serverType', serverType, false, false)), J$.U(17354, '-', J$.T(281121, 1, 22, false))))) {
                                                            J$.M(281153, J$.R(281129, 'serverDescriptions', serverDescriptions, false, false), J$.T(281137, 'delete', 21, false), false)(J$.R(281145, 'address', address, false, false));
                                                        }
                                                    }
                                                    if (J$.C(16168, J$.B(17370, '===', J$.R(281161, 'topologyType', topologyType, false, false), J$.G(281177, J$.R(281169, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary')))) {
                                                        if (J$.C(16144, J$.B(17378, '>=', J$.M(281233, J$.T(281217, [
                                                                J$.G(281193, J$.R(281185, 'ServerType', ServerType, false, true), 'Mongos'),
                                                                J$.G(281209, J$.R(281201, 'ServerType', ServerType, false, true), 'Unknown')
                                                            ], 10, false), 'indexOf', false)(J$.R(281225, 'serverType', serverType, false, false)), J$.T(281241, 0, 22, false)))) {
                                                            J$.M(281273, J$.R(281249, 'serverDescriptions', serverDescriptions, false, false), J$.T(281257, 'delete', 21, false), false)(J$.R(281265, 'address', address, false, false));
                                                        }
                                                        if (J$.C(16160, J$.B(17386, '===', J$.R(281281, 'serverType', serverType, false, false), J$.G(281297, J$.R(281289, 'ServerType', ServerType, false, true), 'RSPrimary')))) {
                                                            var result = J$.W(281361, 'result', J$.F(281353, J$.R(281305, 'updateRsFromPrimary', updateRsFromPrimary, false, true), false)(J$.R(281313, 'serverDescriptions', serverDescriptions, false, false), J$.R(281321, 'setName', setName, false, false), J$.R(281329, 'serverDescription', serverDescription, false, false), J$.R(281337, 'maxSetVersion', maxSetVersion, false, false), J$.R(281345, 'maxElectionId', maxElectionId, false, false)), result, false, false);
                                                            topologyType = J$.W(281393, 'topologyType', J$.G(281385, J$.R(281369, 'result', result, false, false), J$.T(281377, 0, 22, false)), topologyType, false, false), setName = J$.W(281425, 'setName', J$.G(281417, J$.R(281401, 'result', result, false, false), J$.T(281409, 1, 22, false)), setName, false, false), maxSetVersion = J$.W(281457, 'maxSetVersion', J$.G(281449, J$.R(281433, 'result', result, false, false), J$.T(281441, 2, 22, false)), maxSetVersion, false, false), maxElectionId = J$.W(281489, 'maxElectionId', J$.G(281481, J$.R(281465, 'result', result, false, false), J$.T(281473, 3, 22, false)), maxElectionId, false, false);
                                                        } else if (J$.C(16152, J$.B(17394, '>=', J$.M(281561, J$.T(281545, [
                                                                J$.G(281505, J$.R(281497, 'ServerType', ServerType, false, true), 'RSSecondary'),
                                                                J$.G(281521, J$.R(281513, 'ServerType', ServerType, false, true), 'RSArbiter'),
                                                                J$.G(281537, J$.R(281529, 'ServerType', ServerType, false, true), 'RSOther')
                                                            ], 10, false), 'indexOf', false)(J$.R(281553, 'serverType', serverType, false, false)), J$.T(281569, 0, 22, false)))) {
                                                            var _result = J$.W(281617, '_result', J$.F(281609, J$.R(281577, 'updateRsNoPrimaryFromMember', updateRsNoPrimaryFromMember, false, true), false)(J$.R(281585, 'serverDescriptions', serverDescriptions, false, false), J$.R(281593, 'setName', setName, false, false), J$.R(281601, 'serverDescription', serverDescription, false, false)), _result, false, false);
                                                            topologyType = J$.W(281649, 'topologyType', J$.G(281641, J$.R(281625, '_result', _result, false, false), J$.T(281633, 0, 22, false)), topologyType, false, false), setName = J$.W(281681, 'setName', J$.G(281673, J$.R(281657, '_result', _result, false, false), J$.T(281665, 1, 22, false)), setName, false, false);
                                                        }
                                                    }
                                                    if (J$.C(16200, J$.B(17402, '===', J$.R(281689, 'topologyType', topologyType, false, false), J$.G(281705, J$.R(281697, 'TopologyType', TopologyType, false, true), 'ReplicaSetWithPrimary')))) {
                                                        if (J$.C(16192, J$.B(17410, '>=', J$.M(281761, J$.T(281745, [
                                                                J$.G(281721, J$.R(281713, 'ServerType', ServerType, false, true), 'Standalone'),
                                                                J$.G(281737, J$.R(281729, 'ServerType', ServerType, false, true), 'Mongos')
                                                            ], 10, false), 'indexOf', false)(J$.R(281753, 'serverType', serverType, false, false)), J$.T(281769, 0, 22, false)))) {
                                                            J$.M(281801, J$.R(281777, 'serverDescriptions', serverDescriptions, false, false), J$.T(281785, 'delete', 21, false), false)(J$.R(281793, 'address', address, false, false));
                                                            topologyType = J$.W(281833, 'topologyType', J$.F(281825, J$.R(281809, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(281817, 'serverDescriptions', serverDescriptions, false, false)), topologyType, false, false);
                                                        } else if (J$.C(16184, J$.B(17418, '===', J$.R(281841, 'serverType', serverType, false, false), J$.G(281857, J$.R(281849, 'ServerType', ServerType, false, true), 'RSPrimary')))) {
                                                            var _result2 = J$.W(281921, '_result2', J$.F(281913, J$.R(281865, 'updateRsFromPrimary', updateRsFromPrimary, false, true), false)(J$.R(281873, 'serverDescriptions', serverDescriptions, false, false), J$.R(281881, 'setName', setName, false, false), J$.R(281889, 'serverDescription', serverDescription, false, false), J$.R(281897, 'maxSetVersion', maxSetVersion, false, false), J$.R(281905, 'maxElectionId', maxElectionId, false, false)), _result2, false, false);
                                                            topologyType = J$.W(281953, 'topologyType', J$.G(281945, J$.R(281929, '_result2', _result2, false, false), J$.T(281937, 0, 22, false)), topologyType, false, false), setName = J$.W(281985, 'setName', J$.G(281977, J$.R(281961, '_result2', _result2, false, false), J$.T(281969, 1, 22, false)), setName, false, false), maxSetVersion = J$.W(282017, 'maxSetVersion', J$.G(282009, J$.R(281993, '_result2', _result2, false, false), J$.T(282001, 2, 22, false)), maxSetVersion, false, false), maxElectionId = J$.W(282049, 'maxElectionId', J$.G(282041, J$.R(282025, '_result2', _result2, false, false), J$.T(282033, 3, 22, false)), maxElectionId, false, false);
                                                        } else if (J$.C(16176, J$.B(17426, '>=', J$.M(282121, J$.T(282105, [
                                                                J$.G(282065, J$.R(282057, 'ServerType', ServerType, false, true), 'RSSecondary'),
                                                                J$.G(282081, J$.R(282073, 'ServerType', ServerType, false, true), 'RSArbiter'),
                                                                J$.G(282097, J$.R(282089, 'ServerType', ServerType, false, true), 'RSOther')
                                                            ], 10, false), 'indexOf', false)(J$.R(282113, 'serverType', serverType, false, false)), J$.T(282129, 0, 22, false)))) {
                                                            topologyType = J$.W(282177, 'topologyType', J$.F(282169, J$.R(282137, 'updateRsWithPrimaryFromMember', updateRsWithPrimaryFromMember, false, true), false)(J$.R(282145, 'serverDescriptions', serverDescriptions, false, false), J$.R(282153, 'setName', setName, false, false), J$.R(282161, 'serverDescription', serverDescription, false, false)), topologyType, false, false);
                                                        } else {
                                                            topologyType = J$.W(282209, 'topologyType', J$.F(282201, J$.R(282185, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(282193, 'serverDescriptions', serverDescriptions, false, false)), topologyType, false, false);
                                                        }
                                                    }
                                                    return J$.Rt(282305, J$.F(282297, J$.R(282217, 'TopologyDescription', TopologyDescription, false, false), true)(J$.R(282225, 'topologyType', topologyType, false, false), J$.R(282233, 'serverDescriptions', serverDescriptions, false, false), J$.R(282241, 'setName', setName, false, false), J$.R(282249, 'maxSetVersion', maxSetVersion, false, false), J$.R(282257, 'maxElectionId', maxElectionId, false, false), J$.R(282265, 'commonWireVersion', commonWireVersion, false, false), J$.G(282281, J$.R(282273, 'this', this, false, false), 'options'), J$.R(282289, 'error', error, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(286201, J$e);
                                                } finally {
                                                    if (J$.Fr(286209))
                                                        continue jalangiLabel7;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(282529, {
                                    key: J$.T(282449, 'hasServer', 21, false),
                                    value: J$.T(282521, function hasServer(address) {
                                        jalangiLabel8:
                                            while (true) {
                                                try {
                                                    J$.Fe(282497, arguments.callee, this, arguments);
                                                    arguments = J$.N(282505, 'arguments', arguments, true, false, false);
                                                    address = J$.N(282513, 'address', address, true, false, false);
                                                    return J$.Rt(282489, J$.M(282481, J$.G(282465, J$.R(282457, 'this', this, false, false), 'servers'), 'has', false)(J$.R(282473, 'address', address, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(286217, J$e);
                                                } finally {
                                                    if (J$.Fr(286225))
                                                        continue jalangiLabel8;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(282697, {
                                    key: J$.T(282537, 'hasKnownServers', 21, false),
                                    get: J$.T(282689, function get() {
                                        jalangiLabel10:
                                            while (true) {
                                                try {
                                                    J$.Fe(282673, arguments.callee, this, arguments);
                                                    arguments = J$.N(282681, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(282665, J$.M(282657, J$.M(282577, J$.I(typeof Array === 'undefined' ? Array = J$.R(282545, 'Array', undefined, true, true) : Array = J$.R(282545, 'Array', Array, true, true)), 'from', false)(J$.M(282569, J$.G(282561, J$.R(282553, 'this', this, false, false), 'servers'), 'values', false)()), 'some', false)(J$.T(282649, function (sd) {
                                                        jalangiLabel9:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(282625, arguments.callee, this, arguments);
                                                                    arguments = J$.N(282633, 'arguments', arguments, true, false, false);
                                                                    sd = J$.N(282641, 'sd', sd, true, false, false);
                                                                    return J$.Rt(282617, J$.B(17434, '!==', J$.G(282593, J$.R(282585, 'sd', sd, false, false), 'type'), J$.G(282609, J$.R(282601, 'ServerDescription', ServerDescription, false, true), 'Unknown')));
                                                                } catch (J$e) {
                                                                    J$.Ex(286233, J$e);
                                                                } finally {
                                                                    if (J$.Fr(286241))
                                                                        continue jalangiLabel9;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false)));
                                                } catch (J$e) {
                                                    J$.Ex(286249, J$e);
                                                } finally {
                                                    if (J$.Fr(286257))
                                                        continue jalangiLabel10;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(282849, {
                                    key: J$.T(282705, 'hasDataBearingServers', 21, false),
                                    get: J$.T(282841, function get() {
                                        jalangiLabel12:
                                            while (true) {
                                                try {
                                                    J$.Fe(282825, arguments.callee, this, arguments);
                                                    arguments = J$.N(282833, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(282817, J$.M(282809, J$.M(282745, J$.I(typeof Array === 'undefined' ? Array = J$.R(282713, 'Array', undefined, true, true) : Array = J$.R(282713, 'Array', Array, true, true)), 'from', false)(J$.M(282737, J$.G(282729, J$.R(282721, 'this', this, false, false), 'servers'), 'values', false)()), 'some', false)(J$.T(282801, function (sd) {
                                                        jalangiLabel11:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(282777, arguments.callee, this, arguments);
                                                                    arguments = J$.N(282785, 'arguments', arguments, true, false, false);
                                                                    sd = J$.N(282793, 'sd', sd, true, false, false);
                                                                    return J$.Rt(282769, J$.G(282761, J$.R(282753, 'sd', sd, false, false), 'isDataBearing'));
                                                                } catch (J$e) {
                                                                    J$.Ex(286265, J$e);
                                                                } finally {
                                                                    if (J$.Fr(286273))
                                                                        continue jalangiLabel11;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false)));
                                                } catch (J$e) {
                                                    J$.Ex(286281, J$e);
                                                } finally {
                                                    if (J$.Fr(286289))
                                                        continue jalangiLabel12;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(282881, J$.R(282873, 'TopologyDescription', TopologyDescription, false, false));
                        } catch (J$e) {
                            J$.Ex(286297, J$e);
                        } finally {
                            if (J$.Fr(286305))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), TopologyDescription, false, true);
            J$.P(285873, J$.I(typeof module === 'undefined' ? module = J$.R(285841, 'module', undefined, true, true) : module = J$.R(285841, 'module', module, true, true)), 'exports', J$.T(285865, {
                TopologyType: J$.R(285849, 'TopologyType', TopologyType, false, true),
                TopologyDescription: J$.R(285857, 'TopologyDescription', TopologyDescription, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(286457, J$e);
        } finally {
            if (J$.Sr(286465))
                continue jalangiLabel23;
            else
                break jalangiLabel23;
        }
    }
// JALANGI DO NOT INSTRUMENT

