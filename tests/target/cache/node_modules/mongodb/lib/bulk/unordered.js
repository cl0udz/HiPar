J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(51705, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/bulk/unordered.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(48601, arguments.callee, this, arguments);
                            arguments = J$.N(48609, 'arguments', arguments, true, false, false);
                            obj = J$.N(48617, 'obj', obj, true, false, false);
                            if (J$.C(2272, J$.C(2232, J$.B(2122, '===', J$.U(2114, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(48337, 'Symbol', undefined, true, true) : Symbol = J$.R(48337, 'Symbol', Symbol, true, true))), J$.T(48345, 'function', 21, false))) ? J$.B(2138, '===', J$.U(2130, 'typeof', J$.G(48361, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(48353, 'Symbol', undefined, true, true) : Symbol = J$.R(48353, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(48369, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(48425, '_typeof', J$.T(48417, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(48393, arguments.callee, this, arguments);
                                                arguments = J$.N(48401, 'arguments', arguments, true, false, false);
                                                obj = J$.N(48409, 'obj', obj, true, false, false);
                                                return J$.Rt(48385, J$.U(2146, 'typeof', J$.R(48377, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(51913, J$e);
                                            } finally {
                                                if (J$.Fr(51921))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(48561, '_typeof', J$.T(48553, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(48529, arguments.callee, this, arguments);
                                                arguments = J$.N(48537, 'arguments', arguments, true, false, false);
                                                obj = J$.N(48545, 'obj', obj, true, false, false);
                                                return J$.Rt(48521, J$.C(2264, J$.C(2256, J$.C(2248, J$.C(2240, J$.R(48433, 'obj', obj, false, false)) ? J$.B(2162, '===', J$.U(2154, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(48441, 'Symbol', undefined, true, true) : Symbol = J$.R(48441, 'Symbol', Symbol, true, true))), J$.T(48449, 'function', 21, false)) : J$._()) ? J$.B(2170, '===', J$.G(48465, J$.R(48457, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(48473, 'Symbol', undefined, true, true) : Symbol = J$.R(48473, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(2178, '!==', J$.R(48481, 'obj', obj, false, false), J$.G(48497, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(48489, 'Symbol', undefined, true, true) : Symbol = J$.R(48489, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(48505, 'symbol', 21, false) : J$.U(2186, 'typeof', J$.R(48513, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(51929, J$e);
                                            } finally {
                                                if (J$.Fr(51937))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(48593, J$.F(48585, J$.R(48569, '_typeof', _typeof, false, true), false)(J$.R(48577, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(51945, J$e);
                        } finally {
                            if (J$.Fr(51953))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _classCallCheck(instance, Constructor) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(48665, arguments.callee, this, arguments);
                            arguments = J$.N(48673, 'arguments', arguments, true, false, false);
                            instance = J$.N(48681, 'instance', instance, true, false, false);
                            Constructor = J$.N(48689, 'Constructor', Constructor, true, false, false);
                            if (J$.C(2280, J$.U(2202, '!', J$.B(2194, 'instanceof', J$.R(48625, 'instance', instance, false, false), J$.R(48633, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(48657, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(48641, 'TypeError', undefined, true, true) : TypeError = J$.R(48641, 'TypeError', TypeError, true, true)), true)(J$.T(48649, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(51961, J$e);
                        } finally {
                            if (J$.Fr(51969))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _possibleConstructorReturn(self, call) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(48801, arguments.callee, this, arguments);
                            arguments = J$.N(48809, 'arguments', arguments, true, false, false);
                            self = J$.N(48817, 'self', self, true, false, false);
                            call = J$.N(48825, 'call', call, true, false, false);
                            if (J$.C(2304, J$.C(2296, J$.R(48697, 'call', call, false, false)) ? J$.C(2288, J$.B(2210, '===', J$.F(48721, J$.R(48705, '_typeof', _typeof, false, true), false)(J$.R(48713, 'call', call, false, false)), J$.T(48729, 'object', 21, false))) ? J$._() : J$.B(2226, '===', J$.U(2218, 'typeof', J$.R(48737, 'call', call, false, false)), J$.T(48745, 'function', 21, false)) : J$._())) {
                                return J$.Rt(48761, J$.R(48753, 'call', call, false, false));
                            }
                            return J$.Rt(48793, J$.F(48785, J$.R(48769, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(48777, 'self', self, false, false)));
                        } catch (J$e) {
                            J$.Ex(51977, J$e);
                        } finally {
                            if (J$.Fr(51985))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _assertThisInitialized(self) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(48889, arguments.callee, this, arguments);
                            arguments = J$.N(48897, 'arguments', arguments, true, false, false);
                            self = J$.N(48905, 'self', self, true, false, false);
                            if (J$.C(2312, J$.B(2234, '===', J$.R(48833, 'self', self, false, false), void J$.T(48841, 0, 22, false)))) {
                                throw J$.F(48865, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(48849, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(48849, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(48857, 'this hasn\'t been initialised - super() hasn\'t been called', 21, false));
                            }
                            return J$.Rt(48881, J$.R(48873, 'self', self, false, false));
                        } catch (J$e) {
                            J$.Ex(51993, J$e);
                        } finally {
                            if (J$.Fr(52001))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _getPrototypeOf(o) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(49065, arguments.callee, this, arguments);
                            arguments = J$.N(49073, 'arguments', arguments, true, false, false);
                            o = J$.N(49081, 'o', o, true, false, false);
                            _getPrototypeOf = J$.W(49025, '_getPrototypeOf', J$.C(2328, J$.G(48921, J$.I(typeof Object === 'undefined' ? Object = J$.R(48913, 'Object', undefined, true, true) : Object = J$.R(48913, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$.G(48937, J$.I(typeof Object === 'undefined' ? Object = J$.R(48929, 'Object', undefined, true, true) : Object = J$.R(48929, 'Object', Object, true, true)), 'getPrototypeOf') : J$.T(49017, function _getPrototypeOf(o) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(48993, arguments.callee, this, arguments);
                                            arguments = J$.N(49001, 'arguments', arguments, true, false, false);
                                            o = J$.N(49009, 'o', o, true, false, false);
                                            return J$.Rt(48985, J$.C(2320, J$.G(48953, J$.R(48945, 'o', o, false, false), '__proto__')) ? J$._() : J$.M(48977, J$.I(typeof Object === 'undefined' ? Object = J$.R(48961, 'Object', undefined, true, true) : Object = J$.R(48961, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(48969, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(52009, J$e);
                                        } finally {
                                            if (J$.Fr(52017))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _getPrototypeOf, false, true);
                            return J$.Rt(49057, J$.F(49049, J$.R(49033, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(49041, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(52025, J$e);
                        } finally {
                            if (J$.Fr(52033))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _inherits(subClass, superClass) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(49281, arguments.callee, this, arguments);
                            arguments = J$.N(49289, 'arguments', arguments, true, false, false);
                            subClass = J$.N(49297, 'subClass', subClass, true, false, false);
                            superClass = J$.N(49305, 'superClass', superClass, true, false, false);
                            if (J$.C(2344, J$.C(2336, J$.B(2250, '!==', J$.U(2242, 'typeof', J$.R(49089, 'superClass', superClass, false, false)), J$.T(49097, 'function', 21, false))) ? J$.B(2258, '!==', J$.R(49105, 'superClass', superClass, false, false), J$.T(49113, null, 25, false)) : J$._())) {
                                throw J$.F(49137, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(49121, 'TypeError', undefined, true, true) : TypeError = J$.R(49121, 'TypeError', TypeError, true, true)), true)(J$.T(49129, 'Super expression must either be null or a function', 21, false));
                            }
                            J$.P(49233, J$.R(49145, 'subClass', subClass, false, false), 'prototype', J$.M(49225, J$.I(typeof Object === 'undefined' ? Object = J$.R(49153, 'Object', undefined, true, true) : Object = J$.R(49153, 'Object', Object, true, true)), 'create', false)(J$.C(2352, J$.R(49161, 'superClass', superClass, false, false)) ? J$.G(49177, J$.R(49169, 'superClass', superClass, false, false), 'prototype') : J$._(), J$.T(49217, {
                                constructor: J$.T(49209, {
                                    value: J$.R(49185, 'subClass', subClass, false, false),
                                    writable: J$.T(49193, true, 23, false),
                                    configurable: J$.T(49201, true, 23, false)
                                }, 11, false)
                            }, 11, false)));
                            if (J$.C(2360, J$.R(49241, 'superClass', superClass, false, false)))
                                J$.F(49273, J$.R(49249, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(49257, 'subClass', subClass, false, false), J$.R(49265, 'superClass', superClass, false, false));
                        } catch (J$e) {
                            J$.Ex(52041, J$e);
                        } finally {
                            if (J$.Fr(52049))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _setPrototypeOf(o, p) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(49457, arguments.callee, this, arguments);
                            arguments = J$.N(49465, 'arguments', arguments, true, false, false);
                            o = J$.N(49473, 'o', o, true, false, false);
                            p = J$.N(49481, 'p', p, true, false, false);
                            _setPrototypeOf = J$.W(49409, '_setPrototypeOf', J$.C(2368, J$.G(49321, J$.I(typeof Object === 'undefined' ? Object = J$.R(49313, 'Object', undefined, true, true) : Object = J$.R(49313, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$._() : J$.T(49401, function _setPrototypeOf(o, p) {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(49369, arguments.callee, this, arguments);
                                            arguments = J$.N(49377, 'arguments', arguments, true, false, false);
                                            o = J$.N(49385, 'o', o, true, false, false);
                                            p = J$.N(49393, 'p', p, true, false, false);
                                            J$.P(49345, J$.R(49329, 'o', o, false, false), '__proto__', J$.R(49337, 'p', p, false, false));
                                            return J$.Rt(49361, J$.R(49353, 'o', o, false, false));
                                        } catch (J$e) {
                                            J$.Ex(52057, J$e);
                                        } finally {
                                            if (J$.Fr(52065))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _setPrototypeOf, false, true);
                            return J$.Rt(49449, J$.F(49441, J$.R(49417, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(49425, 'o', o, false, false), J$.R(49433, 'p', p, false, false)));
                        } catch (J$e) {
                            J$.Ex(52073, J$e);
                        } finally {
                            if (J$.Fr(52081))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addToOperationsList(bulkOperation, docType, document) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(51113, arguments.callee, this, arguments);
                            arguments = J$.N(51121, 'arguments', arguments, true, false, false);
                            bulkOperation = J$.N(51129, 'bulkOperation', bulkOperation, true, false, false);
                            docType = J$.N(51137, 'docType', docType, true, false, false);
                            document = J$.N(51145, 'document', document, true, false, false);
                            J$.N(51153, 'bsonSize', bsonSize, false, false, false);
                            J$.N(51161, 'maxKeySize', maxKeySize, false, false, false);
                            var bsonSize = J$.W(49697, 'bsonSize', J$.M(49689, J$.R(49649, 'bson', bson, false, true), 'calculateObjectSize', false)(J$.R(49657, 'document', document, false, false), J$.T(49681, {
                                checkKeys: J$.T(49665, false, 23, false),
                                ignoreUndefined: J$.T(49673, false, 23, false)
                            }, 11, false)), bsonSize, false, false);
                            if (J$.C(2376, J$.B(2266, '>=', J$.R(49705, 'bsonSize', bsonSize, false, false), J$.G(49729, J$.G(49721, J$.R(49713, 'bulkOperation', bulkOperation, false, false), 's'), 'maxBatchSizeBytes'))))
                                throw J$.F(49777, J$.R(49737, 'toError', toError, false, true), false)(J$.B(2274, '+', J$.T(49745, 'document is larger than the maximum size ', 21, false), J$.G(49769, J$.G(49761, J$.R(49753, 'bulkOperation', bulkOperation, false, false), 's'), 'maxBatchSizeBytes')));
                            J$.P(49809, J$.G(49793, J$.R(49785, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch', J$.T(49801, null, 25, false));
                            if (J$.C(2400, J$.B(2282, '===', J$.R(49817, 'docType', docType, false, false), J$.G(49833, J$.R(49825, 'common', common, false, true), 'INSERT')))) {
                                J$.P(49881, J$.G(49849, J$.R(49841, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch', J$.G(49873, J$.G(49865, J$.R(49857, 'bulkOperation', bulkOperation, false, false), 's'), 'currentInsertBatch'));
                            } else if (J$.C(2392, J$.B(2290, '===', J$.R(49889, 'docType', docType, false, false), J$.G(49905, J$.R(49897, 'common', common, false, true), 'UPDATE')))) {
                                J$.P(49953, J$.G(49921, J$.R(49913, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch', J$.G(49945, J$.G(49937, J$.R(49929, 'bulkOperation', bulkOperation, false, false), 's'), 'currentUpdateBatch'));
                            } else if (J$.C(2384, J$.B(2298, '===', J$.R(49961, 'docType', docType, false, false), J$.G(49977, J$.R(49969, 'common', common, false, true), 'REMOVE')))) {
                                J$.P(50025, J$.G(49993, J$.R(49985, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch', J$.G(50017, J$.G(50009, J$.R(50001, 'bulkOperation', bulkOperation, false, false), 's'), 'currentRemoveBatch'));
                            }
                            var maxKeySize = J$.W(50057, 'maxKeySize', J$.G(50049, J$.G(50041, J$.R(50033, 'bulkOperation', bulkOperation, false, false), 's'), 'maxKeySize'), maxKeySize, false, false);
                            if (J$.C(2408, J$.B(2306, '==', J$.G(50081, J$.G(50073, J$.R(50065, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'), J$.T(50089, null, 25, false))))
                                J$.P(50161, J$.G(50105, J$.R(50097, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch', J$.F(50153, J$.R(50113, 'Batch', Batch, false, true), true)(J$.R(50121, 'docType', docType, false, false), J$.G(50145, J$.G(50137, J$.R(50129, 'bulkOperation', bulkOperation, false, false), 's'), 'currentIndex')));
                            if (J$.C(2432, J$.C(2424, J$.C(2416, J$.B(2322, '>=', J$.B(2314, '+', J$.G(50193, J$.G(50185, J$.G(50177, J$.R(50169, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'), 'size'), J$.T(50201, 1, 22, false)), J$.G(50225, J$.G(50217, J$.R(50209, 'bulkOperation', bulkOperation, false, false), 's'), 'maxWriteBatchSize'))) ? J$._() : J$.B(2346, '>=', J$.B(2338, '+', J$.B(2330, '+', J$.G(50257, J$.G(50249, J$.G(50241, J$.R(50233, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'), 'sizeBytes'), J$.R(50265, 'maxKeySize', maxKeySize, false, false)), J$.R(50273, 'bsonSize', bsonSize, false, false)), J$.G(50297, J$.G(50289, J$.R(50281, 'bulkOperation', bulkOperation, false, false), 's'), 'maxBatchSizeBytes'))) ? J$._() : J$.B(2354, '!==', J$.G(50329, J$.G(50321, J$.G(50313, J$.R(50305, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'), 'batchType'), J$.R(50337, 'docType', docType, false, false)))) {
                                J$.M(50393, J$.G(50361, J$.G(50353, J$.R(50345, 'bulkOperation', bulkOperation, false, false), 's'), 'batches'), 'push', false)(J$.G(50385, J$.G(50377, J$.R(50369, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'));
                                J$.P(50465, J$.G(50409, J$.R(50401, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch', J$.F(50457, J$.R(50417, 'Batch', Batch, false, true), true)(J$.R(50425, 'docType', docType, false, false), J$.G(50449, J$.G(50441, J$.R(50433, 'bulkOperation', bulkOperation, false, false), 's'), 'currentIndex')));
                            }
                            if (J$.C(2440, J$.M(50489, J$.I(typeof Array === 'undefined' ? Array = J$.R(50473, 'Array', undefined, true, true) : Array = J$.R(50473, 'Array', Array, true, true)), 'isArray', false)(J$.R(50481, 'document', document, false, false)))) {
                                throw J$.F(50513, J$.R(50497, 'toError', toError, false, true), false)(J$.T(50505, 'operation passed in cannot be an Array', 21, false));
                            }
                            J$.M(50561, J$.G(50545, J$.G(50537, J$.G(50529, J$.R(50521, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'), 'operations'), 'push', false)(J$.R(50553, 'document', document, false, false));
                            J$.M(50625, J$.G(50593, J$.G(50585, J$.G(50577, J$.R(50569, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'), 'originalIndexes'), 'push', false)(J$.G(50617, J$.G(50609, J$.R(50601, 'bulkOperation', bulkOperation, false, false), 's'), 'currentIndex'));
                            J$.P(50681, J$.G(50641, J$.R(50633, 'bulkOperation', bulkOperation, false, false), 's'), 'currentIndex', J$.B(2362, '+', J$.G(50665, J$.G(50657, J$.R(50649, 'bulkOperation', bulkOperation, false, false), 's'), 'currentIndex'), J$.T(50673, 1, 22, false)));
                            if (J$.C(2464, J$.B(2370, '===', J$.R(50689, 'docType', docType, false, false), J$.G(50705, J$.R(50697, 'common', common, false, true), 'INSERT')))) {
                                J$.P(50753, J$.G(50721, J$.R(50713, 'bulkOperation', bulkOperation, false, false), 's'), 'currentInsertBatch', J$.G(50745, J$.G(50737, J$.R(50729, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'));
                                J$.M(50857, J$.G(50785, J$.G(50777, J$.G(50769, J$.R(50761, 'bulkOperation', bulkOperation, false, false), 's'), 'bulkResult'), 'insertedIds'), 'push', false)(J$.T(50849, {
                                    index: J$.G(50825, J$.G(50817, J$.G(50809, J$.G(50801, J$.R(50793, 'bulkOperation', bulkOperation, false, false), 's'), 'bulkResult'), 'insertedIds'), 'length'),
                                    _id: J$.G(50841, J$.R(50833, 'document', document, false, false), '_id')
                                }, 11, false));
                            } else if (J$.C(2456, J$.B(2378, '===', J$.R(50865, 'docType', docType, false, false), J$.G(50881, J$.R(50873, 'common', common, false, true), 'UPDATE')))) {
                                J$.P(50929, J$.G(50897, J$.R(50889, 'bulkOperation', bulkOperation, false, false), 's'), 'currentUpdateBatch', J$.G(50921, J$.G(50913, J$.R(50905, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'));
                            } else if (J$.C(2448, J$.B(2386, '===', J$.R(50937, 'docType', docType, false, false), J$.G(50953, J$.R(50945, 'common', common, false, true), 'REMOVE')))) {
                                J$.P(51001, J$.G(50969, J$.R(50961, 'bulkOperation', bulkOperation, false, false), 's'), 'currentRemoveBatch', J$.G(50993, J$.G(50985, J$.R(50977, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'));
                            }
                            J$.A(51041, J$.G(51025, J$.G(51017, J$.R(51009, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'), 'size', '+')(J$.T(51033, 1, 22, false));
                            J$.A(51089, J$.G(51065, J$.G(51057, J$.R(51049, 'bulkOperation', bulkOperation, false, false), 's'), 'currentBatch'), 'sizeBytes', '+')(J$.B(2394, '+', J$.R(51073, 'maxKeySize', maxKeySize, false, false), J$.R(51081, 'bsonSize', bsonSize, false, false)));
                            return J$.Rt(51105, J$.R(51097, 'bulkOperation', bulkOperation, false, false));
                        } catch (J$e) {
                            J$.Ex(52089, J$e);
                        } finally {
                            if (J$.Fr(52097))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function initializeUnorderedBulkOp(topology, collection, options) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(51585, arguments.callee, this, arguments);
                            arguments = J$.N(51593, 'arguments', arguments, true, false, false);
                            topology = J$.N(51601, 'topology', topology, true, false, false);
                            collection = J$.N(51609, 'collection', collection, true, false, false);
                            options = J$.N(51617, 'options', options, true, false, false);
                            return J$.Rt(51577, J$.F(51569, J$.R(51537, 'UnorderedBulkOperation', UnorderedBulkOperation, false, true), true)(J$.R(51545, 'topology', topology, false, false), J$.R(51553, 'collection', collection, false, false), J$.R(51561, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(52137, J$e);
                        } finally {
                            if (J$.Fr(52145))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(51721, '_typeof', J$.T(51713, _typeof, 12, false), true, false, false);
            _classCallCheck = J$.N(51737, '_classCallCheck', J$.T(51729, _classCallCheck, 12, false), true, false, false);
            _possibleConstructorReturn = J$.N(51753, '_possibleConstructorReturn', J$.T(51745, _possibleConstructorReturn, 12, false), true, false, false);
            _assertThisInitialized = J$.N(51769, '_assertThisInitialized', J$.T(51761, _assertThisInitialized, 12, false), true, false, false);
            _getPrototypeOf = J$.N(51785, '_getPrototypeOf', J$.T(51777, _getPrototypeOf, 12, false), true, false, false);
            _inherits = J$.N(51801, '_inherits', J$.T(51793, _inherits, 12, false), true, false, false);
            _setPrototypeOf = J$.N(51817, '_setPrototypeOf', J$.T(51809, _setPrototypeOf, 12, false), true, false, false);
            J$.N(51825, 'common', common, false, false, false);
            J$.N(51833, 'BulkOperationBase', BulkOperationBase, false, false, false);
            J$.N(51841, 'Batch', Batch, false, false, false);
            J$.N(51849, 'bson', bson, false, false, false);
            J$.N(51857, 'utils', utils, false, false, false);
            J$.N(51865, 'toError', toError, false, false, false);
            addToOperationsList = J$.N(51881, 'addToOperationsList', J$.T(51873, addToOperationsList, 12, false), true, false, false);
            J$.N(51889, 'UnorderedBulkOperation', UnorderedBulkOperation, false, false, false);
            initializeUnorderedBulkOp = J$.N(51905, 'initializeUnorderedBulkOp', J$.T(51897, initializeUnorderedBulkOp, 12, false), true, false, false);
            J$.T(48329, 'use strict', 21, false);
            var common = J$.W(49513, 'common', J$.F(49505, J$.I(typeof require === 'undefined' ? require = J$.R(49489, 'require', undefined, true, true) : require = J$.R(49489, 'require', require, true, true)), false)(J$.T(49497, './common', 21, false)), common, false, true);
            var BulkOperationBase = J$.W(49537, 'BulkOperationBase', J$.G(49529, J$.R(49521, 'common', common, false, true), 'BulkOperationBase'), BulkOperationBase, false, true);
            var Batch = J$.W(49561, 'Batch', J$.G(49553, J$.R(49545, 'common', common, false, true), 'Batch'), Batch, false, true);
            var bson = J$.W(49585, 'bson', J$.G(49577, J$.R(49569, 'common', common, false, true), 'bson'), bson, false, true);
            var utils = J$.W(49617, 'utils', J$.F(49609, J$.I(typeof require === 'undefined' ? require = J$.R(49593, 'require', undefined, true, true) : require = J$.R(49593, 'require', require, true, true)), false)(J$.T(49601, '../utils', 21, false)), utils, false, true);
            var toError = J$.W(49641, 'toError', J$.G(49633, J$.R(49625, 'utils', utils, false, true), 'toError'), toError, false, true);
            var UnorderedBulkOperation = J$.W(51529, 'UnorderedBulkOperation', J$.F(51521, J$.T(51505, function (_BulkOperationBase) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(51465, arguments.callee, this, arguments);
                            function UnorderedBulkOperation(topology, collection, options) {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(51409, arguments.callee, this, arguments);
                                            arguments = J$.N(51417, 'arguments', arguments, true, false, false);
                                            topology = J$.N(51425, 'topology', topology, true, false, false);
                                            collection = J$.N(51433, 'collection', collection, true, false, false);
                                            options = J$.N(51441, 'options', options, true, false, false);
                                            J$.F(51225, J$.R(51201, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(51209, 'this', this, false, false), J$.R(51217, 'UnorderedBulkOperation', UnorderedBulkOperation, false, false));
                                            options = J$.W(51249, 'options', J$.C(2472, J$.R(51233, 'options', options, false, false)) ? J$._() : J$.T(51241, {}, 11, false), options, false, false);
                                            options = J$.W(51297, 'options', J$.M(51289, J$.I(typeof Object === 'undefined' ? Object = J$.R(51257, 'Object', undefined, true, true) : Object = J$.R(51257, 'Object', Object, true, true)), 'assign', false)(J$.R(51265, 'options', options, false, false), J$.T(51281, { addToOperationsList: J$.R(51273, 'addToOperationsList', addToOperationsList, false, true) }, 11, false)), options, false, false);
                                            return J$.Rt(51401, J$.F(51393, J$.R(51305, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(51313, 'this', this, false, false), J$.M(51385, J$.F(51337, J$.R(51321, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(51329, 'UnorderedBulkOperation', UnorderedBulkOperation, false, false)), 'call', false)(J$.R(51345, 'this', this, false, false), J$.R(51353, 'topology', topology, false, false), J$.R(51361, 'collection', collection, false, false), J$.R(51369, 'options', options, false, false), J$.T(51377, false, 23, false))));
                                        } catch (J$e) {
                                            J$.Ex(52105, J$e);
                                        } finally {
                                            if (J$.Fr(52113))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(51473, 'arguments', arguments, true, false, false);
                            _BulkOperationBase = J$.N(51481, '_BulkOperationBase', _BulkOperationBase, true, false, false);
                            UnorderedBulkOperation = J$.N(51497, 'UnorderedBulkOperation', J$.T(51489, UnorderedBulkOperation, 12, false), true, false, false);
                            J$.F(51193, J$.R(51169, '_inherits', _inherits, false, true), false)(J$.R(51177, 'UnorderedBulkOperation', UnorderedBulkOperation, false, false), J$.R(51185, '_BulkOperationBase', _BulkOperationBase, false, false));
                            return J$.Rt(51457, J$.R(51449, 'UnorderedBulkOperation', UnorderedBulkOperation, false, false));
                        } catch (J$e) {
                            J$.Ex(52121, J$e);
                        } finally {
                            if (J$.Fr(52129))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(51513, 'BulkOperationBase', BulkOperationBase, false, true)), UnorderedBulkOperation, false, true);
            J$.P(51641, J$.R(51625, 'initializeUnorderedBulkOp', initializeUnorderedBulkOp, false, true), 'UnorderedBulkOperation', J$.R(51633, 'UnorderedBulkOperation', UnorderedBulkOperation, false, true));
            J$.P(51665, J$.I(typeof module === 'undefined' ? module = J$.R(51649, 'module', undefined, true, true) : module = J$.R(51649, 'module', module, true, true)), 'exports', J$.R(51657, 'initializeUnorderedBulkOp', initializeUnorderedBulkOp, false, true));
            J$.P(51697, J$.G(51681, J$.I(typeof module === 'undefined' ? module = J$.R(51673, 'module', undefined, true, true) : module = J$.R(51673, 'module', module, true, true)), 'exports'), 'Bulk', J$.R(51689, 'UnorderedBulkOperation', UnorderedBulkOperation, false, true));
        } catch (J$e) {
            J$.Ex(52153, J$e);
        } finally {
            if (J$.Sr(52161))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

