J$.noInstrEval = false;
jalangiLabel67:
    while (true) {
        try {
            J$.Se(444921, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/lib/cursor.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(429945, arguments.callee, this, arguments);
                            arguments = J$.N(429953, 'arguments', arguments, true, false, false);
                            obj = J$.N(429961, 'obj', obj, true, false, false);
                            if (J$.C(27096, J$.C(27056, J$.B(26882, '===', J$.U(26874, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(429681, 'Symbol', undefined, true, true) : Symbol = J$.R(429681, 'Symbol', Symbol, true, true))), J$.T(429689, 'function', 21, false))) ? J$.B(26898, '===', J$.U(26890, 'typeof', J$.G(429705, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(429697, 'Symbol', undefined, true, true) : Symbol = J$.R(429697, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(429713, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(429769, '_typeof', J$.T(429761, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(429737, arguments.callee, this, arguments);
                                                arguments = J$.N(429745, 'arguments', arguments, true, false, false);
                                                obj = J$.N(429753, 'obj', obj, true, false, false);
                                                return J$.Rt(429729, J$.U(26906, 'typeof', J$.R(429721, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(445257, J$e);
                                            } finally {
                                                if (J$.Fr(445265))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(429905, '_typeof', J$.T(429897, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(429873, arguments.callee, this, arguments);
                                                arguments = J$.N(429881, 'arguments', arguments, true, false, false);
                                                obj = J$.N(429889, 'obj', obj, true, false, false);
                                                return J$.Rt(429865, J$.C(27088, J$.C(27080, J$.C(27072, J$.C(27064, J$.R(429777, 'obj', obj, false, false)) ? J$.B(26922, '===', J$.U(26914, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(429785, 'Symbol', undefined, true, true) : Symbol = J$.R(429785, 'Symbol', Symbol, true, true))), J$.T(429793, 'function', 21, false)) : J$._()) ? J$.B(26930, '===', J$.G(429809, J$.R(429801, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(429817, 'Symbol', undefined, true, true) : Symbol = J$.R(429817, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(26938, '!==', J$.R(429825, 'obj', obj, false, false), J$.G(429841, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(429833, 'Symbol', undefined, true, true) : Symbol = J$.R(429833, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(429849, 'symbol', 21, false) : J$.U(26946, 'typeof', J$.R(429857, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(445273, J$e);
                                            } finally {
                                                if (J$.Fr(445281))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(429937, J$.F(429929, J$.R(429913, '_typeof', _typeof, false, true), false)(J$.R(429921, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(445289, J$e);
                        } finally {
                            if (J$.Fr(445297))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _classCallCheck(instance, Constructor) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(430009, arguments.callee, this, arguments);
                            arguments = J$.N(430017, 'arguments', arguments, true, false, false);
                            instance = J$.N(430025, 'instance', instance, true, false, false);
                            Constructor = J$.N(430033, 'Constructor', Constructor, true, false, false);
                            if (J$.C(27104, J$.U(26962, '!', J$.B(26954, 'instanceof', J$.R(429969, 'instance', instance, false, false), J$.R(429977, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(430001, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(429985, 'TypeError', undefined, true, true) : TypeError = J$.R(429985, 'TypeError', TypeError, true, true)), true)(J$.T(429993, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(445305, J$e);
                        } finally {
                            if (J$.Fr(445313))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(430281, arguments.callee, this, arguments);
                            arguments = J$.N(430289, 'arguments', arguments, true, false, false);
                            target = J$.N(430297, 'target', target, true, false, false);
                            props = J$.N(430305, 'props', props, true, false, false);
                            J$.N(430313, 'i', i, false, false, false);
                            J$.N(430321, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(430049, 'i', J$.T(430041, 0, 22, false), i, false, false); J$.C(27128, J$.B(26970, '<', J$.R(430057, 'i', i, false, false), J$.G(430073, J$.R(430065, 'props', props, false, false), 'length'))); J$.B(26994, '-', i = J$.W(430089, 'i', J$.B(26986, '+', J$.U(26978, '+', J$.R(430081, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(430121, 'descriptor', J$.G(430113, J$.R(430097, 'props', props, false, false), J$.R(430105, 'i', i, false, false)), descriptor, false, false);
                                J$.P(430161, J$.R(430129, 'descriptor', descriptor, false, false), 'enumerable', J$.C(27112, J$.G(430145, J$.R(430137, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(430153, false, 23, false));
                                J$.P(430185, J$.R(430169, 'descriptor', descriptor, false, false), 'configurable', J$.T(430177, true, 23, false));
                                if (J$.C(27120, J$.B(27002, 'in', J$.T(430193, 'value', 21, false), J$.R(430201, 'descriptor', descriptor, false, false))))
                                    J$.P(430225, J$.R(430209, 'descriptor', descriptor, false, false), 'writable', J$.T(430217, true, 23, false));
                                J$.M(430273, J$.I(typeof Object === 'undefined' ? Object = J$.R(430233, 'Object', undefined, true, true) : Object = J$.R(430233, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(430241, 'target', target, false, false), J$.G(430257, J$.R(430249, 'descriptor', descriptor, false, false), 'key'), J$.R(430265, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(445321, J$e);
                        } finally {
                            if (J$.Fr(445329))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(430433, arguments.callee, this, arguments);
                            arguments = J$.N(430441, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(430449, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(430457, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(430465, 'staticProps', staticProps, true, false, false);
                            if (J$.C(27136, J$.R(430329, 'protoProps', protoProps, false, false)))
                                J$.F(430369, J$.R(430337, '_defineProperties', _defineProperties, false, true), false)(J$.G(430353, J$.R(430345, 'Constructor', Constructor, false, false), 'prototype'), J$.R(430361, 'protoProps', protoProps, false, false));
                            if (J$.C(27144, J$.R(430377, 'staticProps', staticProps, false, false)))
                                J$.F(430409, J$.R(430385, '_defineProperties', _defineProperties, false, true), false)(J$.R(430393, 'Constructor', Constructor, false, false), J$.R(430401, 'staticProps', staticProps, false, false));
                            return J$.Rt(430425, J$.R(430417, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(445337, J$e);
                        } finally {
                            if (J$.Fr(445345))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _possibleConstructorReturn(self, call) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(430577, arguments.callee, this, arguments);
                            arguments = J$.N(430585, 'arguments', arguments, true, false, false);
                            self = J$.N(430593, 'self', self, true, false, false);
                            call = J$.N(430601, 'call', call, true, false, false);
                            if (J$.C(27168, J$.C(27160, J$.R(430473, 'call', call, false, false)) ? J$.C(27152, J$.B(27010, '===', J$.F(430497, J$.R(430481, '_typeof', _typeof, false, true), false)(J$.R(430489, 'call', call, false, false)), J$.T(430505, 'object', 21, false))) ? J$._() : J$.B(27026, '===', J$.U(27018, 'typeof', J$.R(430513, 'call', call, false, false)), J$.T(430521, 'function', 21, false)) : J$._())) {
                                return J$.Rt(430537, J$.R(430529, 'call', call, false, false));
                            }
                            return J$.Rt(430569, J$.F(430561, J$.R(430545, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(430553, 'self', self, false, false)));
                        } catch (J$e) {
                            J$.Ex(445353, J$e);
                        } finally {
                            if (J$.Fr(445361))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _assertThisInitialized(self) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(430665, arguments.callee, this, arguments);
                            arguments = J$.N(430673, 'arguments', arguments, true, false, false);
                            self = J$.N(430681, 'self', self, true, false, false);
                            if (J$.C(27176, J$.B(27034, '===', J$.R(430609, 'self', self, false, false), void J$.T(430617, 0, 22, false)))) {
                                throw J$.F(430641, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(430625, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(430625, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(430633, 'this hasn\'t been initialised - super() hasn\'t been called', 21, false));
                            }
                            return J$.Rt(430657, J$.R(430649, 'self', self, false, false));
                        } catch (J$e) {
                            J$.Ex(445369, J$e);
                        } finally {
                            if (J$.Fr(445377))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _get(target, property, receiver) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(431049, arguments.callee, this, arguments);
                            arguments = J$.N(431057, 'arguments', arguments, true, false, false);
                            target = J$.N(431065, 'target', target, true, false, false);
                            property = J$.N(431073, 'property', property, true, false, false);
                            receiver = J$.N(431081, 'receiver', receiver, true, false, false);
                            if (J$.C(27208, J$.C(27184, J$.B(27050, '!==', J$.U(27042, 'typeof', J$.I(typeof Reflect === 'undefined' ? Reflect = J$.R(430689, 'Reflect', undefined, true, true) : Reflect = J$.R(430689, 'Reflect', Reflect, true, true))), J$.T(430697, 'undefined', 21, false))) ? J$.G(430713, J$.I(typeof Reflect === 'undefined' ? Reflect = J$.R(430705, 'Reflect', undefined, true, true) : Reflect = J$.R(430705, 'Reflect', Reflect, true, true)), 'get') : J$._())) {
                                _get = J$.W(430737, '_get', J$.G(430729, J$.I(typeof Reflect === 'undefined' ? Reflect = J$.R(430721, 'Reflect', undefined, true, true) : Reflect = J$.R(430721, 'Reflect', Reflect, true, true)), 'get'), _get, false, true);
                            } else {
                                _get = J$.W(430985, '_get', J$.T(430977, function _get(target, property, receiver) {
                                    jalangiLabel8:
                                        while (true) {
                                            try {
                                                J$.Fe(430921, arguments.callee, this, arguments);
                                                arguments = J$.N(430929, 'arguments', arguments, true, false, false);
                                                target = J$.N(430937, 'target', target, true, false, false);
                                                property = J$.N(430945, 'property', property, true, false, false);
                                                receiver = J$.N(430953, 'receiver', receiver, true, false, false);
                                                J$.N(430961, 'base', base, false, false, false);
                                                J$.N(430969, 'desc', desc, false, false, false);
                                                var base = J$.W(430777, 'base', J$.F(430769, J$.R(430745, '_superPropBase', _superPropBase, false, true), false)(J$.R(430753, 'target', target, false, false), J$.R(430761, 'property', property, false, false)), base, false, false);
                                                if (J$.C(27192, J$.U(27058, '!', J$.R(430785, 'base', base, false, false))))
                                                    return J$.Rt(430793, undefined);
                                                var desc = J$.W(430833, 'desc', J$.M(430825, J$.I(typeof Object === 'undefined' ? Object = J$.R(430801, 'Object', undefined, true, true) : Object = J$.R(430801, 'Object', Object, true, true)), 'getOwnPropertyDescriptor', false)(J$.R(430809, 'base', base, false, false), J$.R(430817, 'property', property, false, false)), desc, false, false);
                                                if (J$.C(27200, J$.G(430849, J$.R(430841, 'desc', desc, false, false), 'get'))) {
                                                    return J$.Rt(430889, J$.M(430881, J$.G(430865, J$.R(430857, 'desc', desc, false, false), 'get'), 'call', false)(J$.R(430873, 'receiver', receiver, false, false)));
                                                }
                                                return J$.Rt(430913, J$.G(430905, J$.R(430897, 'desc', desc, false, false), 'value'));
                                            } catch (J$e) {
                                                J$.Ex(445385, J$e);
                                            } finally {
                                                if (J$.Fr(445393))
                                                    continue jalangiLabel8;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _get, false, true);
                            }
                            return J$.Rt(431041, J$.F(431033, J$.R(430993, '_get', _get, false, true), false)(J$.R(431001, 'target', target, false, false), J$.R(431009, 'property', property, false, false), J$.C(27216, J$.R(431017, 'receiver', receiver, false, false)) ? J$._() : J$.R(431025, 'target', target, false, false)));
                        } catch (J$e) {
                            J$.Ex(445401, J$e);
                        } finally {
                            if (J$.Fr(445409))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _superPropBase(object, property) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(431201, arguments.callee, this, arguments);
                            arguments = J$.N(431209, 'arguments', arguments, true, false, false);
                            object = J$.N(431217, 'object', object, true, false, false);
                            property = J$.N(431225, 'property', property, true, false, false);
                            while (J$.C(27232, J$.U(27066, '!', J$.M(431129, J$.G(431105, J$.G(431097, J$.I(typeof Object === 'undefined' ? Object = J$.R(431089, 'Object', undefined, true, true) : Object = J$.R(431089, 'Object', Object, true, true)), 'prototype'), 'hasOwnProperty'), 'call', false)(J$.R(431113, 'object', object, false, false), J$.R(431121, 'property', property, false, false))))) {
                                object = J$.W(431161, 'object', J$.F(431153, J$.R(431137, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(431145, 'object', object, false, false)), object, false, false);
                                if (J$.C(27224, J$.B(27074, '===', J$.R(431169, 'object', object, false, false), J$.T(431177, null, 25, false))))
                                    break;
                            }
                            return J$.Rt(431193, J$.R(431185, 'object', object, false, false));
                        } catch (J$e) {
                            J$.Ex(445417, J$e);
                        } finally {
                            if (J$.Fr(445425))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _getPrototypeOf(o) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(431385, arguments.callee, this, arguments);
                            arguments = J$.N(431393, 'arguments', arguments, true, false, false);
                            o = J$.N(431401, 'o', o, true, false, false);
                            _getPrototypeOf = J$.W(431345, '_getPrototypeOf', J$.C(27248, J$.G(431241, J$.I(typeof Object === 'undefined' ? Object = J$.R(431233, 'Object', undefined, true, true) : Object = J$.R(431233, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$.G(431257, J$.I(typeof Object === 'undefined' ? Object = J$.R(431249, 'Object', undefined, true, true) : Object = J$.R(431249, 'Object', Object, true, true)), 'getPrototypeOf') : J$.T(431337, function _getPrototypeOf(o) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(431313, arguments.callee, this, arguments);
                                            arguments = J$.N(431321, 'arguments', arguments, true, false, false);
                                            o = J$.N(431329, 'o', o, true, false, false);
                                            return J$.Rt(431305, J$.C(27240, J$.G(431273, J$.R(431265, 'o', o, false, false), '__proto__')) ? J$._() : J$.M(431297, J$.I(typeof Object === 'undefined' ? Object = J$.R(431281, 'Object', undefined, true, true) : Object = J$.R(431281, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(431289, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(445433, J$e);
                                        } finally {
                                            if (J$.Fr(445441))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _getPrototypeOf, false, true);
                            return J$.Rt(431377, J$.F(431369, J$.R(431353, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(431361, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(445449, J$e);
                        } finally {
                            if (J$.Fr(445457))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _inherits(subClass, superClass) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(431601, arguments.callee, this, arguments);
                            arguments = J$.N(431609, 'arguments', arguments, true, false, false);
                            subClass = J$.N(431617, 'subClass', subClass, true, false, false);
                            superClass = J$.N(431625, 'superClass', superClass, true, false, false);
                            if (J$.C(27264, J$.C(27256, J$.B(27090, '!==', J$.U(27082, 'typeof', J$.R(431409, 'superClass', superClass, false, false)), J$.T(431417, 'function', 21, false))) ? J$.B(27098, '!==', J$.R(431425, 'superClass', superClass, false, false), J$.T(431433, null, 25, false)) : J$._())) {
                                throw J$.F(431457, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(431441, 'TypeError', undefined, true, true) : TypeError = J$.R(431441, 'TypeError', TypeError, true, true)), true)(J$.T(431449, 'Super expression must either be null or a function', 21, false));
                            }
                            J$.P(431553, J$.R(431465, 'subClass', subClass, false, false), 'prototype', J$.M(431545, J$.I(typeof Object === 'undefined' ? Object = J$.R(431473, 'Object', undefined, true, true) : Object = J$.R(431473, 'Object', Object, true, true)), 'create', false)(J$.C(27272, J$.R(431481, 'superClass', superClass, false, false)) ? J$.G(431497, J$.R(431489, 'superClass', superClass, false, false), 'prototype') : J$._(), J$.T(431537, {
                                constructor: J$.T(431529, {
                                    value: J$.R(431505, 'subClass', subClass, false, false),
                                    writable: J$.T(431513, true, 23, false),
                                    configurable: J$.T(431521, true, 23, false)
                                }, 11, false)
                            }, 11, false)));
                            if (J$.C(27280, J$.R(431561, 'superClass', superClass, false, false)))
                                J$.F(431593, J$.R(431569, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(431577, 'subClass', subClass, false, false), J$.R(431585, 'superClass', superClass, false, false));
                        } catch (J$e) {
                            J$.Ex(445465, J$e);
                        } finally {
                            if (J$.Fr(445473))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _setPrototypeOf(o, p) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(431777, arguments.callee, this, arguments);
                            arguments = J$.N(431785, 'arguments', arguments, true, false, false);
                            o = J$.N(431793, 'o', o, true, false, false);
                            p = J$.N(431801, 'p', p, true, false, false);
                            _setPrototypeOf = J$.W(431729, '_setPrototypeOf', J$.C(27288, J$.G(431641, J$.I(typeof Object === 'undefined' ? Object = J$.R(431633, 'Object', undefined, true, true) : Object = J$.R(431633, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$._() : J$.T(431721, function _setPrototypeOf(o, p) {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(431689, arguments.callee, this, arguments);
                                            arguments = J$.N(431697, 'arguments', arguments, true, false, false);
                                            o = J$.N(431705, 'o', o, true, false, false);
                                            p = J$.N(431713, 'p', p, true, false, false);
                                            J$.P(431665, J$.R(431649, 'o', o, false, false), '__proto__', J$.R(431657, 'p', p, false, false));
                                            return J$.Rt(431681, J$.R(431673, 'o', o, false, false));
                                        } catch (J$e) {
                                            J$.Ex(445481, J$e);
                                        } finally {
                                            if (J$.Fr(445489))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _setPrototypeOf, false, true);
                            return J$.Rt(431769, J$.F(431761, J$.R(431737, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(431745, 'o', o, false, false), J$.R(431753, 'p', p, false, false)));
                        } catch (J$e) {
                            J$.Ex(445497, J$e);
                        } finally {
                            if (J$.Fr(445505))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(444937, '_typeof', J$.T(444929, _typeof, 12, false), true, false, false);
            _classCallCheck = J$.N(444953, '_classCallCheck', J$.T(444945, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(444969, '_defineProperties', J$.T(444961, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(444985, '_createClass', J$.T(444977, _createClass, 12, false), true, false, false);
            _possibleConstructorReturn = J$.N(445001, '_possibleConstructorReturn', J$.T(444993, _possibleConstructorReturn, 12, false), true, false, false);
            _assertThisInitialized = J$.N(445017, '_assertThisInitialized', J$.T(445009, _assertThisInitialized, 12, false), true, false, false);
            _get = J$.N(445033, '_get', J$.T(445025, _get, 12, false), true, false, false);
            _superPropBase = J$.N(445049, '_superPropBase', J$.T(445041, _superPropBase, 12, false), true, false, false);
            _getPrototypeOf = J$.N(445065, '_getPrototypeOf', J$.T(445057, _getPrototypeOf, 12, false), true, false, false);
            _inherits = J$.N(445081, '_inherits', J$.T(445073, _inherits, 12, false), true, false, false);
            _setPrototypeOf = J$.N(445097, '_setPrototypeOf', J$.T(445089, _setPrototypeOf, 12, false), true, false, false);
            J$.N(445105, 'Transform', Transform, false, false, false);
            J$.N(445113, 'PassThrough', PassThrough, false, false, false);
            J$.N(445121, 'deprecate', deprecate, false, false, false);
            J$.N(445129, 'handleCallback', handleCallback, false, false, false);
            J$.N(445137, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(445145, 'MongoError', MongoError, false, false, false);
            J$.N(445153, 'CoreCursor', CoreCursor, false, false, false);
            J$.N(445161, 'CursorState', CursorState, false, false, false);
            J$.N(445169, 'Map', Map, false, false, false);
            J$.N(445177, '_each', _each, false, false, false);
            J$.N(445185, 'CountOperation', CountOperation, false, false, false);
            J$.N(445193, 'ExplainOperation', ExplainOperation, false, false, false);
            J$.N(445201, 'HasNextOperation', HasNextOperation, false, false, false);
            J$.N(445209, 'NextOperation', NextOperation, false, false, false);
            J$.N(445217, 'ToArrayOperation', ToArrayOperation, false, false, false);
            J$.N(445225, 'executeOperation', executeOperation, false, false, false);
            J$.N(445233, 'flags', flags, false, false, false);
            J$.N(445241, 'fields', fields, false, false, false);
            J$.N(445249, 'Cursor', Cursor, false, false, false);
            J$.T(429673, 'use strict', 21, false);
            var Transform = J$.W(431841, 'Transform', J$.G(431833, J$.F(431825, J$.I(typeof require === 'undefined' ? require = J$.R(431809, 'require', undefined, true, true) : require = J$.R(431809, 'require', require, true, true)), false)(J$.T(431817, 'stream', 21, false)), 'Transform'), Transform, false, true);
            var PassThrough = J$.W(431881, 'PassThrough', J$.G(431873, J$.F(431865, J$.I(typeof require === 'undefined' ? require = J$.R(431849, 'require', undefined, true, true) : require = J$.R(431849, 'require', require, true, true)), false)(J$.T(431857, 'stream', 21, false)), 'PassThrough'), PassThrough, false, true);
            var deprecate = J$.W(431921, 'deprecate', J$.G(431913, J$.F(431905, J$.I(typeof require === 'undefined' ? require = J$.R(431889, 'require', undefined, true, true) : require = J$.R(431889, 'require', require, true, true)), false)(J$.T(431897, 'util', 21, false)), 'deprecate'), deprecate, false, true);
            var handleCallback = J$.W(431961, 'handleCallback', J$.G(431953, J$.F(431945, J$.I(typeof require === 'undefined' ? require = J$.R(431929, 'require', undefined, true, true) : require = J$.R(431929, 'require', require, true, true)), false)(J$.T(431937, './utils', 21, false)), 'handleCallback'), handleCallback, false, true);
            var ReadPreference = J$.W(432001, 'ReadPreference', J$.G(431993, J$.F(431985, J$.I(typeof require === 'undefined' ? require = J$.R(431969, 'require', undefined, true, true) : require = J$.R(431969, 'require', require, true, true)), false)(J$.T(431977, './core', 21, false)), 'ReadPreference'), ReadPreference, false, true);
            var MongoError = J$.W(432041, 'MongoError', J$.G(432033, J$.F(432025, J$.I(typeof require === 'undefined' ? require = J$.R(432009, 'require', undefined, true, true) : require = J$.R(432009, 'require', require, true, true)), false)(J$.T(432017, './core', 21, false)), 'MongoError'), MongoError, false, true);
            var CoreCursor = J$.W(432081, 'CoreCursor', J$.G(432073, J$.F(432065, J$.I(typeof require === 'undefined' ? require = J$.R(432049, 'require', undefined, true, true) : require = J$.R(432049, 'require', require, true, true)), false)(J$.T(432057, './core/cursor', 21, false)), 'CoreCursor'), CoreCursor, false, true);
            var CursorState = J$.W(432121, 'CursorState', J$.G(432113, J$.F(432105, J$.I(typeof require === 'undefined' ? require = J$.R(432089, 'require', undefined, true, true) : require = J$.R(432089, 'require', require, true, true)), false)(J$.T(432097, './core/cursor', 21, false)), 'CursorState'), CursorState, false, true);
            var Map = J$.W(432169, 'Map', J$.G(432161, J$.G(432153, J$.F(432145, J$.I(typeof require === 'undefined' ? require = J$.R(432129, 'require', undefined, true, true) : require = J$.R(432129, 'require', require, true, true)), false)(J$.T(432137, './core', 21, false)), 'BSON'), 'Map'), Map, false, true);
            var _each = J$.W(432209, '_each', J$.G(432201, J$.F(432193, J$.I(typeof require === 'undefined' ? require = J$.R(432177, 'require', undefined, true, true) : require = J$.R(432177, 'require', require, true, true)), false)(J$.T(432185, './operations/cursor_ops', 21, false)), 'each'), _each, false, true);
            var CountOperation = J$.W(432241, 'CountOperation', J$.F(432233, J$.I(typeof require === 'undefined' ? require = J$.R(432217, 'require', undefined, true, true) : require = J$.R(432217, 'require', require, true, true)), false)(J$.T(432225, './operations/count', 21, false)), CountOperation, false, true);
            var ExplainOperation = J$.W(432273, 'ExplainOperation', J$.F(432265, J$.I(typeof require === 'undefined' ? require = J$.R(432249, 'require', undefined, true, true) : require = J$.R(432249, 'require', require, true, true)), false)(J$.T(432257, './operations/explain', 21, false)), ExplainOperation, false, true);
            var HasNextOperation = J$.W(432305, 'HasNextOperation', J$.F(432297, J$.I(typeof require === 'undefined' ? require = J$.R(432281, 'require', undefined, true, true) : require = J$.R(432281, 'require', require, true, true)), false)(J$.T(432289, './operations/has_next', 21, false)), HasNextOperation, false, true);
            var NextOperation = J$.W(432337, 'NextOperation', J$.F(432329, J$.I(typeof require === 'undefined' ? require = J$.R(432313, 'require', undefined, true, true) : require = J$.R(432313, 'require', require, true, true)), false)(J$.T(432321, './operations/next', 21, false)), NextOperation, false, true);
            var ToArrayOperation = J$.W(432369, 'ToArrayOperation', J$.F(432361, J$.I(typeof require === 'undefined' ? require = J$.R(432345, 'require', undefined, true, true) : require = J$.R(432345, 'require', require, true, true)), false)(J$.T(432353, './operations/to_array', 21, false)), ToArrayOperation, false, true);
            var executeOperation = J$.W(432401, 'executeOperation', J$.F(432393, J$.I(typeof require === 'undefined' ? require = J$.R(432377, 'require', undefined, true, true) : require = J$.R(432377, 'require', require, true, true)), false)(J$.T(432385, './operations/execute_operation', 21, false)), executeOperation, false, true);
            var flags = J$.W(432465, 'flags', J$.T(432457, [
                J$.T(432409, 'tailable', 21, false),
                J$.T(432417, 'oplogReplay', 21, false),
                J$.T(432425, 'noCursorTimeout', 21, false),
                J$.T(432433, 'awaitData', 21, false),
                J$.T(432441, 'exhaust', 21, false),
                J$.T(432449, 'partial', 21, false)
            ], 10, false), flags, false, true);
            var fields = J$.W(432497, 'fields', J$.T(432489, [
                J$.T(432473, 'numberOfRetries', 21, false),
                J$.T(432481, 'tailableRetryInterval', 21, false)
            ], 10, false), fields, false, true);
            var Cursor = J$.W(444697, 'Cursor', J$.F(444689, J$.T(444673, function (_CoreCursor) {
                jalangiLabel66:
                    while (true) {
                        try {
                            J$.Fe(444633, arguments.callee, this, arguments);
                            function Cursor(topology, ns, cmd, options) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(433337, arguments.callee, this, arguments);
                                            arguments = J$.N(433345, 'arguments', arguments, true, false, false);
                                            topology = J$.N(433353, 'topology', topology, true, false, false);
                                            ns = J$.N(433361, 'ns', ns, true, false, false);
                                            cmd = J$.N(433369, 'cmd', cmd, true, false, false);
                                            options = J$.N(433377, 'options', options, true, false, false);
                                            J$.N(433385, '_this', _this, false, false, false);
                                            J$.N(433393, 'numberOfRetries', numberOfRetries, false, false, false);
                                            J$.N(433401, 'tailableRetryInterval', tailableRetryInterval, false, false, false);
                                            J$.N(433409, 'currentNumberOfRetries', currentNumberOfRetries, false, false, false);
                                            J$.N(433417, 'promiseLibrary', promiseLibrary, false, false, false);
                                            J$.N(433425, 'batchSize', batchSize, false, false, false);
                                            var _this;
                                            J$.F(432561, J$.R(432537, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(432545, 'this', this, false, false), J$.R(432553, 'Cursor', Cursor, false, false));
                                            _this = J$.W(432665, '_this', J$.F(432657, J$.R(432569, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(432577, 'this', this, false, false), J$.M(432649, J$.F(432601, J$.R(432585, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(432593, 'Cursor', Cursor, false, false)), 'call', false)(J$.R(432609, 'this', this, false, false), J$.R(432617, 'topology', topology, false, false), J$.R(432625, 'ns', ns, false, false), J$.R(432633, 'cmd', cmd, false, false), J$.R(432641, 'options', options, false, false))), _this, false, false);
                                            if (J$.C(27296, J$.G(432681, J$.R(432673, '_this', _this, false, false), 'operation'))) {
                                                options = J$.W(432713, 'options', J$.G(432705, J$.G(432697, J$.R(432689, '_this', _this, false, false), 'operation'), 'options'), options, false, false);
                                            }
                                            var numberOfRetries = J$.W(432745, 'numberOfRetries', J$.C(27304, J$.G(432729, J$.R(432721, 'options', options, false, false), 'numberOfRetries')) ? J$._() : J$.T(432737, 5, 22, false), numberOfRetries, false, false);
                                            var tailableRetryInterval = J$.W(432777, 'tailableRetryInterval', J$.C(27312, J$.G(432761, J$.R(432753, 'options', options, false, false), 'tailableRetryInterval')) ? J$._() : J$.T(432769, 500, 22, false), tailableRetryInterval, false, false);
                                            var currentNumberOfRetries = J$.W(432793, 'currentNumberOfRetries', J$.R(432785, 'numberOfRetries', numberOfRetries, false, false), currentNumberOfRetries, false, false);
                                            var promiseLibrary = J$.W(432825, 'promiseLibrary', J$.C(27320, J$.G(432809, J$.R(432801, 'options', options, false, false), 'promiseLibrary')) ? J$._() : J$.I(typeof Promise === 'undefined' ? Promise = J$.R(432817, 'Promise', undefined, true, true) : Promise = J$.R(432817, 'Promise', Promise, true, true)), promiseLibrary, false, false);
                                            J$.P(432921, J$.R(432833, '_this', _this, false, false), 's', J$.T(432913, {
                                                numberOfRetries: J$.R(432841, 'numberOfRetries', numberOfRetries, false, false),
                                                tailableRetryInterval: J$.R(432849, 'tailableRetryInterval', tailableRetryInterval, false, false),
                                                currentNumberOfRetries: J$.R(432857, 'currentNumberOfRetries', currentNumberOfRetries, false, false),
                                                state: J$.G(432873, J$.R(432865, 'CursorState', CursorState, false, true), 'INIT'),
                                                promiseLibrary: J$.R(432881, 'promiseLibrary', promiseLibrary, false, false),
                                                currentDoc: J$.T(432889, null, 25, false),
                                                explicitlyIgnoreSession: J$.U(27114, '!', J$.U(27106, '!', J$.G(432905, J$.R(432897, 'options', options, false, false), 'explicitlyIgnoreSession')))
                                            }, 11, false));
                                            if (J$.C(27336, J$.C(27328, J$.U(27122, '!', J$.G(432937, J$.R(432929, 'options', options, false, false), 'explicitlyIgnoreSession'))) ? J$.G(432953, J$.R(432945, 'options', options, false, false), 'session') : J$._())) {
                                                J$.P(432993, J$.G(432969, J$.R(432961, '_this', _this, false, false), 'cursorState'), 'session', J$.G(432985, J$.R(432977, 'options', options, false, false), 'session'));
                                            }
                                            if (J$.C(27344, J$.B(27130, '===', J$.G(433017, J$.G(433009, J$.R(433001, '_this', _this, false, false), 'options'), 'noCursorTimeout'), J$.T(433025, true, 23, false)))) {
                                                J$.M(433057, J$.R(433033, '_this', _this, false, false), 'addCursorFlag', false)(J$.T(433041, 'noCursorTimeout', 21, false), J$.T(433049, true, 23, false));
                                            }
                                            var batchSize = J$.W(433073, 'batchSize', J$.T(433065, 1000, 22, false), batchSize, false, false);
                                            if (J$.C(27384, J$.C(27352, J$.G(433097, J$.G(433089, J$.R(433081, '_this', _this, false, false), 'cmd'), 'cursor')) ? J$.G(433129, J$.G(433121, J$.G(433113, J$.R(433105, '_this', _this, false, false), 'cmd'), 'cursor'), 'batchSize') : J$._())) {
                                                batchSize = J$.W(433169, 'batchSize', J$.G(433161, J$.G(433153, J$.G(433145, J$.R(433137, '_this', _this, false, false), 'cmd'), 'cursor'), 'batchSize'), batchSize, false, false);
                                            } else if (J$.C(27376, J$.C(27360, J$.G(433185, J$.R(433177, 'options', options, false, false), 'cursor')) ? J$.G(433209, J$.G(433201, J$.R(433193, 'options', options, false, false), 'cursor'), 'batchSize') : J$._())) {
                                                batchSize = J$.W(433241, 'batchSize', J$.G(433233, J$.G(433225, J$.R(433217, 'options', options, false, false), 'cursor'), 'batchSize'), batchSize, false, false);
                                            } else if (J$.C(27368, J$.B(27146, '===', J$.U(27138, 'typeof', J$.G(433257, J$.R(433249, 'options', options, false, false), 'batchSize')), J$.T(433265, 'number', 21, false)))) {
                                                batchSize = J$.W(433289, 'batchSize', J$.G(433281, J$.R(433273, 'options', options, false, false), 'batchSize'), batchSize, false, false);
                                            }
                                            J$.M(433313, J$.R(433297, '_this', _this, false, false), 'setCursorBatchSize', false)(J$.R(433305, 'batchSize', batchSize, false, false));
                                            return J$.Rt(433329, J$.R(433321, '_this', _this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(445513, J$e);
                                        } finally {
                                            if (J$.Fr(445521))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(444641, 'arguments', arguments, true, false, false);
                            _CoreCursor = J$.N(444649, '_CoreCursor', _CoreCursor, true, false, false);
                            Cursor = J$.N(444665, 'Cursor', J$.T(444657, Cursor, 12, false), true, false, false);
                            J$.F(432529, J$.R(432505, '_inherits', _inherits, false, true), false)(J$.R(432513, 'Cursor', Cursor, false, false), J$.R(432521, '_CoreCursor', _CoreCursor, false, false));
                            J$.F(444609, J$.R(433433, '_createClass', _createClass, false, true), false)(J$.R(433441, 'Cursor', Cursor, false, false), J$.T(444601, [
                                J$.T(433873, {
                                    key: J$.T(433449, '_initializeCursor', 21, false),
                                    value: J$.T(433865, function _initializeCursor(callback) {
                                        jalangiLabel17:
                                            while (true) {
                                                try {
                                                    J$.Fe(433841, arguments.callee, this, arguments);
                                                    arguments = J$.N(433849, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(433857, 'callback', callback, true, false, false);
                                                    if (J$.C(27432, J$.C(27392, J$.G(433465, J$.R(433457, 'this', this, false, false), 'operation')) ? J$.B(27154, '!=', J$.G(433489, J$.G(433481, J$.R(433473, 'this', this, false, false), 'operation'), 'session'), J$.T(433497, null, 25, false)) : J$._())) {
                                                        J$.P(433545, J$.G(433513, J$.R(433505, 'this', this, false, false), 'cursorState'), 'session', J$.G(433537, J$.G(433529, J$.R(433521, 'this', this, false, false), 'operation'), 'session'));
                                                    } else {
                                                        if (J$.C(27424, J$.C(27408, J$.C(27400, J$.U(27162, '!', J$.G(433569, J$.G(433561, J$.R(433553, 'this', this, false, false), 's'), 'explicitlyIgnoreSession'))) ? J$.U(27170, '!', J$.G(433593, J$.G(433585, J$.R(433577, 'this', this, false, false), 'cursorState'), 'session')) : J$._()) ? J$.M(433617, J$.G(433609, J$.R(433601, 'this', this, false, false), 'topology'), 'hasSessionSupport', false)() : J$._())) {
                                                            J$.P(433681, J$.G(433633, J$.R(433625, 'this', this, false, false), 'cursorState'), 'session', J$.M(433673, J$.G(433649, J$.R(433641, 'this', this, false, false), 'topology'), 'startSession', false)(J$.T(433665, { owner: J$.R(433657, 'this', this, false, false) }, 11, false)));
                                                            if (J$.C(27416, J$.G(433697, J$.R(433689, 'this', this, false, false), 'operation'))) {
                                                                J$.P(433745, J$.G(433713, J$.R(433705, 'this', this, false, false), 'operation'), 'session', J$.G(433737, J$.G(433729, J$.R(433721, 'this', this, false, false), 'cursorState'), 'session'));
                                                            }
                                                        }
                                                    }
                                                    J$.M(433833, J$.F(433809, J$.R(433753, '_get', _get, false, true), false)(J$.F(433785, J$.R(433761, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.G(433777, J$.R(433769, 'Cursor', Cursor, false, false), 'prototype')), J$.T(433793, '_initializeCursor', 21, false), J$.R(433801, 'this', this, false, false)), 'call', false)(J$.R(433817, 'this', this, false, false), J$.R(433825, 'callback', callback, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445529, J$e);
                                                } finally {
                                                    if (J$.Fr(445537))
                                                        continue jalangiLabel17;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(434017, {
                                    key: J$.T(433881, 'hasNext', 21, false),
                                    value: J$.T(434009, function hasNext(callback) {
                                        jalangiLabel18:
                                            while (true) {
                                                try {
                                                    J$.Fe(433977, arguments.callee, this, arguments);
                                                    arguments = J$.N(433985, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(433993, 'callback', callback, true, false, false);
                                                    J$.N(434001, 'hasNextOperation', hasNextOperation, false, false, false);
                                                    var hasNextOperation = J$.W(433913, 'hasNextOperation', J$.F(433905, J$.R(433889, 'HasNextOperation', HasNextOperation, false, true), true)(J$.R(433897, 'this', this, false, false)), hasNextOperation, false, false);
                                                    return J$.Rt(433969, J$.F(433961, J$.R(433921, 'executeOperation', executeOperation, false, true), false)(J$.G(433937, J$.R(433929, 'this', this, false, false), 'topology'), J$.R(433945, 'hasNextOperation', hasNextOperation, false, false), J$.R(433953, 'callback', callback, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(445545, J$e);
                                                } finally {
                                                    if (J$.Fr(445553))
                                                        continue jalangiLabel18;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(434161, {
                                    key: J$.T(434025, 'next', 21, false),
                                    value: J$.T(434153, function next(callback) {
                                        jalangiLabel19:
                                            while (true) {
                                                try {
                                                    J$.Fe(434121, arguments.callee, this, arguments);
                                                    arguments = J$.N(434129, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(434137, 'callback', callback, true, false, false);
                                                    J$.N(434145, 'nextOperation', nextOperation, false, false, false);
                                                    var nextOperation = J$.W(434057, 'nextOperation', J$.F(434049, J$.R(434033, 'NextOperation', NextOperation, false, true), true)(J$.R(434041, 'this', this, false, false)), nextOperation, false, false);
                                                    return J$.Rt(434113, J$.F(434105, J$.R(434065, 'executeOperation', executeOperation, false, true), false)(J$.G(434081, J$.R(434073, 'this', this, false, false), 'topology'), J$.R(434089, 'nextOperation', nextOperation, false, false), J$.R(434097, 'callback', callback, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(445561, J$e);
                                                } finally {
                                                    if (J$.Fr(445569))
                                                        continue jalangiLabel19;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(434393, {
                                    key: J$.T(434169, 'filter', 21, false),
                                    value: J$.T(434385, function filter(_filter) {
                                        jalangiLabel20:
                                            while (true) {
                                                try {
                                                    J$.Fe(434361, arguments.callee, this, arguments);
                                                    arguments = J$.N(434369, 'arguments', arguments, true, false, false);
                                                    _filter = J$.N(434377, '_filter', _filter, true, false, false);
                                                    if (J$.C(27456, J$.C(27448, J$.C(27440, J$.B(27178, '===', J$.G(434193, J$.G(434185, J$.R(434177, 'this', this, false, false), 's'), 'state'), J$.G(434209, J$.R(434201, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27186, '===', J$.G(434233, J$.G(434225, J$.R(434217, 'this', this, false, false), 's'), 'state'), J$.G(434249, J$.R(434241, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(434265, J$.R(434257, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(434305, J$.R(434273, 'MongoError', MongoError, false, true), 'create', false)(J$.T(434297, {
                                                            message: J$.T(434281, 'Cursor is closed', 21, false),
                                                            driver: J$.T(434289, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(434337, J$.G(434321, J$.R(434313, 'this', this, false, false), 'cmd'), 'query', J$.R(434329, '_filter', _filter, false, false));
                                                    return J$.Rt(434353, J$.R(434345, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445577, J$e);
                                                } finally {
                                                    if (J$.Fr(445585))
                                                        continue jalangiLabel20;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(434625, {
                                    key: J$.T(434401, 'maxScan', 21, false),
                                    value: J$.T(434617, function maxScan(_maxScan) {
                                        jalangiLabel21:
                                            while (true) {
                                                try {
                                                    J$.Fe(434593, arguments.callee, this, arguments);
                                                    arguments = J$.N(434601, 'arguments', arguments, true, false, false);
                                                    _maxScan = J$.N(434609, '_maxScan', _maxScan, true, false, false);
                                                    if (J$.C(27480, J$.C(27472, J$.C(27464, J$.B(27194, '===', J$.G(434425, J$.G(434417, J$.R(434409, 'this', this, false, false), 's'), 'state'), J$.G(434441, J$.R(434433, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27202, '===', J$.G(434465, J$.G(434457, J$.R(434449, 'this', this, false, false), 's'), 'state'), J$.G(434481, J$.R(434473, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(434497, J$.R(434489, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(434537, J$.R(434505, 'MongoError', MongoError, false, true), 'create', false)(J$.T(434529, {
                                                            message: J$.T(434513, 'Cursor is closed', 21, false),
                                                            driver: J$.T(434521, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(434569, J$.G(434553, J$.R(434545, 'this', this, false, false), 'cmd'), 'maxScan', J$.R(434561, '_maxScan', _maxScan, false, false));
                                                    return J$.Rt(434585, J$.R(434577, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445593, J$e);
                                                } finally {
                                                    if (J$.Fr(445601))
                                                        continue jalangiLabel21;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(434857, {
                                    key: J$.T(434633, 'hint', 21, false),
                                    value: J$.T(434849, function hint(_hint) {
                                        jalangiLabel22:
                                            while (true) {
                                                try {
                                                    J$.Fe(434825, arguments.callee, this, arguments);
                                                    arguments = J$.N(434833, 'arguments', arguments, true, false, false);
                                                    _hint = J$.N(434841, '_hint', _hint, true, false, false);
                                                    if (J$.C(27504, J$.C(27496, J$.C(27488, J$.B(27210, '===', J$.G(434657, J$.G(434649, J$.R(434641, 'this', this, false, false), 's'), 'state'), J$.G(434673, J$.R(434665, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27218, '===', J$.G(434697, J$.G(434689, J$.R(434681, 'this', this, false, false), 's'), 'state'), J$.G(434713, J$.R(434705, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(434729, J$.R(434721, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(434769, J$.R(434737, 'MongoError', MongoError, false, true), 'create', false)(J$.T(434761, {
                                                            message: J$.T(434745, 'Cursor is closed', 21, false),
                                                            driver: J$.T(434753, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(434801, J$.G(434785, J$.R(434777, 'this', this, false, false), 'cmd'), 'hint', J$.R(434793, '_hint', _hint, false, false));
                                                    return J$.Rt(434817, J$.R(434809, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445609, J$e);
                                                } finally {
                                                    if (J$.Fr(445617))
                                                        continue jalangiLabel22;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(435089, {
                                    key: J$.T(434865, 'min', 21, false),
                                    value: J$.T(435081, function min(_min) {
                                        jalangiLabel23:
                                            while (true) {
                                                try {
                                                    J$.Fe(435057, arguments.callee, this, arguments);
                                                    arguments = J$.N(435065, 'arguments', arguments, true, false, false);
                                                    _min = J$.N(435073, '_min', _min, true, false, false);
                                                    if (J$.C(27528, J$.C(27520, J$.C(27512, J$.B(27226, '===', J$.G(434889, J$.G(434881, J$.R(434873, 'this', this, false, false), 's'), 'state'), J$.G(434905, J$.R(434897, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27234, '===', J$.G(434929, J$.G(434921, J$.R(434913, 'this', this, false, false), 's'), 'state'), J$.G(434945, J$.R(434937, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(434961, J$.R(434953, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(435001, J$.R(434969, 'MongoError', MongoError, false, true), 'create', false)(J$.T(434993, {
                                                            message: J$.T(434977, 'Cursor is closed', 21, false),
                                                            driver: J$.T(434985, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(435033, J$.G(435017, J$.R(435009, 'this', this, false, false), 'cmd'), 'min', J$.R(435025, '_min', _min, false, false));
                                                    return J$.Rt(435049, J$.R(435041, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445625, J$e);
                                                } finally {
                                                    if (J$.Fr(445633))
                                                        continue jalangiLabel23;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(435321, {
                                    key: J$.T(435097, 'max', 21, false),
                                    value: J$.T(435313, function max(_max) {
                                        jalangiLabel24:
                                            while (true) {
                                                try {
                                                    J$.Fe(435289, arguments.callee, this, arguments);
                                                    arguments = J$.N(435297, 'arguments', arguments, true, false, false);
                                                    _max = J$.N(435305, '_max', _max, true, false, false);
                                                    if (J$.C(27552, J$.C(27544, J$.C(27536, J$.B(27242, '===', J$.G(435121, J$.G(435113, J$.R(435105, 'this', this, false, false), 's'), 'state'), J$.G(435137, J$.R(435129, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27250, '===', J$.G(435161, J$.G(435153, J$.R(435145, 'this', this, false, false), 's'), 'state'), J$.G(435177, J$.R(435169, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(435193, J$.R(435185, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(435233, J$.R(435201, 'MongoError', MongoError, false, true), 'create', false)(J$.T(435225, {
                                                            message: J$.T(435209, 'Cursor is closed', 21, false),
                                                            driver: J$.T(435217, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(435265, J$.G(435249, J$.R(435241, 'this', this, false, false), 'cmd'), 'max', J$.R(435257, '_max', _max, false, false));
                                                    return J$.Rt(435281, J$.R(435273, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445641, J$e);
                                                } finally {
                                                    if (J$.Fr(445649))
                                                        continue jalangiLabel24;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(435553, {
                                    key: J$.T(435329, 'returnKey', 21, false),
                                    value: J$.T(435545, function returnKey(value) {
                                        jalangiLabel25:
                                            while (true) {
                                                try {
                                                    J$.Fe(435521, arguments.callee, this, arguments);
                                                    arguments = J$.N(435529, 'arguments', arguments, true, false, false);
                                                    value = J$.N(435537, 'value', value, true, false, false);
                                                    if (J$.C(27576, J$.C(27568, J$.C(27560, J$.B(27258, '===', J$.G(435353, J$.G(435345, J$.R(435337, 'this', this, false, false), 's'), 'state'), J$.G(435369, J$.R(435361, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27266, '===', J$.G(435393, J$.G(435385, J$.R(435377, 'this', this, false, false), 's'), 'state'), J$.G(435409, J$.R(435401, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(435425, J$.R(435417, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(435465, J$.R(435433, 'MongoError', MongoError, false, true), 'create', false)(J$.T(435457, {
                                                            message: J$.T(435441, 'Cursor is closed', 21, false),
                                                            driver: J$.T(435449, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(435497, J$.G(435481, J$.R(435473, 'this', this, false, false), 'cmd'), 'returnKey', J$.R(435489, 'value', value, false, false));
                                                    return J$.Rt(435513, J$.R(435505, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445657, J$e);
                                                } finally {
                                                    if (J$.Fr(445665))
                                                        continue jalangiLabel25;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(435785, {
                                    key: J$.T(435561, 'showRecordId', 21, false),
                                    value: J$.T(435777, function showRecordId(value) {
                                        jalangiLabel26:
                                            while (true) {
                                                try {
                                                    J$.Fe(435753, arguments.callee, this, arguments);
                                                    arguments = J$.N(435761, 'arguments', arguments, true, false, false);
                                                    value = J$.N(435769, 'value', value, true, false, false);
                                                    if (J$.C(27600, J$.C(27592, J$.C(27584, J$.B(27274, '===', J$.G(435585, J$.G(435577, J$.R(435569, 'this', this, false, false), 's'), 'state'), J$.G(435601, J$.R(435593, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27282, '===', J$.G(435625, J$.G(435617, J$.R(435609, 'this', this, false, false), 's'), 'state'), J$.G(435641, J$.R(435633, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(435657, J$.R(435649, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(435697, J$.R(435665, 'MongoError', MongoError, false, true), 'create', false)(J$.T(435689, {
                                                            message: J$.T(435673, 'Cursor is closed', 21, false),
                                                            driver: J$.T(435681, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(435729, J$.G(435713, J$.R(435705, 'this', this, false, false), 'cmd'), 'showDiskLoc', J$.R(435721, 'value', value, false, false));
                                                    return J$.Rt(435745, J$.R(435737, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445673, J$e);
                                                } finally {
                                                    if (J$.Fr(445681))
                                                        continue jalangiLabel26;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(436017, {
                                    key: J$.T(435793, 'snapshot', 21, false),
                                    value: J$.T(436009, function snapshot(value) {
                                        jalangiLabel27:
                                            while (true) {
                                                try {
                                                    J$.Fe(435985, arguments.callee, this, arguments);
                                                    arguments = J$.N(435993, 'arguments', arguments, true, false, false);
                                                    value = J$.N(436001, 'value', value, true, false, false);
                                                    if (J$.C(27624, J$.C(27616, J$.C(27608, J$.B(27290, '===', J$.G(435817, J$.G(435809, J$.R(435801, 'this', this, false, false), 's'), 'state'), J$.G(435833, J$.R(435825, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27298, '===', J$.G(435857, J$.G(435849, J$.R(435841, 'this', this, false, false), 's'), 'state'), J$.G(435873, J$.R(435865, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(435889, J$.R(435881, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(435929, J$.R(435897, 'MongoError', MongoError, false, true), 'create', false)(J$.T(435921, {
                                                            message: J$.T(435905, 'Cursor is closed', 21, false),
                                                            driver: J$.T(435913, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(435961, J$.G(435945, J$.R(435937, 'this', this, false, false), 'cmd'), 'snapshot', J$.R(435953, 'value', value, false, false));
                                                    return J$.Rt(435977, J$.R(435969, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445689, J$e);
                                                } finally {
                                                    if (J$.Fr(445697))
                                                        continue jalangiLabel27;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(436425, {
                                    key: J$.T(436025, 'setCursorOption', 21, false),
                                    value: J$.T(436417, function setCursorOption(field, value) {
                                        jalangiLabel28:
                                            while (true) {
                                                try {
                                                    J$.Fe(436385, arguments.callee, this, arguments);
                                                    arguments = J$.N(436393, 'arguments', arguments, true, false, false);
                                                    field = J$.N(436401, 'field', field, true, false, false);
                                                    value = J$.N(436409, 'value', value, true, false, false);
                                                    if (J$.C(27648, J$.C(27640, J$.C(27632, J$.B(27306, '===', J$.G(436049, J$.G(436041, J$.R(436033, 'this', this, false, false), 's'), 'state'), J$.G(436065, J$.R(436057, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27314, '===', J$.G(436089, J$.G(436081, J$.R(436073, 'this', this, false, false), 's'), 'state'), J$.G(436105, J$.R(436097, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(436121, J$.R(436113, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(436161, J$.R(436129, 'MongoError', MongoError, false, true), 'create', false)(J$.T(436153, {
                                                            message: J$.T(436137, 'Cursor is closed', 21, false),
                                                            driver: J$.T(436145, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(27656, J$.B(27330, '===', J$.M(436185, J$.R(436169, 'fields', fields, false, true), 'indexOf', false)(J$.R(436177, 'field', field, false, false)), J$.U(27322, '-', J$.T(436193, 1, 22, false))))) {
                                                        throw J$.M(436273, J$.R(436201, 'MongoError', MongoError, false, true), 'create', false)(J$.T(436265, {
                                                            message: J$.M(436249, J$.M(436233, J$.T(436209, 'option ', 21, false), 'concat', false)(J$.R(436217, 'field', field, false, false), J$.T(436225, ' is not a supported option ', 21, false)), 'concat', false)(J$.R(436241, 'fields', fields, false, true)),
                                                            driver: J$.T(436257, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(436313, J$.G(436289, J$.R(436281, 'this', this, false, false), 's'), J$.R(436297, 'field', field, false, false), J$.R(436305, 'value', value, false, false));
                                                    if (J$.C(27664, J$.B(27338, '===', J$.R(436321, 'field', field, false, false), J$.T(436329, 'numberOfRetries', 21, false))))
                                                        J$.P(436361, J$.G(436345, J$.R(436337, 'this', this, false, false), 's'), 'currentNumberOfRetries', J$.R(436353, 'value', value, false, false));
                                                    return J$.Rt(436377, J$.R(436369, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445705, J$e);
                                                } finally {
                                                    if (J$.Fr(445713))
                                                        continue jalangiLabel28;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(436865, {
                                    key: J$.T(436433, 'addCursorFlag', 21, false),
                                    value: J$.T(436857, function addCursorFlag(flag, value) {
                                        jalangiLabel29:
                                            while (true) {
                                                try {
                                                    J$.Fe(436825, arguments.callee, this, arguments);
                                                    arguments = J$.N(436833, 'arguments', arguments, true, false, false);
                                                    flag = J$.N(436841, 'flag', flag, true, false, false);
                                                    value = J$.N(436849, 'value', value, true, false, false);
                                                    if (J$.C(27688, J$.C(27680, J$.C(27672, J$.B(27346, '===', J$.G(436457, J$.G(436449, J$.R(436441, 'this', this, false, false), 's'), 'state'), J$.G(436473, J$.R(436465, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27354, '===', J$.G(436497, J$.G(436489, J$.R(436481, 'this', this, false, false), 's'), 'state'), J$.G(436513, J$.R(436505, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(436529, J$.R(436521, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(436569, J$.R(436537, 'MongoError', MongoError, false, true), 'create', false)(J$.T(436561, {
                                                            message: J$.T(436545, 'Cursor is closed', 21, false),
                                                            driver: J$.T(436553, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(27696, J$.B(27370, '===', J$.M(436593, J$.R(436577, 'flags', flags, false, true), 'indexOf', false)(J$.R(436585, 'flag', flag, false, false)), J$.U(27362, '-', J$.T(436601, 1, 22, false))))) {
                                                        throw J$.M(436681, J$.R(436609, 'MongoError', MongoError, false, true), 'create', false)(J$.T(436673, {
                                                            message: J$.M(436657, J$.M(436641, J$.T(436617, 'flag ', 21, false), 'concat', false)(J$.R(436625, 'flag', flag, false, false), J$.T(436633, ' is not a supported flag ', 21, false)), 'concat', false)(J$.R(436649, 'flags', flags, false, true)),
                                                            driver: J$.T(436665, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(27704, J$.B(27386, '!==', J$.U(27378, 'typeof', J$.R(436689, 'value', value, false, false)), J$.T(436697, 'boolean', 21, false)))) {
                                                        throw J$.M(436761, J$.R(436705, 'MongoError', MongoError, false, true), 'create', false)(J$.T(436753, {
                                                            message: J$.M(436737, J$.T(436713, 'flag ', 21, false), 'concat', false)(J$.R(436721, 'flag', flag, false, false), J$.T(436729, ' must be a boolean value', 21, false)),
                                                            driver: J$.T(436745, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(436801, J$.G(436777, J$.R(436769, 'this', this, false, false), 'cmd'), J$.R(436785, 'flag', flag, false, false), J$.R(436793, 'value', value, false, false));
                                                    return J$.Rt(436817, J$.R(436809, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445721, J$e);
                                                } finally {
                                                    if (J$.Fr(445729))
                                                        continue jalangiLabel29;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(437321, {
                                    key: J$.T(436873, 'addQueryModifier', 21, false),
                                    value: J$.T(437313, function addQueryModifier(name, value) {
                                        jalangiLabel30:
                                            while (true) {
                                                try {
                                                    J$.Fe(437273, arguments.callee, this, arguments);
                                                    arguments = J$.N(437281, 'arguments', arguments, true, false, false);
                                                    name = J$.N(437289, 'name', name, true, false, false);
                                                    value = J$.N(437297, 'value', value, true, false, false);
                                                    J$.N(437305, 'field', field, false, false, false);
                                                    if (J$.C(27728, J$.C(27720, J$.C(27712, J$.B(27394, '===', J$.G(436897, J$.G(436889, J$.R(436881, 'this', this, false, false), 's'), 'state'), J$.G(436913, J$.R(436905, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27402, '===', J$.G(436937, J$.G(436929, J$.R(436921, 'this', this, false, false), 's'), 'state'), J$.G(436953, J$.R(436945, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(436969, J$.R(436961, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(437009, J$.R(436977, 'MongoError', MongoError, false, true), 'create', false)(J$.T(437001, {
                                                            message: J$.T(436985, 'Cursor is closed', 21, false),
                                                            driver: J$.T(436993, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(27736, J$.B(27410, '!==', J$.G(437033, J$.R(437017, 'name', name, false, false), J$.T(437025, 0, 22, false)), J$.T(437041, '$', 21, false)))) {
                                                        throw J$.M(437105, J$.R(437049, 'MongoError', MongoError, false, true), 'create', false)(J$.T(437097, {
                                                            message: J$.M(437081, J$.T(437057, '', 21, false), 'concat', false)(J$.R(437065, 'name', name, false, false), J$.T(437073, ' is not a valid query modifier', 21, false)),
                                                            driver: J$.T(437089, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    var field = J$.W(437137, 'field', J$.M(437129, J$.R(437113, 'name', name, false, false), 'substr', false)(J$.T(437121, 1, 22, false)), field, false, false);
                                                    J$.P(437177, J$.G(437153, J$.R(437145, 'this', this, false, false), 'cmd'), J$.R(437161, 'field', field, false, false), J$.R(437169, 'value', value, false, false));
                                                    if (J$.C(27744, J$.B(27418, '===', J$.R(437185, 'field', field, false, false), J$.T(437193, 'orderby', 21, false))))
                                                        J$.P(437249, J$.G(437209, J$.R(437201, 'this', this, false, false), 'cmd'), 'sort', J$.G(437241, J$.G(437225, J$.R(437217, 'this', this, false, false), 'cmd'), J$.R(437233, 'field', field, false, false)));
                                                    return J$.Rt(437265, J$.R(437257, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445737, J$e);
                                                } finally {
                                                    if (J$.Fr(445745))
                                                        continue jalangiLabel30;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(437553, {
                                    key: J$.T(437329, 'comment', 21, false),
                                    value: J$.T(437545, function comment(value) {
                                        jalangiLabel31:
                                            while (true) {
                                                try {
                                                    J$.Fe(437521, arguments.callee, this, arguments);
                                                    arguments = J$.N(437529, 'arguments', arguments, true, false, false);
                                                    value = J$.N(437537, 'value', value, true, false, false);
                                                    if (J$.C(27768, J$.C(27760, J$.C(27752, J$.B(27426, '===', J$.G(437353, J$.G(437345, J$.R(437337, 'this', this, false, false), 's'), 'state'), J$.G(437369, J$.R(437361, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27434, '===', J$.G(437393, J$.G(437385, J$.R(437377, 'this', this, false, false), 's'), 'state'), J$.G(437409, J$.R(437401, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(437425, J$.R(437417, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(437465, J$.R(437433, 'MongoError', MongoError, false, true), 'create', false)(J$.T(437457, {
                                                            message: J$.T(437441, 'Cursor is closed', 21, false),
                                                            driver: J$.T(437449, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(437497, J$.G(437481, J$.R(437473, 'this', this, false, false), 'cmd'), 'comment', J$.R(437489, 'value', value, false, false));
                                                    return J$.Rt(437513, J$.R(437505, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445753, J$e);
                                                } finally {
                                                    if (J$.Fr(445761))
                                                        continue jalangiLabel31;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(437841, {
                                    key: J$.T(437561, 'maxAwaitTimeMS', 21, false),
                                    value: J$.T(437833, function maxAwaitTimeMS(value) {
                                        jalangiLabel32:
                                            while (true) {
                                                try {
                                                    J$.Fe(437809, arguments.callee, this, arguments);
                                                    arguments = J$.N(437817, 'arguments', arguments, true, false, false);
                                                    value = J$.N(437825, 'value', value, true, false, false);
                                                    if (J$.C(27776, J$.B(27450, '!==', J$.U(27442, 'typeof', J$.R(437569, 'value', value, false, false)), J$.T(437577, 'number', 21, false)))) {
                                                        throw J$.M(437617, J$.R(437585, 'MongoError', MongoError, false, true), 'create', false)(J$.T(437609, {
                                                            message: J$.T(437593, 'maxAwaitTimeMS must be a number', 21, false),
                                                            driver: J$.T(437601, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(27800, J$.C(27792, J$.C(27784, J$.B(27458, '===', J$.G(437641, J$.G(437633, J$.R(437625, 'this', this, false, false), 's'), 'state'), J$.G(437657, J$.R(437649, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27466, '===', J$.G(437681, J$.G(437673, J$.R(437665, 'this', this, false, false), 's'), 'state'), J$.G(437697, J$.R(437689, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(437713, J$.R(437705, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(437753, J$.R(437721, 'MongoError', MongoError, false, true), 'create', false)(J$.T(437745, {
                                                            message: J$.T(437729, 'Cursor is closed', 21, false),
                                                            driver: J$.T(437737, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(437785, J$.G(437769, J$.R(437761, 'this', this, false, false), 'cmd'), 'maxAwaitTimeMS', J$.R(437777, 'value', value, false, false));
                                                    return J$.Rt(437801, J$.R(437793, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445769, J$e);
                                                } finally {
                                                    if (J$.Fr(445777))
                                                        continue jalangiLabel32;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(438129, {
                                    key: J$.T(437849, 'maxTimeMS', 21, false),
                                    value: J$.T(438121, function maxTimeMS(value) {
                                        jalangiLabel33:
                                            while (true) {
                                                try {
                                                    J$.Fe(438097, arguments.callee, this, arguments);
                                                    arguments = J$.N(438105, 'arguments', arguments, true, false, false);
                                                    value = J$.N(438113, 'value', value, true, false, false);
                                                    if (J$.C(27808, J$.B(27482, '!==', J$.U(27474, 'typeof', J$.R(437857, 'value', value, false, false)), J$.T(437865, 'number', 21, false)))) {
                                                        throw J$.M(437905, J$.R(437873, 'MongoError', MongoError, false, true), 'create', false)(J$.T(437897, {
                                                            message: J$.T(437881, 'maxTimeMS must be a number', 21, false),
                                                            driver: J$.T(437889, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(27832, J$.C(27824, J$.C(27816, J$.B(27490, '===', J$.G(437929, J$.G(437921, J$.R(437913, 'this', this, false, false), 's'), 'state'), J$.G(437945, J$.R(437937, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27498, '===', J$.G(437969, J$.G(437961, J$.R(437953, 'this', this, false, false), 's'), 'state'), J$.G(437985, J$.R(437977, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(438001, J$.R(437993, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(438041, J$.R(438009, 'MongoError', MongoError, false, true), 'create', false)(J$.T(438033, {
                                                            message: J$.T(438017, 'Cursor is closed', 21, false),
                                                            driver: J$.T(438025, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(438073, J$.G(438057, J$.R(438049, 'this', this, false, false), 'cmd'), 'maxTimeMS', J$.R(438065, 'value', value, false, false));
                                                    return J$.Rt(438089, J$.R(438081, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445785, J$e);
                                                } finally {
                                                    if (J$.Fr(445793))
                                                        continue jalangiLabel33;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(438361, {
                                    key: J$.T(438137, 'project', 21, false),
                                    value: J$.T(438353, function project(value) {
                                        jalangiLabel34:
                                            while (true) {
                                                try {
                                                    J$.Fe(438329, arguments.callee, this, arguments);
                                                    arguments = J$.N(438337, 'arguments', arguments, true, false, false);
                                                    value = J$.N(438345, 'value', value, true, false, false);
                                                    if (J$.C(27856, J$.C(27848, J$.C(27840, J$.B(27506, '===', J$.G(438161, J$.G(438153, J$.R(438145, 'this', this, false, false), 's'), 'state'), J$.G(438177, J$.R(438169, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27514, '===', J$.G(438201, J$.G(438193, J$.R(438185, 'this', this, false, false), 's'), 'state'), J$.G(438217, J$.R(438209, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(438233, J$.R(438225, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(438273, J$.R(438241, 'MongoError', MongoError, false, true), 'create', false)(J$.T(438265, {
                                                            message: J$.T(438249, 'Cursor is closed', 21, false),
                                                            driver: J$.T(438257, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(438305, J$.G(438289, J$.R(438281, 'this', this, false, false), 'cmd'), 'fields', J$.R(438297, 'value', value, false, false));
                                                    return J$.Rt(438321, J$.R(438313, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445801, J$e);
                                                } finally {
                                                    if (J$.Fr(445809))
                                                        continue jalangiLabel34;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(439249, {
                                    key: J$.T(438369, 'sort', 21, false),
                                    value: J$.T(439241, function sort(keyOrList, direction) {
                                        jalangiLabel36:
                                            while (true) {
                                                try {
                                                    J$.Fe(439201, arguments.callee, this, arguments);
                                                    arguments = J$.N(439209, 'arguments', arguments, true, false, false);
                                                    keyOrList = J$.N(439217, 'keyOrList', keyOrList, true, false, false);
                                                    direction = J$.N(439225, 'direction', direction, true, false, false);
                                                    J$.N(439233, 'order', order, false, false, false);
                                                    if (J$.C(27864, J$.G(438393, J$.G(438385, J$.R(438377, 'this', this, false, false), 'options'), 'tailable'))) {
                                                        throw J$.M(438433, J$.R(438401, 'MongoError', MongoError, false, true), 'create', false)(J$.T(438425, {
                                                            message: J$.T(438409, 'Tailable cursor doesn\'t support sorting', 21, false),
                                                            driver: J$.T(438417, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(27888, J$.C(27880, J$.C(27872, J$.B(27522, '===', J$.G(438457, J$.G(438449, J$.R(438441, 'this', this, false, false), 's'), 'state'), J$.G(438473, J$.R(438465, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.B(27530, '===', J$.G(438497, J$.G(438489, J$.R(438481, 'this', this, false, false), 's'), 'state'), J$.G(438513, J$.R(438505, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.M(438529, J$.R(438521, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(438569, J$.R(438537, 'MongoError', MongoError, false, true), 'create', false)(J$.T(438561, {
                                                            message: J$.T(438545, 'Cursor is closed', 21, false),
                                                            driver: J$.T(438553, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    var order = J$.W(438585, 'order', J$.R(438577, 'keyOrList', keyOrList, false, false), order, false, false);
                                                    if (J$.C(27944, J$.C(27896, J$.M(438609, J$.I(typeof Array === 'undefined' ? Array = J$.R(438593, 'Array', undefined, true, true) : Array = J$.R(438593, 'Array', Array, true, true)), 'isArray', false)(J$.R(438601, 'order', order, false, false))) ? J$.M(438649, J$.I(typeof Array === 'undefined' ? Array = J$.R(438617, 'Array', undefined, true, true) : Array = J$.R(438617, 'Array', Array, true, true)), 'isArray', false)(J$.G(438641, J$.R(438625, 'order', order, false, false), J$.T(438633, 0, 22, false))) : J$._())) {
                                                        order = J$.W(439089, 'order', J$.F(439081, J$.R(438657, 'Map', Map, false, true), true)(J$.M(439073, J$.R(438665, 'order', order, false, false), 'map', false)(J$.T(439065, function (x) {
                                                            jalangiLabel35:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(439033, arguments.callee, this, arguments);
                                                                        arguments = J$.N(439041, 'arguments', arguments, true, false, false);
                                                                        x = J$.N(439049, 'x', x, true, false, false);
                                                                        J$.N(439057, 'value', value, false, false, false);
                                                                        var value = J$.W(438713, 'value', J$.T(438705, [
                                                                            J$.G(438689, J$.R(438673, 'x', x, false, false), J$.T(438681, 0, 22, false)),
                                                                            J$.T(438697, null, 25, false)
                                                                        ], 10, false), value, false, false);
                                                                        if (J$.C(27936, J$.B(27538, '===', J$.G(438737, J$.R(438721, 'x', x, false, false), J$.T(438729, 1, 22, false)), J$.T(438745, 'asc', 21, false)))) {
                                                                            J$.P(438777, J$.R(438753, 'value', value, false, false), J$.T(438761, 1, 22, false), J$.T(438769, 1, 22, false));
                                                                        } else if (J$.C(27928, J$.B(27546, '===', J$.G(438801, J$.R(438785, 'x', x, false, false), J$.T(438793, 1, 22, false)), J$.T(438809, 'desc', 21, false)))) {
                                                                            J$.P(438841, J$.R(438817, 'value', value, false, false), J$.T(438825, 1, 22, false), J$.U(27554, '-', J$.T(438833, 1, 22, false)));
                                                                        } else if (J$.C(27920, J$.C(27912, J$.C(27904, J$.B(27562, '===', J$.G(438865, J$.R(438849, 'x', x, false, false), J$.T(438857, 1, 22, false)), J$.T(438873, 1, 22, false))) ? J$._() : J$.B(27578, '===', J$.G(438897, J$.R(438881, 'x', x, false, false), J$.T(438889, 1, 22, false)), J$.U(27570, '-', J$.T(438905, 1, 22, false)))) ? J$._() : J$.G(438937, J$.G(438929, J$.R(438913, 'x', x, false, false), J$.T(438921, 1, 22, false)), '$meta'))) {
                                                                            J$.P(438985, J$.R(438945, 'value', value, false, false), J$.T(438953, 1, 22, false), J$.G(438977, J$.R(438961, 'x', x, false, false), J$.T(438969, 1, 22, false)));
                                                                        } else {
                                                                            throw J$.F(439009, J$.R(438993, 'MongoError', MongoError, false, true), true)(J$.T(439001, 'Illegal sort clause, must be of the form [[\'field1\', \'(ascending|descending)\'], [\'field2\', \'(ascending|descending)\']]', 21, false));
                                                                        }
                                                                        return J$.Rt(439025, J$.R(439017, 'value', value, false, false));
                                                                    } catch (J$e) {
                                                                        J$.Ex(445817, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(445825))
                                                                            continue jalangiLabel35;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false))), order, false, false);
                                                    }
                                                    if (J$.C(27952, J$.B(27586, '!=', J$.R(439097, 'direction', direction, false, false), J$.T(439105, null, 25, false)))) {
                                                        order = J$.W(439145, 'order', J$.T(439137, [J$.T(439129, [
                                                                J$.R(439113, 'keyOrList', keyOrList, false, false),
                                                                J$.R(439121, 'direction', direction, false, false)
                                                            ], 10, false)], 10, false), order, false, false);
                                                    }
                                                    J$.P(439177, J$.G(439161, J$.R(439153, 'this', this, false, false), 'cmd'), 'sort', J$.R(439169, 'order', order, false, false));
                                                    return J$.Rt(439193, J$.R(439185, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445833, J$e);
                                                } finally {
                                                    if (J$.Fr(445841))
                                                        continue jalangiLabel36;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(439585, {
                                    key: J$.T(439257, 'batchSize', 21, false),
                                    value: J$.T(439577, function batchSize(value) {
                                        jalangiLabel37:
                                            while (true) {
                                                try {
                                                    J$.Fe(439553, arguments.callee, this, arguments);
                                                    arguments = J$.N(439561, 'arguments', arguments, true, false, false);
                                                    value = J$.N(439569, 'value', value, true, false, false);
                                                    if (J$.C(27960, J$.G(439281, J$.G(439273, J$.R(439265, 'this', this, false, false), 'options'), 'tailable'))) {
                                                        throw J$.M(439321, J$.R(439289, 'MongoError', MongoError, false, true), 'create', false)(J$.T(439313, {
                                                            message: J$.T(439297, 'Tailable cursor doesn\'t support batchSize', 21, false),
                                                            driver: J$.T(439305, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(27976, J$.C(27968, J$.B(27594, '===', J$.G(439345, J$.G(439337, J$.R(439329, 'this', this, false, false), 's'), 'state'), J$.G(439361, J$.R(439353, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.M(439377, J$.R(439369, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(439417, J$.R(439385, 'MongoError', MongoError, false, true), 'create', false)(J$.T(439409, {
                                                            message: J$.T(439393, 'Cursor is closed', 21, false),
                                                            driver: J$.T(439401, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(27984, J$.B(27610, '!==', J$.U(27602, 'typeof', J$.R(439425, 'value', value, false, false)), J$.T(439433, 'number', 21, false)))) {
                                                        throw J$.M(439473, J$.R(439441, 'MongoError', MongoError, false, true), 'create', false)(J$.T(439465, {
                                                            message: J$.T(439449, 'batchSize requires an integer', 21, false),
                                                            driver: J$.T(439457, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(439505, J$.G(439489, J$.R(439481, 'this', this, false, false), 'cmd'), 'batchSize', J$.R(439497, 'value', value, false, false));
                                                    J$.M(439529, J$.R(439513, 'this', this, false, false), 'setCursorBatchSize', false)(J$.R(439521, 'value', value, false, false));
                                                    return J$.Rt(439545, J$.R(439537, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445849, J$e);
                                                } finally {
                                                    if (J$.Fr(445857))
                                                        continue jalangiLabel37;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(439681, {
                                    key: J$.T(439593, 'collation', 21, false),
                                    value: J$.T(439673, function collation(value) {
                                        jalangiLabel38:
                                            while (true) {
                                                try {
                                                    J$.Fe(439649, arguments.callee, this, arguments);
                                                    arguments = J$.N(439657, 'arguments', arguments, true, false, false);
                                                    value = J$.N(439665, 'value', value, true, false, false);
                                                    J$.P(439625, J$.G(439609, J$.R(439601, 'this', this, false, false), 'cmd'), 'collation', J$.R(439617, 'value', value, false, false));
                                                    return J$.Rt(439641, J$.R(439633, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445865, J$e);
                                                } finally {
                                                    if (J$.Fr(445873))
                                                        continue jalangiLabel38;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(440057, {
                                    key: J$.T(439689, 'limit', 21, false),
                                    value: J$.T(440049, function limit(value) {
                                        jalangiLabel39:
                                            while (true) {
                                                try {
                                                    J$.Fe(440025, arguments.callee, this, arguments);
                                                    arguments = J$.N(440033, 'arguments', arguments, true, false, false);
                                                    value = J$.N(440041, 'value', value, true, false, false);
                                                    if (J$.C(27992, J$.G(439713, J$.G(439705, J$.R(439697, 'this', this, false, false), 'options'), 'tailable'))) {
                                                        throw J$.M(439753, J$.R(439721, 'MongoError', MongoError, false, true), 'create', false)(J$.T(439745, {
                                                            message: J$.T(439729, 'Tailable cursor doesn\'t support limit', 21, false),
                                                            driver: J$.T(439737, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(28016, J$.C(28008, J$.C(28000, J$.B(27618, '===', J$.G(439777, J$.G(439769, J$.R(439761, 'this', this, false, false), 's'), 'state'), J$.G(439793, J$.R(439785, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.B(27626, '===', J$.G(439817, J$.G(439809, J$.R(439801, 'this', this, false, false), 's'), 'state'), J$.G(439833, J$.R(439825, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.M(439849, J$.R(439841, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(439889, J$.R(439857, 'MongoError', MongoError, false, true), 'create', false)(J$.T(439881, {
                                                            message: J$.T(439865, 'Cursor is closed', 21, false),
                                                            driver: J$.T(439873, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(28024, J$.B(27642, '!==', J$.U(27634, 'typeof', J$.R(439897, 'value', value, false, false)), J$.T(439905, 'number', 21, false)))) {
                                                        throw J$.M(439945, J$.R(439913, 'MongoError', MongoError, false, true), 'create', false)(J$.T(439937, {
                                                            message: J$.T(439921, 'limit requires an integer', 21, false),
                                                            driver: J$.T(439929, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(439977, J$.G(439961, J$.R(439953, 'this', this, false, false), 'cmd'), 'limit', J$.R(439969, 'value', value, false, false));
                                                    J$.M(440001, J$.R(439985, 'this', this, false, false), 'setCursorLimit', false)(J$.R(439993, 'value', value, false, false));
                                                    return J$.Rt(440017, J$.R(440009, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445881, J$e);
                                                } finally {
                                                    if (J$.Fr(445889))
                                                        continue jalangiLabel39;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(440433, {
                                    key: J$.T(440065, 'skip', 21, false),
                                    value: J$.T(440425, function skip(value) {
                                        jalangiLabel40:
                                            while (true) {
                                                try {
                                                    J$.Fe(440401, arguments.callee, this, arguments);
                                                    arguments = J$.N(440409, 'arguments', arguments, true, false, false);
                                                    value = J$.N(440417, 'value', value, true, false, false);
                                                    if (J$.C(28032, J$.G(440089, J$.G(440081, J$.R(440073, 'this', this, false, false), 'options'), 'tailable'))) {
                                                        throw J$.M(440129, J$.R(440097, 'MongoError', MongoError, false, true), 'create', false)(J$.T(440121, {
                                                            message: J$.T(440105, 'Tailable cursor doesn\'t support skip', 21, false),
                                                            driver: J$.T(440113, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(28056, J$.C(28048, J$.C(28040, J$.B(27650, '===', J$.G(440153, J$.G(440145, J$.R(440137, 'this', this, false, false), 's'), 'state'), J$.G(440169, J$.R(440161, 'CursorState', CursorState, false, true), 'OPEN'))) ? J$._() : J$.B(27658, '===', J$.G(440193, J$.G(440185, J$.R(440177, 'this', this, false, false), 's'), 'state'), J$.G(440209, J$.R(440201, 'CursorState', CursorState, false, true), 'CLOSED'))) ? J$._() : J$.M(440225, J$.R(440217, 'this', this, false, false), 'isDead', false)())) {
                                                        throw J$.M(440265, J$.R(440233, 'MongoError', MongoError, false, true), 'create', false)(J$.T(440257, {
                                                            message: J$.T(440241, 'Cursor is closed', 21, false),
                                                            driver: J$.T(440249, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(28064, J$.B(27674, '!==', J$.U(27666, 'typeof', J$.R(440273, 'value', value, false, false)), J$.T(440281, 'number', 21, false)))) {
                                                        throw J$.M(440321, J$.R(440289, 'MongoError', MongoError, false, true), 'create', false)(J$.T(440313, {
                                                            message: J$.T(440297, 'skip requires an integer', 21, false),
                                                            driver: J$.T(440305, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    J$.P(440353, J$.G(440337, J$.R(440329, 'this', this, false, false), 'cmd'), 'skip', J$.R(440345, 'value', value, false, false));
                                                    J$.M(440377, J$.R(440361, 'this', this, false, false), 'setCursorSkip', false)(J$.R(440369, 'value', value, false, false));
                                                    return J$.Rt(440393, J$.R(440385, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445897, J$e);
                                                } finally {
                                                    if (J$.Fr(445905))
                                                        continue jalangiLabel40;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(440569, {
                                    key: J$.T(440441, 'each', 21, false),
                                    value: J$.T(440561, function each(callback) {
                                        jalangiLabel41:
                                            while (true) {
                                                try {
                                                    J$.Fe(440537, arguments.callee, this, arguments);
                                                    arguments = J$.N(440545, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(440553, 'callback', callback, true, false, false);
                                                    J$.M(440457, J$.R(440449, 'this', this, false, false), 'rewind', false)();
                                                    J$.P(440497, J$.G(440473, J$.R(440465, 'this', this, false, false), 's'), 'state', J$.G(440489, J$.R(440481, 'CursorState', CursorState, false, true), 'INIT'));
                                                    J$.F(440529, J$.R(440505, '_each', _each, false, true), false)(J$.R(440513, 'this', this, false, false), J$.R(440521, 'callback', callback, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445913, J$e);
                                                } finally {
                                                    if (J$.Fr(445921))
                                                        continue jalangiLabel41;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(441273, {
                                    key: J$.T(440577, 'forEach', 21, false),
                                    value: J$.T(441265, function forEach(iterator, callback) {
                                        jalangiLabel45:
                                            while (true) {
                                                try {
                                                    J$.Fe(441225, arguments.callee, this, arguments);
                                                    arguments = J$.N(441233, 'arguments', arguments, true, false, false);
                                                    iterator = J$.N(441241, 'iterator', iterator, true, false, false);
                                                    callback = J$.N(441249, 'callback', callback, true, false, false);
                                                    J$.N(441257, '_this2', _this2, false, false, false);
                                                    var _this2 = J$.W(440593, '_this2', J$.R(440585, 'this', this, false, false), _this2, false, false);
                                                    J$.M(440609, J$.R(440601, 'this', this, false, false), 'rewind', false)();
                                                    J$.P(440649, J$.G(440625, J$.R(440617, 'this', this, false, false), 's'), 'state', J$.G(440641, J$.R(440633, 'CursorState', CursorState, false, true), 'INIT'));
                                                    if (J$.C(28120, J$.B(27690, '===', J$.U(27682, 'typeof', J$.R(440657, 'callback', callback, false, false)), J$.T(440665, 'function', 21, false)))) {
                                                        J$.F(440937, J$.R(440673, '_each', _each, false, true), false)(J$.R(440681, 'this', this, false, false), J$.T(440929, function (err, doc) {
                                                            jalangiLabel42:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(440889, arguments.callee, this, arguments);
                                                                        arguments = J$.N(440897, 'arguments', arguments, true, false, false);
                                                                        err = J$.N(440905, 'err', err, true, false, false);
                                                                        doc = J$.N(440913, 'doc', doc, true, false, false);
                                                                        J$.N(440921, 'internalCallback', internalCallback, false, false, false);
                                                                        if (J$.C(28072, J$.R(440689, 'err', err, false, false))) {
                                                                            J$.F(440713, J$.R(440697, 'callback', callback, false, false), false)(J$.R(440705, 'err', err, false, false));
                                                                            return J$.Rt(440729, J$.T(440721, false, 23, false));
                                                                        }
                                                                        if (J$.C(28080, J$.B(27698, '!=', J$.R(440737, 'doc', doc, false, false), J$.T(440745, null, 25, false)))) {
                                                                            J$.F(440769, J$.R(440753, 'iterator', iterator, false, false), false)(J$.R(440761, 'doc', doc, false, false));
                                                                            return J$.Rt(440785, J$.T(440777, true, 23, false));
                                                                        }
                                                                        if (J$.C(28096, J$.C(28088, J$.B(27706, '==', J$.R(440793, 'doc', doc, false, false), J$.T(440801, null, 25, false))) ? J$.R(440809, 'callback', callback, false, false) : J$._())) {
                                                                            var internalCallback = J$.W(440825, 'internalCallback', J$.R(440817, 'callback', callback, false, false), internalCallback, false, false);
                                                                            callback = J$.W(440841, 'callback', J$.T(440833, null, 25, false), callback, false, false);
                                                                            J$.F(440865, J$.R(440849, 'internalCallback', internalCallback, false, false), false)(J$.T(440857, null, 25, false));
                                                                            return J$.Rt(440881, J$.T(440873, false, 23, false));
                                                                        }
                                                                    } catch (J$e) {
                                                                        J$.Ex(445929, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(445937))
                                                                            continue jalangiLabel42;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false));
                                                    } else {
                                                        return J$.Rt(441217, J$.M(441209, J$.G(440953, J$.R(440945, 'this', this, false, false), 's'), 'promiseLibrary', true)(J$.T(441201, function (fulfill, reject) {
                                                            jalangiLabel44:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(441169, arguments.callee, this, arguments);
                                                                        arguments = J$.N(441177, 'arguments', arguments, true, false, false);
                                                                        fulfill = J$.N(441185, 'fulfill', fulfill, true, false, false);
                                                                        reject = J$.N(441193, 'reject', reject, true, false, false);
                                                                        J$.F(441161, J$.R(440961, '_each', _each, false, true), false)(J$.R(440969, '_this2', _this2, false, false), J$.T(441153, function (err, doc) {
                                                                            jalangiLabel43:
                                                                                while (true) {
                                                                                    try {
                                                                                        J$.Fe(441121, arguments.callee, this, arguments);
                                                                                        arguments = J$.N(441129, 'arguments', arguments, true, false, false);
                                                                                        err = J$.N(441137, 'err', err, true, false, false);
                                                                                        doc = J$.N(441145, 'doc', doc, true, false, false);
                                                                                        if (J$.C(28112, J$.R(440977, 'err', err, false, false))) {
                                                                                            J$.F(441001, J$.R(440985, 'reject', reject, false, false), false)(J$.R(440993, 'err', err, false, false));
                                                                                            return J$.Rt(441017, J$.T(441009, false, 23, false));
                                                                                        } else if (J$.C(28104, J$.B(27714, '==', J$.R(441025, 'doc', doc, false, false), J$.T(441033, null, 25, false)))) {
                                                                                            J$.F(441057, J$.R(441041, 'fulfill', fulfill, false, false), false)(J$.T(441049, null, 25, false));
                                                                                            return J$.Rt(441073, J$.T(441065, false, 23, false));
                                                                                        } else {
                                                                                            J$.F(441097, J$.R(441081, 'iterator', iterator, false, false), false)(J$.R(441089, 'doc', doc, false, false));
                                                                                            return J$.Rt(441113, J$.T(441105, true, 23, false));
                                                                                        }
                                                                                    } catch (J$e) {
                                                                                        J$.Ex(445945, J$e);
                                                                                    } finally {
                                                                                        if (J$.Fr(445953))
                                                                                            continue jalangiLabel43;
                                                                                        else
                                                                                            return J$.Ra();
                                                                                    }
                                                                                }
                                                                        }, 12, false));
                                                                    } catch (J$e) {
                                                                        J$.Ex(445961, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(445969))
                                                                            continue jalangiLabel44;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(445977, J$e);
                                                } finally {
                                                    if (J$.Fr(445985))
                                                        continue jalangiLabel45;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(441561, {
                                    key: J$.T(441281, 'setReadPreference', 21, false),
                                    value: J$.T(441553, function setReadPreference(readPreference) {
                                        jalangiLabel46:
                                            while (true) {
                                                try {
                                                    J$.Fe(441529, arguments.callee, this, arguments);
                                                    arguments = J$.N(441537, 'arguments', arguments, true, false, false);
                                                    readPreference = J$.N(441545, 'readPreference', readPreference, true, false, false);
                                                    if (J$.C(28128, J$.B(27722, '!==', J$.G(441305, J$.G(441297, J$.R(441289, 'this', this, false, false), 's'), 'state'), J$.G(441321, J$.R(441313, 'CursorState', CursorState, false, true), 'INIT')))) {
                                                        throw J$.M(441361, J$.R(441329, 'MongoError', MongoError, false, true), 'create', false)(J$.T(441353, {
                                                            message: J$.T(441337, 'cannot change cursor readPreference after cursor has been accessed', 21, false),
                                                            driver: J$.T(441345, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    if (J$.C(28144, J$.B(27730, 'instanceof', J$.R(441369, 'readPreference', readPreference, false, false), J$.R(441377, 'ReadPreference', ReadPreference, false, true)))) {
                                                        J$.P(441409, J$.G(441393, J$.R(441385, 'this', this, false, false), 'options'), 'readPreference', J$.R(441401, 'readPreference', readPreference, false, false));
                                                    } else if (J$.C(28136, J$.B(27746, '===', J$.U(27738, 'typeof', J$.R(441417, 'readPreference', readPreference, false, false)), J$.T(441425, 'string', 21, false)))) {
                                                        J$.P(441473, J$.G(441441, J$.R(441433, 'this', this, false, false), 'options'), 'readPreference', J$.F(441465, J$.R(441449, 'ReadPreference', ReadPreference, false, true), true)(J$.R(441457, 'readPreference', readPreference, false, false)));
                                                    } else {
                                                        throw J$.F(441505, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(441481, 'TypeError', undefined, true, true) : TypeError = J$.R(441481, 'TypeError', TypeError, true, true)), true)(J$.B(27754, '+', J$.T(441489, 'Invalid read preference: ', 21, false), J$.R(441497, 'readPreference', readPreference, false, false)));
                                                    }
                                                    return J$.Rt(441521, J$.R(441513, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(445993, J$e);
                                                } finally {
                                                    if (J$.Fr(446001))
                                                        continue jalangiLabel46;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(441769, {
                                    key: J$.T(441569, 'toArray', 21, false),
                                    value: J$.T(441761, function toArray(callback) {
                                        jalangiLabel47:
                                            while (true) {
                                                try {
                                                    J$.Fe(441729, arguments.callee, this, arguments);
                                                    arguments = J$.N(441737, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(441745, 'callback', callback, true, false, false);
                                                    J$.N(441753, 'toArrayOperation', toArrayOperation, false, false, false);
                                                    if (J$.C(28152, J$.G(441593, J$.G(441585, J$.R(441577, 'this', this, false, false), 'options'), 'tailable'))) {
                                                        throw J$.M(441633, J$.R(441601, 'MongoError', MongoError, false, true), 'create', false)(J$.T(441625, {
                                                            message: J$.T(441609, 'Tailable cursor cannot be converted to array', 21, false),
                                                            driver: J$.T(441617, true, 23, false)
                                                        }, 11, false));
                                                    }
                                                    var toArrayOperation = J$.W(441665, 'toArrayOperation', J$.F(441657, J$.R(441641, 'ToArrayOperation', ToArrayOperation, false, true), true)(J$.R(441649, 'this', this, false, false)), toArrayOperation, false, false);
                                                    return J$.Rt(441721, J$.F(441713, J$.R(441673, 'executeOperation', executeOperation, false, true), false)(J$.G(441689, J$.R(441681, 'this', this, false, false), 'topology'), J$.R(441697, 'toArrayOperation', toArrayOperation, false, false), J$.R(441705, 'callback', callback, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(446009, J$e);
                                                } finally {
                                                    if (J$.Fr(446017))
                                                        continue jalangiLabel47;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(442233, {
                                    key: J$.T(441777, 'count', 21, false),
                                    value: J$.T(442225, function count(applySkipLimit, opts, callback) {
                                        jalangiLabel48:
                                            while (true) {
                                                try {
                                                    J$.Fe(442177, arguments.callee, this, arguments);
                                                    arguments = J$.N(442185, 'arguments', arguments, true, false, false);
                                                    applySkipLimit = J$.N(442193, 'applySkipLimit', applySkipLimit, true, false, false);
                                                    opts = J$.N(442201, 'opts', opts, true, false, false);
                                                    callback = J$.N(442209, 'callback', callback, true, false, false);
                                                    J$.N(442217, 'countOperation', countOperation, false, false, false);
                                                    if (J$.C(28160, J$.B(27762, '==', J$.G(441801, J$.G(441793, J$.R(441785, 'this', this, false, false), 'cmd'), 'query'), J$.T(441809, null, 25, false))))
                                                        throw J$.M(441849, J$.R(441817, 'MongoError', MongoError, false, true), 'create', false)(J$.T(441841, {
                                                            message: J$.T(441825, 'count can only be used with find command', 21, false),
                                                            driver: J$.T(441833, true, 23, false)
                                                        }, 11, false));
                                                    if (J$.C(28168, J$.B(27778, '===', J$.U(27770, 'typeof', J$.R(441857, 'opts', opts, false, false)), J$.T(441865, 'function', 21, false))))
                                                        callback = J$.W(441881, 'callback', J$.R(441873, 'opts', opts, false, false), callback, false, false), opts = J$.W(441897, 'opts', J$.T(441889, {}, 11, false), opts, false, false);
                                                    opts = J$.W(441921, 'opts', J$.C(28176, J$.R(441905, 'opts', opts, false, false)) ? J$._() : J$.T(441913, {}, 11, false), opts, false, false);
                                                    if (J$.C(28184, J$.B(27794, '===', J$.U(27786, 'typeof', J$.R(441929, 'applySkipLimit', applySkipLimit, false, false)), J$.T(441937, 'function', 21, false)))) {
                                                        callback = J$.W(441953, 'callback', J$.R(441945, 'applySkipLimit', applySkipLimit, false, false), callback, false, false);
                                                        applySkipLimit = J$.W(441969, 'applySkipLimit', J$.T(441961, true, 23, false), applySkipLimit, false, false);
                                                    }
                                                    if (J$.C(28192, J$.G(441993, J$.G(441985, J$.R(441977, 'this', this, false, false), 'cursorState'), 'session'))) {
                                                        opts = J$.W(442065, 'opts', J$.M(442057, J$.I(typeof Object === 'undefined' ? Object = J$.R(442001, 'Object', undefined, true, true) : Object = J$.R(442001, 'Object', Object, true, true)), 'assign', false)(J$.T(442009, {}, 11, false), J$.R(442017, 'opts', opts, false, false), J$.T(442049, { session: J$.G(442041, J$.G(442033, J$.R(442025, 'this', this, false, false), 'cursorState'), 'session') }, 11, false)), opts, false, false);
                                                    }
                                                    var countOperation = J$.W(442113, 'countOperation', J$.F(442105, J$.R(442073, 'CountOperation', CountOperation, false, true), true)(J$.R(442081, 'this', this, false, false), J$.R(442089, 'applySkipLimit', applySkipLimit, false, false), J$.R(442097, 'opts', opts, false, false)), countOperation, false, false);
                                                    return J$.Rt(442169, J$.F(442161, J$.R(442121, 'executeOperation', executeOperation, false, true), false)(J$.G(442137, J$.R(442129, 'this', this, false, false), 'topology'), J$.R(442145, 'countOperation', countOperation, false, false), J$.R(442153, 'callback', callback, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(446025, J$e);
                                                } finally {
                                                    if (J$.Fr(446033))
                                                        continue jalangiLabel48;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(442977, {
                                    key: J$.T(442241, 'close', 21, false),
                                    value: J$.T(442969, function close(options, callback) {
                                        jalangiLabel54:
                                            while (true) {
                                                try {
                                                    J$.Fe(442921, arguments.callee, this, arguments);
                                                    arguments = J$.N(442929, 'arguments', arguments, true, false, false);
                                                    options = J$.N(442937, 'options', options, true, false, false);
                                                    callback = J$.N(442945, 'callback', callback, true, false, false);
                                                    J$.N(442953, '_this3', _this3, false, false, false);
                                                    J$.N(442961, 'completeClose', completeClose, false, false, false);
                                                    var _this3 = J$.W(442257, '_this3', J$.R(442249, 'this', this, false, false), _this3, false, false);
                                                    if (J$.C(28200, J$.B(27810, '===', J$.U(27802, 'typeof', J$.R(442265, 'options', options, false, false)), J$.T(442273, 'function', 21, false))))
                                                        callback = J$.W(442289, 'callback', J$.R(442281, 'options', options, false, false), callback, false, false), options = J$.W(442305, 'options', J$.T(442297, {}, 11, false), options, false, false);
                                                    options = J$.W(442361, 'options', J$.M(442353, J$.I(typeof Object === 'undefined' ? Object = J$.R(442313, 'Object', undefined, true, true) : Object = J$.R(442313, 'Object', Object, true, true)), 'assign', false)(J$.T(442321, {}, 11, false), J$.T(442337, { skipKillCursors: J$.T(442329, false, 23, false) }, 11, false), J$.R(442345, 'options', options, false, false)), options, false, false);
                                                    J$.P(442401, J$.G(442377, J$.R(442369, 'this', this, false, false), 's'), 'state', J$.G(442393, J$.R(442385, 'CursorState', CursorState, false, true), 'CLOSED'));
                                                    if (J$.C(28208, J$.U(27818, '!', J$.G(442417, J$.R(442409, 'options', options, false, false), 'skipKillCursors')))) {
                                                        J$.M(442433, J$.R(442425, 'this', this, false, false), 'kill', false)();
                                                    }
                                                    var completeClose = J$.W(442633, 'completeClose', J$.T(442625, function completeClose() {
                                                        jalangiLabel50:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(442609, arguments.callee, this, arguments);
                                                                    arguments = J$.N(442617, 'arguments', arguments, true, false, false);
                                                                    J$.M(442457, J$.R(442441, '_this3', _this3, false, false), 'emit', false)(J$.T(442449, 'close', 21, false));
                                                                    if (J$.C(28216, J$.B(27834, '===', J$.U(27826, 'typeof', J$.R(442465, 'callback', callback, false, false)), J$.T(442473, 'function', 21, false)))) {
                                                                        return J$.Rt(442521, J$.F(442513, J$.R(442481, 'handleCallback', handleCallback, false, true), false)(J$.R(442489, 'callback', callback, false, false), J$.T(442497, null, 25, false), J$.R(442505, '_this3', _this3, false, false)));
                                                                    }
                                                                    return J$.Rt(442601, J$.M(442593, J$.G(442537, J$.R(442529, '_this3', _this3, false, false), 's'), 'promiseLibrary', true)(J$.T(442585, function (resolve) {
                                                                        jalangiLabel49:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(442561, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(442569, 'arguments', arguments, true, false, false);
                                                                                    resolve = J$.N(442577, 'resolve', resolve, true, false, false);
                                                                                    J$.F(442553, J$.R(442545, 'resolve', resolve, false, false), false)();
                                                                                } catch (J$e) {
                                                                                    J$.Ex(446041, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(446049))
                                                                                        continue jalangiLabel49;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(446057, J$e);
                                                                } finally {
                                                                    if (J$.Fr(446065))
                                                                        continue jalangiLabel50;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false), completeClose, false, false);
                                                    if (J$.C(28232, J$.G(442657, J$.G(442649, J$.R(442641, 'this', this, false, false), 'cursorState'), 'session'))) {
                                                        if (J$.C(28224, J$.B(27850, '===', J$.U(27842, 'typeof', J$.R(442665, 'callback', callback, false, false)), J$.T(442673, 'function', 21, false)))) {
                                                            return J$.Rt(442745, J$.M(442737, J$.R(442681, 'this', this, false, false), '_endSession', false)(J$.T(442729, function () {
                                                                jalangiLabel51:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(442713, arguments.callee, this, arguments);
                                                                            arguments = J$.N(442721, 'arguments', arguments, true, false, false);
                                                                            return J$.Rt(442705, J$.F(442697, J$.R(442689, 'completeClose', completeClose, false, false), false)());
                                                                        } catch (J$e) {
                                                                            J$.Ex(446073, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(446081))
                                                                                continue jalangiLabel51;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)));
                                                        }
                                                        return J$.Rt(442889, J$.M(442881, J$.G(442761, J$.R(442753, 'this', this, false, false), 's'), 'promiseLibrary', true)(J$.T(442873, function (resolve) {
                                                            jalangiLabel53:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(442849, arguments.callee, this, arguments);
                                                                        arguments = J$.N(442857, 'arguments', arguments, true, false, false);
                                                                        resolve = J$.N(442865, 'resolve', resolve, true, false, false);
                                                                        J$.M(442841, J$.R(442769, '_this3', _this3, false, false), '_endSession', false)(J$.T(442833, function () {
                                                                            jalangiLabel52:
                                                                                while (true) {
                                                                                    try {
                                                                                        J$.Fe(442817, arguments.callee, this, arguments);
                                                                                        arguments = J$.N(442825, 'arguments', arguments, true, false, false);
                                                                                        return J$.Rt(442809, J$.M(442801, J$.F(442785, J$.R(442777, 'completeClose', completeClose, false, false), false)(), 'then', false)(J$.R(442793, 'resolve', resolve, false, false)));
                                                                                    } catch (J$e) {
                                                                                        J$.Ex(446089, J$e);
                                                                                    } finally {
                                                                                        if (J$.Fr(446097))
                                                                                            continue jalangiLabel52;
                                                                                        else
                                                                                            return J$.Ra();
                                                                                    }
                                                                                }
                                                                        }, 12, false));
                                                                    } catch (J$e) {
                                                                        J$.Ex(446105, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(446113))
                                                                            continue jalangiLabel53;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    }
                                                    return J$.Rt(442913, J$.F(442905, J$.R(442897, 'completeClose', completeClose, false, false), false)());
                                                } catch (J$e) {
                                                    J$.Ex(446121, J$e);
                                                } finally {
                                                    if (J$.Fr(446129))
                                                        continue jalangiLabel54;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(443297, {
                                    key: J$.T(442985, 'map', 21, false),
                                    value: J$.T(443289, function map(transform) {
                                        jalangiLabel56:
                                            while (true) {
                                                try {
                                                    J$.Fe(443257, arguments.callee, this, arguments);
                                                    arguments = J$.N(443265, 'arguments', arguments, true, false, false);
                                                    transform = J$.N(443273, 'transform', transform, true, false, false);
                                                    J$.N(443281, 'oldTransform', oldTransform, false, false, false);
                                                    if (J$.C(28248, J$.C(28240, J$.G(443009, J$.G(443001, J$.R(442993, 'this', this, false, false), 'cursorState'), 'transforms')) ? J$.G(443041, J$.G(443033, J$.G(443025, J$.R(443017, 'this', this, false, false), 'cursorState'), 'transforms'), 'doc') : J$._())) {
                                                        var oldTransform = J$.W(443081, 'oldTransform', J$.G(443073, J$.G(443065, J$.G(443057, J$.R(443049, 'this', this, false, false), 'cursorState'), 'transforms'), 'doc'), oldTransform, false, false);
                                                        J$.P(443193, J$.G(443105, J$.G(443097, J$.R(443089, 'this', this, false, false), 'cursorState'), 'transforms'), 'doc', J$.T(443185, function (doc) {
                                                            jalangiLabel55:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(443161, arguments.callee, this, arguments);
                                                                        arguments = J$.N(443169, 'arguments', arguments, true, false, false);
                                                                        doc = J$.N(443177, 'doc', doc, true, false, false);
                                                                        return J$.Rt(443153, J$.F(443145, J$.R(443113, 'transform', transform, false, false), false)(J$.F(443137, J$.R(443121, 'oldTransform', oldTransform, false, false), false)(J$.R(443129, 'doc', doc, false, false))));
                                                                    } catch (J$e) {
                                                                        J$.Ex(446137, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(446145))
                                                                            continue jalangiLabel55;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false));
                                                    } else {
                                                        J$.P(443233, J$.G(443209, J$.R(443201, 'this', this, false, false), 'cursorState'), 'transforms', J$.T(443225, { doc: J$.R(443217, 'transform', transform, false, false) }, 11, false));
                                                    }
                                                    return J$.Rt(443249, J$.R(443241, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(446153, J$e);
                                                } finally {
                                                    if (J$.Fr(446161))
                                                        continue jalangiLabel56;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(443361, {
                                    key: J$.T(443305, 'isClosed', 21, false),
                                    value: J$.T(443353, function isClosed() {
                                        jalangiLabel57:
                                            while (true) {
                                                try {
                                                    J$.Fe(443337, arguments.callee, this, arguments);
                                                    arguments = J$.N(443345, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(443329, J$.M(443321, J$.R(443313, 'this', this, false, false), 'isDead', false)());
                                                } catch (J$e) {
                                                    J$.Ex(446169, J$e);
                                                } finally {
                                                    if (J$.Fr(446177))
                                                        continue jalangiLabel57;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(443481, {
                                    key: J$.T(443369, 'destroy', 21, false),
                                    value: J$.T(443473, function destroy(err) {
                                        jalangiLabel58:
                                            while (true) {
                                                try {
                                                    J$.Fe(443449, arguments.callee, this, arguments);
                                                    arguments = J$.N(443457, 'arguments', arguments, true, false, false);
                                                    err = J$.N(443465, 'err', err, true, false, false);
                                                    if (J$.C(28256, J$.R(443377, 'err', err, false, false)))
                                                        J$.M(443409, J$.R(443385, 'this', this, false, false), 'emit', false)(J$.T(443393, 'error', 21, false), J$.R(443401, 'err', err, false, false));
                                                    J$.M(443425, J$.R(443417, 'this', this, false, false), 'pause', false)();
                                                    J$.M(443441, J$.R(443433, 'this', this, false, false), 'close', false)();
                                                } catch (J$e) {
                                                    J$.Ex(446185, J$e);
                                                } finally {
                                                    if (J$.Fr(446193))
                                                        continue jalangiLabel58;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(443585, {
                                    key: J$.T(443489, 'stream', 21, false),
                                    value: J$.T(443577, function stream(options) {
                                        jalangiLabel59:
                                            while (true) {
                                                try {
                                                    J$.Fe(443553, arguments.callee, this, arguments);
                                                    arguments = J$.N(443561, 'arguments', arguments, true, false, false);
                                                    options = J$.N(443569, 'options', options, true, false, false);
                                                    J$.P(443529, J$.G(443505, J$.R(443497, 'this', this, false, false), 'cursorState'), 'streamOptions', J$.C(28264, J$.R(443513, 'options', options, false, false)) ? J$._() : J$.T(443521, {}, 11, false));
                                                    return J$.Rt(443545, J$.R(443537, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(446201, J$e);
                                                } finally {
                                                    if (J$.Fr(446209))
                                                        continue jalangiLabel59;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(443929, {
                                    key: J$.T(443593, 'transformStream', 21, false),
                                    value: J$.T(443921, function transformStream(options) {
                                        jalangiLabel61:
                                            while (true) {
                                                try {
                                                    J$.Fe(443881, arguments.callee, this, arguments);
                                                    arguments = J$.N(443889, 'arguments', arguments, true, false, false);
                                                    options = J$.N(443897, 'options', options, true, false, false);
                                                    J$.N(443905, 'streamOptions', streamOptions, false, false, false);
                                                    J$.N(443913, 'stream', stream, false, false, false);
                                                    var streamOptions = J$.W(443617, 'streamOptions', J$.C(28272, J$.R(443601, 'options', options, false, false)) ? J$._() : J$.T(443609, {}, 11, false), streamOptions, false, false);
                                                    if (J$.C(28280, J$.B(27866, '===', J$.U(27858, 'typeof', J$.G(443633, J$.R(443625, 'streamOptions', streamOptions, false, false), 'transform')), J$.T(443641, 'function', 21, false)))) {
                                                        var stream = J$.W(443785, 'stream', J$.F(443777, J$.R(443649, 'Transform', Transform, false, true), true)(J$.T(443769, {
                                                            objectMode: J$.T(443657, true, 23, false),
                                                            transform: J$.T(443761, function transform(chunk, encoding, callback) {
                                                                jalangiLabel60:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(443721, arguments.callee, this, arguments);
                                                                            arguments = J$.N(443729, 'arguments', arguments, true, false, false);
                                                                            chunk = J$.N(443737, 'chunk', chunk, true, false, false);
                                                                            encoding = J$.N(443745, 'encoding', encoding, true, false, false);
                                                                            callback = J$.N(443753, 'callback', callback, true, false, false);
                                                                            J$.M(443697, J$.R(443665, 'this', this, false, false), 'push', false)(J$.M(443689, J$.R(443673, 'streamOptions', streamOptions, false, false), 'transform', false)(J$.R(443681, 'chunk', chunk, false, false)));
                                                                            J$.F(443713, J$.R(443705, 'callback', callback, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(446217, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(446225))
                                                                                continue jalangiLabel60;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)
                                                        }, 11, false)), stream, false, false);
                                                        return J$.Rt(443817, J$.M(443809, J$.R(443793, 'this', this, false, false), 'pipe', false)(J$.R(443801, 'stream', stream, false, false)));
                                                    }
                                                    return J$.Rt(443873, J$.M(443865, J$.R(443825, 'this', this, false, false), 'pipe', false)(J$.F(443857, J$.R(443833, 'PassThrough', PassThrough, false, true), true)(J$.T(443849, { objectMode: J$.T(443841, true, 23, false) }, 11, false))));
                                                } catch (J$e) {
                                                    J$.Ex(446233, J$e);
                                                } finally {
                                                    if (J$.Fr(446241))
                                                        continue jalangiLabel61;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(444337, {
                                    key: J$.T(443937, 'explain', 21, false),
                                    value: J$.T(444329, function explain(callback) {
                                        jalangiLabel62:
                                            while (true) {
                                                try {
                                                    J$.Fe(444297, arguments.callee, this, arguments);
                                                    arguments = J$.N(444305, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(444313, 'callback', callback, true, false, false);
                                                    J$.N(444321, 'explainOperation', explainOperation, false, false, false);
                                                    if (J$.C(28296, J$.C(28288, J$.G(443953, J$.R(443945, 'this', this, false, false), 'operation')) ? J$.B(27874, '==', J$.G(443977, J$.G(443969, J$.R(443961, 'this', this, false, false), 'operation'), 'cmd'), J$.T(443985, null, 25, false)) : J$._())) {
                                                        J$.P(444025, J$.G(444009, J$.G(444001, J$.R(443993, 'this', this, false, false), 'operation'), 'options'), 'explain', J$.T(444017, true, 23, false));
                                                        J$.P(444057, J$.G(444041, J$.R(444033, 'this', this, false, false), 'operation'), 'fullResponse', J$.T(444049, false, 23, false));
                                                        return J$.Rt(444121, J$.F(444113, J$.R(444065, 'executeOperation', executeOperation, false, true), false)(J$.G(444081, J$.R(444073, 'this', this, false, false), 'topology'), J$.G(444097, J$.R(444089, 'this', this, false, false), 'operation'), J$.R(444105, 'callback', callback, false, false)));
                                                    }
                                                    J$.P(444153, J$.G(444137, J$.R(444129, 'this', this, false, false), 'cmd'), 'explain', J$.T(444145, true, 23, false));
                                                    if (J$.C(28304, J$.G(444177, J$.G(444169, J$.R(444161, 'this', this, false, false), 'cmd'), 'readConcern'))) {
                                                        J$.B(27882, 'delete', J$.G(444193, J$.R(444185, 'this', this, false, false), 'cmd'), J$.T(444201, 'readConcern', 21, false));
                                                    }
                                                    var explainOperation = J$.W(444233, 'explainOperation', J$.F(444225, J$.R(444209, 'ExplainOperation', ExplainOperation, false, true), true)(J$.R(444217, 'this', this, false, false)), explainOperation, false, false);
                                                    return J$.Rt(444289, J$.F(444281, J$.R(444241, 'executeOperation', executeOperation, false, true), false)(J$.G(444257, J$.R(444249, 'this', this, false, false), 'topology'), J$.R(444265, 'explainOperation', explainOperation, false, false), J$.R(444273, 'callback', callback, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(446249, J$e);
                                                } finally {
                                                    if (J$.Fr(446257))
                                                        continue jalangiLabel62;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(444401, {
                                    key: J$.T(444345, 'getLogger', 21, false),
                                    value: J$.T(444393, function getLogger() {
                                        jalangiLabel63:
                                            while (true) {
                                                try {
                                                    J$.Fe(444377, arguments.callee, this, arguments);
                                                    arguments = J$.N(444385, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(444369, J$.G(444361, J$.R(444353, 'this', this, false, false), 'logger'));
                                                } catch (J$e) {
                                                    J$.Ex(446265, J$e);
                                                } finally {
                                                    if (J$.Fr(446273))
                                                        continue jalangiLabel63;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(444521, {
                                    key: J$.T(444409, 'readPreference', 21, false),
                                    get: J$.T(444513, function get() {
                                        jalangiLabel64:
                                            while (true) {
                                                try {
                                                    J$.Fe(444497, arguments.callee, this, arguments);
                                                    arguments = J$.N(444505, 'arguments', arguments, true, false, false);
                                                    if (J$.C(28312, J$.G(444425, J$.R(444417, 'this', this, false, false), 'operation'))) {
                                                        return J$.Rt(444457, J$.G(444449, J$.G(444441, J$.R(444433, 'this', this, false, false), 'operation'), 'readPreference'));
                                                    }
                                                    return J$.Rt(444489, J$.G(444481, J$.G(444473, J$.R(444465, 'this', this, false, false), 'options'), 'readPreference'));
                                                } catch (J$e) {
                                                    J$.Ex(446281, J$e);
                                                } finally {
                                                    if (J$.Fr(446289))
                                                        continue jalangiLabel64;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(444593, {
                                    key: J$.T(444529, 'sortValue', 21, false),
                                    get: J$.T(444585, function get() {
                                        jalangiLabel65:
                                            while (true) {
                                                try {
                                                    J$.Fe(444569, arguments.callee, this, arguments);
                                                    arguments = J$.N(444577, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(444561, J$.G(444553, J$.G(444545, J$.R(444537, 'this', this, false, false), 'cmd'), 'sort'));
                                                } catch (J$e) {
                                                    J$.Ex(446297, J$e);
                                                } finally {
                                                    if (J$.Fr(446305))
                                                        continue jalangiLabel65;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(444625, J$.R(444617, 'Cursor', Cursor, false, false));
                        } catch (J$e) {
                            J$.Ex(446313, J$e);
                        } finally {
                            if (J$.Fr(446321))
                                continue jalangiLabel66;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(444681, 'CoreCursor', CoreCursor, false, true)), Cursor, false, true);
            J$.P(444745, J$.G(444713, J$.R(444705, 'Cursor', Cursor, false, true), 'prototype'), 'maxTimeMs', J$.G(444737, J$.G(444729, J$.R(444721, 'Cursor', Cursor, false, true), 'prototype'), 'maxTimeMS'));
            J$.F(444793, J$.R(444753, 'deprecate', deprecate, false, true), false)(J$.G(444777, J$.G(444769, J$.R(444761, 'Cursor', Cursor, false, true), 'prototype'), 'each'), J$.T(444785, 'Cursor.each is deprecated. Use Cursor.forEach instead.', 21, false));
            J$.F(444841, J$.R(444801, 'deprecate', deprecate, false, true), false)(J$.G(444825, J$.G(444817, J$.R(444809, 'Cursor', Cursor, false, true), 'prototype'), 'maxScan'), J$.T(444833, 'Cursor.maxScan is deprecated, and will be removed in a later version', 21, false));
            J$.F(444889, J$.R(444849, 'deprecate', deprecate, false, true), false)(J$.G(444873, J$.G(444865, J$.R(444857, 'Cursor', Cursor, false, true), 'prototype'), 'snapshot'), J$.T(444881, 'Cursor Snapshot is deprecated, and will be removed in a later version', 21, false));
            J$.P(444913, J$.I(typeof module === 'undefined' ? module = J$.R(444897, 'module', undefined, true, true) : module = J$.R(444897, 'module', module, true, true)), 'exports', J$.R(444905, 'Cursor', Cursor, false, true));
        } catch (J$e) {
            J$.Ex(446329, J$e);
        } finally {
            if (J$.Sr(446337))
                continue jalangiLabel67;
            else
                break jalangiLabel67;
        }
    }
// JALANGI DO NOT INSTRUMENT

