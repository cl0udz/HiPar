J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(11169, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongodb/index.js');
            J$.N(11177, 'core', core, false, false, false);
            J$.N(11185, 'Instrumentation', Instrumentation, false, false, false);
            J$.N(11193, 'connect', connect, false, false, false);
            J$.T(9473, 'use strict', 21, false);
            var core = J$.W(9505, 'core', J$.F(9497, J$.I(typeof require === 'undefined' ? require = J$.R(9481, 'require', undefined, true, true) : require = J$.R(9481, 'require', require, true, true)), false)(J$.T(9489, './lib/core', 21, false)), core, false, true);
            var Instrumentation = J$.W(9537, 'Instrumentation', J$.F(9529, J$.I(typeof require === 'undefined' ? require = J$.R(9513, 'require', undefined, true, true) : require = J$.R(9513, 'require', require, true, true)), false)(J$.T(9521, './lib/apm', 21, false)), Instrumentation, false, true);
            var connect = J$.W(9577, 'connect', J$.G(9569, J$.F(9561, J$.I(typeof require === 'undefined' ? require = J$.R(9545, 'require', undefined, true, true) : require = J$.R(9545, 'require', require, true, true)), false)(J$.T(9553, './lib/mongo_client', 21, false)), 'connect'), connect, false, true);
            J$.P(9609, J$.R(9585, 'connect', connect, false, true), 'MongoError', J$.G(9601, J$.R(9593, 'core', core, false, true), 'MongoError'));
            J$.P(9641, J$.R(9617, 'connect', connect, false, true), 'MongoNetworkError', J$.G(9633, J$.R(9625, 'core', core, false, true), 'MongoNetworkError'));
            J$.P(9673, J$.R(9649, 'connect', connect, false, true), 'MongoTimeoutError', J$.G(9665, J$.R(9657, 'core', core, false, true), 'MongoTimeoutError'));
            J$.P(9713, J$.R(9681, 'connect', connect, false, true), 'Admin', J$.F(9705, J$.I(typeof require === 'undefined' ? require = J$.R(9689, 'require', undefined, true, true) : require = J$.R(9689, 'require', require, true, true)), false)(J$.T(9697, './lib/admin', 21, false)));
            J$.P(9753, J$.R(9721, 'connect', connect, false, true), 'MongoClient', J$.F(9745, J$.I(typeof require === 'undefined' ? require = J$.R(9729, 'require', undefined, true, true) : require = J$.R(9729, 'require', require, true, true)), false)(J$.T(9737, './lib/mongo_client', 21, false)));
            J$.P(9793, J$.R(9761, 'connect', connect, false, true), 'Db', J$.F(9785, J$.I(typeof require === 'undefined' ? require = J$.R(9769, 'require', undefined, true, true) : require = J$.R(9769, 'require', require, true, true)), false)(J$.T(9777, './lib/db', 21, false)));
            J$.P(9833, J$.R(9801, 'connect', connect, false, true), 'Collection', J$.F(9825, J$.I(typeof require === 'undefined' ? require = J$.R(9809, 'require', undefined, true, true) : require = J$.R(9809, 'require', require, true, true)), false)(J$.T(9817, './lib/collection', 21, false)));
            J$.P(9873, J$.R(9841, 'connect', connect, false, true), 'Server', J$.F(9865, J$.I(typeof require === 'undefined' ? require = J$.R(9849, 'require', undefined, true, true) : require = J$.R(9849, 'require', require, true, true)), false)(J$.T(9857, './lib/topologies/server', 21, false)));
            J$.P(9913, J$.R(9881, 'connect', connect, false, true), 'ReplSet', J$.F(9905, J$.I(typeof require === 'undefined' ? require = J$.R(9889, 'require', undefined, true, true) : require = J$.R(9889, 'require', require, true, true)), false)(J$.T(9897, './lib/topologies/replset', 21, false)));
            J$.P(9953, J$.R(9921, 'connect', connect, false, true), 'Mongos', J$.F(9945, J$.I(typeof require === 'undefined' ? require = J$.R(9929, 'require', undefined, true, true) : require = J$.R(9929, 'require', require, true, true)), false)(J$.T(9937, './lib/topologies/mongos', 21, false)));
            J$.P(9985, J$.R(9961, 'connect', connect, false, true), 'ReadPreference', J$.G(9977, J$.R(9969, 'core', core, false, true), 'ReadPreference'));
            J$.P(10025, J$.R(9993, 'connect', connect, false, true), 'GridStore', J$.F(10017, J$.I(typeof require === 'undefined' ? require = J$.R(10001, 'require', undefined, true, true) : require = J$.R(10001, 'require', require, true, true)), false)(J$.T(10009, './lib/gridfs/grid_store', 21, false)));
            J$.P(10065, J$.R(10033, 'connect', connect, false, true), 'Chunk', J$.F(10057, J$.I(typeof require === 'undefined' ? require = J$.R(10041, 'require', undefined, true, true) : require = J$.R(10041, 'require', require, true, true)), false)(J$.T(10049, './lib/gridfs/chunk', 21, false)));
            J$.P(10097, J$.R(10073, 'connect', connect, false, true), 'Logger', J$.G(10089, J$.R(10081, 'core', core, false, true), 'Logger'));
            J$.P(10137, J$.R(10105, 'connect', connect, false, true), 'AggregationCursor', J$.F(10129, J$.I(typeof require === 'undefined' ? require = J$.R(10113, 'require', undefined, true, true) : require = J$.R(10113, 'require', require, true, true)), false)(J$.T(10121, './lib/aggregation_cursor', 21, false)));
            J$.P(10177, J$.R(10145, 'connect', connect, false, true), 'CommandCursor', J$.F(10169, J$.I(typeof require === 'undefined' ? require = J$.R(10153, 'require', undefined, true, true) : require = J$.R(10153, 'require', require, true, true)), false)(J$.T(10161, './lib/command_cursor', 21, false)));
            J$.P(10217, J$.R(10185, 'connect', connect, false, true), 'Cursor', J$.F(10209, J$.I(typeof require === 'undefined' ? require = J$.R(10193, 'require', undefined, true, true) : require = J$.R(10193, 'require', require, true, true)), false)(J$.T(10201, './lib/cursor', 21, false)));
            J$.P(10257, J$.R(10225, 'connect', connect, false, true), 'GridFSBucket', J$.F(10249, J$.I(typeof require === 'undefined' ? require = J$.R(10233, 'require', undefined, true, true) : require = J$.R(10233, 'require', require, true, true)), false)(J$.T(10241, './lib/gridfs-stream', 21, false)));
            J$.P(10289, J$.R(10265, 'connect', connect, false, true), 'CoreServer', J$.G(10281, J$.R(10273, 'core', core, false, true), 'Server'));
            J$.P(10321, J$.R(10297, 'connect', connect, false, true), 'CoreConnection', J$.G(10313, J$.R(10305, 'core', core, false, true), 'Connection'));
            J$.P(10361, J$.R(10329, 'connect', connect, false, true), 'Binary', J$.G(10353, J$.G(10345, J$.R(10337, 'core', core, false, true), 'BSON'), 'Binary'));
            J$.P(10401, J$.R(10369, 'connect', connect, false, true), 'Code', J$.G(10393, J$.G(10385, J$.R(10377, 'core', core, false, true), 'BSON'), 'Code'));
            J$.P(10441, J$.R(10409, 'connect', connect, false, true), 'Map', J$.G(10433, J$.G(10425, J$.R(10417, 'core', core, false, true), 'BSON'), 'Map'));
            J$.P(10481, J$.R(10449, 'connect', connect, false, true), 'DBRef', J$.G(10473, J$.G(10465, J$.R(10457, 'core', core, false, true), 'BSON'), 'DBRef'));
            J$.P(10521, J$.R(10489, 'connect', connect, false, true), 'Double', J$.G(10513, J$.G(10505, J$.R(10497, 'core', core, false, true), 'BSON'), 'Double'));
            J$.P(10561, J$.R(10529, 'connect', connect, false, true), 'Int32', J$.G(10553, J$.G(10545, J$.R(10537, 'core', core, false, true), 'BSON'), 'Int32'));
            J$.P(10601, J$.R(10569, 'connect', connect, false, true), 'Long', J$.G(10593, J$.G(10585, J$.R(10577, 'core', core, false, true), 'BSON'), 'Long'));
            J$.P(10641, J$.R(10609, 'connect', connect, false, true), 'MinKey', J$.G(10633, J$.G(10625, J$.R(10617, 'core', core, false, true), 'BSON'), 'MinKey'));
            J$.P(10681, J$.R(10649, 'connect', connect, false, true), 'MaxKey', J$.G(10673, J$.G(10665, J$.R(10657, 'core', core, false, true), 'BSON'), 'MaxKey'));
            J$.P(10721, J$.R(10689, 'connect', connect, false, true), 'ObjectID', J$.G(10713, J$.G(10705, J$.R(10697, 'core', core, false, true), 'BSON'), 'ObjectID'));
            J$.P(10761, J$.R(10729, 'connect', connect, false, true), 'ObjectId', J$.G(10753, J$.G(10745, J$.R(10737, 'core', core, false, true), 'BSON'), 'ObjectID'));
            J$.P(10801, J$.R(10769, 'connect', connect, false, true), 'Symbol', J$.G(10793, J$.G(10785, J$.R(10777, 'core', core, false, true), 'BSON'), 'Symbol'));
            J$.P(10841, J$.R(10809, 'connect', connect, false, true), 'Timestamp', J$.G(10833, J$.G(10825, J$.R(10817, 'core', core, false, true), 'BSON'), 'Timestamp'));
            J$.P(10881, J$.R(10849, 'connect', connect, false, true), 'BSONRegExp', J$.G(10873, J$.G(10865, J$.R(10857, 'core', core, false, true), 'BSON'), 'BSONRegExp'));
            J$.P(10921, J$.R(10889, 'connect', connect, false, true), 'Decimal128', J$.G(10913, J$.G(10905, J$.R(10897, 'core', core, false, true), 'BSON'), 'Decimal128'));
            J$.P(10945, J$.R(10929, 'connect', connect, false, true), 'connect', J$.R(10937, 'connect', connect, false, true));
            J$.P(11137, J$.R(10953, 'connect', connect, false, true), 'instrument', J$.T(11129, function (options, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(11089, arguments.callee, this, arguments);
                            arguments = J$.N(11097, 'arguments', arguments, true, false, false);
                            options = J$.N(11105, 'options', options, true, false, false);
                            callback = J$.N(11113, 'callback', callback, true, false, false);
                            J$.N(11121, 'instrumentation', instrumentation, false, false, false);
                            if (J$.C(8, J$.B(82, '===', J$.U(74, 'typeof', J$.R(10961, 'options', options, false, false)), J$.T(10969, 'function', 21, false)))) {
                                callback = J$.W(10985, 'callback', J$.R(10977, 'options', options, false, false), callback, false, false);
                                options = J$.W(11001, 'options', J$.T(10993, {}, 11, false), options, false, false);
                            }
                            var instrumentation = J$.W(11025, 'instrumentation', J$.F(11017, J$.R(11009, 'Instrumentation', Instrumentation, false, true), true)(), instrumentation, false, false);
                            J$.M(11065, J$.R(11033, 'instrumentation', instrumentation, false, false), 'instrument', false)(J$.G(11049, J$.R(11041, 'connect', connect, false, true), 'MongoClient'), J$.R(11057, 'callback', callback, false, false));
                            return J$.Rt(11081, J$.R(11073, 'instrumentation', instrumentation, false, false));
                        } catch (J$e) {
                            J$.Ex(11201, J$e);
                        } finally {
                            if (J$.Fr(11209))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(11161, J$.I(typeof module === 'undefined' ? module = J$.R(11145, 'module', undefined, true, true) : module = J$.R(11145, 'module', module, true, true)), 'exports', J$.R(11153, 'connect', connect, false, true));
        } catch (J$e) {
            J$.Ex(11217, J$e);
        } finally {
            if (J$.Sr(11225))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

