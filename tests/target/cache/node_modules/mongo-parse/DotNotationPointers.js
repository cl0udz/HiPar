J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(11841, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongo-parse/DotNotationPointers.js');
            function createPointers(rootObject, propertyParts) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(10465, arguments.callee, this, arguments);
                            arguments = J$.N(10473, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(10481, 'rootObject', rootObject, true, false, false);
                            propertyParts = J$.N(10489, 'propertyParts', propertyParts, true, false, false);
                            J$.N(10497, 'initialObject', initialObject, false, false, false);
                            J$.N(10505, 'curInfoObjects', curInfoObjects, false, false, false);
                            var initialObject = J$.W(9673, 'initialObject', J$.T(9665, { dummy: J$.R(9657, 'rootObject', rootObject, false, false) }, 11, false), initialObject, false, false);
                            var curInfoObjects = J$.W(9721, 'curInfoObjects', J$.T(9713, [J$.T(9705, {
                                    obj: J$.R(9681, 'initialObject', initialObject, false, false),
                                    last: J$.T(9689, 'dummy', 21, false),
                                    propertyPath: J$.T(9697, [], 10, false)
                                }, 11, false)], 10, false), curInfoObjects, false, false);
                            J$.M(10193, J$.R(9729, 'propertyParts', propertyParts, false, false), 'forEach', false)(J$.T(10185, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(10153, arguments.callee, this, arguments);
                                            arguments = J$.N(10161, 'arguments', arguments, true, false, false);
                                            part = J$.N(10169, 'part', part, true, false, false);
                                            J$.N(10177, 'nextInfoObjects', nextInfoObjects, false, false, false);
                                            var nextInfoObjects = J$.W(9745, 'nextInfoObjects', J$.T(9737, [], 10, false), nextInfoObjects, false, false);
                                            J$.M(10129, J$.R(9753, 'curInfoObjects', curInfoObjects, false, false), 'forEach', false)(J$.T(10121, function (current) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(10089, arguments.callee, this, arguments);
                                                            arguments = J$.N(10097, 'arguments', arguments, true, false, false);
                                                            current = J$.N(10105, 'current', current, true, false, false);
                                                            J$.N(10113, 'curValue', curValue, false, false, false);
                                                            var curValue = J$.W(9809, 'curValue', J$.F(9801, J$.R(9761, 'getValue', getValue, false, true), false)(J$.G(9777, J$.R(9769, 'current', current, false, false), 'obj'), J$.G(9793, J$.R(9785, 'current', current, false, false), 'last')), curValue, false, false);
                                                            if (J$.C(32, J$.C(24, J$.B(98, 'instanceof', J$.R(9817, 'curValue', curValue, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(9825, 'Array', undefined, true, true) : Array = J$.R(9825, 'Array', Array, true, true)))) ? J$.U(106, '!', J$.F(9849, J$.R(9833, 'isInteger', isInteger, false, true), false)(J$.R(9841, 'part', part, false, false))) : J$._())) {
                                                                J$.M(10009, J$.R(9857, 'curValue', curValue, false, false), 'forEach', false)(J$.T(10001, function (property, index) {
                                                                    jalangiLabel1:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(9969, arguments.callee, this, arguments);
                                                                                arguments = J$.N(9977, 'arguments', arguments, true, false, false);
                                                                                property = J$.N(9985, 'property', property, true, false, false);
                                                                                index = J$.N(9993, 'index', index, true, false, false);
                                                                                J$.M(9961, J$.R(9865, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(9953, {
                                                                                    obj: J$.F(9897, J$.R(9873, 'getValue', getValue, false, true), false)(J$.R(9881, 'curValue', curValue, false, false), J$.R(9889, 'index', index, false, false)),
                                                                                    propertyPath: J$.M(9937, J$.G(9913, J$.R(9905, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(9921, 'index', index, false, false), J$.R(9929, 'part', part, false, false)),
                                                                                    last: J$.R(9945, 'part', part, false, false)
                                                                                }, 11, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(11945, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(11953))
                                                                                    continue jalangiLabel1;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } else {
                                                                J$.M(10081, J$.R(10017, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(10073, {
                                                                    obj: J$.R(10025, 'curValue', curValue, false, false),
                                                                    propertyPath: J$.M(10057, J$.G(10041, J$.R(10033, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(10049, 'part', part, false, false)),
                                                                    last: J$.R(10065, 'part', part, false, false)
                                                                }, 11, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(11961, J$e);
                                                        } finally {
                                                            if (J$.Fr(11969))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            curInfoObjects = J$.W(10145, 'curInfoObjects', J$.R(10137, 'nextInfoObjects', nextInfoObjects, false, false), curInfoObjects, false, false);
                                        } catch (J$e) {
                                            J$.Ex(11977, J$e);
                                        } finally {
                                            if (J$.Fr(11985))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(10457, J$.M(10449, J$.R(10201, 'curInfoObjects', curInfoObjects, false, false), 'map', false)(J$.T(10441, function (current) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(10401, arguments.callee, this, arguments);
                                            arguments = J$.N(10409, 'arguments', arguments, true, false, false);
                                            current = J$.N(10417, 'current', current, true, false, false);
                                            J$.N(10425, 'obj', obj, false, false, false);
                                            J$.N(10433, 'last', last, false, false, false);
                                            if (J$.C(40, J$.B(114, '===', J$.G(10217, J$.R(10209, 'current', current, false, false), 'obj'), J$.R(10225, 'initialObject', initialObject, false, false)))) {
                                                var obj = J$.W(10257, 'obj', J$.G(10249, J$.G(10241, J$.R(10233, 'current', current, false, false), 'obj'), 'dummy'), obj, false, false);
                                                var last = J$.W(10273, 'last', J$.T(10265, undefined, 24, false), last, false, false);
                                            } else {
                                                var obj = J$.W(10297, 'obj', J$.G(10289, J$.R(10281, 'current', current, false, false), 'obj'), obj, false, false);
                                                var last = J$.W(10321, 'last', J$.G(10313, J$.R(10305, 'current', current, false, false), 'last'), last, false, false);
                                            }
                                            return J$.Rt(10393, J$.F(10385, J$.R(10329, 'DotNotationPointer', DotNotationPointer, false, true), true)(J$.R(10337, 'rootObject', rootObject, false, false), J$.G(10353, J$.R(10345, 'current', current, false, false), 'propertyPath'), J$.T(10377, {
                                                obj: J$.R(10361, 'obj', obj, false, false),
                                                last: J$.R(10369, 'last', last, false, false)
                                            }, 11, false)));
                                        } catch (J$e) {
                                            J$.Ex(11993, J$e);
                                        } finally {
                                            if (J$.Fr(12001))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(12009, J$e);
                        } finally {
                            if (J$.Fr(12017))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getValue(object, key) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(10577, arguments.callee, this, arguments);
                            arguments = J$.N(10585, 'arguments', arguments, true, false, false);
                            object = J$.N(10593, 'object', object, true, false, false);
                            key = J$.N(10601, 'key', key, true, false, false);
                            if (J$.C(48, J$.B(122, '===', J$.R(10513, 'object', object, false, false), J$.T(10521, undefined, 24, false))))
                                return J$.Rt(10537, J$.T(10529, undefined, 24, false));
                            else
                                return J$.Rt(10569, J$.G(10561, J$.R(10545, 'object', object, false, false), J$.R(10553, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(12025, J$e);
                        } finally {
                            if (J$.Fr(12033))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createProperty(that) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(11681, arguments.callee, this, arguments);
                            arguments = J$.N(11689, 'arguments', arguments, true, false, false);
                            that = J$.N(11697, 'that', that, true, false, false);
                            J$.N(11705, 'result', result, false, false, false);
                            J$.N(11713, 'lastIndex', lastIndex, false, false, false);
                            J$.N(11721, 'n', n, false, false, false);
                            J$.N(11729, 'value', value, false, false, false);
                            J$.N(11737, 'newValue', newValue, false, false, false);
                            var result = J$.W(11281, 'result', J$.G(11273, J$.R(11265, 'that', that, false, false), 'root'), result, false, false);
                            var lastIndex = J$.W(11321, 'lastIndex', J$.B(178, '-', J$.G(11305, J$.G(11297, J$.R(11289, 'that', that, false, false), 'property'), 'length'), J$.T(11313, 1, 22, false)), lastIndex, false, false);
                            for (var n = J$.W(11337, 'n', J$.T(11329, 0, 22, false), n, false, false); J$.C(120, J$.B(186, '<', J$.R(11345, 'n', n, false, false), J$.R(11353, 'lastIndex', lastIndex, false, false))); J$.B(210, '-', n = J$.W(11369, 'n', J$.B(202, '+', J$.U(194, '+', J$.R(11361, 'n', n, false, false)), 1), n, false, false), 1)) {
                                var value = J$.W(11425, 'value', J$.G(11417, J$.R(11377, 'result', result, false, false), J$.G(11409, J$.G(11393, J$.R(11385, 'that', that, false, false), 'property'), J$.R(11401, 'n', n, false, false))), value, false, false);
                                if (J$.C(112, J$.B(218, '===', J$.R(11433, 'value', value, false, false), J$.T(11441, undefined, 24, false)))) {
                                    if (J$.C(104, J$.F(11497, J$.R(11449, 'isInteger', isInteger, false, true), false)(J$.G(11489, J$.G(11465, J$.R(11457, 'that', that, false, false), 'property'), J$.B(226, '+', J$.R(11473, 'n', n, false, false), J$.T(11481, 1, 22, false))))))
                                        var newValue = J$.W(11513, 'newValue', J$.T(11505, [], 10, false), newValue, false, false);
                                    else
                                        var newValue = J$.W(11529, 'newValue', J$.T(11521, {}, 11, false), newValue, false, false);
                                    value = J$.W(11593, 'value', J$.P(11585, J$.R(11537, 'result', result, false, false), J$.G(11569, J$.G(11553, J$.R(11545, 'that', that, false, false), 'property'), J$.R(11561, 'n', n, false, false)), J$.R(11577, 'newValue', newValue, false, false)), value, false, false);
                                }
                                result = J$.W(11609, 'result', J$.R(11601, 'value', value, false, false), result, false, false);
                            }
                            J$.P(11673, J$.R(11617, 'that', that, false, false), 'propertyInfo', J$.T(11665, {
                                obj: J$.R(11625, 'result', result, false, false),
                                last: J$.G(11657, J$.G(11641, J$.R(11633, 'that', that, false, false), 'property'), J$.R(11649, 'lastIndex', lastIndex, false, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(12089, J$e);
                        } finally {
                            if (J$.Fr(12097))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isInteger(v) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(11809, arguments.callee, this, arguments);
                            arguments = J$.N(11817, 'arguments', arguments, true, false, false);
                            v = J$.N(11825, 'v', v, true, false, false);
                            J$.N(11833, 'number', number, false, false, false);
                            var number = J$.W(11769, 'number', J$.F(11761, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(11745, 'parseInt', undefined, true, true) : parseInt = J$.R(11745, 'parseInt', parseInt, true, true)), false)(J$.R(11753, 'v', v, false, false)), number, false, false);
                            return J$.Rt(11801, J$.U(234, '!', J$.F(11793, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(11777, 'isNaN', undefined, true, true) : isNaN = J$.R(11777, 'isNaN', isNaN, true, true)), false)(J$.R(11785, 'number', number, false, false))));
                        } catch (J$e) {
                            J$.Ex(12105, J$e);
                        } finally {
                            if (J$.Fr(12113))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(11849, 'DotNotationPointers', DotNotationPointers, false, false, false);
            createPointers = J$.N(11865, 'createPointers', J$.T(11857, createPointers, 12, false), true, false, false);
            getValue = J$.N(11881, 'getValue', J$.T(11873, getValue, 12, false), true, false, false);
            J$.N(11889, 'DotNotationPointer', DotNotationPointer, false, false, false);
            createProperty = J$.N(11905, 'createProperty', J$.T(11897, createProperty, 12, false), true, false, false);
            isInteger = J$.N(11921, 'isInteger', J$.T(11913, isInteger, 12, false), true, false, false);
            var DotNotationPointers = J$.W(9649, 'DotNotationPointers', J$.P(9641, J$.I(typeof module === 'undefined' ? module = J$.R(9473, 'module', undefined, true, true) : module = J$.R(9473, 'module', module, true, true)), 'exports', J$.T(9633, function (rootObject, property) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(9601, arguments.callee, this, arguments);
                            arguments = J$.N(9609, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(9617, 'rootObject', rootObject, true, false, false);
                            property = J$.N(9625, 'property', property, true, false, false);
                            if (J$.C(16, J$.B(74, '===', J$.R(9481, 'property', property, false, false), J$.T(9489, undefined, 24, false)))) {
                                property = J$.W(9505, 'property', J$.T(9497, [], 10, false), property, false, false);
                            } else if (J$.C(8, J$.U(90, '!', J$.B(82, 'instanceof', J$.R(9513, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(9521, 'Array', undefined, true, true) : Array = J$.R(9521, 'Array', Array, true, true)))))) {
                                property = J$.W(9553, 'property', J$.M(9545, J$.R(9529, 'property', property, false, false), 'split', false)(J$.T(9537, '.', 21, false)), property, false, false);
                            }
                            return J$.Rt(9593, J$.F(9585, J$.R(9561, 'createPointers', createPointers, false, true), false)(J$.R(9569, 'rootObject', rootObject, false, false), J$.R(9577, 'property', property, false, false)));
                        } catch (J$e) {
                            J$.Ex(11929, J$e);
                        } finally {
                            if (J$.Fr(11937))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), DotNotationPointers, false, true);
            var DotNotationPointer = J$.W(10841, 'DotNotationPointer', J$.T(10833, function (rootObject, property, propertyInfo) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(10793, arguments.callee, this, arguments);
                            arguments = J$.N(10801, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(10809, 'rootObject', rootObject, true, false, false);
                            property = J$.N(10817, 'property', property, true, false, false);
                            propertyInfo = J$.N(10825, 'propertyInfo', propertyInfo, true, false, false);
                            J$.P(10625, J$.R(10609, 'this', this, false, false), 'root', J$.R(10617, 'rootObject', rootObject, false, false));
                            if (J$.C(64, J$.B(130, '===', J$.R(10633, 'property', property, false, false), J$.T(10641, undefined, 24, false)))) {
                                J$.P(10665, J$.R(10649, 'this', this, false, false), 'property', J$.T(10657, [], 10, false));
                            } else if (J$.C(56, J$.B(138, 'instanceof', J$.R(10673, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(10681, 'Array', undefined, true, true) : Array = J$.R(10681, 'Array', Array, true, true))))) {
                                J$.P(10705, J$.R(10689, 'this', this, false, false), 'property', J$.R(10697, 'property', property, false, false));
                            } else {
                                J$.P(10745, J$.R(10713, 'this', this, false, false), 'property', J$.M(10737, J$.R(10721, 'property', property, false, false), 'split', false)(J$.T(10729, '.', 21, false)));
                            }
                            if (J$.C(72, J$.B(146, '!==', J$.R(10753, 'propertyInfo', propertyInfo, false, false), J$.T(10761, undefined, 24, false)))) {
                                J$.P(10785, J$.R(10769, 'this', this, false, false), 'propertyInfo', J$.R(10777, 'propertyInfo', propertyInfo, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(12041, J$e);
                        } finally {
                            if (J$.Fr(12049))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), DotNotationPointer, false, true);
            J$.P(10865, J$.R(10849, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype', J$.T(10857, {}, 11, false));
            J$.M(11257, J$.I(typeof Object === 'undefined' ? Object = J$.R(10873, 'Object', undefined, true, true) : Object = J$.R(10873, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(10889, J$.R(10881, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype'), J$.T(10897, 'val', 21, false), J$.T(11249, {
                get: J$.T(11089, function () {
                    jalangiLabel8:
                        while (true) {
                            try {
                                J$.Fe(11065, arguments.callee, this, arguments);
                                arguments = J$.N(11073, 'arguments', arguments, true, false, false);
                                J$.N(11081, 'info', info, false, false, false);
                                var info = J$.W(10921, 'info', J$.G(10913, J$.R(10905, 'this', this, false, false), 'propertyInfo'), info, false, false);
                                if (J$.C(88, J$.B(154, '===', J$.G(10937, J$.R(10929, 'info', info, false, false), 'obj'), J$.T(10945, undefined, 24, false)))) {
                                    return J$.Rt(10961, J$.T(10953, undefined, 24, false));
                                } else {
                                    if (J$.C(80, J$.B(162, '!==', J$.G(10977, J$.R(10969, 'info', info, false, false), 'last'), J$.T(10985, undefined, 24, false)))) {
                                        return J$.Rt(11033, J$.G(11025, J$.G(11001, J$.R(10993, 'info', info, false, false), 'obj'), J$.G(11017, J$.R(11009, 'info', info, false, false), 'last')));
                                    } else {
                                        return J$.Rt(11057, J$.G(11049, J$.R(11041, 'info', info, false, false), 'obj'));
                                    }
                                }
                            } catch (J$e) {
                                J$.Ex(12057, J$e);
                            } finally {
                                if (J$.Fr(12065))
                                    continue jalangiLabel8;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                set: J$.T(11241, function (value) {
                    jalangiLabel9:
                        while (true) {
                            try {
                                J$.Fe(11217, arguments.callee, this, arguments);
                                arguments = J$.N(11225, 'arguments', arguments, true, false, false);
                                value = J$.N(11233, 'value', value, true, false, false);
                                if (J$.C(96, J$.B(170, '===', J$.G(11113, J$.G(11105, J$.R(11097, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.T(11121, undefined, 24, false)))) {
                                    J$.F(11145, J$.R(11129, 'createProperty', createProperty, false, true), false)(J$.R(11137, 'this', this, false, false));
                                }
                                J$.P(11209, J$.G(11169, J$.G(11161, J$.R(11153, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.G(11193, J$.G(11185, J$.R(11177, 'this', this, false, false), 'propertyInfo'), 'last'), J$.R(11201, 'value', value, false, false));
                            } catch (J$e) {
                                J$.Ex(12073, J$e);
                            } finally {
                                if (J$.Fr(12081))
                                    continue jalangiLabel9;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(12121, J$e);
        } finally {
            if (J$.Sr(12129))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

