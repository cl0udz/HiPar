J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(14321, '/Users/ex1t/Desktop/nodeAnalysis/Goldie/tests/target/cache/node_modules/mongo-parse/mapValues.js');
            function obj() {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(14129, arguments.callee, this, arguments);
                            arguments = J$.N(14137, 'arguments', arguments, true, false, false);
                            J$.N(14145, 'result', result, false, false, false);
                            J$.N(14153, 'n', n, false, false, false);
                            var result = J$.W(13969, 'result', J$.T(13961, {}, 11, false), result, false, false);
                            for (var n = J$.W(13985, 'n', J$.T(13977, 0, 22, false), n, false, false); J$.C(232, J$.B(362, '<', J$.R(13993, 'n', n, false, false), J$.G(14009, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(14001, 'arguments', undefined, true, true) : arguments = J$.R(14001, 'arguments', arguments, true, true)), 'length'))); n = J$.W(14033, 'n', J$.B(370, '+', J$.R(14025, 'n', n, false, false), J$.T(14017, 2, 22, false)), n, false, false)) {
                                J$.P(14105, J$.R(14041, 'result', result, false, false), J$.G(14065, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(14049, 'arguments', undefined, true, true) : arguments = J$.R(14049, 'arguments', arguments, true, true)), J$.R(14057, 'n', n, false, false)), J$.G(14097, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(14073, 'arguments', undefined, true, true) : arguments = J$.R(14073, 'arguments', arguments, true, true)), J$.B(378, '+', J$.R(14081, 'n', n, false, false), J$.T(14089, 1, 22, false))));
                            }
                            return J$.Rt(14121, J$.R(14113, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(14465, J$e);
                        } finally {
                            if (J$.Fr(14473))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addOperator(obj, field, operator, operand) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(14273, arguments.callee, this, arguments);
                            arguments = J$.N(14281, 'arguments', arguments, true, false, false);
                            obj = J$.N(14289, 'obj', obj, true, false, false);
                            field = J$.N(14297, 'field', field, true, false, false);
                            operator = J$.N(14305, 'operator', operator, true, false, false);
                            operand = J$.N(14313, 'operand', operand, true, false, false);
                            if (J$.C(240, J$.B(386, '===', J$.G(14177, J$.R(14161, 'obj', obj, false, false), J$.R(14169, 'field', field, false, false)), J$.T(14185, undefined, 24, false)))) {
                                J$.P(14217, J$.R(14193, 'obj', obj, false, false), J$.R(14201, 'field', field, false, false), J$.T(14209, {}, 11, false));
                            }
                            J$.P(14265, J$.G(14241, J$.R(14225, 'obj', obj, false, false), J$.R(14233, 'field', field, false, false)), J$.R(14249, 'operator', operator, false, false), J$.R(14257, 'operand', operand, false, false));
                        } catch (J$e) {
                            J$.Ex(14481, J$e);
                        } finally {
                            if (J$.Fr(14489))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(14329, 'singleValueOperators', singleValueOperators, false, false, false);
            J$.N(14337, 'arrayOperators', arrayOperators, false, false, false);
            J$.N(14345, 'mapValues', mapValues, false, false, false);
            obj = J$.N(14361, 'obj', J$.T(14353, obj, 12, false), true, false, false);
            addOperator = J$.N(14377, 'addOperator', J$.T(14369, addOperator, 12, false), true, false, false);
            var singleValueOperators = J$.W(12193, 'singleValueOperators', J$.T(12185, {
                $gt: J$.T(12137, 1, 22, false),
                $gte: J$.T(12145, 1, 22, false),
                $lt: J$.T(12153, 1, 22, false),
                $lte: J$.T(12161, 1, 22, false),
                $ne: J$.T(12169, 1, 22, false),
                $not: J$.T(12177, 1, 22, false)
            }, 11, false), singleValueOperators, false, true);
            var arrayOperators = J$.W(12233, 'arrayOperators', J$.T(12225, {
                $nin: J$.T(12201, 1, 22, false),
                $all: J$.T(12209, 1, 22, false),
                $in: J$.T(12217, 1, 22, false)
            }, 11, false), arrayOperators, false, true);
            var mapValues = J$.W(13953, 'mapValues', J$.P(13945, J$.I(typeof module === 'undefined' ? module = J$.R(12241, 'module', undefined, true, true) : module = J$.R(12241, 'module', module, true, true)), 'exports', J$.T(13937, function (parts, callback, prefix) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(13889, arguments.callee, this, arguments);
                            arguments = J$.N(13897, 'arguments', arguments, true, false, false);
                            parts = J$.N(13905, 'parts', parts, true, false, false);
                            callback = J$.N(13913, 'callback', callback, true, false, false);
                            prefix = J$.N(13921, 'prefix', prefix, true, false, false);
                            J$.N(13929, 'result', result, false, false, false);
                            var result = J$.W(12257, 'result', J$.T(12249, {}, 11, false), result, false, false);
                            J$.M(13865, J$.R(12265, 'parts', parts, false, false), 'forEach', false)(J$.T(13857, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(13809, arguments.callee, this, arguments);
                                            arguments = J$.N(13817, 'arguments', arguments, true, false, false);
                                            part = J$.N(13825, 'part', part, true, false, false);
                                            J$.N(13833, 'field', field, false, false, false);
                                            J$.N(13841, 'mappedValue', mappedValue, false, false, false);
                                            J$.N(13849, 'operands', operands, false, false, false);
                                            if (J$.C(136, J$.B(242, '!==', J$.G(12281, J$.R(12273, 'part', part, false, false), 'field'), J$.T(12289, undefined, 24, false)))) {
                                                if (J$.C(128, J$.B(250, '!==', J$.R(12297, 'prefix', prefix, false, false), J$.T(12305, undefined, 24, false)))) {
                                                    var field = J$.W(12345, 'field', J$.B(266, '+', J$.B(258, '+', J$.R(12313, 'prefix', prefix, false, false), J$.T(12321, '.', 21, false)), J$.G(12337, J$.R(12329, 'part', part, false, false), 'field')), field, false, false);
                                                } else {
                                                    var field = J$.W(12369, 'field', J$.G(12361, J$.R(12353, 'part', part, false, false), 'field'), field, false, false);
                                                }
                                            } else {
                                                var field = J$.W(12385, 'field', J$.R(12377, 'prefix', prefix, false, false), field, false, false);
                                            }
                                            if (J$.C(224, J$.B(274, '===', J$.G(12409, J$.G(12401, J$.R(12393, 'part', part, false, false), 'parts'), 'length'), J$.T(12417, 0, 22, false)))) {
                                                if (J$.C(200, J$.B(282, '===', J$.G(12433, J$.R(12425, 'part', part, false, false), 'operator'), J$.T(12441, undefined, 24, false)))) {
                                                    if (J$.C(144, J$.B(290, 'instanceof', J$.G(12457, J$.R(12449, 'part', part, false, false), 'operand'), J$.I(typeof Array === 'undefined' ? Array = J$.R(12465, 'Array', undefined, true, true) : Array = J$.R(12465, 'Array', Array, true, true))))) {
                                                        J$.P(12593, J$.R(12473, 'result', result, false, false), J$.G(12489, J$.R(12481, 'part', part, false, false), 'field'), J$.M(12585, J$.G(12505, J$.R(12497, 'part', part, false, false), 'operand'), 'map', false)(J$.T(12577, function (v) {
                                                            jalangiLabel0:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(12553, arguments.callee, this, arguments);
                                                                        arguments = J$.N(12561, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(12569, 'v', v, true, false, false);
                                                                        return J$.Rt(12545, J$.F(12537, J$.R(12513, 'callback', callback, false, false), false)(J$.R(12521, 'field', field, false, false), J$.R(12529, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(14385, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(14393))
                                                                            continue jalangiLabel0;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else {
                                                        J$.P(12665, J$.R(12601, 'result', result, false, false), J$.G(12617, J$.R(12609, 'part', part, false, false), 'field'), J$.F(12657, J$.R(12625, 'callback', callback, false, false), false)(J$.R(12633, 'field', field, false, false), J$.G(12649, J$.R(12641, 'part', part, false, false), 'operand')));
                                                    }
                                                } else {
                                                    if (J$.C(192, J$.B(298, 'in', J$.G(12681, J$.R(12673, 'part', part, false, false), 'operator'), J$.R(12689, 'singleValueOperators', singleValueOperators, false, true)))) {
                                                        if (J$.C(152, J$.B(306, '!==', J$.G(12705, J$.R(12697, 'part', part, false, false), 'field'), J$.T(12713, undefined, 24, false)))) {
                                                            J$.F(12809, J$.R(12721, 'addOperator', addOperator, false, true), false)(J$.R(12729, 'result', result, false, false), J$.G(12745, J$.R(12737, 'part', part, false, false), 'field'), J$.G(12761, J$.R(12753, 'part', part, false, false), 'operator'), J$.F(12801, J$.R(12769, 'callback', callback, false, false), false)(J$.R(12777, 'field', field, false, false), J$.G(12793, J$.R(12785, 'part', part, false, false), 'operand')));
                                                        } else {
                                                            J$.P(12881, J$.R(12817, 'result', result, false, false), J$.G(12833, J$.R(12825, 'part', part, false, false), 'operator'), J$.F(12873, J$.R(12841, 'callback', callback, false, false), false)(J$.R(12849, 'field', field, false, false), J$.G(12865, J$.R(12857, 'part', part, false, false), 'operand')));
                                                        }
                                                    } else if (J$.C(184, J$.B(314, 'in', J$.G(12897, J$.R(12889, 'part', part, false, false), 'operator'), J$.R(12905, 'arrayOperators', arrayOperators, false, true)))) {
                                                        J$.F(13065, J$.R(12913, 'addOperator', addOperator, false, true), false)(J$.R(12921, 'result', result, false, false), J$.G(12937, J$.R(12929, 'part', part, false, false), 'field'), J$.G(12953, J$.R(12945, 'part', part, false, false), 'operator'), J$.M(13057, J$.G(12969, J$.R(12961, 'part', part, false, false), 'operand'), 'map', false)(J$.T(13049, function (v) {
                                                            jalangiLabel1:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(13025, arguments.callee, this, arguments);
                                                                        arguments = J$.N(13033, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(13041, 'v', v, true, false, false);
                                                                        return J$.Rt(13017, J$.F(13009, J$.R(12977, 'callback', callback, false, false), false)(J$.G(12993, J$.R(12985, 'part', part, false, false), 'field'), J$.R(13001, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(14401, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(14409))
                                                                            continue jalangiLabel1;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else if (J$.C(176, J$.B(322, '===', J$.G(13081, J$.R(13073, 'part', part, false, false), 'operator'), J$.T(13089, '$text', 21, false)))) {
                                                        J$.P(13161, J$.R(13097, 'result', result, false, false), '$text', J$.T(13153, { $search: J$.F(13145, J$.R(13105, 'callback', callback, false, false), false)(J$.R(13113, 'field', field, false, false), J$.G(13137, J$.G(13129, J$.R(13121, 'part', part, false, false), 'operand'), '$search')) }, 11, false));
                                                        if (J$.C(160, J$.B(330, '!==', J$.G(13185, J$.G(13177, J$.R(13169, 'part', part, false, false), 'operand'), '$language'), J$.T(13193, undefined, 24, false)))) {
                                                            J$.P(13241, J$.G(13209, J$.R(13201, 'result', result, false, false), '$text'), '$language', J$.G(13233, J$.G(13225, J$.R(13217, 'part', part, false, false), 'operand'), '$language'));
                                                        }
                                                    } else {
                                                        if (J$.C(168, J$.B(338, '!==', J$.G(13257, J$.R(13249, 'part', part, false, false), 'field'), J$.T(13265, undefined, 24, false)))) {
                                                            J$.F(13337, J$.R(13273, 'addOperator', addOperator, false, true), false)(J$.R(13281, 'result', result, false, false), J$.G(13297, J$.R(13289, 'part', part, false, false), 'field'), J$.G(13313, J$.R(13305, 'part', part, false, false), 'operator'), J$.G(13329, J$.R(13321, 'part', part, false, false), 'operand'));
                                                        } else {
                                                            J$.P(13385, J$.R(13345, 'result', result, false, false), J$.G(13361, J$.R(13353, 'part', part, false, false), 'operator'), J$.G(13377, J$.R(13369, 'part', part, false, false), 'operand'));
                                                        }
                                                    }
                                                }
                                            } else {
                                                if (J$.C(216, J$.B(346, '===', J$.G(13401, J$.R(13393, 'part', part, false, false), 'operator'), J$.T(13409, '$elemMatch', 21, false)))) {
                                                    var mappedValue = J$.W(13465, 'mappedValue', J$.F(13457, J$.R(13417, 'mapValues', mapValues, false, true), false)(J$.G(13433, J$.R(13425, 'part', part, false, false), 'parts'), J$.R(13441, 'callback', callback, false, false), J$.R(13449, 'field', field, false, false)), mappedValue, false, false);
                                                    J$.F(13529, J$.R(13473, 'addOperator', addOperator, false, true), false)(J$.R(13481, 'result', result, false, false), J$.G(13497, J$.R(13489, 'part', part, false, false), 'field'), J$.G(13513, J$.R(13505, 'part', part, false, false), 'operator'), J$.R(13521, 'mappedValue', mappedValue, false, false));
                                                } else if (J$.C(208, J$.B(354, '===', J$.G(13545, J$.R(13537, 'part', part, false, false), 'operator'), J$.T(13553, '$not', 21, false)))) {
                                                    J$.P(13633, J$.R(13561, 'result', result, false, false), J$.G(13577, J$.R(13569, 'part', part, false, false), 'operator'), J$.F(13625, J$.R(13585, 'mapValues', mapValues, false, true), false)(J$.G(13601, J$.R(13593, 'part', part, false, false), 'parts'), J$.R(13609, 'callback', callback, false, false), J$.R(13617, 'field', field, false, false)));
                                                } else {
                                                    var operands = J$.W(13649, 'operands', J$.T(13641, [], 10, false), operands, false, false);
                                                    J$.M(13761, J$.G(13665, J$.R(13657, 'part', part, false, false), 'parts'), 'forEach', false)(J$.T(13753, function (innerPart) {
                                                        jalangiLabel2:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(13729, arguments.callee, this, arguments);
                                                                    arguments = J$.N(13737, 'arguments', arguments, true, false, false);
                                                                    innerPart = J$.N(13745, 'innerPart', innerPart, true, false, false);
                                                                    J$.M(13721, J$.R(13673, 'operands', operands, false, false), 'push', false)(J$.F(13713, J$.R(13681, 'mapValues', mapValues, false, true), false)(J$.G(13697, J$.R(13689, 'innerPart', innerPart, false, false), 'parts'), J$.R(13705, 'callback', callback, false, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(14417, J$e);
                                                                } finally {
                                                                    if (J$.Fr(14425))
                                                                        continue jalangiLabel2;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(13801, J$.R(13769, 'result', result, false, false), J$.G(13785, J$.R(13777, 'part', part, false, false), 'operator'), J$.R(13793, 'operands', operands, false, false));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(14433, J$e);
                                        } finally {
                                            if (J$.Fr(14441))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(13881, J$.R(13873, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(14449, J$e);
                        } finally {
                            if (J$.Fr(14457))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), mapValues, false, true);
        } catch (J$e) {
            J$.Ex(14497, J$e);
        } finally {
            if (J$.Sr(14505))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

