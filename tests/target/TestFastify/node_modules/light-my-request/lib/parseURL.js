'use strict';

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.keys");

require("core-js/modules/web.dom-collections.for-each");

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _require = require('url'),
    URL = _require.URL;

var BASE_URL = 'http://localhost';
/**
 * Parse URL
 *
 * @param {(Object|String)} url
 * @param {Object} [query]
 * @return {URL}
 */

module.exports = function parseURL(url, query) {
  var result = _typeof(url) === 'object' ? Object.assign(new URL(BASE_URL), url) : new URL(url, BASE_URL);
  var merged = Object.assign({}, url.query, query);
  Object.keys(merged).forEach(function (key) {
    var value = merged[key];

    if (Array.isArray(value)) {
      result.searchParams["delete"](key);
      value.forEach(function (param) {
        result.searchParams.append(key, param);
      });
    } else {
      result.searchParams.set(key, value);
    }
  });
  return result;
};