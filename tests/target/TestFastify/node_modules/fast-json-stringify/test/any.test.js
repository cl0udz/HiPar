'use strict';

var test = require('tap').test;

var build = require('..');

test('object with nested random property', function (t) {
  t.plan(4);
  var schema = {
    title: 'empty schema to allow any object',
    type: 'object',
    properties: {
      id: {
        type: 'number'
      },
      name: {}
    }
  };
  var stringify = build(schema);

  try {
    var value = stringify({
      id: 1,
      name: 'string'
    });
    t.is(value, '{"id":1,"name":"string"}');
  } catch (e) {
    t.fail();
  }

  try {
    var _value = stringify({
      id: 1,
      name: {
        first: 'name',
        last: 'last'
      }
    });

    t.is(_value, '{"id":1,"name":{"first":"name","last":"last"}}');
  } catch (e) {
    t.fail();
  }

  try {
    var _value2 = stringify({
      id: 1,
      name: null
    });

    t.is(_value2, '{"id":1,"name":null}');
  } catch (e) {
    t.fail();
  }

  try {
    var _value3 = stringify({
      id: 1,
      name: ['first', 'last']
    });

    t.is(_value3, '{"id":1,"name":["first","last"]}');
  } catch (e) {
    t.fail();
  }
});
test('array with random items', function (t) {
  t.plan(1);
  var schema = {
    title: 'empty schema to allow any object',
    type: 'array',
    items: {}
  };
  var stringify = build(schema);

  try {
    var value = stringify([1, 'string', null]);
    t.is(value, '[1,"string",null]');
  } catch (e) {
    t.fail();
  }
});