'use strict';

var t = require('tap');

var test = t.test;

var FindMyWay = require('../');

test('Standard case', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay({
    defaultRoute: function defaultRoute(req, res) {
      t.fail('Should not be here');
    }
  });
  findMyWay.on('GET', '/a/:param', function (req, res, params) {
    t.equal(params.param, 'perfectly-fine-route');
  });
  findMyWay.lookup({
    method: 'GET',
    url: '/a/perfectly-fine-route',
    headers: {}
  }, null);
});
test('Should be 404 / 1', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay({
    defaultRoute: function defaultRoute(req, res) {
      t.pass('Everything good');
    }
  });
  findMyWay.on('GET', '/a/:param', function (req, res, params) {
    t.fail('We should not be here');
  });
  findMyWay.lookup({
    method: 'GET',
    url: '/a',
    headers: {}
  }, null);
});
test('Should be 404 / 2', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay({
    defaultRoute: function defaultRoute(req, res) {
      t.pass('Everything good');
    }
  });
  findMyWay.on('GET', '/a/:param', function (req, res, params) {
    t.fail('We should not be here');
  });
  findMyWay.lookup({
    method: 'GET',
    url: '/a-non-existing-route',
    headers: {}
  }, null);
});
test('Should be 404 / 3', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay({
    defaultRoute: function defaultRoute(req, res) {
      t.pass('Everything good');
    }
  });
  findMyWay.on('GET', '/a/:param', function (req, res, params) {
    t.fail('We should not be here');
  });
  findMyWay.lookup({
    method: 'GET',
    url: '/a//',
    headers: {}
  }, null);
});
test('Should get an empty parameter', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay({
    defaultRoute: function defaultRoute(req, res) {
      t.fail('We should not be here');
    }
  });
  findMyWay.on('GET', '/a/:param', function (req, res, params) {
    t.equal(params.param, '');
  });
  findMyWay.lookup({
    method: 'GET',
    url: '/a/',
    headers: {}
  }, null);
});