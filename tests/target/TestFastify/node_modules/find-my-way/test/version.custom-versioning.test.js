'use strict';

require("core-js/modules/es.array.find");

var t = require('tap');

var test = t.test;

var FindMyWay = require('../');

var noop = function noop() {};

var customVersioning = {
  // storage factory
  storage: function storage() {
    var versions = {};
    return {
      get: function get(version) {
        return versions[version] || null;
      },
      set: function set(version, store) {
        versions[version] = store;
      },
      del: function del(version) {
        delete versions[version];
      },
      empty: function empty() {
        versions = {};
      }
    };
  },
  deriveVersion: function deriveVersion(req, ctx) {
    return req.headers['accept'];
  }
};
test('A route could support multiple versions (find) / 1', function (t) {
  t.plan(5);
  var findMyWay = FindMyWay({
    versioning: customVersioning
  });
  findMyWay.on('GET', '/', {
    version: 'application/vnd.example.api+json;version=2'
  }, noop);
  findMyWay.on('GET', '/', {
    version: 'application/vnd.example.api+json;version=3'
  }, noop);
  t.ok(findMyWay.find('GET', '/', 'application/vnd.example.api+json;version=2'));
  t.ok(findMyWay.find('GET', '/', 'application/vnd.example.api+json;version=3'));
  t.notOk(findMyWay.find('GET', '/', 'application/vnd.example.api+json;version=4'));
  t.notOk(findMyWay.find('GET', '/', 'application/vnd.example.api+json;version=5'));
  t.notOk(findMyWay.find('GET', '/', 'application/vnd.example.api+json;version=6'));
});