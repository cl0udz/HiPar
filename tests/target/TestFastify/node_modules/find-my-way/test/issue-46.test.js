'use strict';

require("core-js/modules/es.array.find");

require("core-js/modules/es.array.find");

var t = require('tap');

var test = t.test;

var FindMyWay = require('../');

test('If the prefixLen is higher than the pathLen we should not save the wildcard child', function (t) {
  t.plan(3);
  var findMyWay = FindMyWay({
    defaultRoute: function defaultRoute(req, res) {
      t.fail('Should not be defaultRoute');
    }
  });
  findMyWay.get('/static/*', function () {});
  t.deepEqual(findMyWay.find('GET', '/static/').params, {
    '*': ''
  });
  t.deepEqual(findMyWay.find('GET', '/static/hello').params, {
    '*': 'hello'
  });
  t.deepEqual(findMyWay.find('GET', '/static'), null);
});
test('If the prefixLen is higher than the pathLen we should not save the wildcard child (mixed routes)', function (t) {
  t.plan(3);
  var findMyWay = FindMyWay({
    defaultRoute: function defaultRoute(req, res) {
      t.fail('Should not be defaultRoute');
    }
  });
  findMyWay.get('/static/*', function () {});
  findMyWay.get('/simple', function () {});
  findMyWay.get('/simple/:bar', function () {});
  findMyWay.get('/hello', function () {});
  t.deepEqual(findMyWay.find('GET', '/static/').params, {
    '*': ''
  });
  t.deepEqual(findMyWay.find('GET', '/static/hello').params, {
    '*': 'hello'
  });
  t.deepEqual(findMyWay.find('GET', '/static'), null);
});
test('If the prefixLen is higher than the pathLen we should not save the wildcard child (with a root wildcard)', function (t) {
  t.plan(3);
  var findMyWay = FindMyWay({
    defaultRoute: function defaultRoute(req, res) {
      t.fail('Should not be defaultRoute');
    }
  });
  findMyWay.get('*', function () {});
  findMyWay.get('/static/*', function () {});
  findMyWay.get('/simple', function () {});
  findMyWay.get('/simple/:bar', function () {});
  findMyWay.get('/hello', function () {});
  t.deepEqual(findMyWay.find('GET', '/static/').params, {
    '*': ''
  });
  t.deepEqual(findMyWay.find('GET', '/static/hello').params, {
    '*': 'hello'
  });
  t.deepEqual(findMyWay.find('GET', '/static').params, {
    '*': '/static'
  });
});
test('If the prefixLen is higher than the pathLen we should not save the wildcard child (404)', function (t) {
  t.plan(4);
  var findMyWay = FindMyWay({
    defaultRoute: function defaultRoute(req, res) {
      t.fail('Should not be defaultRoute');
    }
  });
  findMyWay.get('/static/*', function () {});
  findMyWay.get('/simple', function () {});
  findMyWay.get('/simple/:bar', function () {});
  findMyWay.get('/hello', function () {});
  t.deepEqual(findMyWay.find('GET', '/stati'), null);
  t.deepEqual(findMyWay.find('GET', '/staticc'), null);
  t.deepEqual(findMyWay.find('GET', '/stati/hello'), null);
  t.deepEqual(findMyWay.find('GET', '/staticc/hello'), null);
});