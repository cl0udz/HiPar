'use strict';

require("core-js/modules/es.array.find");

require("core-js/modules/es.array.find");

var t = require('tap');

var test = t.test;

var FindMyWay = require('../');

test('maxParamLength default value is 500', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay();
  t.strictEqual(findMyWay.maxParamLength, 100);
});
test('maxParamLength should set the maximum length for a parametric route', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay({
    maxParamLength: 10
  });
  findMyWay.on('GET', '/test/:param', function () {});
  t.deepEqual(findMyWay.find('GET', '/test/123456789abcd'), null);
});
test('maxParamLength should set the maximum length for a parametric (regex) route', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay({
    maxParamLength: 10
  });
  findMyWay.on('GET', '/test/:param(^\\d+$)', function () {});
  t.deepEqual(findMyWay.find('GET', '/test/123456789abcd'), null);
});
test('maxParamLength should set the maximum length for a parametric (multi) route', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay({
    maxParamLength: 10
  });
  findMyWay.on('GET', '/test/:param-bar', function () {});
  t.deepEqual(findMyWay.find('GET', '/test/123456789abcd'), null);
});
test('maxParamLength should set the maximum length for a parametric (regex with suffix) route', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay({
    maxParamLength: 10
  });
  findMyWay.on('GET', '/test/:param(^\\w{3})bar', function () {});
  t.deepEqual(findMyWay.find('GET', '/test/123456789abcd'), null);
});