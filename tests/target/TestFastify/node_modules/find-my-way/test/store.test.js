'use strict';

require("core-js/modules/es.array.find");

var t = require('tap');

var test = t.test;

var FindMyWay = require('../');

test('handler should have the store object', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay();
  findMyWay.on('GET', '/test', function (req, res, params, store) {
    t.is(store.hello, 'world');
  }, {
    hello: 'world'
  });
  findMyWay.lookup({
    method: 'GET',
    url: '/test',
    headers: {}
  }, null);
});
test('find a store object', function (t) {
  t.plan(1);
  var findMyWay = FindMyWay();

  var fn = function fn() {};

  findMyWay.on('GET', '/test', fn, {
    hello: 'world'
  });
  t.deepEqual(findMyWay.find('GET', '/test'), {
    handler: fn,
    params: {},
    store: {
      hello: 'world'
    }
  });
});
test('update the store', function (t) {
  t.plan(2);
  var findMyWay = FindMyWay();
  var bool = false;
  findMyWay.on('GET', '/test', function (req, res, params, store) {
    if (!bool) {
      t.is(store.hello, 'world');
      store.hello = 'hello';
      bool = true;
      findMyWay.lookup({
        method: 'GET',
        url: '/test',
        headers: {}
      }, null);
    } else {
      t.is(store.hello, 'hello');
    }
  }, {
    hello: 'world'
  });
  findMyWay.lookup({
    method: 'GET',
    url: '/test',
    headers: {}
  }, null);
});