'use strict';

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.for-each");

var test = require('tap').test;

var boot = require('..');

test('chainable standalone', function (t) {
  t.plan(5);
  var readyResult = boot().use(function (ctx, opts, done) {
    t.pass('1st plugin');
    done();
  }).after(function (err, done) {
    t.error(err);
    t.pass('2nd after');
    done();
  }).ready(function () {
    t.pass('we are ready');
  });
  t.equal(readyResult, undefined);
});
test('chainable automatically binded', function (t) {
  t.plan(5);
  var app = {};
  boot(app);
  var readyResult = app.use(function (ctx, opts, done) {
    t.pass('1st plugin');
    done();
  }).after(function (err, done) {
    t.error(err);
    t.pass('2nd after');
    done();
  }).ready(function () {
    t.pass('we are ready');
  });
  t.equal(readyResult, undefined);
});
['use', 'after', 'ready'].forEach(function (key) {
  test('throws if ' + key + ' is already there', function (t) {
    t.plan(1);
    var app = {};

    app[key] = function () {};

    try {
      boot(app);
      t.fail('error must happen');
    } catch (err) {
      t.equal(err.message, key + '() is already defined, specify an expose option');
    }
  });
  test('support expose for ' + key, function (t) {
    var app = {};

    app[key] = function () {};

    var expose = {};
    expose[key] = 'muahah';
    boot(app, {
      expose: expose
    });
    t.end();
  });
});