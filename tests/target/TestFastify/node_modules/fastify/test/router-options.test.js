'use strict';

require("core-js/modules/es.array.concat");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

var test = require('tap').test;

var sget = require('simple-get');

var Fastify = require('../');

test('Should honor ignoreTrailingSlash option', function (t) {
  t.plan(4);
  var fastify = Fastify({
    ignoreTrailingSlash: true
  });
  fastify.get('/test', function (req, res) {
    res.send('test');
  });
  fastify.listen(0, function (err) {
    fastify.server.unref();
    if (err) t.threw(err);
    var baseUrl = 'http://127.0.0.1:' + fastify.server.address().port;
    sget.concat(baseUrl + '/test', function (err, res, data) {
      if (err) t.threw(err);
      t.is(res.statusCode, 200);
      t.is(data.toString(), 'test');
    });
    sget.concat(baseUrl + '/test/', function (err, res, data) {
      if (err) t.threw(err);
      t.is(res.statusCode, 200);
      t.is(data.toString(), 'test');
    });
  });
});
test('Should honor maxParamLength option', function (t) {
  t.plan(4);
  var fastify = Fastify({
    maxParamLength: 10
  });
  fastify.get('/test/:id', function (req, reply) {
    reply.send({
      hello: 'world'
    });
  });
  fastify.inject({
    method: 'GET',
    url: '/test/123456789'
  }, function (error, res) {
    t.error(error);
    t.strictEqual(res.statusCode, 200);
  });
  fastify.inject({
    method: 'GET',
    url: '/test/123456789abcd'
  }, function (error, res) {
    t.error(error);
    t.strictEqual(res.statusCode, 404);
  });
});