'use strict';

var t = require('tap');

var test = t.test;

var Fastify = require('..');

var schema = {
  schema: {},
  config: {
    value1: 'foo',
    value2: true
  }
};

function handler(req, reply) {
  reply.send(reply.context.config);
}

test('config', function (t) {
  t.plan(9);
  var fastify = Fastify();
  fastify.get('/get', {
    schema: schema.schema,
    config: Object.assign({}, schema.config)
  }, handler);
  fastify.route({
    method: 'GET',
    url: '/route',
    schema: schema.schema,
    handler: handler,
    config: Object.assign({}, schema.config)
  });
  fastify.route({
    method: 'GET',
    url: '/no-config',
    schema: schema.schema,
    handler: handler
  });
  fastify.inject({
    method: 'GET',
    url: '/get'
  }, function (err, response) {
    t.error(err);
    t.strictEqual(response.statusCode, 200);
    t.deepEquals(JSON.parse(response.payload), Object.assign({
      url: '/get'
    }, schema.config));
  });
  fastify.inject({
    method: 'GET',
    url: '/route'
  }, function (err, response) {
    t.error(err);
    t.strictEqual(response.statusCode, 200);
    t.deepEquals(JSON.parse(response.payload), Object.assign({
      url: '/route'
    }, schema.config));
  });
  fastify.inject({
    method: 'GET',
    url: '/no-config'
  }, function (err, response) {
    t.error(err);
    t.strictEqual(response.statusCode, 200);
    t.deepEquals(JSON.parse(response.payload), {
      url: '/no-config'
    });
  });
});