'use strict';

var _require = require('tap'),
    test = _require.test;

var Fastify = require('..');

test('should emit warning using genReqId prop in logger options', function (t) {
  t.plan(1);
  process.once('warning', function (warning) {
    t.strictEqual(warning.message, "Using 'genReqId' in logger options is deprecated. Use fastify options instead. See: https://www.fastify.io/docs/latest/Server/#gen-request-id");
  });
  Fastify({
    logger: {
      genReqId: 'test'
    }
  });
});
test('should emit warning if basePath prop is used', function (t) {
  t.plan(1);
  process.once('warning', function (warning) {
    t.strictEqual(warning.message, 'basePath is deprecated. Use prefix instead. See: https://www.fastify.io/docs/latest/Server/#prefix');
  });
  var fastify = Fastify({
    basePath: '/test'
  });
  return fastify.basePath;
});
test('should emit warning if preHandler is used', function (t) {
  t.plan(1);
  process.once('warning', function (warning) {
    t.strictEqual(warning.message, 'The route option `beforeHandler` has been deprecated, use `preHandler` instead');
  });
  var fastify = Fastify();
  fastify.setNotFoundHandler({
    beforeHandler: function beforeHandler(req, reply, done) {
      return done();
    }
  }, function () {});
});