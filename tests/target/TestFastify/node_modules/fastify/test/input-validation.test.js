'use strict';

var t = require('tap');

var test = t.test;

var Fastify = require('..');

test('case insensitive header validation', function (t) {
  t.plan(2);
  var fastify = Fastify();
  fastify.route({
    method: 'GET',
    url: '/',
    handler: function handler(req, reply) {
      reply.code(200).send(req.headers.foobar);
    },
    schema: {
      headers: {
        type: 'object',
        required: ['FooBar'],
        properties: {
          FooBar: {
            type: 'string'
          }
        }
      }
    }
  });
  fastify.inject({
    method: 'GET',
    url: '/',
    headers: {
      FooBar: 'Baz'
    }
  }, function (err, res) {
    t.error(err);
    t.equal(res.payload, 'Baz');
  });
});
test('not evaluate json-schema $schema keyword', function (t) {
  t.plan(2);
  var fastify = Fastify();
  fastify.route({
    method: 'POST',
    url: '/',
    handler: function handler(req, reply) {
      reply.code(200).send(req.body.hello);
    },
    schema: {
      body: {
        $schema: 'http://json-schema.org/draft-07/schema#',
        type: 'object',
        properties: {
          hello: {
            type: 'string'
          }
        }
      }
    }
  });
  fastify.inject({
    method: 'POST',
    url: '/',
    body: {
      hello: 'world'
    }
  }, function (err, res) {
    t.error(err);
    t.equal(res.payload, 'world');
  });
});