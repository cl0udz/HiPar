'use strict';

var t = require('tap');

var test = t.test;

var sget = require('simple-get').concat;

var Fastify = require('..');

test('contentTypeParser should add a custom async parser', function (t) {
  t.plan(3);
  var fastify = Fastify();
  fastify.post('/', function (req, reply) {
    reply.send(req.body);
  });
  fastify.options('/', function (req, reply) {
    reply.send(req.body);
  });
  fastify.addContentTypeParser('application/jsoff', function _callee(req) {
    var res;
    return regeneratorRuntime.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return regeneratorRuntime.awrap(new Promise(function (resolve, reject) {
              return resolve(req);
            }));

          case 2:
            res = _context.sent;
            return _context.abrupt("return", res);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    });
  });
  fastify.listen(0, function (err) {
    t.error(err);
    t.tearDown(function () {
      return fastify.close();
    });
    t.test('in POST', function (t) {
      t.plan(3);
      sget({
        method: 'POST',
        url: 'http://localhost:' + fastify.server.address().port,
        body: '{"hello":"world"}',
        headers: {
          'Content-Type': 'application/jsoff'
        }
      }, function (err, response, body) {
        t.error(err);
        t.strictEqual(response.statusCode, 200);
        t.deepEqual(body.toString(), JSON.stringify({
          hello: 'world'
        }));
      });
    });
    t.test('in OPTIONS', function (t) {
      t.plan(3);
      sget({
        method: 'OPTIONS',
        url: 'http://localhost:' + fastify.server.address().port,
        body: '{"hello":"world"}',
        headers: {
          'Content-Type': 'application/jsoff'
        }
      }, function (err, response, body) {
        t.error(err);
        t.strictEqual(response.statusCode, 200);
        t.deepEqual(body.toString(), JSON.stringify({
          hello: 'world'
        }));
      });
    });
  });
});