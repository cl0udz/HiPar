'use strict';

require("core-js/modules/es.array.concat");

var t = require('tap');

var test = t.test;

var sget = require('simple-get').concat;

var fastify = require('..')();

var schema = {
  schema: {
    response: {
      '2xx': {
        type: 'null'
      }
    }
  }
};
var querySchema = {
  schema: {
    querystring: {
      type: 'object',
      properties: {
        hello: {
          type: 'integer'
        }
      }
    }
  }
};
var paramsSchema = {
  schema: {
    params: {
      type: 'object',
      properties: {
        foo: {
          type: 'string'
        },
        test: {
          type: 'integer'
        }
      }
    }
  }
};
test('shorthand - head', function (t) {
  t.plan(1);

  try {
    fastify.head('/', schema, function (req, reply) {
      reply.code(200).send(null);
    });
    t.pass();
  } catch (e) {
    t.fail();
  }
});
test('shorthand - head params', function (t) {
  t.plan(1);

  try {
    fastify.head('/params/:foo/:test', paramsSchema, function (req, reply) {
      reply.send(null);
    });
    t.pass();
  } catch (e) {
    t.fail();
  }
});
test('shorthand - head, querystring schema', function (t) {
  t.plan(1);

  try {
    fastify.head('/query', querySchema, function (req, reply) {
      reply.code(200).send(null);
    });
    t.pass();
  } catch (e) {
    t.fail();
  }
});
test('missing schema - head', function (t) {
  t.plan(1);

  try {
    fastify.head('/missing', function (req, reply) {
      reply.code(200).send(null);
    });
    t.pass();
  } catch (e) {
    t.fail();
  }
});
fastify.listen(0, function (err) {
  t.error(err);
  fastify.server.unref();
  test('shorthand - request head', function (t) {
    t.plan(2);
    sget({
      method: 'HEAD',
      url: 'http://localhost:' + fastify.server.address().port
    }, function (err, response) {
      t.error(err);
      t.strictEqual(response.statusCode, 200);
    });
  });
  test('shorthand - request head params schema', function (t) {
    t.plan(2);
    sget({
      method: 'HEAD',
      url: 'http://localhost:' + fastify.server.address().port + '/params/world/123'
    }, function (err, response) {
      t.error(err);
      t.strictEqual(response.statusCode, 200);
    });
  });
  test('shorthand - request head params schema error', function (t) {
    t.plan(2);
    sget({
      method: 'HEAD',
      url: 'http://localhost:' + fastify.server.address().port + '/params/world/string'
    }, function (err, response) {
      t.error(err);
      t.strictEqual(response.statusCode, 400);
    });
  });
  test('shorthand - request head querystring schema', function (t) {
    t.plan(2);
    sget({
      method: 'HEAD',
      url: 'http://localhost:' + fastify.server.address().port + '/query?hello=123'
    }, function (err, response) {
      t.error(err);
      t.strictEqual(response.statusCode, 200);
    });
  });
  test('shorthand - request head querystring schema error', function (t) {
    t.plan(2);
    sget({
      method: 'HEAD',
      url: 'http://localhost:' + fastify.server.address().port + '/query?hello=world'
    }, function (err, response) {
      t.error(err);
      t.strictEqual(response.statusCode, 400);
    });
  });
  test('shorthand - request head missing schema', function (t) {
    t.plan(2);
    sget({
      method: 'HEAD',
      url: 'http://localhost:' + fastify.server.address().port + '/missing'
    }, function (err, response) {
      t.error(err);
      t.strictEqual(response.statusCode, 200);
    });
  });
});