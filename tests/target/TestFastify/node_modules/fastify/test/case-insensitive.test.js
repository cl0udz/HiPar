'use strict';

require("core-js/modules/es.array.concat");

require("core-js/modules/es.function.bind");

var t = require('tap');

var test = t.test;

var Fastify = require('..');

var sget = require('simple-get').concat;

test('case insensitive', function (t) {
  t.plan(4);
  var fastify = Fastify({
    caseSensitive: false
  });
  t.tearDown(fastify.close.bind(fastify));
  fastify.get('/foo', function (req, reply) {
    reply.send({
      hello: 'world'
    });
  });
  fastify.listen(0, function (err) {
    t.error(err);
    sget({
      method: 'GET',
      url: 'http://localhost:' + fastify.server.address().port + '/FOO'
    }, function (err, response, body) {
      t.error(err);
      t.strictEqual(response.statusCode, 200);
      t.deepEqual(JSON.parse(body), {
        hello: 'world'
      });
    });
  });
});
test('case insensitive inject', function (t) {
  t.plan(4);
  var fastify = Fastify({
    caseSensitive: false
  });
  t.tearDown(fastify.close.bind(fastify));
  fastify.get('/foo', function (req, reply) {
    reply.send({
      hello: 'world'
    });
  });
  fastify.listen(0, function (err) {
    t.error(err);
    fastify.inject({
      method: 'GET',
      url: 'http://localhost:' + fastify.server.address().port + '/FOO'
    }, function (err, response) {
      t.error(err);
      t.strictEqual(response.statusCode, 200);
      t.deepEqual(JSON.parse(response.payload), {
        hello: 'world'
      });
    });
  });
});
test('case insensitive (parametric)', function (t) {
  t.plan(5);
  var fastify = Fastify({
    caseSensitive: false
  });
  t.tearDown(fastify.close.bind(fastify));
  fastify.get('/foo/:param', function (req, reply) {
    t.strictEqual(req.params.param, 'bAr');
    reply.send({
      hello: 'world'
    });
  });
  fastify.listen(0, function (err) {
    t.error(err);
    sget({
      method: 'GET',
      url: 'http://localhost:' + fastify.server.address().port + '/FoO/bAr'
    }, function (err, response, body) {
      t.error(err);
      t.strictEqual(response.statusCode, 200);
      t.deepEqual(JSON.parse(body), {
        hello: 'world'
      });
    });
  });
});
test('case insensitive (wildcard)', function (t) {
  t.plan(5);
  var fastify = Fastify({
    caseSensitive: false
  });
  t.tearDown(fastify.close.bind(fastify));
  fastify.get('/foo/*', function (req, reply) {
    t.strictEqual(req.params['*'], 'bAr/baZ');
    reply.send({
      hello: 'world'
    });
  });
  fastify.listen(0, function (err) {
    t.error(err);
    sget({
      method: 'GET',
      url: 'http://localhost:' + fastify.server.address().port + '/FoO/bAr/baZ'
    }, function (err, response, body) {
      t.error(err);
      t.strictEqual(response.statusCode, 200);
      t.deepEqual(JSON.parse(body), {
        hello: 'world'
      });
    });
  });
});