'use strict';

var t = require('tap');

var test = t.test;

var _require = require('stream'),
    Readable = _require.Readable;

var internals = require('../../lib/contentTypeParser')[Symbol.for('internals')];

var Request = require('../../lib/request');

var Reply = require('../../lib/reply');

test('rawBody function', function (t) {
  t.plan(2);
  var body = Buffer.from('你好 世界');
  var parser = {
    asString: true,
    asBuffer: false,

    fn(req, bodyInString, done) {
      t.equal(bodyInString, body.toString());
      t.is(typeof done, 'function');
      return {
        then(cb) {
          cb();
        }

      };
    }

  };
  var res = {};

  res.end = function () {};

  res.writeHead = function () {};

  res.log = {
    error: function error() {},
    info: function info() {}
  };
  var context = {
    Reply: Reply,
    Request: Request,
    preHandler: [],
    onSend: [],
    _parserOptions: {
      limit: 1024
    }
  };
  var rs = new Readable();

  rs._read = function () {};

  rs.headers = {
    'content-length': body.length
  };
  var request = new Request('params', rs, 'query', {
    'content-length': body.length
  }, 'log');
  var reply = new Reply(res, context, {});

  var done = function done() {};

  internals.rawBody(request, reply, reply.context._parserOptions, parser, done);
  rs.emit('data', body.toString());
  rs.emit('end');
});