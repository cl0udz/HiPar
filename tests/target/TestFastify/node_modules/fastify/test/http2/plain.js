'use strict';

require("core-js/modules/es.array.concat");

var t = require('tap');

var test = t.test;

var Fastify = require('../..');

var h2url = require('h2url');

var msg = {
  hello: 'world'
};
var fastify;

try {
  fastify = Fastify({
    http2: true
  });
  t.pass('http2 successfully loaded');
} catch (e) {
  t.fail('http2 loading failed', e);
}

fastify.get('/', function (req, reply) {
  reply.code(200).send(msg);
});
fastify.listen(0, function (err) {
  t.error(err);
  fastify.server.unref();
  test('http get request', function _callee(t) {
    var url, res;
    return regeneratorRuntime.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            t.plan(3);
            url = "http://localhost:".concat(fastify.server.address().port);
            _context.next = 4;
            return regeneratorRuntime.awrap(h2url.concat({
              url: url
            }));

          case 4:
            res = _context.sent;
            t.strictEqual(res.headers[':status'], 200);
            t.strictEqual(res.headers['content-length'], '' + JSON.stringify(msg).length);
            t.deepEqual(JSON.parse(res.body), msg);

          case 8:
          case "end":
            return _context.stop();
        }
      }
    });
  });
});