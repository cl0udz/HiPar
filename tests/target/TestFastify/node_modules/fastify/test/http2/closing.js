'use strict';

var t = require('tap');

var Fastify = require('../..');

var http2 = require('http2');

var semver = require('semver');

t.test('http/2 request while fastify closing', function (t) {
  var fastify;

  try {
    fastify = Fastify({
      http2: true
    });
    t.pass('http2 successfully loaded');
  } catch (e) {
    t.fail('http2 loading failed', e);
  }

  fastify.get('/', function () {
    return Promise.resolve({});
  });
  fastify.listen(0, function (err) {
    t.error(err);
    fastify.server.unref(); // Skipped because there is likely a bug on Node 8.

    t.test('return 200', {
      skip: semver.lt(process.versions.node, '10.15.0')
    }, function (t) {
      var url = `http://127.0.0.1:${fastify.server.address().port}`;
      var session = http2.connect(url, function () {
        var _this = this;

        this.request({
          ':method': 'GET',
          ':path': '/'
        }).on('response', function (headers) {
          t.strictEqual(headers[':status'], 503);
          t.end();

          _this.destroy();
        }).on('error', function () {// Nothing to do here,
          // we are not interested in this error that might
          // happen or not
        });
        fastify.close();
      });
      session.on('error', function () {
        // Nothing to do here,
        // we are not interested in this error that might
        // happen or not
        t.end();
      });
    });
    t.end();
  });
});
t.test('http/2 request while fastify closing - return503OnClosing: false', function (t) {
  var fastify;

  try {
    fastify = Fastify({
      http2: true,
      return503OnClosing: false
    });
    t.pass('http2 successfully loaded');
  } catch (e) {
    t.fail('http2 loading failed', e);
  }

  fastify.get('/', function () {
    return Promise.resolve({});
  });
  fastify.listen(0, function (err) {
    t.error(err);
    fastify.server.unref(); // Skipped because there is likely a bug on Node 8.

    t.test('return 200', {
      skip: semver.lt(process.versions.node, '10.15.0')
    }, function (t) {
      var url = `http://127.0.0.1:${fastify.server.address().port}`;
      var session = http2.connect(url, function () {
        var _this2 = this;

        this.request({
          ':method': 'GET',
          ':path': '/'
        }).on('response', function (headers) {
          t.strictEqual(headers[':status'], 200);
          t.end();

          _this2.destroy();
        }).on('error', function () {// Nothing to do here,
          // we are not interested in this error that might
          // happen or not
        });
        fastify.close();
      });
      session.on('error', function () {
        // Nothing to do here,
        // we are not interested in this error that might
        // happen or not
        t.end();
      });
    });
    t.end();
  });
});