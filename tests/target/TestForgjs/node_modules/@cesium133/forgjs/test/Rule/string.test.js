"use strict";

var _require = require('../../src'),
    Rule = _require.Rule;

test('type string returns true when a string', function () {
  var strRule = new Rule({
    type: 'string'
  }, null);
  expect(strRule.test('dqsdqsd')).toBe(true);
  expect(strRule.test(String('dqsdqsd'))).toBe(true);
});
test('type string returns false when not string', function () {
  var strRule = new Rule({
    type: 'string'
  }, null);
  expect(strRule.test({})).toBe(false);
});
test('type string returns true when matches a REGEX', function () {
  var strRule = new Rule({
    type: 'string',
    match: /^The/g
  }, null);
  expect(strRule.test('The quick brown fox')).toBe(true);
});
test('type string returns false when doesen\'t matches a REGEX', function () {
  var strRule = new Rule({
    type: 'string',
    match: /^The/g
  }, null);
  expect(strRule.test('the quick brown fox')).toBe(false);
});
test('throws error when test doesn\'t exist', function () {
  expect(function () {
    var strRule = new Rule({
      type: 'string',
      dummyTest: /^The/g
    }, null);
    strRule.test('the quick brown fox');
  }).toThrow();
});
test('type string returns true when string not empty', function () {
  var strRule = new Rule({
    type: 'string',
    notEmpty: true
  }, null);
  expect(strRule.test('the quick brown fox')).toBe(true);
});
test('type string returns false when string empty', function () {
  var strRule = new Rule({
    type: 'string',
    notEmpty: true
  }, null);
  expect(strRule.test('')).toBe(false);
});
test('type string returns true when two strings are equal', function () {
  var strRule = new Rule({
    type: 'string',
    notEmpty: true,
    equal: 'hello'
  }, null);
  expect(strRule.test('hello')).toBe(true);
});
test('type string returns true when string minLength', function () {
  var strRule = new Rule({
    type: 'string',
    notEmpty: true,
    minLength: 2
  }, null);
  expect(strRule.test('hello')).toBe(true);
});