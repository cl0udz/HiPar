"use strict";

var _require = require('../../src'),
    Rule = _require.Rule;

test('type float returns true when float', function () {
  var floatRule = new Rule({
    type: 'float'
  }, null);
  expect(floatRule.test(2.001)).toBe(true);
});
test('type float returns false when int', function () {
  var floatRule = new Rule({
    type: 'float'
  }, null);
  expect(floatRule.test(2)).toBe(false);
});
test('type float returns true when bigger than 100', function () {
  var floatRule = new Rule({
    type: 'float',
    min: 100
  }, null);
  expect(floatRule.test(100.3)).toBe(true);
});
test('type float returns true when smaller than 100', function () {
  var floatRule = new Rule({
    type: 'float',
    max: 100
  }, null);
  expect(floatRule.test(99.3)).toBe(true);
});
test('type float returns true when two floats are equal', function () {
  var floatRule = new Rule({
    type: 'float',
    equal: 100.1
  }, null);
  expect(floatRule.test(100.1)).toBe(true);
});
test('type float returns true when is one of array', function () {
  var floatRule = new Rule({
    type: 'float',
    oneOf: [3.5, 100.1, 7.2, 0.1]
  }, null);
  expect(floatRule.test(100.1)).toBe(true);
});
test('type float returns false when is not one of array', function () {
  var floatRule = new Rule({
    type: 'float',
    oneOf: [100.01, 7.2, 0.1]
  }, null);
  expect(floatRule.test(100.1)).toBe(false);
});