"use strict";

require("core-js/modules/es.date.to-string.js");

require("core-js/modules/es.date.to-string.js");

var _require = require('../../src'),
    Rule = _require.Rule;

test('throws error when test doesn\'t exist', function () {
  expect(function () {
    var rule = new Rule({
      type: 'date',
      dummyTest: /^The/g
    }, null);
    rule.test();
  }).toThrow();
});
test('returns false when not date', function () {
  var dateRule = new Rule({
    type: 'date'
  }, null);
  expect(dateRule.test('the quick brown fox')).toBe(false);
});
test('returns true when date is after a specific date', function () {
  var date = new Date(2018, 11, 1);
  var test = new Date(2018, 11, 2);
  var dateRule = new Rule({
    type: 'date',
    after: date
  }, null);
  expect(dateRule.test(test)).toBe(true);
});
test('returns true when date is before a specific date', function () {
  var date = new Date(2018, 11, 3);
  var test = new Date(2018, 11, 2);
  var dateRule = new Rule({
    type: 'date',
    before: date
  }, null);
  expect(dateRule.test(test)).toBe(true);
});
test('returns true when date is between two dates', function () {
  var date1 = new Date(2018, 11, 3);
  var date2 = new Date(2018, 11, 7);
  var test = new Date(2018, 11, 5);
  var dateRule = new Rule({
    type: 'date',
    between: [date1, date2]
  }, null);
  expect(dateRule.test(test)).toBe(true);
});
test('returns true when two dates are equal', function () {
  var date1 = new Date(2018, 11, 3);
  var dateRule = new Rule({
    type: 'date',
    equal: date1
  }, null);
  expect(dateRule.test(date1)).toBe(true);
});
test('returns true when date is one of array', function () {
  var date1 = new Date(2018, 11, 3);
  var dateRule = new Rule({
    type: 'date',
    oneOf: [new Date(2018, 11, 3), new Date()]
  }, null);
  expect(dateRule.test(date1)).toBe(true);
});