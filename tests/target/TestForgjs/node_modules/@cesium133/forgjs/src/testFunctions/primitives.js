"use strict";

require("core-js/modules/es.number.constructor.js");

require("core-js/modules/es.number.constructor.js");
/**
 * These are the basic validation functions that are common to multiple types
 */


var _require = require('../util'),
    isString = _require.isString;
/**
 * This object combines all  validation functions related to numbers
 */


var NUMBER = {
  min: function min(val, _min) {
    return val - _min >= 0;
  },
  max: function max(val, _max) {
    return val - _max <= 0;
  },
  equal: function equal(val, _equal) {
    return val === _equal;
  },
  type: function type(val) {
    return Number(val) === val;
  }
};
/**
 * This object combines all  validation functions related to strings
 */

var STRING = {
  minLength: function minLength(val, min) {
    return val.length - min >= 0;
  },
  maxLength: function maxLength(val, max) {
    return val.length - max <= 0;
  },
  equal: function equal(val, _equal2) {
    return val === _equal2;
  },
  match: function match(val, regex) {
    return regex.test(val);
  },
  notEmpty: function notEmpty(val) {
    return val !== '';
  },
  type: isString
};
/**
 * This object combines all  validation functions related to booleans
 */

var BOOLEAN = {
  type: function type(val) {
    return val === true || val === false;
  },
  toBe: function toBe(val, bool) {
    return val === bool;
  }
};
module.exports = {
  BOOLEAN: BOOLEAN,
  STRING: STRING,
  NUMBER: NUMBER
};