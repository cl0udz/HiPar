/*
watcher.js 2.5.3- app watcher
Built on 2015-10-20
*/
"use strict";function createConnector(a){var b,c=a.type;switch(c){case socketConnectorType:b=socketConnectorFactory.create(a);break;case httpConnectorType:b=httpConnectorFactory.create(a);break;default:throw new Error("Can not create connector type: "+c)}return b}var fs=require("fs-extra"),events=require("events"),path=require("path"),stampit=require("stampit"),_=require("underscore"),s=require("underscore.string"),Q=require("q"),moment=require("moment"),nodemailer=require("nodemailer"),directTransport=require("nodemailer-direct-transport"),logger=require("./logger"),validator=require("./validator"),constants=require("./constants"),connectors=require("./connectors"),httpServerFactory=require("./http-server"),dbConnFactory=require("./database"),up=constants.serviceStatus.up,registrationPhase=constants.lifecyclePhase.registrationPhase,activationPhase=constants.lifecyclePhase.activationPhase,deactivationPhase=constants.lifecyclePhase.deactivationPhase,inProgressPhase=constants.lifecyclePhase.inProgressPhase,terminationPhase=constants.lifecyclePhase.terminationPhase,socketConnectorFactory=connectors.socketConnectorFactory,httpConnectorFactory=connectors.httpConnectorFactory,undetermined=constants.serviceStatus.undetermined,wjsConfigured=constants.watcherEvents.wjsConfigured,wjsReady=constants.watcherEvents.wjsReady,endpointsStatusResolved=constants.watcherEvents.endpointsStatusResolved,wjsConnected=constants.watcherEvents.wjsConnected,wjsEndpointsUpdated=constants.watcherEvents.wjsEndpointsUpdated,socketConnectorType=constants.connectorType.socket,httpConnectorType=constants.connectorType.http,watcher,watcherFactory,ddFsOutputJson=Q.denodeify(fs.outputJson),ddFsStat=Q.denodeify(fs.stat),ddFsRemove=Q.denodeify(fs.remove),ddFsReadJson=Q.denodeify(fs.readJson);watcher=stampit().state({options:void 0,emitter:void 0}).enclose(function(){process.on("SIGTERM",_.bind(this.stop,this)),process.on("SIGINT",_.bind(this.stop,this)),this._registry={},this._transporter=nodemailer.createTransport(directTransport({})),this._passive=!1,this._stopped=!0}).methods({_registerEndpoint:function(a){var b=Q.defer(),c=this,d=moment.utc(),e={status:undetermined,timestamp:d,since:d,processed:!1,active:!0,notify:!1};a=_.clone(a);var f=createConnector(a),g=_.omit(_.defaults(a,e),"resolutionStrategy");g.desc=g.desc||g.id,g.connector=f;var h=_.bind(_.partial(c._onStatusResolve,g),c);return f.addStatusResolvedListener(h),c._storeStatusToHistory({id:g.id,phase:registrationPhase,fStatus:g.status,tStatus:undetermined}).then(function(){c._registry[g.id]=g,b.resolve(g),logger.debug("New endpoint registered: "+g.id)}).fail(function(a){b.reject(a),logger.error("Endpoint "+g.id+" registration failed: "+a)}),b.promise},_notify:function(){var a,b=this.options.nfOpts.sender,c=this.options.nfOpts.recipients;if(!_.isEmpty(c)&&(a=_.filter(this._registry,function(a){var b=a.status;if(a.active&&up!==b&&undetermined!==b){if(a.notify&&(b!==a.previousStatus||!a.notified))return!0}else a.notified=!1;return!1}),!_.isEmpty(a))){var d=[];_.each(a,function(a){d.push("Endpoint, '"+a.id+"', status: "+a.status+", timestamp: "+a.timestamp.format("MMMM Do YYYY, h:mm:ss"))}),d=d.join(""),this._transporter.sendMail({from:b,to:c.join(","),subject:"Notification",text:d},function(b,c){b?logger.warn("Notification message failed: "+b):(logger.info("Notification message send: "+d),_.each(a,function(a){a.notified=!0}))})}},_onStatusResolve:function(a,b){if(!this._stopped){var c=moment.utc();a.timestamp=c,b!==a.status&&(a.since=c,this._storeStatusToHistory({id:a.id,phase:inProgressPhase,fStatus:a.status,tStatus:b})),a.previousStatus=a.status,a.status=b,a.processed=!0,logger.debug("Update registry, id/status: "+a.id+"/"+b),_.every(this._registry,function(a){return a.processed===!0})&&(this._notify(),this.emitter.emit(endpointsStatusResolved),setTimeout(_.bind(this._pollEndpoints,this),this.options.interval).unref())}},_storeStatusToHistory:function(a){var b=moment.utc(),c=[];return c.push({endpointId:a.id,timestamp:b.valueOf(),phase:a.phase,statusTransition:{from:a.fStatus,to:a.tStatus}}),Q.nbind(this.db.insertEndpointsHistory,this.db)(c)},_pollEndpoints:function(){var a=this;if(!a._stopped){var b=a._registry;_.each(b,function(a){a.processed=!1});var c=this._passive=_.every(b,function(a){return!a.active});c?logger.debug("No active endpoints, system passivated."):(logger.debug("Poll for services status..."),_.each(b,function(a){a.active?a.connector.start.call(a.connector):a.processed=!0}))}},_writeEndpointConfigToFile:function(a,b){return ddFsOutputJson(a,b).fail(function(a){logger.error("Endpoint storage '"+b.id+"' failed: "+a),a="Update endpoint configuration at storage failed ("+a.message+")"})},_restartIfPassive:function(){!0===this._passive&&(logger.debug("Active endpoint found, system activated."),setTimeout(_.bind(this._pollEndpoints,this),0).unref())},_deleteEndpoint:function(a){var b=this,c=path.join(this.options.exportDir,a+".json");return ddFsStat(c).then(function(b){return ddFsRemove(c).then(function(){logger.info("Endpoint '"+a+"' removed from storage: "+c)})},function(b){logger.debug("Endpoint '"+a+"' is not persisted at local store, error details: "+b)})["finally"](function(){delete b._registry[a]})},_updateEndpointConfig:function(a,b){var c=this,d=path.join(this.options.exportDir,a+".json");return ddFsStat(d).then(function(a){ddFsReadJson(d).then(function(a){return _.extend(a,b),c._writeEndpointConfigToFile(d,a)},function(a){logger.warn("Unable to update endpoint persistence state, invalid json file: "+d)})},function(b){logger.debug("Endpoint '"+a+"' not found at local store, not permanent changes.")})},_getStoredEndpoints:function(){var a=this.options.exportDir;fs.ensureDirSync(a),logger.debug("Ensuring existence of endpoints storage directory: "+a);var b=[];return fs.readdirSync(a).forEach(function(c){var d=path.join(a,c),e=fs.statSync(d);if(!e.isDirectory()&&s(c).endsWith(".json")){var f=fs.readJsonSync(d,{"throws":!1});_.isNull(f)?logger.warn("Unable to construct endpoint from storage, invalid json file: "+d):(b.push(f),logger.info("Get endpoint from storage: "+d))}}),b},getEndpoint:function(a){return Q(this._registry[a])},getEndpoints:function(){return Q(_.values(this._registry))},addEndpoint:function(a,b){var c=this,d=Q.defer(),e=c._registry,f=validator.validateEndpointConfig(a,_.keys(e),c.options.resolutionStrategies);return _.isEmpty(f)?c._registerEndpoint(a).then(function(e){if(e.active&&c._restartIfPassive(),b){var f=path.join(c.options.exportDir,a.id+".json");a=_.clone(a);var g=a.resolutionStrategy;g&&(a.resolutionStrategy=g.id),c._writeEndpointConfigToFile(f,a).then(function(){d.resolve(e),c.emitter.emit(endpointsStatusResolved)}).fail(d.reject)}else d.resolve(e),c.emitter.emit(endpointsStatusResolved)}).fail(function(a){d.reject(a)}):(f.validation=!0,d.reject(f)),d.promise},removeEndpoint:function(a){var b,c=this;return c.getEndpoint(a).then(function(d){return d?(b=d,c._deleteEndpoint(a).then(function(){return Q.nbind(c.db.removeEndpointHistory,c.db)(a)}).then(function(){return Q(b)})):void 0})},setEndpointActivationState:function(a,b){var c=this,d=Q.defer(),e=c._registry[a];return e?c._updateEndpointConfig(a,{active:b}).then(function(){return c._storeStatusToHistory({id:e.id,phase:b?activationPhase:deactivationPhase,fStatus:e.status,tStatus:undetermined})}).then(function(){var f=moment().utc();e.active=b,e.status=undetermined,e.timestamp=f,e.since=f,d.resolve(e),logger.debug("Endpoint "+a+" activation state set to: "+b),b&&c._restartIfPassive()}).fail(d.reject):(logger.warn("Unable to set the activation state, endpoint '"+a+"' does not exist."),d.resolve(void 0)),d.promise},notifyOnErroneousStatus:function(a,b){var c=Q.defer(),d=this._registry[a];return d?(d.notify=b,this._updateEndpointConfig(a,{notify:b}).then(function(e){c.resolve(d),logger.debug("Endpoint '"+a+"' notification state set to: "+b)}).fail(c.reject)):(c.resolve(void 0),logger.warn("Unable to set the notification state, endpoint '"+a+"' does not exist.")),c.promise},getResolutionStrategies:function(){return Q(this.options.resolutionStrategies)},getHistory:function(a){return Q.nbind(this.db.findHistoryForEndpoint,this.db)(a.endpointId,a.from,a.to)},getSettings:function(){return Q(_.pick(this.options,["interval"]))},updateSettings:function(a){var b=Q.defer(),c=_.clone(this.options);_.extend(c,_.pick(a,["interval"]));var d=validator.validateServerConfig(c);return a=_.pick(c,["interval"]),_.isEmpty(d)?(this.options=c,b.resolve(a)):b.reject(d),b.promise},_setup:function(){logger.debug("Setting up watcher engine...");var a=this,b=a.options,c=a._registry,d=validator.validateServerConfig(b);if(_.isEmpty(d)){a.server=httpServerFactory.create({port:b.port,host:b.host,routesCallback:function(d){var e=require("./routes/watcher-http");d.param("id",function(a,b,c,d){a.id=d,c()}),d.get("/endpoints",e.endpoints(a)),d.get("/endpoints/:id",e.endpoint(a)),d.post("/endpoints",e.addEndpoint(a)),d["delete"]("/endpoints/:id",e.removeEndpoint(a)),d.post("/endpoints/:id/activate",e.endpointActivate(a)),d["delete"]("/endpoints/:id/activate",e.endpointDeactivate(a)),d.post("/endpoints/:id/notify",e.endpointEnableNotification(a)),d["delete"]("/endpoints/:id/notify",e.endpointDisableNotification(a)),d.get("/resolution-strategies",e.resolutionStrategies(a)),d.get("/history/endpoints",e.history(a)),d.get("/history/endpoints/:id",e.history(a)),d.get("/history/endpoints/:from/:to",e.history(a)),d.get("/history/endpoints/:id/:from/:to",e.history(a)),d.get("/settings",e.getSettings(a)),d.put("/settings",e.updateSettings(a)),d.get("/console",function(a,b){b.render("console")}),_.each(b.routeExts,function(a){d.use(a.path,a.route(c))})}});var e=this._getStoredEndpoints(),f=b.endpoints.concat(e),g=[];_.each(f,function(b){g.push(a.addEndpoint(b,!1))}),_.isEmpty(g)?a.emitter.emit(wjsConfigured):Q.allSettled(g).then(function(c){c.forEach(function(a,b){"fulfilled"!==a.state&&logger.error("Endpoint '"+f[b].id+"' addition failed: "+a.reason)}),a.emitter.emit(wjsConfigured),logger.info("Properties are successfully loaded: "+JSON.stringify(b))})}else logger.error("validation errors:"),_.each(d,function(a){logger.error(a)}),a.stop();return a},start:function(){var a=this;if(a._stopped){a._stopped=!1;var b=a.options.dbConnectionURL;b.indexOf("mongo")>-1?a.db=dbConnFactory.createMongoDBOperationsWrapper(b):a.db=dbConnFactory.createSQLiteDBOperationsWrapper(b),a._stopped=!1,a._setup();var c=a.options.port,d=a.options.host,e=a.options.interval;a.server.start(function(){a.emitter.emit(wjsReady),logger.info("Watcher is up and running (host/port/interval): ("+d+"/"+c+"/"+e+")"),setTimeout(_.bind(a._pollEndpoints,a),0).unref()});var f=a.server.io;return f.on("connection",function(a){a.emit(wjsConnected,{message:"connected with watcher.js"})}),a.emitter.on(endpointsStatusResolved,function(){f.emit(wjsEndpointsUpdated,{message:"endpoints data updated!"})}),a}},stop:function(){logger.info("Shutting down Watcher app...");var a=this;if(!a._stopped){a._stopped=!0;var b=[],c=moment.utc(),d=a.getEndpoints().then(function(d){return _.each(d,function(a){b.push({endpointId:a.id,timestamp:c.valueOf(),phase:terminationPhase,statusTransition:{from:a.status,to:undetermined}})}),_.isEmpty(b)?void a.db.close():Q.nbind(a.db.insertEndpointsHistory,a.db)(b)["finally"](function(){a.db.close()})});d.then(function(){return a.server.stop(),logger.info("Give 2 secs for http server to shutdown"),Q.delay(2e3).then(function(){logger.info("Shutdown successfully performed")},function(a){logger.info("Shutdown performed with errors: "+a)})})["finally"](function(){process.exit()})}},addListener:function(a,b){this.emitter.on(a,b)}}),watcherFactory={create:function(a){var b={port:7777,host:"localhost",interval:1e4,routeExts:[],resolutionStrategies:[],nfOpts:{},exportDir:__dirname+"/../storage",dbConnectionURL:"./storage/history.sqlite",endpoints:[]};return a=a||{},_.defaults(a,b),a.nfOpts.sender=a.nfOpts.sender||"admin@watcherjs.com",a.exportDir=path.normalize(a.exportDir),watcher.create({options:a,emitter:new events.EventEmitter})}},module.exports={watcherFactory:watcherFactory};