import stylus from 'stylus';
import nib from 'nib';
import { ModPipe } from '../pipe';
import { thenifyNode } from '../utils';


export default class ExtPipe extends ModPipe {
    constructor() {
        super(...arguments);

        this.defaultConfig({
            pattern: '**/*.styl'
        });
    }

    static schema() {
        return {
            description: 'Compile Stylus resources to css.'
        };
    }

    rename(name) {
        return name.replace(/styl$/, 'css');
    }

    async generate(file) {
        const content = await file.source.content();
        const fn = thenifyNode(cb =>
            new Buffer(stylus(content.toString()).use(nib()).render(cb))
        );
        return fn();
    }
}
