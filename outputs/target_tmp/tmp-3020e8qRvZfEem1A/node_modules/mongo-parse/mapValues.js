J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(6393, '/mnt/d/BearWork/nodeExploit/Goldie/outputs/target_tmp/tmp-3020e8qRvZfEem1A/node_modules/mongo-parse/mapValues.js');
            function obj() {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(6201, arguments.callee, this, arguments);
                            arguments = J$.N(6209, 'arguments', arguments, true, false, false);
                            J$.N(6217, 'result', result, false, false, false);
                            J$.N(6225, 'n', n, false, false, false);
                            var result = J$.W(6041, 'result', J$.T(6033, {}, 11, false), result, false, false);
                            for (var n = J$.W(6057, 'n', J$.T(6049, 0, 22, false), n, false, false); J$.C(288, J$.B(378, '<', J$.R(6065, 'n', n, false, false), J$.G(6081, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6073, 'arguments', undefined, true, true) : arguments = J$.R(6073, 'arguments', arguments, true, true)), 'length'))); n = J$.W(6105, 'n', J$.B(386, '+', J$.R(6097, 'n', n, false, false), J$.T(6089, 2, 22, false)), n, false, false)) {
                                J$.P(6177, J$.R(6113, 'result', result, false, false), J$.G(6137, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6121, 'arguments', undefined, true, true) : arguments = J$.R(6121, 'arguments', arguments, true, true)), J$.R(6129, 'n', n, false, false)), J$.G(6169, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6145, 'arguments', undefined, true, true) : arguments = J$.R(6145, 'arguments', arguments, true, true)), J$.B(394, '+', J$.R(6153, 'n', n, false, false), J$.T(6161, 1, 22, false))));
                            }
                            return J$.Rt(6193, J$.R(6185, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6537, J$e);
                        } finally {
                            if (J$.Fr(6545))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addOperator(obj, field, operator, operand) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(6345, arguments.callee, this, arguments);
                            arguments = J$.N(6353, 'arguments', arguments, true, false, false);
                            obj = J$.N(6361, 'obj', obj, true, false, false);
                            field = J$.N(6369, 'field', field, true, false, false);
                            operator = J$.N(6377, 'operator', operator, true, false, false);
                            operand = J$.N(6385, 'operand', operand, true, false, false);
                            if (J$.C(296, J$.B(402, '===', J$.G(6249, J$.R(6233, 'obj', obj, false, false), J$.R(6241, 'field', field, false, false)), J$.T(6257, undefined, 24, false)))) {
                                J$.P(6289, J$.R(6265, 'obj', obj, false, false), J$.R(6273, 'field', field, false, false), J$.T(6281, {}, 11, false));
                            }
                            J$.P(6337, J$.G(6313, J$.R(6297, 'obj', obj, false, false), J$.R(6305, 'field', field, false, false)), J$.R(6321, 'operator', operator, false, false), J$.R(6329, 'operand', operand, false, false));
                        } catch (J$e) {
                            J$.Ex(6553, J$e);
                        } finally {
                            if (J$.Fr(6561))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6401, 'singleValueOperators', singleValueOperators, false, false, false);
            J$.N(6409, 'arrayOperators', arrayOperators, false, false, false);
            J$.N(6417, 'mapValues', mapValues, false, false, false);
            obj = J$.N(6433, 'obj', J$.T(6425, obj, 12, false), true, false, false);
            addOperator = J$.N(6449, 'addOperator', J$.T(6441, addOperator, 12, false), true, false, false);
            var singleValueOperators = J$.W(4265, 'singleValueOperators', J$.T(4257, {
                $gt: J$.T(4209, 1, 22, false),
                $gte: J$.T(4217, 1, 22, false),
                $lt: J$.T(4225, 1, 22, false),
                $lte: J$.T(4233, 1, 22, false),
                $ne: J$.T(4241, 1, 22, false),
                $not: J$.T(4249, 1, 22, false)
            }, 11, false), singleValueOperators, false, true);
            var arrayOperators = J$.W(4305, 'arrayOperators', J$.T(4297, {
                $nin: J$.T(4273, 1, 22, false),
                $all: J$.T(4281, 1, 22, false),
                $in: J$.T(4289, 1, 22, false)
            }, 11, false), arrayOperators, false, true);
            var mapValues = J$.W(6025, 'mapValues', J$.P(6017, J$.I(typeof module === 'undefined' ? module = J$.R(4313, 'module', undefined, true, true) : module = J$.R(4313, 'module', module, true, true)), 'exports', J$.T(6009, function (parts, callback, prefix) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5961, arguments.callee, this, arguments);
                            arguments = J$.N(5969, 'arguments', arguments, true, false, false);
                            parts = J$.N(5977, 'parts', parts, true, false, false);
                            callback = J$.N(5985, 'callback', callback, true, false, false);
                            prefix = J$.N(5993, 'prefix', prefix, true, false, false);
                            J$.N(6001, 'result', result, false, false, false);
                            var result = J$.W(4329, 'result', J$.T(4321, {}, 11, false), result, false, false);
                            J$.M(5937, J$.R(4337, 'parts', parts, false, false), 'forEach', false)(J$.T(5929, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(5881, arguments.callee, this, arguments);
                                            arguments = J$.N(5889, 'arguments', arguments, true, false, false);
                                            part = J$.N(5897, 'part', part, true, false, false);
                                            J$.N(5905, 'field', field, false, false, false);
                                            J$.N(5913, 'mappedValue', mappedValue, false, false, false);
                                            J$.N(5921, 'operands', operands, false, false, false);
                                            if (J$.C(192, J$.B(258, '!==', J$.G(4353, J$.R(4345, 'part', part, false, false), 'field'), J$.T(4361, undefined, 24, false)))) {
                                                if (J$.C(184, J$.B(266, '!==', J$.R(4369, 'prefix', prefix, false, false), J$.T(4377, undefined, 24, false)))) {
                                                    var field = J$.W(4417, 'field', J$.B(282, '+', J$.B(274, '+', J$.R(4385, 'prefix', prefix, false, false), J$.T(4393, '.', 21, false)), J$.G(4409, J$.R(4401, 'part', part, false, false), 'field')), field, false, false);
                                                } else {
                                                    var field = J$.W(4441, 'field', J$.G(4433, J$.R(4425, 'part', part, false, false), 'field'), field, false, false);
                                                }
                                            } else {
                                                var field = J$.W(4457, 'field', J$.R(4449, 'prefix', prefix, false, false), field, false, false);
                                            }
                                            if (J$.C(280, J$.B(290, '===', J$.G(4481, J$.G(4473, J$.R(4465, 'part', part, false, false), 'parts'), 'length'), J$.T(4489, 0, 22, false)))) {
                                                if (J$.C(256, J$.B(298, '===', J$.G(4505, J$.R(4497, 'part', part, false, false), 'operator'), J$.T(4513, undefined, 24, false)))) {
                                                    if (J$.C(200, J$.B(306, 'instanceof', J$.G(4529, J$.R(4521, 'part', part, false, false), 'operand'), J$.I(typeof Array === 'undefined' ? Array = J$.R(4537, 'Array', undefined, true, true) : Array = J$.R(4537, 'Array', Array, true, true))))) {
                                                        J$.P(4665, J$.R(4545, 'result', result, false, false), J$.G(4561, J$.R(4553, 'part', part, false, false), 'field'), J$.M(4657, J$.G(4577, J$.R(4569, 'part', part, false, false), 'operand'), 'map', false)(J$.T(4649, function (v) {
                                                            jalangiLabel0:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(4625, arguments.callee, this, arguments);
                                                                        arguments = J$.N(4633, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(4641, 'v', v, true, false, false);
                                                                        return J$.Rt(4617, J$.F(4609, J$.R(4585, 'callback', callback, false, false), false)(J$.R(4593, 'field', field, false, false), J$.R(4601, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(6457, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(6465))
                                                                            continue jalangiLabel0;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else {
                                                        J$.P(4737, J$.R(4673, 'result', result, false, false), J$.G(4689, J$.R(4681, 'part', part, false, false), 'field'), J$.F(4729, J$.R(4697, 'callback', callback, false, false), false)(J$.R(4705, 'field', field, false, false), J$.G(4721, J$.R(4713, 'part', part, false, false), 'operand')));
                                                    }
                                                } else {
                                                    if (J$.C(248, J$.B(314, 'in', J$.G(4753, J$.R(4745, 'part', part, false, false), 'operator'), J$.R(4761, 'singleValueOperators', singleValueOperators, false, true)))) {
                                                        if (J$.C(208, J$.B(322, '!==', J$.G(4777, J$.R(4769, 'part', part, false, false), 'field'), J$.T(4785, undefined, 24, false)))) {
                                                            J$.F(4881, J$.R(4793, 'addOperator', addOperator, false, true), false)(J$.R(4801, 'result', result, false, false), J$.G(4817, J$.R(4809, 'part', part, false, false), 'field'), J$.G(4833, J$.R(4825, 'part', part, false, false), 'operator'), J$.F(4873, J$.R(4841, 'callback', callback, false, false), false)(J$.R(4849, 'field', field, false, false), J$.G(4865, J$.R(4857, 'part', part, false, false), 'operand')));
                                                        } else {
                                                            J$.P(4953, J$.R(4889, 'result', result, false, false), J$.G(4905, J$.R(4897, 'part', part, false, false), 'operator'), J$.F(4945, J$.R(4913, 'callback', callback, false, false), false)(J$.R(4921, 'field', field, false, false), J$.G(4937, J$.R(4929, 'part', part, false, false), 'operand')));
                                                        }
                                                    } else if (J$.C(240, J$.B(330, 'in', J$.G(4969, J$.R(4961, 'part', part, false, false), 'operator'), J$.R(4977, 'arrayOperators', arrayOperators, false, true)))) {
                                                        J$.F(5137, J$.R(4985, 'addOperator', addOperator, false, true), false)(J$.R(4993, 'result', result, false, false), J$.G(5009, J$.R(5001, 'part', part, false, false), 'field'), J$.G(5025, J$.R(5017, 'part', part, false, false), 'operator'), J$.M(5129, J$.G(5041, J$.R(5033, 'part', part, false, false), 'operand'), 'map', false)(J$.T(5121, function (v) {
                                                            jalangiLabel1:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(5097, arguments.callee, this, arguments);
                                                                        arguments = J$.N(5105, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(5113, 'v', v, true, false, false);
                                                                        return J$.Rt(5089, J$.F(5081, J$.R(5049, 'callback', callback, false, false), false)(J$.G(5065, J$.R(5057, 'part', part, false, false), 'field'), J$.R(5073, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(6473, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(6481))
                                                                            continue jalangiLabel1;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else if (J$.C(232, J$.B(338, '===', J$.G(5153, J$.R(5145, 'part', part, false, false), 'operator'), J$.T(5161, '$text', 21, false)))) {
                                                        J$.P(5233, J$.R(5169, 'result', result, false, false), '$text', J$.T(5225, { $search: J$.F(5217, J$.R(5177, 'callback', callback, false, false), false)(J$.R(5185, 'field', field, false, false), J$.G(5209, J$.G(5201, J$.R(5193, 'part', part, false, false), 'operand'), '$search')) }, 11, false));
                                                        if (J$.C(216, J$.B(346, '!==', J$.G(5257, J$.G(5249, J$.R(5241, 'part', part, false, false), 'operand'), '$language'), J$.T(5265, undefined, 24, false)))) {
                                                            J$.P(5313, J$.G(5281, J$.R(5273, 'result', result, false, false), '$text'), '$language', J$.G(5305, J$.G(5297, J$.R(5289, 'part', part, false, false), 'operand'), '$language'));
                                                        }
                                                    } else {
                                                        if (J$.C(224, J$.B(354, '!==', J$.G(5329, J$.R(5321, 'part', part, false, false), 'field'), J$.T(5337, undefined, 24, false)))) {
                                                            J$.F(5409, J$.R(5345, 'addOperator', addOperator, false, true), false)(J$.R(5353, 'result', result, false, false), J$.G(5369, J$.R(5361, 'part', part, false, false), 'field'), J$.G(5385, J$.R(5377, 'part', part, false, false), 'operator'), J$.G(5401, J$.R(5393, 'part', part, false, false), 'operand'));
                                                        } else {
                                                            J$.P(5457, J$.R(5417, 'result', result, false, false), J$.G(5433, J$.R(5425, 'part', part, false, false), 'operator'), J$.G(5449, J$.R(5441, 'part', part, false, false), 'operand'));
                                                        }
                                                    }
                                                }
                                            } else {
                                                if (J$.C(272, J$.B(362, '===', J$.G(5473, J$.R(5465, 'part', part, false, false), 'operator'), J$.T(5481, '$elemMatch', 21, false)))) {
                                                    var mappedValue = J$.W(5537, 'mappedValue', J$.F(5529, J$.R(5489, 'mapValues', mapValues, false, true), false)(J$.G(5505, J$.R(5497, 'part', part, false, false), 'parts'), J$.R(5513, 'callback', callback, false, false), J$.R(5521, 'field', field, false, false)), mappedValue, false, false);
                                                    J$.F(5601, J$.R(5545, 'addOperator', addOperator, false, true), false)(J$.R(5553, 'result', result, false, false), J$.G(5569, J$.R(5561, 'part', part, false, false), 'field'), J$.G(5585, J$.R(5577, 'part', part, false, false), 'operator'), J$.R(5593, 'mappedValue', mappedValue, false, false));
                                                } else if (J$.C(264, J$.B(370, '===', J$.G(5617, J$.R(5609, 'part', part, false, false), 'operator'), J$.T(5625, '$not', 21, false)))) {
                                                    J$.P(5705, J$.R(5633, 'result', result, false, false), J$.G(5649, J$.R(5641, 'part', part, false, false), 'operator'), J$.F(5697, J$.R(5657, 'mapValues', mapValues, false, true), false)(J$.G(5673, J$.R(5665, 'part', part, false, false), 'parts'), J$.R(5681, 'callback', callback, false, false), J$.R(5689, 'field', field, false, false)));
                                                } else {
                                                    var operands = J$.W(5721, 'operands', J$.T(5713, [], 10, false), operands, false, false);
                                                    J$.M(5833, J$.G(5737, J$.R(5729, 'part', part, false, false), 'parts'), 'forEach', false)(J$.T(5825, function (innerPart) {
                                                        jalangiLabel2:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(5801, arguments.callee, this, arguments);
                                                                    arguments = J$.N(5809, 'arguments', arguments, true, false, false);
                                                                    innerPart = J$.N(5817, 'innerPart', innerPart, true, false, false);
                                                                    J$.M(5793, J$.R(5745, 'operands', operands, false, false), 'push', false)(J$.F(5785, J$.R(5753, 'mapValues', mapValues, false, true), false)(J$.G(5769, J$.R(5761, 'innerPart', innerPart, false, false), 'parts'), J$.R(5777, 'callback', callback, false, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(6489, J$e);
                                                                } finally {
                                                                    if (J$.Fr(6497))
                                                                        continue jalangiLabel2;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(5873, J$.R(5841, 'result', result, false, false), J$.G(5857, J$.R(5849, 'part', part, false, false), 'operator'), J$.R(5865, 'operands', operands, false, false));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(6505, J$e);
                                        } finally {
                                            if (J$.Fr(6513))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(5953, J$.R(5945, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6521, J$e);
                        } finally {
                            if (J$.Fr(6529))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), mapValues, false, true);
        } catch (J$e) {
            J$.Ex(6569, J$e);
        } finally {
            if (J$.Sr(6577))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

