J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(3937, '/mnt/data/fxiao/Goldie/outputs/target_tmp/tmp-16770o4Z1xc2Xbn3a/node_modules/mongo-parse/DotNotationPointers.js');
            function createPointers(rootObject, propertyParts) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2561, arguments.callee, this, arguments);
                            arguments = J$.N(2569, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(2577, 'rootObject', rootObject, true, false, false);
                            propertyParts = J$.N(2585, 'propertyParts', propertyParts, true, false, false);
                            J$.N(2593, 'initialObject', initialObject, false, false, false);
                            J$.N(2601, 'curInfoObjects', curInfoObjects, false, false, false);
                            var initialObject = J$.W(1769, 'initialObject', J$.T(1761, { dummy: J$.R(1753, 'rootObject', rootObject, false, false) }, 11, false), initialObject, false, false);
                            var curInfoObjects = J$.W(1817, 'curInfoObjects', J$.T(1809, [J$.T(1801, {
                                    obj: J$.R(1777, 'initialObject', initialObject, false, false),
                                    last: J$.T(1785, 'dummy', 21, false),
                                    propertyPath: J$.T(1793, [], 10, false)
                                }, 11, false)], 10, false), curInfoObjects, false, false);
                            J$.M(2289, J$.R(1825, 'propertyParts', propertyParts, false, false), 'forEach', false)(J$.T(2281, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2249, arguments.callee, this, arguments);
                                            arguments = J$.N(2257, 'arguments', arguments, true, false, false);
                                            part = J$.N(2265, 'part', part, true, false, false);
                                            J$.N(2273, 'nextInfoObjects', nextInfoObjects, false, false, false);
                                            var nextInfoObjects = J$.W(1841, 'nextInfoObjects', J$.T(1833, [], 10, false), nextInfoObjects, false, false);
                                            J$.M(2225, J$.R(1849, 'curInfoObjects', curInfoObjects, false, false), 'forEach', false)(J$.T(2217, function (current) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2185, arguments.callee, this, arguments);
                                                            arguments = J$.N(2193, 'arguments', arguments, true, false, false);
                                                            current = J$.N(2201, 'current', current, true, false, false);
                                                            J$.N(2209, 'curValue', curValue, false, false, false);
                                                            var curValue = J$.W(1905, 'curValue', J$.F(1897, J$.R(1857, 'getValue', getValue, false, true), false)(J$.G(1873, J$.R(1865, 'current', current, false, false), 'obj'), J$.G(1889, J$.R(1881, 'current', current, false, false), 'last')), curValue, false, false);
                                                            if (J$.C(88, J$.C(80, J$.B(122, 'instanceof', J$.R(1913, 'curValue', curValue, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(1921, 'Array', undefined, true, true) : Array = J$.R(1921, 'Array', Array, true, true)))) ? J$.U(130, '!', J$.F(1945, J$.R(1929, 'isInteger', isInteger, false, true), false)(J$.R(1937, 'part', part, false, false))) : J$._())) {
                                                                J$.M(2105, J$.R(1953, 'curValue', curValue, false, false), 'forEach', false)(J$.T(2097, function (property, index) {
                                                                    jalangiLabel1:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(2065, arguments.callee, this, arguments);
                                                                                arguments = J$.N(2073, 'arguments', arguments, true, false, false);
                                                                                property = J$.N(2081, 'property', property, true, false, false);
                                                                                index = J$.N(2089, 'index', index, true, false, false);
                                                                                J$.M(2057, J$.R(1961, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(2049, {
                                                                                    obj: J$.F(1993, J$.R(1969, 'getValue', getValue, false, true), false)(J$.R(1977, 'curValue', curValue, false, false), J$.R(1985, 'index', index, false, false)),
                                                                                    propertyPath: J$.M(2033, J$.G(2009, J$.R(2001, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(2017, 'index', index, false, false), J$.R(2025, 'part', part, false, false)),
                                                                                    last: J$.R(2041, 'part', part, false, false)
                                                                                }, 11, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(4041, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(4049))
                                                                                    continue jalangiLabel1;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } else {
                                                                J$.M(2177, J$.R(2113, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(2169, {
                                                                    obj: J$.R(2121, 'curValue', curValue, false, false),
                                                                    propertyPath: J$.M(2153, J$.G(2137, J$.R(2129, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(2145, 'part', part, false, false)),
                                                                    last: J$.R(2161, 'part', part, false, false)
                                                                }, 11, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(4057, J$e);
                                                        } finally {
                                                            if (J$.Fr(4065))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            curInfoObjects = J$.W(2241, 'curInfoObjects', J$.R(2233, 'nextInfoObjects', nextInfoObjects, false, false), curInfoObjects, false, false);
                                        } catch (J$e) {
                                            J$.Ex(4073, J$e);
                                        } finally {
                                            if (J$.Fr(4081))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2553, J$.M(2545, J$.R(2297, 'curInfoObjects', curInfoObjects, false, false), 'map', false)(J$.T(2537, function (current) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(2497, arguments.callee, this, arguments);
                                            arguments = J$.N(2505, 'arguments', arguments, true, false, false);
                                            current = J$.N(2513, 'current', current, true, false, false);
                                            J$.N(2521, 'obj', obj, false, false, false);
                                            J$.N(2529, 'last', last, false, false, false);
                                            if (J$.C(96, J$.B(138, '===', J$.G(2313, J$.R(2305, 'current', current, false, false), 'obj'), J$.R(2321, 'initialObject', initialObject, false, false)))) {
                                                var obj = J$.W(2353, 'obj', J$.G(2345, J$.G(2337, J$.R(2329, 'current', current, false, false), 'obj'), 'dummy'), obj, false, false);
                                                var last = J$.W(2369, 'last', J$.T(2361, undefined, 24, false), last, false, false);
                                            } else {
                                                var obj = J$.W(2393, 'obj', J$.G(2385, J$.R(2377, 'current', current, false, false), 'obj'), obj, false, false);
                                                var last = J$.W(2417, 'last', J$.G(2409, J$.R(2401, 'current', current, false, false), 'last'), last, false, false);
                                            }
                                            return J$.Rt(2489, J$.F(2481, J$.R(2425, 'DotNotationPointer', DotNotationPointer, false, true), true)(J$.R(2433, 'rootObject', rootObject, false, false), J$.G(2449, J$.R(2441, 'current', current, false, false), 'propertyPath'), J$.T(2473, {
                                                obj: J$.R(2457, 'obj', obj, false, false),
                                                last: J$.R(2465, 'last', last, false, false)
                                            }, 11, false)));
                                        } catch (J$e) {
                                            J$.Ex(4089, J$e);
                                        } finally {
                                            if (J$.Fr(4097))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(4105, J$e);
                        } finally {
                            if (J$.Fr(4113))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getValue(object, key) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2673, arguments.callee, this, arguments);
                            arguments = J$.N(2681, 'arguments', arguments, true, false, false);
                            object = J$.N(2689, 'object', object, true, false, false);
                            key = J$.N(2697, 'key', key, true, false, false);
                            if (J$.C(104, J$.B(146, '===', J$.R(2609, 'object', object, false, false), J$.T(2617, undefined, 24, false))))
                                return J$.Rt(2633, J$.T(2625, undefined, 24, false));
                            else
                                return J$.Rt(2665, J$.G(2657, J$.R(2641, 'object', object, false, false), J$.R(2649, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(4121, J$e);
                        } finally {
                            if (J$.Fr(4129))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createProperty(that) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(3777, arguments.callee, this, arguments);
                            arguments = J$.N(3785, 'arguments', arguments, true, false, false);
                            that = J$.N(3793, 'that', that, true, false, false);
                            J$.N(3801, 'result', result, false, false, false);
                            J$.N(3809, 'lastIndex', lastIndex, false, false, false);
                            J$.N(3817, 'n', n, false, false, false);
                            J$.N(3825, 'value', value, false, false, false);
                            J$.N(3833, 'newValue', newValue, false, false, false);
                            var result = J$.W(3377, 'result', J$.G(3369, J$.R(3361, 'that', that, false, false), 'root'), result, false, false);
                            var lastIndex = J$.W(3417, 'lastIndex', J$.B(202, '-', J$.G(3401, J$.G(3393, J$.R(3385, 'that', that, false, false), 'property'), 'length'), J$.T(3409, 1, 22, false)), lastIndex, false, false);
                            for (var n = J$.W(3433, 'n', J$.T(3425, 0, 22, false), n, false, false); J$.C(176, J$.B(210, '<', J$.R(3441, 'n', n, false, false), J$.R(3449, 'lastIndex', lastIndex, false, false))); J$.B(234, '-', n = J$.W(3465, 'n', J$.B(226, '+', J$.U(218, '+', J$.R(3457, 'n', n, false, false)), 1), n, false, false), 1)) {
                                var value = J$.W(3521, 'value', J$.G(3513, J$.R(3473, 'result', result, false, false), J$.G(3505, J$.G(3489, J$.R(3481, 'that', that, false, false), 'property'), J$.R(3497, 'n', n, false, false))), value, false, false);
                                if (J$.C(168, J$.B(242, '===', J$.R(3529, 'value', value, false, false), J$.T(3537, undefined, 24, false)))) {
                                    if (J$.C(160, J$.F(3593, J$.R(3545, 'isInteger', isInteger, false, true), false)(J$.G(3585, J$.G(3561, J$.R(3553, 'that', that, false, false), 'property'), J$.B(250, '+', J$.R(3569, 'n', n, false, false), J$.T(3577, 1, 22, false))))))
                                        var newValue = J$.W(3609, 'newValue', J$.T(3601, [], 10, false), newValue, false, false);
                                    else
                                        var newValue = J$.W(3625, 'newValue', J$.T(3617, {}, 11, false), newValue, false, false);
                                    value = J$.W(3689, 'value', J$.P(3681, J$.R(3633, 'result', result, false, false), J$.G(3665, J$.G(3649, J$.R(3641, 'that', that, false, false), 'property'), J$.R(3657, 'n', n, false, false)), J$.R(3673, 'newValue', newValue, false, false)), value, false, false);
                                }
                                result = J$.W(3705, 'result', J$.R(3697, 'value', value, false, false), result, false, false);
                            }
                            J$.P(3769, J$.R(3713, 'that', that, false, false), 'propertyInfo', J$.T(3761, {
                                obj: J$.R(3721, 'result', result, false, false),
                                last: J$.G(3753, J$.G(3737, J$.R(3729, 'that', that, false, false), 'property'), J$.R(3745, 'lastIndex', lastIndex, false, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(4185, J$e);
                        } finally {
                            if (J$.Fr(4193))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isInteger(v) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(3905, arguments.callee, this, arguments);
                            arguments = J$.N(3913, 'arguments', arguments, true, false, false);
                            v = J$.N(3921, 'v', v, true, false, false);
                            J$.N(3929, 'number', number, false, false, false);
                            var number = J$.W(3865, 'number', J$.F(3857, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3841, 'parseInt', undefined, true, true) : parseInt = J$.R(3841, 'parseInt', parseInt, true, true)), false)(J$.R(3849, 'v', v, false, false)), number, false, false);
                            return J$.Rt(3897, J$.U(258, '!', J$.F(3889, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(3873, 'isNaN', undefined, true, true) : isNaN = J$.R(3873, 'isNaN', isNaN, true, true)), false)(J$.R(3881, 'number', number, false, false))));
                        } catch (J$e) {
                            J$.Ex(4201, J$e);
                        } finally {
                            if (J$.Fr(4209))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3945, 'DotNotationPointers', DotNotationPointers, false, false, false);
            createPointers = J$.N(3961, 'createPointers', J$.T(3953, createPointers, 12, false), true, false, false);
            getValue = J$.N(3977, 'getValue', J$.T(3969, getValue, 12, false), true, false, false);
            J$.N(3985, 'DotNotationPointer', DotNotationPointer, false, false, false);
            createProperty = J$.N(4001, 'createProperty', J$.T(3993, createProperty, 12, false), true, false, false);
            isInteger = J$.N(4017, 'isInteger', J$.T(4009, isInteger, 12, false), true, false, false);
            var DotNotationPointers = J$.W(1745, 'DotNotationPointers', J$.P(1737, J$.I(typeof module === 'undefined' ? module = J$.R(1569, 'module', undefined, true, true) : module = J$.R(1569, 'module', module, true, true)), 'exports', J$.T(1729, function (rootObject, property) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1697, arguments.callee, this, arguments);
                            arguments = J$.N(1705, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(1713, 'rootObject', rootObject, true, false, false);
                            property = J$.N(1721, 'property', property, true, false, false);
                            if (J$.C(72, J$.B(98, '===', J$.R(1577, 'property', property, false, false), J$.T(1585, undefined, 24, false)))) {
                                property = J$.W(1601, 'property', J$.T(1593, [], 10, false), property, false, false);
                            } else if (J$.C(64, J$.U(114, '!', J$.B(106, 'instanceof', J$.R(1609, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(1617, 'Array', undefined, true, true) : Array = J$.R(1617, 'Array', Array, true, true)))))) {
                                property = J$.W(1649, 'property', J$.M(1641, J$.R(1625, 'property', property, false, false), 'split', false)(J$.T(1633, '.', 21, false)), property, false, false);
                            }
                            return J$.Rt(1689, J$.F(1681, J$.R(1657, 'createPointers', createPointers, false, true), false)(J$.R(1665, 'rootObject', rootObject, false, false), J$.R(1673, 'property', property, false, false)));
                        } catch (J$e) {
                            J$.Ex(4025, J$e);
                        } finally {
                            if (J$.Fr(4033))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), DotNotationPointers, false, true);
            var DotNotationPointer = J$.W(2937, 'DotNotationPointer', J$.T(2929, function (rootObject, property, propertyInfo) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2889, arguments.callee, this, arguments);
                            arguments = J$.N(2897, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(2905, 'rootObject', rootObject, true, false, false);
                            property = J$.N(2913, 'property', property, true, false, false);
                            propertyInfo = J$.N(2921, 'propertyInfo', propertyInfo, true, false, false);
                            J$.P(2721, J$.R(2705, 'this', this, false, false), 'root', J$.R(2713, 'rootObject', rootObject, false, false));
                            if (J$.C(120, J$.B(154, '===', J$.R(2729, 'property', property, false, false), J$.T(2737, undefined, 24, false)))) {
                                J$.P(2761, J$.R(2745, 'this', this, false, false), 'property', J$.T(2753, [], 10, false));
                            } else if (J$.C(112, J$.B(162, 'instanceof', J$.R(2769, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(2777, 'Array', undefined, true, true) : Array = J$.R(2777, 'Array', Array, true, true))))) {
                                J$.P(2801, J$.R(2785, 'this', this, false, false), 'property', J$.R(2793, 'property', property, false, false));
                            } else {
                                J$.P(2841, J$.R(2809, 'this', this, false, false), 'property', J$.M(2833, J$.R(2817, 'property', property, false, false), 'split', false)(J$.T(2825, '.', 21, false)));
                            }
                            if (J$.C(128, J$.B(170, '!==', J$.R(2849, 'propertyInfo', propertyInfo, false, false), J$.T(2857, undefined, 24, false)))) {
                                J$.P(2881, J$.R(2865, 'this', this, false, false), 'propertyInfo', J$.R(2873, 'propertyInfo', propertyInfo, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(4137, J$e);
                        } finally {
                            if (J$.Fr(4145))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), DotNotationPointer, false, true);
            J$.P(2961, J$.R(2945, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype', J$.T(2953, {}, 11, false));
            J$.M(3353, J$.I(typeof Object === 'undefined' ? Object = J$.R(2969, 'Object', undefined, true, true) : Object = J$.R(2969, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(2985, J$.R(2977, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype'), J$.T(2993, 'val', 21, false), J$.T(3345, {
                get: J$.T(3185, function () {
                    jalangiLabel8:
                        while (true) {
                            try {
                                J$.Fe(3161, arguments.callee, this, arguments);
                                arguments = J$.N(3169, 'arguments', arguments, true, false, false);
                                J$.N(3177, 'info', info, false, false, false);
                                var info = J$.W(3017, 'info', J$.G(3009, J$.R(3001, 'this', this, false, false), 'propertyInfo'), info, false, false);
                                if (J$.C(144, J$.B(178, '===', J$.G(3033, J$.R(3025, 'info', info, false, false), 'obj'), J$.T(3041, undefined, 24, false)))) {
                                    return J$.Rt(3057, J$.T(3049, undefined, 24, false));
                                } else {
                                    if (J$.C(136, J$.B(186, '!==', J$.G(3073, J$.R(3065, 'info', info, false, false), 'last'), J$.T(3081, undefined, 24, false)))) {
                                        return J$.Rt(3129, J$.G(3121, J$.G(3097, J$.R(3089, 'info', info, false, false), 'obj'), J$.G(3113, J$.R(3105, 'info', info, false, false), 'last')));
                                    } else {
                                        return J$.Rt(3153, J$.G(3145, J$.R(3137, 'info', info, false, false), 'obj'));
                                    }
                                }
                            } catch (J$e) {
                                J$.Ex(4153, J$e);
                            } finally {
                                if (J$.Fr(4161))
                                    continue jalangiLabel8;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                set: J$.T(3337, function (value) {
                    jalangiLabel9:
                        while (true) {
                            try {
                                J$.Fe(3313, arguments.callee, this, arguments);
                                arguments = J$.N(3321, 'arguments', arguments, true, false, false);
                                value = J$.N(3329, 'value', value, true, false, false);
                                if (J$.C(152, J$.B(194, '===', J$.G(3209, J$.G(3201, J$.R(3193, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.T(3217, undefined, 24, false)))) {
                                    J$.F(3241, J$.R(3225, 'createProperty', createProperty, false, true), false)(J$.R(3233, 'this', this, false, false));
                                }
                                J$.P(3305, J$.G(3265, J$.G(3257, J$.R(3249, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.G(3289, J$.G(3281, J$.R(3273, 'this', this, false, false), 'propertyInfo'), 'last'), J$.R(3297, 'value', value, false, false));
                            } catch (J$e) {
                                J$.Ex(4169, J$e);
                            } finally {
                                if (J$.Fr(4177))
                                    continue jalangiLabel9;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(4217, J$e);
        } finally {
            if (J$.Sr(4225))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

