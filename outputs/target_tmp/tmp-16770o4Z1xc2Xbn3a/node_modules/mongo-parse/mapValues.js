J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(6417, '/mnt/data/fxiao/Goldie/outputs/target_tmp/tmp-16770o4Z1xc2Xbn3a/node_modules/mongo-parse/mapValues.js');
            function obj() {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(6225, arguments.callee, this, arguments);
                            arguments = J$.N(6233, 'arguments', arguments, true, false, false);
                            J$.N(6241, 'result', result, false, false, false);
                            J$.N(6249, 'n', n, false, false, false);
                            var result = J$.W(6065, 'result', J$.T(6057, {}, 11, false), result, false, false);
                            for (var n = J$.W(6081, 'n', J$.T(6073, 0, 22, false), n, false, false); J$.C(288, J$.B(386, '<', J$.R(6089, 'n', n, false, false), J$.G(6105, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6097, 'arguments', undefined, true, true) : arguments = J$.R(6097, 'arguments', arguments, true, true)), 'length'))); n = J$.W(6129, 'n', J$.B(394, '+', J$.R(6121, 'n', n, false, false), J$.T(6113, 2, 22, false)), n, false, false)) {
                                J$.P(6201, J$.R(6137, 'result', result, false, false), J$.G(6161, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6145, 'arguments', undefined, true, true) : arguments = J$.R(6145, 'arguments', arguments, true, true)), J$.R(6153, 'n', n, false, false)), J$.G(6193, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6169, 'arguments', undefined, true, true) : arguments = J$.R(6169, 'arguments', arguments, true, true)), J$.B(402, '+', J$.R(6177, 'n', n, false, false), J$.T(6185, 1, 22, false))));
                            }
                            return J$.Rt(6217, J$.R(6209, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6561, J$e);
                        } finally {
                            if (J$.Fr(6569))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addOperator(obj, field, operator, operand) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(6369, arguments.callee, this, arguments);
                            arguments = J$.N(6377, 'arguments', arguments, true, false, false);
                            obj = J$.N(6385, 'obj', obj, true, false, false);
                            field = J$.N(6393, 'field', field, true, false, false);
                            operator = J$.N(6401, 'operator', operator, true, false, false);
                            operand = J$.N(6409, 'operand', operand, true, false, false);
                            if (J$.C(296, J$.B(410, '===', J$.G(6273, J$.R(6257, 'obj', obj, false, false), J$.R(6265, 'field', field, false, false)), J$.T(6281, undefined, 24, false)))) {
                                J$.P(6313, J$.R(6289, 'obj', obj, false, false), J$.R(6297, 'field', field, false, false), J$.T(6305, {}, 11, false));
                            }
                            J$.P(6361, J$.G(6337, J$.R(6321, 'obj', obj, false, false), J$.R(6329, 'field', field, false, false)), J$.R(6345, 'operator', operator, false, false), J$.R(6353, 'operand', operand, false, false));
                        } catch (J$e) {
                            J$.Ex(6577, J$e);
                        } finally {
                            if (J$.Fr(6585))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6425, 'singleValueOperators', singleValueOperators, false, false, false);
            J$.N(6433, 'arrayOperators', arrayOperators, false, false, false);
            J$.N(6441, 'mapValues', mapValues, false, false, false);
            obj = J$.N(6457, 'obj', J$.T(6449, obj, 12, false), true, false, false);
            addOperator = J$.N(6473, 'addOperator', J$.T(6465, addOperator, 12, false), true, false, false);
            var singleValueOperators = J$.W(4289, 'singleValueOperators', J$.T(4281, {
                $gt: J$.T(4233, 1, 22, false),
                $gte: J$.T(4241, 1, 22, false),
                $lt: J$.T(4249, 1, 22, false),
                $lte: J$.T(4257, 1, 22, false),
                $ne: J$.T(4265, 1, 22, false),
                $not: J$.T(4273, 1, 22, false)
            }, 11, false), singleValueOperators, false, true);
            var arrayOperators = J$.W(4329, 'arrayOperators', J$.T(4321, {
                $nin: J$.T(4297, 1, 22, false),
                $all: J$.T(4305, 1, 22, false),
                $in: J$.T(4313, 1, 22, false)
            }, 11, false), arrayOperators, false, true);
            var mapValues = J$.W(6049, 'mapValues', J$.P(6041, J$.I(typeof module === 'undefined' ? module = J$.R(4337, 'module', undefined, true, true) : module = J$.R(4337, 'module', module, true, true)), 'exports', J$.T(6033, function (parts, callback, prefix) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5985, arguments.callee, this, arguments);
                            arguments = J$.N(5993, 'arguments', arguments, true, false, false);
                            parts = J$.N(6001, 'parts', parts, true, false, false);
                            callback = J$.N(6009, 'callback', callback, true, false, false);
                            prefix = J$.N(6017, 'prefix', prefix, true, false, false);
                            J$.N(6025, 'result', result, false, false, false);
                            var result = J$.W(4353, 'result', J$.T(4345, {}, 11, false), result, false, false);
                            J$.M(5961, J$.R(4361, 'parts', parts, false, false), 'forEach', false)(J$.T(5953, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(5905, arguments.callee, this, arguments);
                                            arguments = J$.N(5913, 'arguments', arguments, true, false, false);
                                            part = J$.N(5921, 'part', part, true, false, false);
                                            J$.N(5929, 'field', field, false, false, false);
                                            J$.N(5937, 'mappedValue', mappedValue, false, false, false);
                                            J$.N(5945, 'operands', operands, false, false, false);
                                            if (J$.C(192, J$.B(266, '!==', J$.G(4377, J$.R(4369, 'part', part, false, false), 'field'), J$.T(4385, undefined, 24, false)))) {
                                                if (J$.C(184, J$.B(274, '!==', J$.R(4393, 'prefix', prefix, false, false), J$.T(4401, undefined, 24, false)))) {
                                                    var field = J$.W(4441, 'field', J$.B(290, '+', J$.B(282, '+', J$.R(4409, 'prefix', prefix, false, false), J$.T(4417, '.', 21, false)), J$.G(4433, J$.R(4425, 'part', part, false, false), 'field')), field, false, false);
                                                } else {
                                                    var field = J$.W(4465, 'field', J$.G(4457, J$.R(4449, 'part', part, false, false), 'field'), field, false, false);
                                                }
                                            } else {
                                                var field = J$.W(4481, 'field', J$.R(4473, 'prefix', prefix, false, false), field, false, false);
                                            }
                                            if (J$.C(280, J$.B(298, '===', J$.G(4505, J$.G(4497, J$.R(4489, 'part', part, false, false), 'parts'), 'length'), J$.T(4513, 0, 22, false)))) {
                                                if (J$.C(256, J$.B(306, '===', J$.G(4529, J$.R(4521, 'part', part, false, false), 'operator'), J$.T(4537, undefined, 24, false)))) {
                                                    if (J$.C(200, J$.B(314, 'instanceof', J$.G(4553, J$.R(4545, 'part', part, false, false), 'operand'), J$.I(typeof Array === 'undefined' ? Array = J$.R(4561, 'Array', undefined, true, true) : Array = J$.R(4561, 'Array', Array, true, true))))) {
                                                        J$.P(4689, J$.R(4569, 'result', result, false, false), J$.G(4585, J$.R(4577, 'part', part, false, false), 'field'), J$.M(4681, J$.G(4601, J$.R(4593, 'part', part, false, false), 'operand'), 'map', false)(J$.T(4673, function (v) {
                                                            jalangiLabel0:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(4649, arguments.callee, this, arguments);
                                                                        arguments = J$.N(4657, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(4665, 'v', v, true, false, false);
                                                                        return J$.Rt(4641, J$.F(4633, J$.R(4609, 'callback', callback, false, false), false)(J$.R(4617, 'field', field, false, false), J$.R(4625, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(6481, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(6489))
                                                                            continue jalangiLabel0;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else {
                                                        J$.P(4761, J$.R(4697, 'result', result, false, false), J$.G(4713, J$.R(4705, 'part', part, false, false), 'field'), J$.F(4753, J$.R(4721, 'callback', callback, false, false), false)(J$.R(4729, 'field', field, false, false), J$.G(4745, J$.R(4737, 'part', part, false, false), 'operand')));
                                                    }
                                                } else {
                                                    if (J$.C(248, J$.B(322, 'in', J$.G(4777, J$.R(4769, 'part', part, false, false), 'operator'), J$.R(4785, 'singleValueOperators', singleValueOperators, false, true)))) {
                                                        if (J$.C(208, J$.B(330, '!==', J$.G(4801, J$.R(4793, 'part', part, false, false), 'field'), J$.T(4809, undefined, 24, false)))) {
                                                            J$.F(4905, J$.R(4817, 'addOperator', addOperator, false, true), false)(J$.R(4825, 'result', result, false, false), J$.G(4841, J$.R(4833, 'part', part, false, false), 'field'), J$.G(4857, J$.R(4849, 'part', part, false, false), 'operator'), J$.F(4897, J$.R(4865, 'callback', callback, false, false), false)(J$.R(4873, 'field', field, false, false), J$.G(4889, J$.R(4881, 'part', part, false, false), 'operand')));
                                                        } else {
                                                            J$.P(4977, J$.R(4913, 'result', result, false, false), J$.G(4929, J$.R(4921, 'part', part, false, false), 'operator'), J$.F(4969, J$.R(4937, 'callback', callback, false, false), false)(J$.R(4945, 'field', field, false, false), J$.G(4961, J$.R(4953, 'part', part, false, false), 'operand')));
                                                        }
                                                    } else if (J$.C(240, J$.B(338, 'in', J$.G(4993, J$.R(4985, 'part', part, false, false), 'operator'), J$.R(5001, 'arrayOperators', arrayOperators, false, true)))) {
                                                        J$.F(5161, J$.R(5009, 'addOperator', addOperator, false, true), false)(J$.R(5017, 'result', result, false, false), J$.G(5033, J$.R(5025, 'part', part, false, false), 'field'), J$.G(5049, J$.R(5041, 'part', part, false, false), 'operator'), J$.M(5153, J$.G(5065, J$.R(5057, 'part', part, false, false), 'operand'), 'map', false)(J$.T(5145, function (v) {
                                                            jalangiLabel1:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(5121, arguments.callee, this, arguments);
                                                                        arguments = J$.N(5129, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(5137, 'v', v, true, false, false);
                                                                        return J$.Rt(5113, J$.F(5105, J$.R(5073, 'callback', callback, false, false), false)(J$.G(5089, J$.R(5081, 'part', part, false, false), 'field'), J$.R(5097, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(6497, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(6505))
                                                                            continue jalangiLabel1;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else if (J$.C(232, J$.B(346, '===', J$.G(5177, J$.R(5169, 'part', part, false, false), 'operator'), J$.T(5185, '$text', 21, false)))) {
                                                        J$.P(5257, J$.R(5193, 'result', result, false, false), '$text', J$.T(5249, { $search: J$.F(5241, J$.R(5201, 'callback', callback, false, false), false)(J$.R(5209, 'field', field, false, false), J$.G(5233, J$.G(5225, J$.R(5217, 'part', part, false, false), 'operand'), '$search')) }, 11, false));
                                                        if (J$.C(216, J$.B(354, '!==', J$.G(5281, J$.G(5273, J$.R(5265, 'part', part, false, false), 'operand'), '$language'), J$.T(5289, undefined, 24, false)))) {
                                                            J$.P(5337, J$.G(5305, J$.R(5297, 'result', result, false, false), '$text'), '$language', J$.G(5329, J$.G(5321, J$.R(5313, 'part', part, false, false), 'operand'), '$language'));
                                                        }
                                                    } else {
                                                        if (J$.C(224, J$.B(362, '!==', J$.G(5353, J$.R(5345, 'part', part, false, false), 'field'), J$.T(5361, undefined, 24, false)))) {
                                                            J$.F(5433, J$.R(5369, 'addOperator', addOperator, false, true), false)(J$.R(5377, 'result', result, false, false), J$.G(5393, J$.R(5385, 'part', part, false, false), 'field'), J$.G(5409, J$.R(5401, 'part', part, false, false), 'operator'), J$.G(5425, J$.R(5417, 'part', part, false, false), 'operand'));
                                                        } else {
                                                            J$.P(5481, J$.R(5441, 'result', result, false, false), J$.G(5457, J$.R(5449, 'part', part, false, false), 'operator'), J$.G(5473, J$.R(5465, 'part', part, false, false), 'operand'));
                                                        }
                                                    }
                                                }
                                            } else {
                                                if (J$.C(272, J$.B(370, '===', J$.G(5497, J$.R(5489, 'part', part, false, false), 'operator'), J$.T(5505, '$elemMatch', 21, false)))) {
                                                    var mappedValue = J$.W(5561, 'mappedValue', J$.F(5553, J$.R(5513, 'mapValues', mapValues, false, true), false)(J$.G(5529, J$.R(5521, 'part', part, false, false), 'parts'), J$.R(5537, 'callback', callback, false, false), J$.R(5545, 'field', field, false, false)), mappedValue, false, false);
                                                    J$.F(5625, J$.R(5569, 'addOperator', addOperator, false, true), false)(J$.R(5577, 'result', result, false, false), J$.G(5593, J$.R(5585, 'part', part, false, false), 'field'), J$.G(5609, J$.R(5601, 'part', part, false, false), 'operator'), J$.R(5617, 'mappedValue', mappedValue, false, false));
                                                } else if (J$.C(264, J$.B(378, '===', J$.G(5641, J$.R(5633, 'part', part, false, false), 'operator'), J$.T(5649, '$not', 21, false)))) {
                                                    J$.P(5729, J$.R(5657, 'result', result, false, false), J$.G(5673, J$.R(5665, 'part', part, false, false), 'operator'), J$.F(5721, J$.R(5681, 'mapValues', mapValues, false, true), false)(J$.G(5697, J$.R(5689, 'part', part, false, false), 'parts'), J$.R(5705, 'callback', callback, false, false), J$.R(5713, 'field', field, false, false)));
                                                } else {
                                                    var operands = J$.W(5745, 'operands', J$.T(5737, [], 10, false), operands, false, false);
                                                    J$.M(5857, J$.G(5761, J$.R(5753, 'part', part, false, false), 'parts'), 'forEach', false)(J$.T(5849, function (innerPart) {
                                                        jalangiLabel2:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(5825, arguments.callee, this, arguments);
                                                                    arguments = J$.N(5833, 'arguments', arguments, true, false, false);
                                                                    innerPart = J$.N(5841, 'innerPart', innerPart, true, false, false);
                                                                    J$.M(5817, J$.R(5769, 'operands', operands, false, false), 'push', false)(J$.F(5809, J$.R(5777, 'mapValues', mapValues, false, true), false)(J$.G(5793, J$.R(5785, 'innerPart', innerPart, false, false), 'parts'), J$.R(5801, 'callback', callback, false, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(6513, J$e);
                                                                } finally {
                                                                    if (J$.Fr(6521))
                                                                        continue jalangiLabel2;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(5897, J$.R(5865, 'result', result, false, false), J$.G(5881, J$.R(5873, 'part', part, false, false), 'operator'), J$.R(5889, 'operands', operands, false, false));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(6529, J$e);
                                        } finally {
                                            if (J$.Fr(6537))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(5977, J$.R(5969, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6545, J$e);
                        } finally {
                            if (J$.Fr(6553))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), mapValues, false, true);
        } catch (J$e) {
            J$.Ex(6593, J$e);
        } finally {
            if (J$.Sr(6601))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

