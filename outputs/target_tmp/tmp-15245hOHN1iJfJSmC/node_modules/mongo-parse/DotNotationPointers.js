J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(3913, '/mnt/data/fxiao/Goldie/outputs/target_tmp/tmp-15245hOHN1iJfJSmC/node_modules/mongo-parse/DotNotationPointers.js');
            function createPointers(rootObject, propertyParts) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2537, arguments.callee, this, arguments);
                            arguments = J$.N(2545, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(2553, 'rootObject', rootObject, true, false, false);
                            propertyParts = J$.N(2561, 'propertyParts', propertyParts, true, false, false);
                            J$.N(2569, 'initialObject', initialObject, false, false, false);
                            J$.N(2577, 'curInfoObjects', curInfoObjects, false, false, false);
                            var initialObject = J$.W(1745, 'initialObject', J$.T(1737, { dummy: J$.R(1729, 'rootObject', rootObject, false, false) }, 11, false), initialObject, false, false);
                            var curInfoObjects = J$.W(1793, 'curInfoObjects', J$.T(1785, [J$.T(1777, {
                                    obj: J$.R(1753, 'initialObject', initialObject, false, false),
                                    last: J$.T(1761, 'dummy', 21, false),
                                    propertyPath: J$.T(1769, [], 10, false)
                                }, 11, false)], 10, false), curInfoObjects, false, false);
                            J$.M(2265, J$.R(1801, 'propertyParts', propertyParts, false, false), 'forEach', false)(J$.T(2257, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2225, arguments.callee, this, arguments);
                                            arguments = J$.N(2233, 'arguments', arguments, true, false, false);
                                            part = J$.N(2241, 'part', part, true, false, false);
                                            J$.N(2249, 'nextInfoObjects', nextInfoObjects, false, false, false);
                                            var nextInfoObjects = J$.W(1817, 'nextInfoObjects', J$.T(1809, [], 10, false), nextInfoObjects, false, false);
                                            J$.M(2201, J$.R(1825, 'curInfoObjects', curInfoObjects, false, false), 'forEach', false)(J$.T(2193, function (current) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2161, arguments.callee, this, arguments);
                                                            arguments = J$.N(2169, 'arguments', arguments, true, false, false);
                                                            current = J$.N(2177, 'current', current, true, false, false);
                                                            J$.N(2185, 'curValue', curValue, false, false, false);
                                                            var curValue = J$.W(1881, 'curValue', J$.F(1873, J$.R(1833, 'getValue', getValue, false, true), false)(J$.G(1849, J$.R(1841, 'current', current, false, false), 'obj'), J$.G(1865, J$.R(1857, 'current', current, false, false), 'last')), curValue, false, false);
                                                            if (J$.C(88, J$.C(80, J$.B(114, 'instanceof', J$.R(1889, 'curValue', curValue, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(1897, 'Array', undefined, true, true) : Array = J$.R(1897, 'Array', Array, true, true)))) ? J$.U(122, '!', J$.F(1921, J$.R(1905, 'isInteger', isInteger, false, true), false)(J$.R(1913, 'part', part, false, false))) : J$._())) {
                                                                J$.M(2081, J$.R(1929, 'curValue', curValue, false, false), 'forEach', false)(J$.T(2073, function (property, index) {
                                                                    jalangiLabel1:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(2041, arguments.callee, this, arguments);
                                                                                arguments = J$.N(2049, 'arguments', arguments, true, false, false);
                                                                                property = J$.N(2057, 'property', property, true, false, false);
                                                                                index = J$.N(2065, 'index', index, true, false, false);
                                                                                J$.M(2033, J$.R(1937, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(2025, {
                                                                                    obj: J$.F(1969, J$.R(1945, 'getValue', getValue, false, true), false)(J$.R(1953, 'curValue', curValue, false, false), J$.R(1961, 'index', index, false, false)),
                                                                                    propertyPath: J$.M(2009, J$.G(1985, J$.R(1977, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(1993, 'index', index, false, false), J$.R(2001, 'part', part, false, false)),
                                                                                    last: J$.R(2017, 'part', part, false, false)
                                                                                }, 11, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(4017, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(4025))
                                                                                    continue jalangiLabel1;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } else {
                                                                J$.M(2153, J$.R(2089, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(2145, {
                                                                    obj: J$.R(2097, 'curValue', curValue, false, false),
                                                                    propertyPath: J$.M(2129, J$.G(2113, J$.R(2105, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(2121, 'part', part, false, false)),
                                                                    last: J$.R(2137, 'part', part, false, false)
                                                                }, 11, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(4033, J$e);
                                                        } finally {
                                                            if (J$.Fr(4041))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            curInfoObjects = J$.W(2217, 'curInfoObjects', J$.R(2209, 'nextInfoObjects', nextInfoObjects, false, false), curInfoObjects, false, false);
                                        } catch (J$e) {
                                            J$.Ex(4049, J$e);
                                        } finally {
                                            if (J$.Fr(4057))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2529, J$.M(2521, J$.R(2273, 'curInfoObjects', curInfoObjects, false, false), 'map', false)(J$.T(2513, function (current) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(2473, arguments.callee, this, arguments);
                                            arguments = J$.N(2481, 'arguments', arguments, true, false, false);
                                            current = J$.N(2489, 'current', current, true, false, false);
                                            J$.N(2497, 'obj', obj, false, false, false);
                                            J$.N(2505, 'last', last, false, false, false);
                                            if (J$.C(96, J$.B(130, '===', J$.G(2289, J$.R(2281, 'current', current, false, false), 'obj'), J$.R(2297, 'initialObject', initialObject, false, false)))) {
                                                var obj = J$.W(2329, 'obj', J$.G(2321, J$.G(2313, J$.R(2305, 'current', current, false, false), 'obj'), 'dummy'), obj, false, false);
                                                var last = J$.W(2345, 'last', J$.T(2337, undefined, 24, false), last, false, false);
                                            } else {
                                                var obj = J$.W(2369, 'obj', J$.G(2361, J$.R(2353, 'current', current, false, false), 'obj'), obj, false, false);
                                                var last = J$.W(2393, 'last', J$.G(2385, J$.R(2377, 'current', current, false, false), 'last'), last, false, false);
                                            }
                                            return J$.Rt(2465, J$.F(2457, J$.R(2401, 'DotNotationPointer', DotNotationPointer, false, true), true)(J$.R(2409, 'rootObject', rootObject, false, false), J$.G(2425, J$.R(2417, 'current', current, false, false), 'propertyPath'), J$.T(2449, {
                                                obj: J$.R(2433, 'obj', obj, false, false),
                                                last: J$.R(2441, 'last', last, false, false)
                                            }, 11, false)));
                                        } catch (J$e) {
                                            J$.Ex(4065, J$e);
                                        } finally {
                                            if (J$.Fr(4073))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(4081, J$e);
                        } finally {
                            if (J$.Fr(4089))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getValue(object, key) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2649, arguments.callee, this, arguments);
                            arguments = J$.N(2657, 'arguments', arguments, true, false, false);
                            object = J$.N(2665, 'object', object, true, false, false);
                            key = J$.N(2673, 'key', key, true, false, false);
                            if (J$.C(104, J$.B(138, '===', J$.R(2585, 'object', object, false, false), J$.T(2593, undefined, 24, false))))
                                return J$.Rt(2609, J$.T(2601, undefined, 24, false));
                            else
                                return J$.Rt(2641, J$.G(2633, J$.R(2617, 'object', object, false, false), J$.R(2625, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(4097, J$e);
                        } finally {
                            if (J$.Fr(4105))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createProperty(that) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(3753, arguments.callee, this, arguments);
                            arguments = J$.N(3761, 'arguments', arguments, true, false, false);
                            that = J$.N(3769, 'that', that, true, false, false);
                            J$.N(3777, 'result', result, false, false, false);
                            J$.N(3785, 'lastIndex', lastIndex, false, false, false);
                            J$.N(3793, 'n', n, false, false, false);
                            J$.N(3801, 'value', value, false, false, false);
                            J$.N(3809, 'newValue', newValue, false, false, false);
                            var result = J$.W(3353, 'result', J$.G(3345, J$.R(3337, 'that', that, false, false), 'root'), result, false, false);
                            var lastIndex = J$.W(3393, 'lastIndex', J$.B(194, '-', J$.G(3377, J$.G(3369, J$.R(3361, 'that', that, false, false), 'property'), 'length'), J$.T(3385, 1, 22, false)), lastIndex, false, false);
                            for (var n = J$.W(3409, 'n', J$.T(3401, 0, 22, false), n, false, false); J$.C(176, J$.B(202, '<', J$.R(3417, 'n', n, false, false), J$.R(3425, 'lastIndex', lastIndex, false, false))); J$.B(226, '-', n = J$.W(3441, 'n', J$.B(218, '+', J$.U(210, '+', J$.R(3433, 'n', n, false, false)), 1), n, false, false), 1)) {
                                var value = J$.W(3497, 'value', J$.G(3489, J$.R(3449, 'result', result, false, false), J$.G(3481, J$.G(3465, J$.R(3457, 'that', that, false, false), 'property'), J$.R(3473, 'n', n, false, false))), value, false, false);
                                if (J$.C(168, J$.B(234, '===', J$.R(3505, 'value', value, false, false), J$.T(3513, undefined, 24, false)))) {
                                    if (J$.C(160, J$.F(3569, J$.R(3521, 'isInteger', isInteger, false, true), false)(J$.G(3561, J$.G(3537, J$.R(3529, 'that', that, false, false), 'property'), J$.B(242, '+', J$.R(3545, 'n', n, false, false), J$.T(3553, 1, 22, false))))))
                                        var newValue = J$.W(3585, 'newValue', J$.T(3577, [], 10, false), newValue, false, false);
                                    else
                                        var newValue = J$.W(3601, 'newValue', J$.T(3593, {}, 11, false), newValue, false, false);
                                    value = J$.W(3665, 'value', J$.P(3657, J$.R(3609, 'result', result, false, false), J$.G(3641, J$.G(3625, J$.R(3617, 'that', that, false, false), 'property'), J$.R(3633, 'n', n, false, false)), J$.R(3649, 'newValue', newValue, false, false)), value, false, false);
                                }
                                result = J$.W(3681, 'result', J$.R(3673, 'value', value, false, false), result, false, false);
                            }
                            J$.P(3745, J$.R(3689, 'that', that, false, false), 'propertyInfo', J$.T(3737, {
                                obj: J$.R(3697, 'result', result, false, false),
                                last: J$.G(3729, J$.G(3713, J$.R(3705, 'that', that, false, false), 'property'), J$.R(3721, 'lastIndex', lastIndex, false, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(4161, J$e);
                        } finally {
                            if (J$.Fr(4169))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isInteger(v) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(3881, arguments.callee, this, arguments);
                            arguments = J$.N(3889, 'arguments', arguments, true, false, false);
                            v = J$.N(3897, 'v', v, true, false, false);
                            J$.N(3905, 'number', number, false, false, false);
                            var number = J$.W(3841, 'number', J$.F(3833, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3817, 'parseInt', undefined, true, true) : parseInt = J$.R(3817, 'parseInt', parseInt, true, true)), false)(J$.R(3825, 'v', v, false, false)), number, false, false);
                            return J$.Rt(3873, J$.U(250, '!', J$.F(3865, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(3849, 'isNaN', undefined, true, true) : isNaN = J$.R(3849, 'isNaN', isNaN, true, true)), false)(J$.R(3857, 'number', number, false, false))));
                        } catch (J$e) {
                            J$.Ex(4177, J$e);
                        } finally {
                            if (J$.Fr(4185))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3921, 'DotNotationPointers', DotNotationPointers, false, false, false);
            createPointers = J$.N(3937, 'createPointers', J$.T(3929, createPointers, 12, false), true, false, false);
            getValue = J$.N(3953, 'getValue', J$.T(3945, getValue, 12, false), true, false, false);
            J$.N(3961, 'DotNotationPointer', DotNotationPointer, false, false, false);
            createProperty = J$.N(3977, 'createProperty', J$.T(3969, createProperty, 12, false), true, false, false);
            isInteger = J$.N(3993, 'isInteger', J$.T(3985, isInteger, 12, false), true, false, false);
            var DotNotationPointers = J$.W(1721, 'DotNotationPointers', J$.P(1713, J$.I(typeof module === 'undefined' ? module = J$.R(1545, 'module', undefined, true, true) : module = J$.R(1545, 'module', module, true, true)), 'exports', J$.T(1705, function (rootObject, property) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1673, arguments.callee, this, arguments);
                            arguments = J$.N(1681, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(1689, 'rootObject', rootObject, true, false, false);
                            property = J$.N(1697, 'property', property, true, false, false);
                            if (J$.C(72, J$.B(90, '===', J$.R(1553, 'property', property, false, false), J$.T(1561, undefined, 24, false)))) {
                                property = J$.W(1577, 'property', J$.T(1569, [], 10, false), property, false, false);
                            } else if (J$.C(64, J$.U(106, '!', J$.B(98, 'instanceof', J$.R(1585, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(1593, 'Array', undefined, true, true) : Array = J$.R(1593, 'Array', Array, true, true)))))) {
                                property = J$.W(1625, 'property', J$.M(1617, J$.R(1601, 'property', property, false, false), 'split', false)(J$.T(1609, '.', 21, false)), property, false, false);
                            }
                            return J$.Rt(1665, J$.F(1657, J$.R(1633, 'createPointers', createPointers, false, true), false)(J$.R(1641, 'rootObject', rootObject, false, false), J$.R(1649, 'property', property, false, false)));
                        } catch (J$e) {
                            J$.Ex(4001, J$e);
                        } finally {
                            if (J$.Fr(4009))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), DotNotationPointers, false, true);
            var DotNotationPointer = J$.W(2913, 'DotNotationPointer', J$.T(2905, function (rootObject, property, propertyInfo) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2865, arguments.callee, this, arguments);
                            arguments = J$.N(2873, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(2881, 'rootObject', rootObject, true, false, false);
                            property = J$.N(2889, 'property', property, true, false, false);
                            propertyInfo = J$.N(2897, 'propertyInfo', propertyInfo, true, false, false);
                            J$.P(2697, J$.R(2681, 'this', this, false, false), 'root', J$.R(2689, 'rootObject', rootObject, false, false));
                            if (J$.C(120, J$.B(146, '===', J$.R(2705, 'property', property, false, false), J$.T(2713, undefined, 24, false)))) {
                                J$.P(2737, J$.R(2721, 'this', this, false, false), 'property', J$.T(2729, [], 10, false));
                            } else if (J$.C(112, J$.B(154, 'instanceof', J$.R(2745, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(2753, 'Array', undefined, true, true) : Array = J$.R(2753, 'Array', Array, true, true))))) {
                                J$.P(2777, J$.R(2761, 'this', this, false, false), 'property', J$.R(2769, 'property', property, false, false));
                            } else {
                                J$.P(2817, J$.R(2785, 'this', this, false, false), 'property', J$.M(2809, J$.R(2793, 'property', property, false, false), 'split', false)(J$.T(2801, '.', 21, false)));
                            }
                            if (J$.C(128, J$.B(162, '!==', J$.R(2825, 'propertyInfo', propertyInfo, false, false), J$.T(2833, undefined, 24, false)))) {
                                J$.P(2857, J$.R(2841, 'this', this, false, false), 'propertyInfo', J$.R(2849, 'propertyInfo', propertyInfo, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(4113, J$e);
                        } finally {
                            if (J$.Fr(4121))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), DotNotationPointer, false, true);
            J$.P(2937, J$.R(2921, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype', J$.T(2929, {}, 11, false));
            J$.M(3329, J$.I(typeof Object === 'undefined' ? Object = J$.R(2945, 'Object', undefined, true, true) : Object = J$.R(2945, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(2961, J$.R(2953, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype'), J$.T(2969, 'val', 21, false), J$.T(3321, {
                get: J$.T(3161, function () {
                    jalangiLabel8:
                        while (true) {
                            try {
                                J$.Fe(3137, arguments.callee, this, arguments);
                                arguments = J$.N(3145, 'arguments', arguments, true, false, false);
                                J$.N(3153, 'info', info, false, false, false);
                                var info = J$.W(2993, 'info', J$.G(2985, J$.R(2977, 'this', this, false, false), 'propertyInfo'), info, false, false);
                                if (J$.C(144, J$.B(170, '===', J$.G(3009, J$.R(3001, 'info', info, false, false), 'obj'), J$.T(3017, undefined, 24, false)))) {
                                    return J$.Rt(3033, J$.T(3025, undefined, 24, false));
                                } else {
                                    if (J$.C(136, J$.B(178, '!==', J$.G(3049, J$.R(3041, 'info', info, false, false), 'last'), J$.T(3057, undefined, 24, false)))) {
                                        return J$.Rt(3105, J$.G(3097, J$.G(3073, J$.R(3065, 'info', info, false, false), 'obj'), J$.G(3089, J$.R(3081, 'info', info, false, false), 'last')));
                                    } else {
                                        return J$.Rt(3129, J$.G(3121, J$.R(3113, 'info', info, false, false), 'obj'));
                                    }
                                }
                            } catch (J$e) {
                                J$.Ex(4129, J$e);
                            } finally {
                                if (J$.Fr(4137))
                                    continue jalangiLabel8;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                set: J$.T(3313, function (value) {
                    jalangiLabel9:
                        while (true) {
                            try {
                                J$.Fe(3289, arguments.callee, this, arguments);
                                arguments = J$.N(3297, 'arguments', arguments, true, false, false);
                                value = J$.N(3305, 'value', value, true, false, false);
                                if (J$.C(152, J$.B(186, '===', J$.G(3185, J$.G(3177, J$.R(3169, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.T(3193, undefined, 24, false)))) {
                                    J$.F(3217, J$.R(3201, 'createProperty', createProperty, false, true), false)(J$.R(3209, 'this', this, false, false));
                                }
                                J$.P(3281, J$.G(3241, J$.G(3233, J$.R(3225, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.G(3265, J$.G(3257, J$.R(3249, 'this', this, false, false), 'propertyInfo'), 'last'), J$.R(3273, 'value', value, false, false));
                            } catch (J$e) {
                                J$.Ex(4145, J$e);
                            } finally {
                                if (J$.Fr(4153))
                                    continue jalangiLabel9;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(4193, J$e);
        } finally {
            if (J$.Sr(4201))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

