J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(5337801, '/home/james/nodejs/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/scripts/compile-dots.js');
            J$.N(5337809, 'glob', glob, false, false, false);
            J$.N(5337817, 'fs', fs, false, false, false);
            J$.N(5337825, 'path', path, false, false, false);
            J$.N(5337833, 'doT', doT, false, false, false);
            J$.N(5337841, 'beautify', beautify, false, false, false);
            J$.N(5337849, 'defsRootPath', defsRootPath, false, false, false);
            J$.N(5337857, 'defs', defs, false, false, false);
            J$.N(5337865, 'defFiles', defFiles, false, false, false);
            J$.N(5337873, 'filesRootPath', filesRootPath, false, false, false);
            J$.N(5337881, 'files', files, false, false, false);
            J$.N(5337889, 'dotjsPath', dotjsPath, false, false, false);
            J$.N(5337897, 'FUNCTION_NAME', FUNCTION_NAME, false, false, false);
            J$.N(5337905, 'OUT_EMPTY_STRING', OUT_EMPTY_STRING, false, false, false);
            J$.N(5337913, 'ISTANBUL', ISTANBUL, false, false, false);
            J$.N(5337921, 'ERROR_KEYWORD', ERROR_KEYWORD, false, false, false);
            J$.N(5337929, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, false, false);
            J$.N(5337937, 'VARS', VARS, false, false, false);
            J$.T(5335577, 'use strict', 21, false);
            J$.F(5335601, J$.I(typeof require === 'undefined' ? require = J$.R(5335585, 'require', undefined, true, true) : require = J$.R(5335585, 'require', require, true, true)), false)(J$.T(5335593, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(5335625, J$.I(typeof require === 'undefined' ? require = J$.R(5335609, 'require', undefined, true, true) : require = J$.R(5335609, 'require', require, true, true)), false)(J$.T(5335617, 'core-js/modules/es.array.join', 21, false));
            J$.F(5335649, J$.I(typeof require === 'undefined' ? require = J$.R(5335633, 'require', undefined, true, true) : require = J$.R(5335633, 'require', require, true, true)), false)(J$.T(5335641, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(5335673, J$.I(typeof require === 'undefined' ? require = J$.R(5335657, 'require', undefined, true, true) : require = J$.R(5335657, 'require', require, true, true)), false)(J$.T(5335665, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(5335697, J$.I(typeof require === 'undefined' ? require = J$.R(5335681, 'require', undefined, true, true) : require = J$.R(5335681, 'require', require, true, true)), false)(J$.T(5335689, 'core-js/modules/es.regexp.constructor', 21, false));
            J$.F(5335721, J$.I(typeof require === 'undefined' ? require = J$.R(5335705, 'require', undefined, true, true) : require = J$.R(5335705, 'require', require, true, true)), false)(J$.T(5335713, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(5335745, J$.I(typeof require === 'undefined' ? require = J$.R(5335729, 'require', undefined, true, true) : require = J$.R(5335729, 'require', require, true, true)), false)(J$.T(5335737, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(5335769, J$.I(typeof require === 'undefined' ? require = J$.R(5335753, 'require', undefined, true, true) : require = J$.R(5335753, 'require', require, true, true)), false)(J$.T(5335761, 'core-js/modules/es.string.match', 21, false));
            J$.F(5335793, J$.I(typeof require === 'undefined' ? require = J$.R(5335777, 'require', undefined, true, true) : require = J$.R(5335777, 'require', require, true, true)), false)(J$.T(5335785, 'core-js/modules/es.string.replace', 21, false));
            J$.F(5335817, J$.I(typeof require === 'undefined' ? require = J$.R(5335801, 'require', undefined, true, true) : require = J$.R(5335801, 'require', require, true, true)), false)(J$.T(5335809, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var glob = J$.W(5335953, 'glob', J$.F(5335841, J$.I(typeof require === 'undefined' ? require = J$.R(5335825, 'require', undefined, true, true) : require = J$.R(5335825, 'require', require, true, true)), false)(J$.T(5335833, 'glob', 21, false)), glob, false, true), fs = J$.W(5335961, 'fs', J$.F(5335865, J$.I(typeof require === 'undefined' ? require = J$.R(5335849, 'require', undefined, true, true) : require = J$.R(5335849, 'require', require, true, true)), false)(J$.T(5335857, 'fs', 21, false)), fs, false, true), path = J$.W(5335969, 'path', J$.F(5335889, J$.I(typeof require === 'undefined' ? require = J$.R(5335873, 'require', undefined, true, true) : require = J$.R(5335873, 'require', require, true, true)), false)(J$.T(5335881, 'path', 21, false)), path, false, true), doT = J$.W(5335977, 'doT', J$.F(5335913, J$.I(typeof require === 'undefined' ? require = J$.R(5335897, 'require', undefined, true, true) : require = J$.R(5335897, 'require', require, true, true)), false)(J$.T(5335905, 'dot', 21, false)), doT, false, true), beautify = J$.W(5335985, 'beautify', J$.G(5335945, J$.F(5335937, J$.I(typeof require === 'undefined' ? require = J$.R(5335921, 'require', undefined, true, true) : require = J$.R(5335921, 'require', require, true, true)), false)(J$.T(5335929, 'js-beautify', 21, false)), 'js_beautify'), beautify, false, true);
            var defsRootPath = J$.W(5336057, 'defsRootPath', J$.C(290296, J$.G(5336017, J$.G(5336001, J$.I(typeof process === 'undefined' ? process = J$.R(5335993, 'process', undefined, true, true) : process = J$.R(5335993, 'process', process, true, true)), 'argv'), J$.T(5336009, 2, 22, false))) ? J$._() : J$.M(5336049, J$.R(5336025, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(5336033, '__dirname', undefined, true, true) : __dirname = J$.R(5336033, '__dirname', __dirname, true, true)), J$.T(5336041, '../lib', 21, false)), defsRootPath, false, true);
            var defs = J$.W(5336073, 'defs', J$.T(5336065, {}, 11, false), defs, false, true);
            var defFiles = J$.W(5336121, 'defFiles', J$.M(5336113, J$.R(5336081, 'glob', glob, false, true), 'sync', false)(J$.T(5336089, './dot/**/*.def', 21, false), J$.T(5336105, { cwd: J$.R(5336097, 'defsRootPath', defsRootPath, false, true) }, 11, false)), defFiles, false, true);
            J$.M(5336289, J$.R(5336129, 'defFiles', defFiles, false, true), 'forEach', false)(J$.T(5336281, function (f) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5336249, arguments.callee, this, arguments);
                            arguments = J$.N(5336257, 'arguments', arguments, true, false, false);
                            f = J$.N(5336265, 'f', f, true, false, false);
                            J$.N(5336273, 'name', name, false, false, false);
                            var name = J$.W(5336169, 'name', J$.M(5336161, J$.R(5336137, 'path', path, false, true), 'basename', false)(J$.R(5336145, 'f', f, false, false), J$.T(5336153, '.def', 21, false)), name, false, false);
                            J$.P(5336241, J$.R(5336177, 'defs', defs, false, true), J$.R(5336185, 'name', name, false, false), J$.M(5336233, J$.R(5336193, 'fs', fs, false, true), 'readFileSync', false)(J$.M(5336225, J$.R(5336201, 'path', path, false, true), 'join', false)(J$.R(5336209, 'defsRootPath', defsRootPath, false, true), J$.R(5336217, 'f', f, false, false))));
                        } catch (J$e) {
                            J$.Ex(5337945, J$e);
                        } finally {
                            if (J$.Fr(5337953))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var filesRootPath = J$.W(5336361, 'filesRootPath', J$.C(290304, J$.G(5336321, J$.G(5336305, J$.I(typeof process === 'undefined' ? process = J$.R(5336297, 'process', undefined, true, true) : process = J$.R(5336297, 'process', process, true, true)), 'argv'), J$.T(5336313, 3, 22, false))) ? J$._() : J$.M(5336353, J$.R(5336329, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(5336337, '__dirname', undefined, true, true) : __dirname = J$.R(5336337, '__dirname', __dirname, true, true)), J$.T(5336345, '../lib', 21, false)), filesRootPath, false, true);
            var files = J$.W(5336409, 'files', J$.M(5336401, J$.R(5336369, 'glob', glob, false, true), 'sync', false)(J$.T(5336377, './dot/**/*.jst', 21, false), J$.T(5336393, { cwd: J$.R(5336385, 'filesRootPath', filesRootPath, false, true) }, 11, false)), files, false, true);
            var dotjsPath = J$.W(5336449, 'dotjsPath', J$.M(5336441, J$.R(5336417, 'path', path, false, true), 'join', false)(J$.R(5336425, 'filesRootPath', filesRootPath, false, true), J$.T(5336433, './dotjs', 21, false)), dotjsPath, false, true);
            try {
                J$.M(5336473, J$.R(5336457, 'fs', fs, false, true), 'mkdirSync', false)(J$.R(5336465, 'dotjsPath', dotjsPath, false, true));
            } catch (e) {
                J$.N(5336481, 'e', e, false, false, true);
            }
            J$.M(5336505, J$.I(typeof console === 'undefined' ? console = J$.R(5336489, 'console', undefined, true, true) : console = J$.R(5336489, 'console', console, true, true)), 'log', false)(J$.T(5336497, '\n\nCompiling:', 21, false));
            var FUNCTION_NAME = J$.W(5336521, 'FUNCTION_NAME', J$.T(5336513, /function\s+anonymous\s*\(it[^)]*\)\s*{/, 14, false), FUNCTION_NAME, false, true);
            var OUT_EMPTY_STRING = J$.W(5336537, 'OUT_EMPTY_STRING', J$.T(5336529, /out\s*\+=\s*'\s*';/g, 14, false), OUT_EMPTY_STRING, false, true);
            var ISTANBUL = J$.W(5336553, 'ISTANBUL', J$.T(5336545, /'(istanbul[^']+)';/g, 14, false), ISTANBUL, false, true);
            var ERROR_KEYWORD = J$.W(5336569, 'ERROR_KEYWORD', J$.T(5336561, /\$errorKeyword/g, 14, false), ERROR_KEYWORD, false, true);
            var ERROR_KEYWORD_OR = J$.W(5336585, 'ERROR_KEYWORD_OR', J$.T(5336577, /\$errorKeyword\s+\|\|/g, 14, false), ERROR_KEYWORD_OR, false, true);
            var VARS = J$.W(5336673, 'VARS', J$.T(5336665, [
                J$.T(5336593, '$errs', 21, false),
                J$.T(5336601, '$valid', 21, false),
                J$.T(5336609, '$lvl', 21, false),
                J$.T(5336617, '$data', 21, false),
                J$.T(5336625, '$dataLvl', 21, false),
                J$.T(5336633, '$errorKeyword', 21, false),
                J$.T(5336641, '$closingBraces', 21, false),
                J$.T(5336649, '$schemaPath', 21, false),
                J$.T(5336657, '$validate', 21, false)
            ], 10, false), VARS, false, true);
            J$.M(5337793, J$.R(5336681, 'files', files, false, true), 'forEach', false)(J$.T(5337785, function (f) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5337681, arguments.callee, this, arguments);
                            function removeUnusedVar(v) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(5337409, arguments.callee, this, arguments);
                                            arguments = J$.N(5337417, 'arguments', arguments, true, false, false);
                                            v = J$.N(5337425, 'v', v, true, false, false);
                                            J$.N(5337433, 'regexp', regexp, false, false, false);
                                            J$.N(5337441, 'count', count, false, false, false);
                                            v = J$.W(5337201, 'v', J$.M(5337193, J$.R(5337169, 'v', v, false, false), 'replace', false)(J$.T(5337177, /\$/g, 14, false), J$.T(5337185, '\\$$', 21, false)), v, false, false);
                                            var regexp = J$.W(5337249, 'regexp', J$.F(5337241, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5337209, 'RegExp', undefined, true, true) : RegExp = J$.R(5337209, 'RegExp', RegExp, true, true)), true)(J$.B(564338, '+', J$.R(5337217, 'v', v, false, false), J$.T(5337225, '[^A-Za-z0-9_$]', 21, false)), J$.T(5337233, 'g', 21, false)), regexp, false, false);
                                            var count = J$.W(5337281, 'count', J$.F(5337273, J$.R(5337257, 'occurrences', occurrences, false, false), false)(J$.R(5337265, 'regexp', regexp, false, false)), count, false, false);
                                            if (J$.C(290312, J$.B(564346, '==', J$.R(5337289, 'count', count, false, false), J$.T(5337297, 1, 22, false)))) {
                                                regexp = J$.W(5337361, 'regexp', J$.F(5337353, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5337305, 'RegExp', undefined, true, true) : RegExp = J$.R(5337305, 'RegExp', RegExp, true, true)), true)(J$.B(564378, '+', J$.B(564370, '+', J$.B(564362, '+', J$.B(564354, '+', J$.T(5337313, 'var\\s+', 21, false), J$.R(5337321, 'v', v, false, false)), J$.T(5337329, '\\s*=[^;]+;|var\\s+', 21, false)), J$.R(5337337, 'v', v, false, false)), J$.T(5337345, ';', 21, false))), regexp, false, false);
                                                code = J$.W(5337401, 'code', J$.M(5337393, J$.R(5337369, 'code', code, false, false), 'replace', false)(J$.R(5337377, 'regexp', regexp, false, false), J$.T(5337385, '', 21, false)), code, false, false);
                                            }
                                        } catch (J$e) {
                                            J$.Ex(5337961, J$e);
                                        } finally {
                                            if (J$.Fr(5337969))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function removeAlwaysFalsyInOr() {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(5337577, arguments.callee, this, arguments);
                                            arguments = J$.N(5337585, 'arguments', arguments, true, false, false);
                                            J$.N(5337593, 'countUsed', countUsed, false, false, false);
                                            J$.N(5337601, 'countOr', countOr, false, false, false);
                                            var countUsed = J$.W(5337473, 'countUsed', J$.F(5337465, J$.R(5337449, 'occurrences', occurrences, false, false), false)(J$.R(5337457, 'ERROR_KEYWORD', ERROR_KEYWORD, false, true)), countUsed, false, false);
                                            var countOr = J$.W(5337505, 'countOr', J$.F(5337497, J$.R(5337481, 'occurrences', occurrences, false, false), false)(J$.R(5337489, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, true)), countOr, false, false);
                                            if (J$.C(290320, J$.B(564394, '==', J$.R(5337513, 'countUsed', countUsed, false, false), J$.B(564386, '+', J$.R(5337521, 'countOr', countOr, false, false), J$.T(5337529, 1, 22, false)))))
                                                code = J$.W(5337569, 'code', J$.M(5337561, J$.R(5337537, 'code', code, false, false), 'replace', false)(J$.R(5337545, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, true), J$.T(5337553, '', 21, false)), code, false, false);
                                        } catch (J$e) {
                                            J$.Ex(5337977, J$e);
                                        } finally {
                                            if (J$.Fr(5337985))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function occurrences(regexp) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(5337657, arguments.callee, this, arguments);
                                            arguments = J$.N(5337665, 'arguments', arguments, true, false, false);
                                            regexp = J$.N(5337673, 'regexp', regexp, true, false, false);
                                            return J$.Rt(5337649, J$.G(5337641, J$.C(290328, J$.M(5337625, J$.R(5337609, 'code', code, false, false), 'match', false)(J$.R(5337617, 'regexp', regexp, false, false))) ? J$._() : J$.T(5337633, [], 10, false), 'length'));
                                        } catch (J$e) {
                                            J$.Ex(5337993, J$e);
                                        } finally {
                                            if (J$.Fr(5338001))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(5337689, 'arguments', arguments, true, false, false);
                            f = J$.N(5337697, 'f', f, true, false, false);
                            J$.N(5337705, 'keyword', keyword, false, false, false);
                            J$.N(5337713, 'targetPath', targetPath, false, false, false);
                            J$.N(5337721, 'template', template, false, false, false);
                            J$.N(5337729, 'code', code, false, false, false);
                            removeUnusedVar = J$.N(5337745, 'removeUnusedVar', J$.T(5337737, removeUnusedVar, 12, false), true, false, false);
                            removeAlwaysFalsyInOr = J$.N(5337761, 'removeAlwaysFalsyInOr', J$.T(5337753, removeAlwaysFalsyInOr, 12, false), true, false, false);
                            occurrences = J$.N(5337777, 'occurrences', J$.T(5337769, occurrences, 12, false), true, false, false);
                            var keyword = J$.W(5336721, 'keyword', J$.M(5336713, J$.R(5336689, 'path', path, false, true), 'basename', false)(J$.R(5336697, 'f', f, false, false), J$.T(5336705, '.jst', 21, false)), keyword, false, false);
                            var targetPath = J$.W(5336769, 'targetPath', J$.M(5336761, J$.R(5336729, 'path', path, false, true), 'join', false)(J$.R(5336737, 'dotjsPath', dotjsPath, false, true), J$.B(564298, '+', J$.R(5336745, 'keyword', keyword, false, false), J$.T(5336753, '.js', 21, false))), targetPath, false, false);
                            var template = J$.W(5336825, 'template', J$.M(5336817, J$.R(5336777, 'fs', fs, false, true), 'readFileSync', false)(J$.M(5336809, J$.R(5336785, 'path', path, false, true), 'join', false)(J$.R(5336793, 'filesRootPath', filesRootPath, false, true), J$.R(5336801, 'f', f, false, false))), template, false, false);
                            var code = J$.W(5336865, 'code', J$.M(5336857, J$.R(5336833, 'doT', doT, false, true), 'compile', false)(J$.R(5336841, 'template', template, false, false), J$.R(5336849, 'defs', defs, false, true)), code, false, false);
                            code = J$.W(5336977, 'code', J$.M(5336969, J$.M(5336945, J$.M(5336905, J$.M(5336881, J$.R(5336873, 'code', code, false, false), 'toString', false)(), 'replace', false)(J$.R(5336889, 'OUT_EMPTY_STRING', OUT_EMPTY_STRING, false, true), J$.T(5336897, '', 21, false)), 'replace', false)(J$.R(5336913, 'FUNCTION_NAME', FUNCTION_NAME, false, true), J$.B(564314, '+', J$.B(564306, '+', J$.T(5336921, 'function generate_', 21, false), J$.R(5336929, 'keyword', keyword, false, false)), J$.T(5336937, '(it, $keyword, $ruleType) {', 21, false))), 'replace', false)(J$.R(5336953, 'ISTANBUL', ISTANBUL, false, true), J$.T(5336961, '/* $1 */', 21, false)), code, false, false);
                            J$.F(5336993, J$.R(5336985, 'removeAlwaysFalsyInOr', removeAlwaysFalsyInOr, false, false), false)();
                            J$.M(5337017, J$.R(5337001, 'VARS', VARS, false, true), 'forEach', false)(J$.R(5337009, 'removeUnusedVar', removeUnusedVar, false, false));
                            code = J$.W(5337041, 'code', J$.B(564322, '+', J$.T(5337025, '\'use strict\';\nmodule.exports = ', 21, false), J$.R(5337033, 'code', code, false, false)), code, false, false);
                            code = J$.W(5337097, 'code', J$.B(564330, '+', J$.F(5337081, J$.R(5337049, 'beautify', beautify, false, true), false)(J$.R(5337057, 'code', code, false, false), J$.T(5337073, { indent_size: J$.T(5337065, 2, 22, false) }, 11, false)), J$.T(5337089, '\n', 21, false)), code, false, false);
                            J$.M(5337129, J$.R(5337105, 'fs', fs, false, true), 'writeFileSync', false)(J$.R(5337113, 'targetPath', targetPath, false, false), J$.R(5337121, 'code', code, false, false));
                            J$.M(5337161, J$.I(typeof console === 'undefined' ? console = J$.R(5337137, 'console', undefined, true, true) : console = J$.R(5337137, 'console', console, true, true)), 'log', false)(J$.T(5337145, 'compiled', 21, false), J$.R(5337153, 'keyword', keyword, false, false));
                        } catch (J$e) {
                            J$.Ex(5338009, J$e);
                        } finally {
                            if (J$.Fr(5338017))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5338025, J$e);
        } finally {
            if (J$.Sr(5338033))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

