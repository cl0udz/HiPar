J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(1554505, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/scripts/compile-dots.js');
            J$.N(1554513, 'glob', glob, false, false, false);
            J$.N(1554521, 'fs', fs, false, false, false);
            J$.N(1554529, 'path', path, false, false, false);
            J$.N(1554537, 'doT', doT, false, false, false);
            J$.N(1554545, 'beautify', beautify, false, false, false);
            J$.N(1554553, 'defsRootPath', defsRootPath, false, false, false);
            J$.N(1554561, 'defs', defs, false, false, false);
            J$.N(1554569, 'defFiles', defFiles, false, false, false);
            J$.N(1554577, 'filesRootPath', filesRootPath, false, false, false);
            J$.N(1554585, 'files', files, false, false, false);
            J$.N(1554593, 'dotjsPath', dotjsPath, false, false, false);
            J$.N(1554601, 'FUNCTION_NAME', FUNCTION_NAME, false, false, false);
            J$.N(1554609, 'OUT_EMPTY_STRING', OUT_EMPTY_STRING, false, false, false);
            J$.N(1554617, 'ISTANBUL', ISTANBUL, false, false, false);
            J$.N(1554625, 'ERROR_KEYWORD', ERROR_KEYWORD, false, false, false);
            J$.N(1554633, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, false, false);
            J$.N(1554641, 'VARS', VARS, false, false, false);
            J$.T(1552281, 'use strict', 21, false);
            J$.F(1552305, J$.I(typeof require === 'undefined' ? require = J$.R(1552289, 'require', undefined, true, true) : require = J$.R(1552289, 'require', require, true, true)), false)(J$.T(1552297, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(1552329, J$.I(typeof require === 'undefined' ? require = J$.R(1552313, 'require', undefined, true, true) : require = J$.R(1552313, 'require', require, true, true)), false)(J$.T(1552321, 'core-js/modules/es.array.join', 21, false));
            J$.F(1552353, J$.I(typeof require === 'undefined' ? require = J$.R(1552337, 'require', undefined, true, true) : require = J$.R(1552337, 'require', require, true, true)), false)(J$.T(1552345, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(1552377, J$.I(typeof require === 'undefined' ? require = J$.R(1552361, 'require', undefined, true, true) : require = J$.R(1552361, 'require', require, true, true)), false)(J$.T(1552369, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1552401, J$.I(typeof require === 'undefined' ? require = J$.R(1552385, 'require', undefined, true, true) : require = J$.R(1552385, 'require', require, true, true)), false)(J$.T(1552393, 'core-js/modules/es.regexp.constructor', 21, false));
            J$.F(1552425, J$.I(typeof require === 'undefined' ? require = J$.R(1552409, 'require', undefined, true, true) : require = J$.R(1552409, 'require', require, true, true)), false)(J$.T(1552417, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1552449, J$.I(typeof require === 'undefined' ? require = J$.R(1552433, 'require', undefined, true, true) : require = J$.R(1552433, 'require', require, true, true)), false)(J$.T(1552441, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(1552473, J$.I(typeof require === 'undefined' ? require = J$.R(1552457, 'require', undefined, true, true) : require = J$.R(1552457, 'require', require, true, true)), false)(J$.T(1552465, 'core-js/modules/es.string.match', 21, false));
            J$.F(1552497, J$.I(typeof require === 'undefined' ? require = J$.R(1552481, 'require', undefined, true, true) : require = J$.R(1552481, 'require', require, true, true)), false)(J$.T(1552489, 'core-js/modules/es.string.replace', 21, false));
            J$.F(1552521, J$.I(typeof require === 'undefined' ? require = J$.R(1552505, 'require', undefined, true, true) : require = J$.R(1552505, 'require', require, true, true)), false)(J$.T(1552513, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var glob = J$.W(1552657, 'glob', J$.F(1552545, J$.I(typeof require === 'undefined' ? require = J$.R(1552529, 'require', undefined, true, true) : require = J$.R(1552529, 'require', require, true, true)), false)(J$.T(1552537, 'glob', 21, false)), glob, false, true), fs = J$.W(1552665, 'fs', J$.F(1552569, J$.I(typeof require === 'undefined' ? require = J$.R(1552553, 'require', undefined, true, true) : require = J$.R(1552553, 'require', require, true, true)), false)(J$.T(1552561, 'fs', 21, false)), fs, false, true), path = J$.W(1552673, 'path', J$.F(1552593, J$.I(typeof require === 'undefined' ? require = J$.R(1552577, 'require', undefined, true, true) : require = J$.R(1552577, 'require', require, true, true)), false)(J$.T(1552585, 'path', 21, false)), path, false, true), doT = J$.W(1552681, 'doT', J$.F(1552617, J$.I(typeof require === 'undefined' ? require = J$.R(1552601, 'require', undefined, true, true) : require = J$.R(1552601, 'require', require, true, true)), false)(J$.T(1552609, 'dot', 21, false)), doT, false, true), beautify = J$.W(1552689, 'beautify', J$.G(1552649, J$.F(1552641, J$.I(typeof require === 'undefined' ? require = J$.R(1552625, 'require', undefined, true, true) : require = J$.R(1552625, 'require', require, true, true)), false)(J$.T(1552633, 'js-beautify', 21, false)), 'js_beautify'), beautify, false, true);
            var defsRootPath = J$.W(1552761, 'defsRootPath', J$.C(93776, J$.G(1552721, J$.G(1552705, J$.I(typeof process === 'undefined' ? process = J$.R(1552697, 'process', undefined, true, true) : process = J$.R(1552697, 'process', process, true, true)), 'argv'), J$.T(1552713, 2, 22, false))) ? J$._() : J$.M(1552753, J$.R(1552729, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(1552737, '__dirname', undefined, true, true) : __dirname = J$.R(1552737, '__dirname', __dirname, true, true)), J$.T(1552745, '../lib', 21, false)), defsRootPath, false, true);
            var defs = J$.W(1552777, 'defs', J$.T(1552769, {}, 11, false), defs, false, true);
            var defFiles = J$.W(1552825, 'defFiles', J$.M(1552817, J$.R(1552785, 'glob', glob, false, true), 'sync', false)(J$.T(1552793, './dot/**/*.def', 21, false), J$.T(1552809, { cwd: J$.R(1552801, 'defsRootPath', defsRootPath, false, true) }, 11, false)), defFiles, false, true);
            J$.M(1552993, J$.R(1552833, 'defFiles', defFiles, false, true), 'forEach', false)(J$.T(1552985, function (f) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1552953, arguments.callee, this, arguments);
                            arguments = J$.N(1552961, 'arguments', arguments, true, false, false);
                            f = J$.N(1552969, 'f', f, true, false, false);
                            J$.N(1552977, 'name', name, false, false, false);
                            var name = J$.W(1552873, 'name', J$.M(1552865, J$.R(1552841, 'path', path, false, true), 'basename', false)(J$.R(1552849, 'f', f, false, false), J$.T(1552857, '.def', 21, false)), name, false, false);
                            J$.P(1552945, J$.R(1552881, 'defs', defs, false, true), J$.R(1552889, 'name', name, false, false), J$.M(1552937, J$.R(1552897, 'fs', fs, false, true), 'readFileSync', false)(J$.M(1552929, J$.R(1552905, 'path', path, false, true), 'join', false)(J$.R(1552913, 'defsRootPath', defsRootPath, false, true), J$.R(1552921, 'f', f, false, false))));
                        } catch (J$e) {
                            J$.Ex(1554649, J$e);
                        } finally {
                            if (J$.Fr(1554657))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var filesRootPath = J$.W(1553065, 'filesRootPath', J$.C(93784, J$.G(1553025, J$.G(1553009, J$.I(typeof process === 'undefined' ? process = J$.R(1553001, 'process', undefined, true, true) : process = J$.R(1553001, 'process', process, true, true)), 'argv'), J$.T(1553017, 3, 22, false))) ? J$._() : J$.M(1553057, J$.R(1553033, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(1553041, '__dirname', undefined, true, true) : __dirname = J$.R(1553041, '__dirname', __dirname, true, true)), J$.T(1553049, '../lib', 21, false)), filesRootPath, false, true);
            var files = J$.W(1553113, 'files', J$.M(1553105, J$.R(1553073, 'glob', glob, false, true), 'sync', false)(J$.T(1553081, './dot/**/*.jst', 21, false), J$.T(1553097, { cwd: J$.R(1553089, 'filesRootPath', filesRootPath, false, true) }, 11, false)), files, false, true);
            var dotjsPath = J$.W(1553153, 'dotjsPath', J$.M(1553145, J$.R(1553121, 'path', path, false, true), 'join', false)(J$.R(1553129, 'filesRootPath', filesRootPath, false, true), J$.T(1553137, './dotjs', 21, false)), dotjsPath, false, true);
            try {
                J$.M(1553177, J$.R(1553161, 'fs', fs, false, true), 'mkdirSync', false)(J$.R(1553169, 'dotjsPath', dotjsPath, false, true));
            } catch (e) {
                J$.N(1553185, 'e', e, false, false, true);
            }
            J$.M(1553209, J$.I(typeof console === 'undefined' ? console = J$.R(1553193, 'console', undefined, true, true) : console = J$.R(1553193, 'console', console, true, true)), 'log', false)(J$.T(1553201, '\n\nCompiling:', 21, false));
            var FUNCTION_NAME = J$.W(1553225, 'FUNCTION_NAME', J$.T(1553217, /function\s+anonymous\s*\(it[^)]*\)\s*{/, 14, false), FUNCTION_NAME, false, true);
            var OUT_EMPTY_STRING = J$.W(1553241, 'OUT_EMPTY_STRING', J$.T(1553233, /out\s*\+=\s*'\s*';/g, 14, false), OUT_EMPTY_STRING, false, true);
            var ISTANBUL = J$.W(1553257, 'ISTANBUL', J$.T(1553249, /'(istanbul[^']+)';/g, 14, false), ISTANBUL, false, true);
            var ERROR_KEYWORD = J$.W(1553273, 'ERROR_KEYWORD', J$.T(1553265, /\$errorKeyword/g, 14, false), ERROR_KEYWORD, false, true);
            var ERROR_KEYWORD_OR = J$.W(1553289, 'ERROR_KEYWORD_OR', J$.T(1553281, /\$errorKeyword\s+\|\|/g, 14, false), ERROR_KEYWORD_OR, false, true);
            var VARS = J$.W(1553377, 'VARS', J$.T(1553369, [
                J$.T(1553297, '$errs', 21, false),
                J$.T(1553305, '$valid', 21, false),
                J$.T(1553313, '$lvl', 21, false),
                J$.T(1553321, '$data', 21, false),
                J$.T(1553329, '$dataLvl', 21, false),
                J$.T(1553337, '$errorKeyword', 21, false),
                J$.T(1553345, '$closingBraces', 21, false),
                J$.T(1553353, '$schemaPath', 21, false),
                J$.T(1553361, '$validate', 21, false)
            ], 10, false), VARS, false, true);
            J$.M(1554497, J$.R(1553385, 'files', files, false, true), 'forEach', false)(J$.T(1554489, function (f) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1554385, arguments.callee, this, arguments);
                            function removeUnusedVar(v) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(1554113, arguments.callee, this, arguments);
                                            arguments = J$.N(1554121, 'arguments', arguments, true, false, false);
                                            v = J$.N(1554129, 'v', v, true, false, false);
                                            J$.N(1554137, 'regexp', regexp, false, false, false);
                                            J$.N(1554145, 'count', count, false, false, false);
                                            v = J$.W(1553905, 'v', J$.M(1553897, J$.R(1553873, 'v', v, false, false), 'replace', false)(J$.T(1553881, /\$/g, 14, false), J$.T(1553889, '\\$$', 21, false)), v, false, false);
                                            var regexp = J$.W(1553953, 'regexp', J$.F(1553945, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(1553913, 'RegExp', undefined, true, true) : RegExp = J$.R(1553913, 'RegExp', RegExp, true, true)), true)(J$.B(216922, '+', J$.R(1553921, 'v', v, false, false), J$.T(1553929, '[^A-Za-z0-9_$]', 21, false)), J$.T(1553937, 'g', 21, false)), regexp, false, false);
                                            var count = J$.W(1553985, 'count', J$.F(1553977, J$.R(1553961, 'occurrences', occurrences, false, false), false)(J$.R(1553969, 'regexp', regexp, false, false)), count, false, false);
                                            if (J$.C(93792, J$.B(216930, '==', J$.R(1553993, 'count', count, false, false), J$.T(1554001, 1, 22, false)))) {
                                                regexp = J$.W(1554065, 'regexp', J$.F(1554057, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(1554009, 'RegExp', undefined, true, true) : RegExp = J$.R(1554009, 'RegExp', RegExp, true, true)), true)(J$.B(216962, '+', J$.B(216954, '+', J$.B(216946, '+', J$.B(216938, '+', J$.T(1554017, 'var\\s+', 21, false), J$.R(1554025, 'v', v, false, false)), J$.T(1554033, '\\s*=[^;]+;|var\\s+', 21, false)), J$.R(1554041, 'v', v, false, false)), J$.T(1554049, ';', 21, false))), regexp, false, false);
                                                code = J$.W(1554105, 'code', J$.M(1554097, J$.R(1554073, 'code', code, false, false), 'replace', false)(J$.R(1554081, 'regexp', regexp, false, false), J$.T(1554089, '', 21, false)), code, false, false);
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1554665, J$e);
                                        } finally {
                                            if (J$.Fr(1554673))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function removeAlwaysFalsyInOr() {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(1554281, arguments.callee, this, arguments);
                                            arguments = J$.N(1554289, 'arguments', arguments, true, false, false);
                                            J$.N(1554297, 'countUsed', countUsed, false, false, false);
                                            J$.N(1554305, 'countOr', countOr, false, false, false);
                                            var countUsed = J$.W(1554177, 'countUsed', J$.F(1554169, J$.R(1554153, 'occurrences', occurrences, false, false), false)(J$.R(1554161, 'ERROR_KEYWORD', ERROR_KEYWORD, false, true)), countUsed, false, false);
                                            var countOr = J$.W(1554209, 'countOr', J$.F(1554201, J$.R(1554185, 'occurrences', occurrences, false, false), false)(J$.R(1554193, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, true)), countOr, false, false);
                                            if (J$.C(93800, J$.B(216978, '==', J$.R(1554217, 'countUsed', countUsed, false, false), J$.B(216970, '+', J$.R(1554225, 'countOr', countOr, false, false), J$.T(1554233, 1, 22, false)))))
                                                code = J$.W(1554273, 'code', J$.M(1554265, J$.R(1554241, 'code', code, false, false), 'replace', false)(J$.R(1554249, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, true), J$.T(1554257, '', 21, false)), code, false, false);
                                        } catch (J$e) {
                                            J$.Ex(1554681, J$e);
                                        } finally {
                                            if (J$.Fr(1554689))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function occurrences(regexp) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(1554361, arguments.callee, this, arguments);
                                            arguments = J$.N(1554369, 'arguments', arguments, true, false, false);
                                            regexp = J$.N(1554377, 'regexp', regexp, true, false, false);
                                            return J$.Rt(1554353, J$.G(1554345, J$.C(93808, J$.M(1554329, J$.R(1554313, 'code', code, false, false), 'match', false)(J$.R(1554321, 'regexp', regexp, false, false))) ? J$._() : J$.T(1554337, [], 10, false), 'length'));
                                        } catch (J$e) {
                                            J$.Ex(1554697, J$e);
                                        } finally {
                                            if (J$.Fr(1554705))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1554393, 'arguments', arguments, true, false, false);
                            f = J$.N(1554401, 'f', f, true, false, false);
                            J$.N(1554409, 'keyword', keyword, false, false, false);
                            J$.N(1554417, 'targetPath', targetPath, false, false, false);
                            J$.N(1554425, 'template', template, false, false, false);
                            J$.N(1554433, 'code', code, false, false, false);
                            removeUnusedVar = J$.N(1554449, 'removeUnusedVar', J$.T(1554441, removeUnusedVar, 12, false), true, false, false);
                            removeAlwaysFalsyInOr = J$.N(1554465, 'removeAlwaysFalsyInOr', J$.T(1554457, removeAlwaysFalsyInOr, 12, false), true, false, false);
                            occurrences = J$.N(1554481, 'occurrences', J$.T(1554473, occurrences, 12, false), true, false, false);
                            var keyword = J$.W(1553425, 'keyword', J$.M(1553417, J$.R(1553393, 'path', path, false, true), 'basename', false)(J$.R(1553401, 'f', f, false, false), J$.T(1553409, '.jst', 21, false)), keyword, false, false);
                            var targetPath = J$.W(1553473, 'targetPath', J$.M(1553465, J$.R(1553433, 'path', path, false, true), 'join', false)(J$.R(1553441, 'dotjsPath', dotjsPath, false, true), J$.B(216882, '+', J$.R(1553449, 'keyword', keyword, false, false), J$.T(1553457, '.js', 21, false))), targetPath, false, false);
                            var template = J$.W(1553529, 'template', J$.M(1553521, J$.R(1553481, 'fs', fs, false, true), 'readFileSync', false)(J$.M(1553513, J$.R(1553489, 'path', path, false, true), 'join', false)(J$.R(1553497, 'filesRootPath', filesRootPath, false, true), J$.R(1553505, 'f', f, false, false))), template, false, false);
                            var code = J$.W(1553569, 'code', J$.M(1553561, J$.R(1553537, 'doT', doT, false, true), 'compile', false)(J$.R(1553545, 'template', template, false, false), J$.R(1553553, 'defs', defs, false, true)), code, false, false);
                            code = J$.W(1553681, 'code', J$.M(1553673, J$.M(1553649, J$.M(1553609, J$.M(1553585, J$.R(1553577, 'code', code, false, false), 'toString', false)(), 'replace', false)(J$.R(1553593, 'OUT_EMPTY_STRING', OUT_EMPTY_STRING, false, true), J$.T(1553601, '', 21, false)), 'replace', false)(J$.R(1553617, 'FUNCTION_NAME', FUNCTION_NAME, false, true), J$.B(216898, '+', J$.B(216890, '+', J$.T(1553625, 'function generate_', 21, false), J$.R(1553633, 'keyword', keyword, false, false)), J$.T(1553641, '(it, $keyword, $ruleType) {', 21, false))), 'replace', false)(J$.R(1553657, 'ISTANBUL', ISTANBUL, false, true), J$.T(1553665, '/* $1 */', 21, false)), code, false, false);
                            J$.F(1553697, J$.R(1553689, 'removeAlwaysFalsyInOr', removeAlwaysFalsyInOr, false, false), false)();
                            J$.M(1553721, J$.R(1553705, 'VARS', VARS, false, true), 'forEach', false)(J$.R(1553713, 'removeUnusedVar', removeUnusedVar, false, false));
                            code = J$.W(1553745, 'code', J$.B(216906, '+', J$.T(1553729, '\'use strict\';\nmodule.exports = ', 21, false), J$.R(1553737, 'code', code, false, false)), code, false, false);
                            code = J$.W(1553801, 'code', J$.B(216914, '+', J$.F(1553785, J$.R(1553753, 'beautify', beautify, false, true), false)(J$.R(1553761, 'code', code, false, false), J$.T(1553777, { indent_size: J$.T(1553769, 2, 22, false) }, 11, false)), J$.T(1553793, '\n', 21, false)), code, false, false);
                            J$.M(1553833, J$.R(1553809, 'fs', fs, false, true), 'writeFileSync', false)(J$.R(1553817, 'targetPath', targetPath, false, false), J$.R(1553825, 'code', code, false, false));
                            J$.M(1553865, J$.I(typeof console === 'undefined' ? console = J$.R(1553841, 'console', undefined, true, true) : console = J$.R(1553841, 'console', console, true, true)), 'log', false)(J$.T(1553849, 'compiled', 21, false), J$.R(1553857, 'keyword', keyword, false, false));
                        } catch (J$e) {
                            J$.Ex(1554713, J$e);
                        } finally {
                            if (J$.Fr(1554721))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1554729, J$e);
        } finally {
            if (J$.Sr(1554737))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

