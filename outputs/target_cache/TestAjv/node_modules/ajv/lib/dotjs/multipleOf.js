J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5283601, '/home/james/nodejs/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/dotjs/multipleOf.js');
            J$.T(5281681, 'use strict', 21, false);
            J$.P(5283593, J$.I(typeof module === 'undefined' ? module = J$.R(5281689, 'module', undefined, true, true) : module = J$.R(5281689, 'module', module, true, true)), 'exports', J$.T(5283585, function generate_multipleOf(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5283449, arguments.callee, this, arguments);
                            arguments = J$.N(5283457, 'arguments', arguments, true, false, false);
                            it = J$.N(5283465, 'it', it, true, false, false);
                            $keyword = J$.N(5283473, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(5283481, '$ruleType', $ruleType, true, false, false);
                            J$.N(5283489, 'out', out, false, false, false);
                            J$.N(5283497, '$lvl', $lvl, false, false, false);
                            J$.N(5283505, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(5283513, '$schema', $schema, false, false, false);
                            J$.N(5283521, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(5283529, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(5283537, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(5283545, '$data', $data, false, false, false);
                            J$.N(5283553, '$isData', $isData, false, false, false);
                            J$.N(5283561, '$schemaValue', $schemaValue, false, false, false);
                            J$.N(5283569, '$$outStack', $$outStack, false, false, false);
                            J$.N(5283577, '__err', __err, false, false, false);
                            var out = J$.W(5281705, 'out', J$.T(5281697, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(5281729, '$lvl', J$.G(5281721, J$.R(5281713, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(5281753, '$dataLvl', J$.G(5281745, J$.R(5281737, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(5281793, '$schema', J$.G(5281785, J$.G(5281769, J$.R(5281761, 'it', it, false, false), 'schema'), J$.R(5281777, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(5281849, '$schemaPath', J$.B(549162, '+', J$.G(5281809, J$.R(5281801, 'it', it, false, false), 'schemaPath'), J$.M(5281841, J$.G(5281825, J$.R(5281817, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(5281833, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(5281889, '$errSchemaPath', J$.B(549178, '+', J$.B(549170, '+', J$.G(5281865, J$.R(5281857, 'it', it, false, false), 'errSchemaPath'), J$.T(5281873, '/', 21, false)), J$.R(5281881, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(5281921, '$breakOnError', J$.U(549186, '!', J$.G(5281913, J$.G(5281905, J$.R(5281897, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(5281953, '$data', J$.B(549194, '+', J$.T(5281929, 'data', 21, false), J$.C(286192, J$.R(5281937, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(5281945, '', 21, false)), $data, false, false);
                            var $isData = J$.W(5282009, '$isData', J$.C(286208, J$.C(286200, J$.G(5281977, J$.G(5281969, J$.R(5281961, 'it', it, false, false), 'opts'), '$data')) ? J$.R(5281985, '$schema', $schema, false, false) : J$._()) ? J$.G(5282001, J$.R(5281993, '$schema', $schema, false, false), '$data') : J$._(), $isData, false, false), $schemaValue;
                            if (J$.C(286216, J$.R(5282017, '$isData', $isData, false, false))) {
                                out = J$.W(5282129, 'out', J$.B(549234, '+', J$.R(5282121, 'out', out, false, false), J$.B(549226, '+', J$.B(549218, '+', J$.B(549210, '+', J$.B(549202, '+', J$.T(5282025, ' var schema', 21, false), J$.R(5282033, '$lvl', $lvl, false, false)), J$.T(5282041, ' = ', 21, false)), J$.M(5282105, J$.G(5282057, J$.R(5282049, 'it', it, false, false), 'util'), 'getData', false)(J$.G(5282073, J$.R(5282065, '$schema', $schema, false, false), '$data'), J$.R(5282081, '$dataLvl', $dataLvl, false, false), J$.G(5282097, J$.R(5282089, 'it', it, false, false), 'dataPathArr'))), J$.T(5282113, '; ', 21, false))), out, false, false);
                                $schemaValue = J$.W(5282153, '$schemaValue', J$.B(549242, '+', J$.T(5282137, 'schema', 21, false), J$.R(5282145, '$lvl', $lvl, false, false)), $schemaValue, false, false);
                            } else {
                                $schemaValue = J$.W(5282169, '$schemaValue', J$.R(5282161, '$schema', $schema, false, false), $schemaValue, false, false);
                            }
                            out = J$.W(5282209, 'out', J$.B(549266, '+', J$.R(5282201, 'out', out, false, false), J$.B(549258, '+', J$.B(549250, '+', J$.T(5282177, 'var division', 21, false), J$.R(5282185, '$lvl', $lvl, false, false)), J$.T(5282193, ';if (', 21, false))), out, false, false);
                            if (J$.C(286224, J$.R(5282217, '$isData', $isData, false, false))) {
                                out = J$.W(5282273, 'out', J$.B(549306, '+', J$.R(5282265, 'out', out, false, false), J$.B(549298, '+', J$.B(549290, '+', J$.B(549282, '+', J$.B(549274, '+', J$.T(5282225, ' ', 21, false), J$.R(5282233, '$schemaValue', $schemaValue, false, false)), J$.T(5282241, ' !== undefined && ( typeof ', 21, false)), J$.R(5282249, '$schemaValue', $schemaValue, false, false)), J$.T(5282257, ' != \'number\' || ', 21, false))), out, false, false);
                            }
                            out = J$.W(5282345, 'out', J$.B(549362, '+', J$.R(5282337, 'out', out, false, false), J$.B(549354, '+', J$.B(549346, '+', J$.B(549338, '+', J$.B(549330, '+', J$.B(549322, '+', J$.B(549314, '+', J$.T(5282281, ' (division', 21, false), J$.R(5282289, '$lvl', $lvl, false, false)), J$.T(5282297, ' = ', 21, false)), J$.R(5282305, '$data', $data, false, false)), J$.T(5282313, ' / ', 21, false)), J$.R(5282321, '$schemaValue', $schemaValue, false, false)), J$.T(5282329, ', ', 21, false))), out, false, false);
                            if (J$.C(286232, J$.G(5282369, J$.G(5282361, J$.R(5282353, 'it', it, false, false), 'opts'), 'multipleOfPrecision'))) {
                                out = J$.W(5282457, 'out', J$.B(549418, '+', J$.R(5282449, 'out', out, false, false), J$.B(549410, '+', J$.B(549402, '+', J$.B(549394, '+', J$.B(549386, '+', J$.B(549378, '+', J$.B(549370, '+', J$.T(5282377, ' Math.abs(Math.round(division', 21, false), J$.R(5282385, '$lvl', $lvl, false, false)), J$.T(5282393, ') - division', 21, false)), J$.R(5282401, '$lvl', $lvl, false, false)), J$.T(5282409, ') > 1e-', 21, false)), J$.G(5282433, J$.G(5282425, J$.R(5282417, 'it', it, false, false), 'opts'), 'multipleOfPrecision')), J$.T(5282441, ' ', 21, false))), out, false, false);
                            } else {
                                out = J$.W(5282513, 'out', J$.B(549458, '+', J$.R(5282505, 'out', out, false, false), J$.B(549450, '+', J$.B(549442, '+', J$.B(549434, '+', J$.B(549426, '+', J$.T(5282465, ' division', 21, false), J$.R(5282473, '$lvl', $lvl, false, false)), J$.T(5282481, ' !== parseInt(division', 21, false)), J$.R(5282489, '$lvl', $lvl, false, false)), J$.T(5282497, ') ', 21, false))), out, false, false);
                            }
                            out = J$.W(5282537, 'out', J$.B(549466, '+', J$.R(5282529, 'out', out, false, false), J$.T(5282521, ' ) ', 21, false)), out, false, false);
                            if (J$.C(286240, J$.R(5282545, '$isData', $isData, false, false))) {
                                out = J$.W(5282569, 'out', J$.B(549474, '+', J$.R(5282561, 'out', out, false, false), J$.T(5282553, '  )  ', 21, false)), out, false, false);
                            }
                            out = J$.W(5282593, 'out', J$.B(549482, '+', J$.R(5282585, 'out', out, false, false), J$.T(5282577, ' ) {   ', 21, false)), out, false, false);
                            var $$outStack = J$.W(5282617, '$$outStack', J$.C(286248, J$.R(5282601, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(5282609, [], 10, false), $$outStack, false, false);
                            J$.M(5282641, J$.R(5282625, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(5282633, 'out', out, false, false));
                            out = J$.W(5282657, 'out', J$.T(5282649, '', 21, false), out, false, false);
                            if (J$.C(286288, J$.B(549490, '!==', J$.G(5282673, J$.R(5282665, 'it', it, false, false), 'createErrors'), J$.T(5282681, false, 23, false)))) {
                                out = J$.W(5282801, 'out', J$.B(549562, '+', J$.R(5282793, 'out', out, false, false), J$.B(549554, '+', J$.B(549546, '+', J$.B(549538, '+', J$.B(549530, '+', J$.B(549522, '+', J$.B(549514, '+', J$.B(549506, '+', J$.B(549498, '+', J$.T(5282689, ' { keyword: \'', 21, false), J$.T(5282697, 'multipleOf', 21, false)), J$.T(5282705, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(5282721, J$.R(5282713, 'it', it, false, false), 'errorPath')), J$.T(5282729, ' , schemaPath: ', 21, false)), J$.M(5282761, J$.G(5282745, J$.R(5282737, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(5282753, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(5282769, ' , params: { multipleOf: ', 21, false)), J$.R(5282777, '$schemaValue', $schemaValue, false, false)), J$.T(5282785, ' } ', 21, false))), out, false, false);
                                if (J$.C(286264, J$.B(549570, '!==', J$.G(5282825, J$.G(5282817, J$.R(5282809, 'it', it, false, false), 'opts'), 'messages'), J$.T(5282833, false, 23, false)))) {
                                    out = J$.W(5282857, 'out', J$.B(549578, '+', J$.R(5282849, 'out', out, false, false), J$.T(5282841, ' , message: \'should be multiple of ', 21, false)), out, false, false);
                                    if (J$.C(286256, J$.R(5282865, '$isData', $isData, false, false))) {
                                        out = J$.W(5282897, 'out', J$.B(549594, '+', J$.R(5282889, 'out', out, false, false), J$.B(549586, '+', J$.T(5282873, '\' + ', 21, false), J$.R(5282881, '$schemaValue', $schemaValue, false, false))), out, false, false);
                                    } else {
                                        out = J$.W(5282937, 'out', J$.B(549618, '+', J$.R(5282929, 'out', out, false, false), J$.B(549610, '+', J$.B(549602, '+', J$.T(5282905, '', 21, false), J$.R(5282913, '$schemaValue', $schemaValue, false, false)), J$.T(5282921, '\'', 21, false))), out, false, false);
                                    }
                                }
                                if (J$.C(286280, J$.G(5282961, J$.G(5282953, J$.R(5282945, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(5282985, 'out', J$.B(549626, '+', J$.R(5282977, 'out', out, false, false), J$.T(5282969, ' , schema:  ', 21, false)), out, false, false);
                                    if (J$.C(286272, J$.R(5282993, '$isData', $isData, false, false))) {
                                        out = J$.W(5283025, 'out', J$.B(549642, '+', J$.R(5283017, 'out', out, false, false), J$.B(549634, '+', J$.T(5283001, 'validate.schema', 21, false), J$.R(5283009, '$schemaPath', $schemaPath, false, false))), out, false, false);
                                    } else {
                                        out = J$.W(5283057, 'out', J$.B(549658, '+', J$.R(5283049, 'out', out, false, false), J$.B(549650, '+', J$.T(5283033, '', 21, false), J$.R(5283041, '$schema', $schema, false, false))), out, false, false);
                                    }
                                    out = J$.W(5283121, 'out', J$.B(549698, '+', J$.R(5283113, 'out', out, false, false), J$.B(549690, '+', J$.B(549682, '+', J$.B(549674, '+', J$.B(549666, '+', J$.T(5283065, '         , parentSchema: validate.schema', 21, false), J$.G(5283081, J$.R(5283073, 'it', it, false, false), 'schemaPath')), J$.T(5283089, ' , data: ', 21, false)), J$.R(5283097, '$data', $data, false, false)), J$.T(5283105, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(5283145, 'out', J$.B(549706, '+', J$.R(5283137, 'out', out, false, false), J$.T(5283129, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(5283169, 'out', J$.B(549714, '+', J$.R(5283161, 'out', out, false, false), J$.T(5283153, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(5283185, '__err', J$.R(5283177, 'out', out, false, false), __err, false, false);
                            out = J$.W(5283209, 'out', J$.M(5283201, J$.R(5283193, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(286312, J$.C(286296, J$.U(549722, '!', J$.G(5283225, J$.R(5283217, 'it', it, false, false), 'compositeRule'))) ? J$.R(5283233, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(286304, J$.G(5283249, J$.R(5283241, 'it', it, false, false), 'async'))) {
                                    out = J$.W(5283289, 'out', J$.B(549746, '+', J$.R(5283281, 'out', out, false, false), J$.B(549738, '+', J$.B(549730, '+', J$.T(5283257, ' throw new ValidationError([', 21, false), J$.R(5283265, '__err', __err, false, false)), J$.T(5283273, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(5283329, 'out', J$.B(549770, '+', J$.R(5283321, 'out', out, false, false), J$.B(549762, '+', J$.B(549754, '+', J$.T(5283297, ' validate.errors = [', 21, false), J$.R(5283305, '__err', __err, false, false)), J$.T(5283313, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(5283369, 'out', J$.B(549794, '+', J$.R(5283361, 'out', out, false, false), J$.B(549786, '+', J$.B(549778, '+', J$.T(5283337, ' var err = ', 21, false), J$.R(5283345, '__err', __err, false, false)), J$.T(5283353, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(5283393, 'out', J$.B(549802, '+', J$.R(5283385, 'out', out, false, false), J$.T(5283377, '} ', 21, false)), out, false, false);
                            if (J$.C(286320, J$.R(5283401, '$breakOnError', $breakOnError, false, false))) {
                                out = J$.W(5283425, 'out', J$.B(549810, '+', J$.R(5283417, 'out', out, false, false), J$.T(5283409, ' else { ', 21, false)), out, false, false);
                            }
                            return J$.Rt(5283441, J$.R(5283433, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(5283609, J$e);
                        } finally {
                            if (J$.Fr(5283617))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5283625, J$e);
        } finally {
            if (J$.Sr(5283633))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

