J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1500305, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/dotjs/multipleOf.js');
            J$.T(1498385, 'use strict', 21, false);
            J$.P(1500297, J$.I(typeof module === 'undefined' ? module = J$.R(1498393, 'module', undefined, true, true) : module = J$.R(1498393, 'module', module, true, true)), 'exports', J$.T(1500289, function generate_multipleOf(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1500153, arguments.callee, this, arguments);
                            arguments = J$.N(1500161, 'arguments', arguments, true, false, false);
                            it = J$.N(1500169, 'it', it, true, false, false);
                            $keyword = J$.N(1500177, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(1500185, '$ruleType', $ruleType, true, false, false);
                            J$.N(1500193, 'out', out, false, false, false);
                            J$.N(1500201, '$lvl', $lvl, false, false, false);
                            J$.N(1500209, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(1500217, '$schema', $schema, false, false, false);
                            J$.N(1500225, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(1500233, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(1500241, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(1500249, '$data', $data, false, false, false);
                            J$.N(1500257, '$isData', $isData, false, false, false);
                            J$.N(1500265, '$schemaValue', $schemaValue, false, false, false);
                            J$.N(1500273, '$$outStack', $$outStack, false, false, false);
                            J$.N(1500281, '__err', __err, false, false, false);
                            var out = J$.W(1498409, 'out', J$.T(1498401, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(1498433, '$lvl', J$.G(1498425, J$.R(1498417, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(1498457, '$dataLvl', J$.G(1498449, J$.R(1498441, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(1498497, '$schema', J$.G(1498489, J$.G(1498473, J$.R(1498465, 'it', it, false, false), 'schema'), J$.R(1498481, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(1498553, '$schemaPath', J$.B(201746, '+', J$.G(1498513, J$.R(1498505, 'it', it, false, false), 'schemaPath'), J$.M(1498545, J$.G(1498529, J$.R(1498521, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(1498537, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(1498593, '$errSchemaPath', J$.B(201762, '+', J$.B(201754, '+', J$.G(1498569, J$.R(1498561, 'it', it, false, false), 'errSchemaPath'), J$.T(1498577, '/', 21, false)), J$.R(1498585, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(1498625, '$breakOnError', J$.U(201770, '!', J$.G(1498617, J$.G(1498609, J$.R(1498601, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(1498657, '$data', J$.B(201778, '+', J$.T(1498633, 'data', 21, false), J$.C(89672, J$.R(1498641, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(1498649, '', 21, false)), $data, false, false);
                            var $isData = J$.W(1498713, '$isData', J$.C(89688, J$.C(89680, J$.G(1498681, J$.G(1498673, J$.R(1498665, 'it', it, false, false), 'opts'), '$data')) ? J$.R(1498689, '$schema', $schema, false, false) : J$._()) ? J$.G(1498705, J$.R(1498697, '$schema', $schema, false, false), '$data') : J$._(), $isData, false, false), $schemaValue;
                            if (J$.C(89696, J$.R(1498721, '$isData', $isData, false, false))) {
                                out = J$.W(1498833, 'out', J$.B(201818, '+', J$.R(1498825, 'out', out, false, false), J$.B(201810, '+', J$.B(201802, '+', J$.B(201794, '+', J$.B(201786, '+', J$.T(1498729, ' var schema', 21, false), J$.R(1498737, '$lvl', $lvl, false, false)), J$.T(1498745, ' = ', 21, false)), J$.M(1498809, J$.G(1498761, J$.R(1498753, 'it', it, false, false), 'util'), 'getData', false)(J$.G(1498777, J$.R(1498769, '$schema', $schema, false, false), '$data'), J$.R(1498785, '$dataLvl', $dataLvl, false, false), J$.G(1498801, J$.R(1498793, 'it', it, false, false), 'dataPathArr'))), J$.T(1498817, '; ', 21, false))), out, false, false);
                                $schemaValue = J$.W(1498857, '$schemaValue', J$.B(201826, '+', J$.T(1498841, 'schema', 21, false), J$.R(1498849, '$lvl', $lvl, false, false)), $schemaValue, false, false);
                            } else {
                                $schemaValue = J$.W(1498873, '$schemaValue', J$.R(1498865, '$schema', $schema, false, false), $schemaValue, false, false);
                            }
                            out = J$.W(1498913, 'out', J$.B(201850, '+', J$.R(1498905, 'out', out, false, false), J$.B(201842, '+', J$.B(201834, '+', J$.T(1498881, 'var division', 21, false), J$.R(1498889, '$lvl', $lvl, false, false)), J$.T(1498897, ';if (', 21, false))), out, false, false);
                            if (J$.C(89704, J$.R(1498921, '$isData', $isData, false, false))) {
                                out = J$.W(1498977, 'out', J$.B(201890, '+', J$.R(1498969, 'out', out, false, false), J$.B(201882, '+', J$.B(201874, '+', J$.B(201866, '+', J$.B(201858, '+', J$.T(1498929, ' ', 21, false), J$.R(1498937, '$schemaValue', $schemaValue, false, false)), J$.T(1498945, ' !== undefined && ( typeof ', 21, false)), J$.R(1498953, '$schemaValue', $schemaValue, false, false)), J$.T(1498961, ' != \'number\' || ', 21, false))), out, false, false);
                            }
                            out = J$.W(1499049, 'out', J$.B(201946, '+', J$.R(1499041, 'out', out, false, false), J$.B(201938, '+', J$.B(201930, '+', J$.B(201922, '+', J$.B(201914, '+', J$.B(201906, '+', J$.B(201898, '+', J$.T(1498985, ' (division', 21, false), J$.R(1498993, '$lvl', $lvl, false, false)), J$.T(1499001, ' = ', 21, false)), J$.R(1499009, '$data', $data, false, false)), J$.T(1499017, ' / ', 21, false)), J$.R(1499025, '$schemaValue', $schemaValue, false, false)), J$.T(1499033, ', ', 21, false))), out, false, false);
                            if (J$.C(89712, J$.G(1499073, J$.G(1499065, J$.R(1499057, 'it', it, false, false), 'opts'), 'multipleOfPrecision'))) {
                                out = J$.W(1499161, 'out', J$.B(202002, '+', J$.R(1499153, 'out', out, false, false), J$.B(201994, '+', J$.B(201986, '+', J$.B(201978, '+', J$.B(201970, '+', J$.B(201962, '+', J$.B(201954, '+', J$.T(1499081, ' Math.abs(Math.round(division', 21, false), J$.R(1499089, '$lvl', $lvl, false, false)), J$.T(1499097, ') - division', 21, false)), J$.R(1499105, '$lvl', $lvl, false, false)), J$.T(1499113, ') > 1e-', 21, false)), J$.G(1499137, J$.G(1499129, J$.R(1499121, 'it', it, false, false), 'opts'), 'multipleOfPrecision')), J$.T(1499145, ' ', 21, false))), out, false, false);
                            } else {
                                out = J$.W(1499217, 'out', J$.B(202042, '+', J$.R(1499209, 'out', out, false, false), J$.B(202034, '+', J$.B(202026, '+', J$.B(202018, '+', J$.B(202010, '+', J$.T(1499169, ' division', 21, false), J$.R(1499177, '$lvl', $lvl, false, false)), J$.T(1499185, ' !== parseInt(division', 21, false)), J$.R(1499193, '$lvl', $lvl, false, false)), J$.T(1499201, ') ', 21, false))), out, false, false);
                            }
                            out = J$.W(1499241, 'out', J$.B(202050, '+', J$.R(1499233, 'out', out, false, false), J$.T(1499225, ' ) ', 21, false)), out, false, false);
                            if (J$.C(89720, J$.R(1499249, '$isData', $isData, false, false))) {
                                out = J$.W(1499273, 'out', J$.B(202058, '+', J$.R(1499265, 'out', out, false, false), J$.T(1499257, '  )  ', 21, false)), out, false, false);
                            }
                            out = J$.W(1499297, 'out', J$.B(202066, '+', J$.R(1499289, 'out', out, false, false), J$.T(1499281, ' ) {   ', 21, false)), out, false, false);
                            var $$outStack = J$.W(1499321, '$$outStack', J$.C(89728, J$.R(1499305, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(1499313, [], 10, false), $$outStack, false, false);
                            J$.M(1499345, J$.R(1499329, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(1499337, 'out', out, false, false));
                            out = J$.W(1499361, 'out', J$.T(1499353, '', 21, false), out, false, false);
                            if (J$.C(89768, J$.B(202074, '!==', J$.G(1499377, J$.R(1499369, 'it', it, false, false), 'createErrors'), J$.T(1499385, false, 23, false)))) {
                                out = J$.W(1499505, 'out', J$.B(202146, '+', J$.R(1499497, 'out', out, false, false), J$.B(202138, '+', J$.B(202130, '+', J$.B(202122, '+', J$.B(202114, '+', J$.B(202106, '+', J$.B(202098, '+', J$.B(202090, '+', J$.B(202082, '+', J$.T(1499393, ' { keyword: \'', 21, false), J$.T(1499401, 'multipleOf', 21, false)), J$.T(1499409, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(1499425, J$.R(1499417, 'it', it, false, false), 'errorPath')), J$.T(1499433, ' , schemaPath: ', 21, false)), J$.M(1499465, J$.G(1499449, J$.R(1499441, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(1499457, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(1499473, ' , params: { multipleOf: ', 21, false)), J$.R(1499481, '$schemaValue', $schemaValue, false, false)), J$.T(1499489, ' } ', 21, false))), out, false, false);
                                if (J$.C(89744, J$.B(202154, '!==', J$.G(1499529, J$.G(1499521, J$.R(1499513, 'it', it, false, false), 'opts'), 'messages'), J$.T(1499537, false, 23, false)))) {
                                    out = J$.W(1499561, 'out', J$.B(202162, '+', J$.R(1499553, 'out', out, false, false), J$.T(1499545, ' , message: \'should be multiple of ', 21, false)), out, false, false);
                                    if (J$.C(89736, J$.R(1499569, '$isData', $isData, false, false))) {
                                        out = J$.W(1499601, 'out', J$.B(202178, '+', J$.R(1499593, 'out', out, false, false), J$.B(202170, '+', J$.T(1499577, '\' + ', 21, false), J$.R(1499585, '$schemaValue', $schemaValue, false, false))), out, false, false);
                                    } else {
                                        out = J$.W(1499641, 'out', J$.B(202202, '+', J$.R(1499633, 'out', out, false, false), J$.B(202194, '+', J$.B(202186, '+', J$.T(1499609, '', 21, false), J$.R(1499617, '$schemaValue', $schemaValue, false, false)), J$.T(1499625, '\'', 21, false))), out, false, false);
                                    }
                                }
                                if (J$.C(89760, J$.G(1499665, J$.G(1499657, J$.R(1499649, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(1499689, 'out', J$.B(202210, '+', J$.R(1499681, 'out', out, false, false), J$.T(1499673, ' , schema:  ', 21, false)), out, false, false);
                                    if (J$.C(89752, J$.R(1499697, '$isData', $isData, false, false))) {
                                        out = J$.W(1499729, 'out', J$.B(202226, '+', J$.R(1499721, 'out', out, false, false), J$.B(202218, '+', J$.T(1499705, 'validate.schema', 21, false), J$.R(1499713, '$schemaPath', $schemaPath, false, false))), out, false, false);
                                    } else {
                                        out = J$.W(1499761, 'out', J$.B(202242, '+', J$.R(1499753, 'out', out, false, false), J$.B(202234, '+', J$.T(1499737, '', 21, false), J$.R(1499745, '$schema', $schema, false, false))), out, false, false);
                                    }
                                    out = J$.W(1499825, 'out', J$.B(202282, '+', J$.R(1499817, 'out', out, false, false), J$.B(202274, '+', J$.B(202266, '+', J$.B(202258, '+', J$.B(202250, '+', J$.T(1499769, '         , parentSchema: validate.schema', 21, false), J$.G(1499785, J$.R(1499777, 'it', it, false, false), 'schemaPath')), J$.T(1499793, ' , data: ', 21, false)), J$.R(1499801, '$data', $data, false, false)), J$.T(1499809, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(1499849, 'out', J$.B(202290, '+', J$.R(1499841, 'out', out, false, false), J$.T(1499833, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(1499873, 'out', J$.B(202298, '+', J$.R(1499865, 'out', out, false, false), J$.T(1499857, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(1499889, '__err', J$.R(1499881, 'out', out, false, false), __err, false, false);
                            out = J$.W(1499913, 'out', J$.M(1499905, J$.R(1499897, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(89792, J$.C(89776, J$.U(202306, '!', J$.G(1499929, J$.R(1499921, 'it', it, false, false), 'compositeRule'))) ? J$.R(1499937, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(89784, J$.G(1499953, J$.R(1499945, 'it', it, false, false), 'async'))) {
                                    out = J$.W(1499993, 'out', J$.B(202330, '+', J$.R(1499985, 'out', out, false, false), J$.B(202322, '+', J$.B(202314, '+', J$.T(1499961, ' throw new ValidationError([', 21, false), J$.R(1499969, '__err', __err, false, false)), J$.T(1499977, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(1500033, 'out', J$.B(202354, '+', J$.R(1500025, 'out', out, false, false), J$.B(202346, '+', J$.B(202338, '+', J$.T(1500001, ' validate.errors = [', 21, false), J$.R(1500009, '__err', __err, false, false)), J$.T(1500017, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(1500073, 'out', J$.B(202378, '+', J$.R(1500065, 'out', out, false, false), J$.B(202370, '+', J$.B(202362, '+', J$.T(1500041, ' var err = ', 21, false), J$.R(1500049, '__err', __err, false, false)), J$.T(1500057, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(1500097, 'out', J$.B(202386, '+', J$.R(1500089, 'out', out, false, false), J$.T(1500081, '} ', 21, false)), out, false, false);
                            if (J$.C(89800, J$.R(1500105, '$breakOnError', $breakOnError, false, false))) {
                                out = J$.W(1500129, 'out', J$.B(202394, '+', J$.R(1500121, 'out', out, false, false), J$.T(1500113, ' else { ', 21, false)), out, false, false);
                            }
                            return J$.Rt(1500145, J$.R(1500137, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(1500313, J$e);
                        } finally {
                            if (J$.Fr(1500321))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1500329, J$e);
        } finally {
            if (J$.Sr(1500337))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

