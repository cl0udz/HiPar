J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5249745, '/home/james/nodejs/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/dotjs/const.js');
            J$.T(5248225, 'use strict', 21, false);
            J$.P(5249737, J$.I(typeof module === 'undefined' ? module = J$.R(5248233, 'module', undefined, true, true) : module = J$.R(5248233, 'module', module, true, true)), 'exports', J$.T(5249729, function generate_const(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5249585, arguments.callee, this, arguments);
                            arguments = J$.N(5249593, 'arguments', arguments, true, false, false);
                            it = J$.N(5249601, 'it', it, true, false, false);
                            $keyword = J$.N(5249609, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(5249617, '$ruleType', $ruleType, true, false, false);
                            J$.N(5249625, 'out', out, false, false, false);
                            J$.N(5249633, '$lvl', $lvl, false, false, false);
                            J$.N(5249641, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(5249649, '$schema', $schema, false, false, false);
                            J$.N(5249657, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(5249665, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(5249673, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(5249681, '$data', $data, false, false, false);
                            J$.N(5249689, '$valid', $valid, false, false, false);
                            J$.N(5249697, '$isData', $isData, false, false, false);
                            J$.N(5249705, '$schemaValue', $schemaValue, false, false, false);
                            J$.N(5249713, '$$outStack', $$outStack, false, false, false);
                            J$.N(5249721, '__err', __err, false, false, false);
                            var out = J$.W(5248249, 'out', J$.T(5248241, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(5248273, '$lvl', J$.G(5248265, J$.R(5248257, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(5248297, '$dataLvl', J$.G(5248289, J$.R(5248281, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(5248337, '$schema', J$.G(5248329, J$.G(5248313, J$.R(5248305, 'it', it, false, false), 'schema'), J$.R(5248321, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(5248393, '$schemaPath', J$.B(539050, '+', J$.G(5248353, J$.R(5248345, 'it', it, false, false), 'schemaPath'), J$.M(5248385, J$.G(5248369, J$.R(5248361, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(5248377, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(5248433, '$errSchemaPath', J$.B(539066, '+', J$.B(539058, '+', J$.G(5248409, J$.R(5248401, 'it', it, false, false), 'errSchemaPath'), J$.T(5248417, '/', 21, false)), J$.R(5248425, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(5248465, '$breakOnError', J$.U(539074, '!', J$.G(5248457, J$.G(5248449, J$.R(5248441, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(5248497, '$data', J$.B(539082, '+', J$.T(5248473, 'data', 21, false), J$.C(284088, J$.R(5248481, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(5248489, '', 21, false)), $data, false, false);
                            var $valid = J$.W(5248521, '$valid', J$.B(539090, '+', J$.T(5248505, 'valid', 21, false), J$.R(5248513, '$lvl', $lvl, false, false)), $valid, false, false);
                            var $isData = J$.W(5248577, '$isData', J$.C(284104, J$.C(284096, J$.G(5248545, J$.G(5248537, J$.R(5248529, 'it', it, false, false), 'opts'), '$data')) ? J$.R(5248553, '$schema', $schema, false, false) : J$._()) ? J$.G(5248569, J$.R(5248561, '$schema', $schema, false, false), '$data') : J$._(), $isData, false, false), $schemaValue;
                            if (J$.C(284112, J$.R(5248585, '$isData', $isData, false, false))) {
                                out = J$.W(5248697, 'out', J$.B(539130, '+', J$.R(5248689, 'out', out, false, false), J$.B(539122, '+', J$.B(539114, '+', J$.B(539106, '+', J$.B(539098, '+', J$.T(5248593, ' var schema', 21, false), J$.R(5248601, '$lvl', $lvl, false, false)), J$.T(5248609, ' = ', 21, false)), J$.M(5248673, J$.G(5248625, J$.R(5248617, 'it', it, false, false), 'util'), 'getData', false)(J$.G(5248641, J$.R(5248633, '$schema', $schema, false, false), '$data'), J$.R(5248649, '$dataLvl', $dataLvl, false, false), J$.G(5248665, J$.R(5248657, 'it', it, false, false), 'dataPathArr'))), J$.T(5248681, '; ', 21, false))), out, false, false);
                                $schemaValue = J$.W(5248721, '$schemaValue', J$.B(539138, '+', J$.T(5248705, 'schema', 21, false), J$.R(5248713, '$lvl', $lvl, false, false)), $schemaValue, false, false);
                            } else {
                                $schemaValue = J$.W(5248737, '$schemaValue', J$.R(5248729, '$schema', $schema, false, false), $schemaValue, false, false);
                            }
                            if (J$.C(284120, J$.U(539146, '!', J$.R(5248745, '$isData', $isData, false, false)))) {
                                out = J$.W(5248801, 'out', J$.B(539186, '+', J$.R(5248793, 'out', out, false, false), J$.B(539178, '+', J$.B(539170, '+', J$.B(539162, '+', J$.B(539154, '+', J$.T(5248753, ' var schema', 21, false), J$.R(5248761, '$lvl', $lvl, false, false)), J$.T(5248769, ' = validate.schema', 21, false)), J$.R(5248777, '$schemaPath', $schemaPath, false, false)), J$.T(5248785, ';', 21, false))), out, false, false);
                            }
                            out = J$.W(5248889, 'out', J$.B(539258, '+', J$.R(5248881, 'out', out, false, false), J$.B(539250, '+', J$.B(539242, '+', J$.B(539234, '+', J$.B(539226, '+', J$.B(539218, '+', J$.B(539210, '+', J$.B(539202, '+', J$.B(539194, '+', J$.T(5248809, 'var ', 21, false), J$.R(5248817, '$valid', $valid, false, false)), J$.T(5248825, ' = equal(', 21, false)), J$.R(5248833, '$data', $data, false, false)), J$.T(5248841, ', schema', 21, false)), J$.R(5248849, '$lvl', $lvl, false, false)), J$.T(5248857, '); if (!', 21, false)), J$.R(5248865, '$valid', $valid, false, false)), J$.T(5248873, ') {   ', 21, false))), out, false, false);
                            var $$outStack = J$.W(5248913, '$$outStack', J$.C(284128, J$.R(5248897, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(5248905, [], 10, false), $$outStack, false, false);
                            J$.M(5248937, J$.R(5248921, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(5248929, 'out', out, false, false));
                            out = J$.W(5248953, 'out', J$.T(5248945, '', 21, false), out, false, false);
                            if (J$.C(284152, J$.B(539266, '!==', J$.G(5248969, J$.R(5248961, 'it', it, false, false), 'createErrors'), J$.T(5248977, false, 23, false)))) {
                                out = J$.W(5249097, 'out', J$.B(539338, '+', J$.R(5249089, 'out', out, false, false), J$.B(539330, '+', J$.B(539322, '+', J$.B(539314, '+', J$.B(539306, '+', J$.B(539298, '+', J$.B(539290, '+', J$.B(539282, '+', J$.B(539274, '+', J$.T(5248985, ' { keyword: \'', 21, false), J$.T(5248993, 'const', 21, false)), J$.T(5249001, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(5249017, J$.R(5249009, 'it', it, false, false), 'errorPath')), J$.T(5249025, ' , schemaPath: ', 21, false)), J$.M(5249057, J$.G(5249041, J$.R(5249033, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(5249049, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(5249065, ' , params: { allowedValue: schema', 21, false)), J$.R(5249073, '$lvl', $lvl, false, false)), J$.T(5249081, ' } ', 21, false))), out, false, false);
                                if (J$.C(284136, J$.B(539346, '!==', J$.G(5249121, J$.G(5249113, J$.R(5249105, 'it', it, false, false), 'opts'), 'messages'), J$.T(5249129, false, 23, false)))) {
                                    out = J$.W(5249153, 'out', J$.B(539354, '+', J$.R(5249145, 'out', out, false, false), J$.T(5249137, ' , message: \'should be equal to constant\' ', 21, false)), out, false, false);
                                }
                                if (J$.C(284144, J$.G(5249177, J$.G(5249169, J$.R(5249161, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(5249257, 'out', J$.B(539410, '+', J$.R(5249249, 'out', out, false, false), J$.B(539402, '+', J$.B(539394, '+', J$.B(539386, '+', J$.B(539378, '+', J$.B(539370, '+', J$.B(539362, '+', J$.T(5249185, ' , schema: validate.schema', 21, false), J$.R(5249193, '$schemaPath', $schemaPath, false, false)), J$.T(5249201, ' , parentSchema: validate.schema', 21, false)), J$.G(5249217, J$.R(5249209, 'it', it, false, false), 'schemaPath')), J$.T(5249225, ' , data: ', 21, false)), J$.R(5249233, '$data', $data, false, false)), J$.T(5249241, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(5249281, 'out', J$.B(539418, '+', J$.R(5249273, 'out', out, false, false), J$.T(5249265, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(5249305, 'out', J$.B(539426, '+', J$.R(5249297, 'out', out, false, false), J$.T(5249289, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(5249321, '__err', J$.R(5249313, 'out', out, false, false), __err, false, false);
                            out = J$.W(5249345, 'out', J$.M(5249337, J$.R(5249329, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(284176, J$.C(284160, J$.U(539434, '!', J$.G(5249361, J$.R(5249353, 'it', it, false, false), 'compositeRule'))) ? J$.R(5249369, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(284168, J$.G(5249385, J$.R(5249377, 'it', it, false, false), 'async'))) {
                                    out = J$.W(5249425, 'out', J$.B(539458, '+', J$.R(5249417, 'out', out, false, false), J$.B(539450, '+', J$.B(539442, '+', J$.T(5249393, ' throw new ValidationError([', 21, false), J$.R(5249401, '__err', __err, false, false)), J$.T(5249409, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(5249465, 'out', J$.B(539482, '+', J$.R(5249457, 'out', out, false, false), J$.B(539474, '+', J$.B(539466, '+', J$.T(5249433, ' validate.errors = [', 21, false), J$.R(5249441, '__err', __err, false, false)), J$.T(5249449, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(5249505, 'out', J$.B(539506, '+', J$.R(5249497, 'out', out, false, false), J$.B(539498, '+', J$.B(539490, '+', J$.T(5249473, ' var err = ', 21, false), J$.R(5249481, '__err', __err, false, false)), J$.T(5249489, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(5249529, 'out', J$.B(539514, '+', J$.R(5249521, 'out', out, false, false), J$.T(5249513, ' }', 21, false)), out, false, false);
                            if (J$.C(284184, J$.R(5249537, '$breakOnError', $breakOnError, false, false))) {
                                out = J$.W(5249561, 'out', J$.B(539522, '+', J$.R(5249553, 'out', out, false, false), J$.T(5249545, ' else { ', 21, false)), out, false, false);
                            }
                            return J$.Rt(5249577, J$.R(5249569, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(5249753, J$e);
                        } finally {
                            if (J$.Fr(5249761))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5249769, J$e);
        } finally {
            if (J$.Sr(5249777))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

