J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1466449, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/dotjs/const.js');
            J$.T(1464929, 'use strict', 21, false);
            J$.P(1466441, J$.I(typeof module === 'undefined' ? module = J$.R(1464937, 'module', undefined, true, true) : module = J$.R(1464937, 'module', module, true, true)), 'exports', J$.T(1466433, function generate_const(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1466289, arguments.callee, this, arguments);
                            arguments = J$.N(1466297, 'arguments', arguments, true, false, false);
                            it = J$.N(1466305, 'it', it, true, false, false);
                            $keyword = J$.N(1466313, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(1466321, '$ruleType', $ruleType, true, false, false);
                            J$.N(1466329, 'out', out, false, false, false);
                            J$.N(1466337, '$lvl', $lvl, false, false, false);
                            J$.N(1466345, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(1466353, '$schema', $schema, false, false, false);
                            J$.N(1466361, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(1466369, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(1466377, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(1466385, '$data', $data, false, false, false);
                            J$.N(1466393, '$valid', $valid, false, false, false);
                            J$.N(1466401, '$isData', $isData, false, false, false);
                            J$.N(1466409, '$schemaValue', $schemaValue, false, false, false);
                            J$.N(1466417, '$$outStack', $$outStack, false, false, false);
                            J$.N(1466425, '__err', __err, false, false, false);
                            var out = J$.W(1464953, 'out', J$.T(1464945, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(1464977, '$lvl', J$.G(1464969, J$.R(1464961, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(1465001, '$dataLvl', J$.G(1464993, J$.R(1464985, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(1465041, '$schema', J$.G(1465033, J$.G(1465017, J$.R(1465009, 'it', it, false, false), 'schema'), J$.R(1465025, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(1465097, '$schemaPath', J$.B(191634, '+', J$.G(1465057, J$.R(1465049, 'it', it, false, false), 'schemaPath'), J$.M(1465089, J$.G(1465073, J$.R(1465065, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(1465081, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(1465137, '$errSchemaPath', J$.B(191650, '+', J$.B(191642, '+', J$.G(1465113, J$.R(1465105, 'it', it, false, false), 'errSchemaPath'), J$.T(1465121, '/', 21, false)), J$.R(1465129, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(1465169, '$breakOnError', J$.U(191658, '!', J$.G(1465161, J$.G(1465153, J$.R(1465145, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(1465201, '$data', J$.B(191666, '+', J$.T(1465177, 'data', 21, false), J$.C(87568, J$.R(1465185, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(1465193, '', 21, false)), $data, false, false);
                            var $valid = J$.W(1465225, '$valid', J$.B(191674, '+', J$.T(1465209, 'valid', 21, false), J$.R(1465217, '$lvl', $lvl, false, false)), $valid, false, false);
                            var $isData = J$.W(1465281, '$isData', J$.C(87584, J$.C(87576, J$.G(1465249, J$.G(1465241, J$.R(1465233, 'it', it, false, false), 'opts'), '$data')) ? J$.R(1465257, '$schema', $schema, false, false) : J$._()) ? J$.G(1465273, J$.R(1465265, '$schema', $schema, false, false), '$data') : J$._(), $isData, false, false), $schemaValue;
                            if (J$.C(87592, J$.R(1465289, '$isData', $isData, false, false))) {
                                out = J$.W(1465401, 'out', J$.B(191714, '+', J$.R(1465393, 'out', out, false, false), J$.B(191706, '+', J$.B(191698, '+', J$.B(191690, '+', J$.B(191682, '+', J$.T(1465297, ' var schema', 21, false), J$.R(1465305, '$lvl', $lvl, false, false)), J$.T(1465313, ' = ', 21, false)), J$.M(1465377, J$.G(1465329, J$.R(1465321, 'it', it, false, false), 'util'), 'getData', false)(J$.G(1465345, J$.R(1465337, '$schema', $schema, false, false), '$data'), J$.R(1465353, '$dataLvl', $dataLvl, false, false), J$.G(1465369, J$.R(1465361, 'it', it, false, false), 'dataPathArr'))), J$.T(1465385, '; ', 21, false))), out, false, false);
                                $schemaValue = J$.W(1465425, '$schemaValue', J$.B(191722, '+', J$.T(1465409, 'schema', 21, false), J$.R(1465417, '$lvl', $lvl, false, false)), $schemaValue, false, false);
                            } else {
                                $schemaValue = J$.W(1465441, '$schemaValue', J$.R(1465433, '$schema', $schema, false, false), $schemaValue, false, false);
                            }
                            if (J$.C(87600, J$.U(191730, '!', J$.R(1465449, '$isData', $isData, false, false)))) {
                                out = J$.W(1465505, 'out', J$.B(191770, '+', J$.R(1465497, 'out', out, false, false), J$.B(191762, '+', J$.B(191754, '+', J$.B(191746, '+', J$.B(191738, '+', J$.T(1465457, ' var schema', 21, false), J$.R(1465465, '$lvl', $lvl, false, false)), J$.T(1465473, ' = validate.schema', 21, false)), J$.R(1465481, '$schemaPath', $schemaPath, false, false)), J$.T(1465489, ';', 21, false))), out, false, false);
                            }
                            out = J$.W(1465593, 'out', J$.B(191842, '+', J$.R(1465585, 'out', out, false, false), J$.B(191834, '+', J$.B(191826, '+', J$.B(191818, '+', J$.B(191810, '+', J$.B(191802, '+', J$.B(191794, '+', J$.B(191786, '+', J$.B(191778, '+', J$.T(1465513, 'var ', 21, false), J$.R(1465521, '$valid', $valid, false, false)), J$.T(1465529, ' = equal(', 21, false)), J$.R(1465537, '$data', $data, false, false)), J$.T(1465545, ', schema', 21, false)), J$.R(1465553, '$lvl', $lvl, false, false)), J$.T(1465561, '); if (!', 21, false)), J$.R(1465569, '$valid', $valid, false, false)), J$.T(1465577, ') {   ', 21, false))), out, false, false);
                            var $$outStack = J$.W(1465617, '$$outStack', J$.C(87608, J$.R(1465601, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(1465609, [], 10, false), $$outStack, false, false);
                            J$.M(1465641, J$.R(1465625, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(1465633, 'out', out, false, false));
                            out = J$.W(1465657, 'out', J$.T(1465649, '', 21, false), out, false, false);
                            if (J$.C(87632, J$.B(191850, '!==', J$.G(1465673, J$.R(1465665, 'it', it, false, false), 'createErrors'), J$.T(1465681, false, 23, false)))) {
                                out = J$.W(1465801, 'out', J$.B(191922, '+', J$.R(1465793, 'out', out, false, false), J$.B(191914, '+', J$.B(191906, '+', J$.B(191898, '+', J$.B(191890, '+', J$.B(191882, '+', J$.B(191874, '+', J$.B(191866, '+', J$.B(191858, '+', J$.T(1465689, ' { keyword: \'', 21, false), J$.T(1465697, 'const', 21, false)), J$.T(1465705, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(1465721, J$.R(1465713, 'it', it, false, false), 'errorPath')), J$.T(1465729, ' , schemaPath: ', 21, false)), J$.M(1465761, J$.G(1465745, J$.R(1465737, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(1465753, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(1465769, ' , params: { allowedValue: schema', 21, false)), J$.R(1465777, '$lvl', $lvl, false, false)), J$.T(1465785, ' } ', 21, false))), out, false, false);
                                if (J$.C(87616, J$.B(191930, '!==', J$.G(1465825, J$.G(1465817, J$.R(1465809, 'it', it, false, false), 'opts'), 'messages'), J$.T(1465833, false, 23, false)))) {
                                    out = J$.W(1465857, 'out', J$.B(191938, '+', J$.R(1465849, 'out', out, false, false), J$.T(1465841, ' , message: \'should be equal to constant\' ', 21, false)), out, false, false);
                                }
                                if (J$.C(87624, J$.G(1465881, J$.G(1465873, J$.R(1465865, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(1465961, 'out', J$.B(191994, '+', J$.R(1465953, 'out', out, false, false), J$.B(191986, '+', J$.B(191978, '+', J$.B(191970, '+', J$.B(191962, '+', J$.B(191954, '+', J$.B(191946, '+', J$.T(1465889, ' , schema: validate.schema', 21, false), J$.R(1465897, '$schemaPath', $schemaPath, false, false)), J$.T(1465905, ' , parentSchema: validate.schema', 21, false)), J$.G(1465921, J$.R(1465913, 'it', it, false, false), 'schemaPath')), J$.T(1465929, ' , data: ', 21, false)), J$.R(1465937, '$data', $data, false, false)), J$.T(1465945, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(1465985, 'out', J$.B(192002, '+', J$.R(1465977, 'out', out, false, false), J$.T(1465969, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(1466009, 'out', J$.B(192010, '+', J$.R(1466001, 'out', out, false, false), J$.T(1465993, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(1466025, '__err', J$.R(1466017, 'out', out, false, false), __err, false, false);
                            out = J$.W(1466049, 'out', J$.M(1466041, J$.R(1466033, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(87656, J$.C(87640, J$.U(192018, '!', J$.G(1466065, J$.R(1466057, 'it', it, false, false), 'compositeRule'))) ? J$.R(1466073, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(87648, J$.G(1466089, J$.R(1466081, 'it', it, false, false), 'async'))) {
                                    out = J$.W(1466129, 'out', J$.B(192042, '+', J$.R(1466121, 'out', out, false, false), J$.B(192034, '+', J$.B(192026, '+', J$.T(1466097, ' throw new ValidationError([', 21, false), J$.R(1466105, '__err', __err, false, false)), J$.T(1466113, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(1466169, 'out', J$.B(192066, '+', J$.R(1466161, 'out', out, false, false), J$.B(192058, '+', J$.B(192050, '+', J$.T(1466137, ' validate.errors = [', 21, false), J$.R(1466145, '__err', __err, false, false)), J$.T(1466153, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(1466209, 'out', J$.B(192090, '+', J$.R(1466201, 'out', out, false, false), J$.B(192082, '+', J$.B(192074, '+', J$.T(1466177, ' var err = ', 21, false), J$.R(1466185, '__err', __err, false, false)), J$.T(1466193, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(1466233, 'out', J$.B(192098, '+', J$.R(1466225, 'out', out, false, false), J$.T(1466217, ' }', 21, false)), out, false, false);
                            if (J$.C(87664, J$.R(1466241, '$breakOnError', $breakOnError, false, false))) {
                                out = J$.W(1466265, 'out', J$.B(192106, '+', J$.R(1466257, 'out', out, false, false), J$.T(1466249, ' else { ', 21, false)), out, false, false);
                            }
                            return J$.Rt(1466281, J$.R(1466273, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(1466457, J$e);
                        } finally {
                            if (J$.Fr(1466465))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1466473, J$e);
        } finally {
            if (J$.Sr(1466481))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

