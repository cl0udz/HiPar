J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1508113, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/dotjs/pattern.js');
            J$.T(1506225, 'use strict', 21, false);
            J$.P(1508105, J$.I(typeof module === 'undefined' ? module = J$.R(1506233, 'module', undefined, true, true) : module = J$.R(1506233, 'module', module, true, true)), 'exports', J$.T(1508097, function generate_pattern(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1507953, arguments.callee, this, arguments);
                            arguments = J$.N(1507961, 'arguments', arguments, true, false, false);
                            it = J$.N(1507969, 'it', it, true, false, false);
                            $keyword = J$.N(1507977, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(1507985, '$ruleType', $ruleType, true, false, false);
                            J$.N(1507993, 'out', out, false, false, false);
                            J$.N(1508001, '$lvl', $lvl, false, false, false);
                            J$.N(1508009, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(1508017, '$schema', $schema, false, false, false);
                            J$.N(1508025, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(1508033, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(1508041, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(1508049, '$data', $data, false, false, false);
                            J$.N(1508057, '$isData', $isData, false, false, false);
                            J$.N(1508065, '$schemaValue', $schemaValue, false, false, false);
                            J$.N(1508073, '$regexp', $regexp, false, false, false);
                            J$.N(1508081, '$$outStack', $$outStack, false, false, false);
                            J$.N(1508089, '__err', __err, false, false, false);
                            var out = J$.W(1506249, 'out', J$.T(1506241, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(1506273, '$lvl', J$.G(1506265, J$.R(1506257, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(1506297, '$dataLvl', J$.G(1506289, J$.R(1506281, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(1506337, '$schema', J$.G(1506329, J$.G(1506313, J$.R(1506305, 'it', it, false, false), 'schema'), J$.R(1506321, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(1506393, '$schemaPath', J$.B(203986, '+', J$.G(1506353, J$.R(1506345, 'it', it, false, false), 'schemaPath'), J$.M(1506385, J$.G(1506369, J$.R(1506361, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(1506377, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(1506433, '$errSchemaPath', J$.B(204002, '+', J$.B(203994, '+', J$.G(1506409, J$.R(1506401, 'it', it, false, false), 'errSchemaPath'), J$.T(1506417, '/', 21, false)), J$.R(1506425, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(1506465, '$breakOnError', J$.U(204010, '!', J$.G(1506457, J$.G(1506449, J$.R(1506441, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(1506497, '$data', J$.B(204018, '+', J$.T(1506473, 'data', 21, false), J$.C(90160, J$.R(1506481, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(1506489, '', 21, false)), $data, false, false);
                            var $isData = J$.W(1506553, '$isData', J$.C(90176, J$.C(90168, J$.G(1506521, J$.G(1506513, J$.R(1506505, 'it', it, false, false), 'opts'), '$data')) ? J$.R(1506529, '$schema', $schema, false, false) : J$._()) ? J$.G(1506545, J$.R(1506537, '$schema', $schema, false, false), '$data') : J$._(), $isData, false, false), $schemaValue;
                            if (J$.C(90184, J$.R(1506561, '$isData', $isData, false, false))) {
                                out = J$.W(1506673, 'out', J$.B(204058, '+', J$.R(1506665, 'out', out, false, false), J$.B(204050, '+', J$.B(204042, '+', J$.B(204034, '+', J$.B(204026, '+', J$.T(1506569, ' var schema', 21, false), J$.R(1506577, '$lvl', $lvl, false, false)), J$.T(1506585, ' = ', 21, false)), J$.M(1506649, J$.G(1506601, J$.R(1506593, 'it', it, false, false), 'util'), 'getData', false)(J$.G(1506617, J$.R(1506609, '$schema', $schema, false, false), '$data'), J$.R(1506625, '$dataLvl', $dataLvl, false, false), J$.G(1506641, J$.R(1506633, 'it', it, false, false), 'dataPathArr'))), J$.T(1506657, '; ', 21, false))), out, false, false);
                                $schemaValue = J$.W(1506697, '$schemaValue', J$.B(204066, '+', J$.T(1506681, 'schema', 21, false), J$.R(1506689, '$lvl', $lvl, false, false)), $schemaValue, false, false);
                            } else {
                                $schemaValue = J$.W(1506713, '$schemaValue', J$.R(1506705, '$schema', $schema, false, false), $schemaValue, false, false);
                            }
                            var $regexp = J$.W(1506777, '$regexp', J$.C(90192, J$.R(1506721, '$isData', $isData, false, false)) ? J$.B(204082, '+', J$.B(204074, '+', J$.T(1506729, '(new RegExp(', 21, false), J$.R(1506737, '$schemaValue', $schemaValue, false, false)), J$.T(1506745, '))', 21, false)) : J$.M(1506769, J$.R(1506753, 'it', it, false, false), 'usePattern', false)(J$.R(1506761, '$schema', $schema, false, false)), $regexp, false, false);
                            out = J$.W(1506801, 'out', J$.B(204090, '+', J$.R(1506793, 'out', out, false, false), J$.T(1506785, 'if ( ', 21, false)), out, false, false);
                            if (J$.C(90200, J$.R(1506809, '$isData', $isData, false, false))) {
                                out = J$.W(1506865, 'out', J$.B(204130, '+', J$.R(1506857, 'out', out, false, false), J$.B(204122, '+', J$.B(204114, '+', J$.B(204106, '+', J$.B(204098, '+', J$.T(1506817, ' (', 21, false), J$.R(1506825, '$schemaValue', $schemaValue, false, false)), J$.T(1506833, ' !== undefined && typeof ', 21, false)), J$.R(1506841, '$schemaValue', $schemaValue, false, false)), J$.T(1506849, ' != \'string\') || ', 21, false))), out, false, false);
                            }
                            out = J$.W(1506921, 'out', J$.B(204170, '+', J$.R(1506913, 'out', out, false, false), J$.B(204162, '+', J$.B(204154, '+', J$.B(204146, '+', J$.B(204138, '+', J$.T(1506873, ' !', 21, false), J$.R(1506881, '$regexp', $regexp, false, false)), J$.T(1506889, '.test(', 21, false)), J$.R(1506897, '$data', $data, false, false)), J$.T(1506905, ') ) {   ', 21, false))), out, false, false);
                            var $$outStack = J$.W(1506945, '$$outStack', J$.C(90208, J$.R(1506929, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(1506937, [], 10, false), $$outStack, false, false);
                            J$.M(1506969, J$.R(1506953, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(1506961, 'out', out, false, false));
                            out = J$.W(1506985, 'out', J$.T(1506977, '', 21, false), out, false, false);
                            if (J$.C(90256, J$.B(204178, '!==', J$.G(1507001, J$.R(1506993, 'it', it, false, false), 'createErrors'), J$.T(1507009, false, 23, false)))) {
                                out = J$.W(1507113, 'out', J$.B(204234, '+', J$.R(1507105, 'out', out, false, false), J$.B(204226, '+', J$.B(204218, '+', J$.B(204210, '+', J$.B(204202, '+', J$.B(204194, '+', J$.B(204186, '+', J$.T(1507017, ' { keyword: \'', 21, false), J$.T(1507025, 'pattern', 21, false)), J$.T(1507033, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(1507049, J$.R(1507041, 'it', it, false, false), 'errorPath')), J$.T(1507057, ' , schemaPath: ', 21, false)), J$.M(1507089, J$.G(1507073, J$.R(1507065, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(1507081, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(1507097, ' , params: { pattern:  ', 21, false))), out, false, false);
                                if (J$.C(90216, J$.R(1507121, '$isData', $isData, false, false))) {
                                    out = J$.W(1507153, 'out', J$.B(204250, '+', J$.R(1507145, 'out', out, false, false), J$.B(204242, '+', J$.T(1507129, '', 21, false), J$.R(1507137, '$schemaValue', $schemaValue, false, false))), out, false, false);
                                } else {
                                    out = J$.W(1507209, 'out', J$.B(204266, '+', J$.R(1507201, 'out', out, false, false), J$.B(204258, '+', J$.T(1507161, '', 21, false), J$.M(1507193, J$.G(1507177, J$.R(1507169, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(1507185, '$schema', $schema, false, false)))), out, false, false);
                                }
                                out = J$.W(1507233, 'out', J$.B(204274, '+', J$.R(1507225, 'out', out, false, false), J$.T(1507217, '  } ', 21, false)), out, false, false);
                                if (J$.C(90232, J$.B(204282, '!==', J$.G(1507257, J$.G(1507249, J$.R(1507241, 'it', it, false, false), 'opts'), 'messages'), J$.T(1507265, false, 23, false)))) {
                                    out = J$.W(1507289, 'out', J$.B(204290, '+', J$.R(1507281, 'out', out, false, false), J$.T(1507273, ' , message: \'should match pattern "', 21, false)), out, false, false);
                                    if (J$.C(90224, J$.R(1507297, '$isData', $isData, false, false))) {
                                        out = J$.W(1507337, 'out', J$.B(204314, '+', J$.R(1507329, 'out', out, false, false), J$.B(204306, '+', J$.B(204298, '+', J$.T(1507305, '\' + ', 21, false), J$.R(1507313, '$schemaValue', $schemaValue, false, false)), J$.T(1507321, ' + \'', 21, false))), out, false, false);
                                    } else {
                                        out = J$.W(1507393, 'out', J$.B(204330, '+', J$.R(1507385, 'out', out, false, false), J$.B(204322, '+', J$.T(1507345, '', 21, false), J$.M(1507377, J$.G(1507361, J$.R(1507353, 'it', it, false, false), 'util'), 'escapeQuotes', false)(J$.R(1507369, '$schema', $schema, false, false)))), out, false, false);
                                    }
                                    out = J$.W(1507417, 'out', J$.B(204338, '+', J$.R(1507409, 'out', out, false, false), J$.T(1507401, '"\' ', 21, false)), out, false, false);
                                }
                                if (J$.C(90248, J$.G(1507441, J$.G(1507433, J$.R(1507425, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(1507465, 'out', J$.B(204346, '+', J$.R(1507457, 'out', out, false, false), J$.T(1507449, ' , schema:  ', 21, false)), out, false, false);
                                    if (J$.C(90240, J$.R(1507473, '$isData', $isData, false, false))) {
                                        out = J$.W(1507505, 'out', J$.B(204362, '+', J$.R(1507497, 'out', out, false, false), J$.B(204354, '+', J$.T(1507481, 'validate.schema', 21, false), J$.R(1507489, '$schemaPath', $schemaPath, false, false))), out, false, false);
                                    } else {
                                        out = J$.W(1507561, 'out', J$.B(204378, '+', J$.R(1507553, 'out', out, false, false), J$.B(204370, '+', J$.T(1507513, '', 21, false), J$.M(1507545, J$.G(1507529, J$.R(1507521, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(1507537, '$schema', $schema, false, false)))), out, false, false);
                                    }
                                    out = J$.W(1507625, 'out', J$.B(204418, '+', J$.R(1507617, 'out', out, false, false), J$.B(204410, '+', J$.B(204402, '+', J$.B(204394, '+', J$.B(204386, '+', J$.T(1507569, '         , parentSchema: validate.schema', 21, false), J$.G(1507585, J$.R(1507577, 'it', it, false, false), 'schemaPath')), J$.T(1507593, ' , data: ', 21, false)), J$.R(1507601, '$data', $data, false, false)), J$.T(1507609, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(1507649, 'out', J$.B(204426, '+', J$.R(1507641, 'out', out, false, false), J$.T(1507633, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(1507673, 'out', J$.B(204434, '+', J$.R(1507665, 'out', out, false, false), J$.T(1507657, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(1507689, '__err', J$.R(1507681, 'out', out, false, false), __err, false, false);
                            out = J$.W(1507713, 'out', J$.M(1507705, J$.R(1507697, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(90280, J$.C(90264, J$.U(204442, '!', J$.G(1507729, J$.R(1507721, 'it', it, false, false), 'compositeRule'))) ? J$.R(1507737, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(90272, J$.G(1507753, J$.R(1507745, 'it', it, false, false), 'async'))) {
                                    out = J$.W(1507793, 'out', J$.B(204466, '+', J$.R(1507785, 'out', out, false, false), J$.B(204458, '+', J$.B(204450, '+', J$.T(1507761, ' throw new ValidationError([', 21, false), J$.R(1507769, '__err', __err, false, false)), J$.T(1507777, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(1507833, 'out', J$.B(204490, '+', J$.R(1507825, 'out', out, false, false), J$.B(204482, '+', J$.B(204474, '+', J$.T(1507801, ' validate.errors = [', 21, false), J$.R(1507809, '__err', __err, false, false)), J$.T(1507817, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(1507873, 'out', J$.B(204514, '+', J$.R(1507865, 'out', out, false, false), J$.B(204506, '+', J$.B(204498, '+', J$.T(1507841, ' var err = ', 21, false), J$.R(1507849, '__err', __err, false, false)), J$.T(1507857, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(1507897, 'out', J$.B(204522, '+', J$.R(1507889, 'out', out, false, false), J$.T(1507881, '} ', 21, false)), out, false, false);
                            if (J$.C(90288, J$.R(1507905, '$breakOnError', $breakOnError, false, false))) {
                                out = J$.W(1507929, 'out', J$.B(204530, '+', J$.R(1507921, 'out', out, false, false), J$.T(1507913, ' else { ', 21, false)), out, false, false);
                            }
                            return J$.Rt(1507945, J$.R(1507937, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(1508121, J$e);
                        } finally {
                            if (J$.Fr(1508129))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1508137, J$e);
        } finally {
            if (J$.Sr(1508145))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

