J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(1417177, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/cache.js');
            J$.N(1417185, 'Cache', Cache, false, false, false);
            J$.T(1416745, 'use strict', 21, false);
            var Cache = J$.W(1416817, 'Cache', J$.P(1416809, J$.I(typeof module === 'undefined' ? module = J$.R(1416753, 'module', undefined, true, true) : module = J$.R(1416753, 'module', module, true, true)), 'exports', J$.T(1416801, function Cache() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1416785, arguments.callee, this, arguments);
                            arguments = J$.N(1416793, 'arguments', arguments, true, false, false);
                            J$.P(1416777, J$.R(1416761, 'this', this, false, false), '_cache', J$.T(1416769, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(1417193, J$e);
                        } finally {
                            if (J$.Fr(1417201))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), Cache, false, true);
            J$.P(1416921, J$.G(1416833, J$.R(1416825, 'Cache', Cache, false, true), 'prototype'), 'put', J$.T(1416913, function Cache_put(key, value) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1416881, arguments.callee, this, arguments);
                            arguments = J$.N(1416889, 'arguments', arguments, true, false, false);
                            key = J$.N(1416897, 'key', key, true, false, false);
                            value = J$.N(1416905, 'value', value, true, false, false);
                            J$.P(1416873, J$.G(1416849, J$.R(1416841, 'this', this, false, false), '_cache'), J$.R(1416857, 'key', key, false, false), J$.R(1416865, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(1417209, J$e);
                        } finally {
                            if (J$.Fr(1417217))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1417017, J$.G(1416937, J$.R(1416929, 'Cache', Cache, false, true), 'prototype'), 'get', J$.T(1417009, function Cache_get(key) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1416985, arguments.callee, this, arguments);
                            arguments = J$.N(1416993, 'arguments', arguments, true, false, false);
                            key = J$.N(1417001, 'key', key, true, false, false);
                            return J$.Rt(1416977, J$.G(1416969, J$.G(1416953, J$.R(1416945, 'this', this, false, false), '_cache'), J$.R(1416961, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1417225, J$e);
                        } finally {
                            if (J$.Fr(1417233))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1417097, J$.G(1417033, J$.R(1417025, 'Cache', Cache, false, true), 'prototype'), 'del', J$.T(1417089, function Cache_del(key) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1417065, arguments.callee, this, arguments);
                            arguments = J$.N(1417073, 'arguments', arguments, true, false, false);
                            key = J$.N(1417081, 'key', key, true, false, false);
                            J$.B(183898, 'delete', J$.G(1417049, J$.R(1417041, 'this', this, false, false), '_cache'), J$.R(1417057, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(1417241, J$e);
                        } finally {
                            if (J$.Fr(1417249))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1417169, J$.G(1417113, J$.R(1417105, 'Cache', Cache, false, true), 'prototype'), 'clear', J$.T(1417161, function Cache_clear() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1417145, arguments.callee, this, arguments);
                            arguments = J$.N(1417153, 'arguments', arguments, true, false, false);
                            J$.P(1417137, J$.R(1417121, 'this', this, false, false), '_cache', J$.T(1417129, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(1417257, J$e);
                        } finally {
                            if (J$.Fr(1417265))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1417273, J$e);
        } finally {
            if (J$.Sr(1417281))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

