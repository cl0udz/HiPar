J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(5200473, '/home/james/nodejs/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/cache.js');
            J$.N(5200481, 'Cache', Cache, false, false, false);
            J$.T(5200041, 'use strict', 21, false);
            var Cache = J$.W(5200113, 'Cache', J$.P(5200105, J$.I(typeof module === 'undefined' ? module = J$.R(5200049, 'module', undefined, true, true) : module = J$.R(5200049, 'module', module, true, true)), 'exports', J$.T(5200097, function Cache() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5200081, arguments.callee, this, arguments);
                            arguments = J$.N(5200089, 'arguments', arguments, true, false, false);
                            J$.P(5200073, J$.R(5200057, 'this', this, false, false), '_cache', J$.T(5200065, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(5200489, J$e);
                        } finally {
                            if (J$.Fr(5200497))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), Cache, false, true);
            J$.P(5200217, J$.G(5200129, J$.R(5200121, 'Cache', Cache, false, true), 'prototype'), 'put', J$.T(5200209, function Cache_put(key, value) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5200177, arguments.callee, this, arguments);
                            arguments = J$.N(5200185, 'arguments', arguments, true, false, false);
                            key = J$.N(5200193, 'key', key, true, false, false);
                            value = J$.N(5200201, 'value', value, true, false, false);
                            J$.P(5200169, J$.G(5200145, J$.R(5200137, 'this', this, false, false), '_cache'), J$.R(5200153, 'key', key, false, false), J$.R(5200161, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(5200505, J$e);
                        } finally {
                            if (J$.Fr(5200513))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5200313, J$.G(5200233, J$.R(5200225, 'Cache', Cache, false, true), 'prototype'), 'get', J$.T(5200305, function Cache_get(key) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5200281, arguments.callee, this, arguments);
                            arguments = J$.N(5200289, 'arguments', arguments, true, false, false);
                            key = J$.N(5200297, 'key', key, true, false, false);
                            return J$.Rt(5200273, J$.G(5200265, J$.G(5200249, J$.R(5200241, 'this', this, false, false), '_cache'), J$.R(5200257, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5200521, J$e);
                        } finally {
                            if (J$.Fr(5200529))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5200393, J$.G(5200329, J$.R(5200321, 'Cache', Cache, false, true), 'prototype'), 'del', J$.T(5200385, function Cache_del(key) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5200361, arguments.callee, this, arguments);
                            arguments = J$.N(5200369, 'arguments', arguments, true, false, false);
                            key = J$.N(5200377, 'key', key, true, false, false);
                            J$.B(531314, 'delete', J$.G(5200345, J$.R(5200337, 'this', this, false, false), '_cache'), J$.R(5200353, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(5200537, J$e);
                        } finally {
                            if (J$.Fr(5200545))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5200465, J$.G(5200409, J$.R(5200401, 'Cache', Cache, false, true), 'prototype'), 'clear', J$.T(5200457, function Cache_clear() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5200441, arguments.callee, this, arguments);
                            arguments = J$.N(5200449, 'arguments', arguments, true, false, false);
                            J$.P(5200433, J$.R(5200417, 'this', this, false, false), '_cache', J$.T(5200425, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(5200553, J$e);
                        } finally {
                            if (J$.Fr(5200561))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5200569, J$e);
        } finally {
            if (J$.Sr(5200577))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

