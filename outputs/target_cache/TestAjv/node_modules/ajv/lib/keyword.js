J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(1550009, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/keyword.js');
            function addKeyword(keyword, definition) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1549089, arguments.callee, this, arguments);
                            function _addRule(keyword, dataType, definition) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(1549001, arguments.callee, this, arguments);
                                            arguments = J$.N(1549009, 'arguments', arguments, true, false, false);
                                            keyword = J$.N(1549017, 'keyword', keyword, true, false, false);
                                            dataType = J$.N(1549025, 'dataType', dataType, true, false, false);
                                            definition = J$.N(1549033, 'definition', definition, true, false, false);
                                            J$.N(1549041, 'ruleGroup', ruleGroup, false, false, false);
                                            J$.N(1549049, 'i', i, false, false, false);
                                            J$.N(1549057, 'rg', rg, false, false, false);
                                            J$.N(1549065, 'rule', rule, false, false, false);
                                            var ruleGroup;
                                            for (var i = J$.W(1548673, 'i', J$.T(1548665, 0, 22, false), i, false, false); J$.C(93600, J$.B(216562, '<', J$.R(1548681, 'i', i, false, false), J$.G(1548697, J$.R(1548689, 'RULES', RULES, false, false), 'length'))); J$.B(216586, '-', i = J$.W(1548713, 'i', J$.B(216578, '+', J$.U(216570, '+', J$.R(1548705, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                var rg = J$.W(1548745, 'rg', J$.G(1548737, J$.R(1548721, 'RULES', RULES, false, false), J$.R(1548729, 'i', i, false, false)), rg, false, false);
                                                if (J$.C(93592, J$.B(216594, '==', J$.G(1548761, J$.R(1548753, 'rg', rg, false, false), 'type'), J$.R(1548769, 'dataType', dataType, false, false)))) {
                                                    ruleGroup = J$.W(1548785, 'ruleGroup', J$.R(1548777, 'rg', rg, false, false), ruleGroup, false, false);
                                                    break;
                                                }
                                            }
                                            if (J$.C(93608, J$.U(216602, '!', J$.R(1548793, 'ruleGroup', ruleGroup, false, false)))) {
                                                ruleGroup = J$.W(1548825, 'ruleGroup', J$.T(1548817, {
                                                    type: J$.R(1548801, 'dataType', dataType, false, false),
                                                    rules: J$.T(1548809, [], 10, false)
                                                }, 11, false), ruleGroup, false, false);
                                                J$.M(1548849, J$.R(1548833, 'RULES', RULES, false, false), 'push', false)(J$.R(1548841, 'ruleGroup', ruleGroup, false, false));
                                            }
                                            var rule = J$.W(1548921, 'rule', J$.T(1548913, {
                                                keyword: J$.R(1548857, 'keyword', keyword, false, false),
                                                definition: J$.R(1548865, 'definition', definition, false, false),
                                                custom: J$.T(1548873, true, 23, false),
                                                code: J$.R(1548881, 'customRuleCode', customRuleCode, false, true),
                                                'implements': J$.G(1548905, J$.R(1548889, 'definition', definition, false, false), J$.T(1548897, 'implements', 21, false))
                                            }, 11, false), rule, false, false);
                                            J$.M(1548953, J$.G(1548937, J$.R(1548929, 'ruleGroup', ruleGroup, false, false), 'rules'), 'push', false)(J$.R(1548945, 'rule', rule, false, false));
                                            J$.P(1548993, J$.G(1548969, J$.R(1548961, 'RULES', RULES, false, false), 'custom'), J$.R(1548977, 'keyword', keyword, false, false), J$.R(1548985, 'rule', rule, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1550105, J$e);
                                        } finally {
                                            if (J$.Fr(1550113))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1549097, 'arguments', arguments, true, false, false);
                            keyword = J$.N(1549105, 'keyword', keyword, true, false, false);
                            definition = J$.N(1549113, 'definition', definition, true, false, false);
                            J$.N(1549121, 'RULES', RULES, false, false, false);
                            J$.N(1549129, 'dataType', dataType, false, false, false);
                            J$.N(1549137, 'i', i, false, false, false);
                            J$.N(1549145, 'metaSchema', metaSchema, false, false, false);
                            _addRule = J$.N(1549161, '_addRule', J$.T(1549153, _addRule, 12, false), true, false, false);
                            var RULES = J$.W(1548041, 'RULES', J$.G(1548033, J$.R(1548025, 'this', this, false, false), 'RULES'), RULES, false, false);
                            if (J$.C(93528, J$.G(1548073, J$.G(1548057, J$.R(1548049, 'RULES', RULES, false, false), 'keywords'), J$.R(1548065, 'keyword', keyword, false, false))))
                                throw J$.F(1548113, J$.I(typeof Error === 'undefined' ? Error = J$.R(1548081, 'Error', undefined, true, true) : Error = J$.R(1548081, 'Error', Error, true, true)), true)(J$.B(216498, '+', J$.B(216490, '+', J$.T(1548089, 'Keyword ', 21, false), J$.R(1548097, 'keyword', keyword, false, false)), J$.T(1548105, ' is already defined', 21, false)));
                            if (J$.C(93536, J$.U(216506, '!', J$.M(1548137, J$.R(1548121, 'IDENTIFIER', IDENTIFIER, false, true), 'test', false)(J$.R(1548129, 'keyword', keyword, false, false)))))
                                throw J$.F(1548177, J$.I(typeof Error === 'undefined' ? Error = J$.R(1548145, 'Error', undefined, true, true) : Error = J$.R(1548145, 'Error', Error, true, true)), true)(J$.B(216522, '+', J$.B(216514, '+', J$.T(1548153, 'Keyword ', 21, false), J$.R(1548161, 'keyword', keyword, false, false)), J$.T(1548169, ' is not a valid identifier', 21, false)));
                            if (J$.C(93584, J$.R(1548185, 'definition', definition, false, false))) {
                                J$.M(1548217, J$.R(1548193, 'this', this, false, false), 'validateKeyword', false)(J$.R(1548201, 'definition', definition, false, false), J$.T(1548209, true, 23, false));
                                var dataType = J$.W(1548241, 'dataType', J$.G(1548233, J$.R(1548225, 'definition', definition, false, false), 'type'), dataType, false, false);
                                if (J$.C(93552, J$.M(1548265, J$.I(typeof Array === 'undefined' ? Array = J$.R(1548249, 'Array', undefined, true, true) : Array = J$.R(1548249, 'Array', Array, true, true)), 'isArray', false)(J$.R(1548257, 'dataType', dataType, false, false)))) {
                                    for (var i = J$.W(1548281, 'i', J$.T(1548273, 0, 22, false), i, false, false); J$.C(93544, J$.B(216530, '<', J$.R(1548289, 'i', i, false, false), J$.G(1548305, J$.R(1548297, 'dataType', dataType, false, false), 'length'))); J$.B(216554, '-', i = J$.W(1548321, 'i', J$.B(216546, '+', J$.U(216538, '+', J$.R(1548313, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        J$.F(1548377, J$.R(1548329, '_addRule', _addRule, false, false), false)(J$.R(1548337, 'keyword', keyword, false, false), J$.G(1548361, J$.R(1548345, 'dataType', dataType, false, false), J$.R(1548353, 'i', i, false, false)), J$.R(1548369, 'definition', definition, false, false));
                                    }
                                } else {
                                    J$.F(1548417, J$.R(1548385, '_addRule', _addRule, false, false), false)(J$.R(1548393, 'keyword', keyword, false, false), J$.R(1548401, 'dataType', dataType, false, false), J$.R(1548409, 'definition', definition, false, false));
                                }
                                var metaSchema = J$.W(1548441, 'metaSchema', J$.G(1548433, J$.R(1548425, 'definition', definition, false, false), 'metaSchema'), metaSchema, false, false);
                                if (J$.C(93576, J$.R(1548449, 'metaSchema', metaSchema, false, false))) {
                                    if (J$.C(93568, J$.C(93560, J$.G(1548465, J$.R(1548457, 'definition', definition, false, false), '$data')) ? J$.G(1548489, J$.G(1548481, J$.R(1548473, 'this', this, false, false), '_opts'), '$data') : J$._())) {
                                        metaSchema = J$.W(1548537, 'metaSchema', J$.T(1548529, {
                                            anyOf: J$.T(1548521, [
                                                J$.R(1548497, 'metaSchema', metaSchema, false, false),
                                                J$.T(1548513, { '$ref': J$.T(1548505, 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#', 21, false) }, 11, false)
                                            ], 10, false)
                                        }, 11, false), metaSchema, false, false);
                                    }
                                    J$.P(1548585, J$.R(1548545, 'definition', definition, false, false), 'validateSchema', J$.M(1548577, J$.R(1548553, 'this', this, false, false), 'compile', false)(J$.R(1548561, 'metaSchema', metaSchema, false, false), J$.T(1548569, true, 23, false)));
                                }
                            }
                            J$.P(1548657, J$.G(1548601, J$.R(1548593, 'RULES', RULES, false, false), 'keywords'), J$.R(1548609, 'keyword', keyword, false, false), J$.P(1548649, J$.G(1548625, J$.R(1548617, 'RULES', RULES, false, false), 'all'), J$.R(1548633, 'keyword', keyword, false, false), J$.T(1548641, true, 23, false)));
                            return J$.Rt(1549081, J$.R(1549073, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(1550121, J$e);
                        } finally {
                            if (J$.Fr(1550129))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getKeyword(keyword) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1549297, arguments.callee, this, arguments);
                            arguments = J$.N(1549305, 'arguments', arguments, true, false, false);
                            keyword = J$.N(1549313, 'keyword', keyword, true, false, false);
                            J$.N(1549321, 'rule', rule, false, false, false);
                            var rule = J$.W(1549209, 'rule', J$.G(1549201, J$.G(1549185, J$.G(1549177, J$.R(1549169, 'this', this, false, false), 'RULES'), 'custom'), J$.R(1549193, 'keyword', keyword, false, false)), rule, false, false);
                            return J$.Rt(1549289, J$.C(93624, J$.R(1549217, 'rule', rule, false, false)) ? J$.G(1549233, J$.R(1549225, 'rule', rule, false, false), 'definition') : J$.C(93616, J$.G(1549273, J$.G(1549257, J$.G(1549249, J$.R(1549241, 'this', this, false, false), 'RULES'), 'keywords'), J$.R(1549265, 'keyword', keyword, false, false))) ? J$._() : J$.T(1549281, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1550137, J$e);
                        } finally {
                            if (J$.Fr(1550145))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function removeKeyword(keyword) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1549665, arguments.callee, this, arguments);
                            arguments = J$.N(1549673, 'arguments', arguments, true, false, false);
                            keyword = J$.N(1549681, 'keyword', keyword, true, false, false);
                            J$.N(1549689, 'RULES', RULES, false, false, false);
                            J$.N(1549697, 'i', i, false, false, false);
                            J$.N(1549705, 'rules', rules, false, false, false);
                            J$.N(1549713, 'j', j, false, false, false);
                            var RULES = J$.W(1549345, 'RULES', J$.G(1549337, J$.R(1549329, 'this', this, false, false), 'RULES'), RULES, false, false);
                            J$.B(216610, 'delete', J$.G(1549361, J$.R(1549353, 'RULES', RULES, false, false), 'keywords'), J$.R(1549369, 'keyword', keyword, false, false));
                            J$.B(216618, 'delete', J$.G(1549385, J$.R(1549377, 'RULES', RULES, false, false), 'all'), J$.R(1549393, 'keyword', keyword, false, false));
                            J$.B(216626, 'delete', J$.G(1549409, J$.R(1549401, 'RULES', RULES, false, false), 'custom'), J$.R(1549417, 'keyword', keyword, false, false));
                            for (var i = J$.W(1549433, 'i', J$.T(1549425, 0, 22, false), i, false, false); J$.C(93648, J$.B(216634, '<', J$.R(1549441, 'i', i, false, false), J$.G(1549457, J$.R(1549449, 'RULES', RULES, false, false), 'length'))); J$.B(216658, '-', i = J$.W(1549473, 'i', J$.B(216650, '+', J$.U(216642, '+', J$.R(1549465, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var rules = J$.W(1549513, 'rules', J$.G(1549505, J$.G(1549497, J$.R(1549481, 'RULES', RULES, false, false), J$.R(1549489, 'i', i, false, false)), 'rules'), rules, false, false);
                                for (var j = J$.W(1549529, 'j', J$.T(1549521, 0, 22, false), j, false, false); J$.C(93640, J$.B(216666, '<', J$.R(1549537, 'j', j, false, false), J$.G(1549553, J$.R(1549545, 'rules', rules, false, false), 'length'))); J$.B(216690, '-', j = J$.W(1549569, 'j', J$.B(216682, '+', J$.U(216674, '+', J$.R(1549561, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    if (J$.C(93632, J$.B(216698, '==', J$.G(1549601, J$.G(1549593, J$.R(1549577, 'rules', rules, false, false), J$.R(1549585, 'j', j, false, false)), 'keyword'), J$.R(1549609, 'keyword', keyword, false, false)))) {
                                        J$.M(1549641, J$.R(1549617, 'rules', rules, false, false), 'splice', false)(J$.R(1549625, 'j', j, false, false), J$.T(1549633, 1, 22, false));
                                        break;
                                    }
                                }
                            }
                            return J$.Rt(1549657, J$.R(1549649, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(1550153, J$e);
                        } finally {
                            if (J$.Fr(1550161))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateKeyword(definition, throwError) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1549969, arguments.callee, this, arguments);
                            arguments = J$.N(1549977, 'arguments', arguments, true, false, false);
                            definition = J$.N(1549985, 'definition', definition, true, false, false);
                            throwError = J$.N(1549993, 'throwError', throwError, true, false, false);
                            J$.N(1550001, 'v', v, false, false, false);
                            J$.P(1549737, J$.R(1549721, 'validateKeyword', validateKeyword, false, true), 'errors', J$.T(1549729, null, 25, false));
                            var v = J$.W(1549809, 'v', J$.P(1549801, J$.R(1549745, 'this', this, false, false), '_validateKeyword', J$.C(93656, J$.G(1549761, J$.R(1549753, 'this', this, false, false), '_validateKeyword')) ? J$._() : J$.M(1549793, J$.R(1549769, 'this', this, false, false), 'compile', false)(J$.R(1549777, 'definitionSchema', definitionSchema, false, true), J$.T(1549785, true, 23, false))), v, false, false);
                            if (J$.C(93664, J$.F(1549833, J$.R(1549817, 'v', v, false, false), false)(J$.R(1549825, 'definition', definition, false, false))))
                                return J$.Rt(1549849, J$.T(1549841, true, 23, false));
                            J$.P(1549881, J$.R(1549857, 'validateKeyword', validateKeyword, false, true), 'errors', J$.G(1549873, J$.R(1549865, 'v', v, false, false), 'errors'));
                            if (J$.C(93672, J$.R(1549889, 'throwError', throwError, false, false)))
                                throw J$.F(1549945, J$.I(typeof Error === 'undefined' ? Error = J$.R(1549897, 'Error', undefined, true, true) : Error = J$.R(1549897, 'Error', Error, true, true)), true)(J$.B(216706, '+', J$.T(1549905, 'custom keyword definition is invalid: ', 21, false), J$.M(1549937, J$.R(1549913, 'this', this, false, false), 'errorsText', false)(J$.G(1549929, J$.R(1549921, 'v', v, false, false), 'errors'))));
                            else
                                return J$.Rt(1549961, J$.T(1549953, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1550169, J$e);
                        } finally {
                            if (J$.Fr(1550177))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1550017, 'IDENTIFIER', IDENTIFIER, false, false, false);
            J$.N(1550025, 'customRuleCode', customRuleCode, false, false, false);
            J$.N(1550033, 'definitionSchema', definitionSchema, false, false, false);
            addKeyword = J$.N(1550049, 'addKeyword', J$.T(1550041, addKeyword, 12, false), true, false, false);
            getKeyword = J$.N(1550065, 'getKeyword', J$.T(1550057, getKeyword, 12, false), true, false, false);
            removeKeyword = J$.N(1550081, 'removeKeyword', J$.T(1550073, removeKeyword, 12, false), true, false, false);
            validateKeyword = J$.N(1550097, 'validateKeyword', J$.T(1550089, validateKeyword, 12, false), true, false, false);
            J$.T(1547833, 'use strict', 21, false);
            J$.F(1547857, J$.I(typeof require === 'undefined' ? require = J$.R(1547841, 'require', undefined, true, true) : require = J$.R(1547841, 'require', require, true, true)), false)(J$.T(1547849, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(1547881, J$.I(typeof require === 'undefined' ? require = J$.R(1547865, 'require', undefined, true, true) : require = J$.R(1547865, 'require', require, true, true)), false)(J$.T(1547873, 'core-js/modules/es.array.splice', 21, false));
            var IDENTIFIER = J$.W(1547897, 'IDENTIFIER', J$.T(1547889, /^[a-z_$][a-z0-9_$-]*$/i, 14, false), IDENTIFIER, false, true);
            var customRuleCode = J$.W(1547929, 'customRuleCode', J$.F(1547921, J$.I(typeof require === 'undefined' ? require = J$.R(1547905, 'require', undefined, true, true) : require = J$.R(1547905, 'require', require, true, true)), false)(J$.T(1547913, './dotjs/custom', 21, false)), customRuleCode, false, true);
            var definitionSchema = J$.W(1547961, 'definitionSchema', J$.F(1547953, J$.I(typeof require === 'undefined' ? require = J$.R(1547937, 'require', undefined, true, true) : require = J$.R(1547937, 'require', require, true, true)), false)(J$.T(1547945, './definition_schema', 21, false)), definitionSchema, false, true);
            J$.P(1548017, J$.I(typeof module === 'undefined' ? module = J$.R(1547969, 'module', undefined, true, true) : module = J$.R(1547969, 'module', module, true, true)), 'exports', J$.T(1548009, {
                add: J$.R(1547977, 'addKeyword', addKeyword, false, true),
                get: J$.R(1547985, 'getKeyword', getKeyword, false, true),
                remove: J$.R(1547993, 'removeKeyword', removeKeyword, false, true),
                validate: J$.R(1548001, 'validateKeyword', validateKeyword, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(1550185, J$e);
        } finally {
            if (J$.Sr(1550193))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

