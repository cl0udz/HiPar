J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(5333305, '/home/james/nodejs/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/keyword.js');
            function addKeyword(keyword, definition) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5332385, arguments.callee, this, arguments);
                            function _addRule(keyword, dataType, definition) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(5332297, arguments.callee, this, arguments);
                                            arguments = J$.N(5332305, 'arguments', arguments, true, false, false);
                                            keyword = J$.N(5332313, 'keyword', keyword, true, false, false);
                                            dataType = J$.N(5332321, 'dataType', dataType, true, false, false);
                                            definition = J$.N(5332329, 'definition', definition, true, false, false);
                                            J$.N(5332337, 'ruleGroup', ruleGroup, false, false, false);
                                            J$.N(5332345, 'i', i, false, false, false);
                                            J$.N(5332353, 'rg', rg, false, false, false);
                                            J$.N(5332361, 'rule', rule, false, false, false);
                                            var ruleGroup;
                                            for (var i = J$.W(5331969, 'i', J$.T(5331961, 0, 22, false), i, false, false); J$.C(290120, J$.B(563978, '<', J$.R(5331977, 'i', i, false, false), J$.G(5331993, J$.R(5331985, 'RULES', RULES, false, false), 'length'))); J$.B(564002, '-', i = J$.W(5332009, 'i', J$.B(563994, '+', J$.U(563986, '+', J$.R(5332001, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                var rg = J$.W(5332041, 'rg', J$.G(5332033, J$.R(5332017, 'RULES', RULES, false, false), J$.R(5332025, 'i', i, false, false)), rg, false, false);
                                                if (J$.C(290112, J$.B(564010, '==', J$.G(5332057, J$.R(5332049, 'rg', rg, false, false), 'type'), J$.R(5332065, 'dataType', dataType, false, false)))) {
                                                    ruleGroup = J$.W(5332081, 'ruleGroup', J$.R(5332073, 'rg', rg, false, false), ruleGroup, false, false);
                                                    break;
                                                }
                                            }
                                            if (J$.C(290128, J$.U(564018, '!', J$.R(5332089, 'ruleGroup', ruleGroup, false, false)))) {
                                                ruleGroup = J$.W(5332121, 'ruleGroup', J$.T(5332113, {
                                                    type: J$.R(5332097, 'dataType', dataType, false, false),
                                                    rules: J$.T(5332105, [], 10, false)
                                                }, 11, false), ruleGroup, false, false);
                                                J$.M(5332145, J$.R(5332129, 'RULES', RULES, false, false), 'push', false)(J$.R(5332137, 'ruleGroup', ruleGroup, false, false));
                                            }
                                            var rule = J$.W(5332217, 'rule', J$.T(5332209, {
                                                keyword: J$.R(5332153, 'keyword', keyword, false, false),
                                                definition: J$.R(5332161, 'definition', definition, false, false),
                                                custom: J$.T(5332169, true, 23, false),
                                                code: J$.R(5332177, 'customRuleCode', customRuleCode, false, true),
                                                'implements': J$.G(5332201, J$.R(5332185, 'definition', definition, false, false), J$.T(5332193, 'implements', 21, false))
                                            }, 11, false), rule, false, false);
                                            J$.M(5332249, J$.G(5332233, J$.R(5332225, 'ruleGroup', ruleGroup, false, false), 'rules'), 'push', false)(J$.R(5332241, 'rule', rule, false, false));
                                            J$.P(5332289, J$.G(5332265, J$.R(5332257, 'RULES', RULES, false, false), 'custom'), J$.R(5332273, 'keyword', keyword, false, false), J$.R(5332281, 'rule', rule, false, false));
                                        } catch (J$e) {
                                            J$.Ex(5333401, J$e);
                                        } finally {
                                            if (J$.Fr(5333409))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(5332393, 'arguments', arguments, true, false, false);
                            keyword = J$.N(5332401, 'keyword', keyword, true, false, false);
                            definition = J$.N(5332409, 'definition', definition, true, false, false);
                            J$.N(5332417, 'RULES', RULES, false, false, false);
                            J$.N(5332425, 'dataType', dataType, false, false, false);
                            J$.N(5332433, 'i', i, false, false, false);
                            J$.N(5332441, 'metaSchema', metaSchema, false, false, false);
                            _addRule = J$.N(5332457, '_addRule', J$.T(5332449, _addRule, 12, false), true, false, false);
                            var RULES = J$.W(5331337, 'RULES', J$.G(5331329, J$.R(5331321, 'this', this, false, false), 'RULES'), RULES, false, false);
                            if (J$.C(290048, J$.G(5331369, J$.G(5331353, J$.R(5331345, 'RULES', RULES, false, false), 'keywords'), J$.R(5331361, 'keyword', keyword, false, false))))
                                throw J$.F(5331409, J$.I(typeof Error === 'undefined' ? Error = J$.R(5331377, 'Error', undefined, true, true) : Error = J$.R(5331377, 'Error', Error, true, true)), true)(J$.B(563914, '+', J$.B(563906, '+', J$.T(5331385, 'Keyword ', 21, false), J$.R(5331393, 'keyword', keyword, false, false)), J$.T(5331401, ' is already defined', 21, false)));
                            if (J$.C(290056, J$.U(563922, '!', J$.M(5331433, J$.R(5331417, 'IDENTIFIER', IDENTIFIER, false, true), 'test', false)(J$.R(5331425, 'keyword', keyword, false, false)))))
                                throw J$.F(5331473, J$.I(typeof Error === 'undefined' ? Error = J$.R(5331441, 'Error', undefined, true, true) : Error = J$.R(5331441, 'Error', Error, true, true)), true)(J$.B(563938, '+', J$.B(563930, '+', J$.T(5331449, 'Keyword ', 21, false), J$.R(5331457, 'keyword', keyword, false, false)), J$.T(5331465, ' is not a valid identifier', 21, false)));
                            if (J$.C(290104, J$.R(5331481, 'definition', definition, false, false))) {
                                J$.M(5331513, J$.R(5331489, 'this', this, false, false), 'validateKeyword', false)(J$.R(5331497, 'definition', definition, false, false), J$.T(5331505, true, 23, false));
                                var dataType = J$.W(5331537, 'dataType', J$.G(5331529, J$.R(5331521, 'definition', definition, false, false), 'type'), dataType, false, false);
                                if (J$.C(290072, J$.M(5331561, J$.I(typeof Array === 'undefined' ? Array = J$.R(5331545, 'Array', undefined, true, true) : Array = J$.R(5331545, 'Array', Array, true, true)), 'isArray', false)(J$.R(5331553, 'dataType', dataType, false, false)))) {
                                    for (var i = J$.W(5331577, 'i', J$.T(5331569, 0, 22, false), i, false, false); J$.C(290064, J$.B(563946, '<', J$.R(5331585, 'i', i, false, false), J$.G(5331601, J$.R(5331593, 'dataType', dataType, false, false), 'length'))); J$.B(563970, '-', i = J$.W(5331617, 'i', J$.B(563962, '+', J$.U(563954, '+', J$.R(5331609, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        J$.F(5331673, J$.R(5331625, '_addRule', _addRule, false, false), false)(J$.R(5331633, 'keyword', keyword, false, false), J$.G(5331657, J$.R(5331641, 'dataType', dataType, false, false), J$.R(5331649, 'i', i, false, false)), J$.R(5331665, 'definition', definition, false, false));
                                    }
                                } else {
                                    J$.F(5331713, J$.R(5331681, '_addRule', _addRule, false, false), false)(J$.R(5331689, 'keyword', keyword, false, false), J$.R(5331697, 'dataType', dataType, false, false), J$.R(5331705, 'definition', definition, false, false));
                                }
                                var metaSchema = J$.W(5331737, 'metaSchema', J$.G(5331729, J$.R(5331721, 'definition', definition, false, false), 'metaSchema'), metaSchema, false, false);
                                if (J$.C(290096, J$.R(5331745, 'metaSchema', metaSchema, false, false))) {
                                    if (J$.C(290088, J$.C(290080, J$.G(5331761, J$.R(5331753, 'definition', definition, false, false), '$data')) ? J$.G(5331785, J$.G(5331777, J$.R(5331769, 'this', this, false, false), '_opts'), '$data') : J$._())) {
                                        metaSchema = J$.W(5331833, 'metaSchema', J$.T(5331825, {
                                            anyOf: J$.T(5331817, [
                                                J$.R(5331793, 'metaSchema', metaSchema, false, false),
                                                J$.T(5331809, { '$ref': J$.T(5331801, 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#', 21, false) }, 11, false)
                                            ], 10, false)
                                        }, 11, false), metaSchema, false, false);
                                    }
                                    J$.P(5331881, J$.R(5331841, 'definition', definition, false, false), 'validateSchema', J$.M(5331873, J$.R(5331849, 'this', this, false, false), 'compile', false)(J$.R(5331857, 'metaSchema', metaSchema, false, false), J$.T(5331865, true, 23, false)));
                                }
                            }
                            J$.P(5331953, J$.G(5331897, J$.R(5331889, 'RULES', RULES, false, false), 'keywords'), J$.R(5331905, 'keyword', keyword, false, false), J$.P(5331945, J$.G(5331921, J$.R(5331913, 'RULES', RULES, false, false), 'all'), J$.R(5331929, 'keyword', keyword, false, false), J$.T(5331937, true, 23, false)));
                            return J$.Rt(5332377, J$.R(5332369, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(5333417, J$e);
                        } finally {
                            if (J$.Fr(5333425))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getKeyword(keyword) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5332593, arguments.callee, this, arguments);
                            arguments = J$.N(5332601, 'arguments', arguments, true, false, false);
                            keyword = J$.N(5332609, 'keyword', keyword, true, false, false);
                            J$.N(5332617, 'rule', rule, false, false, false);
                            var rule = J$.W(5332505, 'rule', J$.G(5332497, J$.G(5332481, J$.G(5332473, J$.R(5332465, 'this', this, false, false), 'RULES'), 'custom'), J$.R(5332489, 'keyword', keyword, false, false)), rule, false, false);
                            return J$.Rt(5332585, J$.C(290144, J$.R(5332513, 'rule', rule, false, false)) ? J$.G(5332529, J$.R(5332521, 'rule', rule, false, false), 'definition') : J$.C(290136, J$.G(5332569, J$.G(5332553, J$.G(5332545, J$.R(5332537, 'this', this, false, false), 'RULES'), 'keywords'), J$.R(5332561, 'keyword', keyword, false, false))) ? J$._() : J$.T(5332577, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(5333433, J$e);
                        } finally {
                            if (J$.Fr(5333441))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function removeKeyword(keyword) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5332961, arguments.callee, this, arguments);
                            arguments = J$.N(5332969, 'arguments', arguments, true, false, false);
                            keyword = J$.N(5332977, 'keyword', keyword, true, false, false);
                            J$.N(5332985, 'RULES', RULES, false, false, false);
                            J$.N(5332993, 'i', i, false, false, false);
                            J$.N(5333001, 'rules', rules, false, false, false);
                            J$.N(5333009, 'j', j, false, false, false);
                            var RULES = J$.W(5332641, 'RULES', J$.G(5332633, J$.R(5332625, 'this', this, false, false), 'RULES'), RULES, false, false);
                            J$.B(564026, 'delete', J$.G(5332657, J$.R(5332649, 'RULES', RULES, false, false), 'keywords'), J$.R(5332665, 'keyword', keyword, false, false));
                            J$.B(564034, 'delete', J$.G(5332681, J$.R(5332673, 'RULES', RULES, false, false), 'all'), J$.R(5332689, 'keyword', keyword, false, false));
                            J$.B(564042, 'delete', J$.G(5332705, J$.R(5332697, 'RULES', RULES, false, false), 'custom'), J$.R(5332713, 'keyword', keyword, false, false));
                            for (var i = J$.W(5332729, 'i', J$.T(5332721, 0, 22, false), i, false, false); J$.C(290168, J$.B(564050, '<', J$.R(5332737, 'i', i, false, false), J$.G(5332753, J$.R(5332745, 'RULES', RULES, false, false), 'length'))); J$.B(564074, '-', i = J$.W(5332769, 'i', J$.B(564066, '+', J$.U(564058, '+', J$.R(5332761, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var rules = J$.W(5332809, 'rules', J$.G(5332801, J$.G(5332793, J$.R(5332777, 'RULES', RULES, false, false), J$.R(5332785, 'i', i, false, false)), 'rules'), rules, false, false);
                                for (var j = J$.W(5332825, 'j', J$.T(5332817, 0, 22, false), j, false, false); J$.C(290160, J$.B(564082, '<', J$.R(5332833, 'j', j, false, false), J$.G(5332849, J$.R(5332841, 'rules', rules, false, false), 'length'))); J$.B(564106, '-', j = J$.W(5332865, 'j', J$.B(564098, '+', J$.U(564090, '+', J$.R(5332857, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    if (J$.C(290152, J$.B(564114, '==', J$.G(5332897, J$.G(5332889, J$.R(5332873, 'rules', rules, false, false), J$.R(5332881, 'j', j, false, false)), 'keyword'), J$.R(5332905, 'keyword', keyword, false, false)))) {
                                        J$.M(5332937, J$.R(5332913, 'rules', rules, false, false), 'splice', false)(J$.R(5332921, 'j', j, false, false), J$.T(5332929, 1, 22, false));
                                        break;
                                    }
                                }
                            }
                            return J$.Rt(5332953, J$.R(5332945, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(5333449, J$e);
                        } finally {
                            if (J$.Fr(5333457))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateKeyword(definition, throwError) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5333265, arguments.callee, this, arguments);
                            arguments = J$.N(5333273, 'arguments', arguments, true, false, false);
                            definition = J$.N(5333281, 'definition', definition, true, false, false);
                            throwError = J$.N(5333289, 'throwError', throwError, true, false, false);
                            J$.N(5333297, 'v', v, false, false, false);
                            J$.P(5333033, J$.R(5333017, 'validateKeyword', validateKeyword, false, true), 'errors', J$.T(5333025, null, 25, false));
                            var v = J$.W(5333105, 'v', J$.P(5333097, J$.R(5333041, 'this', this, false, false), '_validateKeyword', J$.C(290176, J$.G(5333057, J$.R(5333049, 'this', this, false, false), '_validateKeyword')) ? J$._() : J$.M(5333089, J$.R(5333065, 'this', this, false, false), 'compile', false)(J$.R(5333073, 'definitionSchema', definitionSchema, false, true), J$.T(5333081, true, 23, false))), v, false, false);
                            if (J$.C(290184, J$.F(5333129, J$.R(5333113, 'v', v, false, false), false)(J$.R(5333121, 'definition', definition, false, false))))
                                return J$.Rt(5333145, J$.T(5333137, true, 23, false));
                            J$.P(5333177, J$.R(5333153, 'validateKeyword', validateKeyword, false, true), 'errors', J$.G(5333169, J$.R(5333161, 'v', v, false, false), 'errors'));
                            if (J$.C(290192, J$.R(5333185, 'throwError', throwError, false, false)))
                                throw J$.F(5333241, J$.I(typeof Error === 'undefined' ? Error = J$.R(5333193, 'Error', undefined, true, true) : Error = J$.R(5333193, 'Error', Error, true, true)), true)(J$.B(564122, '+', J$.T(5333201, 'custom keyword definition is invalid: ', 21, false), J$.M(5333233, J$.R(5333209, 'this', this, false, false), 'errorsText', false)(J$.G(5333225, J$.R(5333217, 'v', v, false, false), 'errors'))));
                            else
                                return J$.Rt(5333257, J$.T(5333249, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(5333465, J$e);
                        } finally {
                            if (J$.Fr(5333473))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5333313, 'IDENTIFIER', IDENTIFIER, false, false, false);
            J$.N(5333321, 'customRuleCode', customRuleCode, false, false, false);
            J$.N(5333329, 'definitionSchema', definitionSchema, false, false, false);
            addKeyword = J$.N(5333345, 'addKeyword', J$.T(5333337, addKeyword, 12, false), true, false, false);
            getKeyword = J$.N(5333361, 'getKeyword', J$.T(5333353, getKeyword, 12, false), true, false, false);
            removeKeyword = J$.N(5333377, 'removeKeyword', J$.T(5333369, removeKeyword, 12, false), true, false, false);
            validateKeyword = J$.N(5333393, 'validateKeyword', J$.T(5333385, validateKeyword, 12, false), true, false, false);
            J$.T(5331129, 'use strict', 21, false);
            J$.F(5331153, J$.I(typeof require === 'undefined' ? require = J$.R(5331137, 'require', undefined, true, true) : require = J$.R(5331137, 'require', require, true, true)), false)(J$.T(5331145, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(5331177, J$.I(typeof require === 'undefined' ? require = J$.R(5331161, 'require', undefined, true, true) : require = J$.R(5331161, 'require', require, true, true)), false)(J$.T(5331169, 'core-js/modules/es.array.splice', 21, false));
            var IDENTIFIER = J$.W(5331193, 'IDENTIFIER', J$.T(5331185, /^[a-z_$][a-z0-9_$-]*$/i, 14, false), IDENTIFIER, false, true);
            var customRuleCode = J$.W(5331225, 'customRuleCode', J$.F(5331217, J$.I(typeof require === 'undefined' ? require = J$.R(5331201, 'require', undefined, true, true) : require = J$.R(5331201, 'require', require, true, true)), false)(J$.T(5331209, './dotjs/custom', 21, false)), customRuleCode, false, true);
            var definitionSchema = J$.W(5331257, 'definitionSchema', J$.F(5331249, J$.I(typeof require === 'undefined' ? require = J$.R(5331233, 'require', undefined, true, true) : require = J$.R(5331233, 'require', require, true, true)), false)(J$.T(5331241, './definition_schema', 21, false)), definitionSchema, false, true);
            J$.P(5331313, J$.I(typeof module === 'undefined' ? module = J$.R(5331265, 'module', undefined, true, true) : module = J$.R(5331265, 'module', module, true, true)), 'exports', J$.T(5331305, {
                add: J$.R(5331273, 'addKeyword', addKeyword, false, true),
                get: J$.R(5331281, 'getKeyword', getKeyword, false, true),
                remove: J$.R(5331289, 'removeKeyword', removeKeyword, false, true),
                validate: J$.R(5331297, 'validateKeyword', validateKeyword, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(5333481, J$e);
        } finally {
            if (J$.Sr(5333489))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

