J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(1418945, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/compile/async.js');
            function compileAsync(schema, meta, callback) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(1418857, arguments.callee, this, arguments);
                            function loadMetaSchemaOf(sch) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(1417937, arguments.callee, this, arguments);
                                            arguments = J$.N(1417945, 'arguments', arguments, true, false, false);
                                            sch = J$.N(1417953, 'sch', sch, true, false, false);
                                            J$.N(1417961, '$schema', $schema, false, false, false);
                                            var $schema = J$.W(1417825, '$schema', J$.G(1417817, J$.R(1417809, 'sch', sch, false, false), '$schema'), $schema, false, false);
                                            return J$.Rt(1417929, J$.C(84608, J$.C(84600, J$.R(1417833, '$schema', $schema, false, false)) ? J$.U(183938, '!', J$.M(1417857, J$.R(1417841, 'self', self, false, false), 'getSchema', false)(J$.R(1417849, '$schema', $schema, false, false))) : J$._()) ? J$.M(1417905, J$.R(1417865, 'compileAsync', compileAsync, false, true), 'call', false)(J$.R(1417873, 'self', self, false, false), J$.T(1417889, { $ref: J$.R(1417881, '$schema', $schema, false, false) }, 11, false), J$.T(1417897, true, 23, false)) : J$.M(1417921, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(1417913, 'Promise', undefined, true, true) : Promise = J$.R(1417913, 'Promise', Promise, true, true)), 'resolve', false)());
                                        } catch (J$e) {
                                            J$.Ex(1419009, J$e);
                                        } finally {
                                            if (J$.Fr(1419017))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function _compileAsync(schemaObj) {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(1418817, arguments.callee, this, arguments);
                                            function loadMissingSchema(e) {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1418745, arguments.callee, this, arguments);
                                                            function removePromise() {
                                                                jalangiLabel6:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1418633, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1418641, 'arguments', arguments, true, false, false);
                                                                            J$.B(184010, 'delete', J$.G(1418617, J$.R(1418609, 'self', self, false, false), '_loadingSchemas'), J$.R(1418625, 'ref', ref, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(1419073, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1419081))
                                                                                continue jalangiLabel6;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }
                                                            function added(ref) {
                                                                jalangiLabel7:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1418721, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1418729, 'arguments', arguments, true, false, false);
                                                                            ref = J$.N(1418737, 'ref', ref, true, false, false);
                                                                            return J$.Rt(1418713, J$.C(84656, J$.G(1418673, J$.G(1418657, J$.R(1418649, 'self', self, false, false), '_refs'), J$.R(1418665, 'ref', ref, false, false))) ? J$._() : J$.G(1418705, J$.G(1418689, J$.R(1418681, 'self', self, false, false), '_schemas'), J$.R(1418697, 'ref', ref, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(1419089, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1419097))
                                                                                continue jalangiLabel7;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }
                                                            arguments = J$.N(1418753, 'arguments', arguments, true, false, false);
                                                            e = J$.N(1418761, 'e', e, true, false, false);
                                                            J$.N(1418769, 'ref', ref, false, false, false);
                                                            J$.N(1418777, 'schemaPromise', schemaPromise, false, false, false);
                                                            removePromise = J$.N(1418793, 'removePromise', J$.T(1418785, removePromise, 12, false), true, false, false);
                                                            added = J$.N(1418809, 'added', J$.T(1418801, added, 12, false), true, false, false);
                                                            var ref = J$.W(1418081, 'ref', J$.G(1418073, J$.R(1418065, 'e', e, false, false), 'missingSchema'), ref, false, false);
                                                            if (J$.C(84624, J$.F(1418105, J$.R(1418089, 'added', added, false, false), false)(J$.R(1418097, 'ref', ref, false, false))))
                                                                throw J$.F(1418169, J$.I(typeof Error === 'undefined' ? Error = J$.R(1418113, 'Error', undefined, true, true) : Error = J$.R(1418113, 'Error', Error, true, true)), true)(J$.B(183978, '+', J$.B(183970, '+', J$.B(183962, '+', J$.B(183954, '+', J$.T(1418121, 'Schema ', 21, false), J$.R(1418129, 'ref', ref, false, false)), J$.T(1418137, ' is loaded but ', 21, false)), J$.G(1418153, J$.R(1418145, 'e', e, false, false), 'missingRef')), J$.T(1418161, ' cannot be resolved', 21, false)));
                                                            var schemaPromise = J$.W(1418209, 'schemaPromise', J$.G(1418201, J$.G(1418185, J$.R(1418177, 'self', self, false, false), '_loadingSchemas'), J$.R(1418193, 'ref', ref, false, false)), schemaPromise, false, false);
                                                            if (J$.C(84632, J$.U(183986, '!', J$.R(1418217, 'schemaPromise', schemaPromise, false, false)))) {
                                                                schemaPromise = J$.W(1418289, 'schemaPromise', J$.P(1418281, J$.G(1418233, J$.R(1418225, 'self', self, false, false), '_loadingSchemas'), J$.R(1418241, 'ref', ref, false, false), J$.M(1418273, J$.G(1418257, J$.R(1418249, 'self', self, false, false), '_opts'), 'loadSchema', false)(J$.R(1418265, 'ref', ref, false, false))), schemaPromise, false, false);
                                                                J$.M(1418321, J$.R(1418297, 'schemaPromise', schemaPromise, false, false), 'then', false)(J$.R(1418305, 'removePromise', removePromise, false, false), J$.R(1418313, 'removePromise', removePromise, false, false));
                                                            }
                                                            return J$.Rt(1418601, J$.M(1418593, J$.M(1418529, J$.R(1418329, 'schemaPromise', schemaPromise, false, false), 'then', false)(J$.T(1418521, function (sch) {
                                                                jalangiLabel4:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1418497, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1418505, 'arguments', arguments, true, false, false);
                                                                            sch = J$.N(1418513, 'sch', sch, true, false, false);
                                                                            if (J$.C(84648, J$.U(183994, '!', J$.F(1418353, J$.R(1418337, 'added', added, false, false), false)(J$.R(1418345, 'ref', ref, false, false))))) {
                                                                                return J$.Rt(1418489, J$.M(1418481, J$.F(1418377, J$.R(1418361, 'loadMetaSchemaOf', loadMetaSchemaOf, false, false), false)(J$.R(1418369, 'sch', sch, false, false)), 'then', false)(J$.T(1418473, function () {
                                                                                    jalangiLabel3:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(1418457, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(1418465, 'arguments', arguments, true, false, false);
                                                                                                if (J$.C(84640, J$.U(184002, '!', J$.F(1418401, J$.R(1418385, 'added', added, false, false), false)(J$.R(1418393, 'ref', ref, false, false)))))
                                                                                                    J$.M(1418449, J$.R(1418409, 'self', self, false, false), 'addSchema', false)(J$.R(1418417, 'sch', sch, false, false), J$.R(1418425, 'ref', ref, false, false), J$.T(1418433, undefined, 24, false), J$.R(1418441, 'meta', meta, false, false));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(1419025, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(1419033))
                                                                                                    continue jalangiLabel3;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false)));
                                                                            }
                                                                        } catch (J$e) {
                                                                            J$.Ex(1419041, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1419049))
                                                                                continue jalangiLabel4;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'then', false)(J$.T(1418585, function () {
                                                                jalangiLabel5:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1418569, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1418577, 'arguments', arguments, true, false, false);
                                                                            return J$.Rt(1418561, J$.F(1418553, J$.R(1418537, '_compileAsync', _compileAsync, false, false), false)(J$.R(1418545, 'schemaObj', schemaObj, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(1419057, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1419065))
                                                                                continue jalangiLabel5;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(1419105, J$e);
                                                        } finally {
                                                            if (J$.Fr(1419113))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(1418825, 'arguments', arguments, true, false, false);
                                            schemaObj = J$.N(1418833, 'schemaObj', schemaObj, true, false, false);
                                            loadMissingSchema = J$.N(1418849, 'loadMissingSchema', J$.T(1418841, loadMissingSchema, 12, false), true, false, false);
                                            try {
                                                return J$.Rt(1417993, J$.M(1417985, J$.R(1417969, 'self', self, false, false), '_compile', false)(J$.R(1417977, 'schemaObj', schemaObj, false, false)));
                                            } catch (e) {
                                                J$.N(1418057, 'e', e, false, false, true);
                                                if (J$.C(84616, J$.B(183946, 'instanceof', J$.R(1418001, 'e', e, false, false), J$.R(1418009, 'MissingRefError', MissingRefError, false, true))))
                                                    return J$.Rt(1418041, J$.F(1418033, J$.R(1418017, 'loadMissingSchema', loadMissingSchema, false, false), false)(J$.R(1418025, 'e', e, false, false)));
                                                throw J$.R(1418049, 'e', e, false, false);
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1419121, J$e);
                                        } finally {
                                            if (J$.Fr(1419129))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1418865, 'arguments', arguments, true, false, false);
                            schema = J$.N(1418873, 'schema', schema, true, false, false);
                            meta = J$.N(1418881, 'meta', meta, true, false, false);
                            callback = J$.N(1418889, 'callback', callback, true, false, false);
                            J$.N(1418897, 'self', self, false, false, false);
                            J$.N(1418905, 'p', p, false, false, false);
                            loadMetaSchemaOf = J$.N(1418921, 'loadMetaSchemaOf', J$.T(1418913, loadMetaSchemaOf, 12, false), true, false, false);
                            _compileAsync = J$.N(1418937, '_compileAsync', J$.T(1418929, _compileAsync, 12, false), true, false, false);
                            var self = J$.W(1417417, 'self', J$.R(1417409, 'this', this, false, false), self, false, false);
                            if (J$.C(84568, J$.B(183914, '!=', J$.U(183906, 'typeof', J$.G(1417441, J$.G(1417433, J$.R(1417425, 'this', this, false, false), '_opts'), 'loadSchema')), J$.T(1417449, 'function', 21, false))))
                                throw J$.F(1417473, J$.I(typeof Error === 'undefined' ? Error = J$.R(1417457, 'Error', undefined, true, true) : Error = J$.R(1417457, 'Error', Error, true, true)), true)(J$.T(1417465, 'options.loadSchema should be a function', 21, false));
                            if (J$.C(84576, J$.B(183930, '==', J$.U(183922, 'typeof', J$.R(1417481, 'meta', meta, false, false)), J$.T(1417489, 'function', 21, false)))) {
                                callback = J$.W(1417505, 'callback', J$.R(1417497, 'meta', meta, false, false), callback, false, false);
                                meta = J$.W(1417521, 'meta', J$.T(1417513, undefined, 24, false), meta, false, false);
                            }
                            var p = J$.W(1417689, 'p', J$.M(1417681, J$.F(1417545, J$.R(1417529, 'loadMetaSchemaOf', loadMetaSchemaOf, false, false), false)(J$.R(1417537, 'schema', schema, false, false)), 'then', false)(J$.T(1417673, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(1417649, arguments.callee, this, arguments);
                                            arguments = J$.N(1417657, 'arguments', arguments, true, false, false);
                                            J$.N(1417665, 'schemaObj', schemaObj, false, false, false);
                                            var schemaObj = J$.W(1417593, 'schemaObj', J$.M(1417585, J$.R(1417553, 'self', self, false, false), '_addSchema', false)(J$.R(1417561, 'schema', schema, false, false), J$.T(1417569, undefined, 24, false), J$.R(1417577, 'meta', meta, false, false)), schemaObj, false, false);
                                            return J$.Rt(1417641, J$.C(84584, J$.G(1417609, J$.R(1417601, 'schemaObj', schemaObj, false, false), 'validate')) ? J$._() : J$.F(1417633, J$.R(1417617, '_compileAsync', _compileAsync, false, false), false)(J$.R(1417625, 'schemaObj', schemaObj, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(1418977, J$e);
                                        } finally {
                                            if (J$.Fr(1418985))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), p, false, false);
                            if (J$.C(84592, J$.R(1417697, 'callback', callback, false, false))) {
                                J$.M(1417785, J$.R(1417705, 'p', p, false, false), 'then', false)(J$.T(1417769, function (v) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1417745, arguments.callee, this, arguments);
                                                arguments = J$.N(1417753, 'arguments', arguments, true, false, false);
                                                v = J$.N(1417761, 'v', v, true, false, false);
                                                J$.F(1417737, J$.R(1417713, 'callback', callback, false, false), false)(J$.T(1417721, null, 25, false), J$.R(1417729, 'v', v, false, false));
                                            } catch (J$e) {
                                                J$.Ex(1418993, J$e);
                                            } finally {
                                                if (J$.Fr(1419001))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.R(1417777, 'callback', callback, false, false));
                            }
                            return J$.Rt(1417801, J$.R(1417793, 'p', p, false, false));
                        } catch (J$e) {
                            J$.Ex(1419137, J$e);
                        } finally {
                            if (J$.Fr(1419145))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1418953, 'MissingRefError', MissingRefError, false, false, false);
            compileAsync = J$.N(1418969, 'compileAsync', J$.T(1418961, compileAsync, 12, false), true, false, false);
            J$.T(1417289, 'use strict', 21, false);
            J$.F(1417313, J$.I(typeof require === 'undefined' ? require = J$.R(1417297, 'require', undefined, true, true) : require = J$.R(1417297, 'require', require, true, true)), false)(J$.T(1417305, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1417337, J$.I(typeof require === 'undefined' ? require = J$.R(1417321, 'require', undefined, true, true) : require = J$.R(1417321, 'require', require, true, true)), false)(J$.T(1417329, 'core-js/modules/es.promise', 21, false));
            var MissingRefError = J$.W(1417377, 'MissingRefError', J$.G(1417369, J$.F(1417361, J$.I(typeof require === 'undefined' ? require = J$.R(1417345, 'require', undefined, true, true) : require = J$.R(1417345, 'require', require, true, true)), false)(J$.T(1417353, './error_classes', 21, false)), 'MissingRef'), MissingRefError, false, true);
            J$.P(1417401, J$.I(typeof module === 'undefined' ? module = J$.R(1417385, 'module', undefined, true, true) : module = J$.R(1417385, 'module', module, true, true)), 'exports', J$.R(1417393, 'compileAsync', compileAsync, false, true));
        } catch (J$e) {
            J$.Ex(1419153, J$e);
        } finally {
            if (J$.Sr(1419161))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

