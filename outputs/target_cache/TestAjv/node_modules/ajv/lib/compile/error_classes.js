J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(5203209, '/home/james/nodejs/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/compile/error_classes.js');
            function ValidationError(errors) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5202761, arguments.callee, this, arguments);
                            arguments = J$.N(5202769, 'arguments', arguments, true, false, false);
                            errors = J$.N(5202777, 'errors', errors, true, false, false);
                            J$.P(5202689, J$.R(5202673, 'this', this, false, false), 'message', J$.T(5202681, 'validation failed', 21, false));
                            J$.P(5202713, J$.R(5202697, 'this', this, false, false), 'errors', J$.R(5202705, 'errors', errors, false, false));
                            J$.P(5202753, J$.R(5202721, 'this', this, false, false), 'ajv', J$.P(5202745, J$.R(5202729, 'this', this, false, false), 'validation', J$.T(5202737, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(5203273, J$e);
                        } finally {
                            if (J$.Fr(5203281))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function MissingRefError(baseId, ref, message) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5203049, arguments.callee, this, arguments);
                            arguments = J$.N(5203057, 'arguments', arguments, true, false, false);
                            baseId = J$.N(5203065, 'baseId', baseId, true, false, false);
                            ref = J$.N(5203073, 'ref', ref, true, false, false);
                            message = J$.N(5203081, 'message', message, true, false, false);
                            J$.P(5202929, J$.R(5202881, 'this', this, false, false), 'message', J$.C(281184, J$.R(5202889, 'message', message, false, false)) ? J$._() : J$.M(5202921, J$.R(5202897, 'MissingRefError', MissingRefError, false, true), 'message', false)(J$.R(5202905, 'baseId', baseId, false, false), J$.R(5202913, 'ref', ref, false, false)));
                            J$.P(5202977, J$.R(5202937, 'this', this, false, false), 'missingRef', J$.M(5202969, J$.R(5202945, 'resolve', resolve, false, true), 'url', false)(J$.R(5202953, 'baseId', baseId, false, false), J$.R(5202961, 'ref', ref, false, false)));
                            J$.P(5203041, J$.R(5202985, 'this', this, false, false), 'missingSchema', J$.M(5203033, J$.R(5202993, 'resolve', resolve, false, true), 'normalizeId', false)(J$.M(5203025, J$.R(5203001, 'resolve', resolve, false, true), 'fullPath', false)(J$.G(5203017, J$.R(5203009, 'this', this, false, false), 'missingRef'))));
                        } catch (J$e) {
                            J$.Ex(5203305, J$e);
                        } finally {
                            if (J$.Fr(5203313))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function errorSubclass(Subclass) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5203185, arguments.callee, this, arguments);
                            arguments = J$.N(5203193, 'arguments', arguments, true, false, false);
                            Subclass = J$.N(5203201, 'Subclass', Subclass, true, false, false);
                            J$.P(5203129, J$.R(5203089, 'Subclass', Subclass, false, false), 'prototype', J$.M(5203121, J$.I(typeof Object === 'undefined' ? Object = J$.R(5203097, 'Object', undefined, true, true) : Object = J$.R(5203097, 'Object', Object, true, true)), 'create', false)(J$.G(5203113, J$.I(typeof Error === 'undefined' ? Error = J$.R(5203105, 'Error', undefined, true, true) : Error = J$.R(5203105, 'Error', Error, true, true)), 'prototype')));
                            J$.P(5203161, J$.G(5203145, J$.R(5203137, 'Subclass', Subclass, false, false), 'prototype'), 'constructor', J$.R(5203153, 'Subclass', Subclass, false, false));
                            return J$.Rt(5203177, J$.R(5203169, 'Subclass', Subclass, false, false));
                        } catch (J$e) {
                            J$.Ex(5203321, J$e);
                        } finally {
                            if (J$.Fr(5203329))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5203217, 'resolve', resolve, false, false, false);
            ValidationError = J$.N(5203233, 'ValidationError', J$.T(5203225, ValidationError, 12, false), true, false, false);
            MissingRefError = J$.N(5203249, 'MissingRefError', J$.T(5203241, MissingRefError, 12, false), true, false, false);
            errorSubclass = J$.N(5203265, 'errorSubclass', J$.T(5203257, errorSubclass, 12, false), true, false, false);
            J$.T(5202537, 'use strict', 21, false);
            J$.F(5202561, J$.I(typeof require === 'undefined' ? require = J$.R(5202545, 'require', undefined, true, true) : require = J$.R(5202545, 'require', require, true, true)), false)(J$.T(5202553, 'core-js/modules/es.object.create', 21, false));
            var resolve = J$.W(5202593, 'resolve', J$.F(5202585, J$.I(typeof require === 'undefined' ? require = J$.R(5202569, 'require', undefined, true, true) : require = J$.R(5202569, 'require', require, true, true)), false)(J$.T(5202577, './resolve', 21, false)), resolve, false, true);
            J$.P(5202665, J$.I(typeof module === 'undefined' ? module = J$.R(5202601, 'module', undefined, true, true) : module = J$.R(5202601, 'module', module, true, true)), 'exports', J$.T(5202657, {
                Validation: J$.F(5202625, J$.R(5202609, 'errorSubclass', errorSubclass, false, true), false)(J$.R(5202617, 'ValidationError', ValidationError, false, true)),
                MissingRef: J$.F(5202649, J$.R(5202633, 'errorSubclass', errorSubclass, false, true), false)(J$.R(5202641, 'MissingRefError', MissingRefError, false, true))
            }, 11, false));
            J$.P(5202873, J$.R(5202785, 'MissingRefError', MissingRefError, false, true), 'message', J$.T(5202865, function (baseId, ref) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5202833, arguments.callee, this, arguments);
                            arguments = J$.N(5202841, 'arguments', arguments, true, false, false);
                            baseId = J$.N(5202849, 'baseId', baseId, true, false, false);
                            ref = J$.N(5202857, 'ref', ref, true, false, false);
                            return J$.Rt(5202825, J$.B(531450, '+', J$.B(531442, '+', J$.B(531434, '+', J$.T(5202793, 'can\'t resolve reference ', 21, false), J$.R(5202801, 'ref', ref, false, false)), J$.T(5202809, ' from id ', 21, false)), J$.R(5202817, 'baseId', baseId, false, false)));
                        } catch (J$e) {
                            J$.Ex(5203289, J$e);
                        } finally {
                            if (J$.Fr(5203297))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5203337, J$e);
        } finally {
            if (J$.Sr(5203345))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

