J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(1419913, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/compile/error_classes.js');
            function ValidationError(errors) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1419465, arguments.callee, this, arguments);
                            arguments = J$.N(1419473, 'arguments', arguments, true, false, false);
                            errors = J$.N(1419481, 'errors', errors, true, false, false);
                            J$.P(1419393, J$.R(1419377, 'this', this, false, false), 'message', J$.T(1419385, 'validation failed', 21, false));
                            J$.P(1419417, J$.R(1419401, 'this', this, false, false), 'errors', J$.R(1419409, 'errors', errors, false, false));
                            J$.P(1419457, J$.R(1419425, 'this', this, false, false), 'ajv', J$.P(1419449, J$.R(1419433, 'this', this, false, false), 'validation', J$.T(1419441, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1419977, J$e);
                        } finally {
                            if (J$.Fr(1419985))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function MissingRefError(baseId, ref, message) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1419753, arguments.callee, this, arguments);
                            arguments = J$.N(1419761, 'arguments', arguments, true, false, false);
                            baseId = J$.N(1419769, 'baseId', baseId, true, false, false);
                            ref = J$.N(1419777, 'ref', ref, true, false, false);
                            message = J$.N(1419785, 'message', message, true, false, false);
                            J$.P(1419633, J$.R(1419585, 'this', this, false, false), 'message', J$.C(84664, J$.R(1419593, 'message', message, false, false)) ? J$._() : J$.M(1419625, J$.R(1419601, 'MissingRefError', MissingRefError, false, true), 'message', false)(J$.R(1419609, 'baseId', baseId, false, false), J$.R(1419617, 'ref', ref, false, false)));
                            J$.P(1419681, J$.R(1419641, 'this', this, false, false), 'missingRef', J$.M(1419673, J$.R(1419649, 'resolve', resolve, false, true), 'url', false)(J$.R(1419657, 'baseId', baseId, false, false), J$.R(1419665, 'ref', ref, false, false)));
                            J$.P(1419745, J$.R(1419689, 'this', this, false, false), 'missingSchema', J$.M(1419737, J$.R(1419697, 'resolve', resolve, false, true), 'normalizeId', false)(J$.M(1419729, J$.R(1419705, 'resolve', resolve, false, true), 'fullPath', false)(J$.G(1419721, J$.R(1419713, 'this', this, false, false), 'missingRef'))));
                        } catch (J$e) {
                            J$.Ex(1420009, J$e);
                        } finally {
                            if (J$.Fr(1420017))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function errorSubclass(Subclass) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1419889, arguments.callee, this, arguments);
                            arguments = J$.N(1419897, 'arguments', arguments, true, false, false);
                            Subclass = J$.N(1419905, 'Subclass', Subclass, true, false, false);
                            J$.P(1419833, J$.R(1419793, 'Subclass', Subclass, false, false), 'prototype', J$.M(1419825, J$.I(typeof Object === 'undefined' ? Object = J$.R(1419801, 'Object', undefined, true, true) : Object = J$.R(1419801, 'Object', Object, true, true)), 'create', false)(J$.G(1419817, J$.I(typeof Error === 'undefined' ? Error = J$.R(1419809, 'Error', undefined, true, true) : Error = J$.R(1419809, 'Error', Error, true, true)), 'prototype')));
                            J$.P(1419865, J$.G(1419849, J$.R(1419841, 'Subclass', Subclass, false, false), 'prototype'), 'constructor', J$.R(1419857, 'Subclass', Subclass, false, false));
                            return J$.Rt(1419881, J$.R(1419873, 'Subclass', Subclass, false, false));
                        } catch (J$e) {
                            J$.Ex(1420025, J$e);
                        } finally {
                            if (J$.Fr(1420033))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1419921, 'resolve', resolve, false, false, false);
            ValidationError = J$.N(1419937, 'ValidationError', J$.T(1419929, ValidationError, 12, false), true, false, false);
            MissingRefError = J$.N(1419953, 'MissingRefError', J$.T(1419945, MissingRefError, 12, false), true, false, false);
            errorSubclass = J$.N(1419969, 'errorSubclass', J$.T(1419961, errorSubclass, 12, false), true, false, false);
            J$.T(1419241, 'use strict', 21, false);
            J$.F(1419265, J$.I(typeof require === 'undefined' ? require = J$.R(1419249, 'require', undefined, true, true) : require = J$.R(1419249, 'require', require, true, true)), false)(J$.T(1419257, 'core-js/modules/es.object.create', 21, false));
            var resolve = J$.W(1419297, 'resolve', J$.F(1419289, J$.I(typeof require === 'undefined' ? require = J$.R(1419273, 'require', undefined, true, true) : require = J$.R(1419273, 'require', require, true, true)), false)(J$.T(1419281, './resolve', 21, false)), resolve, false, true);
            J$.P(1419369, J$.I(typeof module === 'undefined' ? module = J$.R(1419305, 'module', undefined, true, true) : module = J$.R(1419305, 'module', module, true, true)), 'exports', J$.T(1419361, {
                Validation: J$.F(1419329, J$.R(1419313, 'errorSubclass', errorSubclass, false, true), false)(J$.R(1419321, 'ValidationError', ValidationError, false, true)),
                MissingRef: J$.F(1419353, J$.R(1419337, 'errorSubclass', errorSubclass, false, true), false)(J$.R(1419345, 'MissingRefError', MissingRefError, false, true))
            }, 11, false));
            J$.P(1419577, J$.R(1419489, 'MissingRefError', MissingRefError, false, true), 'message', J$.T(1419569, function (baseId, ref) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1419537, arguments.callee, this, arguments);
                            arguments = J$.N(1419545, 'arguments', arguments, true, false, false);
                            baseId = J$.N(1419553, 'baseId', baseId, true, false, false);
                            ref = J$.N(1419561, 'ref', ref, true, false, false);
                            return J$.Rt(1419529, J$.B(184034, '+', J$.B(184026, '+', J$.B(184018, '+', J$.T(1419497, 'can\'t resolve reference ', 21, false), J$.R(1419505, 'ref', ref, false, false)), J$.T(1419513, ' from id ', 21, false)), J$.R(1419521, 'baseId', baseId, false, false)));
                        } catch (J$e) {
                            J$.Ex(1419993, J$e);
                        } finally {
                            if (J$.Fr(1420001))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1420041, J$e);
        } finally {
            if (J$.Sr(1420049))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

