J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5223985, '/home/james/nodejs/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/compile/schema_obj.js');
            function SchemaObject(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5223961, arguments.callee, this, arguments);
                            arguments = J$.N(5223969, 'arguments', arguments, true, false, false);
                            obj = J$.N(5223977, 'obj', obj, true, false, false);
                            J$.M(5223953, J$.R(5223929, 'util', util, false, true), 'copy', false)(J$.R(5223937, 'obj', obj, false, false), J$.R(5223945, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(5224017, J$e);
                        } finally {
                            if (J$.Fr(5224025))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5223993, 'util', util, false, false, false);
            SchemaObject = J$.N(5224009, 'SchemaObject', J$.T(5224001, SchemaObject, 12, false), true, false, false);
            J$.T(5223865, 'use strict', 21, false);
            var util = J$.W(5223897, 'util', J$.F(5223889, J$.I(typeof require === 'undefined' ? require = J$.R(5223873, 'require', undefined, true, true) : require = J$.R(5223873, 'require', require, true, true)), false)(J$.T(5223881, './util', 21, false)), util, false, true);
            J$.P(5223921, J$.I(typeof module === 'undefined' ? module = J$.R(5223905, 'module', undefined, true, true) : module = J$.R(5223905, 'module', module, true, true)), 'exports', J$.R(5223913, 'SchemaObject', SchemaObject, false, true));
        } catch (J$e) {
            J$.Ex(5224033, J$e);
        } finally {
            if (J$.Sr(5224041))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

