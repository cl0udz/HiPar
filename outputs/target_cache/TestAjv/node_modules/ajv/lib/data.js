J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5232137, '/home/james/nodejs/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/lib/data.js');
            J$.N(5232145, 'KEYWORDS', KEYWORDS, false, false, false);
            J$.T(5231329, 'use strict', 21, false);
            J$.F(5231353, J$.I(typeof require === 'undefined' ? require = J$.R(5231337, 'require', undefined, true, true) : require = J$.R(5231337, 'require', require, true, true)), false)(J$.T(5231345, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(5231377, J$.I(typeof require === 'undefined' ? require = J$.R(5231361, 'require', undefined, true, true) : require = J$.R(5231361, 'require', require, true, true)), false)(J$.T(5231369, 'core-js/modules/es.string.split', 21, false));
            var KEYWORDS = J$.W(5231545, 'KEYWORDS', J$.T(5231537, [
                J$.T(5231385, 'multipleOf', 21, false),
                J$.T(5231393, 'maximum', 21, false),
                J$.T(5231401, 'exclusiveMaximum', 21, false),
                J$.T(5231409, 'minimum', 21, false),
                J$.T(5231417, 'exclusiveMinimum', 21, false),
                J$.T(5231425, 'maxLength', 21, false),
                J$.T(5231433, 'minLength', 21, false),
                J$.T(5231441, 'pattern', 21, false),
                J$.T(5231449, 'additionalItems', 21, false),
                J$.T(5231457, 'maxItems', 21, false),
                J$.T(5231465, 'minItems', 21, false),
                J$.T(5231473, 'uniqueItems', 21, false),
                J$.T(5231481, 'maxProperties', 21, false),
                J$.T(5231489, 'minProperties', 21, false),
                J$.T(5231497, 'required', 21, false),
                J$.T(5231505, 'additionalProperties', 21, false),
                J$.T(5231513, 'enum', 21, false),
                J$.T(5231521, 'format', 21, false),
                J$.T(5231529, 'const', 21, false)
            ], 10, false), KEYWORDS, false, true);
            J$.P(5232129, J$.I(typeof module === 'undefined' ? module = J$.R(5231553, 'module', undefined, true, true) : module = J$.R(5231553, 'module', module, true, true)), 'exports', J$.T(5232121, function (metaSchema, keywordsJsonPointers) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5232041, arguments.callee, this, arguments);
                            arguments = J$.N(5232049, 'arguments', arguments, true, false, false);
                            metaSchema = J$.N(5232057, 'metaSchema', metaSchema, true, false, false);
                            keywordsJsonPointers = J$.N(5232065, 'keywordsJsonPointers', keywordsJsonPointers, true, false, false);
                            J$.N(5232073, 'i', i, false, false, false);
                            J$.N(5232081, 'segments', segments, false, false, false);
                            J$.N(5232089, 'keywords', keywords, false, false, false);
                            J$.N(5232097, 'j', j, false, false, false);
                            J$.N(5232105, 'key', key, false, false, false);
                            J$.N(5232113, 'schema', schema, false, false, false);
                            for (var i = J$.W(5231569, 'i', J$.T(5231561, 0, 22, false), i, false, false); J$.C(283016, J$.B(534186, '<', J$.R(5231577, 'i', i, false, false), J$.G(5231593, J$.R(5231585, 'keywordsJsonPointers', keywordsJsonPointers, false, false), 'length'))); J$.B(534210, '-', i = J$.W(5231609, 'i', J$.B(534202, '+', J$.U(534194, '+', J$.R(5231601, 'i', i, false, false)), 1), i, false, false), 1)) {
                                metaSchema = J$.W(5231657, 'metaSchema', J$.M(5231649, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(5231617, 'JSON', undefined, true, true) : JSON = J$.R(5231617, 'JSON', JSON, true, true)), 'parse', false)(J$.M(5231641, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(5231625, 'JSON', undefined, true, true) : JSON = J$.R(5231625, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(5231633, 'metaSchema', metaSchema, false, false))), metaSchema, false, false);
                                var segments = J$.W(5231705, 'segments', J$.M(5231697, J$.G(5231681, J$.R(5231665, 'keywordsJsonPointers', keywordsJsonPointers, false, false), J$.R(5231673, 'i', i, false, false)), 'split', false)(J$.T(5231689, '/', 21, false)), segments, false, false);
                                var keywords = J$.W(5231721, 'keywords', J$.R(5231713, 'metaSchema', metaSchema, false, false), keywords, false, false);
                                var j;
                                for (j = J$.W(5231737, 'j', J$.T(5231729, 1, 22, false), j, false, false); J$.C(282992, J$.B(534218, '<', J$.R(5231745, 'j', j, false, false), J$.G(5231761, J$.R(5231753, 'segments', segments, false, false), 'length'))); J$.B(534242, '-', j = J$.W(5231777, 'j', J$.B(534234, '+', J$.U(534226, '+', J$.R(5231769, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    keywords = J$.W(5231825, 'keywords', J$.G(5231817, J$.R(5231785, 'keywords', keywords, false, false), J$.G(5231809, J$.R(5231793, 'segments', segments, false, false), J$.R(5231801, 'j', j, false, false))), keywords, false, false);
                                }
                                for (j = J$.W(5231841, 'j', J$.T(5231833, 0, 22, false), j, false, false); J$.C(283008, J$.B(534250, '<', J$.R(5231849, 'j', j, false, false), J$.G(5231865, J$.R(5231857, 'KEYWORDS', KEYWORDS, false, true), 'length'))); J$.B(534274, '-', j = J$.W(5231881, 'j', J$.B(534266, '+', J$.U(534258, '+', J$.R(5231873, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    var key = J$.W(5231913, 'key', J$.G(5231905, J$.R(5231889, 'KEYWORDS', KEYWORDS, false, true), J$.R(5231897, 'j', j, false, false)), key, false, false);
                                    var schema = J$.W(5231945, 'schema', J$.G(5231937, J$.R(5231921, 'keywords', keywords, false, false), J$.R(5231929, 'key', key, false, false)), schema, false, false);
                                    if (J$.C(283000, J$.R(5231953, 'schema', schema, false, false))) {
                                        J$.P(5232017, J$.R(5231961, 'keywords', keywords, false, false), J$.R(5231969, 'key', key, false, false), J$.T(5232009, {
                                            anyOf: J$.T(5232001, [
                                                J$.R(5231977, 'schema', schema, false, false),
                                                J$.T(5231993, { $ref: J$.T(5231985, 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#', 21, false) }, 11, false)
                                            ], 10, false)
                                        }, 11, false));
                                    }
                                }
                            }
                            return J$.Rt(5232033, J$.R(5232025, 'metaSchema', metaSchema, false, false));
                        } catch (J$e) {
                            J$.Ex(5232153, J$e);
                        } finally {
                            if (J$.Fr(5232161))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5232169, J$e);
        } finally {
            if (J$.Sr(5232177))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

