J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1046521, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestAjv/node_modules/ajv/.tonic_example.js');
            function test(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1046489, arguments.callee, this, arguments);
                            arguments = J$.N(1046497, 'arguments', arguments, true, false, false);
                            data = J$.N(1046505, 'data', data, true, false, false);
                            J$.N(1046513, 'valid', valid, false, false, false);
                            var valid = J$.W(1046393, 'valid', J$.F(1046385, J$.R(1046369, 'validate', validate, false, true), false)(J$.R(1046377, 'data', data, false, false)), valid, false, false);
                            if (J$.C(59568, J$.R(1046401, 'valid', valid, false, false)))
                                J$.M(1046425, J$.I(typeof console === 'undefined' ? console = J$.R(1046409, 'console', undefined, true, true) : console = J$.R(1046409, 'console', console, true, true)), 'log', false)(J$.T(1046417, 'Valid!', 21, false));
                            else
                                J$.M(1046481, J$.I(typeof console === 'undefined' ? console = J$.R(1046433, 'console', undefined, true, true) : console = J$.R(1046433, 'console', console, true, true)), 'log', false)(J$.B(105026, '+', J$.T(1046441, 'Invalid: ', 21, false), J$.M(1046473, J$.R(1046449, 'ajv', ajv, false, true), 'errorsText', false)(J$.G(1046465, J$.R(1046457, 'validate', validate, false, true), 'errors'))));
                        } catch (J$e) {
                            J$.Ex(1046577, J$e);
                        } finally {
                            if (J$.Fr(1046585))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1046529, 'Ajv', Ajv, false, false, false);
            J$.N(1046537, 'ajv', ajv, false, false, false);
            J$.N(1046545, 'schema', schema, false, false, false);
            J$.N(1046553, 'validate', validate, false, false, false);
            test = J$.N(1046569, 'test', J$.T(1046561, test, 12, false), true, false, false);
            var Ajv = J$.W(1046145, 'Ajv', J$.F(1046137, J$.I(typeof require === 'undefined' ? require = J$.R(1046121, 'require', undefined, true, true) : require = J$.R(1046121, 'require', require, true, true)), false)(J$.T(1046129, 'ajv', 21, false)), Ajv, false, true);
            var ajv = J$.W(1046185, 'ajv', J$.F(1046177, J$.R(1046153, 'Ajv', Ajv, false, true), true)(J$.T(1046169, { allErrors: J$.T(1046161, true, 23, false) }, 11, false)), ajv, false, true);
            var schema = J$.W(1046249, 'schema', J$.T(1046241, {
                'properties': J$.T(1046233, {
                    'foo': J$.T(1046201, { 'type': J$.T(1046193, 'string', 21, false) }, 11, false),
                    'bar': J$.T(1046225, {
                        'type': J$.T(1046209, 'number', 21, false),
                        'maximum': J$.T(1046217, 3, 22, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            var validate = J$.W(1046281, 'validate', J$.M(1046273, J$.R(1046257, 'ajv', ajv, false, true), 'compile', false)(J$.R(1046265, 'schema', schema, false, true)), validate, false, true);
            J$.F(1046321, J$.R(1046289, 'test', test, false, true), false)(J$.T(1046313, {
                'foo': J$.T(1046297, 'abc', 21, false),
                'bar': J$.T(1046305, 2, 22, false)
            }, 11, false));
            J$.F(1046361, J$.R(1046329, 'test', test, false, true), false)(J$.T(1046353, {
                'foo': J$.T(1046337, 2, 22, false),
                'bar': J$.T(1046345, 4, 22, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(1046593, J$e);
        } finally {
            if (J$.Sr(1046601))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

