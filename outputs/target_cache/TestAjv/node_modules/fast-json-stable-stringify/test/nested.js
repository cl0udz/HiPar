J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(5346169, '/home/james/nodejs/HiPar/outputs/target_cache/TestAjv/node_modules/fast-json-stable-stringify/test/nested.js');
            J$.N(5346177, 'test', test, false, false, false);
            J$.N(5346185, 'stringify', stringify, false, false, false);
            J$.T(5344921, 'use strict', 21, false);
            J$.F(5344945, J$.I(typeof require === 'undefined' ? require = J$.R(5344929, 'require', undefined, true, true) : require = J$.R(5344929, 'require', require, true, true)), false)(J$.T(5344937, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(5344969, J$.I(typeof require === 'undefined' ? require = J$.R(5344953, 'require', undefined, true, true) : require = J$.R(5344953, 'require', require, true, true)), false)(J$.T(5344961, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(5344993, J$.I(typeof require === 'undefined' ? require = J$.R(5344977, 'require', undefined, true, true) : require = J$.R(5344977, 'require', require, true, true)), false)(J$.T(5344985, 'core-js/modules/es.regexp.to-string', 21, false));
            var test = J$.W(5345025, 'test', J$.F(5345017, J$.I(typeof require === 'undefined' ? require = J$.R(5345001, 'require', undefined, true, true) : require = J$.R(5345001, 'require', require, true, true)), false)(J$.T(5345009, 'tape', 21, false)), test, false, true);
            var stringify = J$.W(5345057, 'stringify', J$.F(5345049, J$.I(typeof require === 'undefined' ? require = J$.R(5345033, 'require', undefined, true, true) : require = J$.R(5345033, 'require', require, true, true)), false)(J$.T(5345041, '../', 21, false)), stringify, false, true);
            J$.F(5345273, J$.R(5345065, 'test', test, false, true), false)(J$.T(5345073, 'nested', 21, false), J$.T(5345265, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5345233, arguments.callee, this, arguments);
                            arguments = J$.N(5345241, 'arguments', arguments, true, false, false);
                            t = J$.N(5345249, 't', t, true, false, false);
                            J$.N(5345257, 'obj', obj, false, false, false);
                            J$.M(5345097, J$.R(5345081, 't', t, false, false), 'plan', false)(J$.T(5345089, 1, 22, false));
                            var obj = J$.W(5345177, 'obj', J$.T(5345169, {
                                c: J$.T(5345105, 8, 22, false),
                                b: J$.T(5345153, [
                                    J$.T(5345137, {
                                        z: J$.T(5345113, 6, 22, false),
                                        y: J$.T(5345121, 5, 22, false),
                                        x: J$.T(5345129, 4, 22, false)
                                    }, 11, false),
                                    J$.T(5345145, 7, 22, false)
                                ], 10, false),
                                a: J$.T(5345161, 3, 22, false)
                            }, 11, false), obj, false, false);
                            J$.M(5345225, J$.R(5345185, 't', t, false, false), 'equal', false)(J$.F(5345209, J$.R(5345193, 'stringify', stringify, false, true), false)(J$.R(5345201, 'obj', obj, false, false)), J$.T(5345217, '{"a":3,"b":[{"x":4,"y":5,"z":6},7],"c":8}', 21, false));
                        } catch (J$e) {
                            J$.Ex(5346193, J$e);
                        } finally {
                            if (J$.Fr(5346201))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(5345521, J$.R(5345281, 'test', test, false, true), false)(J$.T(5345289, 'cyclic (default)', 21, false), J$.T(5345513, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5345473, arguments.callee, this, arguments);
                            arguments = J$.N(5345481, 'arguments', arguments, true, false, false);
                            t = J$.N(5345489, 't', t, true, false, false);
                            J$.N(5345497, 'one', one, false, false, false);
                            J$.N(5345505, 'two', two, false, false, false);
                            J$.M(5345313, J$.R(5345297, 't', t, false, false), 'plan', false)(J$.T(5345305, 1, 22, false));
                            var one = J$.W(5345337, 'one', J$.T(5345329, { a: J$.T(5345321, 1, 22, false) }, 11, false), one, false, false);
                            var two = J$.W(5345369, 'two', J$.T(5345361, {
                                a: J$.T(5345345, 2, 22, false),
                                one: J$.R(5345353, 'one', one, false, false)
                            }, 11, false), two, false, false);
                            J$.P(5345393, J$.R(5345377, 'one', one, false, false), 'two', J$.R(5345385, 'two', two, false, false));
                            try {
                                J$.F(5345417, J$.R(5345401, 'stringify', stringify, false, true), false)(J$.R(5345409, 'one', one, false, false));
                            } catch (ex) {
                                J$.N(5345465, 'ex', ex, false, false, true);
                                J$.M(5345457, J$.R(5345425, 't', t, false, false), 'equal', false)(J$.M(5345441, J$.R(5345433, 'ex', ex, false, false), 'toString', false)(), J$.T(5345449, 'TypeError: Converting circular structure to JSON', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(5346209, J$e);
                        } finally {
                            if (J$.Fr(5346217))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(5345761, J$.R(5345529, 'test', test, false, true), false)(J$.T(5345537, 'cyclic (specifically allowed)', 21, false), J$.T(5345753, function (t) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5345713, arguments.callee, this, arguments);
                            arguments = J$.N(5345721, 'arguments', arguments, true, false, false);
                            t = J$.N(5345729, 't', t, true, false, false);
                            J$.N(5345737, 'one', one, false, false, false);
                            J$.N(5345745, 'two', two, false, false, false);
                            J$.M(5345561, J$.R(5345545, 't', t, false, false), 'plan', false)(J$.T(5345553, 1, 22, false));
                            var one = J$.W(5345585, 'one', J$.T(5345577, { a: J$.T(5345569, 1, 22, false) }, 11, false), one, false, false);
                            var two = J$.W(5345617, 'two', J$.T(5345609, {
                                a: J$.T(5345593, 2, 22, false),
                                one: J$.R(5345601, 'one', one, false, false)
                            }, 11, false), two, false, false);
                            J$.P(5345641, J$.R(5345625, 'one', one, false, false), 'two', J$.R(5345633, 'two', two, false, false));
                            J$.M(5345705, J$.R(5345649, 't', t, false, false), 'equal', false)(J$.F(5345689, J$.R(5345657, 'stringify', stringify, false, true), false)(J$.R(5345665, 'one', one, false, false), J$.T(5345681, { cycles: J$.T(5345673, true, 23, false) }, 11, false)), J$.T(5345697, '{"a":1,"two":{"a":2,"one":"__cycle__"}}', 21, false));
                        } catch (J$e) {
                            J$.Ex(5346225, J$e);
                        } finally {
                            if (J$.Fr(5346233))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(5345961, J$.R(5345769, 'test', test, false, true), false)(J$.T(5345777, 'repeated non-cyclic value', 21, false), J$.T(5345953, function (t) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5345913, arguments.callee, this, arguments);
                            arguments = J$.N(5345921, 'arguments', arguments, true, false, false);
                            t = J$.N(5345929, 't', t, true, false, false);
                            J$.N(5345937, 'one', one, false, false, false);
                            J$.N(5345945, 'two', two, false, false, false);
                            J$.M(5345801, J$.R(5345785, 't', t, false, false), 'plan', false)(J$.T(5345793, 1, 22, false));
                            var one = J$.W(5345825, 'one', J$.T(5345817, { x: J$.T(5345809, 1, 22, false) }, 11, false), one, false, false);
                            var two = J$.W(5345857, 'two', J$.T(5345849, {
                                a: J$.R(5345833, 'one', one, false, false),
                                b: J$.R(5345841, 'one', one, false, false)
                            }, 11, false), two, false, false);
                            J$.M(5345905, J$.R(5345865, 't', t, false, false), 'equal', false)(J$.F(5345889, J$.R(5345873, 'stringify', stringify, false, true), false)(J$.R(5345881, 'two', two, false, false)), J$.T(5345897, '{"a":{"x":1},"b":{"x":1}}', 21, false));
                        } catch (J$e) {
                            J$.Ex(5346241, J$e);
                        } finally {
                            if (J$.Fr(5346249))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(5346161, J$.R(5345969, 'test', test, false, true), false)(J$.T(5345977, 'acyclic but with reused obj-property pointers', 21, false), J$.T(5346153, function (t) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5346113, arguments.callee, this, arguments);
                            arguments = J$.N(5346121, 'arguments', arguments, true, false, false);
                            t = J$.N(5346129, 't', t, true, false, false);
                            J$.N(5346137, 'x', x, false, false, false);
                            J$.N(5346145, 'y', y, false, false, false);
                            J$.M(5346001, J$.R(5345985, 't', t, false, false), 'plan', false)(J$.T(5345993, 1, 22, false));
                            var x = J$.W(5346025, 'x', J$.T(5346017, { a: J$.T(5346009, 1, 22, false) }, 11, false), x, false, false);
                            var y = J$.W(5346057, 'y', J$.T(5346049, {
                                b: J$.R(5346033, 'x', x, false, false),
                                c: J$.R(5346041, 'x', x, false, false)
                            }, 11, false), y, false, false);
                            J$.M(5346105, J$.R(5346065, 't', t, false, false), 'equal', false)(J$.F(5346089, J$.R(5346073, 'stringify', stringify, false, true), false)(J$.R(5346081, 'y', y, false, false)), J$.T(5346097, '{"b":{"a":1},"c":{"a":1}}', 21, false));
                        } catch (J$e) {
                            J$.Ex(5346257, J$e);
                        } finally {
                            if (J$.Fr(5346265))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5346273, J$e);
        } finally {
            if (J$.Sr(5346281))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

