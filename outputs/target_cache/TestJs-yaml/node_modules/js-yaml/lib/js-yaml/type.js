J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(3615577, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type.js');
            function compileStyleAliases(map) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3614713, arguments.callee, this, arguments);
                            arguments = J$.N(3614721, 'arguments', arguments, true, false, false);
                            map = J$.N(3614729, 'map', map, true, false, false);
                            J$.N(3614737, 'result', result, false, false, false);
                            var result = J$.W(3614497, 'result', J$.T(3614489, {}, 11, false), result, false, false);
                            if (J$.C(190504, J$.B(398098, '!==', J$.R(3614505, 'map', map, false, false), J$.T(3614513, null, 25, false)))) {
                                J$.M(3614689, J$.M(3614537, J$.I(typeof Object === 'undefined' ? Object = J$.R(3614521, 'Object', undefined, true, true) : Object = J$.R(3614521, 'Object', Object, true, true)), 'keys', false)(J$.R(3614529, 'map', map, false, false)), 'forEach', false)(J$.T(3614681, function (style) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(3614657, arguments.callee, this, arguments);
                                                arguments = J$.N(3614665, 'arguments', arguments, true, false, false);
                                                style = J$.N(3614673, 'style', style, true, false, false);
                                                J$.M(3614649, J$.G(3614561, J$.R(3614545, 'map', map, false, false), J$.R(3614553, 'style', style, false, false)), 'forEach', false)(J$.T(3614641, function (alias) {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3614617, arguments.callee, this, arguments);
                                                                arguments = J$.N(3614625, 'arguments', arguments, true, false, false);
                                                                alias = J$.N(3614633, 'alias', alias, true, false, false);
                                                                J$.P(3614609, J$.R(3614569, 'result', result, false, false), J$.F(3614593, J$.I(typeof String === 'undefined' ? String = J$.R(3614577, 'String', undefined, true, true) : String = J$.R(3614577, 'String', String, true, true)), false)(J$.R(3614585, 'alias', alias, false, false)), J$.R(3614601, 'style', style, false, false));
                                                            } catch (J$e) {
                                                                J$.Ex(3615641, J$e);
                                                            } finally {
                                                                if (J$.Fr(3615649))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } catch (J$e) {
                                                J$.Ex(3615657, J$e);
                                            } finally {
                                                if (J$.Fr(3615665))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            return J$.Rt(3614705, J$.R(3614697, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3615673, J$e);
                        } finally {
                            if (J$.Fr(3615681))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Type(tag, options) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(3615521, arguments.callee, this, arguments);
                            arguments = J$.N(3615529, 'arguments', arguments, true, false, false);
                            tag = J$.N(3615537, 'tag', tag, true, false, false);
                            options = J$.N(3615545, 'options', options, true, false, false);
                            options = J$.W(3614761, 'options', J$.C(190512, J$.R(3614745, 'options', options, false, false)) ? J$._() : J$.T(3614753, {}, 11, false), options, false, false);
                            J$.M(3614913, J$.M(3614785, J$.I(typeof Object === 'undefined' ? Object = J$.R(3614769, 'Object', undefined, true, true) : Object = J$.R(3614769, 'Object', Object, true, true)), 'keys', false)(J$.R(3614777, 'options', options, false, false)), 'forEach', false)(J$.T(3614905, function (name) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3614881, arguments.callee, this, arguments);
                                            arguments = J$.N(3614889, 'arguments', arguments, true, false, false);
                                            name = J$.N(3614897, 'name', name, true, false, false);
                                            if (J$.C(190520, J$.B(398114, '===', J$.M(3614809, J$.R(3614793, 'TYPE_CONSTRUCTOR_OPTIONS', TYPE_CONSTRUCTOR_OPTIONS, false, true), 'indexOf', false)(J$.R(3614801, 'name', name, false, false)), J$.U(398106, '-', J$.T(3614817, 1, 22, false))))) {
                                                throw J$.F(3614873, J$.R(3614825, 'YAMLException', YAMLException, false, true), true)(J$.B(398146, '+', J$.B(398138, '+', J$.B(398130, '+', J$.B(398122, '+', J$.T(3614833, 'Unknown option "', 21, false), J$.R(3614841, 'name', name, false, false)), J$.T(3614849, '" is met in definition of "', 21, false)), J$.R(3614857, 'tag', tag, false, false)), J$.T(3614865, '" YAML type.', 21, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(3615689, J$e);
                                        } finally {
                                            if (J$.Fr(3615697))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(3614937, J$.R(3614921, 'this', this, false, false), 'tag', J$.R(3614929, 'tag', tag, false, false));
                            J$.P(3614985, J$.R(3614945, 'this', this, false, false), 'kind', J$.C(190528, J$.G(3614969, J$.R(3614953, 'options', options, false, false), J$.T(3614961, 'kind', 21, false))) ? J$._() : J$.T(3614977, null, 25, false));
                            J$.P(3615065, J$.R(3614993, 'this', this, false, false), 'resolve', J$.C(190536, J$.G(3615017, J$.R(3615001, 'options', options, false, false), J$.T(3615009, 'resolve', 21, false))) ? J$._() : J$.T(3615057, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(3615041, arguments.callee, this, arguments);
                                            arguments = J$.N(3615049, 'arguments', arguments, true, false, false);
                                            return J$.Rt(3615033, J$.T(3615025, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3615705, J$e);
                                        } finally {
                                            if (J$.Fr(3615713))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(3615153, J$.R(3615073, 'this', this, false, false), 'construct', J$.C(190544, J$.G(3615097, J$.R(3615081, 'options', options, false, false), J$.T(3615089, 'construct', 21, false))) ? J$._() : J$.T(3615145, function (data) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(3615121, arguments.callee, this, arguments);
                                            arguments = J$.N(3615129, 'arguments', arguments, true, false, false);
                                            data = J$.N(3615137, 'data', data, true, false, false);
                                            return J$.Rt(3615113, J$.R(3615105, 'data', data, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3615721, J$e);
                                        } finally {
                                            if (J$.Fr(3615729))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(3615201, J$.R(3615161, 'this', this, false, false), 'instanceOf', J$.C(190552, J$.G(3615185, J$.R(3615169, 'options', options, false, false), J$.T(3615177, 'instanceOf', 21, false))) ? J$._() : J$.T(3615193, null, 25, false));
                            J$.P(3615249, J$.R(3615209, 'this', this, false, false), 'predicate', J$.C(190560, J$.G(3615233, J$.R(3615217, 'options', options, false, false), J$.T(3615225, 'predicate', 21, false))) ? J$._() : J$.T(3615241, null, 25, false));
                            J$.P(3615297, J$.R(3615257, 'this', this, false, false), 'represent', J$.C(190568, J$.G(3615281, J$.R(3615265, 'options', options, false, false), J$.T(3615273, 'represent', 21, false))) ? J$._() : J$.T(3615289, null, 25, false));
                            J$.P(3615345, J$.R(3615305, 'this', this, false, false), 'defaultStyle', J$.C(190576, J$.G(3615329, J$.R(3615313, 'options', options, false, false), J$.T(3615321, 'defaultStyle', 21, false))) ? J$._() : J$.T(3615337, null, 25, false));
                            J$.P(3615409, J$.R(3615353, 'this', this, false, false), 'styleAliases', J$.F(3615401, J$.R(3615361, 'compileStyleAliases', compileStyleAliases, false, true), false)(J$.C(190584, J$.G(3615385, J$.R(3615369, 'options', options, false, false), J$.T(3615377, 'styleAliases', 21, false))) ? J$._() : J$.T(3615393, null, 25, false)));
                            if (J$.C(190592, J$.B(398162, '===', J$.M(3615441, J$.R(3615417, 'YAML_NODE_KINDS', YAML_NODE_KINDS, false, true), 'indexOf', false)(J$.G(3615433, J$.R(3615425, 'this', this, false, false), 'kind')), J$.U(398154, '-', J$.T(3615449, 1, 22, false))))) {
                                throw J$.F(3615513, J$.R(3615457, 'YAMLException', YAMLException, false, true), true)(J$.B(398194, '+', J$.B(398186, '+', J$.B(398178, '+', J$.B(398170, '+', J$.T(3615465, 'Unknown kind "', 21, false), J$.G(3615481, J$.R(3615473, 'this', this, false, false), 'kind')), J$.T(3615489, '" is specified for "', 21, false)), J$.R(3615497, 'tag', tag, false, false)), J$.T(3615505, '" YAML type.', 21, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(3615737, J$e);
                        } finally {
                            if (J$.Fr(3615745))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3615585, 'YAMLException', YAMLException, false, false, false);
            J$.N(3615593, 'TYPE_CONSTRUCTOR_OPTIONS', TYPE_CONSTRUCTOR_OPTIONS, false, false, false);
            J$.N(3615601, 'YAML_NODE_KINDS', YAML_NODE_KINDS, false, false, false);
            compileStyleAliases = J$.N(3615617, 'compileStyleAliases', J$.T(3615609, compileStyleAliases, 12, false), true, false, false);
            Type = J$.N(3615633, 'Type', J$.T(3615625, Type, 12, false), true, false, false);
            J$.T(3614329, 'use strict', 21, false);
            var YAMLException = J$.W(3614361, 'YAMLException', J$.F(3614353, J$.I(typeof require === 'undefined' ? require = J$.R(3614337, 'require', undefined, true, true) : require = J$.R(3614337, 'require', require, true, true)), false)(J$.T(3614345, './exception', 21, false)), YAMLException, false, true);
            var TYPE_CONSTRUCTOR_OPTIONS = J$.W(3614441, 'TYPE_CONSTRUCTOR_OPTIONS', J$.T(3614433, [
                J$.T(3614369, 'kind', 21, false),
                J$.T(3614377, 'resolve', 21, false),
                J$.T(3614385, 'construct', 21, false),
                J$.T(3614393, 'instanceOf', 21, false),
                J$.T(3614401, 'predicate', 21, false),
                J$.T(3614409, 'represent', 21, false),
                J$.T(3614417, 'defaultStyle', 21, false),
                J$.T(3614425, 'styleAliases', 21, false)
            ], 10, false), TYPE_CONSTRUCTOR_OPTIONS, false, true);
            var YAML_NODE_KINDS = J$.W(3614481, 'YAML_NODE_KINDS', J$.T(3614473, [
                J$.T(3614449, 'scalar', 21, false),
                J$.T(3614457, 'sequence', 21, false),
                J$.T(3614465, 'mapping', 21, false)
            ], 10, false), YAML_NODE_KINDS, false, true);
            J$.P(3615569, J$.I(typeof module === 'undefined' ? module = J$.R(3615553, 'module', undefined, true, true) : module = J$.R(3615553, 'module', module, true, true)), 'exports', J$.R(3615561, 'Type', Type, false, true));
        } catch (J$e) {
            J$.Ex(3615753, J$e);
        } finally {
            if (J$.Sr(3615761))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

