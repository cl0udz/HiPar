J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(3591953, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/mark.js');
            function Mark(name, buffer, position, line, column) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3590697, arguments.callee, this, arguments);
                            arguments = J$.N(3590705, 'arguments', arguments, true, false, false);
                            name = J$.N(3590713, 'name', name, true, false, false);
                            buffer = J$.N(3590721, 'buffer', buffer, true, false, false);
                            position = J$.N(3590729, 'position', position, true, false, false);
                            line = J$.N(3590737, 'line', line, true, false, false);
                            column = J$.N(3590745, 'column', column, true, false, false);
                            J$.P(3590593, J$.R(3590577, 'this', this, false, false), 'name', J$.R(3590585, 'name', name, false, false));
                            J$.P(3590617, J$.R(3590601, 'this', this, false, false), 'buffer', J$.R(3590609, 'buffer', buffer, false, false));
                            J$.P(3590641, J$.R(3590625, 'this', this, false, false), 'position', J$.R(3590633, 'position', position, false, false));
                            J$.P(3590665, J$.R(3590649, 'this', this, false, false), 'line', J$.R(3590657, 'line', line, false, false));
                            J$.P(3590689, J$.R(3590673, 'this', this, false, false), 'column', J$.R(3590681, 'column', column, false, false));
                        } catch (J$e) {
                            J$.Ex(3591985, J$e);
                        } finally {
                            if (J$.Fr(3591993))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3591961, 'common', common, false, false, false);
            Mark = J$.N(3591977, 'Mark', J$.T(3591969, Mark, 12, false), true, false, false);
            J$.T(3590537, 'use strict', 21, false);
            var common = J$.W(3590569, 'common', J$.F(3590561, J$.I(typeof require === 'undefined' ? require = J$.R(3590545, 'require', undefined, true, true) : require = J$.R(3590545, 'require', require, true, true)), false)(J$.T(3590553, './common', 21, false)), common, false, true);
            J$.P(3591601, J$.G(3590761, J$.R(3590753, 'Mark', Mark, false, true), 'prototype'), 'getSnippet', J$.T(3591593, function getSnippet(indent, maxLength) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3591521, arguments.callee, this, arguments);
                            arguments = J$.N(3591529, 'arguments', arguments, true, false, false);
                            indent = J$.N(3591537, 'indent', indent, true, false, false);
                            maxLength = J$.N(3591545, 'maxLength', maxLength, true, false, false);
                            J$.N(3591553, 'head', head, false, false, false);
                            J$.N(3591561, 'start', start, false, false, false);
                            J$.N(3591569, 'tail', tail, false, false, false);
                            J$.N(3591577, 'end', end, false, false, false);
                            J$.N(3591585, 'snippet', snippet, false, false, false);
                            var head, start, tail, end, snippet;
                            if (J$.C(188912, J$.U(395026, '!', J$.G(3590777, J$.R(3590769, 'this', this, false, false), 'buffer'))))
                                return J$.Rt(3590793, J$.T(3590785, null, 25, false));
                            indent = J$.W(3590817, 'indent', J$.C(188920, J$.R(3590801, 'indent', indent, false, false)) ? J$._() : J$.T(3590809, 4, 22, false), indent, false, false);
                            maxLength = J$.W(3590841, 'maxLength', J$.C(188928, J$.R(3590825, 'maxLength', maxLength, false, false)) ? J$._() : J$.T(3590833, 75, 22, false), maxLength, false, false);
                            head = J$.W(3590857, 'head', J$.T(3590849, '', 21, false), head, false, false);
                            start = J$.W(3590881, 'start', J$.G(3590873, J$.R(3590865, 'this', this, false, false), 'position'), start, false, false);
                            while (J$.C(188952, J$.C(188936, J$.B(395034, '>', J$.R(3590889, 'start', start, false, false), J$.T(3590897, 0, 22, false))) ? J$.B(395058, '===', J$.M(3590953, J$.T(3590905, '\0\r\n\x85\u2028\u2029', 21, false), 'indexOf', false)(J$.M(3590945, J$.G(3590921, J$.R(3590913, 'this', this, false, false), 'buffer'), 'charAt', false)(J$.B(395042, '-', J$.R(3590929, 'start', start, false, false), J$.T(3590937, 1, 22, false)))), J$.U(395050, '-', J$.T(3590961, 1, 22, false))) : J$._())) {
                                start = J$.W(3590985, 'start', J$.B(395066, '-', J$.R(3590977, 'start', start, false, false), J$.T(3590969, 1, 22, false)), start, false, false);
                                if (J$.C(188944, J$.B(395098, '>', J$.B(395074, '-', J$.G(3591001, J$.R(3590993, 'this', this, false, false), 'position'), J$.R(3591009, 'start', start, false, false)), J$.B(395090, '-', J$.B(395082, '/', J$.R(3591017, 'maxLength', maxLength, false, false), J$.T(3591025, 2, 22, false)), J$.T(3591033, 1, 22, false))))) {
                                    head = J$.W(3591049, 'head', J$.T(3591041, ' ... ', 21, false), head, false, false);
                                    start = J$.W(3591073, 'start', J$.B(395106, '+', J$.R(3591065, 'start', start, false, false), J$.T(3591057, 5, 22, false)), start, false, false);
                                    break;
                                }
                            }
                            tail = J$.W(3591089, 'tail', J$.T(3591081, '', 21, false), tail, false, false);
                            end = J$.W(3591113, 'end', J$.G(3591105, J$.R(3591097, 'this', this, false, false), 'position'), end, false, false);
                            while (J$.C(188976, J$.C(188960, J$.B(395114, '<', J$.R(3591121, 'end', end, false, false), J$.G(3591145, J$.G(3591137, J$.R(3591129, 'this', this, false, false), 'buffer'), 'length'))) ? J$.B(395130, '===', J$.M(3591193, J$.T(3591153, '\0\r\n\x85\u2028\u2029', 21, false), 'indexOf', false)(J$.M(3591185, J$.G(3591169, J$.R(3591161, 'this', this, false, false), 'buffer'), 'charAt', false)(J$.R(3591177, 'end', end, false, false))), J$.U(395122, '-', J$.T(3591201, 1, 22, false))) : J$._())) {
                                end = J$.W(3591225, 'end', J$.B(395138, '+', J$.R(3591217, 'end', end, false, false), J$.T(3591209, 1, 22, false)), end, false, false);
                                if (J$.C(188968, J$.B(395170, '>', J$.B(395146, '-', J$.R(3591233, 'end', end, false, false), J$.G(3591249, J$.R(3591241, 'this', this, false, false), 'position')), J$.B(395162, '-', J$.B(395154, '/', J$.R(3591257, 'maxLength', maxLength, false, false), J$.T(3591265, 2, 22, false)), J$.T(3591273, 1, 22, false))))) {
                                    tail = J$.W(3591289, 'tail', J$.T(3591281, ' ... ', 21, false), tail, false, false);
                                    end = J$.W(3591313, 'end', J$.B(395178, '-', J$.R(3591305, 'end', end, false, false), J$.T(3591297, 5, 22, false)), end, false, false);
                                    break;
                                }
                            }
                            snippet = J$.W(3591361, 'snippet', J$.M(3591353, J$.G(3591329, J$.R(3591321, 'this', this, false, false), 'buffer'), 'slice', false)(J$.R(3591337, 'start', start, false, false), J$.R(3591345, 'end', end, false, false)), snippet, false, false);
                            return J$.Rt(3591513, J$.B(395250, '+', J$.B(395242, '+', J$.B(395210, '+', J$.B(395202, '+', J$.B(395194, '+', J$.B(395186, '+', J$.M(3591393, J$.R(3591369, 'common', common, false, true), 'repeat', false)(J$.T(3591377, ' ', 21, false), J$.R(3591385, 'indent', indent, false, false)), J$.R(3591401, 'head', head, false, false)), J$.R(3591409, 'snippet', snippet, false, false)), J$.R(3591417, 'tail', tail, false, false)), J$.T(3591425, '\n', 21, false)), J$.M(3591497, J$.R(3591433, 'common', common, false, true), 'repeat', false)(J$.T(3591441, ' ', 21, false), J$.B(395234, '+', J$.B(395226, '-', J$.B(395218, '+', J$.R(3591449, 'indent', indent, false, false), J$.G(3591465, J$.R(3591457, 'this', this, false, false), 'position')), J$.R(3591473, 'start', start, false, false)), J$.G(3591489, J$.R(3591481, 'head', head, false, false), 'length')))), J$.T(3591505, '^', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3592001, J$e);
                        } finally {
                            if (J$.Fr(3592009))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3591921, J$.G(3591617, J$.R(3591609, 'Mark', Mark, false, true), 'prototype'), 'toString', J$.T(3591913, function toString(compact) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3591873, arguments.callee, this, arguments);
                            arguments = J$.N(3591881, 'arguments', arguments, true, false, false);
                            compact = J$.N(3591889, 'compact', compact, true, false, false);
                            J$.N(3591897, 'snippet', snippet, false, false, false);
                            J$.N(3591905, 'where', where, false, false, false);
                            var snippet, where = J$.W(3591633, 'where', J$.T(3591625, '', 21, false), where, false, false);
                            if (J$.C(188984, J$.G(3591649, J$.R(3591641, 'this', this, false, false), 'name'))) {
                                where = J$.W(3591697, 'where', J$.B(395274, '+', J$.R(3591689, 'where', where, false, false), J$.B(395266, '+', J$.B(395258, '+', J$.T(3591657, 'in "', 21, false), J$.G(3591673, J$.R(3591665, 'this', this, false, false), 'name')), J$.T(3591681, '" ', 21, false))), where, false, false);
                            }
                            where = J$.W(3591777, 'where', J$.B(395322, '+', J$.R(3591769, 'where', where, false, false), J$.B(395314, '+', J$.B(395298, '+', J$.B(395290, '+', J$.T(3591705, 'at line ', 21, false), J$.B(395282, '+', J$.G(3591721, J$.R(3591713, 'this', this, false, false), 'line'), J$.T(3591729, 1, 22, false))), J$.T(3591737, ', column ', 21, false)), J$.B(395306, '+', J$.G(3591753, J$.R(3591745, 'this', this, false, false), 'column'), J$.T(3591761, 1, 22, false)))), where, false, false);
                            if (J$.C(189000, J$.U(395330, '!', J$.R(3591785, 'compact', compact, false, false)))) {
                                snippet = J$.W(3591809, 'snippet', J$.M(3591801, J$.R(3591793, 'this', this, false, false), 'getSnippet', false)(), snippet, false, false);
                                if (J$.C(188992, J$.R(3591817, 'snippet', snippet, false, false))) {
                                    where = J$.W(3591849, 'where', J$.B(395346, '+', J$.R(3591841, 'where', where, false, false), J$.B(395338, '+', J$.T(3591825, ':\n', 21, false), J$.R(3591833, 'snippet', snippet, false, false))), where, false, false);
                                }
                            }
                            return J$.Rt(3591865, J$.R(3591857, 'where', where, false, false));
                        } catch (J$e) {
                            J$.Ex(3592017, J$e);
                        } finally {
                            if (J$.Fr(3592025))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3591945, J$.I(typeof module === 'undefined' ? module = J$.R(3591929, 'module', undefined, true, true) : module = J$.R(3591929, 'module', module, true, true)), 'exports', J$.R(3591937, 'Mark', Mark, false, true));
        } catch (J$e) {
            J$.Ex(3592033, J$e);
        } finally {
            if (J$.Sr(3592041))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

