J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(3614185, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/timestamp.js');
            function resolveYamlTimestamp(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3612977, arguments.callee, this, arguments);
                            arguments = J$.N(3612985, 'arguments', arguments, true, false, false);
                            data = J$.N(3612993, 'data', data, true, false, false);
                            if (J$.C(190408, J$.B(397906, '===', J$.R(3612833, 'data', data, false, false), J$.T(3612841, null, 25, false))))
                                return J$.Rt(3612857, J$.T(3612849, false, 23, false));
                            if (J$.C(190416, J$.B(397914, '!==', J$.M(3612881, J$.R(3612865, 'YAML_DATE_REGEXP', YAML_DATE_REGEXP, false, true), 'exec', false)(J$.R(3612873, 'data', data, false, false)), J$.T(3612889, null, 25, false))))
                                return J$.Rt(3612905, J$.T(3612897, true, 23, false));
                            if (J$.C(190424, J$.B(397922, '!==', J$.M(3612929, J$.R(3612913, 'YAML_TIMESTAMP_REGEXP', YAML_TIMESTAMP_REGEXP, false, true), 'exec', false)(J$.R(3612921, 'data', data, false, false)), J$.T(3612937, null, 25, false))))
                                return J$.Rt(3612953, J$.T(3612945, true, 23, false));
                            return J$.Rt(3612969, J$.T(3612961, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(3614265, J$e);
                        } finally {
                            if (J$.Fr(3614273))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlTimestamp(data) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3613929, arguments.callee, this, arguments);
                            arguments = J$.N(3613937, 'arguments', arguments, true, false, false);
                            data = J$.N(3613945, 'data', data, true, false, false);
                            J$.N(3613953, 'match', match, false, false, false);
                            J$.N(3613961, 'year', year, false, false, false);
                            J$.N(3613969, 'month', month, false, false, false);
                            J$.N(3613977, 'day', day, false, false, false);
                            J$.N(3613985, 'hour', hour, false, false, false);
                            J$.N(3613993, 'minute', minute, false, false, false);
                            J$.N(3614001, 'second', second, false, false, false);
                            J$.N(3614009, 'fraction', fraction, false, false, false);
                            J$.N(3614017, 'delta', delta, false, false, false);
                            J$.N(3614025, 'tz_hour', tz_hour, false, false, false);
                            J$.N(3614033, 'tz_minute', tz_minute, false, false, false);
                            J$.N(3614041, 'date', date, false, false, false);
                            var match, year, month, day, hour, minute, second, fraction = J$.W(3613017, 'fraction', J$.T(3613001, 0, 22, false), fraction, false, false), delta = J$.W(3613025, 'delta', J$.T(3613009, null, 25, false), delta, false, false), tz_hour, tz_minute, date;
                            match = J$.W(3613057, 'match', J$.M(3613049, J$.R(3613033, 'YAML_DATE_REGEXP', YAML_DATE_REGEXP, false, true), 'exec', false)(J$.R(3613041, 'data', data, false, false)), match, false, false);
                            if (J$.C(190432, J$.B(397930, '===', J$.R(3613065, 'match', match, false, false), J$.T(3613073, null, 25, false))))
                                match = J$.W(3613105, 'match', J$.M(3613097, J$.R(3613081, 'YAML_TIMESTAMP_REGEXP', YAML_TIMESTAMP_REGEXP, false, true), 'exec', false)(J$.R(3613089, 'data', data, false, false)), match, false, false);
                            if (J$.C(190440, J$.B(397938, '===', J$.R(3613113, 'match', match, false, false), J$.T(3613121, null, 25, false))))
                                throw J$.F(3613145, J$.I(typeof Error === 'undefined' ? Error = J$.R(3613129, 'Error', undefined, true, true) : Error = J$.R(3613129, 'Error', Error, true, true)), true)(J$.T(3613137, 'Date resolve error', 21, false));
                            year = J$.W(3613177, 'year', J$.U(397946, '+', J$.G(3613169, J$.R(3613153, 'match', match, false, false), J$.T(3613161, 1, 22, false))), year, false, false);
                            month = J$.W(3613217, 'month', J$.B(397962, '-', J$.U(397954, '+', J$.G(3613201, J$.R(3613185, 'match', match, false, false), J$.T(3613193, 2, 22, false))), J$.T(3613209, 1, 22, false)), month, false, false);
                            day = J$.W(3613249, 'day', J$.U(397970, '+', J$.G(3613241, J$.R(3613225, 'match', match, false, false), J$.T(3613233, 3, 22, false))), day, false, false);
                            if (J$.C(190448, J$.U(397978, '!', J$.G(3613273, J$.R(3613257, 'match', match, false, false), J$.T(3613265, 4, 22, false))))) {
                                return J$.Rt(3613337, J$.F(3613329, J$.I(typeof Date === 'undefined' ? Date = J$.R(3613281, 'Date', undefined, true, true) : Date = J$.R(3613281, 'Date', Date, true, true)), true)(J$.M(3613321, J$.I(typeof Date === 'undefined' ? Date = J$.R(3613289, 'Date', undefined, true, true) : Date = J$.R(3613289, 'Date', Date, true, true)), 'UTC', false)(J$.R(3613297, 'year', year, false, false), J$.R(3613305, 'month', month, false, false), J$.R(3613313, 'day', day, false, false))));
                            }
                            hour = J$.W(3613369, 'hour', J$.U(397986, '+', J$.G(3613361, J$.R(3613345, 'match', match, false, false), J$.T(3613353, 4, 22, false))), hour, false, false);
                            minute = J$.W(3613401, 'minute', J$.U(397994, '+', J$.G(3613393, J$.R(3613377, 'match', match, false, false), J$.T(3613385, 5, 22, false))), minute, false, false);
                            second = J$.W(3613433, 'second', J$.U(398002, '+', J$.G(3613425, J$.R(3613409, 'match', match, false, false), J$.T(3613417, 6, 22, false))), second, false, false);
                            if (J$.C(190464, J$.G(3613457, J$.R(3613441, 'match', match, false, false), J$.T(3613449, 7, 22, false)))) {
                                fraction = J$.W(3613513, 'fraction', J$.M(3613505, J$.G(3613481, J$.R(3613465, 'match', match, false, false), J$.T(3613473, 7, 22, false)), 'slice', false)(J$.T(3613489, 0, 22, false), J$.T(3613497, 3, 22, false)), fraction, false, false);
                                while (J$.C(190456, J$.B(398010, '<', J$.G(3613529, J$.R(3613521, 'fraction', fraction, false, false), 'length'), J$.T(3613537, 3, 22, false)))) {
                                    fraction = J$.W(3613561, 'fraction', J$.B(398018, '+', J$.R(3613553, 'fraction', fraction, false, false), J$.T(3613545, '0', 21, false)), fraction, false, false);
                                }
                                fraction = J$.W(3613577, 'fraction', J$.U(398026, '+', J$.R(3613569, 'fraction', fraction, false, false)), fraction, false, false);
                            }
                            if (J$.C(190488, J$.G(3613601, J$.R(3613585, 'match', match, false, false), J$.T(3613593, 9, 22, false)))) {
                                tz_hour = J$.W(3613633, 'tz_hour', J$.U(398034, '+', J$.G(3613625, J$.R(3613609, 'match', match, false, false), J$.T(3613617, 10, 22, false))), tz_hour, false, false);
                                tz_minute = J$.W(3613673, 'tz_minute', J$.U(398042, '+', J$.C(190472, J$.G(3613657, J$.R(3613641, 'match', match, false, false), J$.T(3613649, 11, 22, false))) ? J$._() : J$.T(3613665, 0, 22, false)), tz_minute, false, false);
                                delta = J$.W(3613713, 'delta', J$.B(398066, '*', J$.B(398058, '+', J$.B(398050, '*', J$.R(3613681, 'tz_hour', tz_hour, false, false), J$.T(3613689, 60, 22, false)), J$.R(3613697, 'tz_minute', tz_minute, false, false)), J$.T(3613705, 60000, 22, false)), delta, false, false);
                                if (J$.C(190480, J$.B(398074, '===', J$.G(3613737, J$.R(3613721, 'match', match, false, false), J$.T(3613729, 9, 22, false)), J$.T(3613745, '-', 21, false))))
                                    delta = J$.W(3613761, 'delta', J$.U(398082, '-', J$.R(3613753, 'delta', delta, false, false)), delta, false, false);
                            }
                            date = J$.W(3613857, 'date', J$.F(3613849, J$.I(typeof Date === 'undefined' ? Date = J$.R(3613769, 'Date', undefined, true, true) : Date = J$.R(3613769, 'Date', Date, true, true)), true)(J$.M(3613841, J$.I(typeof Date === 'undefined' ? Date = J$.R(3613777, 'Date', undefined, true, true) : Date = J$.R(3613777, 'Date', Date, true, true)), 'UTC', false)(J$.R(3613785, 'year', year, false, false), J$.R(3613793, 'month', month, false, false), J$.R(3613801, 'day', day, false, false), J$.R(3613809, 'hour', hour, false, false), J$.R(3613817, 'minute', minute, false, false), J$.R(3613825, 'second', second, false, false), J$.R(3613833, 'fraction', fraction, false, false))), date, false, false);
                            if (J$.C(190496, J$.R(3613865, 'delta', delta, false, false)))
                                J$.M(3613905, J$.R(3613873, 'date', date, false, false), 'setTime', false)(J$.B(398090, '-', J$.M(3613889, J$.R(3613881, 'date', date, false, false), 'getTime', false)(), J$.R(3613897, 'delta', delta, false, false)));
                            return J$.Rt(3613921, J$.R(3613913, 'date', date, false, false));
                        } catch (J$e) {
                            J$.Ex(3614281, J$e);
                        } finally {
                            if (J$.Fr(3614289))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function representYamlTimestamp(object) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3614073, arguments.callee, this, arguments);
                            arguments = J$.N(3614081, 'arguments', arguments, true, false, false);
                            object = J$.N(3614089, 'object', object, true, false, false);
                            return J$.Rt(3614065, J$.M(3614057, J$.R(3614049, 'object', object, false, false), 'toISOString', false)());
                        } catch (J$e) {
                            J$.Ex(3614297, J$e);
                        } finally {
                            if (J$.Fr(3614305))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3614193, 'Type', Type, false, false, false);
            J$.N(3614201, 'YAML_DATE_REGEXP', YAML_DATE_REGEXP, false, false, false);
            J$.N(3614209, 'YAML_TIMESTAMP_REGEXP', YAML_TIMESTAMP_REGEXP, false, false, false);
            resolveYamlTimestamp = J$.N(3614225, 'resolveYamlTimestamp', J$.T(3614217, resolveYamlTimestamp, 12, false), true, false, false);
            constructYamlTimestamp = J$.N(3614241, 'constructYamlTimestamp', J$.T(3614233, constructYamlTimestamp, 12, false), true, false, false);
            representYamlTimestamp = J$.N(3614257, 'representYamlTimestamp', J$.T(3614249, representYamlTimestamp, 12, false), true, false, false);
            J$.T(3612641, 'use strict', 21, false);
            var Type = J$.W(3612673, 'Type', J$.F(3612665, J$.I(typeof require === 'undefined' ? require = J$.R(3612649, 'require', undefined, true, true) : require = J$.R(3612649, 'require', require, true, true)), false)(J$.T(3612657, '../type', 21, false)), Type, false, true);
            var YAML_DATE_REGEXP = J$.W(3612721, 'YAML_DATE_REGEXP', J$.F(3612713, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(3612681, 'RegExp', undefined, true, true) : RegExp = J$.R(3612681, 'RegExp', RegExp, true, true)), true)(J$.B(397826, '+', J$.B(397818, '+', J$.T(3612689, '^([0-9][0-9][0-9][0-9])', 21, false), J$.T(3612697, '-([0-9][0-9])', 21, false)), J$.T(3612705, '-([0-9][0-9])$', 21, false))), YAML_DATE_REGEXP, false, true);
            var YAML_TIMESTAMP_REGEXP = J$.W(3612825, 'YAML_TIMESTAMP_REGEXP', J$.F(3612817, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(3612729, 'RegExp', undefined, true, true) : RegExp = J$.R(3612729, 'RegExp', RegExp, true, true)), true)(J$.B(397898, '+', J$.B(397890, '+', J$.B(397882, '+', J$.B(397874, '+', J$.B(397866, '+', J$.B(397858, '+', J$.B(397850, '+', J$.B(397842, '+', J$.B(397834, '+', J$.T(3612737, '^([0-9][0-9][0-9][0-9])', 21, false), J$.T(3612745, '-([0-9][0-9]?)', 21, false)), J$.T(3612753, '-([0-9][0-9]?)', 21, false)), J$.T(3612761, '(?:[Tt]|[ \\t]+)', 21, false)), J$.T(3612769, '([0-9][0-9]?)', 21, false)), J$.T(3612777, ':([0-9][0-9])', 21, false)), J$.T(3612785, ':([0-9][0-9])', 21, false)), J$.T(3612793, '(?:\\.([0-9]*))?', 21, false)), J$.T(3612801, '(?:[ \\t]*(Z|([-+])([0-9][0-9]?)', 21, false)), J$.T(3612809, '(?::([0-9][0-9]))?))?$', 21, false))), YAML_TIMESTAMP_REGEXP, false, true);
            J$.P(3614177, J$.I(typeof module === 'undefined' ? module = J$.R(3614097, 'module', undefined, true, true) : module = J$.R(3614097, 'module', module, true, true)), 'exports', J$.F(3614169, J$.R(3614105, 'Type', Type, false, true), true)(J$.T(3614113, 'tag:yaml.org,2002:timestamp', 21, false), J$.T(3614161, {
                kind: J$.T(3614121, 'scalar', 21, false),
                resolve: J$.R(3614129, 'resolveYamlTimestamp', resolveYamlTimestamp, false, true),
                construct: J$.R(3614137, 'constructYamlTimestamp', constructYamlTimestamp, false, true),
                instanceOf: J$.I(typeof Date === 'undefined' ? Date = J$.R(3614145, 'Date', undefined, true, true) : Date = J$.R(3614145, 'Date', Date, true, true)),
                represent: J$.R(3614153, 'representYamlTimestamp', representYamlTimestamp, false, true)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(3614313, J$e);
        } finally {
            if (J$.Sr(3614321))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

