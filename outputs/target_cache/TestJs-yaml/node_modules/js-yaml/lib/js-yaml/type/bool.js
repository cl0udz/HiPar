J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(3599041, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/bool.js');
            function resolveYamlBoolean(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3598561, arguments.callee, this, arguments);
                            arguments = J$.N(3598569, 'arguments', arguments, true, false, false);
                            data = J$.N(3598577, 'data', data, true, false, false);
                            J$.N(3598585, 'max', max, false, false, false);
                            if (J$.C(189264, J$.B(396170, '===', J$.R(3598369, 'data', data, false, false), J$.T(3598377, null, 25, false))))
                                return J$.Rt(3598393, J$.T(3598385, false, 23, false));
                            var max = J$.W(3598417, 'max', J$.G(3598409, J$.R(3598401, 'data', data, false, false), 'length'), max, false, false);
                            return J$.Rt(3598553, J$.C(189320, J$.C(189288, J$.B(396178, '===', J$.R(3598425, 'max', max, false, false), J$.T(3598433, 4, 22, false))) ? J$.C(189280, J$.C(189272, J$.B(396186, '===', J$.R(3598441, 'data', data, false, false), J$.T(3598449, 'true', 21, false))) ? J$._() : J$.B(396194, '===', J$.R(3598457, 'data', data, false, false), J$.T(3598465, 'True', 21, false))) ? J$._() : J$.B(396202, '===', J$.R(3598473, 'data', data, false, false), J$.T(3598481, 'TRUE', 21, false)) : J$._()) ? J$._() : J$.C(189312, J$.B(396210, '===', J$.R(3598489, 'max', max, false, false), J$.T(3598497, 5, 22, false))) ? J$.C(189304, J$.C(189296, J$.B(396218, '===', J$.R(3598505, 'data', data, false, false), J$.T(3598513, 'false', 21, false))) ? J$._() : J$.B(396226, '===', J$.R(3598521, 'data', data, false, false), J$.T(3598529, 'False', 21, false))) ? J$._() : J$.B(396234, '===', J$.R(3598537, 'data', data, false, false), J$.T(3598545, 'FALSE', 21, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(3599105, J$e);
                        } finally {
                            if (J$.Fr(3599113))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlBoolean(data) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3598649, arguments.callee, this, arguments);
                            arguments = J$.N(3598657, 'arguments', arguments, true, false, false);
                            data = J$.N(3598665, 'data', data, true, false, false);
                            return J$.Rt(3598641, J$.C(189336, J$.C(189328, J$.B(396242, '===', J$.R(3598593, 'data', data, false, false), J$.T(3598601, 'true', 21, false))) ? J$._() : J$.B(396250, '===', J$.R(3598609, 'data', data, false, false), J$.T(3598617, 'True', 21, false))) ? J$._() : J$.B(396258, '===', J$.R(3598625, 'data', data, false, false), J$.T(3598633, 'TRUE', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3599121, J$e);
                        } finally {
                            if (J$.Fr(3599129))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isBoolean(object) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3598729, arguments.callee, this, arguments);
                            arguments = J$.N(3598737, 'arguments', arguments, true, false, false);
                            object = J$.N(3598745, 'object', object, true, false, false);
                            return J$.Rt(3598721, J$.B(396266, '===', J$.M(3598705, J$.G(3598689, J$.G(3598681, J$.I(typeof Object === 'undefined' ? Object = J$.R(3598673, 'Object', undefined, true, true) : Object = J$.R(3598673, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(3598697, 'object', object, false, false)), J$.T(3598713, '[object Boolean]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3599137, J$e);
                        } finally {
                            if (J$.Fr(3599145))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3599049, 'Type', Type, false, false, false);
            resolveYamlBoolean = J$.N(3599065, 'resolveYamlBoolean', J$.T(3599057, resolveYamlBoolean, 12, false), true, false, false);
            constructYamlBoolean = J$.N(3599081, 'constructYamlBoolean', J$.T(3599073, constructYamlBoolean, 12, false), true, false, false);
            isBoolean = J$.N(3599097, 'isBoolean', J$.T(3599089, isBoolean, 12, false), true, false, false);
            J$.T(3598329, 'use strict', 21, false);
            var Type = J$.W(3598361, 'Type', J$.F(3598353, J$.I(typeof require === 'undefined' ? require = J$.R(3598337, 'require', undefined, true, true) : require = J$.R(3598337, 'require', require, true, true)), false)(J$.T(3598345, '../type', 21, false)), Type, false, true);
            J$.P(3599033, J$.I(typeof module === 'undefined' ? module = J$.R(3598753, 'module', undefined, true, true) : module = J$.R(3598753, 'module', module, true, true)), 'exports', J$.F(3599025, J$.R(3598761, 'Type', Type, false, true), true)(J$.T(3598769, 'tag:yaml.org,2002:bool', 21, false), J$.T(3599017, {
                kind: J$.T(3598777, 'scalar', 21, false),
                resolve: J$.R(3598785, 'resolveYamlBoolean', resolveYamlBoolean, false, true),
                construct: J$.R(3598793, 'constructYamlBoolean', constructYamlBoolean, false, true),
                predicate: J$.R(3598801, 'isBoolean', isBoolean, false, true),
                represent: J$.T(3599001, {
                    lowercase: J$.T(3598865, function (object) {
                        jalangiLabel3:
                            while (true) {
                                try {
                                    J$.Fe(3598841, arguments.callee, this, arguments);
                                    arguments = J$.N(3598849, 'arguments', arguments, true, false, false);
                                    object = J$.N(3598857, 'object', object, true, false, false);
                                    return J$.Rt(3598833, J$.C(189344, J$.R(3598809, 'object', object, false, false)) ? J$.T(3598817, 'true', 21, false) : J$.T(3598825, 'false', 21, false));
                                } catch (J$e) {
                                    J$.Ex(3599153, J$e);
                                } finally {
                                    if (J$.Fr(3599161))
                                        continue jalangiLabel3;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    uppercase: J$.T(3598929, function (object) {
                        jalangiLabel4:
                            while (true) {
                                try {
                                    J$.Fe(3598905, arguments.callee, this, arguments);
                                    arguments = J$.N(3598913, 'arguments', arguments, true, false, false);
                                    object = J$.N(3598921, 'object', object, true, false, false);
                                    return J$.Rt(3598897, J$.C(189352, J$.R(3598873, 'object', object, false, false)) ? J$.T(3598881, 'TRUE', 21, false) : J$.T(3598889, 'FALSE', 21, false));
                                } catch (J$e) {
                                    J$.Ex(3599169, J$e);
                                } finally {
                                    if (J$.Fr(3599177))
                                        continue jalangiLabel4;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    camelcase: J$.T(3598993, function (object) {
                        jalangiLabel5:
                            while (true) {
                                try {
                                    J$.Fe(3598969, arguments.callee, this, arguments);
                                    arguments = J$.N(3598977, 'arguments', arguments, true, false, false);
                                    object = J$.N(3598985, 'object', object, true, false, false);
                                    return J$.Rt(3598961, J$.C(189360, J$.R(3598937, 'object', object, false, false)) ? J$.T(3598945, 'True', 21, false) : J$.T(3598953, 'False', 21, false));
                                } catch (J$e) {
                                    J$.Ex(3599185, J$e);
                                } finally {
                                    if (J$.Fr(3599193))
                                        continue jalangiLabel5;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                defaultStyle: J$.T(3599009, 'lowercase', 21, false)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(3599201, J$e);
        } finally {
            if (J$.Sr(3599209))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

