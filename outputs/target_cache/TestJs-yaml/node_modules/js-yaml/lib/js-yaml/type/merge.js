J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3608817, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/merge.js');
            function resolveYamlMerge(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3608729, arguments.callee, this, arguments);
                            arguments = J$.N(3608737, 'arguments', arguments, true, false, false);
                            data = J$.N(3608745, 'data', data, true, false, false);
                            return J$.Rt(3608721, J$.C(190192, J$.B(397562, '===', J$.R(3608689, 'data', data, false, false), J$.T(3608697, '<<', 21, false))) ? J$._() : J$.B(397570, '===', J$.R(3608705, 'data', data, false, false), J$.T(3608713, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(3608849, J$e);
                        } finally {
                            if (J$.Fr(3608857))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3608825, 'Type', Type, false, false, false);
            resolveYamlMerge = J$.N(3608841, 'resolveYamlMerge', J$.T(3608833, resolveYamlMerge, 12, false), true, false, false);
            J$.T(3608649, 'use strict', 21, false);
            var Type = J$.W(3608681, 'Type', J$.F(3608673, J$.I(typeof require === 'undefined' ? require = J$.R(3608657, 'require', undefined, true, true) : require = J$.R(3608657, 'require', require, true, true)), false)(J$.T(3608665, '../type', 21, false)), Type, false, true);
            J$.P(3608809, J$.I(typeof module === 'undefined' ? module = J$.R(3608753, 'module', undefined, true, true) : module = J$.R(3608753, 'module', module, true, true)), 'exports', J$.F(3608801, J$.R(3608761, 'Type', Type, false, true), true)(J$.T(3608769, 'tag:yaml.org,2002:merge', 21, false), J$.T(3608793, {
                kind: J$.T(3608777, 'scalar', 21, false),
                resolve: J$.R(3608785, 'resolveYamlMerge', resolveYamlMerge, false, true)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(3608865, J$e);
        } finally {
            if (J$.Sr(3608873))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

