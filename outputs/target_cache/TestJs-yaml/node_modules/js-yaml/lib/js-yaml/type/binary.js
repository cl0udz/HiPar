J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(3598145, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/binary.js');
            function resolveYamlBinary(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3595881, arguments.callee, this, arguments);
                            arguments = J$.N(3595889, 'arguments', arguments, true, false, false);
                            data = J$.N(3595897, 'data', data, true, false, false);
                            J$.N(3595905, 'code', code, false, false, false);
                            J$.N(3595913, 'idx', idx, false, false, false);
                            J$.N(3595921, 'bitlen', bitlen, false, false, false);
                            J$.N(3595929, 'max', max, false, false, false);
                            J$.N(3595937, 'map', map, false, false, false);
                            if (J$.C(189112, J$.B(395442, '===', J$.R(3595593, 'data', data, false, false), J$.T(3595601, null, 25, false))))
                                return J$.Rt(3595617, J$.T(3595609, false, 23, false));
                            var code, idx, bitlen = J$.W(3595657, 'bitlen', J$.T(3595625, 0, 22, false), bitlen, false, false), max = J$.W(3595665, 'max', J$.G(3595641, J$.R(3595633, 'data', data, false, false), 'length'), max, false, false), map = J$.W(3595673, 'map', J$.R(3595649, 'BASE64_MAP', BASE64_MAP, false, true), map, false, false);
                            for (idx = J$.W(3595689, 'idx', J$.T(3595681, 0, 22, false), idx, false, false); J$.C(189136, J$.B(395450, '<', J$.R(3595697, 'idx', idx, false, false), J$.R(3595705, 'max', max, false, false))); J$.B(395474, '-', idx = J$.W(3595721, 'idx', J$.B(395466, '+', J$.U(395458, '+', J$.R(3595713, 'idx', idx, false, false)), 1), idx, false, false), 1)) {
                                code = J$.W(3595769, 'code', J$.M(3595761, J$.R(3595729, 'map', map, false, false), 'indexOf', false)(J$.M(3595753, J$.R(3595737, 'data', data, false, false), 'charAt', false)(J$.R(3595745, 'idx', idx, false, false))), code, false, false);
                                if (J$.C(189120, J$.B(395482, '>', J$.R(3595777, 'code', code, false, false), J$.T(3595785, 64, 22, false))))
                                    continue;
                                if (J$.C(189128, J$.B(395490, '<', J$.R(3595793, 'code', code, false, false), J$.T(3595801, 0, 22, false))))
                                    return J$.Rt(3595817, J$.T(3595809, false, 23, false));
                                bitlen = J$.W(3595841, 'bitlen', J$.B(395498, '+', J$.R(3595833, 'bitlen', bitlen, false, false), J$.T(3595825, 6, 22, false)), bitlen, false, false);
                            }
                            return J$.Rt(3595873, J$.B(395514, '===', J$.B(395506, '%', J$.R(3595849, 'bitlen', bitlen, false, false), J$.T(3595857, 8, 22, false)), J$.T(3595865, 0, 22, false)));
                        } catch (J$e) {
                            J$.Ex(3598249, J$e);
                        } finally {
                            if (J$.Fr(3598257))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlBinary(data) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3596721, arguments.callee, this, arguments);
                            arguments = J$.N(3596729, 'arguments', arguments, true, false, false);
                            data = J$.N(3596737, 'data', data, true, false, false);
                            J$.N(3596745, 'idx', idx, false, false, false);
                            J$.N(3596753, 'tailbits', tailbits, false, false, false);
                            J$.N(3596761, 'input', input, false, false, false);
                            J$.N(3596769, 'max', max, false, false, false);
                            J$.N(3596777, 'map', map, false, false, false);
                            J$.N(3596785, 'bits', bits, false, false, false);
                            J$.N(3596793, 'result', result, false, false, false);
                            var idx, tailbits, input = J$.W(3596017, 'input', J$.M(3595969, J$.R(3595945, 'data', data, false, false), 'replace', false)(J$.T(3595953, /[\r\n=]/g, 14, false), J$.T(3595961, '', 21, false)), input, false, false), max = J$.W(3596025, 'max', J$.G(3595985, J$.R(3595977, 'input', input, false, false), 'length'), max, false, false), map = J$.W(3596033, 'map', J$.R(3595993, 'BASE64_MAP', BASE64_MAP, false, true), map, false, false), bits = J$.W(3596041, 'bits', J$.T(3596001, 0, 22, false), bits, false, false), result = J$.W(3596049, 'result', J$.T(3596009, [], 10, false), result, false, false);
                            for (idx = J$.W(3596065, 'idx', J$.T(3596057, 0, 22, false), idx, false, false); J$.C(189160, J$.B(395522, '<', J$.R(3596073, 'idx', idx, false, false), J$.R(3596081, 'max', max, false, false))); J$.B(395546, '-', idx = J$.W(3596097, 'idx', J$.B(395538, '+', J$.U(395530, '+', J$.R(3596089, 'idx', idx, false, false)), 1), idx, false, false), 1)) {
                                if (J$.C(189152, J$.C(189144, J$.B(395562, '===', J$.B(395554, '%', J$.R(3596105, 'idx', idx, false, false), J$.T(3596113, 4, 22, false)), J$.T(3596121, 0, 22, false))) ? J$.R(3596129, 'idx', idx, false, false) : J$._())) {
                                    J$.M(3596169, J$.R(3596137, 'result', result, false, false), 'push', false)(J$.B(395578, '&', J$.B(395570, '>>', J$.R(3596145, 'bits', bits, false, false), J$.T(3596153, 16, 22, false)), J$.T(3596161, 255, 22, false)));
                                    J$.M(3596209, J$.R(3596177, 'result', result, false, false), 'push', false)(J$.B(395594, '&', J$.B(395586, '>>', J$.R(3596185, 'bits', bits, false, false), J$.T(3596193, 8, 22, false)), J$.T(3596201, 255, 22, false)));
                                    J$.M(3596241, J$.R(3596217, 'result', result, false, false), 'push', false)(J$.B(395602, '&', J$.R(3596225, 'bits', bits, false, false), J$.T(3596233, 255, 22, false)));
                                }
                                bits = J$.W(3596305, 'bits', J$.B(395618, '|', J$.B(395610, '<<', J$.R(3596249, 'bits', bits, false, false), J$.T(3596257, 6, 22, false)), J$.M(3596297, J$.R(3596265, 'map', map, false, false), 'indexOf', false)(J$.M(3596289, J$.R(3596273, 'input', input, false, false), 'charAt', false)(J$.R(3596281, 'idx', idx, false, false)))), bits, false, false);
                            }
                            tailbits = J$.W(3596337, 'tailbits', J$.B(395634, '*', J$.B(395626, '%', J$.R(3596313, 'max', max, false, false), J$.T(3596321, 4, 22, false)), J$.T(3596329, 6, 22, false)), tailbits, false, false);
                            if (J$.C(189184, J$.B(395642, '===', J$.R(3596345, 'tailbits', tailbits, false, false), J$.T(3596353, 0, 22, false)))) {
                                J$.M(3596393, J$.R(3596361, 'result', result, false, false), 'push', false)(J$.B(395658, '&', J$.B(395650, '>>', J$.R(3596369, 'bits', bits, false, false), J$.T(3596377, 16, 22, false)), J$.T(3596385, 255, 22, false)));
                                J$.M(3596433, J$.R(3596401, 'result', result, false, false), 'push', false)(J$.B(395674, '&', J$.B(395666, '>>', J$.R(3596409, 'bits', bits, false, false), J$.T(3596417, 8, 22, false)), J$.T(3596425, 255, 22, false)));
                                J$.M(3596465, J$.R(3596441, 'result', result, false, false), 'push', false)(J$.B(395682, '&', J$.R(3596449, 'bits', bits, false, false), J$.T(3596457, 255, 22, false)));
                            } else if (J$.C(189176, J$.B(395690, '===', J$.R(3596473, 'tailbits', tailbits, false, false), J$.T(3596481, 18, 22, false)))) {
                                J$.M(3596521, J$.R(3596489, 'result', result, false, false), 'push', false)(J$.B(395706, '&', J$.B(395698, '>>', J$.R(3596497, 'bits', bits, false, false), J$.T(3596505, 10, 22, false)), J$.T(3596513, 255, 22, false)));
                                J$.M(3596561, J$.R(3596529, 'result', result, false, false), 'push', false)(J$.B(395722, '&', J$.B(395714, '>>', J$.R(3596537, 'bits', bits, false, false), J$.T(3596545, 2, 22, false)), J$.T(3596553, 255, 22, false)));
                            } else if (J$.C(189168, J$.B(395730, '===', J$.R(3596569, 'tailbits', tailbits, false, false), J$.T(3596577, 12, 22, false)))) {
                                J$.M(3596617, J$.R(3596585, 'result', result, false, false), 'push', false)(J$.B(395746, '&', J$.B(395738, '>>', J$.R(3596593, 'bits', bits, false, false), J$.T(3596601, 4, 22, false)), J$.T(3596609, 255, 22, false)));
                            }
                            if (J$.C(189200, J$.R(3596625, 'NodeBuffer', NodeBuffer, false, true))) {
                                return J$.Rt(3596697, J$.C(189192, J$.G(3596641, J$.R(3596633, 'NodeBuffer', NodeBuffer, false, true), 'from')) ? J$.M(3596665, J$.R(3596649, 'NodeBuffer', NodeBuffer, false, true), 'from', false)(J$.R(3596657, 'result', result, false, false)) : J$.F(3596689, J$.R(3596673, 'NodeBuffer', NodeBuffer, false, true), true)(J$.R(3596681, 'result', result, false, false)));
                            }
                            return J$.Rt(3596713, J$.R(3596705, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3598265, J$e);
                        } finally {
                            if (J$.Fr(3598273))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function representYamlBinary(object) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3597921, arguments.callee, this, arguments);
                            arguments = J$.N(3597929, 'arguments', arguments, true, false, false);
                            object = J$.N(3597937, 'object', object, true, false, false);
                            J$.N(3597945, 'result', result, false, false, false);
                            J$.N(3597953, 'bits', bits, false, false, false);
                            J$.N(3597961, 'idx', idx, false, false, false);
                            J$.N(3597969, 'tail', tail, false, false, false);
                            J$.N(3597977, 'max', max, false, false, false);
                            J$.N(3597985, 'map', map, false, false, false);
                            var result = J$.W(3596841, 'result', J$.T(3596801, '', 21, false), result, false, false), bits = J$.W(3596849, 'bits', J$.T(3596809, 0, 22, false), bits, false, false), idx, tail, max = J$.W(3596857, 'max', J$.G(3596825, J$.R(3596817, 'object', object, false, false), 'length'), max, false, false), map = J$.W(3596865, 'map', J$.R(3596833, 'BASE64_MAP', BASE64_MAP, false, true), map, false, false);
                            for (idx = J$.W(3596881, 'idx', J$.T(3596873, 0, 22, false), idx, false, false); J$.C(189224, J$.B(395754, '<', J$.R(3596889, 'idx', idx, false, false), J$.R(3596897, 'max', max, false, false))); J$.B(395778, '-', idx = J$.W(3596913, 'idx', J$.B(395770, '+', J$.U(395762, '+', J$.R(3596905, 'idx', idx, false, false)), 1), idx, false, false), 1)) {
                                if (J$.C(189216, J$.C(189208, J$.B(395794, '===', J$.B(395786, '%', J$.R(3596921, 'idx', idx, false, false), J$.T(3596929, 3, 22, false)), J$.T(3596937, 0, 22, false))) ? J$.R(3596945, 'idx', idx, false, false) : J$._())) {
                                    result = J$.W(3597001, 'result', J$.B(395818, '+', J$.R(3596993, 'result', result, false, false), J$.G(3596985, J$.R(3596953, 'map', map, false, false), J$.B(395810, '&', J$.B(395802, '>>', J$.R(3596961, 'bits', bits, false, false), J$.T(3596969, 18, 22, false)), J$.T(3596977, 63, 22, false)))), result, false, false);
                                    result = J$.W(3597057, 'result', J$.B(395842, '+', J$.R(3597049, 'result', result, false, false), J$.G(3597041, J$.R(3597009, 'map', map, false, false), J$.B(395834, '&', J$.B(395826, '>>', J$.R(3597017, 'bits', bits, false, false), J$.T(3597025, 12, 22, false)), J$.T(3597033, 63, 22, false)))), result, false, false);
                                    result = J$.W(3597113, 'result', J$.B(395866, '+', J$.R(3597105, 'result', result, false, false), J$.G(3597097, J$.R(3597065, 'map', map, false, false), J$.B(395858, '&', J$.B(395850, '>>', J$.R(3597073, 'bits', bits, false, false), J$.T(3597081, 6, 22, false)), J$.T(3597089, 63, 22, false)))), result, false, false);
                                    result = J$.W(3597161, 'result', J$.B(395882, '+', J$.R(3597153, 'result', result, false, false), J$.G(3597145, J$.R(3597121, 'map', map, false, false), J$.B(395874, '&', J$.R(3597129, 'bits', bits, false, false), J$.T(3597137, 63, 22, false)))), result, false, false);
                                }
                                bits = J$.W(3597209, 'bits', J$.B(395898, '+', J$.B(395890, '<<', J$.R(3597169, 'bits', bits, false, false), J$.T(3597177, 8, 22, false)), J$.G(3597201, J$.R(3597185, 'object', object, false, false), J$.R(3597193, 'idx', idx, false, false))), bits, false, false);
                            }
                            tail = J$.W(3597233, 'tail', J$.B(395906, '%', J$.R(3597217, 'max', max, false, false), J$.T(3597225, 3, 22, false)), tail, false, false);
                            if (J$.C(189248, J$.B(395914, '===', J$.R(3597241, 'tail', tail, false, false), J$.T(3597249, 0, 22, false)))) {
                                result = J$.W(3597305, 'result', J$.B(395938, '+', J$.R(3597297, 'result', result, false, false), J$.G(3597289, J$.R(3597257, 'map', map, false, false), J$.B(395930, '&', J$.B(395922, '>>', J$.R(3597265, 'bits', bits, false, false), J$.T(3597273, 18, 22, false)), J$.T(3597281, 63, 22, false)))), result, false, false);
                                result = J$.W(3597361, 'result', J$.B(395962, '+', J$.R(3597353, 'result', result, false, false), J$.G(3597345, J$.R(3597313, 'map', map, false, false), J$.B(395954, '&', J$.B(395946, '>>', J$.R(3597321, 'bits', bits, false, false), J$.T(3597329, 12, 22, false)), J$.T(3597337, 63, 22, false)))), result, false, false);
                                result = J$.W(3597417, 'result', J$.B(395986, '+', J$.R(3597409, 'result', result, false, false), J$.G(3597401, J$.R(3597369, 'map', map, false, false), J$.B(395978, '&', J$.B(395970, '>>', J$.R(3597377, 'bits', bits, false, false), J$.T(3597385, 6, 22, false)), J$.T(3597393, 63, 22, false)))), result, false, false);
                                result = J$.W(3597465, 'result', J$.B(396002, '+', J$.R(3597457, 'result', result, false, false), J$.G(3597449, J$.R(3597425, 'map', map, false, false), J$.B(395994, '&', J$.R(3597433, 'bits', bits, false, false), J$.T(3597441, 63, 22, false)))), result, false, false);
                            } else if (J$.C(189240, J$.B(396010, '===', J$.R(3597473, 'tail', tail, false, false), J$.T(3597481, 2, 22, false)))) {
                                result = J$.W(3597537, 'result', J$.B(396034, '+', J$.R(3597529, 'result', result, false, false), J$.G(3597521, J$.R(3597489, 'map', map, false, false), J$.B(396026, '&', J$.B(396018, '>>', J$.R(3597497, 'bits', bits, false, false), J$.T(3597505, 10, 22, false)), J$.T(3597513, 63, 22, false)))), result, false, false);
                                result = J$.W(3597593, 'result', J$.B(396058, '+', J$.R(3597585, 'result', result, false, false), J$.G(3597577, J$.R(3597545, 'map', map, false, false), J$.B(396050, '&', J$.B(396042, '>>', J$.R(3597553, 'bits', bits, false, false), J$.T(3597561, 4, 22, false)), J$.T(3597569, 63, 22, false)))), result, false, false);
                                result = J$.W(3597649, 'result', J$.B(396082, '+', J$.R(3597641, 'result', result, false, false), J$.G(3597633, J$.R(3597601, 'map', map, false, false), J$.B(396074, '&', J$.B(396066, '<<', J$.R(3597609, 'bits', bits, false, false), J$.T(3597617, 2, 22, false)), J$.T(3597625, 63, 22, false)))), result, false, false);
                                result = J$.W(3597689, 'result', J$.B(396090, '+', J$.R(3597681, 'result', result, false, false), J$.G(3597673, J$.R(3597657, 'map', map, false, false), J$.T(3597665, 64, 22, false))), result, false, false);
                            } else if (J$.C(189232, J$.B(396098, '===', J$.R(3597697, 'tail', tail, false, false), J$.T(3597705, 1, 22, false)))) {
                                result = J$.W(3597761, 'result', J$.B(396122, '+', J$.R(3597753, 'result', result, false, false), J$.G(3597745, J$.R(3597713, 'map', map, false, false), J$.B(396114, '&', J$.B(396106, '>>', J$.R(3597721, 'bits', bits, false, false), J$.T(3597729, 2, 22, false)), J$.T(3597737, 63, 22, false)))), result, false, false);
                                result = J$.W(3597817, 'result', J$.B(396146, '+', J$.R(3597809, 'result', result, false, false), J$.G(3597801, J$.R(3597769, 'map', map, false, false), J$.B(396138, '&', J$.B(396130, '<<', J$.R(3597777, 'bits', bits, false, false), J$.T(3597785, 4, 22, false)), J$.T(3597793, 63, 22, false)))), result, false, false);
                                result = J$.W(3597857, 'result', J$.B(396154, '+', J$.R(3597849, 'result', result, false, false), J$.G(3597841, J$.R(3597825, 'map', map, false, false), J$.T(3597833, 64, 22, false))), result, false, false);
                                result = J$.W(3597897, 'result', J$.B(396162, '+', J$.R(3597889, 'result', result, false, false), J$.G(3597881, J$.R(3597865, 'map', map, false, false), J$.T(3597873, 64, 22, false))), result, false, false);
                            }
                            return J$.Rt(3597913, J$.R(3597905, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3598281, J$e);
                        } finally {
                            if (J$.Fr(3598289))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isBinary(object) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3598033, arguments.callee, this, arguments);
                            arguments = J$.N(3598041, 'arguments', arguments, true, false, false);
                            object = J$.N(3598049, 'object', object, true, false, false);
                            return J$.Rt(3598025, J$.C(189256, J$.R(3597993, 'NodeBuffer', NodeBuffer, false, true)) ? J$.M(3598017, J$.R(3598001, 'NodeBuffer', NodeBuffer, false, true), 'isBuffer', false)(J$.R(3598009, 'object', object, false, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(3598297, J$e);
                        } finally {
                            if (J$.Fr(3598305))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3598153, 'NodeBuffer', NodeBuffer, false, false, false);
            J$.N(3598161, '_require', _require, false, false, false);
            J$.N(3598169, 'Type', Type, false, false, false);
            J$.N(3598177, 'BASE64_MAP', BASE64_MAP, false, false, false);
            resolveYamlBinary = J$.N(3598193, 'resolveYamlBinary', J$.T(3598185, resolveYamlBinary, 12, false), true, false, false);
            constructYamlBinary = J$.N(3598209, 'constructYamlBinary', J$.T(3598201, constructYamlBinary, 12, false), true, false, false);
            representYamlBinary = J$.N(3598225, 'representYamlBinary', J$.T(3598217, representYamlBinary, 12, false), true, false, false);
            isBinary = J$.N(3598241, 'isBinary', J$.T(3598233, isBinary, 12, false), true, false, false);
            J$.T(3595473, 'use strict', 21, false);
            var NodeBuffer;
            try {
                var _require = J$.W(3595489, '_require', J$.I(typeof require === 'undefined' ? require = J$.R(3595481, 'require', undefined, true, true) : require = J$.R(3595481, 'require', require, true, true)), _require, false, true);
                NodeBuffer = J$.W(3595529, 'NodeBuffer', J$.G(3595521, J$.F(3595513, J$.R(3595497, '_require', _require, false, true), false)(J$.T(3595505, 'buffer', 21, false)), 'Buffer'), NodeBuffer, false, true);
            } catch (__) {
                J$.N(3595537, '__', __, false, false, true);
            }
            var Type = J$.W(3595569, 'Type', J$.F(3595561, J$.I(typeof require === 'undefined' ? require = J$.R(3595545, 'require', undefined, true, true) : require = J$.R(3595545, 'require', require, true, true)), false)(J$.T(3595553, '../type', 21, false)), Type, false, true);
            var BASE64_MAP = J$.W(3595585, 'BASE64_MAP', J$.T(3595577, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r', 21, false), BASE64_MAP, false, true);
            J$.P(3598137, J$.I(typeof module === 'undefined' ? module = J$.R(3598057, 'module', undefined, true, true) : module = J$.R(3598057, 'module', module, true, true)), 'exports', J$.F(3598129, J$.R(3598065, 'Type', Type, false, true), true)(J$.T(3598073, 'tag:yaml.org,2002:binary', 21, false), J$.T(3598121, {
                kind: J$.T(3598081, 'scalar', 21, false),
                resolve: J$.R(3598089, 'resolveYamlBinary', resolveYamlBinary, false, true),
                construct: J$.R(3598097, 'constructYamlBinary', constructYamlBinary, false, true),
                predicate: J$.R(3598105, 'isBinary', isBinary, false, true),
                represent: J$.R(3598113, 'representYamlBinary', representYamlBinary, false, true)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(3598313, J$e);
        } finally {
            if (J$.Sr(3598321))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

