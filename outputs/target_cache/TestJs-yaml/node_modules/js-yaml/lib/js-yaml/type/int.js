J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(3604585, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/int.js');
            function isHexCode(c) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3601353, arguments.callee, this, arguments);
                            arguments = J$.N(3601361, 'arguments', arguments, true, false, false);
                            c = J$.N(3601369, 'c', c, true, false, false);
                            return J$.Rt(3601345, J$.C(189624, J$.C(189608, J$.C(189592, J$.B(396474, '<=', J$.T(3601249, 48, 22, false), J$.R(3601257, 'c', c, false, false))) ? J$.B(396482, '<=', J$.R(3601265, 'c', c, false, false), J$.T(3601273, 57, 22, false)) : J$._()) ? J$._() : J$.C(189600, J$.B(396490, '<=', J$.T(3601281, 65, 22, false), J$.R(3601289, 'c', c, false, false))) ? J$.B(396498, '<=', J$.R(3601297, 'c', c, false, false), J$.T(3601305, 70, 22, false)) : J$._()) ? J$._() : J$.C(189616, J$.B(396506, '<=', J$.T(3601313, 97, 22, false), J$.R(3601321, 'c', c, false, false))) ? J$.B(396514, '<=', J$.R(3601329, 'c', c, false, false), J$.T(3601337, 102, 22, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(3604705, J$e);
                        } finally {
                            if (J$.Fr(3604713))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isOctCode(c) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3601417, arguments.callee, this, arguments);
                            arguments = J$.N(3601425, 'arguments', arguments, true, false, false);
                            c = J$.N(3601433, 'c', c, true, false, false);
                            return J$.Rt(3601409, J$.C(189632, J$.B(396522, '<=', J$.T(3601377, 48, 22, false), J$.R(3601385, 'c', c, false, false))) ? J$.B(396530, '<=', J$.R(3601393, 'c', c, false, false), J$.T(3601401, 55, 22, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(3604721, J$e);
                        } finally {
                            if (J$.Fr(3604729))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isDecCode(c) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3601481, arguments.callee, this, arguments);
                            arguments = J$.N(3601489, 'arguments', arguments, true, false, false);
                            c = J$.N(3601497, 'c', c, true, false, false);
                            return J$.Rt(3601473, J$.C(189640, J$.B(396538, '<=', J$.T(3601441, 48, 22, false), J$.R(3601449, 'c', c, false, false))) ? J$.B(396546, '<=', J$.R(3601457, 'c', c, false, false), J$.T(3601465, 57, 22, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(3604737, J$e);
                        } finally {
                            if (J$.Fr(3604745))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function resolveYamlInteger(data) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3602745, arguments.callee, this, arguments);
                            arguments = J$.N(3602753, 'arguments', arguments, true, false, false);
                            data = J$.N(3602761, 'data', data, true, false, false);
                            J$.N(3602769, 'max', max, false, false, false);
                            J$.N(3602777, 'index', index, false, false, false);
                            J$.N(3602785, 'hasDigits', hasDigits, false, false, false);
                            J$.N(3602793, 'ch', ch, false, false, false);
                            if (J$.C(189648, J$.B(396554, '===', J$.R(3601505, 'data', data, false, false), J$.T(3601513, null, 25, false))))
                                return J$.Rt(3601529, J$.T(3601521, false, 23, false));
                            var max = J$.W(3601569, 'max', J$.G(3601545, J$.R(3601537, 'data', data, false, false), 'length'), max, false, false), index = J$.W(3601577, 'index', J$.T(3601553, 0, 22, false), index, false, false), hasDigits = J$.W(3601585, 'hasDigits', J$.T(3601561, false, 23, false), hasDigits, false, false), ch;
                            if (J$.C(189656, J$.U(396562, '!', J$.R(3601593, 'max', max, false, false))))
                                return J$.Rt(3601609, J$.T(3601601, false, 23, false));
                            ch = J$.W(3601641, 'ch', J$.G(3601633, J$.R(3601617, 'data', data, false, false), J$.R(3601625, 'index', index, false, false)), ch, false, false);
                            if (J$.C(189672, J$.C(189664, J$.B(396570, '===', J$.R(3601649, 'ch', ch, false, false), J$.T(3601657, '-', 21, false))) ? J$._() : J$.B(396578, '===', J$.R(3601665, 'ch', ch, false, false), J$.T(3601673, '+', 21, false)))) {
                                ch = J$.W(3601713, 'ch', J$.G(3601705, J$.R(3601681, 'data', data, false, false), index = J$.W(3601697, 'index', J$.B(396594, '+', J$.U(396586, '+', J$.R(3601689, 'index', index, false, false)), 1), index, false, false)), ch, false, false);
                            }
                            if (J$.C(189808, J$.B(396602, '===', J$.R(3601721, 'ch', ch, false, false), J$.T(3601729, '0', 21, false)))) {
                                if (J$.C(189680, J$.B(396618, '===', J$.B(396610, '+', J$.R(3601737, 'index', index, false, false), J$.T(3601745, 1, 22, false)), J$.R(3601753, 'max', max, false, false))))
                                    return J$.Rt(3601769, J$.T(3601761, true, 23, false));
                                ch = J$.W(3601809, 'ch', J$.G(3601801, J$.R(3601777, 'data', data, false, false), index = J$.W(3601793, 'index', J$.B(396634, '+', J$.U(396626, '+', J$.R(3601785, 'index', index, false, false)), 1), index, false, false)), ch, false, false);
                                if (J$.C(189728, J$.B(396642, '===', J$.R(3601817, 'ch', ch, false, false), J$.T(3601825, 'b', 21, false)))) {
                                    J$.B(396666, '-', index = J$.W(3601841, 'index', J$.B(396658, '+', J$.U(396650, '+', J$.R(3601833, 'index', index, false, false)), 1), index, false, false), 1);
                                    for (; J$.C(189712, J$.B(396674, '<', J$.R(3601849, 'index', index, false, false), J$.R(3601857, 'max', max, false, false))); J$.B(396698, '-', index = J$.W(3601873, 'index', J$.B(396690, '+', J$.U(396682, '+', J$.R(3601865, 'index', index, false, false)), 1), index, false, false), 1)) {
                                        ch = J$.W(3601905, 'ch', J$.G(3601897, J$.R(3601881, 'data', data, false, false), J$.R(3601889, 'index', index, false, false)), ch, false, false);
                                        if (J$.C(189688, J$.B(396706, '===', J$.R(3601913, 'ch', ch, false, false), J$.T(3601921, '_', 21, false))))
                                            continue;
                                        if (J$.C(189704, J$.C(189696, J$.B(396714, '!==', J$.R(3601929, 'ch', ch, false, false), J$.T(3601937, '0', 21, false))) ? J$.B(396722, '!==', J$.R(3601945, 'ch', ch, false, false), J$.T(3601953, '1', 21, false)) : J$._()))
                                            return J$.Rt(3601969, J$.T(3601961, false, 23, false));
                                        hasDigits = J$.W(3601985, 'hasDigits', J$.T(3601977, true, 23, false), hasDigits, false, false);
                                    }
                                    return J$.Rt(3602017, J$.C(189720, J$.R(3601993, 'hasDigits', hasDigits, false, false)) ? J$.B(396730, '!==', J$.R(3602001, 'ch', ch, false, false), J$.T(3602009, '_', 21, false)) : J$._());
                                }
                                if (J$.C(189768, J$.B(396738, '===', J$.R(3602025, 'ch', ch, false, false), J$.T(3602033, 'x', 21, false)))) {
                                    J$.B(396762, '-', index = J$.W(3602049, 'index', J$.B(396754, '+', J$.U(396746, '+', J$.R(3602041, 'index', index, false, false)), 1), index, false, false), 1);
                                    for (; J$.C(189752, J$.B(396770, '<', J$.R(3602057, 'index', index, false, false), J$.R(3602065, 'max', max, false, false))); J$.B(396794, '-', index = J$.W(3602081, 'index', J$.B(396786, '+', J$.U(396778, '+', J$.R(3602073, 'index', index, false, false)), 1), index, false, false), 1)) {
                                        ch = J$.W(3602113, 'ch', J$.G(3602105, J$.R(3602089, 'data', data, false, false), J$.R(3602097, 'index', index, false, false)), ch, false, false);
                                        if (J$.C(189736, J$.B(396802, '===', J$.R(3602121, 'ch', ch, false, false), J$.T(3602129, '_', 21, false))))
                                            continue;
                                        if (J$.C(189744, J$.U(396810, '!', J$.F(3602169, J$.R(3602137, 'isHexCode', isHexCode, false, true), false)(J$.M(3602161, J$.R(3602145, 'data', data, false, false), 'charCodeAt', false)(J$.R(3602153, 'index', index, false, false))))))
                                            return J$.Rt(3602185, J$.T(3602177, false, 23, false));
                                        hasDigits = J$.W(3602201, 'hasDigits', J$.T(3602193, true, 23, false), hasDigits, false, false);
                                    }
                                    return J$.Rt(3602233, J$.C(189760, J$.R(3602209, 'hasDigits', hasDigits, false, false)) ? J$.B(396818, '!==', J$.R(3602217, 'ch', ch, false, false), J$.T(3602225, '_', 21, false)) : J$._());
                                }
                                for (; J$.C(189792, J$.B(396826, '<', J$.R(3602241, 'index', index, false, false), J$.R(3602249, 'max', max, false, false))); J$.B(396850, '-', index = J$.W(3602265, 'index', J$.B(396842, '+', J$.U(396834, '+', J$.R(3602257, 'index', index, false, false)), 1), index, false, false), 1)) {
                                    ch = J$.W(3602297, 'ch', J$.G(3602289, J$.R(3602273, 'data', data, false, false), J$.R(3602281, 'index', index, false, false)), ch, false, false);
                                    if (J$.C(189776, J$.B(396858, '===', J$.R(3602305, 'ch', ch, false, false), J$.T(3602313, '_', 21, false))))
                                        continue;
                                    if (J$.C(189784, J$.U(396866, '!', J$.F(3602353, J$.R(3602321, 'isOctCode', isOctCode, false, true), false)(J$.M(3602345, J$.R(3602329, 'data', data, false, false), 'charCodeAt', false)(J$.R(3602337, 'index', index, false, false))))))
                                        return J$.Rt(3602369, J$.T(3602361, false, 23, false));
                                    hasDigits = J$.W(3602385, 'hasDigits', J$.T(3602377, true, 23, false), hasDigits, false, false);
                                }
                                return J$.Rt(3602417, J$.C(189800, J$.R(3602393, 'hasDigits', hasDigits, false, false)) ? J$.B(396874, '!==', J$.R(3602401, 'ch', ch, false, false), J$.T(3602409, '_', 21, false)) : J$._());
                            }
                            if (J$.C(189816, J$.B(396882, '===', J$.R(3602425, 'ch', ch, false, false), J$.T(3602433, '_', 21, false))))
                                return J$.Rt(3602449, J$.T(3602441, false, 23, false));
                            for (; J$.C(189848, J$.B(396890, '<', J$.R(3602457, 'index', index, false, false), J$.R(3602465, 'max', max, false, false))); J$.B(396914, '-', index = J$.W(3602481, 'index', J$.B(396906, '+', J$.U(396898, '+', J$.R(3602473, 'index', index, false, false)), 1), index, false, false), 1)) {
                                ch = J$.W(3602513, 'ch', J$.G(3602505, J$.R(3602489, 'data', data, false, false), J$.R(3602497, 'index', index, false, false)), ch, false, false);
                                if (J$.C(189824, J$.B(396922, '===', J$.R(3602521, 'ch', ch, false, false), J$.T(3602529, '_', 21, false))))
                                    continue;
                                if (J$.C(189832, J$.B(396930, '===', J$.R(3602537, 'ch', ch, false, false), J$.T(3602545, ':', 21, false))))
                                    break;
                                if (J$.C(189840, J$.U(396938, '!', J$.F(3602585, J$.R(3602553, 'isDecCode', isDecCode, false, true), false)(J$.M(3602577, J$.R(3602561, 'data', data, false, false), 'charCodeAt', false)(J$.R(3602569, 'index', index, false, false)))))) {
                                    return J$.Rt(3602601, J$.T(3602593, false, 23, false));
                                }
                                hasDigits = J$.W(3602617, 'hasDigits', J$.T(3602609, true, 23, false), hasDigits, false, false);
                            }
                            if (J$.C(189864, J$.C(189856, J$.U(396946, '!', J$.R(3602625, 'hasDigits', hasDigits, false, false))) ? J$._() : J$.B(396954, '===', J$.R(3602633, 'ch', ch, false, false), J$.T(3602641, '_', 21, false))))
                                return J$.Rt(3602657, J$.T(3602649, false, 23, false));
                            if (J$.C(189872, J$.B(396962, '!==', J$.R(3602665, 'ch', ch, false, false), J$.T(3602673, ':', 21, false))))
                                return J$.Rt(3602689, J$.T(3602681, true, 23, false));
                            return J$.Rt(3602737, J$.M(3602729, J$.T(3602697, /^(:[0-5]?[0-9])+$/, 14, false), 'test', false)(J$.M(3602721, J$.R(3602705, 'data', data, false, false), 'slice', false)(J$.R(3602713, 'index', index, false, false))));
                        } catch (J$e) {
                            J$.Ex(3604753, J$e);
                        } finally {
                            if (J$.Fr(3604761))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlInteger(data) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(3603705, arguments.callee, this, arguments);
                            arguments = J$.N(3603713, 'arguments', arguments, true, false, false);
                            data = J$.N(3603721, 'data', data, true, false, false);
                            J$.N(3603729, 'value', value, false, false, false);
                            J$.N(3603737, 'sign', sign, false, false, false);
                            J$.N(3603745, 'ch', ch, false, false, false);
                            J$.N(3603753, 'base', base, false, false, false);
                            J$.N(3603761, 'digits', digits, false, false, false);
                            var value = J$.W(3602825, 'value', J$.R(3602801, 'data', data, false, false), value, false, false), sign = J$.W(3602833, 'sign', J$.T(3602809, 1, 22, false), sign, false, false), ch, base, digits = J$.W(3602841, 'digits', J$.T(3602817, [], 10, false), digits, false, false);
                            if (J$.C(189880, J$.B(396978, '!==', J$.M(3602865, J$.R(3602849, 'value', value, false, false), 'indexOf', false)(J$.T(3602857, '_', 21, false)), J$.U(396970, '-', J$.T(3602873, 1, 22, false))))) {
                                value = J$.W(3602913, 'value', J$.M(3602905, J$.R(3602881, 'value', value, false, false), 'replace', false)(J$.T(3602889, /_/g, 14, false), J$.T(3602897, '', 21, false)), value, false, false);
                            }
                            ch = J$.W(3602945, 'ch', J$.G(3602937, J$.R(3602921, 'value', value, false, false), J$.T(3602929, 0, 22, false)), ch, false, false);
                            if (J$.C(189904, J$.C(189888, J$.B(396986, '===', J$.R(3602953, 'ch', ch, false, false), J$.T(3602961, '-', 21, false))) ? J$._() : J$.B(396994, '===', J$.R(3602969, 'ch', ch, false, false), J$.T(3602977, '+', 21, false)))) {
                                if (J$.C(189896, J$.B(397002, '===', J$.R(3602985, 'ch', ch, false, false), J$.T(3602993, '-', 21, false))))
                                    sign = J$.W(3603009, 'sign', J$.U(397010, '-', J$.T(3603001, 1, 22, false)), sign, false, false);
                                value = J$.W(3603041, 'value', J$.M(3603033, J$.R(3603017, 'value', value, false, false), 'slice', false)(J$.T(3603025, 1, 22, false)), value, false, false);
                                ch = J$.W(3603073, 'ch', J$.G(3603065, J$.R(3603049, 'value', value, false, false), J$.T(3603057, 0, 22, false)), ch, false, false);
                            }
                            if (J$.C(189912, J$.B(397018, '===', J$.R(3603081, 'value', value, false, false), J$.T(3603089, '0', 21, false))))
                                return J$.Rt(3603105, J$.T(3603097, 0, 22, false));
                            if (J$.C(189936, J$.B(397026, '===', J$.R(3603113, 'ch', ch, false, false), J$.T(3603121, '0', 21, false)))) {
                                if (J$.C(189920, J$.B(397034, '===', J$.G(3603145, J$.R(3603129, 'value', value, false, false), J$.T(3603137, 1, 22, false)), J$.T(3603153, 'b', 21, false))))
                                    return J$.Rt(3603217, J$.B(397042, '*', J$.R(3603161, 'sign', sign, false, false), J$.F(3603209, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3603169, 'parseInt', undefined, true, true) : parseInt = J$.R(3603169, 'parseInt', parseInt, true, true)), false)(J$.M(3603193, J$.R(3603177, 'value', value, false, false), 'slice', false)(J$.T(3603185, 2, 22, false)), J$.T(3603201, 2, 22, false))));
                                if (J$.C(189928, J$.B(397050, '===', J$.G(3603241, J$.R(3603225, 'value', value, false, false), J$.T(3603233, 1, 22, false)), J$.T(3603249, 'x', 21, false))))
                                    return J$.Rt(3603297, J$.B(397058, '*', J$.R(3603257, 'sign', sign, false, false), J$.F(3603289, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3603265, 'parseInt', undefined, true, true) : parseInt = J$.R(3603265, 'parseInt', parseInt, true, true)), false)(J$.R(3603273, 'value', value, false, false), J$.T(3603281, 16, 22, false))));
                                return J$.Rt(3603345, J$.B(397066, '*', J$.R(3603305, 'sign', sign, false, false), J$.F(3603337, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3603313, 'parseInt', undefined, true, true) : parseInt = J$.R(3603313, 'parseInt', parseInt, true, true)), false)(J$.R(3603321, 'value', value, false, false), J$.T(3603329, 8, 22, false))));
                            }
                            if (J$.C(189944, J$.B(397082, '!==', J$.M(3603369, J$.R(3603353, 'value', value, false, false), 'indexOf', false)(J$.T(3603361, ':', 21, false)), J$.U(397074, '-', J$.T(3603377, 1, 22, false))))) {
                                J$.M(3603489, J$.M(3603401, J$.R(3603385, 'value', value, false, false), 'split', false)(J$.T(3603393, ':', 21, false)), 'forEach', false)(J$.T(3603481, function (v) {
                                    jalangiLabel4:
                                        while (true) {
                                            try {
                                                J$.Fe(3603457, arguments.callee, this, arguments);
                                                arguments = J$.N(3603465, 'arguments', arguments, true, false, false);
                                                v = J$.N(3603473, 'v', v, true, false, false);
                                                J$.M(3603449, J$.R(3603409, 'digits', digits, false, false), 'unshift', false)(J$.F(3603441, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3603417, 'parseInt', undefined, true, true) : parseInt = J$.R(3603417, 'parseInt', parseInt, true, true)), false)(J$.R(3603425, 'v', v, false, false), J$.T(3603433, 10, 22, false)));
                                            } catch (J$e) {
                                                J$.Ex(3604769, J$e);
                                            } finally {
                                                if (J$.Fr(3604777))
                                                    continue jalangiLabel4;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                value = J$.W(3603505, 'value', J$.T(3603497, 0, 22, false), value, false, false);
                                base = J$.W(3603521, 'base', J$.T(3603513, 1, 22, false), base, false, false);
                                J$.M(3603625, J$.R(3603529, 'digits', digits, false, false), 'forEach', false)(J$.T(3603617, function (d) {
                                    jalangiLabel5:
                                        while (true) {
                                            try {
                                                J$.Fe(3603593, arguments.callee, this, arguments);
                                                arguments = J$.N(3603601, 'arguments', arguments, true, false, false);
                                                d = J$.N(3603609, 'd', d, true, false, false);
                                                value = J$.W(3603561, 'value', J$.B(397098, '+', J$.R(3603553, 'value', value, false, false), J$.B(397090, '*', J$.R(3603537, 'd', d, false, false), J$.R(3603545, 'base', base, false, false))), value, false, false);
                                                base = J$.W(3603585, 'base', J$.B(397106, '*', J$.R(3603577, 'base', base, false, false), J$.T(3603569, 60, 22, false)), base, false, false);
                                            } catch (J$e) {
                                                J$.Ex(3604785, J$e);
                                            } finally {
                                                if (J$.Fr(3604793))
                                                    continue jalangiLabel5;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                return J$.Rt(3603649, J$.B(397114, '*', J$.R(3603633, 'sign', sign, false, false), J$.R(3603641, 'value', value, false, false)));
                            }
                            return J$.Rt(3603697, J$.B(397122, '*', J$.R(3603657, 'sign', sign, false, false), J$.F(3603689, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3603665, 'parseInt', undefined, true, true) : parseInt = J$.R(3603665, 'parseInt', parseInt, true, true)), false)(J$.R(3603673, 'value', value, false, false), J$.T(3603681, 10, 22, false))));
                        } catch (J$e) {
                            J$.Ex(3604801, J$e);
                        } finally {
                            if (J$.Fr(3604809))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isInteger(object) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(3603873, arguments.callee, this, arguments);
                            arguments = J$.N(3603881, 'arguments', arguments, true, false, false);
                            object = J$.N(3603889, 'object', object, true, false, false);
                            return J$.Rt(3603865, J$.C(189960, J$.B(397130, '===', J$.M(3603801, J$.G(3603785, J$.G(3603777, J$.I(typeof Object === 'undefined' ? Object = J$.R(3603769, 'Object', undefined, true, true) : Object = J$.R(3603769, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(3603793, 'object', object, false, false)), J$.T(3603809, '[object Number]', 21, false))) ? J$.C(189952, J$.B(397146, '===', J$.B(397138, '%', J$.R(3603817, 'object', object, false, false), J$.T(3603825, 1, 22, false)), J$.T(3603833, 0, 22, false))) ? J$.U(397154, '!', J$.M(3603857, J$.R(3603841, 'common', common, false, true), 'isNegativeZero', false)(J$.R(3603849, 'object', object, false, false))) : J$._() : J$._());
                        } catch (J$e) {
                            J$.Ex(3604817, J$e);
                        } finally {
                            if (J$.Fr(3604825))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3604593, 'common', common, false, false, false);
            J$.N(3604601, 'Type', Type, false, false, false);
            isHexCode = J$.N(3604617, 'isHexCode', J$.T(3604609, isHexCode, 12, false), true, false, false);
            isOctCode = J$.N(3604633, 'isOctCode', J$.T(3604625, isOctCode, 12, false), true, false, false);
            isDecCode = J$.N(3604649, 'isDecCode', J$.T(3604641, isDecCode, 12, false), true, false, false);
            resolveYamlInteger = J$.N(3604665, 'resolveYamlInteger', J$.T(3604657, resolveYamlInteger, 12, false), true, false, false);
            constructYamlInteger = J$.N(3604681, 'constructYamlInteger', J$.T(3604673, constructYamlInteger, 12, false), true, false, false);
            isInteger = J$.N(3604697, 'isInteger', J$.T(3604689, isInteger, 12, false), true, false, false);
            J$.T(3601177, 'use strict', 21, false);
            var common = J$.W(3601209, 'common', J$.F(3601201, J$.I(typeof require === 'undefined' ? require = J$.R(3601185, 'require', undefined, true, true) : require = J$.R(3601185, 'require', require, true, true)), false)(J$.T(3601193, '../common', 21, false)), common, false, true);
            var Type = J$.W(3601241, 'Type', J$.F(3601233, J$.I(typeof require === 'undefined' ? require = J$.R(3601217, 'require', undefined, true, true) : require = J$.R(3601217, 'require', require, true, true)), false)(J$.T(3601225, '../type', 21, false)), Type, false, true);
            J$.P(3604577, J$.I(typeof module === 'undefined' ? module = J$.R(3603897, 'module', undefined, true, true) : module = J$.R(3603897, 'module', module, true, true)), 'exports', J$.F(3604569, J$.R(3603905, 'Type', Type, false, true), true)(J$.T(3603913, 'tag:yaml.org,2002:int', 21, false), J$.T(3604561, {
                kind: J$.T(3603921, 'scalar', 21, false),
                resolve: J$.R(3603929, 'resolveYamlInteger', resolveYamlInteger, false, true),
                construct: J$.R(3603937, 'constructYamlInteger', constructYamlInteger, false, true),
                predicate: J$.R(3603945, 'isInteger', isInteger, false, true),
                represent: J$.T(3604441, {
                    binary: J$.T(3604081, function (obj) {
                        jalangiLabel8:
                            while (true) {
                                try {
                                    J$.Fe(3604057, arguments.callee, this, arguments);
                                    arguments = J$.N(3604065, 'arguments', arguments, true, false, false);
                                    obj = J$.N(3604073, 'obj', obj, true, false, false);
                                    return J$.Rt(3604049, J$.C(189968, J$.B(397162, '>=', J$.R(3603953, 'obj', obj, false, false), J$.T(3603961, 0, 22, false))) ? J$.B(397170, '+', J$.T(3603969, '0b', 21, false), J$.M(3603993, J$.R(3603977, 'obj', obj, false, false), 'toString', false)(J$.T(3603985, 2, 22, false))) : J$.B(397178, '+', J$.T(3604001, '-0b', 21, false), J$.M(3604041, J$.M(3604025, J$.R(3604009, 'obj', obj, false, false), 'toString', false)(J$.T(3604017, 2, 22, false)), 'slice', false)(J$.T(3604033, 1, 22, false))));
                                } catch (J$e) {
                                    J$.Ex(3604833, J$e);
                                } finally {
                                    if (J$.Fr(3604841))
                                        continue jalangiLabel8;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    octal: J$.T(3604217, function (obj) {
                        jalangiLabel9:
                            while (true) {
                                try {
                                    J$.Fe(3604193, arguments.callee, this, arguments);
                                    arguments = J$.N(3604201, 'arguments', arguments, true, false, false);
                                    obj = J$.N(3604209, 'obj', obj, true, false, false);
                                    return J$.Rt(3604185, J$.C(189976, J$.B(397186, '>=', J$.R(3604089, 'obj', obj, false, false), J$.T(3604097, 0, 22, false))) ? J$.B(397194, '+', J$.T(3604105, '0', 21, false), J$.M(3604129, J$.R(3604113, 'obj', obj, false, false), 'toString', false)(J$.T(3604121, 8, 22, false))) : J$.B(397202, '+', J$.T(3604137, '-0', 21, false), J$.M(3604177, J$.M(3604161, J$.R(3604145, 'obj', obj, false, false), 'toString', false)(J$.T(3604153, 8, 22, false)), 'slice', false)(J$.T(3604169, 1, 22, false))));
                                } catch (J$e) {
                                    J$.Ex(3604849, J$e);
                                } finally {
                                    if (J$.Fr(3604857))
                                        continue jalangiLabel9;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    decimal: J$.T(3604281, function (obj) {
                        jalangiLabel10:
                            while (true) {
                                try {
                                    J$.Fe(3604257, arguments.callee, this, arguments);
                                    arguments = J$.N(3604265, 'arguments', arguments, true, false, false);
                                    obj = J$.N(3604273, 'obj', obj, true, false, false);
                                    return J$.Rt(3604249, J$.M(3604241, J$.R(3604225, 'obj', obj, false, false), 'toString', false)(J$.T(3604233, 10, 22, false)));
                                } catch (J$e) {
                                    J$.Ex(3604865, J$e);
                                } finally {
                                    if (J$.Fr(3604873))
                                        continue jalangiLabel10;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    hexadecimal: J$.T(3604433, function (obj) {
                        jalangiLabel11:
                            while (true) {
                                try {
                                    J$.Fe(3604409, arguments.callee, this, arguments);
                                    arguments = J$.N(3604417, 'arguments', arguments, true, false, false);
                                    obj = J$.N(3604425, 'obj', obj, true, false, false);
                                    return J$.Rt(3604401, J$.C(189984, J$.B(397210, '>=', J$.R(3604289, 'obj', obj, false, false), J$.T(3604297, 0, 22, false))) ? J$.B(397218, '+', J$.T(3604305, '0x', 21, false), J$.M(3604337, J$.M(3604329, J$.R(3604313, 'obj', obj, false, false), 'toString', false)(J$.T(3604321, 16, 22, false)), 'toUpperCase', false)()) : J$.B(397226, '+', J$.T(3604345, '-0x', 21, false), J$.M(3604393, J$.M(3604377, J$.M(3604369, J$.R(3604353, 'obj', obj, false, false), 'toString', false)(J$.T(3604361, 16, 22, false)), 'toUpperCase', false)(), 'slice', false)(J$.T(3604385, 1, 22, false))));
                                } catch (J$e) {
                                    J$.Ex(3604881, J$e);
                                } finally {
                                    if (J$.Fr(3604889))
                                        continue jalangiLabel11;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                defaultStyle: J$.T(3604449, 'decimal', 21, false),
                styleAliases: J$.T(3604553, {
                    binary: J$.T(3604473, [
                        J$.T(3604457, 2, 22, false),
                        J$.T(3604465, 'bin', 21, false)
                    ], 10, false),
                    octal: J$.T(3604497, [
                        J$.T(3604481, 8, 22, false),
                        J$.T(3604489, 'oct', 21, false)
                    ], 10, false),
                    decimal: J$.T(3604521, [
                        J$.T(3604505, 10, 22, false),
                        J$.T(3604513, 'dec', 21, false)
                    ], 10, false),
                    hexadecimal: J$.T(3604545, [
                        J$.T(3604529, 16, 22, false),
                        J$.T(3604537, 'hex', 21, false)
                    ], 10, false)
                }, 11, false)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(3604897, J$e);
        } finally {
            if (J$.Sr(3604905))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

