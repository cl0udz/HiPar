J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3612321, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/set.js');
            function resolveYamlSet(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3612145, arguments.callee, this, arguments);
                            arguments = J$.N(3612153, 'arguments', arguments, true, false, false);
                            data = J$.N(3612161, 'data', data, true, false, false);
                            J$.N(3612169, 'key', key, false, false, false);
                            J$.N(3612177, 'object', object, false, false, false);
                            if (J$.C(190368, J$.B(397786, '===', J$.R(3611977, 'data', data, false, false), J$.T(3611985, null, 25, false))))
                                return J$.Rt(3612001, J$.T(3611993, true, 23, false));
                            var key, object = J$.W(3612017, 'object', J$.R(3612009, 'data', data, false, false), object, false, false);
                            for (key in J$.H(3612113, J$.R(3612025, 'object', object, false, false))) {
                                J$.N(3612121, 'key', key, false, true, false);
                                {
                                    {
                                        if (J$.C(190384, J$.M(3612057, J$.R(3612033, '_hasOwnProperty', _hasOwnProperty, false, true), 'call', false)(J$.R(3612041, 'object', object, false, false), J$.R(3612049, 'key', key, false, false)))) {
                                            if (J$.C(190376, J$.B(397794, '!==', J$.G(3612081, J$.R(3612065, 'object', object, false, false), J$.R(3612073, 'key', key, false, false)), J$.T(3612089, null, 25, false))))
                                                return J$.Rt(3612105, J$.T(3612097, false, 23, false));
                                        }
                                    }
                                }
                            }
                            return J$.Rt(3612137, J$.T(3612129, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(3612377, J$e);
                        } finally {
                            if (J$.Fr(3612385))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlSet(data) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3612225, arguments.callee, this, arguments);
                            arguments = J$.N(3612233, 'arguments', arguments, true, false, false);
                            data = J$.N(3612241, 'data', data, true, false, false);
                            return J$.Rt(3612217, J$.C(190392, J$.B(397802, '!==', J$.R(3612185, 'data', data, false, false), J$.T(3612193, null, 25, false))) ? J$.R(3612201, 'data', data, false, false) : J$.T(3612209, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(3612393, J$e);
                        } finally {
                            if (J$.Fr(3612401))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3612329, 'Type', Type, false, false, false);
            J$.N(3612337, '_hasOwnProperty', _hasOwnProperty, false, false, false);
            resolveYamlSet = J$.N(3612353, 'resolveYamlSet', J$.T(3612345, resolveYamlSet, 12, false), true, false, false);
            constructYamlSet = J$.N(3612369, 'constructYamlSet', J$.T(3612361, constructYamlSet, 12, false), true, false, false);
            J$.T(3611905, 'use strict', 21, false);
            var Type = J$.W(3611937, 'Type', J$.F(3611929, J$.I(typeof require === 'undefined' ? require = J$.R(3611913, 'require', undefined, true, true) : require = J$.R(3611913, 'require', require, true, true)), false)(J$.T(3611921, '../type', 21, false)), Type, false, true);
            var _hasOwnProperty = J$.W(3611969, '_hasOwnProperty', J$.G(3611961, J$.G(3611953, J$.I(typeof Object === 'undefined' ? Object = J$.R(3611945, 'Object', undefined, true, true) : Object = J$.R(3611945, 'Object', Object, true, true)), 'prototype'), 'hasOwnProperty'), _hasOwnProperty, false, true);
            J$.P(3612313, J$.I(typeof module === 'undefined' ? module = J$.R(3612249, 'module', undefined, true, true) : module = J$.R(3612249, 'module', module, true, true)), 'exports', J$.F(3612305, J$.R(3612257, 'Type', Type, false, true), true)(J$.T(3612265, 'tag:yaml.org,2002:set', 21, false), J$.T(3612297, {
                kind: J$.T(3612273, 'mapping', 21, false),
                resolve: J$.R(3612281, 'resolveYamlSet', resolveYamlSet, false, true),
                construct: J$.R(3612289, 'constructYamlSet', constructYamlSet, false, true)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(3612409, J$e);
        } finally {
            if (J$.Sr(3612417))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

