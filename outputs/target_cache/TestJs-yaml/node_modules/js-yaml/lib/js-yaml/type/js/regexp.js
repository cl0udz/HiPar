J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(3607841, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js');
            function resolveJavascriptRegExp(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3607121, arguments.callee, this, arguments);
                            arguments = J$.N(3607129, 'arguments', arguments, true, false, false);
                            data = J$.N(3607137, 'data', data, true, false, false);
                            J$.N(3607145, 'regexp', regexp, false, false, false);
                            J$.N(3607153, 'tail', tail, false, false, false);
                            J$.N(3607161, 'modifiers', modifiers, false, false, false);
                            if (J$.C(190096, J$.B(397410, '===', J$.R(3606777, 'data', data, false, false), J$.T(3606785, null, 25, false))))
                                return J$.Rt(3606801, J$.T(3606793, false, 23, false));
                            if (J$.C(190104, J$.B(397418, '===', J$.G(3606817, J$.R(3606809, 'data', data, false, false), 'length'), J$.T(3606825, 0, 22, false))))
                                return J$.Rt(3606841, J$.T(3606833, false, 23, false));
                            var regexp = J$.W(3606889, 'regexp', J$.R(3606849, 'data', data, false, false), regexp, false, false), tail = J$.W(3606897, 'tail', J$.M(3606873, J$.T(3606857, /\/([gim]*)$/, 14, false), 'exec', false)(J$.R(3606865, 'data', data, false, false)), tail, false, false), modifiers = J$.W(3606905, 'modifiers', J$.T(3606881, '', 21, false), modifiers, false, false);
                            if (J$.C(190136, J$.B(397426, '===', J$.G(3606929, J$.R(3606913, 'regexp', regexp, false, false), J$.T(3606921, 0, 22, false)), J$.T(3606937, '/', 21, false)))) {
                                if (J$.C(190112, J$.R(3606945, 'tail', tail, false, false)))
                                    modifiers = J$.W(3606977, 'modifiers', J$.G(3606969, J$.R(3606953, 'tail', tail, false, false), J$.T(3606961, 1, 22, false)), modifiers, false, false);
                                if (J$.C(190120, J$.B(397434, '>', J$.G(3606993, J$.R(3606985, 'modifiers', modifiers, false, false), 'length'), J$.T(3607001, 3, 22, false))))
                                    return J$.Rt(3607017, J$.T(3607009, false, 23, false));
                                if (J$.C(190128, J$.B(397458, '!==', J$.G(3607073, J$.R(3607025, 'regexp', regexp, false, false), J$.B(397450, '-', J$.B(397442, '-', J$.G(3607041, J$.R(3607033, 'regexp', regexp, false, false), 'length'), J$.G(3607057, J$.R(3607049, 'modifiers', modifiers, false, false), 'length')), J$.T(3607065, 1, 22, false))), J$.T(3607081, '/', 21, false))))
                                    return J$.Rt(3607097, J$.T(3607089, false, 23, false));
                            }
                            return J$.Rt(3607113, J$.T(3607105, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(3607921, J$e);
                        } finally {
                            if (J$.Fr(3607929))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructJavascriptRegExp(data) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3607417, arguments.callee, this, arguments);
                            arguments = J$.N(3607425, 'arguments', arguments, true, false, false);
                            data = J$.N(3607433, 'data', data, true, false, false);
                            J$.N(3607441, 'regexp', regexp, false, false, false);
                            J$.N(3607449, 'tail', tail, false, false, false);
                            J$.N(3607457, 'modifiers', modifiers, false, false, false);
                            var regexp = J$.W(3607209, 'regexp', J$.R(3607169, 'data', data, false, false), regexp, false, false), tail = J$.W(3607217, 'tail', J$.M(3607193, J$.T(3607177, /\/([gim]*)$/, 14, false), 'exec', false)(J$.R(3607185, 'data', data, false, false)), tail, false, false), modifiers = J$.W(3607225, 'modifiers', J$.T(3607201, '', 21, false), modifiers, false, false);
                            if (J$.C(190152, J$.B(397466, '===', J$.G(3607249, J$.R(3607233, 'regexp', regexp, false, false), J$.T(3607241, 0, 22, false)), J$.T(3607257, '/', 21, false)))) {
                                if (J$.C(190144, J$.R(3607265, 'tail', tail, false, false)))
                                    modifiers = J$.W(3607297, 'modifiers', J$.G(3607289, J$.R(3607273, 'tail', tail, false, false), J$.T(3607281, 1, 22, false)), modifiers, false, false);
                                regexp = J$.W(3607369, 'regexp', J$.M(3607361, J$.R(3607305, 'regexp', regexp, false, false), 'slice', false)(J$.T(3607313, 1, 22, false), J$.B(397482, '-', J$.B(397474, '-', J$.G(3607329, J$.R(3607321, 'regexp', regexp, false, false), 'length'), J$.G(3607345, J$.R(3607337, 'modifiers', modifiers, false, false), 'length')), J$.T(3607353, 1, 22, false))), regexp, false, false);
                            }
                            return J$.Rt(3607409, J$.F(3607401, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(3607377, 'RegExp', undefined, true, true) : RegExp = J$.R(3607377, 'RegExp', RegExp, true, true)), true)(J$.R(3607385, 'regexp', regexp, false, false), J$.R(3607393, 'modifiers', modifiers, false, false)));
                        } catch (J$e) {
                            J$.Ex(3607937, J$e);
                        } finally {
                            if (J$.Fr(3607945))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function representJavascriptRegExp(object) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3607641, arguments.callee, this, arguments);
                            arguments = J$.N(3607649, 'arguments', arguments, true, false, false);
                            object = J$.N(3607657, 'object', object, true, false, false);
                            J$.N(3607665, 'result', result, false, false, false);
                            var result = J$.W(3607497, 'result', J$.B(397498, '+', J$.B(397490, '+', J$.T(3607465, '/', 21, false), J$.G(3607481, J$.R(3607473, 'object', object, false, false), 'source')), J$.T(3607489, '/', 21, false)), result, false, false);
                            if (J$.C(190160, J$.G(3607513, J$.R(3607505, 'object', object, false, false), 'global')))
                                result = J$.W(3607537, 'result', J$.B(397506, '+', J$.R(3607529, 'result', result, false, false), J$.T(3607521, 'g', 21, false)), result, false, false);
                            if (J$.C(190168, J$.G(3607553, J$.R(3607545, 'object', object, false, false), 'multiline')))
                                result = J$.W(3607577, 'result', J$.B(397514, '+', J$.R(3607569, 'result', result, false, false), J$.T(3607561, 'm', 21, false)), result, false, false);
                            if (J$.C(190176, J$.G(3607593, J$.R(3607585, 'object', object, false, false), 'ignoreCase')))
                                result = J$.W(3607617, 'result', J$.B(397522, '+', J$.R(3607609, 'result', result, false, false), J$.T(3607601, 'i', 21, false)), result, false, false);
                            return J$.Rt(3607633, J$.R(3607625, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3607953, J$e);
                        } finally {
                            if (J$.Fr(3607961))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isRegExp(object) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3607729, arguments.callee, this, arguments);
                            arguments = J$.N(3607737, 'arguments', arguments, true, false, false);
                            object = J$.N(3607745, 'object', object, true, false, false);
                            return J$.Rt(3607721, J$.B(397530, '===', J$.M(3607705, J$.G(3607689, J$.G(3607681, J$.I(typeof Object === 'undefined' ? Object = J$.R(3607673, 'Object', undefined, true, true) : Object = J$.R(3607673, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(3607697, 'object', object, false, false)), J$.T(3607713, '[object RegExp]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3607969, J$e);
                        } finally {
                            if (J$.Fr(3607977))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3607849, 'Type', Type, false, false, false);
            resolveJavascriptRegExp = J$.N(3607865, 'resolveJavascriptRegExp', J$.T(3607857, resolveJavascriptRegExp, 12, false), true, false, false);
            constructJavascriptRegExp = J$.N(3607881, 'constructJavascriptRegExp', J$.T(3607873, constructJavascriptRegExp, 12, false), true, false, false);
            representJavascriptRegExp = J$.N(3607897, 'representJavascriptRegExp', J$.T(3607889, representJavascriptRegExp, 12, false), true, false, false);
            isRegExp = J$.N(3607913, 'isRegExp', J$.T(3607905, isRegExp, 12, false), true, false, false);
            J$.T(3606737, 'use strict', 21, false);
            var Type = J$.W(3606769, 'Type', J$.F(3606761, J$.I(typeof require === 'undefined' ? require = J$.R(3606745, 'require', undefined, true, true) : require = J$.R(3606745, 'require', require, true, true)), false)(J$.T(3606753, '../../type', 21, false)), Type, false, true);
            J$.P(3607833, J$.I(typeof module === 'undefined' ? module = J$.R(3607753, 'module', undefined, true, true) : module = J$.R(3607753, 'module', module, true, true)), 'exports', J$.F(3607825, J$.R(3607761, 'Type', Type, false, true), true)(J$.T(3607769, 'tag:yaml.org,2002:js/regexp', 21, false), J$.T(3607817, {
                kind: J$.T(3607777, 'scalar', 21, false),
                resolve: J$.R(3607785, 'resolveJavascriptRegExp', resolveJavascriptRegExp, false, true),
                construct: J$.R(3607793, 'constructJavascriptRegExp', constructJavascriptRegExp, false, true),
                predicate: J$.R(3607801, 'isRegExp', isRegExp, false, true),
                represent: J$.R(3607809, 'representJavascriptRegExp', representJavascriptRegExp, false, true)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(3607985, J$e);
        } finally {
            if (J$.Sr(3607993))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

