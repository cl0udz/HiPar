J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3611585, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/pairs.js');
            function resolveYamlPairs(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3611025, arguments.callee, this, arguments);
                            arguments = J$.N(3611033, 'arguments', arguments, true, false, false);
                            data = J$.N(3611041, 'data', data, true, false, false);
                            J$.N(3611049, 'index', index, false, false, false);
                            J$.N(3611057, 'length', length, false, false, false);
                            J$.N(3611065, 'pair', pair, false, false, false);
                            J$.N(3611073, 'keys', keys, false, false, false);
                            J$.N(3611081, 'result', result, false, false, false);
                            J$.N(3611089, 'object', object, false, false, false);
                            if (J$.C(190312, J$.B(397714, '===', J$.R(3610593, 'data', data, false, false), J$.T(3610601, null, 25, false))))
                                return J$.Rt(3610617, J$.T(3610609, true, 23, false));
                            var index, length, pair, keys, result, object = J$.W(3610633, 'object', J$.R(3610625, 'data', data, false, false), object, false, false);
                            result = J$.W(3610673, 'result', J$.F(3610665, J$.I(typeof Array === 'undefined' ? Array = J$.R(3610641, 'Array', undefined, true, true) : Array = J$.R(3610641, 'Array', Array, true, true)), true)(J$.G(3610657, J$.R(3610649, 'object', object, false, false), 'length')), result, false, false);
                            for (index = J$.W(3610689, 'index', J$.T(3610681, 0, 22, false), index, false, false), length = J$.W(3610713, 'length', J$.G(3610705, J$.R(3610697, 'object', object, false, false), 'length'), length, false, false); J$.C(190336, J$.B(397722, '<', J$.R(3610721, 'index', index, false, false), J$.R(3610729, 'length', length, false, false))); index = J$.W(3610753, 'index', J$.B(397730, '+', J$.R(3610745, 'index', index, false, false), J$.T(3610737, 1, 22, false)), index, false, false)) {
                                pair = J$.W(3610785, 'pair', J$.G(3610777, J$.R(3610761, 'object', object, false, false), J$.R(3610769, 'index', index, false, false)), pair, false, false);
                                if (J$.C(190320, J$.B(397738, '!==', J$.M(3610809, J$.R(3610793, '_toString', _toString, false, true), 'call', false)(J$.R(3610801, 'pair', pair, false, false)), J$.T(3610817, '[object Object]', 21, false))))
                                    return J$.Rt(3610833, J$.T(3610825, false, 23, false));
                                keys = J$.W(3610865, 'keys', J$.M(3610857, J$.I(typeof Object === 'undefined' ? Object = J$.R(3610841, 'Object', undefined, true, true) : Object = J$.R(3610841, 'Object', Object, true, true)), 'keys', false)(J$.R(3610849, 'pair', pair, false, false)), keys, false, false);
                                if (J$.C(190328, J$.B(397746, '!==', J$.G(3610881, J$.R(3610873, 'keys', keys, false, false), 'length'), J$.T(3610889, 1, 22, false))))
                                    return J$.Rt(3610905, J$.T(3610897, false, 23, false));
                                J$.P(3611001, J$.R(3610913, 'result', result, false, false), J$.R(3610921, 'index', index, false, false), J$.T(3610993, [
                                    J$.G(3610945, J$.R(3610929, 'keys', keys, false, false), J$.T(3610937, 0, 22, false)),
                                    J$.G(3610985, J$.R(3610953, 'pair', pair, false, false), J$.G(3610977, J$.R(3610961, 'keys', keys, false, false), J$.T(3610969, 0, 22, false)))
                                ], 10, false));
                            }
                            return J$.Rt(3611017, J$.T(3611009, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(3611641, J$e);
                        } finally {
                            if (J$.Fr(3611649))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlPairs(data) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3611441, arguments.callee, this, arguments);
                            arguments = J$.N(3611449, 'arguments', arguments, true, false, false);
                            data = J$.N(3611457, 'data', data, true, false, false);
                            J$.N(3611465, 'index', index, false, false, false);
                            J$.N(3611473, 'length', length, false, false, false);
                            J$.N(3611481, 'pair', pair, false, false, false);
                            J$.N(3611489, 'keys', keys, false, false, false);
                            J$.N(3611497, 'result', result, false, false, false);
                            J$.N(3611505, 'object', object, false, false, false);
                            if (J$.C(190344, J$.B(397754, '===', J$.R(3611097, 'data', data, false, false), J$.T(3611105, null, 25, false))))
                                return J$.Rt(3611121, J$.T(3611113, [], 10, false));
                            var index, length, pair, keys, result, object = J$.W(3611137, 'object', J$.R(3611129, 'data', data, false, false), object, false, false);
                            result = J$.W(3611177, 'result', J$.F(3611169, J$.I(typeof Array === 'undefined' ? Array = J$.R(3611145, 'Array', undefined, true, true) : Array = J$.R(3611145, 'Array', Array, true, true)), true)(J$.G(3611161, J$.R(3611153, 'object', object, false, false), 'length')), result, false, false);
                            for (index = J$.W(3611193, 'index', J$.T(3611185, 0, 22, false), index, false, false), length = J$.W(3611217, 'length', J$.G(3611209, J$.R(3611201, 'object', object, false, false), 'length'), length, false, false); J$.C(190352, J$.B(397762, '<', J$.R(3611225, 'index', index, false, false), J$.R(3611233, 'length', length, false, false))); index = J$.W(3611257, 'index', J$.B(397770, '+', J$.R(3611249, 'index', index, false, false), J$.T(3611241, 1, 22, false)), index, false, false)) {
                                pair = J$.W(3611289, 'pair', J$.G(3611281, J$.R(3611265, 'object', object, false, false), J$.R(3611273, 'index', index, false, false)), pair, false, false);
                                keys = J$.W(3611321, 'keys', J$.M(3611313, J$.I(typeof Object === 'undefined' ? Object = J$.R(3611297, 'Object', undefined, true, true) : Object = J$.R(3611297, 'Object', Object, true, true)), 'keys', false)(J$.R(3611305, 'pair', pair, false, false)), keys, false, false);
                                J$.P(3611417, J$.R(3611329, 'result', result, false, false), J$.R(3611337, 'index', index, false, false), J$.T(3611409, [
                                    J$.G(3611361, J$.R(3611345, 'keys', keys, false, false), J$.T(3611353, 0, 22, false)),
                                    J$.G(3611401, J$.R(3611369, 'pair', pair, false, false), J$.G(3611393, J$.R(3611377, 'keys', keys, false, false), J$.T(3611385, 0, 22, false)))
                                ], 10, false));
                            }
                            return J$.Rt(3611433, J$.R(3611425, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3611657, J$e);
                        } finally {
                            if (J$.Fr(3611665))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3611593, 'Type', Type, false, false, false);
            J$.N(3611601, '_toString', _toString, false, false, false);
            resolveYamlPairs = J$.N(3611617, 'resolveYamlPairs', J$.T(3611609, resolveYamlPairs, 12, false), true, false, false);
            constructYamlPairs = J$.N(3611633, 'constructYamlPairs', J$.T(3611625, constructYamlPairs, 12, false), true, false, false);
            J$.T(3610521, 'use strict', 21, false);
            var Type = J$.W(3610553, 'Type', J$.F(3610545, J$.I(typeof require === 'undefined' ? require = J$.R(3610529, 'require', undefined, true, true) : require = J$.R(3610529, 'require', require, true, true)), false)(J$.T(3610537, '../type', 21, false)), Type, false, true);
            var _toString = J$.W(3610585, '_toString', J$.G(3610577, J$.G(3610569, J$.I(typeof Object === 'undefined' ? Object = J$.R(3610561, 'Object', undefined, true, true) : Object = J$.R(3610561, 'Object', Object, true, true)), 'prototype'), 'toString'), _toString, false, true);
            J$.P(3611577, J$.I(typeof module === 'undefined' ? module = J$.R(3611513, 'module', undefined, true, true) : module = J$.R(3611513, 'module', module, true, true)), 'exports', J$.F(3611569, J$.R(3611521, 'Type', Type, false, true), true)(J$.T(3611529, 'tag:yaml.org,2002:pairs', 21, false), J$.T(3611561, {
                kind: J$.T(3611537, 'sequence', 21, false),
                resolve: J$.R(3611545, 'resolveYamlPairs', resolveYamlPairs, false, true),
                construct: J$.R(3611553, 'constructYamlPairs', constructYamlPairs, false, true)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(3611673, J$e);
        } finally {
            if (J$.Sr(3611681))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

