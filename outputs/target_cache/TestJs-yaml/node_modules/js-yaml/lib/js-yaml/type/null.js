J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(3609449, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/js-yaml/lib/js-yaml/type/null.js');
            function resolveYamlNull(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3609081, arguments.callee, this, arguments);
                            arguments = J$.N(3609089, 'arguments', arguments, true, false, false);
                            data = J$.N(3609097, 'data', data, true, false, false);
                            J$.N(3609105, 'max', max, false, false, false);
                            if (J$.C(190200, J$.B(397578, '===', J$.R(3608921, 'data', data, false, false), J$.T(3608929, null, 25, false))))
                                return J$.Rt(3608945, J$.T(3608937, true, 23, false));
                            var max = J$.W(3608969, 'max', J$.G(3608961, J$.R(3608953, 'data', data, false, false), 'length'), max, false, false);
                            return J$.Rt(3609073, J$.C(190240, J$.C(190208, J$.B(397586, '===', J$.R(3608977, 'max', max, false, false), J$.T(3608985, 1, 22, false))) ? J$.B(397594, '===', J$.R(3608993, 'data', data, false, false), J$.T(3609001, '~', 21, false)) : J$._()) ? J$._() : J$.C(190232, J$.B(397602, '===', J$.R(3609009, 'max', max, false, false), J$.T(3609017, 4, 22, false))) ? J$.C(190224, J$.C(190216, J$.B(397610, '===', J$.R(3609025, 'data', data, false, false), J$.T(3609033, 'null', 21, false))) ? J$._() : J$.B(397618, '===', J$.R(3609041, 'data', data, false, false), J$.T(3609049, 'Null', 21, false))) ? J$._() : J$.B(397626, '===', J$.R(3609057, 'data', data, false, false), J$.T(3609065, 'NULL', 21, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(3609513, J$e);
                        } finally {
                            if (J$.Fr(3609521))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructYamlNull() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3609129, arguments.callee, this, arguments);
                            arguments = J$.N(3609137, 'arguments', arguments, true, false, false);
                            return J$.Rt(3609121, J$.T(3609113, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(3609529, J$e);
                        } finally {
                            if (J$.Fr(3609537))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isNull(object) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3609169, arguments.callee, this, arguments);
                            arguments = J$.N(3609177, 'arguments', arguments, true, false, false);
                            object = J$.N(3609185, 'object', object, true, false, false);
                            return J$.Rt(3609161, J$.B(397634, '===', J$.R(3609145, 'object', object, false, false), J$.T(3609153, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(3609545, J$e);
                        } finally {
                            if (J$.Fr(3609553))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3609457, 'Type', Type, false, false, false);
            resolveYamlNull = J$.N(3609473, 'resolveYamlNull', J$.T(3609465, resolveYamlNull, 12, false), true, false, false);
            constructYamlNull = J$.N(3609489, 'constructYamlNull', J$.T(3609481, constructYamlNull, 12, false), true, false, false);
            isNull = J$.N(3609505, 'isNull', J$.T(3609497, isNull, 12, false), true, false, false);
            J$.T(3608881, 'use strict', 21, false);
            var Type = J$.W(3608913, 'Type', J$.F(3608905, J$.I(typeof require === 'undefined' ? require = J$.R(3608889, 'require', undefined, true, true) : require = J$.R(3608889, 'require', require, true, true)), false)(J$.T(3608897, '../type', 21, false)), Type, false, true);
            J$.P(3609441, J$.I(typeof module === 'undefined' ? module = J$.R(3609193, 'module', undefined, true, true) : module = J$.R(3609193, 'module', module, true, true)), 'exports', J$.F(3609433, J$.R(3609201, 'Type', Type, false, true), true)(J$.T(3609209, 'tag:yaml.org,2002:null', 21, false), J$.T(3609425, {
                kind: J$.T(3609217, 'scalar', 21, false),
                resolve: J$.R(3609225, 'resolveYamlNull', resolveYamlNull, false, true),
                construct: J$.R(3609233, 'constructYamlNull', constructYamlNull, false, true),
                predicate: J$.R(3609241, 'isNull', isNull, false, true),
                represent: J$.T(3609409, {
                    canonical: J$.T(3609281, function () {
                        jalangiLabel3:
                            while (true) {
                                try {
                                    J$.Fe(3609265, arguments.callee, this, arguments);
                                    arguments = J$.N(3609273, 'arguments', arguments, true, false, false);
                                    return J$.Rt(3609257, J$.T(3609249, '~', 21, false));
                                } catch (J$e) {
                                    J$.Ex(3609561, J$e);
                                } finally {
                                    if (J$.Fr(3609569))
                                        continue jalangiLabel3;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    lowercase: J$.T(3609321, function () {
                        jalangiLabel4:
                            while (true) {
                                try {
                                    J$.Fe(3609305, arguments.callee, this, arguments);
                                    arguments = J$.N(3609313, 'arguments', arguments, true, false, false);
                                    return J$.Rt(3609297, J$.T(3609289, 'null', 21, false));
                                } catch (J$e) {
                                    J$.Ex(3609577, J$e);
                                } finally {
                                    if (J$.Fr(3609585))
                                        continue jalangiLabel4;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    uppercase: J$.T(3609361, function () {
                        jalangiLabel5:
                            while (true) {
                                try {
                                    J$.Fe(3609345, arguments.callee, this, arguments);
                                    arguments = J$.N(3609353, 'arguments', arguments, true, false, false);
                                    return J$.Rt(3609337, J$.T(3609329, 'NULL', 21, false));
                                } catch (J$e) {
                                    J$.Ex(3609593, J$e);
                                } finally {
                                    if (J$.Fr(3609601))
                                        continue jalangiLabel5;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    camelcase: J$.T(3609401, function () {
                        jalangiLabel6:
                            while (true) {
                                try {
                                    J$.Fe(3609385, arguments.callee, this, arguments);
                                    arguments = J$.N(3609393, 'arguments', arguments, true, false, false);
                                    return J$.Rt(3609377, J$.T(3609369, 'Null', 21, false));
                                } catch (J$e) {
                                    J$.Ex(3609609, J$e);
                                } finally {
                                    if (J$.Fr(3609617))
                                        continue jalangiLabel6;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                defaultStyle: J$.T(3609417, 'lowercase', 21, false)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(3609625, J$e);
        } finally {
            if (J$.Sr(3609633))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

