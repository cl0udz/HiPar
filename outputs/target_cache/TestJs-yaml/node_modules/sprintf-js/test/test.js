J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(3632929, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/sprintf-js/test/test.js');
            J$.N(3632937, 'assert', assert, false, false, false);
            J$.N(3632945, 'sprintfjs', sprintfjs, false, false, false);
            J$.N(3632953, 'sprintf', sprintf, false, false, false);
            J$.N(3632961, 'vsprintf', vsprintf, false, false, false);
            var assert = J$.W(3629249, 'assert', J$.F(3629185, J$.I(typeof require === 'undefined' ? require = J$.R(3629169, 'require', undefined, true, true) : require = J$.R(3629169, 'require', require, true, true)), false)(J$.T(3629177, 'assert', 21, false)), assert, false, true), sprintfjs = J$.W(3629257, 'sprintfjs', J$.F(3629209, J$.I(typeof require === 'undefined' ? require = J$.R(3629193, 'require', undefined, true, true) : require = J$.R(3629193, 'require', require, true, true)), false)(J$.T(3629201, '../src/sprintf.js', 21, false)), sprintfjs, false, true), sprintf = J$.W(3629265, 'sprintf', J$.G(3629225, J$.R(3629217, 'sprintfjs', sprintfjs, false, true), 'sprintf'), sprintf, false, true), vsprintf = J$.W(3629273, 'vsprintf', J$.G(3629241, J$.R(3629233, 'sprintfjs', sprintfjs, false, true), 'vsprintf'), vsprintf, false, true);
            J$.F(3632921, J$.I(typeof describe === 'undefined' ? describe = J$.R(3629281, 'describe', undefined, true, true) : describe = J$.R(3629281, 'describe', describe, true, true)), false)(J$.T(3629289, 'sprintfjs', 21, false), J$.T(3632913, function () {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3632889, arguments.callee, this, arguments);
                            arguments = J$.N(3632897, 'arguments', arguments, true, false, false);
                            J$.N(3632905, 'pi', pi, false, false, false);
                            var pi = J$.W(3629305, 'pi', J$.T(3629297, 3.141592653589793, 22, false), pi, false, false);
                            J$.F(3630513, J$.I(typeof it === 'undefined' ? it = J$.R(3629313, 'it', undefined, true, true) : it = J$.R(3629313, 'it', it, true, true)), false)(J$.T(3629321, 'should return formated strings for simple placeholders', 21, false), J$.T(3630505, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3630489, arguments.callee, this, arguments);
                                            arguments = J$.N(3630497, 'arguments', arguments, true, false, false);
                                            J$.M(3629369, J$.R(3629329, 'assert', assert, false, true), 'equal', false)(J$.T(3629337, '%', 21, false), J$.F(3629361, J$.R(3629345, 'sprintf', sprintf, false, true), false)(J$.T(3629353, '%%', 21, false)));
                                            J$.M(3629425, J$.R(3629377, 'assert', assert, false, true), 'equal', false)(J$.T(3629385, '10', 21, false), J$.F(3629417, J$.R(3629393, 'sprintf', sprintf, false, true), false)(J$.T(3629401, '%b', 21, false), J$.T(3629409, 2, 22, false)));
                                            J$.M(3629481, J$.R(3629433, 'assert', assert, false, true), 'equal', false)(J$.T(3629441, 'A', 21, false), J$.F(3629473, J$.R(3629449, 'sprintf', sprintf, false, true), false)(J$.T(3629457, '%c', 21, false), J$.T(3629465, 65, 22, false)));
                                            J$.M(3629537, J$.R(3629489, 'assert', assert, false, true), 'equal', false)(J$.T(3629497, '2', 21, false), J$.F(3629529, J$.R(3629505, 'sprintf', sprintf, false, true), false)(J$.T(3629513, '%d', 21, false), J$.T(3629521, 2, 22, false)));
                                            J$.M(3629593, J$.R(3629545, 'assert', assert, false, true), 'equal', false)(J$.T(3629553, '2', 21, false), J$.F(3629585, J$.R(3629561, 'sprintf', sprintf, false, true), false)(J$.T(3629569, '%i', 21, false), J$.T(3629577, 2, 22, false)));
                                            J$.M(3629649, J$.R(3629601, 'assert', assert, false, true), 'equal', false)(J$.T(3629609, '2', 21, false), J$.F(3629641, J$.R(3629617, 'sprintf', sprintf, false, true), false)(J$.T(3629625, '%d', 21, false), J$.T(3629633, '2', 21, false)));
                                            J$.M(3629705, J$.R(3629657, 'assert', assert, false, true), 'equal', false)(J$.T(3629665, '2', 21, false), J$.F(3629697, J$.R(3629673, 'sprintf', sprintf, false, true), false)(J$.T(3629681, '%i', 21, false), J$.T(3629689, '2', 21, false)));
                                            J$.M(3629769, J$.R(3629713, 'assert', assert, false, true), 'equal', false)(J$.T(3629721, '{"foo":"bar"}', 21, false), J$.F(3629761, J$.R(3629729, 'sprintf', sprintf, false, true), false)(J$.T(3629737, '%j', 21, false), J$.T(3629753, { foo: J$.T(3629745, 'bar', 21, false) }, 11, false)));
                                            J$.M(3629841, J$.R(3629777, 'assert', assert, false, true), 'equal', false)(J$.T(3629785, '["foo","bar"]', 21, false), J$.F(3629833, J$.R(3629793, 'sprintf', sprintf, false, true), false)(J$.T(3629801, '%j', 21, false), J$.T(3629825, [
                                                J$.T(3629809, 'foo', 21, false),
                                                J$.T(3629817, 'bar', 21, false)
                                            ], 10, false)));
                                            J$.M(3629897, J$.R(3629849, 'assert', assert, false, true), 'equal', false)(J$.T(3629857, '2e+0', 21, false), J$.F(3629889, J$.R(3629865, 'sprintf', sprintf, false, true), false)(J$.T(3629873, '%e', 21, false), J$.T(3629881, 2, 22, false)));
                                            J$.M(3629953, J$.R(3629905, 'assert', assert, false, true), 'equal', false)(J$.T(3629913, '2', 21, false), J$.F(3629945, J$.R(3629921, 'sprintf', sprintf, false, true), false)(J$.T(3629929, '%u', 21, false), J$.T(3629937, 2, 22, false)));
                                            J$.M(3630009, J$.R(3629961, 'assert', assert, false, true), 'equal', false)(J$.T(3629969, '4294967294', 21, false), J$.F(3630001, J$.R(3629977, 'sprintf', sprintf, false, true), false)(J$.T(3629985, '%u', 21, false), J$.U(399018, '-', J$.T(3629993, 2, 22, false))));
                                            J$.M(3630065, J$.R(3630017, 'assert', assert, false, true), 'equal', false)(J$.T(3630025, '2.2', 21, false), J$.F(3630057, J$.R(3630033, 'sprintf', sprintf, false, true), false)(J$.T(3630041, '%f', 21, false), J$.T(3630049, 2.2, 22, false)));
                                            J$.M(3630121, J$.R(3630073, 'assert', assert, false, true), 'equal', false)(J$.T(3630081, '3.141592653589793', 21, false), J$.F(3630113, J$.R(3630089, 'sprintf', sprintf, false, true), false)(J$.T(3630097, '%g', 21, false), J$.R(3630105, 'pi', pi, false, false)));
                                            J$.M(3630177, J$.R(3630129, 'assert', assert, false, true), 'equal', false)(J$.T(3630137, '10', 21, false), J$.F(3630169, J$.R(3630145, 'sprintf', sprintf, false, true), false)(J$.T(3630153, '%o', 21, false), J$.T(3630161, 8, 22, false)));
                                            J$.M(3630233, J$.R(3630185, 'assert', assert, false, true), 'equal', false)(J$.T(3630193, '%s', 21, false), J$.F(3630225, J$.R(3630201, 'sprintf', sprintf, false, true), false)(J$.T(3630209, '%s', 21, false), J$.T(3630217, '%s', 21, false)));
                                            J$.M(3630289, J$.R(3630241, 'assert', assert, false, true), 'equal', false)(J$.T(3630249, 'ff', 21, false), J$.F(3630281, J$.R(3630257, 'sprintf', sprintf, false, true), false)(J$.T(3630265, '%x', 21, false), J$.T(3630273, 255, 22, false)));
                                            J$.M(3630345, J$.R(3630297, 'assert', assert, false, true), 'equal', false)(J$.T(3630305, 'FF', 21, false), J$.F(3630337, J$.R(3630313, 'sprintf', sprintf, false, true), false)(J$.T(3630321, '%X', 21, false), J$.T(3630329, 255, 22, false)));
                                            J$.M(3630417, J$.R(3630353, 'assert', assert, false, true), 'equal', false)(J$.T(3630361, 'Polly wants a cracker', 21, false), J$.F(3630409, J$.R(3630369, 'sprintf', sprintf, false, true), false)(J$.T(3630377, '%2$s %3$s a %1$s', 21, false), J$.T(3630385, 'cracker', 21, false), J$.T(3630393, 'Polly', 21, false), J$.T(3630401, 'wants', 21, false)));
                                            J$.M(3630481, J$.R(3630425, 'assert', assert, false, true), 'equal', false)(J$.T(3630433, 'Hello world!', 21, false), J$.F(3630473, J$.R(3630441, 'sprintf', sprintf, false, true), false)(J$.T(3630449, 'Hello %(who)s!', 21, false), J$.T(3630465, { 'who': J$.T(3630457, 'world', 21, false) }, 11, false)));
                                        } catch (J$e) {
                                            J$.Ex(3632969, J$e);
                                        } finally {
                                            if (J$.Fr(3632977))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3632673, J$.I(typeof it === 'undefined' ? it = J$.R(3630521, 'it', undefined, true, true) : it = J$.R(3630521, 'it', it, true, true)), false)(J$.T(3630529, 'should return formated strings for complex placeholders', 21, false), J$.T(3632665, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(3632649, arguments.callee, this, arguments);
                                            arguments = J$.N(3632657, 'arguments', arguments, true, false, false);
                                            J$.M(3630585, J$.R(3630537, 'assert', assert, false, true), 'equal', false)(J$.T(3630545, '2', 21, false), J$.F(3630577, J$.R(3630553, 'sprintf', sprintf, false, true), false)(J$.T(3630561, '%d', 21, false), J$.T(3630569, 2, 22, false)));
                                            J$.M(3630641, J$.R(3630593, 'assert', assert, false, true), 'equal', false)(J$.T(3630601, '-2', 21, false), J$.F(3630633, J$.R(3630609, 'sprintf', sprintf, false, true), false)(J$.T(3630617, '%d', 21, false), J$.U(399026, '-', J$.T(3630625, 2, 22, false))));
                                            J$.M(3630697, J$.R(3630649, 'assert', assert, false, true), 'equal', false)(J$.T(3630657, '+2', 21, false), J$.F(3630689, J$.R(3630665, 'sprintf', sprintf, false, true), false)(J$.T(3630673, '%+d', 21, false), J$.T(3630681, 2, 22, false)));
                                            J$.M(3630753, J$.R(3630705, 'assert', assert, false, true), 'equal', false)(J$.T(3630713, '-2', 21, false), J$.F(3630745, J$.R(3630721, 'sprintf', sprintf, false, true), false)(J$.T(3630729, '%+d', 21, false), J$.U(399034, '-', J$.T(3630737, 2, 22, false))));
                                            J$.M(3630809, J$.R(3630761, 'assert', assert, false, true), 'equal', false)(J$.T(3630769, '2', 21, false), J$.F(3630801, J$.R(3630777, 'sprintf', sprintf, false, true), false)(J$.T(3630785, '%i', 21, false), J$.T(3630793, 2, 22, false)));
                                            J$.M(3630865, J$.R(3630817, 'assert', assert, false, true), 'equal', false)(J$.T(3630825, '-2', 21, false), J$.F(3630857, J$.R(3630833, 'sprintf', sprintf, false, true), false)(J$.T(3630841, '%i', 21, false), J$.U(399042, '-', J$.T(3630849, 2, 22, false))));
                                            J$.M(3630921, J$.R(3630873, 'assert', assert, false, true), 'equal', false)(J$.T(3630881, '+2', 21, false), J$.F(3630913, J$.R(3630889, 'sprintf', sprintf, false, true), false)(J$.T(3630897, '%+i', 21, false), J$.T(3630905, 2, 22, false)));
                                            J$.M(3630977, J$.R(3630929, 'assert', assert, false, true), 'equal', false)(J$.T(3630937, '-2', 21, false), J$.F(3630969, J$.R(3630945, 'sprintf', sprintf, false, true), false)(J$.T(3630953, '%+i', 21, false), J$.U(399050, '-', J$.T(3630961, 2, 22, false))));
                                            J$.M(3631033, J$.R(3630985, 'assert', assert, false, true), 'equal', false)(J$.T(3630993, '2.2', 21, false), J$.F(3631025, J$.R(3631001, 'sprintf', sprintf, false, true), false)(J$.T(3631009, '%f', 21, false), J$.T(3631017, 2.2, 22, false)));
                                            J$.M(3631089, J$.R(3631041, 'assert', assert, false, true), 'equal', false)(J$.T(3631049, '-2.2', 21, false), J$.F(3631081, J$.R(3631057, 'sprintf', sprintf, false, true), false)(J$.T(3631065, '%f', 21, false), J$.U(399058, '-', J$.T(3631073, 2.2, 22, false))));
                                            J$.M(3631145, J$.R(3631097, 'assert', assert, false, true), 'equal', false)(J$.T(3631105, '+2.2', 21, false), J$.F(3631137, J$.R(3631113, 'sprintf', sprintf, false, true), false)(J$.T(3631121, '%+f', 21, false), J$.T(3631129, 2.2, 22, false)));
                                            J$.M(3631201, J$.R(3631153, 'assert', assert, false, true), 'equal', false)(J$.T(3631161, '-2.2', 21, false), J$.F(3631193, J$.R(3631169, 'sprintf', sprintf, false, true), false)(J$.T(3631177, '%+f', 21, false), J$.U(399066, '-', J$.T(3631185, 2.2, 22, false))));
                                            J$.M(3631257, J$.R(3631209, 'assert', assert, false, true), 'equal', false)(J$.T(3631217, '-2.3', 21, false), J$.F(3631249, J$.R(3631225, 'sprintf', sprintf, false, true), false)(J$.T(3631233, '%+.1f', 21, false), J$.U(399074, '-', J$.T(3631241, 2.34, 22, false))));
                                            J$.M(3631313, J$.R(3631265, 'assert', assert, false, true), 'equal', false)(J$.T(3631273, '-0.0', 21, false), J$.F(3631305, J$.R(3631281, 'sprintf', sprintf, false, true), false)(J$.T(3631289, '%+.1f', 21, false), J$.U(399082, '-', J$.T(3631297, 0.01, 22, false))));
                                            J$.M(3631369, J$.R(3631321, 'assert', assert, false, true), 'equal', false)(J$.T(3631329, '3.14159', 21, false), J$.F(3631361, J$.R(3631337, 'sprintf', sprintf, false, true), false)(J$.T(3631345, '%.6g', 21, false), J$.R(3631353, 'pi', pi, false, false)));
                                            J$.M(3631425, J$.R(3631377, 'assert', assert, false, true), 'equal', false)(J$.T(3631385, '3.14', 21, false), J$.F(3631417, J$.R(3631393, 'sprintf', sprintf, false, true), false)(J$.T(3631401, '%.3g', 21, false), J$.R(3631409, 'pi', pi, false, false)));
                                            J$.M(3631481, J$.R(3631433, 'assert', assert, false, true), 'equal', false)(J$.T(3631441, '3', 21, false), J$.F(3631473, J$.R(3631449, 'sprintf', sprintf, false, true), false)(J$.T(3631457, '%.1g', 21, false), J$.R(3631465, 'pi', pi, false, false)));
                                            J$.M(3631537, J$.R(3631489, 'assert', assert, false, true), 'equal', false)(J$.T(3631497, '-000000123', 21, false), J$.F(3631529, J$.R(3631505, 'sprintf', sprintf, false, true), false)(J$.T(3631513, '%+010d', 21, false), J$.U(399090, '-', J$.T(3631521, 123, 22, false))));
                                            J$.M(3631593, J$.R(3631545, 'assert', assert, false, true), 'equal', false)(J$.T(3631553, '______-123', 21, false), J$.F(3631585, J$.R(3631561, 'sprintf', sprintf, false, true), false)(J$.T(3631569, '%+\'_10d', 21, false), J$.U(399098, '-', J$.T(3631577, 123, 22, false))));
                                            J$.M(3631657, J$.R(3631601, 'assert', assert, false, true), 'equal', false)(J$.T(3631609, '-234.34 123.2', 21, false), J$.F(3631649, J$.R(3631617, 'sprintf', sprintf, false, true), false)(J$.T(3631625, '%f %f', 21, false), J$.U(399106, '-', J$.T(3631633, 234.34, 22, false)), J$.T(3631641, 123.2, 22, false)));
                                            J$.M(3631713, J$.R(3631665, 'assert', assert, false, true), 'equal', false)(J$.T(3631673, '-0002', 21, false), J$.F(3631705, J$.R(3631681, 'sprintf', sprintf, false, true), false)(J$.T(3631689, '%05d', 21, false), J$.U(399114, '-', J$.T(3631697, 2, 22, false))));
                                            J$.M(3631769, J$.R(3631721, 'assert', assert, false, true), 'equal', false)(J$.T(3631729, '-0002', 21, false), J$.F(3631761, J$.R(3631737, 'sprintf', sprintf, false, true), false)(J$.T(3631745, '%05i', 21, false), J$.U(399122, '-', J$.T(3631753, 2, 22, false))));
                                            J$.M(3631825, J$.R(3631777, 'assert', assert, false, true), 'equal', false)(J$.T(3631785, '    <', 21, false), J$.F(3631817, J$.R(3631793, 'sprintf', sprintf, false, true), false)(J$.T(3631801, '%5s', 21, false), J$.T(3631809, '<', 21, false)));
                                            J$.M(3631881, J$.R(3631833, 'assert', assert, false, true), 'equal', false)(J$.T(3631841, '0000<', 21, false), J$.F(3631873, J$.R(3631849, 'sprintf', sprintf, false, true), false)(J$.T(3631857, '%05s', 21, false), J$.T(3631865, '<', 21, false)));
                                            J$.M(3631937, J$.R(3631889, 'assert', assert, false, true), 'equal', false)(J$.T(3631897, '____<', 21, false), J$.F(3631929, J$.R(3631905, 'sprintf', sprintf, false, true), false)(J$.T(3631913, '%\'_5s', 21, false), J$.T(3631921, '<', 21, false)));
                                            J$.M(3631993, J$.R(3631945, 'assert', assert, false, true), 'equal', false)(J$.T(3631953, '>    ', 21, false), J$.F(3631985, J$.R(3631961, 'sprintf', sprintf, false, true), false)(J$.T(3631969, '%-5s', 21, false), J$.T(3631977, '>', 21, false)));
                                            J$.M(3632049, J$.R(3632001, 'assert', assert, false, true), 'equal', false)(J$.T(3632009, '>0000', 21, false), J$.F(3632041, J$.R(3632017, 'sprintf', sprintf, false, true), false)(J$.T(3632025, '%0-5s', 21, false), J$.T(3632033, '>', 21, false)));
                                            J$.M(3632105, J$.R(3632057, 'assert', assert, false, true), 'equal', false)(J$.T(3632065, '>____', 21, false), J$.F(3632097, J$.R(3632073, 'sprintf', sprintf, false, true), false)(J$.T(3632081, '%\'_-5s', 21, false), J$.T(3632089, '>', 21, false)));
                                            J$.M(3632161, J$.R(3632113, 'assert', assert, false, true), 'equal', false)(J$.T(3632121, 'xxxxxx', 21, false), J$.F(3632153, J$.R(3632129, 'sprintf', sprintf, false, true), false)(J$.T(3632137, '%5s', 21, false), J$.T(3632145, 'xxxxxx', 21, false)));
                                            J$.M(3632217, J$.R(3632169, 'assert', assert, false, true), 'equal', false)(J$.T(3632177, '1234', 21, false), J$.F(3632209, J$.R(3632185, 'sprintf', sprintf, false, true), false)(J$.T(3632193, '%02u', 21, false), J$.T(3632201, 1234, 22, false)));
                                            J$.M(3632273, J$.R(3632225, 'assert', assert, false, true), 'equal', false)(J$.T(3632233, ' -10.235', 21, false), J$.F(3632265, J$.R(3632241, 'sprintf', sprintf, false, true), false)(J$.T(3632249, '%8.3f', 21, false), J$.U(399130, '-', J$.T(3632257, 10.23456, 22, false))));
                                            J$.M(3632337, J$.R(3632281, 'assert', assert, false, true), 'equal', false)(J$.T(3632289, '-12.34 xxx', 21, false), J$.F(3632329, J$.R(3632297, 'sprintf', sprintf, false, true), false)(J$.T(3632305, '%f %s', 21, false), J$.U(399138, '-', J$.T(3632313, 12.34, 22, false)), J$.T(3632321, 'xxx', 21, false)));
                                            J$.M(3632401, J$.R(3632345, 'assert', assert, false, true), 'equal', false)(J$.T(3632353, '{\n  "foo": "bar"\n}', 21, false), J$.F(3632393, J$.R(3632361, 'sprintf', sprintf, false, true), false)(J$.T(3632369, '%2j', 21, false), J$.T(3632385, { foo: J$.T(3632377, 'bar', 21, false) }, 11, false)));
                                            J$.M(3632473, J$.R(3632409, 'assert', assert, false, true), 'equal', false)(J$.T(3632417, '[\n  "foo",\n  "bar"\n]', 21, false), J$.F(3632465, J$.R(3632425, 'sprintf', sprintf, false, true), false)(J$.T(3632433, '%2j', 21, false), J$.T(3632457, [
                                                J$.T(3632441, 'foo', 21, false),
                                                J$.T(3632449, 'bar', 21, false)
                                            ], 10, false)));
                                            J$.M(3632529, J$.R(3632481, 'assert', assert, false, true), 'equal', false)(J$.T(3632489, '2.3', 21, false), J$.F(3632521, J$.R(3632497, 'sprintf', sprintf, false, true), false)(J$.T(3632505, '%.1f', 21, false), J$.T(3632513, 2.345, 22, false)));
                                            J$.M(3632585, J$.R(3632537, 'assert', assert, false, true), 'equal', false)(J$.T(3632545, 'xxxxx', 21, false), J$.F(3632577, J$.R(3632553, 'sprintf', sprintf, false, true), false)(J$.T(3632561, '%5.5s', 21, false), J$.T(3632569, 'xxxxxx', 21, false)));
                                            J$.M(3632641, J$.R(3632593, 'assert', assert, false, true), 'equal', false)(J$.T(3632601, '    x', 21, false), J$.F(3632633, J$.R(3632609, 'sprintf', sprintf, false, true), false)(J$.T(3632617, '%5.1s', 21, false), J$.T(3632625, 'xxxxxx', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(3632985, J$e);
                                        } finally {
                                            if (J$.Fr(3632993))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3632881, J$.I(typeof it === 'undefined' ? it = J$.R(3632681, 'it', undefined, true, true) : it = J$.R(3632681, 'it', it, true, true)), false)(J$.T(3632689, 'should return formated strings for callbacks', 21, false), J$.T(3632873, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3632857, arguments.callee, this, arguments);
                                            arguments = J$.N(3632865, 'arguments', arguments, true, false, false);
                                            J$.M(3632777, J$.R(3632697, 'assert', assert, false, true), 'equal', false)(J$.T(3632705, 'foobar', 21, false), J$.F(3632769, J$.R(3632713, 'sprintf', sprintf, false, true), false)(J$.T(3632721, '%s', 21, false), J$.T(3632761, function () {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3632745, arguments.callee, this, arguments);
                                                            arguments = J$.N(3632753, 'arguments', arguments, true, false, false);
                                                            return J$.Rt(3632737, J$.T(3632729, 'foobar', 21, false));
                                                        } catch (J$e) {
                                                            J$.Ex(3633001, J$e);
                                                        } finally {
                                                            if (J$.Fr(3633009))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                            J$.M(3632849, J$.R(3632785, 'assert', assert, false, true), 'equal', false)(J$.M(3632801, J$.I(typeof Date === 'undefined' ? Date = J$.R(3632793, 'Date', undefined, true, true) : Date = J$.R(3632793, 'Date', Date, true, true)), 'now', false)(), J$.F(3632841, J$.R(3632809, 'sprintf', sprintf, false, true), false)(J$.T(3632817, '%s', 21, false), J$.G(3632833, J$.I(typeof Date === 'undefined' ? Date = J$.R(3632825, 'Date', undefined, true, true) : Date = J$.R(3632825, 'Date', Date, true, true)), 'now')));
                                        } catch (J$e) {
                                            J$.Ex(3633017, J$e);
                                        } finally {
                                            if (J$.Fr(3633025))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(3633033, J$e);
                        } finally {
                            if (J$.Fr(3633041))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3633049, J$e);
        } finally {
            if (J$.Sr(3633057))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

