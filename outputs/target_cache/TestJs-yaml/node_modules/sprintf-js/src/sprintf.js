J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(3629017, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/sprintf-js/src/sprintf.js');
            J$.F(3629009, J$.T(3628969, function (window) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(3628881, arguments.callee, this, arguments);
                            function sprintf() {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3624169, arguments.callee, this, arguments);
                                            arguments = J$.N(3624177, 'arguments', arguments, true, false, false);
                                            J$.N(3624185, 'key', key, false, false, false);
                                            J$.N(3624193, 'cache', cache, false, false, false);
                                            var key = J$.W(3623985, 'key', J$.G(3623961, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(3623945, 'arguments', undefined, true, true) : arguments = J$.R(3623945, 'arguments', arguments, true, true)), J$.T(3623953, 0, 22, false)), key, false, false), cache = J$.W(3623993, 'cache', J$.G(3623977, J$.R(3623969, 'sprintf', sprintf, false, false), 'cache'), cache, false, false);
                                            if (J$.C(191096, J$.U(398626, '!', J$.C(191088, J$.G(3624017, J$.R(3624001, 'cache', cache, false, false), J$.R(3624009, 'key', key, false, false))) ? J$.M(3624041, J$.R(3624025, 'cache', cache, false, false), 'hasOwnProperty', false)(J$.R(3624033, 'key', key, false, false)) : J$._()))) {
                                                J$.P(3624089, J$.R(3624049, 'cache', cache, false, false), J$.R(3624057, 'key', key, false, false), J$.M(3624081, J$.R(3624065, 'sprintf', sprintf, false, false), 'parse', false)(J$.R(3624073, 'key', key, false, false)));
                                            }
                                            return J$.Rt(3624161, J$.M(3624153, J$.G(3624105, J$.R(3624097, 'sprintf', sprintf, false, false), 'format'), 'call', false)(J$.T(3624113, null, 25, false), J$.G(3624137, J$.R(3624121, 'cache', cache, false, false), J$.R(3624129, 'key', key, false, false)), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(3624145, 'arguments', undefined, true, true) : arguments = J$.R(3624145, 'arguments', arguments, true, true))));
                                        } catch (J$e) {
                                            J$.Ex(3629025, J$e);
                                        } finally {
                                            if (J$.Fr(3629033))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function get_type(variable) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(3628553, arguments.callee, this, arguments);
                                            arguments = J$.N(3628561, 'arguments', arguments, true, false, false);
                                            variable = J$.N(3628569, 'variable', variable, true, false, false);
                                            return J$.Rt(3628545, J$.M(3628537, J$.M(3628529, J$.M(3628505, J$.G(3628489, J$.G(3628481, J$.I(typeof Object === 'undefined' ? Object = J$.R(3628473, 'Object', undefined, true, true) : Object = J$.R(3628473, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(3628497, 'variable', variable, false, false)), 'slice', false)(J$.T(3628513, 8, 22, false), J$.U(398954, '-', J$.T(3628521, 1, 22, false))), 'toLowerCase', false)());
                                        } catch (J$e) {
                                            J$.Ex(3629089, J$e);
                                        } finally {
                                            if (J$.Fr(3629097))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function str_repeat(input, multiplier) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(3628633, arguments.callee, this, arguments);
                                            arguments = J$.N(3628641, 'arguments', arguments, true, false, false);
                                            input = J$.N(3628649, 'input', input, true, false, false);
                                            multiplier = J$.N(3628657, 'multiplier', multiplier, true, false, false);
                                            return J$.Rt(3628625, J$.M(3628617, J$.F(3628601, J$.I(typeof Array === 'undefined' ? Array = J$.R(3628577, 'Array', undefined, true, true) : Array = J$.R(3628577, 'Array', Array, true, true)), false)(J$.B(398962, '+', J$.R(3628585, 'multiplier', multiplier, false, false), J$.T(3628593, 1, 22, false))), 'join', false)(J$.R(3628609, 'input', input, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(3629105, J$e);
                                        } finally {
                                            if (J$.Fr(3629113))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(3628889, 'arguments', arguments, true, false, false);
                            window = J$.N(3628897, 'window', window, true, false, false);
                            J$.N(3628905, 're', re, false, false, false);
                            sprintf = J$.N(3628921, 'sprintf', J$.T(3628913, sprintf, 12, false), true, false, false);
                            J$.N(3628929, 'vsprintf', vsprintf, false, false, false);
                            get_type = J$.N(3628945, 'get_type', J$.T(3628937, get_type, 12, false), true, false, false);
                            str_repeat = J$.N(3628961, 'str_repeat', J$.T(3628953, str_repeat, 12, false), true, false, false);
                            var re = J$.W(3623937, 're', J$.T(3623929, {
                                not_string: J$.T(3623841, /[^s]/, 14, false),
                                number: J$.T(3623849, /[diefg]/, 14, false),
                                json: J$.T(3623857, /[j]/, 14, false),
                                not_json: J$.T(3623865, /[^j]/, 14, false),
                                text: J$.T(3623873, /^[^\x25]+/, 14, false),
                                modulo: J$.T(3623881, /^\x25{2}/, 14, false),
                                placeholder: J$.T(3623889, /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-gijosuxX])/, 14, false),
                                key: J$.T(3623897, /^([a-z_][a-z_\d]*)/i, 14, false),
                                key_access: J$.T(3623905, /^\.([a-z_][a-z_\d]*)/i, 14, false),
                                index_access: J$.T(3623913, /^\[(\d+)\]/, 14, false),
                                sign: J$.T(3623921, /^[\+\-]/, 14, false)
                            }, 11, false), re, false, false);
                            J$.P(3627081, J$.R(3624201, 'sprintf', sprintf, false, false), 'format', J$.T(3627073, function (parse_tree, argv) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(3626937, arguments.callee, this, arguments);
                                            arguments = J$.N(3626945, 'arguments', arguments, true, false, false);
                                            parse_tree = J$.N(3626953, 'parse_tree', parse_tree, true, false, false);
                                            argv = J$.N(3626961, 'argv', argv, true, false, false);
                                            J$.N(3626969, 'cursor', cursor, false, false, false);
                                            J$.N(3626977, 'tree_length', tree_length, false, false, false);
                                            J$.N(3626985, 'node_type', node_type, false, false, false);
                                            J$.N(3626993, 'arg', arg, false, false, false);
                                            J$.N(3627001, 'output', output, false, false, false);
                                            J$.N(3627009, 'i', i, false, false, false);
                                            J$.N(3627017, 'k', k, false, false, false);
                                            J$.N(3627025, 'match', match, false, false, false);
                                            J$.N(3627033, 'pad', pad, false, false, false);
                                            J$.N(3627041, 'pad_character', pad_character, false, false, false);
                                            J$.N(3627049, 'pad_length', pad_length, false, false, false);
                                            J$.N(3627057, 'is_positive', is_positive, false, false, false);
                                            J$.N(3627065, 'sign', sign, false, false, false);
                                            var cursor = J$.W(3624265, 'cursor', J$.T(3624209, 1, 22, false), cursor, false, false), tree_length = J$.W(3624273, 'tree_length', J$.G(3624225, J$.R(3624217, 'parse_tree', parse_tree, false, false), 'length'), tree_length, false, false), node_type = J$.W(3624281, 'node_type', J$.T(3624233, '', 21, false), node_type, false, false), arg, output = J$.W(3624289, 'output', J$.T(3624241, [], 10, false), output, false, false), i, k, match, pad, pad_character, pad_length, is_positive = J$.W(3624297, 'is_positive', J$.T(3624249, true, 23, false), is_positive, false, false), sign = J$.W(3624305, 'sign', J$.T(3624257, '', 21, false), sign, false, false);
                                            for (i = J$.W(3624321, 'i', J$.T(3624313, 0, 22, false), i, false, false); J$.C(191448, J$.B(398634, '<', J$.R(3624329, 'i', i, false, false), J$.R(3624337, 'tree_length', tree_length, false, false))); J$.B(398658, '-', i = J$.W(3624353, 'i', J$.B(398650, '+', J$.U(398642, '+', J$.R(3624345, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                node_type = J$.W(3624401, 'node_type', J$.F(3624393, J$.R(3624361, 'get_type', get_type, false, false), false)(J$.G(3624385, J$.R(3624369, 'parse_tree', parse_tree, false, false), J$.R(3624377, 'i', i, false, false))), node_type, false, false);
                                                if (J$.C(191440, J$.B(398666, '===', J$.R(3624409, 'node_type', node_type, false, false), J$.T(3624417, 'string', 21, false)))) {
                                                    J$.P(3624473, J$.R(3624425, 'output', output, false, false), J$.G(3624441, J$.R(3624433, 'output', output, false, false), 'length'), J$.G(3624465, J$.R(3624449, 'parse_tree', parse_tree, false, false), J$.R(3624457, 'i', i, false, false)));
                                                } else if (J$.C(191432, J$.B(398674, '===', J$.R(3624481, 'node_type', node_type, false, false), J$.T(3624489, 'array', 21, false)))) {
                                                    match = J$.W(3624521, 'match', J$.G(3624513, J$.R(3624497, 'parse_tree', parse_tree, false, false), J$.R(3624505, 'i', i, false, false)), match, false, false);
                                                    if (J$.C(191128, J$.G(3624545, J$.R(3624529, 'match', match, false, false), J$.T(3624537, 2, 22, false)))) {
                                                        arg = J$.W(3624577, 'arg', J$.G(3624569, J$.R(3624553, 'argv', argv, false, false), J$.R(3624561, 'cursor', cursor, false, false)), arg, false, false);
                                                        for (k = J$.W(3624593, 'k', J$.T(3624585, 0, 22, false), k, false, false); J$.C(191112, J$.B(398682, '<', J$.R(3624601, 'k', k, false, false), J$.G(3624633, J$.G(3624625, J$.R(3624609, 'match', match, false, false), J$.T(3624617, 2, 22, false)), 'length'))); J$.B(398706, '-', k = J$.W(3624649, 'k', J$.B(398698, '+', J$.U(398690, '+', J$.R(3624641, 'k', k, false, false)), 1), k, false, false), 1)) {
                                                            if (J$.C(191104, J$.U(398714, '!', J$.M(3624705, J$.R(3624657, 'arg', arg, false, false), 'hasOwnProperty', false)(J$.G(3624697, J$.G(3624681, J$.R(3624665, 'match', match, false, false), J$.T(3624673, 2, 22, false)), J$.R(3624689, 'k', k, false, false)))))) {
                                                                throw J$.F(3624785, J$.I(typeof Error === 'undefined' ? Error = J$.R(3624713, 'Error', undefined, true, true) : Error = J$.R(3624713, 'Error', Error, true, true)), true)(J$.F(3624777, J$.R(3624721, 'sprintf', sprintf, false, false), false)(J$.T(3624729, '[sprintf] property \'%s\' does not exist', 21, false), J$.G(3624769, J$.G(3624753, J$.R(3624737, 'match', match, false, false), J$.T(3624745, 2, 22, false)), J$.R(3624761, 'k', k, false, false))));
                                                            }
                                                            arg = J$.W(3624849, 'arg', J$.G(3624841, J$.R(3624793, 'arg', arg, false, false), J$.G(3624833, J$.G(3624817, J$.R(3624801, 'match', match, false, false), J$.T(3624809, 2, 22, false)), J$.R(3624825, 'k', k, false, false))), arg, false, false);
                                                        }
                                                    } else if (J$.C(191120, J$.G(3624873, J$.R(3624857, 'match', match, false, false), J$.T(3624865, 1, 22, false)))) {
                                                        arg = J$.W(3624921, 'arg', J$.G(3624913, J$.R(3624881, 'argv', argv, false, false), J$.G(3624905, J$.R(3624889, 'match', match, false, false), J$.T(3624897, 1, 22, false))), arg, false, false);
                                                    } else {
                                                        arg = J$.W(3624961, 'arg', J$.G(3624953, J$.R(3624929, 'argv', argv, false, false), J$.B(398738, '-', cursor = J$.W(3624945, 'cursor', J$.B(398730, '+', J$.U(398722, '+', J$.R(3624937, 'cursor', cursor, false, false)), 1), cursor, false, false), 1)), arg, false, false);
                                                    }
                                                    if (J$.C(191136, J$.B(398746, '==', J$.F(3624985, J$.R(3624969, 'get_type', get_type, false, false), false)(J$.R(3624977, 'arg', arg, false, false)), J$.T(3624993, 'function', 21, false)))) {
                                                        arg = J$.W(3625017, 'arg', J$.F(3625009, J$.R(3625001, 'arg', arg, false, false), false)(), arg, false, false);
                                                    }
                                                    if (J$.C(191168, J$.C(191160, J$.C(191144, J$.M(3625065, J$.G(3625033, J$.R(3625025, 're', re, false, false), 'not_string'), 'test', false)(J$.G(3625057, J$.R(3625041, 'match', match, false, false), J$.T(3625049, 8, 22, false)))) ? J$.M(3625113, J$.G(3625081, J$.R(3625073, 're', re, false, false), 'not_json'), 'test', false)(J$.G(3625105, J$.R(3625089, 'match', match, false, false), J$.T(3625097, 8, 22, false))) : J$._()) ? J$.C(191152, J$.B(398754, '!=', J$.F(3625137, J$.R(3625121, 'get_type', get_type, false, false), false)(J$.R(3625129, 'arg', arg, false, false)), J$.T(3625145, 'number', 21, false))) ? J$.F(3625169, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(3625153, 'isNaN', undefined, true, true) : isNaN = J$.R(3625153, 'isNaN', isNaN, true, true)), false)(J$.R(3625161, 'arg', arg, false, false)) : J$._() : J$._())) {
                                                        throw J$.F(3625233, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3625177, 'TypeError', undefined, true, true) : TypeError = J$.R(3625177, 'TypeError', TypeError, true, true)), true)(J$.F(3625225, J$.R(3625185, 'sprintf', sprintf, false, false), false)(J$.T(3625193, '[sprintf] expecting number but found %s', 21, false), J$.F(3625217, J$.R(3625201, 'get_type', get_type, false, false), false)(J$.R(3625209, 'arg', arg, false, false))));
                                                    }
                                                    if (J$.C(191176, J$.M(3625281, J$.G(3625249, J$.R(3625241, 're', re, false, false), 'number'), 'test', false)(J$.G(3625273, J$.R(3625257, 'match', match, false, false), J$.T(3625265, 8, 22, false))))) {
                                                        is_positive = J$.W(3625305, 'is_positive', J$.B(398762, '>=', J$.R(3625289, 'arg', arg, false, false), J$.T(3625297, 0, 22, false)), is_positive, false, false);
                                                    }
                                                    switch (J$.C1(191232, J$.G(3625329, J$.R(3625313, 'match', match, false, false), J$.T(3625321, 8, 22, false)))) {
                                                    case J$.C2(191240, J$.T(3625369, 'b', 21, false)):
                                                        arg = J$.W(3625361, 'arg', J$.M(3625353, J$.R(3625337, 'arg', arg, false, false), 'toString', false)(J$.T(3625345, 2, 22, false)), arg, false, false);
                                                        break;
                                                    case J$.C2(191248, J$.T(3625409, 'c', 21, false)):
                                                        arg = J$.W(3625401, 'arg', J$.M(3625393, J$.I(typeof String === 'undefined' ? String = J$.R(3625377, 'String', undefined, true, true) : String = J$.R(3625377, 'String', String, true, true)), 'fromCharCode', false)(J$.R(3625385, 'arg', arg, false, false)), arg, false, false);
                                                        break;
                                                    case J$.C2(191256, J$.T(3625417, 'd', 21, false)):
                                                    case J$.C2(191264, J$.T(3625465, 'i', 21, false)):
                                                        arg = J$.W(3625457, 'arg', J$.F(3625449, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3625425, 'parseInt', undefined, true, true) : parseInt = J$.R(3625425, 'parseInt', parseInt, true, true)), false)(J$.R(3625433, 'arg', arg, false, false), J$.T(3625441, 10, 22, false)), arg, false, false);
                                                        break;
                                                    case J$.C2(191272, J$.T(3625585, 'j', 21, false)):
                                                        arg = J$.W(3625577, 'arg', J$.M(3625569, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(3625473, 'JSON', undefined, true, true) : JSON = J$.R(3625473, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(3625481, 'arg', arg, false, false), J$.T(3625489, null, 25, false), J$.C(191184, J$.G(3625513, J$.R(3625497, 'match', match, false, false), J$.T(3625505, 6, 22, false))) ? J$.F(3625553, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3625521, 'parseInt', undefined, true, true) : parseInt = J$.R(3625521, 'parseInt', parseInt, true, true)), false)(J$.G(3625545, J$.R(3625529, 'match', match, false, false), J$.T(3625537, 6, 22, false))) : J$.T(3625561, 0, 22, false)), arg, false, false);
                                                        break;
                                                    case J$.C2(191280, J$.T(3625681, 'e', 21, false)):
                                                        arg = J$.W(3625673, 'arg', J$.C(191192, J$.G(3625609, J$.R(3625593, 'match', match, false, false), J$.T(3625601, 7, 22, false))) ? J$.M(3625649, J$.R(3625617, 'arg', arg, false, false), 'toExponential', false)(J$.G(3625641, J$.R(3625625, 'match', match, false, false), J$.T(3625633, 7, 22, false))) : J$.M(3625665, J$.R(3625657, 'arg', arg, false, false), 'toExponential', false)(), arg, false, false);
                                                        break;
                                                    case J$.C2(191288, J$.T(3625801, 'f', 21, false)):
                                                        arg = J$.W(3625793, 'arg', J$.C(191200, J$.G(3625705, J$.R(3625689, 'match', match, false, false), J$.T(3625697, 7, 22, false))) ? J$.M(3625761, J$.F(3625729, J$.I(typeof parseFloat === 'undefined' ? parseFloat = J$.R(3625713, 'parseFloat', undefined, true, true) : parseFloat = J$.R(3625713, 'parseFloat', parseFloat, true, true)), false)(J$.R(3625721, 'arg', arg, false, false)), 'toFixed', false)(J$.G(3625753, J$.R(3625737, 'match', match, false, false), J$.T(3625745, 7, 22, false))) : J$.F(3625785, J$.I(typeof parseFloat === 'undefined' ? parseFloat = J$.R(3625769, 'parseFloat', undefined, true, true) : parseFloat = J$.R(3625769, 'parseFloat', parseFloat, true, true)), false)(J$.R(3625777, 'arg', arg, false, false)), arg, false, false);
                                                        break;
                                                    case J$.C2(191296, J$.T(3625921, 'g', 21, false)):
                                                        arg = J$.W(3625913, 'arg', J$.C(191208, J$.G(3625825, J$.R(3625809, 'match', match, false, false), J$.T(3625817, 7, 22, false))) ? J$.M(3625881, J$.F(3625849, J$.I(typeof parseFloat === 'undefined' ? parseFloat = J$.R(3625833, 'parseFloat', undefined, true, true) : parseFloat = J$.R(3625833, 'parseFloat', parseFloat, true, true)), false)(J$.R(3625841, 'arg', arg, false, false)), 'toPrecision', false)(J$.G(3625873, J$.R(3625857, 'match', match, false, false), J$.T(3625865, 7, 22, false))) : J$.F(3625905, J$.I(typeof parseFloat === 'undefined' ? parseFloat = J$.R(3625889, 'parseFloat', undefined, true, true) : parseFloat = J$.R(3625889, 'parseFloat', parseFloat, true, true)), false)(J$.R(3625897, 'arg', arg, false, false)), arg, false, false);
                                                        break;
                                                    case J$.C2(191304, J$.T(3625961, 'o', 21, false)):
                                                        arg = J$.W(3625953, 'arg', J$.M(3625945, J$.R(3625929, 'arg', arg, false, false), 'toString', false)(J$.T(3625937, 8, 22, false)), arg, false, false);
                                                        break;
                                                    case J$.C2(191312, J$.T(3626089, 's', 21, false)):
                                                        arg = J$.W(3626081, 'arg', J$.C(191224, J$.C(191216, arg = J$.W(3625993, 'arg', J$.F(3625985, J$.I(typeof String === 'undefined' ? String = J$.R(3625969, 'String', undefined, true, true) : String = J$.R(3625969, 'String', String, true, true)), false)(J$.R(3625977, 'arg', arg, false, false)), arg, false, false)) ? J$.G(3626017, J$.R(3626001, 'match', match, false, false), J$.T(3626009, 7, 22, false)) : J$._()) ? J$.M(3626065, J$.R(3626025, 'arg', arg, false, false), 'substring', false)(J$.T(3626033, 0, 22, false), J$.G(3626057, J$.R(3626041, 'match', match, false, false), J$.T(3626049, 7, 22, false))) : J$.R(3626073, 'arg', arg, false, false), arg, false, false);
                                                        break;
                                                    case J$.C2(191320, J$.T(3626121, 'u', 21, false)):
                                                        arg = J$.W(3626113, 'arg', J$.B(398770, '>>>', J$.R(3626097, 'arg', arg, false, false), J$.T(3626105, 0, 22, false)), arg, false, false);
                                                        break;
                                                    case J$.C2(191328, J$.T(3626161, 'x', 21, false)):
                                                        arg = J$.W(3626153, 'arg', J$.M(3626145, J$.R(3626129, 'arg', arg, false, false), 'toString', false)(J$.T(3626137, 16, 22, false)), arg, false, false);
                                                        break;
                                                    case J$.C2(191336, J$.T(3626209, 'X', 21, false)):
                                                        arg = J$.W(3626201, 'arg', J$.M(3626193, J$.M(3626185, J$.R(3626169, 'arg', arg, false, false), 'toString', false)(J$.T(3626177, 16, 22, false)), 'toUpperCase', false)(), arg, false, false);
                                                        break;
                                                    }
                                                    if (J$.C(191424, J$.M(3626257, J$.G(3626225, J$.R(3626217, 're', re, false, false), 'json'), 'test', false)(J$.G(3626249, J$.R(3626233, 'match', match, false, false), J$.T(3626241, 8, 22, false))))) {
                                                        J$.P(3626297, J$.R(3626265, 'output', output, false, false), J$.G(3626281, J$.R(3626273, 'output', output, false, false), 'length'), J$.R(3626289, 'arg', arg, false, false));
                                                    } else {
                                                        if (J$.C(191368, J$.C(191352, J$.M(3626345, J$.G(3626313, J$.R(3626305, 're', re, false, false), 'number'), 'test', false)(J$.G(3626337, J$.R(3626321, 'match', match, false, false), J$.T(3626329, 8, 22, false)))) ? J$.C(191344, J$.U(398778, '!', J$.R(3626353, 'is_positive', is_positive, false, false))) ? J$._() : J$.G(3626377, J$.R(3626361, 'match', match, false, false), J$.T(3626369, 3, 22, false)) : J$._())) {
                                                            sign = J$.W(3626409, 'sign', J$.C(191360, J$.R(3626385, 'is_positive', is_positive, false, false)) ? J$.T(3626393, '+', 21, false) : J$.T(3626401, '-', 21, false), sign, false, false);
                                                            arg = J$.W(3626465, 'arg', J$.M(3626457, J$.M(3626425, J$.R(3626417, 'arg', arg, false, false), 'toString', false)(), 'replace', false)(J$.G(3626441, J$.R(3626433, 're', re, false, false), 'sign'), J$.T(3626449, '', 21, false)), arg, false, false);
                                                        } else {
                                                            sign = J$.W(3626481, 'sign', J$.T(3626473, '', 21, false), sign, false, false);
                                                        }
                                                        pad_character = J$.W(3626601, 'pad_character', J$.C(191384, J$.G(3626505, J$.R(3626489, 'match', match, false, false), J$.T(3626497, 4, 22, false))) ? J$.C(191376, J$.B(398786, '===', J$.G(3626529, J$.R(3626513, 'match', match, false, false), J$.T(3626521, 4, 22, false)), J$.T(3626537, '0', 21, false))) ? J$.T(3626545, '0', 21, false) : J$.M(3626585, J$.G(3626569, J$.R(3626553, 'match', match, false, false), J$.T(3626561, 4, 22, false)), 'charAt', false)(J$.T(3626577, 1, 22, false)) : J$.T(3626593, ' ', 21, false), pad_character, false, false);
                                                        pad_length = J$.W(3626657, 'pad_length', J$.B(398802, '-', J$.G(3626625, J$.R(3626609, 'match', match, false, false), J$.T(3626617, 6, 22, false)), J$.G(3626649, J$.B(398794, '+', J$.R(3626633, 'sign', sign, false, false), J$.R(3626641, 'arg', arg, false, false)), 'length')), pad_length, false, false);
                                                        pad = J$.W(3626753, 'pad', J$.C(191400, J$.G(3626681, J$.R(3626665, 'match', match, false, false), J$.T(3626673, 6, 22, false))) ? J$.C(191392, J$.B(398810, '>', J$.R(3626689, 'pad_length', pad_length, false, false), J$.T(3626697, 0, 22, false))) ? J$.F(3626729, J$.R(3626705, 'str_repeat', str_repeat, false, false), false)(J$.R(3626713, 'pad_character', pad_character, false, false), J$.R(3626721, 'pad_length', pad_length, false, false)) : J$.T(3626737, '', 21, false) : J$.T(3626745, '', 21, false), pad, false, false);
                                                        J$.P(3626897, J$.R(3626761, 'output', output, false, false), J$.G(3626777, J$.R(3626769, 'output', output, false, false), 'length'), J$.C(191416, J$.G(3626801, J$.R(3626785, 'match', match, false, false), J$.T(3626793, 5, 22, false))) ? J$.B(398826, '+', J$.B(398818, '+', J$.R(3626809, 'sign', sign, false, false), J$.R(3626817, 'arg', arg, false, false)), J$.R(3626825, 'pad', pad, false, false)) : J$.C(191408, J$.B(398834, '===', J$.R(3626833, 'pad_character', pad_character, false, false), J$.T(3626841, '0', 21, false))) ? J$.B(398850, '+', J$.B(398842, '+', J$.R(3626849, 'sign', sign, false, false), J$.R(3626857, 'pad', pad, false, false)), J$.R(3626865, 'arg', arg, false, false)) : J$.B(398866, '+', J$.B(398858, '+', J$.R(3626873, 'pad', pad, false, false), J$.R(3626881, 'sign', sign, false, false)), J$.R(3626889, 'arg', arg, false, false)));
                                                    }
                                                }
                                            }
                                            return J$.Rt(3626929, J$.M(3626921, J$.R(3626905, 'output', output, false, false), 'join', false)(J$.T(3626913, '', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(3629041, J$e);
                                        } finally {
                                            if (J$.Fr(3629049))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(3627105, J$.R(3627089, 'sprintf', sprintf, false, false), 'cache', J$.T(3627097, {}, 11, false));
                            J$.P(3628289, J$.R(3627113, 'sprintf', sprintf, false, false), 'parse', J$.T(3628281, function (fmt) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(3628201, arguments.callee, this, arguments);
                                            arguments = J$.N(3628209, 'arguments', arguments, true, false, false);
                                            fmt = J$.N(3628217, 'fmt', fmt, true, false, false);
                                            J$.N(3628225, '_fmt', _fmt, false, false, false);
                                            J$.N(3628233, 'match', match, false, false, false);
                                            J$.N(3628241, 'parse_tree', parse_tree, false, false, false);
                                            J$.N(3628249, 'arg_names', arg_names, false, false, false);
                                            J$.N(3628257, 'field_list', field_list, false, false, false);
                                            J$.N(3628265, 'replacement_field', replacement_field, false, false, false);
                                            J$.N(3628273, 'field_match', field_match, false, false, false);
                                            var _fmt = J$.W(3627153, '_fmt', J$.R(3627121, 'fmt', fmt, false, false), _fmt, false, false), match = J$.W(3627161, 'match', J$.T(3627129, [], 10, false), match, false, false), parse_tree = J$.W(3627169, 'parse_tree', J$.T(3627137, [], 10, false), parse_tree, false, false), arg_names = J$.W(3627177, 'arg_names', J$.T(3627145, 0, 22, false), arg_names, false, false);
                                            while (J$.C(191528, J$.R(3627185, '_fmt', _fmt, false, false))) {
                                                if (J$.C(191520, J$.B(398874, '!==', match = J$.W(3627225, 'match', J$.M(3627217, J$.G(3627201, J$.R(3627193, 're', re, false, false), 'text'), 'exec', false)(J$.R(3627209, '_fmt', _fmt, false, false)), match, false, false), J$.T(3627233, null, 25, false)))) {
                                                    J$.P(3627289, J$.R(3627241, 'parse_tree', parse_tree, false, false), J$.G(3627257, J$.R(3627249, 'parse_tree', parse_tree, false, false), 'length'), J$.G(3627281, J$.R(3627265, 'match', match, false, false), J$.T(3627273, 0, 22, false)));
                                                } else if (J$.C(191512, J$.B(398882, '!==', match = J$.W(3627329, 'match', J$.M(3627321, J$.G(3627305, J$.R(3627297, 're', re, false, false), 'modulo'), 'exec', false)(J$.R(3627313, '_fmt', _fmt, false, false)), match, false, false), J$.T(3627337, null, 25, false)))) {
                                                    J$.P(3627377, J$.R(3627345, 'parse_tree', parse_tree, false, false), J$.G(3627361, J$.R(3627353, 'parse_tree', parse_tree, false, false), 'length'), J$.T(3627369, '%', 21, false));
                                                } else if (J$.C(191504, J$.B(398890, '!==', match = J$.W(3627417, 'match', J$.M(3627409, J$.G(3627393, J$.R(3627385, 're', re, false, false), 'placeholder'), 'exec', false)(J$.R(3627401, '_fmt', _fmt, false, false)), match, false, false), J$.T(3627425, null, 25, false)))) {
                                                    if (J$.C(191488, J$.G(3627449, J$.R(3627433, 'match', match, false, false), J$.T(3627441, 2, 22, false)))) {
                                                        arg_names = J$.W(3627473, 'arg_names', J$.B(398898, '|', J$.R(3627465, 'arg_names', arg_names, false, false), J$.T(3627457, 1, 22, false)), arg_names, false, false);
                                                        var field_list = J$.W(3627521, 'field_list', J$.T(3627481, [], 10, false), field_list, false, false), replacement_field = J$.W(3627529, 'replacement_field', J$.G(3627505, J$.R(3627489, 'match', match, false, false), J$.T(3627497, 2, 22, false)), replacement_field, false, false), field_match = J$.W(3627537, 'field_match', J$.T(3627513, [], 10, false), field_match, false, false);
                                                        if (J$.C(191480, J$.B(398906, '!==', field_match = J$.W(3627577, 'field_match', J$.M(3627569, J$.G(3627553, J$.R(3627545, 're', re, false, false), 'key'), 'exec', false)(J$.R(3627561, 'replacement_field', replacement_field, false, false)), field_match, false, false), J$.T(3627585, null, 25, false)))) {
                                                            J$.P(3627641, J$.R(3627593, 'field_list', field_list, false, false), J$.G(3627609, J$.R(3627601, 'field_list', field_list, false, false), 'length'), J$.G(3627633, J$.R(3627617, 'field_match', field_match, false, false), J$.T(3627625, 1, 22, false)));
                                                            while (J$.C(191472, J$.B(398914, '!==', replacement_field = J$.W(3627697, 'replacement_field', J$.M(3627689, J$.R(3627649, 'replacement_field', replacement_field, false, false), 'substring', false)(J$.G(3627681, J$.G(3627673, J$.R(3627657, 'field_match', field_match, false, false), J$.T(3627665, 0, 22, false)), 'length')), replacement_field, false, false), J$.T(3627705, '', 21, false)))) {
                                                                if (J$.C(191464, J$.B(398922, '!==', field_match = J$.W(3627745, 'field_match', J$.M(3627737, J$.G(3627721, J$.R(3627713, 're', re, false, false), 'key_access'), 'exec', false)(J$.R(3627729, 'replacement_field', replacement_field, false, false)), field_match, false, false), J$.T(3627753, null, 25, false)))) {
                                                                    J$.P(3627809, J$.R(3627761, 'field_list', field_list, false, false), J$.G(3627777, J$.R(3627769, 'field_list', field_list, false, false), 'length'), J$.G(3627801, J$.R(3627785, 'field_match', field_match, false, false), J$.T(3627793, 1, 22, false)));
                                                                } else if (J$.C(191456, J$.B(398930, '!==', field_match = J$.W(3627849, 'field_match', J$.M(3627841, J$.G(3627825, J$.R(3627817, 're', re, false, false), 'index_access'), 'exec', false)(J$.R(3627833, 'replacement_field', replacement_field, false, false)), field_match, false, false), J$.T(3627857, null, 25, false)))) {
                                                                    J$.P(3627913, J$.R(3627865, 'field_list', field_list, false, false), J$.G(3627881, J$.R(3627873, 'field_list', field_list, false, false), 'length'), J$.G(3627905, J$.R(3627889, 'field_match', field_match, false, false), J$.T(3627897, 1, 22, false)));
                                                                } else {
                                                                    throw J$.F(3627937, J$.I(typeof SyntaxError === 'undefined' ? SyntaxError = J$.R(3627921, 'SyntaxError', undefined, true, true) : SyntaxError = J$.R(3627921, 'SyntaxError', SyntaxError, true, true)), true)(J$.T(3627929, '[sprintf] failed to parse named argument key', 21, false));
                                                                }
                                                            }
                                                        } else {
                                                            throw J$.F(3627961, J$.I(typeof SyntaxError === 'undefined' ? SyntaxError = J$.R(3627945, 'SyntaxError', undefined, true, true) : SyntaxError = J$.R(3627945, 'SyntaxError', SyntaxError, true, true)), true)(J$.T(3627953, '[sprintf] failed to parse named argument key', 21, false));
                                                        }
                                                        J$.P(3627993, J$.R(3627969, 'match', match, false, false), J$.T(3627977, 2, 22, false), J$.R(3627985, 'field_list', field_list, false, false));
                                                    } else {
                                                        arg_names = J$.W(3628017, 'arg_names', J$.B(398938, '|', J$.R(3628009, 'arg_names', arg_names, false, false), J$.T(3628001, 2, 22, false)), arg_names, false, false);
                                                    }
                                                    if (J$.C(191496, J$.B(398946, '===', J$.R(3628025, 'arg_names', arg_names, false, false), J$.T(3628033, 3, 22, false)))) {
                                                        throw J$.F(3628057, J$.I(typeof Error === 'undefined' ? Error = J$.R(3628041, 'Error', undefined, true, true) : Error = J$.R(3628041, 'Error', Error, true, true)), true)(J$.T(3628049, '[sprintf] mixing positional and named placeholders is not (yet) supported', 21, false));
                                                    }
                                                    J$.P(3628097, J$.R(3628065, 'parse_tree', parse_tree, false, false), J$.G(3628081, J$.R(3628073, 'parse_tree', parse_tree, false, false), 'length'), J$.R(3628089, 'match', match, false, false));
                                                } else {
                                                    throw J$.F(3628121, J$.I(typeof SyntaxError === 'undefined' ? SyntaxError = J$.R(3628105, 'SyntaxError', undefined, true, true) : SyntaxError = J$.R(3628105, 'SyntaxError', SyntaxError, true, true)), true)(J$.T(3628113, '[sprintf] unexpected placeholder', 21, false));
                                                }
                                                _fmt = J$.W(3628177, '_fmt', J$.M(3628169, J$.R(3628129, '_fmt', _fmt, false, false), 'substring', false)(J$.G(3628161, J$.G(3628153, J$.R(3628137, 'match', match, false, false), J$.T(3628145, 0, 22, false)), 'length')), _fmt, false, false);
                                            }
                                            return J$.Rt(3628193, J$.R(3628185, 'parse_tree', parse_tree, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3629057, J$e);
                                        } finally {
                                            if (J$.Fr(3629065))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var vsprintf = J$.W(3628465, 'vsprintf', J$.T(3628457, function (fmt, argv, _argv) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3628417, arguments.callee, this, arguments);
                                            arguments = J$.N(3628425, 'arguments', arguments, true, false, false);
                                            fmt = J$.N(3628433, 'fmt', fmt, true, false, false);
                                            argv = J$.N(3628441, 'argv', argv, true, false, false);
                                            _argv = J$.N(3628449, '_argv', _argv, true, false, false);
                                            _argv = J$.W(3628329, '_argv', J$.M(3628321, J$.C(191536, J$.R(3628297, 'argv', argv, false, false)) ? J$._() : J$.T(3628305, [], 10, false), 'slice', false)(J$.T(3628313, 0, 22, false)), _argv, false, false);
                                            J$.M(3628369, J$.R(3628337, '_argv', _argv, false, false), 'splice', false)(J$.T(3628345, 0, 22, false), J$.T(3628353, 0, 22, false), J$.R(3628361, 'fmt', fmt, false, false));
                                            return J$.Rt(3628409, J$.M(3628401, J$.R(3628377, 'sprintf', sprintf, false, false), 'apply', false)(J$.T(3628385, null, 25, false), J$.R(3628393, '_argv', _argv, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(3629073, J$e);
                                        } finally {
                                            if (J$.Fr(3629081))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), vsprintf, false, false);
                            if (J$.C(191560, J$.B(398978, '!==', J$.U(398970, 'typeof', J$.I(typeof exports === 'undefined' ? exports = J$.R(3628665, 'exports', undefined, true, true) : exports = J$.R(3628665, 'exports', exports, true, true))), J$.T(3628673, 'undefined', 21, false)))) {
                                J$.P(3628697, J$.I(typeof exports === 'undefined' ? exports = J$.R(3628681, 'exports', undefined, true, true) : exports = J$.R(3628681, 'exports', exports, true, true)), 'sprintf', J$.R(3628689, 'sprintf', sprintf, false, false));
                                J$.P(3628721, J$.I(typeof exports === 'undefined' ? exports = J$.R(3628705, 'exports', undefined, true, true) : exports = J$.R(3628705, 'exports', exports, true, true)), 'vsprintf', J$.R(3628713, 'vsprintf', vsprintf, false, false));
                            } else {
                                J$.P(3628745, J$.R(3628729, 'window', window, false, false), 'sprintf', J$.R(3628737, 'sprintf', sprintf, false, false));
                                J$.P(3628769, J$.R(3628753, 'window', window, false, false), 'vsprintf', J$.R(3628761, 'vsprintf', vsprintf, false, false));
                                if (J$.C(191552, J$.C(191544, J$.B(398994, '===', J$.U(398986, 'typeof', J$.I(typeof define === 'undefined' ? define = J$.R(3628777, 'define', undefined, true, true) : define = J$.R(3628777, 'define', define, true, true))), J$.T(3628785, 'function', 21, false))) ? J$.G(3628801, J$.I(typeof define === 'undefined' ? define = J$.R(3628793, 'define', undefined, true, true) : define = J$.R(3628793, 'define', define, true, true)), 'amd') : J$._())) {
                                    J$.F(3628873, J$.I(typeof define === 'undefined' ? define = J$.R(3628809, 'define', undefined, true, true) : define = J$.R(3628809, 'define', define, true, true)), false)(J$.T(3628865, function () {
                                        jalangiLabel6:
                                            while (true) {
                                                try {
                                                    J$.Fe(3628849, arguments.callee, this, arguments);
                                                    arguments = J$.N(3628857, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(3628841, J$.T(3628833, {
                                                        sprintf: J$.R(3628817, 'sprintf', sprintf, false, false),
                                                        vsprintf: J$.R(3628825, 'vsprintf', vsprintf, false, false)
                                                    }, 11, false));
                                                } catch (J$e) {
                                                    J$.Ex(3629121, J$e);
                                                } finally {
                                                    if (J$.Fr(3629129))
                                                        continue jalangiLabel6;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(3629137, J$e);
                        } finally {
                            if (J$.Fr(3629145))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.C(191568, J$.B(399010, '===', J$.U(399002, 'typeof', J$.I(typeof window === 'undefined' ? window = J$.R(3628977, 'window', undefined, true, true) : window = J$.R(3628977, 'window', window, true, true))), J$.T(3628985, 'undefined', 21, false))) ? J$.R(3628993, 'this', this, false, false) : J$.I(typeof window === 'undefined' ? window = J$.R(3629001, 'window', undefined, true, true) : window = J$.R(3629001, 'window', window, true, true)));
        } catch (J$e) {
            J$.Ex(3629153, J$e);
        } finally {
            if (J$.Sr(3629161))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

