J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(3228489, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/esprima/bin/esparse.js');
            function showUsage() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3227153, arguments.callee, this, arguments);
                            arguments = J$.N(3227161, 'arguments', arguments, true, false, false);
                            J$.M(3226857, J$.I(typeof console === 'undefined' ? console = J$.R(3226841, 'console', undefined, true, true) : console = J$.R(3226841, 'console', console, true, true)), 'log', false)(J$.T(3226849, 'Usage:', 21, false));
                            J$.M(3226881, J$.I(typeof console === 'undefined' ? console = J$.R(3226865, 'console', undefined, true, true) : console = J$.R(3226865, 'console', console, true, true)), 'log', false)(J$.T(3226873, '   esparse [options] [file.js]', 21, false));
                            J$.M(3226897, J$.I(typeof console === 'undefined' ? console = J$.R(3226889, 'console', undefined, true, true) : console = J$.R(3226889, 'console', console, true, true)), 'log', false)();
                            J$.M(3226921, J$.I(typeof console === 'undefined' ? console = J$.R(3226905, 'console', undefined, true, true) : console = J$.R(3226905, 'console', console, true, true)), 'log', false)(J$.T(3226913, 'Available options:', 21, false));
                            J$.M(3226937, J$.I(typeof console === 'undefined' ? console = J$.R(3226929, 'console', undefined, true, true) : console = J$.R(3226929, 'console', console, true, true)), 'log', false)();
                            J$.M(3226961, J$.I(typeof console === 'undefined' ? console = J$.R(3226945, 'console', undefined, true, true) : console = J$.R(3226945, 'console', console, true, true)), 'log', false)(J$.T(3226953, '  --comment      Gather all line and block comments in an array', 21, false));
                            J$.M(3226985, J$.I(typeof console === 'undefined' ? console = J$.R(3226969, 'console', undefined, true, true) : console = J$.R(3226969, 'console', console, true, true)), 'log', false)(J$.T(3226977, '  --loc          Include line-column location info for each syntax node', 21, false));
                            J$.M(3227009, J$.I(typeof console === 'undefined' ? console = J$.R(3226993, 'console', undefined, true, true) : console = J$.R(3226993, 'console', console, true, true)), 'log', false)(J$.T(3227001, '  --range        Include index-based range for each syntax node', 21, false));
                            J$.M(3227033, J$.I(typeof console === 'undefined' ? console = J$.R(3227017, 'console', undefined, true, true) : console = J$.R(3227017, 'console', console, true, true)), 'log', false)(J$.T(3227025, '  --raw          Display the raw value of literals', 21, false));
                            J$.M(3227057, J$.I(typeof console === 'undefined' ? console = J$.R(3227041, 'console', undefined, true, true) : console = J$.R(3227041, 'console', console, true, true)), 'log', false)(J$.T(3227049, '  --tokens       List all tokens in an array', 21, false));
                            J$.M(3227081, J$.I(typeof console === 'undefined' ? console = J$.R(3227065, 'console', undefined, true, true) : console = J$.R(3227065, 'console', console, true, true)), 'log', false)(J$.T(3227073, '  --tolerant     Tolerate errors on a best-effort basis (experimental)', 21, false));
                            J$.M(3227105, J$.I(typeof console === 'undefined' ? console = J$.R(3227089, 'console', undefined, true, true) : console = J$.R(3227089, 'console', console, true, true)), 'log', false)(J$.T(3227097, '  -v, --version  Shows program version', 21, false));
                            J$.M(3227121, J$.I(typeof console === 'undefined' ? console = J$.R(3227113, 'console', undefined, true, true) : console = J$.R(3227113, 'console', console, true, true)), 'log', false)();
                            J$.M(3227145, J$.I(typeof process === 'undefined' ? process = J$.R(3227129, 'process', undefined, true, true) : process = J$.R(3227129, 'process', process, true, true)), 'exit', false)(J$.T(3227137, 1, 22, false));
                        } catch (J$e) {
                            J$.Ex(3228601, J$e);
                        } finally {
                            if (J$.Fr(3228609))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function adjustRegexLiteral(key, value) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3227977, arguments.callee, this, arguments);
                            arguments = J$.N(3227985, 'arguments', arguments, true, false, false);
                            key = J$.N(3227993, 'key', key, true, false, false);
                            value = J$.N(3228001, 'value', value, true, false, false);
                            if (J$.C(160024, J$.C(160016, J$.B(360530, '===', J$.R(3227905, 'key', key, false, false), J$.T(3227913, 'value', 21, false))) ? J$.B(360538, 'instanceof', J$.R(3227921, 'value', value, false, false), J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(3227929, 'RegExp', undefined, true, true) : RegExp = J$.R(3227929, 'RegExp', RegExp, true, true))) : J$._())) {
                                value = J$.W(3227953, 'value', J$.M(3227945, J$.R(3227937, 'value', value, false, false), 'toString', false)(), value, false, false);
                            }
                            return J$.Rt(3227969, J$.R(3227961, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(3228633, J$e);
                        } finally {
                            if (J$.Fr(3228641))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function run(content) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3228105, arguments.callee, this, arguments);
                            arguments = J$.N(3228113, 'arguments', arguments, true, false, false);
                            content = J$.N(3228121, 'content', content, true, false, false);
                            syntax = J$.W(3228041, 'syntax', J$.M(3228033, J$.R(3228009, 'esprima', esprima, false, true), 'parse', false)(J$.R(3228017, 'content', content, false, false), J$.R(3228025, 'options', options, false, true)), syntax, false, true);
                            J$.M(3228097, J$.I(typeof console === 'undefined' ? console = J$.R(3228049, 'console', undefined, true, true) : console = J$.R(3228049, 'console', console, true, true)), 'log', false)(J$.M(3228089, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(3228057, 'JSON', undefined, true, true) : JSON = J$.R(3228057, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(3228065, 'syntax', syntax, false, true), J$.R(3228073, 'adjustRegexLiteral', adjustRegexLiteral, false, true), J$.T(3228081, 4, 22, false)));
                        } catch (J$e) {
                            J$.Ex(3228649, J$e);
                        } finally {
                            if (J$.Fr(3228657))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3228497, 'fs', fs, false, false, false);
            J$.N(3228505, 'esprima', esprima, false, false, false);
            J$.N(3228513, 'fname', fname, false, false, false);
            J$.N(3228521, 'forceFile', forceFile, false, false, false);
            J$.N(3228529, 'content', content, false, false, false);
            J$.N(3228537, 'options', options, false, false, false);
            J$.N(3228545, 'syntax', syntax, false, false, false);
            showUsage = J$.N(3228561, 'showUsage', J$.T(3228553, showUsage, 12, false), true, false, false);
            adjustRegexLiteral = J$.N(3228577, 'adjustRegexLiteral', J$.T(3228569, adjustRegexLiteral, 12, false), true, false, false);
            run = J$.N(3228593, 'run', J$.T(3228585, run, 12, false), true, false, false);
            var fs, esprima, fname, forceFile, content, options, syntax;
            if (J$.C(159872, J$.B(360338, '===', J$.U(360330, 'typeof', J$.I(typeof require === 'undefined' ? require = J$.R(3226473, 'require', undefined, true, true) : require = J$.R(3226473, 'require', require, true, true))), J$.T(3226481, 'function', 21, false)))) {
                fs = J$.W(3226513, 'fs', J$.F(3226505, J$.I(typeof require === 'undefined' ? require = J$.R(3226489, 'require', undefined, true, true) : require = J$.R(3226489, 'require', require, true, true)), false)(J$.T(3226497, 'fs', 21, false)), fs, false, true);
                try {
                    esprima = J$.W(3226545, 'esprima', J$.F(3226537, J$.I(typeof require === 'undefined' ? require = J$.R(3226521, 'require', undefined, true, true) : require = J$.R(3226521, 'require', require, true, true)), false)(J$.T(3226529, 'esprima', 21, false)), esprima, false, true);
                } catch (e) {
                    J$.N(3226585, 'e', e, false, false, true);
                    esprima = J$.W(3226577, 'esprima', J$.F(3226569, J$.I(typeof require === 'undefined' ? require = J$.R(3226553, 'require', undefined, true, true) : require = J$.R(3226553, 'require', require, true, true)), false)(J$.T(3226561, '../', 21, false)), esprima, false, true);
                }
            } else if (J$.C(159864, J$.B(360354, '===', J$.U(360346, 'typeof', J$.I(typeof load === 'undefined' ? load = J$.R(3226593, 'load', undefined, true, true) : load = J$.R(3226593, 'load', load, true, true))), J$.T(3226601, 'function', 21, false)))) {
                try {
                    J$.F(3226625, J$.I(typeof load === 'undefined' ? load = J$.R(3226609, 'load', undefined, true, true) : load = J$.R(3226609, 'load', load, true, true)), false)(J$.T(3226617, 'esprima.js', 21, false));
                } catch (e) {
                    J$.N(3226657, 'e', e, false, false, true);
                    J$.F(3226649, J$.I(typeof load === 'undefined' ? load = J$.R(3226633, 'load', undefined, true, true) : load = J$.R(3226633, 'load', load, true, true)), false)(J$.T(3226641, '../esprima.js', 21, false));
                }
            }
            if (J$.C(159888, J$.C(159880, J$.B(360370, '===', J$.U(360362, 'typeof', J$.I(typeof console === 'undefined' ? console = J$.R(3226665, 'console', undefined, true, true) : console = J$.R(3226665, 'console', console, true, true))), J$.T(3226673, 'undefined', 21, false))) ? J$.B(360386, '===', J$.U(360378, 'typeof', J$.I(typeof process === 'undefined' ? process = J$.R(3226681, 'process', undefined, true, true) : process = J$.R(3226681, 'process', process, true, true))), J$.T(3226689, 'undefined', 21, false)) : J$._())) {
                console = J$.W(3226713, 'console', J$.T(3226705, { log: J$.I(typeof print === 'undefined' ? print = J$.R(3226697, 'print', undefined, true, true) : print = J$.R(3226697, 'print', print, true, true)) }, 11, false), J$.I(typeof console === 'undefined' ? undefined : console), true, true);
                fs = J$.W(3226737, 'fs', J$.T(3226729, { readFileSync: J$.I(typeof readFile === 'undefined' ? readFile = J$.R(3226721, 'readFile', undefined, true, true) : readFile = J$.R(3226721, 'readFile', readFile, true, true)) }, 11, false), fs, false, true);
                process = J$.W(3226769, 'process', J$.T(3226761, {
                    argv: J$.I(typeof arguments === 'undefined' ? arguments = J$.R(3226745, 'arguments', undefined, true, true) : arguments = J$.R(3226745, 'arguments', arguments, true, true)),
                    exit: J$.I(typeof quit === 'undefined' ? quit = J$.R(3226753, 'quit', undefined, true, true) : quit = J$.R(3226753, 'quit', quit, true, true))
                }, 11, false), J$.I(typeof process === 'undefined' ? undefined : process), true, true);
                J$.M(3226801, J$.G(3226785, J$.I(typeof process === 'undefined' ? process = J$.R(3226777, 'process', undefined, true, true) : process = J$.R(3226777, 'process', process, true, true)), 'argv'), 'unshift', false)(J$.T(3226793, 'esparse.js', 21, false));
                J$.M(3226833, J$.G(3226817, J$.I(typeof process === 'undefined' ? process = J$.R(3226809, 'process', undefined, true, true) : process = J$.R(3226809, 'process', process, true, true)), 'argv'), 'unshift', false)(J$.T(3226825, 'rhino', 21, false));
            }
            options = J$.W(3227177, 'options', J$.T(3227169, {}, 11, false), options, false, true);
            J$.M(3227897, J$.M(3227209, J$.G(3227193, J$.I(typeof process === 'undefined' ? process = J$.R(3227185, 'process', undefined, true, true) : process = J$.R(3227185, 'process', process, true, true)), 'argv'), 'splice', false)(J$.T(3227201, 2, 22, false)), 'forEach', false)(J$.T(3227889, function (entry) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3227865, arguments.callee, this, arguments);
                            arguments = J$.N(3227873, 'arguments', arguments, true, false, false);
                            entry = J$.N(3227881, 'entry', entry, true, false, false);
                            if (J$.C(160008, J$.C(159904, J$.C(159896, J$.R(3227217, 'forceFile', forceFile, false, true)) ? J$._() : J$.B(360394, '===', J$.R(3227225, 'entry', entry, false, false), J$.T(3227233, '-', 21, false))) ? J$._() : J$.B(360402, '!==', J$.M(3227265, J$.R(3227241, 'entry', entry, false, false), 'slice', false)(J$.T(3227249, 0, 22, false), J$.T(3227257, 1, 22, false)), J$.T(3227273, '-', 21, false)))) {
                                if (J$.C(159912, J$.B(360418, '===', J$.U(360410, 'typeof', J$.R(3227281, 'fname', fname, false, true)), J$.T(3227289, 'string', 21, false)))) {
                                    J$.M(3227313, J$.I(typeof console === 'undefined' ? console = J$.R(3227297, 'console', undefined, true, true) : console = J$.R(3227297, 'console', console, true, true)), 'log', false)(J$.T(3227305, 'Error: more than one input file.', 21, false));
                                    J$.M(3227337, J$.I(typeof process === 'undefined' ? process = J$.R(3227321, 'process', undefined, true, true) : process = J$.R(3227321, 'process', process, true, true)), 'exit', false)(J$.T(3227329, 1, 22, false));
                                } else {
                                    fname = J$.W(3227353, 'fname', J$.R(3227345, 'entry', entry, false, false), fname, false, true);
                                }
                            } else if (J$.C(160000, J$.C(159920, J$.B(360426, '===', J$.R(3227361, 'entry', entry, false, false), J$.T(3227369, '-h', 21, false))) ? J$._() : J$.B(360434, '===', J$.R(3227377, 'entry', entry, false, false), J$.T(3227385, '--help', 21, false)))) {
                                J$.F(3227401, J$.R(3227393, 'showUsage', showUsage, false, true), false)();
                            } else if (J$.C(159992, J$.C(159928, J$.B(360442, '===', J$.R(3227409, 'entry', entry, false, false), J$.T(3227417, '-v', 21, false))) ? J$._() : J$.B(360450, '===', J$.R(3227425, 'entry', entry, false, false), J$.T(3227433, '--version', 21, false)))) {
                                J$.M(3227481, J$.I(typeof console === 'undefined' ? console = J$.R(3227441, 'console', undefined, true, true) : console = J$.R(3227441, 'console', console, true, true)), 'log', false)(J$.T(3227449, 'ECMAScript Parser (using Esprima version', 21, false), J$.G(3227465, J$.R(3227457, 'esprima', esprima, false, true), 'version'), J$.T(3227473, ')', 21, false));
                                J$.M(3227497, J$.I(typeof console === 'undefined' ? console = J$.R(3227489, 'console', undefined, true, true) : console = J$.R(3227489, 'console', console, true, true)), 'log', false)();
                                J$.M(3227521, J$.I(typeof process === 'undefined' ? process = J$.R(3227505, 'process', undefined, true, true) : process = J$.R(3227505, 'process', process, true, true)), 'exit', false)(J$.T(3227513, 0, 22, false));
                            } else if (J$.C(159984, J$.B(360458, '===', J$.R(3227529, 'entry', entry, false, false), J$.T(3227537, '--comment', 21, false)))) {
                                J$.P(3227561, J$.R(3227545, 'options', options, false, true), 'comment', J$.T(3227553, true, 23, false));
                            } else if (J$.C(159976, J$.B(360466, '===', J$.R(3227569, 'entry', entry, false, false), J$.T(3227577, '--loc', 21, false)))) {
                                J$.P(3227601, J$.R(3227585, 'options', options, false, true), 'loc', J$.T(3227593, true, 23, false));
                            } else if (J$.C(159968, J$.B(360474, '===', J$.R(3227609, 'entry', entry, false, false), J$.T(3227617, '--range', 21, false)))) {
                                J$.P(3227641, J$.R(3227625, 'options', options, false, true), 'range', J$.T(3227633, true, 23, false));
                            } else if (J$.C(159960, J$.B(360482, '===', J$.R(3227649, 'entry', entry, false, false), J$.T(3227657, '--raw', 21, false)))) {
                                J$.P(3227681, J$.R(3227665, 'options', options, false, true), 'raw', J$.T(3227673, true, 23, false));
                            } else if (J$.C(159952, J$.B(360490, '===', J$.R(3227689, 'entry', entry, false, false), J$.T(3227697, '--tokens', 21, false)))) {
                                J$.P(3227721, J$.R(3227705, 'options', options, false, true), 'tokens', J$.T(3227713, true, 23, false));
                            } else if (J$.C(159944, J$.B(360498, '===', J$.R(3227729, 'entry', entry, false, false), J$.T(3227737, '--tolerant', 21, false)))) {
                                J$.P(3227761, J$.R(3227745, 'options', options, false, true), 'tolerant', J$.T(3227753, true, 23, false));
                            } else if (J$.C(159936, J$.B(360506, '===', J$.R(3227769, 'entry', entry, false, false), J$.T(3227777, '--', 21, false)))) {
                                forceFile = J$.W(3227793, 'forceFile', J$.T(3227785, true, 23, false), forceFile, false, true);
                            } else {
                                J$.M(3227833, J$.I(typeof console === 'undefined' ? console = J$.R(3227801, 'console', undefined, true, true) : console = J$.R(3227801, 'console', console, true, true)), 'log', false)(J$.B(360522, '+', J$.B(360514, '+', J$.T(3227809, 'Error: unknown option ', 21, false), J$.R(3227817, 'entry', entry, false, false)), J$.T(3227825, '.', 21, false)));
                                J$.M(3227857, J$.I(typeof process === 'undefined' ? process = J$.R(3227841, 'process', undefined, true, true) : process = J$.R(3227841, 'process', process, true, true)), 'exit', false)(J$.T(3227849, 1, 22, false));
                            }
                        } catch (J$e) {
                            J$.Ex(3228617, J$e);
                        } finally {
                            if (J$.Fr(3228625))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            try {
                if (J$.C(160048, J$.C(160040, J$.R(3228129, 'fname', fname, false, true)) ? J$.C(160032, J$.B(360546, '!==', J$.R(3228137, 'fname', fname, false, true), J$.T(3228145, '-', 21, false))) ? J$._() : J$.R(3228153, 'forceFile', forceFile, false, true) : J$._())) {
                    J$.F(3228201, J$.R(3228161, 'run', run, false, true), false)(J$.M(3228193, J$.R(3228169, 'fs', fs, false, true), 'readFileSync', false)(J$.R(3228177, 'fname', fname, false, true), J$.T(3228185, 'utf-8', 21, false)));
                } else {
                    var content = J$.W(3228217, 'content', J$.T(3228209, '', 21, false), content, false, true);
                    J$.M(3228241, J$.G(3228233, J$.I(typeof process === 'undefined' ? process = J$.R(3228225, 'process', undefined, true, true) : process = J$.R(3228225, 'process', process, true, true)), 'stdin'), 'resume', false)();
                    J$.M(3228329, J$.G(3228257, J$.I(typeof process === 'undefined' ? process = J$.R(3228249, 'process', undefined, true, true) : process = J$.R(3228249, 'process', process, true, true)), 'stdin'), 'on', false)(J$.T(3228265, 'data', 21, false), J$.T(3228321, function (chunk) {
                        jalangiLabel4:
                            while (true) {
                                try {
                                    J$.Fe(3228297, arguments.callee, this, arguments);
                                    arguments = J$.N(3228305, 'arguments', arguments, true, false, false);
                                    chunk = J$.N(3228313, 'chunk', chunk, true, false, false);
                                    content = J$.W(3228289, 'content', J$.B(360554, '+', J$.R(3228281, 'content', content, false, true), J$.R(3228273, 'chunk', chunk, false, false)), content, false, true);
                                } catch (J$e) {
                                    J$.Ex(3228665, J$e);
                                } finally {
                                    if (J$.Fr(3228673))
                                        continue jalangiLabel4;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false));
                    J$.M(3228409, J$.G(3228345, J$.I(typeof process === 'undefined' ? process = J$.R(3228337, 'process', undefined, true, true) : process = J$.R(3228337, 'process', process, true, true)), 'stdin'), 'on', false)(J$.T(3228353, 'end', 21, false), J$.T(3228401, function () {
                        jalangiLabel5:
                            while (true) {
                                try {
                                    J$.Fe(3228385, arguments.callee, this, arguments);
                                    arguments = J$.N(3228393, 'arguments', arguments, true, false, false);
                                    J$.F(3228377, J$.R(3228361, 'run', run, false, true), false)(J$.R(3228369, 'content', content, false, true));
                                } catch (J$e) {
                                    J$.Ex(3228681, J$e);
                                } finally {
                                    if (J$.Fr(3228689))
                                        continue jalangiLabel5;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false));
                }
            } catch (e) {
                J$.N(3228481, 'e', e, false, false, true);
                J$.M(3228449, J$.I(typeof console === 'undefined' ? console = J$.R(3228417, 'console', undefined, true, true) : console = J$.R(3228417, 'console', console, true, true)), 'log', false)(J$.B(360562, '+', J$.T(3228425, 'Error: ', 21, false), J$.G(3228441, J$.R(3228433, 'e', e, false, false), 'message')));
                J$.M(3228473, J$.I(typeof process === 'undefined' ? process = J$.R(3228457, 'process', undefined, true, true) : process = J$.R(3228457, 'process', process, true, true)), 'exit', false)(J$.T(3228465, 1, 22, false));
            }
        } catch (J$e) {
            J$.Ex(3228697, J$e);
        } finally {
            if (J$.Sr(3228705))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

