J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(3187769, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/argparse/lib/argument/exclusive.js');
            J$.N(3187777, 'util', util, false, false, false);
            J$.N(3187785, 'ArgumentGroup', ArgumentGroup, false, false, false);
            J$.N(3187793, 'MutuallyExclusiveGroup', MutuallyExclusiveGroup, false, false, false);
            J$.T(3187153, 'use strict', 21, false);
            var util = J$.W(3187185, 'util', J$.F(3187177, J$.I(typeof require === 'undefined' ? require = J$.R(3187161, 'require', undefined, true, true) : require = J$.R(3187161, 'require', require, true, true)), false)(J$.T(3187169, 'util', 21, false)), util, false, true);
            var ArgumentGroup = J$.W(3187217, 'ArgumentGroup', J$.F(3187209, J$.I(typeof require === 'undefined' ? require = J$.R(3187193, 'require', undefined, true, true) : require = J$.R(3187193, 'require', require, true, true)), false)(J$.T(3187201, './group', 21, false)), ArgumentGroup, false, true);
            var MutuallyExclusiveGroup = J$.W(3187401, 'MutuallyExclusiveGroup', J$.P(3187393, J$.I(typeof module === 'undefined' ? module = J$.R(3187225, 'module', undefined, true, true) : module = J$.R(3187225, 'module', module, true, true)), 'exports', J$.T(3187385, function MutuallyExclusiveGroup(container, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3187345, arguments.callee, this, arguments);
                            arguments = J$.N(3187353, 'arguments', arguments, true, false, false);
                            container = J$.N(3187361, 'container', container, true, false, false);
                            options = J$.N(3187369, 'options', options, true, false, false);
                            J$.N(3187377, 'required', required, false, false, false);
                            var required;
                            options = J$.W(3187249, 'options', J$.C(157800, J$.R(3187233, 'options', options, false, false)) ? J$._() : J$.T(3187241, {}, 11, false), options, false, false);
                            required = J$.W(3187281, 'required', J$.C(157808, J$.G(3187265, J$.R(3187257, 'options', options, false, false), 'required')) ? J$._() : J$.T(3187273, false, 23, false), required, false, false);
                            J$.M(3187313, J$.R(3187289, 'ArgumentGroup', ArgumentGroup, false, true), 'call', false)(J$.R(3187297, 'this', this, false, false), J$.R(3187305, 'container', container, false, false));
                            J$.P(3187337, J$.R(3187321, 'this', this, false, false), 'required', J$.R(3187329, 'required', required, false, false));
                        } catch (J$e) {
                            J$.Ex(3187801, J$e);
                        } finally {
                            if (J$.Fr(3187809))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), MutuallyExclusiveGroup, false, true);
            J$.M(3187433, J$.R(3187409, 'util', util, false, true), 'inherits', false)(J$.R(3187417, 'MutuallyExclusiveGroup', MutuallyExclusiveGroup, false, true), J$.R(3187425, 'ArgumentGroup', ArgumentGroup, false, true));
            J$.P(3187641, J$.G(3187449, J$.R(3187441, 'MutuallyExclusiveGroup', MutuallyExclusiveGroup, false, true), 'prototype'), '_addAction', J$.T(3187633, function (action) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3187601, arguments.callee, this, arguments);
                            arguments = J$.N(3187609, 'arguments', arguments, true, false, false);
                            action = J$.N(3187617, 'action', action, true, false, false);
                            J$.N(3187625, 'msg', msg, false, false, false);
                            var msg;
                            if (J$.C(157816, J$.G(3187465, J$.R(3187457, 'action', action, false, false), 'required'))) {
                                msg = J$.W(3187481, 'msg', J$.T(3187473, 'mutually exclusive arguments must be optional', 21, false), msg, false, false);
                                throw J$.F(3187505, J$.I(typeof Error === 'undefined' ? Error = J$.R(3187489, 'Error', undefined, true, true) : Error = J$.R(3187489, 'Error', Error, true, true)), true)(J$.R(3187497, 'msg', msg, false, false));
                            }
                            action = J$.W(3187545, 'action', J$.M(3187537, J$.G(3187521, J$.R(3187513, 'this', this, false, false), '_container'), '_addAction', false)(J$.R(3187529, 'action', action, false, false)), action, false, false);
                            J$.M(3187577, J$.G(3187561, J$.R(3187553, 'this', this, false, false), '_groupActions'), 'push', false)(J$.R(3187569, 'action', action, false, false));
                            return J$.Rt(3187593, J$.R(3187585, 'action', action, false, false));
                        } catch (J$e) {
                            J$.Ex(3187817, J$e);
                        } finally {
                            if (J$.Fr(3187825))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3187761, J$.G(3187657, J$.R(3187649, 'MutuallyExclusiveGroup', MutuallyExclusiveGroup, false, true), 'prototype'), '_removeAction', J$.T(3187753, function (action) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3187729, arguments.callee, this, arguments);
                            arguments = J$.N(3187737, 'arguments', arguments, true, false, false);
                            action = J$.N(3187745, 'action', action, true, false, false);
                            J$.M(3187689, J$.G(3187673, J$.R(3187665, 'this', this, false, false), '_container'), '_removeAction', false)(J$.R(3187681, 'action', action, false, false));
                            J$.M(3187721, J$.G(3187705, J$.R(3187697, 'this', this, false, false), '_groupActions'), 'remove', false)(J$.R(3187713, 'action', action, false, false));
                        } catch (J$e) {
                            J$.Ex(3187833, J$e);
                        } finally {
                            if (J$.Fr(3187841))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3187849, J$e);
        } finally {
            if (J$.Sr(3187857))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

