J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3187097, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/argparse/lib/argument/error.js');
            J$.N(3187105, 'format', format, false, false, false);
            J$.N(3187113, 'ERR_CODE', ERR_CODE, false, false, false);
            J$.T(3186729, 'use strict', 21, false);
            var format = J$.W(3186769, 'format', J$.G(3186761, J$.F(3186753, J$.I(typeof require === 'undefined' ? require = J$.R(3186737, 'require', undefined, true, true) : require = J$.R(3186737, 'require', require, true, true)), false)(J$.T(3186745, 'util', 21, false)), 'format'), format, false, true);
            var ERR_CODE = J$.W(3186785, 'ERR_CODE', J$.T(3186777, 'ARGError', 21, false), ERR_CODE, false, true);
            J$.P(3187089, J$.I(typeof module === 'undefined' ? module = J$.R(3186793, 'module', undefined, true, true) : module = J$.R(3186793, 'module', module, true, true)), 'exports', J$.T(3187081, function (argument, message) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3187025, arguments.callee, this, arguments);
                            arguments = J$.N(3187033, 'arguments', arguments, true, false, false);
                            argument = J$.N(3187041, 'argument', argument, true, false, false);
                            message = J$.N(3187049, 'message', message, true, false, false);
                            J$.N(3187057, 'argumentName', argumentName, false, false, false);
                            J$.N(3187065, 'errMessage', errMessage, false, false, false);
                            J$.N(3187073, 'err', err, false, false, false);
                            var argumentName = J$.W(3186809, 'argumentName', J$.T(3186801, null, 25, false), argumentName, false, false);
                            var errMessage;
                            var err;
                            if (J$.C(157784, J$.G(3186825, J$.R(3186817, 'argument', argument, false, false), 'getName'))) {
                                argumentName = J$.W(3186849, 'argumentName', J$.M(3186841, J$.R(3186833, 'argument', argument, false, false), 'getName', false)(), argumentName, false, false);
                            } else {
                                argumentName = J$.W(3186873, 'argumentName', J$.B(357546, '+', J$.T(3186857, '', 21, false), J$.R(3186865, 'argument', argument, false, false)), argumentName, false, false);
                            }
                            if (J$.C(157792, J$.U(357554, '!', J$.R(3186881, 'argumentName', argumentName, false, false)))) {
                                errMessage = J$.W(3186897, 'errMessage', J$.R(3186889, 'message', message, false, false), errMessage, false, false);
                            } else {
                                errMessage = J$.W(3186945, 'errMessage', J$.F(3186937, J$.R(3186905, 'format', format, false, true), false)(J$.T(3186913, 'argument "%s": %s', 21, false), J$.R(3186921, 'argumentName', argumentName, false, false), J$.R(3186929, 'message', message, false, false)), errMessage, false, false);
                            }
                            err = J$.W(3186977, 'err', J$.F(3186969, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3186953, 'TypeError', undefined, true, true) : TypeError = J$.R(3186953, 'TypeError', TypeError, true, true)), true)(J$.R(3186961, 'errMessage', errMessage, false, false)), err, false, false);
                            J$.P(3187001, J$.R(3186985, 'err', err, false, false), 'code', J$.R(3186993, 'ERR_CODE', ERR_CODE, false, true));
                            return J$.Rt(3187017, J$.R(3187009, 'err', err, false, false));
                        } catch (J$e) {
                            J$.Ex(3187121, J$e);
                        } finally {
                            if (J$.Fr(3187129))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3187137, J$e);
        } finally {
            if (J$.Sr(3187145))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

