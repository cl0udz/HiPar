J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(3209425, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/argparse/lib/help/added_formatters.js');
            function ArgumentDefaultsHelpFormatter(options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3208457, arguments.callee, this, arguments);
                            arguments = J$.N(3208465, 'arguments', arguments, true, false, false);
                            options = J$.N(3208473, 'options', options, true, false, false);
                            J$.M(3208449, J$.R(3208425, 'HelpFormatter', HelpFormatter, false, true), 'call', false)(J$.R(3208433, 'this', this, false, false), J$.R(3208441, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(3209513, J$e);
                        } finally {
                            if (J$.Fr(3209521))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function RawDescriptionHelpFormatter(options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3208889, arguments.callee, this, arguments);
                            arguments = J$.N(3208897, 'arguments', arguments, true, false, false);
                            options = J$.N(3208905, 'options', options, true, false, false);
                            J$.M(3208881, J$.R(3208857, 'HelpFormatter', HelpFormatter, false, true), 'call', false)(J$.R(3208865, 'this', this, false, false), J$.R(3208873, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(3209545, J$e);
                        } finally {
                            if (J$.Fr(3209553))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function RawTextHelpFormatter(options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(3209249, arguments.callee, this, arguments);
                            arguments = J$.N(3209257, 'arguments', arguments, true, false, false);
                            options = J$.N(3209265, 'options', options, true, false, false);
                            J$.M(3209241, J$.R(3209217, 'RawDescriptionHelpFormatter', RawDescriptionHelpFormatter, false, true), 'call', false)(J$.R(3209225, 'this', this, false, false), J$.R(3209233, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(3209593, J$e);
                        } finally {
                            if (J$.Fr(3209601))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3209433, 'util', util, false, false, false);
            J$.N(3209441, 'c', c, false, false, false);
            J$.N(3209449, '$$', $$, false, false, false);
            J$.N(3209457, 'HelpFormatter', HelpFormatter, false, false, false);
            ArgumentDefaultsHelpFormatter = J$.N(3209473, 'ArgumentDefaultsHelpFormatter', J$.T(3209465, ArgumentDefaultsHelpFormatter, 12, false), true, false, false);
            RawDescriptionHelpFormatter = J$.N(3209489, 'RawDescriptionHelpFormatter', J$.T(3209481, RawDescriptionHelpFormatter, 12, false), true, false, false);
            RawTextHelpFormatter = J$.N(3209505, 'RawTextHelpFormatter', J$.T(3209497, RawTextHelpFormatter, 12, false), true, false, false);
            J$.T(3208289, 'use strict', 21, false);
            var util = J$.W(3208321, 'util', J$.F(3208313, J$.I(typeof require === 'undefined' ? require = J$.R(3208297, 'require', undefined, true, true) : require = J$.R(3208297, 'require', require, true, true)), false)(J$.T(3208305, 'util', 21, false)), util, false, true);
            var c = J$.W(3208353, 'c', J$.F(3208345, J$.I(typeof require === 'undefined' ? require = J$.R(3208329, 'require', undefined, true, true) : require = J$.R(3208329, 'require', require, true, true)), false)(J$.T(3208337, '../const', 21, false)), c, false, true);
            var $$ = J$.W(3208385, '$$', J$.F(3208377, J$.I(typeof require === 'undefined' ? require = J$.R(3208361, 'require', undefined, true, true) : require = J$.R(3208361, 'require', require, true, true)), false)(J$.T(3208369, '../utils', 21, false)), $$, false, true);
            var HelpFormatter = J$.W(3208417, 'HelpFormatter', J$.F(3208409, J$.I(typeof require === 'undefined' ? require = J$.R(3208393, 'require', undefined, true, true) : require = J$.R(3208393, 'require', require, true, true)), false)(J$.T(3208401, './formatter.js', 21, false)), HelpFormatter, false, true);
            J$.M(3208505, J$.R(3208481, 'util', util, false, true), 'inherits', false)(J$.R(3208489, 'ArgumentDefaultsHelpFormatter', ArgumentDefaultsHelpFormatter, false, true), J$.R(3208497, 'HelpFormatter', HelpFormatter, false, true));
            J$.P(3208817, J$.G(3208521, J$.R(3208513, 'ArgumentDefaultsHelpFormatter', ArgumentDefaultsHelpFormatter, false, true), 'prototype'), '_getHelpString', J$.T(3208809, function (action) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3208769, arguments.callee, this, arguments);
                            arguments = J$.N(3208777, 'arguments', arguments, true, false, false);
                            action = J$.N(3208785, 'action', action, true, false, false);
                            J$.N(3208793, 'help', help, false, false, false);
                            J$.N(3208801, 'defaulting_nargs', defaulting_nargs, false, false, false);
                            var help = J$.W(3208545, 'help', J$.G(3208537, J$.R(3208529, 'action', action, false, false), 'help'), help, false, false);
                            if (J$.C(159040, J$.B(358858, '===', J$.M(3208577, J$.G(3208561, J$.R(3208553, 'action', action, false, false), 'help'), 'indexOf', false)(J$.T(3208569, '%(defaultValue)s', 21, false)), J$.U(358850, '-', J$.T(3208585, 1, 22, false))))) {
                                if (J$.C(159032, J$.B(358866, '!==', J$.G(3208601, J$.R(3208593, 'action', action, false, false), 'defaultValue'), J$.G(3208617, J$.R(3208609, 'c', c, false, true), 'SUPPRESS')))) {
                                    var defaulting_nargs = J$.W(3208665, 'defaulting_nargs', J$.T(3208657, [
                                        J$.G(3208633, J$.R(3208625, 'c', c, false, true), 'OPTIONAL'),
                                        J$.G(3208649, J$.R(3208641, 'c', c, false, true), 'ZERO_OR_MORE')
                                    ], 10, false), defaulting_nargs, false, false);
                                    if (J$.C(159024, J$.C(159016, J$.M(3208681, J$.R(3208673, 'action', action, false, false), 'isOptional', false)()) ? J$._() : J$.B(358874, '>=', J$.M(3208713, J$.R(3208689, 'defaulting_nargs', defaulting_nargs, false, false), 'indexOf', false)(J$.G(3208705, J$.R(3208697, 'action', action, false, false), 'nargs')), J$.T(3208721, 0, 22, false)))) {
                                        help = J$.W(3208745, 'help', J$.B(358882, '+', J$.R(3208737, 'help', help, false, false), J$.T(3208729, ' (default: %(defaultValue)s)', 21, false)), help, false, false);
                                    }
                                }
                            }
                            return J$.Rt(3208761, J$.R(3208753, 'help', help, false, false));
                        } catch (J$e) {
                            J$.Ex(3209529, J$e);
                        } finally {
                            if (J$.Fr(3209537))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3208849, J$.G(3208833, J$.I(typeof module === 'undefined' ? module = J$.R(3208825, 'module', undefined, true, true) : module = J$.R(3208825, 'module', module, true, true)), 'exports'), 'ArgumentDefaultsHelpFormatter', J$.R(3208841, 'ArgumentDefaultsHelpFormatter', ArgumentDefaultsHelpFormatter, false, true));
            J$.M(3208937, J$.R(3208913, 'util', util, false, true), 'inherits', false)(J$.R(3208921, 'RawDescriptionHelpFormatter', RawDescriptionHelpFormatter, false, true), J$.R(3208929, 'HelpFormatter', HelpFormatter, false, true));
            J$.P(3209177, J$.G(3208953, J$.R(3208945, 'RawDescriptionHelpFormatter', RawDescriptionHelpFormatter, false, true), 'prototype'), '_fillText', J$.T(3209169, function (text, width, indent) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3209121, arguments.callee, this, arguments);
                            arguments = J$.N(3209129, 'arguments', arguments, true, false, false);
                            text = J$.N(3209137, 'text', text, true, false, false);
                            width = J$.N(3209145, 'width', width, true, false, false);
                            indent = J$.N(3209153, 'indent', indent, true, false, false);
                            J$.N(3209161, 'lines', lines, false, false, false);
                            var lines = J$.W(3208985, 'lines', J$.M(3208977, J$.R(3208961, 'text', text, false, false), 'split', false)(J$.T(3208969, '\n', 21, false)), lines, false, false);
                            lines = J$.W(3209081, 'lines', J$.M(3209073, J$.R(3208993, 'lines', lines, false, false), 'map', false)(J$.T(3209065, function (line) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3209041, arguments.callee, this, arguments);
                                            arguments = J$.N(3209049, 'arguments', arguments, true, false, false);
                                            line = J$.N(3209057, 'line', line, true, false, false);
                                            return J$.Rt(3209033, J$.M(3209025, J$.R(3209001, '$$', $$, false, true), 'trimEnd', false)(J$.B(358890, '+', J$.R(3209009, 'indent', indent, false, false), J$.R(3209017, 'line', line, false, false))));
                                        } catch (J$e) {
                                            J$.Ex(3209561, J$e);
                                        } finally {
                                            if (J$.Fr(3209569))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), lines, false, false);
                            return J$.Rt(3209113, J$.M(3209105, J$.R(3209089, 'lines', lines, false, false), 'join', false)(J$.T(3209097, '\n', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3209577, J$e);
                        } finally {
                            if (J$.Fr(3209585))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3209209, J$.G(3209193, J$.I(typeof module === 'undefined' ? module = J$.R(3209185, 'module', undefined, true, true) : module = J$.R(3209185, 'module', module, true, true)), 'exports'), 'RawDescriptionHelpFormatter', J$.R(3209201, 'RawDescriptionHelpFormatter', RawDescriptionHelpFormatter, false, true));
            J$.M(3209297, J$.R(3209273, 'util', util, false, true), 'inherits', false)(J$.R(3209281, 'RawTextHelpFormatter', RawTextHelpFormatter, false, true), J$.R(3209289, 'RawDescriptionHelpFormatter', RawDescriptionHelpFormatter, false, true));
            J$.P(3209385, J$.G(3209313, J$.R(3209305, 'RawTextHelpFormatter', RawTextHelpFormatter, false, true), 'prototype'), '_splitLines', J$.T(3209377, function (text) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(3209353, arguments.callee, this, arguments);
                            arguments = J$.N(3209361, 'arguments', arguments, true, false, false);
                            text = J$.N(3209369, 'text', text, true, false, false);
                            return J$.Rt(3209345, J$.M(3209337, J$.R(3209321, 'text', text, false, false), 'split', false)(J$.T(3209329, '\n', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3209609, J$e);
                        } finally {
                            if (J$.Fr(3209617))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3209417, J$.G(3209401, J$.I(typeof module === 'undefined' ? module = J$.R(3209393, 'module', undefined, true, true) : module = J$.R(3209393, 'module', module, true, true)), 'exports'), 'RawTextHelpFormatter', J$.R(3209409, 'RawTextHelpFormatter', RawTextHelpFormatter, false, true));
        } catch (J$e) {
            J$.Ex(3209625, J$e);
        } finally {
            if (J$.Sr(3209633))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

