J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3170897, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/argparse/lib/action/count.js');
            J$.N(3170905, 'util', util, false, false, false);
            J$.N(3170913, 'Action', Action, false, false, false);
            J$.N(3170921, 'ActionCount', ActionCount, false, false, false);
            J$.T(3170513, 'use strict', 21, false);
            var util = J$.W(3170545, 'util', J$.F(3170537, J$.I(typeof require === 'undefined' ? require = J$.R(3170521, 'require', undefined, true, true) : require = J$.R(3170521, 'require', require, true, true)), false)(J$.T(3170529, 'util', 21, false)), util, false, true);
            var Action = J$.W(3170577, 'Action', J$.F(3170569, J$.I(typeof require === 'undefined' ? require = J$.R(3170553, 'require', undefined, true, true) : require = J$.R(3170553, 'require', require, true, true)), false)(J$.T(3170561, '../action', 21, false)), Action, false, true);
            var ActionCount = J$.W(3170713, 'ActionCount', J$.P(3170705, J$.I(typeof module === 'undefined' ? module = J$.R(3170585, 'module', undefined, true, true) : module = J$.R(3170585, 'module', module, true, true)), 'exports', J$.T(3170697, function ActionCount(options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3170673, arguments.callee, this, arguments);
                            arguments = J$.N(3170681, 'arguments', arguments, true, false, false);
                            options = J$.N(3170689, 'options', options, true, false, false);
                            options = J$.W(3170609, 'options', J$.C(157008, J$.R(3170593, 'options', options, false, false)) ? J$._() : J$.T(3170601, {}, 11, false), options, false, false);
                            J$.P(3170633, J$.R(3170617, 'options', options, false, false), 'nargs', J$.T(3170625, 0, 22, false));
                            J$.M(3170665, J$.R(3170641, 'Action', Action, false, true), 'call', false)(J$.R(3170649, 'this', this, false, false), J$.R(3170657, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(3170929, J$e);
                        } finally {
                            if (J$.Fr(3170937))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), ActionCount, false, true);
            J$.M(3170745, J$.R(3170721, 'util', util, false, true), 'inherits', false)(J$.R(3170729, 'ActionCount', ActionCount, false, true), J$.R(3170737, 'Action', Action, false, true));
            J$.P(3170889, J$.G(3170761, J$.R(3170753, 'ActionCount', ActionCount, false, true), 'prototype'), 'call', J$.T(3170881, function (parser, namespace) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3170849, arguments.callee, this, arguments);
                            arguments = J$.N(3170857, 'arguments', arguments, true, false, false);
                            parser = J$.N(3170865, 'parser', parser, true, false, false);
                            namespace = J$.N(3170873, 'namespace', namespace, true, false, false);
                            J$.M(3170841, J$.R(3170769, 'namespace', namespace, false, false), 'set', false)(J$.G(3170785, J$.R(3170777, 'this', this, false, false), 'dest'), J$.B(356770, '+', J$.C(157016, J$.G(3170817, J$.R(3170793, 'namespace', namespace, false, false), J$.G(3170809, J$.R(3170801, 'this', this, false, false), 'dest'))) ? J$._() : J$.T(3170825, 0, 22, false), J$.T(3170833, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(3170945, J$e);
                        } finally {
                            if (J$.Fr(3170953))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3170961, J$e);
        } finally {
            if (J$.Sr(3170969))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

