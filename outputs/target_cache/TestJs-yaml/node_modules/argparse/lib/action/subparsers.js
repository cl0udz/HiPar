J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(3175209, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/argparse/lib/action/subparsers.js');
            function ChoicesPseudoAction(name, help) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3173641, arguments.callee, this, arguments);
                            arguments = J$.N(3173649, 'arguments', arguments, true, false, false);
                            name = J$.N(3173657, 'name', name, true, false, false);
                            help = J$.N(3173665, 'help', help, true, false, false);
                            J$.N(3173673, 'options', options, false, false, false);
                            var options = J$.W(3173601, 'options', J$.T(3173593, {
                                optionStrings: J$.T(3173569, [], 10, false),
                                dest: J$.R(3173577, 'name', name, false, false),
                                help: J$.R(3173585, 'help', help, false, false)
                            }, 11, false), options, false, false);
                            J$.M(3173633, J$.R(3173609, 'Action', Action, false, true), 'call', false)(J$.R(3173617, 'this', this, false, false), J$.R(3173625, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(3175289, J$e);
                        } finally {
                            if (J$.Fr(3175297))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ActionSubparsers(options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3174033, arguments.callee, this, arguments);
                            arguments = J$.N(3174041, 'arguments', arguments, true, false, false);
                            options = J$.N(3174049, 'options', options, true, false, false);
                            options = J$.W(3173729, 'options', J$.C(157128, J$.R(3173713, 'options', options, false, false)) ? J$._() : J$.T(3173721, {}, 11, false), options, false, false);
                            J$.P(3173777, J$.R(3173737, 'options', options, false, false), 'dest', J$.C(157136, J$.G(3173753, J$.R(3173745, 'options', options, false, false), 'dest')) ? J$._() : J$.G(3173769, J$.R(3173761, 'c', c, false, true), 'SUPPRESS'));
                            J$.P(3173809, J$.R(3173785, 'options', options, false, false), 'nargs', J$.G(3173801, J$.R(3173793, 'c', c, false, true), 'PARSER'));
                            J$.P(3173849, J$.R(3173817, 'this', this, false, false), 'debug', J$.B(356874, '===', J$.G(3173833, J$.R(3173825, 'options', options, false, false), 'debug'), J$.T(3173841, true, 23, false)));
                            J$.P(3173881, J$.R(3173857, 'this', this, false, false), '_progPrefix', J$.G(3173873, J$.R(3173865, 'options', options, false, false), 'prog'));
                            J$.P(3173913, J$.R(3173889, 'this', this, false, false), '_parserClass', J$.G(3173905, J$.R(3173897, 'options', options, false, false), 'parserClass'));
                            J$.P(3173937, J$.R(3173921, 'this', this, false, false), '_nameParserMap', J$.T(3173929, {}, 11, false));
                            J$.P(3173961, J$.R(3173945, 'this', this, false, false), '_choicesActions', J$.T(3173953, [], 10, false));
                            J$.P(3173993, J$.R(3173969, 'options', options, false, false), 'choices', J$.G(3173985, J$.R(3173977, 'this', this, false, false), '_nameParserMap'));
                            J$.M(3174025, J$.R(3174001, 'Action', Action, false, true), 'call', false)(J$.R(3174009, 'this', this, false, false), J$.R(3174017, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(3175305, J$e);
                        } finally {
                            if (J$.Fr(3175313))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3175217, 'util', util, false, false, false);
            J$.N(3175225, 'format', format, false, false, false);
            J$.N(3175233, 'Action', Action, false, false, false);
            J$.N(3175241, 'c', c, false, false, false);
            J$.N(3175249, 'argumentErrorHelper', argumentErrorHelper, false, false, false);
            ChoicesPseudoAction = J$.N(3175265, 'ChoicesPseudoAction', J$.T(3175257, ChoicesPseudoAction, 12, false), true, false, false);
            ActionSubparsers = J$.N(3175281, 'ActionSubparsers', J$.T(3175273, ActionSubparsers, 12, false), true, false, false);
            J$.T(3173393, 'use strict', 21, false);
            var util = J$.W(3173425, 'util', J$.F(3173417, J$.I(typeof require === 'undefined' ? require = J$.R(3173401, 'require', undefined, true, true) : require = J$.R(3173401, 'require', require, true, true)), false)(J$.T(3173409, 'util', 21, false)), util, false, true);
            var format = J$.W(3173465, 'format', J$.G(3173457, J$.F(3173449, J$.I(typeof require === 'undefined' ? require = J$.R(3173433, 'require', undefined, true, true) : require = J$.R(3173433, 'require', require, true, true)), false)(J$.T(3173441, 'util', 21, false)), 'format'), format, false, true);
            var Action = J$.W(3173497, 'Action', J$.F(3173489, J$.I(typeof require === 'undefined' ? require = J$.R(3173473, 'require', undefined, true, true) : require = J$.R(3173473, 'require', require, true, true)), false)(J$.T(3173481, '../action', 21, false)), Action, false, true);
            var c = J$.W(3173529, 'c', J$.F(3173521, J$.I(typeof require === 'undefined' ? require = J$.R(3173505, 'require', undefined, true, true) : require = J$.R(3173505, 'require', require, true, true)), false)(J$.T(3173513, '../const', 21, false)), c, false, true);
            var argumentErrorHelper = J$.W(3173561, 'argumentErrorHelper', J$.F(3173553, J$.I(typeof require === 'undefined' ? require = J$.R(3173537, 'require', undefined, true, true) : require = J$.R(3173537, 'require', require, true, true)), false)(J$.T(3173545, '../argument/error', 21, false)), argumentErrorHelper, false, true);
            J$.M(3173705, J$.R(3173681, 'util', util, false, true), 'inherits', false)(J$.R(3173689, 'ChoicesPseudoAction', ChoicesPseudoAction, false, true), J$.R(3173697, 'Action', Action, false, true));
            J$.M(3174081, J$.R(3174057, 'util', util, false, true), 'inherits', false)(J$.R(3174065, 'ActionSubparsers', ActionSubparsers, false, true), J$.R(3174073, 'Action', Action, false, true));
            J$.P(3174681, J$.G(3174097, J$.R(3174089, 'ActionSubparsers', ActionSubparsers, false, true), 'prototype'), 'addParser', J$.T(3174673, function (name, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3174601, arguments.callee, this, arguments);
                            arguments = J$.N(3174609, 'arguments', arguments, true, false, false);
                            name = J$.N(3174617, 'name', name, true, false, false);
                            options = J$.N(3174625, 'options', options, true, false, false);
                            J$.N(3174633, 'parser', parser, false, false, false);
                            J$.N(3174641, 'self', self, false, false, false);
                            J$.N(3174649, 'aliases', aliases, false, false, false);
                            J$.N(3174657, 'help', help, false, false, false);
                            J$.N(3174665, 'choiceAction', choiceAction, false, false, false);
                            var parser;
                            var self = J$.W(3174113, 'self', J$.R(3174105, 'this', this, false, false), self, false, false);
                            options = J$.W(3174137, 'options', J$.C(157144, J$.R(3174121, 'options', options, false, false)) ? J$._() : J$.T(3174129, {}, 11, false), options, false, false);
                            J$.P(3174177, J$.R(3174145, 'options', options, false, false), 'debug', J$.B(356882, '===', J$.G(3174161, J$.R(3174153, 'this', this, false, false), 'debug'), J$.T(3174169, true, 23, false)));
                            if (J$.C(157152, J$.U(356890, '!', J$.G(3174193, J$.R(3174185, 'options', options, false, false), 'prog')))) {
                                J$.P(3174241, J$.R(3174201, 'options', options, false, false), 'prog', J$.B(356906, '+', J$.B(356898, '+', J$.G(3174217, J$.R(3174209, 'this', this, false, false), '_progPrefix'), J$.T(3174225, ' ', 21, false)), J$.R(3174233, 'name', name, false, false)));
                            }
                            var aliases = J$.W(3174273, 'aliases', J$.C(157160, J$.G(3174257, J$.R(3174249, 'options', options, false, false), 'aliases')) ? J$._() : J$.T(3174265, [], 10, false), aliases, false, false);
                            if (J$.C(157176, J$.C(157168, J$.U(356922, '!', J$.U(356914, '!', J$.G(3174289, J$.R(3174281, 'options', options, false, false), 'help')))) ? J$._() : J$.B(356938, '===', J$.U(356930, 'typeof', J$.G(3174305, J$.R(3174297, 'options', options, false, false), 'help')), J$.T(3174313, 'string', 21, false)))) {
                                var help = J$.W(3174337, 'help', J$.G(3174329, J$.R(3174321, 'options', options, false, false), 'help'), help, false, false);
                                J$.B(356946, 'delete', J$.R(3174345, 'options', options, false, false), 'help');
                                var choiceAction = J$.W(3174385, 'choiceAction', J$.F(3174377, J$.R(3174353, 'ChoicesPseudoAction', ChoicesPseudoAction, false, true), true)(J$.R(3174361, 'name', name, false, false), J$.R(3174369, 'help', help, false, false)), choiceAction, false, false);
                                J$.M(3174417, J$.G(3174401, J$.R(3174393, 'this', this, false, false), '_choicesActions'), 'push', false)(J$.R(3174409, 'choiceAction', choiceAction, false, false));
                            }
                            parser = J$.W(3174449, 'parser', J$.M(3174441, J$.R(3174425, 'this', this, false, false), '_parserClass', true)(J$.R(3174433, 'options', options, false, false)), parser, false, false);
                            J$.P(3174489, J$.G(3174465, J$.R(3174457, 'this', this, false, false), '_nameParserMap'), J$.R(3174473, 'name', name, false, false), J$.R(3174481, 'parser', parser, false, false));
                            J$.M(3174577, J$.R(3174497, 'aliases', aliases, false, false), 'forEach', false)(J$.T(3174569, function (alias) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(3174545, arguments.callee, this, arguments);
                                            arguments = J$.N(3174553, 'arguments', arguments, true, false, false);
                                            alias = J$.N(3174561, 'alias', alias, true, false, false);
                                            J$.P(3174537, J$.G(3174513, J$.R(3174505, 'self', self, false, false), '_nameParserMap'), J$.R(3174521, 'alias', alias, false, false), J$.R(3174529, 'parser', parser, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3175321, J$e);
                                        } finally {
                                            if (J$.Fr(3175329))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(3174593, J$.R(3174585, 'parser', parser, false, false));
                        } catch (J$e) {
                            J$.Ex(3175337, J$e);
                        } finally {
                            if (J$.Fr(3175345))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3174753, J$.G(3174697, J$.R(3174689, 'ActionSubparsers', ActionSubparsers, false, true), 'prototype'), '_getSubactions', J$.T(3174745, function () {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3174729, arguments.callee, this, arguments);
                            arguments = J$.N(3174737, 'arguments', arguments, true, false, false);
                            return J$.Rt(3174721, J$.G(3174713, J$.R(3174705, 'this', this, false, false), '_choicesActions'));
                        } catch (J$e) {
                            J$.Ex(3175353, J$e);
                        } finally {
                            if (J$.Fr(3175361))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3175177, J$.G(3174769, J$.R(3174761, 'ActionSubparsers', ActionSubparsers, false, true), 'prototype'), 'call', J$.T(3175169, function (parser, namespace, values) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(3175113, arguments.callee, this, arguments);
                            arguments = J$.N(3175121, 'arguments', arguments, true, false, false);
                            parser = J$.N(3175129, 'parser', parser, true, false, false);
                            namespace = J$.N(3175137, 'namespace', namespace, true, false, false);
                            values = J$.N(3175145, 'values', values, true, false, false);
                            J$.N(3175153, 'parserName', parserName, false, false, false);
                            J$.N(3175161, 'argStrings', argStrings, false, false, false);
                            var parserName = J$.W(3174801, 'parserName', J$.G(3174793, J$.R(3174777, 'values', values, false, false), J$.T(3174785, 0, 22, false)), parserName, false, false);
                            var argStrings = J$.W(3174833, 'argStrings', J$.M(3174825, J$.R(3174809, 'values', values, false, false), 'slice', false)(J$.T(3174817, 1, 22, false)), argStrings, false, false);
                            if (J$.C(157184, J$.B(356954, '!==', J$.G(3174849, J$.R(3174841, 'this', this, false, false), 'dest'), J$.G(3174865, J$.R(3174857, 'c', c, false, true), 'SUPPRESS')))) {
                                J$.P(3174905, J$.R(3174873, 'namespace', namespace, false, false), J$.G(3174889, J$.R(3174881, 'this', this, false, false), 'dest'), J$.R(3174897, 'parserName', parserName, false, false));
                            }
                            if (J$.C(157192, J$.G(3174937, J$.G(3174921, J$.R(3174913, 'this', this, false, false), '_nameParserMap'), J$.R(3174929, 'parserName', parserName, false, false)))) {
                                parser = J$.W(3174977, 'parser', J$.G(3174969, J$.G(3174953, J$.R(3174945, 'this', this, false, false), '_nameParserMap'), J$.R(3174961, 'parserName', parserName, false, false)), parser, false, false);
                            } else {
                                throw J$.F(3175073, J$.R(3174985, 'argumentErrorHelper', argumentErrorHelper, false, true), false)(J$.F(3175065, J$.R(3174993, 'format', format, false, true), false)(J$.T(3175001, 'Unknown parser "%s" (choices: [%s]).', 21, false), J$.R(3175009, 'parserName', parserName, false, false), J$.M(3175057, J$.M(3175041, J$.I(typeof Object === 'undefined' ? Object = J$.R(3175017, 'Object', undefined, true, true) : Object = J$.R(3175017, 'Object', Object, true, true)), 'keys', false)(J$.G(3175033, J$.R(3175025, 'this', this, false, false), '_nameParserMap')), 'join', false)(J$.T(3175049, ', ', 21, false))));
                            }
                            J$.M(3175105, J$.R(3175081, 'parser', parser, false, false), 'parseArgs', false)(J$.R(3175089, 'argStrings', argStrings, false, false), J$.R(3175097, 'namespace', namespace, false, false));
                        } catch (J$e) {
                            J$.Ex(3175369, J$e);
                        } finally {
                            if (J$.Fr(3175377))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3175201, J$.I(typeof module === 'undefined' ? module = J$.R(3175185, 'module', undefined, true, true) : module = J$.R(3175185, 'module', module, true, true)), 'exports', J$.R(3175193, 'ActionSubparsers', ActionSubparsers, false, true));
        } catch (J$e) {
            J$.Ex(3175385, J$e);
        } finally {
            if (J$.Sr(3175393))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

