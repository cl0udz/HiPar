J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3171985, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/argparse/lib/action/store/constant.js');
            J$.N(3171993, 'util', util, false, false, false);
            J$.N(3172001, 'Action', Action, false, false, false);
            J$.N(3172009, 'ActionStoreConstant', ActionStoreConstant, false, false, false);
            J$.T(3171585, 'use strict', 21, false);
            var util = J$.W(3171617, 'util', J$.F(3171609, J$.I(typeof require === 'undefined' ? require = J$.R(3171593, 'require', undefined, true, true) : require = J$.R(3171593, 'require', require, true, true)), false)(J$.T(3171601, 'util', 21, false)), util, false, true);
            var Action = J$.W(3171649, 'Action', J$.F(3171641, J$.I(typeof require === 'undefined' ? require = J$.R(3171625, 'require', undefined, true, true) : require = J$.R(3171625, 'require', require, true, true)), false)(J$.T(3171633, '../../action', 21, false)), Action, false, true);
            var ActionStoreConstant = J$.W(3171833, 'ActionStoreConstant', J$.P(3171825, J$.I(typeof module === 'undefined' ? module = J$.R(3171657, 'module', undefined, true, true) : module = J$.R(3171657, 'module', module, true, true)), 'exports', J$.T(3171817, function ActionStoreConstant(options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3171793, arguments.callee, this, arguments);
                            arguments = J$.N(3171801, 'arguments', arguments, true, false, false);
                            options = J$.N(3171809, 'options', options, true, false, false);
                            options = J$.W(3171681, 'options', J$.C(157048, J$.R(3171665, 'options', options, false, false)) ? J$._() : J$.T(3171673, {}, 11, false), options, false, false);
                            J$.P(3171705, J$.R(3171689, 'options', options, false, false), 'nargs', J$.T(3171697, 0, 22, false));
                            if (J$.C(157056, J$.B(356802, '===', J$.U(356794, 'typeof', J$.G(3171721, J$.R(3171713, 'options', options, false, false), 'constant')), J$.T(3171729, 'undefined', 21, false)))) {
                                throw J$.F(3171753, J$.I(typeof Error === 'undefined' ? Error = J$.R(3171737, 'Error', undefined, true, true) : Error = J$.R(3171737, 'Error', Error, true, true)), true)(J$.T(3171745, 'constant option is required for storeAction', 21, false));
                            }
                            J$.M(3171785, J$.R(3171761, 'Action', Action, false, true), 'call', false)(J$.R(3171769, 'this', this, false, false), J$.R(3171777, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(3172017, J$e);
                        } finally {
                            if (J$.Fr(3172025))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), ActionStoreConstant, false, true);
            J$.M(3171865, J$.R(3171841, 'util', util, false, true), 'inherits', false)(J$.R(3171849, 'ActionStoreConstant', ActionStoreConstant, false, true), J$.R(3171857, 'Action', Action, false, true));
            J$.P(3171977, J$.G(3171881, J$.R(3171873, 'ActionStoreConstant', ActionStoreConstant, false, true), 'prototype'), 'call', J$.T(3171969, function (parser, namespace) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3171937, arguments.callee, this, arguments);
                            arguments = J$.N(3171945, 'arguments', arguments, true, false, false);
                            parser = J$.N(3171953, 'parser', parser, true, false, false);
                            namespace = J$.N(3171961, 'namespace', namespace, true, false, false);
                            J$.M(3171929, J$.R(3171889, 'namespace', namespace, false, false), 'set', false)(J$.G(3171905, J$.R(3171897, 'this', this, false, false), 'dest'), J$.G(3171921, J$.R(3171913, 'this', this, false, false), 'constant'));
                        } catch (J$e) {
                            J$.Ex(3172033, J$e);
                        } finally {
                            if (J$.Fr(3172041))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3172049, J$e);
        } finally {
            if (J$.Sr(3172057))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

