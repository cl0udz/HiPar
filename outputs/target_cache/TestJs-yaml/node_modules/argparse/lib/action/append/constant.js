J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3169761, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/argparse/lib/action/append/constant.js');
            J$.N(3169769, 'util', util, false, false, false);
            J$.N(3169777, 'Action', Action, false, false, false);
            J$.N(3169785, 'ActionAppendConstant', ActionAppendConstant, false, false, false);
            J$.T(3169265, 'use strict', 21, false);
            var util = J$.W(3169297, 'util', J$.F(3169289, J$.I(typeof require === 'undefined' ? require = J$.R(3169273, 'require', undefined, true, true) : require = J$.R(3169273, 'require', require, true, true)), false)(J$.T(3169281, 'util', 21, false)), util, false, true);
            var Action = J$.W(3169329, 'Action', J$.F(3169321, J$.I(typeof require === 'undefined' ? require = J$.R(3169305, 'require', undefined, true, true) : require = J$.R(3169305, 'require', require, true, true)), false)(J$.T(3169313, '../../action', 21, false)), Action, false, true);
            var ActionAppendConstant = J$.W(3169513, 'ActionAppendConstant', J$.P(3169505, J$.I(typeof module === 'undefined' ? module = J$.R(3169337, 'module', undefined, true, true) : module = J$.R(3169337, 'module', module, true, true)), 'exports', J$.T(3169497, function ActionAppendConstant(options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3169473, arguments.callee, this, arguments);
                            arguments = J$.N(3169481, 'arguments', arguments, true, false, false);
                            options = J$.N(3169489, 'options', options, true, false, false);
                            options = J$.W(3169361, 'options', J$.C(156944, J$.R(3169345, 'options', options, false, false)) ? J$._() : J$.T(3169353, {}, 11, false), options, false, false);
                            J$.P(3169385, J$.R(3169369, 'options', options, false, false), 'nargs', J$.T(3169377, 0, 22, false));
                            if (J$.C(156952, J$.B(356714, '===', J$.U(356706, 'typeof', J$.G(3169401, J$.R(3169393, 'options', options, false, false), 'constant')), J$.T(3169409, 'undefined', 21, false)))) {
                                throw J$.F(3169433, J$.I(typeof Error === 'undefined' ? Error = J$.R(3169417, 'Error', undefined, true, true) : Error = J$.R(3169417, 'Error', Error, true, true)), true)(J$.T(3169425, 'constant option is required for appendAction', 21, false));
                            }
                            J$.M(3169465, J$.R(3169441, 'Action', Action, false, true), 'call', false)(J$.R(3169449, 'this', this, false, false), J$.R(3169457, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(3169793, J$e);
                        } finally {
                            if (J$.Fr(3169801))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), ActionAppendConstant, false, true);
            J$.M(3169545, J$.R(3169521, 'util', util, false, true), 'inherits', false)(J$.R(3169529, 'ActionAppendConstant', ActionAppendConstant, false, true), J$.R(3169537, 'Action', Action, false, true));
            J$.P(3169753, J$.G(3169561, J$.R(3169553, 'ActionAppendConstant', ActionAppendConstant, false, true), 'prototype'), 'call', J$.T(3169745, function (parser, namespace) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3169705, arguments.callee, this, arguments);
                            arguments = J$.N(3169713, 'arguments', arguments, true, false, false);
                            parser = J$.N(3169721, 'parser', parser, true, false, false);
                            namespace = J$.N(3169729, 'namespace', namespace, true, false, false);
                            J$.N(3169737, 'items', items, false, false, false);
                            var items = J$.W(3169625, 'items', J$.M(3169617, J$.T(3169569, [], 10, false), 'concat', false)(J$.C(156960, J$.G(3169601, J$.R(3169577, 'namespace', namespace, false, false), J$.G(3169593, J$.R(3169585, 'this', this, false, false), 'dest'))) ? J$._() : J$.T(3169609, [], 10, false)), items, false, false);
                            J$.M(3169657, J$.R(3169633, 'items', items, false, false), 'push', false)(J$.G(3169649, J$.R(3169641, 'this', this, false, false), 'constant'));
                            J$.M(3169697, J$.R(3169665, 'namespace', namespace, false, false), 'set', false)(J$.G(3169681, J$.R(3169673, 'this', this, false, false), 'dest'), J$.R(3169689, 'items', items, false, false));
                        } catch (J$e) {
                            J$.Ex(3169809, J$e);
                        } finally {
                            if (J$.Fr(3169817))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3169825, J$e);
        } finally {
            if (J$.Sr(3169833))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

