J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3173305, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestJs-yaml/node_modules/argparse/lib/action/store.js');
            J$.N(3173313, 'util', util, false, false, false);
            J$.N(3173321, 'Action', Action, false, false, false);
            J$.N(3173329, 'c', c, false, false, false);
            J$.N(3173337, 'ActionStore', ActionStore, false, false, false);
            J$.T(3172801, 'use strict', 21, false);
            var util = J$.W(3172833, 'util', J$.F(3172825, J$.I(typeof require === 'undefined' ? require = J$.R(3172809, 'require', undefined, true, true) : require = J$.R(3172809, 'require', require, true, true)), false)(J$.T(3172817, 'util', 21, false)), util, false, true);
            var Action = J$.W(3172865, 'Action', J$.F(3172857, J$.I(typeof require === 'undefined' ? require = J$.R(3172841, 'require', undefined, true, true) : require = J$.R(3172841, 'require', require, true, true)), false)(J$.T(3172849, '../action', 21, false)), Action, false, true);
            var c = J$.W(3172897, 'c', J$.F(3172889, J$.I(typeof require === 'undefined' ? require = J$.R(3172873, 'require', undefined, true, true) : require = J$.R(3172873, 'require', require, true, true)), false)(J$.T(3172881, '../const', 21, false)), c, false, true);
            var ActionStore = J$.W(3173153, 'ActionStore', J$.P(3173145, J$.I(typeof module === 'undefined' ? module = J$.R(3172905, 'module', undefined, true, true) : module = J$.R(3172905, 'module', module, true, true)), 'exports', J$.T(3173137, function ActionStore(options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3173113, arguments.callee, this, arguments);
                            arguments = J$.N(3173121, 'arguments', arguments, true, false, false);
                            options = J$.N(3173129, 'options', options, true, false, false);
                            options = J$.W(3172929, 'options', J$.C(157096, J$.R(3172913, 'options', options, false, false)) ? J$._() : J$.T(3172921, {}, 11, false), options, false, false);
                            if (J$.C(157104, J$.B(356826, '<=', J$.G(3172945, J$.R(3172937, 'this', this, false, false), 'nargs'), J$.T(3172953, 0, 22, false)))) {
                                throw J$.F(3172993, J$.I(typeof Error === 'undefined' ? Error = J$.R(3172961, 'Error', undefined, true, true) : Error = J$.R(3172961, 'Error', Error, true, true)), true)(J$.B(356842, '+', J$.B(356834, '+', J$.T(3172969, 'nargs for store actions must be > 0; if you ', 21, false), J$.T(3172977, 'have nothing to store, actions such as store ', 21, false)), J$.T(3172985, 'true or store const may be more appropriate', 21, false)));
                            }
                            if (J$.C(157120, J$.C(157112, J$.B(356858, '!==', J$.U(356850, 'typeof', J$.G(3173009, J$.R(3173001, 'this', this, false, false), 'constant')), J$.T(3173017, 'undefined', 21, false))) ? J$.B(356866, '!==', J$.G(3173033, J$.R(3173025, 'this', this, false, false), 'nargs'), J$.G(3173049, J$.R(3173041, 'c', c, false, true), 'OPTIONAL')) : J$._())) {
                                throw J$.F(3173073, J$.I(typeof Error === 'undefined' ? Error = J$.R(3173057, 'Error', undefined, true, true) : Error = J$.R(3173057, 'Error', Error, true, true)), true)(J$.T(3173065, 'nargs must be OPTIONAL to supply const', 21, false));
                            }
                            J$.M(3173105, J$.R(3173081, 'Action', Action, false, true), 'call', false)(J$.R(3173089, 'this', this, false, false), J$.R(3173097, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(3173345, J$e);
                        } finally {
                            if (J$.Fr(3173353))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), ActionStore, false, true);
            J$.M(3173185, J$.R(3173161, 'util', util, false, true), 'inherits', false)(J$.R(3173169, 'ActionStore', ActionStore, false, true), J$.R(3173177, 'Action', Action, false, true));
            J$.P(3173297, J$.G(3173201, J$.R(3173193, 'ActionStore', ActionStore, false, true), 'prototype'), 'call', J$.T(3173289, function (parser, namespace, values) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3173249, arguments.callee, this, arguments);
                            arguments = J$.N(3173257, 'arguments', arguments, true, false, false);
                            parser = J$.N(3173265, 'parser', parser, true, false, false);
                            namespace = J$.N(3173273, 'namespace', namespace, true, false, false);
                            values = J$.N(3173281, 'values', values, true, false, false);
                            J$.M(3173241, J$.R(3173209, 'namespace', namespace, false, false), 'set', false)(J$.G(3173225, J$.R(3173217, 'this', this, false, false), 'dest'), J$.R(3173233, 'values', values, false, false));
                        } catch (J$e) {
                            J$.Ex(3173361, J$e);
                        } finally {
                            if (J$.Fr(3173369))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3173377, J$e);
        } finally {
            if (J$.Sr(3173385))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

