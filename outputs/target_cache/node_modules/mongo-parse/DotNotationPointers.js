J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(4257, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/node_modules/mongo-parse/DotNotationPointers.js');
            function createPointers(rootObject, propertyParts) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2881, arguments.callee, this, arguments);
                            arguments = J$.N(2889, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(2897, 'rootObject', rootObject, true, false, false);
                            propertyParts = J$.N(2905, 'propertyParts', propertyParts, true, false, false);
                            J$.N(2913, 'initialObject', initialObject, false, false, false);
                            J$.N(2921, 'curInfoObjects', curInfoObjects, false, false, false);
                            var initialObject = J$.W(2089, 'initialObject', J$.T(2081, { dummy: J$.R(2073, 'rootObject', rootObject, false, false) }, 11, false), initialObject, false, false);
                            var curInfoObjects = J$.W(2137, 'curInfoObjects', J$.T(2129, [J$.T(2121, {
                                    obj: J$.R(2097, 'initialObject', initialObject, false, false),
                                    last: J$.T(2105, 'dummy', 21, false),
                                    propertyPath: J$.T(2113, [], 10, false)
                                }, 11, false)], 10, false), curInfoObjects, false, false);
                            J$.M(2609, J$.R(2145, 'propertyParts', propertyParts, false, false), 'forEach', false)(J$.T(2601, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2569, arguments.callee, this, arguments);
                                            arguments = J$.N(2577, 'arguments', arguments, true, false, false);
                                            part = J$.N(2585, 'part', part, true, false, false);
                                            J$.N(2593, 'nextInfoObjects', nextInfoObjects, false, false, false);
                                            var nextInfoObjects = J$.W(2161, 'nextInfoObjects', J$.T(2153, [], 10, false), nextInfoObjects, false, false);
                                            J$.M(2545, J$.R(2169, 'curInfoObjects', curInfoObjects, false, false), 'forEach', false)(J$.T(2537, function (current) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2505, arguments.callee, this, arguments);
                                                            arguments = J$.N(2513, 'arguments', arguments, true, false, false);
                                                            current = J$.N(2521, 'current', current, true, false, false);
                                                            J$.N(2529, 'curValue', curValue, false, false, false);
                                                            var curValue = J$.W(2225, 'curValue', J$.F(2217, J$.R(2177, 'getValue', getValue, false, true), false)(J$.G(2193, J$.R(2185, 'current', current, false, false), 'obj'), J$.G(2209, J$.R(2201, 'current', current, false, false), 'last')), curValue, false, false);
                                                            if (J$.C(88, J$.C(80, J$.B(122, 'instanceof', J$.R(2233, 'curValue', curValue, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(2241, 'Array', undefined, true, true) : Array = J$.R(2241, 'Array', Array, true, true)))) ? J$.U(130, '!', J$.F(2265, J$.R(2249, 'isInteger', isInteger, false, true), false)(J$.R(2257, 'part', part, false, false))) : J$._())) {
                                                                J$.M(2425, J$.R(2273, 'curValue', curValue, false, false), 'forEach', false)(J$.T(2417, function (property, index) {
                                                                    jalangiLabel1:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(2385, arguments.callee, this, arguments);
                                                                                arguments = J$.N(2393, 'arguments', arguments, true, false, false);
                                                                                property = J$.N(2401, 'property', property, true, false, false);
                                                                                index = J$.N(2409, 'index', index, true, false, false);
                                                                                J$.M(2377, J$.R(2281, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(2369, {
                                                                                    obj: J$.F(2313, J$.R(2289, 'getValue', getValue, false, true), false)(J$.R(2297, 'curValue', curValue, false, false), J$.R(2305, 'index', index, false, false)),
                                                                                    propertyPath: J$.M(2353, J$.G(2329, J$.R(2321, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(2337, 'index', index, false, false), J$.R(2345, 'part', part, false, false)),
                                                                                    last: J$.R(2361, 'part', part, false, false)
                                                                                }, 11, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(4361, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(4369))
                                                                                    continue jalangiLabel1;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } else {
                                                                J$.M(2497, J$.R(2433, 'nextInfoObjects', nextInfoObjects, false, false), 'push', false)(J$.T(2489, {
                                                                    obj: J$.R(2441, 'curValue', curValue, false, false),
                                                                    propertyPath: J$.M(2473, J$.G(2457, J$.R(2449, 'current', current, false, false), 'propertyPath'), 'concat', false)(J$.R(2465, 'part', part, false, false)),
                                                                    last: J$.R(2481, 'part', part, false, false)
                                                                }, 11, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(4377, J$e);
                                                        } finally {
                                                            if (J$.Fr(4385))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            curInfoObjects = J$.W(2561, 'curInfoObjects', J$.R(2553, 'nextInfoObjects', nextInfoObjects, false, false), curInfoObjects, false, false);
                                        } catch (J$e) {
                                            J$.Ex(4393, J$e);
                                        } finally {
                                            if (J$.Fr(4401))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2873, J$.M(2865, J$.R(2617, 'curInfoObjects', curInfoObjects, false, false), 'map', false)(J$.T(2857, function (current) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(2817, arguments.callee, this, arguments);
                                            arguments = J$.N(2825, 'arguments', arguments, true, false, false);
                                            current = J$.N(2833, 'current', current, true, false, false);
                                            J$.N(2841, 'obj', obj, false, false, false);
                                            J$.N(2849, 'last', last, false, false, false);
                                            if (J$.C(96, J$.B(138, '===', J$.G(2633, J$.R(2625, 'current', current, false, false), 'obj'), J$.R(2641, 'initialObject', initialObject, false, false)))) {
                                                var obj = J$.W(2673, 'obj', J$.G(2665, J$.G(2657, J$.R(2649, 'current', current, false, false), 'obj'), 'dummy'), obj, false, false);
                                                var last = J$.W(2689, 'last', J$.T(2681, undefined, 24, false), last, false, false);
                                            } else {
                                                var obj = J$.W(2713, 'obj', J$.G(2705, J$.R(2697, 'current', current, false, false), 'obj'), obj, false, false);
                                                var last = J$.W(2737, 'last', J$.G(2729, J$.R(2721, 'current', current, false, false), 'last'), last, false, false);
                                            }
                                            return J$.Rt(2809, J$.F(2801, J$.R(2745, 'DotNotationPointer', DotNotationPointer, false, true), true)(J$.R(2753, 'rootObject', rootObject, false, false), J$.G(2769, J$.R(2761, 'current', current, false, false), 'propertyPath'), J$.T(2793, {
                                                obj: J$.R(2777, 'obj', obj, false, false),
                                                last: J$.R(2785, 'last', last, false, false)
                                            }, 11, false)));
                                        } catch (J$e) {
                                            J$.Ex(4409, J$e);
                                        } finally {
                                            if (J$.Fr(4417))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(4425, J$e);
                        } finally {
                            if (J$.Fr(4433))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getValue(object, key) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2993, arguments.callee, this, arguments);
                            arguments = J$.N(3001, 'arguments', arguments, true, false, false);
                            object = J$.N(3009, 'object', object, true, false, false);
                            key = J$.N(3017, 'key', key, true, false, false);
                            if (J$.C(104, J$.B(146, '===', J$.R(2929, 'object', object, false, false), J$.T(2937, undefined, 24, false))))
                                return J$.Rt(2953, J$.T(2945, undefined, 24, false));
                            else
                                return J$.Rt(2985, J$.G(2977, J$.R(2961, 'object', object, false, false), J$.R(2969, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(4441, J$e);
                        } finally {
                            if (J$.Fr(4449))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createProperty(that) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(4097, arguments.callee, this, arguments);
                            arguments = J$.N(4105, 'arguments', arguments, true, false, false);
                            that = J$.N(4113, 'that', that, true, false, false);
                            J$.N(4121, 'result', result, false, false, false);
                            J$.N(4129, 'lastIndex', lastIndex, false, false, false);
                            J$.N(4137, 'n', n, false, false, false);
                            J$.N(4145, 'value', value, false, false, false);
                            J$.N(4153, 'newValue', newValue, false, false, false);
                            var result = J$.W(3697, 'result', J$.G(3689, J$.R(3681, 'that', that, false, false), 'root'), result, false, false);
                            var lastIndex = J$.W(3737, 'lastIndex', J$.B(202, '-', J$.G(3721, J$.G(3713, J$.R(3705, 'that', that, false, false), 'property'), 'length'), J$.T(3729, 1, 22, false)), lastIndex, false, false);
                            for (var n = J$.W(3753, 'n', J$.T(3745, 0, 22, false), n, false, false); J$.C(176, J$.B(210, '<', J$.R(3761, 'n', n, false, false), J$.R(3769, 'lastIndex', lastIndex, false, false))); J$.B(234, '-', n = J$.W(3785, 'n', J$.B(226, '+', J$.U(218, '+', J$.R(3777, 'n', n, false, false)), 1), n, false, false), 1)) {
                                var value = J$.W(3841, 'value', J$.G(3833, J$.R(3793, 'result', result, false, false), J$.G(3825, J$.G(3809, J$.R(3801, 'that', that, false, false), 'property'), J$.R(3817, 'n', n, false, false))), value, false, false);
                                if (J$.C(168, J$.B(242, '===', J$.R(3849, 'value', value, false, false), J$.T(3857, undefined, 24, false)))) {
                                    if (J$.C(160, J$.F(3913, J$.R(3865, 'isInteger', isInteger, false, true), false)(J$.G(3905, J$.G(3881, J$.R(3873, 'that', that, false, false), 'property'), J$.B(250, '+', J$.R(3889, 'n', n, false, false), J$.T(3897, 1, 22, false))))))
                                        var newValue = J$.W(3929, 'newValue', J$.T(3921, [], 10, false), newValue, false, false);
                                    else
                                        var newValue = J$.W(3945, 'newValue', J$.T(3937, {}, 11, false), newValue, false, false);
                                    value = J$.W(4009, 'value', J$.P(4001, J$.R(3953, 'result', result, false, false), J$.G(3985, J$.G(3969, J$.R(3961, 'that', that, false, false), 'property'), J$.R(3977, 'n', n, false, false)), J$.R(3993, 'newValue', newValue, false, false)), value, false, false);
                                }
                                result = J$.W(4025, 'result', J$.R(4017, 'value', value, false, false), result, false, false);
                            }
                            J$.P(4089, J$.R(4033, 'that', that, false, false), 'propertyInfo', J$.T(4081, {
                                obj: J$.R(4041, 'result', result, false, false),
                                last: J$.G(4073, J$.G(4057, J$.R(4049, 'that', that, false, false), 'property'), J$.R(4065, 'lastIndex', lastIndex, false, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(4505, J$e);
                        } finally {
                            if (J$.Fr(4513))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isInteger(v) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(4225, arguments.callee, this, arguments);
                            arguments = J$.N(4233, 'arguments', arguments, true, false, false);
                            v = J$.N(4241, 'v', v, true, false, false);
                            J$.N(4249, 'number', number, false, false, false);
                            var number = J$.W(4185, 'number', J$.F(4177, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(4161, 'parseInt', undefined, true, true) : parseInt = J$.R(4161, 'parseInt', parseInt, true, true)), false)(J$.R(4169, 'v', v, false, false)), number, false, false);
                            return J$.Rt(4217, J$.U(258, '!', J$.F(4209, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(4193, 'isNaN', undefined, true, true) : isNaN = J$.R(4193, 'isNaN', isNaN, true, true)), false)(J$.R(4201, 'number', number, false, false))));
                        } catch (J$e) {
                            J$.Ex(4521, J$e);
                        } finally {
                            if (J$.Fr(4529))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4265, 'DotNotationPointers', DotNotationPointers, false, false, false);
            createPointers = J$.N(4281, 'createPointers', J$.T(4273, createPointers, 12, false), true, false, false);
            getValue = J$.N(4297, 'getValue', J$.T(4289, getValue, 12, false), true, false, false);
            J$.N(4305, 'DotNotationPointer', DotNotationPointer, false, false, false);
            createProperty = J$.N(4321, 'createProperty', J$.T(4313, createProperty, 12, false), true, false, false);
            isInteger = J$.N(4337, 'isInteger', J$.T(4329, isInteger, 12, false), true, false, false);
            var DotNotationPointers = J$.W(2065, 'DotNotationPointers', J$.P(2057, J$.I(typeof module === 'undefined' ? module = J$.R(1889, 'module', undefined, true, true) : module = J$.R(1889, 'module', module, true, true)), 'exports', J$.T(2049, function (rootObject, property) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2017, arguments.callee, this, arguments);
                            arguments = J$.N(2025, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(2033, 'rootObject', rootObject, true, false, false);
                            property = J$.N(2041, 'property', property, true, false, false);
                            if (J$.C(72, J$.B(98, '===', J$.R(1897, 'property', property, false, false), J$.T(1905, undefined, 24, false)))) {
                                property = J$.W(1921, 'property', J$.T(1913, [], 10, false), property, false, false);
                            } else if (J$.C(64, J$.U(114, '!', J$.B(106, 'instanceof', J$.R(1929, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(1937, 'Array', undefined, true, true) : Array = J$.R(1937, 'Array', Array, true, true)))))) {
                                property = J$.W(1969, 'property', J$.M(1961, J$.R(1945, 'property', property, false, false), 'split', false)(J$.T(1953, '.', 21, false)), property, false, false);
                            }
                            return J$.Rt(2009, J$.F(2001, J$.R(1977, 'createPointers', createPointers, false, true), false)(J$.R(1985, 'rootObject', rootObject, false, false), J$.R(1993, 'property', property, false, false)));
                        } catch (J$e) {
                            J$.Ex(4345, J$e);
                        } finally {
                            if (J$.Fr(4353))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), DotNotationPointers, false, true);
            var DotNotationPointer = J$.W(3257, 'DotNotationPointer', J$.T(3249, function (rootObject, property, propertyInfo) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(3209, arguments.callee, this, arguments);
                            arguments = J$.N(3217, 'arguments', arguments, true, false, false);
                            rootObject = J$.N(3225, 'rootObject', rootObject, true, false, false);
                            property = J$.N(3233, 'property', property, true, false, false);
                            propertyInfo = J$.N(3241, 'propertyInfo', propertyInfo, true, false, false);
                            J$.P(3041, J$.R(3025, 'this', this, false, false), 'root', J$.R(3033, 'rootObject', rootObject, false, false));
                            if (J$.C(120, J$.B(154, '===', J$.R(3049, 'property', property, false, false), J$.T(3057, undefined, 24, false)))) {
                                J$.P(3081, J$.R(3065, 'this', this, false, false), 'property', J$.T(3073, [], 10, false));
                            } else if (J$.C(112, J$.B(162, 'instanceof', J$.R(3089, 'property', property, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(3097, 'Array', undefined, true, true) : Array = J$.R(3097, 'Array', Array, true, true))))) {
                                J$.P(3121, J$.R(3105, 'this', this, false, false), 'property', J$.R(3113, 'property', property, false, false));
                            } else {
                                J$.P(3161, J$.R(3129, 'this', this, false, false), 'property', J$.M(3153, J$.R(3137, 'property', property, false, false), 'split', false)(J$.T(3145, '.', 21, false)));
                            }
                            if (J$.C(128, J$.B(170, '!==', J$.R(3169, 'propertyInfo', propertyInfo, false, false), J$.T(3177, undefined, 24, false)))) {
                                J$.P(3201, J$.R(3185, 'this', this, false, false), 'propertyInfo', J$.R(3193, 'propertyInfo', propertyInfo, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(4457, J$e);
                        } finally {
                            if (J$.Fr(4465))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), DotNotationPointer, false, true);
            J$.P(3281, J$.R(3265, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype', J$.T(3273, {}, 11, false));
            J$.M(3673, J$.I(typeof Object === 'undefined' ? Object = J$.R(3289, 'Object', undefined, true, true) : Object = J$.R(3289, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(3305, J$.R(3297, 'DotNotationPointer', DotNotationPointer, false, true), 'prototype'), J$.T(3313, 'val', 21, false), J$.T(3665, {
                get: J$.T(3505, function () {
                    jalangiLabel8:
                        while (true) {
                            try {
                                J$.Fe(3481, arguments.callee, this, arguments);
                                arguments = J$.N(3489, 'arguments', arguments, true, false, false);
                                J$.N(3497, 'info', info, false, false, false);
                                var info = J$.W(3337, 'info', J$.G(3329, J$.R(3321, 'this', this, false, false), 'propertyInfo'), info, false, false);
                                if (J$.C(144, J$.B(178, '===', J$.G(3353, J$.R(3345, 'info', info, false, false), 'obj'), J$.T(3361, undefined, 24, false)))) {
                                    return J$.Rt(3377, J$.T(3369, undefined, 24, false));
                                } else {
                                    if (J$.C(136, J$.B(186, '!==', J$.G(3393, J$.R(3385, 'info', info, false, false), 'last'), J$.T(3401, undefined, 24, false)))) {
                                        return J$.Rt(3449, J$.G(3441, J$.G(3417, J$.R(3409, 'info', info, false, false), 'obj'), J$.G(3433, J$.R(3425, 'info', info, false, false), 'last')));
                                    } else {
                                        return J$.Rt(3473, J$.G(3465, J$.R(3457, 'info', info, false, false), 'obj'));
                                    }
                                }
                            } catch (J$e) {
                                J$.Ex(4473, J$e);
                            } finally {
                                if (J$.Fr(4481))
                                    continue jalangiLabel8;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                set: J$.T(3657, function (value) {
                    jalangiLabel9:
                        while (true) {
                            try {
                                J$.Fe(3633, arguments.callee, this, arguments);
                                arguments = J$.N(3641, 'arguments', arguments, true, false, false);
                                value = J$.N(3649, 'value', value, true, false, false);
                                if (J$.C(152, J$.B(194, '===', J$.G(3529, J$.G(3521, J$.R(3513, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.T(3537, undefined, 24, false)))) {
                                    J$.F(3561, J$.R(3545, 'createProperty', createProperty, false, true), false)(J$.R(3553, 'this', this, false, false));
                                }
                                J$.P(3625, J$.G(3585, J$.G(3577, J$.R(3569, 'this', this, false, false), 'propertyInfo'), 'obj'), J$.G(3609, J$.G(3601, J$.R(3593, 'this', this, false, false), 'propertyInfo'), 'last'), J$.R(3617, 'value', value, false, false));
                            } catch (J$e) {
                                J$.Ex(4489, J$e);
                            } finally {
                                if (J$.Fr(4497))
                                    continue jalangiLabel9;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(4537, J$e);
        } finally {
            if (J$.Sr(4545))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

