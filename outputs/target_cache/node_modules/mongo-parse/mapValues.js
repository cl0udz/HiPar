J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(6737, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/node_modules/mongo-parse/mapValues.js');
            function obj() {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(6545, arguments.callee, this, arguments);
                            arguments = J$.N(6553, 'arguments', arguments, true, false, false);
                            J$.N(6561, 'result', result, false, false, false);
                            J$.N(6569, 'n', n, false, false, false);
                            var result = J$.W(6385, 'result', J$.T(6377, {}, 11, false), result, false, false);
                            for (var n = J$.W(6401, 'n', J$.T(6393, 0, 22, false), n, false, false); J$.C(288, J$.B(386, '<', J$.R(6409, 'n', n, false, false), J$.G(6425, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6417, 'arguments', undefined, true, true) : arguments = J$.R(6417, 'arguments', arguments, true, true)), 'length'))); n = J$.W(6449, 'n', J$.B(394, '+', J$.R(6441, 'n', n, false, false), J$.T(6433, 2, 22, false)), n, false, false)) {
                                J$.P(6521, J$.R(6457, 'result', result, false, false), J$.G(6481, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6465, 'arguments', undefined, true, true) : arguments = J$.R(6465, 'arguments', arguments, true, true)), J$.R(6473, 'n', n, false, false)), J$.G(6513, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6489, 'arguments', undefined, true, true) : arguments = J$.R(6489, 'arguments', arguments, true, true)), J$.B(402, '+', J$.R(6497, 'n', n, false, false), J$.T(6505, 1, 22, false))));
                            }
                            return J$.Rt(6537, J$.R(6529, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6881, J$e);
                        } finally {
                            if (J$.Fr(6889))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addOperator(obj, field, operator, operand) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(6689, arguments.callee, this, arguments);
                            arguments = J$.N(6697, 'arguments', arguments, true, false, false);
                            obj = J$.N(6705, 'obj', obj, true, false, false);
                            field = J$.N(6713, 'field', field, true, false, false);
                            operator = J$.N(6721, 'operator', operator, true, false, false);
                            operand = J$.N(6729, 'operand', operand, true, false, false);
                            if (J$.C(296, J$.B(410, '===', J$.G(6593, J$.R(6577, 'obj', obj, false, false), J$.R(6585, 'field', field, false, false)), J$.T(6601, undefined, 24, false)))) {
                                J$.P(6633, J$.R(6609, 'obj', obj, false, false), J$.R(6617, 'field', field, false, false), J$.T(6625, {}, 11, false));
                            }
                            J$.P(6681, J$.G(6657, J$.R(6641, 'obj', obj, false, false), J$.R(6649, 'field', field, false, false)), J$.R(6665, 'operator', operator, false, false), J$.R(6673, 'operand', operand, false, false));
                        } catch (J$e) {
                            J$.Ex(6897, J$e);
                        } finally {
                            if (J$.Fr(6905))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6745, 'singleValueOperators', singleValueOperators, false, false, false);
            J$.N(6753, 'arrayOperators', arrayOperators, false, false, false);
            J$.N(6761, 'mapValues', mapValues, false, false, false);
            obj = J$.N(6777, 'obj', J$.T(6769, obj, 12, false), true, false, false);
            addOperator = J$.N(6793, 'addOperator', J$.T(6785, addOperator, 12, false), true, false, false);
            var singleValueOperators = J$.W(4609, 'singleValueOperators', J$.T(4601, {
                $gt: J$.T(4553, 1, 22, false),
                $gte: J$.T(4561, 1, 22, false),
                $lt: J$.T(4569, 1, 22, false),
                $lte: J$.T(4577, 1, 22, false),
                $ne: J$.T(4585, 1, 22, false),
                $not: J$.T(4593, 1, 22, false)
            }, 11, false), singleValueOperators, false, true);
            var arrayOperators = J$.W(4649, 'arrayOperators', J$.T(4641, {
                $nin: J$.T(4617, 1, 22, false),
                $all: J$.T(4625, 1, 22, false),
                $in: J$.T(4633, 1, 22, false)
            }, 11, false), arrayOperators, false, true);
            var mapValues = J$.W(6369, 'mapValues', J$.P(6361, J$.I(typeof module === 'undefined' ? module = J$.R(4657, 'module', undefined, true, true) : module = J$.R(4657, 'module', module, true, true)), 'exports', J$.T(6353, function (parts, callback, prefix) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(6305, arguments.callee, this, arguments);
                            arguments = J$.N(6313, 'arguments', arguments, true, false, false);
                            parts = J$.N(6321, 'parts', parts, true, false, false);
                            callback = J$.N(6329, 'callback', callback, true, false, false);
                            prefix = J$.N(6337, 'prefix', prefix, true, false, false);
                            J$.N(6345, 'result', result, false, false, false);
                            var result = J$.W(4673, 'result', J$.T(4665, {}, 11, false), result, false, false);
                            J$.M(6281, J$.R(4681, 'parts', parts, false, false), 'forEach', false)(J$.T(6273, function (part) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(6225, arguments.callee, this, arguments);
                                            arguments = J$.N(6233, 'arguments', arguments, true, false, false);
                                            part = J$.N(6241, 'part', part, true, false, false);
                                            J$.N(6249, 'field', field, false, false, false);
                                            J$.N(6257, 'mappedValue', mappedValue, false, false, false);
                                            J$.N(6265, 'operands', operands, false, false, false);
                                            if (J$.C(192, J$.B(266, '!==', J$.G(4697, J$.R(4689, 'part', part, false, false), 'field'), J$.T(4705, undefined, 24, false)))) {
                                                if (J$.C(184, J$.B(274, '!==', J$.R(4713, 'prefix', prefix, false, false), J$.T(4721, undefined, 24, false)))) {
                                                    var field = J$.W(4761, 'field', J$.B(290, '+', J$.B(282, '+', J$.R(4729, 'prefix', prefix, false, false), J$.T(4737, '.', 21, false)), J$.G(4753, J$.R(4745, 'part', part, false, false), 'field')), field, false, false);
                                                } else {
                                                    var field = J$.W(4785, 'field', J$.G(4777, J$.R(4769, 'part', part, false, false), 'field'), field, false, false);
                                                }
                                            } else {
                                                var field = J$.W(4801, 'field', J$.R(4793, 'prefix', prefix, false, false), field, false, false);
                                            }
                                            if (J$.C(280, J$.B(298, '===', J$.G(4825, J$.G(4817, J$.R(4809, 'part', part, false, false), 'parts'), 'length'), J$.T(4833, 0, 22, false)))) {
                                                if (J$.C(256, J$.B(306, '===', J$.G(4849, J$.R(4841, 'part', part, false, false), 'operator'), J$.T(4857, undefined, 24, false)))) {
                                                    if (J$.C(200, J$.B(314, 'instanceof', J$.G(4873, J$.R(4865, 'part', part, false, false), 'operand'), J$.I(typeof Array === 'undefined' ? Array = J$.R(4881, 'Array', undefined, true, true) : Array = J$.R(4881, 'Array', Array, true, true))))) {
                                                        J$.P(5009, J$.R(4889, 'result', result, false, false), J$.G(4905, J$.R(4897, 'part', part, false, false), 'field'), J$.M(5001, J$.G(4921, J$.R(4913, 'part', part, false, false), 'operand'), 'map', false)(J$.T(4993, function (v) {
                                                            jalangiLabel0:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(4969, arguments.callee, this, arguments);
                                                                        arguments = J$.N(4977, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(4985, 'v', v, true, false, false);
                                                                        return J$.Rt(4961, J$.F(4953, J$.R(4929, 'callback', callback, false, false), false)(J$.R(4937, 'field', field, false, false), J$.R(4945, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(6801, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(6809))
                                                                            continue jalangiLabel0;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else {
                                                        J$.P(5081, J$.R(5017, 'result', result, false, false), J$.G(5033, J$.R(5025, 'part', part, false, false), 'field'), J$.F(5073, J$.R(5041, 'callback', callback, false, false), false)(J$.R(5049, 'field', field, false, false), J$.G(5065, J$.R(5057, 'part', part, false, false), 'operand')));
                                                    }
                                                } else {
                                                    if (J$.C(248, J$.B(322, 'in', J$.G(5097, J$.R(5089, 'part', part, false, false), 'operator'), J$.R(5105, 'singleValueOperators', singleValueOperators, false, true)))) {
                                                        if (J$.C(208, J$.B(330, '!==', J$.G(5121, J$.R(5113, 'part', part, false, false), 'field'), J$.T(5129, undefined, 24, false)))) {
                                                            J$.F(5225, J$.R(5137, 'addOperator', addOperator, false, true), false)(J$.R(5145, 'result', result, false, false), J$.G(5161, J$.R(5153, 'part', part, false, false), 'field'), J$.G(5177, J$.R(5169, 'part', part, false, false), 'operator'), J$.F(5217, J$.R(5185, 'callback', callback, false, false), false)(J$.R(5193, 'field', field, false, false), J$.G(5209, J$.R(5201, 'part', part, false, false), 'operand')));
                                                        } else {
                                                            J$.P(5297, J$.R(5233, 'result', result, false, false), J$.G(5249, J$.R(5241, 'part', part, false, false), 'operator'), J$.F(5289, J$.R(5257, 'callback', callback, false, false), false)(J$.R(5265, 'field', field, false, false), J$.G(5281, J$.R(5273, 'part', part, false, false), 'operand')));
                                                        }
                                                    } else if (J$.C(240, J$.B(338, 'in', J$.G(5313, J$.R(5305, 'part', part, false, false), 'operator'), J$.R(5321, 'arrayOperators', arrayOperators, false, true)))) {
                                                        J$.F(5481, J$.R(5329, 'addOperator', addOperator, false, true), false)(J$.R(5337, 'result', result, false, false), J$.G(5353, J$.R(5345, 'part', part, false, false), 'field'), J$.G(5369, J$.R(5361, 'part', part, false, false), 'operator'), J$.M(5473, J$.G(5385, J$.R(5377, 'part', part, false, false), 'operand'), 'map', false)(J$.T(5465, function (v) {
                                                            jalangiLabel1:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(5441, arguments.callee, this, arguments);
                                                                        arguments = J$.N(5449, 'arguments', arguments, true, false, false);
                                                                        v = J$.N(5457, 'v', v, true, false, false);
                                                                        return J$.Rt(5433, J$.F(5425, J$.R(5393, 'callback', callback, false, false), false)(J$.G(5409, J$.R(5401, 'part', part, false, false), 'field'), J$.R(5417, 'v', v, false, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(6817, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(6825))
                                                                            continue jalangiLabel1;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false)));
                                                    } else if (J$.C(232, J$.B(346, '===', J$.G(5497, J$.R(5489, 'part', part, false, false), 'operator'), J$.T(5505, '$text', 21, false)))) {
                                                        J$.P(5577, J$.R(5513, 'result', result, false, false), '$text', J$.T(5569, { $search: J$.F(5561, J$.R(5521, 'callback', callback, false, false), false)(J$.R(5529, 'field', field, false, false), J$.G(5553, J$.G(5545, J$.R(5537, 'part', part, false, false), 'operand'), '$search')) }, 11, false));
                                                        if (J$.C(216, J$.B(354, '!==', J$.G(5601, J$.G(5593, J$.R(5585, 'part', part, false, false), 'operand'), '$language'), J$.T(5609, undefined, 24, false)))) {
                                                            J$.P(5657, J$.G(5625, J$.R(5617, 'result', result, false, false), '$text'), '$language', J$.G(5649, J$.G(5641, J$.R(5633, 'part', part, false, false), 'operand'), '$language'));
                                                        }
                                                    } else {
                                                        if (J$.C(224, J$.B(362, '!==', J$.G(5673, J$.R(5665, 'part', part, false, false), 'field'), J$.T(5681, undefined, 24, false)))) {
                                                            J$.F(5753, J$.R(5689, 'addOperator', addOperator, false, true), false)(J$.R(5697, 'result', result, false, false), J$.G(5713, J$.R(5705, 'part', part, false, false), 'field'), J$.G(5729, J$.R(5721, 'part', part, false, false), 'operator'), J$.G(5745, J$.R(5737, 'part', part, false, false), 'operand'));
                                                        } else {
                                                            J$.P(5801, J$.R(5761, 'result', result, false, false), J$.G(5777, J$.R(5769, 'part', part, false, false), 'operator'), J$.G(5793, J$.R(5785, 'part', part, false, false), 'operand'));
                                                        }
                                                    }
                                                }
                                            } else {
                                                if (J$.C(272, J$.B(370, '===', J$.G(5817, J$.R(5809, 'part', part, false, false), 'operator'), J$.T(5825, '$elemMatch', 21, false)))) {
                                                    var mappedValue = J$.W(5881, 'mappedValue', J$.F(5873, J$.R(5833, 'mapValues', mapValues, false, true), false)(J$.G(5849, J$.R(5841, 'part', part, false, false), 'parts'), J$.R(5857, 'callback', callback, false, false), J$.R(5865, 'field', field, false, false)), mappedValue, false, false);
                                                    J$.F(5945, J$.R(5889, 'addOperator', addOperator, false, true), false)(J$.R(5897, 'result', result, false, false), J$.G(5913, J$.R(5905, 'part', part, false, false), 'field'), J$.G(5929, J$.R(5921, 'part', part, false, false), 'operator'), J$.R(5937, 'mappedValue', mappedValue, false, false));
                                                } else if (J$.C(264, J$.B(378, '===', J$.G(5961, J$.R(5953, 'part', part, false, false), 'operator'), J$.T(5969, '$not', 21, false)))) {
                                                    J$.P(6049, J$.R(5977, 'result', result, false, false), J$.G(5993, J$.R(5985, 'part', part, false, false), 'operator'), J$.F(6041, J$.R(6001, 'mapValues', mapValues, false, true), false)(J$.G(6017, J$.R(6009, 'part', part, false, false), 'parts'), J$.R(6025, 'callback', callback, false, false), J$.R(6033, 'field', field, false, false)));
                                                } else {
                                                    var operands = J$.W(6065, 'operands', J$.T(6057, [], 10, false), operands, false, false);
                                                    J$.M(6177, J$.G(6081, J$.R(6073, 'part', part, false, false), 'parts'), 'forEach', false)(J$.T(6169, function (innerPart) {
                                                        jalangiLabel2:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(6145, arguments.callee, this, arguments);
                                                                    arguments = J$.N(6153, 'arguments', arguments, true, false, false);
                                                                    innerPart = J$.N(6161, 'innerPart', innerPart, true, false, false);
                                                                    J$.M(6137, J$.R(6089, 'operands', operands, false, false), 'push', false)(J$.F(6129, J$.R(6097, 'mapValues', mapValues, false, true), false)(J$.G(6113, J$.R(6105, 'innerPart', innerPart, false, false), 'parts'), J$.R(6121, 'callback', callback, false, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(6833, J$e);
                                                                } finally {
                                                                    if (J$.Fr(6841))
                                                                        continue jalangiLabel2;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(6217, J$.R(6185, 'result', result, false, false), J$.G(6201, J$.R(6193, 'part', part, false, false), 'operator'), J$.R(6209, 'operands', operands, false, false));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(6849, J$e);
                                        } finally {
                                            if (J$.Fr(6857))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(6297, J$.R(6289, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6865, J$e);
                        } finally {
                            if (J$.Fr(6873))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), mapValues, false, true);
        } catch (J$e) {
            J$.Ex(6913, J$e);
        } finally {
            if (J$.Sr(6921))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

