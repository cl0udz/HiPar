J$.noInstrEval = false;
jalangiLabel22:
    while (true) {
        try {
            J$.Se(11601, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/node_modules/mongo-parse/matches.js');
            function partMatches(part, document) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(10089, arguments.callee, this, arguments);
                            arguments = J$.N(10097, 'arguments', arguments, true, false, false);
                            part = J$.N(10105, 'part', part, true, false, false);
                            document = J$.N(10113, 'document', document, true, false, false);
                            J$.N(10121, 'pointers', pointers, false, false, false);
                            J$.N(10129, 'p', p, false, false, false);
                            J$.N(10137, 'pointer', pointer, false, false, false);
                            J$.N(10145, 'test', test, false, false, false);
                            J$.N(10153, 'documentField', documentField, false, false, false);
                            J$.N(10161, 'n', n, false, false, false);
                            J$.N(10169, 'anyMatched', anyMatched, false, false, false);
                            J$.N(10177, 'documentToMatch', documentToMatch, false, false, false);
                            J$.N(10185, 'objectContext', objectContext, false, false, false);
                            var pointers = J$.W(8809, 'pointers', J$.F(8801, J$.R(8769, 'DotNotationPointers', DotNotationPointers, false, true), false)(J$.R(8777, 'document', document, false, false), J$.G(8793, J$.R(8785, 'part', part, false, false), 'field')), pointers, false, false);
                            for (var p = J$.W(8825, 'p', J$.T(8817, 0, 22, false), p, false, false); J$.C(584, J$.B(714, '<', J$.R(8833, 'p', p, false, false), J$.G(8849, J$.R(8841, 'pointers', pointers, false, false), 'length'))); J$.B(738, '-', p = J$.W(8865, 'p', J$.B(730, '+', J$.U(722, '+', J$.R(8857, 'p', p, false, false)), 1), p, false, false), 1)) {
                                var pointer = J$.W(8897, 'pointer', J$.G(8889, J$.R(8873, 'pointers', pointers, false, false), J$.R(8881, 'p', p, false, false)), pointer, false, false);
                                if (J$.C(576, J$.B(746, '===', J$.G(8913, J$.R(8905, 'part', part, false, false), 'operator'), J$.T(8921, undefined, 24, false)))) {
                                    if (J$.C(392, J$.U(754, '!', J$.F(8977, J$.R(8929, 'valueTest', valueTest, false, true), false)(J$.G(8945, J$.R(8937, 'pointer', pointer, false, false), 'val'), J$.G(8961, J$.R(8953, 'part', part, false, false), 'operand'), J$.R(8969, 'mongoEqual', mongoEqual, false, true))))) {
                                        continue;
                                    }
                                } else if (J$.C(568, J$.B(762, 'in', J$.G(8993, J$.R(8985, 'part', part, false, false), 'operator'), J$.R(9001, 'simpleComparators', simpleComparators, false, true)))) {
                                    var test = J$.W(9089, 'test', J$.F(9081, J$.R(9009, 'valueTest', valueTest, false, true), false)(J$.G(9025, J$.R(9017, 'pointer', pointer, false, false), 'val'), J$.G(9041, J$.R(9033, 'part', part, false, false), 'operand'), J$.G(9073, J$.R(9049, 'simpleComparators', simpleComparators, false, true), J$.G(9065, J$.R(9057, 'part', part, false, false), 'operator'))), test, false, false);
                                    if (J$.C(400, J$.U(770, '!', J$.R(9097, 'test', test, false, false))))
                                        continue;
                                } else if (J$.C(560, J$.B(778, 'in', J$.G(9113, J$.R(9105, 'part', part, false, false), 'operator'), J$.R(9121, 'compoundOperatorComparators', compoundOperatorComparators, false, true)))) {
                                    if (J$.C(408, J$.U(786, '!', J$.M(9177, J$.R(9129, 'compoundOperatorComparators', compoundOperatorComparators, false, true), J$.G(9145, J$.R(9137, 'part', part, false, false), 'operator'), false)(J$.R(9153, 'document', document, false, false), J$.G(9169, J$.R(9161, 'part', part, false, false), 'parts'))))) {
                                        continue;
                                    }
                                } else if (J$.C(552, J$.B(794, '===', J$.G(9193, J$.R(9185, 'part', part, false, false), 'operator'), J$.T(9201, '$not', 21, false)))) {
                                    if (J$.C(432, J$.B(802, '>', J$.G(9225, J$.G(9217, J$.R(9209, 'part', part, false, false), 'parts'), 'length'), J$.T(9233, 0, 22, false)))) {
                                        if (J$.C(416, J$.F(9273, J$.R(9241, 'matches', matches, false, true), false)(J$.G(9257, J$.R(9249, 'part', part, false, false), 'parts'), J$.R(9265, 'document', document, false, false)))) {
                                            continue;
                                        }
                                    } else {
                                        if (J$.C(424, J$.B(810, '===', J$.F(9329, J$.R(9281, 'valueTest', valueTest, false, true), false)(J$.G(9297, J$.R(9289, 'pointer', pointer, false, false), 'val'), J$.G(9313, J$.R(9305, 'part', part, false, false), 'operand'), J$.R(9321, 'mongoEqual', mongoEqual, false, true)), J$.T(9337, true, 23, false))))
                                            continue;
                                    }
                                } else if (J$.C(544, J$.B(818, '===', J$.G(9353, J$.R(9345, 'part', part, false, false), 'operator'), J$.T(9361, '$size', 21, false)))) {
                                    return J$.Rt(9433, J$.C(440, J$.B(826, 'instanceof', J$.G(9377, J$.R(9369, 'pointer', pointer, false, false), 'val'), J$.I(typeof Array === 'undefined' ? Array = J$.R(9385, 'Array', undefined, true, true) : Array = J$.R(9385, 'Array', Array, true, true)))) ? J$.B(834, '===', J$.G(9409, J$.G(9401, J$.R(9393, 'pointer', pointer, false, false), 'val'), 'length'), J$.G(9425, J$.R(9417, 'part', part, false, false), 'operand')) : J$._());
                                } else if (J$.C(536, J$.B(842, '===', J$.G(9449, J$.R(9441, 'part', part, false, false), 'operator'), J$.T(9457, '$elemMatch', 21, false)))) {
                                    var documentField = J$.W(9481, 'documentField', J$.G(9473, J$.R(9465, 'pointer', pointer, false, false), 'val'), documentField, false, false);
                                    if (J$.C(448, J$.B(850, '===', J$.R(9489, 'documentField', documentField, false, false), J$.T(9497, undefined, 24, false))))
                                        continue;
                                    if (J$.C(464, J$.G(9513, J$.R(9505, 'part', part, false, false), 'implicitField'))) {
                                        for (var n = J$.W(9529, 'n', J$.T(9521, 0, 22, false), n, false, false); J$.C(456, J$.B(858, '<', J$.R(9537, 'n', n, false, false), J$.G(9561, J$.G(9553, J$.R(9545, 'part', part, false, false), 'parts'), 'length'))); J$.B(882, '-', n = J$.W(9577, 'n', J$.B(874, '+', J$.U(866, '+', J$.R(9569, 'n', n, false, false)), 1), n, false, false), 1)) {
                                            J$.P(9625, J$.G(9609, J$.G(9593, J$.R(9585, 'part', part, false, false), 'parts'), J$.R(9601, 'n', n, false, false)), 'field', J$.T(9617, 'x', 21, false));
                                        }
                                    }
                                    var anyMatched = J$.W(9641, 'anyMatched', J$.T(9633, false, 23, false), anyMatched, false, false);
                                    for (var n = J$.W(9657, 'n', J$.T(9649, 0, 22, false), n, false, false); J$.C(488, J$.B(890, '<', J$.R(9665, 'n', n, false, false), J$.G(9681, J$.R(9673, 'documentField', documentField, false, false), 'length'))); J$.B(914, '-', n = J$.W(9697, 'n', J$.B(906, '+', J$.U(898, '+', J$.R(9689, 'n', n, false, false)), 1), n, false, false), 1)) {
                                        if (J$.C(472, J$.G(9713, J$.R(9705, 'part', part, false, false), 'implicitField'))) {
                                            var documentToMatch = J$.W(9753, 'documentToMatch', J$.T(9745, { x: J$.G(9737, J$.R(9721, 'documentField', documentField, false, false), J$.R(9729, 'n', n, false, false)) }, 11, false), documentToMatch, false, false);
                                        } else {
                                            var documentToMatch = J$.W(9785, 'documentToMatch', J$.G(9777, J$.R(9761, 'documentField', documentField, false, false), J$.R(9769, 'n', n, false, false)), documentToMatch, false, false);
                                        }
                                        if (J$.C(480, J$.F(9825, J$.R(9793, 'matches', matches, false, true), false)(J$.G(9809, J$.R(9801, 'part', part, false, false), 'parts'), J$.R(9817, 'documentToMatch', documentToMatch, false, false)))) {
                                            anyMatched = J$.W(9841, 'anyMatched', J$.T(9833, true, 23, false), anyMatched, false, false);
                                            break;
                                        }
                                    }
                                    if (J$.C(496, J$.U(922, '!', J$.R(9849, 'anyMatched', anyMatched, false, false))))
                                        continue;
                                } else if (J$.C(528, J$.B(930, '===', J$.G(9865, J$.R(9857, 'part', part, false, false), 'operator'), J$.T(9873, '$where', 21, false)))) {
                                    if (J$.C(504, J$.B(938, '!==', J$.G(9889, J$.R(9881, 'part', part, false, false), 'field'), J$.T(9897, undefined, 24, false)))) {
                                        var objectContext = J$.W(9921, 'objectContext', J$.G(9913, J$.R(9905, 'pointer', pointer, false, false), 'val'), objectContext, false, false);
                                    } else {
                                        var objectContext = J$.W(9937, 'objectContext', J$.R(9929, 'document', document, false, false), objectContext, false, false);
                                    }
                                    if (J$.C(512, J$.U(946, '!', J$.M(9969, J$.G(9953, J$.R(9945, 'part', part, false, false), 'operand'), 'call', false)(J$.R(9961, 'objectContext', objectContext, false, false)))))
                                        continue;
                                } else if (J$.C(520, J$.B(954, '===', J$.G(9985, J$.R(9977, 'part', part, false, false), 'operator'), J$.T(9993, '$comment', 21, false)))) {
                                    return J$.Rt(10009, J$.T(10001, true, 23, false));
                                } else {
                                    throw J$.F(10049, J$.I(typeof Error === 'undefined' ? Error = J$.R(10017, 'Error', undefined, true, true) : Error = J$.R(10017, 'Error', Error, true, true)), true)(J$.B(962, '+', J$.T(10025, 'Unsupported operator: ', 21, false), J$.G(10041, J$.I(typeof parts === 'undefined' ? parts = J$.R(10033, 'parts', undefined, true, true) : parts = J$.R(10033, 'parts', parts, true, true)), 'operator')));
                                }
                                return J$.Rt(10065, J$.T(10057, true, 23, false));
                            }
                            return J$.Rt(10081, J$.T(10073, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(11961, J$e);
                        } finally {
                            if (J$.Fr(11969))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function valueTest(documentValue, queryOperand, compare) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(10473, arguments.callee, this, arguments);
                            arguments = J$.N(10481, 'arguments', arguments, true, false, false);
                            documentValue = J$.N(10489, 'documentValue', documentValue, true, false, false);
                            queryOperand = J$.N(10497, 'queryOperand', queryOperand, true, false, false);
                            compare = J$.N(10505, 'compare', compare, true, false, false);
                            J$.N(10513, 'test', test, false, false, false);
                            if (J$.C(624, J$.B(970, 'instanceof', J$.R(10193, 'documentValue', documentValue, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(10201, 'Array', undefined, true, true) : Array = J$.R(10201, 'Array', Array, true, true))))) {
                                if (J$.C(616, J$.B(978, 'instanceof', J$.R(10209, 'queryOperand', queryOperand, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(10217, 'Array', undefined, true, true) : Array = J$.R(10217, 'Array', Array, true, true))))) {
                                    if (J$.C(592, J$.U(986, '!', J$.F(10249, J$.R(10225, 'compare', compare, false, false), false)(J$.R(10233, 'documentValue', documentValue, false, false), J$.R(10241, 'queryOperand', queryOperand, false, false)))))
                                        return J$.Rt(10265, J$.T(10257, false, 23, false));
                                } else {
                                    var test = J$.W(10385, 'test', J$.M(10377, J$.R(10273, 'documentValue', documentValue, false, false), 'reduce', false)(J$.T(10361, function (last, cur) {
                                        jalangiLabel17:
                                            while (true) {
                                                try {
                                                    J$.Fe(10329, arguments.callee, this, arguments);
                                                    arguments = J$.N(10337, 'arguments', arguments, true, false, false);
                                                    last = J$.N(10345, 'last', last, true, false, false);
                                                    cur = J$.N(10353, 'cur', cur, true, false, false);
                                                    return J$.Rt(10321, J$.C(600, J$.R(10281, 'last', last, false, false)) ? J$._() : J$.F(10313, J$.R(10289, 'compare', compare, false, false), false)(J$.R(10297, 'cur', cur, false, false), J$.R(10305, 'queryOperand', queryOperand, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(11977, J$e);
                                                } finally {
                                                    if (J$.Fr(11985))
                                                        continue jalangiLabel17;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false), J$.T(10369, false, 23, false)), test, false, false);
                                    if (J$.C(608, J$.U(994, '!', J$.R(10393, 'test', test, false, false))))
                                        return J$.Rt(10409, J$.T(10401, false, 23, false));
                                }
                            } else {
                                return J$.Rt(10449, J$.F(10441, J$.R(10417, 'compare', compare, false, false), false)(J$.R(10425, 'documentValue', documentValue, false, false), J$.R(10433, 'queryOperand', queryOperand, false, false)));
                            }
                            return J$.Rt(10465, J$.T(10457, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(11993, J$e);
                        } finally {
                            if (J$.Fr(12001))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mongoEqual(documentValue, queryOperand) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(11281, arguments.callee, this, arguments);
                            arguments = J$.N(11289, 'arguments', arguments, true, false, false);
                            documentValue = J$.N(11297, 'documentValue', documentValue, true, false, false);
                            queryOperand = J$.N(11305, 'queryOperand', queryOperand, true, false, false);
                            J$.N(11313, 'aKeys', aKeys, false, false, false);
                            J$.N(11321, 'bKeys', bKeys, false, false, false);
                            J$.N(11329, 'n', n, false, false, false);
                            J$.N(11337, 'key', key, false, false, false);
                            J$.N(11345, 'aVal', aVal, false, false, false);
                            J$.N(11353, 'bVal', bVal, false, false, false);
                            if (J$.C(720, J$.B(1002, 'instanceof', J$.R(10521, 'documentValue', documentValue, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(10529, 'Array', undefined, true, true) : Array = J$.R(10529, 'Array', Array, true, true))))) {
                                if (J$.C(632, J$.U(1018, '!', J$.B(1010, 'instanceof', J$.R(10537, 'queryOperand', queryOperand, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(10545, 'Array', undefined, true, true) : Array = J$.R(10545, 'Array', Array, true, true))))))
                                    return J$.Rt(10561, J$.T(10553, false, 23, false));
                                if (J$.C(648, J$.B(1026, '!==', J$.G(10577, J$.R(10569, 'documentValue', documentValue, false, false), 'length'), J$.G(10593, J$.R(10585, 'queryOperand', queryOperand, false, false), 'length')))) {
                                    return J$.Rt(10609, J$.T(10601, false, 23, false));
                                } else {
                                    return J$.Rt(10753, J$.M(10745, J$.R(10617, 'documentValue', documentValue, false, false), 'reduce', false)(J$.T(10729, function (previousValue, currentValue, index) {
                                        jalangiLabel19:
                                            while (true) {
                                                try {
                                                    J$.Fe(10689, arguments.callee, this, arguments);
                                                    arguments = J$.N(10697, 'arguments', arguments, true, false, false);
                                                    previousValue = J$.N(10705, 'previousValue', previousValue, true, false, false);
                                                    currentValue = J$.N(10713, 'currentValue', currentValue, true, false, false);
                                                    index = J$.N(10721, 'index', index, true, false, false);
                                                    return J$.Rt(10681, J$.C(640, J$.R(10625, 'previousValue', previousValue, false, false)) ? J$.F(10673, J$.R(10633, 'mongoEqual', mongoEqual, false, true), false)(J$.R(10641, 'currentValue', currentValue, false, false), J$.G(10665, J$.R(10649, 'queryOperand', queryOperand, false, false), J$.R(10657, 'index', index, false, false))) : J$._());
                                                } catch (J$e) {
                                                    J$.Ex(12009, J$e);
                                                } finally {
                                                    if (J$.Fr(12017))
                                                        continue jalangiLabel19;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false), J$.T(10737, true, 23, false)));
                                }
                            } else if (J$.C(712, J$.B(1034, 'instanceof', J$.R(10761, 'documentValue', documentValue, false, false), J$.I(typeof Object === 'undefined' ? Object = J$.R(10769, 'Object', undefined, true, true) : Object = J$.R(10769, 'Object', Object, true, true))))) {
                                if (J$.C(656, J$.U(1050, '!', J$.B(1042, 'instanceof', J$.R(10777, 'queryOperand', queryOperand, false, false), J$.I(typeof Object === 'undefined' ? Object = J$.R(10785, 'Object', undefined, true, true) : Object = J$.R(10785, 'Object', Object, true, true))))))
                                    return J$.Rt(10801, J$.T(10793, false, 23, false));
                                var aKeys = J$.W(10833, 'aKeys', J$.M(10825, J$.I(typeof Object === 'undefined' ? Object = J$.R(10809, 'Object', undefined, true, true) : Object = J$.R(10809, 'Object', Object, true, true)), 'keys', false)(J$.R(10817, 'documentValue', documentValue, false, false)), aKeys, false, false);
                                var bKeys = J$.W(10865, 'bKeys', J$.M(10857, J$.I(typeof Object === 'undefined' ? Object = J$.R(10841, 'Object', undefined, true, true) : Object = J$.R(10841, 'Object', Object, true, true)), 'keys', false)(J$.R(10849, 'queryOperand', queryOperand, false, false)), bKeys, false, false);
                                if (J$.C(688, J$.B(1058, '!==', J$.G(10881, J$.R(10873, 'aKeys', aKeys, false, false), 'length'), J$.G(10897, J$.R(10889, 'bKeys', bKeys, false, false), 'length')))) {
                                    return J$.Rt(10913, J$.T(10905, false, 23, false));
                                } else {
                                    for (var n = J$.W(10929, 'n', J$.T(10921, 0, 22, false), n, false, false); J$.C(680, J$.B(1066, '<', J$.R(10937, 'n', n, false, false), J$.G(10953, J$.R(10945, 'aKeys', aKeys, false, false), 'length'))); J$.B(1090, '-', n = J$.W(10969, 'n', J$.B(1082, '+', J$.U(1074, '+', J$.R(10961, 'n', n, false, false)), 1), n, false, false), 1)) {
                                        if (J$.C(664, J$.B(1098, '!==', J$.G(10993, J$.R(10977, 'aKeys', aKeys, false, false), J$.R(10985, 'n', n, false, false)), J$.G(11017, J$.R(11001, 'bKeys', bKeys, false, false), J$.R(11009, 'n', n, false, false)))))
                                            return J$.Rt(11033, J$.T(11025, false, 23, false));
                                        var key = J$.W(11065, 'key', J$.G(11057, J$.R(11041, 'aKeys', aKeys, false, false), J$.R(11049, 'n', n, false, false)), key, false, false);
                                        var aVal = J$.W(11097, 'aVal', J$.G(11089, J$.R(11073, 'documentValue', documentValue, false, false), J$.R(11081, 'key', key, false, false)), aVal, false, false);
                                        var bVal = J$.W(11129, 'bVal', J$.G(11121, J$.R(11105, 'queryOperand', queryOperand, false, false), J$.R(11113, 'key', key, false, false)), bVal, false, false);
                                        if (J$.C(672, J$.U(1106, '!', J$.F(11161, J$.R(11137, 'mongoEqual', mongoEqual, false, true), false)(J$.R(11145, 'aVal', aVal, false, false), J$.R(11153, 'bVal', bVal, false, false))))) {
                                            return J$.Rt(11177, J$.T(11169, false, 23, false));
                                        }
                                    }
                                    return J$.Rt(11193, J$.T(11185, true, 23, false));
                                }
                            } else {
                                if (J$.C(704, J$.B(1114, '===', J$.R(11201, 'queryOperand', queryOperand, false, false), J$.T(11209, null, 25, false)))) {
                                    return J$.Rt(11249, J$.C(696, J$.B(1122, '===', J$.R(11217, 'documentValue', documentValue, false, false), J$.T(11225, undefined, 24, false))) ? J$._() : J$.B(1130, '===', J$.R(11233, 'documentValue', documentValue, false, false), J$.T(11241, null, 25, false)));
                                } else {
                                    return J$.Rt(11273, J$.B(1138, '===', J$.R(11257, 'documentValue', documentValue, false, false), J$.R(11265, 'queryOperand', queryOperand, false, false)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(12025, J$e);
                        } finally {
                            if (J$.Fr(12033))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateDocumentObject(document) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(11569, arguments.callee, this, arguments);
                            arguments = J$.N(11577, 'arguments', arguments, true, false, false);
                            document = J$.N(11585, 'document', document, true, false, false);
                            J$.N(11593, 'key', key, false, false, false);
                            for (var key in J$.H(11553, J$.R(11361, 'document', document, false, false))) {
                                J$.N(11561, 'key', key, false, true, false);
                                {
                                    {
                                        if (J$.C(744, J$.B(1146, '===', J$.G(11385, J$.R(11369, 'key', key, false, false), J$.T(11377, 0, 22, false)), J$.T(11393, '$', 21, false))))
                                            throw J$.F(11417, J$.I(typeof Error === 'undefined' ? Error = J$.R(11401, 'Error', undefined, true, true) : Error = J$.R(11401, 'Error', Error, true, true)), true)(J$.T(11409, 'Field names can\'t start with $', 21, false));
                                        else if (J$.C(736, J$.B(1162, '!==', J$.M(11441, J$.R(11425, 'key', key, false, false), 'indexOf', false)(J$.T(11433, '.', 21, false)), J$.U(1154, '-', J$.T(11449, 1, 22, false)))))
                                            throw J$.F(11473, J$.I(typeof Error === 'undefined' ? Error = J$.R(11457, 'Error', undefined, true, true) : Error = J$.R(11457, 'Error', Error, true, true)), true)(J$.T(11465, 'Field names can\'t contain .', 21, false));
                                        else if (J$.C(728, J$.B(1170, 'instanceof', J$.G(11497, J$.R(11481, 'document', document, false, false), J$.R(11489, 'key', key, false, false)), J$.I(typeof Object === 'undefined' ? Object = J$.R(11505, 'Object', undefined, true, true) : Object = J$.R(11505, 'Object', Object, true, true))))) {
                                            J$.F(11545, J$.R(11513, 'validateDocumentObject', validateDocumentObject, false, true), false)(J$.G(11537, J$.R(11521, 'document', document, false, false), J$.R(11529, 'key', key, false, false)));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(12041, J$e);
                        } finally {
                            if (J$.Fr(12049))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(11609, 'DotNotationPointers', DotNotationPointers, false, false, false);
            J$.N(11617, 'simpleComparators', simpleComparators, false, false, false);
            J$.N(11625, 'compoundOperatorComparators', compoundOperatorComparators, false, false, false);
            J$.N(11633, 'matches', matches, false, false, false);
            partMatches = J$.N(11649, 'partMatches', J$.T(11641, partMatches, 12, false), true, false, false);
            valueTest = J$.N(11665, 'valueTest', J$.T(11657, valueTest, 12, false), true, false, false);
            mongoEqual = J$.N(11681, 'mongoEqual', J$.T(11673, mongoEqual, 12, false), true, false, false);
            validateDocumentObject = J$.N(11697, 'validateDocumentObject', J$.T(11689, validateDocumentObject, 12, false), true, false, false);
            var DotNotationPointers = J$.W(6953, 'DotNotationPointers', J$.F(6945, J$.I(typeof require === 'undefined' ? require = J$.R(6929, 'require', undefined, true, true) : require = J$.R(6929, 'require', require, true, true)), false)(J$.T(6937, './DotNotationPointers', 21, false)), DotNotationPointers, false, true);
            var simpleComparators = J$.W(7913, 'simpleComparators', J$.T(7905, {
                $gt: J$.T(7017, function (a, b) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(6985, arguments.callee, this, arguments);
                                arguments = J$.N(6993, 'arguments', arguments, true, false, false);
                                a = J$.N(7001, 'a', a, true, false, false);
                                b = J$.N(7009, 'b', b, true, false, false);
                                return J$.Rt(6977, J$.B(418, '>', J$.R(6961, 'a', a, false, false), J$.R(6969, 'b', b, false, false)));
                            } catch (J$e) {
                                J$.Ex(11705, J$e);
                            } finally {
                                if (J$.Fr(11713))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $gte: J$.T(7081, function (a, b) {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.Fe(7049, arguments.callee, this, arguments);
                                arguments = J$.N(7057, 'arguments', arguments, true, false, false);
                                a = J$.N(7065, 'a', a, true, false, false);
                                b = J$.N(7073, 'b', b, true, false, false);
                                return J$.Rt(7041, J$.B(426, '>=', J$.R(7025, 'a', a, false, false), J$.R(7033, 'b', b, false, false)));
                            } catch (J$e) {
                                J$.Ex(11721, J$e);
                            } finally {
                                if (J$.Fr(11729))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $lt: J$.T(7145, function (a, b) {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(7113, arguments.callee, this, arguments);
                                arguments = J$.N(7121, 'arguments', arguments, true, false, false);
                                a = J$.N(7129, 'a', a, true, false, false);
                                b = J$.N(7137, 'b', b, true, false, false);
                                return J$.Rt(7105, J$.B(434, '<', J$.R(7089, 'a', a, false, false), J$.R(7097, 'b', b, false, false)));
                            } catch (J$e) {
                                J$.Ex(11737, J$e);
                            } finally {
                                if (J$.Fr(11745))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $lte: J$.T(7209, function (a, b) {
                    jalangiLabel3:
                        while (true) {
                            try {
                                J$.Fe(7177, arguments.callee, this, arguments);
                                arguments = J$.N(7185, 'arguments', arguments, true, false, false);
                                a = J$.N(7193, 'a', a, true, false, false);
                                b = J$.N(7201, 'b', b, true, false, false);
                                return J$.Rt(7169, J$.B(442, '<=', J$.R(7153, 'a', a, false, false), J$.R(7161, 'b', b, false, false)));
                            } catch (J$e) {
                                J$.Ex(11753, J$e);
                            } finally {
                                if (J$.Fr(11761))
                                    continue jalangiLabel3;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $ne: J$.T(7273, function (a, b) {
                    jalangiLabel4:
                        while (true) {
                            try {
                                J$.Fe(7241, arguments.callee, this, arguments);
                                arguments = J$.N(7249, 'arguments', arguments, true, false, false);
                                a = J$.N(7257, 'a', a, true, false, false);
                                b = J$.N(7265, 'b', b, true, false, false);
                                return J$.Rt(7233, J$.B(450, '!==', J$.R(7217, 'a', a, false, false), J$.R(7225, 'b', b, false, false)));
                            } catch (J$e) {
                                J$.Ex(11769, J$e);
                            } finally {
                                if (J$.Fr(11777))
                                    continue jalangiLabel4;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $mod: J$.T(7377, function (docValue, operand) {
                    jalangiLabel5:
                        while (true) {
                            try {
                                J$.Fe(7345, arguments.callee, this, arguments);
                                arguments = J$.N(7353, 'arguments', arguments, true, false, false);
                                docValue = J$.N(7361, 'docValue', docValue, true, false, false);
                                operand = J$.N(7369, 'operand', operand, true, false, false);
                                return J$.Rt(7337, J$.B(466, '===', J$.B(458, '%', J$.R(7281, 'docValue', docValue, false, false), J$.G(7305, J$.R(7289, 'operand', operand, false, false), J$.T(7297, 0, 22, false))), J$.G(7329, J$.R(7313, 'operand', operand, false, false), J$.T(7321, 1, 22, false))));
                            } catch (J$e) {
                                J$.Ex(11785, J$e);
                            } finally {
                                if (J$.Fr(11793))
                                    continue jalangiLabel5;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $regex: J$.T(7489, function (docValue, operand) {
                    jalangiLabel6:
                        while (true) {
                            try {
                                J$.Fe(7457, arguments.callee, this, arguments);
                                arguments = J$.N(7465, 'arguments', arguments, true, false, false);
                                docValue = J$.N(7473, 'docValue', docValue, true, false, false);
                                operand = J$.N(7481, 'operand', operand, true, false, false);
                                return J$.Rt(7449, J$.C(304, J$.B(482, '===', J$.U(474, 'typeof', J$.R(7385, 'docValue', docValue, false, false)), J$.T(7393, 'string', 21, false))) ? J$.B(490, '!==', J$.M(7433, J$.R(7401, 'docValue', docValue, false, false), 'match', false)(J$.F(7425, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(7409, 'RegExp', undefined, true, true) : RegExp = J$.R(7409, 'RegExp', RegExp, true, true)), false)(J$.R(7417, 'operand', operand, false, false))), J$.T(7441, null, 25, false)) : J$._());
                            } catch (J$e) {
                                J$.Ex(11801, J$e);
                            } finally {
                                if (J$.Fr(11809))
                                    continue jalangiLabel6;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $exists: J$.T(7561, function (docValue, operand) {
                    jalangiLabel7:
                        while (true) {
                            try {
                                J$.Fe(7529, arguments.callee, this, arguments);
                                arguments = J$.N(7537, 'arguments', arguments, true, false, false);
                                docValue = J$.N(7545, 'docValue', docValue, true, false, false);
                                operand = J$.N(7553, 'operand', operand, true, false, false);
                                return J$.Rt(7521, J$.B(506, '===', J$.B(498, '!==', J$.R(7497, 'docValue', docValue, false, false), J$.T(7505, undefined, 24, false)), J$.R(7513, 'operand', operand, false, false)));
                            } catch (J$e) {
                                J$.Ex(11817, J$e);
                            } finally {
                                if (J$.Fr(11825))
                                    continue jalangiLabel7;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $in: J$.T(7641, function (docVal, operand) {
                    jalangiLabel8:
                        while (true) {
                            try {
                                J$.Fe(7609, arguments.callee, this, arguments);
                                arguments = J$.N(7617, 'arguments', arguments, true, false, false);
                                docVal = J$.N(7625, 'docVal', docVal, true, false, false);
                                operand = J$.N(7633, 'operand', operand, true, false, false);
                                return J$.Rt(7601, J$.B(522, '!==', J$.M(7585, J$.R(7569, 'operand', operand, false, false), 'indexOf', false)(J$.R(7577, 'docVal', docVal, false, false)), J$.U(514, '-', J$.T(7593, 1, 22, false))));
                            } catch (J$e) {
                                J$.Ex(11833, J$e);
                            } finally {
                                if (J$.Fr(11841))
                                    continue jalangiLabel8;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $nin: J$.T(7721, function (docVal, operand) {
                    jalangiLabel9:
                        while (true) {
                            try {
                                J$.Fe(7689, arguments.callee, this, arguments);
                                arguments = J$.N(7697, 'arguments', arguments, true, false, false);
                                docVal = J$.N(7705, 'docVal', docVal, true, false, false);
                                operand = J$.N(7713, 'operand', operand, true, false, false);
                                return J$.Rt(7681, J$.B(538, '===', J$.M(7665, J$.R(7649, 'operand', operand, false, false), 'indexOf', false)(J$.R(7657, 'docVal', docVal, false, false)), J$.U(530, '-', J$.T(7673, 1, 22, false))));
                            } catch (J$e) {
                                J$.Ex(11849, J$e);
                            } finally {
                                if (J$.Fr(11857))
                                    continue jalangiLabel9;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $all: J$.T(7897, function (docVal, operand) {
                    jalangiLabel11:
                        while (true) {
                            try {
                                J$.Fe(7865, arguments.callee, this, arguments);
                                arguments = J$.N(7873, 'arguments', arguments, true, false, false);
                                docVal = J$.N(7881, 'docVal', docVal, true, false, false);
                                operand = J$.N(7889, 'operand', operand, true, false, false);
                                return J$.Rt(7857, J$.C(320, J$.B(546, 'instanceof', J$.R(7729, 'docVal', docVal, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(7737, 'Array', undefined, true, true) : Array = J$.R(7737, 'Array', Array, true, true)))) ? J$.M(7849, J$.R(7745, 'docVal', docVal, false, false), 'reduce', false)(J$.T(7833, function (last, cur) {
                                    jalangiLabel10:
                                        while (true) {
                                            try {
                                                J$.Fe(7801, arguments.callee, this, arguments);
                                                arguments = J$.N(7809, 'arguments', arguments, true, false, false);
                                                last = J$.N(7817, 'last', last, true, false, false);
                                                cur = J$.N(7825, 'cur', cur, true, false, false);
                                                return J$.Rt(7793, J$.C(312, J$.R(7753, 'last', last, false, false)) ? J$.B(562, '!==', J$.M(7777, J$.R(7761, 'operand', operand, false, false), 'indexOf', false)(J$.R(7769, 'cur', cur, false, false)), J$.U(554, '-', J$.T(7785, 1, 22, false))) : J$._());
                                            } catch (J$e) {
                                                J$.Ex(11865, J$e);
                                            } finally {
                                                if (J$.Fr(11873))
                                                    continue jalangiLabel10;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.T(7841, true, 23, false)) : J$._());
                            } catch (J$e) {
                                J$.Ex(11881, J$e);
                            } finally {
                                if (J$.Fr(11889))
                                    continue jalangiLabel11;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), simpleComparators, false, true);
            var compoundOperatorComparators = J$.W(8505, 'compoundOperatorComparators', J$.T(8497, {
                $and: J$.T(8105, function (document, parts) {
                    jalangiLabel12:
                        while (true) {
                            try {
                                J$.Fe(8065, arguments.callee, this, arguments);
                                arguments = J$.N(8073, 'arguments', arguments, true, false, false);
                                document = J$.N(8081, 'document', document, true, false, false);
                                parts = J$.N(8089, 'parts', parts, true, false, false);
                                J$.N(8097, 'n', n, false, false, false);
                                for (var n = J$.W(7929, 'n', J$.T(7921, 0, 22, false), n, false, false); J$.C(336, J$.B(570, '<', J$.R(7937, 'n', n, false, false), J$.G(7953, J$.R(7945, 'parts', parts, false, false), 'length'))); J$.B(594, '-', n = J$.W(7969, 'n', J$.B(586, '+', J$.U(578, '+', J$.R(7961, 'n', n, false, false)), 1), n, false, false), 1)) {
                                    if (J$.C(328, J$.U(602, '!', J$.F(8025, J$.R(7977, 'matches', matches, false, true), false)(J$.G(8009, J$.G(8001, J$.R(7985, 'parts', parts, false, false), J$.R(7993, 'n', n, false, false)), 'parts'), J$.R(8017, 'document', document, false, false))))) {
                                        return J$.Rt(8041, J$.T(8033, false, 23, false));
                                    }
                                }
                                return J$.Rt(8057, J$.T(8049, true, 23, false));
                            } catch (J$e) {
                                J$.Ex(11897, J$e);
                            } finally {
                                if (J$.Fr(11905))
                                    continue jalangiLabel12;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $or: J$.T(8297, function (document, parts) {
                    jalangiLabel13:
                        while (true) {
                            try {
                                J$.Fe(8257, arguments.callee, this, arguments);
                                arguments = J$.N(8265, 'arguments', arguments, true, false, false);
                                document = J$.N(8273, 'document', document, true, false, false);
                                parts = J$.N(8281, 'parts', parts, true, false, false);
                                J$.N(8289, 'n', n, false, false, false);
                                for (var n = J$.W(8121, 'n', J$.T(8113, 0, 22, false), n, false, false); J$.C(352, J$.B(610, '<', J$.R(8129, 'n', n, false, false), J$.G(8145, J$.R(8137, 'parts', parts, false, false), 'length'))); J$.B(634, '-', n = J$.W(8161, 'n', J$.B(626, '+', J$.U(618, '+', J$.R(8153, 'n', n, false, false)), 1), n, false, false), 1)) {
                                    if (J$.C(344, J$.F(8217, J$.R(8169, 'matches', matches, false, true), false)(J$.G(8201, J$.G(8193, J$.R(8177, 'parts', parts, false, false), J$.R(8185, 'n', n, false, false)), 'parts'), J$.R(8209, 'document', document, false, false)))) {
                                        return J$.Rt(8233, J$.T(8225, true, 23, false));
                                    }
                                }
                                return J$.Rt(8249, J$.T(8241, false, 23, false));
                            } catch (J$e) {
                                J$.Ex(11913, J$e);
                            } finally {
                                if (J$.Fr(11921))
                                    continue jalangiLabel13;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                $nor: J$.T(8489, function (document, parts) {
                    jalangiLabel14:
                        while (true) {
                            try {
                                J$.Fe(8449, arguments.callee, this, arguments);
                                arguments = J$.N(8457, 'arguments', arguments, true, false, false);
                                document = J$.N(8465, 'document', document, true, false, false);
                                parts = J$.N(8473, 'parts', parts, true, false, false);
                                J$.N(8481, 'n', n, false, false, false);
                                for (var n = J$.W(8313, 'n', J$.T(8305, 0, 22, false), n, false, false); J$.C(368, J$.B(642, '<', J$.R(8321, 'n', n, false, false), J$.G(8337, J$.R(8329, 'parts', parts, false, false), 'length'))); J$.B(666, '-', n = J$.W(8353, 'n', J$.B(658, '+', J$.U(650, '+', J$.R(8345, 'n', n, false, false)), 1), n, false, false), 1)) {
                                    if (J$.C(360, J$.F(8409, J$.R(8361, 'matches', matches, false, true), false)(J$.G(8393, J$.G(8385, J$.R(8369, 'parts', parts, false, false), J$.R(8377, 'n', n, false, false)), 'parts'), J$.R(8401, 'document', document, false, false)))) {
                                        return J$.Rt(8425, J$.T(8417, false, 23, false));
                                    }
                                }
                                return J$.Rt(8441, J$.T(8433, true, 23, false));
                            } catch (J$e) {
                                J$.Ex(11929, J$e);
                            } finally {
                                if (J$.Fr(11937))
                                    continue jalangiLabel14;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), compoundOperatorComparators, false, true);
            var matches = J$.W(8761, 'matches', J$.P(8753, J$.I(typeof module === 'undefined' ? module = J$.R(8513, 'module', undefined, true, true) : module = J$.R(8513, 'module', module, true, true)), 'exports', J$.T(8745, function (parts, document) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(8697, arguments.callee, this, arguments);
                            arguments = J$.N(8705, 'arguments', arguments, true, false, false);
                            parts = J$.N(8713, 'parts', parts, true, false, false);
                            document = J$.N(8721, 'document', document, true, false, false);
                            J$.N(8729, 'n', n, false, false, false);
                            J$.N(8737, 'part', part, false, false, false);
                            J$.F(8537, J$.R(8521, 'validateDocumentObject', validateDocumentObject, false, true), false)(J$.R(8529, 'document', document, false, false));
                            for (var n = J$.W(8553, 'n', J$.T(8545, 0, 22, false), n, false, false); J$.C(384, J$.B(674, '<', J$.R(8561, 'n', n, false, false), J$.G(8577, J$.R(8569, 'parts', parts, false, false), 'length'))); J$.B(698, '-', n = J$.W(8593, 'n', J$.B(690, '+', J$.U(682, '+', J$.R(8585, 'n', n, false, false)), 1), n, false, false), 1)) {
                                var part = J$.W(8625, 'part', J$.G(8617, J$.R(8601, 'parts', parts, false, false), J$.R(8609, 'n', n, false, false)), part, false, false);
                                if (J$.C(376, J$.U(706, '!', J$.F(8657, J$.R(8633, 'partMatches', partMatches, false, true), false)(J$.R(8641, 'part', part, false, false), J$.R(8649, 'document', document, false, false)))))
                                    return J$.Rt(8673, J$.T(8665, false, 23, false));
                            }
                            return J$.Rt(8689, J$.T(8681, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(11945, J$e);
                        } finally {
                            if (J$.Fr(11953))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), matches, false, true);
        } catch (J$e) {
            J$.Ex(12057, J$e);
        } finally {
            if (J$.Sr(12065))
                continue jalangiLabel22;
            else
                break jalangiLabel22;
        }
    }
// JALANGI DO NOT INSTRUMENT

