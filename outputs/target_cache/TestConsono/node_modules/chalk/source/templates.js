J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(343257, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestConsono/node_modules/chalk/source/templates.js');
            function _toConsumableArray(arr) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(337609, arguments.callee, this, arguments);
                            arguments = J$.N(337617, 'arguments', arguments, true, false, false);
                            arr = J$.N(337625, 'arr', arr, true, false, false);
                            return J$.Rt(337601, J$.C(11784, J$.C(11776, J$.F(337553, J$.R(337537, '_arrayWithoutHoles', _arrayWithoutHoles, false, true), false)(J$.R(337545, 'arr', arr, false, false))) ? J$._() : J$.F(337577, J$.R(337561, '_iterableToArray', _iterableToArray, false, true), false)(J$.R(337569, 'arr', arr, false, false))) ? J$._() : J$.F(337593, J$.R(337585, '_nonIterableSpread', _nonIterableSpread, false, true), false)());
                        } catch (J$e) {
                            J$.Ex(343497, J$e);
                        } finally {
                            if (J$.Fr(343505))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _nonIterableSpread() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(337657, arguments.callee, this, arguments);
                            arguments = J$.N(337665, 'arguments', arguments, true, false, false);
                            throw J$.F(337649, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(337633, 'TypeError', undefined, true, true) : TypeError = J$.R(337633, 'TypeError', TypeError, true, true)), true)(J$.T(337641, 'Invalid attempt to spread non-iterable instance', 21, false));
                        } catch (J$e) {
                            J$.Ex(343513, J$e);
                        } finally {
                            if (J$.Fr(343521))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _iterableToArray(iter) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(337793, arguments.callee, this, arguments);
                            arguments = J$.N(337801, 'arguments', arguments, true, false, false);
                            iter = J$.N(337809, 'iter', iter, true, false, false);
                            if (J$.C(11800, J$.C(11792, J$.B(29266, 'in', J$.G(337681, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(337673, 'Symbol', undefined, true, true) : Symbol = J$.R(337673, 'Symbol', Symbol, true, true)), 'iterator'), J$.F(337705, J$.I(typeof Object === 'undefined' ? Object = J$.R(337689, 'Object', undefined, true, true) : Object = J$.R(337689, 'Object', Object, true, true)), false)(J$.R(337697, 'iter', iter, false, false)))) ? J$._() : J$.B(29274, '===', J$.M(337745, J$.G(337729, J$.G(337721, J$.I(typeof Object === 'undefined' ? Object = J$.R(337713, 'Object', undefined, true, true) : Object = J$.R(337713, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(337737, 'iter', iter, false, false)), J$.T(337753, '[object Arguments]', 21, false))))
                                return J$.Rt(337785, J$.M(337777, J$.I(typeof Array === 'undefined' ? Array = J$.R(337761, 'Array', undefined, true, true) : Array = J$.R(337761, 'Array', Array, true, true)), 'from', false)(J$.R(337769, 'iter', iter, false, false)));
                        } catch (J$e) {
                            J$.Ex(343529, J$e);
                        } finally {
                            if (J$.Fr(343537))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _arrayWithoutHoles(arr) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(338001, arguments.callee, this, arguments);
                            arguments = J$.N(338009, 'arguments', arguments, true, false, false);
                            arr = J$.N(338017, 'arr', arr, true, false, false);
                            J$.N(338025, 'i', i, false, false, false);
                            J$.N(338033, 'arr2', arr2, false, false, false);
                            if (J$.C(11816, J$.M(337833, J$.I(typeof Array === 'undefined' ? Array = J$.R(337817, 'Array', undefined, true, true) : Array = J$.R(337817, 'Array', Array, true, true)), 'isArray', false)(J$.R(337825, 'arr', arr, false, false)))) {
                                for (var i = J$.W(337881, 'i', J$.T(337841, 0, 22, false), i, false, false), arr2 = J$.W(337889, 'arr2', J$.F(337873, J$.I(typeof Array === 'undefined' ? Array = J$.R(337849, 'Array', undefined, true, true) : Array = J$.R(337849, 'Array', Array, true, true)), true)(J$.G(337865, J$.R(337857, 'arr', arr, false, false), 'length')), arr2, false, false); J$.C(11808, J$.B(29282, '<', J$.R(337897, 'i', i, false, false), J$.G(337913, J$.R(337905, 'arr', arr, false, false), 'length'))); J$.B(29306, '-', i = J$.W(337929, 'i', J$.B(29298, '+', J$.U(29290, '+', J$.R(337921, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(337977, J$.R(337937, 'arr2', arr2, false, false), J$.R(337945, 'i', i, false, false), J$.G(337969, J$.R(337953, 'arr', arr, false, false), J$.R(337961, 'i', i, false, false)));
                                }
                                return J$.Rt(337993, J$.R(337985, 'arr2', arr2, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(343545, J$e);
                        } finally {
                            if (J$.Fr(343553))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _slicedToArray(arr, i) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(338433, arguments.callee, this, arguments);
                            arguments = J$.N(338441, 'arguments', arguments, true, false, false);
                            arr = J$.N(338449, 'arr', arr, true, false, false);
                            i = J$.N(338457, 'i', i, true, false, false);
                            return J$.Rt(338425, J$.C(11832, J$.C(11824, J$.F(338369, J$.R(338353, '_arrayWithHoles', _arrayWithHoles, false, true), false)(J$.R(338361, 'arr', arr, false, false))) ? J$._() : J$.F(338401, J$.R(338377, '_iterableToArrayLimit', _iterableToArrayLimit, false, true), false)(J$.R(338385, 'arr', arr, false, false), J$.R(338393, 'i', i, false, false))) ? J$._() : J$.F(338417, J$.R(338409, '_nonIterableRest', _nonIterableRest, false, true), false)());
                        } catch (J$e) {
                            J$.Ex(343561, J$e);
                        } finally {
                            if (J$.Fr(343569))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _nonIterableRest() {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(338489, arguments.callee, this, arguments);
                            arguments = J$.N(338497, 'arguments', arguments, true, false, false);
                            throw J$.F(338481, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(338465, 'TypeError', undefined, true, true) : TypeError = J$.R(338465, 'TypeError', TypeError, true, true)), true)(J$.T(338473, 'Invalid attempt to destructure non-iterable instance', 21, false));
                        } catch (J$e) {
                            J$.Ex(343577, J$e);
                        } finally {
                            if (J$.Fr(343585))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _iterableToArrayLimit(arr, i) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(338961, arguments.callee, this, arguments);
                            arguments = J$.N(338969, 'arguments', arguments, true, false, false);
                            arr = J$.N(338977, 'arr', arr, true, false, false);
                            i = J$.N(338985, 'i', i, true, false, false);
                            J$.N(338993, '_arr', _arr, false, false, false);
                            J$.N(339001, '_n', _n, false, false, false);
                            J$.N(339009, '_d', _d, false, false, false);
                            J$.N(339017, '_e', _e, false, false, false);
                            J$.N(339025, '_i', _i, false, false, false);
                            J$.N(339033, '_s', _s, false, false, false);
                            if (J$.C(11848, J$.U(29330, '!', J$.C(11840, J$.B(29314, 'in', J$.G(338513, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(338505, 'Symbol', undefined, true, true) : Symbol = J$.R(338505, 'Symbol', Symbol, true, true)), 'iterator'), J$.F(338537, J$.I(typeof Object === 'undefined' ? Object = J$.R(338521, 'Object', undefined, true, true) : Object = J$.R(338521, 'Object', Object, true, true)), false)(J$.R(338529, 'arr', arr, false, false)))) ? J$._() : J$.B(29322, '===', J$.M(338577, J$.G(338561, J$.G(338553, J$.I(typeof Object === 'undefined' ? Object = J$.R(338545, 'Object', undefined, true, true) : Object = J$.R(338545, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(338569, 'arr', arr, false, false)), J$.T(338585, '[object Arguments]', 21, false))))) {
                                return J$.Rt(338593, undefined);
                            }
                            var _arr = J$.W(338609, '_arr', J$.T(338601, [], 10, false), _arr, false, false);
                            var _n = J$.W(338625, '_n', J$.T(338617, true, 23, false), _n, false, false);
                            var _d = J$.W(338641, '_d', J$.T(338633, false, 23, false), _d, false, false);
                            var _e = J$.W(338657, '_e', J$.T(338649, undefined, 24, false), _e, false, false);
                            try {
                                for (var _i = J$.W(338697, '_i', J$.M(338689, J$.R(338665, 'arr', arr, false, false), J$.G(338681, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(338673, 'Symbol', undefined, true, true) : Symbol = J$.R(338673, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _i, false, false), _s; J$.C(11872, J$.U(29338, '!', _n = J$.W(338737, '_n', J$.G(338729, _s = J$.W(338721, '_s', J$.M(338713, J$.R(338705, '_i', _i, false, false), 'next', false)(), _s, false, false), 'done'), _n, false, false))); _n = J$.W(338753, '_n', J$.T(338745, true, 23, false), _n, false, false)) {
                                    J$.M(338785, J$.R(338761, '_arr', _arr, false, false), 'push', false)(J$.G(338777, J$.R(338769, '_s', _s, false, false), 'value'));
                                    if (J$.C(11864, J$.C(11856, J$.R(338793, 'i', i, false, false)) ? J$.B(29346, '===', J$.G(338809, J$.R(338801, '_arr', _arr, false, false), 'length'), J$.R(338817, 'i', i, false, false)) : J$._()))
                                        break;
                                }
                            } catch (err) {
                                J$.N(338857, 'err', err, false, false, true);
                                _d = J$.W(338833, '_d', J$.T(338825, true, 23, false), _d, false, false);
                                _e = J$.W(338849, '_e', J$.R(338841, 'err', err, false, false), _e, false, false);
                            } finally {
                                try {
                                    if (J$.C(11888, J$.C(11880, J$.U(29354, '!', J$.R(338865, '_n', _n, false, false))) ? J$.B(29362, '!=', J$.G(338889, J$.R(338873, '_i', _i, false, false), J$.T(338881, 'return', 21, false)), J$.T(338897, null, 25, false)) : J$._()))
                                        J$.M(338921, J$.R(338905, '_i', _i, false, false), J$.T(338913, 'return', 21, false), false)();
                                } finally {
                                    if (J$.C(11896, J$.R(338929, '_d', _d, false, false)))
                                        throw J$.R(338937, '_e', _e, false, false);
                                }
                            }
                            return J$.Rt(338953, J$.R(338945, '_arr', _arr, false, false));
                        } catch (J$e) {
                            J$.Ex(343593, J$e);
                        } finally {
                            if (J$.Fr(343601))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _arrayWithHoles(arr) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(339081, arguments.callee, this, arguments);
                            arguments = J$.N(339089, 'arguments', arguments, true, false, false);
                            arr = J$.N(339097, 'arr', arr, true, false, false);
                            if (J$.C(11904, J$.M(339057, J$.I(typeof Array === 'undefined' ? Array = J$.R(339041, 'Array', undefined, true, true) : Array = J$.R(339041, 'Array', Array, true, true)), 'isArray', false)(J$.R(339049, 'arr', arr, false, false))))
                                return J$.Rt(339073, J$.R(339065, 'arr', arr, false, false));
                        } catch (J$e) {
                            J$.Ex(343609, J$e);
                        } finally {
                            if (J$.Fr(343617))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function unescape(c) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(339825, arguments.callee, this, arguments);
                            arguments = J$.N(339833, 'arguments', arguments, true, false, false);
                            c = J$.N(339841, 'c', c, true, false, false);
                            J$.N(339849, 'u', u, false, false, false);
                            J$.N(339857, 'bracket', bracket, false, false, false);
                            var u = J$.W(339473, 'u', J$.B(29370, '===', J$.G(339457, J$.R(339441, 'c', c, false, false), J$.T(339449, 0, 22, false)), J$.T(339465, 'u', 21, false)), u, false, false);
                            var bracket = J$.W(339513, 'bracket', J$.B(29378, '===', J$.G(339497, J$.R(339481, 'c', c, false, false), J$.T(339489, 1, 22, false)), J$.T(339505, '{', 21, false)), bracket, false, false);
                            if (J$.C(11944, J$.C(11936, J$.C(11920, J$.C(11912, J$.R(339521, 'u', u, false, false)) ? J$.U(29386, '!', J$.R(339529, 'bracket', bracket, false, false)) : J$._()) ? J$.B(29394, '===', J$.G(339545, J$.R(339537, 'c', c, false, false), 'length'), J$.T(339553, 5, 22, false)) : J$._()) ? J$._() : J$.C(11928, J$.B(29402, '===', J$.G(339577, J$.R(339561, 'c', c, false, false), J$.T(339569, 0, 22, false)), J$.T(339585, 'x', 21, false))) ? J$.B(29410, '===', J$.G(339601, J$.R(339593, 'c', c, false, false), 'length'), J$.T(339609, 3, 22, false)) : J$._())) {
                                return J$.Rt(339681, J$.M(339673, J$.I(typeof String === 'undefined' ? String = J$.R(339617, 'String', undefined, true, true) : String = J$.R(339617, 'String', String, true, true)), 'fromCharCode', false)(J$.F(339665, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(339625, 'parseInt', undefined, true, true) : parseInt = J$.R(339625, 'parseInt', parseInt, true, true)), false)(J$.M(339649, J$.R(339633, 'c', c, false, false), 'slice', false)(J$.T(339641, 1, 22, false)), J$.T(339657, 16, 22, false))));
                            }
                            if (J$.C(11960, J$.C(11952, J$.R(339689, 'u', u, false, false)) ? J$.R(339697, 'bracket', bracket, false, false) : J$._())) {
                                return J$.Rt(339777, J$.M(339769, J$.I(typeof String === 'undefined' ? String = J$.R(339705, 'String', undefined, true, true) : String = J$.R(339705, 'String', String, true, true)), 'fromCodePoint', false)(J$.F(339761, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(339713, 'parseInt', undefined, true, true) : parseInt = J$.R(339713, 'parseInt', parseInt, true, true)), false)(J$.M(339745, J$.R(339721, 'c', c, false, false), 'slice', false)(J$.T(339729, 2, 22, false), J$.U(29418, '-', J$.T(339737, 1, 22, false))), J$.T(339753, 16, 22, false))));
                            }
                            return J$.Rt(339817, J$.C(11968, J$.M(339801, J$.R(339785, 'ESCAPES', ESCAPES, false, true), 'get', false)(J$.R(339793, 'c', c, false, false))) ? J$._() : J$.R(339809, 'c', c, false, false));
                        } catch (J$e) {
                            J$.Ex(343625, J$e);
                        } finally {
                            if (J$.Fr(343633))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseArguments(name, arguments_) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(340561, arguments.callee, this, arguments);
                            arguments = J$.N(340569, 'arguments', arguments, true, false, false);
                            name = J$.N(340577, 'name', name, true, false, false);
                            arguments_ = J$.N(340585, 'arguments_', arguments_, true, false, false);
                            J$.N(340593, 'results', results, false, false, false);
                            J$.N(340601, 'chunks', chunks, false, false, false);
                            J$.N(340609, 'matches', matches, false, false, false);
                            J$.N(340617, '_iteratorNormalCompletion', _iteratorNormalCompletion, false, false, false);
                            J$.N(340625, '_didIteratorError', _didIteratorError, false, false, false);
                            J$.N(340633, '_iteratorError', _iteratorError, false, false, false);
                            J$.N(340641, '_iterator', _iterator, false, false, false);
                            J$.N(340649, '_step', _step, false, false, false);
                            J$.N(340657, 'chunk', chunk, false, false, false);
                            J$.N(340665, 'number', number, false, false, false);
                            var results = J$.W(339873, 'results', J$.T(339865, [], 10, false), results, false, false);
                            var chunks = J$.W(339913, 'chunks', J$.M(339905, J$.M(339889, J$.R(339881, 'arguments_', arguments_, false, false), 'trim', false)(), 'split', false)(J$.T(339897, /\s*,\s*/g, 14, false)), chunks, false, false);
                            var matches;
                            var _iteratorNormalCompletion = J$.W(339929, '_iteratorNormalCompletion', J$.T(339921, true, 23, false), _iteratorNormalCompletion, false, false);
                            var _didIteratorError = J$.W(339945, '_didIteratorError', J$.T(339937, false, 23, false), _didIteratorError, false, false);
                            var _iteratorError = J$.W(339961, '_iteratorError', J$.T(339953, undefined, 24, false), _iteratorError, false, false);
                            try {
                                for (var _iterator = J$.W(340001, '_iterator', J$.M(339993, J$.R(339969, 'chunks', chunks, false, false), J$.G(339985, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(339977, 'Symbol', undefined, true, true) : Symbol = J$.R(339977, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator, false, false), _step; J$.C(12000, J$.U(29426, '!', _iteratorNormalCompletion = J$.W(340041, '_iteratorNormalCompletion', J$.G(340033, _step = J$.W(340025, '_step', J$.M(340017, J$.R(340009, '_iterator', _iterator, false, false), 'next', false)(), _step, false, false), 'done'), _iteratorNormalCompletion, false, false))); _iteratorNormalCompletion = J$.W(340057, '_iteratorNormalCompletion', J$.T(340049, true, 23, false), _iteratorNormalCompletion, false, false)) {
                                    var chunk = J$.W(340081, 'chunk', J$.G(340073, J$.R(340065, '_step', _step, false, false), 'value'), chunk, false, false);
                                    var number = J$.W(340113, 'number', J$.F(340105, J$.I(typeof Number === 'undefined' ? Number = J$.R(340089, 'Number', undefined, true, true) : Number = J$.R(340089, 'Number', Number, true, true)), false)(J$.R(340097, 'chunk', chunk, false, false)), number, false, false);
                                    if (J$.C(11992, J$.U(29434, '!', J$.M(340137, J$.I(typeof Number === 'undefined' ? Number = J$.R(340121, 'Number', undefined, true, true) : Number = J$.R(340121, 'Number', Number, true, true)), 'isNaN', false)(J$.R(340129, 'number', number, false, false))))) {
                                        J$.M(340161, J$.R(340145, 'results', results, false, false), 'push', false)(J$.R(340153, 'number', number, false, false));
                                    } else if (J$.C(11984, matches = J$.W(340193, 'matches', J$.M(340185, J$.R(340169, 'chunk', chunk, false, false), 'match', false)(J$.R(340177, 'STRING_REGEX', STRING_REGEX, false, true)), matches, false, false))) {
                                        J$.M(340345, J$.R(340201, 'results', results, false, false), 'push', false)(J$.M(340337, J$.G(340225, J$.R(340209, 'matches', matches, false, false), J$.T(340217, 2, 22, false)), 'replace', false)(J$.R(340233, 'ESCAPE_REGEX', ESCAPE_REGEX, false, true), J$.T(340329, function (m, escape, character) {
                                            jalangiLabel9:
                                                while (true) {
                                                    try {
                                                        J$.Fe(340289, arguments.callee, this, arguments);
                                                        arguments = J$.N(340297, 'arguments', arguments, true, false, false);
                                                        m = J$.N(340305, 'm', m, true, false, false);
                                                        escape = J$.N(340313, 'escape', escape, true, false, false);
                                                        character = J$.N(340321, 'character', character, true, false, false);
                                                        return J$.Rt(340281, J$.C(11976, J$.R(340241, 'escape', escape, false, false)) ? J$.F(340265, J$.R(340249, 'unescape', unescape, false, true), false)(J$.R(340257, 'escape', escape, false, false)) : J$.R(340273, 'character', character, false, false));
                                                    } catch (J$e) {
                                                        J$.Ex(343641, J$e);
                                                    } finally {
                                                        if (J$.Fr(343649))
                                                            continue jalangiLabel9;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false)));
                                    } else {
                                        throw J$.F(340417, J$.I(typeof Error === 'undefined' ? Error = J$.R(340353, 'Error', undefined, true, true) : Error = J$.R(340353, 'Error', Error, true, true)), true)(J$.M(340409, J$.M(340385, J$.T(340361, 'Invalid Chalk template style argument: ', 21, false), 'concat', false)(J$.R(340369, 'chunk', chunk, false, false), J$.T(340377, ' (in style \'', 21, false)), 'concat', false)(J$.R(340393, 'name', name, false, false), J$.T(340401, '\')', 21, false)));
                                    }
                                }
                            } catch (err) {
                                J$.N(340457, 'err', err, false, false, true);
                                _didIteratorError = J$.W(340433, '_didIteratorError', J$.T(340425, true, 23, false), _didIteratorError, false, false);
                                _iteratorError = J$.W(340449, '_iteratorError', J$.R(340441, 'err', err, false, false), _iteratorError, false, false);
                            } finally {
                                try {
                                    if (J$.C(12016, J$.C(12008, J$.U(29442, '!', J$.R(340465, '_iteratorNormalCompletion', _iteratorNormalCompletion, false, false))) ? J$.B(29450, '!=', J$.G(340489, J$.R(340473, '_iterator', _iterator, false, false), J$.T(340481, 'return', 21, false)), J$.T(340497, null, 25, false)) : J$._())) {
                                        J$.M(340521, J$.R(340505, '_iterator', _iterator, false, false), J$.T(340513, 'return', 21, false), false)();
                                    }
                                } finally {
                                    if (J$.C(12024, J$.R(340529, '_didIteratorError', _didIteratorError, false, false))) {
                                        throw J$.R(340537, '_iteratorError', _iteratorError, false, false);
                                    }
                                }
                            }
                            return J$.Rt(340553, J$.R(340545, 'results', results, false, false));
                        } catch (J$e) {
                            J$.Ex(343657, J$e);
                        } finally {
                            if (J$.Fr(343665))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseStyle(style) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(340961, arguments.callee, this, arguments);
                            arguments = J$.N(340969, 'arguments', arguments, true, false, false);
                            style = J$.N(340977, 'style', style, true, false, false);
                            J$.N(340985, 'results', results, false, false, false);
                            J$.N(340993, 'matches', matches, false, false, false);
                            J$.N(341001, 'name', name, false, false, false);
                            J$.N(341009, 'args', args, false, false, false);
                            J$.P(340689, J$.R(340673, 'STYLE_REGEX', STYLE_REGEX, false, true), 'lastIndex', J$.T(340681, 0, 22, false));
                            var results = J$.W(340705, 'results', J$.T(340697, [], 10, false), results, false, false);
                            var matches;
                            while (J$.C(12040, J$.B(29458, '!==', matches = J$.W(340737, 'matches', J$.M(340729, J$.R(340713, 'STYLE_REGEX', STYLE_REGEX, false, true), 'exec', false)(J$.R(340721, 'style', style, false, false)), matches, false, false), J$.T(340745, null, 25, false)))) {
                                var name = J$.W(340777, 'name', J$.G(340769, J$.R(340753, 'matches', matches, false, false), J$.T(340761, 1, 22, false)), name, false, false);
                                if (J$.C(12032, J$.G(340801, J$.R(340785, 'matches', matches, false, false), J$.T(340793, 2, 22, false)))) {
                                    var args = J$.W(340857, 'args', J$.F(340849, J$.R(340809, 'parseArguments', parseArguments, false, true), false)(J$.R(340817, 'name', name, false, false), J$.G(340841, J$.R(340825, 'matches', matches, false, false), J$.T(340833, 2, 22, false))), args, false, false);
                                    J$.M(340905, J$.R(340865, 'results', results, false, false), 'push', false)(J$.M(340897, J$.T(340881, [J$.R(340873, 'name', name, false, false)], 10, false), 'concat', false)(J$.R(340889, 'args', args, false, false)));
                                } else {
                                    J$.M(340937, J$.R(340913, 'results', results, false, false), 'push', false)(J$.T(340929, [J$.R(340921, 'name', name, false, false)], 10, false));
                                }
                            }
                            return J$.Rt(340953, J$.R(340945, 'results', results, false, false));
                        } catch (J$e) {
                            J$.Ex(343673, J$e);
                        } finally {
                            if (J$.Fr(343681))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function buildStyle(chalk, styles) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(342153, arguments.callee, this, arguments);
                            arguments = J$.N(342161, 'arguments', arguments, true, false, false);
                            chalk = J$.N(342169, 'chalk', chalk, true, false, false);
                            styles = J$.N(342177, 'styles', styles, true, false, false);
                            J$.N(342185, 'enabled', enabled, false, false, false);
                            J$.N(342193, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, false, false, false);
                            J$.N(342201, '_didIteratorError2', _didIteratorError2, false, false, false);
                            J$.N(342209, '_iteratorError2', _iteratorError2, false, false, false);
                            J$.N(342217, '_iterator2', _iterator2, false, false, false);
                            J$.N(342225, '_step2', _step2, false, false, false);
                            J$.N(342233, 'layer', layer, false, false, false);
                            J$.N(342241, '_iteratorNormalCompletion3', _iteratorNormalCompletion3, false, false, false);
                            J$.N(342249, '_didIteratorError3', _didIteratorError3, false, false, false);
                            J$.N(342257, '_iteratorError3', _iteratorError3, false, false, false);
                            J$.N(342265, '_iterator3', _iterator3, false, false, false);
                            J$.N(342273, '_step3', _step3, false, false, false);
                            J$.N(342281, 'style', style, false, false, false);
                            J$.N(342289, 'current', current, false, false, false);
                            J$.N(342297, '_i', _i, false, false, false);
                            J$.N(342305, '_Object$entries', _Object$entries, false, false, false);
                            J$.N(342313, '_current', _current, false, false, false);
                            J$.N(342321, '_Object$entries$_i', _Object$entries$_i, false, false, false);
                            J$.N(342329, 'styleName', styleName, false, false, false);
                            J$.N(342337, '_styles', _styles, false, false, false);
                            var enabled = J$.W(341025, 'enabled', J$.T(341017, {}, 11, false), enabled, false, false);
                            var _iteratorNormalCompletion2 = J$.W(341041, '_iteratorNormalCompletion2', J$.T(341033, true, 23, false), _iteratorNormalCompletion2, false, false);
                            var _didIteratorError2 = J$.W(341057, '_didIteratorError2', J$.T(341049, false, 23, false), _didIteratorError2, false, false);
                            var _iteratorError2 = J$.W(341073, '_iteratorError2', J$.T(341065, undefined, 24, false), _iteratorError2, false, false);
                            try {
                                for (var _iterator2 = J$.W(341113, '_iterator2', J$.M(341105, J$.R(341081, 'styles', styles, false, false), J$.G(341097, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(341089, 'Symbol', undefined, true, true) : Symbol = J$.R(341089, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator2, false, false), _step2; J$.C(12088, J$.U(29466, '!', _iteratorNormalCompletion2 = J$.W(341153, '_iteratorNormalCompletion2', J$.G(341145, _step2 = J$.W(341137, '_step2', J$.M(341129, J$.R(341121, '_iterator2', _iterator2, false, false), 'next', false)(), _step2, false, false), 'done'), _iteratorNormalCompletion2, false, false))); _iteratorNormalCompletion2 = J$.W(341169, '_iteratorNormalCompletion2', J$.T(341161, true, 23, false), _iteratorNormalCompletion2, false, false)) {
                                    var layer = J$.W(341193, 'layer', J$.G(341185, J$.R(341177, '_step2', _step2, false, false), 'value'), layer, false, false);
                                    var _iteratorNormalCompletion3 = J$.W(341209, '_iteratorNormalCompletion3', J$.T(341201, true, 23, false), _iteratorNormalCompletion3, false, false);
                                    var _didIteratorError3 = J$.W(341225, '_didIteratorError3', J$.T(341217, false, 23, false), _didIteratorError3, false, false);
                                    var _iteratorError3 = J$.W(341241, '_iteratorError3', J$.T(341233, undefined, 24, false), _iteratorError3, false, false);
                                    try {
                                        for (var _iterator3 = J$.W(341289, '_iterator3', J$.M(341281, J$.G(341257, J$.R(341249, 'layer', layer, false, false), 'styles'), J$.G(341273, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(341265, 'Symbol', undefined, true, true) : Symbol = J$.R(341265, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator3, false, false), _step3; J$.C(12056, J$.U(29474, '!', _iteratorNormalCompletion3 = J$.W(341329, '_iteratorNormalCompletion3', J$.G(341321, _step3 = J$.W(341313, '_step3', J$.M(341305, J$.R(341297, '_iterator3', _iterator3, false, false), 'next', false)(), _step3, false, false), 'done'), _iteratorNormalCompletion3, false, false))); _iteratorNormalCompletion3 = J$.W(341345, '_iteratorNormalCompletion3', J$.T(341337, true, 23, false), _iteratorNormalCompletion3, false, false)) {
                                            var style = J$.W(341369, 'style', J$.G(341361, J$.R(341353, '_step3', _step3, false, false), 'value'), style, false, false);
                                            J$.P(341457, J$.R(341377, 'enabled', enabled, false, false), J$.G(341401, J$.R(341385, 'style', style, false, false), J$.T(341393, 0, 22, false)), J$.C(12048, J$.G(341417, J$.R(341409, 'layer', layer, false, false), 'inverse')) ? J$.T(341425, null, 25, false) : J$.M(341449, J$.R(341433, 'style', style, false, false), 'slice', false)(J$.T(341441, 1, 22, false)));
                                        }
                                    } catch (err) {
                                        J$.N(341497, 'err', err, false, false, true);
                                        _didIteratorError3 = J$.W(341473, '_didIteratorError3', J$.T(341465, true, 23, false), _didIteratorError3, false, false);
                                        _iteratorError3 = J$.W(341489, '_iteratorError3', J$.R(341481, 'err', err, false, false), _iteratorError3, false, false);
                                    } finally {
                                        try {
                                            if (J$.C(12072, J$.C(12064, J$.U(29482, '!', J$.R(341505, '_iteratorNormalCompletion3', _iteratorNormalCompletion3, false, false))) ? J$.B(29490, '!=', J$.G(341529, J$.R(341513, '_iterator3', _iterator3, false, false), J$.T(341521, 'return', 21, false)), J$.T(341537, null, 25, false)) : J$._())) {
                                                J$.M(341561, J$.R(341545, '_iterator3', _iterator3, false, false), J$.T(341553, 'return', 21, false), false)();
                                            }
                                        } finally {
                                            if (J$.C(12080, J$.R(341569, '_didIteratorError3', _didIteratorError3, false, false))) {
                                                throw J$.R(341577, '_iteratorError3', _iteratorError3, false, false);
                                            }
                                        }
                                    }
                                }
                            } catch (err) {
                                J$.N(341617, 'err', err, false, false, true);
                                _didIteratorError2 = J$.W(341593, '_didIteratorError2', J$.T(341585, true, 23, false), _didIteratorError2, false, false);
                                _iteratorError2 = J$.W(341609, '_iteratorError2', J$.R(341601, 'err', err, false, false), _iteratorError2, false, false);
                            } finally {
                                try {
                                    if (J$.C(12104, J$.C(12096, J$.U(29498, '!', J$.R(341625, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, false, false))) ? J$.B(29506, '!=', J$.G(341649, J$.R(341633, '_iterator2', _iterator2, false, false), J$.T(341641, 'return', 21, false)), J$.T(341657, null, 25, false)) : J$._())) {
                                        J$.M(341681, J$.R(341665, '_iterator2', _iterator2, false, false), J$.T(341673, 'return', 21, false), false)();
                                    }
                                } finally {
                                    if (J$.C(12112, J$.R(341689, '_didIteratorError2', _didIteratorError2, false, false))) {
                                        throw J$.R(341697, '_iteratorError2', _iteratorError2, false, false);
                                    }
                                }
                            }
                            var current = J$.W(341713, 'current', J$.R(341705, 'chalk', chalk, false, false), current, false, false);
                            for (var _i = J$.W(341753, '_i', J$.T(341721, 0, 22, false), _i, false, false), _Object$entries = J$.W(341761, '_Object$entries', J$.M(341745, J$.I(typeof Object === 'undefined' ? Object = J$.R(341729, 'Object', undefined, true, true) : Object = J$.R(341729, 'Object', Object, true, true)), 'entries', false)(J$.R(341737, 'enabled', enabled, false, false)), _Object$entries, false, false); J$.C(12144, J$.B(29514, '<', J$.R(341769, '_i', _i, false, false), J$.G(341785, J$.R(341777, '_Object$entries', _Object$entries, false, false), 'length'))); J$.B(29538, '-', _i = J$.W(341801, '_i', J$.B(29530, '+', J$.U(29522, '+', J$.R(341793, '_i', _i, false, false)), 1), _i, false, false), 1)) {
                                var _current;
                                var _Object$entries$_i = J$.W(341905, '_Object$entries$_i', J$.F(341849, J$.R(341809, '_slicedToArray', _slicedToArray, false, true), false)(J$.G(341833, J$.R(341817, '_Object$entries', _Object$entries, false, false), J$.R(341825, '_i', _i, false, false)), J$.T(341841, 2, 22, false)), _Object$entries$_i, false, false), styleName = J$.W(341913, 'styleName', J$.G(341873, J$.R(341857, '_Object$entries$_i', _Object$entries$_i, false, false), J$.T(341865, 0, 22, false)), styleName, false, false), _styles = J$.W(341921, '_styles', J$.G(341897, J$.R(341881, '_Object$entries$_i', _Object$entries$_i, false, false), J$.T(341889, 1, 22, false)), _styles, false, false);
                                if (J$.C(12120, J$.U(29546, '!', J$.M(341945, J$.I(typeof Array === 'undefined' ? Array = J$.R(341929, 'Array', undefined, true, true) : Array = J$.R(341929, 'Array', Array, true, true)), 'isArray', false)(J$.R(341937, '_styles', _styles, false, false))))) {
                                    continue;
                                }
                                if (J$.C(12128, J$.U(29562, '!', J$.B(29554, 'in', J$.R(341953, 'styleName', styleName, false, false), J$.R(341961, 'current', current, false, false))))) {
                                    throw J$.F(342001, J$.I(typeof Error === 'undefined' ? Error = J$.R(341969, 'Error', undefined, true, true) : Error = J$.R(341969, 'Error', Error, true, true)), true)(J$.M(341993, J$.T(341977, 'Unknown Chalk style: ', 21, false), 'concat', false)(J$.R(341985, 'styleName', styleName, false, false)));
                                }
                                current = J$.W(342129, 'current', J$.C(12136, J$.B(29570, '>', J$.G(342017, J$.R(342009, '_styles', _styles, false, false), 'length'), J$.T(342025, 0, 22, false))) ? J$.M(342097, J$.G(342057, _current = J$.W(342041, '_current', J$.R(342033, 'current', current, false, false), _current, false, false), J$.R(342049, 'styleName', styleName, false, false)), 'apply', false)(J$.R(342065, '_current', _current, false, false), J$.F(342089, J$.R(342073, '_toConsumableArray', _toConsumableArray, false, true), false)(J$.R(342081, '_styles', _styles, false, false))) : J$.G(342121, J$.R(342105, 'current', current, false, false), J$.R(342113, 'styleName', styleName, false, false)), current, false, false);
                            }
                            return J$.Rt(342145, J$.R(342137, 'current', current, false, false));
                        } catch (J$e) {
                            J$.Ex(343689, J$e);
                        } finally {
                            if (J$.Fr(343697))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _toConsumableArray = J$.N(343273, '_toConsumableArray', J$.T(343265, _toConsumableArray, 12, false), true, false, false);
            _nonIterableSpread = J$.N(343289, '_nonIterableSpread', J$.T(343281, _nonIterableSpread, 12, false), true, false, false);
            _iterableToArray = J$.N(343305, '_iterableToArray', J$.T(343297, _iterableToArray, 12, false), true, false, false);
            _arrayWithoutHoles = J$.N(343321, '_arrayWithoutHoles', J$.T(343313, _arrayWithoutHoles, 12, false), true, false, false);
            _slicedToArray = J$.N(343337, '_slicedToArray', J$.T(343329, _slicedToArray, 12, false), true, false, false);
            _nonIterableRest = J$.N(343353, '_nonIterableRest', J$.T(343345, _nonIterableRest, 12, false), true, false, false);
            _iterableToArrayLimit = J$.N(343369, '_iterableToArrayLimit', J$.T(343361, _iterableToArrayLimit, 12, false), true, false, false);
            _arrayWithHoles = J$.N(343385, '_arrayWithHoles', J$.T(343377, _arrayWithHoles, 12, false), true, false, false);
            J$.N(343393, 'TEMPLATE_REGEX', TEMPLATE_REGEX, false, false, false);
            J$.N(343401, 'STYLE_REGEX', STYLE_REGEX, false, false, false);
            J$.N(343409, 'STRING_REGEX', STRING_REGEX, false, false, false);
            J$.N(343417, 'ESCAPE_REGEX', ESCAPE_REGEX, false, false, false);
            J$.N(343425, 'ESCAPES', ESCAPES, false, false, false);
            unescape = J$.N(343441, 'unescape', J$.T(343433, unescape, 12, false), true, false, false);
            parseArguments = J$.N(343457, 'parseArguments', J$.T(343449, parseArguments, 12, false), true, false, false);
            parseStyle = J$.N(343473, 'parseStyle', J$.T(343465, parseStyle, 12, false), true, false, false);
            buildStyle = J$.N(343489, 'buildStyle', J$.T(343481, buildStyle, 12, false), true, false, false);
            J$.T(336929, 'use strict', 21, false);
            J$.F(336953, J$.I(typeof require === 'undefined' ? require = J$.R(336937, 'require', undefined, true, true) : require = J$.R(336937, 'require', require, true, true)), false)(J$.T(336945, 'core-js/modules/es.symbol', 21, false));
            J$.F(336977, J$.I(typeof require === 'undefined' ? require = J$.R(336961, 'require', undefined, true, true) : require = J$.R(336961, 'require', require, true, true)), false)(J$.T(336969, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(337001, J$.I(typeof require === 'undefined' ? require = J$.R(336985, 'require', undefined, true, true) : require = J$.R(336985, 'require', require, true, true)), false)(J$.T(336993, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(337025, J$.I(typeof require === 'undefined' ? require = J$.R(337009, 'require', undefined, true, true) : require = J$.R(337009, 'require', require, true, true)), false)(J$.T(337017, 'core-js/modules/es.array.concat', 21, false));
            J$.F(337049, J$.I(typeof require === 'undefined' ? require = J$.R(337033, 'require', undefined, true, true) : require = J$.R(337033, 'require', require, true, true)), false)(J$.T(337041, 'core-js/modules/es.array.from', 21, false));
            J$.F(337073, J$.I(typeof require === 'undefined' ? require = J$.R(337057, 'require', undefined, true, true) : require = J$.R(337057, 'require', require, true, true)), false)(J$.T(337065, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(337097, J$.I(typeof require === 'undefined' ? require = J$.R(337081, 'require', undefined, true, true) : require = J$.R(337081, 'require', require, true, true)), false)(J$.T(337089, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(337121, J$.I(typeof require === 'undefined' ? require = J$.R(337105, 'require', undefined, true, true) : require = J$.R(337105, 'require', require, true, true)), false)(J$.T(337113, 'core-js/modules/es.array.join', 21, false));
            J$.F(337145, J$.I(typeof require === 'undefined' ? require = J$.R(337129, 'require', undefined, true, true) : require = J$.R(337129, 'require', require, true, true)), false)(J$.T(337137, 'core-js/modules/es.array.slice', 21, false));
            J$.F(337169, J$.I(typeof require === 'undefined' ? require = J$.R(337153, 'require', undefined, true, true) : require = J$.R(337153, 'require', require, true, true)), false)(J$.T(337161, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(337193, J$.I(typeof require === 'undefined' ? require = J$.R(337177, 'require', undefined, true, true) : require = J$.R(337177, 'require', require, true, true)), false)(J$.T(337185, 'core-js/modules/es.map', 21, false));
            J$.F(337217, J$.I(typeof require === 'undefined' ? require = J$.R(337201, 'require', undefined, true, true) : require = J$.R(337201, 'require', require, true, true)), false)(J$.T(337209, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(337241, J$.I(typeof require === 'undefined' ? require = J$.R(337225, 'require', undefined, true, true) : require = J$.R(337225, 'require', require, true, true)), false)(J$.T(337233, 'core-js/modules/es.number.is-nan', 21, false));
            J$.F(337265, J$.I(typeof require === 'undefined' ? require = J$.R(337249, 'require', undefined, true, true) : require = J$.R(337249, 'require', require, true, true)), false)(J$.T(337257, 'core-js/modules/es.object.entries', 21, false));
            J$.F(337289, J$.I(typeof require === 'undefined' ? require = J$.R(337273, 'require', undefined, true, true) : require = J$.R(337273, 'require', require, true, true)), false)(J$.T(337281, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(337313, J$.I(typeof require === 'undefined' ? require = J$.R(337297, 'require', undefined, true, true) : require = J$.R(337297, 'require', require, true, true)), false)(J$.T(337305, 'core-js/modules/es.parse-int', 21, false));
            J$.F(337337, J$.I(typeof require === 'undefined' ? require = J$.R(337321, 'require', undefined, true, true) : require = J$.R(337321, 'require', require, true, true)), false)(J$.T(337329, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(337361, J$.I(typeof require === 'undefined' ? require = J$.R(337345, 'require', undefined, true, true) : require = J$.R(337345, 'require', require, true, true)), false)(J$.T(337353, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(337385, J$.I(typeof require === 'undefined' ? require = J$.R(337369, 'require', undefined, true, true) : require = J$.R(337369, 'require', require, true, true)), false)(J$.T(337377, 'core-js/modules/es.string.from-code-point', 21, false));
            J$.F(337409, J$.I(typeof require === 'undefined' ? require = J$.R(337393, 'require', undefined, true, true) : require = J$.R(337393, 'require', require, true, true)), false)(J$.T(337401, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(337433, J$.I(typeof require === 'undefined' ? require = J$.R(337417, 'require', undefined, true, true) : require = J$.R(337417, 'require', require, true, true)), false)(J$.T(337425, 'core-js/modules/es.string.match', 21, false));
            J$.F(337457, J$.I(typeof require === 'undefined' ? require = J$.R(337441, 'require', undefined, true, true) : require = J$.R(337441, 'require', require, true, true)), false)(J$.T(337449, 'core-js/modules/es.string.replace', 21, false));
            J$.F(337481, J$.I(typeof require === 'undefined' ? require = J$.R(337465, 'require', undefined, true, true) : require = J$.R(337465, 'require', require, true, true)), false)(J$.T(337473, 'core-js/modules/es.string.split', 21, false));
            J$.F(337505, J$.I(typeof require === 'undefined' ? require = J$.R(337489, 'require', undefined, true, true) : require = J$.R(337489, 'require', require, true, true)), false)(J$.T(337497, 'core-js/modules/es.string.trim', 21, false));
            J$.F(337529, J$.I(typeof require === 'undefined' ? require = J$.R(337513, 'require', undefined, true, true) : require = J$.R(337513, 'require', require, true, true)), false)(J$.T(337521, 'core-js/modules/web.dom-collections.iterator', 21, false));
            J$.F(338057, J$.I(typeof require === 'undefined' ? require = J$.R(338041, 'require', undefined, true, true) : require = J$.R(338041, 'require', require, true, true)), false)(J$.T(338049, 'core-js/modules/es.symbol', 21, false));
            J$.F(338081, J$.I(typeof require === 'undefined' ? require = J$.R(338065, 'require', undefined, true, true) : require = J$.R(338065, 'require', require, true, true)), false)(J$.T(338073, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(338105, J$.I(typeof require === 'undefined' ? require = J$.R(338089, 'require', undefined, true, true) : require = J$.R(338089, 'require', require, true, true)), false)(J$.T(338097, 'core-js/modules/es.array.concat', 21, false));
            J$.F(338129, J$.I(typeof require === 'undefined' ? require = J$.R(338113, 'require', undefined, true, true) : require = J$.R(338113, 'require', require, true, true)), false)(J$.T(338121, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(338153, J$.I(typeof require === 'undefined' ? require = J$.R(338137, 'require', undefined, true, true) : require = J$.R(338137, 'require', require, true, true)), false)(J$.T(338145, 'core-js/modules/es.array.slice', 21, false));
            J$.F(338177, J$.I(typeof require === 'undefined' ? require = J$.R(338161, 'require', undefined, true, true) : require = J$.R(338161, 'require', require, true, true)), false)(J$.T(338169, 'core-js/modules/es.map', 21, false));
            J$.F(338201, J$.I(typeof require === 'undefined' ? require = J$.R(338185, 'require', undefined, true, true) : require = J$.R(338185, 'require', require, true, true)), false)(J$.T(338193, 'core-js/modules/es.object.entries', 21, false));
            J$.F(338225, J$.I(typeof require === 'undefined' ? require = J$.R(338209, 'require', undefined, true, true) : require = J$.R(338209, 'require', require, true, true)), false)(J$.T(338217, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(338249, J$.I(typeof require === 'undefined' ? require = J$.R(338233, 'require', undefined, true, true) : require = J$.R(338233, 'require', require, true, true)), false)(J$.T(338241, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(338273, J$.I(typeof require === 'undefined' ? require = J$.R(338257, 'require', undefined, true, true) : require = J$.R(338257, 'require', require, true, true)), false)(J$.T(338265, 'core-js/modules/es.string.match', 21, false));
            J$.F(338297, J$.I(typeof require === 'undefined' ? require = J$.R(338281, 'require', undefined, true, true) : require = J$.R(338281, 'require', require, true, true)), false)(J$.T(338289, 'core-js/modules/es.string.replace', 21, false));
            J$.F(338321, J$.I(typeof require === 'undefined' ? require = J$.R(338305, 'require', undefined, true, true) : require = J$.R(338305, 'require', require, true, true)), false)(J$.T(338313, 'core-js/modules/es.string.split', 21, false));
            J$.F(338345, J$.I(typeof require === 'undefined' ? require = J$.R(338329, 'require', undefined, true, true) : require = J$.R(338329, 'require', require, true, true)), false)(J$.T(338337, 'core-js/modules/es.string.trim', 21, false));
            var TEMPLATE_REGEX = J$.W(339113, 'TEMPLATE_REGEX', J$.T(339105, /(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi, 14, false), TEMPLATE_REGEX, false, true);
            var STYLE_REGEX = J$.W(339129, 'STYLE_REGEX', J$.T(339121, /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, 14, false), STYLE_REGEX, false, true);
            var STRING_REGEX = J$.W(339145, 'STRING_REGEX', J$.T(339137, /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, 14, false), STRING_REGEX, false, true);
            var ESCAPE_REGEX = J$.W(339161, 'ESCAPE_REGEX', J$.T(339153, /\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.)|([^\\])/gi, 14, false), ESCAPE_REGEX, false, true);
            var ESCAPES = J$.W(339433, 'ESCAPES', J$.F(339425, J$.I(typeof Map === 'undefined' ? Map = J$.R(339169, 'Map', undefined, true, true) : Map = J$.R(339169, 'Map', Map, true, true)), true)(J$.T(339417, [
                J$.T(339193, [
                    J$.T(339177, 'n', 21, false),
                    J$.T(339185, '\n', 21, false)
                ], 10, false),
                J$.T(339217, [
                    J$.T(339201, 'r', 21, false),
                    J$.T(339209, '\r', 21, false)
                ], 10, false),
                J$.T(339241, [
                    J$.T(339225, 't', 21, false),
                    J$.T(339233, '\t', 21, false)
                ], 10, false),
                J$.T(339265, [
                    J$.T(339249, 'b', 21, false),
                    J$.T(339257, '\b', 21, false)
                ], 10, false),
                J$.T(339289, [
                    J$.T(339273, 'f', 21, false),
                    J$.T(339281, '\f', 21, false)
                ], 10, false),
                J$.T(339313, [
                    J$.T(339297, 'v', 21, false),
                    J$.T(339305, '\x0B', 21, false)
                ], 10, false),
                J$.T(339337, [
                    J$.T(339321, '0', 21, false),
                    J$.T(339329, '\0', 21, false)
                ], 10, false),
                J$.T(339361, [
                    J$.T(339345, '\\', 21, false),
                    J$.T(339353, '\\', 21, false)
                ], 10, false),
                J$.T(339385, [
                    J$.T(339369, 'e', 21, false),
                    J$.T(339377, '\x1B', 21, false)
                ], 10, false),
                J$.T(339409, [
                    J$.T(339393, 'a', 21, false),
                    J$.T(339401, '\x07', 21, false)
                ], 10, false)
            ], 10, false)), ESCAPES, false, true);
            J$.P(343249, J$.I(typeof module === 'undefined' ? module = J$.R(342345, 'module', undefined, true, true) : module = J$.R(342345, 'module', module, true, true)), 'exports', J$.T(343241, function (chalk, temporary) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(343177, arguments.callee, this, arguments);
                            arguments = J$.N(343185, 'arguments', arguments, true, false, false);
                            chalk = J$.N(343193, 'chalk', chalk, true, false, false);
                            temporary = J$.N(343201, 'temporary', temporary, true, false, false);
                            J$.N(343209, 'styles', styles, false, false, false);
                            J$.N(343217, 'chunks', chunks, false, false, false);
                            J$.N(343225, 'chunk', chunk, false, false, false);
                            J$.N(343233, 'errMsg', errMsg, false, false, false);
                            var styles = J$.W(342361, 'styles', J$.T(342353, [], 10, false), styles, false, false);
                            var chunks = J$.W(342377, 'chunks', J$.T(342369, [], 10, false), chunks, false, false);
                            var chunk = J$.W(342393, 'chunk', J$.T(342385, [], 10, false), chunk, false, false);
                            J$.M(342945, J$.R(342401, 'temporary', temporary, false, false), 'replace', false)(J$.R(342409, 'TEMPLATE_REGEX', TEMPLATE_REGEX, false, true), J$.T(342937, function (m, escapeCharacter, inverse, style, close, character) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(342865, arguments.callee, this, arguments);
                                            arguments = J$.N(342873, 'arguments', arguments, true, false, false);
                                            m = J$.N(342881, 'm', m, true, false, false);
                                            escapeCharacter = J$.N(342889, 'escapeCharacter', escapeCharacter, true, false, false);
                                            inverse = J$.N(342897, 'inverse', inverse, true, false, false);
                                            style = J$.N(342905, 'style', style, true, false, false);
                                            close = J$.N(342913, 'close', close, true, false, false);
                                            character = J$.N(342921, 'character', character, true, false, false);
                                            J$.N(342929, 'string', string, false, false, false);
                                            if (J$.C(12184, J$.R(342417, 'escapeCharacter', escapeCharacter, false, false))) {
                                                J$.M(342457, J$.R(342425, 'chunk', chunk, false, false), 'push', false)(J$.F(342449, J$.R(342433, 'unescape', unescape, false, true), false)(J$.R(342441, 'escapeCharacter', escapeCharacter, false, false)));
                                            } else if (J$.C(12176, J$.R(342465, 'style', style, false, false))) {
                                                var string = J$.W(342497, 'string', J$.M(342489, J$.R(342473, 'chunk', chunk, false, false), 'join', false)(J$.T(342481, '', 21, false)), string, false, false);
                                                chunk = J$.W(342513, 'chunk', J$.T(342505, [], 10, false), chunk, false, false);
                                                J$.M(342609, J$.R(342521, 'chunks', chunks, false, false), 'push', false)(J$.C(12152, J$.B(29578, '===', J$.G(342537, J$.R(342529, 'styles', styles, false, false), 'length'), J$.T(342545, 0, 22, false))) ? J$.R(342553, 'string', string, false, false) : J$.F(342601, J$.F(342585, J$.R(342561, 'buildStyle', buildStyle, false, true), false)(J$.R(342569, 'chalk', chalk, false, false), J$.R(342577, 'styles', styles, false, false)), false)(J$.R(342593, 'string', string, false, false)));
                                                J$.M(342665, J$.R(342617, 'styles', styles, false, false), 'push', false)(J$.T(342657, {
                                                    inverse: J$.R(342625, 'inverse', inverse, false, false),
                                                    styles: J$.F(342649, J$.R(342633, 'parseStyle', parseStyle, false, true), false)(J$.R(342641, 'style', style, false, false))
                                                }, 11, false));
                                            } else if (J$.C(12168, J$.R(342673, 'close', close, false, false))) {
                                                if (J$.C(12160, J$.B(29586, '===', J$.G(342689, J$.R(342681, 'styles', styles, false, false), 'length'), J$.T(342697, 0, 22, false)))) {
                                                    throw J$.F(342721, J$.I(typeof Error === 'undefined' ? Error = J$.R(342705, 'Error', undefined, true, true) : Error = J$.R(342705, 'Error', Error, true, true)), true)(J$.T(342713, 'Found extraneous } in Chalk template literal', 21, false));
                                                }
                                                J$.M(342801, J$.R(342729, 'chunks', chunks, false, false), 'push', false)(J$.F(342793, J$.F(342761, J$.R(342737, 'buildStyle', buildStyle, false, true), false)(J$.R(342745, 'chalk', chalk, false, false), J$.R(342753, 'styles', styles, false, false)), false)(J$.M(342785, J$.R(342769, 'chunk', chunk, false, false), 'join', false)(J$.T(342777, '', 21, false))));
                                                chunk = J$.W(342817, 'chunk', J$.T(342809, [], 10, false), chunk, false, false);
                                                J$.M(342833, J$.R(342825, 'styles', styles, false, false), 'pop', false)();
                                            } else {
                                                J$.M(342857, J$.R(342841, 'chunk', chunk, false, false), 'push', false)(J$.R(342849, 'character', character, false, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(343705, J$e);
                                        } finally {
                                            if (J$.Fr(343713))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(342985, J$.R(342953, 'chunks', chunks, false, false), 'push', false)(J$.M(342977, J$.R(342961, 'chunk', chunk, false, false), 'join', false)(J$.T(342969, '', 21, false)));
                            if (J$.C(12200, J$.B(29594, '>', J$.G(343001, J$.R(342993, 'styles', styles, false, false), 'length'), J$.T(343009, 0, 22, false)))) {
                                var errMsg = J$.W(343113, 'errMsg', J$.M(343105, J$.M(343049, J$.T(343017, 'Chalk template literal is missing ', 21, false), 'concat', false)(J$.G(343033, J$.R(343025, 'styles', styles, false, false), 'length'), J$.T(343041, ' closing bracket', 21, false)), 'concat', false)(J$.C(12192, J$.B(29602, '===', J$.G(343065, J$.R(343057, 'styles', styles, false, false), 'length'), J$.T(343073, 1, 22, false))) ? J$.T(343081, '', 21, false) : J$.T(343089, 's', 21, false), J$.T(343097, ' (`}`)', 21, false)), errMsg, false, false);
                                throw J$.F(343137, J$.I(typeof Error === 'undefined' ? Error = J$.R(343121, 'Error', undefined, true, true) : Error = J$.R(343121, 'Error', Error, true, true)), true)(J$.R(343129, 'errMsg', errMsg, false, false));
                            }
                            return J$.Rt(343169, J$.M(343161, J$.R(343145, 'chunks', chunks, false, false), 'join', false)(J$.T(343153, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(343721, J$e);
                        } finally {
                            if (J$.Fr(343729))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(343737, J$e);
        } finally {
            if (J$.Sr(343745))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

