J$.noInstrEval = false;
jalangiLabel17:
    while (true) {
        try {
            J$.Se(310065, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestBson-object/node_modules/bson-objectid/objectid.js');
            function ObjectID(arg) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(307745, arguments.callee, this, arguments);
                            arguments = J$.N(307753, 'arguments', arguments, true, false, false);
                            arg = J$.N(307761, 'arg', arg, true, false, false);
                            J$.N(307769, 'buf', buf, false, false, false);
                            if (J$.C(10856, J$.U(27690, '!', J$.B(27682, 'instanceof', J$.R(307065, 'this', this, false, false), J$.R(307073, 'ObjectID', ObjectID, false, true)))))
                                return J$.Rt(307105, J$.F(307097, J$.R(307081, 'ObjectID', ObjectID, false, true), true)(J$.R(307089, 'arg', arg, false, false)));
                            if (J$.C(10880, J$.C(10872, J$.R(307113, 'arg', arg, false, false)) ? J$.C(10864, J$.B(27698, 'instanceof', J$.R(307121, 'arg', arg, false, false), J$.R(307129, 'ObjectID', ObjectID, false, true))) ? J$._() : J$.B(27706, '===', J$.G(307145, J$.R(307137, 'arg', arg, false, false), '_bsontype'), J$.T(307153, 'ObjectID', 21, false)) : J$._()))
                                return J$.Rt(307169, J$.R(307161, 'arg', arg, false, false));
                            var buf;
                            if (J$.C(10936, J$.C(10896, J$.F(307193, J$.R(307177, 'isBuffer', isBuffer, false, true), false)(J$.R(307185, 'arg', arg, false, false))) ? J$._() : J$.C(10888, J$.M(307217, J$.I(typeof Array === 'undefined' ? Array = J$.R(307201, 'Array', undefined, true, true) : Array = J$.R(307201, 'Array', Array, true, true)), 'isArray', false)(J$.R(307209, 'arg', arg, false, false))) ? J$.B(27714, '===', J$.G(307233, J$.R(307225, 'arg', arg, false, false), 'length'), J$.T(307241, 12, 22, false)) : J$._())) {
                                buf = J$.W(307289, 'buf', J$.M(307281, J$.G(307265, J$.G(307257, J$.I(typeof Array === 'undefined' ? Array = J$.R(307249, 'Array', undefined, true, true) : Array = J$.R(307249, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.R(307273, 'arg', arg, false, false)), buf, false, false);
                            } else if (J$.C(10928, J$.B(27730, '===', J$.U(27722, 'typeof', J$.R(307297, 'arg', arg, false, false)), J$.T(307305, 'string', 21, false)))) {
                                if (J$.C(10912, J$.C(10904, J$.B(27738, '!==', J$.G(307321, J$.R(307313, 'arg', arg, false, false), 'length'), J$.T(307329, 12, 22, false))) ? J$.U(27746, '!', J$.M(307353, J$.R(307337, 'ObjectID', ObjectID, false, true), 'isValid', false)(J$.R(307345, 'arg', arg, false, false))) : J$._()))
                                    throw J$.F(307377, J$.I(typeof Error === 'undefined' ? Error = J$.R(307361, 'Error', undefined, true, true) : Error = J$.R(307361, 'Error', Error, true, true)), true)(J$.T(307369, 'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters', 21, false));
                                buf = J$.W(307409, 'buf', J$.F(307401, J$.R(307385, 'buffer', buffer, false, true), false)(J$.R(307393, 'arg', arg, false, false)), buf, false, false);
                            } else if (J$.C(10920, J$.M(307433, J$.T(307417, /number|undefined/, 14, false), 'test', false)(J$.U(27754, 'typeof', J$.R(307425, 'arg', arg, false, false))))) {
                                buf = J$.W(307481, 'buf', J$.F(307473, J$.R(307441, 'buffer', buffer, false, true), false)(J$.F(307465, J$.R(307449, 'generate', generate, false, true), false)(J$.R(307457, 'arg', arg, false, false))), buf, false, false);
                            }
                            J$.M(307601, J$.I(typeof Object === 'undefined' ? Object = J$.R(307489, 'Object', undefined, true, true) : Object = J$.R(307489, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(307497, 'this', this, false, false), J$.T(307505, 'id', 21, false), J$.T(307593, {
                                enumerable: J$.T(307513, true, 23, false),
                                get: J$.T(307585, function () {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(307569, arguments.callee, this, arguments);
                                                arguments = J$.N(307577, 'arguments', arguments, true, false, false);
                                                return J$.Rt(307561, J$.M(307553, J$.G(307529, J$.I(typeof String === 'undefined' ? String = J$.R(307521, 'String', undefined, true, true) : String = J$.R(307521, 'String', String, true, true)), 'fromCharCode'), 'apply', false)(J$.R(307537, 'this', this, false, false), J$.R(307545, 'buf', buf, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(310209, J$e);
                                            } finally {
                                                if (J$.Fr(310217))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false));
                            J$.M(307737, J$.I(typeof Object === 'undefined' ? Object = J$.R(307609, 'Object', undefined, true, true) : Object = J$.R(307609, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(307617, 'this', this, false, false), J$.T(307625, 'str', 21, false), J$.T(307729, {
                                get: J$.T(307721, function () {
                                    jalangiLabel2:
                                        while (true) {
                                            try {
                                                J$.Fe(307705, arguments.callee, this, arguments);
                                                arguments = J$.N(307713, 'arguments', arguments, true, false, false);
                                                return J$.Rt(307697, J$.M(307689, J$.M(307673, J$.R(307633, 'buf', buf, false, false), 'map', false)(J$.M(307665, J$.R(307641, 'hex', hex, false, true), 'bind', false)(J$.R(307649, 'this', this, false, false), J$.T(307657, 2, 22, false))), 'join', false)(J$.T(307681, '', 21, false)));
                                            } catch (J$e) {
                                                J$.Ex(310225, J$e);
                                            } finally {
                                                if (J$.Fr(310233))
                                                    continue jalangiLabel2;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(310241, J$e);
                        } finally {
                            if (J$.Fr(310249))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function next() {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(309057, arguments.callee, this, arguments);
                            arguments = J$.N(309065, 'arguments', arguments, true, false, false);
                            return J$.Rt(309049, index = J$.W(309041, 'index', J$.B(27978, '%', J$.B(27970, '+', J$.R(309017, 'index', index, false, true), J$.T(309025, 1, 22, false)), J$.T(309033, 16777215, 22, false)), index, false, true));
                        } catch (J$e) {
                            J$.Ex(310385, J$e);
                        } finally {
                            if (J$.Fr(310393))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function generate(time) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(309313, arguments.callee, this, arguments);
                            arguments = J$.N(309321, 'arguments', arguments, true, false, false);
                            time = J$.N(309329, 'time', time, true, false, false);
                            if (J$.C(11024, J$.B(27994, '!==', J$.U(27986, 'typeof', J$.R(309073, 'time', time, false, false)), J$.T(309081, 'number', 21, false))))
                                time = J$.W(309113, 'time', J$.B(28002, '/', J$.M(309097, J$.I(typeof Date === 'undefined' ? Date = J$.R(309089, 'Date', undefined, true, true) : Date = J$.R(309089, 'Date', Date, true, true)), 'now', false)(), J$.T(309105, 1000, 22, false)), time, false, false);
                            time = J$.W(309161, 'time', J$.B(28010, '%', J$.F(309145, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(309121, 'parseInt', undefined, true, true) : parseInt = J$.R(309121, 'parseInt', parseInt, true, true)), false)(J$.R(309129, 'time', time, false, false), J$.T(309137, 10, 22, false)), J$.T(309153, 4294967295, 22, false)), time, false, false);
                            return J$.Rt(309305, J$.B(28034, '+', J$.B(28026, '+', J$.B(28018, '+', J$.F(309193, J$.R(309169, 'hex', hex, false, true), false)(J$.T(309177, 8, 22, false), J$.R(309185, 'time', time, false, false)), J$.F(309225, J$.R(309201, 'hex', hex, false, true), false)(J$.T(309209, 6, 22, false), J$.R(309217, 'MACHINE_ID', MACHINE_ID, false, true))), J$.F(309257, J$.R(309233, 'hex', hex, false, true), false)(J$.T(309241, 4, 22, false), J$.R(309249, 'pid', pid, false, true))), J$.F(309297, J$.R(309265, 'hex', hex, false, true), false)(J$.T(309273, 6, 22, false), J$.F(309289, J$.R(309281, 'next', next, false, true), false)())));
                        } catch (J$e) {
                            J$.Ex(310401, J$e);
                        } finally {
                            if (J$.Fr(310409))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function hex(length, n) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(309457, arguments.callee, this, arguments);
                            arguments = J$.N(309465, 'arguments', arguments, true, false, false);
                            length = J$.N(309473, 'length', length, true, false, false);
                            n = J$.N(309481, 'n', n, true, false, false);
                            n = J$.W(309361, 'n', J$.M(309353, J$.R(309337, 'n', n, false, false), 'toString', false)(J$.T(309345, 16, 22, false)), n, false, false);
                            return J$.Rt(309449, J$.C(11032, J$.B(28042, '===', J$.G(309377, J$.R(309369, 'n', n, false, false), 'length'), J$.R(309385, 'length', length, false, false))) ? J$.R(309393, 'n', n, false, false) : J$.B(28050, '+', J$.M(309433, J$.T(309401, '00000000', 21, false), 'substring', false)(J$.G(309417, J$.R(309409, 'n', n, false, false), 'length'), J$.R(309425, 'length', length, false, false)), J$.R(309441, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(310417, J$e);
                        } finally {
                            if (J$.Fr(310425))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function buffer(str) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(309793, arguments.callee, this, arguments);
                            arguments = J$.N(309801, 'arguments', arguments, true, false, false);
                            str = J$.N(309809, 'str', str, true, false, false);
                            J$.N(309817, 'i', i, false, false, false);
                            J$.N(309825, 'out', out, false, false, false);
                            var i = J$.W(309505, 'i', J$.T(309489, 0, 22, false), i, false, false), out = J$.W(309513, 'out', J$.T(309497, [], 10, false), out, false, false);
                            if (J$.C(11064, J$.B(28058, '===', J$.G(309529, J$.R(309521, 'str', str, false, false), 'length'), J$.T(309537, 24, 22, false))))
                                for (; J$.C(11040, J$.B(28066, '<', J$.R(309545, 'i', i, false, false), J$.T(309553, 24, 22, false))); J$.M(309649, J$.R(309561, 'out', out, false, false), 'push', false)(J$.F(309641, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(309569, 'parseInt', undefined, true, true) : parseInt = J$.R(309569, 'parseInt', parseInt, true, true)), false)(J$.B(28082, '+', J$.G(309593, J$.R(309577, 'str', str, false, false), J$.R(309585, 'i', i, false, false)), J$.G(309625, J$.R(309601, 'str', str, false, false), J$.B(28074, '+', J$.R(309609, 'i', i, false, false), J$.T(309617, 1, 22, false)))), J$.T(309633, 16, 22, false))), i = J$.W(309673, 'i', J$.B(28090, '+', J$.R(309665, 'i', i, false, false), J$.T(309657, 2, 22, false)), i, false, false));
                            else if (J$.C(11056, J$.B(28098, '===', J$.G(309689, J$.R(309681, 'str', str, false, false), 'length'), J$.T(309697, 12, 22, false))))
                                for (; J$.C(11048, J$.B(28106, '<', J$.R(309705, 'i', i, false, false), J$.T(309713, 12, 22, false))); J$.M(309753, J$.R(309721, 'out', out, false, false), 'push', false)(J$.M(309745, J$.R(309729, 'str', str, false, false), 'charCodeAt', false)(J$.R(309737, 'i', i, false, false))), J$.B(28130, '-', i = J$.W(309769, 'i', J$.B(28122, '+', J$.U(28114, '+', J$.R(309761, 'i', i, false, false)), 1), i, false, false), 1));
                            return J$.Rt(309785, J$.R(309777, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(310433, J$e);
                        } finally {
                            if (J$.Fr(310441))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(310073, 'MACHINE_ID', MACHINE_ID, false, false, false);
            J$.N(310081, 'index', index, false, false, false);
            J$.N(310089, 'pid', pid, false, false, false);
            J$.N(310097, 'isBuffer', isBuffer, false, false, false);
            ObjectID = J$.N(310113, 'ObjectID', J$.T(310105, ObjectID, 12, false), true, false, false);
            next = J$.N(310129, 'next', J$.T(310121, next, 12, false), true, false, false);
            generate = J$.N(310145, 'generate', J$.T(310137, generate, 12, false), true, false, false);
            hex = J$.N(310161, 'hex', J$.T(310153, hex, 12, false), true, false, false);
            buffer = J$.N(310177, 'buffer', J$.T(310169, buffer, 12, false), true, false, false);
            J$.N(310185, 'inspect', inspect, false, false, false);
            var MACHINE_ID = J$.W(306729, 'MACHINE_ID', J$.M(306721, J$.I(typeof Math === 'undefined' ? Math = J$.R(306689, 'Math', undefined, true, true) : Math = J$.R(306689, 'Math', Math, true, true)), 'floor', false)(J$.B(27578, '*', J$.M(306705, J$.I(typeof Math === 'undefined' ? Math = J$.R(306697, 'Math', undefined, true, true) : Math = J$.R(306697, 'Math', Math, true, true)), 'random', false)(), J$.T(306713, 16777215, 22, false))), MACHINE_ID, false, true);
            var index = J$.W(306801, 'index', J$.P(306793, J$.R(306737, 'ObjectID', ObjectID, false, true), 'index', J$.F(306785, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(306745, 'parseInt', undefined, true, true) : parseInt = J$.R(306745, 'parseInt', parseInt, true, true)), false)(J$.B(27586, '*', J$.M(306761, J$.I(typeof Math === 'undefined' ? Math = J$.R(306753, 'Math', undefined, true, true) : Math = J$.R(306753, 'Math', Math, true, true)), 'random', false)(), J$.T(306769, 16777215, 22, false)), J$.T(306777, 10, 22, false))), index, false, true);
            var pid = J$.W(306913, 'pid', J$.B(27634, '%', J$.C(10824, J$.C(10816, J$.B(27602, '===', J$.U(27594, 'typeof', J$.I(typeof process === 'undefined' ? process = J$.R(306809, 'process', undefined, true, true) : process = J$.R(306809, 'process', process, true, true))), J$.T(306817, 'undefined', 21, false))) ? J$._() : J$.B(27618, '!==', J$.U(27610, 'typeof', J$.G(306833, J$.I(typeof process === 'undefined' ? process = J$.R(306825, 'process', undefined, true, true) : process = J$.R(306825, 'process', process, true, true)), 'pid')), J$.T(306841, 'number', 21, false))) ? J$.M(306881, J$.I(typeof Math === 'undefined' ? Math = J$.R(306849, 'Math', undefined, true, true) : Math = J$.R(306849, 'Math', Math, true, true)), 'floor', false)(J$.B(27626, '*', J$.M(306865, J$.I(typeof Math === 'undefined' ? Math = J$.R(306857, 'Math', undefined, true, true) : Math = J$.R(306857, 'Math', Math, true, true)), 'random', false)(), J$.T(306873, 100000, 22, false))) : J$.G(306897, J$.I(typeof process === 'undefined' ? process = J$.R(306889, 'process', undefined, true, true) : process = J$.R(306889, 'process', process, true, true)), 'pid'), J$.T(306905, 65535, 22, false)), pid, false, true);
            var isBuffer = J$.W(307057, 'isBuffer', J$.T(307049, function (obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(307025, arguments.callee, this, arguments);
                            arguments = J$.N(307033, 'arguments', arguments, true, false, false);
                            obj = J$.N(307041, 'obj', obj, true, false, false);
                            return J$.Rt(307017, J$.U(27674, '!', J$.U(27666, '!', J$.C(10848, J$.C(10840, J$.C(10832, J$.B(27642, '!=', J$.R(306921, 'obj', obj, false, false), J$.T(306929, null, 25, false))) ? J$.G(306945, J$.R(306937, 'obj', obj, false, false), 'constructor') : J$._()) ? J$.B(27658, '===', J$.U(27650, 'typeof', J$.G(306969, J$.G(306961, J$.R(306953, 'obj', obj, false, false), 'constructor'), 'isBuffer')), J$.T(306977, 'function', 21, false)) : J$._()) ? J$.M(307009, J$.G(306993, J$.R(306985, 'obj', obj, false, false), 'constructor'), 'isBuffer', false)(J$.R(307001, 'obj', obj, false, false)) : J$._())));
                        } catch (J$e) {
                            J$.Ex(310193, J$e);
                        } finally {
                            if (J$.Fr(310201))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), isBuffer, false, true);
            J$.P(307793, J$.I(typeof module === 'undefined' ? module = J$.R(307777, 'module', undefined, true, true) : module = J$.R(307777, 'module', module, true, true)), 'exports', J$.R(307785, 'ObjectID', ObjectID, false, true));
            J$.P(307817, J$.R(307801, 'ObjectID', ObjectID, false, true), 'generate', J$.R(307809, 'generate', generate, false, true));
            J$.P(307841, J$.R(307825, 'ObjectID', ObjectID, false, true), 'default', J$.R(307833, 'ObjectID', ObjectID, false, true));
            J$.P(308001, J$.R(307849, 'ObjectID', ObjectID, false, true), 'createFromTime', J$.T(307993, function (time) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(307969, arguments.callee, this, arguments);
                            arguments = J$.N(307977, 'arguments', arguments, true, false, false);
                            time = J$.N(307985, 'time', time, true, false, false);
                            time = J$.W(307897, 'time', J$.B(27762, '%', J$.F(307881, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(307857, 'parseInt', undefined, true, true) : parseInt = J$.R(307857, 'parseInt', parseInt, true, true)), false)(J$.R(307865, 'time', time, false, false), J$.T(307873, 10, 22, false)), J$.T(307889, 4294967295, 22, false)), time, false, false);
                            return J$.Rt(307961, J$.F(307953, J$.R(307905, 'ObjectID', ObjectID, false, true), true)(J$.B(27770, '+', J$.F(307937, J$.R(307913, 'hex', hex, false, true), false)(J$.T(307921, 8, 22, false), J$.R(307929, 'time', time, false, false)), J$.T(307945, '0000000000000000', 21, false))));
                        } catch (J$e) {
                            J$.Ex(310257, J$e);
                        } finally {
                            if (J$.Fr(310265))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(308129, J$.R(308009, 'ObjectID', ObjectID, false, true), 'createFromHexString', J$.T(308121, function (hexString) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(308097, arguments.callee, this, arguments);
                            arguments = J$.N(308105, 'arguments', arguments, true, false, false);
                            hexString = J$.N(308113, 'hexString', hexString, true, false, false);
                            if (J$.C(10944, J$.U(27778, '!', J$.M(308033, J$.R(308017, 'ObjectID', ObjectID, false, true), 'isValid', false)(J$.R(308025, 'hexString', hexString, false, false)))))
                                throw J$.F(308057, J$.I(typeof Error === 'undefined' ? Error = J$.R(308041, 'Error', undefined, true, true) : Error = J$.R(308041, 'Error', Error, true, true)), true)(J$.T(308049, 'Invalid ObjectID hex string', 21, false));
                            return J$.Rt(308089, J$.F(308081, J$.R(308065, 'ObjectID', ObjectID, false, true), true)(J$.R(308073, 'hexString', hexString, false, false)));
                        } catch (J$e) {
                            J$.Ex(310273, J$e);
                        } finally {
                            if (J$.Fr(310281))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(308297, J$.R(308137, 'ObjectID', ObjectID, false, true), 'isValid', J$.T(308289, function (objectid) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(308265, arguments.callee, this, arguments);
                            arguments = J$.N(308273, 'arguments', arguments, true, false, false);
                            objectid = J$.N(308281, 'objectid', objectid, true, false, false);
                            if (J$.C(10976, J$.C(10968, J$.U(27786, '!', J$.R(308145, 'objectid', objectid, false, false))) ? J$._() : J$.C(10960, J$.B(27802, '!==', J$.U(27794, 'typeof', J$.R(308153, 'objectid', objectid, false, false)), J$.T(308161, 'string', 21, false))) ? J$.C(10952, J$.B(27818, '!==', J$.U(27810, 'typeof', J$.R(308169, 'objectid', objectid, false, false)), J$.T(308177, 'object', 21, false))) ? J$._() : J$.B(27834, '!==', J$.U(27826, 'typeof', J$.G(308193, J$.R(308185, 'objectid', objectid, false, false), 'toString')), J$.T(308201, 'function', 21, false)) : J$._()))
                                return J$.Rt(308217, J$.T(308209, false, 23, false));
                            return J$.Rt(308257, J$.M(308249, J$.T(308225, /^[0-9A-F]{24}$/i, 14, false), 'test', false)(J$.M(308241, J$.R(308233, 'objectid', objectid, false, false), 'toString', false)()));
                        } catch (J$e) {
                            J$.Ex(310289, J$e);
                        } finally {
                            if (J$.Fr(310297))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(308665, J$.R(308305, 'ObjectID', ObjectID, false, true), 'setMachineID', J$.T(308657, function (arg) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(308617, arguments.callee, this, arguments);
                            arguments = J$.N(308625, 'arguments', arguments, true, false, false);
                            arg = J$.N(308633, 'arg', arg, true, false, false);
                            J$.N(308641, 'machineID', machineID, false, false, false);
                            J$.N(308649, 'i', i, false, false, false);
                            var machineID;
                            if (J$.C(11008, J$.B(27850, '===', J$.U(27842, 'typeof', J$.R(308313, 'arg', arg, false, false)), J$.T(308321, 'string', 21, false)))) {
                                machineID = J$.W(308361, 'machineID', J$.F(308353, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(308329, 'parseInt', undefined, true, true) : parseInt = J$.R(308329, 'parseInt', parseInt, true, true)), false)(J$.R(308337, 'arg', arg, false, false), J$.T(308345, 16, 22, false)), machineID, false, false);
                                if (J$.C(10992, J$.F(308385, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(308369, 'isNaN', undefined, true, true) : isNaN = J$.R(308369, 'isNaN', isNaN, true, true)), false)(J$.R(308377, 'machineID', machineID, false, false)))) {
                                    arg = J$.W(308433, 'arg', J$.M(308425, J$.B(27858, '+', J$.T(308393, '000000', 21, false), J$.R(308401, 'arg', arg, false, false)), 'substr', false)(J$.U(27866, '-', J$.T(308409, 7, 22, false)), J$.T(308417, 6, 22, false)), arg, false, false);
                                    machineID = J$.W(308449, 'machineID', J$.T(308441, '', 21, false), machineID, false, false);
                                    for (var i = J$.W(308465, 'i', J$.T(308457, 0, 22, false), i, false, false); J$.C(10984, J$.B(27874, '<', J$.R(308473, 'i', i, false, false), J$.T(308481, 6, 22, false))); J$.B(27898, '-', i = J$.W(308497, 'i', J$.B(27890, '+', J$.U(27882, '+', J$.R(308489, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        machineID = J$.W(308537, 'machineID', J$.B(27906, '+', J$.R(308529, 'machineID', machineID, false, false), J$.M(308521, J$.R(308505, 'arg', arg, false, false), 'charCodeAt', false)(J$.R(308513, 'i', i, false, false))), machineID, false, false);
                                    }
                                }
                            } else if (J$.C(11000, J$.M(308561, J$.T(308545, /number|undefined/, 14, false), 'test', false)(J$.U(27914, 'typeof', J$.R(308553, 'arg', arg, false, false))))) {
                                machineID = J$.W(308585, 'machineID', J$.B(27922, '|', J$.R(308569, 'arg', arg, false, false), J$.T(308577, 0, 22, false)), machineID, false, false);
                            }
                            MACHINE_ID = J$.W(308609, 'MACHINE_ID', J$.B(27930, '&', J$.R(308593, 'machineID', machineID, false, false), J$.T(308601, 16777215, 22, false)), MACHINE_ID, false, true);
                        } catch (J$e) {
                            J$.Ex(310305, J$e);
                        } finally {
                            if (J$.Fr(310313))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(308721, J$.R(308673, 'ObjectID', ObjectID, false, true), 'getMachineID', J$.T(308713, function () {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(308697, arguments.callee, this, arguments);
                            arguments = J$.N(308705, 'arguments', arguments, true, false, false);
                            return J$.Rt(308689, J$.R(308681, 'MACHINE_ID', MACHINE_ID, false, true));
                        } catch (J$e) {
                            J$.Ex(310321, J$e);
                        } finally {
                            if (J$.Fr(310329))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(309009, J$.R(308729, 'ObjectID', ObjectID, false, true), 'prototype', J$.T(309001, {
                _bsontype: J$.T(308737, 'ObjectID', 21, false),
                constructor: J$.R(308745, 'ObjectID', ObjectID, false, true),
                toHexString: J$.T(308793, function () {
                    jalangiLabel9:
                        while (true) {
                            try {
                                J$.Fe(308777, arguments.callee, this, arguments);
                                arguments = J$.N(308785, 'arguments', arguments, true, false, false);
                                return J$.Rt(308769, J$.G(308761, J$.R(308753, 'this', this, false, false), 'str'));
                            } catch (J$e) {
                                J$.Ex(310337, J$e);
                            } finally {
                                if (J$.Fr(310345))
                                    continue jalangiLabel9;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                equals: J$.T(308873, function (other) {
                    jalangiLabel10:
                        while (true) {
                            try {
                                J$.Fe(308849, arguments.callee, this, arguments);
                                arguments = J$.N(308857, 'arguments', arguments, true, false, false);
                                other = J$.N(308865, 'other', other, true, false, false);
                                return J$.Rt(308841, J$.C(11016, J$.U(27946, '!', J$.U(27938, '!', J$.R(308801, 'other', other, false, false)))) ? J$.B(27954, '===', J$.G(308817, J$.R(308809, 'this', this, false, false), 'str'), J$.M(308833, J$.R(308825, 'other', other, false, false), 'toString', false)()) : J$._());
                            } catch (J$e) {
                                J$.Ex(310353, J$e);
                            } finally {
                                if (J$.Fr(310361))
                                    continue jalangiLabel10;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                getTimestamp: J$.T(308993, function () {
                    jalangiLabel11:
                        while (true) {
                            try {
                                J$.Fe(308977, arguments.callee, this, arguments);
                                arguments = J$.N(308985, 'arguments', arguments, true, false, false);
                                return J$.Rt(308969, J$.F(308961, J$.I(typeof Date === 'undefined' ? Date = J$.R(308881, 'Date', undefined, true, true) : Date = J$.R(308881, 'Date', Date, true, true)), true)(J$.B(27962, '*', J$.F(308945, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(308889, 'parseInt', undefined, true, true) : parseInt = J$.R(308889, 'parseInt', parseInt, true, true)), false)(J$.M(308929, J$.G(308905, J$.R(308897, 'this', this, false, false), 'str'), 'substr', false)(J$.T(308913, 0, 22, false), J$.T(308921, 8, 22, false)), J$.T(308937, 16, 22, false)), J$.T(308953, 1000, 22, false))));
                            } catch (J$e) {
                                J$.Ex(310369, J$e);
                            } finally {
                                if (J$.Fr(310377))
                                    continue jalangiLabel11;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            var inspect = J$.W(309873, 'inspect', J$.C(11080, J$.C(11072, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(309833, 'Symbol', undefined, true, true) : Symbol = J$.R(309833, 'Symbol', Symbol, true, true))) ? J$.M(309857, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(309841, 'Symbol', undefined, true, true) : Symbol = J$.R(309841, 'Symbol', Symbol, true, true)), 'for', false)(J$.T(309849, 'nodejs.util.inspect.custom', 21, false)) : J$._()) ? J$._() : J$.T(309865, 'inspect', 21, false), inspect, false, true);
            J$.P(309961, J$.G(309889, J$.R(309881, 'ObjectID', ObjectID, false, true), 'prototype'), J$.R(309897, 'inspect', inspect, false, true), J$.T(309953, function () {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(309937, arguments.callee, this, arguments);
                            arguments = J$.N(309945, 'arguments', arguments, true, false, false);
                            return J$.Rt(309929, J$.B(28146, '+', J$.B(28138, '+', J$.T(309905, 'ObjectID(', 21, false), J$.R(309913, 'this', this, false, false)), J$.T(309921, ')', 21, false)));
                        } catch (J$e) {
                            J$.Ex(310449, J$e);
                        } finally {
                            if (J$.Fr(310457))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(310009, J$.G(309977, J$.R(309969, 'ObjectID', ObjectID, false, true), 'prototype'), 'toJSON', J$.G(310001, J$.G(309993, J$.R(309985, 'ObjectID', ObjectID, false, true), 'prototype'), 'toHexString'));
            J$.P(310057, J$.G(310025, J$.R(310017, 'ObjectID', ObjectID, false, true), 'prototype'), 'toString', J$.G(310049, J$.G(310041, J$.R(310033, 'ObjectID', ObjectID, false, true), 'prototype'), 'toHexString'));
        } catch (J$e) {
            J$.Ex(310465, J$e);
        } finally {
            if (J$.Sr(310473))
                continue jalangiLabel17;
            else
                break jalangiLabel17;
        }
    }
// JALANGI DO NOT INSTRUMENT

