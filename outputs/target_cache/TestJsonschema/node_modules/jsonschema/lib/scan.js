J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(31641, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestJsonschema/node_modules/jsonschema/lib/scan.js');
            function SchemaScanResult(found, ref) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(29617, arguments.callee, this, arguments);
                            arguments = J$.N(29625, 'arguments', arguments, true, false, false);
                            found = J$.N(29633, 'found', found, true, false, false);
                            ref = J$.N(29641, 'ref', ref, true, false, false);
                            J$.P(29585, J$.R(29569, 'this', this, false, false), 'id', J$.R(29577, 'found', found, false, false));
                            J$.P(29609, J$.R(29593, 'this', this, false, false), 'ref', J$.R(29601, 'ref', ref, false, false));
                        } catch (J$e) {
                            J$.Ex(31681, J$e);
                        } finally {
                            if (J$.Fr(31689))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(31649, 'urilib', urilib, false, false, false);
            J$.N(31657, 'helpers', helpers, false, false, false);
            SchemaScanResult = J$.N(31673, 'SchemaScanResult', J$.T(31665, SchemaScanResult, 12, false), true, false, false);
            var urilib = J$.W(29497, 'urilib', J$.F(29489, J$.I(typeof require === 'undefined' ? require = J$.R(29473, 'require', undefined, true, true) : require = J$.R(29473, 'require', require, true, true)), false)(J$.T(29481, 'url', 21, false)), urilib, false, true);
            var helpers = J$.W(29529, 'helpers', J$.F(29521, J$.I(typeof require === 'undefined' ? require = J$.R(29505, 'require', undefined, true, true) : require = J$.R(29505, 'require', require, true, true)), false)(J$.T(29513, './helpers', 21, false)), helpers, false, true);
            J$.P(29561, J$.G(29545, J$.I(typeof module === 'undefined' ? module = J$.R(29537, 'module', undefined, true, true) : module = J$.R(29537, 'module', module, true, true)), 'exports'), 'SchemaScanResult', J$.R(29553, 'SchemaScanResult', SchemaScanResult, false, true));
            J$.P(31633, J$.G(29657, J$.I(typeof module === 'undefined' ? module = J$.R(29649, 'module', undefined, true, true) : module = J$.R(29649, 'module', module, true, true)), 'exports'), 'scan', J$.T(31625, function scan(base, schema) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(31521, arguments.callee, this, arguments);
                            function scanSchema(baseuri, schema) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(31009, arguments.callee, this, arguments);
                                            arguments = J$.N(31017, 'arguments', arguments, true, false, false);
                                            baseuri = J$.N(31025, 'baseuri', baseuri, true, false, false);
                                            schema = J$.N(31033, 'schema', schema, true, false, false);
                                            J$.N(31041, 'resolvedUri', resolvedUri, false, false, false);
                                            J$.N(31049, 'ourBase', ourBase, false, false, false);
                                            if (J$.C(1640, J$.C(1632, J$.U(2066, '!', J$.R(29665, 'schema', schema, false, false))) ? J$._() : J$.B(2082, '!=', J$.U(2074, 'typeof', J$.R(29673, 'schema', schema, false, false)), J$.T(29681, 'object', 21, false))))
                                                return J$.Rt(29689, undefined);
                                            if (J$.C(1656, J$.G(29705, J$.R(29697, 'schema', schema, false, false), '$ref'))) {
                                                var resolvedUri = J$.W(29753, 'resolvedUri', J$.M(29745, J$.R(29713, 'urilib', urilib, false, true), 'resolve', false)(J$.R(29721, 'baseuri', baseuri, false, false), J$.G(29737, J$.R(29729, 'schema', schema, false, false), '$ref')), resolvedUri, false, false);
                                                J$.P(29841, J$.R(29761, 'ref', ref, false, false), J$.R(29769, 'resolvedUri', resolvedUri, false, false), J$.C(1648, J$.G(29793, J$.R(29777, 'ref', ref, false, false), J$.R(29785, 'resolvedUri', resolvedUri, false, false))) ? J$.B(2090, '+', J$.G(29817, J$.R(29801, 'ref', ref, false, false), J$.R(29809, 'resolvedUri', resolvedUri, false, false)), J$.T(29825, 1, 22, false)) : J$.T(29833, 0, 22, false));
                                                return J$.Rt(29849, undefined);
                                            }
                                            var ourBase = J$.W(29921, 'ourBase', J$.C(1664, J$.G(29865, J$.R(29857, 'schema', schema, false, false), 'id')) ? J$.M(29905, J$.R(29873, 'urilib', urilib, false, true), 'resolve', false)(J$.R(29881, 'baseuri', baseuri, false, false), J$.G(29897, J$.R(29889, 'schema', schema, false, false), 'id')) : J$.R(29913, 'baseuri', baseuri, false, false), ourBase, false, false);
                                            if (J$.C(1704, J$.R(29929, 'ourBase', ourBase, false, false))) {
                                                if (J$.C(1672, J$.B(2098, '<', J$.M(29953, J$.R(29937, 'ourBase', ourBase, false, false), 'indexOf', false)(J$.T(29945, '#', 21, false)), J$.T(29961, 0, 22, false))))
                                                    ourBase = J$.W(29985, 'ourBase', J$.B(2106, '+', J$.R(29977, 'ourBase', ourBase, false, false), J$.T(29969, '#', 21, false)), ourBase, false, false);
                                                if (J$.C(1688, J$.G(30009, J$.R(29993, 'found', found, false, false), J$.R(30001, 'ourBase', ourBase, false, false)))) {
                                                    if (J$.C(1680, J$.U(2114, '!', J$.M(30057, J$.R(30017, 'helpers', helpers, false, true), 'deepCompareStrict', false)(J$.G(30041, J$.R(30025, 'found', found, false, false), J$.R(30033, 'ourBase', ourBase, false, false)), J$.R(30049, 'schema', schema, false, false))))) {
                                                        throw J$.F(30097, J$.I(typeof Error === 'undefined' ? Error = J$.R(30065, 'Error', undefined, true, true) : Error = J$.R(30065, 'Error', Error, true, true)), true)(J$.B(2130, '+', J$.B(2122, '+', J$.T(30073, 'Schema <', 21, false), J$.R(30081, 'schema', schema, false, false)), J$.T(30089, '> already exists with different definition', 21, false)));
                                                    }
                                                    return J$.Rt(30129, J$.G(30121, J$.R(30105, 'found', found, false, false), J$.R(30113, 'ourBase', ourBase, false, false)));
                                                }
                                                J$.P(30161, J$.R(30137, 'found', found, false, false), J$.R(30145, 'ourBase', ourBase, false, false), J$.R(30153, 'schema', schema, false, false));
                                                if (J$.C(1696, J$.B(2146, '==', J$.G(30201, J$.R(30169, 'ourBase', ourBase, false, false), J$.B(2138, '-', J$.G(30185, J$.R(30177, 'ourBase', ourBase, false, false), 'length'), J$.T(30193, 1, 22, false))), J$.T(30209, '#', 21, false)))) {
                                                    J$.P(30281, J$.R(30217, 'found', found, false, false), J$.M(30265, J$.R(30225, 'ourBase', ourBase, false, false), 'substring', false)(J$.T(30233, 0, 22, false), J$.B(2154, '-', J$.G(30249, J$.R(30241, 'ourBase', ourBase, false, false), 'length'), J$.T(30257, 1, 22, false))), J$.R(30273, 'schema', schema, false, false));
                                                }
                                            }
                                            J$.F(30377, J$.R(30289, 'scanArray', scanArray, false, false), false)(J$.B(2162, '+', J$.R(30297, 'ourBase', ourBase, false, false), J$.T(30305, '/items', 21, false)), J$.C(1712, J$.B(2170, 'instanceof', J$.G(30321, J$.R(30313, 'schema', schema, false, false), 'items'), J$.I(typeof Array === 'undefined' ? Array = J$.R(30329, 'Array', undefined, true, true) : Array = J$.R(30329, 'Array', Array, true, true)))) ? J$.G(30345, J$.R(30337, 'schema', schema, false, false), 'items') : J$.T(30369, [J$.G(30361, J$.R(30353, 'schema', schema, false, false), 'items')], 10, false));
                                            J$.F(30473, J$.R(30385, 'scanArray', scanArray, false, false), false)(J$.B(2178, '+', J$.R(30393, 'ourBase', ourBase, false, false), J$.T(30401, '/extends', 21, false)), J$.C(1720, J$.B(2186, 'instanceof', J$.G(30417, J$.R(30409, 'schema', schema, false, false), 'extends'), J$.I(typeof Array === 'undefined' ? Array = J$.R(30425, 'Array', undefined, true, true) : Array = J$.R(30425, 'Array', Array, true, true)))) ? J$.G(30441, J$.R(30433, 'schema', schema, false, false), 'extends') : J$.T(30465, [J$.G(30457, J$.R(30449, 'schema', schema, false, false), 'extends')], 10, false));
                                            J$.F(30521, J$.R(30481, 'scanSchema', scanSchema, false, false), false)(J$.B(2194, '+', J$.R(30489, 'ourBase', ourBase, false, false), J$.T(30497, '/additionalItems', 21, false)), J$.G(30513, J$.R(30505, 'schema', schema, false, false), 'additionalItems'));
                                            J$.F(30569, J$.R(30529, 'scanObject', scanObject, false, false), false)(J$.B(2202, '+', J$.R(30537, 'ourBase', ourBase, false, false), J$.T(30545, '/properties', 21, false)), J$.G(30561, J$.R(30553, 'schema', schema, false, false), 'properties'));
                                            J$.F(30617, J$.R(30577, 'scanSchema', scanSchema, false, false), false)(J$.B(2210, '+', J$.R(30585, 'ourBase', ourBase, false, false), J$.T(30593, '/additionalProperties', 21, false)), J$.G(30609, J$.R(30601, 'schema', schema, false, false), 'additionalProperties'));
                                            J$.F(30665, J$.R(30625, 'scanObject', scanObject, false, false), false)(J$.B(2218, '+', J$.R(30633, 'ourBase', ourBase, false, false), J$.T(30641, '/definitions', 21, false)), J$.G(30657, J$.R(30649, 'schema', schema, false, false), 'definitions'));
                                            J$.F(30713, J$.R(30673, 'scanObject', scanObject, false, false), false)(J$.B(2226, '+', J$.R(30681, 'ourBase', ourBase, false, false), J$.T(30689, '/patternProperties', 21, false)), J$.G(30705, J$.R(30697, 'schema', schema, false, false), 'patternProperties'));
                                            J$.F(30761, J$.R(30721, 'scanObject', scanObject, false, false), false)(J$.B(2234, '+', J$.R(30729, 'ourBase', ourBase, false, false), J$.T(30737, '/dependencies', 21, false)), J$.G(30753, J$.R(30745, 'schema', schema, false, false), 'dependencies'));
                                            J$.F(30809, J$.R(30769, 'scanArray', scanArray, false, false), false)(J$.B(2242, '+', J$.R(30777, 'ourBase', ourBase, false, false), J$.T(30785, '/disallow', 21, false)), J$.G(30801, J$.R(30793, 'schema', schema, false, false), 'disallow'));
                                            J$.F(30857, J$.R(30817, 'scanArray', scanArray, false, false), false)(J$.B(2250, '+', J$.R(30825, 'ourBase', ourBase, false, false), J$.T(30833, '/allOf', 21, false)), J$.G(30849, J$.R(30841, 'schema', schema, false, false), 'allOf'));
                                            J$.F(30905, J$.R(30865, 'scanArray', scanArray, false, false), false)(J$.B(2258, '+', J$.R(30873, 'ourBase', ourBase, false, false), J$.T(30881, '/anyOf', 21, false)), J$.G(30897, J$.R(30889, 'schema', schema, false, false), 'anyOf'));
                                            J$.F(30953, J$.R(30913, 'scanArray', scanArray, false, false), false)(J$.B(2266, '+', J$.R(30921, 'ourBase', ourBase, false, false), J$.T(30929, '/oneOf', 21, false)), J$.G(30945, J$.R(30937, 'schema', schema, false, false), 'oneOf'));
                                            J$.F(31001, J$.R(30961, 'scanSchema', scanSchema, false, false), false)(J$.B(2274, '+', J$.R(30969, 'ourBase', ourBase, false, false), J$.T(30977, '/not', 21, false)), J$.G(30993, J$.R(30985, 'schema', schema, false, false), 'not'));
                                        } catch (J$e) {
                                            J$.Ex(31697, J$e);
                                        } finally {
                                            if (J$.Fr(31705))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function scanArray(baseuri, schemas) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(31201, arguments.callee, this, arguments);
                                            arguments = J$.N(31209, 'arguments', arguments, true, false, false);
                                            baseuri = J$.N(31217, 'baseuri', baseuri, true, false, false);
                                            schemas = J$.N(31225, 'schemas', schemas, true, false, false);
                                            J$.N(31233, 'i', i, false, false, false);
                                            if (J$.C(1728, J$.U(2290, '!', J$.B(2282, 'instanceof', J$.R(31057, 'schemas', schemas, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(31065, 'Array', undefined, true, true) : Array = J$.R(31065, 'Array', Array, true, true))))))
                                                return J$.Rt(31073, undefined);
                                            for (var i = J$.W(31089, 'i', J$.T(31081, 0, 22, false), i, false, false); J$.C(1736, J$.B(2298, '<', J$.R(31097, 'i', i, false, false), J$.G(31113, J$.R(31105, 'schemas', schemas, false, false), 'length'))); J$.B(2322, '-', i = J$.W(31129, 'i', J$.B(2314, '+', J$.U(2306, '+', J$.R(31121, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                J$.F(31193, J$.R(31137, 'scanSchema', scanSchema, false, false), false)(J$.B(2338, '+', J$.B(2330, '+', J$.R(31145, 'baseuri', baseuri, false, false), J$.T(31153, '/', 21, false)), J$.R(31161, 'i', i, false, false)), J$.G(31185, J$.R(31169, 'schemas', schemas, false, false), J$.R(31177, 'i', i, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(31713, J$e);
                                        } finally {
                                            if (J$.Fr(31721))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function scanObject(baseuri, schemas) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(31361, arguments.callee, this, arguments);
                                            arguments = J$.N(31369, 'arguments', arguments, true, false, false);
                                            baseuri = J$.N(31377, 'baseuri', baseuri, true, false, false);
                                            schemas = J$.N(31385, 'schemas', schemas, true, false, false);
                                            J$.N(31393, 'p', p, false, false, false);
                                            if (J$.C(1752, J$.C(1744, J$.U(2346, '!', J$.R(31241, 'schemas', schemas, false, false))) ? J$._() : J$.B(2362, '!=', J$.U(2354, 'typeof', J$.R(31249, 'schemas', schemas, false, false)), J$.T(31257, 'object', 21, false))))
                                                return J$.Rt(31265, undefined);
                                            for (var p in J$.H(31345, J$.R(31273, 'schemas', schemas, false, false))) {
                                                J$.N(31353, 'p', p, false, true, false);
                                                {
                                                    {
                                                        J$.F(31337, J$.R(31281, 'scanSchema', scanSchema, false, false), false)(J$.B(2378, '+', J$.B(2370, '+', J$.R(31289, 'baseuri', baseuri, false, false), J$.T(31297, '/', 21, false)), J$.R(31305, 'p', p, false, false)), J$.G(31329, J$.R(31313, 'schemas', schemas, false, false), J$.R(31321, 'p', p, false, false)));
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(31729, J$e);
                                        } finally {
                                            if (J$.Fr(31737))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(31529, 'arguments', arguments, true, false, false);
                            base = J$.N(31537, 'base', base, true, false, false);
                            schema = J$.N(31545, 'schema', schema, true, false, false);
                            scanSchema = J$.N(31561, 'scanSchema', J$.T(31553, scanSchema, 12, false), true, false, false);
                            scanArray = J$.N(31577, 'scanArray', J$.T(31569, scanArray, 12, false), true, false, false);
                            scanObject = J$.N(31593, 'scanObject', J$.T(31585, scanObject, 12, false), true, false, false);
                            J$.N(31601, 'found', found, false, false, false);
                            J$.N(31609, 'ref', ref, false, false, false);
                            J$.N(31617, 'schemaUri', schemaUri, false, false, false);
                            var found = J$.W(31409, 'found', J$.T(31401, {}, 11, false), found, false, false);
                            var ref = J$.W(31425, 'ref', J$.T(31417, {}, 11, false), ref, false, false);
                            var schemaUri = J$.W(31441, 'schemaUri', J$.R(31433, 'base', base, false, false), schemaUri, false, false);
                            J$.F(31473, J$.R(31449, 'scanSchema', scanSchema, false, false), false)(J$.R(31457, 'base', base, false, false), J$.R(31465, 'schema', schema, false, false));
                            return J$.Rt(31513, J$.F(31505, J$.R(31481, 'SchemaScanResult', SchemaScanResult, false, true), true)(J$.R(31489, 'found', found, false, false), J$.R(31497, 'ref', ref, false, false)));
                        } catch (J$e) {
                            J$.Ex(31745, J$e);
                        } finally {
                            if (J$.Fr(31753))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(31761, J$e);
        } finally {
            if (J$.Sr(31769))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

