J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2807633, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestJsonschema/node_modules/jsonschema/lib/scan.js');
            function SchemaScanResult(found, ref) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2805609, arguments.callee, this, arguments);
                            arguments = J$.N(2805617, 'arguments', arguments, true, false, false);
                            found = J$.N(2805625, 'found', found, true, false, false);
                            ref = J$.N(2805633, 'ref', ref, true, false, false);
                            J$.P(2805577, J$.R(2805561, 'this', this, false, false), 'id', J$.R(2805569, 'found', found, false, false));
                            J$.P(2805601, J$.R(2805585, 'this', this, false, false), 'ref', J$.R(2805593, 'ref', ref, false, false));
                        } catch (J$e) {
                            J$.Ex(2807673, J$e);
                        } finally {
                            if (J$.Fr(2807681))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2807641, 'urilib', urilib, false, false, false);
            J$.N(2807649, 'helpers', helpers, false, false, false);
            SchemaScanResult = J$.N(2807665, 'SchemaScanResult', J$.T(2807657, SchemaScanResult, 12, false), true, false, false);
            var urilib = J$.W(2805489, 'urilib', J$.F(2805481, J$.I(typeof require === 'undefined' ? require = J$.R(2805465, 'require', undefined, true, true) : require = J$.R(2805465, 'require', require, true, true)), false)(J$.T(2805473, 'url', 21, false)), urilib, false, true);
            var helpers = J$.W(2805521, 'helpers', J$.F(2805513, J$.I(typeof require === 'undefined' ? require = J$.R(2805497, 'require', undefined, true, true) : require = J$.R(2805497, 'require', require, true, true)), false)(J$.T(2805505, './helpers', 21, false)), helpers, false, true);
            J$.P(2805553, J$.G(2805537, J$.I(typeof module === 'undefined' ? module = J$.R(2805529, 'module', undefined, true, true) : module = J$.R(2805529, 'module', module, true, true)), 'exports'), 'SchemaScanResult', J$.R(2805545, 'SchemaScanResult', SchemaScanResult, false, true));
            J$.P(2807625, J$.G(2805649, J$.I(typeof module === 'undefined' ? module = J$.R(2805641, 'module', undefined, true, true) : module = J$.R(2805641, 'module', module, true, true)), 'exports'), 'scan', J$.T(2807617, function scan(base, schema) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2807513, arguments.callee, this, arguments);
                            function scanSchema(baseuri, schema) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2807001, arguments.callee, this, arguments);
                                            arguments = J$.N(2807009, 'arguments', arguments, true, false, false);
                                            baseuri = J$.N(2807017, 'baseuri', baseuri, true, false, false);
                                            schema = J$.N(2807025, 'schema', schema, true, false, false);
                                            J$.N(2807033, 'resolvedUri', resolvedUri, false, false, false);
                                            J$.N(2807041, 'ourBase', ourBase, false, false, false);
                                            if (J$.C(150080, J$.C(150072, J$.U(312490, '!', J$.R(2805657, 'schema', schema, false, false))) ? J$._() : J$.B(312506, '!=', J$.U(312498, 'typeof', J$.R(2805665, 'schema', schema, false, false)), J$.T(2805673, 'object', 21, false))))
                                                return J$.Rt(2805681, undefined);
                                            if (J$.C(150096, J$.G(2805697, J$.R(2805689, 'schema', schema, false, false), '$ref'))) {
                                                var resolvedUri = J$.W(2805745, 'resolvedUri', J$.M(2805737, J$.R(2805705, 'urilib', urilib, false, true), 'resolve', false)(J$.R(2805713, 'baseuri', baseuri, false, false), J$.G(2805729, J$.R(2805721, 'schema', schema, false, false), '$ref')), resolvedUri, false, false);
                                                J$.P(2805833, J$.R(2805753, 'ref', ref, false, false), J$.R(2805761, 'resolvedUri', resolvedUri, false, false), J$.C(150088, J$.G(2805785, J$.R(2805769, 'ref', ref, false, false), J$.R(2805777, 'resolvedUri', resolvedUri, false, false))) ? J$.B(312514, '+', J$.G(2805809, J$.R(2805793, 'ref', ref, false, false), J$.R(2805801, 'resolvedUri', resolvedUri, false, false)), J$.T(2805817, 1, 22, false)) : J$.T(2805825, 0, 22, false));
                                                return J$.Rt(2805841, undefined);
                                            }
                                            var ourBase = J$.W(2805913, 'ourBase', J$.C(150104, J$.G(2805857, J$.R(2805849, 'schema', schema, false, false), 'id')) ? J$.M(2805897, J$.R(2805865, 'urilib', urilib, false, true), 'resolve', false)(J$.R(2805873, 'baseuri', baseuri, false, false), J$.G(2805889, J$.R(2805881, 'schema', schema, false, false), 'id')) : J$.R(2805905, 'baseuri', baseuri, false, false), ourBase, false, false);
                                            if (J$.C(150144, J$.R(2805921, 'ourBase', ourBase, false, false))) {
                                                if (J$.C(150112, J$.B(312522, '<', J$.M(2805945, J$.R(2805929, 'ourBase', ourBase, false, false), 'indexOf', false)(J$.T(2805937, '#', 21, false)), J$.T(2805953, 0, 22, false))))
                                                    ourBase = J$.W(2805977, 'ourBase', J$.B(312530, '+', J$.R(2805969, 'ourBase', ourBase, false, false), J$.T(2805961, '#', 21, false)), ourBase, false, false);
                                                if (J$.C(150128, J$.G(2806001, J$.R(2805985, 'found', found, false, false), J$.R(2805993, 'ourBase', ourBase, false, false)))) {
                                                    if (J$.C(150120, J$.U(312538, '!', J$.M(2806049, J$.R(2806009, 'helpers', helpers, false, true), 'deepCompareStrict', false)(J$.G(2806033, J$.R(2806017, 'found', found, false, false), J$.R(2806025, 'ourBase', ourBase, false, false)), J$.R(2806041, 'schema', schema, false, false))))) {
                                                        throw J$.F(2806089, J$.I(typeof Error === 'undefined' ? Error = J$.R(2806057, 'Error', undefined, true, true) : Error = J$.R(2806057, 'Error', Error, true, true)), true)(J$.B(312554, '+', J$.B(312546, '+', J$.T(2806065, 'Schema <', 21, false), J$.R(2806073, 'schema', schema, false, false)), J$.T(2806081, '> already exists with different definition', 21, false)));
                                                    }
                                                    return J$.Rt(2806121, J$.G(2806113, J$.R(2806097, 'found', found, false, false), J$.R(2806105, 'ourBase', ourBase, false, false)));
                                                }
                                                J$.P(2806153, J$.R(2806129, 'found', found, false, false), J$.R(2806137, 'ourBase', ourBase, false, false), J$.R(2806145, 'schema', schema, false, false));
                                                if (J$.C(150136, J$.B(312570, '==', J$.G(2806193, J$.R(2806161, 'ourBase', ourBase, false, false), J$.B(312562, '-', J$.G(2806177, J$.R(2806169, 'ourBase', ourBase, false, false), 'length'), J$.T(2806185, 1, 22, false))), J$.T(2806201, '#', 21, false)))) {
                                                    J$.P(2806273, J$.R(2806209, 'found', found, false, false), J$.M(2806257, J$.R(2806217, 'ourBase', ourBase, false, false), 'substring', false)(J$.T(2806225, 0, 22, false), J$.B(312578, '-', J$.G(2806241, J$.R(2806233, 'ourBase', ourBase, false, false), 'length'), J$.T(2806249, 1, 22, false))), J$.R(2806265, 'schema', schema, false, false));
                                                }
                                            }
                                            J$.F(2806369, J$.R(2806281, 'scanArray', scanArray, false, false), false)(J$.B(312586, '+', J$.R(2806289, 'ourBase', ourBase, false, false), J$.T(2806297, '/items', 21, false)), J$.C(150152, J$.B(312594, 'instanceof', J$.G(2806313, J$.R(2806305, 'schema', schema, false, false), 'items'), J$.I(typeof Array === 'undefined' ? Array = J$.R(2806321, 'Array', undefined, true, true) : Array = J$.R(2806321, 'Array', Array, true, true)))) ? J$.G(2806337, J$.R(2806329, 'schema', schema, false, false), 'items') : J$.T(2806361, [J$.G(2806353, J$.R(2806345, 'schema', schema, false, false), 'items')], 10, false));
                                            J$.F(2806465, J$.R(2806377, 'scanArray', scanArray, false, false), false)(J$.B(312602, '+', J$.R(2806385, 'ourBase', ourBase, false, false), J$.T(2806393, '/extends', 21, false)), J$.C(150160, J$.B(312610, 'instanceof', J$.G(2806409, J$.R(2806401, 'schema', schema, false, false), 'extends'), J$.I(typeof Array === 'undefined' ? Array = J$.R(2806417, 'Array', undefined, true, true) : Array = J$.R(2806417, 'Array', Array, true, true)))) ? J$.G(2806433, J$.R(2806425, 'schema', schema, false, false), 'extends') : J$.T(2806457, [J$.G(2806449, J$.R(2806441, 'schema', schema, false, false), 'extends')], 10, false));
                                            J$.F(2806513, J$.R(2806473, 'scanSchema', scanSchema, false, false), false)(J$.B(312618, '+', J$.R(2806481, 'ourBase', ourBase, false, false), J$.T(2806489, '/additionalItems', 21, false)), J$.G(2806505, J$.R(2806497, 'schema', schema, false, false), 'additionalItems'));
                                            J$.F(2806561, J$.R(2806521, 'scanObject', scanObject, false, false), false)(J$.B(312626, '+', J$.R(2806529, 'ourBase', ourBase, false, false), J$.T(2806537, '/properties', 21, false)), J$.G(2806553, J$.R(2806545, 'schema', schema, false, false), 'properties'));
                                            J$.F(2806609, J$.R(2806569, 'scanSchema', scanSchema, false, false), false)(J$.B(312634, '+', J$.R(2806577, 'ourBase', ourBase, false, false), J$.T(2806585, '/additionalProperties', 21, false)), J$.G(2806601, J$.R(2806593, 'schema', schema, false, false), 'additionalProperties'));
                                            J$.F(2806657, J$.R(2806617, 'scanObject', scanObject, false, false), false)(J$.B(312642, '+', J$.R(2806625, 'ourBase', ourBase, false, false), J$.T(2806633, '/definitions', 21, false)), J$.G(2806649, J$.R(2806641, 'schema', schema, false, false), 'definitions'));
                                            J$.F(2806705, J$.R(2806665, 'scanObject', scanObject, false, false), false)(J$.B(312650, '+', J$.R(2806673, 'ourBase', ourBase, false, false), J$.T(2806681, '/patternProperties', 21, false)), J$.G(2806697, J$.R(2806689, 'schema', schema, false, false), 'patternProperties'));
                                            J$.F(2806753, J$.R(2806713, 'scanObject', scanObject, false, false), false)(J$.B(312658, '+', J$.R(2806721, 'ourBase', ourBase, false, false), J$.T(2806729, '/dependencies', 21, false)), J$.G(2806745, J$.R(2806737, 'schema', schema, false, false), 'dependencies'));
                                            J$.F(2806801, J$.R(2806761, 'scanArray', scanArray, false, false), false)(J$.B(312666, '+', J$.R(2806769, 'ourBase', ourBase, false, false), J$.T(2806777, '/disallow', 21, false)), J$.G(2806793, J$.R(2806785, 'schema', schema, false, false), 'disallow'));
                                            J$.F(2806849, J$.R(2806809, 'scanArray', scanArray, false, false), false)(J$.B(312674, '+', J$.R(2806817, 'ourBase', ourBase, false, false), J$.T(2806825, '/allOf', 21, false)), J$.G(2806841, J$.R(2806833, 'schema', schema, false, false), 'allOf'));
                                            J$.F(2806897, J$.R(2806857, 'scanArray', scanArray, false, false), false)(J$.B(312682, '+', J$.R(2806865, 'ourBase', ourBase, false, false), J$.T(2806873, '/anyOf', 21, false)), J$.G(2806889, J$.R(2806881, 'schema', schema, false, false), 'anyOf'));
                                            J$.F(2806945, J$.R(2806905, 'scanArray', scanArray, false, false), false)(J$.B(312690, '+', J$.R(2806913, 'ourBase', ourBase, false, false), J$.T(2806921, '/oneOf', 21, false)), J$.G(2806937, J$.R(2806929, 'schema', schema, false, false), 'oneOf'));
                                            J$.F(2806993, J$.R(2806953, 'scanSchema', scanSchema, false, false), false)(J$.B(312698, '+', J$.R(2806961, 'ourBase', ourBase, false, false), J$.T(2806969, '/not', 21, false)), J$.G(2806985, J$.R(2806977, 'schema', schema, false, false), 'not'));
                                        } catch (J$e) {
                                            J$.Ex(2807689, J$e);
                                        } finally {
                                            if (J$.Fr(2807697))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function scanArray(baseuri, schemas) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(2807193, arguments.callee, this, arguments);
                                            arguments = J$.N(2807201, 'arguments', arguments, true, false, false);
                                            baseuri = J$.N(2807209, 'baseuri', baseuri, true, false, false);
                                            schemas = J$.N(2807217, 'schemas', schemas, true, false, false);
                                            J$.N(2807225, 'i', i, false, false, false);
                                            if (J$.C(150168, J$.U(312714, '!', J$.B(312706, 'instanceof', J$.R(2807049, 'schemas', schemas, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(2807057, 'Array', undefined, true, true) : Array = J$.R(2807057, 'Array', Array, true, true))))))
                                                return J$.Rt(2807065, undefined);
                                            for (var i = J$.W(2807081, 'i', J$.T(2807073, 0, 22, false), i, false, false); J$.C(150176, J$.B(312722, '<', J$.R(2807089, 'i', i, false, false), J$.G(2807105, J$.R(2807097, 'schemas', schemas, false, false), 'length'))); J$.B(312746, '-', i = J$.W(2807121, 'i', J$.B(312738, '+', J$.U(312730, '+', J$.R(2807113, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                J$.F(2807185, J$.R(2807129, 'scanSchema', scanSchema, false, false), false)(J$.B(312762, '+', J$.B(312754, '+', J$.R(2807137, 'baseuri', baseuri, false, false), J$.T(2807145, '/', 21, false)), J$.R(2807153, 'i', i, false, false)), J$.G(2807177, J$.R(2807161, 'schemas', schemas, false, false), J$.R(2807169, 'i', i, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2807705, J$e);
                                        } finally {
                                            if (J$.Fr(2807713))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function scanObject(baseuri, schemas) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2807353, arguments.callee, this, arguments);
                                            arguments = J$.N(2807361, 'arguments', arguments, true, false, false);
                                            baseuri = J$.N(2807369, 'baseuri', baseuri, true, false, false);
                                            schemas = J$.N(2807377, 'schemas', schemas, true, false, false);
                                            J$.N(2807385, 'p', p, false, false, false);
                                            if (J$.C(150192, J$.C(150184, J$.U(312770, '!', J$.R(2807233, 'schemas', schemas, false, false))) ? J$._() : J$.B(312786, '!=', J$.U(312778, 'typeof', J$.R(2807241, 'schemas', schemas, false, false)), J$.T(2807249, 'object', 21, false))))
                                                return J$.Rt(2807257, undefined);
                                            for (var p in J$.H(2807337, J$.R(2807265, 'schemas', schemas, false, false))) {
                                                J$.N(2807345, 'p', p, false, true, false);
                                                {
                                                    {
                                                        J$.F(2807329, J$.R(2807273, 'scanSchema', scanSchema, false, false), false)(J$.B(312802, '+', J$.B(312794, '+', J$.R(2807281, 'baseuri', baseuri, false, false), J$.T(2807289, '/', 21, false)), J$.R(2807297, 'p', p, false, false)), J$.G(2807321, J$.R(2807305, 'schemas', schemas, false, false), J$.R(2807313, 'p', p, false, false)));
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2807721, J$e);
                                        } finally {
                                            if (J$.Fr(2807729))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2807521, 'arguments', arguments, true, false, false);
                            base = J$.N(2807529, 'base', base, true, false, false);
                            schema = J$.N(2807537, 'schema', schema, true, false, false);
                            scanSchema = J$.N(2807553, 'scanSchema', J$.T(2807545, scanSchema, 12, false), true, false, false);
                            scanArray = J$.N(2807569, 'scanArray', J$.T(2807561, scanArray, 12, false), true, false, false);
                            scanObject = J$.N(2807585, 'scanObject', J$.T(2807577, scanObject, 12, false), true, false, false);
                            J$.N(2807593, 'found', found, false, false, false);
                            J$.N(2807601, 'ref', ref, false, false, false);
                            J$.N(2807609, 'schemaUri', schemaUri, false, false, false);
                            var found = J$.W(2807401, 'found', J$.T(2807393, {}, 11, false), found, false, false);
                            var ref = J$.W(2807417, 'ref', J$.T(2807409, {}, 11, false), ref, false, false);
                            var schemaUri = J$.W(2807433, 'schemaUri', J$.R(2807425, 'base', base, false, false), schemaUri, false, false);
                            J$.F(2807465, J$.R(2807441, 'scanSchema', scanSchema, false, false), false)(J$.R(2807449, 'base', base, false, false), J$.R(2807457, 'schema', schema, false, false));
                            return J$.Rt(2807505, J$.F(2807497, J$.R(2807473, 'SchemaScanResult', SchemaScanResult, false, true), true)(J$.R(2807481, 'found', found, false, false), J$.R(2807489, 'ref', ref, false, false)));
                        } catch (J$e) {
                            J$.Ex(2807737, J$e);
                        } finally {
                            if (J$.Fr(2807745))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2807753, J$e);
        } finally {
            if (J$.Sr(2807761))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

