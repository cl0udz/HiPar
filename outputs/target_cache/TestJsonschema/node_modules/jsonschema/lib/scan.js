J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(3947273, '/home/james/nodejs/HiPar/outputs/target_cache/TestJsonschema/node_modules/jsonschema/lib/scan.js');
            function SchemaScanResult(found, ref) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3945249, arguments.callee, this, arguments);
                            arguments = J$.N(3945257, 'arguments', arguments, true, false, false);
                            found = J$.N(3945265, 'found', found, true, false, false);
                            ref = J$.N(3945273, 'ref', ref, true, false, false);
                            J$.P(3945217, J$.R(3945201, 'this', this, false, false), 'id', J$.R(3945209, 'found', found, false, false));
                            J$.P(3945241, J$.R(3945225, 'this', this, false, false), 'ref', J$.R(3945233, 'ref', ref, false, false));
                        } catch (J$e) {
                            J$.Ex(3947313, J$e);
                        } finally {
                            if (J$.Fr(3947321))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3947281, 'urilib', urilib, false, false, false);
            J$.N(3947289, 'helpers', helpers, false, false, false);
            SchemaScanResult = J$.N(3947305, 'SchemaScanResult', J$.T(3947297, SchemaScanResult, 12, false), true, false, false);
            var urilib = J$.W(3945129, 'urilib', J$.F(3945121, J$.I(typeof require === 'undefined' ? require = J$.R(3945105, 'require', undefined, true, true) : require = J$.R(3945105, 'require', require, true, true)), false)(J$.T(3945113, 'url', 21, false)), urilib, false, true);
            var helpers = J$.W(3945161, 'helpers', J$.F(3945153, J$.I(typeof require === 'undefined' ? require = J$.R(3945137, 'require', undefined, true, true) : require = J$.R(3945137, 'require', require, true, true)), false)(J$.T(3945145, './helpers', 21, false)), helpers, false, true);
            J$.P(3945193, J$.G(3945177, J$.I(typeof module === 'undefined' ? module = J$.R(3945169, 'module', undefined, true, true) : module = J$.R(3945169, 'module', module, true, true)), 'exports'), 'SchemaScanResult', J$.R(3945185, 'SchemaScanResult', SchemaScanResult, false, true));
            J$.P(3947265, J$.G(3945289, J$.I(typeof module === 'undefined' ? module = J$.R(3945281, 'module', undefined, true, true) : module = J$.R(3945281, 'module', module, true, true)), 'exports'), 'scan', J$.T(3947257, function scan(base, schema) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3947153, arguments.callee, this, arguments);
                            function scanSchema(baseuri, schema) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(3946641, arguments.callee, this, arguments);
                                            arguments = J$.N(3946649, 'arguments', arguments, true, false, false);
                                            baseuri = J$.N(3946657, 'baseuri', baseuri, true, false, false);
                                            schema = J$.N(3946665, 'schema', schema, true, false, false);
                                            J$.N(3946673, 'resolvedUri', resolvedUri, false, false, false);
                                            J$.N(3946681, 'ourBase', ourBase, false, false, false);
                                            if (J$.C(207768, J$.C(207760, J$.U(384994, '!', J$.R(3945297, 'schema', schema, false, false))) ? J$._() : J$.B(385010, '!=', J$.U(385002, 'typeof', J$.R(3945305, 'schema', schema, false, false)), J$.T(3945313, 'object', 21, false))))
                                                return J$.Rt(3945321, undefined);
                                            if (J$.C(207784, J$.G(3945337, J$.R(3945329, 'schema', schema, false, false), '$ref'))) {
                                                var resolvedUri = J$.W(3945385, 'resolvedUri', J$.M(3945377, J$.R(3945345, 'urilib', urilib, false, true), 'resolve', false)(J$.R(3945353, 'baseuri', baseuri, false, false), J$.G(3945369, J$.R(3945361, 'schema', schema, false, false), '$ref')), resolvedUri, false, false);
                                                J$.P(3945473, J$.R(3945393, 'ref', ref, false, false), J$.R(3945401, 'resolvedUri', resolvedUri, false, false), J$.C(207776, J$.G(3945425, J$.R(3945409, 'ref', ref, false, false), J$.R(3945417, 'resolvedUri', resolvedUri, false, false))) ? J$.B(385018, '+', J$.G(3945449, J$.R(3945433, 'ref', ref, false, false), J$.R(3945441, 'resolvedUri', resolvedUri, false, false)), J$.T(3945457, 1, 22, false)) : J$.T(3945465, 0, 22, false));
                                                return J$.Rt(3945481, undefined);
                                            }
                                            var ourBase = J$.W(3945553, 'ourBase', J$.C(207792, J$.G(3945497, J$.R(3945489, 'schema', schema, false, false), 'id')) ? J$.M(3945537, J$.R(3945505, 'urilib', urilib, false, true), 'resolve', false)(J$.R(3945513, 'baseuri', baseuri, false, false), J$.G(3945529, J$.R(3945521, 'schema', schema, false, false), 'id')) : J$.R(3945545, 'baseuri', baseuri, false, false), ourBase, false, false);
                                            if (J$.C(207832, J$.R(3945561, 'ourBase', ourBase, false, false))) {
                                                if (J$.C(207800, J$.B(385026, '<', J$.M(3945585, J$.R(3945569, 'ourBase', ourBase, false, false), 'indexOf', false)(J$.T(3945577, '#', 21, false)), J$.T(3945593, 0, 22, false))))
                                                    ourBase = J$.W(3945617, 'ourBase', J$.B(385034, '+', J$.R(3945609, 'ourBase', ourBase, false, false), J$.T(3945601, '#', 21, false)), ourBase, false, false);
                                                if (J$.C(207816, J$.G(3945641, J$.R(3945625, 'found', found, false, false), J$.R(3945633, 'ourBase', ourBase, false, false)))) {
                                                    if (J$.C(207808, J$.U(385042, '!', J$.M(3945689, J$.R(3945649, 'helpers', helpers, false, true), 'deepCompareStrict', false)(J$.G(3945673, J$.R(3945657, 'found', found, false, false), J$.R(3945665, 'ourBase', ourBase, false, false)), J$.R(3945681, 'schema', schema, false, false))))) {
                                                        throw J$.F(3945729, J$.I(typeof Error === 'undefined' ? Error = J$.R(3945697, 'Error', undefined, true, true) : Error = J$.R(3945697, 'Error', Error, true, true)), true)(J$.B(385058, '+', J$.B(385050, '+', J$.T(3945705, 'Schema <', 21, false), J$.R(3945713, 'schema', schema, false, false)), J$.T(3945721, '> already exists with different definition', 21, false)));
                                                    }
                                                    return J$.Rt(3945761, J$.G(3945753, J$.R(3945737, 'found', found, false, false), J$.R(3945745, 'ourBase', ourBase, false, false)));
                                                }
                                                J$.P(3945793, J$.R(3945769, 'found', found, false, false), J$.R(3945777, 'ourBase', ourBase, false, false), J$.R(3945785, 'schema', schema, false, false));
                                                if (J$.C(207824, J$.B(385074, '==', J$.G(3945833, J$.R(3945801, 'ourBase', ourBase, false, false), J$.B(385066, '-', J$.G(3945817, J$.R(3945809, 'ourBase', ourBase, false, false), 'length'), J$.T(3945825, 1, 22, false))), J$.T(3945841, '#', 21, false)))) {
                                                    J$.P(3945913, J$.R(3945849, 'found', found, false, false), J$.M(3945897, J$.R(3945857, 'ourBase', ourBase, false, false), 'substring', false)(J$.T(3945865, 0, 22, false), J$.B(385082, '-', J$.G(3945881, J$.R(3945873, 'ourBase', ourBase, false, false), 'length'), J$.T(3945889, 1, 22, false))), J$.R(3945905, 'schema', schema, false, false));
                                                }
                                            }
                                            J$.F(3946009, J$.R(3945921, 'scanArray', scanArray, false, false), false)(J$.B(385090, '+', J$.R(3945929, 'ourBase', ourBase, false, false), J$.T(3945937, '/items', 21, false)), J$.C(207840, J$.B(385098, 'instanceof', J$.G(3945953, J$.R(3945945, 'schema', schema, false, false), 'items'), J$.I(typeof Array === 'undefined' ? Array = J$.R(3945961, 'Array', undefined, true, true) : Array = J$.R(3945961, 'Array', Array, true, true)))) ? J$.G(3945977, J$.R(3945969, 'schema', schema, false, false), 'items') : J$.T(3946001, [J$.G(3945993, J$.R(3945985, 'schema', schema, false, false), 'items')], 10, false));
                                            J$.F(3946105, J$.R(3946017, 'scanArray', scanArray, false, false), false)(J$.B(385106, '+', J$.R(3946025, 'ourBase', ourBase, false, false), J$.T(3946033, '/extends', 21, false)), J$.C(207848, J$.B(385114, 'instanceof', J$.G(3946049, J$.R(3946041, 'schema', schema, false, false), 'extends'), J$.I(typeof Array === 'undefined' ? Array = J$.R(3946057, 'Array', undefined, true, true) : Array = J$.R(3946057, 'Array', Array, true, true)))) ? J$.G(3946073, J$.R(3946065, 'schema', schema, false, false), 'extends') : J$.T(3946097, [J$.G(3946089, J$.R(3946081, 'schema', schema, false, false), 'extends')], 10, false));
                                            J$.F(3946153, J$.R(3946113, 'scanSchema', scanSchema, false, false), false)(J$.B(385122, '+', J$.R(3946121, 'ourBase', ourBase, false, false), J$.T(3946129, '/additionalItems', 21, false)), J$.G(3946145, J$.R(3946137, 'schema', schema, false, false), 'additionalItems'));
                                            J$.F(3946201, J$.R(3946161, 'scanObject', scanObject, false, false), false)(J$.B(385130, '+', J$.R(3946169, 'ourBase', ourBase, false, false), J$.T(3946177, '/properties', 21, false)), J$.G(3946193, J$.R(3946185, 'schema', schema, false, false), 'properties'));
                                            J$.F(3946249, J$.R(3946209, 'scanSchema', scanSchema, false, false), false)(J$.B(385138, '+', J$.R(3946217, 'ourBase', ourBase, false, false), J$.T(3946225, '/additionalProperties', 21, false)), J$.G(3946241, J$.R(3946233, 'schema', schema, false, false), 'additionalProperties'));
                                            J$.F(3946297, J$.R(3946257, 'scanObject', scanObject, false, false), false)(J$.B(385146, '+', J$.R(3946265, 'ourBase', ourBase, false, false), J$.T(3946273, '/definitions', 21, false)), J$.G(3946289, J$.R(3946281, 'schema', schema, false, false), 'definitions'));
                                            J$.F(3946345, J$.R(3946305, 'scanObject', scanObject, false, false), false)(J$.B(385154, '+', J$.R(3946313, 'ourBase', ourBase, false, false), J$.T(3946321, '/patternProperties', 21, false)), J$.G(3946337, J$.R(3946329, 'schema', schema, false, false), 'patternProperties'));
                                            J$.F(3946393, J$.R(3946353, 'scanObject', scanObject, false, false), false)(J$.B(385162, '+', J$.R(3946361, 'ourBase', ourBase, false, false), J$.T(3946369, '/dependencies', 21, false)), J$.G(3946385, J$.R(3946377, 'schema', schema, false, false), 'dependencies'));
                                            J$.F(3946441, J$.R(3946401, 'scanArray', scanArray, false, false), false)(J$.B(385170, '+', J$.R(3946409, 'ourBase', ourBase, false, false), J$.T(3946417, '/disallow', 21, false)), J$.G(3946433, J$.R(3946425, 'schema', schema, false, false), 'disallow'));
                                            J$.F(3946489, J$.R(3946449, 'scanArray', scanArray, false, false), false)(J$.B(385178, '+', J$.R(3946457, 'ourBase', ourBase, false, false), J$.T(3946465, '/allOf', 21, false)), J$.G(3946481, J$.R(3946473, 'schema', schema, false, false), 'allOf'));
                                            J$.F(3946537, J$.R(3946497, 'scanArray', scanArray, false, false), false)(J$.B(385186, '+', J$.R(3946505, 'ourBase', ourBase, false, false), J$.T(3946513, '/anyOf', 21, false)), J$.G(3946529, J$.R(3946521, 'schema', schema, false, false), 'anyOf'));
                                            J$.F(3946585, J$.R(3946545, 'scanArray', scanArray, false, false), false)(J$.B(385194, '+', J$.R(3946553, 'ourBase', ourBase, false, false), J$.T(3946561, '/oneOf', 21, false)), J$.G(3946577, J$.R(3946569, 'schema', schema, false, false), 'oneOf'));
                                            J$.F(3946633, J$.R(3946593, 'scanSchema', scanSchema, false, false), false)(J$.B(385202, '+', J$.R(3946601, 'ourBase', ourBase, false, false), J$.T(3946609, '/not', 21, false)), J$.G(3946625, J$.R(3946617, 'schema', schema, false, false), 'not'));
                                        } catch (J$e) {
                                            J$.Ex(3947329, J$e);
                                        } finally {
                                            if (J$.Fr(3947337))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function scanArray(baseuri, schemas) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(3946833, arguments.callee, this, arguments);
                                            arguments = J$.N(3946841, 'arguments', arguments, true, false, false);
                                            baseuri = J$.N(3946849, 'baseuri', baseuri, true, false, false);
                                            schemas = J$.N(3946857, 'schemas', schemas, true, false, false);
                                            J$.N(3946865, 'i', i, false, false, false);
                                            if (J$.C(207856, J$.U(385218, '!', J$.B(385210, 'instanceof', J$.R(3946689, 'schemas', schemas, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(3946697, 'Array', undefined, true, true) : Array = J$.R(3946697, 'Array', Array, true, true))))))
                                                return J$.Rt(3946705, undefined);
                                            for (var i = J$.W(3946721, 'i', J$.T(3946713, 0, 22, false), i, false, false); J$.C(207864, J$.B(385226, '<', J$.R(3946729, 'i', i, false, false), J$.G(3946745, J$.R(3946737, 'schemas', schemas, false, false), 'length'))); J$.B(385250, '-', i = J$.W(3946761, 'i', J$.B(385242, '+', J$.U(385234, '+', J$.R(3946753, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                J$.F(3946825, J$.R(3946769, 'scanSchema', scanSchema, false, false), false)(J$.B(385266, '+', J$.B(385258, '+', J$.R(3946777, 'baseuri', baseuri, false, false), J$.T(3946785, '/', 21, false)), J$.R(3946793, 'i', i, false, false)), J$.G(3946817, J$.R(3946801, 'schemas', schemas, false, false), J$.R(3946809, 'i', i, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(3947345, J$e);
                                        } finally {
                                            if (J$.Fr(3947353))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function scanObject(baseuri, schemas) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3946993, arguments.callee, this, arguments);
                                            arguments = J$.N(3947001, 'arguments', arguments, true, false, false);
                                            baseuri = J$.N(3947009, 'baseuri', baseuri, true, false, false);
                                            schemas = J$.N(3947017, 'schemas', schemas, true, false, false);
                                            J$.N(3947025, 'p', p, false, false, false);
                                            if (J$.C(207880, J$.C(207872, J$.U(385274, '!', J$.R(3946873, 'schemas', schemas, false, false))) ? J$._() : J$.B(385290, '!=', J$.U(385282, 'typeof', J$.R(3946881, 'schemas', schemas, false, false)), J$.T(3946889, 'object', 21, false))))
                                                return J$.Rt(3946897, undefined);
                                            for (var p in J$.H(3946977, J$.R(3946905, 'schemas', schemas, false, false))) {
                                                J$.N(3946985, 'p', p, false, true, false);
                                                {
                                                    {
                                                        J$.F(3946969, J$.R(3946913, 'scanSchema', scanSchema, false, false), false)(J$.B(385306, '+', J$.B(385298, '+', J$.R(3946921, 'baseuri', baseuri, false, false), J$.T(3946929, '/', 21, false)), J$.R(3946937, 'p', p, false, false)), J$.G(3946961, J$.R(3946945, 'schemas', schemas, false, false), J$.R(3946953, 'p', p, false, false)));
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(3947361, J$e);
                                        } finally {
                                            if (J$.Fr(3947369))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(3947161, 'arguments', arguments, true, false, false);
                            base = J$.N(3947169, 'base', base, true, false, false);
                            schema = J$.N(3947177, 'schema', schema, true, false, false);
                            scanSchema = J$.N(3947193, 'scanSchema', J$.T(3947185, scanSchema, 12, false), true, false, false);
                            scanArray = J$.N(3947209, 'scanArray', J$.T(3947201, scanArray, 12, false), true, false, false);
                            scanObject = J$.N(3947225, 'scanObject', J$.T(3947217, scanObject, 12, false), true, false, false);
                            J$.N(3947233, 'found', found, false, false, false);
                            J$.N(3947241, 'ref', ref, false, false, false);
                            J$.N(3947249, 'schemaUri', schemaUri, false, false, false);
                            var found = J$.W(3947041, 'found', J$.T(3947033, {}, 11, false), found, false, false);
                            var ref = J$.W(3947057, 'ref', J$.T(3947049, {}, 11, false), ref, false, false);
                            var schemaUri = J$.W(3947073, 'schemaUri', J$.R(3947065, 'base', base, false, false), schemaUri, false, false);
                            J$.F(3947105, J$.R(3947081, 'scanSchema', scanSchema, false, false), false)(J$.R(3947089, 'base', base, false, false), J$.R(3947097, 'schema', schema, false, false));
                            return J$.Rt(3947145, J$.F(3947137, J$.R(3947113, 'SchemaScanResult', SchemaScanResult, false, true), true)(J$.R(3947121, 'found', found, false, false), J$.R(3947129, 'ref', ref, false, false)));
                        } catch (J$e) {
                            J$.Ex(3947377, J$e);
                        } finally {
                            if (J$.Fr(3947385))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3947393, J$e);
        } finally {
            if (J$.Sr(3947401))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

