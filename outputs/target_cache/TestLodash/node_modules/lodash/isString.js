J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2738129, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/isString.js');
            function isString(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2738081, arguments.callee, this, arguments);
                            arguments = J$.N(2738089, 'arguments', arguments, true, false, false);
                            value = J$.N(2738097, 'value', value, true, false, false);
                            return J$.Rt(2738073, J$.C(127568, J$.B(325106, '==', J$.U(325098, 'typeof', J$.R(2737977, 'value', value, false, false)), J$.T(2737985, 'string', 21, false))) ? J$._() : J$.C(127560, J$.C(127552, J$.U(325114, '!', J$.F(2738009, J$.R(2737993, 'isArray', isArray, false, true), false)(J$.R(2738001, 'value', value, false, false)))) ? J$.F(2738033, J$.R(2738017, 'isObjectLike', isObjectLike, false, true), false)(J$.R(2738025, 'value', value, false, false)) : J$._()) ? J$.B(325122, '==', J$.F(2738057, J$.R(2738041, 'baseGetTag', baseGetTag, false, true), false)(J$.R(2738049, 'value', value, false, false)), J$.R(2738065, 'stringTag', stringTag, false, true)) : J$._());
                        } catch (J$e) {
                            J$.Ex(2738185, J$e);
                        } finally {
                            if (J$.Fr(2738193))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2738137, 'baseGetTag', baseGetTag, false, false, false);
            J$.N(2738145, 'isArray', isArray, false, false, false);
            J$.N(2738153, 'isObjectLike', isObjectLike, false, false, false);
            J$.N(2738161, 'stringTag', stringTag, false, false, false);
            isString = J$.N(2738177, 'isString', J$.T(2738169, isString, 12, false), true, false, false);
            var baseGetTag = J$.W(2737937, 'baseGetTag', J$.F(2737881, J$.I(typeof require === 'undefined' ? require = J$.R(2737865, 'require', undefined, true, true) : require = J$.R(2737865, 'require', require, true, true)), false)(J$.T(2737873, './_baseGetTag', 21, false)), baseGetTag, false, true), isArray = J$.W(2737945, 'isArray', J$.F(2737905, J$.I(typeof require === 'undefined' ? require = J$.R(2737889, 'require', undefined, true, true) : require = J$.R(2737889, 'require', require, true, true)), false)(J$.T(2737897, './isArray', 21, false)), isArray, false, true), isObjectLike = J$.W(2737953, 'isObjectLike', J$.F(2737929, J$.I(typeof require === 'undefined' ? require = J$.R(2737913, 'require', undefined, true, true) : require = J$.R(2737913, 'require', require, true, true)), false)(J$.T(2737921, './isObjectLike', 21, false)), isObjectLike, false, true);
            var stringTag = J$.W(2737969, 'stringTag', J$.T(2737961, '[object String]', 21, false), stringTag, false, true);
            J$.P(2738121, J$.I(typeof module === 'undefined' ? module = J$.R(2738105, 'module', undefined, true, true) : module = J$.R(2738105, 'module', module, true, true)), 'exports', J$.R(2738113, 'isString', isString, false, true));
        } catch (J$e) {
            J$.Ex(2738201, J$e);
        } finally {
            if (J$.Sr(2738209))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

