J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2515833, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_mergeData.js');
            function mergeData(data, source) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2515721, arguments.callee, this, arguments);
                            arguments = J$.N(2515729, 'arguments', arguments, true, false, false);
                            data = J$.N(2515737, 'data', data, true, false, false);
                            source = J$.N(2515745, 'source', source, true, false, false);
                            J$.N(2515753, 'bitmask', bitmask, false, false, false);
                            J$.N(2515761, 'srcBitmask', srcBitmask, false, false, false);
                            J$.N(2515769, 'newBitmask', newBitmask, false, false, false);
                            J$.N(2515777, 'isCommon', isCommon, false, false, false);
                            J$.N(2515785, 'isCombo', isCombo, false, false, false);
                            J$.N(2515793, 'value', value, false, false, false);
                            J$.N(2515801, 'partials', partials, false, false, false);
                            var bitmask = J$.W(2514369, 'bitmask', J$.G(2514289, J$.R(2514273, 'data', data, false, false), J$.T(2514281, 1, 22, false)), bitmask, false, false), srcBitmask = J$.W(2514377, 'srcBitmask', J$.G(2514313, J$.R(2514297, 'source', source, false, false), J$.T(2514305, 1, 22, false)), srcBitmask, false, false), newBitmask = J$.W(2514385, 'newBitmask', J$.B(313978, '|', J$.R(2514321, 'bitmask', bitmask, false, false), J$.R(2514329, 'srcBitmask', srcBitmask, false, false)), newBitmask, false, false), isCommon = J$.W(2514393, 'isCommon', J$.B(314002, '<', J$.R(2514337, 'newBitmask', newBitmask, false, false), J$.B(313994, '|', J$.B(313986, '|', J$.R(2514345, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, true), J$.R(2514353, 'WRAP_BIND_KEY_FLAG', WRAP_BIND_KEY_FLAG, false, true)), J$.R(2514361, 'WRAP_ARY_FLAG', WRAP_ARY_FLAG, false, true))), isCommon, false, false);
                            var isCombo = J$.W(2514617, 'isCombo', J$.C(119248, J$.C(119224, J$.C(119200, J$.B(314010, '==', J$.R(2514401, 'srcBitmask', srcBitmask, false, false), J$.R(2514409, 'WRAP_ARY_FLAG', WRAP_ARY_FLAG, false, true))) ? J$.B(314018, '==', J$.R(2514417, 'bitmask', bitmask, false, false), J$.R(2514425, 'WRAP_CURRY_FLAG', WRAP_CURRY_FLAG, false, true)) : J$._()) ? J$._() : J$.C(119216, J$.C(119208, J$.B(314026, '==', J$.R(2514433, 'srcBitmask', srcBitmask, false, false), J$.R(2514441, 'WRAP_ARY_FLAG', WRAP_ARY_FLAG, false, true))) ? J$.B(314034, '==', J$.R(2514449, 'bitmask', bitmask, false, false), J$.R(2514457, 'WRAP_REARG_FLAG', WRAP_REARG_FLAG, false, true)) : J$._()) ? J$.B(314042, '<=', J$.G(2514489, J$.G(2514481, J$.R(2514465, 'data', data, false, false), J$.T(2514473, 7, 22, false)), 'length'), J$.G(2514513, J$.R(2514497, 'source', source, false, false), J$.T(2514505, 8, 22, false))) : J$._()) ? J$._() : J$.C(119240, J$.C(119232, J$.B(314058, '==', J$.R(2514521, 'srcBitmask', srcBitmask, false, false), J$.B(314050, '|', J$.R(2514529, 'WRAP_ARY_FLAG', WRAP_ARY_FLAG, false, true), J$.R(2514537, 'WRAP_REARG_FLAG', WRAP_REARG_FLAG, false, true)))) ? J$.B(314066, '<=', J$.G(2514569, J$.G(2514561, J$.R(2514545, 'source', source, false, false), J$.T(2514553, 7, 22, false)), 'length'), J$.G(2514593, J$.R(2514577, 'source', source, false, false), J$.T(2514585, 8, 22, false))) : J$._()) ? J$.B(314074, '==', J$.R(2514601, 'bitmask', bitmask, false, false), J$.R(2514609, 'WRAP_CURRY_FLAG', WRAP_CURRY_FLAG, false, true)) : J$._(), isCombo, false, false);
                            if (J$.C(119264, J$.U(314082, '!', J$.C(119256, J$.R(2514625, 'isCommon', isCommon, false, false)) ? J$._() : J$.R(2514633, 'isCombo', isCombo, false, false)))) {
                                return J$.Rt(2514649, J$.R(2514641, 'data', data, false, false));
                            }
                            if (J$.C(119280, J$.B(314090, '&', J$.R(2514657, 'srcBitmask', srcBitmask, false, false), J$.R(2514665, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, true)))) {
                                J$.P(2514713, J$.R(2514673, 'data', data, false, false), J$.T(2514681, 2, 22, false), J$.G(2514705, J$.R(2514689, 'source', source, false, false), J$.T(2514697, 2, 22, false)));
                                newBitmask = J$.W(2514761, 'newBitmask', J$.B(314106, '|', J$.R(2514753, 'newBitmask', newBitmask, false, false), J$.C(119272, J$.B(314098, '&', J$.R(2514721, 'bitmask', bitmask, false, false), J$.R(2514729, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, true))) ? J$.T(2514737, 0, 22, false) : J$.R(2514745, 'WRAP_CURRY_BOUND_FLAG', WRAP_CURRY_BOUND_FLAG, false, true)), newBitmask, false, false);
                            }
                            var value = J$.W(2514793, 'value', J$.G(2514785, J$.R(2514769, 'source', source, false, false), J$.T(2514777, 3, 22, false)), value, false, false);
                            if (J$.C(119304, J$.R(2514801, 'value', value, false, false))) {
                                var partials = J$.W(2514833, 'partials', J$.G(2514825, J$.R(2514809, 'data', data, false, false), J$.T(2514817, 3, 22, false)), partials, false, false);
                                J$.P(2514929, J$.R(2514841, 'data', data, false, false), J$.T(2514849, 3, 22, false), J$.C(119288, J$.R(2514857, 'partials', partials, false, false)) ? J$.F(2514913, J$.R(2514865, 'composeArgs', composeArgs, false, true), false)(J$.R(2514873, 'partials', partials, false, false), J$.R(2514881, 'value', value, false, false), J$.G(2514905, J$.R(2514889, 'source', source, false, false), J$.T(2514897, 4, 22, false))) : J$.R(2514921, 'value', value, false, false));
                                J$.P(2515033, J$.R(2514937, 'data', data, false, false), J$.T(2514945, 4, 22, false), J$.C(119296, J$.R(2514953, 'partials', partials, false, false)) ? J$.F(2515001, J$.R(2514961, 'replaceHolders', replaceHolders, false, true), false)(J$.G(2514985, J$.R(2514969, 'data', data, false, false), J$.T(2514977, 3, 22, false)), J$.R(2514993, 'PLACEHOLDER', PLACEHOLDER, false, true)) : J$.G(2515025, J$.R(2515009, 'source', source, false, false), J$.T(2515017, 4, 22, false)));
                            }
                            value = J$.W(2515065, 'value', J$.G(2515057, J$.R(2515041, 'source', source, false, false), J$.T(2515049, 5, 22, false)), value, false, false);
                            if (J$.C(119328, J$.R(2515073, 'value', value, false, false))) {
                                partials = J$.W(2515105, 'partials', J$.G(2515097, J$.R(2515081, 'data', data, false, false), J$.T(2515089, 5, 22, false)), partials, false, false);
                                J$.P(2515201, J$.R(2515113, 'data', data, false, false), J$.T(2515121, 5, 22, false), J$.C(119312, J$.R(2515129, 'partials', partials, false, false)) ? J$.F(2515185, J$.R(2515137, 'composeArgsRight', composeArgsRight, false, true), false)(J$.R(2515145, 'partials', partials, false, false), J$.R(2515153, 'value', value, false, false), J$.G(2515177, J$.R(2515161, 'source', source, false, false), J$.T(2515169, 6, 22, false))) : J$.R(2515193, 'value', value, false, false));
                                J$.P(2515305, J$.R(2515209, 'data', data, false, false), J$.T(2515217, 6, 22, false), J$.C(119320, J$.R(2515225, 'partials', partials, false, false)) ? J$.F(2515273, J$.R(2515233, 'replaceHolders', replaceHolders, false, true), false)(J$.G(2515257, J$.R(2515241, 'data', data, false, false), J$.T(2515249, 5, 22, false)), J$.R(2515265, 'PLACEHOLDER', PLACEHOLDER, false, true)) : J$.G(2515297, J$.R(2515281, 'source', source, false, false), J$.T(2515289, 6, 22, false)));
                            }
                            value = J$.W(2515337, 'value', J$.G(2515329, J$.R(2515313, 'source', source, false, false), J$.T(2515321, 7, 22, false)), value, false, false);
                            if (J$.C(119336, J$.R(2515345, 'value', value, false, false))) {
                                J$.P(2515377, J$.R(2515353, 'data', data, false, false), J$.T(2515361, 7, 22, false), J$.R(2515369, 'value', value, false, false));
                            }
                            if (J$.C(119352, J$.B(314114, '&', J$.R(2515385, 'srcBitmask', srcBitmask, false, false), J$.R(2515393, 'WRAP_ARY_FLAG', WRAP_ARY_FLAG, false, true)))) {
                                J$.P(2515537, J$.R(2515401, 'data', data, false, false), J$.T(2515409, 8, 22, false), J$.C(119344, J$.B(314122, '==', J$.G(2515433, J$.R(2515417, 'data', data, false, false), J$.T(2515425, 8, 22, false)), J$.T(2515441, null, 25, false))) ? J$.G(2515465, J$.R(2515449, 'source', source, false, false), J$.T(2515457, 8, 22, false)) : J$.F(2515529, J$.R(2515473, 'nativeMin', nativeMin, false, true), false)(J$.G(2515497, J$.R(2515481, 'data', data, false, false), J$.T(2515489, 8, 22, false)), J$.G(2515521, J$.R(2515505, 'source', source, false, false), J$.T(2515513, 8, 22, false))));
                            }
                            if (J$.C(119360, J$.B(314130, '==', J$.G(2515561, J$.R(2515545, 'data', data, false, false), J$.T(2515553, 9, 22, false)), J$.T(2515569, null, 25, false)))) {
                                J$.P(2515617, J$.R(2515577, 'data', data, false, false), J$.T(2515585, 9, 22, false), J$.G(2515609, J$.R(2515593, 'source', source, false, false), J$.T(2515601, 9, 22, false)));
                            }
                            J$.P(2515665, J$.R(2515625, 'data', data, false, false), J$.T(2515633, 0, 22, false), J$.G(2515657, J$.R(2515641, 'source', source, false, false), J$.T(2515649, 0, 22, false)));
                            J$.P(2515697, J$.R(2515673, 'data', data, false, false), J$.T(2515681, 1, 22, false), J$.R(2515689, 'newBitmask', newBitmask, false, false));
                            return J$.Rt(2515713, J$.R(2515705, 'data', data, false, false));
                        } catch (J$e) {
                            J$.Ex(2515945, J$e);
                        } finally {
                            if (J$.Fr(2515953))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2515841, 'composeArgs', composeArgs, false, false, false);
            J$.N(2515849, 'composeArgsRight', composeArgsRight, false, false, false);
            J$.N(2515857, 'replaceHolders', replaceHolders, false, false, false);
            J$.N(2515865, 'PLACEHOLDER', PLACEHOLDER, false, false, false);
            J$.N(2515873, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, false, false);
            J$.N(2515881, 'WRAP_BIND_KEY_FLAG', WRAP_BIND_KEY_FLAG, false, false, false);
            J$.N(2515889, 'WRAP_CURRY_BOUND_FLAG', WRAP_CURRY_BOUND_FLAG, false, false, false);
            J$.N(2515897, 'WRAP_CURRY_FLAG', WRAP_CURRY_FLAG, false, false, false);
            J$.N(2515905, 'WRAP_ARY_FLAG', WRAP_ARY_FLAG, false, false, false);
            J$.N(2515913, 'WRAP_REARG_FLAG', WRAP_REARG_FLAG, false, false, false);
            J$.N(2515921, 'nativeMin', nativeMin, false, false, false);
            mergeData = J$.N(2515937, 'mergeData', J$.T(2515929, mergeData, 12, false), true, false, false);
            var composeArgs = J$.W(2514113, 'composeArgs', J$.F(2514057, J$.I(typeof require === 'undefined' ? require = J$.R(2514041, 'require', undefined, true, true) : require = J$.R(2514041, 'require', require, true, true)), false)(J$.T(2514049, './_composeArgs', 21, false)), composeArgs, false, true), composeArgsRight = J$.W(2514121, 'composeArgsRight', J$.F(2514081, J$.I(typeof require === 'undefined' ? require = J$.R(2514065, 'require', undefined, true, true) : require = J$.R(2514065, 'require', require, true, true)), false)(J$.T(2514073, './_composeArgsRight', 21, false)), composeArgsRight, false, true), replaceHolders = J$.W(2514129, 'replaceHolders', J$.F(2514105, J$.I(typeof require === 'undefined' ? require = J$.R(2514089, 'require', undefined, true, true) : require = J$.R(2514089, 'require', require, true, true)), false)(J$.T(2514097, './_replaceHolders', 21, false)), replaceHolders, false, true);
            var PLACEHOLDER = J$.W(2514145, 'PLACEHOLDER', J$.T(2514137, '__lodash_placeholder__', 21, false), PLACEHOLDER, false, true);
            var WRAP_BIND_FLAG = J$.W(2514201, 'WRAP_BIND_FLAG', J$.T(2514153, 1, 22, false), WRAP_BIND_FLAG, false, true), WRAP_BIND_KEY_FLAG = J$.W(2514209, 'WRAP_BIND_KEY_FLAG', J$.T(2514161, 2, 22, false), WRAP_BIND_KEY_FLAG, false, true), WRAP_CURRY_BOUND_FLAG = J$.W(2514217, 'WRAP_CURRY_BOUND_FLAG', J$.T(2514169, 4, 22, false), WRAP_CURRY_BOUND_FLAG, false, true), WRAP_CURRY_FLAG = J$.W(2514225, 'WRAP_CURRY_FLAG', J$.T(2514177, 8, 22, false), WRAP_CURRY_FLAG, false, true), WRAP_ARY_FLAG = J$.W(2514233, 'WRAP_ARY_FLAG', J$.T(2514185, 128, 22, false), WRAP_ARY_FLAG, false, true), WRAP_REARG_FLAG = J$.W(2514241, 'WRAP_REARG_FLAG', J$.T(2514193, 256, 22, false), WRAP_REARG_FLAG, false, true);
            var nativeMin = J$.W(2514265, 'nativeMin', J$.G(2514257, J$.I(typeof Math === 'undefined' ? Math = J$.R(2514249, 'Math', undefined, true, true) : Math = J$.R(2514249, 'Math', Math, true, true)), 'min'), nativeMin, false, true);
            J$.P(2515825, J$.I(typeof module === 'undefined' ? module = J$.R(2515809, 'module', undefined, true, true) : module = J$.R(2515809, 'module', module, true, true)), 'exports', J$.R(2515817, 'mergeData', mergeData, false, true));
        } catch (J$e) {
            J$.Ex(2515961, J$e);
        } finally {
            if (J$.Sr(2515969))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

