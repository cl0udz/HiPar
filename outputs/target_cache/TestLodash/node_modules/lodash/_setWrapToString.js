J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2521921, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_setWrapToString.js');
            function setWrapToString(wrapper, reference, bitmask) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2521849, arguments.callee, this, arguments);
                            arguments = J$.N(2521857, 'arguments', arguments, true, false, false);
                            wrapper = J$.N(2521865, 'wrapper', wrapper, true, false, false);
                            reference = J$.N(2521873, 'reference', reference, true, false, false);
                            bitmask = J$.N(2521881, 'bitmask', bitmask, true, false, false);
                            J$.N(2521889, 'source', source, false, false, false);
                            var source = J$.W(2521737, 'source', J$.B(314522, '+', J$.R(2521721, 'reference', reference, false, false), J$.T(2521729, '', 21, false)), source, false, false);
                            return J$.Rt(2521841, J$.F(2521833, J$.R(2521745, 'setToString', setToString, false, true), false)(J$.R(2521753, 'wrapper', wrapper, false, false), J$.F(2521825, J$.R(2521761, 'insertWrapDetails', insertWrapDetails, false, true), false)(J$.R(2521769, 'source', source, false, false), J$.F(2521817, J$.R(2521777, 'updateWrapDetails', updateWrapDetails, false, true), false)(J$.F(2521801, J$.R(2521785, 'getWrapDetails', getWrapDetails, false, true), false)(J$.R(2521793, 'source', source, false, false)), J$.R(2521809, 'bitmask', bitmask, false, false)))));
                        } catch (J$e) {
                            J$.Ex(2521977, J$e);
                        } finally {
                            if (J$.Fr(2521985))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2521929, 'getWrapDetails', getWrapDetails, false, false, false);
            J$.N(2521937, 'insertWrapDetails', insertWrapDetails, false, false, false);
            J$.N(2521945, 'setToString', setToString, false, false, false);
            J$.N(2521953, 'updateWrapDetails', updateWrapDetails, false, false, false);
            setWrapToString = J$.N(2521969, 'setWrapToString', J$.T(2521961, setWrapToString, 12, false), true, false, false);
            var getWrapDetails = J$.W(2521689, 'getWrapDetails', J$.F(2521609, J$.I(typeof require === 'undefined' ? require = J$.R(2521593, 'require', undefined, true, true) : require = J$.R(2521593, 'require', require, true, true)), false)(J$.T(2521601, './_getWrapDetails', 21, false)), getWrapDetails, false, true), insertWrapDetails = J$.W(2521697, 'insertWrapDetails', J$.F(2521633, J$.I(typeof require === 'undefined' ? require = J$.R(2521617, 'require', undefined, true, true) : require = J$.R(2521617, 'require', require, true, true)), false)(J$.T(2521625, './_insertWrapDetails', 21, false)), insertWrapDetails, false, true), setToString = J$.W(2521705, 'setToString', J$.F(2521657, J$.I(typeof require === 'undefined' ? require = J$.R(2521641, 'require', undefined, true, true) : require = J$.R(2521641, 'require', require, true, true)), false)(J$.T(2521649, './_setToString', 21, false)), setToString, false, true), updateWrapDetails = J$.W(2521713, 'updateWrapDetails', J$.F(2521681, J$.I(typeof require === 'undefined' ? require = J$.R(2521665, 'require', undefined, true, true) : require = J$.R(2521665, 'require', require, true, true)), false)(J$.T(2521673, './_updateWrapDetails', 21, false)), updateWrapDetails, false, true);
            J$.P(2521913, J$.I(typeof module === 'undefined' ? module = J$.R(2521897, 'module', undefined, true, true) : module = J$.R(2521897, 'module', module, true, true)), 'exports', J$.R(2521905, 'setWrapToString', setWrapToString, false, true));
        } catch (J$e) {
            J$.Ex(2521993, J$e);
        } finally {
            if (J$.Sr(2522001))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

