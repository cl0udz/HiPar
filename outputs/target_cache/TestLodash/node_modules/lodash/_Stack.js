J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2396729, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_Stack.js');
            function Stack(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2396505, arguments.callee, this, arguments);
                            arguments = J$.N(2396513, 'arguments', arguments, true, false, false);
                            entries = J$.N(2396521, 'entries', entries, true, false, false);
                            J$.N(2396529, 'data', data, false, false, false);
                            var data = J$.W(2396465, 'data', J$.P(2396457, J$.R(2396425, 'this', this, false, false), '__data__', J$.F(2396449, J$.R(2396433, 'ListCache', ListCache, false, true), true)(J$.R(2396441, 'entries', entries, false, false))), data, false, false);
                            J$.P(2396497, J$.R(2396473, 'this', this, false, false), 'size', J$.G(2396489, J$.R(2396481, 'data', data, false, false), 'size'));
                        } catch (J$e) {
                            J$.Ex(2396801, J$e);
                        } finally {
                            if (J$.Fr(2396809))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2396737, 'ListCache', ListCache, false, false, false);
            J$.N(2396745, 'stackClear', stackClear, false, false, false);
            J$.N(2396753, 'stackDelete', stackDelete, false, false, false);
            J$.N(2396761, 'stackGet', stackGet, false, false, false);
            J$.N(2396769, 'stackHas', stackHas, false, false, false);
            J$.N(2396777, 'stackSet', stackSet, false, false, false);
            Stack = J$.N(2396793, 'Stack', J$.T(2396785, Stack, 12, false), true, false, false);
            var ListCache = J$.W(2396377, 'ListCache', J$.F(2396249, J$.I(typeof require === 'undefined' ? require = J$.R(2396233, 'require', undefined, true, true) : require = J$.R(2396233, 'require', require, true, true)), false)(J$.T(2396241, './_ListCache', 21, false)), ListCache, false, true), stackClear = J$.W(2396385, 'stackClear', J$.F(2396273, J$.I(typeof require === 'undefined' ? require = J$.R(2396257, 'require', undefined, true, true) : require = J$.R(2396257, 'require', require, true, true)), false)(J$.T(2396265, './_stackClear', 21, false)), stackClear, false, true), stackDelete = J$.W(2396393, 'stackDelete', J$.F(2396297, J$.I(typeof require === 'undefined' ? require = J$.R(2396281, 'require', undefined, true, true) : require = J$.R(2396281, 'require', require, true, true)), false)(J$.T(2396289, './_stackDelete', 21, false)), stackDelete, false, true), stackGet = J$.W(2396401, 'stackGet', J$.F(2396321, J$.I(typeof require === 'undefined' ? require = J$.R(2396305, 'require', undefined, true, true) : require = J$.R(2396305, 'require', require, true, true)), false)(J$.T(2396313, './_stackGet', 21, false)), stackGet, false, true), stackHas = J$.W(2396409, 'stackHas', J$.F(2396345, J$.I(typeof require === 'undefined' ? require = J$.R(2396329, 'require', undefined, true, true) : require = J$.R(2396329, 'require', require, true, true)), false)(J$.T(2396337, './_stackHas', 21, false)), stackHas, false, true), stackSet = J$.W(2396417, 'stackSet', J$.F(2396369, J$.I(typeof require === 'undefined' ? require = J$.R(2396353, 'require', undefined, true, true) : require = J$.R(2396353, 'require', require, true, true)), false)(J$.T(2396361, './_stackSet', 21, false)), stackSet, false, true);
            J$.P(2396561, J$.G(2396545, J$.R(2396537, 'Stack', Stack, false, true), 'prototype'), 'clear', J$.R(2396553, 'stackClear', stackClear, false, true));
            J$.P(2396601, J$.G(2396577, J$.R(2396569, 'Stack', Stack, false, true), 'prototype'), J$.T(2396585, 'delete', 21, false), J$.R(2396593, 'stackDelete', stackDelete, false, true));
            J$.P(2396633, J$.G(2396617, J$.R(2396609, 'Stack', Stack, false, true), 'prototype'), 'get', J$.R(2396625, 'stackGet', stackGet, false, true));
            J$.P(2396665, J$.G(2396649, J$.R(2396641, 'Stack', Stack, false, true), 'prototype'), 'has', J$.R(2396657, 'stackHas', stackHas, false, true));
            J$.P(2396697, J$.G(2396681, J$.R(2396673, 'Stack', Stack, false, true), 'prototype'), 'set', J$.R(2396689, 'stackSet', stackSet, false, true));
            J$.P(2396721, J$.I(typeof module === 'undefined' ? module = J$.R(2396705, 'module', undefined, true, true) : module = J$.R(2396705, 'module', module, true, true)), 'exports', J$.R(2396713, 'Stack', Stack, false, true));
        } catch (J$e) {
            J$.Ex(2396817, J$e);
        } finally {
            if (J$.Sr(2396825))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

