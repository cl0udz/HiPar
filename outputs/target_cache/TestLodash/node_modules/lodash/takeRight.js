J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3131633, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/takeRight.js');
            function takeRight(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3131561, arguments.callee, this, arguments);
                            arguments = J$.N(3131569, 'arguments', arguments, true, false, false);
                            array = J$.N(3131577, 'array', array, true, false, false);
                            n = J$.N(3131585, 'n', n, true, false, false);
                            guard = J$.N(3131593, 'guard', guard, true, false, false);
                            J$.N(3131601, 'length', length, false, false, false);
                            var length = J$.W(3131369, 'length', J$.C(155408, J$.B(355050, '==', J$.R(3131329, 'array', array, false, false), J$.T(3131337, null, 25, false))) ? J$.T(3131345, 0, 22, false) : J$.G(3131361, J$.R(3131353, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(155416, J$.U(355058, '!', J$.R(3131377, 'length', length, false, false)))) {
                                return J$.Rt(3131393, J$.T(3131385, [], 10, false));
                            }
                            n = J$.W(3131457, 'n', J$.C(155432, J$.C(155424, J$.R(3131401, 'guard', guard, false, false)) ? J$._() : J$.B(355066, '===', J$.R(3131409, 'n', n, false, false), J$.T(3131417, undefined, 24, false))) ? J$.T(3131425, 1, 22, false) : J$.F(3131449, J$.R(3131433, 'toInteger', toInteger, false, true), false)(J$.R(3131441, 'n', n, false, false)), n, false, false);
                            n = J$.W(3131481, 'n', J$.B(355074, '-', J$.R(3131465, 'length', length, false, false), J$.R(3131473, 'n', n, false, false)), n, false, false);
                            return J$.Rt(3131553, J$.F(3131545, J$.R(3131489, 'baseSlice', baseSlice, false, true), false)(J$.R(3131497, 'array', array, false, false), J$.C(155440, J$.B(355082, '<', J$.R(3131505, 'n', n, false, false), J$.T(3131513, 0, 22, false))) ? J$.T(3131521, 0, 22, false) : J$.R(3131529, 'n', n, false, false), J$.R(3131537, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(3131673, J$e);
                        } finally {
                            if (J$.Fr(3131681))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3131641, 'baseSlice', baseSlice, false, false, false);
            J$.N(3131649, 'toInteger', toInteger, false, false, false);
            takeRight = J$.N(3131665, 'takeRight', J$.T(3131657, takeRight, 12, false), true, false, false);
            var baseSlice = J$.W(3131313, 'baseSlice', J$.F(3131281, J$.I(typeof require === 'undefined' ? require = J$.R(3131265, 'require', undefined, true, true) : require = J$.R(3131265, 'require', require, true, true)), false)(J$.T(3131273, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(3131321, 'toInteger', J$.F(3131305, J$.I(typeof require === 'undefined' ? require = J$.R(3131289, 'require', undefined, true, true) : require = J$.R(3131289, 'require', require, true, true)), false)(J$.T(3131297, './toInteger', 21, false)), toInteger, false, true);
            J$.P(3131625, J$.I(typeof module === 'undefined' ? module = J$.R(3131609, 'module', undefined, true, true) : module = J$.R(3131609, 'module', module, true, true)), 'exports', J$.R(3131617, 'takeRight', takeRight, false, true));
        } catch (J$e) {
            J$.Ex(3131689, J$e);
        } finally {
            if (J$.Sr(3131697))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

