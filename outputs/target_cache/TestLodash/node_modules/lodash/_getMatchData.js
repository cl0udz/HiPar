J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2494713, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_getMatchData.js');
            function getMatchData(object) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2494633, arguments.callee, this, arguments);
                            arguments = J$.N(2494641, 'arguments', arguments, true, false, false);
                            object = J$.N(2494649, 'object', object, true, false, false);
                            J$.N(2494657, 'result', result, false, false, false);
                            J$.N(2494665, 'length', length, false, false, false);
                            J$.N(2494673, 'key', key, false, false, false);
                            J$.N(2494681, 'value', value, false, false, false);
                            var result = J$.W(2494449, 'result', J$.F(2494425, J$.R(2494409, 'keys', keys, false, true), false)(J$.R(2494417, 'object', object, false, false)), result, false, false), length = J$.W(2494457, 'length', J$.G(2494441, J$.R(2494433, 'result', result, false, false), 'length'), length, false, false);
                            while (J$.C(117976, J$.B(312802, '+', length = J$.W(2494473, 'length', J$.B(312794, '-', J$.U(312786, '+', J$.R(2494465, 'length', length, false, false)), 1), length, false, false), 1))) {
                                var key = J$.W(2494529, 'key', J$.G(2494497, J$.R(2494481, 'result', result, false, false), J$.R(2494489, 'length', length, false, false)), key, false, false), value = J$.W(2494537, 'value', J$.G(2494521, J$.R(2494505, 'object', object, false, false), J$.R(2494513, 'key', key, false, false)), value, false, false);
                                J$.P(2494609, J$.R(2494545, 'result', result, false, false), J$.R(2494553, 'length', length, false, false), J$.T(2494601, [
                                    J$.R(2494561, 'key', key, false, false),
                                    J$.R(2494569, 'value', value, false, false),
                                    J$.F(2494593, J$.R(2494577, 'isStrictComparable', isStrictComparable, false, true), false)(J$.R(2494585, 'value', value, false, false))
                                ], 10, false));
                            }
                            return J$.Rt(2494625, J$.R(2494617, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(2494753, J$e);
                        } finally {
                            if (J$.Fr(2494761))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2494721, 'isStrictComparable', isStrictComparable, false, false, false);
            J$.N(2494729, 'keys', keys, false, false, false);
            getMatchData = J$.N(2494745, 'getMatchData', J$.T(2494737, getMatchData, 12, false), true, false, false);
            var isStrictComparable = J$.W(2494393, 'isStrictComparable', J$.F(2494361, J$.I(typeof require === 'undefined' ? require = J$.R(2494345, 'require', undefined, true, true) : require = J$.R(2494345, 'require', require, true, true)), false)(J$.T(2494353, './_isStrictComparable', 21, false)), isStrictComparable, false, true), keys = J$.W(2494401, 'keys', J$.F(2494385, J$.I(typeof require === 'undefined' ? require = J$.R(2494369, 'require', undefined, true, true) : require = J$.R(2494369, 'require', require, true, true)), false)(J$.T(2494377, './keys', 21, false)), keys, false, true);
            J$.P(2494705, J$.I(typeof module === 'undefined' ? module = J$.R(2494689, 'module', undefined, true, true) : module = J$.R(2494689, 'module', module, true, true)), 'exports', J$.R(2494697, 'getMatchData', getMatchData, false, true));
        } catch (J$e) {
            J$.Ex(2494769, J$e);
        } finally {
            if (J$.Sr(2494777))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

