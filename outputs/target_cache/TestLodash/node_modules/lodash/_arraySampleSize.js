J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2402833, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_arraySampleSize.js');
            function arraySampleSize(array, n) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2402777, arguments.callee, this, arguments);
                            arguments = J$.N(2402785, 'arguments', arguments, true, false, false);
                            array = J$.N(2402793, 'array', array, true, false, false);
                            n = J$.N(2402801, 'n', n, true, false, false);
                            return J$.Rt(2402769, J$.F(2402761, J$.R(2402681, 'shuffleSelf', shuffleSelf, false, true), false)(J$.F(2402705, J$.R(2402689, 'copyArray', copyArray, false, true), false)(J$.R(2402697, 'array', array, false, false)), J$.F(2402753, J$.R(2402713, 'baseClamp', baseClamp, false, true), false)(J$.R(2402721, 'n', n, false, false), J$.T(2402729, 0, 22, false), J$.G(2402745, J$.R(2402737, 'array', array, false, false), 'length'))));
                        } catch (J$e) {
                            J$.Ex(2402881, J$e);
                        } finally {
                            if (J$.Fr(2402889))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2402841, 'baseClamp', baseClamp, false, false, false);
            J$.N(2402849, 'copyArray', copyArray, false, false, false);
            J$.N(2402857, 'shuffleSelf', shuffleSelf, false, false, false);
            arraySampleSize = J$.N(2402873, 'arraySampleSize', J$.T(2402865, arraySampleSize, 12, false), true, false, false);
            var baseClamp = J$.W(2402657, 'baseClamp', J$.F(2402601, J$.I(typeof require === 'undefined' ? require = J$.R(2402585, 'require', undefined, true, true) : require = J$.R(2402585, 'require', require, true, true)), false)(J$.T(2402593, './_baseClamp', 21, false)), baseClamp, false, true), copyArray = J$.W(2402665, 'copyArray', J$.F(2402625, J$.I(typeof require === 'undefined' ? require = J$.R(2402609, 'require', undefined, true, true) : require = J$.R(2402609, 'require', require, true, true)), false)(J$.T(2402617, './_copyArray', 21, false)), copyArray, false, true), shuffleSelf = J$.W(2402673, 'shuffleSelf', J$.F(2402649, J$.I(typeof require === 'undefined' ? require = J$.R(2402633, 'require', undefined, true, true) : require = J$.R(2402633, 'require', require, true, true)), false)(J$.T(2402641, './_shuffleSelf', 21, false)), shuffleSelf, false, true);
            J$.P(2402825, J$.I(typeof module === 'undefined' ? module = J$.R(2402809, 'module', undefined, true, true) : module = J$.R(2402809, 'module', module, true, true)), 'exports', J$.R(2402817, 'arraySampleSize', arraySampleSize, false, true));
        } catch (J$e) {
            J$.Ex(2402897, J$e);
        } finally {
            if (J$.Sr(2402905))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

