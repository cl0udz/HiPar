J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2392881, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_Hash.js');
            function Hash(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2392641, arguments.callee, this, arguments);
                            arguments = J$.N(2392649, 'arguments', arguments, true, false, false);
                            entries = J$.N(2392657, 'entries', entries, true, false, false);
                            J$.N(2392665, 'index', index, false, false, false);
                            J$.N(2392673, 'length', length, false, false, false);
                            J$.N(2392681, 'entry', entry, false, false, false);
                            var index = J$.W(2392489, 'index', J$.U(305714, '-', J$.T(2392441, 1, 22, false)), index, false, false), length = J$.W(2392497, 'length', J$.C(112024, J$.B(305722, '==', J$.R(2392449, 'entries', entries, false, false), J$.T(2392457, null, 25, false))) ? J$.T(2392465, 0, 22, false) : J$.G(2392481, J$.R(2392473, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(2392513, J$.R(2392505, 'this', this, false, false), 'clear', false)();
                            while (J$.C(112032, J$.B(305746, '<', index = J$.W(2392529, 'index', J$.B(305738, '+', J$.U(305730, '+', J$.R(2392521, 'index', index, false, false)), 1), index, false, false), J$.R(2392537, 'length', length, false, false)))) {
                                var entry = J$.W(2392569, 'entry', J$.G(2392561, J$.R(2392545, 'entries', entries, false, false), J$.R(2392553, 'index', index, false, false)), entry, false, false);
                                J$.M(2392633, J$.R(2392577, 'this', this, false, false), 'set', false)(J$.G(2392601, J$.R(2392585, 'entry', entry, false, false), J$.T(2392593, 0, 22, false)), J$.G(2392625, J$.R(2392609, 'entry', entry, false, false), J$.T(2392617, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(2392945, J$e);
                        } finally {
                            if (J$.Fr(2392953))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2392889, 'hashClear', hashClear, false, false, false);
            J$.N(2392897, 'hashDelete', hashDelete, false, false, false);
            J$.N(2392905, 'hashGet', hashGet, false, false, false);
            J$.N(2392913, 'hashHas', hashHas, false, false, false);
            J$.N(2392921, 'hashSet', hashSet, false, false, false);
            Hash = J$.N(2392937, 'Hash', J$.T(2392929, Hash, 12, false), true, false, false);
            var hashClear = J$.W(2392401, 'hashClear', J$.F(2392297, J$.I(typeof require === 'undefined' ? require = J$.R(2392281, 'require', undefined, true, true) : require = J$.R(2392281, 'require', require, true, true)), false)(J$.T(2392289, './_hashClear', 21, false)), hashClear, false, true), hashDelete = J$.W(2392409, 'hashDelete', J$.F(2392321, J$.I(typeof require === 'undefined' ? require = J$.R(2392305, 'require', undefined, true, true) : require = J$.R(2392305, 'require', require, true, true)), false)(J$.T(2392313, './_hashDelete', 21, false)), hashDelete, false, true), hashGet = J$.W(2392417, 'hashGet', J$.F(2392345, J$.I(typeof require === 'undefined' ? require = J$.R(2392329, 'require', undefined, true, true) : require = J$.R(2392329, 'require', require, true, true)), false)(J$.T(2392337, './_hashGet', 21, false)), hashGet, false, true), hashHas = J$.W(2392425, 'hashHas', J$.F(2392369, J$.I(typeof require === 'undefined' ? require = J$.R(2392353, 'require', undefined, true, true) : require = J$.R(2392353, 'require', require, true, true)), false)(J$.T(2392361, './_hashHas', 21, false)), hashHas, false, true), hashSet = J$.W(2392433, 'hashSet', J$.F(2392393, J$.I(typeof require === 'undefined' ? require = J$.R(2392377, 'require', undefined, true, true) : require = J$.R(2392377, 'require', require, true, true)), false)(J$.T(2392385, './_hashSet', 21, false)), hashSet, false, true);
            J$.P(2392713, J$.G(2392697, J$.R(2392689, 'Hash', Hash, false, true), 'prototype'), 'clear', J$.R(2392705, 'hashClear', hashClear, false, true));
            J$.P(2392753, J$.G(2392729, J$.R(2392721, 'Hash', Hash, false, true), 'prototype'), J$.T(2392737, 'delete', 21, false), J$.R(2392745, 'hashDelete', hashDelete, false, true));
            J$.P(2392785, J$.G(2392769, J$.R(2392761, 'Hash', Hash, false, true), 'prototype'), 'get', J$.R(2392777, 'hashGet', hashGet, false, true));
            J$.P(2392817, J$.G(2392801, J$.R(2392793, 'Hash', Hash, false, true), 'prototype'), 'has', J$.R(2392809, 'hashHas', hashHas, false, true));
            J$.P(2392849, J$.G(2392833, J$.R(2392825, 'Hash', Hash, false, true), 'prototype'), 'set', J$.R(2392841, 'hashSet', hashSet, false, true));
            J$.P(2392873, J$.I(typeof module === 'undefined' ? module = J$.R(2392857, 'module', undefined, true, true) : module = J$.R(2392857, 'module', module, true, true)), 'exports', J$.R(2392865, 'Hash', Hash, false, true));
        } catch (J$e) {
            J$.Ex(2392961, J$e);
        } finally {
            if (J$.Sr(2392969))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

