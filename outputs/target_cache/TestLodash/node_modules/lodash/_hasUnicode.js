J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2500177, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_hasUnicode.js');
            function hasUnicode(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2500129, arguments.callee, this, arguments);
                            arguments = J$.N(2500137, 'arguments', arguments, true, false, false);
                            string = J$.N(2500145, 'string', string, true, false, false);
                            return J$.Rt(2500121, J$.M(2500113, J$.R(2500097, 'reHasUnicode', reHasUnicode, false, true), 'test', false)(J$.R(2500105, 'string', string, false, false)));
                        } catch (J$e) {
                            J$.Ex(2500265, J$e);
                        } finally {
                            if (J$.Fr(2500273))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2500185, 'rsAstralRange', rsAstralRange, false, false, false);
            J$.N(2500193, 'rsComboMarksRange', rsComboMarksRange, false, false, false);
            J$.N(2500201, 'reComboHalfMarksRange', reComboHalfMarksRange, false, false, false);
            J$.N(2500209, 'rsComboSymbolsRange', rsComboSymbolsRange, false, false, false);
            J$.N(2500217, 'rsComboRange', rsComboRange, false, false, false);
            J$.N(2500225, 'rsVarRange', rsVarRange, false, false, false);
            J$.N(2500233, 'rsZWJ', rsZWJ, false, false, false);
            J$.N(2500241, 'reHasUnicode', reHasUnicode, false, false, false);
            hasUnicode = J$.N(2500257, 'hasUnicode', J$.T(2500249, hasUnicode, 12, false), true, false, false);
            var rsAstralRange = J$.W(2499961, 'rsAstralRange', J$.T(2499897, '\\ud800-\\udfff', 21, false), rsAstralRange, false, true), rsComboMarksRange = J$.W(2499969, 'rsComboMarksRange', J$.T(2499905, '\\u0300-\\u036f', 21, false), rsComboMarksRange, false, true), reComboHalfMarksRange = J$.W(2499977, 'reComboHalfMarksRange', J$.T(2499913, '\\ufe20-\\ufe2f', 21, false), reComboHalfMarksRange, false, true), rsComboSymbolsRange = J$.W(2499985, 'rsComboSymbolsRange', J$.T(2499921, '\\u20d0-\\u20ff', 21, false), rsComboSymbolsRange, false, true), rsComboRange = J$.W(2499993, 'rsComboRange', J$.B(313066, '+', J$.B(313058, '+', J$.R(2499929, 'rsComboMarksRange', rsComboMarksRange, false, true), J$.R(2499937, 'reComboHalfMarksRange', reComboHalfMarksRange, false, true)), J$.R(2499945, 'rsComboSymbolsRange', rsComboSymbolsRange, false, true)), rsComboRange, false, true), rsVarRange = J$.W(2500001, 'rsVarRange', J$.T(2499953, '\\ufe0e\\ufe0f', 21, false), rsVarRange, false, true);
            var rsZWJ = J$.W(2500017, 'rsZWJ', J$.T(2500009, '\\u200d', 21, false), rsZWJ, false, true);
            var reHasUnicode = J$.W(2500089, 'reHasUnicode', J$.F(2500081, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2500025, 'RegExp', undefined, true, true) : RegExp = J$.R(2500025, 'RegExp', RegExp, true, true)), false)(J$.B(313106, '+', J$.B(313098, '+', J$.B(313090, '+', J$.B(313082, '+', J$.B(313074, '+', J$.T(2500033, '[', 21, false), J$.R(2500041, 'rsZWJ', rsZWJ, false, true)), J$.R(2500049, 'rsAstralRange', rsAstralRange, false, true)), J$.R(2500057, 'rsComboRange', rsComboRange, false, true)), J$.R(2500065, 'rsVarRange', rsVarRange, false, true)), J$.T(2500073, ']', 21, false))), reHasUnicode, false, true);
            J$.P(2500169, J$.I(typeof module === 'undefined' ? module = J$.R(2500153, 'module', undefined, true, true) : module = J$.R(2500153, 'module', module, true, true)), 'exports', J$.R(2500161, 'hasUnicode', hasUnicode, false, true));
        } catch (J$e) {
            J$.Ex(2500281, J$e);
        } finally {
            if (J$.Sr(2500289))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

