J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3131193, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/take.js');
            function take(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3131129, arguments.callee, this, arguments);
                            arguments = J$.N(3131137, 'arguments', arguments, true, false, false);
                            array = J$.N(3131145, 'array', array, true, false, false);
                            n = J$.N(3131153, 'n', n, true, false, false);
                            guard = J$.N(3131161, 'guard', guard, true, false, false);
                            if (J$.C(155376, J$.U(355026, '!', J$.C(155368, J$.R(3130953, 'array', array, false, false)) ? J$.G(3130969, J$.R(3130961, 'array', array, false, false), 'length') : J$._()))) {
                                return J$.Rt(3130985, J$.T(3130977, [], 10, false));
                            }
                            n = J$.W(3131049, 'n', J$.C(155392, J$.C(155384, J$.R(3130993, 'guard', guard, false, false)) ? J$._() : J$.B(355034, '===', J$.R(3131001, 'n', n, false, false), J$.T(3131009, undefined, 24, false))) ? J$.T(3131017, 1, 22, false) : J$.F(3131041, J$.R(3131025, 'toInteger', toInteger, false, true), false)(J$.R(3131033, 'n', n, false, false)), n, false, false);
                            return J$.Rt(3131121, J$.F(3131113, J$.R(3131057, 'baseSlice', baseSlice, false, true), false)(J$.R(3131065, 'array', array, false, false), J$.T(3131073, 0, 22, false), J$.C(155400, J$.B(355042, '<', J$.R(3131081, 'n', n, false, false), J$.T(3131089, 0, 22, false))) ? J$.T(3131097, 0, 22, false) : J$.R(3131105, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(3131233, J$e);
                        } finally {
                            if (J$.Fr(3131241))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3131201, 'baseSlice', baseSlice, false, false, false);
            J$.N(3131209, 'toInteger', toInteger, false, false, false);
            take = J$.N(3131225, 'take', J$.T(3131217, take, 12, false), true, false, false);
            var baseSlice = J$.W(3130937, 'baseSlice', J$.F(3130905, J$.I(typeof require === 'undefined' ? require = J$.R(3130889, 'require', undefined, true, true) : require = J$.R(3130889, 'require', require, true, true)), false)(J$.T(3130897, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(3130945, 'toInteger', J$.F(3130929, J$.I(typeof require === 'undefined' ? require = J$.R(3130913, 'require', undefined, true, true) : require = J$.R(3130913, 'require', require, true, true)), false)(J$.T(3130921, './toInteger', 21, false)), toInteger, false, true);
            J$.P(3131185, J$.I(typeof module === 'undefined' ? module = J$.R(3131169, 'module', undefined, true, true) : module = J$.R(3131169, 'module', module, true, true)), 'exports', J$.R(3131177, 'take', take, false, true));
        } catch (J$e) {
            J$.Ex(3131249, J$e);
        } finally {
            if (J$.Sr(3131257))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

