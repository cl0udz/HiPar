J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2474969, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_createInverter.js');
            function createInverter(setter, toIteratee) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2474913, arguments.callee, this, arguments);
                            arguments = J$.N(2474921, 'arguments', arguments, true, false, false);
                            setter = J$.N(2474929, 'setter', setter, true, false, false);
                            toIteratee = J$.N(2474937, 'toIteratee', toIteratee, true, false, false);
                            return J$.Rt(2474905, J$.T(2474897, function (object, iteratee) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2474865, arguments.callee, this, arguments);
                                            arguments = J$.N(2474873, 'arguments', arguments, true, false, false);
                                            object = J$.N(2474881, 'object', object, true, false, false);
                                            iteratee = J$.N(2474889, 'iteratee', iteratee, true, false, false);
                                            return J$.Rt(2474857, J$.F(2474849, J$.R(2474793, 'baseInverter', baseInverter, false, true), false)(J$.R(2474801, 'object', object, false, false), J$.R(2474809, 'setter', setter, false, false), J$.F(2474833, J$.R(2474817, 'toIteratee', toIteratee, false, false), false)(J$.R(2474825, 'iteratee', iteratee, false, false)), J$.T(2474841, {}, 11, false)));
                                        } catch (J$e) {
                                            J$.Ex(2475001, J$e);
                                        } finally {
                                            if (J$.Fr(2475009))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2475017, J$e);
                        } finally {
                            if (J$.Fr(2475025))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2474977, 'baseInverter', baseInverter, false, false, false);
            createInverter = J$.N(2474993, 'createInverter', J$.T(2474985, createInverter, 12, false), true, false, false);
            var baseInverter = J$.W(2474785, 'baseInverter', J$.F(2474777, J$.I(typeof require === 'undefined' ? require = J$.R(2474761, 'require', undefined, true, true) : require = J$.R(2474761, 'require', require, true, true)), false)(J$.T(2474769, './_baseInverter', 21, false)), baseInverter, false, true);
            J$.P(2474961, J$.I(typeof module === 'undefined' ? module = J$.R(2474945, 'module', undefined, true, true) : module = J$.R(2474945, 'module', module, true, true)), 'exports', J$.R(2474953, 'createInverter', createInverter, false, true));
        } catch (J$e) {
            J$.Ex(2475033, J$e);
        } finally {
            if (J$.Sr(2475041))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

