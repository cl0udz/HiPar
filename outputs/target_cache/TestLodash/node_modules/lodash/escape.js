J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2621089, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/escape.js');
            function escape(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2621041, arguments.callee, this, arguments);
                            arguments = J$.N(2621049, 'arguments', arguments, true, false, false);
                            string = J$.N(2621057, 'string', string, true, false, false);
                            string = J$.W(2620953, 'string', J$.F(2620945, J$.R(2620929, 'toString', toString, false, true), false)(J$.R(2620937, 'string', string, false, false)), string, false, false);
                            return J$.Rt(2621033, J$.C(125624, J$.C(125616, J$.R(2620961, 'string', string, false, false)) ? J$.M(2620985, J$.R(2620969, 'reHasUnescapedHtml', reHasUnescapedHtml, false, true), 'test', false)(J$.R(2620977, 'string', string, false, false)) : J$._()) ? J$.M(2621017, J$.R(2620993, 'string', string, false, false), 'replace', false)(J$.R(2621001, 'reUnescapedHtml', reUnescapedHtml, false, true), J$.R(2621009, 'escapeHtmlChar', escapeHtmlChar, false, true)) : J$.R(2621025, 'string', string, false, false));
                        } catch (J$e) {
                            J$.Ex(2621145, J$e);
                        } finally {
                            if (J$.Fr(2621153))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2621097, 'escapeHtmlChar', escapeHtmlChar, false, false, false);
            J$.N(2621105, 'toString', toString, false, false, false);
            J$.N(2621113, 'reUnescapedHtml', reUnescapedHtml, false, false, false);
            J$.N(2621121, 'reHasUnescapedHtml', reHasUnescapedHtml, false, false, false);
            escape = J$.N(2621137, 'escape', J$.T(2621129, escape, 12, false), true, false, false);
            var escapeHtmlChar = J$.W(2620857, 'escapeHtmlChar', J$.F(2620825, J$.I(typeof require === 'undefined' ? require = J$.R(2620809, 'require', undefined, true, true) : require = J$.R(2620809, 'require', require, true, true)), false)(J$.T(2620817, './_escapeHtmlChar', 21, false)), escapeHtmlChar, false, true), toString = J$.W(2620865, 'toString', J$.F(2620849, J$.I(typeof require === 'undefined' ? require = J$.R(2620833, 'require', undefined, true, true) : require = J$.R(2620833, 'require', require, true, true)), false)(J$.T(2620841, './toString', 21, false)), toString, false, true);
            var reUnescapedHtml = J$.W(2620913, 'reUnescapedHtml', J$.T(2620873, /[&<>"']/g, 14, false), reUnescapedHtml, false, true), reHasUnescapedHtml = J$.W(2620921, 'reHasUnescapedHtml', J$.F(2620905, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2620881, 'RegExp', undefined, true, true) : RegExp = J$.R(2620881, 'RegExp', RegExp, true, true)), false)(J$.G(2620897, J$.R(2620889, 'reUnescapedHtml', reUnescapedHtml, false, true), 'source')), reHasUnescapedHtml, false, true);
            J$.P(2621081, J$.I(typeof module === 'undefined' ? module = J$.R(2621065, 'module', undefined, true, true) : module = J$.R(2621065, 'module', module, true, true)), 'exports', J$.R(2621073, 'escape', escape, false, true));
        } catch (J$e) {
            J$.Ex(2621161, J$e);
        } finally {
            if (J$.Sr(2621169))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

