J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2507377, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_isMasked.js');
            function isMasked(func) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2507329, arguments.callee, this, arguments);
                            arguments = J$.N(2507337, 'arguments', arguments, true, false, false);
                            func = J$.N(2507345, 'func', func, true, false, false);
                            return J$.Rt(2507321, J$.C(118960, J$.U(313594, '!', J$.U(313586, '!', J$.R(2507297, 'maskSrcKey', maskSrcKey, false, true)))) ? J$.B(313602, 'in', J$.R(2507305, 'maskSrcKey', maskSrcKey, false, true), J$.R(2507313, 'func', func, false, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(2507433, J$e);
                        } finally {
                            if (J$.Fr(2507441))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2507385, 'coreJsData', coreJsData, false, false, false);
            J$.N(2507393, 'maskSrcKey', maskSrcKey, false, false, false);
            isMasked = J$.N(2507409, 'isMasked', J$.T(2507401, isMasked, 12, false), true, false, false);
            var coreJsData = J$.W(2507121, 'coreJsData', J$.F(2507113, J$.I(typeof require === 'undefined' ? require = J$.R(2507097, 'require', undefined, true, true) : require = J$.R(2507097, 'require', require, true, true)), false)(J$.T(2507105, './_coreJsData', 21, false)), coreJsData, false, true);
            var maskSrcKey = J$.W(2507289, 'maskSrcKey', J$.F(2507281, J$.T(2507273, function () {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2507249, arguments.callee, this, arguments);
                            arguments = J$.N(2507257, 'arguments', arguments, true, false, false);
                            J$.N(2507265, 'uid', uid, false, false, false);
                            var uid = J$.W(2507201, 'uid', J$.M(2507193, J$.T(2507129, /[^.]+$/, 14, false), 'exec', false)(J$.C(118944, J$.C(118936, J$.C(118928, J$.R(2507137, 'coreJsData', coreJsData, false, true)) ? J$.G(2507153, J$.R(2507145, 'coreJsData', coreJsData, false, true), 'keys') : J$._()) ? J$.G(2507177, J$.G(2507169, J$.R(2507161, 'coreJsData', coreJsData, false, true), 'keys'), 'IE_PROTO') : J$._()) ? J$._() : J$.T(2507185, '', 21, false)), uid, false, false);
                            return J$.Rt(2507241, J$.C(118952, J$.R(2507209, 'uid', uid, false, false)) ? J$.B(313578, '+', J$.T(2507217, 'Symbol(src)_1.', 21, false), J$.R(2507225, 'uid', uid, false, false)) : J$.T(2507233, '', 21, false));
                        } catch (J$e) {
                            J$.Ex(2507417, J$e);
                        } finally {
                            if (J$.Fr(2507425))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), maskSrcKey, false, true);
            J$.P(2507369, J$.I(typeof module === 'undefined' ? module = J$.R(2507353, 'module', undefined, true, true) : module = J$.R(2507353, 'module', module, true, true)), 'exports', J$.R(2507361, 'isMasked', isMasked, false, true));
        } catch (J$e) {
            J$.Ex(2507449, J$e);
        } finally {
            if (J$.Sr(2507457))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

