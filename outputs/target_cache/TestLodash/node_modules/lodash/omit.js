J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3103929, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/omit.js');
            J$.N(3103937, 'arrayMap', arrayMap, false, false, false);
            J$.N(3103945, 'baseClone', baseClone, false, false, false);
            J$.N(3103953, 'baseUnset', baseUnset, false, false, false);
            J$.N(3103961, 'castPath', castPath, false, false, false);
            J$.N(3103969, 'copyObject', copyObject, false, false, false);
            J$.N(3103977, 'customOmitClone', customOmitClone, false, false, false);
            J$.N(3103985, 'flatRest', flatRest, false, false, false);
            J$.N(3103993, 'getAllKeysIn', getAllKeysIn, false, false, false);
            J$.N(3104001, 'CLONE_DEEP_FLAG', CLONE_DEEP_FLAG, false, false, false);
            J$.N(3104009, 'CLONE_FLAT_FLAG', CLONE_FLAT_FLAG, false, false, false);
            J$.N(3104017, 'CLONE_SYMBOLS_FLAG', CLONE_SYMBOLS_FLAG, false, false, false);
            J$.N(3104025, 'omit', omit, false, false, false);
            var arrayMap = J$.W(3103249, 'arrayMap', J$.F(3103073, J$.I(typeof require === 'undefined' ? require = J$.R(3103057, 'require', undefined, true, true) : require = J$.R(3103057, 'require', require, true, true)), false)(J$.T(3103065, './_arrayMap', 21, false)), arrayMap, false, true), baseClone = J$.W(3103257, 'baseClone', J$.F(3103097, J$.I(typeof require === 'undefined' ? require = J$.R(3103081, 'require', undefined, true, true) : require = J$.R(3103081, 'require', require, true, true)), false)(J$.T(3103089, './_baseClone', 21, false)), baseClone, false, true), baseUnset = J$.W(3103265, 'baseUnset', J$.F(3103121, J$.I(typeof require === 'undefined' ? require = J$.R(3103105, 'require', undefined, true, true) : require = J$.R(3103105, 'require', require, true, true)), false)(J$.T(3103113, './_baseUnset', 21, false)), baseUnset, false, true), castPath = J$.W(3103273, 'castPath', J$.F(3103145, J$.I(typeof require === 'undefined' ? require = J$.R(3103129, 'require', undefined, true, true) : require = J$.R(3103129, 'require', require, true, true)), false)(J$.T(3103137, './_castPath', 21, false)), castPath, false, true), copyObject = J$.W(3103281, 'copyObject', J$.F(3103169, J$.I(typeof require === 'undefined' ? require = J$.R(3103153, 'require', undefined, true, true) : require = J$.R(3103153, 'require', require, true, true)), false)(J$.T(3103161, './_copyObject', 21, false)), copyObject, false, true), customOmitClone = J$.W(3103289, 'customOmitClone', J$.F(3103193, J$.I(typeof require === 'undefined' ? require = J$.R(3103177, 'require', undefined, true, true) : require = J$.R(3103177, 'require', require, true, true)), false)(J$.T(3103185, './_customOmitClone', 21, false)), customOmitClone, false, true), flatRest = J$.W(3103297, 'flatRest', J$.F(3103217, J$.I(typeof require === 'undefined' ? require = J$.R(3103201, 'require', undefined, true, true) : require = J$.R(3103201, 'require', require, true, true)), false)(J$.T(3103209, './_flatRest', 21, false)), flatRest, false, true), getAllKeysIn = J$.W(3103305, 'getAllKeysIn', J$.F(3103241, J$.I(typeof require === 'undefined' ? require = J$.R(3103225, 'require', undefined, true, true) : require = J$.R(3103225, 'require', require, true, true)), false)(J$.T(3103233, './_getAllKeysIn', 21, false)), getAllKeysIn, false, true);
            var CLONE_DEEP_FLAG = J$.W(3103337, 'CLONE_DEEP_FLAG', J$.T(3103313, 1, 22, false), CLONE_DEEP_FLAG, false, true), CLONE_FLAT_FLAG = J$.W(3103345, 'CLONE_FLAT_FLAG', J$.T(3103321, 2, 22, false), CLONE_FLAT_FLAG, false, true), CLONE_SYMBOLS_FLAG = J$.W(3103353, 'CLONE_SYMBOLS_FLAG', J$.T(3103329, 4, 22, false), CLONE_SYMBOLS_FLAG, false, true);
            var omit = J$.W(3103897, 'omit', J$.F(3103889, J$.R(3103361, 'flatRest', flatRest, false, true), false)(J$.T(3103881, function (object, paths) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3103825, arguments.callee, this, arguments);
                            arguments = J$.N(3103833, 'arguments', arguments, true, false, false);
                            object = J$.N(3103841, 'object', object, true, false, false);
                            paths = J$.N(3103849, 'paths', paths, true, false, false);
                            J$.N(3103857, 'result', result, false, false, false);
                            J$.N(3103865, 'isDeep', isDeep, false, false, false);
                            J$.N(3103873, 'length', length, false, false, false);
                            var result = J$.W(3103377, 'result', J$.T(3103369, {}, 11, false), result, false, false);
                            if (J$.C(154248, J$.B(354050, '==', J$.R(3103385, 'object', object, false, false), J$.T(3103393, null, 25, false)))) {
                                return J$.Rt(3103409, J$.R(3103401, 'result', result, false, false));
                            }
                            var isDeep = J$.W(3103425, 'isDeep', J$.T(3103417, false, 23, false), isDeep, false, false);
                            paths = J$.W(3103585, 'paths', J$.F(3103577, J$.R(3103433, 'arrayMap', arrayMap, false, true), false)(J$.R(3103441, 'paths', paths, false, false), J$.T(3103569, function (path) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3103545, arguments.callee, this, arguments);
                                            arguments = J$.N(3103553, 'arguments', arguments, true, false, false);
                                            path = J$.N(3103561, 'path', path, true, false, false);
                                            path = J$.W(3103481, 'path', J$.F(3103473, J$.R(3103449, 'castPath', castPath, false, true), false)(J$.R(3103457, 'path', path, false, false), J$.R(3103465, 'object', object, false, false)), path, false, false);
                                            J$.C(154256, J$.R(3103489, 'isDeep', isDeep, false, false)) ? J$._() : isDeep = J$.W(3103521, 'isDeep', J$.B(354058, '>', J$.G(3103505, J$.R(3103497, 'path', path, false, false), 'length'), J$.T(3103513, 1, 22, false)), isDeep, false, false);
                                            return J$.Rt(3103537, J$.R(3103529, 'path', path, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3104033, J$e);
                                        } finally {
                                            if (J$.Fr(3104041))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), paths, false, false);
                            J$.F(3103641, J$.R(3103593, 'copyObject', copyObject, false, true), false)(J$.R(3103601, 'object', object, false, false), J$.F(3103625, J$.R(3103609, 'getAllKeysIn', getAllKeysIn, false, true), false)(J$.R(3103617, 'object', object, false, false)), J$.R(3103633, 'result', result, false, false));
                            if (J$.C(154264, J$.R(3103649, 'isDeep', isDeep, false, false))) {
                                result = J$.W(3103713, 'result', J$.F(3103705, J$.R(3103657, 'baseClone', baseClone, false, true), false)(J$.R(3103665, 'result', result, false, false), J$.B(354074, '|', J$.B(354066, '|', J$.R(3103673, 'CLONE_DEEP_FLAG', CLONE_DEEP_FLAG, false, true), J$.R(3103681, 'CLONE_FLAT_FLAG', CLONE_FLAT_FLAG, false, true)), J$.R(3103689, 'CLONE_SYMBOLS_FLAG', CLONE_SYMBOLS_FLAG, false, true)), J$.R(3103697, 'customOmitClone', customOmitClone, false, true)), result, false, false);
                            }
                            var length = J$.W(3103737, 'length', J$.G(3103729, J$.R(3103721, 'paths', paths, false, false), 'length'), length, false, false);
                            while (J$.C(154272, J$.B(354098, '+', length = J$.W(3103753, 'length', J$.B(354090, '-', J$.U(354082, '+', J$.R(3103745, 'length', length, false, false)), 1), length, false, false), 1))) {
                                J$.F(3103801, J$.R(3103761, 'baseUnset', baseUnset, false, true), false)(J$.R(3103769, 'result', result, false, false), J$.G(3103793, J$.R(3103777, 'paths', paths, false, false), J$.R(3103785, 'length', length, false, false)));
                            }
                            return J$.Rt(3103817, J$.R(3103809, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3104049, J$e);
                        } finally {
                            if (J$.Fr(3104057))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), omit, false, true);
            J$.P(3103921, J$.I(typeof module === 'undefined' ? module = J$.R(3103905, 'module', undefined, true, true) : module = J$.R(3103905, 'module', module, true, true)), 'exports', J$.R(3103913, 'omit', omit, false, true));
        } catch (J$e) {
            J$.Ex(3104065, J$e);
        } finally {
            if (J$.Sr(3104073))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

