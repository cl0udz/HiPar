J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2446193, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_baseSome.js');
            function baseSome(collection, predicate) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2446129, arguments.callee, this, arguments);
                            arguments = J$.N(2446137, 'arguments', arguments, true, false, false);
                            collection = J$.N(2446145, 'collection', collection, true, false, false);
                            predicate = J$.N(2446153, 'predicate', predicate, true, false, false);
                            J$.N(2446161, 'result', result, false, false, false);
                            var result;
                            J$.F(2446105, J$.R(2445977, 'baseEach', baseEach, false, true), false)(J$.R(2445985, 'collection', collection, false, false), J$.T(2446097, function (value, index, collection) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2446057, arguments.callee, this, arguments);
                                            arguments = J$.N(2446065, 'arguments', arguments, true, false, false);
                                            value = J$.N(2446073, 'value', value, true, false, false);
                                            index = J$.N(2446081, 'index', index, true, false, false);
                                            collection = J$.N(2446089, 'collection', collection, true, false, false);
                                            result = J$.W(2446033, 'result', J$.F(2446025, J$.R(2445993, 'predicate', predicate, false, false), false)(J$.R(2446001, 'value', value, false, false), J$.R(2446009, 'index', index, false, false), J$.R(2446017, 'collection', collection, false, false)), result, false, false);
                                            return J$.Rt(2446049, J$.U(308914, '!', J$.R(2446041, 'result', result, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2446225, J$e);
                                        } finally {
                                            if (J$.Fr(2446233))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2446121, J$.U(308930, '!', J$.U(308922, '!', J$.R(2446113, 'result', result, false, false))));
                        } catch (J$e) {
                            J$.Ex(2446241, J$e);
                        } finally {
                            if (J$.Fr(2446249))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2446201, 'baseEach', baseEach, false, false, false);
            baseSome = J$.N(2446217, 'baseSome', J$.T(2446209, baseSome, 12, false), true, false, false);
            var baseEach = J$.W(2445969, 'baseEach', J$.F(2445961, J$.I(typeof require === 'undefined' ? require = J$.R(2445945, 'require', undefined, true, true) : require = J$.R(2445945, 'require', require, true, true)), false)(J$.T(2445953, './_baseEach', 21, false)), baseEach, false, true);
            J$.P(2446185, J$.I(typeof module === 'undefined' ? module = J$.R(2446169, 'module', undefined, true, true) : module = J$.R(2446169, 'module', module, true, true)), 'exports', J$.R(2446177, 'baseSome', baseSome, false, true));
        } catch (J$e) {
            J$.Ex(2446257, J$e);
        } finally {
            if (J$.Sr(2446265))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

