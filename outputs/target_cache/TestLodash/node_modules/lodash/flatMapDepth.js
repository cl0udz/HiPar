J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2626001, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/flatMapDepth.js');
            function flatMapDepth(collection, iteratee, depth) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2625937, arguments.callee, this, arguments);
                            arguments = J$.N(2625945, 'arguments', arguments, true, false, false);
                            collection = J$.N(2625953, 'collection', collection, true, false, false);
                            iteratee = J$.N(2625961, 'iteratee', iteratee, true, false, false);
                            depth = J$.N(2625969, 'depth', depth, true, false, false);
                            depth = J$.W(2625865, 'depth', J$.C(125784, J$.B(323410, '===', J$.R(2625817, 'depth', depth, false, false), J$.T(2625825, undefined, 24, false))) ? J$.T(2625833, 1, 22, false) : J$.F(2625857, J$.R(2625841, 'toInteger', toInteger, false, true), false)(J$.R(2625849, 'depth', depth, false, false)), depth, false, false);
                            return J$.Rt(2625929, J$.F(2625921, J$.R(2625873, 'baseFlatten', baseFlatten, false, true), false)(J$.F(2625905, J$.R(2625881, 'map', map, false, true), false)(J$.R(2625889, 'collection', collection, false, false), J$.R(2625897, 'iteratee', iteratee, false, false)), J$.R(2625913, 'depth', depth, false, false)));
                        } catch (J$e) {
                            J$.Ex(2626049, J$e);
                        } finally {
                            if (J$.Fr(2626057))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2626009, 'baseFlatten', baseFlatten, false, false, false);
            J$.N(2626017, 'map', map, false, false, false);
            J$.N(2626025, 'toInteger', toInteger, false, false, false);
            flatMapDepth = J$.N(2626041, 'flatMapDepth', J$.T(2626033, flatMapDepth, 12, false), true, false, false);
            var baseFlatten = J$.W(2625793, 'baseFlatten', J$.F(2625737, J$.I(typeof require === 'undefined' ? require = J$.R(2625721, 'require', undefined, true, true) : require = J$.R(2625721, 'require', require, true, true)), false)(J$.T(2625729, './_baseFlatten', 21, false)), baseFlatten, false, true), map = J$.W(2625801, 'map', J$.F(2625761, J$.I(typeof require === 'undefined' ? require = J$.R(2625745, 'require', undefined, true, true) : require = J$.R(2625745, 'require', require, true, true)), false)(J$.T(2625753, './map', 21, false)), map, false, true), toInteger = J$.W(2625809, 'toInteger', J$.F(2625785, J$.I(typeof require === 'undefined' ? require = J$.R(2625769, 'require', undefined, true, true) : require = J$.R(2625769, 'require', require, true, true)), false)(J$.T(2625777, './toInteger', 21, false)), toInteger, false, true);
            J$.P(2625993, J$.I(typeof module === 'undefined' ? module = J$.R(2625977, 'module', undefined, true, true) : module = J$.R(2625977, 'module', module, true, true)), 'exports', J$.R(2625985, 'flatMapDepth', flatMapDepth, false, true));
        } catch (J$e) {
            J$.Ex(2626065, J$e);
        } finally {
            if (J$.Sr(2626073))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

