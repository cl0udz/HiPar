J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3142489, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/transform.js');
            function transform(object, iteratee, accumulator) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3142401, arguments.callee, this, arguments);
                            arguments = J$.N(3142409, 'arguments', arguments, true, false, false);
                            object = J$.N(3142417, 'object', object, true, false, false);
                            iteratee = J$.N(3142425, 'iteratee', iteratee, true, false, false);
                            accumulator = J$.N(3142433, 'accumulator', accumulator, true, false, false);
                            J$.N(3142441, 'isArr', isArr, false, false, false);
                            J$.N(3142449, 'isArrLike', isArrLike, false, false, false);
                            J$.N(3142457, 'Ctor', Ctor, false, false, false);
                            var isArr = J$.W(3141969, 'isArr', J$.F(3141905, J$.R(3141889, 'isArray', isArray, false, true), false)(J$.R(3141897, 'object', object, false, false)), isArr, false, false), isArrLike = J$.W(3141977, 'isArrLike', J$.C(155968, J$.C(155960, J$.R(3141913, 'isArr', isArr, false, false)) ? J$._() : J$.F(3141937, J$.R(3141921, 'isBuffer', isBuffer, false, true), false)(J$.R(3141929, 'object', object, false, false))) ? J$._() : J$.F(3141961, J$.R(3141945, 'isTypedArray', isTypedArray, false, true), false)(J$.R(3141953, 'object', object, false, false)), isArrLike, false, false);
                            iteratee = J$.W(3142017, 'iteratee', J$.F(3142009, J$.R(3141985, 'baseIteratee', baseIteratee, false, true), false)(J$.R(3141993, 'iteratee', iteratee, false, false), J$.T(3142001, 4, 22, false)), iteratee, false, false);
                            if (J$.C(156016, J$.B(355738, '==', J$.R(3142025, 'accumulator', accumulator, false, false), J$.T(3142033, null, 25, false)))) {
                                var Ctor = J$.W(3142065, 'Ctor', J$.C(155976, J$.R(3142041, 'object', object, false, false)) ? J$.G(3142057, J$.R(3142049, 'object', object, false, false), 'constructor') : J$._(), Ctor, false, false);
                                if (J$.C(156008, J$.R(3142073, 'isArrLike', isArrLike, false, false))) {
                                    accumulator = J$.W(3142113, 'accumulator', J$.C(155984, J$.R(3142081, 'isArr', isArr, false, false)) ? J$.F(3142097, J$.R(3142089, 'Ctor', Ctor, false, false), true)() : J$.T(3142105, [], 10, false), accumulator, false, false);
                                } else if (J$.C(156000, J$.F(3142137, J$.R(3142121, 'isObject', isObject, false, true), false)(J$.R(3142129, 'object', object, false, false)))) {
                                    accumulator = J$.W(3142217, 'accumulator', J$.C(155992, J$.F(3142161, J$.R(3142145, 'isFunction', isFunction, false, true), false)(J$.R(3142153, 'Ctor', Ctor, false, false))) ? J$.F(3142201, J$.R(3142169, 'baseCreate', baseCreate, false, true), false)(J$.F(3142193, J$.R(3142177, 'getPrototype', getPrototype, false, true), false)(J$.R(3142185, 'object', object, false, false))) : J$.T(3142209, {}, 11, false), accumulator, false, false);
                                } else {
                                    accumulator = J$.W(3142233, 'accumulator', J$.T(3142225, {}, 11, false), accumulator, false, false);
                                }
                            }
                            J$.F(3142377, J$.C(156024, J$.R(3142241, 'isArrLike', isArrLike, false, false)) ? J$.R(3142249, 'arrayEach', arrayEach, false, true) : J$.R(3142257, 'baseForOwn', baseForOwn, false, true), false)(J$.R(3142265, 'object', object, false, false), J$.T(3142369, function (value, index, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3142329, arguments.callee, this, arguments);
                                            arguments = J$.N(3142337, 'arguments', arguments, true, false, false);
                                            value = J$.N(3142345, 'value', value, true, false, false);
                                            index = J$.N(3142353, 'index', index, true, false, false);
                                            object = J$.N(3142361, 'object', object, true, false, false);
                                            return J$.Rt(3142321, J$.F(3142313, J$.R(3142273, 'iteratee', iteratee, false, false), false)(J$.R(3142281, 'accumulator', accumulator, false, false), J$.R(3142289, 'value', value, false, false), J$.R(3142297, 'index', index, false, false), J$.R(3142305, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(3142593, J$e);
                                        } finally {
                                            if (J$.Fr(3142601))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(3142393, J$.R(3142385, 'accumulator', accumulator, false, false));
                        } catch (J$e) {
                            J$.Ex(3142609, J$e);
                        } finally {
                            if (J$.Fr(3142617))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3142497, 'arrayEach', arrayEach, false, false, false);
            J$.N(3142505, 'baseCreate', baseCreate, false, false, false);
            J$.N(3142513, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(3142521, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(3142529, 'getPrototype', getPrototype, false, false, false);
            J$.N(3142537, 'isArray', isArray, false, false, false);
            J$.N(3142545, 'isBuffer', isBuffer, false, false, false);
            J$.N(3142553, 'isFunction', isFunction, false, false, false);
            J$.N(3142561, 'isObject', isObject, false, false, false);
            J$.N(3142569, 'isTypedArray', isTypedArray, false, false, false);
            transform = J$.N(3142585, 'transform', J$.T(3142577, transform, 12, false), true, false, false);
            var arrayEach = J$.W(3141809, 'arrayEach', J$.F(3141585, J$.I(typeof require === 'undefined' ? require = J$.R(3141569, 'require', undefined, true, true) : require = J$.R(3141569, 'require', require, true, true)), false)(J$.T(3141577, './_arrayEach', 21, false)), arrayEach, false, true), baseCreate = J$.W(3141817, 'baseCreate', J$.F(3141609, J$.I(typeof require === 'undefined' ? require = J$.R(3141593, 'require', undefined, true, true) : require = J$.R(3141593, 'require', require, true, true)), false)(J$.T(3141601, './_baseCreate', 21, false)), baseCreate, false, true), baseForOwn = J$.W(3141825, 'baseForOwn', J$.F(3141633, J$.I(typeof require === 'undefined' ? require = J$.R(3141617, 'require', undefined, true, true) : require = J$.R(3141617, 'require', require, true, true)), false)(J$.T(3141625, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(3141833, 'baseIteratee', J$.F(3141657, J$.I(typeof require === 'undefined' ? require = J$.R(3141641, 'require', undefined, true, true) : require = J$.R(3141641, 'require', require, true, true)), false)(J$.T(3141649, './_baseIteratee', 21, false)), baseIteratee, false, true), getPrototype = J$.W(3141841, 'getPrototype', J$.F(3141681, J$.I(typeof require === 'undefined' ? require = J$.R(3141665, 'require', undefined, true, true) : require = J$.R(3141665, 'require', require, true, true)), false)(J$.T(3141673, './_getPrototype', 21, false)), getPrototype, false, true), isArray = J$.W(3141849, 'isArray', J$.F(3141705, J$.I(typeof require === 'undefined' ? require = J$.R(3141689, 'require', undefined, true, true) : require = J$.R(3141689, 'require', require, true, true)), false)(J$.T(3141697, './isArray', 21, false)), isArray, false, true), isBuffer = J$.W(3141857, 'isBuffer', J$.F(3141729, J$.I(typeof require === 'undefined' ? require = J$.R(3141713, 'require', undefined, true, true) : require = J$.R(3141713, 'require', require, true, true)), false)(J$.T(3141721, './isBuffer', 21, false)), isBuffer, false, true), isFunction = J$.W(3141865, 'isFunction', J$.F(3141753, J$.I(typeof require === 'undefined' ? require = J$.R(3141737, 'require', undefined, true, true) : require = J$.R(3141737, 'require', require, true, true)), false)(J$.T(3141745, './isFunction', 21, false)), isFunction, false, true), isObject = J$.W(3141873, 'isObject', J$.F(3141777, J$.I(typeof require === 'undefined' ? require = J$.R(3141761, 'require', undefined, true, true) : require = J$.R(3141761, 'require', require, true, true)), false)(J$.T(3141769, './isObject', 21, false)), isObject, false, true), isTypedArray = J$.W(3141881, 'isTypedArray', J$.F(3141801, J$.I(typeof require === 'undefined' ? require = J$.R(3141785, 'require', undefined, true, true) : require = J$.R(3141785, 'require', require, true, true)), false)(J$.T(3141793, './isTypedArray', 21, false)), isTypedArray, false, true);
            J$.P(3142481, J$.I(typeof module === 'undefined' ? module = J$.R(3142465, 'module', undefined, true, true) : module = J$.R(3142465, 'module', module, true, true)), 'exports', J$.R(3142473, 'transform', transform, false, true));
        } catch (J$e) {
            J$.Ex(3142625, J$e);
        } finally {
            if (J$.Sr(3142633))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

