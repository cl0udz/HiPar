J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3113417, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/pullAt.js');
            J$.N(3113425, 'arrayMap', arrayMap, false, false, false);
            J$.N(3113433, 'baseAt', baseAt, false, false, false);
            J$.N(3113441, 'basePullAt', basePullAt, false, false, false);
            J$.N(3113449, 'compareAscending', compareAscending, false, false, false);
            J$.N(3113457, 'flatRest', flatRest, false, false, false);
            J$.N(3113465, 'isIndex', isIndex, false, false, false);
            J$.N(3113473, 'pullAt', pullAt, false, false, false);
            var arrayMap = J$.W(3113009, 'arrayMap', J$.F(3112881, J$.I(typeof require === 'undefined' ? require = J$.R(3112865, 'require', undefined, true, true) : require = J$.R(3112865, 'require', require, true, true)), false)(J$.T(3112873, './_arrayMap', 21, false)), arrayMap, false, true), baseAt = J$.W(3113017, 'baseAt', J$.F(3112905, J$.I(typeof require === 'undefined' ? require = J$.R(3112889, 'require', undefined, true, true) : require = J$.R(3112889, 'require', require, true, true)), false)(J$.T(3112897, './_baseAt', 21, false)), baseAt, false, true), basePullAt = J$.W(3113025, 'basePullAt', J$.F(3112929, J$.I(typeof require === 'undefined' ? require = J$.R(3112913, 'require', undefined, true, true) : require = J$.R(3112913, 'require', require, true, true)), false)(J$.T(3112921, './_basePullAt', 21, false)), basePullAt, false, true), compareAscending = J$.W(3113033, 'compareAscending', J$.F(3112953, J$.I(typeof require === 'undefined' ? require = J$.R(3112937, 'require', undefined, true, true) : require = J$.R(3112937, 'require', require, true, true)), false)(J$.T(3112945, './_compareAscending', 21, false)), compareAscending, false, true), flatRest = J$.W(3113041, 'flatRest', J$.F(3112977, J$.I(typeof require === 'undefined' ? require = J$.R(3112961, 'require', undefined, true, true) : require = J$.R(3112961, 'require', require, true, true)), false)(J$.T(3112969, './_flatRest', 21, false)), flatRest, false, true), isIndex = J$.W(3113049, 'isIndex', J$.F(3113001, J$.I(typeof require === 'undefined' ? require = J$.R(3112985, 'require', undefined, true, true) : require = J$.R(3112985, 'require', require, true, true)), false)(J$.T(3112993, './_isIndex', 21, false)), isIndex, false, true);
            var pullAt = J$.W(3113385, 'pullAt', J$.F(3113377, J$.R(3113057, 'flatRest', flatRest, false, true), false)(J$.T(3113369, function (array, indexes) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3113321, arguments.callee, this, arguments);
                            arguments = J$.N(3113329, 'arguments', arguments, true, false, false);
                            array = J$.N(3113337, 'array', array, true, false, false);
                            indexes = J$.N(3113345, 'indexes', indexes, true, false, false);
                            J$.N(3113353, 'length', length, false, false, false);
                            J$.N(3113361, 'result', result, false, false, false);
                            var length = J$.W(3113137, 'length', J$.C(154608, J$.B(354330, '==', J$.R(3113065, 'array', array, false, false), J$.T(3113073, null, 25, false))) ? J$.T(3113081, 0, 22, false) : J$.G(3113097, J$.R(3113089, 'array', array, false, false), 'length'), length, false, false), result = J$.W(3113145, 'result', J$.F(3113129, J$.R(3113105, 'baseAt', baseAt, false, true), false)(J$.R(3113113, 'array', array, false, false), J$.R(3113121, 'indexes', indexes, false, false)), result, false, false);
                            J$.F(3113297, J$.R(3113153, 'basePullAt', basePullAt, false, true), false)(J$.R(3113161, 'array', array, false, false), J$.M(3113289, J$.F(3113273, J$.R(3113169, 'arrayMap', arrayMap, false, true), false)(J$.R(3113177, 'indexes', indexes, false, false), J$.T(3113265, function (index) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3113241, arguments.callee, this, arguments);
                                            arguments = J$.N(3113249, 'arguments', arguments, true, false, false);
                                            index = J$.N(3113257, 'index', index, true, false, false);
                                            return J$.Rt(3113233, J$.C(154616, J$.F(3113209, J$.R(3113185, 'isIndex', isIndex, false, true), false)(J$.R(3113193, 'index', index, false, false), J$.R(3113201, 'length', length, false, false))) ? J$.U(354338, '+', J$.R(3113217, 'index', index, false, false)) : J$.R(3113225, 'index', index, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3113481, J$e);
                                        } finally {
                                            if (J$.Fr(3113489))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'sort', false)(J$.R(3113281, 'compareAscending', compareAscending, false, true)));
                            return J$.Rt(3113313, J$.R(3113305, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3113497, J$e);
                        } finally {
                            if (J$.Fr(3113505))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), pullAt, false, true);
            J$.P(3113409, J$.I(typeof module === 'undefined' ? module = J$.R(3113393, 'module', undefined, true, true) : module = J$.R(3113393, 'module', module, true, true)), 'exports', J$.R(3113401, 'pullAt', pullAt, false, true));
        } catch (J$e) {
            J$.Ex(3113513, J$e);
        } finally {
            if (J$.Sr(3113521))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

