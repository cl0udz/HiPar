J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2734145, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/isLength.js');
            function isLength(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2734097, arguments.callee, this, arguments);
                            arguments = J$.N(2734105, 'arguments', arguments, true, false, false);
                            value = J$.N(2734113, 'value', value, true, false, false);
                            return J$.Rt(2734089, J$.C(127360, J$.C(127352, J$.C(127344, J$.B(324834, '==', J$.U(324826, 'typeof', J$.R(2734017, 'value', value, false, false)), J$.T(2734025, 'number', 21, false))) ? J$.B(324850, '>', J$.R(2734033, 'value', value, false, false), J$.U(324842, '-', J$.T(2734041, 1, 22, false))) : J$._()) ? J$.B(324866, '==', J$.B(324858, '%', J$.R(2734049, 'value', value, false, false), J$.T(2734057, 1, 22, false)), J$.T(2734065, 0, 22, false)) : J$._()) ? J$.B(324874, '<=', J$.R(2734073, 'value', value, false, false), J$.R(2734081, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)) : J$._());
                        } catch (J$e) {
                            J$.Ex(2734177, J$e);
                        } finally {
                            if (J$.Fr(2734185))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2734153, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, false, false);
            isLength = J$.N(2734169, 'isLength', J$.T(2734161, isLength, 12, false), true, false, false);
            var MAX_SAFE_INTEGER = J$.W(2734009, 'MAX_SAFE_INTEGER', J$.T(2734001, 9007199254740991, 22, false), MAX_SAFE_INTEGER, false, true);
            J$.P(2734137, J$.I(typeof module === 'undefined' ? module = J$.R(2734121, 'module', undefined, true, true) : module = J$.R(2734121, 'module', module, true, true)), 'exports', J$.R(2734129, 'isLength', isLength, false, true));
        } catch (J$e) {
            J$.Ex(2734193, J$e);
        } finally {
            if (J$.Sr(2734201))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

