J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2466625, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_createBind.js');
            function createBind(func, bitmask, thisArg) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2466529, arguments.callee, this, arguments);
                            function wrapper() {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2466489, arguments.callee, this, arguments);
                                            arguments = J$.N(2466497, 'arguments', arguments, true, false, false);
                                            J$.N(2466505, 'fn', fn, false, false, false);
                                            var fn = J$.W(2466425, 'fn', J$.C(116312, J$.C(116304, J$.C(116296, J$.R(2466369, 'this', this, false, false)) ? J$.B(310970, '!==', J$.R(2466377, 'this', this, false, false), J$.R(2466385, 'root', root, false, true)) : J$._()) ? J$.B(310978, 'instanceof', J$.R(2466393, 'this', this, false, false), J$.R(2466401, 'wrapper', wrapper, false, false)) : J$._()) ? J$.R(2466409, 'Ctor', Ctor, false, false) : J$.R(2466417, 'func', func, false, false), fn, false, false);
                                            return J$.Rt(2466481, J$.M(2466473, J$.R(2466433, 'fn', fn, false, false), 'apply', false)(J$.C(116320, J$.R(2466441, 'isBind', isBind, false, false)) ? J$.R(2466449, 'thisArg', thisArg, false, false) : J$.R(2466457, 'this', this, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(2466465, 'arguments', undefined, true, true) : arguments = J$.R(2466465, 'arguments', arguments, true, true))));
                                        } catch (J$e) {
                                            J$.Ex(2466673, J$e);
                                        } finally {
                                            if (J$.Fr(2466681))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2466537, 'arguments', arguments, true, false, false);
                            func = J$.N(2466545, 'func', func, true, false, false);
                            bitmask = J$.N(2466553, 'bitmask', bitmask, true, false, false);
                            thisArg = J$.N(2466561, 'thisArg', thisArg, true, false, false);
                            J$.N(2466569, 'isBind', isBind, false, false, false);
                            J$.N(2466577, 'Ctor', Ctor, false, false, false);
                            wrapper = J$.N(2466593, 'wrapper', J$.T(2466585, wrapper, 12, false), true, false, false);
                            var isBind = J$.W(2466353, 'isBind', J$.B(310962, '&', J$.R(2466313, 'bitmask', bitmask, false, false), J$.R(2466321, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, true)), isBind, false, false), Ctor = J$.W(2466361, 'Ctor', J$.F(2466345, J$.R(2466329, 'createCtor', createCtor, false, true), false)(J$.R(2466337, 'func', func, false, false)), Ctor, false, false);
                            return J$.Rt(2466521, J$.R(2466513, 'wrapper', wrapper, false, false));
                        } catch (J$e) {
                            J$.Ex(2466689, J$e);
                        } finally {
                            if (J$.Fr(2466697))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2466633, 'createCtor', createCtor, false, false, false);
            J$.N(2466641, 'root', root, false, false, false);
            J$.N(2466649, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, false, false);
            createBind = J$.N(2466665, 'createBind', J$.T(2466657, createBind, 12, false), true, false, false);
            var createCtor = J$.W(2466281, 'createCtor', J$.F(2466249, J$.I(typeof require === 'undefined' ? require = J$.R(2466233, 'require', undefined, true, true) : require = J$.R(2466233, 'require', require, true, true)), false)(J$.T(2466241, './_createCtor', 21, false)), createCtor, false, true), root = J$.W(2466289, 'root', J$.F(2466273, J$.I(typeof require === 'undefined' ? require = J$.R(2466257, 'require', undefined, true, true) : require = J$.R(2466257, 'require', require, true, true)), false)(J$.T(2466265, './_root', 21, false)), root, false, true);
            var WRAP_BIND_FLAG = J$.W(2466305, 'WRAP_BIND_FLAG', J$.T(2466297, 1, 22, false), WRAP_BIND_FLAG, false, true);
            J$.P(2466617, J$.I(typeof module === 'undefined' ? module = J$.R(2466601, 'module', undefined, true, true) : module = J$.R(2466601, 'module', module, true, true)), 'exports', J$.R(2466609, 'createBind', createBind, false, true));
        } catch (J$e) {
            J$.Ex(2466705, J$e);
        } finally {
            if (J$.Sr(2466713))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

