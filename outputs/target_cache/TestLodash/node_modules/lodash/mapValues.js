J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3093801, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/mapValues.js');
            function mapValues(object, iteratee) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3093737, arguments.callee, this, arguments);
                            arguments = J$.N(3093745, 'arguments', arguments, true, false, false);
                            object = J$.N(3093753, 'object', object, true, false, false);
                            iteratee = J$.N(3093761, 'iteratee', iteratee, true, false, false);
                            J$.N(3093769, 'result', result, false, false, false);
                            var result = J$.W(3093529, 'result', J$.T(3093521, {}, 11, false), result, false, false);
                            iteratee = J$.W(3093569, 'iteratee', J$.F(3093561, J$.R(3093537, 'baseIteratee', baseIteratee, false, true), false)(J$.R(3093545, 'iteratee', iteratee, false, false), J$.T(3093553, 3, 22, false)), iteratee, false, false);
                            J$.F(3093713, J$.R(3093577, 'baseForOwn', baseForOwn, false, true), false)(J$.R(3093585, 'object', object, false, false), J$.T(3093705, function (value, key, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3093665, arguments.callee, this, arguments);
                                            arguments = J$.N(3093673, 'arguments', arguments, true, false, false);
                                            value = J$.N(3093681, 'value', value, true, false, false);
                                            key = J$.N(3093689, 'key', key, true, false, false);
                                            object = J$.N(3093697, 'object', object, true, false, false);
                                            J$.F(3093657, J$.R(3093593, 'baseAssignValue', baseAssignValue, false, true), false)(J$.R(3093601, 'result', result, false, false), J$.R(3093609, 'key', key, false, false), J$.F(3093649, J$.R(3093617, 'iteratee', iteratee, false, false), false)(J$.R(3093625, 'value', value, false, false), J$.R(3093633, 'key', key, false, false), J$.R(3093641, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(3093849, J$e);
                                        } finally {
                                            if (J$.Fr(3093857))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(3093729, J$.R(3093721, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3093865, J$e);
                        } finally {
                            if (J$.Fr(3093873))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3093809, 'baseAssignValue', baseAssignValue, false, false, false);
            J$.N(3093817, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(3093825, 'baseIteratee', baseIteratee, false, false, false);
            mapValues = J$.N(3093841, 'mapValues', J$.T(3093833, mapValues, 12, false), true, false, false);
            var baseAssignValue = J$.W(3093497, 'baseAssignValue', J$.F(3093441, J$.I(typeof require === 'undefined' ? require = J$.R(3093425, 'require', undefined, true, true) : require = J$.R(3093425, 'require', require, true, true)), false)(J$.T(3093433, './_baseAssignValue', 21, false)), baseAssignValue, false, true), baseForOwn = J$.W(3093505, 'baseForOwn', J$.F(3093465, J$.I(typeof require === 'undefined' ? require = J$.R(3093449, 'require', undefined, true, true) : require = J$.R(3093449, 'require', require, true, true)), false)(J$.T(3093457, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(3093513, 'baseIteratee', J$.F(3093489, J$.I(typeof require === 'undefined' ? require = J$.R(3093473, 'require', undefined, true, true) : require = J$.R(3093473, 'require', require, true, true)), false)(J$.T(3093481, './_baseIteratee', 21, false)), baseIteratee, false, true);
            J$.P(3093793, J$.I(typeof module === 'undefined' ? module = J$.R(3093777, 'module', undefined, true, true) : module = J$.R(3093777, 'module', module, true, true)), 'exports', J$.R(3093785, 'mapValues', mapValues, false, true));
        } catch (J$e) {
            J$.Ex(3093881, J$e);
        } finally {
            if (J$.Sr(3093889))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

