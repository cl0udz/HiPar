J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2480769, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_createRound.js');
            function createRound(methodName) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2480713, arguments.callee, this, arguments);
                            arguments = J$.N(2480721, 'arguments', arguments, true, false, false);
                            methodName = J$.N(2480729, 'methodName', methodName, true, false, false);
                            J$.N(2480737, 'func', func, false, false, false);
                            var func = J$.W(2480193, 'func', J$.G(2480185, J$.I(typeof Math === 'undefined' ? Math = J$.R(2480169, 'Math', undefined, true, true) : Math = J$.R(2480169, 'Math', Math, true, true)), J$.R(2480177, 'methodName', methodName, false, false)), func, false, false);
                            return J$.Rt(2480705, J$.T(2480697, function (number, precision) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2480649, arguments.callee, this, arguments);
                                            arguments = J$.N(2480657, 'arguments', arguments, true, false, false);
                                            number = J$.N(2480665, 'number', number, true, false, false);
                                            precision = J$.N(2480673, 'precision', precision, true, false, false);
                                            J$.N(2480681, 'pair', pair, false, false, false);
                                            J$.N(2480689, 'value', value, false, false, false);
                                            number = J$.W(2480225, 'number', J$.F(2480217, J$.R(2480201, 'toNumber', toNumber, false, true), false)(J$.R(2480209, 'number', number, false, false)), number, false, false);
                                            precision = J$.W(2480305, 'precision', J$.C(117096, J$.B(311810, '==', J$.R(2480233, 'precision', precision, false, false), J$.T(2480241, null, 25, false))) ? J$.T(2480249, 0, 22, false) : J$.F(2480297, J$.R(2480257, 'nativeMin', nativeMin, false, true), false)(J$.F(2480281, J$.R(2480265, 'toInteger', toInteger, false, true), false)(J$.R(2480273, 'precision', precision, false, false)), J$.T(2480289, 292, 22, false)), precision, false, false);
                                            if (J$.C(117112, J$.C(117104, J$.R(2480313, 'precision', precision, false, false)) ? J$.F(2480337, J$.R(2480321, 'nativeIsFinite', nativeIsFinite, false, true), false)(J$.R(2480329, 'number', number, false, false)) : J$._())) {
                                                var pair = J$.W(2480473, 'pair', J$.M(2480385, J$.B(311818, '+', J$.F(2480361, J$.R(2480345, 'toString', toString, false, true), false)(J$.R(2480353, 'number', number, false, false)), J$.T(2480369, 'e', 21, false)), 'split', false)(J$.T(2480377, 'e', 21, false)), pair, false, false), value = J$.W(2480481, 'value', J$.F(2480465, J$.R(2480393, 'func', func, false, false), false)(J$.B(311850, '+', J$.B(311826, '+', J$.G(2480417, J$.R(2480401, 'pair', pair, false, false), J$.T(2480409, 0, 22, false)), J$.T(2480425, 'e', 21, false)), J$.B(311842, '+', J$.U(311834, '+', J$.G(2480449, J$.R(2480433, 'pair', pair, false, false), J$.T(2480441, 1, 22, false))), J$.R(2480457, 'precision', precision, false, false)))), value, false, false);
                                                pair = J$.W(2480537, 'pair', J$.M(2480529, J$.B(311858, '+', J$.F(2480505, J$.R(2480489, 'toString', toString, false, true), false)(J$.R(2480497, 'value', value, false, false)), J$.T(2480513, 'e', 21, false)), 'split', false)(J$.T(2480521, 'e', 21, false)), pair, false, false);
                                                return J$.Rt(2480609, J$.U(311898, '+', J$.B(311890, '+', J$.B(311866, '+', J$.G(2480561, J$.R(2480545, 'pair', pair, false, false), J$.T(2480553, 0, 22, false)), J$.T(2480569, 'e', 21, false)), J$.B(311882, '-', J$.U(311874, '+', J$.G(2480593, J$.R(2480577, 'pair', pair, false, false), J$.T(2480585, 1, 22, false))), J$.R(2480601, 'precision', precision, false, false)))));
                                            }
                                            return J$.Rt(2480641, J$.F(2480633, J$.R(2480617, 'func', func, false, false), false)(J$.R(2480625, 'number', number, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2480841, J$e);
                                        } finally {
                                            if (J$.Fr(2480849))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2480857, J$e);
                        } finally {
                            if (J$.Fr(2480865))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2480777, 'root', root, false, false, false);
            J$.N(2480785, 'toInteger', toInteger, false, false, false);
            J$.N(2480793, 'toNumber', toNumber, false, false, false);
            J$.N(2480801, 'toString', toString, false, false, false);
            J$.N(2480809, 'nativeIsFinite', nativeIsFinite, false, false, false);
            J$.N(2480817, 'nativeMin', nativeMin, false, false, false);
            createRound = J$.N(2480833, 'createRound', J$.T(2480825, createRound, 12, false), true, false, false);
            var root = J$.W(2480089, 'root', J$.F(2480009, J$.I(typeof require === 'undefined' ? require = J$.R(2479993, 'require', undefined, true, true) : require = J$.R(2479993, 'require', require, true, true)), false)(J$.T(2480001, './_root', 21, false)), root, false, true), toInteger = J$.W(2480097, 'toInteger', J$.F(2480033, J$.I(typeof require === 'undefined' ? require = J$.R(2480017, 'require', undefined, true, true) : require = J$.R(2480017, 'require', require, true, true)), false)(J$.T(2480025, './toInteger', 21, false)), toInteger, false, true), toNumber = J$.W(2480105, 'toNumber', J$.F(2480057, J$.I(typeof require === 'undefined' ? require = J$.R(2480041, 'require', undefined, true, true) : require = J$.R(2480041, 'require', require, true, true)), false)(J$.T(2480049, './toNumber', 21, false)), toNumber, false, true), toString = J$.W(2480113, 'toString', J$.F(2480081, J$.I(typeof require === 'undefined' ? require = J$.R(2480065, 'require', undefined, true, true) : require = J$.R(2480065, 'require', require, true, true)), false)(J$.T(2480073, './toString', 21, false)), toString, false, true);
            var nativeIsFinite = J$.W(2480153, 'nativeIsFinite', J$.G(2480129, J$.R(2480121, 'root', root, false, true), 'isFinite'), nativeIsFinite, false, true), nativeMin = J$.W(2480161, 'nativeMin', J$.G(2480145, J$.I(typeof Math === 'undefined' ? Math = J$.R(2480137, 'Math', undefined, true, true) : Math = J$.R(2480137, 'Math', Math, true, true)), 'min'), nativeMin, false, true);
            J$.P(2480761, J$.I(typeof module === 'undefined' ? module = J$.R(2480745, 'module', undefined, true, true) : module = J$.R(2480745, 'module', module, true, true)), 'exports', J$.R(2480753, 'createRound', createRound, false, true));
        } catch (J$e) {
            J$.Ex(2480873, J$e);
        } finally {
            if (J$.Sr(2480881))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

