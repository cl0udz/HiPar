J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2733697, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/isFunction.js');
            function isFunction(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2733641, arguments.callee, this, arguments);
                            arguments = J$.N(2733649, 'arguments', arguments, true, false, false);
                            value = J$.N(2733657, 'value', value, true, false, false);
                            J$.N(2733665, 'tag', tag, false, false, false);
                            if (J$.C(127304, J$.U(324762, '!', J$.F(2733513, J$.R(2733497, 'isObject', isObject, false, true), false)(J$.R(2733505, 'value', value, false, false))))) {
                                return J$.Rt(2733529, J$.T(2733521, false, 23, false));
                            }
                            var tag = J$.W(2733561, 'tag', J$.F(2733553, J$.R(2733537, 'baseGetTag', baseGetTag, false, true), false)(J$.R(2733545, 'value', value, false, false)), tag, false, false);
                            return J$.Rt(2733633, J$.C(127328, J$.C(127320, J$.C(127312, J$.B(324770, '==', J$.R(2733569, 'tag', tag, false, false), J$.R(2733577, 'funcTag', funcTag, false, true))) ? J$._() : J$.B(324778, '==', J$.R(2733585, 'tag', tag, false, false), J$.R(2733593, 'genTag', genTag, false, true))) ? J$._() : J$.B(324786, '==', J$.R(2733601, 'tag', tag, false, false), J$.R(2733609, 'asyncTag', asyncTag, false, true))) ? J$._() : J$.B(324794, '==', J$.R(2733617, 'tag', tag, false, false), J$.R(2733625, 'proxyTag', proxyTag, false, true)));
                        } catch (J$e) {
                            J$.Ex(2733769, J$e);
                        } finally {
                            if (J$.Fr(2733777))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2733705, 'baseGetTag', baseGetTag, false, false, false);
            J$.N(2733713, 'isObject', isObject, false, false, false);
            J$.N(2733721, 'asyncTag', asyncTag, false, false, false);
            J$.N(2733729, 'funcTag', funcTag, false, false, false);
            J$.N(2733737, 'genTag', genTag, false, false, false);
            J$.N(2733745, 'proxyTag', proxyTag, false, false, false);
            isFunction = J$.N(2733761, 'isFunction', J$.T(2733753, isFunction, 12, false), true, false, false);
            var baseGetTag = J$.W(2733417, 'baseGetTag', J$.F(2733385, J$.I(typeof require === 'undefined' ? require = J$.R(2733369, 'require', undefined, true, true) : require = J$.R(2733369, 'require', require, true, true)), false)(J$.T(2733377, './_baseGetTag', 21, false)), baseGetTag, false, true), isObject = J$.W(2733425, 'isObject', J$.F(2733409, J$.I(typeof require === 'undefined' ? require = J$.R(2733393, 'require', undefined, true, true) : require = J$.R(2733393, 'require', require, true, true)), false)(J$.T(2733401, './isObject', 21, false)), isObject, false, true);
            var asyncTag = J$.W(2733465, 'asyncTag', J$.T(2733433, '[object AsyncFunction]', 21, false), asyncTag, false, true), funcTag = J$.W(2733473, 'funcTag', J$.T(2733441, '[object Function]', 21, false), funcTag, false, true), genTag = J$.W(2733481, 'genTag', J$.T(2733449, '[object GeneratorFunction]', 21, false), genTag, false, true), proxyTag = J$.W(2733489, 'proxyTag', J$.T(2733457, '[object Proxy]', 21, false), proxyTag, false, true);
            J$.P(2733689, J$.I(typeof module === 'undefined' ? module = J$.R(2733673, 'module', undefined, true, true) : module = J$.R(2733673, 'module', module, true, true)), 'exports', J$.R(2733681, 'isFunction', isFunction, false, true));
        } catch (J$e) {
            J$.Ex(2733785, J$e);
        } finally {
            if (J$.Sr(2733793))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

