J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2456097, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_castPath.js');
            function castPath(value, object) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2456041, arguments.callee, this, arguments);
                            arguments = J$.N(2456049, 'arguments', arguments, true, false, false);
                            value = J$.N(2456057, 'value', value, true, false, false);
                            object = J$.N(2456065, 'object', object, true, false, false);
                            if (J$.C(115496, J$.F(2455921, J$.R(2455905, 'isArray', isArray, false, true), false)(J$.R(2455913, 'value', value, false, false)))) {
                                return J$.Rt(2455937, J$.R(2455929, 'value', value, false, false));
                            }
                            return J$.Rt(2456033, J$.C(115504, J$.F(2455969, J$.R(2455945, 'isKey', isKey, false, true), false)(J$.R(2455953, 'value', value, false, false), J$.R(2455961, 'object', object, false, false))) ? J$.T(2455985, [J$.R(2455977, 'value', value, false, false)], 10, false) : J$.F(2456025, J$.R(2455993, 'stringToPath', stringToPath, false, true), false)(J$.F(2456017, J$.R(2456001, 'toString', toString, false, true), false)(J$.R(2456009, 'value', value, false, false))));
                        } catch (J$e) {
                            J$.Ex(2456153, J$e);
                        } finally {
                            if (J$.Fr(2456161))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2456105, 'isArray', isArray, false, false, false);
            J$.N(2456113, 'isKey', isKey, false, false, false);
            J$.N(2456121, 'stringToPath', stringToPath, false, false, false);
            J$.N(2456129, 'toString', toString, false, false, false);
            castPath = J$.N(2456145, 'castPath', J$.T(2456137, castPath, 12, false), true, false, false);
            var isArray = J$.W(2455873, 'isArray', J$.F(2455793, J$.I(typeof require === 'undefined' ? require = J$.R(2455777, 'require', undefined, true, true) : require = J$.R(2455777, 'require', require, true, true)), false)(J$.T(2455785, './isArray', 21, false)), isArray, false, true), isKey = J$.W(2455881, 'isKey', J$.F(2455817, J$.I(typeof require === 'undefined' ? require = J$.R(2455801, 'require', undefined, true, true) : require = J$.R(2455801, 'require', require, true, true)), false)(J$.T(2455809, './_isKey', 21, false)), isKey, false, true), stringToPath = J$.W(2455889, 'stringToPath', J$.F(2455841, J$.I(typeof require === 'undefined' ? require = J$.R(2455825, 'require', undefined, true, true) : require = J$.R(2455825, 'require', require, true, true)), false)(J$.T(2455833, './_stringToPath', 21, false)), stringToPath, false, true), toString = J$.W(2455897, 'toString', J$.F(2455865, J$.I(typeof require === 'undefined' ? require = J$.R(2455849, 'require', undefined, true, true) : require = J$.R(2455849, 'require', require, true, true)), false)(J$.T(2455857, './toString', 21, false)), toString, false, true);
            J$.P(2456089, J$.I(typeof module === 'undefined' ? module = J$.R(2456073, 'module', undefined, true, true) : module = J$.R(2456073, 'module', module, true, true)), 'exports', J$.R(2456081, 'castPath', castPath, false, true));
        } catch (J$e) {
            J$.Ex(2456169, J$e);
        } finally {
            if (J$.Sr(2456177))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

