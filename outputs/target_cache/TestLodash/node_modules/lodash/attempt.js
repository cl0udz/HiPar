J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2536729, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/attempt.js');
            J$.N(2536737, 'apply', apply, false, false, false);
            J$.N(2536745, 'baseRest', baseRest, false, false, false);
            J$.N(2536753, 'isError', isError, false, false, false);
            J$.N(2536761, 'attempt', attempt, false, false, false);
            var apply = J$.W(2536497, 'apply', J$.F(2536441, J$.I(typeof require === 'undefined' ? require = J$.R(2536425, 'require', undefined, true, true) : require = J$.R(2536425, 'require', require, true, true)), false)(J$.T(2536433, './_apply', 21, false)), apply, false, true), baseRest = J$.W(2536505, 'baseRest', J$.F(2536465, J$.I(typeof require === 'undefined' ? require = J$.R(2536449, 'require', undefined, true, true) : require = J$.R(2536449, 'require', require, true, true)), false)(J$.T(2536457, './_baseRest', 21, false)), baseRest, false, true), isError = J$.W(2536513, 'isError', J$.F(2536489, J$.I(typeof require === 'undefined' ? require = J$.R(2536473, 'require', undefined, true, true) : require = J$.R(2536473, 'require', require, true, true)), false)(J$.T(2536481, './isError', 21, false)), isError, false, true);
            var attempt = J$.W(2536697, 'attempt', J$.F(2536689, J$.R(2536521, 'baseRest', baseRest, false, true), false)(J$.T(2536681, function (func, args) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2536649, arguments.callee, this, arguments);
                            arguments = J$.N(2536657, 'arguments', arguments, true, false, false);
                            func = J$.N(2536665, 'func', func, true, false, false);
                            args = J$.N(2536673, 'args', args, true, false, false);
                            try {
                                return J$.Rt(2536569, J$.F(2536561, J$.R(2536529, 'apply', apply, false, true), false)(J$.R(2536537, 'func', func, false, false), J$.T(2536545, undefined, 24, false), J$.R(2536553, 'args', args, false, false)));
                            } catch (e) {
                                J$.N(2536641, 'e', e, false, false, true);
                                return J$.Rt(2536633, J$.C(119912, J$.F(2536593, J$.R(2536577, 'isError', isError, false, true), false)(J$.R(2536585, 'e', e, false, false))) ? J$.R(2536601, 'e', e, false, false) : J$.F(2536625, J$.I(typeof Error === 'undefined' ? Error = J$.R(2536609, 'Error', undefined, true, true) : Error = J$.R(2536609, 'Error', Error, true, true)), true)(J$.R(2536617, 'e', e, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(2536769, J$e);
                        } finally {
                            if (J$.Fr(2536777))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), attempt, false, true);
            J$.P(2536721, J$.I(typeof module === 'undefined' ? module = J$.R(2536705, 'module', undefined, true, true) : module = J$.R(2536705, 'module', module, true, true)), 'exports', J$.R(2536713, 'attempt', attempt, false, true));
        } catch (J$e) {
            J$.Ex(2536785, J$e);
        } finally {
            if (J$.Sr(2536793))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

