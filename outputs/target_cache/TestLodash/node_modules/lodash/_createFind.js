J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(2470881, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_createFind.js');
            function createFind(findIndexFunc) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2470833, arguments.callee, this, arguments);
                            arguments = J$.N(2470841, 'arguments', arguments, true, false, false);
                            findIndexFunc = J$.N(2470849, 'findIndexFunc', findIndexFunc, true, false, false);
                            return J$.Rt(2470825, J$.T(2470817, function (collection, predicate, fromIndex) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2470753, arguments.callee, this, arguments);
                                            arguments = J$.N(2470761, 'arguments', arguments, true, false, false);
                                            collection = J$.N(2470769, 'collection', collection, true, false, false);
                                            predicate = J$.N(2470777, 'predicate', predicate, true, false, false);
                                            fromIndex = J$.N(2470785, 'fromIndex', fromIndex, true, false, false);
                                            J$.N(2470793, 'iterable', iterable, false, false, false);
                                            J$.N(2470801, 'iteratee', iteratee, false, false, false);
                                            J$.N(2470809, 'index', index, false, false, false);
                                            var iterable = J$.W(2470409, 'iterable', J$.F(2470401, J$.I(typeof Object === 'undefined' ? Object = J$.R(2470385, 'Object', undefined, true, true) : Object = J$.R(2470385, 'Object', Object, true, true)), false)(J$.R(2470393, 'collection', collection, false, false)), iterable, false, false);
                                            if (J$.C(116496, J$.U(311090, '!', J$.F(2470433, J$.R(2470417, 'isArrayLike', isArrayLike, false, true), false)(J$.R(2470425, 'collection', collection, false, false))))) {
                                                var iteratee = J$.W(2470473, 'iteratee', J$.F(2470465, J$.R(2470441, 'baseIteratee', baseIteratee, false, true), false)(J$.R(2470449, 'predicate', predicate, false, false), J$.T(2470457, 3, 22, false)), iteratee, false, false);
                                                collection = J$.W(2470505, 'collection', J$.F(2470497, J$.R(2470481, 'keys', keys, false, true), false)(J$.R(2470489, 'collection', collection, false, false)), collection, false, false);
                                                predicate = J$.W(2470609, 'predicate', J$.T(2470601, function (key) {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2470577, arguments.callee, this, arguments);
                                                                arguments = J$.N(2470585, 'arguments', arguments, true, false, false);
                                                                key = J$.N(2470593, 'key', key, true, false, false);
                                                                return J$.Rt(2470569, J$.F(2470561, J$.R(2470513, 'iteratee', iteratee, false, false), false)(J$.G(2470537, J$.R(2470521, 'iterable', iterable, false, false), J$.R(2470529, 'key', key, false, false)), J$.R(2470545, 'key', key, false, false), J$.R(2470553, 'iterable', iterable, false, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(2470929, J$e);
                                                            } finally {
                                                                if (J$.Fr(2470937))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false), predicate, false, false);
                                            }
                                            var index = J$.W(2470657, 'index', J$.F(2470649, J$.R(2470617, 'findIndexFunc', findIndexFunc, false, false), false)(J$.R(2470625, 'collection', collection, false, false), J$.R(2470633, 'predicate', predicate, false, false), J$.R(2470641, 'fromIndex', fromIndex, false, false)), index, false, false);
                                            return J$.Rt(2470745, J$.C(116512, J$.B(311106, '>', J$.R(2470665, 'index', index, false, false), J$.U(311098, '-', J$.T(2470673, 1, 22, false)))) ? J$.G(2470729, J$.R(2470681, 'iterable', iterable, false, false), J$.C(116504, J$.R(2470689, 'iteratee', iteratee, false, false)) ? J$.G(2470713, J$.R(2470697, 'collection', collection, false, false), J$.R(2470705, 'index', index, false, false)) : J$.R(2470721, 'index', index, false, false)) : J$.T(2470737, undefined, 24, false));
                                        } catch (J$e) {
                                            J$.Ex(2470945, J$e);
                                        } finally {
                                            if (J$.Fr(2470953))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2470961, J$e);
                        } finally {
                            if (J$.Fr(2470969))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2470889, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(2470897, 'isArrayLike', isArrayLike, false, false, false);
            J$.N(2470905, 'keys', keys, false, false, false);
            createFind = J$.N(2470921, 'createFind', J$.T(2470913, createFind, 12, false), true, false, false);
            var baseIteratee = J$.W(2470361, 'baseIteratee', J$.F(2470305, J$.I(typeof require === 'undefined' ? require = J$.R(2470289, 'require', undefined, true, true) : require = J$.R(2470289, 'require', require, true, true)), false)(J$.T(2470297, './_baseIteratee', 21, false)), baseIteratee, false, true), isArrayLike = J$.W(2470369, 'isArrayLike', J$.F(2470329, J$.I(typeof require === 'undefined' ? require = J$.R(2470313, 'require', undefined, true, true) : require = J$.R(2470313, 'require', require, true, true)), false)(J$.T(2470321, './isArrayLike', 21, false)), isArrayLike, false, true), keys = J$.W(2470377, 'keys', J$.F(2470353, J$.I(typeof require === 'undefined' ? require = J$.R(2470337, 'require', undefined, true, true) : require = J$.R(2470337, 'require', require, true, true)), false)(J$.T(2470345, './keys', 21, false)), keys, false, true);
            J$.P(2470873, J$.I(typeof module === 'undefined' ? module = J$.R(2470857, 'module', undefined, true, true) : module = J$.R(2470857, 'module', module, true, true)), 'exports', J$.R(2470865, 'createFind', createFind, false, true));
        } catch (J$e) {
            J$.Ex(2470977, J$e);
        } finally {
            if (J$.Sr(2470985))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

