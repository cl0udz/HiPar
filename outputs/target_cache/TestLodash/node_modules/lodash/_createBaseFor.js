J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2466161, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_createBaseFor.js');
            function createBaseFor(fromRight) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2466113, arguments.callee, this, arguments);
                            arguments = J$.N(2466121, 'arguments', arguments, true, false, false);
                            fromRight = J$.N(2466129, 'fromRight', fromRight, true, false, false);
                            return J$.Rt(2466105, J$.T(2466097, function (object, iteratee, keysFunc) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2466017, arguments.callee, this, arguments);
                                            arguments = J$.N(2466025, 'arguments', arguments, true, false, false);
                                            object = J$.N(2466033, 'object', object, true, false, false);
                                            iteratee = J$.N(2466041, 'iteratee', iteratee, true, false, false);
                                            keysFunc = J$.N(2466049, 'keysFunc', keysFunc, true, false, false);
                                            J$.N(2466057, 'index', index, false, false, false);
                                            J$.N(2466065, 'iterable', iterable, false, false, false);
                                            J$.N(2466073, 'props', props, false, false, false);
                                            J$.N(2466081, 'length', length, false, false, false);
                                            J$.N(2466089, 'key', key, false, false, false);
                                            var index = J$.W(2465833, 'index', J$.U(310906, '-', J$.T(2465761, 1, 22, false)), index, false, false), iterable = J$.W(2465841, 'iterable', J$.F(2465785, J$.I(typeof Object === 'undefined' ? Object = J$.R(2465769, 'Object', undefined, true, true) : Object = J$.R(2465769, 'Object', Object, true, true)), false)(J$.R(2465777, 'object', object, false, false)), iterable, false, false), props = J$.W(2465849, 'props', J$.F(2465809, J$.R(2465793, 'keysFunc', keysFunc, false, false), false)(J$.R(2465801, 'object', object, false, false)), props, false, false), length = J$.W(2465857, 'length', J$.G(2465825, J$.R(2465817, 'props', props, false, false), 'length'), length, false, false);
                                            while (J$.C(116288, J$.B(310930, '+', length = J$.W(2465873, 'length', J$.B(310922, '-', J$.U(310914, '+', J$.R(2465865, 'length', length, false, false)), 1), length, false, false), 1))) {
                                                var key = J$.W(2465929, 'key', J$.G(2465921, J$.R(2465881, 'props', props, false, false), J$.C(116272, J$.R(2465889, 'fromRight', fromRight, false, false)) ? J$.R(2465897, 'length', length, false, false) : index = J$.W(2465913, 'index', J$.B(310946, '+', J$.U(310938, '+', J$.R(2465905, 'index', index, false, false)), 1), index, false, false)), key, false, false);
                                                if (J$.C(116280, J$.B(310954, '===', J$.F(2465985, J$.R(2465937, 'iteratee', iteratee, false, false), false)(J$.G(2465961, J$.R(2465945, 'iterable', iterable, false, false), J$.R(2465953, 'key', key, false, false)), J$.R(2465969, 'key', key, false, false), J$.R(2465977, 'iterable', iterable, false, false)), J$.T(2465993, false, 23, false)))) {
                                                    break;
                                                }
                                            }
                                            return J$.Rt(2466009, J$.R(2466001, 'object', object, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2466185, J$e);
                                        } finally {
                                            if (J$.Fr(2466193))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2466201, J$e);
                        } finally {
                            if (J$.Fr(2466209))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            createBaseFor = J$.N(2466177, 'createBaseFor', J$.T(2466169, createBaseFor, 12, false), true, false, false);
            J$.P(2466153, J$.I(typeof module === 'undefined' ? module = J$.R(2466137, 'module', undefined, true, true) : module = J$.R(2466137, 'module', module, true, true)), 'exports', J$.R(2466145, 'createBaseFor', createBaseFor, false, true));
        } catch (J$e) {
            J$.Ex(2466217, J$e);
        } finally {
            if (J$.Sr(2466225))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

