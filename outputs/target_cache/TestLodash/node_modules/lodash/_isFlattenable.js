J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2504657, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_isFlattenable.js');
            function isFlattenable(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2504609, arguments.callee, this, arguments);
                            arguments = J$.N(2504617, 'arguments', arguments, true, false, false);
                            value = J$.N(2504625, 'value', value, true, false, false);
                            return J$.Rt(2504601, J$.C(118680, J$.C(118656, J$.F(2504529, J$.R(2504513, 'isArray', isArray, false, true), false)(J$.R(2504521, 'value', value, false, false))) ? J$._() : J$.F(2504553, J$.R(2504537, 'isArguments', isArguments, false, true), false)(J$.R(2504545, 'value', value, false, false))) ? J$._() : J$.U(313258, '!', J$.U(313250, '!', J$.C(118672, J$.C(118664, J$.R(2504561, 'spreadableSymbol', spreadableSymbol, false, true)) ? J$.R(2504569, 'value', value, false, false) : J$._()) ? J$.G(2504593, J$.R(2504577, 'value', value, false, false), J$.R(2504585, 'spreadableSymbol', spreadableSymbol, false, true)) : J$._())));
                        } catch (J$e) {
                            J$.Ex(2504713, J$e);
                        } finally {
                            if (J$.Fr(2504721))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2504665, 'Symbol', Symbol, false, false, false);
            J$.N(2504673, 'isArguments', isArguments, false, false, false);
            J$.N(2504681, 'isArray', isArray, false, false, false);
            J$.N(2504689, 'spreadableSymbol', spreadableSymbol, false, false, false);
            isFlattenable = J$.N(2504705, 'isFlattenable', J$.T(2504697, isFlattenable, 12, false), true, false, false);
            var Symbol = J$.W(2504449, 'Symbol', J$.F(2504393, J$.I(typeof require === 'undefined' ? require = J$.R(2504377, 'require', undefined, true, true) : require = J$.R(2504377, 'require', require, true, true)), false)(J$.T(2504385, './_Symbol', 21, false)), Symbol, false, true), isArguments = J$.W(2504457, 'isArguments', J$.F(2504417, J$.I(typeof require === 'undefined' ? require = J$.R(2504401, 'require', undefined, true, true) : require = J$.R(2504401, 'require', require, true, true)), false)(J$.T(2504409, './isArguments', 21, false)), isArguments, false, true), isArray = J$.W(2504465, 'isArray', J$.F(2504441, J$.I(typeof require === 'undefined' ? require = J$.R(2504425, 'require', undefined, true, true) : require = J$.R(2504425, 'require', require, true, true)), false)(J$.T(2504433, './isArray', 21, false)), isArray, false, true);
            var spreadableSymbol = J$.W(2504505, 'spreadableSymbol', J$.C(118648, J$.R(2504473, 'Symbol', Symbol, false, true)) ? J$.G(2504489, J$.R(2504481, 'Symbol', Symbol, false, true), 'isConcatSpreadable') : J$.T(2504497, undefined, 24, false), spreadableSymbol, false, true);
            J$.P(2504649, J$.I(typeof module === 'undefined' ? module = J$.R(2504633, 'module', undefined, true, true) : module = J$.R(2504633, 'module', module, true, true)), 'exports', J$.R(2504641, 'isFlattenable', isFlattenable, false, true));
        } catch (J$e) {
            J$.Ex(2504729, J$e);
        } finally {
            if (J$.Sr(2504737))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

