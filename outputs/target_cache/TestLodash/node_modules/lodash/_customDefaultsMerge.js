J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2484761, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_customDefaultsMerge.js');
            function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2484673, arguments.callee, this, arguments);
                            arguments = J$.N(2484681, 'arguments', arguments, true, false, false);
                            objValue = J$.N(2484689, 'objValue', objValue, true, false, false);
                            srcValue = J$.N(2484697, 'srcValue', srcValue, true, false, false);
                            key = J$.N(2484705, 'key', key, true, false, false);
                            object = J$.N(2484713, 'object', object, true, false, false);
                            source = J$.N(2484721, 'source', source, true, false, false);
                            stack = J$.N(2484729, 'stack', stack, true, false, false);
                            if (J$.C(117360, J$.C(117352, J$.F(2484505, J$.R(2484489, 'isObject', isObject, false, true), false)(J$.R(2484497, 'objValue', objValue, false, false))) ? J$.F(2484529, J$.R(2484513, 'isObject', isObject, false, true), false)(J$.R(2484521, 'srcValue', srcValue, false, false)) : J$._())) {
                                J$.M(2484561, J$.R(2484537, 'stack', stack, false, false), 'set', false)(J$.R(2484545, 'srcValue', srcValue, false, false), J$.R(2484553, 'objValue', objValue, false, false));
                                J$.F(2484617, J$.R(2484569, 'baseMerge', baseMerge, false, true), false)(J$.R(2484577, 'objValue', objValue, false, false), J$.R(2484585, 'srcValue', srcValue, false, false), J$.T(2484593, undefined, 24, false), J$.R(2484601, 'customDefaultsMerge', customDefaultsMerge, false, true), J$.R(2484609, 'stack', stack, false, false));
                                J$.M(2484649, J$.R(2484625, 'stack', stack, false, false), J$.T(2484633, 'delete', 21, false), false)(J$.R(2484641, 'srcValue', srcValue, false, false));
                            }
                            return J$.Rt(2484665, J$.R(2484657, 'objValue', objValue, false, false));
                        } catch (J$e) {
                            J$.Ex(2484801, J$e);
                        } finally {
                            if (J$.Fr(2484809))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2484769, 'baseMerge', baseMerge, false, false, false);
            J$.N(2484777, 'isObject', isObject, false, false, false);
            customDefaultsMerge = J$.N(2484793, 'customDefaultsMerge', J$.T(2484785, customDefaultsMerge, 12, false), true, false, false);
            var baseMerge = J$.W(2484473, 'baseMerge', J$.F(2484441, J$.I(typeof require === 'undefined' ? require = J$.R(2484425, 'require', undefined, true, true) : require = J$.R(2484425, 'require', require, true, true)), false)(J$.T(2484433, './_baseMerge', 21, false)), baseMerge, false, true), isObject = J$.W(2484481, 'isObject', J$.F(2484465, J$.I(typeof require === 'undefined' ? require = J$.R(2484449, 'require', undefined, true, true) : require = J$.R(2484449, 'require', require, true, true)), false)(J$.T(2484457, './isObject', 21, false)), isObject, false, true);
            J$.P(2484753, J$.I(typeof module === 'undefined' ? module = J$.R(2484737, 'module', undefined, true, true) : module = J$.R(2484737, 'module', module, true, true)), 'exports', J$.R(2484745, 'customDefaultsMerge', customDefaultsMerge, false, true));
        } catch (J$e) {
            J$.Ex(2484817, J$e);
        } finally {
            if (J$.Sr(2484825))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

