J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2503385, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_initCloneByTag.js');
            function initCloneByTag(object, tag, isDeep) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2503313, arguments.callee, this, arguments);
                            arguments = J$.N(2503321, 'arguments', arguments, true, false, false);
                            object = J$.N(2503329, 'object', object, true, false, false);
                            tag = J$.N(2503337, 'tag', tag, true, false, false);
                            isDeep = J$.N(2503345, 'isDeep', isDeep, true, false, false);
                            J$.N(2503353, 'Ctor', Ctor, false, false, false);
                            var Ctor = J$.W(2502857, 'Ctor', J$.G(2502849, J$.R(2502841, 'object', object, false, false), 'constructor'), Ctor, false, false);
                            switch (J$.C1(118448, J$.R(2502865, 'tag', tag, false, false))) {
                            case J$.C2(118456, J$.R(2502905, 'arrayBufferTag', arrayBufferTag, false, true)):
                                return J$.Rt(2502897, J$.F(2502889, J$.R(2502873, 'cloneArrayBuffer', cloneArrayBuffer, false, true), false)(J$.R(2502881, 'object', object, false, false)));
                            case J$.C2(118464, J$.R(2502913, 'boolTag', boolTag, false, true)):
                            case J$.C2(118472, J$.R(2502953, 'dateTag', dateTag, false, true)):
                                return J$.Rt(2502945, J$.F(2502937, J$.R(2502921, 'Ctor', Ctor, false, false), true)(J$.U(313162, '+', J$.R(2502929, 'object', object, false, false))));
                            case J$.C2(118480, J$.R(2503001, 'dataViewTag', dataViewTag, false, true)):
                                return J$.Rt(2502993, J$.F(2502985, J$.R(2502961, 'cloneDataView', cloneDataView, false, true), false)(J$.R(2502969, 'object', object, false, false), J$.R(2502977, 'isDeep', isDeep, false, false)));
                            case J$.C2(118488, J$.R(2503009, 'float32Tag', float32Tag, false, true)):
                            case J$.C2(118496, J$.R(2503017, 'float64Tag', float64Tag, false, true)):
                            case J$.C2(118504, J$.R(2503025, 'int8Tag', int8Tag, false, true)):
                            case J$.C2(118512, J$.R(2503033, 'int16Tag', int16Tag, false, true)):
                            case J$.C2(118520, J$.R(2503041, 'int32Tag', int32Tag, false, true)):
                            case J$.C2(118528, J$.R(2503049, 'uint8Tag', uint8Tag, false, true)):
                            case J$.C2(118536, J$.R(2503057, 'uint8ClampedTag', uint8ClampedTag, false, true)):
                            case J$.C2(118544, J$.R(2503065, 'uint16Tag', uint16Tag, false, true)):
                            case J$.C2(118552, J$.R(2503113, 'uint32Tag', uint32Tag, false, true)):
                                return J$.Rt(2503105, J$.F(2503097, J$.R(2503073, 'cloneTypedArray', cloneTypedArray, false, true), false)(J$.R(2503081, 'object', object, false, false), J$.R(2503089, 'isDeep', isDeep, false, false)));
                            case J$.C2(118560, J$.R(2503145, 'mapTag', mapTag, false, true)):
                                return J$.Rt(2503137, J$.F(2503129, J$.R(2503121, 'Ctor', Ctor, false, false), true)());
                            case J$.C2(118568, J$.R(2503153, 'numberTag', numberTag, false, true)):
                            case J$.C2(118576, J$.R(2503193, 'stringTag', stringTag, false, true)):
                                return J$.Rt(2503185, J$.F(2503177, J$.R(2503161, 'Ctor', Ctor, false, false), true)(J$.R(2503169, 'object', object, false, false)));
                            case J$.C2(118584, J$.R(2503233, 'regexpTag', regexpTag, false, true)):
                                return J$.Rt(2503225, J$.F(2503217, J$.R(2503201, 'cloneRegExp', cloneRegExp, false, true), false)(J$.R(2503209, 'object', object, false, false)));
                            case J$.C2(118592, J$.R(2503265, 'setTag', setTag, false, true)):
                                return J$.Rt(2503257, J$.F(2503249, J$.R(2503241, 'Ctor', Ctor, false, false), true)());
                            case J$.C2(118600, J$.R(2503305, 'symbolTag', symbolTag, false, true)):
                                return J$.Rt(2503297, J$.F(2503289, J$.R(2503273, 'cloneSymbol', cloneSymbol, false, true), false)(J$.R(2503281, 'object', object, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(2503601, J$e);
                        } finally {
                            if (J$.Fr(2503609))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2503393, 'cloneArrayBuffer', cloneArrayBuffer, false, false, false);
            J$.N(2503401, 'cloneDataView', cloneDataView, false, false, false);
            J$.N(2503409, 'cloneRegExp', cloneRegExp, false, false, false);
            J$.N(2503417, 'cloneSymbol', cloneSymbol, false, false, false);
            J$.N(2503425, 'cloneTypedArray', cloneTypedArray, false, false, false);
            J$.N(2503433, 'boolTag', boolTag, false, false, false);
            J$.N(2503441, 'dateTag', dateTag, false, false, false);
            J$.N(2503449, 'mapTag', mapTag, false, false, false);
            J$.N(2503457, 'numberTag', numberTag, false, false, false);
            J$.N(2503465, 'regexpTag', regexpTag, false, false, false);
            J$.N(2503473, 'setTag', setTag, false, false, false);
            J$.N(2503481, 'stringTag', stringTag, false, false, false);
            J$.N(2503489, 'symbolTag', symbolTag, false, false, false);
            J$.N(2503497, 'arrayBufferTag', arrayBufferTag, false, false, false);
            J$.N(2503505, 'dataViewTag', dataViewTag, false, false, false);
            J$.N(2503513, 'float32Tag', float32Tag, false, false, false);
            J$.N(2503521, 'float64Tag', float64Tag, false, false, false);
            J$.N(2503529, 'int8Tag', int8Tag, false, false, false);
            J$.N(2503537, 'int16Tag', int16Tag, false, false, false);
            J$.N(2503545, 'int32Tag', int32Tag, false, false, false);
            J$.N(2503553, 'uint8Tag', uint8Tag, false, false, false);
            J$.N(2503561, 'uint8ClampedTag', uint8ClampedTag, false, false, false);
            J$.N(2503569, 'uint16Tag', uint16Tag, false, false, false);
            J$.N(2503577, 'uint32Tag', uint32Tag, false, false, false);
            initCloneByTag = J$.N(2503593, 'initCloneByTag', J$.T(2503585, initCloneByTag, 12, false), true, false, false);
            var cloneArrayBuffer = J$.W(2502497, 'cloneArrayBuffer', J$.F(2502393, J$.I(typeof require === 'undefined' ? require = J$.R(2502377, 'require', undefined, true, true) : require = J$.R(2502377, 'require', require, true, true)), false)(J$.T(2502385, './_cloneArrayBuffer', 21, false)), cloneArrayBuffer, false, true), cloneDataView = J$.W(2502505, 'cloneDataView', J$.F(2502417, J$.I(typeof require === 'undefined' ? require = J$.R(2502401, 'require', undefined, true, true) : require = J$.R(2502401, 'require', require, true, true)), false)(J$.T(2502409, './_cloneDataView', 21, false)), cloneDataView, false, true), cloneRegExp = J$.W(2502513, 'cloneRegExp', J$.F(2502441, J$.I(typeof require === 'undefined' ? require = J$.R(2502425, 'require', undefined, true, true) : require = J$.R(2502425, 'require', require, true, true)), false)(J$.T(2502433, './_cloneRegExp', 21, false)), cloneRegExp, false, true), cloneSymbol = J$.W(2502521, 'cloneSymbol', J$.F(2502465, J$.I(typeof require === 'undefined' ? require = J$.R(2502449, 'require', undefined, true, true) : require = J$.R(2502449, 'require', require, true, true)), false)(J$.T(2502457, './_cloneSymbol', 21, false)), cloneSymbol, false, true), cloneTypedArray = J$.W(2502529, 'cloneTypedArray', J$.F(2502489, J$.I(typeof require === 'undefined' ? require = J$.R(2502473, 'require', undefined, true, true) : require = J$.R(2502473, 'require', require, true, true)), false)(J$.T(2502481, './_cloneTypedArray', 21, false)), cloneTypedArray, false, true);
            var boolTag = J$.W(2502601, 'boolTag', J$.T(2502537, '[object Boolean]', 21, false), boolTag, false, true), dateTag = J$.W(2502609, 'dateTag', J$.T(2502545, '[object Date]', 21, false), dateTag, false, true), mapTag = J$.W(2502617, 'mapTag', J$.T(2502553, '[object Map]', 21, false), mapTag, false, true), numberTag = J$.W(2502625, 'numberTag', J$.T(2502561, '[object Number]', 21, false), numberTag, false, true), regexpTag = J$.W(2502633, 'regexpTag', J$.T(2502569, '[object RegExp]', 21, false), regexpTag, false, true), setTag = J$.W(2502641, 'setTag', J$.T(2502577, '[object Set]', 21, false), setTag, false, true), stringTag = J$.W(2502649, 'stringTag', J$.T(2502585, '[object String]', 21, false), stringTag, false, true), symbolTag = J$.W(2502657, 'symbolTag', J$.T(2502593, '[object Symbol]', 21, false), symbolTag, false, true);
            var arrayBufferTag = J$.W(2502753, 'arrayBufferTag', J$.T(2502665, '[object ArrayBuffer]', 21, false), arrayBufferTag, false, true), dataViewTag = J$.W(2502761, 'dataViewTag', J$.T(2502673, '[object DataView]', 21, false), dataViewTag, false, true), float32Tag = J$.W(2502769, 'float32Tag', J$.T(2502681, '[object Float32Array]', 21, false), float32Tag, false, true), float64Tag = J$.W(2502777, 'float64Tag', J$.T(2502689, '[object Float64Array]', 21, false), float64Tag, false, true), int8Tag = J$.W(2502785, 'int8Tag', J$.T(2502697, '[object Int8Array]', 21, false), int8Tag, false, true), int16Tag = J$.W(2502793, 'int16Tag', J$.T(2502705, '[object Int16Array]', 21, false), int16Tag, false, true), int32Tag = J$.W(2502801, 'int32Tag', J$.T(2502713, '[object Int32Array]', 21, false), int32Tag, false, true), uint8Tag = J$.W(2502809, 'uint8Tag', J$.T(2502721, '[object Uint8Array]', 21, false), uint8Tag, false, true), uint8ClampedTag = J$.W(2502817, 'uint8ClampedTag', J$.T(2502729, '[object Uint8ClampedArray]', 21, false), uint8ClampedTag, false, true), uint16Tag = J$.W(2502825, 'uint16Tag', J$.T(2502737, '[object Uint16Array]', 21, false), uint16Tag, false, true), uint32Tag = J$.W(2502833, 'uint32Tag', J$.T(2502745, '[object Uint32Array]', 21, false), uint32Tag, false, true);
            J$.P(2503377, J$.I(typeof module === 'undefined' ? module = J$.R(2503361, 'module', undefined, true, true) : module = J$.R(2503361, 'module', module, true, true)), 'exports', J$.R(2503369, 'initCloneByTag', initCloneByTag, false, true));
        } catch (J$e) {
            J$.Ex(2503617, J$e);
        } finally {
            if (J$.Sr(2503625))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

