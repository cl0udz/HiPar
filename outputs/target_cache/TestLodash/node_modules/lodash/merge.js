J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3096873, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/merge.js');
            J$.N(3096881, 'baseMerge', baseMerge, false, false, false);
            J$.N(3096889, 'createAssigner', createAssigner, false, false, false);
            J$.N(3096897, 'merge', merge, false, false, false);
            var baseMerge = J$.W(3096721, 'baseMerge', J$.F(3096689, J$.I(typeof require === 'undefined' ? require = J$.R(3096673, 'require', undefined, true, true) : require = J$.R(3096673, 'require', require, true, true)), false)(J$.T(3096681, './_baseMerge', 21, false)), baseMerge, false, true), createAssigner = J$.W(3096729, 'createAssigner', J$.F(3096713, J$.I(typeof require === 'undefined' ? require = J$.R(3096697, 'require', undefined, true, true) : require = J$.R(3096697, 'require', require, true, true)), false)(J$.T(3096705, './_createAssigner', 21, false)), createAssigner, false, true);
            var merge = J$.W(3096841, 'merge', J$.F(3096833, J$.R(3096737, 'createAssigner', createAssigner, false, true), false)(J$.T(3096825, function (object, source, srcIndex) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3096785, arguments.callee, this, arguments);
                            arguments = J$.N(3096793, 'arguments', arguments, true, false, false);
                            object = J$.N(3096801, 'object', object, true, false, false);
                            source = J$.N(3096809, 'source', source, true, false, false);
                            srcIndex = J$.N(3096817, 'srcIndex', srcIndex, true, false, false);
                            J$.F(3096777, J$.R(3096745, 'baseMerge', baseMerge, false, true), false)(J$.R(3096753, 'object', object, false, false), J$.R(3096761, 'source', source, false, false), J$.R(3096769, 'srcIndex', srcIndex, false, false));
                        } catch (J$e) {
                            J$.Ex(3096905, J$e);
                        } finally {
                            if (J$.Fr(3096913))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), merge, false, true);
            J$.P(3096865, J$.I(typeof module === 'undefined' ? module = J$.R(3096849, 'module', undefined, true, true) : module = J$.R(3096849, 'module', module, true, true)), 'exports', J$.R(3096857, 'merge', merge, false, true));
        } catch (J$e) {
            J$.Ex(3096921, J$e);
        } finally {
            if (J$.Sr(3096929))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

