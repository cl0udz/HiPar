J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2467249, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_createCaseFirst.js');
            function createCaseFirst(methodName) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2467201, arguments.callee, this, arguments);
                            arguments = J$.N(2467209, 'arguments', arguments, true, false, false);
                            methodName = J$.N(2467217, 'methodName', methodName, true, false, false);
                            return J$.Rt(2467193, J$.T(2467185, function (string) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2467137, arguments.callee, this, arguments);
                                            arguments = J$.N(2467145, 'arguments', arguments, true, false, false);
                                            string = J$.N(2467153, 'string', string, true, false, false);
                                            J$.N(2467161, 'strSymbols', strSymbols, false, false, false);
                                            J$.N(2467169, 'chr', chr, false, false, false);
                                            J$.N(2467177, 'trailing', trailing, false, false, false);
                                            string = J$.W(2466873, 'string', J$.F(2466865, J$.R(2466849, 'toString', toString, false, true), false)(J$.R(2466857, 'string', string, false, false)), string, false, false);
                                            var strSymbols = J$.W(2466937, 'strSymbols', J$.C(116328, J$.F(2466897, J$.R(2466881, 'hasUnicode', hasUnicode, false, true), false)(J$.R(2466889, 'string', string, false, false))) ? J$.F(2466921, J$.R(2466905, 'stringToArray', stringToArray, false, true), false)(J$.R(2466913, 'string', string, false, false)) : J$.T(2466929, undefined, 24, false), strSymbols, false, false);
                                            var chr = J$.W(2467001, 'chr', J$.C(116336, J$.R(2466945, 'strSymbols', strSymbols, false, false)) ? J$.G(2466969, J$.R(2466953, 'strSymbols', strSymbols, false, false), J$.T(2466961, 0, 22, false)) : J$.M(2466993, J$.R(2466977, 'string', string, false, false), 'charAt', false)(J$.T(2466985, 0, 22, false)), chr, false, false);
                                            var trailing = J$.W(2467089, 'trailing', J$.C(116344, J$.R(2467009, 'strSymbols', strSymbols, false, false)) ? J$.M(2467057, J$.F(2467041, J$.R(2467017, 'castSlice', castSlice, false, true), false)(J$.R(2467025, 'strSymbols', strSymbols, false, false), J$.T(2467033, 1, 22, false)), 'join', false)(J$.T(2467049, '', 21, false)) : J$.M(2467081, J$.R(2467065, 'string', string, false, false), 'slice', false)(J$.T(2467073, 1, 22, false)), trailing, false, false);
                                            return J$.Rt(2467129, J$.B(310986, '+', J$.M(2467113, J$.R(2467097, 'chr', chr, false, false), J$.R(2467105, 'methodName', methodName, false, false), false)(), J$.R(2467121, 'trailing', trailing, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2467305, J$e);
                                        } finally {
                                            if (J$.Fr(2467313))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2467321, J$e);
                        } finally {
                            if (J$.Fr(2467329))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2467257, 'castSlice', castSlice, false, false, false);
            J$.N(2467265, 'hasUnicode', hasUnicode, false, false, false);
            J$.N(2467273, 'stringToArray', stringToArray, false, false, false);
            J$.N(2467281, 'toString', toString, false, false, false);
            createCaseFirst = J$.N(2467297, 'createCaseFirst', J$.T(2467289, createCaseFirst, 12, false), true, false, false);
            var castSlice = J$.W(2466817, 'castSlice', J$.F(2466737, J$.I(typeof require === 'undefined' ? require = J$.R(2466721, 'require', undefined, true, true) : require = J$.R(2466721, 'require', require, true, true)), false)(J$.T(2466729, './_castSlice', 21, false)), castSlice, false, true), hasUnicode = J$.W(2466825, 'hasUnicode', J$.F(2466761, J$.I(typeof require === 'undefined' ? require = J$.R(2466745, 'require', undefined, true, true) : require = J$.R(2466745, 'require', require, true, true)), false)(J$.T(2466753, './_hasUnicode', 21, false)), hasUnicode, false, true), stringToArray = J$.W(2466833, 'stringToArray', J$.F(2466785, J$.I(typeof require === 'undefined' ? require = J$.R(2466769, 'require', undefined, true, true) : require = J$.R(2466769, 'require', require, true, true)), false)(J$.T(2466777, './_stringToArray', 21, false)), stringToArray, false, true), toString = J$.W(2466841, 'toString', J$.F(2466809, J$.I(typeof require === 'undefined' ? require = J$.R(2466793, 'require', undefined, true, true) : require = J$.R(2466793, 'require', require, true, true)), false)(J$.T(2466801, './toString', 21, false)), toString, false, true);
            J$.P(2467241, J$.I(typeof module === 'undefined' ? module = J$.R(2467225, 'module', undefined, true, true) : module = J$.R(2467225, 'module', module, true, true)), 'exports', J$.R(2467233, 'createCaseFirst', createCaseFirst, false, true));
        } catch (J$e) {
            J$.Ex(2467337, J$e);
        } finally {
            if (J$.Sr(2467345))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

