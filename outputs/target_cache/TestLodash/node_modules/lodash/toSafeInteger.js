J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3141105, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/toSafeInteger.js');
            function toSafeInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3141057, arguments.callee, this, arguments);
                            arguments = J$.N(3141065, 'arguments', arguments, true, false, false);
                            value = J$.N(3141073, 'value', value, true, false, false);
                            return J$.Rt(3141049, J$.C(155944, J$.R(3140953, 'value', value, false, false)) ? J$.F(3141009, J$.R(3140961, 'baseClamp', baseClamp, false, true), false)(J$.F(3140985, J$.R(3140969, 'toInteger', toInteger, false, true), false)(J$.R(3140977, 'value', value, false, false)), J$.U(355714, '-', J$.R(3140993, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)), J$.R(3141001, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)) : J$.C(155936, J$.B(355722, '===', J$.R(3141017, 'value', value, false, false), J$.T(3141025, 0, 22, false))) ? J$.R(3141033, 'value', value, false, false) : J$.T(3141041, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(3141153, J$e);
                        } finally {
                            if (J$.Fr(3141161))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3141113, 'baseClamp', baseClamp, false, false, false);
            J$.N(3141121, 'toInteger', toInteger, false, false, false);
            J$.N(3141129, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, false, false);
            toSafeInteger = J$.N(3141145, 'toSafeInteger', J$.T(3141137, toSafeInteger, 12, false), true, false, false);
            var baseClamp = J$.W(3140921, 'baseClamp', J$.F(3140889, J$.I(typeof require === 'undefined' ? require = J$.R(3140873, 'require', undefined, true, true) : require = J$.R(3140873, 'require', require, true, true)), false)(J$.T(3140881, './_baseClamp', 21, false)), baseClamp, false, true), toInteger = J$.W(3140929, 'toInteger', J$.F(3140913, J$.I(typeof require === 'undefined' ? require = J$.R(3140897, 'require', undefined, true, true) : require = J$.R(3140897, 'require', require, true, true)), false)(J$.T(3140905, './toInteger', 21, false)), toInteger, false, true);
            var MAX_SAFE_INTEGER = J$.W(3140945, 'MAX_SAFE_INTEGER', J$.T(3140937, 9007199254740991, 22, false), MAX_SAFE_INTEGER, false, true);
            J$.P(3141097, J$.I(typeof module === 'undefined' ? module = J$.R(3141081, 'module', undefined, true, true) : module = J$.R(3141081, 'module', module, true, true)), 'exports', J$.R(3141089, 'toSafeInteger', toSafeInteger, false, true));
        } catch (J$e) {
            J$.Ex(3141169, J$e);
        } finally {
            if (J$.Sr(3141177))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

