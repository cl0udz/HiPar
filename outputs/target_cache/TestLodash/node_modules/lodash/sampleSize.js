J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3119969, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/sampleSize.js');
            function sampleSize(collection, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3119897, arguments.callee, this, arguments);
                            arguments = J$.N(3119905, 'arguments', arguments, true, false, false);
                            collection = J$.N(3119913, 'collection', collection, true, false, false);
                            n = J$.N(3119921, 'n', n, true, false, false);
                            guard = J$.N(3119929, 'guard', guard, true, false, false);
                            J$.N(3119937, 'func', func, false, false, false);
                            if (J$.C(154888, J$.C(154880, J$.R(3119697, 'guard', guard, false, false)) ? J$.F(3119737, J$.R(3119705, 'isIterateeCall', isIterateeCall, false, true), false)(J$.R(3119713, 'collection', collection, false, false), J$.R(3119721, 'n', n, false, false), J$.R(3119729, 'guard', guard, false, false)) : J$.B(354666, '===', J$.R(3119745, 'n', n, false, false), J$.T(3119753, undefined, 24, false)))) {
                                n = J$.W(3119769, 'n', J$.T(3119761, 1, 22, false), n, false, false);
                            } else {
                                n = J$.W(3119801, 'n', J$.F(3119793, J$.R(3119777, 'toInteger', toInteger, false, true), false)(J$.R(3119785, 'n', n, false, false)), n, false, false);
                            }
                            var func = J$.W(3119849, 'func', J$.C(154896, J$.F(3119825, J$.R(3119809, 'isArray', isArray, false, true), false)(J$.R(3119817, 'collection', collection, false, false))) ? J$.R(3119833, 'arraySampleSize', arraySampleSize, false, true) : J$.R(3119841, 'baseSampleSize', baseSampleSize, false, true), func, false, false);
                            return J$.Rt(3119889, J$.F(3119881, J$.R(3119857, 'func', func, false, false), false)(J$.R(3119865, 'collection', collection, false, false), J$.R(3119873, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(3120033, J$e);
                        } finally {
                            if (J$.Fr(3120041))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3119977, 'arraySampleSize', arraySampleSize, false, false, false);
            J$.N(3119985, 'baseSampleSize', baseSampleSize, false, false, false);
            J$.N(3119993, 'isArray', isArray, false, false, false);
            J$.N(3120001, 'isIterateeCall', isIterateeCall, false, false, false);
            J$.N(3120009, 'toInteger', toInteger, false, false, false);
            sampleSize = J$.N(3120025, 'sampleSize', J$.T(3120017, sampleSize, 12, false), true, false, false);
            var arraySampleSize = J$.W(3119657, 'arraySampleSize', J$.F(3119553, J$.I(typeof require === 'undefined' ? require = J$.R(3119537, 'require', undefined, true, true) : require = J$.R(3119537, 'require', require, true, true)), false)(J$.T(3119545, './_arraySampleSize', 21, false)), arraySampleSize, false, true), baseSampleSize = J$.W(3119665, 'baseSampleSize', J$.F(3119577, J$.I(typeof require === 'undefined' ? require = J$.R(3119561, 'require', undefined, true, true) : require = J$.R(3119561, 'require', require, true, true)), false)(J$.T(3119569, './_baseSampleSize', 21, false)), baseSampleSize, false, true), isArray = J$.W(3119673, 'isArray', J$.F(3119601, J$.I(typeof require === 'undefined' ? require = J$.R(3119585, 'require', undefined, true, true) : require = J$.R(3119585, 'require', require, true, true)), false)(J$.T(3119593, './isArray', 21, false)), isArray, false, true), isIterateeCall = J$.W(3119681, 'isIterateeCall', J$.F(3119625, J$.I(typeof require === 'undefined' ? require = J$.R(3119609, 'require', undefined, true, true) : require = J$.R(3119609, 'require', require, true, true)), false)(J$.T(3119617, './_isIterateeCall', 21, false)), isIterateeCall, false, true), toInteger = J$.W(3119689, 'toInteger', J$.F(3119649, J$.I(typeof require === 'undefined' ? require = J$.R(3119633, 'require', undefined, true, true) : require = J$.R(3119633, 'require', require, true, true)), false)(J$.T(3119641, './toInteger', 21, false)), toInteger, false, true);
            J$.P(3119961, J$.I(typeof module === 'undefined' ? module = J$.R(3119945, 'module', undefined, true, true) : module = J$.R(3119945, 'module', module, true, true)), 'exports', J$.R(3119953, 'sampleSize', sampleSize, false, true));
        } catch (J$e) {
            J$.Ex(3120049, J$e);
        } finally {
            if (J$.Sr(3120057))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

