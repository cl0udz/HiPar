J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3144673, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/trimStart.js');
            function trimStart(string, chars, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3144593, arguments.callee, this, arguments);
                            arguments = J$.N(3144601, 'arguments', arguments, true, false, false);
                            string = J$.N(3144609, 'string', string, true, false, false);
                            chars = J$.N(3144617, 'chars', chars, true, false, false);
                            guard = J$.N(3144625, 'guard', guard, true, false, false);
                            J$.N(3144633, 'strSymbols', strSymbols, false, false, false);
                            J$.N(3144641, 'start', start, false, false, false);
                            string = J$.W(3144313, 'string', J$.F(3144305, J$.R(3144289, 'toString', toString, false, true), false)(J$.R(3144297, 'string', string, false, false)), string, false, false);
                            if (J$.C(156128, J$.C(156120, J$.R(3144321, 'string', string, false, false)) ? J$.C(156112, J$.R(3144329, 'guard', guard, false, false)) ? J$._() : J$.B(355810, '===', J$.R(3144337, 'chars', chars, false, false), J$.T(3144345, undefined, 24, false)) : J$._())) {
                                return J$.Rt(3144385, J$.M(3144377, J$.R(3144353, 'string', string, false, false), 'replace', false)(J$.R(3144361, 'reTrimStart', reTrimStart, false, true), J$.T(3144369, '', 21, false)));
                            }
                            if (J$.C(156144, J$.C(156136, J$.U(355818, '!', J$.R(3144393, 'string', string, false, false))) ? J$._() : J$.U(355826, '!', chars = J$.W(3144425, 'chars', J$.F(3144417, J$.R(3144401, 'baseToString', baseToString, false, true), false)(J$.R(3144409, 'chars', chars, false, false)), chars, false, false)))) {
                                return J$.Rt(3144441, J$.R(3144433, 'string', string, false, false));
                            }
                            var strSymbols = J$.W(3144521, 'strSymbols', J$.F(3144465, J$.R(3144449, 'stringToArray', stringToArray, false, true), false)(J$.R(3144457, 'string', string, false, false)), strSymbols, false, false), start = J$.W(3144529, 'start', J$.F(3144513, J$.R(3144473, 'charsStartIndex', charsStartIndex, false, true), false)(J$.R(3144481, 'strSymbols', strSymbols, false, false), J$.F(3144505, J$.R(3144489, 'stringToArray', stringToArray, false, true), false)(J$.R(3144497, 'chars', chars, false, false))), start, false, false);
                            return J$.Rt(3144585, J$.M(3144577, J$.F(3144561, J$.R(3144537, 'castSlice', castSlice, false, true), false)(J$.R(3144545, 'strSymbols', strSymbols, false, false), J$.R(3144553, 'start', start, false, false)), 'join', false)(J$.T(3144569, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3144745, J$e);
                        } finally {
                            if (J$.Fr(3144753))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3144681, 'baseToString', baseToString, false, false, false);
            J$.N(3144689, 'castSlice', castSlice, false, false, false);
            J$.N(3144697, 'charsStartIndex', charsStartIndex, false, false, false);
            J$.N(3144705, 'stringToArray', stringToArray, false, false, false);
            J$.N(3144713, 'toString', toString, false, false, false);
            J$.N(3144721, 'reTrimStart', reTrimStart, false, false, false);
            trimStart = J$.N(3144737, 'trimStart', J$.T(3144729, trimStart, 12, false), true, false, false);
            var baseToString = J$.W(3144233, 'baseToString', J$.F(3144129, J$.I(typeof require === 'undefined' ? require = J$.R(3144113, 'require', undefined, true, true) : require = J$.R(3144113, 'require', require, true, true)), false)(J$.T(3144121, './_baseToString', 21, false)), baseToString, false, true), castSlice = J$.W(3144241, 'castSlice', J$.F(3144153, J$.I(typeof require === 'undefined' ? require = J$.R(3144137, 'require', undefined, true, true) : require = J$.R(3144137, 'require', require, true, true)), false)(J$.T(3144145, './_castSlice', 21, false)), castSlice, false, true), charsStartIndex = J$.W(3144249, 'charsStartIndex', J$.F(3144177, J$.I(typeof require === 'undefined' ? require = J$.R(3144161, 'require', undefined, true, true) : require = J$.R(3144161, 'require', require, true, true)), false)(J$.T(3144169, './_charsStartIndex', 21, false)), charsStartIndex, false, true), stringToArray = J$.W(3144257, 'stringToArray', J$.F(3144201, J$.I(typeof require === 'undefined' ? require = J$.R(3144185, 'require', undefined, true, true) : require = J$.R(3144185, 'require', require, true, true)), false)(J$.T(3144193, './_stringToArray', 21, false)), stringToArray, false, true), toString = J$.W(3144265, 'toString', J$.F(3144225, J$.I(typeof require === 'undefined' ? require = J$.R(3144209, 'require', undefined, true, true) : require = J$.R(3144209, 'require', require, true, true)), false)(J$.T(3144217, './toString', 21, false)), toString, false, true);
            var reTrimStart = J$.W(3144281, 'reTrimStart', J$.T(3144273, /^\s+/, 14, false), reTrimStart, false, true);
            J$.P(3144665, J$.I(typeof module === 'undefined' ? module = J$.R(3144649, 'module', undefined, true, true) : module = J$.R(3144649, 'module', module, true, true)), 'exports', J$.R(3144657, 'trimStart', trimStart, false, true));
        } catch (J$e) {
            J$.Ex(3144761, J$e);
        } finally {
            if (J$.Sr(3144769))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

