J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3118169, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/rest.js');
            function rest(func, start) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3118113, arguments.callee, this, arguments);
                            arguments = J$.N(3118121, 'arguments', arguments, true, false, false);
                            func = J$.N(3118129, 'func', func, true, false, false);
                            start = J$.N(3118137, 'start', start, true, false, false);
                            if (J$.C(154808, J$.B(354586, '!=', J$.U(354578, 'typeof', J$.R(3117977, 'func', func, false, false)), J$.T(3117985, 'function', 21, false)))) {
                                throw J$.F(3118009, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3117993, 'TypeError', undefined, true, true) : TypeError = J$.R(3117993, 'TypeError', TypeError, true, true)), true)(J$.R(3118001, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            start = J$.W(3118065, 'start', J$.C(154816, J$.B(354594, '===', J$.R(3118017, 'start', start, false, false), J$.T(3118025, undefined, 24, false))) ? J$.R(3118033, 'start', start, false, false) : J$.F(3118057, J$.R(3118041, 'toInteger', toInteger, false, true), false)(J$.R(3118049, 'start', start, false, false)), start, false, false);
                            return J$.Rt(3118105, J$.F(3118097, J$.R(3118073, 'baseRest', baseRest, false, true), false)(J$.R(3118081, 'func', func, false, false), J$.R(3118089, 'start', start, false, false)));
                        } catch (J$e) {
                            J$.Ex(3118217, J$e);
                        } finally {
                            if (J$.Fr(3118225))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3118177, 'baseRest', baseRest, false, false, false);
            J$.N(3118185, 'toInteger', toInteger, false, false, false);
            J$.N(3118193, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            rest = J$.N(3118209, 'rest', J$.T(3118201, rest, 12, false), true, false, false);
            var baseRest = J$.W(3117945, 'baseRest', J$.F(3117913, J$.I(typeof require === 'undefined' ? require = J$.R(3117897, 'require', undefined, true, true) : require = J$.R(3117897, 'require', require, true, true)), false)(J$.T(3117905, './_baseRest', 21, false)), baseRest, false, true), toInteger = J$.W(3117953, 'toInteger', J$.F(3117937, J$.I(typeof require === 'undefined' ? require = J$.R(3117921, 'require', undefined, true, true) : require = J$.R(3117921, 'require', require, true, true)), false)(J$.T(3117929, './toInteger', 21, false)), toInteger, false, true);
            var FUNC_ERROR_TEXT = J$.W(3117969, 'FUNC_ERROR_TEXT', J$.T(3117961, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            J$.P(3118161, J$.I(typeof module === 'undefined' ? module = J$.R(3118145, 'module', undefined, true, true) : module = J$.R(3118145, 'module', module, true, true)), 'exports', J$.R(3118153, 'rest', rest, false, true));
        } catch (J$e) {
            J$.Ex(3118233, J$e);
        } finally {
            if (J$.Sr(3118241))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

