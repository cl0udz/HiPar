J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3093329, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/mapKeys.js');
            function mapKeys(object, iteratee) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3093265, arguments.callee, this, arguments);
                            arguments = J$.N(3093273, 'arguments', arguments, true, false, false);
                            object = J$.N(3093281, 'object', object, true, false, false);
                            iteratee = J$.N(3093289, 'iteratee', iteratee, true, false, false);
                            J$.N(3093297, 'result', result, false, false, false);
                            var result = J$.W(3093057, 'result', J$.T(3093049, {}, 11, false), result, false, false);
                            iteratee = J$.W(3093097, 'iteratee', J$.F(3093089, J$.R(3093065, 'baseIteratee', baseIteratee, false, true), false)(J$.R(3093073, 'iteratee', iteratee, false, false), J$.T(3093081, 3, 22, false)), iteratee, false, false);
                            J$.F(3093241, J$.R(3093105, 'baseForOwn', baseForOwn, false, true), false)(J$.R(3093113, 'object', object, false, false), J$.T(3093233, function (value, key, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3093193, arguments.callee, this, arguments);
                                            arguments = J$.N(3093201, 'arguments', arguments, true, false, false);
                                            value = J$.N(3093209, 'value', value, true, false, false);
                                            key = J$.N(3093217, 'key', key, true, false, false);
                                            object = J$.N(3093225, 'object', object, true, false, false);
                                            J$.F(3093185, J$.R(3093121, 'baseAssignValue', baseAssignValue, false, true), false)(J$.R(3093129, 'result', result, false, false), J$.F(3093169, J$.R(3093137, 'iteratee', iteratee, false, false), false)(J$.R(3093145, 'value', value, false, false), J$.R(3093153, 'key', key, false, false), J$.R(3093161, 'object', object, false, false)), J$.R(3093177, 'value', value, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3093377, J$e);
                                        } finally {
                                            if (J$.Fr(3093385))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(3093257, J$.R(3093249, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3093393, J$e);
                        } finally {
                            if (J$.Fr(3093401))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3093337, 'baseAssignValue', baseAssignValue, false, false, false);
            J$.N(3093345, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(3093353, 'baseIteratee', baseIteratee, false, false, false);
            mapKeys = J$.N(3093369, 'mapKeys', J$.T(3093361, mapKeys, 12, false), true, false, false);
            var baseAssignValue = J$.W(3093025, 'baseAssignValue', J$.F(3092969, J$.I(typeof require === 'undefined' ? require = J$.R(3092953, 'require', undefined, true, true) : require = J$.R(3092953, 'require', require, true, true)), false)(J$.T(3092961, './_baseAssignValue', 21, false)), baseAssignValue, false, true), baseForOwn = J$.W(3093033, 'baseForOwn', J$.F(3092993, J$.I(typeof require === 'undefined' ? require = J$.R(3092977, 'require', undefined, true, true) : require = J$.R(3092977, 'require', require, true, true)), false)(J$.T(3092985, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(3093041, 'baseIteratee', J$.F(3093017, J$.I(typeof require === 'undefined' ? require = J$.R(3093001, 'require', undefined, true, true) : require = J$.R(3093001, 'require', require, true, true)), false)(J$.T(3093009, './_baseIteratee', 21, false)), baseIteratee, false, true);
            J$.P(3093321, J$.I(typeof module === 'undefined' ? module = J$.R(3093305, 'module', undefined, true, true) : module = J$.R(3093305, 'module', module, true, true)), 'exports', J$.R(3093313, 'mapKeys', mapKeys, false, true));
        } catch (J$e) {
            J$.Ex(3093409, J$e);
        } finally {
            if (J$.Sr(3093417))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

