J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3121785, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/size.js');
            function size(collection) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3121729, arguments.callee, this, arguments);
                            arguments = J$.N(3121737, 'arguments', arguments, true, false, false);
                            collection = J$.N(3121745, 'collection', collection, true, false, false);
                            J$.N(3121753, 'tag', tag, false, false, false);
                            if (J$.C(154936, J$.B(354706, '==', J$.R(3121473, 'collection', collection, false, false), J$.T(3121481, null, 25, false)))) {
                                return J$.Rt(3121497, J$.T(3121489, 0, 22, false));
                            }
                            if (J$.C(154952, J$.F(3121521, J$.R(3121505, 'isArrayLike', isArrayLike, false, true), false)(J$.R(3121513, 'collection', collection, false, false)))) {
                                return J$.Rt(3121593, J$.C(154944, J$.F(3121545, J$.R(3121529, 'isString', isString, false, true), false)(J$.R(3121537, 'collection', collection, false, false))) ? J$.F(3121569, J$.R(3121553, 'stringSize', stringSize, false, true), false)(J$.R(3121561, 'collection', collection, false, false)) : J$.G(3121585, J$.R(3121577, 'collection', collection, false, false), 'length'));
                            }
                            var tag = J$.W(3121625, 'tag', J$.F(3121617, J$.R(3121601, 'getTag', getTag, false, true), false)(J$.R(3121609, 'collection', collection, false, false)), tag, false, false);
                            if (J$.C(154968, J$.C(154960, J$.B(354714, '==', J$.R(3121633, 'tag', tag, false, false), J$.R(3121641, 'mapTag', mapTag, false, true))) ? J$._() : J$.B(354722, '==', J$.R(3121649, 'tag', tag, false, false), J$.R(3121657, 'setTag', setTag, false, true)))) {
                                return J$.Rt(3121681, J$.G(3121673, J$.R(3121665, 'collection', collection, false, false), 'size'));
                            }
                            return J$.Rt(3121721, J$.G(3121713, J$.F(3121705, J$.R(3121689, 'baseKeys', baseKeys, false, true), false)(J$.R(3121697, 'collection', collection, false, false)), 'length'));
                        } catch (J$e) {
                            J$.Ex(3121865, J$e);
                        } finally {
                            if (J$.Fr(3121873))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3121793, 'baseKeys', baseKeys, false, false, false);
            J$.N(3121801, 'getTag', getTag, false, false, false);
            J$.N(3121809, 'isArrayLike', isArrayLike, false, false, false);
            J$.N(3121817, 'isString', isString, false, false, false);
            J$.N(3121825, 'stringSize', stringSize, false, false, false);
            J$.N(3121833, 'mapTag', mapTag, false, false, false);
            J$.N(3121841, 'setTag', setTag, false, false, false);
            size = J$.N(3121857, 'size', J$.T(3121849, size, 12, false), true, false, false);
            var baseKeys = J$.W(3121401, 'baseKeys', J$.F(3121297, J$.I(typeof require === 'undefined' ? require = J$.R(3121281, 'require', undefined, true, true) : require = J$.R(3121281, 'require', require, true, true)), false)(J$.T(3121289, './_baseKeys', 21, false)), baseKeys, false, true), getTag = J$.W(3121409, 'getTag', J$.F(3121321, J$.I(typeof require === 'undefined' ? require = J$.R(3121305, 'require', undefined, true, true) : require = J$.R(3121305, 'require', require, true, true)), false)(J$.T(3121313, './_getTag', 21, false)), getTag, false, true), isArrayLike = J$.W(3121417, 'isArrayLike', J$.F(3121345, J$.I(typeof require === 'undefined' ? require = J$.R(3121329, 'require', undefined, true, true) : require = J$.R(3121329, 'require', require, true, true)), false)(J$.T(3121337, './isArrayLike', 21, false)), isArrayLike, false, true), isString = J$.W(3121425, 'isString', J$.F(3121369, J$.I(typeof require === 'undefined' ? require = J$.R(3121353, 'require', undefined, true, true) : require = J$.R(3121353, 'require', require, true, true)), false)(J$.T(3121361, './isString', 21, false)), isString, false, true), stringSize = J$.W(3121433, 'stringSize', J$.F(3121393, J$.I(typeof require === 'undefined' ? require = J$.R(3121377, 'require', undefined, true, true) : require = J$.R(3121377, 'require', require, true, true)), false)(J$.T(3121385, './_stringSize', 21, false)), stringSize, false, true);
            var mapTag = J$.W(3121457, 'mapTag', J$.T(3121441, '[object Map]', 21, false), mapTag, false, true), setTag = J$.W(3121465, 'setTag', J$.T(3121449, '[object Set]', 21, false), setTag, false, true);
            J$.P(3121777, J$.I(typeof module === 'undefined' ? module = J$.R(3121761, 'module', undefined, true, true) : module = J$.R(3121761, 'module', module, true, true)), 'exports', J$.R(3121769, 'size', size, false, true));
        } catch (J$e) {
            J$.Ex(3121881, J$e);
        } finally {
            if (J$.Sr(3121889))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

