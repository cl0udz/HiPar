J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2464265, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/_createAggregator.js');
            function createAggregator(setter, initializer) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2464209, arguments.callee, this, arguments);
                            arguments = J$.N(2464217, 'arguments', arguments, true, false, false);
                            setter = J$.N(2464225, 'setter', setter, true, false, false);
                            initializer = J$.N(2464233, 'initializer', initializer, true, false, false);
                            return J$.Rt(2464201, J$.T(2464193, function (collection, iteratee) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2464145, arguments.callee, this, arguments);
                                            arguments = J$.N(2464153, 'arguments', arguments, true, false, false);
                                            collection = J$.N(2464161, 'collection', collection, true, false, false);
                                            iteratee = J$.N(2464169, 'iteratee', iteratee, true, false, false);
                                            J$.N(2464177, 'func', func, false, false, false);
                                            J$.N(2464185, 'accumulator', accumulator, false, false, false);
                                            var func = J$.W(2464049, 'func', J$.C(116136, J$.F(2463993, J$.R(2463977, 'isArray', isArray, false, true), false)(J$.R(2463985, 'collection', collection, false, false))) ? J$.R(2464001, 'arrayAggregator', arrayAggregator, false, true) : J$.R(2464009, 'baseAggregator', baseAggregator, false, true), func, false, false), accumulator = J$.W(2464057, 'accumulator', J$.C(116144, J$.R(2464017, 'initializer', initializer, false, false)) ? J$.F(2464033, J$.R(2464025, 'initializer', initializer, false, false), false)() : J$.T(2464041, {}, 11, false), accumulator, false, false);
                                            return J$.Rt(2464137, J$.F(2464129, J$.R(2464065, 'func', func, false, false), false)(J$.R(2464073, 'collection', collection, false, false), J$.R(2464081, 'setter', setter, false, false), J$.F(2464113, J$.R(2464089, 'baseIteratee', baseIteratee, false, true), false)(J$.R(2464097, 'iteratee', iteratee, false, false), J$.T(2464105, 2, 22, false)), J$.R(2464121, 'accumulator', accumulator, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2464321, J$e);
                                        } finally {
                                            if (J$.Fr(2464329))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2464337, J$e);
                        } finally {
                            if (J$.Fr(2464345))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2464273, 'arrayAggregator', arrayAggregator, false, false, false);
            J$.N(2464281, 'baseAggregator', baseAggregator, false, false, false);
            J$.N(2464289, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(2464297, 'isArray', isArray, false, false, false);
            createAggregator = J$.N(2464313, 'createAggregator', J$.T(2464305, createAggregator, 12, false), true, false, false);
            var arrayAggregator = J$.W(2463945, 'arrayAggregator', J$.F(2463865, J$.I(typeof require === 'undefined' ? require = J$.R(2463849, 'require', undefined, true, true) : require = J$.R(2463849, 'require', require, true, true)), false)(J$.T(2463857, './_arrayAggregator', 21, false)), arrayAggregator, false, true), baseAggregator = J$.W(2463953, 'baseAggregator', J$.F(2463889, J$.I(typeof require === 'undefined' ? require = J$.R(2463873, 'require', undefined, true, true) : require = J$.R(2463873, 'require', require, true, true)), false)(J$.T(2463881, './_baseAggregator', 21, false)), baseAggregator, false, true), baseIteratee = J$.W(2463961, 'baseIteratee', J$.F(2463913, J$.I(typeof require === 'undefined' ? require = J$.R(2463897, 'require', undefined, true, true) : require = J$.R(2463897, 'require', require, true, true)), false)(J$.T(2463905, './_baseIteratee', 21, false)), baseIteratee, false, true), isArray = J$.W(2463969, 'isArray', J$.F(2463937, J$.I(typeof require === 'undefined' ? require = J$.R(2463921, 'require', undefined, true, true) : require = J$.R(2463921, 'require', require, true, true)), false)(J$.T(2463929, './isArray', 21, false)), isArray, false, true);
            J$.P(2464257, J$.I(typeof module === 'undefined' ? module = J$.R(2464241, 'module', undefined, true, true) : module = J$.R(2464241, 'module', module, true, true)), 'exports', J$.R(2464249, 'createAggregator', createAggregator, false, true));
        } catch (J$e) {
            J$.Ex(2464353, J$e);
        } finally {
            if (J$.Sr(2464361))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

