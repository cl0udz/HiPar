J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3127601, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestLodash/node_modules/lodash/spread.js');
            function spread(func, start) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3127545, arguments.callee, this, arguments);
                            arguments = J$.N(3127553, 'arguments', arguments, true, false, false);
                            func = J$.N(3127561, 'func', func, true, false, false);
                            start = J$.N(3127569, 'start', start, true, false, false);
                            if (J$.C(155280, J$.B(354954, '!=', J$.U(354946, 'typeof', J$.R(3127185, 'func', func, false, false)), J$.T(3127193, 'function', 21, false)))) {
                                throw J$.F(3127217, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3127201, 'TypeError', undefined, true, true) : TypeError = J$.R(3127201, 'TypeError', TypeError, true, true)), true)(J$.R(3127209, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            start = J$.W(3127297, 'start', J$.C(155288, J$.B(354962, '==', J$.R(3127225, 'start', start, false, false), J$.T(3127233, null, 25, false))) ? J$.T(3127241, 0, 22, false) : J$.F(3127289, J$.R(3127249, 'nativeMax', nativeMax, false, true), false)(J$.F(3127273, J$.R(3127257, 'toInteger', toInteger, false, true), false)(J$.R(3127265, 'start', start, false, false)), J$.T(3127281, 0, 22, false)), start, false, false);
                            return J$.Rt(3127537, J$.F(3127529, J$.R(3127305, 'baseRest', baseRest, false, true), false)(J$.T(3127521, function (args) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3127481, arguments.callee, this, arguments);
                                            arguments = J$.N(3127489, 'arguments', arguments, true, false, false);
                                            args = J$.N(3127497, 'args', args, true, false, false);
                                            J$.N(3127505, 'array', array, false, false, false);
                                            J$.N(3127513, 'otherArgs', otherArgs, false, false, false);
                                            var array = J$.W(3127377, 'array', J$.G(3127329, J$.R(3127313, 'args', args, false, false), J$.R(3127321, 'start', start, false, false)), array, false, false), otherArgs = J$.W(3127385, 'otherArgs', J$.F(3127369, J$.R(3127337, 'castSlice', castSlice, false, true), false)(J$.R(3127345, 'args', args, false, false), J$.T(3127353, 0, 22, false), J$.R(3127361, 'start', start, false, false)), otherArgs, false, false);
                                            if (J$.C(155296, J$.R(3127393, 'array', array, false, false))) {
                                                J$.F(3127425, J$.R(3127401, 'arrayPush', arrayPush, false, true), false)(J$.R(3127409, 'otherArgs', otherArgs, false, false), J$.R(3127417, 'array', array, false, false));
                                            }
                                            return J$.Rt(3127473, J$.F(3127465, J$.R(3127433, 'apply', apply, false, true), false)(J$.R(3127441, 'func', func, false, false), J$.R(3127449, 'this', this, false, false), J$.R(3127457, 'otherArgs', otherArgs, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(3127681, J$e);
                                        } finally {
                                            if (J$.Fr(3127689))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(3127697, J$e);
                        } finally {
                            if (J$.Fr(3127705))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3127609, 'apply', apply, false, false, false);
            J$.N(3127617, 'arrayPush', arrayPush, false, false, false);
            J$.N(3127625, 'baseRest', baseRest, false, false, false);
            J$.N(3127633, 'castSlice', castSlice, false, false, false);
            J$.N(3127641, 'toInteger', toInteger, false, false, false);
            J$.N(3127649, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            J$.N(3127657, 'nativeMax', nativeMax, false, false, false);
            spread = J$.N(3127673, 'spread', J$.T(3127665, spread, 12, false), true, false, false);
            var apply = J$.W(3127105, 'apply', J$.F(3127001, J$.I(typeof require === 'undefined' ? require = J$.R(3126985, 'require', undefined, true, true) : require = J$.R(3126985, 'require', require, true, true)), false)(J$.T(3126993, './_apply', 21, false)), apply, false, true), arrayPush = J$.W(3127113, 'arrayPush', J$.F(3127025, J$.I(typeof require === 'undefined' ? require = J$.R(3127009, 'require', undefined, true, true) : require = J$.R(3127009, 'require', require, true, true)), false)(J$.T(3127017, './_arrayPush', 21, false)), arrayPush, false, true), baseRest = J$.W(3127121, 'baseRest', J$.F(3127049, J$.I(typeof require === 'undefined' ? require = J$.R(3127033, 'require', undefined, true, true) : require = J$.R(3127033, 'require', require, true, true)), false)(J$.T(3127041, './_baseRest', 21, false)), baseRest, false, true), castSlice = J$.W(3127129, 'castSlice', J$.F(3127073, J$.I(typeof require === 'undefined' ? require = J$.R(3127057, 'require', undefined, true, true) : require = J$.R(3127057, 'require', require, true, true)), false)(J$.T(3127065, './_castSlice', 21, false)), castSlice, false, true), toInteger = J$.W(3127137, 'toInteger', J$.F(3127097, J$.I(typeof require === 'undefined' ? require = J$.R(3127081, 'require', undefined, true, true) : require = J$.R(3127081, 'require', require, true, true)), false)(J$.T(3127089, './toInteger', 21, false)), toInteger, false, true);
            var FUNC_ERROR_TEXT = J$.W(3127153, 'FUNC_ERROR_TEXT', J$.T(3127145, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            var nativeMax = J$.W(3127177, 'nativeMax', J$.G(3127169, J$.I(typeof Math === 'undefined' ? Math = J$.R(3127161, 'Math', undefined, true, true) : Math = J$.R(3127161, 'Math', Math, true, true)), 'max'), nativeMax, false, true);
            J$.P(3127593, J$.I(typeof module === 'undefined' ? module = J$.R(3127577, 'module', undefined, true, true) : module = J$.R(3127577, 'module', module, true, true)), 'exports', J$.R(3127585, 'spread', spread, false, true));
        } catch (J$e) {
            J$.Ex(3127713, J$e);
        } finally {
            if (J$.Sr(3127721))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

