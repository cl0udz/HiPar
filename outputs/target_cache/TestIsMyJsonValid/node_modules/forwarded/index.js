J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(122537, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/forwarded/index.js');
            function forwarded(req) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(122041, arguments.callee, this, arguments);
                            arguments = J$.N(122049, 'arguments', arguments, true, false, false);
                            req = J$.N(122057, 'req', req, true, false, false);
                            J$.N(122065, 'proxyAddrs', proxyAddrs, false, false, false);
                            J$.N(122073, 'socketAddr', socketAddr, false, false, false);
                            J$.N(122081, 'addrs', addrs, false, false, false);
                            if (J$.C(7712, J$.U(10146, '!', J$.R(121857, 'req', req, false, false)))) {
                                throw J$.F(121881, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(121865, 'TypeError', undefined, true, true) : TypeError = J$.R(121865, 'TypeError', TypeError, true, true)), true)(J$.T(121873, 'argument req is required', 21, false));
                            }
                            var proxyAddrs = J$.W(121945, 'proxyAddrs', J$.F(121937, J$.R(121889, 'parse', parse, false, true), false)(J$.C(7720, J$.G(121921, J$.G(121905, J$.R(121897, 'req', req, false, false), 'headers'), J$.T(121913, 'x-forwarded-for', 21, false))) ? J$._() : J$.T(121929, '', 21, false)), proxyAddrs, false, false);
                            var socketAddr = J$.W(121977, 'socketAddr', J$.G(121969, J$.G(121961, J$.R(121953, 'req', req, false, false), 'connection'), 'remoteAddress'), socketAddr, false, false);
                            var addrs = J$.W(122017, 'addrs', J$.M(122009, J$.T(121993, [J$.R(121985, 'socketAddr', socketAddr, false, false)], 10, false), 'concat', false)(J$.R(122001, 'proxyAddrs', proxyAddrs, false, false)), addrs, false, false);
                            return J$.Rt(122033, J$.R(122025, 'addrs', addrs, false, false));
                        } catch (J$e) {
                            J$.Ex(122577, J$e);
                        } finally {
                            if (J$.Fr(122585))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parse(header) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(122481, arguments.callee, this, arguments);
                            arguments = J$.N(122489, 'arguments', arguments, true, false, false);
                            header = J$.N(122497, 'header', header, true, false, false);
                            J$.N(122505, 'end', end, false, false, false);
                            J$.N(122513, 'list', list, false, false, false);
                            J$.N(122521, 'start', start, false, false, false);
                            J$.N(122529, 'i', i, false, false, false);
                            var end = J$.W(122105, 'end', J$.G(122097, J$.R(122089, 'header', header, false, false), 'length'), end, false, false);
                            var list = J$.W(122121, 'list', J$.T(122113, [], 10, false), list, false, false);
                            var start = J$.W(122145, 'start', J$.G(122137, J$.R(122129, 'header', header, false, false), 'length'), start, false, false);
                            for (var i = J$.W(122177, 'i', J$.B(10154, '-', J$.G(122161, J$.R(122153, 'header', header, false, false), 'length'), J$.T(122169, 1, 22, false)), i, false, false); J$.C(7768, J$.B(10162, '>=', J$.R(122185, 'i', i, false, false), J$.T(122193, 0, 22, false))); J$.B(10186, '+', i = J$.W(122209, 'i', J$.B(10178, '-', J$.U(10170, '+', J$.R(122201, 'i', i, false, false)), 1), i, false, false), 1)) {
                                switch (J$.C1(7744, J$.M(122233, J$.R(122217, 'header', header, false, false), 'charCodeAt', false)(J$.R(122225, 'i', i, false, false)))) {
                                case J$.C2(7752, J$.T(122281, 32, 22, false)):
                                    if (J$.C(7728, J$.B(10194, '===', J$.R(122241, 'start', start, false, false), J$.R(122249, 'end', end, false, false)))) {
                                        start = J$.W(122273, 'start', end = J$.W(122265, 'end', J$.R(122257, 'i', i, false, false), end, false, false), start, false, false);
                                    }
                                    break;
                                case J$.C2(7760, J$.T(122377, 44, 22, false)):
                                    if (J$.C(7736, J$.B(10202, '!==', J$.R(122289, 'start', start, false, false), J$.R(122297, 'end', end, false, false)))) {
                                        J$.M(122345, J$.R(122305, 'list', list, false, false), 'push', false)(J$.M(122337, J$.R(122313, 'header', header, false, false), 'substring', false)(J$.R(122321, 'start', start, false, false), J$.R(122329, 'end', end, false, false)));
                                    }
                                    start = J$.W(122369, 'start', end = J$.W(122361, 'end', J$.R(122353, 'i', i, false, false), end, false, false), start, false, false);
                                    break;
                                default:
                                    start = J$.W(122393, 'start', J$.R(122385, 'i', i, false, false), start, false, false);
                                    break;
                                }
                            }
                            if (J$.C(7776, J$.B(10210, '!==', J$.R(122401, 'start', start, false, false), J$.R(122409, 'end', end, false, false)))) {
                                J$.M(122457, J$.R(122417, 'list', list, false, false), 'push', false)(J$.M(122449, J$.R(122425, 'header', header, false, false), 'substring', false)(J$.R(122433, 'start', start, false, false), J$.R(122441, 'end', end, false, false)));
                            }
                            return J$.Rt(122473, J$.R(122465, 'list', list, false, false));
                        } catch (J$e) {
                            J$.Ex(122593, J$e);
                        } finally {
                            if (J$.Fr(122601))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            forwarded = J$.N(122553, 'forwarded', J$.T(122545, forwarded, 12, false), true, false, false);
            parse = J$.N(122569, 'parse', J$.T(122561, parse, 12, false), true, false, false);
            J$.T(121801, 'use strict', 21, false);
            J$.F(121825, J$.I(typeof require === 'undefined' ? require = J$.R(121809, 'require', undefined, true, true) : require = J$.R(121809, 'require', require, true, true)), false)(J$.T(121817, 'core-js/modules/es.array.concat', 21, false));
            J$.P(121849, J$.I(typeof module === 'undefined' ? module = J$.R(121833, 'module', undefined, true, true) : module = J$.R(121833, 'module', module, true, true)), 'exports', J$.R(121841, 'forwarded', forwarded, false, true));
        } catch (J$e) {
            J$.Ex(122609, J$e);
        } finally {
            if (J$.Sr(122617))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

