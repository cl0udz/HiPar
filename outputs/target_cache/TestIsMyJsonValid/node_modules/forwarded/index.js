J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4081041, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/forwarded/index.js');
            function forwarded(req) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4080545, arguments.callee, this, arguments);
                            arguments = J$.N(4080553, 'arguments', arguments, true, false, false);
                            req = J$.N(4080561, 'req', req, true, false, false);
                            J$.N(4080569, 'proxyAddrs', proxyAddrs, false, false, false);
                            J$.N(4080577, 'socketAddr', socketAddr, false, false, false);
                            J$.N(4080585, 'addrs', addrs, false, false, false);
                            if (J$.C(216112, J$.U(396194, '!', J$.R(4080361, 'req', req, false, false)))) {
                                throw J$.F(4080385, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(4080369, 'TypeError', undefined, true, true) : TypeError = J$.R(4080369, 'TypeError', TypeError, true, true)), true)(J$.T(4080377, 'argument req is required', 21, false));
                            }
                            var proxyAddrs = J$.W(4080449, 'proxyAddrs', J$.F(4080441, J$.R(4080393, 'parse', parse, false, true), false)(J$.C(216120, J$.G(4080425, J$.G(4080409, J$.R(4080401, 'req', req, false, false), 'headers'), J$.T(4080417, 'x-forwarded-for', 21, false))) ? J$._() : J$.T(4080433, '', 21, false)), proxyAddrs, false, false);
                            var socketAddr = J$.W(4080481, 'socketAddr', J$.G(4080473, J$.G(4080465, J$.R(4080457, 'req', req, false, false), 'connection'), 'remoteAddress'), socketAddr, false, false);
                            var addrs = J$.W(4080521, 'addrs', J$.M(4080513, J$.T(4080497, [J$.R(4080489, 'socketAddr', socketAddr, false, false)], 10, false), 'concat', false)(J$.R(4080505, 'proxyAddrs', proxyAddrs, false, false)), addrs, false, false);
                            return J$.Rt(4080537, J$.R(4080529, 'addrs', addrs, false, false));
                        } catch (J$e) {
                            J$.Ex(4081081, J$e);
                        } finally {
                            if (J$.Fr(4081089))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parse(header) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4080985, arguments.callee, this, arguments);
                            arguments = J$.N(4080993, 'arguments', arguments, true, false, false);
                            header = J$.N(4081001, 'header', header, true, false, false);
                            J$.N(4081009, 'end', end, false, false, false);
                            J$.N(4081017, 'list', list, false, false, false);
                            J$.N(4081025, 'start', start, false, false, false);
                            J$.N(4081033, 'i', i, false, false, false);
                            var end = J$.W(4080609, 'end', J$.G(4080601, J$.R(4080593, 'header', header, false, false), 'length'), end, false, false);
                            var list = J$.W(4080625, 'list', J$.T(4080617, [], 10, false), list, false, false);
                            var start = J$.W(4080649, 'start', J$.G(4080641, J$.R(4080633, 'header', header, false, false), 'length'), start, false, false);
                            for (var i = J$.W(4080681, 'i', J$.B(396202, '-', J$.G(4080665, J$.R(4080657, 'header', header, false, false), 'length'), J$.T(4080673, 1, 22, false)), i, false, false); J$.C(216168, J$.B(396210, '>=', J$.R(4080689, 'i', i, false, false), J$.T(4080697, 0, 22, false))); J$.B(396234, '+', i = J$.W(4080713, 'i', J$.B(396226, '-', J$.U(396218, '+', J$.R(4080705, 'i', i, false, false)), 1), i, false, false), 1)) {
                                switch (J$.C1(216144, J$.M(4080737, J$.R(4080721, 'header', header, false, false), 'charCodeAt', false)(J$.R(4080729, 'i', i, false, false)))) {
                                case J$.C2(216152, J$.T(4080785, 32, 22, false)):
                                    if (J$.C(216128, J$.B(396242, '===', J$.R(4080745, 'start', start, false, false), J$.R(4080753, 'end', end, false, false)))) {
                                        start = J$.W(4080777, 'start', end = J$.W(4080769, 'end', J$.R(4080761, 'i', i, false, false), end, false, false), start, false, false);
                                    }
                                    break;
                                case J$.C2(216160, J$.T(4080881, 44, 22, false)):
                                    if (J$.C(216136, J$.B(396250, '!==', J$.R(4080793, 'start', start, false, false), J$.R(4080801, 'end', end, false, false)))) {
                                        J$.M(4080849, J$.R(4080809, 'list', list, false, false), 'push', false)(J$.M(4080841, J$.R(4080817, 'header', header, false, false), 'substring', false)(J$.R(4080825, 'start', start, false, false), J$.R(4080833, 'end', end, false, false)));
                                    }
                                    start = J$.W(4080873, 'start', end = J$.W(4080865, 'end', J$.R(4080857, 'i', i, false, false), end, false, false), start, false, false);
                                    break;
                                default:
                                    start = J$.W(4080897, 'start', J$.R(4080889, 'i', i, false, false), start, false, false);
                                    break;
                                }
                            }
                            if (J$.C(216176, J$.B(396258, '!==', J$.R(4080905, 'start', start, false, false), J$.R(4080913, 'end', end, false, false)))) {
                                J$.M(4080961, J$.R(4080921, 'list', list, false, false), 'push', false)(J$.M(4080953, J$.R(4080929, 'header', header, false, false), 'substring', false)(J$.R(4080937, 'start', start, false, false), J$.R(4080945, 'end', end, false, false)));
                            }
                            return J$.Rt(4080977, J$.R(4080969, 'list', list, false, false));
                        } catch (J$e) {
                            J$.Ex(4081097, J$e);
                        } finally {
                            if (J$.Fr(4081105))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            forwarded = J$.N(4081057, 'forwarded', J$.T(4081049, forwarded, 12, false), true, false, false);
            parse = J$.N(4081073, 'parse', J$.T(4081065, parse, 12, false), true, false, false);
            J$.T(4080305, 'use strict', 21, false);
            J$.F(4080329, J$.I(typeof require === 'undefined' ? require = J$.R(4080313, 'require', undefined, true, true) : require = J$.R(4080313, 'require', require, true, true)), false)(J$.T(4080321, 'core-js/modules/es.array.concat', 21, false));
            J$.P(4080353, J$.I(typeof module === 'undefined' ? module = J$.R(4080337, 'module', undefined, true, true) : module = J$.R(4080337, 'module', module, true, true)), 'exports', J$.R(4080345, 'forwarded', forwarded, false, true));
        } catch (J$e) {
            J$.Ex(4081113, J$e);
        } finally {
            if (J$.Sr(4081121))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

