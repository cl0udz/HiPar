J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(252057, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/methods/index.js');
            function getCurrentNodeMethods() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(251801, arguments.callee, this, arguments);
                            arguments = J$.N(251809, 'arguments', arguments, true, false, false);
                            return J$.Rt(251793, J$.C(14536, J$.G(251705, J$.R(251697, 'http', http, false, true), 'METHODS')) ? J$.M(251785, J$.G(251721, J$.R(251713, 'http', http, false, true), 'METHODS'), 'map', false)(J$.T(251777, function lowerCaseMethod(method) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(251753, arguments.callee, this, arguments);
                                            arguments = J$.N(251761, 'arguments', arguments, true, false, false);
                                            method = J$.N(251769, 'method', method, true, false, false);
                                            return J$.Rt(251745, J$.M(251737, J$.R(251729, 'method', method, false, false), 'toLowerCase', false)());
                                        } catch (J$e) {
                                            J$.Ex(252105, J$e);
                                        } finally {
                                            if (J$.Fr(252113))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(252121, J$e);
                        } finally {
                            if (J$.Fr(252129))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getBasicNodeMethods() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(252041, arguments.callee, this, arguments);
                            arguments = J$.N(252049, 'arguments', arguments, true, false, false);
                            return J$.Rt(252033, J$.T(252025, [
                                J$.T(251817, 'get', 21, false),
                                J$.T(251825, 'post', 21, false),
                                J$.T(251833, 'put', 21, false),
                                J$.T(251841, 'head', 21, false),
                                J$.T(251849, 'delete', 21, false),
                                J$.T(251857, 'options', 21, false),
                                J$.T(251865, 'trace', 21, false),
                                J$.T(251873, 'copy', 21, false),
                                J$.T(251881, 'lock', 21, false),
                                J$.T(251889, 'mkcol', 21, false),
                                J$.T(251897, 'move', 21, false),
                                J$.T(251905, 'purge', 21, false),
                                J$.T(251913, 'propfind', 21, false),
                                J$.T(251921, 'proppatch', 21, false),
                                J$.T(251929, 'unlock', 21, false),
                                J$.T(251937, 'report', 21, false),
                                J$.T(251945, 'mkactivity', 21, false),
                                J$.T(251953, 'checkout', 21, false),
                                J$.T(251961, 'merge', 21, false),
                                J$.T(251969, 'm-search', 21, false),
                                J$.T(251977, 'notify', 21, false),
                                J$.T(251985, 'subscribe', 21, false),
                                J$.T(251993, 'unsubscribe', 21, false),
                                J$.T(252001, 'patch', 21, false),
                                J$.T(252009, 'search', 21, false),
                                J$.T(252017, 'connect', 21, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(252137, J$e);
                        } finally {
                            if (J$.Fr(252145))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(252065, 'http', http, false, false, false);
            getCurrentNodeMethods = J$.N(252081, 'getCurrentNodeMethods', J$.T(252073, getCurrentNodeMethods, 12, false), true, false, false);
            getBasicNodeMethods = J$.N(252097, 'getBasicNodeMethods', J$.T(252089, getBasicNodeMethods, 12, false), true, false, false);
            J$.T(251585, 'use strict', 21, false);
            J$.F(251609, J$.I(typeof require === 'undefined' ? require = J$.R(251593, 'require', undefined, true, true) : require = J$.R(251593, 'require', require, true, true)), false)(J$.T(251601, 'core-js/modules/es.array.map', 21, false));
            var http = J$.W(251641, 'http', J$.F(251633, J$.I(typeof require === 'undefined' ? require = J$.R(251617, 'require', undefined, true, true) : require = J$.R(251617, 'require', require, true, true)), false)(J$.T(251625, 'http', 21, false)), http, false, true);
            J$.P(251689, J$.I(typeof module === 'undefined' ? module = J$.R(251649, 'module', undefined, true, true) : module = J$.R(251649, 'module', module, true, true)), 'exports', J$.C(14528, J$.F(251665, J$.R(251657, 'getCurrentNodeMethods', getCurrentNodeMethods, false, true), false)()) ? J$._() : J$.F(251681, J$.R(251673, 'getBasicNodeMethods', getBasicNodeMethods, false, true), false)());
        } catch (J$e) {
            J$.Ex(252153, J$e);
        } finally {
            if (J$.Sr(252161))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

