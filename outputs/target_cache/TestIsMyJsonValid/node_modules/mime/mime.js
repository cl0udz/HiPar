J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(4212785, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/mime/mime.js');
            function Mime() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4211193, arguments.callee, this, arguments);
                            arguments = J$.N(4211201, 'arguments', arguments, true, false, false);
                            J$.P(4211145, J$.R(4211113, 'this', this, false, false), 'types', J$.M(4211137, J$.I(typeof Object === 'undefined' ? Object = J$.R(4211121, 'Object', undefined, true, true) : Object = J$.R(4211121, 'Object', Object, true, true)), 'create', false)(J$.T(4211129, null, 25, false)));
                            J$.P(4211185, J$.R(4211153, 'this', this, false, false), 'extensions', J$.M(4211177, J$.I(typeof Object === 'undefined' ? Object = J$.R(4211161, 'Object', undefined, true, true) : Object = J$.R(4211161, 'Object', Object, true, true)), 'create', false)(J$.T(4211169, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(4212833, J$e);
                        } finally {
                            if (J$.Fr(4212841))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4212793, 'path', path, false, false, false);
            J$.N(4212801, 'fs', fs, false, false, false);
            Mime = J$.N(4212817, 'Mime', J$.T(4212809, Mime, 12, false), true, false, false);
            J$.N(4212825, 'mime', mime, false, false, false);
            J$.T(4210873, 'use strict', 21, false);
            J$.F(4210897, J$.I(typeof require === 'undefined' ? require = J$.R(4210881, 'require', undefined, true, true) : require = J$.R(4210881, 'require', require, true, true)), false)(J$.T(4210889, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(4210921, J$.I(typeof require === 'undefined' ? require = J$.R(4210905, 'require', undefined, true, true) : require = J$.R(4210905, 'require', require, true, true)), false)(J$.T(4210913, 'core-js/modules/es.object.create', 21, false));
            J$.F(4210945, J$.I(typeof require === 'undefined' ? require = J$.R(4210929, 'require', undefined, true, true) : require = J$.R(4210929, 'require', require, true, true)), false)(J$.T(4210937, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(4210969, J$.I(typeof require === 'undefined' ? require = J$.R(4210953, 'require', undefined, true, true) : require = J$.R(4210953, 'require', require, true, true)), false)(J$.T(4210961, 'core-js/modules/es.string.match', 21, false));
            J$.F(4210993, J$.I(typeof require === 'undefined' ? require = J$.R(4210977, 'require', undefined, true, true) : require = J$.R(4210977, 'require', require, true, true)), false)(J$.T(4210985, 'core-js/modules/es.string.replace', 21, false));
            J$.F(4211017, J$.I(typeof require === 'undefined' ? require = J$.R(4211001, 'require', undefined, true, true) : require = J$.R(4211001, 'require', require, true, true)), false)(J$.T(4211009, 'core-js/modules/es.string.split', 21, false));
            J$.F(4211041, J$.I(typeof require === 'undefined' ? require = J$.R(4211025, 'require', undefined, true, true) : require = J$.R(4211025, 'require', require, true, true)), false)(J$.T(4211033, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var path = J$.W(4211073, 'path', J$.F(4211065, J$.I(typeof require === 'undefined' ? require = J$.R(4211049, 'require', undefined, true, true) : require = J$.R(4211049, 'require', require, true, true)), false)(J$.T(4211057, 'path', 21, false)), path, false, true);
            var fs = J$.W(4211105, 'fs', J$.F(4211097, J$.I(typeof require === 'undefined' ? require = J$.R(4211081, 'require', undefined, true, true) : require = J$.R(4211081, 'require', require, true, true)), false)(J$.T(4211089, 'fs', 21, false)), fs, false, true);
            J$.P(4211777, J$.G(4211217, J$.R(4211209, 'Mime', Mime, false, true), 'prototype'), 'define', J$.T(4211769, function (map) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4211721, arguments.callee, this, arguments);
                            arguments = J$.N(4211729, 'arguments', arguments, true, false, false);
                            map = J$.N(4211737, 'map', map, true, false, false);
                            J$.N(4211745, 'type', type, false, false, false);
                            J$.N(4211753, 'exts', exts, false, false, false);
                            J$.N(4211761, 'i', i, false, false, false);
                            for (var type in J$.H(4211705, J$.R(4211225, 'map', map, false, false))) {
                                J$.N(4211713, 'type', type, false, true, false);
                                {
                                    {
                                        var exts = J$.W(4211257, 'exts', J$.G(4211249, J$.R(4211233, 'map', map, false, false), J$.R(4211241, 'type', type, false, false)), exts, false, false);
                                        for (var i = J$.W(4211273, 'i', J$.T(4211265, 0, 22, false), i, false, false); J$.C(222968, J$.B(409794, '<', J$.R(4211281, 'i', i, false, false), J$.G(4211297, J$.R(4211289, 'exts', exts, false, false), 'length'))); J$.B(409818, '-', i = J$.W(4211313, 'i', J$.B(409810, '+', J$.U(409802, '+', J$.R(4211305, 'i', i, false, false)), 1), i, false, false), 1)) {
                                            if (J$.C(222960, J$.C(222944, J$.G(4211337, J$.G(4211329, J$.I(typeof process === 'undefined' ? process = J$.R(4211321, 'process', undefined, true, true) : process = J$.R(4211321, 'process', process, true, true)), 'env'), 'DEBUG_MIME')) ? J$.G(4211385, J$.G(4211353, J$.R(4211345, 'this', this, false, false), 'types'), J$.G(4211377, J$.R(4211361, 'exts', exts, false, false), J$.R(4211369, 'i', i, false, false))) : J$._())) {
                                                J$.M(4211553, J$.I(typeof console === 'undefined' ? console = J$.R(4211393, 'console', undefined, true, true) : console = J$.R(4211393, 'console', console, true, true)), 'warn', false)(J$.M(4211441, J$.C(222952, J$.G(4211409, J$.R(4211401, 'this', this, false, false), '_loading')) ? J$._() : J$.T(4211417, 'define()', 21, false), 'replace', false)(J$.T(4211425, /.*\//, 14, false), J$.T(4211433, '', 21, false)), J$.B(409858, '+', J$.B(409850, '+', J$.B(409842, '+', J$.B(409834, '+', J$.B(409826, '+', J$.T(4211449, 'changes "', 21, false), J$.G(4211473, J$.R(4211457, 'exts', exts, false, false), J$.R(4211465, 'i', i, false, false))), J$.T(4211481, '" extension type from ', 21, false)), J$.G(4211529, J$.G(4211497, J$.R(4211489, 'this', this, false, false), 'types'), J$.G(4211521, J$.R(4211505, 'exts', exts, false, false), J$.R(4211513, 'i', i, false, false)))), J$.T(4211537, ' to ', 21, false)), J$.R(4211545, 'type', type, false, false)));
                                            }
                                            J$.P(4211609, J$.G(4211569, J$.R(4211561, 'this', this, false, false), 'types'), J$.G(4211593, J$.R(4211577, 'exts', exts, false, false), J$.R(4211585, 'i', i, false, false)), J$.R(4211601, 'type', type, false, false));
                                        }
                                        if (J$.C(222976, J$.U(409866, '!', J$.G(4211641, J$.G(4211625, J$.R(4211617, 'this', this, false, false), 'extensions'), J$.R(4211633, 'type', type, false, false))))) {
                                            J$.P(4211697, J$.G(4211657, J$.R(4211649, 'this', this, false, false), 'extensions'), J$.R(4211665, 'type', type, false, false), J$.G(4211689, J$.R(4211673, 'exts', exts, false, false), J$.T(4211681, 0, 22, false)));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(4212849, J$e);
                        } finally {
                            if (J$.Fr(4212857))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4212169, J$.G(4211793, J$.R(4211785, 'Mime', Mime, false, true), 'prototype'), 'load', J$.T(4212161, function (file) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4212113, arguments.callee, this, arguments);
                            arguments = J$.N(4212121, 'arguments', arguments, true, false, false);
                            file = J$.N(4212129, 'file', file, true, false, false);
                            J$.N(4212137, 'map', map, false, false, false);
                            J$.N(4212145, 'content', content, false, false, false);
                            J$.N(4212153, 'lines', lines, false, false, false);
                            J$.P(4211817, J$.R(4211801, 'this', this, false, false), '_loading', J$.R(4211809, 'file', file, false, false));
                            var map = J$.W(4211889, 'map', J$.T(4211825, {}, 11, false), map, false, false), content = J$.W(4211897, 'content', J$.M(4211857, J$.R(4211833, 'fs', fs, false, true), 'readFileSync', false)(J$.R(4211841, 'file', file, false, false), J$.T(4211849, 'ascii', 21, false)), content, false, false), lines = J$.W(4211905, 'lines', J$.M(4211881, J$.R(4211865, 'content', content, false, false), 'split', false)(J$.T(4211873, /[\r\n]+/, 14, false)), lines, false, false);
                            J$.M(4212057, J$.R(4211913, 'lines', lines, false, false), 'forEach', false)(J$.T(4212049, function (line) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(4212017, arguments.callee, this, arguments);
                                            arguments = J$.N(4212025, 'arguments', arguments, true, false, false);
                                            line = J$.N(4212033, 'line', line, true, false, false);
                                            J$.N(4212041, 'fields', fields, false, false, false);
                                            var fields = J$.W(4211969, 'fields', J$.M(4211961, J$.M(4211945, J$.R(4211921, 'line', line, false, false), 'replace', false)(J$.T(4211929, /\s*#.*|^\s*|\s*$/g, 14, false), J$.T(4211937, '', 21, false)), 'split', false)(J$.T(4211953, /\s+/, 14, false)), fields, false, false);
                                            J$.P(4212009, J$.R(4211977, 'map', map, false, false), J$.M(4211993, J$.R(4211985, 'fields', fields, false, false), 'shift', false)(), J$.R(4212001, 'fields', fields, false, false));
                                        } catch (J$e) {
                                            J$.Ex(4212865, J$e);
                                        } finally {
                                            if (J$.Fr(4212873))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(4212081, J$.R(4212065, 'this', this, false, false), 'define', false)(J$.R(4212073, 'map', map, false, false));
                            J$.P(4212105, J$.R(4212089, 'this', this, false, false), '_loading', J$.T(4212097, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(4212881, J$e);
                        } finally {
                            if (J$.Fr(4212889))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4212353, J$.G(4212185, J$.R(4212177, 'Mime', Mime, false, true), 'prototype'), 'lookup', J$.T(4212345, function (path, fallback) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(4212305, arguments.callee, this, arguments);
                            arguments = J$.N(4212313, 'arguments', arguments, true, false, false);
                            path = J$.N(4212321, 'path', path, true, false, false);
                            fallback = J$.N(4212329, 'fallback', fallback, true, false, false);
                            J$.N(4212337, 'ext', ext, false, false, false);
                            var ext = J$.W(4212233, 'ext', J$.M(4212225, J$.M(4212217, J$.R(4212193, 'path', path, false, false), 'replace', false)(J$.T(4212201, /^.*[\.\/\\]/, 14, false), J$.T(4212209, '', 21, false)), 'toLowerCase', false)(), ext, false, false);
                            return J$.Rt(4212297, J$.C(222992, J$.C(222984, J$.G(4212265, J$.G(4212249, J$.R(4212241, 'this', this, false, false), 'types'), J$.R(4212257, 'ext', ext, false, false))) ? J$._() : J$.R(4212273, 'fallback', fallback, false, false)) ? J$._() : J$.G(4212289, J$.R(4212281, 'this', this, false, false), 'default_type'));
                        } catch (J$e) {
                            J$.Ex(4212897, J$e);
                        } finally {
                            if (J$.Fr(4212905))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4212513, J$.G(4212369, J$.R(4212361, 'Mime', Mime, false, true), 'prototype'), 'extension', J$.T(4212505, function (mimeType) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(4212473, arguments.callee, this, arguments);
                            arguments = J$.N(4212481, 'arguments', arguments, true, false, false);
                            mimeType = J$.N(4212489, 'mimeType', mimeType, true, false, false);
                            J$.N(4212497, 'type', type, false, false, false);
                            var type = J$.W(4212425, 'type', J$.M(4212417, J$.G(4212409, J$.M(4212393, J$.R(4212377, 'mimeType', mimeType, false, false), 'match', false)(J$.T(4212385, /^\s*([^;\s]*)(?:;|\s|$)/, 14, false)), J$.T(4212401, 1, 22, false)), 'toLowerCase', false)(), type, false, false);
                            return J$.Rt(4212465, J$.G(4212457, J$.G(4212441, J$.R(4212433, 'this', this, false, false), 'extensions'), J$.R(4212449, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(4212913, J$e);
                        } finally {
                            if (J$.Fr(4212921))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var mime = J$.W(4212537, 'mime', J$.F(4212529, J$.R(4212521, 'Mime', Mime, false, true), true)(), mime, false, true);
            J$.M(4212577, J$.R(4212545, 'mime', mime, false, true), 'define', false)(J$.F(4212569, J$.I(typeof require === 'undefined' ? require = J$.R(4212553, 'require', undefined, true, true) : require = J$.R(4212553, 'require', require, true, true)), false)(J$.T(4212561, './types.json', 21, false)));
            J$.P(4212617, J$.R(4212585, 'mime', mime, false, true), 'default_type', J$.M(4212609, J$.R(4212593, 'mime', mime, false, true), 'lookup', false)(J$.T(4212601, 'bin', 21, false)));
            J$.P(4212641, J$.R(4212625, 'mime', mime, false, true), 'Mime', J$.R(4212633, 'Mime', Mime, false, true));
            J$.P(4212753, J$.R(4212649, 'mime', mime, false, true), 'charsets', J$.T(4212745, {
                lookup: J$.T(4212737, function lookup(mimeType, fallback) {
                    jalangiLabel6:
                        while (true) {
                            try {
                                J$.Fe(4212705, arguments.callee, this, arguments);
                                arguments = J$.N(4212713, 'arguments', arguments, true, false, false);
                                mimeType = J$.N(4212721, 'mimeType', mimeType, true, false, false);
                                fallback = J$.N(4212729, 'fallback', fallback, true, false, false);
                                return J$.Rt(4212697, J$.C(223000, J$.M(4212673, J$.T(4212657, /^text\/|^application\/(javascript|json)/, 14, false), 'test', false)(J$.R(4212665, 'mimeType', mimeType, false, false))) ? J$.T(4212681, 'UTF-8', 21, false) : J$.R(4212689, 'fallback', fallback, false, false));
                            } catch (J$e) {
                                J$.Ex(4212929, J$e);
                            } finally {
                                if (J$.Fr(4212937))
                                    continue jalangiLabel6;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.P(4212777, J$.I(typeof module === 'undefined' ? module = J$.R(4212761, 'module', undefined, true, true) : module = J$.R(4212761, 'module', module, true, true)), 'exports', J$.R(4212769, 'mime', mime, false, true));
        } catch (J$e) {
            J$.Ex(4212945, J$e);
        } finally {
            if (J$.Sr(4212953))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

