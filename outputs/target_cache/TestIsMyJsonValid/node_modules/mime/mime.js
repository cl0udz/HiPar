J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(254281, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/mime/mime.js');
            function Mime() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(252689, arguments.callee, this, arguments);
                            arguments = J$.N(252697, 'arguments', arguments, true, false, false);
                            J$.P(252641, J$.R(252609, 'this', this, false, false), 'types', J$.M(252633, J$.I(typeof Object === 'undefined' ? Object = J$.R(252617, 'Object', undefined, true, true) : Object = J$.R(252617, 'Object', Object, true, true)), 'create', false)(J$.T(252625, null, 25, false)));
                            J$.P(252681, J$.R(252649, 'this', this, false, false), 'extensions', J$.M(252673, J$.I(typeof Object === 'undefined' ? Object = J$.R(252657, 'Object', undefined, true, true) : Object = J$.R(252657, 'Object', Object, true, true)), 'create', false)(J$.T(252665, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(254329, J$e);
                        } finally {
                            if (J$.Fr(254337))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(254289, 'path', path, false, false, false);
            J$.N(254297, 'fs', fs, false, false, false);
            Mime = J$.N(254313, 'Mime', J$.T(254305, Mime, 12, false), true, false, false);
            J$.N(254321, 'mime', mime, false, false, false);
            J$.T(252369, 'use strict', 21, false);
            J$.F(252393, J$.I(typeof require === 'undefined' ? require = J$.R(252377, 'require', undefined, true, true) : require = J$.R(252377, 'require', require, true, true)), false)(J$.T(252385, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(252417, J$.I(typeof require === 'undefined' ? require = J$.R(252401, 'require', undefined, true, true) : require = J$.R(252401, 'require', require, true, true)), false)(J$.T(252409, 'core-js/modules/es.object.create', 21, false));
            J$.F(252441, J$.I(typeof require === 'undefined' ? require = J$.R(252425, 'require', undefined, true, true) : require = J$.R(252425, 'require', require, true, true)), false)(J$.T(252433, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(252465, J$.I(typeof require === 'undefined' ? require = J$.R(252449, 'require', undefined, true, true) : require = J$.R(252449, 'require', require, true, true)), false)(J$.T(252457, 'core-js/modules/es.string.match', 21, false));
            J$.F(252489, J$.I(typeof require === 'undefined' ? require = J$.R(252473, 'require', undefined, true, true) : require = J$.R(252473, 'require', require, true, true)), false)(J$.T(252481, 'core-js/modules/es.string.replace', 21, false));
            J$.F(252513, J$.I(typeof require === 'undefined' ? require = J$.R(252497, 'require', undefined, true, true) : require = J$.R(252497, 'require', require, true, true)), false)(J$.T(252505, 'core-js/modules/es.string.split', 21, false));
            J$.F(252537, J$.I(typeof require === 'undefined' ? require = J$.R(252521, 'require', undefined, true, true) : require = J$.R(252521, 'require', require, true, true)), false)(J$.T(252529, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var path = J$.W(252569, 'path', J$.F(252561, J$.I(typeof require === 'undefined' ? require = J$.R(252545, 'require', undefined, true, true) : require = J$.R(252545, 'require', require, true, true)), false)(J$.T(252553, 'path', 21, false)), path, false, true);
            var fs = J$.W(252601, 'fs', J$.F(252593, J$.I(typeof require === 'undefined' ? require = J$.R(252577, 'require', undefined, true, true) : require = J$.R(252577, 'require', require, true, true)), false)(J$.T(252585, 'fs', 21, false)), fs, false, true);
            J$.P(253273, J$.G(252713, J$.R(252705, 'Mime', Mime, false, true), 'prototype'), 'define', J$.T(253265, function (map) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(253217, arguments.callee, this, arguments);
                            arguments = J$.N(253225, 'arguments', arguments, true, false, false);
                            map = J$.N(253233, 'map', map, true, false, false);
                            J$.N(253241, 'type', type, false, false, false);
                            J$.N(253249, 'exts', exts, false, false, false);
                            J$.N(253257, 'i', i, false, false, false);
                            for (var type in J$.H(253201, J$.R(252721, 'map', map, false, false))) {
                                J$.N(253209, 'type', type, false, true, false);
                                {
                                    {
                                        var exts = J$.W(252753, 'exts', J$.G(252745, J$.R(252729, 'map', map, false, false), J$.R(252737, 'type', type, false, false)), exts, false, false);
                                        for (var i = J$.W(252769, 'i', J$.T(252761, 0, 22, false), i, false, false); J$.C(14568, J$.B(23746, '<', J$.R(252777, 'i', i, false, false), J$.G(252793, J$.R(252785, 'exts', exts, false, false), 'length'))); J$.B(23770, '-', i = J$.W(252809, 'i', J$.B(23762, '+', J$.U(23754, '+', J$.R(252801, 'i', i, false, false)), 1), i, false, false), 1)) {
                                            if (J$.C(14560, J$.C(14544, J$.G(252833, J$.G(252825, J$.I(typeof process === 'undefined' ? process = J$.R(252817, 'process', undefined, true, true) : process = J$.R(252817, 'process', process, true, true)), 'env'), 'DEBUG_MIME')) ? J$.G(252881, J$.G(252849, J$.R(252841, 'this', this, false, false), 'types'), J$.G(252873, J$.R(252857, 'exts', exts, false, false), J$.R(252865, 'i', i, false, false))) : J$._())) {
                                                J$.M(253049, J$.I(typeof console === 'undefined' ? console = J$.R(252889, 'console', undefined, true, true) : console = J$.R(252889, 'console', console, true, true)), 'warn', false)(J$.M(252937, J$.C(14552, J$.G(252905, J$.R(252897, 'this', this, false, false), '_loading')) ? J$._() : J$.T(252913, 'define()', 21, false), 'replace', false)(J$.T(252921, /.*\//, 14, false), J$.T(252929, '', 21, false)), J$.B(23810, '+', J$.B(23802, '+', J$.B(23794, '+', J$.B(23786, '+', J$.B(23778, '+', J$.T(252945, 'changes "', 21, false), J$.G(252969, J$.R(252953, 'exts', exts, false, false), J$.R(252961, 'i', i, false, false))), J$.T(252977, '" extension type from ', 21, false)), J$.G(253025, J$.G(252993, J$.R(252985, 'this', this, false, false), 'types'), J$.G(253017, J$.R(253001, 'exts', exts, false, false), J$.R(253009, 'i', i, false, false)))), J$.T(253033, ' to ', 21, false)), J$.R(253041, 'type', type, false, false)));
                                            }
                                            J$.P(253105, J$.G(253065, J$.R(253057, 'this', this, false, false), 'types'), J$.G(253089, J$.R(253073, 'exts', exts, false, false), J$.R(253081, 'i', i, false, false)), J$.R(253097, 'type', type, false, false));
                                        }
                                        if (J$.C(14576, J$.U(23818, '!', J$.G(253137, J$.G(253121, J$.R(253113, 'this', this, false, false), 'extensions'), J$.R(253129, 'type', type, false, false))))) {
                                            J$.P(253193, J$.G(253153, J$.R(253145, 'this', this, false, false), 'extensions'), J$.R(253161, 'type', type, false, false), J$.G(253185, J$.R(253169, 'exts', exts, false, false), J$.T(253177, 0, 22, false)));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(254345, J$e);
                        } finally {
                            if (J$.Fr(254353))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(253665, J$.G(253289, J$.R(253281, 'Mime', Mime, false, true), 'prototype'), 'load', J$.T(253657, function (file) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(253609, arguments.callee, this, arguments);
                            arguments = J$.N(253617, 'arguments', arguments, true, false, false);
                            file = J$.N(253625, 'file', file, true, false, false);
                            J$.N(253633, 'map', map, false, false, false);
                            J$.N(253641, 'content', content, false, false, false);
                            J$.N(253649, 'lines', lines, false, false, false);
                            J$.P(253313, J$.R(253297, 'this', this, false, false), '_loading', J$.R(253305, 'file', file, false, false));
                            var map = J$.W(253385, 'map', J$.T(253321, {}, 11, false), map, false, false), content = J$.W(253393, 'content', J$.M(253353, J$.R(253329, 'fs', fs, false, true), 'readFileSync', false)(J$.R(253337, 'file', file, false, false), J$.T(253345, 'ascii', 21, false)), content, false, false), lines = J$.W(253401, 'lines', J$.M(253377, J$.R(253361, 'content', content, false, false), 'split', false)(J$.T(253369, /[\r\n]+/, 14, false)), lines, false, false);
                            J$.M(253553, J$.R(253409, 'lines', lines, false, false), 'forEach', false)(J$.T(253545, function (line) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(253513, arguments.callee, this, arguments);
                                            arguments = J$.N(253521, 'arguments', arguments, true, false, false);
                                            line = J$.N(253529, 'line', line, true, false, false);
                                            J$.N(253537, 'fields', fields, false, false, false);
                                            var fields = J$.W(253465, 'fields', J$.M(253457, J$.M(253441, J$.R(253417, 'line', line, false, false), 'replace', false)(J$.T(253425, /\s*#.*|^\s*|\s*$/g, 14, false), J$.T(253433, '', 21, false)), 'split', false)(J$.T(253449, /\s+/, 14, false)), fields, false, false);
                                            J$.P(253505, J$.R(253473, 'map', map, false, false), J$.M(253489, J$.R(253481, 'fields', fields, false, false), 'shift', false)(), J$.R(253497, 'fields', fields, false, false));
                                        } catch (J$e) {
                                            J$.Ex(254361, J$e);
                                        } finally {
                                            if (J$.Fr(254369))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(253577, J$.R(253561, 'this', this, false, false), 'define', false)(J$.R(253569, 'map', map, false, false));
                            J$.P(253601, J$.R(253585, 'this', this, false, false), '_loading', J$.T(253593, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(254377, J$e);
                        } finally {
                            if (J$.Fr(254385))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(253849, J$.G(253681, J$.R(253673, 'Mime', Mime, false, true), 'prototype'), 'lookup', J$.T(253841, function (path, fallback) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(253801, arguments.callee, this, arguments);
                            arguments = J$.N(253809, 'arguments', arguments, true, false, false);
                            path = J$.N(253817, 'path', path, true, false, false);
                            fallback = J$.N(253825, 'fallback', fallback, true, false, false);
                            J$.N(253833, 'ext', ext, false, false, false);
                            var ext = J$.W(253729, 'ext', J$.M(253721, J$.M(253713, J$.R(253689, 'path', path, false, false), 'replace', false)(J$.T(253697, /^.*[\.\/\\]/, 14, false), J$.T(253705, '', 21, false)), 'toLowerCase', false)(), ext, false, false);
                            return J$.Rt(253793, J$.C(14592, J$.C(14584, J$.G(253761, J$.G(253745, J$.R(253737, 'this', this, false, false), 'types'), J$.R(253753, 'ext', ext, false, false))) ? J$._() : J$.R(253769, 'fallback', fallback, false, false)) ? J$._() : J$.G(253785, J$.R(253777, 'this', this, false, false), 'default_type'));
                        } catch (J$e) {
                            J$.Ex(254393, J$e);
                        } finally {
                            if (J$.Fr(254401))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(254009, J$.G(253865, J$.R(253857, 'Mime', Mime, false, true), 'prototype'), 'extension', J$.T(254001, function (mimeType) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(253969, arguments.callee, this, arguments);
                            arguments = J$.N(253977, 'arguments', arguments, true, false, false);
                            mimeType = J$.N(253985, 'mimeType', mimeType, true, false, false);
                            J$.N(253993, 'type', type, false, false, false);
                            var type = J$.W(253921, 'type', J$.M(253913, J$.G(253905, J$.M(253889, J$.R(253873, 'mimeType', mimeType, false, false), 'match', false)(J$.T(253881, /^\s*([^;\s]*)(?:;|\s|$)/, 14, false)), J$.T(253897, 1, 22, false)), 'toLowerCase', false)(), type, false, false);
                            return J$.Rt(253961, J$.G(253953, J$.G(253937, J$.R(253929, 'this', this, false, false), 'extensions'), J$.R(253945, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(254409, J$e);
                        } finally {
                            if (J$.Fr(254417))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var mime = J$.W(254033, 'mime', J$.F(254025, J$.R(254017, 'Mime', Mime, false, true), true)(), mime, false, true);
            J$.M(254073, J$.R(254041, 'mime', mime, false, true), 'define', false)(J$.F(254065, J$.I(typeof require === 'undefined' ? require = J$.R(254049, 'require', undefined, true, true) : require = J$.R(254049, 'require', require, true, true)), false)(J$.T(254057, './types.json', 21, false)));
            J$.P(254113, J$.R(254081, 'mime', mime, false, true), 'default_type', J$.M(254105, J$.R(254089, 'mime', mime, false, true), 'lookup', false)(J$.T(254097, 'bin', 21, false)));
            J$.P(254137, J$.R(254121, 'mime', mime, false, true), 'Mime', J$.R(254129, 'Mime', Mime, false, true));
            J$.P(254249, J$.R(254145, 'mime', mime, false, true), 'charsets', J$.T(254241, {
                lookup: J$.T(254233, function lookup(mimeType, fallback) {
                    jalangiLabel6:
                        while (true) {
                            try {
                                J$.Fe(254201, arguments.callee, this, arguments);
                                arguments = J$.N(254209, 'arguments', arguments, true, false, false);
                                mimeType = J$.N(254217, 'mimeType', mimeType, true, false, false);
                                fallback = J$.N(254225, 'fallback', fallback, true, false, false);
                                return J$.Rt(254193, J$.C(14600, J$.M(254169, J$.T(254153, /^text\/|^application\/(javascript|json)/, 14, false), 'test', false)(J$.R(254161, 'mimeType', mimeType, false, false))) ? J$.T(254177, 'UTF-8', 21, false) : J$.R(254185, 'fallback', fallback, false, false));
                            } catch (J$e) {
                                J$.Ex(254425, J$e);
                            } finally {
                                if (J$.Fr(254433))
                                    continue jalangiLabel6;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.P(254273, J$.I(typeof module === 'undefined' ? module = J$.R(254257, 'module', undefined, true, true) : module = J$.R(254257, 'module', module, true, true)), 'exports', J$.R(254265, 'mime', mime, false, true));
        } catch (J$e) {
            J$.Ex(254441, J$e);
        } finally {
            if (J$.Sr(254449))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

