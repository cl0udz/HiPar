J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(297153, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/mime/mime.js');
            function Mime() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(295561, arguments.callee, this, arguments);
                            arguments = J$.N(295569, 'arguments', arguments, true, false, false);
                            J$.P(295513, J$.R(295481, 'this', this, false, false), 'types', J$.M(295505, J$.I(typeof Object === 'undefined' ? Object = J$.R(295489, 'Object', undefined, true, true) : Object = J$.R(295489, 'Object', Object, true, true)), 'create', false)(J$.T(295497, null, 25, false)));
                            J$.P(295553, J$.R(295521, 'this', this, false, false), 'extensions', J$.M(295545, J$.I(typeof Object === 'undefined' ? Object = J$.R(295529, 'Object', undefined, true, true) : Object = J$.R(295529, 'Object', Object, true, true)), 'create', false)(J$.T(295537, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(297201, J$e);
                        } finally {
                            if (J$.Fr(297209))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(297161, 'path', path, false, false, false);
            J$.N(297169, 'fs', fs, false, false, false);
            Mime = J$.N(297185, 'Mime', J$.T(297177, Mime, 12, false), true, false, false);
            J$.N(297193, 'mime', mime, false, false, false);
            J$.T(295241, 'use strict', 21, false);
            J$.F(295265, J$.I(typeof require === 'undefined' ? require = J$.R(295249, 'require', undefined, true, true) : require = J$.R(295249, 'require', require, true, true)), false)(J$.T(295257, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(295289, J$.I(typeof require === 'undefined' ? require = J$.R(295273, 'require', undefined, true, true) : require = J$.R(295273, 'require', require, true, true)), false)(J$.T(295281, 'core-js/modules/es.object.create', 21, false));
            J$.F(295313, J$.I(typeof require === 'undefined' ? require = J$.R(295297, 'require', undefined, true, true) : require = J$.R(295297, 'require', require, true, true)), false)(J$.T(295305, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(295337, J$.I(typeof require === 'undefined' ? require = J$.R(295321, 'require', undefined, true, true) : require = J$.R(295321, 'require', require, true, true)), false)(J$.T(295329, 'core-js/modules/es.string.match', 21, false));
            J$.F(295361, J$.I(typeof require === 'undefined' ? require = J$.R(295345, 'require', undefined, true, true) : require = J$.R(295345, 'require', require, true, true)), false)(J$.T(295353, 'core-js/modules/es.string.replace', 21, false));
            J$.F(295385, J$.I(typeof require === 'undefined' ? require = J$.R(295369, 'require', undefined, true, true) : require = J$.R(295369, 'require', require, true, true)), false)(J$.T(295377, 'core-js/modules/es.string.split', 21, false));
            J$.F(295409, J$.I(typeof require === 'undefined' ? require = J$.R(295393, 'require', undefined, true, true) : require = J$.R(295393, 'require', require, true, true)), false)(J$.T(295401, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var path = J$.W(295441, 'path', J$.F(295433, J$.I(typeof require === 'undefined' ? require = J$.R(295417, 'require', undefined, true, true) : require = J$.R(295417, 'require', require, true, true)), false)(J$.T(295425, 'path', 21, false)), path, false, true);
            var fs = J$.W(295473, 'fs', J$.F(295465, J$.I(typeof require === 'undefined' ? require = J$.R(295449, 'require', undefined, true, true) : require = J$.R(295449, 'require', require, true, true)), false)(J$.T(295457, 'fs', 21, false)), fs, false, true);
            J$.P(296145, J$.G(295585, J$.R(295577, 'Mime', Mime, false, true), 'prototype'), 'define', J$.T(296137, function (map) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(296089, arguments.callee, this, arguments);
                            arguments = J$.N(296097, 'arguments', arguments, true, false, false);
                            map = J$.N(296105, 'map', map, true, false, false);
                            J$.N(296113, 'type', type, false, false, false);
                            J$.N(296121, 'exts', exts, false, false, false);
                            J$.N(296129, 'i', i, false, false, false);
                            for (var type in J$.H(296073, J$.R(295593, 'map', map, false, false))) {
                                J$.N(296081, 'type', type, false, true, false);
                                {
                                    {
                                        var exts = J$.W(295625, 'exts', J$.G(295617, J$.R(295601, 'map', map, false, false), J$.R(295609, 'type', type, false, false)), exts, false, false);
                                        for (var i = J$.W(295641, 'i', J$.T(295633, 0, 22, false), i, false, false); J$.C(16840, J$.B(26866, '<', J$.R(295649, 'i', i, false, false), J$.G(295665, J$.R(295657, 'exts', exts, false, false), 'length'))); J$.B(26890, '-', i = J$.W(295681, 'i', J$.B(26882, '+', J$.U(26874, '+', J$.R(295673, 'i', i, false, false)), 1), i, false, false), 1)) {
                                            if (J$.C(16832, J$.C(16816, J$.G(295705, J$.G(295697, J$.I(typeof process === 'undefined' ? process = J$.R(295689, 'process', undefined, true, true) : process = J$.R(295689, 'process', process, true, true)), 'env'), 'DEBUG_MIME')) ? J$.G(295753, J$.G(295721, J$.R(295713, 'this', this, false, false), 'types'), J$.G(295745, J$.R(295729, 'exts', exts, false, false), J$.R(295737, 'i', i, false, false))) : J$._())) {
                                                J$.M(295921, J$.I(typeof console === 'undefined' ? console = J$.R(295761, 'console', undefined, true, true) : console = J$.R(295761, 'console', console, true, true)), 'warn', false)(J$.M(295809, J$.C(16824, J$.G(295777, J$.R(295769, 'this', this, false, false), '_loading')) ? J$._() : J$.T(295785, 'define()', 21, false), 'replace', false)(J$.T(295793, /.*\//, 14, false), J$.T(295801, '', 21, false)), J$.B(26930, '+', J$.B(26922, '+', J$.B(26914, '+', J$.B(26906, '+', J$.B(26898, '+', J$.T(295817, 'changes "', 21, false), J$.G(295841, J$.R(295825, 'exts', exts, false, false), J$.R(295833, 'i', i, false, false))), J$.T(295849, '" extension type from ', 21, false)), J$.G(295897, J$.G(295865, J$.R(295857, 'this', this, false, false), 'types'), J$.G(295889, J$.R(295873, 'exts', exts, false, false), J$.R(295881, 'i', i, false, false)))), J$.T(295905, ' to ', 21, false)), J$.R(295913, 'type', type, false, false)));
                                            }
                                            J$.P(295977, J$.G(295937, J$.R(295929, 'this', this, false, false), 'types'), J$.G(295961, J$.R(295945, 'exts', exts, false, false), J$.R(295953, 'i', i, false, false)), J$.R(295969, 'type', type, false, false));
                                        }
                                        if (J$.C(16848, J$.U(26938, '!', J$.G(296009, J$.G(295993, J$.R(295985, 'this', this, false, false), 'extensions'), J$.R(296001, 'type', type, false, false))))) {
                                            J$.P(296065, J$.G(296025, J$.R(296017, 'this', this, false, false), 'extensions'), J$.R(296033, 'type', type, false, false), J$.G(296057, J$.R(296041, 'exts', exts, false, false), J$.T(296049, 0, 22, false)));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(297217, J$e);
                        } finally {
                            if (J$.Fr(297225))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(296537, J$.G(296161, J$.R(296153, 'Mime', Mime, false, true), 'prototype'), 'load', J$.T(296529, function (file) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(296481, arguments.callee, this, arguments);
                            arguments = J$.N(296489, 'arguments', arguments, true, false, false);
                            file = J$.N(296497, 'file', file, true, false, false);
                            J$.N(296505, 'map', map, false, false, false);
                            J$.N(296513, 'content', content, false, false, false);
                            J$.N(296521, 'lines', lines, false, false, false);
                            J$.P(296185, J$.R(296169, 'this', this, false, false), '_loading', J$.R(296177, 'file', file, false, false));
                            var map = J$.W(296257, 'map', J$.T(296193, {}, 11, false), map, false, false), content = J$.W(296265, 'content', J$.M(296225, J$.R(296201, 'fs', fs, false, true), 'readFileSync', false)(J$.R(296209, 'file', file, false, false), J$.T(296217, 'ascii', 21, false)), content, false, false), lines = J$.W(296273, 'lines', J$.M(296249, J$.R(296233, 'content', content, false, false), 'split', false)(J$.T(296241, /[\r\n]+/, 14, false)), lines, false, false);
                            J$.M(296425, J$.R(296281, 'lines', lines, false, false), 'forEach', false)(J$.T(296417, function (line) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(296385, arguments.callee, this, arguments);
                                            arguments = J$.N(296393, 'arguments', arguments, true, false, false);
                                            line = J$.N(296401, 'line', line, true, false, false);
                                            J$.N(296409, 'fields', fields, false, false, false);
                                            var fields = J$.W(296337, 'fields', J$.M(296329, J$.M(296313, J$.R(296289, 'line', line, false, false), 'replace', false)(J$.T(296297, /\s*#.*|^\s*|\s*$/g, 14, false), J$.T(296305, '', 21, false)), 'split', false)(J$.T(296321, /\s+/, 14, false)), fields, false, false);
                                            J$.P(296377, J$.R(296345, 'map', map, false, false), J$.M(296361, J$.R(296353, 'fields', fields, false, false), 'shift', false)(), J$.R(296369, 'fields', fields, false, false));
                                        } catch (J$e) {
                                            J$.Ex(297233, J$e);
                                        } finally {
                                            if (J$.Fr(297241))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(296449, J$.R(296433, 'this', this, false, false), 'define', false)(J$.R(296441, 'map', map, false, false));
                            J$.P(296473, J$.R(296457, 'this', this, false, false), '_loading', J$.T(296465, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(297249, J$e);
                        } finally {
                            if (J$.Fr(297257))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(296721, J$.G(296553, J$.R(296545, 'Mime', Mime, false, true), 'prototype'), 'lookup', J$.T(296713, function (path, fallback) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(296673, arguments.callee, this, arguments);
                            arguments = J$.N(296681, 'arguments', arguments, true, false, false);
                            path = J$.N(296689, 'path', path, true, false, false);
                            fallback = J$.N(296697, 'fallback', fallback, true, false, false);
                            J$.N(296705, 'ext', ext, false, false, false);
                            var ext = J$.W(296601, 'ext', J$.M(296593, J$.M(296585, J$.R(296561, 'path', path, false, false), 'replace', false)(J$.T(296569, /^.*[\.\/\\]/, 14, false), J$.T(296577, '', 21, false)), 'toLowerCase', false)(), ext, false, false);
                            return J$.Rt(296665, J$.C(16864, J$.C(16856, J$.G(296633, J$.G(296617, J$.R(296609, 'this', this, false, false), 'types'), J$.R(296625, 'ext', ext, false, false))) ? J$._() : J$.R(296641, 'fallback', fallback, false, false)) ? J$._() : J$.G(296657, J$.R(296649, 'this', this, false, false), 'default_type'));
                        } catch (J$e) {
                            J$.Ex(297265, J$e);
                        } finally {
                            if (J$.Fr(297273))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(296881, J$.G(296737, J$.R(296729, 'Mime', Mime, false, true), 'prototype'), 'extension', J$.T(296873, function (mimeType) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(296841, arguments.callee, this, arguments);
                            arguments = J$.N(296849, 'arguments', arguments, true, false, false);
                            mimeType = J$.N(296857, 'mimeType', mimeType, true, false, false);
                            J$.N(296865, 'type', type, false, false, false);
                            var type = J$.W(296793, 'type', J$.M(296785, J$.G(296777, J$.M(296761, J$.R(296745, 'mimeType', mimeType, false, false), 'match', false)(J$.T(296753, /^\s*([^;\s]*)(?:;|\s|$)/, 14, false)), J$.T(296769, 1, 22, false)), 'toLowerCase', false)(), type, false, false);
                            return J$.Rt(296833, J$.G(296825, J$.G(296809, J$.R(296801, 'this', this, false, false), 'extensions'), J$.R(296817, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(297281, J$e);
                        } finally {
                            if (J$.Fr(297289))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var mime = J$.W(296905, 'mime', J$.F(296897, J$.R(296889, 'Mime', Mime, false, true), true)(), mime, false, true);
            J$.M(296945, J$.R(296913, 'mime', mime, false, true), 'define', false)(J$.F(296937, J$.I(typeof require === 'undefined' ? require = J$.R(296921, 'require', undefined, true, true) : require = J$.R(296921, 'require', require, true, true)), false)(J$.T(296929, './types.json', 21, false)));
            J$.P(296985, J$.R(296953, 'mime', mime, false, true), 'default_type', J$.M(296977, J$.R(296961, 'mime', mime, false, true), 'lookup', false)(J$.T(296969, 'bin', 21, false)));
            J$.P(297009, J$.R(296993, 'mime', mime, false, true), 'Mime', J$.R(297001, 'Mime', Mime, false, true));
            J$.P(297121, J$.R(297017, 'mime', mime, false, true), 'charsets', J$.T(297113, {
                lookup: J$.T(297105, function lookup(mimeType, fallback) {
                    jalangiLabel6:
                        while (true) {
                            try {
                                J$.Fe(297073, arguments.callee, this, arguments);
                                arguments = J$.N(297081, 'arguments', arguments, true, false, false);
                                mimeType = J$.N(297089, 'mimeType', mimeType, true, false, false);
                                fallback = J$.N(297097, 'fallback', fallback, true, false, false);
                                return J$.Rt(297065, J$.C(16872, J$.M(297041, J$.T(297025, /^text\/|^application\/(javascript|json)/, 14, false), 'test', false)(J$.R(297033, 'mimeType', mimeType, false, false))) ? J$.T(297049, 'UTF-8', 21, false) : J$.R(297057, 'fallback', fallback, false, false));
                            } catch (J$e) {
                                J$.Ex(297297, J$e);
                            } finally {
                                if (J$.Fr(297305))
                                    continue jalangiLabel6;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.P(297145, J$.I(typeof module === 'undefined' ? module = J$.R(297129, 'module', undefined, true, true) : module = J$.R(297129, 'module', module, true, true)), 'exports', J$.R(297137, 'mime', mime, false, true));
        } catch (J$e) {
            J$.Ex(297313, J$e);
        } finally {
            if (J$.Sr(297321))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

