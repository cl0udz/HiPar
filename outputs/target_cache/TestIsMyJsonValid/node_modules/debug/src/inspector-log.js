J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(42185, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/debug/src/inspector-log.js');
            function inspectorLog() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(42161, arguments.callee, this, arguments);
                            arguments = J$.N(42169, 'arguments', arguments, true, false, false);
                            J$.N(42177, 'stdout', stdout, false, false, false);
                            var stdout = J$.W(42065, 'stdout', J$.G(42057, J$.I(typeof console === 'undefined' ? console = J$.R(42049, 'console', undefined, true, true) : console = J$.R(42049, 'console', console, true, true)), '_stdout'), stdout, false, false);
                            J$.P(42089, J$.I(typeof console === 'undefined' ? console = J$.R(42073, 'console', undefined, true, true) : console = J$.R(42073, 'console', console, true, true)), '_stdout', J$.R(42081, 'nullStream', nullStream, false, true));
                            J$.M(42129, J$.G(42105, J$.I(typeof console === 'undefined' ? console = J$.R(42097, 'console', undefined, true, true) : console = J$.R(42097, 'console', console, true, true)), 'log'), 'apply', false)(J$.I(typeof console === 'undefined' ? console = J$.R(42113, 'console', undefined, true, true) : console = J$.R(42113, 'console', console, true, true)), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(42121, 'arguments', undefined, true, true) : arguments = J$.R(42121, 'arguments', arguments, true, true)));
                            J$.P(42153, J$.I(typeof console === 'undefined' ? console = J$.R(42137, 'console', undefined, true, true) : console = J$.R(42137, 'console', console, true, true)), '_stdout', J$.R(42145, 'stdout', stdout, false, false));
                        } catch (J$e) {
                            J$.Ex(42233, J$e);
                        } finally {
                            if (J$.Fr(42241))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(42193, 'nullStream', nullStream, false, false, false);
            inspectorLog = J$.N(42209, 'inspectorLog', J$.T(42201, inspectorLog, 12, false), true, false, false);
            J$.T(41937, 'use strict', 21, false);
            J$.P(41961, J$.I(typeof module === 'undefined' ? module = J$.R(41945, 'module', undefined, true, true) : module = J$.R(41945, 'module', module, true, true)), 'exports', J$.R(41953, 'inspectorLog', inspectorLog, false, true));
            var nullStream = J$.W(42001, 'nullStream', J$.M(41993, J$.F(41985, J$.I(typeof require === 'undefined' ? require = J$.R(41969, 'require', undefined, true, true) : require = J$.R(41969, 'require', require, true, true)), false)(J$.T(41977, 'stream', 21, false)), 'Writable', true)(), nullStream, false, true);
            J$.P(42041, J$.R(42009, 'nullStream', nullStream, false, true), '_write', J$.T(42033, function () {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(42017, arguments.callee, this, arguments);
                            arguments = J$.N(42025, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(42217, J$e);
                        } finally {
                            if (J$.Fr(42225))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(42249, J$e);
        } finally {
            if (J$.Sr(42257))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

