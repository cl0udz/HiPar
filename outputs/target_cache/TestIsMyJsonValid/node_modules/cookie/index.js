J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(77041, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/cookie/index.js');
            function parse(str, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(75657, arguments.callee, this, arguments);
                            arguments = J$.N(75665, 'arguments', arguments, true, false, false);
                            str = J$.N(75673, 'str', str, true, false, false);
                            options = J$.N(75681, 'options', options, true, false, false);
                            J$.N(75689, 'obj', obj, false, false, false);
                            J$.N(75697, 'opt', opt, false, false, false);
                            J$.N(75705, 'pairs', pairs, false, false, false);
                            J$.N(75713, 'dec', dec, false, false, false);
                            J$.N(75721, 'i', i, false, false, false);
                            J$.N(75729, 'pair', pair, false, false, false);
                            J$.N(75737, 'eq_idx', eq_idx, false, false, false);
                            J$.N(75745, 'key', key, false, false, false);
                            J$.N(75753, 'val', val, false, false, false);
                            if (J$.C(4584, J$.B(5722, '!==', J$.U(5714, 'typeof', J$.R(75089, 'str', str, false, false)), J$.T(75097, 'string', 21, false)))) {
                                throw J$.F(75121, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(75105, 'TypeError', undefined, true, true) : TypeError = J$.R(75105, 'TypeError', TypeError, true, true)), true)(J$.T(75113, 'argument str must be a string', 21, false));
                            }
                            var obj = J$.W(75137, 'obj', J$.T(75129, {}, 11, false), obj, false, false);
                            var opt = J$.W(75161, 'opt', J$.C(4592, J$.R(75145, 'options', options, false, false)) ? J$._() : J$.T(75153, {}, 11, false), opt, false, false);
                            var pairs = J$.W(75193, 'pairs', J$.M(75185, J$.R(75169, 'str', str, false, false), 'split', false)(J$.R(75177, 'pairSplitRegExp', pairSplitRegExp, false, true)), pairs, false, false);
                            var dec = J$.W(75225, 'dec', J$.C(4600, J$.G(75209, J$.R(75201, 'opt', opt, false, false), 'decode')) ? J$._() : J$.R(75217, 'decode', decode, false, true), dec, false, false);
                            for (var i = J$.W(75241, 'i', J$.T(75233, 0, 22, false), i, false, false); J$.C(4632, J$.B(5730, '<', J$.R(75249, 'i', i, false, false), J$.G(75265, J$.R(75257, 'pairs', pairs, false, false), 'length'))); J$.B(5754, '-', i = J$.W(75281, 'i', J$.B(5746, '+', J$.U(5738, '+', J$.R(75273, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var pair = J$.W(75313, 'pair', J$.G(75305, J$.R(75289, 'pairs', pairs, false, false), J$.R(75297, 'i', i, false, false)), pair, false, false);
                                var eq_idx = J$.W(75345, 'eq_idx', J$.M(75337, J$.R(75321, 'pair', pair, false, false), 'indexOf', false)(J$.T(75329, '=', 21, false)), eq_idx, false, false);
                                if (J$.C(4608, J$.B(5762, '<', J$.R(75353, 'eq_idx', eq_idx, false, false), J$.T(75361, 0, 22, false)))) {
                                    continue;
                                }
                                var key = J$.W(75409, 'key', J$.M(75401, J$.M(75393, J$.R(75369, 'pair', pair, false, false), 'substr', false)(J$.T(75377, 0, 22, false), J$.R(75385, 'eq_idx', eq_idx, false, false)), 'trim', false)(), key, false, false);
                                var val = J$.W(75473, 'val', J$.M(75465, J$.M(75457, J$.R(75417, 'pair', pair, false, false), 'substr', false)(eq_idx = J$.W(75433, 'eq_idx', J$.B(5778, '+', J$.U(5770, '+', J$.R(75425, 'eq_idx', eq_idx, false, false)), 1), eq_idx, false, false), J$.G(75449, J$.R(75441, 'pair', pair, false, false), 'length')), 'trim', false)(), val, false, false);
                                if (J$.C(4616, J$.B(5786, '==', J$.T(75481, '"', 21, false), J$.G(75505, J$.R(75489, 'val', val, false, false), J$.T(75497, 0, 22, false))))) {
                                    val = J$.W(75545, 'val', J$.M(75537, J$.R(75513, 'val', val, false, false), 'slice', false)(J$.T(75521, 1, 22, false), J$.U(5794, '-', J$.T(75529, 1, 22, false))), val, false, false);
                                }
                                if (J$.C(4624, J$.B(5802, '==', J$.T(75553, undefined, 24, false), J$.G(75577, J$.R(75561, 'obj', obj, false, false), J$.R(75569, 'key', key, false, false))))) {
                                    J$.P(75633, J$.R(75585, 'obj', obj, false, false), J$.R(75593, 'key', key, false, false), J$.F(75625, J$.R(75601, 'tryDecode', tryDecode, false, true), false)(J$.R(75609, 'val', val, false, false), J$.R(75617, 'dec', dec, false, false)));
                                }
                            }
                            return J$.Rt(75649, J$.R(75641, 'obj', obj, false, false));
                        } catch (J$e) {
                            J$.Ex(77129, J$e);
                        } finally {
                            if (J$.Fr(77137))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function serialize(name, val, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(76865, arguments.callee, this, arguments);
                            arguments = J$.N(76873, 'arguments', arguments, true, false, false);
                            name = J$.N(76881, 'name', name, true, false, false);
                            val = J$.N(76889, 'val', val, true, false, false);
                            options = J$.N(76897, 'options', options, true, false, false);
                            J$.N(76905, 'opt', opt, false, false, false);
                            J$.N(76913, 'enc', enc, false, false, false);
                            J$.N(76921, 'value', value, false, false, false);
                            J$.N(76929, 'str', str, false, false, false);
                            J$.N(76937, 'maxAge', maxAge, false, false, false);
                            J$.N(76945, 'sameSite', sameSite, false, false, false);
                            var opt = J$.W(75777, 'opt', J$.C(4640, J$.R(75761, 'options', options, false, false)) ? J$._() : J$.T(75769, {}, 11, false), opt, false, false);
                            var enc = J$.W(75809, 'enc', J$.C(4648, J$.G(75793, J$.R(75785, 'opt', opt, false, false), 'encode')) ? J$._() : J$.R(75801, 'encode', encode, false, true), enc, false, false);
                            if (J$.C(4656, J$.B(5818, '!==', J$.U(5810, 'typeof', J$.R(75817, 'enc', enc, false, false)), J$.T(75825, 'function', 21, false)))) {
                                throw J$.F(75849, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(75833, 'TypeError', undefined, true, true) : TypeError = J$.R(75833, 'TypeError', TypeError, true, true)), true)(J$.T(75841, 'option encode is invalid', 21, false));
                            }
                            if (J$.C(4664, J$.U(5826, '!', J$.M(75873, J$.R(75857, 'fieldContentRegExp', fieldContentRegExp, false, true), 'test', false)(J$.R(75865, 'name', name, false, false))))) {
                                throw J$.F(75897, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(75881, 'TypeError', undefined, true, true) : TypeError = J$.R(75881, 'TypeError', TypeError, true, true)), true)(J$.T(75889, 'argument name is invalid', 21, false));
                            }
                            var value = J$.W(75929, 'value', J$.F(75921, J$.R(75905, 'enc', enc, false, false), false)(J$.R(75913, 'val', val, false, false)), value, false, false);
                            if (J$.C(4680, J$.C(4672, J$.R(75937, 'value', value, false, false)) ? J$.U(5834, '!', J$.M(75961, J$.R(75945, 'fieldContentRegExp', fieldContentRegExp, false, true), 'test', false)(J$.R(75953, 'value', value, false, false))) : J$._())) {
                                throw J$.F(75985, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(75969, 'TypeError', undefined, true, true) : TypeError = J$.R(75969, 'TypeError', TypeError, true, true)), true)(J$.T(75977, 'argument val is invalid', 21, false));
                            }
                            var str = J$.W(76017, 'str', J$.B(5850, '+', J$.B(5842, '+', J$.R(75993, 'name', name, false, false), J$.T(76001, '=', 21, false)), J$.R(76009, 'value', value, false, false)), str, false, false);
                            if (J$.C(4696, J$.B(5858, '!=', J$.T(76025, null, 25, false), J$.G(76041, J$.R(76033, 'opt', opt, false, false), 'maxAge')))) {
                                var maxAge = J$.W(76073, 'maxAge', J$.B(5866, '-', J$.G(76057, J$.R(76049, 'opt', opt, false, false), 'maxAge'), J$.T(76065, 0, 22, false)), maxAge, false, false);
                                if (J$.C(4688, J$.F(76097, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(76081, 'isNaN', undefined, true, true) : isNaN = J$.R(76081, 'isNaN', isNaN, true, true)), false)(J$.R(76089, 'maxAge', maxAge, false, false))))
                                    throw J$.F(76121, J$.I(typeof Error === 'undefined' ? Error = J$.R(76105, 'Error', undefined, true, true) : Error = J$.R(76105, 'Error', Error, true, true)), true)(J$.T(76113, 'maxAge should be a Number', 21, false));
                                str = J$.W(76169, 'str', J$.B(5882, '+', J$.R(76161, 'str', str, false, false), J$.B(5874, '+', J$.T(76129, '; Max-Age=', 21, false), J$.M(76153, J$.I(typeof Math === 'undefined' ? Math = J$.R(76137, 'Math', undefined, true, true) : Math = J$.R(76137, 'Math', Math, true, true)), 'floor', false)(J$.R(76145, 'maxAge', maxAge, false, false)))), str, false, false);
                            }
                            if (J$.C(4712, J$.G(76185, J$.R(76177, 'opt', opt, false, false), 'domain'))) {
                                if (J$.C(4704, J$.U(5890, '!', J$.M(76217, J$.R(76193, 'fieldContentRegExp', fieldContentRegExp, false, true), 'test', false)(J$.G(76209, J$.R(76201, 'opt', opt, false, false), 'domain'))))) {
                                    throw J$.F(76241, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(76225, 'TypeError', undefined, true, true) : TypeError = J$.R(76225, 'TypeError', TypeError, true, true)), true)(J$.T(76233, 'option domain is invalid', 21, false));
                                }
                                str = J$.W(76281, 'str', J$.B(5906, '+', J$.R(76273, 'str', str, false, false), J$.B(5898, '+', J$.T(76249, '; Domain=', 21, false), J$.G(76265, J$.R(76257, 'opt', opt, false, false), 'domain'))), str, false, false);
                            }
                            if (J$.C(4728, J$.G(76297, J$.R(76289, 'opt', opt, false, false), 'path'))) {
                                if (J$.C(4720, J$.U(5914, '!', J$.M(76329, J$.R(76305, 'fieldContentRegExp', fieldContentRegExp, false, true), 'test', false)(J$.G(76321, J$.R(76313, 'opt', opt, false, false), 'path'))))) {
                                    throw J$.F(76353, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(76337, 'TypeError', undefined, true, true) : TypeError = J$.R(76337, 'TypeError', TypeError, true, true)), true)(J$.T(76345, 'option path is invalid', 21, false));
                                }
                                str = J$.W(76393, 'str', J$.B(5930, '+', J$.R(76385, 'str', str, false, false), J$.B(5922, '+', J$.T(76361, '; Path=', 21, false), J$.G(76377, J$.R(76369, 'opt', opt, false, false), 'path'))), str, false, false);
                            }
                            if (J$.C(4744, J$.G(76409, J$.R(76401, 'opt', opt, false, false), 'expires'))) {
                                if (J$.C(4736, J$.B(5946, '!==', J$.U(5938, 'typeof', J$.G(76433, J$.G(76425, J$.R(76417, 'opt', opt, false, false), 'expires'), 'toUTCString')), J$.T(76441, 'function', 21, false)))) {
                                    throw J$.F(76465, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(76449, 'TypeError', undefined, true, true) : TypeError = J$.R(76449, 'TypeError', TypeError, true, true)), true)(J$.T(76457, 'option expires is invalid', 21, false));
                                }
                                str = J$.W(76513, 'str', J$.B(5962, '+', J$.R(76505, 'str', str, false, false), J$.B(5954, '+', J$.T(76473, '; Expires=', 21, false), J$.M(76497, J$.G(76489, J$.R(76481, 'opt', opt, false, false), 'expires'), 'toUTCString', false)())), str, false, false);
                            }
                            if (J$.C(4752, J$.G(76529, J$.R(76521, 'opt', opt, false, false), 'httpOnly'))) {
                                str = J$.W(76553, 'str', J$.B(5970, '+', J$.R(76545, 'str', str, false, false), J$.T(76537, '; HttpOnly', 21, false)), str, false, false);
                            }
                            if (J$.C(4760, J$.G(76569, J$.R(76561, 'opt', opt, false, false), 'secure'))) {
                                str = J$.W(76593, 'str', J$.B(5978, '+', J$.R(76585, 'str', str, false, false), J$.T(76577, '; Secure', 21, false)), str, false, false);
                            }
                            if (J$.C(4816, J$.G(76609, J$.R(76601, 'opt', opt, false, false), 'sameSite'))) {
                                var sameSite = J$.W(76681, 'sameSite', J$.C(4768, J$.B(5994, '===', J$.U(5986, 'typeof', J$.G(76625, J$.R(76617, 'opt', opt, false, false), 'sameSite')), J$.T(76633, 'string', 21, false))) ? J$.M(76657, J$.G(76649, J$.R(76641, 'opt', opt, false, false), 'sameSite'), 'toLowerCase', false)() : J$.G(76673, J$.R(76665, 'opt', opt, false, false), 'sameSite'), sameSite, false, false);
                                switch (J$.C1(4776, J$.R(76689, 'sameSite', sameSite, false, false))) {
                                case J$.C2(4784, J$.T(76721, true, 23, false)):
                                    str = J$.W(76713, 'str', J$.B(6002, '+', J$.R(76705, 'str', str, false, false), J$.T(76697, '; SameSite=Strict', 21, false)), str, false, false);
                                    break;
                                case J$.C2(4792, J$.T(76753, 'lax', 21, false)):
                                    str = J$.W(76745, 'str', J$.B(6010, '+', J$.R(76737, 'str', str, false, false), J$.T(76729, '; SameSite=Lax', 21, false)), str, false, false);
                                    break;
                                case J$.C2(4800, J$.T(76785, 'strict', 21, false)):
                                    str = J$.W(76777, 'str', J$.B(6018, '+', J$.R(76769, 'str', str, false, false), J$.T(76761, '; SameSite=Strict', 21, false)), str, false, false);
                                    break;
                                case J$.C2(4808, J$.T(76817, 'none', 21, false)):
                                    str = J$.W(76809, 'str', J$.B(6026, '+', J$.R(76801, 'str', str, false, false), J$.T(76793, '; SameSite=None', 21, false)), str, false, false);
                                    break;
                                default:
                                    throw J$.F(76841, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(76825, 'TypeError', undefined, true, true) : TypeError = J$.R(76825, 'TypeError', TypeError, true, true)), true)(J$.T(76833, 'option sameSite is invalid', 21, false));
                                }
                            }
                            return J$.Rt(76857, J$.R(76849, 'str', str, false, false));
                        } catch (J$e) {
                            J$.Ex(77145, J$e);
                        } finally {
                            if (J$.Fr(77153))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tryDecode(str, decode) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(77009, arguments.callee, this, arguments);
                            arguments = J$.N(77017, 'arguments', arguments, true, false, false);
                            str = J$.N(77025, 'str', str, true, false, false);
                            decode = J$.N(77033, 'decode', decode, true, false, false);
                            try {
                                return J$.Rt(76977, J$.F(76969, J$.R(76953, 'decode', decode, false, false), false)(J$.R(76961, 'str', str, false, false)));
                            } catch (e) {
                                J$.N(77001, 'e', e, false, false, true);
                                return J$.Rt(76993, J$.R(76985, 'str', str, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(77161, J$e);
                        } finally {
                            if (J$.Fr(77169))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(77049, 'decode', decode, false, false, false);
            J$.N(77057, 'encode', encode, false, false, false);
            J$.N(77065, 'pairSplitRegExp', pairSplitRegExp, false, false, false);
            J$.N(77073, 'fieldContentRegExp', fieldContentRegExp, false, false, false);
            parse = J$.N(77089, 'parse', J$.T(77081, parse, 12, false), true, false, false);
            serialize = J$.N(77105, 'serialize', J$.T(77097, serialize, 12, false), true, false, false);
            tryDecode = J$.N(77121, 'tryDecode', J$.T(77113, tryDecode, 12, false), true, false, false);
            J$.T(74849, 'use strict', 21, false);
            J$.F(74873, J$.I(typeof require === 'undefined' ? require = J$.R(74857, 'require', undefined, true, true) : require = J$.R(74857, 'require', require, true, true)), false)(J$.T(74865, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(74897, J$.I(typeof require === 'undefined' ? require = J$.R(74881, 'require', undefined, true, true) : require = J$.R(74881, 'require', require, true, true)), false)(J$.T(74889, 'core-js/modules/es.array.slice', 21, false));
            J$.F(74921, J$.I(typeof require === 'undefined' ? require = J$.R(74905, 'require', undefined, true, true) : require = J$.R(74905, 'require', require, true, true)), false)(J$.T(74913, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(74945, J$.I(typeof require === 'undefined' ? require = J$.R(74929, 'require', undefined, true, true) : require = J$.R(74929, 'require', require, true, true)), false)(J$.T(74937, 'core-js/modules/es.string.split', 21, false));
            J$.F(74969, J$.I(typeof require === 'undefined' ? require = J$.R(74953, 'require', undefined, true, true) : require = J$.R(74953, 'require', require, true, true)), false)(J$.T(74961, 'core-js/modules/es.string.trim', 21, false));
            J$.P(74993, J$.I(typeof exports === 'undefined' ? exports = J$.R(74977, 'exports', undefined, true, true) : exports = J$.R(74977, 'exports', exports, true, true)), 'parse', J$.R(74985, 'parse', parse, false, true));
            J$.P(75017, J$.I(typeof exports === 'undefined' ? exports = J$.R(75001, 'exports', undefined, true, true) : exports = J$.R(75001, 'exports', exports, true, true)), 'serialize', J$.R(75009, 'serialize', serialize, false, true));
            var decode = J$.W(75033, 'decode', J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(75025, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(75025, 'decodeURIComponent', decodeURIComponent, true, true)), decode, false, true);
            var encode = J$.W(75049, 'encode', J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(75041, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(75041, 'encodeURIComponent', encodeURIComponent, true, true)), encode, false, true);
            var pairSplitRegExp = J$.W(75065, 'pairSplitRegExp', J$.T(75057, /; */, 14, false), pairSplitRegExp, false, true);
            var fieldContentRegExp = J$.W(75081, 'fieldContentRegExp', J$.T(75073, /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/, 14, false), fieldContentRegExp, false, true);
        } catch (J$e) {
            J$.Ex(77177, J$e);
        } finally {
            if (J$.Sr(77185))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

