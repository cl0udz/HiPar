J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(4142593, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/iconv-lite/lib/streams.js');
            function IconvLiteEncoderStream(conv, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4140689, arguments.callee, this, arguments);
                            arguments = J$.N(4140697, 'arguments', arguments, true, false, false);
                            conv = J$.N(4140705, 'conv', conv, true, false, false);
                            options = J$.N(4140713, 'options', options, true, false, false);
                            J$.P(4140601, J$.R(4140585, 'this', this, false, false), 'conv', J$.R(4140593, 'conv', conv, false, false));
                            options = J$.W(4140625, 'options', J$.C(219104, J$.R(4140609, 'options', options, false, false)) ? J$._() : J$.T(4140617, {}, 11, false), options, false, false);
                            J$.P(4140649, J$.R(4140633, 'options', options, false, false), 'decodeStrings', J$.T(4140641, false, 23, false));
                            J$.M(4140681, J$.R(4140657, 'Transform', Transform, false, true), 'call', false)(J$.R(4140665, 'this', this, false, false), J$.R(4140673, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(4142697, J$e);
                        } finally {
                            if (J$.Fr(4142705))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function IconvLiteDecoderStream(conv, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(4141689, arguments.callee, this, arguments);
                            arguments = J$.N(4141697, 'arguments', arguments, true, false, false);
                            conv = J$.N(4141705, 'conv', conv, true, false, false);
                            options = J$.N(4141713, 'options', options, true, false, false);
                            J$.P(4141585, J$.R(4141569, 'this', this, false, false), 'conv', J$.R(4141577, 'conv', conv, false, false));
                            options = J$.W(4141609, 'options', J$.C(219152, J$.R(4141593, 'options', options, false, false)) ? J$._() : J$.T(4141601, {}, 11, false), options, false, false);
                            J$.P(4141649, J$.R(4141617, 'options', options, false, false), 'encoding', J$.P(4141641, J$.R(4141625, 'this', this, false, false), 'encoding', J$.T(4141633, 'utf8', 21, false)));
                            J$.M(4141681, J$.R(4141657, 'Transform', Transform, false, true), 'call', false)(J$.R(4141665, 'this', this, false, false), J$.R(4141673, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(4142793, J$e);
                        } finally {
                            if (J$.Fr(4142801))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4142601, 'Buffer', Buffer, false, false, false);
            J$.N(4142609, 'Transform', Transform, false, false, false);
            IconvLiteEncoderStream = J$.N(4142625, 'IconvLiteEncoderStream', J$.T(4142617, IconvLiteEncoderStream, 12, false), true, false, false);
            IconvLiteDecoderStream = J$.N(4142641, 'IconvLiteDecoderStream', J$.T(4142633, IconvLiteDecoderStream, 12, false), true, false, false);
            J$.T(4140049, 'use strict', 21, false);
            J$.F(4140073, J$.I(typeof require === 'undefined' ? require = J$.R(4140057, 'require', undefined, true, true) : require = J$.R(4140057, 'require', require, true, true)), false)(J$.T(4140065, 'core-js/modules/es.array.concat', 21, false));
            J$.F(4140097, J$.I(typeof require === 'undefined' ? require = J$.R(4140081, 'require', undefined, true, true) : require = J$.R(4140081, 'require', require, true, true)), false)(J$.T(4140089, 'core-js/modules/es.object.create', 21, false));
            var Buffer = J$.W(4140169, 'Buffer', J$.G(4140129, J$.F(4140121, J$.I(typeof require === 'undefined' ? require = J$.R(4140105, 'require', undefined, true, true) : require = J$.R(4140105, 'require', require, true, true)), false)(J$.T(4140113, 'buffer', 21, false)), 'Buffer'), Buffer, false, true), Transform = J$.W(4140177, 'Transform', J$.G(4140161, J$.F(4140153, J$.I(typeof require === 'undefined' ? require = J$.R(4140137, 'require', undefined, true, true) : require = J$.R(4140137, 'require', require, true, true)), false)(J$.T(4140145, 'stream', 21, false)), 'Transform'), Transform, false, true);
            J$.P(4140577, J$.I(typeof module === 'undefined' ? module = J$.R(4140185, 'module', undefined, true, true) : module = J$.R(4140185, 'module', module, true, true)), 'exports', J$.T(4140569, function (iconv) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4140545, arguments.callee, this, arguments);
                            arguments = J$.N(4140553, 'arguments', arguments, true, false, false);
                            iconv = J$.N(4140561, 'iconv', iconv, true, false, false);
                            J$.P(4140305, J$.R(4140193, 'iconv', iconv, false, false), 'encodeStream', J$.T(4140297, function encodeStream(encoding, options) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4140265, arguments.callee, this, arguments);
                                            arguments = J$.N(4140273, 'arguments', arguments, true, false, false);
                                            encoding = J$.N(4140281, 'encoding', encoding, true, false, false);
                                            options = J$.N(4140289, 'options', options, true, false, false);
                                            return J$.Rt(4140257, J$.F(4140249, J$.R(4140201, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), true)(J$.M(4140233, J$.R(4140209, 'iconv', iconv, false, false), 'getEncoder', false)(J$.R(4140217, 'encoding', encoding, false, false), J$.R(4140225, 'options', options, false, false)), J$.R(4140241, 'options', options, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(4142649, J$e);
                                        } finally {
                                            if (J$.Fr(4142657))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(4140425, J$.R(4140313, 'iconv', iconv, false, false), 'decodeStream', J$.T(4140417, function decodeStream(encoding, options) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(4140385, arguments.callee, this, arguments);
                                            arguments = J$.N(4140393, 'arguments', arguments, true, false, false);
                                            encoding = J$.N(4140401, 'encoding', encoding, true, false, false);
                                            options = J$.N(4140409, 'options', options, true, false, false);
                                            return J$.Rt(4140377, J$.F(4140369, J$.R(4140321, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), true)(J$.M(4140353, J$.R(4140329, 'iconv', iconv, false, false), 'getDecoder', false)(J$.R(4140337, 'encoding', encoding, false, false), J$.R(4140345, 'options', options, false, false)), J$.R(4140361, 'options', options, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(4142665, J$e);
                                        } finally {
                                            if (J$.Fr(4142673))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(4140449, J$.R(4140433, 'iconv', iconv, false, false), 'supportsStreams', J$.T(4140441, true, 23, false));
                            J$.P(4140473, J$.R(4140457, 'iconv', iconv, false, false), 'IconvLiteEncoderStream', J$.R(4140465, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true));
                            J$.P(4140497, J$.R(4140481, 'iconv', iconv, false, false), 'IconvLiteDecoderStream', J$.R(4140489, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true));
                            J$.P(4140537, J$.R(4140505, 'iconv', iconv, false, false), '_collect', J$.G(4140529, J$.G(4140521, J$.R(4140513, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), 'collect'));
                        } catch (J$e) {
                            J$.Ex(4142681, J$e);
                        } finally {
                            if (J$.Fr(4142689))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4140785, J$.R(4140721, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype', J$.M(4140777, J$.I(typeof Object === 'undefined' ? Object = J$.R(4140729, 'Object', undefined, true, true) : Object = J$.R(4140729, 'Object', Object, true, true)), 'create', false)(J$.G(4140745, J$.R(4140737, 'Transform', Transform, false, true), 'prototype'), J$.T(4140769, { constructor: J$.T(4140761, { value: J$.R(4140753, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true) }, 11, false) }, 11, false)));
            J$.P(4141065, J$.G(4140801, J$.R(4140793, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype'), '_transform', J$.T(4141057, function (chunk, encoding, done) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(4141009, arguments.callee, this, arguments);
                            arguments = J$.N(4141017, 'arguments', arguments, true, false, false);
                            chunk = J$.N(4141025, 'chunk', chunk, true, false, false);
                            encoding = J$.N(4141033, 'encoding', encoding, true, false, false);
                            done = J$.N(4141041, 'done', done, true, false, false);
                            J$.N(4141049, 'res', res, false, false, false);
                            if (J$.C(219112, J$.B(402994, '!=', J$.U(402986, 'typeof', J$.R(4140809, 'chunk', chunk, false, false)), J$.T(4140817, 'string', 21, false))))
                                return J$.Rt(4140865, J$.F(4140857, J$.R(4140825, 'done', done, false, false), false)(J$.F(4140849, J$.I(typeof Error === 'undefined' ? Error = J$.R(4140833, 'Error', undefined, true, true) : Error = J$.R(4140833, 'Error', Error, true, true)), true)(J$.T(4140841, 'Iconv encoding stream needs strings as its input.', 21, false))));
                            try {
                                var res = J$.W(4140905, 'res', J$.M(4140897, J$.G(4140881, J$.R(4140873, 'this', this, false, false), 'conv'), 'write', false)(J$.R(4140889, 'chunk', chunk, false, false)), res, false, false);
                                if (J$.C(219128, J$.C(219120, J$.R(4140913, 'res', res, false, false)) ? J$.G(4140929, J$.R(4140921, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(4140953, J$.R(4140937, 'this', this, false, false), 'push', false)(J$.R(4140945, 'res', res, false, false));
                                J$.F(4140969, J$.R(4140961, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(4141001, 'e', e, false, false, true);
                                J$.F(4140993, J$.R(4140977, 'done', done, false, false), false)(J$.R(4140985, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(4142713, J$e);
                        } finally {
                            if (J$.Fr(4142721))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4141257, J$.G(4141081, J$.R(4141073, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype'), '_flush', J$.T(4141249, function (done) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(4141217, arguments.callee, this, arguments);
                            arguments = J$.N(4141225, 'arguments', arguments, true, false, false);
                            done = J$.N(4141233, 'done', done, true, false, false);
                            J$.N(4141241, 'res', res, false, false, false);
                            try {
                                var res = J$.W(4141113, 'res', J$.M(4141105, J$.G(4141097, J$.R(4141089, 'this', this, false, false), 'conv'), 'end', false)(), res, false, false);
                                if (J$.C(219144, J$.C(219136, J$.R(4141121, 'res', res, false, false)) ? J$.G(4141137, J$.R(4141129, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(4141161, J$.R(4141145, 'this', this, false, false), 'push', false)(J$.R(4141153, 'res', res, false, false));
                                J$.F(4141177, J$.R(4141169, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(4141209, 'e', e, false, false, true);
                                J$.F(4141201, J$.R(4141185, 'done', done, false, false), false)(J$.R(4141193, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(4142729, J$e);
                        } finally {
                            if (J$.Fr(4142737))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4141561, J$.G(4141273, J$.R(4141265, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype'), 'collect', J$.T(4141553, function (cb) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(4141521, arguments.callee, this, arguments);
                            arguments = J$.N(4141529, 'arguments', arguments, true, false, false);
                            cb = J$.N(4141537, 'cb', cb, true, false, false);
                            J$.N(4141545, 'chunks', chunks, false, false, false);
                            var chunks = J$.W(4141289, 'chunks', J$.T(4141281, [], 10, false), chunks, false, false);
                            J$.M(4141321, J$.R(4141297, 'this', this, false, false), 'on', false)(J$.T(4141305, 'error', 21, false), J$.R(4141313, 'cb', cb, false, false));
                            J$.M(4141401, J$.R(4141329, 'this', this, false, false), 'on', false)(J$.T(4141337, 'data', 21, false), J$.T(4141393, function (chunk) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(4141369, arguments.callee, this, arguments);
                                            arguments = J$.N(4141377, 'arguments', arguments, true, false, false);
                                            chunk = J$.N(4141385, 'chunk', chunk, true, false, false);
                                            J$.M(4141361, J$.R(4141345, 'chunks', chunks, false, false), 'push', false)(J$.R(4141353, 'chunk', chunk, false, false));
                                        } catch (J$e) {
                                            J$.Ex(4142745, J$e);
                                        } finally {
                                            if (J$.Fr(4142753))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(4141497, J$.R(4141409, 'this', this, false, false), 'on', false)(J$.T(4141417, 'end', 21, false), J$.T(4141489, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(4141473, arguments.callee, this, arguments);
                                            arguments = J$.N(4141481, 'arguments', arguments, true, false, false);
                                            J$.F(4141465, J$.R(4141425, 'cb', cb, false, false), false)(J$.T(4141433, null, 25, false), J$.M(4141457, J$.R(4141441, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(4141449, 'chunks', chunks, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(4142761, J$e);
                                        } finally {
                                            if (J$.Fr(4142769))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4141513, J$.R(4141505, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(4142777, J$e);
                        } finally {
                            if (J$.Fr(4142785))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4141785, J$.R(4141721, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype', J$.M(4141777, J$.I(typeof Object === 'undefined' ? Object = J$.R(4141729, 'Object', undefined, true, true) : Object = J$.R(4141729, 'Object', Object, true, true)), 'create', false)(J$.G(4141745, J$.R(4141737, 'Transform', Transform, false, true), 'prototype'), J$.T(4141769, { constructor: J$.T(4141761, { value: J$.R(4141753, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true) }, 11, false) }, 11, false)));
            J$.P(4142089, J$.G(4141801, J$.R(4141793, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), '_transform', J$.T(4142081, function (chunk, encoding, done) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(4142033, arguments.callee, this, arguments);
                            arguments = J$.N(4142041, 'arguments', arguments, true, false, false);
                            chunk = J$.N(4142049, 'chunk', chunk, true, false, false);
                            encoding = J$.N(4142057, 'encoding', encoding, true, false, false);
                            done = J$.N(4142065, 'done', done, true, false, false);
                            J$.N(4142073, 'res', res, false, false, false);
                            if (J$.C(219160, J$.U(403002, '!', J$.M(4141825, J$.R(4141809, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.R(4141817, 'chunk', chunk, false, false)))))
                                return J$.Rt(4141873, J$.F(4141865, J$.R(4141833, 'done', done, false, false), false)(J$.F(4141857, J$.I(typeof Error === 'undefined' ? Error = J$.R(4141841, 'Error', undefined, true, true) : Error = J$.R(4141841, 'Error', Error, true, true)), true)(J$.T(4141849, 'Iconv decoding stream needs buffers as its input.', 21, false))));
                            try {
                                var res = J$.W(4141913, 'res', J$.M(4141905, J$.G(4141889, J$.R(4141881, 'this', this, false, false), 'conv'), 'write', false)(J$.R(4141897, 'chunk', chunk, false, false)), res, false, false);
                                if (J$.C(219176, J$.C(219168, J$.R(4141921, 'res', res, false, false)) ? J$.G(4141937, J$.R(4141929, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(4141977, J$.R(4141945, 'this', this, false, false), 'push', false)(J$.R(4141953, 'res', res, false, false), J$.G(4141969, J$.R(4141961, 'this', this, false, false), 'encoding'));
                                J$.F(4141993, J$.R(4141985, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(4142025, 'e', e, false, false, true);
                                J$.F(4142017, J$.R(4142001, 'done', done, false, false), false)(J$.R(4142009, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(4142809, J$e);
                        } finally {
                            if (J$.Fr(4142817))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4142297, J$.G(4142105, J$.R(4142097, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), '_flush', J$.T(4142289, function (done) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(4142257, arguments.callee, this, arguments);
                            arguments = J$.N(4142265, 'arguments', arguments, true, false, false);
                            done = J$.N(4142273, 'done', done, true, false, false);
                            J$.N(4142281, 'res', res, false, false, false);
                            try {
                                var res = J$.W(4142137, 'res', J$.M(4142129, J$.G(4142121, J$.R(4142113, 'this', this, false, false), 'conv'), 'end', false)(), res, false, false);
                                if (J$.C(219192, J$.C(219184, J$.R(4142145, 'res', res, false, false)) ? J$.G(4142161, J$.R(4142153, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(4142201, J$.R(4142169, 'this', this, false, false), 'push', false)(J$.R(4142177, 'res', res, false, false), J$.G(4142193, J$.R(4142185, 'this', this, false, false), 'encoding'));
                                J$.F(4142217, J$.R(4142209, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(4142249, 'e', e, false, false, true);
                                J$.F(4142241, J$.R(4142225, 'done', done, false, false), false)(J$.R(4142233, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(4142825, J$e);
                        } finally {
                            if (J$.Fr(4142833))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4142585, J$.G(4142313, J$.R(4142305, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), 'collect', J$.T(4142577, function (cb) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(4142545, arguments.callee, this, arguments);
                            arguments = J$.N(4142553, 'arguments', arguments, true, false, false);
                            cb = J$.N(4142561, 'cb', cb, true, false, false);
                            J$.N(4142569, 'res', res, false, false, false);
                            var res = J$.W(4142329, 'res', J$.T(4142321, '', 21, false), res, false, false);
                            J$.M(4142361, J$.R(4142337, 'this', this, false, false), 'on', false)(J$.T(4142345, 'error', 21, false), J$.R(4142353, 'cb', cb, false, false));
                            J$.M(4142441, J$.R(4142369, 'this', this, false, false), 'on', false)(J$.T(4142377, 'data', 21, false), J$.T(4142433, function (chunk) {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(4142409, arguments.callee, this, arguments);
                                            arguments = J$.N(4142417, 'arguments', arguments, true, false, false);
                                            chunk = J$.N(4142425, 'chunk', chunk, true, false, false);
                                            res = J$.W(4142401, 'res', J$.B(403010, '+', J$.R(4142393, 'res', res, false, false), J$.R(4142385, 'chunk', chunk, false, false)), res, false, false);
                                        } catch (J$e) {
                                            J$.Ex(4142841, J$e);
                                        } finally {
                                            if (J$.Fr(4142849))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(4142521, J$.R(4142449, 'this', this, false, false), 'on', false)(J$.T(4142457, 'end', 21, false), J$.T(4142513, function () {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(4142497, arguments.callee, this, arguments);
                                            arguments = J$.N(4142505, 'arguments', arguments, true, false, false);
                                            J$.F(4142489, J$.R(4142465, 'cb', cb, false, false), false)(J$.T(4142473, null, 25, false), J$.R(4142481, 'res', res, false, false));
                                        } catch (J$e) {
                                            J$.Ex(4142857, J$e);
                                        } finally {
                                            if (J$.Fr(4142865))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4142537, J$.R(4142529, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(4142873, J$e);
                        } finally {
                            if (J$.Fr(4142881))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4142889, J$e);
        } finally {
            if (J$.Sr(4142897))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

