J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(226961, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/iconv-lite/lib/streams.js');
            function IconvLiteEncoderStream(conv, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(225057, arguments.callee, this, arguments);
                            arguments = J$.N(225065, 'arguments', arguments, true, false, false);
                            conv = J$.N(225073, 'conv', conv, true, false, false);
                            options = J$.N(225081, 'options', options, true, false, false);
                            J$.P(224969, J$.R(224953, 'this', this, false, false), 'conv', J$.R(224961, 'conv', conv, false, false));
                            options = J$.W(224993, 'options', J$.C(12976, J$.R(224977, 'options', options, false, false)) ? J$._() : J$.T(224985, {}, 11, false), options, false, false);
                            J$.P(225017, J$.R(225001, 'options', options, false, false), 'decodeStrings', J$.T(225009, false, 23, false));
                            J$.M(225049, J$.R(225025, 'Transform', Transform, false, true), 'call', false)(J$.R(225033, 'this', this, false, false), J$.R(225041, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(227065, J$e);
                        } finally {
                            if (J$.Fr(227073))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function IconvLiteDecoderStream(conv, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(226057, arguments.callee, this, arguments);
                            arguments = J$.N(226065, 'arguments', arguments, true, false, false);
                            conv = J$.N(226073, 'conv', conv, true, false, false);
                            options = J$.N(226081, 'options', options, true, false, false);
                            J$.P(225953, J$.R(225937, 'this', this, false, false), 'conv', J$.R(225945, 'conv', conv, false, false));
                            options = J$.W(225977, 'options', J$.C(13024, J$.R(225961, 'options', options, false, false)) ? J$._() : J$.T(225969, {}, 11, false), options, false, false);
                            J$.P(226017, J$.R(225985, 'options', options, false, false), 'encoding', J$.P(226009, J$.R(225993, 'this', this, false, false), 'encoding', J$.T(226001, 'utf8', 21, false)));
                            J$.M(226049, J$.R(226025, 'Transform', Transform, false, true), 'call', false)(J$.R(226033, 'this', this, false, false), J$.R(226041, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(227161, J$e);
                        } finally {
                            if (J$.Fr(227169))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(226969, 'Buffer', Buffer, false, false, false);
            J$.N(226977, 'Transform', Transform, false, false, false);
            IconvLiteEncoderStream = J$.N(226993, 'IconvLiteEncoderStream', J$.T(226985, IconvLiteEncoderStream, 12, false), true, false, false);
            IconvLiteDecoderStream = J$.N(227009, 'IconvLiteDecoderStream', J$.T(227001, IconvLiteDecoderStream, 12, false), true, false, false);
            J$.T(224417, 'use strict', 21, false);
            J$.F(224441, J$.I(typeof require === 'undefined' ? require = J$.R(224425, 'require', undefined, true, true) : require = J$.R(224425, 'require', require, true, true)), false)(J$.T(224433, 'core-js/modules/es.array.concat', 21, false));
            J$.F(224465, J$.I(typeof require === 'undefined' ? require = J$.R(224449, 'require', undefined, true, true) : require = J$.R(224449, 'require', require, true, true)), false)(J$.T(224457, 'core-js/modules/es.object.create', 21, false));
            var Buffer = J$.W(224537, 'Buffer', J$.G(224497, J$.F(224489, J$.I(typeof require === 'undefined' ? require = J$.R(224473, 'require', undefined, true, true) : require = J$.R(224473, 'require', require, true, true)), false)(J$.T(224481, 'buffer', 21, false)), 'Buffer'), Buffer, false, true), Transform = J$.W(224545, 'Transform', J$.G(224529, J$.F(224521, J$.I(typeof require === 'undefined' ? require = J$.R(224505, 'require', undefined, true, true) : require = J$.R(224505, 'require', require, true, true)), false)(J$.T(224513, 'stream', 21, false)), 'Transform'), Transform, false, true);
            J$.P(224945, J$.I(typeof module === 'undefined' ? module = J$.R(224553, 'module', undefined, true, true) : module = J$.R(224553, 'module', module, true, true)), 'exports', J$.T(224937, function (iconv) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(224913, arguments.callee, this, arguments);
                            arguments = J$.N(224921, 'arguments', arguments, true, false, false);
                            iconv = J$.N(224929, 'iconv', iconv, true, false, false);
                            J$.P(224673, J$.R(224561, 'iconv', iconv, false, false), 'encodeStream', J$.T(224665, function encodeStream(encoding, options) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(224633, arguments.callee, this, arguments);
                                            arguments = J$.N(224641, 'arguments', arguments, true, false, false);
                                            encoding = J$.N(224649, 'encoding', encoding, true, false, false);
                                            options = J$.N(224657, 'options', options, true, false, false);
                                            return J$.Rt(224625, J$.F(224617, J$.R(224569, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), true)(J$.M(224601, J$.R(224577, 'iconv', iconv, false, false), 'getEncoder', false)(J$.R(224585, 'encoding', encoding, false, false), J$.R(224593, 'options', options, false, false)), J$.R(224609, 'options', options, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(227017, J$e);
                                        } finally {
                                            if (J$.Fr(227025))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(224793, J$.R(224681, 'iconv', iconv, false, false), 'decodeStream', J$.T(224785, function decodeStream(encoding, options) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(224753, arguments.callee, this, arguments);
                                            arguments = J$.N(224761, 'arguments', arguments, true, false, false);
                                            encoding = J$.N(224769, 'encoding', encoding, true, false, false);
                                            options = J$.N(224777, 'options', options, true, false, false);
                                            return J$.Rt(224745, J$.F(224737, J$.R(224689, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), true)(J$.M(224721, J$.R(224697, 'iconv', iconv, false, false), 'getDecoder', false)(J$.R(224705, 'encoding', encoding, false, false), J$.R(224713, 'options', options, false, false)), J$.R(224729, 'options', options, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(227033, J$e);
                                        } finally {
                                            if (J$.Fr(227041))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(224817, J$.R(224801, 'iconv', iconv, false, false), 'supportsStreams', J$.T(224809, true, 23, false));
                            J$.P(224841, J$.R(224825, 'iconv', iconv, false, false), 'IconvLiteEncoderStream', J$.R(224833, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true));
                            J$.P(224865, J$.R(224849, 'iconv', iconv, false, false), 'IconvLiteDecoderStream', J$.R(224857, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true));
                            J$.P(224905, J$.R(224873, 'iconv', iconv, false, false), '_collect', J$.G(224897, J$.G(224889, J$.R(224881, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), 'collect'));
                        } catch (J$e) {
                            J$.Ex(227049, J$e);
                        } finally {
                            if (J$.Fr(227057))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(225153, J$.R(225089, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype', J$.M(225145, J$.I(typeof Object === 'undefined' ? Object = J$.R(225097, 'Object', undefined, true, true) : Object = J$.R(225097, 'Object', Object, true, true)), 'create', false)(J$.G(225113, J$.R(225105, 'Transform', Transform, false, true), 'prototype'), J$.T(225137, { constructor: J$.T(225129, { value: J$.R(225121, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true) }, 11, false) }, 11, false)));
            J$.P(225433, J$.G(225169, J$.R(225161, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype'), '_transform', J$.T(225425, function (chunk, encoding, done) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(225377, arguments.callee, this, arguments);
                            arguments = J$.N(225385, 'arguments', arguments, true, false, false);
                            chunk = J$.N(225393, 'chunk', chunk, true, false, false);
                            encoding = J$.N(225401, 'encoding', encoding, true, false, false);
                            done = J$.N(225409, 'done', done, true, false, false);
                            J$.N(225417, 'res', res, false, false, false);
                            if (J$.C(12984, J$.B(20066, '!=', J$.U(20058, 'typeof', J$.R(225177, 'chunk', chunk, false, false)), J$.T(225185, 'string', 21, false))))
                                return J$.Rt(225233, J$.F(225225, J$.R(225193, 'done', done, false, false), false)(J$.F(225217, J$.I(typeof Error === 'undefined' ? Error = J$.R(225201, 'Error', undefined, true, true) : Error = J$.R(225201, 'Error', Error, true, true)), true)(J$.T(225209, 'Iconv encoding stream needs strings as its input.', 21, false))));
                            try {
                                var res = J$.W(225273, 'res', J$.M(225265, J$.G(225249, J$.R(225241, 'this', this, false, false), 'conv'), 'write', false)(J$.R(225257, 'chunk', chunk, false, false)), res, false, false);
                                if (J$.C(13000, J$.C(12992, J$.R(225281, 'res', res, false, false)) ? J$.G(225297, J$.R(225289, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(225321, J$.R(225305, 'this', this, false, false), 'push', false)(J$.R(225313, 'res', res, false, false));
                                J$.F(225337, J$.R(225329, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(225369, 'e', e, false, false, true);
                                J$.F(225361, J$.R(225345, 'done', done, false, false), false)(J$.R(225353, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(227081, J$e);
                        } finally {
                            if (J$.Fr(227089))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(225625, J$.G(225449, J$.R(225441, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype'), '_flush', J$.T(225617, function (done) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(225585, arguments.callee, this, arguments);
                            arguments = J$.N(225593, 'arguments', arguments, true, false, false);
                            done = J$.N(225601, 'done', done, true, false, false);
                            J$.N(225609, 'res', res, false, false, false);
                            try {
                                var res = J$.W(225481, 'res', J$.M(225473, J$.G(225465, J$.R(225457, 'this', this, false, false), 'conv'), 'end', false)(), res, false, false);
                                if (J$.C(13016, J$.C(13008, J$.R(225489, 'res', res, false, false)) ? J$.G(225505, J$.R(225497, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(225529, J$.R(225513, 'this', this, false, false), 'push', false)(J$.R(225521, 'res', res, false, false));
                                J$.F(225545, J$.R(225537, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(225577, 'e', e, false, false, true);
                                J$.F(225569, J$.R(225553, 'done', done, false, false), false)(J$.R(225561, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(227097, J$e);
                        } finally {
                            if (J$.Fr(227105))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(225929, J$.G(225641, J$.R(225633, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype'), 'collect', J$.T(225921, function (cb) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(225889, arguments.callee, this, arguments);
                            arguments = J$.N(225897, 'arguments', arguments, true, false, false);
                            cb = J$.N(225905, 'cb', cb, true, false, false);
                            J$.N(225913, 'chunks', chunks, false, false, false);
                            var chunks = J$.W(225657, 'chunks', J$.T(225649, [], 10, false), chunks, false, false);
                            J$.M(225689, J$.R(225665, 'this', this, false, false), 'on', false)(J$.T(225673, 'error', 21, false), J$.R(225681, 'cb', cb, false, false));
                            J$.M(225769, J$.R(225697, 'this', this, false, false), 'on', false)(J$.T(225705, 'data', 21, false), J$.T(225761, function (chunk) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(225737, arguments.callee, this, arguments);
                                            arguments = J$.N(225745, 'arguments', arguments, true, false, false);
                                            chunk = J$.N(225753, 'chunk', chunk, true, false, false);
                                            J$.M(225729, J$.R(225713, 'chunks', chunks, false, false), 'push', false)(J$.R(225721, 'chunk', chunk, false, false));
                                        } catch (J$e) {
                                            J$.Ex(227113, J$e);
                                        } finally {
                                            if (J$.Fr(227121))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(225865, J$.R(225777, 'this', this, false, false), 'on', false)(J$.T(225785, 'end', 21, false), J$.T(225857, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(225841, arguments.callee, this, arguments);
                                            arguments = J$.N(225849, 'arguments', arguments, true, false, false);
                                            J$.F(225833, J$.R(225793, 'cb', cb, false, false), false)(J$.T(225801, null, 25, false), J$.M(225825, J$.R(225809, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(225817, 'chunks', chunks, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(227129, J$e);
                                        } finally {
                                            if (J$.Fr(227137))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(225881, J$.R(225873, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(227145, J$e);
                        } finally {
                            if (J$.Fr(227153))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(226153, J$.R(226089, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype', J$.M(226145, J$.I(typeof Object === 'undefined' ? Object = J$.R(226097, 'Object', undefined, true, true) : Object = J$.R(226097, 'Object', Object, true, true)), 'create', false)(J$.G(226113, J$.R(226105, 'Transform', Transform, false, true), 'prototype'), J$.T(226137, { constructor: J$.T(226129, { value: J$.R(226121, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true) }, 11, false) }, 11, false)));
            J$.P(226457, J$.G(226169, J$.R(226161, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), '_transform', J$.T(226449, function (chunk, encoding, done) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(226401, arguments.callee, this, arguments);
                            arguments = J$.N(226409, 'arguments', arguments, true, false, false);
                            chunk = J$.N(226417, 'chunk', chunk, true, false, false);
                            encoding = J$.N(226425, 'encoding', encoding, true, false, false);
                            done = J$.N(226433, 'done', done, true, false, false);
                            J$.N(226441, 'res', res, false, false, false);
                            if (J$.C(13032, J$.U(20074, '!', J$.M(226193, J$.R(226177, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.R(226185, 'chunk', chunk, false, false)))))
                                return J$.Rt(226241, J$.F(226233, J$.R(226201, 'done', done, false, false), false)(J$.F(226225, J$.I(typeof Error === 'undefined' ? Error = J$.R(226209, 'Error', undefined, true, true) : Error = J$.R(226209, 'Error', Error, true, true)), true)(J$.T(226217, 'Iconv decoding stream needs buffers as its input.', 21, false))));
                            try {
                                var res = J$.W(226281, 'res', J$.M(226273, J$.G(226257, J$.R(226249, 'this', this, false, false), 'conv'), 'write', false)(J$.R(226265, 'chunk', chunk, false, false)), res, false, false);
                                if (J$.C(13048, J$.C(13040, J$.R(226289, 'res', res, false, false)) ? J$.G(226305, J$.R(226297, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(226345, J$.R(226313, 'this', this, false, false), 'push', false)(J$.R(226321, 'res', res, false, false), J$.G(226337, J$.R(226329, 'this', this, false, false), 'encoding'));
                                J$.F(226361, J$.R(226353, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(226393, 'e', e, false, false, true);
                                J$.F(226385, J$.R(226369, 'done', done, false, false), false)(J$.R(226377, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(227177, J$e);
                        } finally {
                            if (J$.Fr(227185))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(226665, J$.G(226473, J$.R(226465, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), '_flush', J$.T(226657, function (done) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(226625, arguments.callee, this, arguments);
                            arguments = J$.N(226633, 'arguments', arguments, true, false, false);
                            done = J$.N(226641, 'done', done, true, false, false);
                            J$.N(226649, 'res', res, false, false, false);
                            try {
                                var res = J$.W(226505, 'res', J$.M(226497, J$.G(226489, J$.R(226481, 'this', this, false, false), 'conv'), 'end', false)(), res, false, false);
                                if (J$.C(13064, J$.C(13056, J$.R(226513, 'res', res, false, false)) ? J$.G(226529, J$.R(226521, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(226569, J$.R(226537, 'this', this, false, false), 'push', false)(J$.R(226545, 'res', res, false, false), J$.G(226561, J$.R(226553, 'this', this, false, false), 'encoding'));
                                J$.F(226585, J$.R(226577, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(226617, 'e', e, false, false, true);
                                J$.F(226609, J$.R(226593, 'done', done, false, false), false)(J$.R(226601, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(227193, J$e);
                        } finally {
                            if (J$.Fr(227201))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(226953, J$.G(226681, J$.R(226673, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), 'collect', J$.T(226945, function (cb) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(226913, arguments.callee, this, arguments);
                            arguments = J$.N(226921, 'arguments', arguments, true, false, false);
                            cb = J$.N(226929, 'cb', cb, true, false, false);
                            J$.N(226937, 'res', res, false, false, false);
                            var res = J$.W(226697, 'res', J$.T(226689, '', 21, false), res, false, false);
                            J$.M(226729, J$.R(226705, 'this', this, false, false), 'on', false)(J$.T(226713, 'error', 21, false), J$.R(226721, 'cb', cb, false, false));
                            J$.M(226809, J$.R(226737, 'this', this, false, false), 'on', false)(J$.T(226745, 'data', 21, false), J$.T(226801, function (chunk) {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(226777, arguments.callee, this, arguments);
                                            arguments = J$.N(226785, 'arguments', arguments, true, false, false);
                                            chunk = J$.N(226793, 'chunk', chunk, true, false, false);
                                            res = J$.W(226769, 'res', J$.B(20082, '+', J$.R(226761, 'res', res, false, false), J$.R(226753, 'chunk', chunk, false, false)), res, false, false);
                                        } catch (J$e) {
                                            J$.Ex(227209, J$e);
                                        } finally {
                                            if (J$.Fr(227217))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(226889, J$.R(226817, 'this', this, false, false), 'on', false)(J$.T(226825, 'end', 21, false), J$.T(226881, function () {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(226865, arguments.callee, this, arguments);
                                            arguments = J$.N(226873, 'arguments', arguments, true, false, false);
                                            J$.F(226857, J$.R(226833, 'cb', cb, false, false), false)(J$.T(226841, null, 25, false), J$.R(226849, 'res', res, false, false));
                                        } catch (J$e) {
                                            J$.Ex(227225, J$e);
                                        } finally {
                                            if (J$.Fr(227233))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(226905, J$.R(226897, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(227241, J$e);
                        } finally {
                            if (J$.Fr(227249))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(227257, J$e);
        } finally {
            if (J$.Sr(227265))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

