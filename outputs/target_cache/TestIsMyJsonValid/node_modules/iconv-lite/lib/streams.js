J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(184089, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/iconv-lite/lib/streams.js');
            function IconvLiteEncoderStream(conv, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(182185, arguments.callee, this, arguments);
                            arguments = J$.N(182193, 'arguments', arguments, true, false, false);
                            conv = J$.N(182201, 'conv', conv, true, false, false);
                            options = J$.N(182209, 'options', options, true, false, false);
                            J$.P(182097, J$.R(182081, 'this', this, false, false), 'conv', J$.R(182089, 'conv', conv, false, false));
                            options = J$.W(182121, 'options', J$.C(10704, J$.R(182105, 'options', options, false, false)) ? J$._() : J$.T(182113, {}, 11, false), options, false, false);
                            J$.P(182145, J$.R(182129, 'options', options, false, false), 'decodeStrings', J$.T(182137, false, 23, false));
                            J$.M(182177, J$.R(182153, 'Transform', Transform, false, true), 'call', false)(J$.R(182161, 'this', this, false, false), J$.R(182169, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(184193, J$e);
                        } finally {
                            if (J$.Fr(184201))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function IconvLiteDecoderStream(conv, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(183185, arguments.callee, this, arguments);
                            arguments = J$.N(183193, 'arguments', arguments, true, false, false);
                            conv = J$.N(183201, 'conv', conv, true, false, false);
                            options = J$.N(183209, 'options', options, true, false, false);
                            J$.P(183081, J$.R(183065, 'this', this, false, false), 'conv', J$.R(183073, 'conv', conv, false, false));
                            options = J$.W(183105, 'options', J$.C(10752, J$.R(183089, 'options', options, false, false)) ? J$._() : J$.T(183097, {}, 11, false), options, false, false);
                            J$.P(183145, J$.R(183113, 'options', options, false, false), 'encoding', J$.P(183137, J$.R(183121, 'this', this, false, false), 'encoding', J$.T(183129, 'utf8', 21, false)));
                            J$.M(183177, J$.R(183153, 'Transform', Transform, false, true), 'call', false)(J$.R(183161, 'this', this, false, false), J$.R(183169, 'options', options, false, false));
                        } catch (J$e) {
                            J$.Ex(184289, J$e);
                        } finally {
                            if (J$.Fr(184297))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(184097, 'Buffer', Buffer, false, false, false);
            J$.N(184105, 'Transform', Transform, false, false, false);
            IconvLiteEncoderStream = J$.N(184121, 'IconvLiteEncoderStream', J$.T(184113, IconvLiteEncoderStream, 12, false), true, false, false);
            IconvLiteDecoderStream = J$.N(184137, 'IconvLiteDecoderStream', J$.T(184129, IconvLiteDecoderStream, 12, false), true, false, false);
            J$.T(181545, 'use strict', 21, false);
            J$.F(181569, J$.I(typeof require === 'undefined' ? require = J$.R(181553, 'require', undefined, true, true) : require = J$.R(181553, 'require', require, true, true)), false)(J$.T(181561, 'core-js/modules/es.array.concat', 21, false));
            J$.F(181593, J$.I(typeof require === 'undefined' ? require = J$.R(181577, 'require', undefined, true, true) : require = J$.R(181577, 'require', require, true, true)), false)(J$.T(181585, 'core-js/modules/es.object.create', 21, false));
            var Buffer = J$.W(181665, 'Buffer', J$.G(181625, J$.F(181617, J$.I(typeof require === 'undefined' ? require = J$.R(181601, 'require', undefined, true, true) : require = J$.R(181601, 'require', require, true, true)), false)(J$.T(181609, 'buffer', 21, false)), 'Buffer'), Buffer, false, true), Transform = J$.W(181673, 'Transform', J$.G(181657, J$.F(181649, J$.I(typeof require === 'undefined' ? require = J$.R(181633, 'require', undefined, true, true) : require = J$.R(181633, 'require', require, true, true)), false)(J$.T(181641, 'stream', 21, false)), 'Transform'), Transform, false, true);
            J$.P(182073, J$.I(typeof module === 'undefined' ? module = J$.R(181681, 'module', undefined, true, true) : module = J$.R(181681, 'module', module, true, true)), 'exports', J$.T(182065, function (iconv) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(182041, arguments.callee, this, arguments);
                            arguments = J$.N(182049, 'arguments', arguments, true, false, false);
                            iconv = J$.N(182057, 'iconv', iconv, true, false, false);
                            J$.P(181801, J$.R(181689, 'iconv', iconv, false, false), 'encodeStream', J$.T(181793, function encodeStream(encoding, options) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(181761, arguments.callee, this, arguments);
                                            arguments = J$.N(181769, 'arguments', arguments, true, false, false);
                                            encoding = J$.N(181777, 'encoding', encoding, true, false, false);
                                            options = J$.N(181785, 'options', options, true, false, false);
                                            return J$.Rt(181753, J$.F(181745, J$.R(181697, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), true)(J$.M(181729, J$.R(181705, 'iconv', iconv, false, false), 'getEncoder', false)(J$.R(181713, 'encoding', encoding, false, false), J$.R(181721, 'options', options, false, false)), J$.R(181737, 'options', options, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(184145, J$e);
                                        } finally {
                                            if (J$.Fr(184153))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(181921, J$.R(181809, 'iconv', iconv, false, false), 'decodeStream', J$.T(181913, function decodeStream(encoding, options) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(181881, arguments.callee, this, arguments);
                                            arguments = J$.N(181889, 'arguments', arguments, true, false, false);
                                            encoding = J$.N(181897, 'encoding', encoding, true, false, false);
                                            options = J$.N(181905, 'options', options, true, false, false);
                                            return J$.Rt(181873, J$.F(181865, J$.R(181817, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), true)(J$.M(181849, J$.R(181825, 'iconv', iconv, false, false), 'getDecoder', false)(J$.R(181833, 'encoding', encoding, false, false), J$.R(181841, 'options', options, false, false)), J$.R(181857, 'options', options, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(184161, J$e);
                                        } finally {
                                            if (J$.Fr(184169))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(181945, J$.R(181929, 'iconv', iconv, false, false), 'supportsStreams', J$.T(181937, true, 23, false));
                            J$.P(181969, J$.R(181953, 'iconv', iconv, false, false), 'IconvLiteEncoderStream', J$.R(181961, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true));
                            J$.P(181993, J$.R(181977, 'iconv', iconv, false, false), 'IconvLiteDecoderStream', J$.R(181985, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true));
                            J$.P(182033, J$.R(182001, 'iconv', iconv, false, false), '_collect', J$.G(182025, J$.G(182017, J$.R(182009, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), 'collect'));
                        } catch (J$e) {
                            J$.Ex(184177, J$e);
                        } finally {
                            if (J$.Fr(184185))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(182281, J$.R(182217, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype', J$.M(182273, J$.I(typeof Object === 'undefined' ? Object = J$.R(182225, 'Object', undefined, true, true) : Object = J$.R(182225, 'Object', Object, true, true)), 'create', false)(J$.G(182241, J$.R(182233, 'Transform', Transform, false, true), 'prototype'), J$.T(182265, { constructor: J$.T(182257, { value: J$.R(182249, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true) }, 11, false) }, 11, false)));
            J$.P(182561, J$.G(182297, J$.R(182289, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype'), '_transform', J$.T(182553, function (chunk, encoding, done) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(182505, arguments.callee, this, arguments);
                            arguments = J$.N(182513, 'arguments', arguments, true, false, false);
                            chunk = J$.N(182521, 'chunk', chunk, true, false, false);
                            encoding = J$.N(182529, 'encoding', encoding, true, false, false);
                            done = J$.N(182537, 'done', done, true, false, false);
                            J$.N(182545, 'res', res, false, false, false);
                            if (J$.C(10712, J$.B(16946, '!=', J$.U(16938, 'typeof', J$.R(182305, 'chunk', chunk, false, false)), J$.T(182313, 'string', 21, false))))
                                return J$.Rt(182361, J$.F(182353, J$.R(182321, 'done', done, false, false), false)(J$.F(182345, J$.I(typeof Error === 'undefined' ? Error = J$.R(182329, 'Error', undefined, true, true) : Error = J$.R(182329, 'Error', Error, true, true)), true)(J$.T(182337, 'Iconv encoding stream needs strings as its input.', 21, false))));
                            try {
                                var res = J$.W(182401, 'res', J$.M(182393, J$.G(182377, J$.R(182369, 'this', this, false, false), 'conv'), 'write', false)(J$.R(182385, 'chunk', chunk, false, false)), res, false, false);
                                if (J$.C(10728, J$.C(10720, J$.R(182409, 'res', res, false, false)) ? J$.G(182425, J$.R(182417, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(182449, J$.R(182433, 'this', this, false, false), 'push', false)(J$.R(182441, 'res', res, false, false));
                                J$.F(182465, J$.R(182457, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(182497, 'e', e, false, false, true);
                                J$.F(182489, J$.R(182473, 'done', done, false, false), false)(J$.R(182481, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(184209, J$e);
                        } finally {
                            if (J$.Fr(184217))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(182753, J$.G(182577, J$.R(182569, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype'), '_flush', J$.T(182745, function (done) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(182713, arguments.callee, this, arguments);
                            arguments = J$.N(182721, 'arguments', arguments, true, false, false);
                            done = J$.N(182729, 'done', done, true, false, false);
                            J$.N(182737, 'res', res, false, false, false);
                            try {
                                var res = J$.W(182609, 'res', J$.M(182601, J$.G(182593, J$.R(182585, 'this', this, false, false), 'conv'), 'end', false)(), res, false, false);
                                if (J$.C(10744, J$.C(10736, J$.R(182617, 'res', res, false, false)) ? J$.G(182633, J$.R(182625, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(182657, J$.R(182641, 'this', this, false, false), 'push', false)(J$.R(182649, 'res', res, false, false));
                                J$.F(182673, J$.R(182665, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(182705, 'e', e, false, false, true);
                                J$.F(182697, J$.R(182681, 'done', done, false, false), false)(J$.R(182689, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(184225, J$e);
                        } finally {
                            if (J$.Fr(184233))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(183057, J$.G(182769, J$.R(182761, 'IconvLiteEncoderStream', IconvLiteEncoderStream, false, true), 'prototype'), 'collect', J$.T(183049, function (cb) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(183017, arguments.callee, this, arguments);
                            arguments = J$.N(183025, 'arguments', arguments, true, false, false);
                            cb = J$.N(183033, 'cb', cb, true, false, false);
                            J$.N(183041, 'chunks', chunks, false, false, false);
                            var chunks = J$.W(182785, 'chunks', J$.T(182777, [], 10, false), chunks, false, false);
                            J$.M(182817, J$.R(182793, 'this', this, false, false), 'on', false)(J$.T(182801, 'error', 21, false), J$.R(182809, 'cb', cb, false, false));
                            J$.M(182897, J$.R(182825, 'this', this, false, false), 'on', false)(J$.T(182833, 'data', 21, false), J$.T(182889, function (chunk) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(182865, arguments.callee, this, arguments);
                                            arguments = J$.N(182873, 'arguments', arguments, true, false, false);
                                            chunk = J$.N(182881, 'chunk', chunk, true, false, false);
                                            J$.M(182857, J$.R(182841, 'chunks', chunks, false, false), 'push', false)(J$.R(182849, 'chunk', chunk, false, false));
                                        } catch (J$e) {
                                            J$.Ex(184241, J$e);
                                        } finally {
                                            if (J$.Fr(184249))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(182993, J$.R(182905, 'this', this, false, false), 'on', false)(J$.T(182913, 'end', 21, false), J$.T(182985, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(182969, arguments.callee, this, arguments);
                                            arguments = J$.N(182977, 'arguments', arguments, true, false, false);
                                            J$.F(182961, J$.R(182921, 'cb', cb, false, false), false)(J$.T(182929, null, 25, false), J$.M(182953, J$.R(182937, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(182945, 'chunks', chunks, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(184257, J$e);
                                        } finally {
                                            if (J$.Fr(184265))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(183009, J$.R(183001, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(184273, J$e);
                        } finally {
                            if (J$.Fr(184281))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(183281, J$.R(183217, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype', J$.M(183273, J$.I(typeof Object === 'undefined' ? Object = J$.R(183225, 'Object', undefined, true, true) : Object = J$.R(183225, 'Object', Object, true, true)), 'create', false)(J$.G(183241, J$.R(183233, 'Transform', Transform, false, true), 'prototype'), J$.T(183265, { constructor: J$.T(183257, { value: J$.R(183249, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true) }, 11, false) }, 11, false)));
            J$.P(183585, J$.G(183297, J$.R(183289, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), '_transform', J$.T(183577, function (chunk, encoding, done) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(183529, arguments.callee, this, arguments);
                            arguments = J$.N(183537, 'arguments', arguments, true, false, false);
                            chunk = J$.N(183545, 'chunk', chunk, true, false, false);
                            encoding = J$.N(183553, 'encoding', encoding, true, false, false);
                            done = J$.N(183561, 'done', done, true, false, false);
                            J$.N(183569, 'res', res, false, false, false);
                            if (J$.C(10760, J$.U(16954, '!', J$.M(183321, J$.R(183305, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.R(183313, 'chunk', chunk, false, false)))))
                                return J$.Rt(183369, J$.F(183361, J$.R(183329, 'done', done, false, false), false)(J$.F(183353, J$.I(typeof Error === 'undefined' ? Error = J$.R(183337, 'Error', undefined, true, true) : Error = J$.R(183337, 'Error', Error, true, true)), true)(J$.T(183345, 'Iconv decoding stream needs buffers as its input.', 21, false))));
                            try {
                                var res = J$.W(183409, 'res', J$.M(183401, J$.G(183385, J$.R(183377, 'this', this, false, false), 'conv'), 'write', false)(J$.R(183393, 'chunk', chunk, false, false)), res, false, false);
                                if (J$.C(10776, J$.C(10768, J$.R(183417, 'res', res, false, false)) ? J$.G(183433, J$.R(183425, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(183473, J$.R(183441, 'this', this, false, false), 'push', false)(J$.R(183449, 'res', res, false, false), J$.G(183465, J$.R(183457, 'this', this, false, false), 'encoding'));
                                J$.F(183489, J$.R(183481, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(183521, 'e', e, false, false, true);
                                J$.F(183513, J$.R(183497, 'done', done, false, false), false)(J$.R(183505, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(184305, J$e);
                        } finally {
                            if (J$.Fr(184313))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(183793, J$.G(183601, J$.R(183593, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), '_flush', J$.T(183785, function (done) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(183753, arguments.callee, this, arguments);
                            arguments = J$.N(183761, 'arguments', arguments, true, false, false);
                            done = J$.N(183769, 'done', done, true, false, false);
                            J$.N(183777, 'res', res, false, false, false);
                            try {
                                var res = J$.W(183633, 'res', J$.M(183625, J$.G(183617, J$.R(183609, 'this', this, false, false), 'conv'), 'end', false)(), res, false, false);
                                if (J$.C(10792, J$.C(10784, J$.R(183641, 'res', res, false, false)) ? J$.G(183657, J$.R(183649, 'res', res, false, false), 'length') : J$._()))
                                    J$.M(183697, J$.R(183665, 'this', this, false, false), 'push', false)(J$.R(183673, 'res', res, false, false), J$.G(183689, J$.R(183681, 'this', this, false, false), 'encoding'));
                                J$.F(183713, J$.R(183705, 'done', done, false, false), false)();
                            } catch (e) {
                                J$.N(183745, 'e', e, false, false, true);
                                J$.F(183737, J$.R(183721, 'done', done, false, false), false)(J$.R(183729, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(184321, J$e);
                        } finally {
                            if (J$.Fr(184329))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(184081, J$.G(183809, J$.R(183801, 'IconvLiteDecoderStream', IconvLiteDecoderStream, false, true), 'prototype'), 'collect', J$.T(184073, function (cb) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(184041, arguments.callee, this, arguments);
                            arguments = J$.N(184049, 'arguments', arguments, true, false, false);
                            cb = J$.N(184057, 'cb', cb, true, false, false);
                            J$.N(184065, 'res', res, false, false, false);
                            var res = J$.W(183825, 'res', J$.T(183817, '', 21, false), res, false, false);
                            J$.M(183857, J$.R(183833, 'this', this, false, false), 'on', false)(J$.T(183841, 'error', 21, false), J$.R(183849, 'cb', cb, false, false));
                            J$.M(183937, J$.R(183865, 'this', this, false, false), 'on', false)(J$.T(183873, 'data', 21, false), J$.T(183929, function (chunk) {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(183905, arguments.callee, this, arguments);
                                            arguments = J$.N(183913, 'arguments', arguments, true, false, false);
                                            chunk = J$.N(183921, 'chunk', chunk, true, false, false);
                                            res = J$.W(183897, 'res', J$.B(16962, '+', J$.R(183889, 'res', res, false, false), J$.R(183881, 'chunk', chunk, false, false)), res, false, false);
                                        } catch (J$e) {
                                            J$.Ex(184337, J$e);
                                        } finally {
                                            if (J$.Fr(184345))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(184017, J$.R(183945, 'this', this, false, false), 'on', false)(J$.T(183953, 'end', 21, false), J$.T(184009, function () {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(183993, arguments.callee, this, arguments);
                                            arguments = J$.N(184001, 'arguments', arguments, true, false, false);
                                            J$.F(183985, J$.R(183961, 'cb', cb, false, false), false)(J$.T(183969, null, 25, false), J$.R(183977, 'res', res, false, false));
                                        } catch (J$e) {
                                            J$.Ex(184353, J$e);
                                        } finally {
                                            if (J$.Fr(184361))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(184033, J$.R(184025, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(184369, J$e);
                        } finally {
                            if (J$.Fr(184377))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(184385, J$e);
        } finally {
            if (J$.Sr(184393))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

