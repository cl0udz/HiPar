J$.noInstrEval = false;
jalangiLabel10:
    while (true) {
        try {
            J$.Se(181305, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/iconv-lite/lib/index.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(178649, arguments.callee, this, arguments);
                            arguments = J$.N(178657, 'arguments', arguments, true, false, false);
                            obj = J$.N(178665, 'obj', obj, true, false, false);
                            if (J$.C(10472, J$.C(10432, J$.B(16690, '===', J$.U(16682, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(178385, 'Symbol', undefined, true, true) : Symbol = J$.R(178385, 'Symbol', Symbol, true, true))), J$.T(178393, 'function', 21, false))) ? J$.B(16706, '===', J$.U(16698, 'typeof', J$.G(178409, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(178401, 'Symbol', undefined, true, true) : Symbol = J$.R(178401, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(178417, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(178473, '_typeof', J$.T(178465, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(178441, arguments.callee, this, arguments);
                                                arguments = J$.N(178449, 'arguments', arguments, true, false, false);
                                                obj = J$.N(178457, 'obj', obj, true, false, false);
                                                return J$.Rt(178433, J$.U(16714, 'typeof', J$.R(178425, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(181369, J$e);
                                            } finally {
                                                if (J$.Fr(181377))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(178609, '_typeof', J$.T(178601, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(178577, arguments.callee, this, arguments);
                                                arguments = J$.N(178585, 'arguments', arguments, true, false, false);
                                                obj = J$.N(178593, 'obj', obj, true, false, false);
                                                return J$.Rt(178569, J$.C(10464, J$.C(10456, J$.C(10448, J$.C(10440, J$.R(178481, 'obj', obj, false, false)) ? J$.B(16730, '===', J$.U(16722, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(178489, 'Symbol', undefined, true, true) : Symbol = J$.R(178489, 'Symbol', Symbol, true, true))), J$.T(178497, 'function', 21, false)) : J$._()) ? J$.B(16738, '===', J$.G(178513, J$.R(178505, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(178521, 'Symbol', undefined, true, true) : Symbol = J$.R(178521, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(16746, '!==', J$.R(178529, 'obj', obj, false, false), J$.G(178545, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(178537, 'Symbol', undefined, true, true) : Symbol = J$.R(178537, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(178553, 'symbol', 21, false) : J$.U(16754, 'typeof', J$.R(178561, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(181385, J$e);
                                            } finally {
                                                if (J$.Fr(181393))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(178641, J$.F(178633, J$.R(178617, '_typeof', _typeof, false, true), false)(J$.R(178625, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(181401, J$e);
                        } finally {
                            if (J$.Fr(181409))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(181321, '_typeof', J$.T(181313, _typeof, 12, false), true, false, false);
            J$.N(181329, 'Buffer', Buffer, false, false, false);
            J$.N(181337, 'bomHandling', bomHandling, false, false, false);
            J$.N(181345, 'iconv', iconv, false, false, false);
            J$.N(181353, 'nodeVer', nodeVer, false, false, false);
            J$.N(181361, 'nodeVerArr', nodeVerArr, false, false, false);
            J$.T(178065, 'use strict', 21, false);
            J$.F(178089, J$.I(typeof require === 'undefined' ? require = J$.R(178073, 'require', undefined, true, true) : require = J$.R(178073, 'require', require, true, true)), false)(J$.T(178081, 'core-js/modules/es.symbol', 21, false));
            J$.F(178113, J$.I(typeof require === 'undefined' ? require = J$.R(178097, 'require', undefined, true, true) : require = J$.R(178097, 'require', require, true, true)), false)(J$.T(178105, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(178137, J$.I(typeof require === 'undefined' ? require = J$.R(178121, 'require', undefined, true, true) : require = J$.R(178121, 'require', require, true, true)), false)(J$.T(178129, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(178161, J$.I(typeof require === 'undefined' ? require = J$.R(178145, 'require', undefined, true, true) : require = J$.R(178145, 'require', require, true, true)), false)(J$.T(178153, 'core-js/modules/es.array.concat', 21, false));
            J$.F(178185, J$.I(typeof require === 'undefined' ? require = J$.R(178169, 'require', undefined, true, true) : require = J$.R(178169, 'require', require, true, true)), false)(J$.T(178177, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(178209, J$.I(typeof require === 'undefined' ? require = J$.R(178193, 'require', undefined, true, true) : require = J$.R(178193, 'require', require, true, true)), false)(J$.T(178201, 'core-js/modules/es.array.map', 21, false));
            J$.F(178233, J$.I(typeof require === 'undefined' ? require = J$.R(178217, 'require', undefined, true, true) : require = J$.R(178217, 'require', require, true, true)), false)(J$.T(178225, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(178257, J$.I(typeof require === 'undefined' ? require = J$.R(178241, 'require', undefined, true, true) : require = J$.R(178241, 'require', require, true, true)), false)(J$.T(178249, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(178281, J$.I(typeof require === 'undefined' ? require = J$.R(178265, 'require', undefined, true, true) : require = J$.R(178265, 'require', require, true, true)), false)(J$.T(178273, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(178305, J$.I(typeof require === 'undefined' ? require = J$.R(178289, 'require', undefined, true, true) : require = J$.R(178289, 'require', require, true, true)), false)(J$.T(178297, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(178329, J$.I(typeof require === 'undefined' ? require = J$.R(178313, 'require', undefined, true, true) : require = J$.R(178313, 'require', require, true, true)), false)(J$.T(178321, 'core-js/modules/es.string.replace', 21, false));
            J$.F(178353, J$.I(typeof require === 'undefined' ? require = J$.R(178337, 'require', undefined, true, true) : require = J$.R(178337, 'require', require, true, true)), false)(J$.T(178345, 'core-js/modules/es.string.split', 21, false));
            J$.F(178377, J$.I(typeof require === 'undefined' ? require = J$.R(178361, 'require', undefined, true, true) : require = J$.R(178361, 'require', require, true, true)), false)(J$.T(178369, 'core-js/modules/web.dom-collections.iterator', 21, false));
            var Buffer = J$.W(178705, 'Buffer', J$.G(178697, J$.F(178689, J$.I(typeof require === 'undefined' ? require = J$.R(178673, 'require', undefined, true, true) : require = J$.R(178673, 'require', require, true, true)), false)(J$.T(178681, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var bomHandling = J$.W(178753, 'bomHandling', J$.F(178729, J$.I(typeof require === 'undefined' ? require = J$.R(178713, 'require', undefined, true, true) : require = J$.R(178713, 'require', require, true, true)), false)(J$.T(178721, './bom-handling', 21, false)), bomHandling, false, true), iconv = J$.W(178761, 'iconv', J$.G(178745, J$.I(typeof module === 'undefined' ? module = J$.R(178737, 'module', undefined, true, true) : module = J$.R(178737, 'module', module, true, true)), 'exports'), iconv, false, true);
            J$.P(178785, J$.R(178769, 'iconv', iconv, false, true), 'encodings', J$.T(178777, null, 25, false));
            J$.P(178809, J$.R(178793, 'iconv', iconv, false, true), 'defaultCharUnicode', J$.T(178801, '\uFFFD', 21, false));
            J$.P(178833, J$.R(178817, 'iconv', iconv, false, true), 'defaultCharSingleByte', J$.T(178825, '?', 21, false));
            J$.P(179137, J$.R(178841, 'iconv', iconv, false, true), 'encode', J$.T(179129, function encode(str, encoding, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(179065, arguments.callee, this, arguments);
                            arguments = J$.N(179073, 'arguments', arguments, true, false, false);
                            str = J$.N(179081, 'str', str, true, false, false);
                            encoding = J$.N(179089, 'encoding', encoding, true, false, false);
                            options = J$.N(179097, 'options', options, true, false, false);
                            J$.N(179105, 'encoder', encoder, false, false, false);
                            J$.N(179113, 'res', res, false, false, false);
                            J$.N(179121, 'trail', trail, false, false, false);
                            str = J$.W(178873, 'str', J$.B(16762, '+', J$.T(178849, '', 21, false), J$.C(10480, J$.R(178857, 'str', str, false, false)) ? J$._() : J$.T(178865, '', 21, false)), str, false, false);
                            var encoder = J$.W(178913, 'encoder', J$.M(178905, J$.R(178881, 'iconv', iconv, false, true), 'getEncoder', false)(J$.R(178889, 'encoding', encoding, false, false), J$.R(178897, 'options', options, false, false)), encoder, false, false);
                            var res = J$.W(178945, 'res', J$.M(178937, J$.R(178921, 'encoder', encoder, false, false), 'write', false)(J$.R(178929, 'str', str, false, false)), res, false, false);
                            var trail = J$.W(178969, 'trail', J$.M(178961, J$.R(178953, 'encoder', encoder, false, false), 'end', false)(), trail, false, false);
                            return J$.Rt(179057, J$.C(10496, J$.C(10488, J$.R(178977, 'trail', trail, false, false)) ? J$.B(16770, '>', J$.G(178993, J$.R(178985, 'trail', trail, false, false), 'length'), J$.T(179001, 0, 22, false)) : J$._()) ? J$.M(179041, J$.R(179009, 'Buffer', Buffer, false, true), 'concat', false)(J$.T(179033, [
                                J$.R(179017, 'res', res, false, false),
                                J$.R(179025, 'trail', trail, false, false)
                            ], 10, false)) : J$.R(179049, 'res', res, false, false));
                        } catch (J$e) {
                            J$.Ex(181417, J$e);
                        } finally {
                            if (J$.Fr(181425))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(179497, J$.R(179145, 'iconv', iconv, false, true), 'decode', J$.T(179489, function decode(buf, encoding, options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(179425, arguments.callee, this, arguments);
                            arguments = J$.N(179433, 'arguments', arguments, true, false, false);
                            buf = J$.N(179441, 'buf', buf, true, false, false);
                            encoding = J$.N(179449, 'encoding', encoding, true, false, false);
                            options = J$.N(179457, 'options', options, true, false, false);
                            J$.N(179465, 'decoder', decoder, false, false, false);
                            J$.N(179473, 'res', res, false, false, false);
                            J$.N(179481, 'trail', trail, false, false, false);
                            if (J$.C(10520, J$.B(16786, '===', J$.U(16778, 'typeof', J$.R(179153, 'buf', buf, false, false)), J$.T(179161, 'string', 21, false)))) {
                                if (J$.C(10504, J$.U(16794, '!', J$.G(179177, J$.R(179169, 'iconv', iconv, false, true), 'skipDecodeWarning')))) {
                                    J$.M(179201, J$.I(typeof console === 'undefined' ? console = J$.R(179185, 'console', undefined, true, true) : console = J$.R(179185, 'console', console, true, true)), 'error', false)(J$.T(179193, 'Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding', 21, false));
                                    J$.P(179225, J$.R(179209, 'iconv', iconv, false, true), 'skipDecodeWarning', J$.T(179217, true, 23, false));
                                }
                                buf = J$.W(179281, 'buf', J$.M(179273, J$.R(179233, 'Buffer', Buffer, false, true), 'from', false)(J$.B(16802, '+', J$.T(179241, '', 21, false), J$.C(10512, J$.R(179249, 'buf', buf, false, false)) ? J$._() : J$.T(179257, '', 21, false)), J$.T(179265, 'binary', 21, false)), buf, false, false);
                            }
                            var decoder = J$.W(179321, 'decoder', J$.M(179313, J$.R(179289, 'iconv', iconv, false, true), 'getDecoder', false)(J$.R(179297, 'encoding', encoding, false, false), J$.R(179305, 'options', options, false, false)), decoder, false, false);
                            var res = J$.W(179353, 'res', J$.M(179345, J$.R(179329, 'decoder', decoder, false, false), 'write', false)(J$.R(179337, 'buf', buf, false, false)), res, false, false);
                            var trail = J$.W(179377, 'trail', J$.M(179369, J$.R(179361, 'decoder', decoder, false, false), 'end', false)(), trail, false, false);
                            return J$.Rt(179417, J$.C(10528, J$.R(179385, 'trail', trail, false, false)) ? J$.B(16810, '+', J$.R(179393, 'res', res, false, false), J$.R(179401, 'trail', trail, false, false)) : J$.R(179409, 'res', res, false, false));
                        } catch (J$e) {
                            J$.Ex(181433, J$e);
                        } finally {
                            if (J$.Fr(181441))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(179609, J$.R(179505, 'iconv', iconv, false, true), 'encodingExists', J$.T(179601, function encodingExists(enc) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(179577, arguments.callee, this, arguments);
                            arguments = J$.N(179585, 'arguments', arguments, true, false, false);
                            enc = J$.N(179593, 'enc', enc, true, false, false);
                            try {
                                J$.M(179529, J$.R(179513, 'iconv', iconv, false, true), 'getCodec', false)(J$.R(179521, 'enc', enc, false, false));
                                return J$.Rt(179545, J$.T(179537, true, 23, false));
                            } catch (e) {
                                J$.N(179569, 'e', e, false, false, true);
                                return J$.Rt(179561, J$.T(179553, false, 23, false));
                            }
                        } catch (J$e) {
                            J$.Ex(181449, J$e);
                        } finally {
                            if (J$.Fr(181457))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(179641, J$.R(179617, 'iconv', iconv, false, true), 'toEncoding', J$.G(179633, J$.R(179625, 'iconv', iconv, false, true), 'encode'));
            J$.P(179673, J$.R(179649, 'iconv', iconv, false, true), 'fromEncoding', J$.G(179665, J$.R(179657, 'iconv', iconv, false, true), 'decode'));
            J$.P(179697, J$.R(179681, 'iconv', iconv, false, true), '_codecDataCache', J$.T(179689, {}, 11, false));
            J$.P(180401, J$.R(179705, 'iconv', iconv, false, true), 'getCodec', J$.T(180393, function getCodec(encoding) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(180329, arguments.callee, this, arguments);
                            arguments = J$.N(180337, 'arguments', arguments, true, false, false);
                            encoding = J$.N(180345, 'encoding', encoding, true, false, false);
                            J$.N(180353, 'enc', enc, false, false, false);
                            J$.N(180361, 'codecOptions', codecOptions, false, false, false);
                            J$.N(180369, 'codec', codec, false, false, false);
                            J$.N(180377, 'codecDef', codecDef, false, false, false);
                            J$.N(180385, 'key', key, false, false, false);
                            if (J$.C(10536, J$.U(16818, '!', J$.G(179721, J$.R(179713, 'iconv', iconv, false, true), 'encodings'))))
                                J$.P(179761, J$.R(179729, 'iconv', iconv, false, true), 'encodings', J$.F(179753, J$.I(typeof require === 'undefined' ? require = J$.R(179737, 'require', undefined, true, true) : require = J$.R(179737, 'require', require, true, true)), false)(J$.T(179745, '../encodings', 21, false)));
                            var enc = J$.W(179793, 'enc', J$.M(179785, J$.R(179769, 'iconv', iconv, false, true), '_canonicalizeEncoding', false)(J$.R(179777, 'encoding', encoding, false, false)), enc, false, false);
                            var codecOptions = J$.W(179809, 'codecOptions', J$.T(179801, {}, 11, false), codecOptions, false, false);
                            while (J$.C(10600, J$.T(179817, true, 23, false))) {
                                var codec = J$.W(179857, 'codec', J$.G(179849, J$.G(179833, J$.R(179825, 'iconv', iconv, false, true), '_codecDataCache'), J$.R(179841, 'enc', enc, false, false)), codec, false, false);
                                if (J$.C(10544, J$.R(179865, 'codec', codec, false, false)))
                                    return J$.Rt(179881, J$.R(179873, 'codec', codec, false, false));
                                var codecDef = J$.W(179921, 'codecDef', J$.G(179913, J$.G(179897, J$.R(179889, 'iconv', iconv, false, true), 'encodings'), J$.R(179905, 'enc', enc, false, false)), codecDef, false, false);
                                switch (J$.C1(10568, J$.F(179945, J$.R(179929, '_typeof', _typeof, false, true), false)(J$.R(179937, 'codecDef', codecDef, false, false)))) {
                                case J$.C2(10576, J$.T(179969, 'string', 21, false)):
                                    enc = J$.W(179961, 'enc', J$.R(179953, 'codecDef', codecDef, false, false), enc, false, false);
                                    break;
                                case J$.C2(10584, J$.T(180113, 'object', 21, false)):
                                    for (var key in J$.H(180033, J$.R(179977, 'codecDef', codecDef, false, false))) {
                                        J$.N(180041, 'key', key, false, true, false);
                                        {
                                            {
                                                J$.P(180025, J$.R(179985, 'codecOptions', codecOptions, false, false), J$.R(179993, 'key', key, false, false), J$.G(180017, J$.R(180001, 'codecDef', codecDef, false, false), J$.R(180009, 'key', key, false, false)));
                                            }
                                        }
                                    }
                                    if (J$.C(10552, J$.U(16826, '!', J$.G(180057, J$.R(180049, 'codecOptions', codecOptions, false, false), 'encodingName'))))
                                        J$.P(180081, J$.R(180065, 'codecOptions', codecOptions, false, false), 'encodingName', J$.R(180073, 'enc', enc, false, false));
                                    enc = J$.W(180105, 'enc', J$.G(180097, J$.R(180089, 'codecDef', codecDef, false, false), 'type'), enc, false, false);
                                    break;
                                case J$.C2(10592, J$.T(180265, 'function', 21, false)):
                                    if (J$.C(10560, J$.U(16834, '!', J$.G(180129, J$.R(180121, 'codecOptions', codecOptions, false, false), 'encodingName'))))
                                        J$.P(180153, J$.R(180137, 'codecOptions', codecOptions, false, false), 'encodingName', J$.R(180145, 'enc', enc, false, false));
                                    codec = J$.W(180193, 'codec', J$.F(180185, J$.R(180161, 'codecDef', codecDef, false, false), true)(J$.R(180169, 'codecOptions', codecOptions, false, false), J$.R(180177, 'iconv', iconv, false, true)), codec, false, false);
                                    J$.P(180241, J$.G(180209, J$.R(180201, 'iconv', iconv, false, true), '_codecDataCache'), J$.G(180225, J$.R(180217, 'codecOptions', codecOptions, false, false), 'encodingName'), J$.R(180233, 'codec', codec, false, false));
                                    return J$.Rt(180257, J$.R(180249, 'codec', codec, false, false));
                                default:
                                    throw J$.F(180321, J$.I(typeof Error === 'undefined' ? Error = J$.R(180273, 'Error', undefined, true, true) : Error = J$.R(180273, 'Error', Error, true, true)), true)(J$.B(16866, '+', J$.B(16858, '+', J$.B(16850, '+', J$.B(16842, '+', J$.T(180281, 'Encoding not recognized: \'', 21, false), J$.R(180289, 'encoding', encoding, false, false)), J$.T(180297, '\' (searched as: \'', 21, false)), J$.R(180305, 'enc', enc, false, false)), J$.T(180313, '\')', 21, false)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(181465, J$e);
                        } finally {
                            if (J$.Fr(181473))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(180505, J$.R(180409, 'iconv', iconv, false, true), '_canonicalizeEncoding', J$.T(180497, function (encoding) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(180473, arguments.callee, this, arguments);
                            arguments = J$.N(180481, 'arguments', arguments, true, false, false);
                            encoding = J$.N(180489, 'encoding', encoding, true, false, false);
                            return J$.Rt(180465, J$.M(180457, J$.M(180433, J$.B(16874, '+', J$.T(180417, '', 21, false), J$.R(180425, 'encoding', encoding, false, false)), 'toLowerCase', false)(), 'replace', false)(J$.T(180441, /:\d{4}$|[^0-9a-z]/g, 14, false), J$.T(180449, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(181481, J$e);
                        } finally {
                            if (J$.Fr(181489))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(180745, J$.R(180513, 'iconv', iconv, false, true), 'getEncoder', J$.T(180737, function getEncoder(encoding, options) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(180689, arguments.callee, this, arguments);
                            arguments = J$.N(180697, 'arguments', arguments, true, false, false);
                            encoding = J$.N(180705, 'encoding', encoding, true, false, false);
                            options = J$.N(180713, 'options', options, true, false, false);
                            J$.N(180721, 'codec', codec, false, false, false);
                            J$.N(180729, 'encoder', encoder, false, false, false);
                            var codec = J$.W(180577, 'codec', J$.M(180537, J$.R(180521, 'iconv', iconv, false, true), 'getCodec', false)(J$.R(180529, 'encoding', encoding, false, false)), codec, false, false), encoder = J$.W(180585, 'encoder', J$.M(180569, J$.R(180545, 'codec', codec, false, false), 'encoder', true)(J$.R(180553, 'options', options, false, false), J$.R(180561, 'codec', codec, false, false)), encoder, false, false);
                            if (J$.C(10624, J$.C(10616, J$.C(10608, J$.G(180601, J$.R(180593, 'codec', codec, false, false), 'bomAware')) ? J$.R(180609, 'options', options, false, false) : J$._()) ? J$.G(180625, J$.R(180617, 'options', options, false, false), 'addBOM') : J$._()))
                                encoder = J$.W(180665, 'encoder', J$.M(180657, J$.R(180633, 'bomHandling', bomHandling, false, true), 'PrependBOM', true)(J$.R(180641, 'encoder', encoder, false, false), J$.R(180649, 'options', options, false, false)), encoder, false, false);
                            return J$.Rt(180681, J$.R(180673, 'encoder', encoder, false, false));
                        } catch (J$e) {
                            J$.Ex(181497, J$e);
                        } finally {
                            if (J$.Fr(181505))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(180993, J$.R(180753, 'iconv', iconv, false, true), 'getDecoder', J$.T(180985, function getDecoder(encoding, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(180937, arguments.callee, this, arguments);
                            arguments = J$.N(180945, 'arguments', arguments, true, false, false);
                            encoding = J$.N(180953, 'encoding', encoding, true, false, false);
                            options = J$.N(180961, 'options', options, true, false, false);
                            J$.N(180969, 'codec', codec, false, false, false);
                            J$.N(180977, 'decoder', decoder, false, false, false);
                            var codec = J$.W(180817, 'codec', J$.M(180777, J$.R(180761, 'iconv', iconv, false, true), 'getCodec', false)(J$.R(180769, 'encoding', encoding, false, false)), codec, false, false), decoder = J$.W(180825, 'decoder', J$.M(180809, J$.R(180785, 'codec', codec, false, false), 'decoder', true)(J$.R(180793, 'options', options, false, false), J$.R(180801, 'codec', codec, false, false)), decoder, false, false);
                            if (J$.C(10648, J$.C(10640, J$.G(180841, J$.R(180833, 'codec', codec, false, false), 'bomAware')) ? J$.U(16890, '!', J$.C(10632, J$.R(180849, 'options', options, false, false)) ? J$.B(16882, '===', J$.G(180865, J$.R(180857, 'options', options, false, false), 'stripBOM'), J$.T(180873, false, 23, false)) : J$._()) : J$._()))
                                decoder = J$.W(180913, 'decoder', J$.M(180905, J$.R(180881, 'bomHandling', bomHandling, false, true), 'StripBOM', true)(J$.R(180889, 'decoder', decoder, false, false), J$.R(180897, 'options', options, false, false)), decoder, false, false);
                            return J$.Rt(180929, J$.R(180921, 'decoder', decoder, false, false));
                        } catch (J$e) {
                            J$.Ex(181513, J$e);
                        } finally {
                            if (J$.Fr(181521))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var nodeVer = J$.W(181057, 'nodeVer', J$.C(10664, J$.C(10656, J$.B(16906, '!==', J$.U(16898, 'typeof', J$.I(typeof process === 'undefined' ? process = J$.R(181001, 'process', undefined, true, true) : process = J$.R(181001, 'process', process, true, true))), J$.T(181009, 'undefined', 21, false))) ? J$.G(181025, J$.I(typeof process === 'undefined' ? process = J$.R(181017, 'process', undefined, true, true) : process = J$.R(181017, 'process', process, true, true)), 'versions') : J$._()) ? J$.G(181049, J$.G(181041, J$.I(typeof process === 'undefined' ? process = J$.R(181033, 'process', undefined, true, true) : process = J$.R(181033, 'process', process, true, true)), 'versions'), 'node') : J$._(), nodeVer, false, true);
            if (J$.C(10688, J$.R(181065, 'nodeVer', nodeVer, false, true))) {
                var nodeVerArr = J$.W(181113, 'nodeVerArr', J$.M(181105, J$.M(181089, J$.R(181073, 'nodeVer', nodeVer, false, true), 'split', false)(J$.T(181081, '.', 21, false)), 'map', false)(J$.I(typeof Number === 'undefined' ? Number = J$.R(181097, 'Number', undefined, true, true) : Number = J$.R(181097, 'Number', Number, true, true))), nodeVerArr, false, true);
                if (J$.C(10680, J$.C(10672, J$.B(16914, '>', J$.G(181137, J$.R(181121, 'nodeVerArr', nodeVerArr, false, true), J$.T(181129, 0, 22, false)), J$.T(181145, 0, 22, false))) ? J$._() : J$.B(16922, '>=', J$.G(181169, J$.R(181153, 'nodeVerArr', nodeVerArr, false, true), J$.T(181161, 1, 22, false)), J$.T(181177, 10, 22, false)))) {
                    J$.F(181217, J$.F(181201, J$.I(typeof require === 'undefined' ? require = J$.R(181185, 'require', undefined, true, true) : require = J$.R(181185, 'require', require, true, true)), false)(J$.T(181193, './streams', 21, false)), false)(J$.R(181209, 'iconv', iconv, false, true));
                }
                J$.F(181257, J$.F(181241, J$.I(typeof require === 'undefined' ? require = J$.R(181225, 'require', undefined, true, true) : require = J$.R(181225, 'require', require, true, true)), false)(J$.T(181233, './extend-node', 21, false)), false)(J$.R(181249, 'iconv', iconv, false, true));
            }
            if (J$.C(10696, J$.B(16930, '!=', J$.T(181265, 'Ā', 21, false), J$.T(181273, 'Ā', 21, false)))) {
                J$.M(181297, J$.I(typeof console === 'undefined' ? console = J$.R(181281, 'console', undefined, true, true) : console = J$.R(181281, 'console', console, true, true)), 'error', false)(J$.T(181289, 'iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.', 21, false));
            }
        } catch (J$e) {
            J$.Ex(181529, J$e);
        } finally {
            if (J$.Sr(181537))
                continue jalangiLabel10;
            else
                break jalangiLabel10;
        }
    }
// JALANGI DO NOT INSTRUMENT

