J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(4131257, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/iconv-lite/lib/bom-handling.js');
            function PrependBOMWrapper(encoder, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4130465, arguments.callee, this, arguments);
                            arguments = J$.N(4130473, 'arguments', arguments, true, false, false);
                            encoder = J$.N(4130481, 'encoder', encoder, true, false, false);
                            options = J$.N(4130489, 'options', options, true, false, false);
                            J$.P(4130433, J$.R(4130417, 'this', this, false, false), 'encoder', J$.R(4130425, 'encoder', encoder, false, false));
                            J$.P(4130457, J$.R(4130441, 'this', this, false, false), 'addBOM', J$.T(4130449, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(4131305, J$e);
                        } finally {
                            if (J$.Fr(4131313))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function StripBOMWrapper(decoder, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4130841, arguments.callee, this, arguments);
                            arguments = J$.N(4130849, 'arguments', arguments, true, false, false);
                            decoder = J$.N(4130857, 'decoder', decoder, true, false, false);
                            options = J$.N(4130865, 'options', options, true, false, false);
                            J$.P(4130777, J$.R(4130761, 'this', this, false, false), 'decoder', J$.R(4130769, 'decoder', decoder, false, false));
                            J$.P(4130801, J$.R(4130785, 'this', this, false, false), 'pass', J$.T(4130793, false, 23, false));
                            J$.P(4130833, J$.R(4130809, 'this', this, false, false), 'options', J$.C(218464, J$.R(4130817, 'options', options, false, false)) ? J$._() : J$.T(4130825, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(4131353, J$e);
                        } finally {
                            if (J$.Fr(4131361))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4131265, 'BOMChar', BOMChar, false, false, false);
            PrependBOMWrapper = J$.N(4131281, 'PrependBOMWrapper', J$.T(4131273, PrependBOMWrapper, 12, false), true, false, false);
            StripBOMWrapper = J$.N(4131297, 'StripBOMWrapper', J$.T(4131289, StripBOMWrapper, 12, false), true, false, false);
            J$.T(4130345, 'use strict', 21, false);
            J$.F(4130369, J$.I(typeof require === 'undefined' ? require = J$.R(4130353, 'require', undefined, true, true) : require = J$.R(4130353, 'require', require, true, true)), false)(J$.T(4130361, 'core-js/modules/es.array.slice', 21, false));
            var BOMChar = J$.W(4130385, 'BOMChar', J$.T(4130377, '\uFEFF', 21, false), BOMChar, false, true);
            J$.P(4130409, J$.I(typeof exports === 'undefined' ? exports = J$.R(4130393, 'exports', undefined, true, true) : exports = J$.R(4130393, 'exports', exports, true, true)), 'PrependBOM', J$.R(4130401, 'PrependBOMWrapper', PrependBOMWrapper, false, true));
            J$.P(4130649, J$.G(4130505, J$.R(4130497, 'PrependBOMWrapper', PrependBOMWrapper, false, true), 'prototype'), 'write', J$.T(4130641, function (str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4130617, arguments.callee, this, arguments);
                            arguments = J$.N(4130625, 'arguments', arguments, true, false, false);
                            str = J$.N(4130633, 'str', str, true, false, false);
                            if (J$.C(218456, J$.G(4130521, J$.R(4130513, 'this', this, false, false), 'addBOM'))) {
                                str = J$.W(4130545, 'str', J$.B(402410, '+', J$.R(4130529, 'BOMChar', BOMChar, false, true), J$.R(4130537, 'str', str, false, false)), str, false, false);
                                J$.P(4130569, J$.R(4130553, 'this', this, false, false), 'addBOM', J$.T(4130561, false, 23, false));
                            }
                            return J$.Rt(4130609, J$.M(4130601, J$.G(4130585, J$.R(4130577, 'this', this, false, false), 'encoder'), 'write', false)(J$.R(4130593, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(4131321, J$e);
                        } finally {
                            if (J$.Fr(4131329))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4130729, J$.G(4130665, J$.R(4130657, 'PrependBOMWrapper', PrependBOMWrapper, false, true), 'prototype'), 'end', J$.T(4130721, function () {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4130705, arguments.callee, this, arguments);
                            arguments = J$.N(4130713, 'arguments', arguments, true, false, false);
                            return J$.Rt(4130697, J$.M(4130689, J$.G(4130681, J$.R(4130673, 'this', this, false, false), 'encoder'), 'end', false)());
                        } catch (J$e) {
                            J$.Ex(4131337, J$e);
                        } finally {
                            if (J$.Fr(4131345))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4130753, J$.I(typeof exports === 'undefined' ? exports = J$.R(4130737, 'exports', undefined, true, true) : exports = J$.R(4130737, 'exports', exports, true, true)), 'StripBOM', J$.R(4130745, 'StripBOMWrapper', StripBOMWrapper, false, true));
            J$.P(4131169, J$.G(4130881, J$.R(4130873, 'StripBOMWrapper', StripBOMWrapper, false, true), 'prototype'), 'write', J$.T(4131161, function (buf) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(4131129, arguments.callee, this, arguments);
                            arguments = J$.N(4131137, 'arguments', arguments, true, false, false);
                            buf = J$.N(4131145, 'buf', buf, true, false, false);
                            J$.N(4131153, 'res', res, false, false, false);
                            var res = J$.W(4130921, 'res', J$.M(4130913, J$.G(4130897, J$.R(4130889, 'this', this, false, false), 'decoder'), 'write', false)(J$.R(4130905, 'buf', buf, false, false)), res, false, false);
                            if (J$.C(218480, J$.C(218472, J$.G(4130937, J$.R(4130929, 'this', this, false, false), 'pass')) ? J$._() : J$.U(402418, '!', J$.R(4130945, 'res', res, false, false))))
                                return J$.Rt(4130961, J$.R(4130953, 'res', res, false, false));
                            if (J$.C(218496, J$.B(402426, '===', J$.G(4130985, J$.R(4130969, 'res', res, false, false), J$.T(4130977, 0, 22, false)), J$.R(4130993, 'BOMChar', BOMChar, false, true)))) {
                                res = J$.W(4131025, 'res', J$.M(4131017, J$.R(4131001, 'res', res, false, false), 'slice', false)(J$.T(4131009, 1, 22, false)), res, false, false);
                                if (J$.C(218488, J$.B(402442, '===', J$.U(402434, 'typeof', J$.G(4131049, J$.G(4131041, J$.R(4131033, 'this', this, false, false), 'options'), 'stripBOM')), J$.T(4131057, 'function', 21, false))))
                                    J$.M(4131081, J$.G(4131073, J$.R(4131065, 'this', this, false, false), 'options'), 'stripBOM', false)();
                            }
                            J$.P(4131105, J$.R(4131089, 'this', this, false, false), 'pass', J$.T(4131097, true, 23, false));
                            return J$.Rt(4131121, J$.R(4131113, 'res', res, false, false));
                        } catch (J$e) {
                            J$.Ex(4131369, J$e);
                        } finally {
                            if (J$.Fr(4131377))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4131249, J$.G(4131185, J$.R(4131177, 'StripBOMWrapper', StripBOMWrapper, false, true), 'prototype'), 'end', J$.T(4131241, function () {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(4131225, arguments.callee, this, arguments);
                            arguments = J$.N(4131233, 'arguments', arguments, true, false, false);
                            return J$.Rt(4131217, J$.M(4131209, J$.G(4131201, J$.R(4131193, 'this', this, false, false), 'decoder'), 'end', false)());
                        } catch (J$e) {
                            J$.Ex(4131385, J$e);
                        } finally {
                            if (J$.Fr(4131393))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4131401, J$e);
        } finally {
            if (J$.Sr(4131409))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

