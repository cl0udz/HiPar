J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(4123433, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/iconv-lite/encodings/utf16.js');
            function Utf16BECodec() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4119977, arguments.callee, this, arguments);
                            arguments = J$.N(4119985, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(4123561, J$e);
                        } finally {
                            if (J$.Fr(4123569))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16BEEncoder() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4120089, arguments.callee, this, arguments);
                            arguments = J$.N(4120097, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(4123577, J$e);
                        } finally {
                            if (J$.Fr(4123585))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16BEDecoder() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(4120505, arguments.callee, this, arguments);
                            arguments = J$.N(4120513, 'arguments', arguments, true, false, false);
                            J$.P(4120497, J$.R(4120481, 'this', this, false, false), 'overflowByte', J$.U(401274, '-', J$.T(4120489, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(4123625, J$e);
                        } finally {
                            if (J$.Fr(4123633))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16Codec(codecOptions, iconv) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(4121305, arguments.callee, this, arguments);
                            arguments = J$.N(4121313, 'arguments', arguments, true, false, false);
                            codecOptions = J$.N(4121321, 'codecOptions', codecOptions, true, false, false);
                            iconv = J$.N(4121329, 'iconv', iconv, true, false, false);
                            J$.P(4121297, J$.R(4121281, 'this', this, false, false), 'iconv', J$.R(4121289, 'iconv', iconv, false, false));
                        } catch (J$e) {
                            J$.Ex(4123673, J$e);
                        } finally {
                            if (J$.Fr(4123681))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16Encoder(options, codec) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(4121529, arguments.callee, this, arguments);
                            arguments = J$.N(4121537, 'arguments', arguments, true, false, false);
                            options = J$.N(4121545, 'options', options, true, false, false);
                            codec = J$.N(4121553, 'codec', codec, true, false, false);
                            options = J$.W(4121417, 'options', J$.C(218024, J$.R(4121401, 'options', options, false, false)) ? J$._() : J$.T(4121409, {}, 11, false), options, false, false);
                            if (J$.C(218032, J$.B(401394, '===', J$.G(4121433, J$.R(4121425, 'options', options, false, false), 'addBOM'), J$.T(4121441, undefined, 24, false))))
                                J$.P(4121465, J$.R(4121449, 'options', options, false, false), 'addBOM', J$.T(4121457, true, 23, false));
                            J$.P(4121521, J$.R(4121473, 'this', this, false, false), 'encoder', J$.M(4121513, J$.G(4121489, J$.R(4121481, 'codec', codec, false, false), 'iconv'), 'getEncoder', false)(J$.T(4121497, 'utf-16le', 21, false), J$.R(4121505, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(4123689, J$e);
                        } finally {
                            if (J$.Fr(4123697))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16Decoder(options, codec) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(4121873, arguments.callee, this, arguments);
                            arguments = J$.N(4121881, 'arguments', arguments, true, false, false);
                            options = J$.N(4121889, 'options', options, true, false, false);
                            codec = J$.N(4121897, 'codec', codec, true, false, false);
                            J$.P(4121753, J$.R(4121737, 'this', this, false, false), 'decoder', J$.T(4121745, null, 25, false));
                            J$.P(4121777, J$.R(4121761, 'this', this, false, false), 'initialBytes', J$.T(4121769, [], 10, false));
                            J$.P(4121801, J$.R(4121785, 'this', this, false, false), 'initialBytesLen', J$.T(4121793, 0, 22, false));
                            J$.P(4121833, J$.R(4121809, 'this', this, false, false), 'options', J$.C(218040, J$.R(4121817, 'options', options, false, false)) ? J$._() : J$.T(4121825, {}, 11, false));
                            J$.P(4121865, J$.R(4121841, 'this', this, false, false), 'iconv', J$.G(4121857, J$.R(4121849, 'codec', codec, false, false), 'iconv'));
                        } catch (J$e) {
                            J$.Ex(4123737, J$e);
                        } finally {
                            if (J$.Fr(4123745))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function detectEncoding(buf, defaultEncoding) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(4123361, arguments.callee, this, arguments);
                            arguments = J$.N(4123369, 'arguments', arguments, true, false, false);
                            buf = J$.N(4123377, 'buf', buf, true, false, false);
                            defaultEncoding = J$.N(4123385, 'defaultEncoding', defaultEncoding, true, false, false);
                            J$.N(4123393, 'enc', enc, false, false, false);
                            J$.N(4123401, 'asciiCharsLE', asciiCharsLE, false, false, false);
                            J$.N(4123409, 'asciiCharsBE', asciiCharsBE, false, false, false);
                            J$.N(4123417, '_len', _len, false, false, false);
                            J$.N(4123425, 'i', i, false, false, false);
                            var enc = J$.W(4122753, 'enc', J$.C(218080, J$.R(4122737, 'defaultEncoding', defaultEncoding, false, false)) ? J$._() : J$.T(4122745, 'utf-16le', 21, false), enc, false, false);
                            if (J$.C(218176, J$.B(401434, '>=', J$.G(4122769, J$.R(4122761, 'buf', buf, false, false), 'length'), J$.T(4122777, 2, 22, false)))) {
                                if (J$.C(218168, J$.C(218088, J$.B(401442, '==', J$.G(4122801, J$.R(4122785, 'buf', buf, false, false), J$.T(4122793, 0, 22, false)), J$.T(4122809, 254, 22, false))) ? J$.B(401450, '==', J$.G(4122833, J$.R(4122817, 'buf', buf, false, false), J$.T(4122825, 1, 22, false)), J$.T(4122841, 255, 22, false)) : J$._()))
                                    enc = J$.W(4122857, 'enc', J$.T(4122849, 'utf-16be', 21, false), enc, false, false);
                                else if (J$.C(218160, J$.C(218096, J$.B(401458, '==', J$.G(4122881, J$.R(4122865, 'buf', buf, false, false), J$.T(4122873, 0, 22, false)), J$.T(4122889, 255, 22, false))) ? J$.B(401466, '==', J$.G(4122913, J$.R(4122897, 'buf', buf, false, false), J$.T(4122905, 1, 22, false)), J$.T(4122921, 254, 22, false)) : J$._()))
                                    enc = J$.W(4122937, 'enc', J$.T(4122929, 'utf-16le', 21, false), enc, false, false);
                                else {
                                    var asciiCharsLE = J$.W(4123025, 'asciiCharsLE', J$.T(4122945, 0, 22, false), asciiCharsLE, false, false), asciiCharsBE = J$.W(4123033, 'asciiCharsBE', J$.T(4122953, 0, 22, false), asciiCharsBE, false, false), _len = J$.W(4123041, '_len', J$.M(4123017, J$.I(typeof Math === 'undefined' ? Math = J$.R(4122961, 'Math', undefined, true, true) : Math = J$.R(4122961, 'Math', Math, true, true)), 'min', false)(J$.B(401482, '-', J$.G(4122977, J$.R(4122969, 'buf', buf, false, false), 'length'), J$.B(401474, '%', J$.G(4122993, J$.R(4122985, 'buf', buf, false, false), 'length'), J$.T(4123001, 2, 22, false))), J$.T(4123009, 64, 22, false)), _len, false, false);
                                    for (var i = J$.W(4123057, 'i', J$.T(4123049, 0, 22, false), i, false, false); J$.C(218136, J$.B(401490, '<', J$.R(4123065, 'i', i, false, false), J$.R(4123073, '_len', _len, false, false))); i = J$.W(4123097, 'i', J$.B(401498, '+', J$.R(4123089, 'i', i, false, false), J$.T(4123081, 2, 22, false)), i, false, false)) {
                                        if (J$.C(218112, J$.C(218104, J$.B(401506, '===', J$.G(4123121, J$.R(4123105, 'buf', buf, false, false), J$.R(4123113, 'i', i, false, false)), J$.T(4123129, 0, 22, false))) ? J$.B(401522, '!==', J$.G(4123161, J$.R(4123137, 'buf', buf, false, false), J$.B(401514, '+', J$.R(4123145, 'i', i, false, false), J$.T(4123153, 1, 22, false))), J$.T(4123169, 0, 22, false)) : J$._()))
                                            J$.B(401546, '-', asciiCharsBE = J$.W(4123185, 'asciiCharsBE', J$.B(401538, '+', J$.U(401530, '+', J$.R(4123177, 'asciiCharsBE', asciiCharsBE, false, false)), 1), asciiCharsBE, false, false), 1);
                                        if (J$.C(218128, J$.C(218120, J$.B(401554, '!==', J$.G(4123209, J$.R(4123193, 'buf', buf, false, false), J$.R(4123201, 'i', i, false, false)), J$.T(4123217, 0, 22, false))) ? J$.B(401570, '===', J$.G(4123249, J$.R(4123225, 'buf', buf, false, false), J$.B(401562, '+', J$.R(4123233, 'i', i, false, false), J$.T(4123241, 1, 22, false))), J$.T(4123257, 0, 22, false)) : J$._()))
                                            J$.B(401594, '-', asciiCharsLE = J$.W(4123273, 'asciiCharsLE', J$.B(401586, '+', J$.U(401578, '+', J$.R(4123265, 'asciiCharsLE', asciiCharsLE, false, false)), 1), asciiCharsLE, false, false), 1);
                                    }
                                    if (J$.C(218152, J$.B(401602, '>', J$.R(4123281, 'asciiCharsBE', asciiCharsBE, false, false), J$.R(4123289, 'asciiCharsLE', asciiCharsLE, false, false))))
                                        enc = J$.W(4123305, 'enc', J$.T(4123297, 'utf-16be', 21, false), enc, false, false);
                                    else if (J$.C(218144, J$.B(401610, '<', J$.R(4123313, 'asciiCharsBE', asciiCharsBE, false, false), J$.R(4123321, 'asciiCharsLE', asciiCharsLE, false, false))))
                                        enc = J$.W(4123337, 'enc', J$.T(4123329, 'utf-16le', 21, false), enc, false, false);
                                }
                            }
                            return J$.Rt(4123353, J$.R(4123345, 'enc', enc, false, false));
                        } catch (J$e) {
                            J$.Ex(4123785, J$e);
                        } finally {
                            if (J$.Fr(4123793))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4123441, 'Buffer', Buffer, false, false, false);
            Utf16BECodec = J$.N(4123457, 'Utf16BECodec', J$.T(4123449, Utf16BECodec, 12, false), true, false, false);
            Utf16BEEncoder = J$.N(4123473, 'Utf16BEEncoder', J$.T(4123465, Utf16BEEncoder, 12, false), true, false, false);
            Utf16BEDecoder = J$.N(4123489, 'Utf16BEDecoder', J$.T(4123481, Utf16BEDecoder, 12, false), true, false, false);
            Utf16Codec = J$.N(4123505, 'Utf16Codec', J$.T(4123497, Utf16Codec, 12, false), true, false, false);
            Utf16Encoder = J$.N(4123521, 'Utf16Encoder', J$.T(4123513, Utf16Encoder, 12, false), true, false, false);
            Utf16Decoder = J$.N(4123537, 'Utf16Decoder', J$.T(4123529, Utf16Decoder, 12, false), true, false, false);
            detectEncoding = J$.N(4123553, 'detectEncoding', J$.T(4123545, detectEncoding, 12, false), true, false, false);
            J$.T(4119785, 'use strict', 21, false);
            J$.F(4119809, J$.I(typeof require === 'undefined' ? require = J$.R(4119793, 'require', undefined, true, true) : require = J$.R(4119793, 'require', require, true, true)), false)(J$.T(4119801, 'core-js/modules/es.array.concat', 21, false));
            J$.F(4119833, J$.I(typeof require === 'undefined' ? require = J$.R(4119817, 'require', undefined, true, true) : require = J$.R(4119817, 'require', require, true, true)), false)(J$.T(4119825, 'core-js/modules/es.array.slice', 21, false));
            J$.F(4119857, J$.I(typeof require === 'undefined' ? require = J$.R(4119841, 'require', undefined, true, true) : require = J$.R(4119841, 'require', require, true, true)), false)(J$.T(4119849, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(4119881, J$.I(typeof require === 'undefined' ? require = J$.R(4119865, 'require', undefined, true, true) : require = J$.R(4119865, 'require', require, true, true)), false)(J$.T(4119873, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(4119905, J$.I(typeof require === 'undefined' ? require = J$.R(4119889, 'require', undefined, true, true) : require = J$.R(4119889, 'require', require, true, true)), false)(J$.T(4119897, 'core-js/modules/es.regexp.to-string', 21, false));
            var Buffer = J$.W(4119945, 'Buffer', J$.G(4119937, J$.F(4119929, J$.I(typeof require === 'undefined' ? require = J$.R(4119913, 'require', undefined, true, true) : require = J$.R(4119913, 'require', require, true, true)), false)(J$.T(4119921, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            J$.P(4119969, J$.I(typeof exports === 'undefined' ? exports = J$.R(4119953, 'exports', undefined, true, true) : exports = J$.R(4119953, 'exports', exports, true, true)), 'utf16be', J$.R(4119961, 'Utf16BECodec', Utf16BECodec, false, true));
            J$.P(4120017, J$.G(4120001, J$.R(4119993, 'Utf16BECodec', Utf16BECodec, false, true), 'prototype'), 'encoder', J$.R(4120009, 'Utf16BEEncoder', Utf16BEEncoder, false, true));
            J$.P(4120049, J$.G(4120033, J$.R(4120025, 'Utf16BECodec', Utf16BECodec, false, true), 'prototype'), 'decoder', J$.R(4120041, 'Utf16BEDecoder', Utf16BEDecoder, false, true));
            J$.P(4120081, J$.G(4120065, J$.R(4120057, 'Utf16BECodec', Utf16BECodec, false, true), 'prototype'), 'bomAware', J$.T(4120073, true, 23, false));
            J$.P(4120425, J$.G(4120113, J$.R(4120105, 'Utf16BEEncoder', Utf16BEEncoder, false, true), 'prototype'), 'write', J$.T(4120417, function (str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4120369, arguments.callee, this, arguments);
                            arguments = J$.N(4120377, 'arguments', arguments, true, false, false);
                            str = J$.N(4120385, 'str', str, true, false, false);
                            J$.N(4120393, 'buf', buf, false, false, false);
                            J$.N(4120401, 'i', i, false, false, false);
                            J$.N(4120409, 'tmp', tmp, false, false, false);
                            var buf = J$.W(4120153, 'buf', J$.M(4120145, J$.R(4120121, 'Buffer', Buffer, false, true), 'from', false)(J$.R(4120129, 'str', str, false, false), J$.T(4120137, 'ucs2', 21, false)), buf, false, false);
                            for (var i = J$.W(4120169, 'i', J$.T(4120161, 0, 22, false), i, false, false); J$.C(217984, J$.B(401242, '<', J$.R(4120177, 'i', i, false, false), J$.G(4120193, J$.R(4120185, 'buf', buf, false, false), 'length'))); i = J$.W(4120217, 'i', J$.B(401250, '+', J$.R(4120209, 'i', i, false, false), J$.T(4120201, 2, 22, false)), i, false, false)) {
                                var tmp = J$.W(4120249, 'tmp', J$.G(4120241, J$.R(4120225, 'buf', buf, false, false), J$.R(4120233, 'i', i, false, false)), tmp, false, false);
                                J$.P(4120305, J$.R(4120257, 'buf', buf, false, false), J$.R(4120265, 'i', i, false, false), J$.G(4120297, J$.R(4120273, 'buf', buf, false, false), J$.B(401258, '+', J$.R(4120281, 'i', i, false, false), J$.T(4120289, 1, 22, false))));
                                J$.P(4120345, J$.R(4120313, 'buf', buf, false, false), J$.B(401266, '+', J$.R(4120321, 'i', i, false, false), J$.T(4120329, 1, 22, false)), J$.R(4120337, 'tmp', tmp, false, false));
                            }
                            return J$.Rt(4120361, J$.R(4120353, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(4123593, J$e);
                        } finally {
                            if (J$.Fr(4123601))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4120473, J$.G(4120441, J$.R(4120433, 'Utf16BEEncoder', Utf16BEEncoder, false, true), 'prototype'), 'end', J$.T(4120465, function () {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4120449, arguments.callee, this, arguments);
                            arguments = J$.N(4120457, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(4123609, J$e);
                        } finally {
                            if (J$.Fr(4123617))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4121201, J$.G(4120529, J$.R(4120521, 'Utf16BEDecoder', Utf16BEDecoder, false, true), 'prototype'), 'write', J$.T(4121193, function (buf) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(4121145, arguments.callee, this, arguments);
                            arguments = J$.N(4121153, 'arguments', arguments, true, false, false);
                            buf = J$.N(4121161, 'buf', buf, true, false, false);
                            J$.N(4121169, 'buf2', buf2, false, false, false);
                            J$.N(4121177, 'i', i, false, false, false);
                            J$.N(4121185, 'j', j, false, false, false);
                            if (J$.C(217992, J$.B(401282, '==', J$.G(4120545, J$.R(4120537, 'buf', buf, false, false), 'length'), J$.T(4120553, 0, 22, false))))
                                return J$.Rt(4120569, J$.T(4120561, '', 21, false));
                            var buf2 = J$.W(4120633, 'buf2', J$.M(4120609, J$.R(4120577, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(401290, '+', J$.G(4120593, J$.R(4120585, 'buf', buf, false, false), 'length'), J$.T(4120601, 1, 22, false))), buf2, false, false), i = J$.W(4120641, 'i', J$.T(4120617, 0, 22, false), i, false, false), j = J$.W(4120649, 'j', J$.T(4120625, 0, 22, false), j, false, false);
                            if (J$.C(218000, J$.B(401306, '!==', J$.G(4120665, J$.R(4120657, 'this', this, false, false), 'overflowByte'), J$.U(401298, '-', J$.T(4120673, 1, 22, false))))) {
                                J$.P(4120721, J$.R(4120681, 'buf2', buf2, false, false), J$.T(4120689, 0, 22, false), J$.G(4120713, J$.R(4120697, 'buf', buf, false, false), J$.T(4120705, 0, 22, false)));
                                J$.P(4120761, J$.R(4120729, 'buf2', buf2, false, false), J$.T(4120737, 1, 22, false), J$.G(4120753, J$.R(4120745, 'this', this, false, false), 'overflowByte'));
                                i = J$.W(4120777, 'i', J$.T(4120769, 1, 22, false), i, false, false);
                                j = J$.W(4120793, 'j', J$.T(4120785, 2, 22, false), j, false, false);
                            }
                            for (; J$.C(218008, J$.B(401322, '<', J$.R(4120801, 'i', i, false, false), J$.B(401314, '-', J$.G(4120817, J$.R(4120809, 'buf', buf, false, false), 'length'), J$.T(4120825, 1, 22, false)))); i = J$.W(4120849, 'i', J$.B(401330, '+', J$.R(4120841, 'i', i, false, false), J$.T(4120833, 2, 22, false)), i, false, false), j = J$.W(4120873, 'j', J$.B(401338, '+', J$.R(4120865, 'j', j, false, false), J$.T(4120857, 2, 22, false)), j, false, false)) {
                                J$.P(4120929, J$.R(4120881, 'buf2', buf2, false, false), J$.R(4120889, 'j', j, false, false), J$.G(4120921, J$.R(4120897, 'buf', buf, false, false), J$.B(401346, '+', J$.R(4120905, 'i', i, false, false), J$.T(4120913, 1, 22, false))));
                                J$.P(4120985, J$.R(4120937, 'buf2', buf2, false, false), J$.B(401354, '+', J$.R(4120945, 'j', j, false, false), J$.T(4120953, 1, 22, false)), J$.G(4120977, J$.R(4120961, 'buf', buf, false, false), J$.R(4120969, 'i', i, false, false)));
                            }
                            J$.P(4121081, J$.R(4120993, 'this', this, false, false), 'overflowByte', J$.C(218016, J$.B(401370, '==', J$.R(4121001, 'i', i, false, false), J$.B(401362, '-', J$.G(4121017, J$.R(4121009, 'buf', buf, false, false), 'length'), J$.T(4121025, 1, 22, false)))) ? J$.G(4121065, J$.R(4121033, 'buf', buf, false, false), J$.B(401378, '-', J$.G(4121049, J$.R(4121041, 'buf', buf, false, false), 'length'), J$.T(4121057, 1, 22, false))) : J$.U(401386, '-', J$.T(4121073, 1, 22, false)));
                            return J$.Rt(4121137, J$.M(4121129, J$.M(4121113, J$.R(4121089, 'buf2', buf2, false, false), 'slice', false)(J$.T(4121097, 0, 22, false), J$.R(4121105, 'j', j, false, false)), 'toString', false)(J$.T(4121121, 'ucs2', 21, false)));
                        } catch (J$e) {
                            J$.Ex(4123641, J$e);
                        } finally {
                            if (J$.Fr(4123649))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4121249, J$.G(4121217, J$.R(4121209, 'Utf16BEDecoder', Utf16BEDecoder, false, true), 'prototype'), 'end', J$.T(4121241, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(4121225, arguments.callee, this, arguments);
                            arguments = J$.N(4121233, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(4123657, J$e);
                        } finally {
                            if (J$.Fr(4123665))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4121273, J$.I(typeof exports === 'undefined' ? exports = J$.R(4121257, 'exports', undefined, true, true) : exports = J$.R(4121257, 'exports', exports, true, true)), 'utf16', J$.R(4121265, 'Utf16Codec', Utf16Codec, false, true));
            J$.P(4121361, J$.G(4121345, J$.R(4121337, 'Utf16Codec', Utf16Codec, false, true), 'prototype'), 'encoder', J$.R(4121353, 'Utf16Encoder', Utf16Encoder, false, true));
            J$.P(4121393, J$.G(4121377, J$.R(4121369, 'Utf16Codec', Utf16Codec, false, true), 'prototype'), 'decoder', J$.R(4121385, 'Utf16Decoder', Utf16Decoder, false, true));
            J$.P(4121649, J$.G(4121569, J$.R(4121561, 'Utf16Encoder', Utf16Encoder, false, true), 'prototype'), 'write', J$.T(4121641, function (str) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(4121617, arguments.callee, this, arguments);
                            arguments = J$.N(4121625, 'arguments', arguments, true, false, false);
                            str = J$.N(4121633, 'str', str, true, false, false);
                            return J$.Rt(4121609, J$.M(4121601, J$.G(4121585, J$.R(4121577, 'this', this, false, false), 'encoder'), 'write', false)(J$.R(4121593, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(4123705, J$e);
                        } finally {
                            if (J$.Fr(4123713))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4121729, J$.G(4121665, J$.R(4121657, 'Utf16Encoder', Utf16Encoder, false, true), 'prototype'), 'end', J$.T(4121721, function () {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(4121705, arguments.callee, this, arguments);
                            arguments = J$.N(4121713, 'arguments', arguments, true, false, false);
                            return J$.Rt(4121697, J$.M(4121689, J$.G(4121681, J$.R(4121673, 'this', this, false, false), 'encoder'), 'end', false)());
                        } catch (J$e) {
                            J$.Ex(4123721, J$e);
                        } finally {
                            if (J$.Fr(4123729))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4122329, J$.G(4121913, J$.R(4121905, 'Utf16Decoder', Utf16Decoder, false, true), 'prototype'), 'write', J$.T(4122321, function (buf) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(4122289, arguments.callee, this, arguments);
                            arguments = J$.N(4122297, 'arguments', arguments, true, false, false);
                            buf = J$.N(4122305, 'buf', buf, true, false, false);
                            J$.N(4122313, 'encoding', encoding, false, false, false);
                            if (J$.C(218056, J$.U(401402, '!', J$.G(4121929, J$.R(4121921, 'this', this, false, false), 'decoder')))) {
                                J$.M(4121961, J$.G(4121945, J$.R(4121937, 'this', this, false, false), 'initialBytes'), 'push', false)(J$.R(4121953, 'buf', buf, false, false));
                                J$.A(4121993, J$.R(4121969, 'this', this, false, false), 'initialBytesLen', '+')(J$.G(4121985, J$.R(4121977, 'buf', buf, false, false), 'length'));
                                if (J$.C(218048, J$.B(401410, '<', J$.G(4122009, J$.R(4122001, 'this', this, false, false), 'initialBytesLen'), J$.T(4122017, 16, 22, false))))
                                    return J$.Rt(4122033, J$.T(4122025, '', 21, false));
                                var buf = J$.W(4122121, 'buf', J$.M(4122065, J$.R(4122041, 'Buffer', Buffer, false, true), 'concat', false)(J$.G(4122057, J$.R(4122049, 'this', this, false, false), 'initialBytes')), buf, false, false), encoding = J$.W(4122129, 'encoding', J$.F(4122113, J$.R(4122073, 'detectEncoding', detectEncoding, false, true), false)(J$.R(4122081, 'buf', buf, false, false), J$.G(4122105, J$.G(4122097, J$.R(4122089, 'this', this, false, false), 'options'), 'defaultEncoding')), encoding, false, false);
                                J$.P(4122193, J$.R(4122137, 'this', this, false, false), 'decoder', J$.M(4122185, J$.G(4122153, J$.R(4122145, 'this', this, false, false), 'iconv'), 'getDecoder', false)(J$.R(4122161, 'encoding', encoding, false, false), J$.G(4122177, J$.R(4122169, 'this', this, false, false), 'options')));
                                J$.P(4122241, J$.G(4122209, J$.R(4122201, 'this', this, false, false), 'initialBytes'), 'length', J$.P(4122233, J$.R(4122217, 'this', this, false, false), 'initialBytesLen', J$.T(4122225, 0, 22, false)));
                            }
                            return J$.Rt(4122281, J$.M(4122273, J$.G(4122257, J$.R(4122249, 'this', this, false, false), 'decoder'), 'write', false)(J$.R(4122265, 'buf', buf, false, false)));
                        } catch (J$e) {
                            J$.Ex(4123753, J$e);
                        } finally {
                            if (J$.Fr(4123761))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4122729, J$.G(4122345, J$.R(4122337, 'Utf16Decoder', Utf16Decoder, false, true), 'prototype'), 'end', J$.T(4122721, function () {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(4122673, arguments.callee, this, arguments);
                            arguments = J$.N(4122681, 'arguments', arguments, true, false, false);
                            J$.N(4122689, 'buf', buf, false, false, false);
                            J$.N(4122697, 'encoding', encoding, false, false, false);
                            J$.N(4122705, 'res', res, false, false, false);
                            J$.N(4122713, 'trail', trail, false, false, false);
                            if (J$.C(218072, J$.U(401418, '!', J$.G(4122361, J$.R(4122353, 'this', this, false, false), 'decoder')))) {
                                var buf = J$.W(4122449, 'buf', J$.M(4122393, J$.R(4122369, 'Buffer', Buffer, false, true), 'concat', false)(J$.G(4122385, J$.R(4122377, 'this', this, false, false), 'initialBytes')), buf, false, false), encoding = J$.W(4122457, 'encoding', J$.F(4122441, J$.R(4122401, 'detectEncoding', detectEncoding, false, true), false)(J$.R(4122409, 'buf', buf, false, false), J$.G(4122433, J$.G(4122425, J$.R(4122417, 'this', this, false, false), 'options'), 'defaultEncoding')), encoding, false, false);
                                J$.P(4122521, J$.R(4122465, 'this', this, false, false), 'decoder', J$.M(4122513, J$.G(4122481, J$.R(4122473, 'this', this, false, false), 'iconv'), 'getDecoder', false)(J$.R(4122489, 'encoding', encoding, false, false), J$.G(4122505, J$.R(4122497, 'this', this, false, false), 'options')));
                                var res = J$.W(4122585, 'res', J$.M(4122553, J$.G(4122537, J$.R(4122529, 'this', this, false, false), 'decoder'), 'write', false)(J$.R(4122545, 'buf', buf, false, false)), res, false, false), trail = J$.W(4122593, 'trail', J$.M(4122577, J$.G(4122569, J$.R(4122561, 'this', this, false, false), 'decoder'), 'end', false)(), trail, false, false);
                                return J$.Rt(4122633, J$.C(218064, J$.R(4122601, 'trail', trail, false, false)) ? J$.B(401426, '+', J$.R(4122609, 'res', res, false, false), J$.R(4122617, 'trail', trail, false, false)) : J$.R(4122625, 'res', res, false, false));
                            }
                            return J$.Rt(4122665, J$.M(4122657, J$.G(4122649, J$.R(4122641, 'this', this, false, false), 'decoder'), 'end', false)());
                        } catch (J$e) {
                            J$.Ex(4123769, J$e);
                        } finally {
                            if (J$.Fr(4123777))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4123801, J$e);
        } finally {
            if (J$.Sr(4123809))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

