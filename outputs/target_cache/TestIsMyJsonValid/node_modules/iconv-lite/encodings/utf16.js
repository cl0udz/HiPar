J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(164929, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/iconv-lite/encodings/utf16.js');
            function Utf16BECodec() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(161473, arguments.callee, this, arguments);
                            arguments = J$.N(161481, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(165057, J$e);
                        } finally {
                            if (J$.Fr(165065))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16BEEncoder() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(161585, arguments.callee, this, arguments);
                            arguments = J$.N(161593, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(165073, J$e);
                        } finally {
                            if (J$.Fr(165081))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16BEDecoder() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(162001, arguments.callee, this, arguments);
                            arguments = J$.N(162009, 'arguments', arguments, true, false, false);
                            J$.P(161993, J$.R(161977, 'this', this, false, false), 'overflowByte', J$.U(15226, '-', J$.T(161985, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(165121, J$e);
                        } finally {
                            if (J$.Fr(165129))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16Codec(codecOptions, iconv) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(162801, arguments.callee, this, arguments);
                            arguments = J$.N(162809, 'arguments', arguments, true, false, false);
                            codecOptions = J$.N(162817, 'codecOptions', codecOptions, true, false, false);
                            iconv = J$.N(162825, 'iconv', iconv, true, false, false);
                            J$.P(162793, J$.R(162777, 'this', this, false, false), 'iconv', J$.R(162785, 'iconv', iconv, false, false));
                        } catch (J$e) {
                            J$.Ex(165169, J$e);
                        } finally {
                            if (J$.Fr(165177))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16Encoder(options, codec) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(163025, arguments.callee, this, arguments);
                            arguments = J$.N(163033, 'arguments', arguments, true, false, false);
                            options = J$.N(163041, 'options', options, true, false, false);
                            codec = J$.N(163049, 'codec', codec, true, false, false);
                            options = J$.W(162913, 'options', J$.C(9624, J$.R(162897, 'options', options, false, false)) ? J$._() : J$.T(162905, {}, 11, false), options, false, false);
                            if (J$.C(9632, J$.B(15346, '===', J$.G(162929, J$.R(162921, 'options', options, false, false), 'addBOM'), J$.T(162937, undefined, 24, false))))
                                J$.P(162961, J$.R(162945, 'options', options, false, false), 'addBOM', J$.T(162953, true, 23, false));
                            J$.P(163017, J$.R(162969, 'this', this, false, false), 'encoder', J$.M(163009, J$.G(162985, J$.R(162977, 'codec', codec, false, false), 'iconv'), 'getEncoder', false)(J$.T(162993, 'utf-16le', 21, false), J$.R(163001, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(165185, J$e);
                        } finally {
                            if (J$.Fr(165193))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16Decoder(options, codec) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(163369, arguments.callee, this, arguments);
                            arguments = J$.N(163377, 'arguments', arguments, true, false, false);
                            options = J$.N(163385, 'options', options, true, false, false);
                            codec = J$.N(163393, 'codec', codec, true, false, false);
                            J$.P(163249, J$.R(163233, 'this', this, false, false), 'decoder', J$.T(163241, null, 25, false));
                            J$.P(163273, J$.R(163257, 'this', this, false, false), 'initialBytes', J$.T(163265, [], 10, false));
                            J$.P(163297, J$.R(163281, 'this', this, false, false), 'initialBytesLen', J$.T(163289, 0, 22, false));
                            J$.P(163329, J$.R(163305, 'this', this, false, false), 'options', J$.C(9640, J$.R(163313, 'options', options, false, false)) ? J$._() : J$.T(163321, {}, 11, false));
                            J$.P(163361, J$.R(163337, 'this', this, false, false), 'iconv', J$.G(163353, J$.R(163345, 'codec', codec, false, false), 'iconv'));
                        } catch (J$e) {
                            J$.Ex(165233, J$e);
                        } finally {
                            if (J$.Fr(165241))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function detectEncoding(buf, defaultEncoding) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(164857, arguments.callee, this, arguments);
                            arguments = J$.N(164865, 'arguments', arguments, true, false, false);
                            buf = J$.N(164873, 'buf', buf, true, false, false);
                            defaultEncoding = J$.N(164881, 'defaultEncoding', defaultEncoding, true, false, false);
                            J$.N(164889, 'enc', enc, false, false, false);
                            J$.N(164897, 'asciiCharsLE', asciiCharsLE, false, false, false);
                            J$.N(164905, 'asciiCharsBE', asciiCharsBE, false, false, false);
                            J$.N(164913, '_len', _len, false, false, false);
                            J$.N(164921, 'i', i, false, false, false);
                            var enc = J$.W(164249, 'enc', J$.C(9680, J$.R(164233, 'defaultEncoding', defaultEncoding, false, false)) ? J$._() : J$.T(164241, 'utf-16le', 21, false), enc, false, false);
                            if (J$.C(9776, J$.B(15386, '>=', J$.G(164265, J$.R(164257, 'buf', buf, false, false), 'length'), J$.T(164273, 2, 22, false)))) {
                                if (J$.C(9768, J$.C(9688, J$.B(15394, '==', J$.G(164297, J$.R(164281, 'buf', buf, false, false), J$.T(164289, 0, 22, false)), J$.T(164305, 254, 22, false))) ? J$.B(15402, '==', J$.G(164329, J$.R(164313, 'buf', buf, false, false), J$.T(164321, 1, 22, false)), J$.T(164337, 255, 22, false)) : J$._()))
                                    enc = J$.W(164353, 'enc', J$.T(164345, 'utf-16be', 21, false), enc, false, false);
                                else if (J$.C(9760, J$.C(9696, J$.B(15410, '==', J$.G(164377, J$.R(164361, 'buf', buf, false, false), J$.T(164369, 0, 22, false)), J$.T(164385, 255, 22, false))) ? J$.B(15418, '==', J$.G(164409, J$.R(164393, 'buf', buf, false, false), J$.T(164401, 1, 22, false)), J$.T(164417, 254, 22, false)) : J$._()))
                                    enc = J$.W(164433, 'enc', J$.T(164425, 'utf-16le', 21, false), enc, false, false);
                                else {
                                    var asciiCharsLE = J$.W(164521, 'asciiCharsLE', J$.T(164441, 0, 22, false), asciiCharsLE, false, false), asciiCharsBE = J$.W(164529, 'asciiCharsBE', J$.T(164449, 0, 22, false), asciiCharsBE, false, false), _len = J$.W(164537, '_len', J$.M(164513, J$.I(typeof Math === 'undefined' ? Math = J$.R(164457, 'Math', undefined, true, true) : Math = J$.R(164457, 'Math', Math, true, true)), 'min', false)(J$.B(15434, '-', J$.G(164473, J$.R(164465, 'buf', buf, false, false), 'length'), J$.B(15426, '%', J$.G(164489, J$.R(164481, 'buf', buf, false, false), 'length'), J$.T(164497, 2, 22, false))), J$.T(164505, 64, 22, false)), _len, false, false);
                                    for (var i = J$.W(164553, 'i', J$.T(164545, 0, 22, false), i, false, false); J$.C(9736, J$.B(15442, '<', J$.R(164561, 'i', i, false, false), J$.R(164569, '_len', _len, false, false))); i = J$.W(164593, 'i', J$.B(15450, '+', J$.R(164585, 'i', i, false, false), J$.T(164577, 2, 22, false)), i, false, false)) {
                                        if (J$.C(9712, J$.C(9704, J$.B(15458, '===', J$.G(164617, J$.R(164601, 'buf', buf, false, false), J$.R(164609, 'i', i, false, false)), J$.T(164625, 0, 22, false))) ? J$.B(15474, '!==', J$.G(164657, J$.R(164633, 'buf', buf, false, false), J$.B(15466, '+', J$.R(164641, 'i', i, false, false), J$.T(164649, 1, 22, false))), J$.T(164665, 0, 22, false)) : J$._()))
                                            J$.B(15498, '-', asciiCharsBE = J$.W(164681, 'asciiCharsBE', J$.B(15490, '+', J$.U(15482, '+', J$.R(164673, 'asciiCharsBE', asciiCharsBE, false, false)), 1), asciiCharsBE, false, false), 1);
                                        if (J$.C(9728, J$.C(9720, J$.B(15506, '!==', J$.G(164705, J$.R(164689, 'buf', buf, false, false), J$.R(164697, 'i', i, false, false)), J$.T(164713, 0, 22, false))) ? J$.B(15522, '===', J$.G(164745, J$.R(164721, 'buf', buf, false, false), J$.B(15514, '+', J$.R(164729, 'i', i, false, false), J$.T(164737, 1, 22, false))), J$.T(164753, 0, 22, false)) : J$._()))
                                            J$.B(15546, '-', asciiCharsLE = J$.W(164769, 'asciiCharsLE', J$.B(15538, '+', J$.U(15530, '+', J$.R(164761, 'asciiCharsLE', asciiCharsLE, false, false)), 1), asciiCharsLE, false, false), 1);
                                    }
                                    if (J$.C(9752, J$.B(15554, '>', J$.R(164777, 'asciiCharsBE', asciiCharsBE, false, false), J$.R(164785, 'asciiCharsLE', asciiCharsLE, false, false))))
                                        enc = J$.W(164801, 'enc', J$.T(164793, 'utf-16be', 21, false), enc, false, false);
                                    else if (J$.C(9744, J$.B(15562, '<', J$.R(164809, 'asciiCharsBE', asciiCharsBE, false, false), J$.R(164817, 'asciiCharsLE', asciiCharsLE, false, false))))
                                        enc = J$.W(164833, 'enc', J$.T(164825, 'utf-16le', 21, false), enc, false, false);
                                }
                            }
                            return J$.Rt(164849, J$.R(164841, 'enc', enc, false, false));
                        } catch (J$e) {
                            J$.Ex(165281, J$e);
                        } finally {
                            if (J$.Fr(165289))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(164937, 'Buffer', Buffer, false, false, false);
            Utf16BECodec = J$.N(164953, 'Utf16BECodec', J$.T(164945, Utf16BECodec, 12, false), true, false, false);
            Utf16BEEncoder = J$.N(164969, 'Utf16BEEncoder', J$.T(164961, Utf16BEEncoder, 12, false), true, false, false);
            Utf16BEDecoder = J$.N(164985, 'Utf16BEDecoder', J$.T(164977, Utf16BEDecoder, 12, false), true, false, false);
            Utf16Codec = J$.N(165001, 'Utf16Codec', J$.T(164993, Utf16Codec, 12, false), true, false, false);
            Utf16Encoder = J$.N(165017, 'Utf16Encoder', J$.T(165009, Utf16Encoder, 12, false), true, false, false);
            Utf16Decoder = J$.N(165033, 'Utf16Decoder', J$.T(165025, Utf16Decoder, 12, false), true, false, false);
            detectEncoding = J$.N(165049, 'detectEncoding', J$.T(165041, detectEncoding, 12, false), true, false, false);
            J$.T(161281, 'use strict', 21, false);
            J$.F(161305, J$.I(typeof require === 'undefined' ? require = J$.R(161289, 'require', undefined, true, true) : require = J$.R(161289, 'require', require, true, true)), false)(J$.T(161297, 'core-js/modules/es.array.concat', 21, false));
            J$.F(161329, J$.I(typeof require === 'undefined' ? require = J$.R(161313, 'require', undefined, true, true) : require = J$.R(161313, 'require', require, true, true)), false)(J$.T(161321, 'core-js/modules/es.array.slice', 21, false));
            J$.F(161353, J$.I(typeof require === 'undefined' ? require = J$.R(161337, 'require', undefined, true, true) : require = J$.R(161337, 'require', require, true, true)), false)(J$.T(161345, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(161377, J$.I(typeof require === 'undefined' ? require = J$.R(161361, 'require', undefined, true, true) : require = J$.R(161361, 'require', require, true, true)), false)(J$.T(161369, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(161401, J$.I(typeof require === 'undefined' ? require = J$.R(161385, 'require', undefined, true, true) : require = J$.R(161385, 'require', require, true, true)), false)(J$.T(161393, 'core-js/modules/es.regexp.to-string', 21, false));
            var Buffer = J$.W(161441, 'Buffer', J$.G(161433, J$.F(161425, J$.I(typeof require === 'undefined' ? require = J$.R(161409, 'require', undefined, true, true) : require = J$.R(161409, 'require', require, true, true)), false)(J$.T(161417, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            J$.P(161465, J$.I(typeof exports === 'undefined' ? exports = J$.R(161449, 'exports', undefined, true, true) : exports = J$.R(161449, 'exports', exports, true, true)), 'utf16be', J$.R(161457, 'Utf16BECodec', Utf16BECodec, false, true));
            J$.P(161513, J$.G(161497, J$.R(161489, 'Utf16BECodec', Utf16BECodec, false, true), 'prototype'), 'encoder', J$.R(161505, 'Utf16BEEncoder', Utf16BEEncoder, false, true));
            J$.P(161545, J$.G(161529, J$.R(161521, 'Utf16BECodec', Utf16BECodec, false, true), 'prototype'), 'decoder', J$.R(161537, 'Utf16BEDecoder', Utf16BEDecoder, false, true));
            J$.P(161577, J$.G(161561, J$.R(161553, 'Utf16BECodec', Utf16BECodec, false, true), 'prototype'), 'bomAware', J$.T(161569, true, 23, false));
            J$.P(161921, J$.G(161609, J$.R(161601, 'Utf16BEEncoder', Utf16BEEncoder, false, true), 'prototype'), 'write', J$.T(161913, function (str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(161865, arguments.callee, this, arguments);
                            arguments = J$.N(161873, 'arguments', arguments, true, false, false);
                            str = J$.N(161881, 'str', str, true, false, false);
                            J$.N(161889, 'buf', buf, false, false, false);
                            J$.N(161897, 'i', i, false, false, false);
                            J$.N(161905, 'tmp', tmp, false, false, false);
                            var buf = J$.W(161649, 'buf', J$.M(161641, J$.R(161617, 'Buffer', Buffer, false, true), 'from', false)(J$.R(161625, 'str', str, false, false), J$.T(161633, 'ucs2', 21, false)), buf, false, false);
                            for (var i = J$.W(161665, 'i', J$.T(161657, 0, 22, false), i, false, false); J$.C(9584, J$.B(15194, '<', J$.R(161673, 'i', i, false, false), J$.G(161689, J$.R(161681, 'buf', buf, false, false), 'length'))); i = J$.W(161713, 'i', J$.B(15202, '+', J$.R(161705, 'i', i, false, false), J$.T(161697, 2, 22, false)), i, false, false)) {
                                var tmp = J$.W(161745, 'tmp', J$.G(161737, J$.R(161721, 'buf', buf, false, false), J$.R(161729, 'i', i, false, false)), tmp, false, false);
                                J$.P(161801, J$.R(161753, 'buf', buf, false, false), J$.R(161761, 'i', i, false, false), J$.G(161793, J$.R(161769, 'buf', buf, false, false), J$.B(15210, '+', J$.R(161777, 'i', i, false, false), J$.T(161785, 1, 22, false))));
                                J$.P(161841, J$.R(161809, 'buf', buf, false, false), J$.B(15218, '+', J$.R(161817, 'i', i, false, false), J$.T(161825, 1, 22, false)), J$.R(161833, 'tmp', tmp, false, false));
                            }
                            return J$.Rt(161857, J$.R(161849, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(165089, J$e);
                        } finally {
                            if (J$.Fr(165097))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(161969, J$.G(161937, J$.R(161929, 'Utf16BEEncoder', Utf16BEEncoder, false, true), 'prototype'), 'end', J$.T(161961, function () {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(161945, arguments.callee, this, arguments);
                            arguments = J$.N(161953, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(165105, J$e);
                        } finally {
                            if (J$.Fr(165113))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(162697, J$.G(162025, J$.R(162017, 'Utf16BEDecoder', Utf16BEDecoder, false, true), 'prototype'), 'write', J$.T(162689, function (buf) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(162641, arguments.callee, this, arguments);
                            arguments = J$.N(162649, 'arguments', arguments, true, false, false);
                            buf = J$.N(162657, 'buf', buf, true, false, false);
                            J$.N(162665, 'buf2', buf2, false, false, false);
                            J$.N(162673, 'i', i, false, false, false);
                            J$.N(162681, 'j', j, false, false, false);
                            if (J$.C(9592, J$.B(15234, '==', J$.G(162041, J$.R(162033, 'buf', buf, false, false), 'length'), J$.T(162049, 0, 22, false))))
                                return J$.Rt(162065, J$.T(162057, '', 21, false));
                            var buf2 = J$.W(162129, 'buf2', J$.M(162105, J$.R(162073, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(15242, '+', J$.G(162089, J$.R(162081, 'buf', buf, false, false), 'length'), J$.T(162097, 1, 22, false))), buf2, false, false), i = J$.W(162137, 'i', J$.T(162113, 0, 22, false), i, false, false), j = J$.W(162145, 'j', J$.T(162121, 0, 22, false), j, false, false);
                            if (J$.C(9600, J$.B(15258, '!==', J$.G(162161, J$.R(162153, 'this', this, false, false), 'overflowByte'), J$.U(15250, '-', J$.T(162169, 1, 22, false))))) {
                                J$.P(162217, J$.R(162177, 'buf2', buf2, false, false), J$.T(162185, 0, 22, false), J$.G(162209, J$.R(162193, 'buf', buf, false, false), J$.T(162201, 0, 22, false)));
                                J$.P(162257, J$.R(162225, 'buf2', buf2, false, false), J$.T(162233, 1, 22, false), J$.G(162249, J$.R(162241, 'this', this, false, false), 'overflowByte'));
                                i = J$.W(162273, 'i', J$.T(162265, 1, 22, false), i, false, false);
                                j = J$.W(162289, 'j', J$.T(162281, 2, 22, false), j, false, false);
                            }
                            for (; J$.C(9608, J$.B(15274, '<', J$.R(162297, 'i', i, false, false), J$.B(15266, '-', J$.G(162313, J$.R(162305, 'buf', buf, false, false), 'length'), J$.T(162321, 1, 22, false)))); i = J$.W(162345, 'i', J$.B(15282, '+', J$.R(162337, 'i', i, false, false), J$.T(162329, 2, 22, false)), i, false, false), j = J$.W(162369, 'j', J$.B(15290, '+', J$.R(162361, 'j', j, false, false), J$.T(162353, 2, 22, false)), j, false, false)) {
                                J$.P(162425, J$.R(162377, 'buf2', buf2, false, false), J$.R(162385, 'j', j, false, false), J$.G(162417, J$.R(162393, 'buf', buf, false, false), J$.B(15298, '+', J$.R(162401, 'i', i, false, false), J$.T(162409, 1, 22, false))));
                                J$.P(162481, J$.R(162433, 'buf2', buf2, false, false), J$.B(15306, '+', J$.R(162441, 'j', j, false, false), J$.T(162449, 1, 22, false)), J$.G(162473, J$.R(162457, 'buf', buf, false, false), J$.R(162465, 'i', i, false, false)));
                            }
                            J$.P(162577, J$.R(162489, 'this', this, false, false), 'overflowByte', J$.C(9616, J$.B(15322, '==', J$.R(162497, 'i', i, false, false), J$.B(15314, '-', J$.G(162513, J$.R(162505, 'buf', buf, false, false), 'length'), J$.T(162521, 1, 22, false)))) ? J$.G(162561, J$.R(162529, 'buf', buf, false, false), J$.B(15330, '-', J$.G(162545, J$.R(162537, 'buf', buf, false, false), 'length'), J$.T(162553, 1, 22, false))) : J$.U(15338, '-', J$.T(162569, 1, 22, false)));
                            return J$.Rt(162633, J$.M(162625, J$.M(162609, J$.R(162585, 'buf2', buf2, false, false), 'slice', false)(J$.T(162593, 0, 22, false), J$.R(162601, 'j', j, false, false)), 'toString', false)(J$.T(162617, 'ucs2', 21, false)));
                        } catch (J$e) {
                            J$.Ex(165137, J$e);
                        } finally {
                            if (J$.Fr(165145))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(162745, J$.G(162713, J$.R(162705, 'Utf16BEDecoder', Utf16BEDecoder, false, true), 'prototype'), 'end', J$.T(162737, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(162721, arguments.callee, this, arguments);
                            arguments = J$.N(162729, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(165153, J$e);
                        } finally {
                            if (J$.Fr(165161))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(162769, J$.I(typeof exports === 'undefined' ? exports = J$.R(162753, 'exports', undefined, true, true) : exports = J$.R(162753, 'exports', exports, true, true)), 'utf16', J$.R(162761, 'Utf16Codec', Utf16Codec, false, true));
            J$.P(162857, J$.G(162841, J$.R(162833, 'Utf16Codec', Utf16Codec, false, true), 'prototype'), 'encoder', J$.R(162849, 'Utf16Encoder', Utf16Encoder, false, true));
            J$.P(162889, J$.G(162873, J$.R(162865, 'Utf16Codec', Utf16Codec, false, true), 'prototype'), 'decoder', J$.R(162881, 'Utf16Decoder', Utf16Decoder, false, true));
            J$.P(163145, J$.G(163065, J$.R(163057, 'Utf16Encoder', Utf16Encoder, false, true), 'prototype'), 'write', J$.T(163137, function (str) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(163113, arguments.callee, this, arguments);
                            arguments = J$.N(163121, 'arguments', arguments, true, false, false);
                            str = J$.N(163129, 'str', str, true, false, false);
                            return J$.Rt(163105, J$.M(163097, J$.G(163081, J$.R(163073, 'this', this, false, false), 'encoder'), 'write', false)(J$.R(163089, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(165201, J$e);
                        } finally {
                            if (J$.Fr(165209))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(163225, J$.G(163161, J$.R(163153, 'Utf16Encoder', Utf16Encoder, false, true), 'prototype'), 'end', J$.T(163217, function () {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(163201, arguments.callee, this, arguments);
                            arguments = J$.N(163209, 'arguments', arguments, true, false, false);
                            return J$.Rt(163193, J$.M(163185, J$.G(163177, J$.R(163169, 'this', this, false, false), 'encoder'), 'end', false)());
                        } catch (J$e) {
                            J$.Ex(165217, J$e);
                        } finally {
                            if (J$.Fr(165225))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(163825, J$.G(163409, J$.R(163401, 'Utf16Decoder', Utf16Decoder, false, true), 'prototype'), 'write', J$.T(163817, function (buf) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(163785, arguments.callee, this, arguments);
                            arguments = J$.N(163793, 'arguments', arguments, true, false, false);
                            buf = J$.N(163801, 'buf', buf, true, false, false);
                            J$.N(163809, 'encoding', encoding, false, false, false);
                            if (J$.C(9656, J$.U(15354, '!', J$.G(163425, J$.R(163417, 'this', this, false, false), 'decoder')))) {
                                J$.M(163457, J$.G(163441, J$.R(163433, 'this', this, false, false), 'initialBytes'), 'push', false)(J$.R(163449, 'buf', buf, false, false));
                                J$.A(163489, J$.R(163465, 'this', this, false, false), 'initialBytesLen', '+')(J$.G(163481, J$.R(163473, 'buf', buf, false, false), 'length'));
                                if (J$.C(9648, J$.B(15362, '<', J$.G(163505, J$.R(163497, 'this', this, false, false), 'initialBytesLen'), J$.T(163513, 16, 22, false))))
                                    return J$.Rt(163529, J$.T(163521, '', 21, false));
                                var buf = J$.W(163617, 'buf', J$.M(163561, J$.R(163537, 'Buffer', Buffer, false, true), 'concat', false)(J$.G(163553, J$.R(163545, 'this', this, false, false), 'initialBytes')), buf, false, false), encoding = J$.W(163625, 'encoding', J$.F(163609, J$.R(163569, 'detectEncoding', detectEncoding, false, true), false)(J$.R(163577, 'buf', buf, false, false), J$.G(163601, J$.G(163593, J$.R(163585, 'this', this, false, false), 'options'), 'defaultEncoding')), encoding, false, false);
                                J$.P(163689, J$.R(163633, 'this', this, false, false), 'decoder', J$.M(163681, J$.G(163649, J$.R(163641, 'this', this, false, false), 'iconv'), 'getDecoder', false)(J$.R(163657, 'encoding', encoding, false, false), J$.G(163673, J$.R(163665, 'this', this, false, false), 'options')));
                                J$.P(163737, J$.G(163705, J$.R(163697, 'this', this, false, false), 'initialBytes'), 'length', J$.P(163729, J$.R(163713, 'this', this, false, false), 'initialBytesLen', J$.T(163721, 0, 22, false)));
                            }
                            return J$.Rt(163777, J$.M(163769, J$.G(163753, J$.R(163745, 'this', this, false, false), 'decoder'), 'write', false)(J$.R(163761, 'buf', buf, false, false)));
                        } catch (J$e) {
                            J$.Ex(165249, J$e);
                        } finally {
                            if (J$.Fr(165257))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(164225, J$.G(163841, J$.R(163833, 'Utf16Decoder', Utf16Decoder, false, true), 'prototype'), 'end', J$.T(164217, function () {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(164169, arguments.callee, this, arguments);
                            arguments = J$.N(164177, 'arguments', arguments, true, false, false);
                            J$.N(164185, 'buf', buf, false, false, false);
                            J$.N(164193, 'encoding', encoding, false, false, false);
                            J$.N(164201, 'res', res, false, false, false);
                            J$.N(164209, 'trail', trail, false, false, false);
                            if (J$.C(9672, J$.U(15370, '!', J$.G(163857, J$.R(163849, 'this', this, false, false), 'decoder')))) {
                                var buf = J$.W(163945, 'buf', J$.M(163889, J$.R(163865, 'Buffer', Buffer, false, true), 'concat', false)(J$.G(163881, J$.R(163873, 'this', this, false, false), 'initialBytes')), buf, false, false), encoding = J$.W(163953, 'encoding', J$.F(163937, J$.R(163897, 'detectEncoding', detectEncoding, false, true), false)(J$.R(163905, 'buf', buf, false, false), J$.G(163929, J$.G(163921, J$.R(163913, 'this', this, false, false), 'options'), 'defaultEncoding')), encoding, false, false);
                                J$.P(164017, J$.R(163961, 'this', this, false, false), 'decoder', J$.M(164009, J$.G(163977, J$.R(163969, 'this', this, false, false), 'iconv'), 'getDecoder', false)(J$.R(163985, 'encoding', encoding, false, false), J$.G(164001, J$.R(163993, 'this', this, false, false), 'options')));
                                var res = J$.W(164081, 'res', J$.M(164049, J$.G(164033, J$.R(164025, 'this', this, false, false), 'decoder'), 'write', false)(J$.R(164041, 'buf', buf, false, false)), res, false, false), trail = J$.W(164089, 'trail', J$.M(164073, J$.G(164065, J$.R(164057, 'this', this, false, false), 'decoder'), 'end', false)(), trail, false, false);
                                return J$.Rt(164129, J$.C(9664, J$.R(164097, 'trail', trail, false, false)) ? J$.B(15378, '+', J$.R(164105, 'res', res, false, false), J$.R(164113, 'trail', trail, false, false)) : J$.R(164121, 'res', res, false, false));
                            }
                            return J$.Rt(164161, J$.M(164153, J$.G(164145, J$.R(164137, 'this', this, false, false), 'decoder'), 'end', false)());
                        } catch (J$e) {
                            J$.Ex(165265, J$e);
                        } finally {
                            if (J$.Fr(165273))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(165297, J$e);
        } finally {
            if (J$.Sr(165305))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

