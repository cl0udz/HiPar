J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(207801, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/iconv-lite/encodings/utf16.js');
            function Utf16BECodec() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(204345, arguments.callee, this, arguments);
                            arguments = J$.N(204353, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(207929, J$e);
                        } finally {
                            if (J$.Fr(207937))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16BEEncoder() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(204457, arguments.callee, this, arguments);
                            arguments = J$.N(204465, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(207945, J$e);
                        } finally {
                            if (J$.Fr(207953))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16BEDecoder() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(204873, arguments.callee, this, arguments);
                            arguments = J$.N(204881, 'arguments', arguments, true, false, false);
                            J$.P(204865, J$.R(204849, 'this', this, false, false), 'overflowByte', J$.U(18346, '-', J$.T(204857, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(207993, J$e);
                        } finally {
                            if (J$.Fr(208001))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16Codec(codecOptions, iconv) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(205673, arguments.callee, this, arguments);
                            arguments = J$.N(205681, 'arguments', arguments, true, false, false);
                            codecOptions = J$.N(205689, 'codecOptions', codecOptions, true, false, false);
                            iconv = J$.N(205697, 'iconv', iconv, true, false, false);
                            J$.P(205665, J$.R(205649, 'this', this, false, false), 'iconv', J$.R(205657, 'iconv', iconv, false, false));
                        } catch (J$e) {
                            J$.Ex(208041, J$e);
                        } finally {
                            if (J$.Fr(208049))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16Encoder(options, codec) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(205897, arguments.callee, this, arguments);
                            arguments = J$.N(205905, 'arguments', arguments, true, false, false);
                            options = J$.N(205913, 'options', options, true, false, false);
                            codec = J$.N(205921, 'codec', codec, true, false, false);
                            options = J$.W(205785, 'options', J$.C(11896, J$.R(205769, 'options', options, false, false)) ? J$._() : J$.T(205777, {}, 11, false), options, false, false);
                            if (J$.C(11904, J$.B(18466, '===', J$.G(205801, J$.R(205793, 'options', options, false, false), 'addBOM'), J$.T(205809, undefined, 24, false))))
                                J$.P(205833, J$.R(205817, 'options', options, false, false), 'addBOM', J$.T(205825, true, 23, false));
                            J$.P(205889, J$.R(205841, 'this', this, false, false), 'encoder', J$.M(205881, J$.G(205857, J$.R(205849, 'codec', codec, false, false), 'iconv'), 'getEncoder', false)(J$.T(205865, 'utf-16le', 21, false), J$.R(205873, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(208057, J$e);
                        } finally {
                            if (J$.Fr(208065))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Utf16Decoder(options, codec) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(206241, arguments.callee, this, arguments);
                            arguments = J$.N(206249, 'arguments', arguments, true, false, false);
                            options = J$.N(206257, 'options', options, true, false, false);
                            codec = J$.N(206265, 'codec', codec, true, false, false);
                            J$.P(206121, J$.R(206105, 'this', this, false, false), 'decoder', J$.T(206113, null, 25, false));
                            J$.P(206145, J$.R(206129, 'this', this, false, false), 'initialBytes', J$.T(206137, [], 10, false));
                            J$.P(206169, J$.R(206153, 'this', this, false, false), 'initialBytesLen', J$.T(206161, 0, 22, false));
                            J$.P(206201, J$.R(206177, 'this', this, false, false), 'options', J$.C(11912, J$.R(206185, 'options', options, false, false)) ? J$._() : J$.T(206193, {}, 11, false));
                            J$.P(206233, J$.R(206209, 'this', this, false, false), 'iconv', J$.G(206225, J$.R(206217, 'codec', codec, false, false), 'iconv'));
                        } catch (J$e) {
                            J$.Ex(208105, J$e);
                        } finally {
                            if (J$.Fr(208113))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function detectEncoding(buf, defaultEncoding) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(207729, arguments.callee, this, arguments);
                            arguments = J$.N(207737, 'arguments', arguments, true, false, false);
                            buf = J$.N(207745, 'buf', buf, true, false, false);
                            defaultEncoding = J$.N(207753, 'defaultEncoding', defaultEncoding, true, false, false);
                            J$.N(207761, 'enc', enc, false, false, false);
                            J$.N(207769, 'asciiCharsLE', asciiCharsLE, false, false, false);
                            J$.N(207777, 'asciiCharsBE', asciiCharsBE, false, false, false);
                            J$.N(207785, '_len', _len, false, false, false);
                            J$.N(207793, 'i', i, false, false, false);
                            var enc = J$.W(207121, 'enc', J$.C(11952, J$.R(207105, 'defaultEncoding', defaultEncoding, false, false)) ? J$._() : J$.T(207113, 'utf-16le', 21, false), enc, false, false);
                            if (J$.C(12048, J$.B(18506, '>=', J$.G(207137, J$.R(207129, 'buf', buf, false, false), 'length'), J$.T(207145, 2, 22, false)))) {
                                if (J$.C(12040, J$.C(11960, J$.B(18514, '==', J$.G(207169, J$.R(207153, 'buf', buf, false, false), J$.T(207161, 0, 22, false)), J$.T(207177, 254, 22, false))) ? J$.B(18522, '==', J$.G(207201, J$.R(207185, 'buf', buf, false, false), J$.T(207193, 1, 22, false)), J$.T(207209, 255, 22, false)) : J$._()))
                                    enc = J$.W(207225, 'enc', J$.T(207217, 'utf-16be', 21, false), enc, false, false);
                                else if (J$.C(12032, J$.C(11968, J$.B(18530, '==', J$.G(207249, J$.R(207233, 'buf', buf, false, false), J$.T(207241, 0, 22, false)), J$.T(207257, 255, 22, false))) ? J$.B(18538, '==', J$.G(207281, J$.R(207265, 'buf', buf, false, false), J$.T(207273, 1, 22, false)), J$.T(207289, 254, 22, false)) : J$._()))
                                    enc = J$.W(207305, 'enc', J$.T(207297, 'utf-16le', 21, false), enc, false, false);
                                else {
                                    var asciiCharsLE = J$.W(207393, 'asciiCharsLE', J$.T(207313, 0, 22, false), asciiCharsLE, false, false), asciiCharsBE = J$.W(207401, 'asciiCharsBE', J$.T(207321, 0, 22, false), asciiCharsBE, false, false), _len = J$.W(207409, '_len', J$.M(207385, J$.I(typeof Math === 'undefined' ? Math = J$.R(207329, 'Math', undefined, true, true) : Math = J$.R(207329, 'Math', Math, true, true)), 'min', false)(J$.B(18554, '-', J$.G(207345, J$.R(207337, 'buf', buf, false, false), 'length'), J$.B(18546, '%', J$.G(207361, J$.R(207353, 'buf', buf, false, false), 'length'), J$.T(207369, 2, 22, false))), J$.T(207377, 64, 22, false)), _len, false, false);
                                    for (var i = J$.W(207425, 'i', J$.T(207417, 0, 22, false), i, false, false); J$.C(12008, J$.B(18562, '<', J$.R(207433, 'i', i, false, false), J$.R(207441, '_len', _len, false, false))); i = J$.W(207465, 'i', J$.B(18570, '+', J$.R(207457, 'i', i, false, false), J$.T(207449, 2, 22, false)), i, false, false)) {
                                        if (J$.C(11984, J$.C(11976, J$.B(18578, '===', J$.G(207489, J$.R(207473, 'buf', buf, false, false), J$.R(207481, 'i', i, false, false)), J$.T(207497, 0, 22, false))) ? J$.B(18594, '!==', J$.G(207529, J$.R(207505, 'buf', buf, false, false), J$.B(18586, '+', J$.R(207513, 'i', i, false, false), J$.T(207521, 1, 22, false))), J$.T(207537, 0, 22, false)) : J$._()))
                                            J$.B(18618, '-', asciiCharsBE = J$.W(207553, 'asciiCharsBE', J$.B(18610, '+', J$.U(18602, '+', J$.R(207545, 'asciiCharsBE', asciiCharsBE, false, false)), 1), asciiCharsBE, false, false), 1);
                                        if (J$.C(12000, J$.C(11992, J$.B(18626, '!==', J$.G(207577, J$.R(207561, 'buf', buf, false, false), J$.R(207569, 'i', i, false, false)), J$.T(207585, 0, 22, false))) ? J$.B(18642, '===', J$.G(207617, J$.R(207593, 'buf', buf, false, false), J$.B(18634, '+', J$.R(207601, 'i', i, false, false), J$.T(207609, 1, 22, false))), J$.T(207625, 0, 22, false)) : J$._()))
                                            J$.B(18666, '-', asciiCharsLE = J$.W(207641, 'asciiCharsLE', J$.B(18658, '+', J$.U(18650, '+', J$.R(207633, 'asciiCharsLE', asciiCharsLE, false, false)), 1), asciiCharsLE, false, false), 1);
                                    }
                                    if (J$.C(12024, J$.B(18674, '>', J$.R(207649, 'asciiCharsBE', asciiCharsBE, false, false), J$.R(207657, 'asciiCharsLE', asciiCharsLE, false, false))))
                                        enc = J$.W(207673, 'enc', J$.T(207665, 'utf-16be', 21, false), enc, false, false);
                                    else if (J$.C(12016, J$.B(18682, '<', J$.R(207681, 'asciiCharsBE', asciiCharsBE, false, false), J$.R(207689, 'asciiCharsLE', asciiCharsLE, false, false))))
                                        enc = J$.W(207705, 'enc', J$.T(207697, 'utf-16le', 21, false), enc, false, false);
                                }
                            }
                            return J$.Rt(207721, J$.R(207713, 'enc', enc, false, false));
                        } catch (J$e) {
                            J$.Ex(208153, J$e);
                        } finally {
                            if (J$.Fr(208161))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(207809, 'Buffer', Buffer, false, false, false);
            Utf16BECodec = J$.N(207825, 'Utf16BECodec', J$.T(207817, Utf16BECodec, 12, false), true, false, false);
            Utf16BEEncoder = J$.N(207841, 'Utf16BEEncoder', J$.T(207833, Utf16BEEncoder, 12, false), true, false, false);
            Utf16BEDecoder = J$.N(207857, 'Utf16BEDecoder', J$.T(207849, Utf16BEDecoder, 12, false), true, false, false);
            Utf16Codec = J$.N(207873, 'Utf16Codec', J$.T(207865, Utf16Codec, 12, false), true, false, false);
            Utf16Encoder = J$.N(207889, 'Utf16Encoder', J$.T(207881, Utf16Encoder, 12, false), true, false, false);
            Utf16Decoder = J$.N(207905, 'Utf16Decoder', J$.T(207897, Utf16Decoder, 12, false), true, false, false);
            detectEncoding = J$.N(207921, 'detectEncoding', J$.T(207913, detectEncoding, 12, false), true, false, false);
            J$.T(204153, 'use strict', 21, false);
            J$.F(204177, J$.I(typeof require === 'undefined' ? require = J$.R(204161, 'require', undefined, true, true) : require = J$.R(204161, 'require', require, true, true)), false)(J$.T(204169, 'core-js/modules/es.array.concat', 21, false));
            J$.F(204201, J$.I(typeof require === 'undefined' ? require = J$.R(204185, 'require', undefined, true, true) : require = J$.R(204185, 'require', require, true, true)), false)(J$.T(204193, 'core-js/modules/es.array.slice', 21, false));
            J$.F(204225, J$.I(typeof require === 'undefined' ? require = J$.R(204209, 'require', undefined, true, true) : require = J$.R(204209, 'require', require, true, true)), false)(J$.T(204217, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(204249, J$.I(typeof require === 'undefined' ? require = J$.R(204233, 'require', undefined, true, true) : require = J$.R(204233, 'require', require, true, true)), false)(J$.T(204241, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(204273, J$.I(typeof require === 'undefined' ? require = J$.R(204257, 'require', undefined, true, true) : require = J$.R(204257, 'require', require, true, true)), false)(J$.T(204265, 'core-js/modules/es.regexp.to-string', 21, false));
            var Buffer = J$.W(204313, 'Buffer', J$.G(204305, J$.F(204297, J$.I(typeof require === 'undefined' ? require = J$.R(204281, 'require', undefined, true, true) : require = J$.R(204281, 'require', require, true, true)), false)(J$.T(204289, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            J$.P(204337, J$.I(typeof exports === 'undefined' ? exports = J$.R(204321, 'exports', undefined, true, true) : exports = J$.R(204321, 'exports', exports, true, true)), 'utf16be', J$.R(204329, 'Utf16BECodec', Utf16BECodec, false, true));
            J$.P(204385, J$.G(204369, J$.R(204361, 'Utf16BECodec', Utf16BECodec, false, true), 'prototype'), 'encoder', J$.R(204377, 'Utf16BEEncoder', Utf16BEEncoder, false, true));
            J$.P(204417, J$.G(204401, J$.R(204393, 'Utf16BECodec', Utf16BECodec, false, true), 'prototype'), 'decoder', J$.R(204409, 'Utf16BEDecoder', Utf16BEDecoder, false, true));
            J$.P(204449, J$.G(204433, J$.R(204425, 'Utf16BECodec', Utf16BECodec, false, true), 'prototype'), 'bomAware', J$.T(204441, true, 23, false));
            J$.P(204793, J$.G(204481, J$.R(204473, 'Utf16BEEncoder', Utf16BEEncoder, false, true), 'prototype'), 'write', J$.T(204785, function (str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(204737, arguments.callee, this, arguments);
                            arguments = J$.N(204745, 'arguments', arguments, true, false, false);
                            str = J$.N(204753, 'str', str, true, false, false);
                            J$.N(204761, 'buf', buf, false, false, false);
                            J$.N(204769, 'i', i, false, false, false);
                            J$.N(204777, 'tmp', tmp, false, false, false);
                            var buf = J$.W(204521, 'buf', J$.M(204513, J$.R(204489, 'Buffer', Buffer, false, true), 'from', false)(J$.R(204497, 'str', str, false, false), J$.T(204505, 'ucs2', 21, false)), buf, false, false);
                            for (var i = J$.W(204537, 'i', J$.T(204529, 0, 22, false), i, false, false); J$.C(11856, J$.B(18314, '<', J$.R(204545, 'i', i, false, false), J$.G(204561, J$.R(204553, 'buf', buf, false, false), 'length'))); i = J$.W(204585, 'i', J$.B(18322, '+', J$.R(204577, 'i', i, false, false), J$.T(204569, 2, 22, false)), i, false, false)) {
                                var tmp = J$.W(204617, 'tmp', J$.G(204609, J$.R(204593, 'buf', buf, false, false), J$.R(204601, 'i', i, false, false)), tmp, false, false);
                                J$.P(204673, J$.R(204625, 'buf', buf, false, false), J$.R(204633, 'i', i, false, false), J$.G(204665, J$.R(204641, 'buf', buf, false, false), J$.B(18330, '+', J$.R(204649, 'i', i, false, false), J$.T(204657, 1, 22, false))));
                                J$.P(204713, J$.R(204681, 'buf', buf, false, false), J$.B(18338, '+', J$.R(204689, 'i', i, false, false), J$.T(204697, 1, 22, false)), J$.R(204705, 'tmp', tmp, false, false));
                            }
                            return J$.Rt(204729, J$.R(204721, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(207961, J$e);
                        } finally {
                            if (J$.Fr(207969))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(204841, J$.G(204809, J$.R(204801, 'Utf16BEEncoder', Utf16BEEncoder, false, true), 'prototype'), 'end', J$.T(204833, function () {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(204817, arguments.callee, this, arguments);
                            arguments = J$.N(204825, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(207977, J$e);
                        } finally {
                            if (J$.Fr(207985))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(205569, J$.G(204897, J$.R(204889, 'Utf16BEDecoder', Utf16BEDecoder, false, true), 'prototype'), 'write', J$.T(205561, function (buf) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(205513, arguments.callee, this, arguments);
                            arguments = J$.N(205521, 'arguments', arguments, true, false, false);
                            buf = J$.N(205529, 'buf', buf, true, false, false);
                            J$.N(205537, 'buf2', buf2, false, false, false);
                            J$.N(205545, 'i', i, false, false, false);
                            J$.N(205553, 'j', j, false, false, false);
                            if (J$.C(11864, J$.B(18354, '==', J$.G(204913, J$.R(204905, 'buf', buf, false, false), 'length'), J$.T(204921, 0, 22, false))))
                                return J$.Rt(204937, J$.T(204929, '', 21, false));
                            var buf2 = J$.W(205001, 'buf2', J$.M(204977, J$.R(204945, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(18362, '+', J$.G(204961, J$.R(204953, 'buf', buf, false, false), 'length'), J$.T(204969, 1, 22, false))), buf2, false, false), i = J$.W(205009, 'i', J$.T(204985, 0, 22, false), i, false, false), j = J$.W(205017, 'j', J$.T(204993, 0, 22, false), j, false, false);
                            if (J$.C(11872, J$.B(18378, '!==', J$.G(205033, J$.R(205025, 'this', this, false, false), 'overflowByte'), J$.U(18370, '-', J$.T(205041, 1, 22, false))))) {
                                J$.P(205089, J$.R(205049, 'buf2', buf2, false, false), J$.T(205057, 0, 22, false), J$.G(205081, J$.R(205065, 'buf', buf, false, false), J$.T(205073, 0, 22, false)));
                                J$.P(205129, J$.R(205097, 'buf2', buf2, false, false), J$.T(205105, 1, 22, false), J$.G(205121, J$.R(205113, 'this', this, false, false), 'overflowByte'));
                                i = J$.W(205145, 'i', J$.T(205137, 1, 22, false), i, false, false);
                                j = J$.W(205161, 'j', J$.T(205153, 2, 22, false), j, false, false);
                            }
                            for (; J$.C(11880, J$.B(18394, '<', J$.R(205169, 'i', i, false, false), J$.B(18386, '-', J$.G(205185, J$.R(205177, 'buf', buf, false, false), 'length'), J$.T(205193, 1, 22, false)))); i = J$.W(205217, 'i', J$.B(18402, '+', J$.R(205209, 'i', i, false, false), J$.T(205201, 2, 22, false)), i, false, false), j = J$.W(205241, 'j', J$.B(18410, '+', J$.R(205233, 'j', j, false, false), J$.T(205225, 2, 22, false)), j, false, false)) {
                                J$.P(205297, J$.R(205249, 'buf2', buf2, false, false), J$.R(205257, 'j', j, false, false), J$.G(205289, J$.R(205265, 'buf', buf, false, false), J$.B(18418, '+', J$.R(205273, 'i', i, false, false), J$.T(205281, 1, 22, false))));
                                J$.P(205353, J$.R(205305, 'buf2', buf2, false, false), J$.B(18426, '+', J$.R(205313, 'j', j, false, false), J$.T(205321, 1, 22, false)), J$.G(205345, J$.R(205329, 'buf', buf, false, false), J$.R(205337, 'i', i, false, false)));
                            }
                            J$.P(205449, J$.R(205361, 'this', this, false, false), 'overflowByte', J$.C(11888, J$.B(18442, '==', J$.R(205369, 'i', i, false, false), J$.B(18434, '-', J$.G(205385, J$.R(205377, 'buf', buf, false, false), 'length'), J$.T(205393, 1, 22, false)))) ? J$.G(205433, J$.R(205401, 'buf', buf, false, false), J$.B(18450, '-', J$.G(205417, J$.R(205409, 'buf', buf, false, false), 'length'), J$.T(205425, 1, 22, false))) : J$.U(18458, '-', J$.T(205441, 1, 22, false)));
                            return J$.Rt(205505, J$.M(205497, J$.M(205481, J$.R(205457, 'buf2', buf2, false, false), 'slice', false)(J$.T(205465, 0, 22, false), J$.R(205473, 'j', j, false, false)), 'toString', false)(J$.T(205489, 'ucs2', 21, false)));
                        } catch (J$e) {
                            J$.Ex(208009, J$e);
                        } finally {
                            if (J$.Fr(208017))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(205617, J$.G(205585, J$.R(205577, 'Utf16BEDecoder', Utf16BEDecoder, false, true), 'prototype'), 'end', J$.T(205609, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(205593, arguments.callee, this, arguments);
                            arguments = J$.N(205601, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(208025, J$e);
                        } finally {
                            if (J$.Fr(208033))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(205641, J$.I(typeof exports === 'undefined' ? exports = J$.R(205625, 'exports', undefined, true, true) : exports = J$.R(205625, 'exports', exports, true, true)), 'utf16', J$.R(205633, 'Utf16Codec', Utf16Codec, false, true));
            J$.P(205729, J$.G(205713, J$.R(205705, 'Utf16Codec', Utf16Codec, false, true), 'prototype'), 'encoder', J$.R(205721, 'Utf16Encoder', Utf16Encoder, false, true));
            J$.P(205761, J$.G(205745, J$.R(205737, 'Utf16Codec', Utf16Codec, false, true), 'prototype'), 'decoder', J$.R(205753, 'Utf16Decoder', Utf16Decoder, false, true));
            J$.P(206017, J$.G(205937, J$.R(205929, 'Utf16Encoder', Utf16Encoder, false, true), 'prototype'), 'write', J$.T(206009, function (str) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(205985, arguments.callee, this, arguments);
                            arguments = J$.N(205993, 'arguments', arguments, true, false, false);
                            str = J$.N(206001, 'str', str, true, false, false);
                            return J$.Rt(205977, J$.M(205969, J$.G(205953, J$.R(205945, 'this', this, false, false), 'encoder'), 'write', false)(J$.R(205961, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(208073, J$e);
                        } finally {
                            if (J$.Fr(208081))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(206097, J$.G(206033, J$.R(206025, 'Utf16Encoder', Utf16Encoder, false, true), 'prototype'), 'end', J$.T(206089, function () {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(206073, arguments.callee, this, arguments);
                            arguments = J$.N(206081, 'arguments', arguments, true, false, false);
                            return J$.Rt(206065, J$.M(206057, J$.G(206049, J$.R(206041, 'this', this, false, false), 'encoder'), 'end', false)());
                        } catch (J$e) {
                            J$.Ex(208089, J$e);
                        } finally {
                            if (J$.Fr(208097))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(206697, J$.G(206281, J$.R(206273, 'Utf16Decoder', Utf16Decoder, false, true), 'prototype'), 'write', J$.T(206689, function (buf) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(206657, arguments.callee, this, arguments);
                            arguments = J$.N(206665, 'arguments', arguments, true, false, false);
                            buf = J$.N(206673, 'buf', buf, true, false, false);
                            J$.N(206681, 'encoding', encoding, false, false, false);
                            if (J$.C(11928, J$.U(18474, '!', J$.G(206297, J$.R(206289, 'this', this, false, false), 'decoder')))) {
                                J$.M(206329, J$.G(206313, J$.R(206305, 'this', this, false, false), 'initialBytes'), 'push', false)(J$.R(206321, 'buf', buf, false, false));
                                J$.A(206361, J$.R(206337, 'this', this, false, false), 'initialBytesLen', '+')(J$.G(206353, J$.R(206345, 'buf', buf, false, false), 'length'));
                                if (J$.C(11920, J$.B(18482, '<', J$.G(206377, J$.R(206369, 'this', this, false, false), 'initialBytesLen'), J$.T(206385, 16, 22, false))))
                                    return J$.Rt(206401, J$.T(206393, '', 21, false));
                                var buf = J$.W(206489, 'buf', J$.M(206433, J$.R(206409, 'Buffer', Buffer, false, true), 'concat', false)(J$.G(206425, J$.R(206417, 'this', this, false, false), 'initialBytes')), buf, false, false), encoding = J$.W(206497, 'encoding', J$.F(206481, J$.R(206441, 'detectEncoding', detectEncoding, false, true), false)(J$.R(206449, 'buf', buf, false, false), J$.G(206473, J$.G(206465, J$.R(206457, 'this', this, false, false), 'options'), 'defaultEncoding')), encoding, false, false);
                                J$.P(206561, J$.R(206505, 'this', this, false, false), 'decoder', J$.M(206553, J$.G(206521, J$.R(206513, 'this', this, false, false), 'iconv'), 'getDecoder', false)(J$.R(206529, 'encoding', encoding, false, false), J$.G(206545, J$.R(206537, 'this', this, false, false), 'options')));
                                J$.P(206609, J$.G(206577, J$.R(206569, 'this', this, false, false), 'initialBytes'), 'length', J$.P(206601, J$.R(206585, 'this', this, false, false), 'initialBytesLen', J$.T(206593, 0, 22, false)));
                            }
                            return J$.Rt(206649, J$.M(206641, J$.G(206625, J$.R(206617, 'this', this, false, false), 'decoder'), 'write', false)(J$.R(206633, 'buf', buf, false, false)));
                        } catch (J$e) {
                            J$.Ex(208121, J$e);
                        } finally {
                            if (J$.Fr(208129))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(207097, J$.G(206713, J$.R(206705, 'Utf16Decoder', Utf16Decoder, false, true), 'prototype'), 'end', J$.T(207089, function () {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(207041, arguments.callee, this, arguments);
                            arguments = J$.N(207049, 'arguments', arguments, true, false, false);
                            J$.N(207057, 'buf', buf, false, false, false);
                            J$.N(207065, 'encoding', encoding, false, false, false);
                            J$.N(207073, 'res', res, false, false, false);
                            J$.N(207081, 'trail', trail, false, false, false);
                            if (J$.C(11944, J$.U(18490, '!', J$.G(206729, J$.R(206721, 'this', this, false, false), 'decoder')))) {
                                var buf = J$.W(206817, 'buf', J$.M(206761, J$.R(206737, 'Buffer', Buffer, false, true), 'concat', false)(J$.G(206753, J$.R(206745, 'this', this, false, false), 'initialBytes')), buf, false, false), encoding = J$.W(206825, 'encoding', J$.F(206809, J$.R(206769, 'detectEncoding', detectEncoding, false, true), false)(J$.R(206777, 'buf', buf, false, false), J$.G(206801, J$.G(206793, J$.R(206785, 'this', this, false, false), 'options'), 'defaultEncoding')), encoding, false, false);
                                J$.P(206889, J$.R(206833, 'this', this, false, false), 'decoder', J$.M(206881, J$.G(206849, J$.R(206841, 'this', this, false, false), 'iconv'), 'getDecoder', false)(J$.R(206857, 'encoding', encoding, false, false), J$.G(206873, J$.R(206865, 'this', this, false, false), 'options')));
                                var res = J$.W(206953, 'res', J$.M(206921, J$.G(206905, J$.R(206897, 'this', this, false, false), 'decoder'), 'write', false)(J$.R(206913, 'buf', buf, false, false)), res, false, false), trail = J$.W(206961, 'trail', J$.M(206945, J$.G(206937, J$.R(206929, 'this', this, false, false), 'decoder'), 'end', false)(), trail, false, false);
                                return J$.Rt(207001, J$.C(11936, J$.R(206969, 'trail', trail, false, false)) ? J$.B(18498, '+', J$.R(206977, 'res', res, false, false), J$.R(206985, 'trail', trail, false, false)) : J$.R(206993, 'res', res, false, false));
                            }
                            return J$.Rt(207033, J$.M(207025, J$.G(207017, J$.R(207009, 'this', this, false, false), 'decoder'), 'end', false)());
                        } catch (J$e) {
                            J$.Ex(208137, J$e);
                        } finally {
                            if (J$.Fr(208145))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(208169, J$e);
        } finally {
            if (J$.Sr(208177))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

