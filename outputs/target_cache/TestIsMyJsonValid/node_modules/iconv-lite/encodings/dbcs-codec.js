J$.noInstrEval = false;
jalangiLabel17:
    while (true) {
        try {
            J$.Se(148889, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/iconv-lite/encodings/dbcs-codec.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(136809, arguments.callee, this, arguments);
                            arguments = J$.N(136817, 'arguments', arguments, true, false, false);
                            obj = J$.N(136825, 'obj', obj, true, false, false);
                            if (J$.C(8552, J$.C(8512, J$.B(11226, '===', J$.U(11218, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(136545, 'Symbol', undefined, true, true) : Symbol = J$.R(136545, 'Symbol', Symbol, true, true))), J$.T(136553, 'function', 21, false))) ? J$.B(11242, '===', J$.U(11234, 'typeof', J$.G(136569, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(136561, 'Symbol', undefined, true, true) : Symbol = J$.R(136561, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(136577, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(136633, '_typeof', J$.T(136625, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(136601, arguments.callee, this, arguments);
                                                arguments = J$.N(136609, 'arguments', arguments, true, false, false);
                                                obj = J$.N(136617, 'obj', obj, true, false, false);
                                                return J$.Rt(136593, J$.U(11250, 'typeof', J$.R(136585, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(149041, J$e);
                                            } finally {
                                                if (J$.Fr(149049))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(136769, '_typeof', J$.T(136761, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(136737, arguments.callee, this, arguments);
                                                arguments = J$.N(136745, 'arguments', arguments, true, false, false);
                                                obj = J$.N(136753, 'obj', obj, true, false, false);
                                                return J$.Rt(136729, J$.C(8544, J$.C(8536, J$.C(8528, J$.C(8520, J$.R(136641, 'obj', obj, false, false)) ? J$.B(11266, '===', J$.U(11258, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(136649, 'Symbol', undefined, true, true) : Symbol = J$.R(136649, 'Symbol', Symbol, true, true))), J$.T(136657, 'function', 21, false)) : J$._()) ? J$.B(11274, '===', J$.G(136673, J$.R(136665, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(136681, 'Symbol', undefined, true, true) : Symbol = J$.R(136681, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(11282, '!==', J$.R(136689, 'obj', obj, false, false), J$.G(136705, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(136697, 'Symbol', undefined, true, true) : Symbol = J$.R(136697, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(136713, 'symbol', 21, false) : J$.U(11290, 'typeof', J$.R(136721, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(149057, J$e);
                                            } finally {
                                                if (J$.Fr(149065))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(136801, J$.F(136793, J$.R(136777, '_typeof', _typeof, false, true), false)(J$.R(136785, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(149073, J$e);
                        } finally {
                            if (J$.Fr(149081))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DBCSCodec(codecOptions, iconv) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(138913, arguments.callee, this, arguments);
                            arguments = J$.N(138921, 'arguments', arguments, true, false, false);
                            codecOptions = J$.N(138929, 'codecOptions', codecOptions, true, false, false);
                            iconv = J$.N(138937, 'iconv', iconv, true, false, false);
                            J$.N(138945, 'mappingTable', mappingTable, false, false, false);
                            J$.N(138953, 'i', i, false, false, false);
                            J$.N(138961, 'skipEncodeChars', skipEncodeChars, false, false, false);
                            J$.N(138969, 'val', val, false, false, false);
                            J$.N(138977, 'j', j, false, false, false);
                            J$.N(138985, 'uChar', uChar, false, false, false);
                            J$.N(138993, 'thirdByteNodeIdx', thirdByteNodeIdx, false, false, false);
                            J$.N(139001, 'thirdByteNode', thirdByteNode, false, false, false);
                            J$.N(139009, 'fourthByteNodeIdx', fourthByteNodeIdx, false, false, false);
                            J$.N(139017, 'fourthByteNode', fourthByteNode, false, false, false);
                            J$.N(139025, 'secondByteNodeIdx', secondByteNodeIdx, false, false, false);
                            J$.N(139033, 'secondByteNode', secondByteNode, false, false, false);
                            J$.P(137113, J$.R(137089, 'this', this, false, false), 'encodingName', J$.G(137105, J$.R(137097, 'codecOptions', codecOptions, false, false), 'encodingName'));
                            if (J$.C(8568, J$.U(11370, '!', J$.R(137121, 'codecOptions', codecOptions, false, false))))
                                throw J$.F(137145, J$.I(typeof Error === 'undefined' ? Error = J$.R(137129, 'Error', undefined, true, true) : Error = J$.R(137129, 'Error', Error, true, true)), true)(J$.T(137137, 'DBCS codec is called without the data.', 21, false));
                            if (J$.C(8576, J$.U(11378, '!', J$.G(137161, J$.R(137153, 'codecOptions', codecOptions, false, false), 'table'))))
                                throw J$.F(137209, J$.I(typeof Error === 'undefined' ? Error = J$.R(137169, 'Error', undefined, true, true) : Error = J$.R(137169, 'Error', Error, true, true)), true)(J$.B(11394, '+', J$.B(11386, '+', J$.T(137177, 'Encoding \'', 21, false), J$.G(137193, J$.R(137185, 'this', this, false, false), 'encodingName')), J$.T(137201, '\' has no data.', 21, false)));
                            var mappingTable = J$.W(137233, 'mappingTable', J$.M(137225, J$.R(137217, 'codecOptions', codecOptions, false, false), 'table', false)(), mappingTable, false, false);
                            J$.P(137257, J$.R(137241, 'this', this, false, false), 'decodeTables', J$.T(137249, [], 10, false));
                            J$.P(137313, J$.G(137273, J$.R(137265, 'this', this, false, false), 'decodeTables'), J$.T(137281, 0, 22, false), J$.M(137305, J$.R(137289, 'UNASSIGNED_NODE', UNASSIGNED_NODE, false, true), 'slice', false)(J$.T(137297, 0, 22, false)));
                            J$.P(137337, J$.R(137321, 'this', this, false, false), 'decodeTableSeq', J$.T(137329, [], 10, false));
                            for (var i = J$.W(137353, 'i', J$.T(137345, 0, 22, false), i, false, false); J$.C(8584, J$.B(11402, '<', J$.R(137361, 'i', i, false, false), J$.G(137377, J$.R(137369, 'mappingTable', mappingTable, false, false), 'length'))); J$.B(11426, '-', i = J$.W(137393, 'i', J$.B(11418, '+', J$.U(11410, '+', J$.R(137385, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.M(137433, J$.R(137401, 'this', this, false, false), '_addDecodeChunk', false)(J$.G(137425, J$.R(137409, 'mappingTable', mappingTable, false, false), J$.R(137417, 'i', i, false, false)));
                            }
                            J$.P(137465, J$.R(137441, 'this', this, false, false), 'defaultCharUnicode', J$.G(137457, J$.R(137449, 'iconv', iconv, false, false), 'defaultCharUnicode'));
                            J$.P(137489, J$.R(137473, 'this', this, false, false), 'encodeTable', J$.T(137481, [], 10, false));
                            J$.P(137513, J$.R(137497, 'this', this, false, false), 'encodeTableSeq', J$.T(137505, [], 10, false));
                            var skipEncodeChars = J$.W(137529, 'skipEncodeChars', J$.T(137521, {}, 11, false), skipEncodeChars, false, false);
                            if (J$.C(8616, J$.G(137545, J$.R(137537, 'codecOptions', codecOptions, false, false), 'encodeSkipVals')))
                                for (var i = J$.W(137561, 'i', J$.T(137553, 0, 22, false), i, false, false); J$.C(8608, J$.B(11434, '<', J$.R(137569, 'i', i, false, false), J$.G(137593, J$.G(137585, J$.R(137577, 'codecOptions', codecOptions, false, false), 'encodeSkipVals'), 'length'))); J$.B(11458, '-', i = J$.W(137609, 'i', J$.B(11450, '+', J$.U(11442, '+', J$.R(137601, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var val = J$.W(137649, 'val', J$.G(137641, J$.G(137625, J$.R(137617, 'codecOptions', codecOptions, false, false), 'encodeSkipVals'), J$.R(137633, 'i', i, false, false)), val, false, false);
                                    if (J$.C(8600, J$.B(11474, '===', J$.U(11466, 'typeof', J$.R(137657, 'val', val, false, false)), J$.T(137665, 'number', 21, false))))
                                        J$.P(137697, J$.R(137673, 'skipEncodeChars', skipEncodeChars, false, false), J$.R(137681, 'val', val, false, false), J$.T(137689, true, 23, false));
                                    else
                                        for (var j = J$.W(137721, 'j', J$.G(137713, J$.R(137705, 'val', val, false, false), 'from'), j, false, false); J$.C(8592, J$.B(11482, '<=', J$.R(137729, 'j', j, false, false), J$.G(137745, J$.R(137737, 'val', val, false, false), 'to'))); J$.B(11506, '-', j = J$.W(137761, 'j', J$.B(11498, '+', J$.U(11490, '+', J$.R(137753, 'j', j, false, false)), 1), j, false, false), 1)) {
                                            J$.P(137793, J$.R(137769, 'skipEncodeChars', skipEncodeChars, false, false), J$.R(137777, 'j', j, false, false), J$.T(137785, true, 23, false));
                                        }
                                }
                            J$.M(137833, J$.R(137801, 'this', this, false, false), '_fillEncodeTable', false)(J$.T(137809, 0, 22, false), J$.T(137817, 0, 22, false), J$.R(137825, 'skipEncodeChars', skipEncodeChars, false, false));
                            if (J$.C(8632, J$.G(137849, J$.R(137841, 'codecOptions', codecOptions, false, false), 'encodeAdd'))) {
                                for (var uChar in J$.H(138001, J$.G(137865, J$.R(137857, 'codecOptions', codecOptions, false, false), 'encodeAdd'))) {
                                    J$.N(138009, 'uChar', uChar, false, true, false);
                                    {
                                        {
                                            if (J$.C(8624, J$.M(137921, J$.G(137889, J$.G(137881, J$.I(typeof Object === 'undefined' ? Object = J$.R(137873, 'Object', undefined, true, true) : Object = J$.R(137873, 'Object', Object, true, true)), 'prototype'), 'hasOwnProperty'), 'call', false)(J$.G(137905, J$.R(137897, 'codecOptions', codecOptions, false, false), 'encodeAdd'), J$.R(137913, 'uChar', uChar, false, false))))
                                                J$.M(137993, J$.R(137929, 'this', this, false, false), '_setEncodeChar', false)(J$.M(137953, J$.R(137937, 'uChar', uChar, false, false), 'charCodeAt', false)(J$.T(137945, 0, 22, false)), J$.G(137985, J$.G(137969, J$.R(137961, 'codecOptions', codecOptions, false, false), 'encodeAdd'), J$.R(137977, 'uChar', uChar, false, false)));
                                        }
                                    }
                                }
                            }
                            J$.P(138097, J$.R(138017, 'this', this, false, false), 'defCharSB', J$.G(138089, J$.G(138049, J$.G(138033, J$.R(138025, 'this', this, false, false), 'encodeTable'), J$.T(138041, 0, 22, false)), J$.M(138081, J$.G(138065, J$.R(138057, 'iconv', iconv, false, false), 'defaultCharSingleByte'), 'charCodeAt', false)(J$.T(138073, 0, 22, false))));
                            if (J$.C(8640, J$.B(11514, '===', J$.G(138113, J$.R(138105, 'this', this, false, false), 'defCharSB'), J$.R(138121, 'UNASSIGNED', UNASSIGNED, false, true))))
                                J$.P(138185, J$.R(138129, 'this', this, false, false), 'defCharSB', J$.G(138177, J$.G(138161, J$.G(138145, J$.R(138137, 'this', this, false, false), 'encodeTable'), J$.T(138153, 0, 22, false)), J$.T(138169, '?', 21, false)));
                            if (J$.C(8648, J$.B(11522, '===', J$.G(138201, J$.R(138193, 'this', this, false, false), 'defCharSB'), J$.R(138209, 'UNASSIGNED', UNASSIGNED, false, true))))
                                J$.P(138249, J$.R(138217, 'this', this, false, false), 'defCharSB', J$.M(138241, J$.T(138225, '?', 21, false), 'charCodeAt', false)(J$.T(138233, 0, 22, false)));
                            if (J$.C(8688, J$.B(11538, '===', J$.U(11530, 'typeof', J$.G(138265, J$.R(138257, 'codecOptions', codecOptions, false, false), 'gb18030')), J$.T(138273, 'function', 21, false)))) {
                                J$.P(138305, J$.R(138281, 'this', this, false, false), 'gb18030', J$.M(138297, J$.R(138289, 'codecOptions', codecOptions, false, false), 'gb18030', false)());
                                var thirdByteNodeIdx = J$.W(138337, 'thirdByteNodeIdx', J$.G(138329, J$.G(138321, J$.R(138313, 'this', this, false, false), 'decodeTables'), 'length'), thirdByteNodeIdx, false, false);
                                var thirdByteNode = J$.W(138401, 'thirdByteNode', J$.P(138393, J$.G(138353, J$.R(138345, 'this', this, false, false), 'decodeTables'), J$.R(138361, 'thirdByteNodeIdx', thirdByteNodeIdx, false, false), J$.M(138385, J$.R(138369, 'UNASSIGNED_NODE', UNASSIGNED_NODE, false, true), 'slice', false)(J$.T(138377, 0, 22, false))), thirdByteNode, false, false);
                                var fourthByteNodeIdx = J$.W(138433, 'fourthByteNodeIdx', J$.G(138425, J$.G(138417, J$.R(138409, 'this', this, false, false), 'decodeTables'), 'length'), fourthByteNodeIdx, false, false);
                                var fourthByteNode = J$.W(138497, 'fourthByteNode', J$.P(138489, J$.G(138449, J$.R(138441, 'this', this, false, false), 'decodeTables'), J$.R(138457, 'fourthByteNodeIdx', fourthByteNodeIdx, false, false), J$.M(138481, J$.R(138465, 'UNASSIGNED_NODE', UNASSIGNED_NODE, false, true), 'slice', false)(J$.T(138473, 0, 22, false))), fourthByteNode, false, false);
                                for (var i = J$.W(138513, 'i', J$.T(138505, 129, 22, false), i, false, false); J$.C(8664, J$.B(11546, '<=', J$.R(138521, 'i', i, false, false), J$.T(138529, 254, 22, false))); J$.B(11570, '-', i = J$.W(138545, 'i', J$.B(11562, '+', J$.U(11554, '+', J$.R(138537, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var secondByteNodeIdx = J$.W(138609, 'secondByteNodeIdx', J$.B(11578, '-', J$.R(138553, 'NODE_START', NODE_START, false, true), J$.G(138601, J$.G(138585, J$.G(138569, J$.R(138561, 'this', this, false, false), 'decodeTables'), J$.T(138577, 0, 22, false)), J$.R(138593, 'i', i, false, false))), secondByteNodeIdx, false, false);
                                    var secondByteNode = J$.W(138649, 'secondByteNode', J$.G(138641, J$.G(138625, J$.R(138617, 'this', this, false, false), 'decodeTables'), J$.R(138633, 'secondByteNodeIdx', secondByteNodeIdx, false, false)), secondByteNode, false, false);
                                    for (var j = J$.W(138665, 'j', J$.T(138657, 48, 22, false), j, false, false); J$.C(8656, J$.B(11586, '<=', J$.R(138673, 'j', j, false, false), J$.T(138681, 57, 22, false))); J$.B(11610, '-', j = J$.W(138697, 'j', J$.B(11602, '+', J$.U(11594, '+', J$.R(138689, 'j', j, false, false)), 1), j, false, false), 1)) {
                                        J$.P(138737, J$.R(138705, 'secondByteNode', secondByteNode, false, false), J$.R(138713, 'j', j, false, false), J$.B(11618, '-', J$.R(138721, 'NODE_START', NODE_START, false, true), J$.R(138729, 'thirdByteNodeIdx', thirdByteNodeIdx, false, false)));
                                    }
                                }
                                for (var i = J$.W(138753, 'i', J$.T(138745, 129, 22, false), i, false, false); J$.C(8672, J$.B(11626, '<=', J$.R(138761, 'i', i, false, false), J$.T(138769, 254, 22, false))); J$.B(11650, '-', i = J$.W(138785, 'i', J$.B(11642, '+', J$.U(11634, '+', J$.R(138777, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(138825, J$.R(138793, 'thirdByteNode', thirdByteNode, false, false), J$.R(138801, 'i', i, false, false), J$.B(11658, '-', J$.R(138809, 'NODE_START', NODE_START, false, true), J$.R(138817, 'fourthByteNodeIdx', fourthByteNodeIdx, false, false)));
                                }
                                for (var i = J$.W(138841, 'i', J$.T(138833, 48, 22, false), i, false, false); J$.C(8680, J$.B(11666, '<=', J$.R(138849, 'i', i, false, false), J$.T(138857, 57, 22, false))); J$.B(11690, '-', i = J$.W(138873, 'i', J$.B(11682, '+', J$.U(11674, '+', J$.R(138865, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(138905, J$.R(138881, 'fourthByteNode', fourthByteNode, false, false), J$.R(138889, 'i', i, false, false), J$.R(138897, 'GB18030_CODE', GB18030_CODE, false, true));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(149089, J$e);
                        } finally {
                            if (J$.Fr(149097))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DBCSEncoder(options, codec) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(143129, arguments.callee, this, arguments);
                            arguments = J$.N(143137, 'arguments', arguments, true, false, false);
                            options = J$.N(143145, 'options', options, true, false, false);
                            codec = J$.N(143153, 'codec', codec, true, false, false);
                            J$.P(142969, J$.R(142953, 'this', this, false, false), 'leadSurrogate', J$.U(12642, '-', J$.T(142961, 1, 22, false)));
                            J$.P(142993, J$.R(142977, 'this', this, false, false), 'seqObj', J$.T(142985, undefined, 24, false));
                            J$.P(143025, J$.R(143001, 'this', this, false, false), 'encodeTable', J$.G(143017, J$.R(143009, 'codec', codec, false, false), 'encodeTable'));
                            J$.P(143057, J$.R(143033, 'this', this, false, false), 'encodeTableSeq', J$.G(143049, J$.R(143041, 'codec', codec, false, false), 'encodeTableSeq'));
                            J$.P(143089, J$.R(143065, 'this', this, false, false), 'defaultCharSingleByte', J$.G(143081, J$.R(143073, 'codec', codec, false, false), 'defCharSB'));
                            J$.P(143121, J$.R(143097, 'this', this, false, false), 'gb18030', J$.G(143113, J$.R(143105, 'codec', codec, false, false), 'gb18030'));
                        } catch (J$e) {
                            J$.Ex(149201, J$e);
                        } finally {
                            if (J$.Fr(149209))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DBCSDecoder(options, codec) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(146097, arguments.callee, this, arguments);
                            arguments = J$.N(146105, 'arguments', arguments, true, false, false);
                            options = J$.N(146113, 'options', options, true, false, false);
                            codec = J$.N(146121, 'codec', codec, true, false, false);
                            J$.P(145921, J$.R(145905, 'this', this, false, false), 'nodeIdx', J$.T(145913, 0, 22, false));
                            J$.P(145961, J$.R(145929, 'this', this, false, false), 'prevBuf', J$.M(145953, J$.R(145937, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(145945, 0, 22, false)));
                            J$.P(145993, J$.R(145969, 'this', this, false, false), 'decodeTables', J$.G(145985, J$.R(145977, 'codec', codec, false, false), 'decodeTables'));
                            J$.P(146025, J$.R(146001, 'this', this, false, false), 'decodeTableSeq', J$.G(146017, J$.R(146009, 'codec', codec, false, false), 'decodeTableSeq'));
                            J$.P(146057, J$.R(146033, 'this', this, false, false), 'defaultCharUnicode', J$.G(146049, J$.R(146041, 'codec', codec, false, false), 'defaultCharUnicode'));
                            J$.P(146089, J$.R(146065, 'this', this, false, false), 'gb18030', J$.G(146081, J$.R(146073, 'codec', codec, false, false), 'gb18030'));
                        } catch (J$e) {
                            J$.Ex(149249, J$e);
                        } finally {
                            if (J$.Fr(149257))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function findIdx(table, val) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(148833, arguments.callee, this, arguments);
                            arguments = J$.N(148841, 'arguments', arguments, true, false, false);
                            table = J$.N(148849, 'table', table, true, false, false);
                            val = J$.N(148857, 'val', val, true, false, false);
                            J$.N(148865, 'l', l, false, false, false);
                            J$.N(148873, 'r', r, false, false, false);
                            J$.N(148881, 'mid', mid, false, false, false);
                            if (J$.C(9304, J$.B(14210, '>', J$.G(148593, J$.R(148577, 'table', table, false, false), J$.T(148585, 0, 22, false)), J$.R(148601, 'val', val, false, false))))
                                return J$.Rt(148617, J$.U(14218, '-', J$.T(148609, 1, 22, false)));
                            var l = J$.W(148649, 'l', J$.T(148625, 0, 22, false), l, false, false), r = J$.W(148657, 'r', J$.G(148641, J$.R(148633, 'table', table, false, false), 'length'), r, false, false);
                            while (J$.C(9320, J$.B(14234, '<', J$.R(148665, 'l', l, false, false), J$.B(14226, '-', J$.R(148673, 'r', r, false, false), J$.T(148681, 1, 22, false))))) {
                                var mid = J$.W(148745, 'mid', J$.B(14266, '+', J$.R(148689, 'l', l, false, false), J$.M(148737, J$.I(typeof Math === 'undefined' ? Math = J$.R(148697, 'Math', undefined, true, true) : Math = J$.R(148697, 'Math', Math, true, true)), 'floor', false)(J$.B(14258, '/', J$.B(14250, '+', J$.B(14242, '-', J$.R(148705, 'r', r, false, false), J$.R(148713, 'l', l, false, false)), J$.T(148721, 1, 22, false)), J$.T(148729, 2, 22, false)))), mid, false, false);
                                if (J$.C(9312, J$.B(14274, '<=', J$.G(148769, J$.R(148753, 'table', table, false, false), J$.R(148761, 'mid', mid, false, false)), J$.R(148777, 'val', val, false, false))))
                                    l = J$.W(148793, 'l', J$.R(148785, 'mid', mid, false, false), l, false, false);
                                else
                                    r = J$.W(148809, 'r', J$.R(148801, 'mid', mid, false, false), r, false, false);
                            }
                            return J$.Rt(148825, J$.R(148817, 'l', l, false, false));
                        } catch (J$e) {
                            J$.Ex(149297, J$e);
                        } finally {
                            if (J$.Fr(149305))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(148905, '_typeof', J$.T(148897, _typeof, 12, false), true, false, false);
            J$.N(148913, 'Buffer', Buffer, false, false, false);
            J$.N(148921, 'UNASSIGNED', UNASSIGNED, false, false, false);
            J$.N(148929, 'GB18030_CODE', GB18030_CODE, false, false, false);
            J$.N(148937, 'SEQ_START', SEQ_START, false, false, false);
            J$.N(148945, 'NODE_START', NODE_START, false, false, false);
            J$.N(148953, 'UNASSIGNED_NODE', UNASSIGNED_NODE, false, false, false);
            J$.N(148961, 'DEF_CHAR', DEF_CHAR, false, false, false);
            J$.N(148969, 'i', i, false, false, false);
            DBCSCodec = J$.N(148985, 'DBCSCodec', J$.T(148977, DBCSCodec, 12, false), true, false, false);
            DBCSEncoder = J$.N(149001, 'DBCSEncoder', J$.T(148993, DBCSEncoder, 12, false), true, false, false);
            DBCSDecoder = J$.N(149017, 'DBCSDecoder', J$.T(149009, DBCSDecoder, 12, false), true, false, false);
            findIdx = J$.N(149033, 'findIdx', J$.T(149025, findIdx, 12, false), true, false, false);
            J$.T(136249, 'use strict', 21, false);
            J$.F(136273, J$.I(typeof require === 'undefined' ? require = J$.R(136257, 'require', undefined, true, true) : require = J$.R(136257, 'require', require, true, true)), false)(J$.T(136265, 'core-js/modules/es.symbol', 21, false));
            J$.F(136297, J$.I(typeof require === 'undefined' ? require = J$.R(136281, 'require', undefined, true, true) : require = J$.R(136281, 'require', require, true, true)), false)(J$.T(136289, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(136321, J$.I(typeof require === 'undefined' ? require = J$.R(136305, 'require', undefined, true, true) : require = J$.R(136305, 'require', require, true, true)), false)(J$.T(136313, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(136345, J$.I(typeof require === 'undefined' ? require = J$.R(136329, 'require', undefined, true, true) : require = J$.R(136329, 'require', require, true, true)), false)(J$.T(136337, 'core-js/modules/es.array.concat', 21, false));
            J$.F(136369, J$.I(typeof require === 'undefined' ? require = J$.R(136353, 'require', undefined, true, true) : require = J$.R(136353, 'require', require, true, true)), false)(J$.T(136361, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(136393, J$.I(typeof require === 'undefined' ? require = J$.R(136377, 'require', undefined, true, true) : require = J$.R(136377, 'require', require, true, true)), false)(J$.T(136385, 'core-js/modules/es.array.slice', 21, false));
            J$.F(136417, J$.I(typeof require === 'undefined' ? require = J$.R(136401, 'require', undefined, true, true) : require = J$.R(136401, 'require', require, true, true)), false)(J$.T(136409, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(136441, J$.I(typeof require === 'undefined' ? require = J$.R(136425, 'require', undefined, true, true) : require = J$.R(136425, 'require', require, true, true)), false)(J$.T(136433, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(136465, J$.I(typeof require === 'undefined' ? require = J$.R(136449, 'require', undefined, true, true) : require = J$.R(136449, 'require', require, true, true)), false)(J$.T(136457, 'core-js/modules/es.parse-int', 21, false));
            J$.F(136489, J$.I(typeof require === 'undefined' ? require = J$.R(136473, 'require', undefined, true, true) : require = J$.R(136473, 'require', require, true, true)), false)(J$.T(136481, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(136513, J$.I(typeof require === 'undefined' ? require = J$.R(136497, 'require', undefined, true, true) : require = J$.R(136497, 'require', require, true, true)), false)(J$.T(136505, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(136537, J$.I(typeof require === 'undefined' ? require = J$.R(136521, 'require', undefined, true, true) : require = J$.R(136521, 'require', require, true, true)), false)(J$.T(136529, 'core-js/modules/web.dom-collections.iterator', 21, false));
            var Buffer = J$.W(136865, 'Buffer', J$.G(136857, J$.F(136849, J$.I(typeof require === 'undefined' ? require = J$.R(136833, 'require', undefined, true, true) : require = J$.R(136833, 'require', require, true, true)), false)(J$.T(136841, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            J$.P(136889, J$.I(typeof exports === 'undefined' ? exports = J$.R(136873, 'exports', undefined, true, true) : exports = J$.R(136873, 'exports', exports, true, true)), '_dbcs', J$.R(136881, 'DBCSCodec', DBCSCodec, false, true));
            var UNASSIGNED = J$.W(136961, 'UNASSIGNED', J$.U(11298, '-', J$.T(136897, 1, 22, false)), UNASSIGNED, false, true), GB18030_CODE = J$.W(136969, 'GB18030_CODE', J$.U(11306, '-', J$.T(136905, 2, 22, false)), GB18030_CODE, false, true), SEQ_START = J$.W(136977, 'SEQ_START', J$.U(11314, '-', J$.T(136913, 10, 22, false)), SEQ_START, false, true), NODE_START = J$.W(136985, 'NODE_START', J$.U(11322, '-', J$.T(136921, 1000, 22, false)), NODE_START, false, true), UNASSIGNED_NODE = J$.W(136993, 'UNASSIGNED_NODE', J$.F(136945, J$.I(typeof Array === 'undefined' ? Array = J$.R(136929, 'Array', undefined, true, true) : Array = J$.R(136929, 'Array', Array, true, true)), true)(J$.T(136937, 256, 22, false)), UNASSIGNED_NODE, false, true), DEF_CHAR = J$.W(137001, 'DEF_CHAR', J$.U(11330, '-', J$.T(136953, 1, 22, false)), DEF_CHAR, false, true);
            for (var i = J$.W(137017, 'i', J$.T(137009, 0, 22, false), i, false, true); J$.C(8560, J$.B(11338, '<', J$.R(137025, 'i', i, false, true), J$.T(137033, 256, 22, false))); J$.B(11362, '-', i = J$.W(137049, 'i', J$.B(11354, '+', J$.U(11346, '+', J$.R(137041, 'i', i, false, true)), 1), i, false, true), 1)) {
                J$.P(137081, J$.R(137057, 'UNASSIGNED_NODE', UNASSIGNED_NODE, false, true), J$.R(137065, 'i', i, false, true), J$.R(137073, 'UNASSIGNED', UNASSIGNED, false, true));
            }
            J$.P(139065, J$.G(139049, J$.R(139041, 'DBCSCodec', DBCSCodec, false, true), 'prototype'), 'encoder', J$.R(139057, 'DBCSEncoder', DBCSEncoder, false, true));
            J$.P(139097, J$.G(139081, J$.R(139073, 'DBCSCodec', DBCSCodec, false, true), 'prototype'), 'decoder', J$.R(139089, 'DBCSDecoder', DBCSDecoder, false, true));
            J$.P(139769, J$.G(139113, J$.R(139105, 'DBCSCodec', DBCSCodec, false, true), 'prototype'), '_getDecodeTrieNode', J$.T(139761, function (addr) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(139705, arguments.callee, this, arguments);
                            arguments = J$.N(139713, 'arguments', arguments, true, false, false);
                            addr = J$.N(139721, 'addr', addr, true, false, false);
                            J$.N(139729, 'bytes', bytes, false, false, false);
                            J$.N(139737, 'node', node, false, false, false);
                            J$.N(139745, 'i', i, false, false, false);
                            J$.N(139753, 'val', val, false, false, false);
                            var bytes = J$.W(139129, 'bytes', J$.T(139121, [], 10, false), bytes, false, false);
                            for (; J$.C(8696, J$.B(11698, '>', J$.R(139137, 'addr', addr, false, false), J$.T(139145, 0, 22, false))); addr = J$.W(139169, 'addr', J$.B(11706, '>>', J$.R(139161, 'addr', addr, false, false), J$.T(139153, 8, 22, false)), addr, false, false)) {
                                J$.M(139201, J$.R(139177, 'bytes', bytes, false, false), 'push', false)(J$.B(11714, '&', J$.R(139185, 'addr', addr, false, false), J$.T(139193, 255, 22, false)));
                            }
                            if (J$.C(8704, J$.B(11722, '==', J$.G(139217, J$.R(139209, 'bytes', bytes, false, false), 'length'), J$.T(139225, 0, 22, false))))
                                J$.M(139249, J$.R(139233, 'bytes', bytes, false, false), 'push', false)(J$.T(139241, 0, 22, false));
                            var node = J$.W(139289, 'node', J$.G(139281, J$.G(139265, J$.R(139257, 'this', this, false, false), 'decodeTables'), J$.T(139273, 0, 22, false)), node, false, false);
                            for (var i = J$.W(139321, 'i', J$.B(11730, '-', J$.G(139305, J$.R(139297, 'bytes', bytes, false, false), 'length'), J$.T(139313, 1, 22, false)), i, false, false); J$.C(8728, J$.B(11738, '>', J$.R(139329, 'i', i, false, false), J$.T(139337, 0, 22, false))); J$.B(11762, '+', i = J$.W(139353, 'i', J$.B(11754, '-', J$.U(11746, '+', J$.R(139345, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var val = J$.W(139401, 'val', J$.G(139393, J$.R(139361, 'node', node, false, false), J$.G(139385, J$.R(139369, 'bytes', bytes, false, false), J$.R(139377, 'i', i, false, false))), val, false, false);
                                if (J$.C(8720, J$.B(11770, '==', J$.R(139409, 'val', val, false, false), J$.R(139417, 'UNASSIGNED', UNASSIGNED, false, true)))) {
                                    J$.P(139489, J$.R(139425, 'node', node, false, false), J$.G(139449, J$.R(139433, 'bytes', bytes, false, false), J$.R(139441, 'i', i, false, false)), J$.B(11778, '-', J$.R(139457, 'NODE_START', NODE_START, false, true), J$.G(139481, J$.G(139473, J$.R(139465, 'this', this, false, false), 'decodeTables'), 'length')));
                                    J$.M(139545, J$.G(139505, J$.R(139497, 'this', this, false, false), 'decodeTables'), 'push', false)(node = J$.W(139537, 'node', J$.M(139529, J$.R(139513, 'UNASSIGNED_NODE', UNASSIGNED_NODE, false, true), 'slice', false)(J$.T(139521, 0, 22, false)), node, false, false));
                                } else if (J$.C(8712, J$.B(11786, '<=', J$.R(139553, 'val', val, false, false), J$.R(139561, 'NODE_START', NODE_START, false, true)))) {
                                    node = J$.W(139609, 'node', J$.G(139601, J$.G(139577, J$.R(139569, 'this', this, false, false), 'decodeTables'), J$.B(11794, '-', J$.R(139585, 'NODE_START', NODE_START, false, true), J$.R(139593, 'val', val, false, false))), node, false, false);
                                } else
                                    throw J$.F(139681, J$.I(typeof Error === 'undefined' ? Error = J$.R(139617, 'Error', undefined, true, true) : Error = J$.R(139617, 'Error', Error, true, true)), true)(J$.B(11818, '+', J$.B(11810, '+', J$.B(11802, '+', J$.T(139625, 'Overwrite byte in ', 21, false), J$.G(139641, J$.R(139633, 'this', this, false, false), 'encodingName')), J$.T(139649, ', addr: ', 21, false)), J$.M(139673, J$.R(139657, 'addr', addr, false, false), 'toString', false)(J$.T(139665, 16, 22, false))));
                            }
                            return J$.Rt(139697, J$.R(139689, 'node', node, false, false));
                        } catch (J$e) {
                            J$.Ex(149105, J$e);
                        } finally {
                            if (J$.Fr(149113))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(141145, J$.G(139785, J$.R(139777, 'DBCSCodec', DBCSCodec, false, true), 'prototype'), '_addDecodeChunk', J$.T(141137, function (chunk) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(141025, arguments.callee, this, arguments);
                            arguments = J$.N(141033, 'arguments', arguments, true, false, false);
                            chunk = J$.N(141041, 'chunk', chunk, true, false, false);
                            J$.N(141049, 'curAddr', curAddr, false, false, false);
                            J$.N(141057, 'writeTable', writeTable, false, false, false);
                            J$.N(141065, 'k', k, false, false, false);
                            J$.N(141073, 'part', part, false, false, false);
                            J$.N(141081, 'l', l, false, false, false);
                            J$.N(141089, 'code', code, false, false, false);
                            J$.N(141097, 'codeTrail', codeTrail, false, false, false);
                            J$.N(141105, 'len', len, false, false, false);
                            J$.N(141113, 'seq', seq, false, false, false);
                            J$.N(141121, 'm', m, false, false, false);
                            J$.N(141129, 'charCode', charCode, false, false, false);
                            var curAddr = J$.W(139841, 'curAddr', J$.F(139833, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(139793, 'parseInt', undefined, true, true) : parseInt = J$.R(139793, 'parseInt', parseInt, true, true)), false)(J$.G(139817, J$.R(139801, 'chunk', chunk, false, false), J$.T(139809, 0, 22, false)), J$.T(139825, 16, 22, false)), curAddr, false, false);
                            var writeTable = J$.W(139873, 'writeTable', J$.M(139865, J$.R(139849, 'this', this, false, false), '_getDecodeTrieNode', false)(J$.R(139857, 'curAddr', curAddr, false, false)), writeTable, false, false);
                            curAddr = J$.W(139897, 'curAddr', J$.B(11826, '&', J$.R(139881, 'curAddr', curAddr, false, false), J$.T(139889, 255, 22, false)), curAddr, false, false);
                            for (var k = J$.W(139913, 'k', J$.T(139905, 1, 22, false), k, false, false); J$.C(8824, J$.B(11834, '<', J$.R(139921, 'k', k, false, false), J$.G(139937, J$.R(139929, 'chunk', chunk, false, false), 'length'))); J$.B(11858, '-', k = J$.W(139953, 'k', J$.B(11850, '+', J$.U(11842, '+', J$.R(139945, 'k', k, false, false)), 1), k, false, false), 1)) {
                                var part = J$.W(139985, 'part', J$.G(139977, J$.R(139961, 'chunk', chunk, false, false), J$.R(139969, 'k', k, false, false)), part, false, false);
                                if (J$.C(8816, J$.B(11874, '===', J$.U(11866, 'typeof', J$.R(139993, 'part', part, false, false)), J$.T(140001, 'string', 21, false)))) {
                                    for (var l = J$.W(140017, 'l', J$.T(140009, 0, 22, false), l, false, false); J$.C(8792, J$.B(11882, '<', J$.R(140025, 'l', l, false, false), J$.G(140041, J$.R(140033, 'part', part, false, false), 'length')));) {
                                        var code = J$.W(140081, 'code', J$.M(140073, J$.R(140049, 'part', part, false, false), 'charCodeAt', false)(J$.B(11906, '-', l = J$.W(140065, 'l', J$.B(11898, '+', J$.U(11890, '+', J$.R(140057, 'l', l, false, false)), 1), l, false, false), 1)), code, false, false);
                                        if (J$.C(8784, J$.C(8736, J$.B(11914, '<=', J$.T(140089, 55296, 22, false), J$.R(140097, 'code', code, false, false))) ? J$.B(11922, '<', J$.R(140105, 'code', code, false, false), J$.T(140113, 56320, 22, false)) : J$._())) {
                                            var codeTrail = J$.W(140153, 'codeTrail', J$.M(140145, J$.R(140121, 'part', part, false, false), 'charCodeAt', false)(J$.B(11946, '-', l = J$.W(140137, 'l', J$.B(11938, '+', J$.U(11930, '+', J$.R(140129, 'l', l, false, false)), 1), l, false, false), 1)), codeTrail, false, false);
                                            if (J$.C(8752, J$.C(8744, J$.B(11954, '<=', J$.T(140161, 56320, 22, false), J$.R(140169, 'codeTrail', codeTrail, false, false))) ? J$.B(11962, '<', J$.R(140177, 'codeTrail', codeTrail, false, false), J$.T(140185, 57344, 22, false)) : J$._()))
                                                J$.P(140265, J$.R(140193, 'writeTable', writeTable, false, false), J$.B(11986, '-', curAddr = J$.W(140209, 'curAddr', J$.B(11978, '+', J$.U(11970, '+', J$.R(140201, 'curAddr', curAddr, false, false)), 1), curAddr, false, false), 1), J$.B(12026, '+', J$.B(12010, '+', J$.T(140217, 65536, 22, false), J$.B(12002, '*', J$.B(11994, '-', J$.R(140225, 'code', code, false, false), J$.T(140233, 55296, 22, false)), J$.T(140241, 1024, 22, false))), J$.B(12018, '-', J$.R(140249, 'codeTrail', codeTrail, false, false), J$.T(140257, 56320, 22, false))));
                                            else
                                                throw J$.F(140337, J$.I(typeof Error === 'undefined' ? Error = J$.R(140273, 'Error', undefined, true, true) : Error = J$.R(140273, 'Error', Error, true, true)), true)(J$.B(12050, '+', J$.B(12042, '+', J$.B(12034, '+', J$.T(140281, 'Incorrect surrogate pair in ', 21, false), J$.G(140297, J$.R(140289, 'this', this, false, false), 'encodingName')), J$.T(140305, ' at chunk ', 21, false)), J$.G(140329, J$.R(140313, 'chunk', chunk, false, false), J$.T(140321, 0, 22, false))));
                                        } else if (J$.C(8776, J$.C(8760, J$.B(12058, '<', J$.T(140345, 4080, 22, false), J$.R(140353, 'code', code, false, false))) ? J$.B(12066, '<=', J$.R(140361, 'code', code, false, false), J$.T(140369, 4095, 22, false)) : J$._())) {
                                            var len = J$.W(140401, 'len', J$.B(12082, '+', J$.B(12074, '-', J$.T(140377, 4095, 22, false), J$.R(140385, 'code', code, false, false)), J$.T(140393, 2, 22, false)), len, false, false);
                                            var seq = J$.W(140417, 'seq', J$.T(140409, [], 10, false), seq, false, false);
                                            for (var m = J$.W(140433, 'm', J$.T(140425, 0, 22, false), m, false, false); J$.C(8768, J$.B(12090, '<', J$.R(140441, 'm', m, false, false), J$.R(140449, 'len', len, false, false))); J$.B(12114, '-', m = J$.W(140465, 'm', J$.B(12106, '+', J$.U(12098, '+', J$.R(140457, 'm', m, false, false)), 1), m, false, false), 1)) {
                                                J$.M(140513, J$.R(140473, 'seq', seq, false, false), 'push', false)(J$.M(140505, J$.R(140481, 'part', part, false, false), 'charCodeAt', false)(J$.B(12138, '-', l = J$.W(140497, 'l', J$.B(12130, '+', J$.U(12122, '+', J$.R(140489, 'l', l, false, false)), 1), l, false, false), 1)));
                                            }
                                            J$.P(140577, J$.R(140521, 'writeTable', writeTable, false, false), J$.B(12162, '-', curAddr = J$.W(140537, 'curAddr', J$.B(12154, '+', J$.U(12146, '+', J$.R(140529, 'curAddr', curAddr, false, false)), 1), curAddr, false, false), 1), J$.B(12170, '-', J$.R(140545, 'SEQ_START', SEQ_START, false, true), J$.G(140569, J$.G(140561, J$.R(140553, 'this', this, false, false), 'decodeTableSeq'), 'length')));
                                            J$.M(140609, J$.G(140593, J$.R(140585, 'this', this, false, false), 'decodeTableSeq'), 'push', false)(J$.R(140601, 'seq', seq, false, false));
                                        } else
                                            J$.P(140649, J$.R(140617, 'writeTable', writeTable, false, false), J$.B(12194, '-', curAddr = J$.W(140633, 'curAddr', J$.B(12186, '+', J$.U(12178, '+', J$.R(140625, 'curAddr', curAddr, false, false)), 1), curAddr, false, false), 1), J$.R(140641, 'code', code, false, false));
                                    }
                                } else if (J$.C(8808, J$.B(12210, '===', J$.U(12202, 'typeof', J$.R(140657, 'part', part, false, false)), J$.T(140665, 'number', 21, false)))) {
                                    var charCode = J$.W(140713, 'charCode', J$.B(12226, '+', J$.G(140697, J$.R(140673, 'writeTable', writeTable, false, false), J$.B(12218, '-', J$.R(140681, 'curAddr', curAddr, false, false), J$.T(140689, 1, 22, false))), J$.T(140705, 1, 22, false)), charCode, false, false);
                                    for (var l = J$.W(140729, 'l', J$.T(140721, 0, 22, false), l, false, false); J$.C(8800, J$.B(12234, '<', J$.R(140737, 'l', l, false, false), J$.R(140745, 'part', part, false, false))); J$.B(12258, '-', l = J$.W(140761, 'l', J$.B(12250, '+', J$.U(12242, '+', J$.R(140753, 'l', l, false, false)), 1), l, false, false), 1)) {
                                        J$.P(140809, J$.R(140769, 'writeTable', writeTable, false, false), J$.B(12282, '-', curAddr = J$.W(140785, 'curAddr', J$.B(12274, '+', J$.U(12266, '+', J$.R(140777, 'curAddr', curAddr, false, false)), 1), curAddr, false, false), 1), J$.B(12306, '-', charCode = J$.W(140801, 'charCode', J$.B(12298, '+', J$.U(12290, '+', J$.R(140793, 'charCode', charCode, false, false)), 1), charCode, false, false), 1));
                                    }
                                } else
                                    throw J$.F(140913, J$.I(typeof Error === 'undefined' ? Error = J$.R(140817, 'Error', undefined, true, true) : Error = J$.R(140817, 'Error', Error, true, true)), true)(J$.B(12346, '+', J$.B(12338, '+', J$.B(12330, '+', J$.B(12322, '+', J$.B(12314, '+', J$.T(140825, 'Incorrect type \'', 21, false), J$.F(140849, J$.R(140833, '_typeof', _typeof, false, true), false)(J$.R(140841, 'part', part, false, false))), J$.T(140857, '\' given in ', 21, false)), J$.G(140873, J$.R(140865, 'this', this, false, false), 'encodingName')), J$.T(140881, ' at chunk ', 21, false)), J$.G(140905, J$.R(140889, 'chunk', chunk, false, false), J$.T(140897, 0, 22, false))));
                            }
                            if (J$.C(8832, J$.B(12354, '>', J$.R(140921, 'curAddr', curAddr, false, false), J$.T(140929, 255, 22, false))))
                                throw J$.F(141017, J$.I(typeof Error === 'undefined' ? Error = J$.R(140937, 'Error', undefined, true, true) : Error = J$.R(140937, 'Error', Error, true, true)), true)(J$.B(12394, '+', J$.B(12386, '+', J$.B(12378, '+', J$.B(12370, '+', J$.B(12362, '+', J$.T(140945, 'Incorrect chunk in ', 21, false), J$.G(140961, J$.R(140953, 'this', this, false, false), 'encodingName')), J$.T(140969, ' at addr ', 21, false)), J$.G(140993, J$.R(140977, 'chunk', chunk, false, false), J$.T(140985, 0, 22, false))), J$.T(141001, ': too long', 21, false)), J$.R(141009, 'curAddr', curAddr, false, false)));
                        } catch (J$e) {
                            J$.Ex(149121, J$e);
                        } finally {
                            if (J$.Fr(149129))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(141369, J$.G(141161, J$.R(141153, 'DBCSCodec', DBCSCodec, false, true), 'prototype'), '_getEncodeBucket', J$.T(141361, function (uCode) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(141329, arguments.callee, this, arguments);
                            arguments = J$.N(141337, 'arguments', arguments, true, false, false);
                            uCode = J$.N(141345, 'uCode', uCode, true, false, false);
                            J$.N(141353, 'high', high, false, false, false);
                            var high = J$.W(141185, 'high', J$.B(12402, '>>', J$.R(141169, 'uCode', uCode, false, false), J$.T(141177, 8, 22, false)), high, false, false);
                            if (J$.C(8840, J$.B(12410, '===', J$.G(141217, J$.G(141201, J$.R(141193, 'this', this, false, false), 'encodeTable'), J$.R(141209, 'high', high, false, false)), J$.T(141225, undefined, 24, false))))
                                J$.P(141281, J$.G(141241, J$.R(141233, 'this', this, false, false), 'encodeTable'), J$.R(141249, 'high', high, false, false), J$.M(141273, J$.R(141257, 'UNASSIGNED_NODE', UNASSIGNED_NODE, false, true), 'slice', false)(J$.T(141265, 0, 22, false)));
                            return J$.Rt(141321, J$.G(141313, J$.G(141297, J$.R(141289, 'this', this, false, false), 'encodeTable'), J$.R(141305, 'high', high, false, false)));
                        } catch (J$e) {
                            J$.Ex(149137, J$e);
                        } finally {
                            if (J$.Fr(149145))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(141681, J$.G(141385, J$.R(141377, 'DBCSCodec', DBCSCodec, false, true), 'prototype'), '_setEncodeChar', J$.T(141673, function (uCode, dbcsCode) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(141625, arguments.callee, this, arguments);
                            arguments = J$.N(141633, 'arguments', arguments, true, false, false);
                            uCode = J$.N(141641, 'uCode', uCode, true, false, false);
                            dbcsCode = J$.N(141649, 'dbcsCode', dbcsCode, true, false, false);
                            J$.N(141657, 'bucket', bucket, false, false, false);
                            J$.N(141665, 'low', low, false, false, false);
                            var bucket = J$.W(141417, 'bucket', J$.M(141409, J$.R(141393, 'this', this, false, false), '_getEncodeBucket', false)(J$.R(141401, 'uCode', uCode, false, false)), bucket, false, false);
                            var low = J$.W(141441, 'low', J$.B(12418, '&', J$.R(141425, 'uCode', uCode, false, false), J$.T(141433, 255, 22, false)), low, false, false);
                            if (J$.C(8856, J$.B(12426, '<=', J$.G(141465, J$.R(141449, 'bucket', bucket, false, false), J$.R(141457, 'low', low, false, false)), J$.R(141473, 'SEQ_START', SEQ_START, false, true))))
                                J$.P(141553, J$.G(141529, J$.G(141489, J$.R(141481, 'this', this, false, false), 'encodeTableSeq'), J$.B(12434, '-', J$.R(141497, 'SEQ_START', SEQ_START, false, true), J$.G(141521, J$.R(141505, 'bucket', bucket, false, false), J$.R(141513, 'low', low, false, false)))), J$.R(141537, 'DEF_CHAR', DEF_CHAR, false, true), J$.R(141545, 'dbcsCode', dbcsCode, false, false));
                            else if (J$.C(8848, J$.B(12442, '==', J$.G(141577, J$.R(141561, 'bucket', bucket, false, false), J$.R(141569, 'low', low, false, false)), J$.R(141585, 'UNASSIGNED', UNASSIGNED, false, true))))
                                J$.P(141617, J$.R(141593, 'bucket', bucket, false, false), J$.R(141601, 'low', low, false, false), J$.R(141609, 'dbcsCode', dbcsCode, false, false));
                        } catch (J$e) {
                            J$.Ex(149153, J$e);
                        } finally {
                            if (J$.Fr(149161))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(142473, J$.G(141697, J$.R(141689, 'DBCSCodec', DBCSCodec, false, true), 'prototype'), '_setEncodeSequence', J$.T(142465, function (seq, dbcsCode) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(142385, arguments.callee, this, arguments);
                            arguments = J$.N(142393, 'arguments', arguments, true, false, false);
                            seq = J$.N(142401, 'seq', seq, true, false, false);
                            dbcsCode = J$.N(142409, 'dbcsCode', dbcsCode, true, false, false);
                            J$.N(142417, 'uCode', uCode, false, false, false);
                            J$.N(142425, 'bucket', bucket, false, false, false);
                            J$.N(142433, 'low', low, false, false, false);
                            J$.N(142441, 'node', node, false, false, false);
                            J$.N(142449, 'j', j, false, false, false);
                            J$.N(142457, 'oldVal', oldVal, false, false, false);
                            var uCode = J$.W(141729, 'uCode', J$.G(141721, J$.R(141705, 'seq', seq, false, false), J$.T(141713, 0, 22, false)), uCode, false, false);
                            var bucket = J$.W(141761, 'bucket', J$.M(141753, J$.R(141737, 'this', this, false, false), '_getEncodeBucket', false)(J$.R(141745, 'uCode', uCode, false, false)), bucket, false, false);
                            var low = J$.W(141785, 'low', J$.B(12450, '&', J$.R(141769, 'uCode', uCode, false, false), J$.T(141777, 255, 22, false)), low, false, false);
                            var node;
                            if (J$.C(8872, J$.B(12458, '<=', J$.G(141809, J$.R(141793, 'bucket', bucket, false, false), J$.R(141801, 'low', low, false, false)), J$.R(141817, 'SEQ_START', SEQ_START, false, true)))) {
                                node = J$.W(141881, 'node', J$.G(141873, J$.G(141833, J$.R(141825, 'this', this, false, false), 'encodeTableSeq'), J$.B(12466, '-', J$.R(141841, 'SEQ_START', SEQ_START, false, true), J$.G(141865, J$.R(141849, 'bucket', bucket, false, false), J$.R(141857, 'low', low, false, false)))), node, false, false);
                            } else {
                                node = J$.W(141897, 'node', J$.T(141889, {}, 11, false), node, false, false);
                                if (J$.C(8864, J$.B(12474, '!==', J$.G(141921, J$.R(141905, 'bucket', bucket, false, false), J$.R(141913, 'low', low, false, false)), J$.R(141929, 'UNASSIGNED', UNASSIGNED, false, true))))
                                    J$.P(141977, J$.R(141937, 'node', node, false, false), J$.R(141945, 'DEF_CHAR', DEF_CHAR, false, true), J$.G(141969, J$.R(141953, 'bucket', bucket, false, false), J$.R(141961, 'low', low, false, false)));
                                J$.P(142033, J$.R(141985, 'bucket', bucket, false, false), J$.R(141993, 'low', low, false, false), J$.B(12482, '-', J$.R(142001, 'SEQ_START', SEQ_START, false, true), J$.G(142025, J$.G(142017, J$.R(142009, 'this', this, false, false), 'encodeTableSeq'), 'length')));
                                J$.M(142065, J$.G(142049, J$.R(142041, 'this', this, false, false), 'encodeTableSeq'), 'push', false)(J$.R(142057, 'node', node, false, false));
                            }
                            for (var j = J$.W(142081, 'j', J$.T(142073, 1, 22, false), j, false, false); J$.C(8896, J$.B(12498, '<', J$.R(142089, 'j', j, false, false), J$.B(12490, '-', J$.G(142105, J$.R(142097, 'seq', seq, false, false), 'length'), J$.T(142113, 1, 22, false)))); J$.B(12522, '-', j = J$.W(142129, 'j', J$.B(12514, '+', J$.U(12506, '+', J$.R(142121, 'j', j, false, false)), 1), j, false, false), 1)) {
                                var oldVal = J$.W(142161, 'oldVal', J$.G(142153, J$.R(142137, 'node', node, false, false), J$.R(142145, 'uCode', uCode, false, false)), oldVal, false, false);
                                if (J$.C(8888, J$.B(12530, '===', J$.F(142185, J$.R(142169, '_typeof', _typeof, false, true), false)(J$.R(142177, 'oldVal', oldVal, false, false)), J$.T(142193, 'object', 21, false))))
                                    node = J$.W(142209, 'node', J$.R(142201, 'oldVal', oldVal, false, false), node, false, false);
                                else {
                                    node = J$.W(142249, 'node', J$.P(142241, J$.R(142217, 'node', node, false, false), J$.R(142225, 'uCode', uCode, false, false), J$.T(142233, {}, 11, false)), node, false, false);
                                    if (J$.C(8880, J$.B(12538, '!==', J$.R(142257, 'oldVal', oldVal, false, false), J$.T(142265, undefined, 24, false))))
                                        J$.P(142297, J$.R(142273, 'node', node, false, false), J$.R(142281, 'DEF_CHAR', DEF_CHAR, false, true), J$.R(142289, 'oldVal', oldVal, false, false));
                                }
                            }
                            uCode = J$.W(142345, 'uCode', J$.G(142337, J$.R(142305, 'seq', seq, false, false), J$.B(12546, '-', J$.G(142321, J$.R(142313, 'seq', seq, false, false), 'length'), J$.T(142329, 1, 22, false))), uCode, false, false);
                            J$.P(142377, J$.R(142353, 'node', node, false, false), J$.R(142361, 'uCode', uCode, false, false), J$.R(142369, 'dbcsCode', dbcsCode, false, false));
                        } catch (J$e) {
                            J$.Ex(149169, J$e);
                        } finally {
                            if (J$.Fr(149177))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(142945, J$.G(142489, J$.R(142481, 'DBCSCodec', DBCSCodec, false, true), 'prototype'), '_fillEncodeTable', J$.T(142937, function (nodeIdx, prefix, skipEncodeChars) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(142865, arguments.callee, this, arguments);
                            arguments = J$.N(142873, 'arguments', arguments, true, false, false);
                            nodeIdx = J$.N(142881, 'nodeIdx', nodeIdx, true, false, false);
                            prefix = J$.N(142889, 'prefix', prefix, true, false, false);
                            skipEncodeChars = J$.N(142897, 'skipEncodeChars', skipEncodeChars, true, false, false);
                            J$.N(142905, 'node', node, false, false, false);
                            J$.N(142913, 'i', i, false, false, false);
                            J$.N(142921, 'uCode', uCode, false, false, false);
                            J$.N(142929, 'mbCode', mbCode, false, false, false);
                            var node = J$.W(142529, 'node', J$.G(142521, J$.G(142505, J$.R(142497, 'this', this, false, false), 'decodeTables'), J$.R(142513, 'nodeIdx', nodeIdx, false, false)), node, false, false);
                            for (var i = J$.W(142545, 'i', J$.T(142537, 0, 22, false), i, false, false); J$.C(8936, J$.B(12554, '<', J$.R(142553, 'i', i, false, false), J$.T(142561, 256, 22, false))); J$.B(12578, '-', i = J$.W(142577, 'i', J$.B(12570, '+', J$.U(12562, '+', J$.R(142569, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var uCode = J$.W(142609, 'uCode', J$.G(142601, J$.R(142585, 'node', node, false, false), J$.R(142593, 'i', i, false, false)), uCode, false, false);
                                var mbCode = J$.W(142633, 'mbCode', J$.B(12586, '+', J$.R(142617, 'prefix', prefix, false, false), J$.R(142625, 'i', i, false, false)), mbCode, false, false);
                                if (J$.C(8904, J$.G(142657, J$.R(142641, 'skipEncodeChars', skipEncodeChars, false, false), J$.R(142649, 'mbCode', mbCode, false, false))))
                                    continue;
                                if (J$.C(8928, J$.B(12594, '>=', J$.R(142665, 'uCode', uCode, false, false), J$.T(142673, 0, 22, false))))
                                    J$.M(142705, J$.R(142681, 'this', this, false, false), '_setEncodeChar', false)(J$.R(142689, 'uCode', uCode, false, false), J$.R(142697, 'mbCode', mbCode, false, false));
                                else if (J$.C(8920, J$.B(12602, '<=', J$.R(142713, 'uCode', uCode, false, false), J$.R(142721, 'NODE_START', NODE_START, false, true))))
                                    J$.M(142777, J$.R(142729, 'this', this, false, false), '_fillEncodeTable', false)(J$.B(12610, '-', J$.R(142737, 'NODE_START', NODE_START, false, true), J$.R(142745, 'uCode', uCode, false, false)), J$.B(12618, '<<', J$.R(142753, 'mbCode', mbCode, false, false), J$.T(142761, 8, 22, false)), J$.R(142769, 'skipEncodeChars', skipEncodeChars, false, false));
                                else if (J$.C(8912, J$.B(12626, '<=', J$.R(142785, 'uCode', uCode, false, false), J$.R(142793, 'SEQ_START', SEQ_START, false, true))))
                                    J$.M(142857, J$.R(142801, 'this', this, false, false), '_setEncodeSequence', false)(J$.G(142841, J$.G(142817, J$.R(142809, 'this', this, false, false), 'decodeTableSeq'), J$.B(12634, '-', J$.R(142825, 'SEQ_START', SEQ_START, false, true), J$.R(142833, 'uCode', uCode, false, false))), J$.R(142849, 'mbCode', mbCode, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(149185, J$e);
                        } finally {
                            if (J$.Fr(149193))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(145305, J$.G(143169, J$.R(143161, 'DBCSEncoder', DBCSEncoder, false, true), 'prototype'), 'write', J$.T(145297, function (str) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(145185, arguments.callee, this, arguments);
                            arguments = J$.N(145193, 'arguments', arguments, true, false, false);
                            str = J$.N(145201, 'str', str, true, false, false);
                            J$.N(145209, 'newBuf', newBuf, false, false, false);
                            J$.N(145217, 'leadSurrogate', leadSurrogate, false, false, false);
                            J$.N(145225, 'seqObj', seqObj, false, false, false);
                            J$.N(145233, 'nextChar', nextChar, false, false, false);
                            J$.N(145241, 'i', i, false, false, false);
                            J$.N(145249, 'j', j, false, false, false);
                            J$.N(145257, 'uCode', uCode, false, false, false);
                            J$.N(145265, 'dbcsCode', dbcsCode, false, false, false);
                            J$.N(145273, 'resCode', resCode, false, false, false);
                            J$.N(145281, 'subtable', subtable, false, false, false);
                            J$.N(145289, 'idx', idx, false, false, false);
                            var newBuf = J$.W(143297, 'newBuf', J$.M(143233, J$.R(143177, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(12650, '*', J$.G(143193, J$.R(143185, 'str', str, false, false), 'length'), J$.C(8944, J$.G(143209, J$.R(143201, 'this', this, false, false), 'gb18030')) ? J$.T(143217, 4, 22, false) : J$.T(143225, 3, 22, false))), newBuf, false, false), leadSurrogate = J$.W(143305, 'leadSurrogate', J$.G(143249, J$.R(143241, 'this', this, false, false), 'leadSurrogate'), leadSurrogate, false, false), seqObj = J$.W(143313, 'seqObj', J$.G(143265, J$.R(143257, 'this', this, false, false), 'seqObj'), seqObj, false, false), nextChar = J$.W(143321, 'nextChar', J$.U(12658, '-', J$.T(143273, 1, 22, false)), nextChar, false, false), i = J$.W(143329, 'i', J$.T(143281, 0, 22, false), i, false, false), j = J$.W(143337, 'j', J$.T(143289, 0, 22, false), j, false, false);
                            while (J$.C(9136, J$.T(143345, true, 23, false))) {
                                if (J$.C(8960, J$.B(12674, '===', J$.R(143353, 'nextChar', nextChar, false, false), J$.U(12666, '-', J$.T(143361, 1, 22, false))))) {
                                    if (J$.C(8952, J$.B(12682, '==', J$.R(143369, 'i', i, false, false), J$.G(143385, J$.R(143377, 'str', str, false, false), 'length'))))
                                        break;
                                    var uCode = J$.W(143425, 'uCode', J$.M(143417, J$.R(143393, 'str', str, false, false), 'charCodeAt', false)(J$.B(12706, '-', i = J$.W(143409, 'i', J$.B(12698, '+', J$.U(12690, '+', J$.R(143401, 'i', i, false, false)), 1), i, false, false), 1)), uCode, false, false);
                                } else {
                                    var uCode = J$.W(143441, 'uCode', J$.R(143433, 'nextChar', nextChar, false, false), uCode, false, false);
                                    nextChar = J$.W(143457, 'nextChar', J$.U(12714, '-', J$.T(143449, 1, 22, false)), nextChar, false, false);
                                }
                                if (J$.C(9008, J$.C(8968, J$.B(12722, '<=', J$.T(143465, 55296, 22, false), J$.R(143473, 'uCode', uCode, false, false))) ? J$.B(12730, '<', J$.R(143481, 'uCode', uCode, false, false), J$.T(143489, 57344, 22, false)) : J$._())) {
                                    if (J$.C(8992, J$.B(12738, '<', J$.R(143497, 'uCode', uCode, false, false), J$.T(143505, 56320, 22, false)))) {
                                        if (J$.C(8976, J$.B(12754, '===', J$.R(143513, 'leadSurrogate', leadSurrogate, false, false), J$.U(12746, '-', J$.T(143521, 1, 22, false))))) {
                                            leadSurrogate = J$.W(143537, 'leadSurrogate', J$.R(143529, 'uCode', uCode, false, false), leadSurrogate, false, false);
                                            continue;
                                        } else {
                                            leadSurrogate = J$.W(143553, 'leadSurrogate', J$.R(143545, 'uCode', uCode, false, false), leadSurrogate, false, false);
                                            uCode = J$.W(143569, 'uCode', J$.R(143561, 'UNASSIGNED', UNASSIGNED, false, true), uCode, false, false);
                                        }
                                    } else {
                                        if (J$.C(8984, J$.B(12770, '!==', J$.R(143577, 'leadSurrogate', leadSurrogate, false, false), J$.U(12762, '-', J$.T(143585, 1, 22, false))))) {
                                            uCode = J$.W(143641, 'uCode', J$.B(12810, '+', J$.B(12794, '+', J$.T(143593, 65536, 22, false), J$.B(12786, '*', J$.B(12778, '-', J$.R(143601, 'leadSurrogate', leadSurrogate, false, false), J$.T(143609, 55296, 22, false)), J$.T(143617, 1024, 22, false))), J$.B(12802, '-', J$.R(143625, 'uCode', uCode, false, false), J$.T(143633, 56320, 22, false))), uCode, false, false);
                                            leadSurrogate = J$.W(143657, 'leadSurrogate', J$.U(12818, '-', J$.T(143649, 1, 22, false)), leadSurrogate, false, false);
                                        } else {
                                            uCode = J$.W(143673, 'uCode', J$.R(143665, 'UNASSIGNED', UNASSIGNED, false, true), uCode, false, false);
                                        }
                                    }
                                } else if (J$.C(9000, J$.B(12834, '!==', J$.R(143681, 'leadSurrogate', leadSurrogate, false, false), J$.U(12826, '-', J$.T(143689, 1, 22, false))))) {
                                    nextChar = J$.W(143705, 'nextChar', J$.R(143697, 'uCode', uCode, false, false), nextChar, false, false);
                                    uCode = J$.W(143721, 'uCode', J$.R(143713, 'UNASSIGNED', UNASSIGNED, false, true), uCode, false, false);
                                    leadSurrogate = J$.W(143737, 'leadSurrogate', J$.U(12842, '-', J$.T(143729, 1, 22, false)), leadSurrogate, false, false);
                                }
                                var dbcsCode = J$.W(143753, 'dbcsCode', J$.R(143745, 'UNASSIGNED', UNASSIGNED, false, true), dbcsCode, false, false);
                                if (J$.C(9104, J$.C(9016, J$.B(12850, '!==', J$.R(143761, 'seqObj', seqObj, false, false), J$.T(143769, undefined, 24, false))) ? J$.B(12858, '!=', J$.R(143777, 'uCode', uCode, false, false), J$.R(143785, 'UNASSIGNED', UNASSIGNED, false, true)) : J$._())) {
                                    var resCode = J$.W(143817, 'resCode', J$.G(143809, J$.R(143793, 'seqObj', seqObj, false, false), J$.R(143801, 'uCode', uCode, false, false)), resCode, false, false);
                                    if (J$.C(9048, J$.B(12866, '===', J$.F(143841, J$.R(143825, '_typeof', _typeof, false, true), false)(J$.R(143833, 'resCode', resCode, false, false)), J$.T(143849, 'object', 21, false)))) {
                                        seqObj = J$.W(143865, 'seqObj', J$.R(143857, 'resCode', resCode, false, false), seqObj, false, false);
                                        continue;
                                    } else if (J$.C(9040, J$.B(12882, '==', J$.U(12874, 'typeof', J$.R(143873, 'resCode', resCode, false, false)), J$.T(143881, 'number', 21, false)))) {
                                        dbcsCode = J$.W(143897, 'dbcsCode', J$.R(143889, 'resCode', resCode, false, false), dbcsCode, false, false);
                                    } else if (J$.C(9032, J$.B(12890, '==', J$.R(143905, 'resCode', resCode, false, false), J$.T(143913, undefined, 24, false)))) {
                                        resCode = J$.W(143945, 'resCode', J$.G(143937, J$.R(143921, 'seqObj', seqObj, false, false), J$.R(143929, 'DEF_CHAR', DEF_CHAR, false, true)), resCode, false, false);
                                        if (J$.C(9024, J$.B(12898, '!==', J$.R(143953, 'resCode', resCode, false, false), J$.T(143961, undefined, 24, false)))) {
                                            dbcsCode = J$.W(143977, 'dbcsCode', J$.R(143969, 'resCode', resCode, false, false), dbcsCode, false, false);
                                            nextChar = J$.W(143993, 'nextChar', J$.R(143985, 'uCode', uCode, false, false), nextChar, false, false);
                                        } else {
                                        }
                                    }
                                    seqObj = J$.W(144009, 'seqObj', J$.T(144001, undefined, 24, false), seqObj, false, false);
                                } else if (J$.C(9096, J$.B(12906, '>=', J$.R(144017, 'uCode', uCode, false, false), J$.T(144025, 0, 22, false)))) {
                                    var subtable = J$.W(144073, 'subtable', J$.G(144065, J$.G(144041, J$.R(144033, 'this', this, false, false), 'encodeTable'), J$.B(12914, '>>', J$.R(144049, 'uCode', uCode, false, false), J$.T(144057, 8, 22, false))), subtable, false, false);
                                    if (J$.C(9056, J$.B(12922, '!==', J$.R(144081, 'subtable', subtable, false, false), J$.T(144089, undefined, 24, false))))
                                        dbcsCode = J$.W(144129, 'dbcsCode', J$.G(144121, J$.R(144097, 'subtable', subtable, false, false), J$.B(12930, '&', J$.R(144105, 'uCode', uCode, false, false), J$.T(144113, 255, 22, false))), dbcsCode, false, false);
                                    if (J$.C(9064, J$.B(12938, '<=', J$.R(144137, 'dbcsCode', dbcsCode, false, false), J$.R(144145, 'SEQ_START', SEQ_START, false, true)))) {
                                        seqObj = J$.W(144193, 'seqObj', J$.G(144185, J$.G(144161, J$.R(144153, 'this', this, false, false), 'encodeTableSeq'), J$.B(12946, '-', J$.R(144169, 'SEQ_START', SEQ_START, false, true), J$.R(144177, 'dbcsCode', dbcsCode, false, false))), seqObj, false, false);
                                        continue;
                                    }
                                    if (J$.C(9088, J$.C(9072, J$.B(12954, '==', J$.R(144201, 'dbcsCode', dbcsCode, false, false), J$.R(144209, 'UNASSIGNED', UNASSIGNED, false, true))) ? J$.G(144225, J$.R(144217, 'this', this, false, false), 'gb18030') : J$._())) {
                                        var idx = J$.W(144281, 'idx', J$.F(144273, J$.R(144233, 'findIdx', findIdx, false, true), false)(J$.G(144257, J$.G(144249, J$.R(144241, 'this', this, false, false), 'gb18030'), 'uChars'), J$.R(144265, 'uCode', uCode, false, false)), idx, false, false);
                                        if (J$.C(9080, J$.B(12970, '!=', J$.R(144289, 'idx', idx, false, false), J$.U(12962, '-', J$.T(144297, 1, 22, false))))) {
                                            var dbcsCode = J$.W(144393, 'dbcsCode', J$.B(12986, '+', J$.G(144337, J$.G(144321, J$.G(144313, J$.R(144305, 'this', this, false, false), 'gb18030'), 'gbChars'), J$.R(144329, 'idx', idx, false, false)), J$.B(12978, '-', J$.R(144345, 'uCode', uCode, false, false), J$.G(144385, J$.G(144369, J$.G(144361, J$.R(144353, 'this', this, false, false), 'gb18030'), 'uChars'), J$.R(144377, 'idx', idx, false, false)))), dbcsCode, false, false);
                                            J$.P(144465, J$.R(144401, 'newBuf', newBuf, false, false), J$.B(13010, '-', j = J$.W(144417, 'j', J$.B(13002, '+', J$.U(12994, '+', J$.R(144409, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13026, '+', J$.T(144425, 129, 22, false), J$.M(144457, J$.I(typeof Math === 'undefined' ? Math = J$.R(144433, 'Math', undefined, true, true) : Math = J$.R(144433, 'Math', Math, true, true)), 'floor', false)(J$.B(13018, '/', J$.R(144441, 'dbcsCode', dbcsCode, false, false), J$.T(144449, 12600, 22, false)))));
                                            dbcsCode = J$.W(144489, 'dbcsCode', J$.B(13034, '%', J$.R(144473, 'dbcsCode', dbcsCode, false, false), J$.T(144481, 12600, 22, false)), dbcsCode, false, false);
                                            J$.P(144561, J$.R(144497, 'newBuf', newBuf, false, false), J$.B(13058, '-', j = J$.W(144513, 'j', J$.B(13050, '+', J$.U(13042, '+', J$.R(144505, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13074, '+', J$.T(144521, 48, 22, false), J$.M(144553, J$.I(typeof Math === 'undefined' ? Math = J$.R(144529, 'Math', undefined, true, true) : Math = J$.R(144529, 'Math', Math, true, true)), 'floor', false)(J$.B(13066, '/', J$.R(144537, 'dbcsCode', dbcsCode, false, false), J$.T(144545, 1260, 22, false)))));
                                            dbcsCode = J$.W(144585, 'dbcsCode', J$.B(13082, '%', J$.R(144569, 'dbcsCode', dbcsCode, false, false), J$.T(144577, 1260, 22, false)), dbcsCode, false, false);
                                            J$.P(144657, J$.R(144593, 'newBuf', newBuf, false, false), J$.B(13106, '-', j = J$.W(144609, 'j', J$.B(13098, '+', J$.U(13090, '+', J$.R(144601, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13122, '+', J$.T(144617, 129, 22, false), J$.M(144649, J$.I(typeof Math === 'undefined' ? Math = J$.R(144625, 'Math', undefined, true, true) : Math = J$.R(144625, 'Math', Math, true, true)), 'floor', false)(J$.B(13114, '/', J$.R(144633, 'dbcsCode', dbcsCode, false, false), J$.T(144641, 10, 22, false)))));
                                            dbcsCode = J$.W(144681, 'dbcsCode', J$.B(13130, '%', J$.R(144665, 'dbcsCode', dbcsCode, false, false), J$.T(144673, 10, 22, false)), dbcsCode, false, false);
                                            J$.P(144729, J$.R(144689, 'newBuf', newBuf, false, false), J$.B(13154, '-', j = J$.W(144705, 'j', J$.B(13146, '+', J$.U(13138, '+', J$.R(144697, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13162, '+', J$.T(144713, 48, 22, false), J$.R(144721, 'dbcsCode', dbcsCode, false, false)));
                                            continue;
                                        }
                                    }
                                }
                                if (J$.C(9112, J$.B(13170, '===', J$.R(144737, 'dbcsCode', dbcsCode, false, false), J$.R(144745, 'UNASSIGNED', UNASSIGNED, false, true))))
                                    dbcsCode = J$.W(144769, 'dbcsCode', J$.G(144761, J$.R(144753, 'this', this, false, false), 'defaultCharSingleByte'), dbcsCode, false, false);
                                if (J$.C(9128, J$.B(13178, '<', J$.R(144777, 'dbcsCode', dbcsCode, false, false), J$.T(144785, 256, 22, false)))) {
                                    J$.P(144825, J$.R(144793, 'newBuf', newBuf, false, false), J$.B(13202, '-', j = J$.W(144809, 'j', J$.B(13194, '+', J$.U(13186, '+', J$.R(144801, 'j', j, false, false)), 1), j, false, false), 1), J$.R(144817, 'dbcsCode', dbcsCode, false, false));
                                } else if (J$.C(9120, J$.B(13210, '<', J$.R(144833, 'dbcsCode', dbcsCode, false, false), J$.T(144841, 65536, 22, false)))) {
                                    J$.P(144889, J$.R(144849, 'newBuf', newBuf, false, false), J$.B(13234, '-', j = J$.W(144865, 'j', J$.B(13226, '+', J$.U(13218, '+', J$.R(144857, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13242, '>>', J$.R(144873, 'dbcsCode', dbcsCode, false, false), J$.T(144881, 8, 22, false)));
                                    J$.P(144937, J$.R(144897, 'newBuf', newBuf, false, false), J$.B(13266, '-', j = J$.W(144913, 'j', J$.B(13258, '+', J$.U(13250, '+', J$.R(144905, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13274, '&', J$.R(144921, 'dbcsCode', dbcsCode, false, false), J$.T(144929, 255, 22, false)));
                                } else {
                                    J$.P(144985, J$.R(144945, 'newBuf', newBuf, false, false), J$.B(13298, '-', j = J$.W(144961, 'j', J$.B(13290, '+', J$.U(13282, '+', J$.R(144953, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13306, '>>', J$.R(144969, 'dbcsCode', dbcsCode, false, false), J$.T(144977, 16, 22, false)));
                                    J$.P(145041, J$.R(144993, 'newBuf', newBuf, false, false), J$.B(13330, '-', j = J$.W(145009, 'j', J$.B(13322, '+', J$.U(13314, '+', J$.R(145001, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13346, '&', J$.B(13338, '>>', J$.R(145017, 'dbcsCode', dbcsCode, false, false), J$.T(145025, 8, 22, false)), J$.T(145033, 255, 22, false)));
                                    J$.P(145089, J$.R(145049, 'newBuf', newBuf, false, false), J$.B(13370, '-', j = J$.W(145065, 'j', J$.B(13362, '+', J$.U(13354, '+', J$.R(145057, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13378, '&', J$.R(145073, 'dbcsCode', dbcsCode, false, false), J$.T(145081, 255, 22, false)));
                                }
                            }
                            J$.P(145113, J$.R(145097, 'this', this, false, false), 'seqObj', J$.R(145105, 'seqObj', seqObj, false, false));
                            J$.P(145137, J$.R(145121, 'this', this, false, false), 'leadSurrogate', J$.R(145129, 'leadSurrogate', leadSurrogate, false, false));
                            return J$.Rt(145177, J$.M(145169, J$.R(145145, 'newBuf', newBuf, false, false), 'slice', false)(J$.T(145153, 0, 22, false), J$.R(145161, 'j', j, false, false)));
                        } catch (J$e) {
                            J$.Ex(149217, J$e);
                        } finally {
                            if (J$.Fr(149225))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(145865, J$.G(145321, J$.R(145313, 'DBCSEncoder', DBCSEncoder, false, true), 'prototype'), 'end', J$.T(145857, function () {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(145817, arguments.callee, this, arguments);
                            arguments = J$.N(145825, 'arguments', arguments, true, false, false);
                            J$.N(145833, 'newBuf', newBuf, false, false, false);
                            J$.N(145841, 'j', j, false, false, false);
                            J$.N(145849, 'dbcsCode', dbcsCode, false, false, false);
                            if (J$.C(9152, J$.C(9144, J$.B(13394, '===', J$.G(145337, J$.R(145329, 'this', this, false, false), 'leadSurrogate'), J$.U(13386, '-', J$.T(145345, 1, 22, false)))) ? J$.B(13402, '===', J$.G(145361, J$.R(145353, 'this', this, false, false), 'seqObj'), J$.T(145369, undefined, 24, false)) : J$._()))
                                return J$.Rt(145377, undefined);
                            var newBuf = J$.W(145417, 'newBuf', J$.M(145401, J$.R(145385, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(145393, 10, 22, false)), newBuf, false, false), j = J$.W(145425, 'j', J$.T(145409, 0, 22, false), j, false, false);
                            if (J$.C(9176, J$.G(145441, J$.R(145433, 'this', this, false, false), 'seqObj'))) {
                                var dbcsCode = J$.W(145481, 'dbcsCode', J$.G(145473, J$.G(145457, J$.R(145449, 'this', this, false, false), 'seqObj'), J$.R(145465, 'DEF_CHAR', DEF_CHAR, false, true)), dbcsCode, false, false);
                                if (J$.C(9168, J$.B(13410, '!==', J$.R(145489, 'dbcsCode', dbcsCode, false, false), J$.T(145497, undefined, 24, false)))) {
                                    if (J$.C(9160, J$.B(13418, '<', J$.R(145505, 'dbcsCode', dbcsCode, false, false), J$.T(145513, 256, 22, false)))) {
                                        J$.P(145553, J$.R(145521, 'newBuf', newBuf, false, false), J$.B(13442, '-', j = J$.W(145537, 'j', J$.B(13434, '+', J$.U(13426, '+', J$.R(145529, 'j', j, false, false)), 1), j, false, false), 1), J$.R(145545, 'dbcsCode', dbcsCode, false, false));
                                    } else {
                                        J$.P(145601, J$.R(145561, 'newBuf', newBuf, false, false), J$.B(13466, '-', j = J$.W(145577, 'j', J$.B(13458, '+', J$.U(13450, '+', J$.R(145569, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13474, '>>', J$.R(145585, 'dbcsCode', dbcsCode, false, false), J$.T(145593, 8, 22, false)));
                                        J$.P(145649, J$.R(145609, 'newBuf', newBuf, false, false), J$.B(13498, '-', j = J$.W(145625, 'j', J$.B(13490, '+', J$.U(13482, '+', J$.R(145617, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13506, '&', J$.R(145633, 'dbcsCode', dbcsCode, false, false), J$.T(145641, 255, 22, false)));
                                    }
                                } else {
                                }
                                J$.P(145673, J$.R(145657, 'this', this, false, false), 'seqObj', J$.T(145665, undefined, 24, false));
                            }
                            if (J$.C(9184, J$.B(13522, '!==', J$.G(145689, J$.R(145681, 'this', this, false, false), 'leadSurrogate'), J$.U(13514, '-', J$.T(145697, 1, 22, false))))) {
                                J$.P(145745, J$.R(145705, 'newBuf', newBuf, false, false), J$.B(13546, '-', j = J$.W(145721, 'j', J$.B(13538, '+', J$.U(13530, '+', J$.R(145713, 'j', j, false, false)), 1), j, false, false), 1), J$.G(145737, J$.R(145729, 'this', this, false, false), 'defaultCharSingleByte'));
                                J$.P(145769, J$.R(145753, 'this', this, false, false), 'leadSurrogate', J$.U(13554, '-', J$.T(145761, 1, 22, false)));
                            }
                            return J$.Rt(145809, J$.M(145801, J$.R(145777, 'newBuf', newBuf, false, false), 'slice', false)(J$.T(145785, 0, 22, false), J$.R(145793, 'j', j, false, false)));
                        } catch (J$e) {
                            J$.Ex(149233, J$e);
                        } finally {
                            if (J$.Fr(149241))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(145897, J$.G(145881, J$.R(145873, 'DBCSEncoder', DBCSEncoder, false, true), 'prototype'), 'findIdx', J$.R(145889, 'findIdx', findIdx, false, true));
            J$.P(148217, J$.G(146137, J$.R(146129, 'DBCSDecoder', DBCSDecoder, false, true), 'prototype'), 'write', J$.T(148209, function (buf) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(148065, arguments.callee, this, arguments);
                            arguments = J$.N(148073, 'arguments', arguments, true, false, false);
                            buf = J$.N(148081, 'buf', buf, true, false, false);
                            J$.N(148089, 'newBuf', newBuf, false, false, false);
                            J$.N(148097, 'nodeIdx', nodeIdx, false, false, false);
                            J$.N(148105, 'prevBuf', prevBuf, false, false, false);
                            J$.N(148113, 'prevBufOffset', prevBufOffset, false, false, false);
                            J$.N(148121, 'seqStart', seqStart, false, false, false);
                            J$.N(148129, 'uCode', uCode, false, false, false);
                            J$.N(148137, 'i', i, false, false, false);
                            J$.N(148145, 'j', j, false, false, false);
                            J$.N(148153, 'curByte', curByte, false, false, false);
                            J$.N(148161, 'curSeq', curSeq, false, false, false);
                            J$.N(148169, 'ptr', ptr, false, false, false);
                            J$.N(148177, 'idx', idx, false, false, false);
                            J$.N(148185, 'seq', seq, false, false, false);
                            J$.N(148193, 'k', k, false, false, false);
                            J$.N(148201, 'uCodeLead', uCodeLead, false, false, false);
                            var newBuf = J$.W(146265, 'newBuf', J$.M(146177, J$.R(146145, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(13562, '*', J$.G(146161, J$.R(146153, 'buf', buf, false, false), 'length'), J$.T(146169, 2, 22, false))), newBuf, false, false), nodeIdx = J$.W(146273, 'nodeIdx', J$.G(146193, J$.R(146185, 'this', this, false, false), 'nodeIdx'), nodeIdx, false, false), prevBuf = J$.W(146281, 'prevBuf', J$.G(146209, J$.R(146201, 'this', this, false, false), 'prevBuf'), prevBuf, false, false), prevBufOffset = J$.W(146289, 'prevBufOffset', J$.G(146233, J$.G(146225, J$.R(146217, 'this', this, false, false), 'prevBuf'), 'length'), prevBufOffset, false, false), seqStart = J$.W(146297, 'seqStart', J$.U(13570, '-', J$.G(146257, J$.G(146249, J$.R(146241, 'this', this, false, false), 'prevBuf'), 'length')), seqStart, false, false), uCode;
                            if (J$.C(9192, J$.B(13578, '>', J$.R(146305, 'prevBufOffset', prevBufOffset, false, false), J$.T(146313, 0, 22, false))))
                                prevBuf = J$.W(146385, 'prevBuf', J$.M(146377, J$.R(146321, 'Buffer', Buffer, false, true), 'concat', false)(J$.T(146369, [
                                    J$.R(146329, 'prevBuf', prevBuf, false, false),
                                    J$.M(146361, J$.R(146337, 'buf', buf, false, false), 'slice', false)(J$.T(146345, 0, 22, false), J$.T(146353, 10, 22, false))
                                ], 10, false)), prevBuf, false, false);
                            for (var i = J$.W(146409, 'i', J$.T(146393, 0, 22, false), i, false, false), j = J$.W(146417, 'j', J$.T(146401, 0, 22, false), j, false, false); J$.C(9272, J$.B(13586, '<', J$.R(146425, 'i', i, false, false), J$.G(146441, J$.R(146433, 'buf', buf, false, false), 'length'))); J$.B(13610, '-', i = J$.W(146457, 'i', J$.B(13602, '+', J$.U(13594, '+', J$.R(146449, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var curByte = J$.W(146537, 'curByte', J$.C(9200, J$.B(13618, '>=', J$.R(146465, 'i', i, false, false), J$.T(146473, 0, 22, false))) ? J$.G(146497, J$.R(146481, 'buf', buf, false, false), J$.R(146489, 'i', i, false, false)) : J$.G(146529, J$.R(146505, 'prevBuf', prevBuf, false, false), J$.B(13626, '+', J$.R(146513, 'i', i, false, false), J$.R(146521, 'prevBufOffset', prevBufOffset, false, false))), curByte, false, false);
                                var uCode = J$.W(146593, 'uCode', J$.G(146585, J$.G(146569, J$.G(146553, J$.R(146545, 'this', this, false, false), 'decodeTables'), J$.R(146561, 'nodeIdx', nodeIdx, false, false)), J$.R(146577, 'curByte', curByte, false, false)), uCode, false, false);
                                if (J$.C(9256, J$.B(13634, '>=', J$.R(146601, 'uCode', uCode, false, false), J$.T(146609, 0, 22, false)))) {
                                } else if (J$.C(9248, J$.B(13642, '===', J$.R(146617, 'uCode', uCode, false, false), J$.R(146625, 'UNASSIGNED', UNASSIGNED, false, true)))) {
                                    i = J$.W(146641, 'i', J$.R(146633, 'seqStart', seqStart, false, false), i, false, false);
                                    uCode = J$.W(146681, 'uCode', J$.M(146673, J$.G(146657, J$.R(146649, 'this', this, false, false), 'defaultCharUnicode'), 'charCodeAt', false)(J$.T(146665, 0, 22, false)), uCode, false, false);
                                } else if (J$.C(9240, J$.B(13650, '===', J$.R(146689, 'uCode', uCode, false, false), J$.R(146697, 'GB18030_CODE', GB18030_CODE, false, true)))) {
                                    var curSeq = J$.W(146817, 'curSeq', J$.C(9208, J$.B(13658, '>=', J$.R(146705, 'seqStart', seqStart, false, false), J$.T(146713, 0, 22, false))) ? J$.M(146753, J$.R(146721, 'buf', buf, false, false), 'slice', false)(J$.R(146729, 'seqStart', seqStart, false, false), J$.B(13666, '+', J$.R(146737, 'i', i, false, false), J$.T(146745, 1, 22, false))) : J$.M(146809, J$.R(146761, 'prevBuf', prevBuf, false, false), 'slice', false)(J$.B(13674, '+', J$.R(146769, 'seqStart', seqStart, false, false), J$.R(146777, 'prevBufOffset', prevBufOffset, false, false)), J$.B(13690, '+', J$.B(13682, '+', J$.R(146785, 'i', i, false, false), J$.T(146793, 1, 22, false)), J$.R(146801, 'prevBufOffset', prevBufOffset, false, false))), curSeq, false, false);
                                    var ptr = J$.W(146977, 'ptr', J$.B(13770, '+', J$.B(13754, '+', J$.B(13730, '+', J$.B(13706, '*', J$.B(13698, '-', J$.G(146841, J$.R(146825, 'curSeq', curSeq, false, false), J$.T(146833, 0, 22, false)), J$.T(146849, 129, 22, false)), J$.T(146857, 12600, 22, false)), J$.B(13722, '*', J$.B(13714, '-', J$.G(146881, J$.R(146865, 'curSeq', curSeq, false, false), J$.T(146873, 1, 22, false)), J$.T(146889, 48, 22, false)), J$.T(146897, 1260, 22, false))), J$.B(13746, '*', J$.B(13738, '-', J$.G(146921, J$.R(146905, 'curSeq', curSeq, false, false), J$.T(146913, 2, 22, false)), J$.T(146929, 129, 22, false)), J$.T(146937, 10, 22, false))), J$.B(13762, '-', J$.G(146961, J$.R(146945, 'curSeq', curSeq, false, false), J$.T(146953, 3, 22, false)), J$.T(146969, 48, 22, false))), ptr, false, false);
                                    var idx = J$.W(147033, 'idx', J$.F(147025, J$.R(146985, 'findIdx', findIdx, false, true), false)(J$.G(147009, J$.G(147001, J$.R(146993, 'this', this, false, false), 'gb18030'), 'gbChars'), J$.R(147017, 'ptr', ptr, false, false)), idx, false, false);
                                    uCode = J$.W(147129, 'uCode', J$.B(13786, '-', J$.B(13778, '+', J$.G(147073, J$.G(147057, J$.G(147049, J$.R(147041, 'this', this, false, false), 'gb18030'), 'uChars'), J$.R(147065, 'idx', idx, false, false)), J$.R(147081, 'ptr', ptr, false, false)), J$.G(147121, J$.G(147105, J$.G(147097, J$.R(147089, 'this', this, false, false), 'gb18030'), 'gbChars'), J$.R(147113, 'idx', idx, false, false))), uCode, false, false);
                                } else if (J$.C(9232, J$.B(13794, '<=', J$.R(147137, 'uCode', uCode, false, false), J$.R(147145, 'NODE_START', NODE_START, false, true)))) {
                                    nodeIdx = J$.W(147169, 'nodeIdx', J$.B(13802, '-', J$.R(147153, 'NODE_START', NODE_START, false, true), J$.R(147161, 'uCode', uCode, false, false)), nodeIdx, false, false);
                                    continue;
                                } else if (J$.C(9224, J$.B(13810, '<=', J$.R(147177, 'uCode', uCode, false, false), J$.R(147185, 'SEQ_START', SEQ_START, false, true)))) {
                                    var seq = J$.W(147233, 'seq', J$.G(147225, J$.G(147201, J$.R(147193, 'this', this, false, false), 'decodeTableSeq'), J$.B(13818, '-', J$.R(147209, 'SEQ_START', SEQ_START, false, true), J$.R(147217, 'uCode', uCode, false, false))), seq, false, false);
                                    for (var k = J$.W(147249, 'k', J$.T(147241, 0, 22, false), k, false, false); J$.C(9216, J$.B(13834, '<', J$.R(147257, 'k', k, false, false), J$.B(13826, '-', J$.G(147273, J$.R(147265, 'seq', seq, false, false), 'length'), J$.T(147281, 1, 22, false)))); J$.B(13858, '-', k = J$.W(147297, 'k', J$.B(13850, '+', J$.U(13842, '+', J$.R(147289, 'k', k, false, false)), 1), k, false, false), 1)) {
                                        uCode = J$.W(147329, 'uCode', J$.G(147321, J$.R(147305, 'seq', seq, false, false), J$.R(147313, 'k', k, false, false)), uCode, false, false);
                                        J$.P(147377, J$.R(147337, 'newBuf', newBuf, false, false), J$.B(13882, '-', j = J$.W(147353, 'j', J$.B(13874, '+', J$.U(13866, '+', J$.R(147345, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13890, '&', J$.R(147361, 'uCode', uCode, false, false), J$.T(147369, 255, 22, false)));
                                        J$.P(147425, J$.R(147385, 'newBuf', newBuf, false, false), J$.B(13914, '-', j = J$.W(147401, 'j', J$.B(13906, '+', J$.U(13898, '+', J$.R(147393, 'j', j, false, false)), 1), j, false, false), 1), J$.B(13922, '>>', J$.R(147409, 'uCode', uCode, false, false), J$.T(147417, 8, 22, false)));
                                    }
                                    uCode = J$.W(147473, 'uCode', J$.G(147465, J$.R(147433, 'seq', seq, false, false), J$.B(13930, '-', J$.G(147449, J$.R(147441, 'seq', seq, false, false), 'length'), J$.T(147457, 1, 22, false))), uCode, false, false);
                                } else
                                    throw J$.F(147537, J$.I(typeof Error === 'undefined' ? Error = J$.R(147481, 'Error', undefined, true, true) : Error = J$.R(147481, 'Error', Error, true, true)), true)(J$.B(13970, '+', J$.B(13962, '+', J$.B(13954, '+', J$.B(13946, '+', J$.B(13938, '+', J$.T(147489, 'iconv-lite internal error: invalid decoding table value ', 21, false), J$.R(147497, 'uCode', uCode, false, false)), J$.T(147505, ' at ', 21, false)), J$.R(147513, 'nodeIdx', nodeIdx, false, false)), J$.T(147521, '/', 21, false)), J$.R(147529, 'curByte', curByte, false, false)));
                                if (J$.C(9264, J$.B(13978, '>', J$.R(147545, 'uCode', uCode, false, false), J$.T(147553, 65535, 22, false)))) {
                                    uCode = J$.W(147577, 'uCode', J$.B(13986, '-', J$.R(147569, 'uCode', uCode, false, false), J$.T(147561, 65536, 22, false)), uCode, false, false);
                                    var uCodeLead = J$.W(147625, 'uCodeLead', J$.B(14002, '+', J$.T(147585, 55296, 22, false), J$.M(147617, J$.I(typeof Math === 'undefined' ? Math = J$.R(147593, 'Math', undefined, true, true) : Math = J$.R(147593, 'Math', Math, true, true)), 'floor', false)(J$.B(13994, '/', J$.R(147601, 'uCode', uCode, false, false), J$.T(147609, 1024, 22, false)))), uCodeLead, false, false);
                                    J$.P(147673, J$.R(147633, 'newBuf', newBuf, false, false), J$.B(14026, '-', j = J$.W(147649, 'j', J$.B(14018, '+', J$.U(14010, '+', J$.R(147641, 'j', j, false, false)), 1), j, false, false), 1), J$.B(14034, '&', J$.R(147657, 'uCodeLead', uCodeLead, false, false), J$.T(147665, 255, 22, false)));
                                    J$.P(147721, J$.R(147681, 'newBuf', newBuf, false, false), J$.B(14058, '-', j = J$.W(147697, 'j', J$.B(14050, '+', J$.U(14042, '+', J$.R(147689, 'j', j, false, false)), 1), j, false, false), 1), J$.B(14066, '>>', J$.R(147705, 'uCodeLead', uCodeLead, false, false), J$.T(147713, 8, 22, false)));
                                    uCode = J$.W(147753, 'uCode', J$.B(14082, '+', J$.T(147729, 56320, 22, false), J$.B(14074, '%', J$.R(147737, 'uCode', uCode, false, false), J$.T(147745, 1024, 22, false))), uCode, false, false);
                                }
                                J$.P(147801, J$.R(147761, 'newBuf', newBuf, false, false), J$.B(14106, '-', j = J$.W(147777, 'j', J$.B(14098, '+', J$.U(14090, '+', J$.R(147769, 'j', j, false, false)), 1), j, false, false), 1), J$.B(14114, '&', J$.R(147785, 'uCode', uCode, false, false), J$.T(147793, 255, 22, false)));
                                J$.P(147849, J$.R(147809, 'newBuf', newBuf, false, false), J$.B(14138, '-', j = J$.W(147825, 'j', J$.B(14130, '+', J$.U(14122, '+', J$.R(147817, 'j', j, false, false)), 1), j, false, false), 1), J$.B(14146, '>>', J$.R(147833, 'uCode', uCode, false, false), J$.T(147841, 8, 22, false)));
                                nodeIdx = J$.W(147865, 'nodeIdx', J$.T(147857, 0, 22, false), nodeIdx, false, false);
                                seqStart = J$.W(147889, 'seqStart', J$.B(14154, '+', J$.R(147873, 'i', i, false, false), J$.T(147881, 1, 22, false)), seqStart, false, false);
                            }
                            J$.P(147913, J$.R(147897, 'this', this, false, false), 'nodeIdx', J$.R(147905, 'nodeIdx', nodeIdx, false, false));
                            J$.P(148001, J$.R(147921, 'this', this, false, false), 'prevBuf', J$.C(9280, J$.B(14162, '>=', J$.R(147929, 'seqStart', seqStart, false, false), J$.T(147937, 0, 22, false))) ? J$.M(147961, J$.R(147945, 'buf', buf, false, false), 'slice', false)(J$.R(147953, 'seqStart', seqStart, false, false)) : J$.M(147993, J$.R(147969, 'prevBuf', prevBuf, false, false), 'slice', false)(J$.B(14170, '+', J$.R(147977, 'seqStart', seqStart, false, false), J$.R(147985, 'prevBufOffset', prevBufOffset, false, false))));
                            return J$.Rt(148057, J$.M(148049, J$.M(148033, J$.R(148009, 'newBuf', newBuf, false, false), 'slice', false)(J$.T(148017, 0, 22, false), J$.R(148025, 'j', j, false, false)), 'toString', false)(J$.T(148041, 'ucs2', 21, false)));
                        } catch (J$e) {
                            J$.Ex(149265, J$e);
                        } finally {
                            if (J$.Fr(149273))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(148569, J$.G(148233, J$.R(148225, 'DBCSDecoder', DBCSDecoder, false, true), 'prototype'), 'end', J$.T(148561, function () {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(148529, arguments.callee, this, arguments);
                            arguments = J$.N(148537, 'arguments', arguments, true, false, false);
                            J$.N(148545, 'ret', ret, false, false, false);
                            J$.N(148553, 'buf', buf, false, false, false);
                            var ret = J$.W(148249, 'ret', J$.T(148241, '', 21, false), ret, false, false);
                            while (J$.C(9296, J$.B(14178, '>', J$.G(148273, J$.G(148265, J$.R(148257, 'this', this, false, false), 'prevBuf'), 'length'), J$.T(148281, 0, 22, false)))) {
                                ret = J$.W(148313, 'ret', J$.B(14186, '+', J$.R(148305, 'ret', ret, false, false), J$.G(148297, J$.R(148289, 'this', this, false, false), 'defaultCharUnicode')), ret, false, false);
                                var buf = J$.W(148353, 'buf', J$.M(148345, J$.G(148329, J$.R(148321, 'this', this, false, false), 'prevBuf'), 'slice', false)(J$.T(148337, 1, 22, false)), buf, false, false);
                                J$.P(148393, J$.R(148361, 'this', this, false, false), 'prevBuf', J$.M(148385, J$.R(148369, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(148377, 0, 22, false)));
                                J$.P(148417, J$.R(148401, 'this', this, false, false), 'nodeIdx', J$.T(148409, 0, 22, false));
                                if (J$.C(9288, J$.B(14194, '>', J$.G(148433, J$.R(148425, 'buf', buf, false, false), 'length'), J$.T(148441, 0, 22, false))))
                                    ret = J$.W(148481, 'ret', J$.B(14202, '+', J$.R(148473, 'ret', ret, false, false), J$.M(148465, J$.R(148449, 'this', this, false, false), 'write', false)(J$.R(148457, 'buf', buf, false, false))), ret, false, false);
                            }
                            J$.P(148505, J$.R(148489, 'this', this, false, false), 'nodeIdx', J$.T(148497, 0, 22, false));
                            return J$.Rt(148521, J$.R(148513, 'ret', ret, false, false));
                        } catch (J$e) {
                            J$.Ex(149281, J$e);
                        } finally {
                            if (J$.Fr(149289))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(149313, J$e);
        } finally {
            if (J$.Sr(149321))
                continue jalangiLabel17;
            else
                break jalangiLabel17;
        }
    }
// JALANGI DO NOT INSTRUMENT

