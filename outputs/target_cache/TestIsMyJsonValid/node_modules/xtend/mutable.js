J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(487353, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/xtend/mutable.js');
            function extend(target) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(487305, arguments.callee, this, arguments);
                            arguments = J$.N(487313, 'arguments', arguments, true, false, false);
                            target = J$.N(487321, 'target', target, true, false, false);
                            J$.N(487329, 'i', i, false, false, false);
                            J$.N(487337, 'source', source, false, false, false);
                            J$.N(487345, 'key', key, false, false, false);
                            for (var i = J$.W(487105, 'i', J$.T(487097, 1, 22, false), i, false, false); J$.C(26888, J$.B(41618, '<', J$.R(487113, 'i', i, false, false), J$.G(487129, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(487121, 'arguments', undefined, true, true) : arguments = J$.R(487121, 'arguments', arguments, true, true)), 'length'))); J$.B(41642, '-', i = J$.W(487145, 'i', J$.B(41634, '+', J$.U(41626, '+', J$.R(487137, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var source = J$.W(487177, 'source', J$.G(487169, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(487153, 'arguments', undefined, true, true) : arguments = J$.R(487153, 'arguments', arguments, true, true)), J$.R(487161, 'i', i, false, false)), source, false, false);
                                for (var key in J$.H(487273, J$.R(487185, 'source', source, false, false))) {
                                    J$.N(487281, 'key', key, false, true, false);
                                    {
                                        {
                                            if (J$.C(26880, J$.M(487217, J$.R(487193, 'hasOwnProperty', hasOwnProperty, false, true), 'call', false)(J$.R(487201, 'source', source, false, false), J$.R(487209, 'key', key, false, false)))) {
                                                J$.P(487265, J$.R(487225, 'target', target, false, false), J$.R(487233, 'key', key, false, false), J$.G(487257, J$.R(487241, 'source', source, false, false), J$.R(487249, 'key', key, false, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.Rt(487297, J$.R(487289, 'target', target, false, false));
                        } catch (J$e) {
                            J$.Ex(487385, J$e);
                        } finally {
                            if (J$.Fr(487393))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(487361, 'hasOwnProperty', hasOwnProperty, false, false, false);
            extend = J$.N(487377, 'extend', J$.T(487369, extend, 12, false), true, false, false);
            J$.T(487033, 'use strict', 21, false);
            J$.P(487057, J$.I(typeof module === 'undefined' ? module = J$.R(487041, 'module', undefined, true, true) : module = J$.R(487041, 'module', module, true, true)), 'exports', J$.R(487049, 'extend', extend, false, true));
            var hasOwnProperty = J$.W(487089, 'hasOwnProperty', J$.G(487081, J$.G(487073, J$.I(typeof Object === 'undefined' ? Object = J$.R(487065, 'Object', undefined, true, true) : Object = J$.R(487065, 'Object', Object, true, true)), 'prototype'), 'hasOwnProperty'), hasOwnProperty, false, true);
        } catch (J$e) {
            J$.Ex(487401, J$e);
        } finally {
            if (J$.Sr(487409))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

