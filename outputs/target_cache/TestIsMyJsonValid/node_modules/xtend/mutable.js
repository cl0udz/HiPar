J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(444481, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/xtend/mutable.js');
            function extend(target) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(444433, arguments.callee, this, arguments);
                            arguments = J$.N(444441, 'arguments', arguments, true, false, false);
                            target = J$.N(444449, 'target', target, true, false, false);
                            J$.N(444457, 'i', i, false, false, false);
                            J$.N(444465, 'source', source, false, false, false);
                            J$.N(444473, 'key', key, false, false, false);
                            for (var i = J$.W(444233, 'i', J$.T(444225, 1, 22, false), i, false, false); J$.C(24616, J$.B(38498, '<', J$.R(444241, 'i', i, false, false), J$.G(444257, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(444249, 'arguments', undefined, true, true) : arguments = J$.R(444249, 'arguments', arguments, true, true)), 'length'))); J$.B(38522, '-', i = J$.W(444273, 'i', J$.B(38514, '+', J$.U(38506, '+', J$.R(444265, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var source = J$.W(444305, 'source', J$.G(444297, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(444281, 'arguments', undefined, true, true) : arguments = J$.R(444281, 'arguments', arguments, true, true)), J$.R(444289, 'i', i, false, false)), source, false, false);
                                for (var key in J$.H(444401, J$.R(444313, 'source', source, false, false))) {
                                    J$.N(444409, 'key', key, false, true, false);
                                    {
                                        {
                                            if (J$.C(24608, J$.M(444345, J$.R(444321, 'hasOwnProperty', hasOwnProperty, false, true), 'call', false)(J$.R(444329, 'source', source, false, false), J$.R(444337, 'key', key, false, false)))) {
                                                J$.P(444393, J$.R(444353, 'target', target, false, false), J$.R(444361, 'key', key, false, false), J$.G(444385, J$.R(444369, 'source', source, false, false), J$.R(444377, 'key', key, false, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.Rt(444425, J$.R(444417, 'target', target, false, false));
                        } catch (J$e) {
                            J$.Ex(444513, J$e);
                        } finally {
                            if (J$.Fr(444521))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(444489, 'hasOwnProperty', hasOwnProperty, false, false, false);
            extend = J$.N(444505, 'extend', J$.T(444497, extend, 12, false), true, false, false);
            J$.T(444161, 'use strict', 21, false);
            J$.P(444185, J$.I(typeof module === 'undefined' ? module = J$.R(444169, 'module', undefined, true, true) : module = J$.R(444169, 'module', module, true, true)), 'exports', J$.R(444177, 'extend', extend, false, true));
            var hasOwnProperty = J$.W(444217, 'hasOwnProperty', J$.G(444209, J$.G(444201, J$.I(typeof Object === 'undefined' ? Object = J$.R(444193, 'Object', undefined, true, true) : Object = J$.R(444193, 'Object', Object, true, true)), 'prototype'), 'hasOwnProperty'), hasOwnProperty, false, true);
        } catch (J$e) {
            J$.Ex(444529, J$e);
        } finally {
            if (J$.Sr(444537))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

