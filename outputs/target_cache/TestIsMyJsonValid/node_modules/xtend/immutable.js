J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4402601, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/xtend/immutable.js');
            function extend() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4402553, arguments.callee, this, arguments);
                            arguments = J$.N(4402561, 'arguments', arguments, true, false, false);
                            J$.N(4402569, 'target', target, false, false, false);
                            J$.N(4402577, 'i', i, false, false, false);
                            J$.N(4402585, 'source', source, false, false, false);
                            J$.N(4402593, 'key', key, false, false, false);
                            var target = J$.W(4402337, 'target', J$.T(4402329, {}, 11, false), target, false, false);
                            for (var i = J$.W(4402353, 'i', J$.T(4402345, 0, 22, false), i, false, false); J$.C(233000, J$.B(424514, '<', J$.R(4402361, 'i', i, false, false), J$.G(4402377, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4402369, 'arguments', undefined, true, true) : arguments = J$.R(4402369, 'arguments', arguments, true, true)), 'length'))); J$.B(424538, '-', i = J$.W(4402393, 'i', J$.B(424530, '+', J$.U(424522, '+', J$.R(4402385, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var source = J$.W(4402425, 'source', J$.G(4402417, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4402401, 'arguments', undefined, true, true) : arguments = J$.R(4402401, 'arguments', arguments, true, true)), J$.R(4402409, 'i', i, false, false)), source, false, false);
                                for (var key in J$.H(4402521, J$.R(4402433, 'source', source, false, false))) {
                                    J$.N(4402529, 'key', key, false, true, false);
                                    {
                                        {
                                            if (J$.C(232992, J$.M(4402465, J$.R(4402441, 'hasOwnProperty', hasOwnProperty, false, true), 'call', false)(J$.R(4402449, 'source', source, false, false), J$.R(4402457, 'key', key, false, false)))) {
                                                J$.P(4402513, J$.R(4402473, 'target', target, false, false), J$.R(4402481, 'key', key, false, false), J$.G(4402505, J$.R(4402489, 'source', source, false, false), J$.R(4402497, 'key', key, false, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.Rt(4402545, J$.R(4402537, 'target', target, false, false));
                        } catch (J$e) {
                            J$.Ex(4402633, J$e);
                        } finally {
                            if (J$.Fr(4402641))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4402609, 'hasOwnProperty', hasOwnProperty, false, false, false);
            extend = J$.N(4402625, 'extend', J$.T(4402617, extend, 12, false), true, false, false);
            J$.T(4402265, 'use strict', 21, false);
            J$.P(4402289, J$.I(typeof module === 'undefined' ? module = J$.R(4402273, 'module', undefined, true, true) : module = J$.R(4402273, 'module', module, true, true)), 'exports', J$.R(4402281, 'extend', extend, false, true));
            var hasOwnProperty = J$.W(4402321, 'hasOwnProperty', J$.G(4402313, J$.G(4402305, J$.I(typeof Object === 'undefined' ? Object = J$.R(4402297, 'Object', undefined, true, true) : Object = J$.R(4402297, 'Object', Object, true, true)), 'prototype'), 'hasOwnProperty'), hasOwnProperty, false, true);
        } catch (J$e) {
            J$.Ex(4402649, J$e);
        } finally {
            if (J$.Sr(4402657))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

