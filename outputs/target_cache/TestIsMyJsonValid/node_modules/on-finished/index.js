J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(324169, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/on-finished/index.js');
            function onFinished(msg, listener) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(322537, arguments.callee, this, arguments);
                            arguments = J$.N(322545, 'arguments', arguments, true, false, false);
                            msg = J$.N(322553, 'msg', msg, true, false, false);
                            listener = J$.N(322561, 'listener', listener, true, false, false);
                            if (J$.C(18520, J$.B(29210, '!==', J$.F(322417, J$.R(322401, 'isFinished', isFinished, false, true), false)(J$.R(322409, 'msg', msg, false, false)), J$.T(322425, false, 23, false)))) {
                                J$.F(322465, J$.R(322433, 'defer', defer, false, true), false)(J$.R(322441, 'listener', listener, false, false), J$.T(322449, null, 25, false), J$.R(322457, 'msg', msg, false, false));
                                return J$.Rt(322481, J$.R(322473, 'msg', msg, false, false));
                            }
                            J$.F(322513, J$.R(322489, 'attachListener', attachListener, false, true), false)(J$.R(322497, 'msg', msg, false, false), J$.R(322505, 'listener', listener, false, false));
                            return J$.Rt(322529, J$.R(322521, 'msg', msg, false, false));
                        } catch (J$e) {
                            J$.Ex(324305, J$e);
                        } finally {
                            if (J$.Fr(324313))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isFinished(msg) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(322817, arguments.callee, this, arguments);
                            arguments = J$.N(322825, 'arguments', arguments, true, false, false);
                            msg = J$.N(322833, 'msg', msg, true, false, false);
                            J$.N(322841, 'socket', socket, false, false, false);
                            var socket = J$.W(322585, 'socket', J$.G(322577, J$.R(322569, 'msg', msg, false, false), 'socket'), socket, false, false);
                            if (J$.C(18544, J$.B(29226, '===', J$.U(29218, 'typeof', J$.G(322601, J$.R(322593, 'msg', msg, false, false), 'finished')), J$.T(322609, 'boolean', 21, false)))) {
                                return J$.Rt(322673, J$.F(322665, J$.I(typeof Boolean === 'undefined' ? Boolean = J$.R(322617, 'Boolean', undefined, true, true) : Boolean = J$.R(322617, 'Boolean', Boolean, true, true)), false)(J$.C(18536, J$.G(322633, J$.R(322625, 'msg', msg, false, false), 'finished')) ? J$._() : J$.C(18528, J$.R(322641, 'socket', socket, false, false)) ? J$.U(29234, '!', J$.G(322657, J$.R(322649, 'socket', socket, false, false), 'writable')) : J$._()));
                            }
                            if (J$.C(18584, J$.B(29250, '===', J$.U(29242, 'typeof', J$.G(322689, J$.R(322681, 'msg', msg, false, false), 'complete')), J$.T(322697, 'boolean', 21, false)))) {
                                return J$.Rt(322793, J$.F(322785, J$.I(typeof Boolean === 'undefined' ? Boolean = J$.R(322705, 'Boolean', undefined, true, true) : Boolean = J$.R(322705, 'Boolean', Boolean, true, true)), false)(J$.C(18576, J$.C(18560, J$.C(18552, J$.G(322721, J$.R(322713, 'msg', msg, false, false), 'upgrade')) ? J$._() : J$.U(29258, '!', J$.R(322729, 'socket', socket, false, false))) ? J$._() : J$.U(29266, '!', J$.G(322745, J$.R(322737, 'socket', socket, false, false), 'readable'))) ? J$._() : J$.C(18568, J$.G(322761, J$.R(322753, 'msg', msg, false, false), 'complete')) ? J$.U(29274, '!', J$.G(322777, J$.R(322769, 'msg', msg, false, false), 'readable')) : J$._()));
                            }
                            return J$.Rt(322809, J$.T(322801, undefined, 24, false));
                        } catch (J$e) {
                            J$.Ex(324321, J$e);
                        } finally {
                            if (J$.Fr(324329))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function attachFinishedListener(msg, callback) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(323353, arguments.callee, this, arguments);
                            function onFinish(error) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(322937, arguments.callee, this, arguments);
                                            arguments = J$.N(322945, 'arguments', arguments, true, false, false);
                                            error = J$.N(322953, 'error', error, true, false, false);
                                            J$.M(322873, J$.R(322865, 'eeMsg', eeMsg, false, false), 'cancel', false)();
                                            J$.M(322889, J$.R(322881, 'eeSocket', eeSocket, false, false), 'cancel', false)();
                                            finished = J$.W(322905, 'finished', J$.T(322897, true, 23, false), finished, false, false);
                                            J$.F(322929, J$.R(322913, 'callback', callback, false, false), false)(J$.R(322921, 'error', error, false, false));
                                        } catch (J$e) {
                                            J$.Ex(324337, J$e);
                                        } finally {
                                            if (J$.Fr(324345))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function onSocket(socket) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(323185, arguments.callee, this, arguments);
                                            arguments = J$.N(323193, 'arguments', arguments, true, false, false);
                                            socket = J$.N(323201, 'socket', socket, true, false, false);
                                            J$.M(323065, J$.R(323041, 'msg', msg, false, false), 'removeListener', false)(J$.T(323049, 'socket', 21, false), J$.R(323057, 'onSocket', onSocket, false, false));
                                            if (J$.C(18592, J$.R(323073, 'finished', finished, false, false)))
                                                return J$.Rt(323081, undefined);
                                            if (J$.C(18600, J$.B(29282, '!==', J$.R(323089, 'eeMsg', eeMsg, false, false), J$.R(323097, 'eeSocket', eeSocket, false, false))))
                                                return J$.Rt(323105, undefined);
                                            eeSocket = J$.W(323177, 'eeSocket', J$.F(323169, J$.R(323113, 'first', first, false, true), false)(J$.T(323153, [J$.T(323145, [
                                                    J$.R(323121, 'socket', socket, false, false),
                                                    J$.T(323129, 'error', 21, false),
                                                    J$.T(323137, 'close', 21, false)
                                                ], 10, false)], 10, false), J$.R(323161, 'onFinish', onFinish, false, false)), eeSocket, false, false);
                                        } catch (J$e) {
                                            J$.Ex(324353, J$e);
                                        } finally {
                                            if (J$.Fr(324361))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(323361, 'arguments', arguments, true, false, false);
                            msg = J$.N(323369, 'msg', msg, true, false, false);
                            callback = J$.N(323377, 'callback', callback, true, false, false);
                            J$.N(323385, 'eeMsg', eeMsg, false, false, false);
                            J$.N(323393, 'eeSocket', eeSocket, false, false, false);
                            J$.N(323401, 'finished', finished, false, false, false);
                            onFinish = J$.N(323417, 'onFinish', J$.T(323409, onFinish, 12, false), true, false, false);
                            onSocket = J$.N(323433, 'onSocket', J$.T(323425, onSocket, 12, false), true, false, false);
                            var eeMsg;
                            var eeSocket;
                            var finished = J$.W(322857, 'finished', J$.T(322849, false, 23, false), finished, false, false);
                            eeMsg = J$.W(323033, 'eeMsg', eeSocket = J$.W(323025, 'eeSocket', J$.F(323017, J$.R(322961, 'first', first, false, true), false)(J$.T(323001, [J$.T(322993, [
                                    J$.R(322969, 'msg', msg, false, false),
                                    J$.T(322977, 'end', 21, false),
                                    J$.T(322985, 'finish', 21, false)
                                ], 10, false)], 10, false), J$.R(323009, 'onFinish', onFinish, false, false)), eeSocket, false, false), eeMsg, false, false);
                            if (J$.C(18608, J$.G(323217, J$.R(323209, 'msg', msg, false, false), 'socket'))) {
                                J$.F(323249, J$.R(323225, 'onSocket', onSocket, false, false), false)(J$.G(323241, J$.R(323233, 'msg', msg, false, false), 'socket'));
                                return J$.Rt(323257, undefined);
                            }
                            J$.M(323289, J$.R(323265, 'msg', msg, false, false), 'on', false)(J$.T(323273, 'socket', 21, false), J$.R(323281, 'onSocket', onSocket, false, false));
                            if (J$.C(18616, J$.B(29290, '===', J$.G(323305, J$.R(323297, 'msg', msg, false, false), 'socket'), J$.T(323313, undefined, 24, false)))) {
                                J$.F(323345, J$.R(323321, 'patchAssignSocket', patchAssignSocket, false, true), false)(J$.R(323329, 'msg', msg, false, false), J$.R(323337, 'onSocket', onSocket, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(324369, J$e);
                        } finally {
                            if (J$.Fr(324377))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function attachListener(msg, listener) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(323601, arguments.callee, this, arguments);
                            arguments = J$.N(323609, 'arguments', arguments, true, false, false);
                            msg = J$.N(323617, 'msg', msg, true, false, false);
                            listener = J$.N(323625, 'listener', listener, true, false, false);
                            J$.N(323633, 'attached', attached, false, false, false);
                            var attached = J$.W(323457, 'attached', J$.G(323449, J$.R(323441, 'msg', msg, false, false), '__onFinished'), attached, false, false);
                            if (J$.C(18632, J$.C(18624, J$.U(29298, '!', J$.R(323465, 'attached', attached, false, false))) ? J$._() : J$.U(29306, '!', J$.G(323481, J$.R(323473, 'attached', attached, false, false), 'queue')))) {
                                attached = J$.W(323529, 'attached', J$.P(323521, J$.R(323489, 'msg', msg, false, false), '__onFinished', J$.F(323513, J$.R(323497, 'createListener', createListener, false, true), false)(J$.R(323505, 'msg', msg, false, false))), attached, false, false);
                                J$.F(323561, J$.R(323537, 'attachFinishedListener', attachFinishedListener, false, true), false)(J$.R(323545, 'msg', msg, false, false), J$.R(323553, 'attached', attached, false, false));
                            }
                            J$.M(323593, J$.G(323577, J$.R(323569, 'attached', attached, false, false), 'queue'), 'push', false)(J$.R(323585, 'listener', listener, false, false));
                        } catch (J$e) {
                            J$.Ex(324385, J$e);
                        } finally {
                            if (J$.Fr(324393))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createListener(msg) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(323937, arguments.callee, this, arguments);
                            function listener(err) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(323857, arguments.callee, this, arguments);
                                            arguments = J$.N(323865, 'arguments', arguments, true, false, false);
                                            err = J$.N(323873, 'err', err, true, false, false);
                                            J$.N(323881, 'queue', queue, false, false, false);
                                            J$.N(323889, 'i', i, false, false, false);
                                            if (J$.C(18640, J$.B(29314, '===', J$.G(323649, J$.R(323641, 'msg', msg, false, false), '__onFinished'), J$.R(323657, 'listener', listener, false, false))))
                                                J$.P(323681, J$.R(323665, 'msg', msg, false, false), '__onFinished', J$.T(323673, null, 25, false));
                                            if (J$.C(18648, J$.U(29322, '!', J$.G(323697, J$.R(323689, 'listener', listener, false, false), 'queue'))))
                                                return J$.Rt(323705, undefined);
                                            var queue = J$.W(323729, 'queue', J$.G(323721, J$.R(323713, 'listener', listener, false, false), 'queue'), queue, false, false);
                                            J$.P(323753, J$.R(323737, 'listener', listener, false, false), 'queue', J$.T(323745, null, 25, false));
                                            for (var i = J$.W(323769, 'i', J$.T(323761, 0, 22, false), i, false, false); J$.C(18656, J$.B(29330, '<', J$.R(323777, 'i', i, false, false), J$.G(323793, J$.R(323785, 'queue', queue, false, false), 'length'))); J$.B(29354, '-', i = J$.W(323809, 'i', J$.B(29346, '+', J$.U(29338, '+', J$.R(323801, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                J$.M(323849, J$.R(323817, 'queue', queue, false, false), J$.R(323825, 'i', i, false, false), false)(J$.R(323833, 'err', err, false, false), J$.R(323841, 'msg', msg, false, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(324401, J$e);
                                        } finally {
                                            if (J$.Fr(324409))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(323945, 'arguments', arguments, true, false, false);
                            msg = J$.N(323953, 'msg', msg, true, false, false);
                            listener = J$.N(323969, 'listener', J$.T(323961, listener, 12, false), true, false, false);
                            J$.P(323913, J$.R(323897, 'listener', listener, false, false), 'queue', J$.T(323905, [], 10, false));
                            return J$.Rt(323929, J$.R(323921, 'listener', listener, false, false));
                        } catch (J$e) {
                            J$.Ex(324417, J$e);
                        } finally {
                            if (J$.Fr(324425))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function patchAssignSocket(res, callback) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(324129, arguments.callee, this, arguments);
                            arguments = J$.N(324137, 'arguments', arguments, true, false, false);
                            res = J$.N(324145, 'res', res, true, false, false);
                            callback = J$.N(324153, 'callback', callback, true, false, false);
                            J$.N(324161, 'assignSocket', assignSocket, false, false, false);
                            var assignSocket = J$.W(323993, 'assignSocket', J$.G(323985, J$.R(323977, 'res', res, false, false), 'assignSocket'), assignSocket, false, false);
                            if (J$.C(18664, J$.B(29370, '!==', J$.U(29362, 'typeof', J$.R(324001, 'assignSocket', assignSocket, false, false)), J$.T(324009, 'function', 21, false))))
                                return J$.Rt(324017, undefined);
                            J$.P(324121, J$.R(324025, 'res', res, false, false), 'assignSocket', J$.T(324113, function _assignSocket(socket) {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(324089, arguments.callee, this, arguments);
                                            arguments = J$.N(324097, 'arguments', arguments, true, false, false);
                                            socket = J$.N(324105, 'socket', socket, true, false, false);
                                            J$.M(324057, J$.R(324033, 'assignSocket', assignSocket, false, false), 'call', false)(J$.R(324041, 'this', this, false, false), J$.R(324049, 'socket', socket, false, false));
                                            J$.F(324081, J$.R(324065, 'callback', callback, false, false), false)(J$.R(324073, 'socket', socket, false, false));
                                        } catch (J$e) {
                                            J$.Ex(324433, J$e);
                                        } finally {
                                            if (J$.Fr(324441))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(324449, J$e);
                        } finally {
                            if (J$.Fr(324457))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(324177, 'first', first, false, false, false);
            J$.N(324185, 'defer', defer, false, false, false);
            onFinished = J$.N(324201, 'onFinished', J$.T(324193, onFinished, 12, false), true, false, false);
            isFinished = J$.N(324217, 'isFinished', J$.T(324209, isFinished, 12, false), true, false, false);
            attachFinishedListener = J$.N(324233, 'attachFinishedListener', J$.T(324225, attachFinishedListener, 12, false), true, false, false);
            attachListener = J$.N(324249, 'attachListener', J$.T(324241, attachListener, 12, false), true, false, false);
            createListener = J$.N(324265, 'createListener', J$.T(324257, createListener, 12, false), true, false, false);
            patchAssignSocket = J$.N(324281, 'patchAssignSocket', J$.T(324273, patchAssignSocket, 12, false), true, false, false);
            J$.T(322137, 'use strict', 21, false);
            J$.F(322161, J$.I(typeof require === 'undefined' ? require = J$.R(322145, 'require', undefined, true, true) : require = J$.R(322145, 'require', require, true, true)), false)(J$.T(322153, 'core-js/modules/es.function.bind', 21, false));
            J$.F(322185, J$.I(typeof require === 'undefined' ? require = J$.R(322169, 'require', undefined, true, true) : require = J$.R(322169, 'require', require, true, true)), false)(J$.T(322177, 'core-js/modules/web.immediate', 21, false));
            J$.P(322209, J$.I(typeof module === 'undefined' ? module = J$.R(322193, 'module', undefined, true, true) : module = J$.R(322193, 'module', module, true, true)), 'exports', J$.R(322201, 'onFinished', onFinished, false, true));
            J$.P(322241, J$.G(322225, J$.I(typeof module === 'undefined' ? module = J$.R(322217, 'module', undefined, true, true) : module = J$.R(322217, 'module', module, true, true)), 'exports'), 'isFinished', J$.R(322233, 'isFinished', isFinished, false, true));
            var first = J$.W(322273, 'first', J$.F(322265, J$.I(typeof require === 'undefined' ? require = J$.R(322249, 'require', undefined, true, true) : require = J$.R(322249, 'require', require, true, true)), false)(J$.T(322257, 'ee-first', 21, false)), first, false, true);
            var defer = J$.W(322393, 'defer', J$.C(18512, J$.B(29202, '===', J$.U(29194, 'typeof', J$.I(typeof setImmediate === 'undefined' ? setImmediate = J$.R(322281, 'setImmediate', undefined, true, true) : setImmediate = J$.R(322281, 'setImmediate', setImmediate, true, true))), J$.T(322289, 'function', 21, false))) ? J$.I(typeof setImmediate === 'undefined' ? setImmediate = J$.R(322297, 'setImmediate', undefined, true, true) : setImmediate = J$.R(322297, 'setImmediate', setImmediate, true, true)) : J$.T(322385, function (fn) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(322361, arguments.callee, this, arguments);
                            arguments = J$.N(322369, 'arguments', arguments, true, false, false);
                            fn = J$.N(322377, 'fn', fn, true, false, false);
                            J$.M(322353, J$.I(typeof process === 'undefined' ? process = J$.R(322305, 'process', undefined, true, true) : process = J$.R(322305, 'process', process, true, true)), 'nextTick', false)(J$.M(322345, J$.G(322321, J$.R(322313, 'fn', fn, false, false), 'bind'), 'apply', false)(J$.R(322329, 'fn', fn, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(322337, 'arguments', undefined, true, true) : arguments = J$.R(322337, 'arguments', arguments, true, true))));
                        } catch (J$e) {
                            J$.Ex(324289, J$e);
                        } finally {
                            if (J$.Fr(324297))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), defer, false, true);
        } catch (J$e) {
            J$.Ex(324465, J$e);
        } finally {
            if (J$.Sr(324473))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

