J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(4402137, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/vary/index.js');
            function append(header, field) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4401313, arguments.callee, this, arguments);
                            arguments = J$.N(4401321, 'arguments', arguments, true, false, false);
                            header = J$.N(4401329, 'header', header, true, false, false);
                            field = J$.N(4401337, 'field', field, true, false, false);
                            J$.N(4401345, 'fields', fields, false, false, false);
                            J$.N(4401353, 'j', j, false, false, false);
                            J$.N(4401361, 'val', val, false, false, false);
                            J$.N(4401369, 'vals', vals, false, false, false);
                            J$.N(4401377, 'i', i, false, false, false);
                            J$.N(4401385, 'fld', fld, false, false, false);
                            if (J$.C(232816, J$.B(424258, '!==', J$.U(424250, 'typeof', J$.R(4400625, 'header', header, false, false)), J$.T(4400633, 'string', 21, false)))) {
                                throw J$.F(4400657, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(4400641, 'TypeError', undefined, true, true) : TypeError = J$.R(4400641, 'TypeError', TypeError, true, true)), true)(J$.T(4400649, 'header argument is required', 21, false));
                            }
                            if (J$.C(232824, J$.U(424266, '!', J$.R(4400665, 'field', field, false, false)))) {
                                throw J$.F(4400689, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(4400673, 'TypeError', undefined, true, true) : TypeError = J$.R(4400673, 'TypeError', TypeError, true, true)), true)(J$.T(4400681, 'field argument is required', 21, false));
                            }
                            var fields = J$.W(4400769, 'fields', J$.C(232832, J$.U(424274, '!', J$.M(4400713, J$.I(typeof Array === 'undefined' ? Array = J$.R(4400697, 'Array', undefined, true, true) : Array = J$.R(4400697, 'Array', Array, true, true)), 'isArray', false)(J$.R(4400705, 'field', field, false, false)))) ? J$.F(4400753, J$.R(4400721, 'parse', parse, false, true), false)(J$.F(4400745, J$.I(typeof String === 'undefined' ? String = J$.R(4400729, 'String', undefined, true, true) : String = J$.R(4400729, 'String', String, true, true)), false)(J$.R(4400737, 'field', field, false, false))) : J$.R(4400761, 'field', field, false, false), fields, false, false);
                            for (var j = J$.W(4400785, 'j', J$.T(4400777, 0, 22, false), j, false, false); J$.C(232848, J$.B(424282, '<', J$.R(4400793, 'j', j, false, false), J$.G(4400809, J$.R(4400801, 'fields', fields, false, false), 'length'))); J$.B(424306, '-', j = J$.W(4400825, 'j', J$.B(424298, '+', J$.U(424290, '+', J$.R(4400817, 'j', j, false, false)), 1), j, false, false), 1)) {
                                if (J$.C(232840, J$.U(424314, '!', J$.M(4400865, J$.R(4400833, 'FIELD_NAME_REGEXP', FIELD_NAME_REGEXP, false, true), 'test', false)(J$.G(4400857, J$.R(4400841, 'fields', fields, false, false), J$.R(4400849, 'j', j, false, false)))))) {
                                    throw J$.F(4400889, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(4400873, 'TypeError', undefined, true, true) : TypeError = J$.R(4400873, 'TypeError', TypeError, true, true)), true)(J$.T(4400881, 'field argument contains an invalid header name', 21, false));
                                }
                            }
                            if (J$.C(232856, J$.B(424322, '===', J$.R(4400897, 'header', header, false, false), J$.T(4400905, '*', 21, false)))) {
                                return J$.Rt(4400921, J$.R(4400913, 'header', header, false, false));
                            }
                            var val = J$.W(4400937, 'val', J$.R(4400929, 'header', header, false, false), val, false, false);
                            var vals = J$.W(4400977, 'vals', J$.F(4400969, J$.R(4400945, 'parse', parse, false, true), false)(J$.M(4400961, J$.R(4400953, 'header', header, false, false), 'toLowerCase', false)()), vals, false, false);
                            if (J$.C(232872, J$.C(232864, J$.B(424338, '!==', J$.M(4401001, J$.R(4400985, 'fields', fields, false, false), 'indexOf', false)(J$.T(4400993, '*', 21, false)), J$.U(424330, '-', J$.T(4401009, 1, 22, false)))) ? J$._() : J$.B(424354, '!==', J$.M(4401033, J$.R(4401017, 'vals', vals, false, false), 'indexOf', false)(J$.T(4401025, '*', 21, false)), J$.U(424346, '-', J$.T(4401041, 1, 22, false))))) {
                                return J$.Rt(4401057, J$.T(4401049, '*', 21, false));
                            }
                            for (var i = J$.W(4401073, 'i', J$.T(4401065, 0, 22, false), i, false, false); J$.C(232896, J$.B(424362, '<', J$.R(4401081, 'i', i, false, false), J$.G(4401097, J$.R(4401089, 'fields', fields, false, false), 'length'))); J$.B(424386, '-', i = J$.W(4401113, 'i', J$.B(424378, '+', J$.U(424370, '+', J$.R(4401105, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var fld = J$.W(4401153, 'fld', J$.M(4401145, J$.G(4401137, J$.R(4401121, 'fields', fields, false, false), J$.R(4401129, 'i', i, false, false)), 'toLowerCase', false)(), fld, false, false);
                                if (J$.C(232888, J$.B(424402, '===', J$.M(4401177, J$.R(4401161, 'vals', vals, false, false), 'indexOf', false)(J$.R(4401169, 'fld', fld, false, false)), J$.U(424394, '-', J$.T(4401185, 1, 22, false))))) {
                                    J$.M(4401209, J$.R(4401193, 'vals', vals, false, false), 'push', false)(J$.R(4401201, 'fld', fld, false, false));
                                    val = J$.W(4401289, 'val', J$.C(232880, J$.R(4401217, 'val', val, false, false)) ? J$.B(424418, '+', J$.B(424410, '+', J$.R(4401225, 'val', val, false, false), J$.T(4401233, ', ', 21, false)), J$.G(4401257, J$.R(4401241, 'fields', fields, false, false), J$.R(4401249, 'i', i, false, false))) : J$.G(4401281, J$.R(4401265, 'fields', fields, false, false), J$.R(4401273, 'i', i, false, false)), val, false, false);
                                }
                            }
                            return J$.Rt(4401305, J$.R(4401297, 'val', val, false, false));
                        } catch (J$e) {
                            J$.Ex(4402201, J$e);
                        } finally {
                            if (J$.Fr(4402209))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parse(header) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4401769, arguments.callee, this, arguments);
                            arguments = J$.N(4401777, 'arguments', arguments, true, false, false);
                            header = J$.N(4401785, 'header', header, true, false, false);
                            J$.N(4401793, 'end', end, false, false, false);
                            J$.N(4401801, 'list', list, false, false, false);
                            J$.N(4401809, 'start', start, false, false, false);
                            J$.N(4401817, 'i', i, false, false, false);
                            J$.N(4401825, 'len', len, false, false, false);
                            var end = J$.W(4401401, 'end', J$.T(4401393, 0, 22, false), end, false, false);
                            var list = J$.W(4401417, 'list', J$.T(4401409, [], 10, false), list, false, false);
                            var start = J$.W(4401433, 'start', J$.T(4401425, 0, 22, false), start, false, false);
                            for (var i = J$.W(4401465, 'i', J$.T(4401441, 0, 22, false), i, false, false), len = J$.W(4401473, 'len', J$.G(4401457, J$.R(4401449, 'header', header, false, false), 'length'), len, false, false); J$.C(232936, J$.B(424426, '<', J$.R(4401481, 'i', i, false, false), J$.R(4401489, 'len', len, false, false))); J$.B(424450, '-', i = J$.W(4401505, 'i', J$.B(424442, '+', J$.U(424434, '+', J$.R(4401497, 'i', i, false, false)), 1), i, false, false), 1)) {
                                switch (J$.C1(232912, J$.M(4401529, J$.R(4401513, 'header', header, false, false), 'charCodeAt', false)(J$.R(4401521, 'i', i, false, false)))) {
                                case J$.C2(232920, J$.T(4401585, 32, 22, false)):
                                    if (J$.C(232904, J$.B(424458, '===', J$.R(4401537, 'start', start, false, false), J$.R(4401545, 'end', end, false, false)))) {
                                        start = J$.W(4401577, 'start', end = J$.W(4401569, 'end', J$.B(424466, '+', J$.R(4401553, 'i', i, false, false), J$.T(4401561, 1, 22, false)), end, false, false), start, false, false);
                                    }
                                    break;
                                case J$.C2(232928, J$.T(4401673, 44, 22, false)):
                                    J$.M(4401633, J$.R(4401593, 'list', list, false, false), 'push', false)(J$.M(4401625, J$.R(4401601, 'header', header, false, false), 'substring', false)(J$.R(4401609, 'start', start, false, false), J$.R(4401617, 'end', end, false, false)));
                                    start = J$.W(4401665, 'start', end = J$.W(4401657, 'end', J$.B(424474, '+', J$.R(4401641, 'i', i, false, false), J$.T(4401649, 1, 22, false)), end, false, false), start, false, false);
                                    break;
                                default:
                                    end = J$.W(4401697, 'end', J$.B(424482, '+', J$.R(4401681, 'i', i, false, false), J$.T(4401689, 1, 22, false)), end, false, false);
                                    break;
                                }
                            }
                            J$.M(4401745, J$.R(4401705, 'list', list, false, false), 'push', false)(J$.M(4401737, J$.R(4401713, 'header', header, false, false), 'substring', false)(J$.R(4401721, 'start', start, false, false), J$.R(4401729, 'end', end, false, false)));
                            return J$.Rt(4401761, J$.R(4401753, 'list', list, false, false));
                        } catch (J$e) {
                            J$.Ex(4402217, J$e);
                        } finally {
                            if (J$.Fr(4402225))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function vary(res, field) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4402089, arguments.callee, this, arguments);
                            arguments = J$.N(4402097, 'arguments', arguments, true, false, false);
                            res = J$.N(4402105, 'res', res, true, false, false);
                            field = J$.N(4402113, 'field', field, true, false, false);
                            J$.N(4402121, 'val', val, false, false, false);
                            J$.N(4402129, 'header', header, false, false, false);
                            if (J$.C(232960, J$.C(232952, J$.C(232944, J$.U(424490, '!', J$.R(4401833, 'res', res, false, false))) ? J$._() : J$.U(424498, '!', J$.G(4401849, J$.R(4401841, 'res', res, false, false), 'getHeader'))) ? J$._() : J$.U(424506, '!', J$.G(4401865, J$.R(4401857, 'res', res, false, false), 'setHeader')))) {
                                throw J$.F(4401889, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(4401873, 'TypeError', undefined, true, true) : TypeError = J$.R(4401873, 'TypeError', TypeError, true, true)), true)(J$.T(4401881, 'res argument is required', 21, false));
                            }
                            var val = J$.W(4401929, 'val', J$.C(232968, J$.M(4401913, J$.R(4401897, 'res', res, false, false), 'getHeader', false)(J$.T(4401905, 'Vary', 21, false))) ? J$._() : J$.T(4401921, '', 21, false), val, false, false);
                            var header = J$.W(4402009, 'header', J$.C(232976, J$.M(4401953, J$.I(typeof Array === 'undefined' ? Array = J$.R(4401937, 'Array', undefined, true, true) : Array = J$.R(4401937, 'Array', Array, true, true)), 'isArray', false)(J$.R(4401945, 'val', val, false, false))) ? J$.M(4401977, J$.R(4401961, 'val', val, false, false), 'join', false)(J$.T(4401969, ', ', 21, false)) : J$.F(4402001, J$.I(typeof String === 'undefined' ? String = J$.R(4401985, 'String', undefined, true, true) : String = J$.R(4401985, 'String', String, true, true)), false)(J$.R(4401993, 'val', val, false, false)), header, false, false);
                            if (J$.C(232984, val = J$.W(4402049, 'val', J$.F(4402041, J$.R(4402017, 'append', append, false, true), false)(J$.R(4402025, 'header', header, false, false), J$.R(4402033, 'field', field, false, false)), val, false, false))) {
                                J$.M(4402081, J$.R(4402057, 'res', res, false, false), 'setHeader', false)(J$.T(4402065, 'Vary', 21, false), J$.R(4402073, 'val', val, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(4402233, J$e);
                        } finally {
                            if (J$.Fr(4402241))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4402145, 'FIELD_NAME_REGEXP', FIELD_NAME_REGEXP, false, false, false);
            append = J$.N(4402161, 'append', J$.T(4402153, append, 12, false), true, false, false);
            parse = J$.N(4402177, 'parse', J$.T(4402169, parse, 12, false), true, false, false);
            vary = J$.N(4402193, 'vary', J$.T(4402185, vary, 12, false), true, false, false);
            J$.T(4400473, 'use strict', 21, false);
            J$.F(4400497, J$.I(typeof require === 'undefined' ? require = J$.R(4400481, 'require', undefined, true, true) : require = J$.R(4400481, 'require', require, true, true)), false)(J$.T(4400489, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(4400521, J$.I(typeof require === 'undefined' ? require = J$.R(4400505, 'require', undefined, true, true) : require = J$.R(4400505, 'require', require, true, true)), false)(J$.T(4400513, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(4400545, J$.I(typeof require === 'undefined' ? require = J$.R(4400529, 'require', undefined, true, true) : require = J$.R(4400529, 'require', require, true, true)), false)(J$.T(4400537, 'core-js/modules/es.array.join', 21, false));
            J$.P(4400569, J$.I(typeof module === 'undefined' ? module = J$.R(4400553, 'module', undefined, true, true) : module = J$.R(4400553, 'module', module, true, true)), 'exports', J$.R(4400561, 'vary', vary, false, true));
            J$.P(4400601, J$.G(4400585, J$.I(typeof module === 'undefined' ? module = J$.R(4400577, 'module', undefined, true, true) : module = J$.R(4400577, 'module', module, true, true)), 'exports'), 'append', J$.R(4400593, 'append', append, false, true));
            var FIELD_NAME_REGEXP = J$.W(4400617, 'FIELD_NAME_REGEXP', J$.T(4400609, /^[!#$%&'*+\-.^_`|~0-9A-Za-z]+$/, 14, false), FIELD_NAME_REGEXP, false, true);
        } catch (J$e) {
            J$.Ex(4402249, J$e);
        } finally {
            if (J$.Sr(4402257))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

