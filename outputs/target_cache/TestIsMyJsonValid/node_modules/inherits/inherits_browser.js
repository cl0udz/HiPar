J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(227905, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/inherits/inherits_browser.js');
            J$.T(227457, 'use strict', 21, false);
            J$.F(227481, J$.I(typeof require === 'undefined' ? require = J$.R(227465, 'require', undefined, true, true) : require = J$.R(227465, 'require', require, true, true)), false)(J$.T(227473, 'core-js/modules/es.object.create', 21, false));
            if (J$.C(13080, J$.B(20114, '===', J$.U(20106, 'typeof', J$.G(227497, J$.I(typeof Object === 'undefined' ? Object = J$.R(227489, 'Object', undefined, true, true) : Object = J$.R(227489, 'Object', Object, true, true)), 'create')), J$.T(227505, 'function', 21, false)))) {
                J$.P(227681, J$.I(typeof module === 'undefined' ? module = J$.R(227513, 'module', undefined, true, true) : module = J$.R(227513, 'module', module, true, true)), 'exports', J$.T(227673, function inherits(ctor, superCtor) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(227641, arguments.callee, this, arguments);
                                arguments = J$.N(227649, 'arguments', arguments, true, false, false);
                                ctor = J$.N(227657, 'ctor', ctor, true, false, false);
                                superCtor = J$.N(227665, 'superCtor', superCtor, true, false, false);
                                J$.P(227537, J$.R(227521, 'ctor', ctor, false, false), 'super_', J$.R(227529, 'superCtor', superCtor, false, false));
                                J$.P(227633, J$.R(227545, 'ctor', ctor, false, false), 'prototype', J$.M(227625, J$.I(typeof Object === 'undefined' ? Object = J$.R(227553, 'Object', undefined, true, true) : Object = J$.R(227553, 'Object', Object, true, true)), 'create', false)(J$.G(227569, J$.R(227561, 'superCtor', superCtor, false, false), 'prototype'), J$.T(227617, {
                                    constructor: J$.T(227609, {
                                        value: J$.R(227577, 'ctor', ctor, false, false),
                                        enumerable: J$.T(227585, false, 23, false),
                                        writable: J$.T(227593, true, 23, false),
                                        configurable: J$.T(227601, true, 23, false)
                                    }, 11, false)
                                }, 11, false)));
                            } catch (J$e) {
                                J$.Ex(227913, J$e);
                            } finally {
                                if (J$.Fr(227921))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false));
            } else {
                J$.P(227897, J$.I(typeof module === 'undefined' ? module = J$.R(227689, 'module', undefined, true, true) : module = J$.R(227689, 'module', module, true, true)), 'exports', J$.T(227889, function inherits(ctor, superCtor) {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(227849, arguments.callee, this, arguments);
                                arguments = J$.N(227857, 'arguments', arguments, true, false, false);
                                ctor = J$.N(227865, 'ctor', ctor, true, false, false);
                                superCtor = J$.N(227873, 'superCtor', superCtor, true, false, false);
                                J$.N(227881, 'TempCtor', TempCtor, false, false, false);
                                J$.P(227713, J$.R(227697, 'ctor', ctor, false, false), 'super_', J$.R(227705, 'superCtor', superCtor, false, false));
                                var TempCtor = J$.W(227745, 'TempCtor', J$.T(227737, function TempCtor() {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(227721, arguments.callee, this, arguments);
                                                arguments = J$.N(227729, 'arguments', arguments, true, false, false);
                                            } catch (J$e) {
                                                J$.Ex(227929, J$e);
                                            } finally {
                                                if (J$.Fr(227937))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), TempCtor, false, false);
                                J$.P(227777, J$.R(227753, 'TempCtor', TempCtor, false, false), 'prototype', J$.G(227769, J$.R(227761, 'superCtor', superCtor, false, false), 'prototype'));
                                J$.P(227809, J$.R(227785, 'ctor', ctor, false, false), 'prototype', J$.F(227801, J$.R(227793, 'TempCtor', TempCtor, false, false), true)());
                                J$.P(227841, J$.G(227825, J$.R(227817, 'ctor', ctor, false, false), 'prototype'), 'constructor', J$.R(227833, 'ctor', ctor, false, false));
                            } catch (J$e) {
                                J$.Ex(227945, J$e);
                            } finally {
                                if (J$.Fr(227953))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false));
            }
        } catch (J$e) {
            J$.Ex(227961, J$e);
        } finally {
            if (J$.Sr(227969))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

