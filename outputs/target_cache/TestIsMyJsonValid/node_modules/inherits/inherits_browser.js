J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(185033, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/inherits/inherits_browser.js');
            J$.T(184585, 'use strict', 21, false);
            J$.F(184609, J$.I(typeof require === 'undefined' ? require = J$.R(184593, 'require', undefined, true, true) : require = J$.R(184593, 'require', require, true, true)), false)(J$.T(184601, 'core-js/modules/es.object.create', 21, false));
            if (J$.C(10808, J$.B(16994, '===', J$.U(16986, 'typeof', J$.G(184625, J$.I(typeof Object === 'undefined' ? Object = J$.R(184617, 'Object', undefined, true, true) : Object = J$.R(184617, 'Object', Object, true, true)), 'create')), J$.T(184633, 'function', 21, false)))) {
                J$.P(184809, J$.I(typeof module === 'undefined' ? module = J$.R(184641, 'module', undefined, true, true) : module = J$.R(184641, 'module', module, true, true)), 'exports', J$.T(184801, function inherits(ctor, superCtor) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(184769, arguments.callee, this, arguments);
                                arguments = J$.N(184777, 'arguments', arguments, true, false, false);
                                ctor = J$.N(184785, 'ctor', ctor, true, false, false);
                                superCtor = J$.N(184793, 'superCtor', superCtor, true, false, false);
                                J$.P(184665, J$.R(184649, 'ctor', ctor, false, false), 'super_', J$.R(184657, 'superCtor', superCtor, false, false));
                                J$.P(184761, J$.R(184673, 'ctor', ctor, false, false), 'prototype', J$.M(184753, J$.I(typeof Object === 'undefined' ? Object = J$.R(184681, 'Object', undefined, true, true) : Object = J$.R(184681, 'Object', Object, true, true)), 'create', false)(J$.G(184697, J$.R(184689, 'superCtor', superCtor, false, false), 'prototype'), J$.T(184745, {
                                    constructor: J$.T(184737, {
                                        value: J$.R(184705, 'ctor', ctor, false, false),
                                        enumerable: J$.T(184713, false, 23, false),
                                        writable: J$.T(184721, true, 23, false),
                                        configurable: J$.T(184729, true, 23, false)
                                    }, 11, false)
                                }, 11, false)));
                            } catch (J$e) {
                                J$.Ex(185041, J$e);
                            } finally {
                                if (J$.Fr(185049))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false));
            } else {
                J$.P(185025, J$.I(typeof module === 'undefined' ? module = J$.R(184817, 'module', undefined, true, true) : module = J$.R(184817, 'module', module, true, true)), 'exports', J$.T(185017, function inherits(ctor, superCtor) {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(184977, arguments.callee, this, arguments);
                                arguments = J$.N(184985, 'arguments', arguments, true, false, false);
                                ctor = J$.N(184993, 'ctor', ctor, true, false, false);
                                superCtor = J$.N(185001, 'superCtor', superCtor, true, false, false);
                                J$.N(185009, 'TempCtor', TempCtor, false, false, false);
                                J$.P(184841, J$.R(184825, 'ctor', ctor, false, false), 'super_', J$.R(184833, 'superCtor', superCtor, false, false));
                                var TempCtor = J$.W(184873, 'TempCtor', J$.T(184865, function TempCtor() {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(184849, arguments.callee, this, arguments);
                                                arguments = J$.N(184857, 'arguments', arguments, true, false, false);
                                            } catch (J$e) {
                                                J$.Ex(185057, J$e);
                                            } finally {
                                                if (J$.Fr(185065))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), TempCtor, false, false);
                                J$.P(184905, J$.R(184881, 'TempCtor', TempCtor, false, false), 'prototype', J$.G(184897, J$.R(184889, 'superCtor', superCtor, false, false), 'prototype'));
                                J$.P(184937, J$.R(184913, 'ctor', ctor, false, false), 'prototype', J$.F(184929, J$.R(184921, 'TempCtor', TempCtor, false, false), true)());
                                J$.P(184969, J$.G(184953, J$.R(184945, 'ctor', ctor, false, false), 'prototype'), 'constructor', J$.R(184961, 'ctor', ctor, false, false));
                            } catch (J$e) {
                                J$.Ex(185073, J$e);
                            } finally {
                                if (J$.Fr(185081))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false));
            }
        } catch (J$e) {
            J$.Ex(185089, J$e);
        } finally {
            if (J$.Sr(185097))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

