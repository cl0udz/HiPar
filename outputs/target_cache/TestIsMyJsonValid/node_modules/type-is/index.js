J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(4399289, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/type-is/index.js');
            function typeis(value, types_) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4397601, arguments.callee, this, arguments);
                            arguments = J$.N(4397609, 'arguments', arguments, true, false, false);
                            value = J$.N(4397617, 'value', value, true, false, false);
                            types_ = J$.N(4397625, 'types_', types_, true, false, false);
                            J$.N(4397633, 'i', i, false, false, false);
                            J$.N(4397641, 'types', types, false, false, false);
                            J$.N(4397649, 'val', val, false, false, false);
                            J$.N(4397657, 'type', type, false, false, false);
                            var i;
                            var types = J$.W(4397073, 'types', J$.R(4397065, 'types_', types_, false, false), types, false, false);
                            var val = J$.W(4397105, 'val', J$.F(4397097, J$.R(4397081, 'tryNormalizeType', tryNormalizeType, false, true), false)(J$.R(4397089, 'value', value, false, false)), val, false, false);
                            if (J$.C(232496, J$.U(423762, '!', J$.R(4397113, 'val', val, false, false)))) {
                                return J$.Rt(4397129, J$.T(4397121, false, 23, false));
                            }
                            if (J$.C(232520, J$.C(232504, J$.R(4397137, 'types', types, false, false)) ? J$.U(423770, '!', J$.M(4397161, J$.I(typeof Array === 'undefined' ? Array = J$.R(4397145, 'Array', undefined, true, true) : Array = J$.R(4397145, 'Array', Array, true, true)), 'isArray', false)(J$.R(4397153, 'types', types, false, false))) : J$._())) {
                                types = J$.W(4397209, 'types', J$.F(4397201, J$.I(typeof Array === 'undefined' ? Array = J$.R(4397169, 'Array', undefined, true, true) : Array = J$.R(4397169, 'Array', Array, true, true)), true)(J$.B(423778, '-', J$.G(4397185, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4397177, 'arguments', undefined, true, true) : arguments = J$.R(4397177, 'arguments', arguments, true, true)), 'length'), J$.T(4397193, 1, 22, false))), types, false, false);
                                for (i = J$.W(4397225, 'i', J$.T(4397217, 0, 22, false), i, false, false); J$.C(232512, J$.B(423786, '<', J$.R(4397233, 'i', i, false, false), J$.G(4397249, J$.R(4397241, 'types', types, false, false), 'length'))); J$.B(423810, '-', i = J$.W(4397265, 'i', J$.B(423802, '+', J$.U(423794, '+', J$.R(4397257, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(4397321, J$.R(4397273, 'types', types, false, false), J$.R(4397281, 'i', i, false, false), J$.G(4397313, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4397289, 'arguments', undefined, true, true) : arguments = J$.R(4397289, 'arguments', arguments, true, true)), J$.B(423818, '+', J$.R(4397297, 'i', i, false, false), J$.T(4397305, 1, 22, false))));
                                }
                            }
                            if (J$.C(232536, J$.C(232528, J$.U(423826, '!', J$.R(4397329, 'types', types, false, false))) ? J$._() : J$.U(423834, '!', J$.G(4397345, J$.R(4397337, 'types', types, false, false), 'length')))) {
                                return J$.Rt(4397361, J$.R(4397353, 'val', val, false, false));
                            }
                            var type;
                            for (i = J$.W(4397377, 'i', J$.T(4397369, 0, 22, false), i, false, false); J$.C(232568, J$.B(423842, '<', J$.R(4397385, 'i', i, false, false), J$.G(4397401, J$.R(4397393, 'types', types, false, false), 'length'))); J$.B(423866, '-', i = J$.W(4397417, 'i', J$.B(423858, '+', J$.U(423850, '+', J$.R(4397409, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(232560, J$.F(4397489, J$.R(4397425, 'mimeMatch', mimeMatch, false, true), false)(J$.F(4397473, J$.R(4397433, 'normalize', normalize, false, true), false)(type = J$.W(4397465, 'type', J$.G(4397457, J$.R(4397441, 'types', types, false, false), J$.R(4397449, 'i', i, false, false)), type, false, false)), J$.R(4397481, 'val', val, false, false)))) {
                                    return J$.Rt(4397577, J$.C(232552, J$.C(232544, J$.B(423874, '===', J$.G(4397513, J$.R(4397497, 'type', type, false, false), J$.T(4397505, 0, 22, false)), J$.T(4397521, '+', 21, false))) ? J$._() : J$.B(423890, '!==', J$.M(4397545, J$.R(4397529, 'type', type, false, false), 'indexOf', false)(J$.T(4397537, '*', 21, false)), J$.U(423882, '-', J$.T(4397553, 1, 22, false)))) ? J$.R(4397561, 'val', val, false, false) : J$.R(4397569, 'type', type, false, false));
                                }
                            }
                            return J$.Rt(4397593, J$.T(4397585, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(4399425, J$e);
                        } finally {
                            if (J$.Fr(4399433))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function hasbody(req) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4397761, arguments.callee, this, arguments);
                            arguments = J$.N(4397769, 'arguments', arguments, true, false, false);
                            req = J$.N(4397777, 'req', req, true, false, false);
                            return J$.Rt(4397753, J$.C(232576, J$.B(423898, '!==', J$.G(4397689, J$.G(4397673, J$.R(4397665, 'req', req, false, false), 'headers'), J$.T(4397681, 'transfer-encoding', 21, false)), J$.T(4397697, undefined, 24, false))) ? J$._() : J$.U(423906, '!', J$.F(4397745, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(4397705, 'isNaN', undefined, true, true) : isNaN = J$.R(4397705, 'isNaN', isNaN, true, true)), false)(J$.G(4397737, J$.G(4397721, J$.R(4397713, 'req', req, false, false), 'headers'), J$.T(4397729, 'content-length', 21, false)))));
                        } catch (J$e) {
                            J$.Ex(4399441, J$e);
                        } finally {
                            if (J$.Fr(4399449))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function typeofrequest(req, types_) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4398105, arguments.callee, this, arguments);
                            arguments = J$.N(4398113, 'arguments', arguments, true, false, false);
                            req = J$.N(4398121, 'req', req, true, false, false);
                            types_ = J$.N(4398129, 'types_', types_, true, false, false);
                            J$.N(4398137, 'types', types, false, false, false);
                            J$.N(4398145, 'i', i, false, false, false);
                            J$.N(4398153, 'value', value, false, false, false);
                            var types = J$.W(4397793, 'types', J$.R(4397785, 'types_', types_, false, false), types, false, false);
                            if (J$.C(232584, J$.U(423914, '!', J$.F(4397817, J$.R(4397801, 'hasbody', hasbody, false, true), false)(J$.R(4397809, 'req', req, false, false))))) {
                                return J$.Rt(4397833, J$.T(4397825, null, 25, false));
                            }
                            if (J$.C(232600, J$.B(423922, '>', J$.G(4397849, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4397841, 'arguments', undefined, true, true) : arguments = J$.R(4397841, 'arguments', arguments, true, true)), 'length'), J$.T(4397857, 2, 22, false)))) {
                                types = J$.W(4397905, 'types', J$.F(4397897, J$.I(typeof Array === 'undefined' ? Array = J$.R(4397865, 'Array', undefined, true, true) : Array = J$.R(4397865, 'Array', Array, true, true)), true)(J$.B(423930, '-', J$.G(4397881, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4397873, 'arguments', undefined, true, true) : arguments = J$.R(4397873, 'arguments', arguments, true, true)), 'length'), J$.T(4397889, 1, 22, false))), types, false, false);
                                for (var i = J$.W(4397921, 'i', J$.T(4397913, 0, 22, false), i, false, false); J$.C(232592, J$.B(423938, '<', J$.R(4397929, 'i', i, false, false), J$.G(4397945, J$.R(4397937, 'types', types, false, false), 'length'))); J$.B(423962, '-', i = J$.W(4397961, 'i', J$.B(423954, '+', J$.U(423946, '+', J$.R(4397953, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(4398017, J$.R(4397969, 'types', types, false, false), J$.R(4397977, 'i', i, false, false), J$.G(4398009, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4397985, 'arguments', undefined, true, true) : arguments = J$.R(4397985, 'arguments', arguments, true, true)), J$.B(423970, '+', J$.R(4397993, 'i', i, false, false), J$.T(4398001, 1, 22, false))));
                                }
                            }
                            var value = J$.W(4398057, 'value', J$.G(4398049, J$.G(4398033, J$.R(4398025, 'req', req, false, false), 'headers'), J$.T(4398041, 'content-type', 21, false)), value, false, false);
                            return J$.Rt(4398097, J$.F(4398089, J$.R(4398065, 'typeis', typeis, false, true), false)(J$.R(4398073, 'value', value, false, false), J$.R(4398081, 'types', types, false, false)));
                        } catch (J$e) {
                            J$.Ex(4399457, J$e);
                        } finally {
                            if (J$.Fr(4399465))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function normalize(type) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4398377, arguments.callee, this, arguments);
                            arguments = J$.N(4398385, 'arguments', arguments, true, false, false);
                            type = J$.N(4398393, 'type', type, true, false, false);
                            if (J$.C(232608, J$.B(423986, '!==', J$.U(423978, 'typeof', J$.R(4398161, 'type', type, false, false)), J$.T(4398169, 'string', 21, false)))) {
                                return J$.Rt(4398185, J$.T(4398177, false, 23, false));
                            }
                            switch (J$.C1(232616, J$.R(4398193, 'type', type, false, false))) {
                            case J$.C2(232624, J$.T(4398217, 'urlencoded', 21, false)):
                                return J$.Rt(4398209, J$.T(4398201, 'application/x-www-form-urlencoded', 21, false));
                            case J$.C2(232632, J$.T(4398241, 'multipart', 21, false)):
                                return J$.Rt(4398233, J$.T(4398225, 'multipart/*', 21, false));
                            }
                            if (J$.C(232640, J$.B(423994, '===', J$.G(4398265, J$.R(4398249, 'type', type, false, false), J$.T(4398257, 0, 22, false)), J$.T(4398273, '+', 21, false)))) {
                                return J$.Rt(4398297, J$.B(424002, '+', J$.T(4398281, '*/*', 21, false), J$.R(4398289, 'type', type, false, false)));
                            }
                            return J$.Rt(4398369, J$.C(232648, J$.B(424018, '===', J$.M(4398321, J$.R(4398305, 'type', type, false, false), 'indexOf', false)(J$.T(4398313, '/', 21, false)), J$.U(424010, '-', J$.T(4398329, 1, 22, false)))) ? J$.M(4398353, J$.R(4398337, 'mime', mime, false, true), 'lookup', false)(J$.R(4398345, 'type', type, false, false)) : J$.R(4398361, 'type', type, false, false));
                        } catch (J$e) {
                            J$.Ex(4399473, J$e);
                        } finally {
                            if (J$.Fr(4399481))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mimeMatch(expected, actual) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(4399017, arguments.callee, this, arguments);
                            arguments = J$.N(4399025, 'arguments', arguments, true, false, false);
                            expected = J$.N(4399033, 'expected', expected, true, false, false);
                            actual = J$.N(4399041, 'actual', actual, true, false, false);
                            J$.N(4399049, 'actualParts', actualParts, false, false, false);
                            J$.N(4399057, 'expectedParts', expectedParts, false, false, false);
                            if (J$.C(232656, J$.B(424026, '===', J$.R(4398401, 'expected', expected, false, false), J$.T(4398409, false, 23, false)))) {
                                return J$.Rt(4398425, J$.T(4398417, false, 23, false));
                            }
                            var actualParts = J$.W(4398457, 'actualParts', J$.M(4398449, J$.R(4398433, 'actual', actual, false, false), 'split', false)(J$.T(4398441, '/', 21, false)), actualParts, false, false);
                            var expectedParts = J$.W(4398489, 'expectedParts', J$.M(4398481, J$.R(4398465, 'expected', expected, false, false), 'split', false)(J$.T(4398473, '/', 21, false)), expectedParts, false, false);
                            if (J$.C(232672, J$.C(232664, J$.B(424034, '!==', J$.G(4398505, J$.R(4398497, 'actualParts', actualParts, false, false), 'length'), J$.T(4398513, 2, 22, false))) ? J$._() : J$.B(424042, '!==', J$.G(4398529, J$.R(4398521, 'expectedParts', expectedParts, false, false), 'length'), J$.T(4398537, 2, 22, false)))) {
                                return J$.Rt(4398553, J$.T(4398545, false, 23, false));
                            }
                            if (J$.C(232688, J$.C(232680, J$.B(424050, '!==', J$.G(4398577, J$.R(4398561, 'expectedParts', expectedParts, false, false), J$.T(4398569, 0, 22, false)), J$.T(4398585, '*', 21, false))) ? J$.B(424058, '!==', J$.G(4398609, J$.R(4398593, 'expectedParts', expectedParts, false, false), J$.T(4398601, 0, 22, false)), J$.G(4398633, J$.R(4398617, 'actualParts', actualParts, false, false), J$.T(4398625, 0, 22, false))) : J$._())) {
                                return J$.Rt(4398649, J$.T(4398641, false, 23, false));
                            }
                            if (J$.C(232704, J$.B(424066, '===', J$.M(4398697, J$.G(4398673, J$.R(4398657, 'expectedParts', expectedParts, false, false), J$.T(4398665, 1, 22, false)), 'substr', false)(J$.T(4398681, 0, 22, false), J$.T(4398689, 2, 22, false)), J$.T(4398705, '*+', 21, false)))) {
                                return J$.Rt(4398897, J$.C(232696, J$.B(424082, '<=', J$.G(4398737, J$.G(4398729, J$.R(4398713, 'expectedParts', expectedParts, false, false), J$.T(4398721, 1, 22, false)), 'length'), J$.B(424074, '+', J$.G(4398769, J$.G(4398761, J$.R(4398745, 'actualParts', actualParts, false, false), J$.T(4398753, 1, 22, false)), 'length'), J$.T(4398777, 1, 22, false)))) ? J$.B(424098, '===', J$.M(4398817, J$.G(4398801, J$.R(4398785, 'expectedParts', expectedParts, false, false), J$.T(4398793, 1, 22, false)), 'substr', false)(J$.T(4398809, 1, 22, false)), J$.M(4398889, J$.G(4398841, J$.R(4398825, 'actualParts', actualParts, false, false), J$.T(4398833, 1, 22, false)), 'substr', false)(J$.B(424090, '-', J$.T(4398849, 1, 22, false), J$.G(4398881, J$.G(4398873, J$.R(4398857, 'expectedParts', expectedParts, false, false), J$.T(4398865, 1, 22, false)), 'length')))) : J$._());
                            }
                            if (J$.C(232720, J$.C(232712, J$.B(424106, '!==', J$.G(4398921, J$.R(4398905, 'expectedParts', expectedParts, false, false), J$.T(4398913, 1, 22, false)), J$.T(4398929, '*', 21, false))) ? J$.B(424114, '!==', J$.G(4398953, J$.R(4398937, 'expectedParts', expectedParts, false, false), J$.T(4398945, 1, 22, false)), J$.G(4398977, J$.R(4398961, 'actualParts', actualParts, false, false), J$.T(4398969, 1, 22, false))) : J$._())) {
                                return J$.Rt(4398993, J$.T(4398985, false, 23, false));
                            }
                            return J$.Rt(4399009, J$.T(4399001, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(4399489, J$e);
                        } finally {
                            if (J$.Fr(4399497))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function normalizeType(value) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(4399153, arguments.callee, this, arguments);
                            arguments = J$.N(4399161, 'arguments', arguments, true, false, false);
                            value = J$.N(4399169, 'value', value, true, false, false);
                            J$.N(4399177, 'type', type, false, false, false);
                            var type = J$.W(4399089, 'type', J$.M(4399081, J$.R(4399065, 'typer', typer, false, true), 'parse', false)(J$.R(4399073, 'value', value, false, false)), type, false, false);
                            J$.P(4399113, J$.R(4399097, 'type', type, false, false), 'parameters', J$.T(4399105, undefined, 24, false));
                            return J$.Rt(4399145, J$.M(4399137, J$.R(4399121, 'typer', typer, false, true), 'format', false)(J$.R(4399129, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(4399505, J$e);
                        } finally {
                            if (J$.Fr(4399513))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tryNormalizeType(value) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(4399265, arguments.callee, this, arguments);
                            arguments = J$.N(4399273, 'arguments', arguments, true, false, false);
                            value = J$.N(4399281, 'value', value, true, false, false);
                            if (J$.C(232728, J$.U(424122, '!', J$.R(4399185, 'value', value, false, false)))) {
                                return J$.Rt(4399201, J$.T(4399193, null, 25, false));
                            }
                            try {
                                return J$.Rt(4399233, J$.F(4399225, J$.R(4399209, 'normalizeType', normalizeType, false, true), false)(J$.R(4399217, 'value', value, false, false)));
                            } catch (err) {
                                J$.N(4399257, 'err', err, false, false, true);
                                return J$.Rt(4399249, J$.T(4399241, null, 25, false));
                            }
                        } catch (J$e) {
                            J$.Ex(4399521, J$e);
                        } finally {
                            if (J$.Fr(4399529))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4399297, 'typer', typer, false, false, false);
            J$.N(4399305, 'mime', mime, false, false, false);
            typeis = J$.N(4399321, 'typeis', J$.T(4399313, typeis, 12, false), true, false, false);
            hasbody = J$.N(4399337, 'hasbody', J$.T(4399329, hasbody, 12, false), true, false, false);
            typeofrequest = J$.N(4399353, 'typeofrequest', J$.T(4399345, typeofrequest, 12, false), true, false, false);
            normalize = J$.N(4399369, 'normalize', J$.T(4399361, normalize, 12, false), true, false, false);
            mimeMatch = J$.N(4399385, 'mimeMatch', J$.T(4399377, mimeMatch, 12, false), true, false, false);
            normalizeType = J$.N(4399401, 'normalizeType', J$.T(4399393, normalizeType, 12, false), true, false, false);
            tryNormalizeType = J$.N(4399417, 'tryNormalizeType', J$.T(4399409, tryNormalizeType, 12, false), true, false, false);
            J$.T(4396721, 'use strict', 21, false);
            J$.F(4396745, J$.I(typeof require === 'undefined' ? require = J$.R(4396729, 'require', undefined, true, true) : require = J$.R(4396729, 'require', require, true, true)), false)(J$.T(4396737, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(4396769, J$.I(typeof require === 'undefined' ? require = J$.R(4396753, 'require', undefined, true, true) : require = J$.R(4396753, 'require', require, true, true)), false)(J$.T(4396761, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(4396793, J$.I(typeof require === 'undefined' ? require = J$.R(4396777, 'require', undefined, true, true) : require = J$.R(4396777, 'require', require, true, true)), false)(J$.T(4396785, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(4396817, J$.I(typeof require === 'undefined' ? require = J$.R(4396801, 'require', undefined, true, true) : require = J$.R(4396801, 'require', require, true, true)), false)(J$.T(4396809, 'core-js/modules/es.string.match', 21, false));
            J$.F(4396841, J$.I(typeof require === 'undefined' ? require = J$.R(4396825, 'require', undefined, true, true) : require = J$.R(4396825, 'require', require, true, true)), false)(J$.T(4396833, 'core-js/modules/es.string.split', 21, false));
            var typer = J$.W(4396873, 'typer', J$.F(4396865, J$.I(typeof require === 'undefined' ? require = J$.R(4396849, 'require', undefined, true, true) : require = J$.R(4396849, 'require', require, true, true)), false)(J$.T(4396857, 'media-typer', 21, false)), typer, false, true);
            var mime = J$.W(4396905, 'mime', J$.F(4396897, J$.I(typeof require === 'undefined' ? require = J$.R(4396881, 'require', undefined, true, true) : require = J$.R(4396881, 'require', require, true, true)), false)(J$.T(4396889, 'mime-types', 21, false)), mime, false, true);
            J$.P(4396929, J$.I(typeof module === 'undefined' ? module = J$.R(4396913, 'module', undefined, true, true) : module = J$.R(4396913, 'module', module, true, true)), 'exports', J$.R(4396921, 'typeofrequest', typeofrequest, false, true));
            J$.P(4396961, J$.G(4396945, J$.I(typeof module === 'undefined' ? module = J$.R(4396937, 'module', undefined, true, true) : module = J$.R(4396937, 'module', module, true, true)), 'exports'), 'is', J$.R(4396953, 'typeis', typeis, false, true));
            J$.P(4396993, J$.G(4396977, J$.I(typeof module === 'undefined' ? module = J$.R(4396969, 'module', undefined, true, true) : module = J$.R(4396969, 'module', module, true, true)), 'exports'), 'hasBody', J$.R(4396985, 'hasbody', hasbody, false, true));
            J$.P(4397025, J$.G(4397009, J$.I(typeof module === 'undefined' ? module = J$.R(4397001, 'module', undefined, true, true) : module = J$.R(4397001, 'module', module, true, true)), 'exports'), 'normalize', J$.R(4397017, 'normalize', normalize, false, true));
            J$.P(4397057, J$.G(4397041, J$.I(typeof module === 'undefined' ? module = J$.R(4397033, 'module', undefined, true, true) : module = J$.R(4397033, 'module', module, true, true)), 'exports'), 'match', J$.R(4397049, 'mimeMatch', mimeMatch, false, true));
        } catch (J$e) {
            J$.Ex(4399537, J$e);
        } finally {
            if (J$.Sr(4399545))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

