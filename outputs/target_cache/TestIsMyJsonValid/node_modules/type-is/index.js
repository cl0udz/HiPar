J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(440785, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/type-is/index.js');
            function typeis(value, types_) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(439097, arguments.callee, this, arguments);
                            arguments = J$.N(439105, 'arguments', arguments, true, false, false);
                            value = J$.N(439113, 'value', value, true, false, false);
                            types_ = J$.N(439121, 'types_', types_, true, false, false);
                            J$.N(439129, 'i', i, false, false, false);
                            J$.N(439137, 'types', types, false, false, false);
                            J$.N(439145, 'val', val, false, false, false);
                            J$.N(439153, 'type', type, false, false, false);
                            var i;
                            var types = J$.W(438569, 'types', J$.R(438561, 'types_', types_, false, false), types, false, false);
                            var val = J$.W(438601, 'val', J$.F(438593, J$.R(438577, 'tryNormalizeType', tryNormalizeType, false, true), false)(J$.R(438585, 'value', value, false, false)), val, false, false);
                            if (J$.C(24096, J$.U(37714, '!', J$.R(438609, 'val', val, false, false)))) {
                                return J$.Rt(438625, J$.T(438617, false, 23, false));
                            }
                            if (J$.C(24120, J$.C(24104, J$.R(438633, 'types', types, false, false)) ? J$.U(37722, '!', J$.M(438657, J$.I(typeof Array === 'undefined' ? Array = J$.R(438641, 'Array', undefined, true, true) : Array = J$.R(438641, 'Array', Array, true, true)), 'isArray', false)(J$.R(438649, 'types', types, false, false))) : J$._())) {
                                types = J$.W(438705, 'types', J$.F(438697, J$.I(typeof Array === 'undefined' ? Array = J$.R(438665, 'Array', undefined, true, true) : Array = J$.R(438665, 'Array', Array, true, true)), true)(J$.B(37730, '-', J$.G(438681, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(438673, 'arguments', undefined, true, true) : arguments = J$.R(438673, 'arguments', arguments, true, true)), 'length'), J$.T(438689, 1, 22, false))), types, false, false);
                                for (i = J$.W(438721, 'i', J$.T(438713, 0, 22, false), i, false, false); J$.C(24112, J$.B(37738, '<', J$.R(438729, 'i', i, false, false), J$.G(438745, J$.R(438737, 'types', types, false, false), 'length'))); J$.B(37762, '-', i = J$.W(438761, 'i', J$.B(37754, '+', J$.U(37746, '+', J$.R(438753, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(438817, J$.R(438769, 'types', types, false, false), J$.R(438777, 'i', i, false, false), J$.G(438809, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(438785, 'arguments', undefined, true, true) : arguments = J$.R(438785, 'arguments', arguments, true, true)), J$.B(37770, '+', J$.R(438793, 'i', i, false, false), J$.T(438801, 1, 22, false))));
                                }
                            }
                            if (J$.C(24136, J$.C(24128, J$.U(37778, '!', J$.R(438825, 'types', types, false, false))) ? J$._() : J$.U(37786, '!', J$.G(438841, J$.R(438833, 'types', types, false, false), 'length')))) {
                                return J$.Rt(438857, J$.R(438849, 'val', val, false, false));
                            }
                            var type;
                            for (i = J$.W(438873, 'i', J$.T(438865, 0, 22, false), i, false, false); J$.C(24168, J$.B(37794, '<', J$.R(438881, 'i', i, false, false), J$.G(438897, J$.R(438889, 'types', types, false, false), 'length'))); J$.B(37818, '-', i = J$.W(438913, 'i', J$.B(37810, '+', J$.U(37802, '+', J$.R(438905, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(24160, J$.F(438985, J$.R(438921, 'mimeMatch', mimeMatch, false, true), false)(J$.F(438969, J$.R(438929, 'normalize', normalize, false, true), false)(type = J$.W(438961, 'type', J$.G(438953, J$.R(438937, 'types', types, false, false), J$.R(438945, 'i', i, false, false)), type, false, false)), J$.R(438977, 'val', val, false, false)))) {
                                    return J$.Rt(439073, J$.C(24152, J$.C(24144, J$.B(37826, '===', J$.G(439009, J$.R(438993, 'type', type, false, false), J$.T(439001, 0, 22, false)), J$.T(439017, '+', 21, false))) ? J$._() : J$.B(37842, '!==', J$.M(439041, J$.R(439025, 'type', type, false, false), 'indexOf', false)(J$.T(439033, '*', 21, false)), J$.U(37834, '-', J$.T(439049, 1, 22, false)))) ? J$.R(439057, 'val', val, false, false) : J$.R(439065, 'type', type, false, false));
                                }
                            }
                            return J$.Rt(439089, J$.T(439081, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(440921, J$e);
                        } finally {
                            if (J$.Fr(440929))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function hasbody(req) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(439257, arguments.callee, this, arguments);
                            arguments = J$.N(439265, 'arguments', arguments, true, false, false);
                            req = J$.N(439273, 'req', req, true, false, false);
                            return J$.Rt(439249, J$.C(24176, J$.B(37850, '!==', J$.G(439185, J$.G(439169, J$.R(439161, 'req', req, false, false), 'headers'), J$.T(439177, 'transfer-encoding', 21, false)), J$.T(439193, undefined, 24, false))) ? J$._() : J$.U(37858, '!', J$.F(439241, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(439201, 'isNaN', undefined, true, true) : isNaN = J$.R(439201, 'isNaN', isNaN, true, true)), false)(J$.G(439233, J$.G(439217, J$.R(439209, 'req', req, false, false), 'headers'), J$.T(439225, 'content-length', 21, false)))));
                        } catch (J$e) {
                            J$.Ex(440937, J$e);
                        } finally {
                            if (J$.Fr(440945))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function typeofrequest(req, types_) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(439601, arguments.callee, this, arguments);
                            arguments = J$.N(439609, 'arguments', arguments, true, false, false);
                            req = J$.N(439617, 'req', req, true, false, false);
                            types_ = J$.N(439625, 'types_', types_, true, false, false);
                            J$.N(439633, 'types', types, false, false, false);
                            J$.N(439641, 'i', i, false, false, false);
                            J$.N(439649, 'value', value, false, false, false);
                            var types = J$.W(439289, 'types', J$.R(439281, 'types_', types_, false, false), types, false, false);
                            if (J$.C(24184, J$.U(37866, '!', J$.F(439313, J$.R(439297, 'hasbody', hasbody, false, true), false)(J$.R(439305, 'req', req, false, false))))) {
                                return J$.Rt(439329, J$.T(439321, null, 25, false));
                            }
                            if (J$.C(24200, J$.B(37874, '>', J$.G(439345, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(439337, 'arguments', undefined, true, true) : arguments = J$.R(439337, 'arguments', arguments, true, true)), 'length'), J$.T(439353, 2, 22, false)))) {
                                types = J$.W(439401, 'types', J$.F(439393, J$.I(typeof Array === 'undefined' ? Array = J$.R(439361, 'Array', undefined, true, true) : Array = J$.R(439361, 'Array', Array, true, true)), true)(J$.B(37882, '-', J$.G(439377, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(439369, 'arguments', undefined, true, true) : arguments = J$.R(439369, 'arguments', arguments, true, true)), 'length'), J$.T(439385, 1, 22, false))), types, false, false);
                                for (var i = J$.W(439417, 'i', J$.T(439409, 0, 22, false), i, false, false); J$.C(24192, J$.B(37890, '<', J$.R(439425, 'i', i, false, false), J$.G(439441, J$.R(439433, 'types', types, false, false), 'length'))); J$.B(37914, '-', i = J$.W(439457, 'i', J$.B(37906, '+', J$.U(37898, '+', J$.R(439449, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(439513, J$.R(439465, 'types', types, false, false), J$.R(439473, 'i', i, false, false), J$.G(439505, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(439481, 'arguments', undefined, true, true) : arguments = J$.R(439481, 'arguments', arguments, true, true)), J$.B(37922, '+', J$.R(439489, 'i', i, false, false), J$.T(439497, 1, 22, false))));
                                }
                            }
                            var value = J$.W(439553, 'value', J$.G(439545, J$.G(439529, J$.R(439521, 'req', req, false, false), 'headers'), J$.T(439537, 'content-type', 21, false)), value, false, false);
                            return J$.Rt(439593, J$.F(439585, J$.R(439561, 'typeis', typeis, false, true), false)(J$.R(439569, 'value', value, false, false), J$.R(439577, 'types', types, false, false)));
                        } catch (J$e) {
                            J$.Ex(440953, J$e);
                        } finally {
                            if (J$.Fr(440961))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function normalize(type) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(439873, arguments.callee, this, arguments);
                            arguments = J$.N(439881, 'arguments', arguments, true, false, false);
                            type = J$.N(439889, 'type', type, true, false, false);
                            if (J$.C(24208, J$.B(37938, '!==', J$.U(37930, 'typeof', J$.R(439657, 'type', type, false, false)), J$.T(439665, 'string', 21, false)))) {
                                return J$.Rt(439681, J$.T(439673, false, 23, false));
                            }
                            switch (J$.C1(24216, J$.R(439689, 'type', type, false, false))) {
                            case J$.C2(24224, J$.T(439713, 'urlencoded', 21, false)):
                                return J$.Rt(439705, J$.T(439697, 'application/x-www-form-urlencoded', 21, false));
                            case J$.C2(24232, J$.T(439737, 'multipart', 21, false)):
                                return J$.Rt(439729, J$.T(439721, 'multipart/*', 21, false));
                            }
                            if (J$.C(24240, J$.B(37946, '===', J$.G(439761, J$.R(439745, 'type', type, false, false), J$.T(439753, 0, 22, false)), J$.T(439769, '+', 21, false)))) {
                                return J$.Rt(439793, J$.B(37954, '+', J$.T(439777, '*/*', 21, false), J$.R(439785, 'type', type, false, false)));
                            }
                            return J$.Rt(439865, J$.C(24248, J$.B(37970, '===', J$.M(439817, J$.R(439801, 'type', type, false, false), 'indexOf', false)(J$.T(439809, '/', 21, false)), J$.U(37962, '-', J$.T(439825, 1, 22, false)))) ? J$.M(439849, J$.R(439833, 'mime', mime, false, true), 'lookup', false)(J$.R(439841, 'type', type, false, false)) : J$.R(439857, 'type', type, false, false));
                        } catch (J$e) {
                            J$.Ex(440969, J$e);
                        } finally {
                            if (J$.Fr(440977))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mimeMatch(expected, actual) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(440513, arguments.callee, this, arguments);
                            arguments = J$.N(440521, 'arguments', arguments, true, false, false);
                            expected = J$.N(440529, 'expected', expected, true, false, false);
                            actual = J$.N(440537, 'actual', actual, true, false, false);
                            J$.N(440545, 'actualParts', actualParts, false, false, false);
                            J$.N(440553, 'expectedParts', expectedParts, false, false, false);
                            if (J$.C(24256, J$.B(37978, '===', J$.R(439897, 'expected', expected, false, false), J$.T(439905, false, 23, false)))) {
                                return J$.Rt(439921, J$.T(439913, false, 23, false));
                            }
                            var actualParts = J$.W(439953, 'actualParts', J$.M(439945, J$.R(439929, 'actual', actual, false, false), 'split', false)(J$.T(439937, '/', 21, false)), actualParts, false, false);
                            var expectedParts = J$.W(439985, 'expectedParts', J$.M(439977, J$.R(439961, 'expected', expected, false, false), 'split', false)(J$.T(439969, '/', 21, false)), expectedParts, false, false);
                            if (J$.C(24272, J$.C(24264, J$.B(37986, '!==', J$.G(440001, J$.R(439993, 'actualParts', actualParts, false, false), 'length'), J$.T(440009, 2, 22, false))) ? J$._() : J$.B(37994, '!==', J$.G(440025, J$.R(440017, 'expectedParts', expectedParts, false, false), 'length'), J$.T(440033, 2, 22, false)))) {
                                return J$.Rt(440049, J$.T(440041, false, 23, false));
                            }
                            if (J$.C(24288, J$.C(24280, J$.B(38002, '!==', J$.G(440073, J$.R(440057, 'expectedParts', expectedParts, false, false), J$.T(440065, 0, 22, false)), J$.T(440081, '*', 21, false))) ? J$.B(38010, '!==', J$.G(440105, J$.R(440089, 'expectedParts', expectedParts, false, false), J$.T(440097, 0, 22, false)), J$.G(440129, J$.R(440113, 'actualParts', actualParts, false, false), J$.T(440121, 0, 22, false))) : J$._())) {
                                return J$.Rt(440145, J$.T(440137, false, 23, false));
                            }
                            if (J$.C(24304, J$.B(38018, '===', J$.M(440193, J$.G(440169, J$.R(440153, 'expectedParts', expectedParts, false, false), J$.T(440161, 1, 22, false)), 'substr', false)(J$.T(440177, 0, 22, false), J$.T(440185, 2, 22, false)), J$.T(440201, '*+', 21, false)))) {
                                return J$.Rt(440393, J$.C(24296, J$.B(38034, '<=', J$.G(440233, J$.G(440225, J$.R(440209, 'expectedParts', expectedParts, false, false), J$.T(440217, 1, 22, false)), 'length'), J$.B(38026, '+', J$.G(440265, J$.G(440257, J$.R(440241, 'actualParts', actualParts, false, false), J$.T(440249, 1, 22, false)), 'length'), J$.T(440273, 1, 22, false)))) ? J$.B(38050, '===', J$.M(440313, J$.G(440297, J$.R(440281, 'expectedParts', expectedParts, false, false), J$.T(440289, 1, 22, false)), 'substr', false)(J$.T(440305, 1, 22, false)), J$.M(440385, J$.G(440337, J$.R(440321, 'actualParts', actualParts, false, false), J$.T(440329, 1, 22, false)), 'substr', false)(J$.B(38042, '-', J$.T(440345, 1, 22, false), J$.G(440377, J$.G(440369, J$.R(440353, 'expectedParts', expectedParts, false, false), J$.T(440361, 1, 22, false)), 'length')))) : J$._());
                            }
                            if (J$.C(24320, J$.C(24312, J$.B(38058, '!==', J$.G(440417, J$.R(440401, 'expectedParts', expectedParts, false, false), J$.T(440409, 1, 22, false)), J$.T(440425, '*', 21, false))) ? J$.B(38066, '!==', J$.G(440449, J$.R(440433, 'expectedParts', expectedParts, false, false), J$.T(440441, 1, 22, false)), J$.G(440473, J$.R(440457, 'actualParts', actualParts, false, false), J$.T(440465, 1, 22, false))) : J$._())) {
                                return J$.Rt(440489, J$.T(440481, false, 23, false));
                            }
                            return J$.Rt(440505, J$.T(440497, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(440985, J$e);
                        } finally {
                            if (J$.Fr(440993))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function normalizeType(value) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(440649, arguments.callee, this, arguments);
                            arguments = J$.N(440657, 'arguments', arguments, true, false, false);
                            value = J$.N(440665, 'value', value, true, false, false);
                            J$.N(440673, 'type', type, false, false, false);
                            var type = J$.W(440585, 'type', J$.M(440577, J$.R(440561, 'typer', typer, false, true), 'parse', false)(J$.R(440569, 'value', value, false, false)), type, false, false);
                            J$.P(440609, J$.R(440593, 'type', type, false, false), 'parameters', J$.T(440601, undefined, 24, false));
                            return J$.Rt(440641, J$.M(440633, J$.R(440617, 'typer', typer, false, true), 'format', false)(J$.R(440625, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(441001, J$e);
                        } finally {
                            if (J$.Fr(441009))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tryNormalizeType(value) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(440761, arguments.callee, this, arguments);
                            arguments = J$.N(440769, 'arguments', arguments, true, false, false);
                            value = J$.N(440777, 'value', value, true, false, false);
                            if (J$.C(24328, J$.U(38074, '!', J$.R(440681, 'value', value, false, false)))) {
                                return J$.Rt(440697, J$.T(440689, null, 25, false));
                            }
                            try {
                                return J$.Rt(440729, J$.F(440721, J$.R(440705, 'normalizeType', normalizeType, false, true), false)(J$.R(440713, 'value', value, false, false)));
                            } catch (err) {
                                J$.N(440753, 'err', err, false, false, true);
                                return J$.Rt(440745, J$.T(440737, null, 25, false));
                            }
                        } catch (J$e) {
                            J$.Ex(441017, J$e);
                        } finally {
                            if (J$.Fr(441025))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(440793, 'typer', typer, false, false, false);
            J$.N(440801, 'mime', mime, false, false, false);
            typeis = J$.N(440817, 'typeis', J$.T(440809, typeis, 12, false), true, false, false);
            hasbody = J$.N(440833, 'hasbody', J$.T(440825, hasbody, 12, false), true, false, false);
            typeofrequest = J$.N(440849, 'typeofrequest', J$.T(440841, typeofrequest, 12, false), true, false, false);
            normalize = J$.N(440865, 'normalize', J$.T(440857, normalize, 12, false), true, false, false);
            mimeMatch = J$.N(440881, 'mimeMatch', J$.T(440873, mimeMatch, 12, false), true, false, false);
            normalizeType = J$.N(440897, 'normalizeType', J$.T(440889, normalizeType, 12, false), true, false, false);
            tryNormalizeType = J$.N(440913, 'tryNormalizeType', J$.T(440905, tryNormalizeType, 12, false), true, false, false);
            J$.T(438217, 'use strict', 21, false);
            J$.F(438241, J$.I(typeof require === 'undefined' ? require = J$.R(438225, 'require', undefined, true, true) : require = J$.R(438225, 'require', require, true, true)), false)(J$.T(438233, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(438265, J$.I(typeof require === 'undefined' ? require = J$.R(438249, 'require', undefined, true, true) : require = J$.R(438249, 'require', require, true, true)), false)(J$.T(438257, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(438289, J$.I(typeof require === 'undefined' ? require = J$.R(438273, 'require', undefined, true, true) : require = J$.R(438273, 'require', require, true, true)), false)(J$.T(438281, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(438313, J$.I(typeof require === 'undefined' ? require = J$.R(438297, 'require', undefined, true, true) : require = J$.R(438297, 'require', require, true, true)), false)(J$.T(438305, 'core-js/modules/es.string.match', 21, false));
            J$.F(438337, J$.I(typeof require === 'undefined' ? require = J$.R(438321, 'require', undefined, true, true) : require = J$.R(438321, 'require', require, true, true)), false)(J$.T(438329, 'core-js/modules/es.string.split', 21, false));
            var typer = J$.W(438369, 'typer', J$.F(438361, J$.I(typeof require === 'undefined' ? require = J$.R(438345, 'require', undefined, true, true) : require = J$.R(438345, 'require', require, true, true)), false)(J$.T(438353, 'media-typer', 21, false)), typer, false, true);
            var mime = J$.W(438401, 'mime', J$.F(438393, J$.I(typeof require === 'undefined' ? require = J$.R(438377, 'require', undefined, true, true) : require = J$.R(438377, 'require', require, true, true)), false)(J$.T(438385, 'mime-types', 21, false)), mime, false, true);
            J$.P(438425, J$.I(typeof module === 'undefined' ? module = J$.R(438409, 'module', undefined, true, true) : module = J$.R(438409, 'module', module, true, true)), 'exports', J$.R(438417, 'typeofrequest', typeofrequest, false, true));
            J$.P(438457, J$.G(438441, J$.I(typeof module === 'undefined' ? module = J$.R(438433, 'module', undefined, true, true) : module = J$.R(438433, 'module', module, true, true)), 'exports'), 'is', J$.R(438449, 'typeis', typeis, false, true));
            J$.P(438489, J$.G(438473, J$.I(typeof module === 'undefined' ? module = J$.R(438465, 'module', undefined, true, true) : module = J$.R(438465, 'module', module, true, true)), 'exports'), 'hasBody', J$.R(438481, 'hasbody', hasbody, false, true));
            J$.P(438521, J$.G(438505, J$.I(typeof module === 'undefined' ? module = J$.R(438497, 'module', undefined, true, true) : module = J$.R(438497, 'module', module, true, true)), 'exports'), 'normalize', J$.R(438513, 'normalize', normalize, false, true));
            J$.P(438553, J$.G(438537, J$.I(typeof module === 'undefined' ? module = J$.R(438529, 'module', undefined, true, true) : module = J$.R(438529, 'module', module, true, true)), 'exports'), 'match', J$.R(438545, 'mimeMatch', mimeMatch, false, true));
        } catch (J$e) {
            J$.Ex(441033, J$e);
        } finally {
            if (J$.Sr(441041))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

