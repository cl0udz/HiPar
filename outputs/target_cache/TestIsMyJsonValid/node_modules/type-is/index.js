J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(483657, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/type-is/index.js');
            function typeis(value, types_) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(481969, arguments.callee, this, arguments);
                            arguments = J$.N(481977, 'arguments', arguments, true, false, false);
                            value = J$.N(481985, 'value', value, true, false, false);
                            types_ = J$.N(481993, 'types_', types_, true, false, false);
                            J$.N(482001, 'i', i, false, false, false);
                            J$.N(482009, 'types', types, false, false, false);
                            J$.N(482017, 'val', val, false, false, false);
                            J$.N(482025, 'type', type, false, false, false);
                            var i;
                            var types = J$.W(481441, 'types', J$.R(481433, 'types_', types_, false, false), types, false, false);
                            var val = J$.W(481473, 'val', J$.F(481465, J$.R(481449, 'tryNormalizeType', tryNormalizeType, false, true), false)(J$.R(481457, 'value', value, false, false)), val, false, false);
                            if (J$.C(26368, J$.U(40834, '!', J$.R(481481, 'val', val, false, false)))) {
                                return J$.Rt(481497, J$.T(481489, false, 23, false));
                            }
                            if (J$.C(26392, J$.C(26376, J$.R(481505, 'types', types, false, false)) ? J$.U(40842, '!', J$.M(481529, J$.I(typeof Array === 'undefined' ? Array = J$.R(481513, 'Array', undefined, true, true) : Array = J$.R(481513, 'Array', Array, true, true)), 'isArray', false)(J$.R(481521, 'types', types, false, false))) : J$._())) {
                                types = J$.W(481577, 'types', J$.F(481569, J$.I(typeof Array === 'undefined' ? Array = J$.R(481537, 'Array', undefined, true, true) : Array = J$.R(481537, 'Array', Array, true, true)), true)(J$.B(40850, '-', J$.G(481553, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(481545, 'arguments', undefined, true, true) : arguments = J$.R(481545, 'arguments', arguments, true, true)), 'length'), J$.T(481561, 1, 22, false))), types, false, false);
                                for (i = J$.W(481593, 'i', J$.T(481585, 0, 22, false), i, false, false); J$.C(26384, J$.B(40858, '<', J$.R(481601, 'i', i, false, false), J$.G(481617, J$.R(481609, 'types', types, false, false), 'length'))); J$.B(40882, '-', i = J$.W(481633, 'i', J$.B(40874, '+', J$.U(40866, '+', J$.R(481625, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(481689, J$.R(481641, 'types', types, false, false), J$.R(481649, 'i', i, false, false), J$.G(481681, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(481657, 'arguments', undefined, true, true) : arguments = J$.R(481657, 'arguments', arguments, true, true)), J$.B(40890, '+', J$.R(481665, 'i', i, false, false), J$.T(481673, 1, 22, false))));
                                }
                            }
                            if (J$.C(26408, J$.C(26400, J$.U(40898, '!', J$.R(481697, 'types', types, false, false))) ? J$._() : J$.U(40906, '!', J$.G(481713, J$.R(481705, 'types', types, false, false), 'length')))) {
                                return J$.Rt(481729, J$.R(481721, 'val', val, false, false));
                            }
                            var type;
                            for (i = J$.W(481745, 'i', J$.T(481737, 0, 22, false), i, false, false); J$.C(26440, J$.B(40914, '<', J$.R(481753, 'i', i, false, false), J$.G(481769, J$.R(481761, 'types', types, false, false), 'length'))); J$.B(40938, '-', i = J$.W(481785, 'i', J$.B(40930, '+', J$.U(40922, '+', J$.R(481777, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(26432, J$.F(481857, J$.R(481793, 'mimeMatch', mimeMatch, false, true), false)(J$.F(481841, J$.R(481801, 'normalize', normalize, false, true), false)(type = J$.W(481833, 'type', J$.G(481825, J$.R(481809, 'types', types, false, false), J$.R(481817, 'i', i, false, false)), type, false, false)), J$.R(481849, 'val', val, false, false)))) {
                                    return J$.Rt(481945, J$.C(26424, J$.C(26416, J$.B(40946, '===', J$.G(481881, J$.R(481865, 'type', type, false, false), J$.T(481873, 0, 22, false)), J$.T(481889, '+', 21, false))) ? J$._() : J$.B(40962, '!==', J$.M(481913, J$.R(481897, 'type', type, false, false), 'indexOf', false)(J$.T(481905, '*', 21, false)), J$.U(40954, '-', J$.T(481921, 1, 22, false)))) ? J$.R(481929, 'val', val, false, false) : J$.R(481937, 'type', type, false, false));
                                }
                            }
                            return J$.Rt(481961, J$.T(481953, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(483793, J$e);
                        } finally {
                            if (J$.Fr(483801))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function hasbody(req) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(482129, arguments.callee, this, arguments);
                            arguments = J$.N(482137, 'arguments', arguments, true, false, false);
                            req = J$.N(482145, 'req', req, true, false, false);
                            return J$.Rt(482121, J$.C(26448, J$.B(40970, '!==', J$.G(482057, J$.G(482041, J$.R(482033, 'req', req, false, false), 'headers'), J$.T(482049, 'transfer-encoding', 21, false)), J$.T(482065, undefined, 24, false))) ? J$._() : J$.U(40978, '!', J$.F(482113, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(482073, 'isNaN', undefined, true, true) : isNaN = J$.R(482073, 'isNaN', isNaN, true, true)), false)(J$.G(482105, J$.G(482089, J$.R(482081, 'req', req, false, false), 'headers'), J$.T(482097, 'content-length', 21, false)))));
                        } catch (J$e) {
                            J$.Ex(483809, J$e);
                        } finally {
                            if (J$.Fr(483817))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function typeofrequest(req, types_) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(482473, arguments.callee, this, arguments);
                            arguments = J$.N(482481, 'arguments', arguments, true, false, false);
                            req = J$.N(482489, 'req', req, true, false, false);
                            types_ = J$.N(482497, 'types_', types_, true, false, false);
                            J$.N(482505, 'types', types, false, false, false);
                            J$.N(482513, 'i', i, false, false, false);
                            J$.N(482521, 'value', value, false, false, false);
                            var types = J$.W(482161, 'types', J$.R(482153, 'types_', types_, false, false), types, false, false);
                            if (J$.C(26456, J$.U(40986, '!', J$.F(482185, J$.R(482169, 'hasbody', hasbody, false, true), false)(J$.R(482177, 'req', req, false, false))))) {
                                return J$.Rt(482201, J$.T(482193, null, 25, false));
                            }
                            if (J$.C(26472, J$.B(40994, '>', J$.G(482217, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(482209, 'arguments', undefined, true, true) : arguments = J$.R(482209, 'arguments', arguments, true, true)), 'length'), J$.T(482225, 2, 22, false)))) {
                                types = J$.W(482273, 'types', J$.F(482265, J$.I(typeof Array === 'undefined' ? Array = J$.R(482233, 'Array', undefined, true, true) : Array = J$.R(482233, 'Array', Array, true, true)), true)(J$.B(41002, '-', J$.G(482249, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(482241, 'arguments', undefined, true, true) : arguments = J$.R(482241, 'arguments', arguments, true, true)), 'length'), J$.T(482257, 1, 22, false))), types, false, false);
                                for (var i = J$.W(482289, 'i', J$.T(482281, 0, 22, false), i, false, false); J$.C(26464, J$.B(41010, '<', J$.R(482297, 'i', i, false, false), J$.G(482313, J$.R(482305, 'types', types, false, false), 'length'))); J$.B(41034, '-', i = J$.W(482329, 'i', J$.B(41026, '+', J$.U(41018, '+', J$.R(482321, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(482385, J$.R(482337, 'types', types, false, false), J$.R(482345, 'i', i, false, false), J$.G(482377, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(482353, 'arguments', undefined, true, true) : arguments = J$.R(482353, 'arguments', arguments, true, true)), J$.B(41042, '+', J$.R(482361, 'i', i, false, false), J$.T(482369, 1, 22, false))));
                                }
                            }
                            var value = J$.W(482425, 'value', J$.G(482417, J$.G(482401, J$.R(482393, 'req', req, false, false), 'headers'), J$.T(482409, 'content-type', 21, false)), value, false, false);
                            return J$.Rt(482465, J$.F(482457, J$.R(482433, 'typeis', typeis, false, true), false)(J$.R(482441, 'value', value, false, false), J$.R(482449, 'types', types, false, false)));
                        } catch (J$e) {
                            J$.Ex(483825, J$e);
                        } finally {
                            if (J$.Fr(483833))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function normalize(type) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(482745, arguments.callee, this, arguments);
                            arguments = J$.N(482753, 'arguments', arguments, true, false, false);
                            type = J$.N(482761, 'type', type, true, false, false);
                            if (J$.C(26480, J$.B(41058, '!==', J$.U(41050, 'typeof', J$.R(482529, 'type', type, false, false)), J$.T(482537, 'string', 21, false)))) {
                                return J$.Rt(482553, J$.T(482545, false, 23, false));
                            }
                            switch (J$.C1(26488, J$.R(482561, 'type', type, false, false))) {
                            case J$.C2(26496, J$.T(482585, 'urlencoded', 21, false)):
                                return J$.Rt(482577, J$.T(482569, 'application/x-www-form-urlencoded', 21, false));
                            case J$.C2(26504, J$.T(482609, 'multipart', 21, false)):
                                return J$.Rt(482601, J$.T(482593, 'multipart/*', 21, false));
                            }
                            if (J$.C(26512, J$.B(41066, '===', J$.G(482633, J$.R(482617, 'type', type, false, false), J$.T(482625, 0, 22, false)), J$.T(482641, '+', 21, false)))) {
                                return J$.Rt(482665, J$.B(41074, '+', J$.T(482649, '*/*', 21, false), J$.R(482657, 'type', type, false, false)));
                            }
                            return J$.Rt(482737, J$.C(26520, J$.B(41090, '===', J$.M(482689, J$.R(482673, 'type', type, false, false), 'indexOf', false)(J$.T(482681, '/', 21, false)), J$.U(41082, '-', J$.T(482697, 1, 22, false)))) ? J$.M(482721, J$.R(482705, 'mime', mime, false, true), 'lookup', false)(J$.R(482713, 'type', type, false, false)) : J$.R(482729, 'type', type, false, false));
                        } catch (J$e) {
                            J$.Ex(483841, J$e);
                        } finally {
                            if (J$.Fr(483849))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mimeMatch(expected, actual) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(483385, arguments.callee, this, arguments);
                            arguments = J$.N(483393, 'arguments', arguments, true, false, false);
                            expected = J$.N(483401, 'expected', expected, true, false, false);
                            actual = J$.N(483409, 'actual', actual, true, false, false);
                            J$.N(483417, 'actualParts', actualParts, false, false, false);
                            J$.N(483425, 'expectedParts', expectedParts, false, false, false);
                            if (J$.C(26528, J$.B(41098, '===', J$.R(482769, 'expected', expected, false, false), J$.T(482777, false, 23, false)))) {
                                return J$.Rt(482793, J$.T(482785, false, 23, false));
                            }
                            var actualParts = J$.W(482825, 'actualParts', J$.M(482817, J$.R(482801, 'actual', actual, false, false), 'split', false)(J$.T(482809, '/', 21, false)), actualParts, false, false);
                            var expectedParts = J$.W(482857, 'expectedParts', J$.M(482849, J$.R(482833, 'expected', expected, false, false), 'split', false)(J$.T(482841, '/', 21, false)), expectedParts, false, false);
                            if (J$.C(26544, J$.C(26536, J$.B(41106, '!==', J$.G(482873, J$.R(482865, 'actualParts', actualParts, false, false), 'length'), J$.T(482881, 2, 22, false))) ? J$._() : J$.B(41114, '!==', J$.G(482897, J$.R(482889, 'expectedParts', expectedParts, false, false), 'length'), J$.T(482905, 2, 22, false)))) {
                                return J$.Rt(482921, J$.T(482913, false, 23, false));
                            }
                            if (J$.C(26560, J$.C(26552, J$.B(41122, '!==', J$.G(482945, J$.R(482929, 'expectedParts', expectedParts, false, false), J$.T(482937, 0, 22, false)), J$.T(482953, '*', 21, false))) ? J$.B(41130, '!==', J$.G(482977, J$.R(482961, 'expectedParts', expectedParts, false, false), J$.T(482969, 0, 22, false)), J$.G(483001, J$.R(482985, 'actualParts', actualParts, false, false), J$.T(482993, 0, 22, false))) : J$._())) {
                                return J$.Rt(483017, J$.T(483009, false, 23, false));
                            }
                            if (J$.C(26576, J$.B(41138, '===', J$.M(483065, J$.G(483041, J$.R(483025, 'expectedParts', expectedParts, false, false), J$.T(483033, 1, 22, false)), 'substr', false)(J$.T(483049, 0, 22, false), J$.T(483057, 2, 22, false)), J$.T(483073, '*+', 21, false)))) {
                                return J$.Rt(483265, J$.C(26568, J$.B(41154, '<=', J$.G(483105, J$.G(483097, J$.R(483081, 'expectedParts', expectedParts, false, false), J$.T(483089, 1, 22, false)), 'length'), J$.B(41146, '+', J$.G(483137, J$.G(483129, J$.R(483113, 'actualParts', actualParts, false, false), J$.T(483121, 1, 22, false)), 'length'), J$.T(483145, 1, 22, false)))) ? J$.B(41170, '===', J$.M(483185, J$.G(483169, J$.R(483153, 'expectedParts', expectedParts, false, false), J$.T(483161, 1, 22, false)), 'substr', false)(J$.T(483177, 1, 22, false)), J$.M(483257, J$.G(483209, J$.R(483193, 'actualParts', actualParts, false, false), J$.T(483201, 1, 22, false)), 'substr', false)(J$.B(41162, '-', J$.T(483217, 1, 22, false), J$.G(483249, J$.G(483241, J$.R(483225, 'expectedParts', expectedParts, false, false), J$.T(483233, 1, 22, false)), 'length')))) : J$._());
                            }
                            if (J$.C(26592, J$.C(26584, J$.B(41178, '!==', J$.G(483289, J$.R(483273, 'expectedParts', expectedParts, false, false), J$.T(483281, 1, 22, false)), J$.T(483297, '*', 21, false))) ? J$.B(41186, '!==', J$.G(483321, J$.R(483305, 'expectedParts', expectedParts, false, false), J$.T(483313, 1, 22, false)), J$.G(483345, J$.R(483329, 'actualParts', actualParts, false, false), J$.T(483337, 1, 22, false))) : J$._())) {
                                return J$.Rt(483361, J$.T(483353, false, 23, false));
                            }
                            return J$.Rt(483377, J$.T(483369, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(483857, J$e);
                        } finally {
                            if (J$.Fr(483865))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function normalizeType(value) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(483521, arguments.callee, this, arguments);
                            arguments = J$.N(483529, 'arguments', arguments, true, false, false);
                            value = J$.N(483537, 'value', value, true, false, false);
                            J$.N(483545, 'type', type, false, false, false);
                            var type = J$.W(483457, 'type', J$.M(483449, J$.R(483433, 'typer', typer, false, true), 'parse', false)(J$.R(483441, 'value', value, false, false)), type, false, false);
                            J$.P(483481, J$.R(483465, 'type', type, false, false), 'parameters', J$.T(483473, undefined, 24, false));
                            return J$.Rt(483513, J$.M(483505, J$.R(483489, 'typer', typer, false, true), 'format', false)(J$.R(483497, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(483873, J$e);
                        } finally {
                            if (J$.Fr(483881))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tryNormalizeType(value) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(483633, arguments.callee, this, arguments);
                            arguments = J$.N(483641, 'arguments', arguments, true, false, false);
                            value = J$.N(483649, 'value', value, true, false, false);
                            if (J$.C(26600, J$.U(41194, '!', J$.R(483553, 'value', value, false, false)))) {
                                return J$.Rt(483569, J$.T(483561, null, 25, false));
                            }
                            try {
                                return J$.Rt(483601, J$.F(483593, J$.R(483577, 'normalizeType', normalizeType, false, true), false)(J$.R(483585, 'value', value, false, false)));
                            } catch (err) {
                                J$.N(483625, 'err', err, false, false, true);
                                return J$.Rt(483617, J$.T(483609, null, 25, false));
                            }
                        } catch (J$e) {
                            J$.Ex(483889, J$e);
                        } finally {
                            if (J$.Fr(483897))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(483665, 'typer', typer, false, false, false);
            J$.N(483673, 'mime', mime, false, false, false);
            typeis = J$.N(483689, 'typeis', J$.T(483681, typeis, 12, false), true, false, false);
            hasbody = J$.N(483705, 'hasbody', J$.T(483697, hasbody, 12, false), true, false, false);
            typeofrequest = J$.N(483721, 'typeofrequest', J$.T(483713, typeofrequest, 12, false), true, false, false);
            normalize = J$.N(483737, 'normalize', J$.T(483729, normalize, 12, false), true, false, false);
            mimeMatch = J$.N(483753, 'mimeMatch', J$.T(483745, mimeMatch, 12, false), true, false, false);
            normalizeType = J$.N(483769, 'normalizeType', J$.T(483761, normalizeType, 12, false), true, false, false);
            tryNormalizeType = J$.N(483785, 'tryNormalizeType', J$.T(483777, tryNormalizeType, 12, false), true, false, false);
            J$.T(481089, 'use strict', 21, false);
            J$.F(481113, J$.I(typeof require === 'undefined' ? require = J$.R(481097, 'require', undefined, true, true) : require = J$.R(481097, 'require', require, true, true)), false)(J$.T(481105, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(481137, J$.I(typeof require === 'undefined' ? require = J$.R(481121, 'require', undefined, true, true) : require = J$.R(481121, 'require', require, true, true)), false)(J$.T(481129, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(481161, J$.I(typeof require === 'undefined' ? require = J$.R(481145, 'require', undefined, true, true) : require = J$.R(481145, 'require', require, true, true)), false)(J$.T(481153, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(481185, J$.I(typeof require === 'undefined' ? require = J$.R(481169, 'require', undefined, true, true) : require = J$.R(481169, 'require', require, true, true)), false)(J$.T(481177, 'core-js/modules/es.string.match', 21, false));
            J$.F(481209, J$.I(typeof require === 'undefined' ? require = J$.R(481193, 'require', undefined, true, true) : require = J$.R(481193, 'require', require, true, true)), false)(J$.T(481201, 'core-js/modules/es.string.split', 21, false));
            var typer = J$.W(481241, 'typer', J$.F(481233, J$.I(typeof require === 'undefined' ? require = J$.R(481217, 'require', undefined, true, true) : require = J$.R(481217, 'require', require, true, true)), false)(J$.T(481225, 'media-typer', 21, false)), typer, false, true);
            var mime = J$.W(481273, 'mime', J$.F(481265, J$.I(typeof require === 'undefined' ? require = J$.R(481249, 'require', undefined, true, true) : require = J$.R(481249, 'require', require, true, true)), false)(J$.T(481257, 'mime-types', 21, false)), mime, false, true);
            J$.P(481297, J$.I(typeof module === 'undefined' ? module = J$.R(481281, 'module', undefined, true, true) : module = J$.R(481281, 'module', module, true, true)), 'exports', J$.R(481289, 'typeofrequest', typeofrequest, false, true));
            J$.P(481329, J$.G(481313, J$.I(typeof module === 'undefined' ? module = J$.R(481305, 'module', undefined, true, true) : module = J$.R(481305, 'module', module, true, true)), 'exports'), 'is', J$.R(481321, 'typeis', typeis, false, true));
            J$.P(481361, J$.G(481345, J$.I(typeof module === 'undefined' ? module = J$.R(481337, 'module', undefined, true, true) : module = J$.R(481337, 'module', module, true, true)), 'exports'), 'hasBody', J$.R(481353, 'hasbody', hasbody, false, true));
            J$.P(481393, J$.G(481377, J$.I(typeof module === 'undefined' ? module = J$.R(481369, 'module', undefined, true, true) : module = J$.R(481369, 'module', module, true, true)), 'exports'), 'normalize', J$.R(481385, 'normalize', normalize, false, true));
            J$.P(481425, J$.G(481409, J$.I(typeof module === 'undefined' ? module = J$.R(481401, 'module', undefined, true, true) : module = J$.R(481401, 'module', module, true, true)), 'exports'), 'match', J$.R(481417, 'mimeMatch', mimeMatch, false, true));
        } catch (J$e) {
            J$.Ex(483905, J$e);
        } finally {
            if (J$.Sr(483913))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

