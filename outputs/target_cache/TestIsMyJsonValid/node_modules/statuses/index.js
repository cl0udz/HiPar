J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(4396153, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/statuses/index.js');
            function populateStatusesMap(statuses, codes) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4395713, arguments.callee, this, arguments);
                            arguments = J$.N(4395721, 'arguments', arguments, true, false, false);
                            statuses = J$.N(4395729, 'statuses', statuses, true, false, false);
                            codes = J$.N(4395737, 'codes', codes, true, false, false);
                            J$.N(4395745, 'arr', arr, false, false, false);
                            var arr = J$.W(4395417, 'arr', J$.T(4395409, [], 10, false), arr, false, false);
                            J$.M(4395689, J$.M(4395441, J$.I(typeof Object === 'undefined' ? Object = J$.R(4395425, 'Object', undefined, true, true) : Object = J$.R(4395425, 'Object', Object, true, true)), 'keys', false)(J$.R(4395433, 'codes', codes, false, false)), 'forEach', false)(J$.T(4395681, function forEachCode(code) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4395641, arguments.callee, this, arguments);
                                            arguments = J$.N(4395649, 'arguments', arguments, true, false, false);
                                            code = J$.N(4395657, 'code', code, true, false, false);
                                            J$.N(4395665, 'message', message, false, false, false);
                                            J$.N(4395673, 'status', status, false, false, false);
                                            var message = J$.W(4395473, 'message', J$.G(4395465, J$.R(4395449, 'codes', codes, false, false), J$.R(4395457, 'code', code, false, false)), message, false, false);
                                            var status = J$.W(4395505, 'status', J$.F(4395497, J$.I(typeof Number === 'undefined' ? Number = J$.R(4395481, 'Number', undefined, true, true) : Number = J$.R(4395481, 'Number', Number, true, true)), false)(J$.R(4395489, 'code', code, false, false)), status, false, false);
                                            J$.P(4395537, J$.R(4395513, 'statuses', statuses, false, false), J$.R(4395521, 'status', status, false, false), J$.R(4395529, 'message', message, false, false));
                                            J$.P(4395569, J$.R(4395545, 'statuses', statuses, false, false), J$.R(4395553, 'message', message, false, false), J$.R(4395561, 'status', status, false, false));
                                            J$.P(4395609, J$.R(4395577, 'statuses', statuses, false, false), J$.M(4395593, J$.R(4395585, 'message', message, false, false), 'toLowerCase', false)(), J$.R(4395601, 'status', status, false, false));
                                            J$.M(4395633, J$.R(4395617, 'arr', arr, false, false), 'push', false)(J$.R(4395625, 'status', status, false, false));
                                        } catch (J$e) {
                                            J$.Ex(4396201, J$e);
                                        } finally {
                                            if (J$.Fr(4396209))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4395705, J$.R(4395697, 'arr', arr, false, false));
                        } catch (J$e) {
                            J$.Ex(4396217, J$e);
                        } finally {
                            if (J$.Fr(4396225))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function status(code) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4396121, arguments.callee, this, arguments);
                            arguments = J$.N(4396129, 'arguments', arguments, true, false, false);
                            code = J$.N(4396137, 'code', code, true, false, false);
                            J$.N(4396145, 'n', n, false, false, false);
                            if (J$.C(232456, J$.B(423666, '===', J$.U(423658, 'typeof', J$.R(4395753, 'code', code, false, false)), J$.T(4395761, 'number', 21, false)))) {
                                if (J$.C(232448, J$.U(423674, '!', J$.G(4395785, J$.R(4395769, 'status', status, false, true), J$.R(4395777, 'code', code, false, false)))))
                                    throw J$.F(4395817, J$.I(typeof Error === 'undefined' ? Error = J$.R(4395793, 'Error', undefined, true, true) : Error = J$.R(4395793, 'Error', Error, true, true)), true)(J$.B(423682, '+', J$.T(4395801, 'invalid status code: ', 21, false), J$.R(4395809, 'code', code, false, false)));
                                return J$.Rt(4395833, J$.R(4395825, 'code', code, false, false));
                            }
                            if (J$.C(232464, J$.B(423698, '!==', J$.U(423690, 'typeof', J$.R(4395841, 'code', code, false, false)), J$.T(4395849, 'string', 21, false)))) {
                                throw J$.F(4395873, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(4395857, 'TypeError', undefined, true, true) : TypeError = J$.R(4395857, 'TypeError', TypeError, true, true)), true)(J$.T(4395865, 'code must be a number or string', 21, false));
                            }
                            var n = J$.W(4395913, 'n', J$.F(4395905, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(4395881, 'parseInt', undefined, true, true) : parseInt = J$.R(4395881, 'parseInt', parseInt, true, true)), false)(J$.R(4395889, 'code', code, false, false), J$.T(4395897, 10, 22, false)), n, false, false);
                            if (J$.C(232480, J$.U(423706, '!', J$.F(4395937, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(4395921, 'isNaN', undefined, true, true) : isNaN = J$.R(4395921, 'isNaN', isNaN, true, true)), false)(J$.R(4395929, 'n', n, false, false))))) {
                                if (J$.C(232472, J$.U(423714, '!', J$.G(4395961, J$.R(4395945, 'status', status, false, true), J$.R(4395953, 'n', n, false, false)))))
                                    throw J$.F(4395993, J$.I(typeof Error === 'undefined' ? Error = J$.R(4395969, 'Error', undefined, true, true) : Error = J$.R(4395969, 'Error', Error, true, true)), true)(J$.B(423722, '+', J$.T(4395977, 'invalid status code: ', 21, false), J$.R(4395985, 'n', n, false, false)));
                                return J$.Rt(4396009, J$.R(4396001, 'n', n, false, false));
                            }
                            n = J$.W(4396049, 'n', J$.G(4396041, J$.R(4396017, 'status', status, false, true), J$.M(4396033, J$.R(4396025, 'code', code, false, false), 'toLowerCase', false)()), n, false, false);
                            if (J$.C(232488, J$.U(423730, '!', J$.R(4396057, 'n', n, false, false))))
                                throw J$.F(4396097, J$.I(typeof Error === 'undefined' ? Error = J$.R(4396065, 'Error', undefined, true, true) : Error = J$.R(4396065, 'Error', Error, true, true)), true)(J$.B(423746, '+', J$.B(423738, '+', J$.T(4396073, 'invalid status message: "', 21, false), J$.R(4396081, 'code', code, false, false)), J$.T(4396089, '"', 21, false)));
                            return J$.Rt(4396113, J$.R(4396105, 'n', n, false, false));
                        } catch (J$e) {
                            J$.Ex(4396233, J$e);
                        } finally {
                            if (J$.Fr(4396241))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4396161, 'codes', codes, false, false, false);
            populateStatusesMap = J$.N(4396177, 'populateStatusesMap', J$.T(4396169, populateStatusesMap, 12, false), true, false, false);
            status = J$.N(4396193, 'status', J$.T(4396185, status, 12, false), true, false, false);
            J$.T(4394977, 'use strict', 21, false);
            J$.F(4395001, J$.I(typeof require === 'undefined' ? require = J$.R(4394985, 'require', undefined, true, true) : require = J$.R(4394985, 'require', require, true, true)), false)(J$.T(4394993, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(4395025, J$.I(typeof require === 'undefined' ? require = J$.R(4395009, 'require', undefined, true, true) : require = J$.R(4395009, 'require', require, true, true)), false)(J$.T(4395017, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(4395049, J$.I(typeof require === 'undefined' ? require = J$.R(4395033, 'require', undefined, true, true) : require = J$.R(4395033, 'require', require, true, true)), false)(J$.T(4395041, 'core-js/modules/es.object.keys', 21, false));
            J$.F(4395073, J$.I(typeof require === 'undefined' ? require = J$.R(4395057, 'require', undefined, true, true) : require = J$.R(4395057, 'require', require, true, true)), false)(J$.T(4395065, 'core-js/modules/es.parse-int', 21, false));
            J$.F(4395097, J$.I(typeof require === 'undefined' ? require = J$.R(4395081, 'require', undefined, true, true) : require = J$.R(4395081, 'require', require, true, true)), false)(J$.T(4395089, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var codes = J$.W(4395129, 'codes', J$.F(4395121, J$.I(typeof require === 'undefined' ? require = J$.R(4395105, 'require', undefined, true, true) : require = J$.R(4395105, 'require', require, true, true)), false)(J$.T(4395113, './codes.json', 21, false)), codes, false, true);
            J$.P(4395153, J$.I(typeof module === 'undefined' ? module = J$.R(4395137, 'module', undefined, true, true) : module = J$.R(4395137, 'module', module, true, true)), 'exports', J$.R(4395145, 'status', status, false, true));
            J$.P(4395177, J$.R(4395161, 'status', status, false, true), 'STATUS_CODES', J$.R(4395169, 'codes', codes, false, true));
            J$.P(4395225, J$.R(4395185, 'status', status, false, true), 'codes', J$.F(4395217, J$.R(4395193, 'populateStatusesMap', populateStatusesMap, false, true), false)(J$.R(4395201, 'status', status, false, true), J$.R(4395209, 'codes', codes, false, true)));
            J$.P(4395305, J$.R(4395233, 'status', status, false, true), 'redirect', J$.T(4395297, {
                300: J$.T(4395241, true, 23, false),
                301: J$.T(4395249, true, 23, false),
                302: J$.T(4395257, true, 23, false),
                303: J$.T(4395265, true, 23, false),
                305: J$.T(4395273, true, 23, false),
                307: J$.T(4395281, true, 23, false),
                308: J$.T(4395289, true, 23, false)
            }, 11, false));
            J$.P(4395353, J$.R(4395313, 'status', status, false, true), 'empty', J$.T(4395345, {
                204: J$.T(4395321, true, 23, false),
                205: J$.T(4395329, true, 23, false),
                304: J$.T(4395337, true, 23, false)
            }, 11, false));
            J$.P(4395401, J$.R(4395361, 'status', status, false, true), 'retry', J$.T(4395393, {
                502: J$.T(4395369, true, 23, false),
                503: J$.T(4395377, true, 23, false),
                504: J$.T(4395385, true, 23, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(4396249, J$e);
        } finally {
            if (J$.Sr(4396257))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

