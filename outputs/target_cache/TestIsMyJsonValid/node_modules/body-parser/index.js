J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(4761, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/body-parser/index.js');
            function bodyParser(options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4313, arguments.callee, this, arguments);
                            arguments = J$.N(4321, 'arguments', arguments, true, false, false);
                            options = J$.N(4329, 'options', options, true, false, false);
                            J$.N(4337, 'opts', opts, false, false, false);
                            J$.N(4345, 'prop', prop, false, false, false);
                            J$.N(4353, '_urlencoded', _urlencoded, false, false, false);
                            J$.N(4361, '_json', _json, false, false, false);
                            var opts = J$.W(3945, 'opts', J$.T(3937, {}, 11, false), opts, false, false);
                            if (J$.C(280, J$.R(3953, 'options', options, false, false))) {
                                for (var prop in J$.H(4033, J$.R(3961, 'options', options, false, false))) {
                                    J$.N(4041, 'prop', prop, false, true, false);
                                    {
                                        {
                                            if (J$.C(272, J$.B(378, '!==', J$.R(3969, 'prop', prop, false, false), J$.T(3977, 'type', 21, false)))) {
                                                J$.P(4025, J$.R(3985, 'opts', opts, false, false), J$.R(3993, 'prop', prop, false, false), J$.G(4017, J$.R(4001, 'options', options, false, false), J$.R(4009, 'prop', prop, false, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            var _urlencoded = J$.W(4073, '_urlencoded', J$.M(4065, J$.I(typeof exports === 'undefined' ? exports = J$.R(4049, 'exports', undefined, true, true) : exports = J$.R(4049, 'exports', exports, true, true)), 'urlencoded', false)(J$.R(4057, 'opts', opts, false, false)), _urlencoded, false, false);
                            var _json = J$.W(4105, '_json', J$.M(4097, J$.I(typeof exports === 'undefined' ? exports = J$.R(4081, 'exports', undefined, true, true) : exports = J$.R(4081, 'exports', exports, true, true)), 'json', false)(J$.R(4089, 'opts', opts, false, false)), _json, false, false);
                            return J$.Rt(4305, J$.T(4297, function bodyParser(req, res, next) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(4257, arguments.callee, this, arguments);
                                            arguments = J$.N(4265, 'arguments', arguments, true, false, false);
                                            req = J$.N(4273, 'req', req, true, false, false);
                                            res = J$.N(4281, 'res', res, true, false, false);
                                            next = J$.N(4289, 'next', next, true, false, false);
                                            J$.F(4249, J$.R(4113, '_json', _json, false, false), false)(J$.R(4121, 'req', req, false, false), J$.R(4129, 'res', res, false, false), J$.T(4241, function (err) {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(4217, arguments.callee, this, arguments);
                                                            arguments = J$.N(4225, 'arguments', arguments, true, false, false);
                                                            err = J$.N(4233, 'err', err, true, false, false);
                                                            if (J$.C(288, J$.R(4137, 'err', err, false, false)))
                                                                return J$.Rt(4169, J$.F(4161, J$.R(4145, 'next', next, false, false), false)(J$.R(4153, 'err', err, false, false)));
                                                            J$.F(4209, J$.R(4177, '_urlencoded', _urlencoded, false, false), false)(J$.R(4185, 'req', req, false, false), J$.R(4193, 'res', res, false, false), J$.R(4201, 'next', next, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(4833, J$e);
                                                        } finally {
                                                            if (J$.Fr(4841))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(4849, J$e);
                                        } finally {
                                            if (J$.Fr(4857))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(4865, J$e);
                        } finally {
                            if (J$.Fr(4873))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createParserGetter(name) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(4433, arguments.callee, this, arguments);
                            arguments = J$.N(4441, 'arguments', arguments, true, false, false);
                            name = J$.N(4449, 'name', name, true, false, false);
                            return J$.Rt(4425, J$.T(4417, function get() {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(4401, arguments.callee, this, arguments);
                                            arguments = J$.N(4409, 'arguments', arguments, true, false, false);
                                            return J$.Rt(4393, J$.F(4385, J$.R(4369, 'loadParser', loadParser, false, true), false)(J$.R(4377, 'name', name, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(4881, J$e);
                                        } finally {
                                            if (J$.Fr(4889))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(4897, J$e);
                        } finally {
                            if (J$.Fr(4905))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function loadParser(parserName) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(4729, arguments.callee, this, arguments);
                            arguments = J$.N(4737, 'arguments', arguments, true, false, false);
                            parserName = J$.N(4745, 'parserName', parserName, true, false, false);
                            J$.N(4753, 'parser', parser, false, false, false);
                            var parser = J$.W(4481, 'parser', J$.G(4473, J$.R(4457, 'parsers', parsers, false, true), J$.R(4465, 'parserName', parserName, false, false)), parser, false, false);
                            if (J$.C(296, J$.B(386, '!==', J$.R(4489, 'parser', parser, false, false), J$.T(4497, undefined, 24, false)))) {
                                return J$.Rt(4513, J$.R(4505, 'parser', parser, false, false));
                            }
                            switch (J$.C1(304, J$.R(4521, 'parserName', parserName, false, false))) {
                            case J$.C2(312, J$.T(4561, 'json', 21, false)):
                                parser = J$.W(4553, 'parser', J$.F(4545, J$.I(typeof require === 'undefined' ? require = J$.R(4529, 'require', undefined, true, true) : require = J$.R(4529, 'require', require, true, true)), false)(J$.T(4537, './lib/types/json', 21, false)), parser, false, false);
                                break;
                            case J$.C2(320, J$.T(4601, 'raw', 21, false)):
                                parser = J$.W(4593, 'parser', J$.F(4585, J$.I(typeof require === 'undefined' ? require = J$.R(4569, 'require', undefined, true, true) : require = J$.R(4569, 'require', require, true, true)), false)(J$.T(4577, './lib/types/raw', 21, false)), parser, false, false);
                                break;
                            case J$.C2(328, J$.T(4641, 'text', 21, false)):
                                parser = J$.W(4633, 'parser', J$.F(4625, J$.I(typeof require === 'undefined' ? require = J$.R(4609, 'require', undefined, true, true) : require = J$.R(4609, 'require', require, true, true)), false)(J$.T(4617, './lib/types/text', 21, false)), parser, false, false);
                                break;
                            case J$.C2(336, J$.T(4681, 'urlencoded', 21, false)):
                                parser = J$.W(4673, 'parser', J$.F(4665, J$.I(typeof require === 'undefined' ? require = J$.R(4649, 'require', undefined, true, true) : require = J$.R(4649, 'require', require, true, true)), false)(J$.T(4657, './lib/types/urlencoded', 21, false)), parser, false, false);
                                break;
                            }
                            return J$.Rt(4721, J$.P(4713, J$.R(4689, 'parsers', parsers, false, true), J$.R(4697, 'parserName', parserName, false, false), J$.R(4705, 'parser', parser, false, false)));
                        } catch (J$e) {
                            J$.Ex(4913, J$e);
                        } finally {
                            if (J$.Fr(4921))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4769, 'deprecate', deprecate, false, false, false);
            J$.N(4777, 'parsers', parsers, false, false, false);
            bodyParser = J$.N(4793, 'bodyParser', J$.T(4785, bodyParser, 12, false), true, false, false);
            createParserGetter = J$.N(4809, 'createParserGetter', J$.T(4801, createParserGetter, 12, false), true, false, false);
            loadParser = J$.N(4825, 'loadParser', J$.T(4817, loadParser, 12, false), true, false, false);
            J$.T(3417, 'use strict', 21, false);
            J$.F(3441, J$.I(typeof require === 'undefined' ? require = J$.R(3425, 'require', undefined, true, true) : require = J$.R(3425, 'require', require, true, true)), false)(J$.T(3433, 'core-js/modules/es.object.create', 21, false));
            J$.F(3465, J$.I(typeof require === 'undefined' ? require = J$.R(3449, 'require', undefined, true, true) : require = J$.R(3449, 'require', require, true, true)), false)(J$.T(3457, 'core-js/modules/es.object.define-property', 21, false));
            var deprecate = J$.W(3513, 'deprecate', J$.F(3505, J$.F(3489, J$.I(typeof require === 'undefined' ? require = J$.R(3473, 'require', undefined, true, true) : require = J$.R(3473, 'require', require, true, true)), false)(J$.T(3481, 'depd', 21, false)), false)(J$.T(3497, 'body-parser', 21, false)), deprecate, false, true);
            var parsers = J$.W(3545, 'parsers', J$.M(3537, J$.I(typeof Object === 'undefined' ? Object = J$.R(3521, 'Object', undefined, true, true) : Object = J$.R(3521, 'Object', Object, true, true)), 'create', false)(J$.T(3529, null, 25, false)), parsers, false, true);
            exports = J$.W(3609, 'exports', J$.P(3601, J$.I(typeof module === 'undefined' ? module = J$.R(3553, 'module', undefined, true, true) : module = J$.R(3553, 'module', module, true, true)), 'exports', J$.M(3593, J$.R(3561, 'deprecate', deprecate, false, true), J$.T(3569, 'function', 21, false), false)(J$.R(3577, 'bodyParser', bodyParser, false, true), J$.T(3585, 'bodyParser: use individual json/urlencoded middlewares', 21, false))), J$.I(typeof exports === 'undefined' ? undefined : exports), true, true);
            J$.M(3689, J$.I(typeof Object === 'undefined' ? Object = J$.R(3617, 'Object', undefined, true, true) : Object = J$.R(3617, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(3625, 'exports', undefined, true, true) : exports = J$.R(3625, 'exports', exports, true, true)), J$.T(3633, 'json', 21, false), J$.T(3681, {
                configurable: J$.T(3641, true, 23, false),
                enumerable: J$.T(3649, true, 23, false),
                get: J$.F(3673, J$.R(3657, 'createParserGetter', createParserGetter, false, true), false)(J$.T(3665, 'json', 21, false))
            }, 11, false));
            J$.M(3769, J$.I(typeof Object === 'undefined' ? Object = J$.R(3697, 'Object', undefined, true, true) : Object = J$.R(3697, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(3705, 'exports', undefined, true, true) : exports = J$.R(3705, 'exports', exports, true, true)), J$.T(3713, 'raw', 21, false), J$.T(3761, {
                configurable: J$.T(3721, true, 23, false),
                enumerable: J$.T(3729, true, 23, false),
                get: J$.F(3753, J$.R(3737, 'createParserGetter', createParserGetter, false, true), false)(J$.T(3745, 'raw', 21, false))
            }, 11, false));
            J$.M(3849, J$.I(typeof Object === 'undefined' ? Object = J$.R(3777, 'Object', undefined, true, true) : Object = J$.R(3777, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(3785, 'exports', undefined, true, true) : exports = J$.R(3785, 'exports', exports, true, true)), J$.T(3793, 'text', 21, false), J$.T(3841, {
                configurable: J$.T(3801, true, 23, false),
                enumerable: J$.T(3809, true, 23, false),
                get: J$.F(3833, J$.R(3817, 'createParserGetter', createParserGetter, false, true), false)(J$.T(3825, 'text', 21, false))
            }, 11, false));
            J$.M(3929, J$.I(typeof Object === 'undefined' ? Object = J$.R(3857, 'Object', undefined, true, true) : Object = J$.R(3857, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(3865, 'exports', undefined, true, true) : exports = J$.R(3865, 'exports', exports, true, true)), J$.T(3873, 'urlencoded', 21, false), J$.T(3921, {
                configurable: J$.T(3881, true, 23, false),
                enumerable: J$.T(3889, true, 23, false),
                get: J$.F(3913, J$.R(3897, 'createParserGetter', createParserGetter, false, true), false)(J$.T(3905, 'urlencoded', 21, false))
            }, 11, false));
        } catch (J$e) {
            J$.Ex(4929, J$e);
        } finally {
            if (J$.Sr(4937))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

