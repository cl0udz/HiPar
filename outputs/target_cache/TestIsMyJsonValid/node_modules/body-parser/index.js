J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(47633, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/body-parser/index.js');
            function bodyParser(options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(47185, arguments.callee, this, arguments);
                            arguments = J$.N(47193, 'arguments', arguments, true, false, false);
                            options = J$.N(47201, 'options', options, true, false, false);
                            J$.N(47209, 'opts', opts, false, false, false);
                            J$.N(47217, 'prop', prop, false, false, false);
                            J$.N(47225, '_urlencoded', _urlencoded, false, false, false);
                            J$.N(47233, '_json', _json, false, false, false);
                            var opts = J$.W(46817, 'opts', J$.T(46809, {}, 11, false), opts, false, false);
                            if (J$.C(2552, J$.R(46825, 'options', options, false, false))) {
                                for (var prop in J$.H(46905, J$.R(46833, 'options', options, false, false))) {
                                    J$.N(46913, 'prop', prop, false, true, false);
                                    {
                                        {
                                            if (J$.C(2544, J$.B(3498, '!==', J$.R(46841, 'prop', prop, false, false), J$.T(46849, 'type', 21, false)))) {
                                                J$.P(46897, J$.R(46857, 'opts', opts, false, false), J$.R(46865, 'prop', prop, false, false), J$.G(46889, J$.R(46873, 'options', options, false, false), J$.R(46881, 'prop', prop, false, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            var _urlencoded = J$.W(46945, '_urlencoded', J$.M(46937, J$.I(typeof exports === 'undefined' ? exports = J$.R(46921, 'exports', undefined, true, true) : exports = J$.R(46921, 'exports', exports, true, true)), 'urlencoded', false)(J$.R(46929, 'opts', opts, false, false)), _urlencoded, false, false);
                            var _json = J$.W(46977, '_json', J$.M(46969, J$.I(typeof exports === 'undefined' ? exports = J$.R(46953, 'exports', undefined, true, true) : exports = J$.R(46953, 'exports', exports, true, true)), 'json', false)(J$.R(46961, 'opts', opts, false, false)), _json, false, false);
                            return J$.Rt(47177, J$.T(47169, function bodyParser(req, res, next) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(47129, arguments.callee, this, arguments);
                                            arguments = J$.N(47137, 'arguments', arguments, true, false, false);
                                            req = J$.N(47145, 'req', req, true, false, false);
                                            res = J$.N(47153, 'res', res, true, false, false);
                                            next = J$.N(47161, 'next', next, true, false, false);
                                            J$.F(47121, J$.R(46985, '_json', _json, false, false), false)(J$.R(46993, 'req', req, false, false), J$.R(47001, 'res', res, false, false), J$.T(47113, function (err) {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(47089, arguments.callee, this, arguments);
                                                            arguments = J$.N(47097, 'arguments', arguments, true, false, false);
                                                            err = J$.N(47105, 'err', err, true, false, false);
                                                            if (J$.C(2560, J$.R(47009, 'err', err, false, false)))
                                                                return J$.Rt(47041, J$.F(47033, J$.R(47017, 'next', next, false, false), false)(J$.R(47025, 'err', err, false, false)));
                                                            J$.F(47081, J$.R(47049, '_urlencoded', _urlencoded, false, false), false)(J$.R(47057, 'req', req, false, false), J$.R(47065, 'res', res, false, false), J$.R(47073, 'next', next, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(47705, J$e);
                                                        } finally {
                                                            if (J$.Fr(47713))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(47721, J$e);
                                        } finally {
                                            if (J$.Fr(47729))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(47737, J$e);
                        } finally {
                            if (J$.Fr(47745))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createParserGetter(name) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(47305, arguments.callee, this, arguments);
                            arguments = J$.N(47313, 'arguments', arguments, true, false, false);
                            name = J$.N(47321, 'name', name, true, false, false);
                            return J$.Rt(47297, J$.T(47289, function get() {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(47273, arguments.callee, this, arguments);
                                            arguments = J$.N(47281, 'arguments', arguments, true, false, false);
                                            return J$.Rt(47265, J$.F(47257, J$.R(47241, 'loadParser', loadParser, false, true), false)(J$.R(47249, 'name', name, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(47753, J$e);
                                        } finally {
                                            if (J$.Fr(47761))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(47769, J$e);
                        } finally {
                            if (J$.Fr(47777))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function loadParser(parserName) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(47601, arguments.callee, this, arguments);
                            arguments = J$.N(47609, 'arguments', arguments, true, false, false);
                            parserName = J$.N(47617, 'parserName', parserName, true, false, false);
                            J$.N(47625, 'parser', parser, false, false, false);
                            var parser = J$.W(47353, 'parser', J$.G(47345, J$.R(47329, 'parsers', parsers, false, true), J$.R(47337, 'parserName', parserName, false, false)), parser, false, false);
                            if (J$.C(2568, J$.B(3506, '!==', J$.R(47361, 'parser', parser, false, false), J$.T(47369, undefined, 24, false)))) {
                                return J$.Rt(47385, J$.R(47377, 'parser', parser, false, false));
                            }
                            switch (J$.C1(2576, J$.R(47393, 'parserName', parserName, false, false))) {
                            case J$.C2(2584, J$.T(47433, 'json', 21, false)):
                                parser = J$.W(47425, 'parser', J$.F(47417, J$.I(typeof require === 'undefined' ? require = J$.R(47401, 'require', undefined, true, true) : require = J$.R(47401, 'require', require, true, true)), false)(J$.T(47409, './lib/types/json', 21, false)), parser, false, false);
                                break;
                            case J$.C2(2592, J$.T(47473, 'raw', 21, false)):
                                parser = J$.W(47465, 'parser', J$.F(47457, J$.I(typeof require === 'undefined' ? require = J$.R(47441, 'require', undefined, true, true) : require = J$.R(47441, 'require', require, true, true)), false)(J$.T(47449, './lib/types/raw', 21, false)), parser, false, false);
                                break;
                            case J$.C2(2600, J$.T(47513, 'text', 21, false)):
                                parser = J$.W(47505, 'parser', J$.F(47497, J$.I(typeof require === 'undefined' ? require = J$.R(47481, 'require', undefined, true, true) : require = J$.R(47481, 'require', require, true, true)), false)(J$.T(47489, './lib/types/text', 21, false)), parser, false, false);
                                break;
                            case J$.C2(2608, J$.T(47553, 'urlencoded', 21, false)):
                                parser = J$.W(47545, 'parser', J$.F(47537, J$.I(typeof require === 'undefined' ? require = J$.R(47521, 'require', undefined, true, true) : require = J$.R(47521, 'require', require, true, true)), false)(J$.T(47529, './lib/types/urlencoded', 21, false)), parser, false, false);
                                break;
                            }
                            return J$.Rt(47593, J$.P(47585, J$.R(47561, 'parsers', parsers, false, true), J$.R(47569, 'parserName', parserName, false, false), J$.R(47577, 'parser', parser, false, false)));
                        } catch (J$e) {
                            J$.Ex(47785, J$e);
                        } finally {
                            if (J$.Fr(47793))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(47641, 'deprecate', deprecate, false, false, false);
            J$.N(47649, 'parsers', parsers, false, false, false);
            bodyParser = J$.N(47665, 'bodyParser', J$.T(47657, bodyParser, 12, false), true, false, false);
            createParserGetter = J$.N(47681, 'createParserGetter', J$.T(47673, createParserGetter, 12, false), true, false, false);
            loadParser = J$.N(47697, 'loadParser', J$.T(47689, loadParser, 12, false), true, false, false);
            J$.T(46289, 'use strict', 21, false);
            J$.F(46313, J$.I(typeof require === 'undefined' ? require = J$.R(46297, 'require', undefined, true, true) : require = J$.R(46297, 'require', require, true, true)), false)(J$.T(46305, 'core-js/modules/es.object.create', 21, false));
            J$.F(46337, J$.I(typeof require === 'undefined' ? require = J$.R(46321, 'require', undefined, true, true) : require = J$.R(46321, 'require', require, true, true)), false)(J$.T(46329, 'core-js/modules/es.object.define-property', 21, false));
            var deprecate = J$.W(46385, 'deprecate', J$.F(46377, J$.F(46361, J$.I(typeof require === 'undefined' ? require = J$.R(46345, 'require', undefined, true, true) : require = J$.R(46345, 'require', require, true, true)), false)(J$.T(46353, 'depd', 21, false)), false)(J$.T(46369, 'body-parser', 21, false)), deprecate, false, true);
            var parsers = J$.W(46417, 'parsers', J$.M(46409, J$.I(typeof Object === 'undefined' ? Object = J$.R(46393, 'Object', undefined, true, true) : Object = J$.R(46393, 'Object', Object, true, true)), 'create', false)(J$.T(46401, null, 25, false)), parsers, false, true);
            exports = J$.W(46481, 'exports', J$.P(46473, J$.I(typeof module === 'undefined' ? module = J$.R(46425, 'module', undefined, true, true) : module = J$.R(46425, 'module', module, true, true)), 'exports', J$.M(46465, J$.R(46433, 'deprecate', deprecate, false, true), J$.T(46441, 'function', 21, false), false)(J$.R(46449, 'bodyParser', bodyParser, false, true), J$.T(46457, 'bodyParser: use individual json/urlencoded middlewares', 21, false))), J$.I(typeof exports === 'undefined' ? undefined : exports), true, true);
            J$.M(46561, J$.I(typeof Object === 'undefined' ? Object = J$.R(46489, 'Object', undefined, true, true) : Object = J$.R(46489, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(46497, 'exports', undefined, true, true) : exports = J$.R(46497, 'exports', exports, true, true)), J$.T(46505, 'json', 21, false), J$.T(46553, {
                configurable: J$.T(46513, true, 23, false),
                enumerable: J$.T(46521, true, 23, false),
                get: J$.F(46545, J$.R(46529, 'createParserGetter', createParserGetter, false, true), false)(J$.T(46537, 'json', 21, false))
            }, 11, false));
            J$.M(46641, J$.I(typeof Object === 'undefined' ? Object = J$.R(46569, 'Object', undefined, true, true) : Object = J$.R(46569, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(46577, 'exports', undefined, true, true) : exports = J$.R(46577, 'exports', exports, true, true)), J$.T(46585, 'raw', 21, false), J$.T(46633, {
                configurable: J$.T(46593, true, 23, false),
                enumerable: J$.T(46601, true, 23, false),
                get: J$.F(46625, J$.R(46609, 'createParserGetter', createParserGetter, false, true), false)(J$.T(46617, 'raw', 21, false))
            }, 11, false));
            J$.M(46721, J$.I(typeof Object === 'undefined' ? Object = J$.R(46649, 'Object', undefined, true, true) : Object = J$.R(46649, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(46657, 'exports', undefined, true, true) : exports = J$.R(46657, 'exports', exports, true, true)), J$.T(46665, 'text', 21, false), J$.T(46713, {
                configurable: J$.T(46673, true, 23, false),
                enumerable: J$.T(46681, true, 23, false),
                get: J$.F(46705, J$.R(46689, 'createParserGetter', createParserGetter, false, true), false)(J$.T(46697, 'text', 21, false))
            }, 11, false));
            J$.M(46801, J$.I(typeof Object === 'undefined' ? Object = J$.R(46729, 'Object', undefined, true, true) : Object = J$.R(46729, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(46737, 'exports', undefined, true, true) : exports = J$.R(46737, 'exports', exports, true, true)), J$.T(46745, 'urlencoded', 21, false), J$.T(46793, {
                configurable: J$.T(46753, true, 23, false),
                enumerable: J$.T(46761, true, 23, false),
                get: J$.F(46785, J$.R(46769, 'createParserGetter', createParserGetter, false, true), false)(J$.T(46777, 'urlencoded', 21, false))
            }, 11, false));
        } catch (J$e) {
            J$.Ex(47801, J$e);
        } finally {
            if (J$.Sr(47809))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

