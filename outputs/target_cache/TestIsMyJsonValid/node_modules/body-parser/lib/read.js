J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(50065, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/body-parser/lib/read.js');
            function read(req, res, next, parse, debug, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(49377, arguments.callee, this, arguments);
                            arguments = J$.N(49385, 'arguments', arguments, true, false, false);
                            req = J$.N(49393, 'req', req, true, false, false);
                            res = J$.N(49401, 'res', res, true, false, false);
                            next = J$.N(49409, 'next', next, true, false, false);
                            parse = J$.N(49417, 'parse', parse, true, false, false);
                            debug = J$.N(49425, 'debug', debug, true, false, false);
                            options = J$.N(49433, 'options', options, true, false, false);
                            J$.N(49441, 'length', length, false, false, false);
                            J$.N(49449, 'opts', opts, false, false, false);
                            J$.N(49457, 'stream', stream, false, false, false);
                            J$.N(49465, 'encoding', encoding, false, false, false);
                            J$.N(49473, 'verify', verify, false, false, false);
                            var length;
                            var opts = J$.W(48017, 'opts', J$.R(48009, 'options', options, false, false), opts, false, false);
                            var stream;
                            J$.P(48041, J$.R(48025, 'req', req, false, false), '_body', J$.T(48033, true, 23, false));
                            var encoding = J$.W(48097, 'encoding', J$.C(2616, J$.B(3514, '!==', J$.G(48057, J$.R(48049, 'opts', opts, false, false), 'encoding'), J$.T(48065, null, 25, false))) ? J$.G(48081, J$.R(48073, 'opts', opts, false, false), 'encoding') : J$.T(48089, null, 25, false), encoding, false, false);
                            var verify = J$.W(48121, 'verify', J$.G(48113, J$.R(48105, 'opts', opts, false, false), 'verify'), verify, false, false);
                            try {
                                stream = J$.W(48177, 'stream', J$.F(48169, J$.R(48129, 'contentstream', contentstream, false, true), false)(J$.R(48137, 'req', req, false, false), J$.R(48145, 'debug', debug, false, false), J$.G(48161, J$.R(48153, 'opts', opts, false, false), 'inflate')), stream, false, false);
                                length = J$.W(48201, 'length', J$.G(48193, J$.R(48185, 'stream', stream, false, false), 'length'), length, false, false);
                                J$.P(48225, J$.R(48209, 'stream', stream, false, false), 'length', J$.T(48217, undefined, 24, false));
                            } catch (err) {
                                J$.N(48265, 'err', err, false, false, true);
                                return J$.Rt(48257, J$.F(48249, J$.R(48233, 'next', next, false, false), false)(J$.R(48241, 'err', err, false, false)));
                            }
                            J$.P(48289, J$.R(48273, 'opts', opts, false, false), 'length', J$.R(48281, 'length', length, false, false));
                            J$.P(48329, J$.R(48297, 'opts', opts, false, false), 'encoding', J$.C(2624, J$.R(48305, 'verify', verify, false, false)) ? J$.T(48313, null, 25, false) : J$.R(48321, 'encoding', encoding, false, false));
                            if (J$.C(2648, J$.C(2640, J$.C(2632, J$.B(3522, '===', J$.G(48345, J$.R(48337, 'opts', opts, false, false), 'encoding'), J$.T(48353, null, 25, false))) ? J$.B(3530, '!==', J$.R(48361, 'encoding', encoding, false, false), J$.T(48369, null, 25, false)) : J$._()) ? J$.U(3538, '!', J$.M(48393, J$.R(48377, 'iconv', iconv, false, true), 'encodingExists', false)(J$.R(48385, 'encoding', encoding, false, false))) : J$._())) {
                                return J$.Rt(48505, J$.F(48497, J$.R(48401, 'next', next, false, false), false)(J$.F(48489, J$.R(48409, 'createError', createError, false, true), false)(J$.T(48417, 415, 22, false), J$.B(3554, '+', J$.B(3546, '+', J$.T(48425, 'unsupported charset "', 21, false), J$.M(48441, J$.R(48433, 'encoding', encoding, false, false), 'toUpperCase', false)()), J$.T(48449, '"', 21, false)), J$.T(48481, {
                                    charset: J$.M(48465, J$.R(48457, 'encoding', encoding, false, false), 'toLowerCase', false)(),
                                    type: J$.T(48473, 'charset.unsupported', 21, false)
                                }, 11, false))));
                            }
                            J$.F(48529, J$.R(48513, 'debug', debug, false, false), false)(J$.T(48521, 'read body', 21, false));
                            J$.F(49369, J$.R(48537, 'getBody', getBody, false, true), false)(J$.R(48545, 'stream', stream, false, false), J$.R(48553, 'opts', opts, false, false), J$.T(49361, function (error, body) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(49313, arguments.callee, this, arguments);
                                            arguments = J$.N(49321, 'arguments', arguments, true, false, false);
                                            error = J$.N(49329, 'error', error, true, false, false);
                                            body = J$.N(49337, 'body', body, true, false, false);
                                            J$.N(49345, '_error', _error, false, false, false);
                                            J$.N(49353, 'str', str, false, false, false);
                                            if (J$.C(2664, J$.R(48561, 'error', error, false, false))) {
                                                var _error;
                                                if (J$.C(2656, J$.B(3562, '===', J$.G(48577, J$.R(48569, 'error', error, false, false), 'type'), J$.T(48585, 'encoding.unsupported', 21, false)))) {
                                                    _error = J$.W(48681, '_error', J$.F(48673, J$.R(48593, 'createError', createError, false, true), false)(J$.T(48601, 415, 22, false), J$.B(3578, '+', J$.B(3570, '+', J$.T(48609, 'unsupported charset "', 21, false), J$.M(48625, J$.R(48617, 'encoding', encoding, false, false), 'toUpperCase', false)()), J$.T(48633, '"', 21, false)), J$.T(48665, {
                                                        charset: J$.M(48649, J$.R(48641, 'encoding', encoding, false, false), 'toLowerCase', false)(),
                                                        type: J$.T(48657, 'charset.unsupported', 21, false)
                                                    }, 11, false)), _error, false, false);
                                                } else {
                                                    _error = J$.W(48721, '_error', J$.F(48713, J$.R(48689, 'createError', createError, false, true), false)(J$.T(48697, 400, 22, false), J$.R(48705, 'error', error, false, false)), _error, false, false);
                                                }
                                                J$.M(48737, J$.R(48729, 'stream', stream, false, false), 'resume', false)();
                                                J$.F(48833, J$.R(48745, 'onFinished', onFinished, false, true), false)(J$.R(48753, 'req', req, false, false), J$.T(48825, function onfinished() {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(48809, arguments.callee, this, arguments);
                                                                arguments = J$.N(48817, 'arguments', arguments, true, false, false);
                                                                J$.F(48801, J$.R(48761, 'next', next, false, false), false)(J$.F(48793, J$.R(48769, 'createError', createError, false, true), false)(J$.T(48777, 400, 22, false), J$.R(48785, '_error', _error, false, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(50145, J$e);
                                                            } finally {
                                                                if (J$.Fr(50153))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(48841, undefined);
                                            }
                                            if (J$.C(2680, J$.R(48849, 'verify', verify, false, false))) {
                                                try {
                                                    J$.F(48873, J$.R(48857, 'debug', debug, false, false), false)(J$.T(48865, 'verify body', 21, false));
                                                    J$.F(48921, J$.R(48881, 'verify', verify, false, false), false)(J$.R(48889, 'req', req, false, false), J$.R(48897, 'res', res, false, false), J$.R(48905, 'body', body, false, false), J$.R(48913, 'encoding', encoding, false, false));
                                                } catch (err) {
                                                    J$.N(49025, 'err', err, false, false, true);
                                                    J$.F(49009, J$.R(48929, 'next', next, false, false), false)(J$.F(49001, J$.R(48937, 'createError', createError, false, true), false)(J$.T(48945, 403, 22, false), J$.R(48953, 'err', err, false, false), J$.T(48993, {
                                                        body: J$.R(48961, 'body', body, false, false),
                                                        type: J$.C(2672, J$.G(48977, J$.R(48969, 'err', err, false, false), 'type')) ? J$._() : J$.T(48985, 'entity.verify.failed', 21, false)
                                                    }, 11, false)));
                                                    return J$.Rt(49017, undefined);
                                                }
                                            }
                                            var str = J$.W(49041, 'str', J$.R(49033, 'body', body, false, false), str, false, false);
                                            try {
                                                J$.F(49065, J$.R(49049, 'debug', debug, false, false), false)(J$.T(49057, 'parse body', 21, false));
                                                str = J$.W(49145, 'str', J$.C(2696, J$.C(2688, J$.B(3594, '!==', J$.U(3586, 'typeof', J$.R(49073, 'body', body, false, false)), J$.T(49081, 'string', 21, false))) ? J$.B(3602, '!==', J$.R(49089, 'encoding', encoding, false, false), J$.T(49097, null, 25, false)) : J$._()) ? J$.M(49129, J$.R(49105, 'iconv', iconv, false, true), 'decode', false)(J$.R(49113, 'body', body, false, false), J$.R(49121, 'encoding', encoding, false, false)) : J$.R(49137, 'body', body, false, false), str, false, false);
                                                J$.P(49185, J$.R(49153, 'req', req, false, false), 'body', J$.F(49177, J$.R(49161, 'parse', parse, false, false), false)(J$.R(49169, 'str', str, false, false)));
                                            } catch (err) {
                                                J$.N(49289, 'err', err, false, false, true);
                                                J$.F(49273, J$.R(49193, 'next', next, false, false), false)(J$.F(49265, J$.R(49201, 'createError', createError, false, true), false)(J$.T(49209, 400, 22, false), J$.R(49217, 'err', err, false, false), J$.T(49257, {
                                                    body: J$.R(49225, 'str', str, false, false),
                                                    type: J$.C(2704, J$.G(49241, J$.R(49233, 'err', err, false, false), 'type')) ? J$._() : J$.T(49249, 'entity.parse.failed', 21, false)
                                                }, 11, false)));
                                                return J$.Rt(49281, undefined);
                                            }
                                            J$.F(49305, J$.R(49297, 'next', next, false, false), false)();
                                        } catch (J$e) {
                                            J$.Ex(50161, J$e);
                                        } finally {
                                            if (J$.Fr(50169))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(50177, J$e);
                        } finally {
                            if (J$.Fr(50185))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function contentstream(req, debug, inflate) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(50001, arguments.callee, this, arguments);
                            arguments = J$.N(50009, 'arguments', arguments, true, false, false);
                            req = J$.N(50017, 'req', req, true, false, false);
                            debug = J$.N(50025, 'debug', debug, true, false, false);
                            inflate = J$.N(50033, 'inflate', inflate, true, false, false);
                            J$.N(50041, 'encoding', encoding, false, false, false);
                            J$.N(50049, 'length', length, false, false, false);
                            J$.N(50057, 'stream', stream, false, false, false);
                            var encoding = J$.W(49529, 'encoding', J$.M(49521, J$.C(2712, J$.G(49505, J$.G(49489, J$.R(49481, 'req', req, false, false), 'headers'), J$.T(49497, 'content-encoding', 21, false))) ? J$._() : J$.T(49513, 'identity', 21, false), 'toLowerCase', false)(), encoding, false, false);
                            var length = J$.W(49569, 'length', J$.G(49561, J$.G(49545, J$.R(49537, 'req', req, false, false), 'headers'), J$.T(49553, 'content-length', 21, false)), length, false, false);
                            var stream;
                            J$.F(49601, J$.R(49577, 'debug', debug, false, false), false)(J$.T(49585, 'content-encoding "%s"', 21, false), J$.R(49593, 'encoding', encoding, false, false));
                            if (J$.C(2728, J$.C(2720, J$.B(3610, '===', J$.R(49609, 'inflate', inflate, false, false), J$.T(49617, false, 23, false))) ? J$.B(3618, '!==', J$.R(49625, 'encoding', encoding, false, false), J$.T(49633, 'identity', 21, false)) : J$._())) {
                                throw J$.F(49689, J$.R(49641, 'createError', createError, false, true), false)(J$.T(49649, 415, 22, false), J$.T(49657, 'content encoding unsupported', 21, false), J$.T(49681, {
                                    encoding: J$.R(49665, 'encoding', encoding, false, false),
                                    type: J$.T(49673, 'encoding.unsupported', 21, false)
                                }, 11, false));
                            }
                            switch (J$.C1(2736, J$.R(49697, 'encoding', encoding, false, false))) {
                            case J$.C2(2744, J$.T(49777, 'deflate', 21, false)):
                                stream = J$.W(49721, 'stream', J$.M(49713, J$.R(49705, 'zlib', zlib, false, true), 'createInflate', false)(), stream, false, false);
                                J$.F(49745, J$.R(49729, 'debug', debug, false, false), false)(J$.T(49737, 'inflate body', 21, false));
                                J$.M(49769, J$.R(49753, 'req', req, false, false), 'pipe', false)(J$.R(49761, 'stream', stream, false, false));
                                break;
                            case J$.C2(2752, J$.T(49857, 'gzip', 21, false)):
                                stream = J$.W(49801, 'stream', J$.M(49793, J$.R(49785, 'zlib', zlib, false, true), 'createGunzip', false)(), stream, false, false);
                                J$.F(49825, J$.R(49809, 'debug', debug, false, false), false)(J$.T(49817, 'gunzip body', 21, false));
                                J$.M(49849, J$.R(49833, 'req', req, false, false), 'pipe', false)(J$.R(49841, 'stream', stream, false, false));
                                break;
                            case J$.C2(2760, J$.T(49905, 'identity', 21, false)):
                                stream = J$.W(49873, 'stream', J$.R(49865, 'req', req, false, false), stream, false, false);
                                J$.P(49897, J$.R(49881, 'stream', stream, false, false), 'length', J$.R(49889, 'length', length, false, false));
                                break;
                            default:
                                throw J$.F(49977, J$.R(49913, 'createError', createError, false, true), false)(J$.T(49921, 415, 22, false), J$.B(3634, '+', J$.B(3626, '+', J$.T(49929, 'unsupported content encoding "', 21, false), J$.R(49937, 'encoding', encoding, false, false)), J$.T(49945, '"', 21, false)), J$.T(49969, {
                                    encoding: J$.R(49953, 'encoding', encoding, false, false),
                                    type: J$.T(49961, 'encoding.unsupported', 21, false)
                                }, 11, false));
                            }
                            return J$.Rt(49993, J$.R(49985, 'stream', stream, false, false));
                        } catch (J$e) {
                            J$.Ex(50193, J$e);
                        } finally {
                            if (J$.Fr(50201))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(50073, 'createError', createError, false, false, false);
            J$.N(50081, 'getBody', getBody, false, false, false);
            J$.N(50089, 'iconv', iconv, false, false, false);
            J$.N(50097, 'onFinished', onFinished, false, false, false);
            J$.N(50105, 'zlib', zlib, false, false, false);
            read = J$.N(50121, 'read', J$.T(50113, read, 12, false), true, false, false);
            contentstream = J$.N(50137, 'contentstream', J$.T(50129, contentstream, 12, false), true, false, false);
            J$.T(47817, 'use strict', 21, false);
            var createError = J$.W(47849, 'createError', J$.F(47841, J$.I(typeof require === 'undefined' ? require = J$.R(47825, 'require', undefined, true, true) : require = J$.R(47825, 'require', require, true, true)), false)(J$.T(47833, 'http-errors', 21, false)), createError, false, true);
            var getBody = J$.W(47881, 'getBody', J$.F(47873, J$.I(typeof require === 'undefined' ? require = J$.R(47857, 'require', undefined, true, true) : require = J$.R(47857, 'require', require, true, true)), false)(J$.T(47865, 'raw-body', 21, false)), getBody, false, true);
            var iconv = J$.W(47913, 'iconv', J$.F(47905, J$.I(typeof require === 'undefined' ? require = J$.R(47889, 'require', undefined, true, true) : require = J$.R(47889, 'require', require, true, true)), false)(J$.T(47897, 'iconv-lite', 21, false)), iconv, false, true);
            var onFinished = J$.W(47945, 'onFinished', J$.F(47937, J$.I(typeof require === 'undefined' ? require = J$.R(47921, 'require', undefined, true, true) : require = J$.R(47921, 'require', require, true, true)), false)(J$.T(47929, 'on-finished', 21, false)), onFinished, false, true);
            var zlib = J$.W(47977, 'zlib', J$.F(47969, J$.I(typeof require === 'undefined' ? require = J$.R(47953, 'require', undefined, true, true) : require = J$.R(47953, 'require', require, true, true)), false)(J$.T(47961, 'zlib', 21, false)), zlib, false, true);
            J$.P(48001, J$.I(typeof module === 'undefined' ? module = J$.R(47985, 'module', undefined, true, true) : module = J$.R(47985, 'module', module, true, true)), 'exports', J$.R(47993, 'read', read, false, true));
        } catch (J$e) {
            J$.Ex(50209, J$e);
        } finally {
            if (J$.Sr(50217))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

