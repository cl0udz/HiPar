J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(3965697, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/body-parser/lib/read.js');
            function read(req, res, next, parse, debug, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3965009, arguments.callee, this, arguments);
                            arguments = J$.N(3965017, 'arguments', arguments, true, false, false);
                            req = J$.N(3965025, 'req', req, true, false, false);
                            res = J$.N(3965033, 'res', res, true, false, false);
                            next = J$.N(3965041, 'next', next, true, false, false);
                            parse = J$.N(3965049, 'parse', parse, true, false, false);
                            debug = J$.N(3965057, 'debug', debug, true, false, false);
                            options = J$.N(3965065, 'options', options, true, false, false);
                            J$.N(3965073, 'length', length, false, false, false);
                            J$.N(3965081, 'opts', opts, false, false, false);
                            J$.N(3965089, 'stream', stream, false, false, false);
                            J$.N(3965097, 'encoding', encoding, false, false, false);
                            J$.N(3965105, 'verify', verify, false, false, false);
                            var length;
                            var opts = J$.W(3963649, 'opts', J$.R(3963641, 'options', options, false, false), opts, false, false);
                            var stream;
                            J$.P(3963673, J$.R(3963657, 'req', req, false, false), '_body', J$.T(3963665, true, 23, false));
                            var encoding = J$.W(3963729, 'encoding', J$.C(208744, J$.B(386442, '!==', J$.G(3963689, J$.R(3963681, 'opts', opts, false, false), 'encoding'), J$.T(3963697, null, 25, false))) ? J$.G(3963713, J$.R(3963705, 'opts', opts, false, false), 'encoding') : J$.T(3963721, null, 25, false), encoding, false, false);
                            var verify = J$.W(3963753, 'verify', J$.G(3963745, J$.R(3963737, 'opts', opts, false, false), 'verify'), verify, false, false);
                            try {
                                stream = J$.W(3963809, 'stream', J$.F(3963801, J$.R(3963761, 'contentstream', contentstream, false, true), false)(J$.R(3963769, 'req', req, false, false), J$.R(3963777, 'debug', debug, false, false), J$.G(3963793, J$.R(3963785, 'opts', opts, false, false), 'inflate')), stream, false, false);
                                length = J$.W(3963833, 'length', J$.G(3963825, J$.R(3963817, 'stream', stream, false, false), 'length'), length, false, false);
                                J$.P(3963857, J$.R(3963841, 'stream', stream, false, false), 'length', J$.T(3963849, undefined, 24, false));
                            } catch (err) {
                                J$.N(3963897, 'err', err, false, false, true);
                                return J$.Rt(3963889, J$.F(3963881, J$.R(3963865, 'next', next, false, false), false)(J$.R(3963873, 'err', err, false, false)));
                            }
                            J$.P(3963921, J$.R(3963905, 'opts', opts, false, false), 'length', J$.R(3963913, 'length', length, false, false));
                            J$.P(3963961, J$.R(3963929, 'opts', opts, false, false), 'encoding', J$.C(208752, J$.R(3963937, 'verify', verify, false, false)) ? J$.T(3963945, null, 25, false) : J$.R(3963953, 'encoding', encoding, false, false));
                            if (J$.C(208776, J$.C(208768, J$.C(208760, J$.B(386450, '===', J$.G(3963977, J$.R(3963969, 'opts', opts, false, false), 'encoding'), J$.T(3963985, null, 25, false))) ? J$.B(386458, '!==', J$.R(3963993, 'encoding', encoding, false, false), J$.T(3964001, null, 25, false)) : J$._()) ? J$.U(386466, '!', J$.M(3964025, J$.R(3964009, 'iconv', iconv, false, true), 'encodingExists', false)(J$.R(3964017, 'encoding', encoding, false, false))) : J$._())) {
                                return J$.Rt(3964137, J$.F(3964129, J$.R(3964033, 'next', next, false, false), false)(J$.F(3964121, J$.R(3964041, 'createError', createError, false, true), false)(J$.T(3964049, 415, 22, false), J$.B(386482, '+', J$.B(386474, '+', J$.T(3964057, 'unsupported charset "', 21, false), J$.M(3964073, J$.R(3964065, 'encoding', encoding, false, false), 'toUpperCase', false)()), J$.T(3964081, '"', 21, false)), J$.T(3964113, {
                                    charset: J$.M(3964097, J$.R(3964089, 'encoding', encoding, false, false), 'toLowerCase', false)(),
                                    type: J$.T(3964105, 'charset.unsupported', 21, false)
                                }, 11, false))));
                            }
                            J$.F(3964161, J$.R(3964145, 'debug', debug, false, false), false)(J$.T(3964153, 'read body', 21, false));
                            J$.F(3965001, J$.R(3964169, 'getBody', getBody, false, true), false)(J$.R(3964177, 'stream', stream, false, false), J$.R(3964185, 'opts', opts, false, false), J$.T(3964993, function (error, body) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(3964945, arguments.callee, this, arguments);
                                            arguments = J$.N(3964953, 'arguments', arguments, true, false, false);
                                            error = J$.N(3964961, 'error', error, true, false, false);
                                            body = J$.N(3964969, 'body', body, true, false, false);
                                            J$.N(3964977, '_error', _error, false, false, false);
                                            J$.N(3964985, 'str', str, false, false, false);
                                            if (J$.C(208792, J$.R(3964193, 'error', error, false, false))) {
                                                var _error;
                                                if (J$.C(208784, J$.B(386490, '===', J$.G(3964209, J$.R(3964201, 'error', error, false, false), 'type'), J$.T(3964217, 'encoding.unsupported', 21, false)))) {
                                                    _error = J$.W(3964313, '_error', J$.F(3964305, J$.R(3964225, 'createError', createError, false, true), false)(J$.T(3964233, 415, 22, false), J$.B(386506, '+', J$.B(386498, '+', J$.T(3964241, 'unsupported charset "', 21, false), J$.M(3964257, J$.R(3964249, 'encoding', encoding, false, false), 'toUpperCase', false)()), J$.T(3964265, '"', 21, false)), J$.T(3964297, {
                                                        charset: J$.M(3964281, J$.R(3964273, 'encoding', encoding, false, false), 'toLowerCase', false)(),
                                                        type: J$.T(3964289, 'charset.unsupported', 21, false)
                                                    }, 11, false)), _error, false, false);
                                                } else {
                                                    _error = J$.W(3964353, '_error', J$.F(3964345, J$.R(3964321, 'createError', createError, false, true), false)(J$.T(3964329, 400, 22, false), J$.R(3964337, 'error', error, false, false)), _error, false, false);
                                                }
                                                J$.M(3964369, J$.R(3964361, 'stream', stream, false, false), 'resume', false)();
                                                J$.F(3964465, J$.R(3964377, 'onFinished', onFinished, false, true), false)(J$.R(3964385, 'req', req, false, false), J$.T(3964457, function onfinished() {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3964441, arguments.callee, this, arguments);
                                                                arguments = J$.N(3964449, 'arguments', arguments, true, false, false);
                                                                J$.F(3964433, J$.R(3964393, 'next', next, false, false), false)(J$.F(3964425, J$.R(3964401, 'createError', createError, false, true), false)(J$.T(3964409, 400, 22, false), J$.R(3964417, '_error', _error, false, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(3965777, J$e);
                                                            } finally {
                                                                if (J$.Fr(3965785))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(3964473, undefined);
                                            }
                                            if (J$.C(208808, J$.R(3964481, 'verify', verify, false, false))) {
                                                try {
                                                    J$.F(3964505, J$.R(3964489, 'debug', debug, false, false), false)(J$.T(3964497, 'verify body', 21, false));
                                                    J$.F(3964553, J$.R(3964513, 'verify', verify, false, false), false)(J$.R(3964521, 'req', req, false, false), J$.R(3964529, 'res', res, false, false), J$.R(3964537, 'body', body, false, false), J$.R(3964545, 'encoding', encoding, false, false));
                                                } catch (err) {
                                                    J$.N(3964657, 'err', err, false, false, true);
                                                    J$.F(3964641, J$.R(3964561, 'next', next, false, false), false)(J$.F(3964633, J$.R(3964569, 'createError', createError, false, true), false)(J$.T(3964577, 403, 22, false), J$.R(3964585, 'err', err, false, false), J$.T(3964625, {
                                                        body: J$.R(3964593, 'body', body, false, false),
                                                        type: J$.C(208800, J$.G(3964609, J$.R(3964601, 'err', err, false, false), 'type')) ? J$._() : J$.T(3964617, 'entity.verify.failed', 21, false)
                                                    }, 11, false)));
                                                    return J$.Rt(3964649, undefined);
                                                }
                                            }
                                            var str = J$.W(3964673, 'str', J$.R(3964665, 'body', body, false, false), str, false, false);
                                            try {
                                                J$.F(3964697, J$.R(3964681, 'debug', debug, false, false), false)(J$.T(3964689, 'parse body', 21, false));
                                                str = J$.W(3964777, 'str', J$.C(208824, J$.C(208816, J$.B(386522, '!==', J$.U(386514, 'typeof', J$.R(3964705, 'body', body, false, false)), J$.T(3964713, 'string', 21, false))) ? J$.B(386530, '!==', J$.R(3964721, 'encoding', encoding, false, false), J$.T(3964729, null, 25, false)) : J$._()) ? J$.M(3964761, J$.R(3964737, 'iconv', iconv, false, true), 'decode', false)(J$.R(3964745, 'body', body, false, false), J$.R(3964753, 'encoding', encoding, false, false)) : J$.R(3964769, 'body', body, false, false), str, false, false);
                                                J$.P(3964817, J$.R(3964785, 'req', req, false, false), 'body', J$.F(3964809, J$.R(3964793, 'parse', parse, false, false), false)(J$.R(3964801, 'str', str, false, false)));
                                            } catch (err) {
                                                J$.N(3964921, 'err', err, false, false, true);
                                                J$.F(3964905, J$.R(3964825, 'next', next, false, false), false)(J$.F(3964897, J$.R(3964833, 'createError', createError, false, true), false)(J$.T(3964841, 400, 22, false), J$.R(3964849, 'err', err, false, false), J$.T(3964889, {
                                                    body: J$.R(3964857, 'str', str, false, false),
                                                    type: J$.C(208832, J$.G(3964873, J$.R(3964865, 'err', err, false, false), 'type')) ? J$._() : J$.T(3964881, 'entity.parse.failed', 21, false)
                                                }, 11, false)));
                                                return J$.Rt(3964913, undefined);
                                            }
                                            J$.F(3964937, J$.R(3964929, 'next', next, false, false), false)();
                                        } catch (J$e) {
                                            J$.Ex(3965793, J$e);
                                        } finally {
                                            if (J$.Fr(3965801))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(3965809, J$e);
                        } finally {
                            if (J$.Fr(3965817))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function contentstream(req, debug, inflate) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3965633, arguments.callee, this, arguments);
                            arguments = J$.N(3965641, 'arguments', arguments, true, false, false);
                            req = J$.N(3965649, 'req', req, true, false, false);
                            debug = J$.N(3965657, 'debug', debug, true, false, false);
                            inflate = J$.N(3965665, 'inflate', inflate, true, false, false);
                            J$.N(3965673, 'encoding', encoding, false, false, false);
                            J$.N(3965681, 'length', length, false, false, false);
                            J$.N(3965689, 'stream', stream, false, false, false);
                            var encoding = J$.W(3965161, 'encoding', J$.M(3965153, J$.C(208840, J$.G(3965137, J$.G(3965121, J$.R(3965113, 'req', req, false, false), 'headers'), J$.T(3965129, 'content-encoding', 21, false))) ? J$._() : J$.T(3965145, 'identity', 21, false), 'toLowerCase', false)(), encoding, false, false);
                            var length = J$.W(3965201, 'length', J$.G(3965193, J$.G(3965177, J$.R(3965169, 'req', req, false, false), 'headers'), J$.T(3965185, 'content-length', 21, false)), length, false, false);
                            var stream;
                            J$.F(3965233, J$.R(3965209, 'debug', debug, false, false), false)(J$.T(3965217, 'content-encoding "%s"', 21, false), J$.R(3965225, 'encoding', encoding, false, false));
                            if (J$.C(208856, J$.C(208848, J$.B(386538, '===', J$.R(3965241, 'inflate', inflate, false, false), J$.T(3965249, false, 23, false))) ? J$.B(386546, '!==', J$.R(3965257, 'encoding', encoding, false, false), J$.T(3965265, 'identity', 21, false)) : J$._())) {
                                throw J$.F(3965321, J$.R(3965273, 'createError', createError, false, true), false)(J$.T(3965281, 415, 22, false), J$.T(3965289, 'content encoding unsupported', 21, false), J$.T(3965313, {
                                    encoding: J$.R(3965297, 'encoding', encoding, false, false),
                                    type: J$.T(3965305, 'encoding.unsupported', 21, false)
                                }, 11, false));
                            }
                            switch (J$.C1(208864, J$.R(3965329, 'encoding', encoding, false, false))) {
                            case J$.C2(208872, J$.T(3965409, 'deflate', 21, false)):
                                stream = J$.W(3965353, 'stream', J$.M(3965345, J$.R(3965337, 'zlib', zlib, false, true), 'createInflate', false)(), stream, false, false);
                                J$.F(3965377, J$.R(3965361, 'debug', debug, false, false), false)(J$.T(3965369, 'inflate body', 21, false));
                                J$.M(3965401, J$.R(3965385, 'req', req, false, false), 'pipe', false)(J$.R(3965393, 'stream', stream, false, false));
                                break;
                            case J$.C2(208880, J$.T(3965489, 'gzip', 21, false)):
                                stream = J$.W(3965433, 'stream', J$.M(3965425, J$.R(3965417, 'zlib', zlib, false, true), 'createGunzip', false)(), stream, false, false);
                                J$.F(3965457, J$.R(3965441, 'debug', debug, false, false), false)(J$.T(3965449, 'gunzip body', 21, false));
                                J$.M(3965481, J$.R(3965465, 'req', req, false, false), 'pipe', false)(J$.R(3965473, 'stream', stream, false, false));
                                break;
                            case J$.C2(208888, J$.T(3965537, 'identity', 21, false)):
                                stream = J$.W(3965505, 'stream', J$.R(3965497, 'req', req, false, false), stream, false, false);
                                J$.P(3965529, J$.R(3965513, 'stream', stream, false, false), 'length', J$.R(3965521, 'length', length, false, false));
                                break;
                            default:
                                throw J$.F(3965609, J$.R(3965545, 'createError', createError, false, true), false)(J$.T(3965553, 415, 22, false), J$.B(386562, '+', J$.B(386554, '+', J$.T(3965561, 'unsupported content encoding "', 21, false), J$.R(3965569, 'encoding', encoding, false, false)), J$.T(3965577, '"', 21, false)), J$.T(3965601, {
                                    encoding: J$.R(3965585, 'encoding', encoding, false, false),
                                    type: J$.T(3965593, 'encoding.unsupported', 21, false)
                                }, 11, false));
                            }
                            return J$.Rt(3965625, J$.R(3965617, 'stream', stream, false, false));
                        } catch (J$e) {
                            J$.Ex(3965825, J$e);
                        } finally {
                            if (J$.Fr(3965833))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3965705, 'createError', createError, false, false, false);
            J$.N(3965713, 'getBody', getBody, false, false, false);
            J$.N(3965721, 'iconv', iconv, false, false, false);
            J$.N(3965729, 'onFinished', onFinished, false, false, false);
            J$.N(3965737, 'zlib', zlib, false, false, false);
            read = J$.N(3965753, 'read', J$.T(3965745, read, 12, false), true, false, false);
            contentstream = J$.N(3965769, 'contentstream', J$.T(3965761, contentstream, 12, false), true, false, false);
            J$.T(3963449, 'use strict', 21, false);
            var createError = J$.W(3963481, 'createError', J$.F(3963473, J$.I(typeof require === 'undefined' ? require = J$.R(3963457, 'require', undefined, true, true) : require = J$.R(3963457, 'require', require, true, true)), false)(J$.T(3963465, 'http-errors', 21, false)), createError, false, true);
            var getBody = J$.W(3963513, 'getBody', J$.F(3963505, J$.I(typeof require === 'undefined' ? require = J$.R(3963489, 'require', undefined, true, true) : require = J$.R(3963489, 'require', require, true, true)), false)(J$.T(3963497, 'raw-body', 21, false)), getBody, false, true);
            var iconv = J$.W(3963545, 'iconv', J$.F(3963537, J$.I(typeof require === 'undefined' ? require = J$.R(3963521, 'require', undefined, true, true) : require = J$.R(3963521, 'require', require, true, true)), false)(J$.T(3963529, 'iconv-lite', 21, false)), iconv, false, true);
            var onFinished = J$.W(3963577, 'onFinished', J$.F(3963569, J$.I(typeof require === 'undefined' ? require = J$.R(3963553, 'require', undefined, true, true) : require = J$.R(3963553, 'require', require, true, true)), false)(J$.T(3963561, 'on-finished', 21, false)), onFinished, false, true);
            var zlib = J$.W(3963609, 'zlib', J$.F(3963601, J$.I(typeof require === 'undefined' ? require = J$.R(3963585, 'require', undefined, true, true) : require = J$.R(3963585, 'require', require, true, true)), false)(J$.T(3963593, 'zlib', 21, false)), zlib, false, true);
            J$.P(3963633, J$.I(typeof module === 'undefined' ? module = J$.R(3963617, 'module', undefined, true, true) : module = J$.R(3963617, 'module', module, true, true)), 'exports', J$.R(3963625, 'read', read, false, true));
        } catch (J$e) {
            J$.Ex(3965841, J$e);
        } finally {
            if (J$.Sr(3965849))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

