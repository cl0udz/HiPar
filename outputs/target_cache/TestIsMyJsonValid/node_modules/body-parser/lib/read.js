J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(7193, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/body-parser/lib/read.js');
            function read(req, res, next, parse, debug, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(6505, arguments.callee, this, arguments);
                            arguments = J$.N(6513, 'arguments', arguments, true, false, false);
                            req = J$.N(6521, 'req', req, true, false, false);
                            res = J$.N(6529, 'res', res, true, false, false);
                            next = J$.N(6537, 'next', next, true, false, false);
                            parse = J$.N(6545, 'parse', parse, true, false, false);
                            debug = J$.N(6553, 'debug', debug, true, false, false);
                            options = J$.N(6561, 'options', options, true, false, false);
                            J$.N(6569, 'length', length, false, false, false);
                            J$.N(6577, 'opts', opts, false, false, false);
                            J$.N(6585, 'stream', stream, false, false, false);
                            J$.N(6593, 'encoding', encoding, false, false, false);
                            J$.N(6601, 'verify', verify, false, false, false);
                            var length;
                            var opts = J$.W(5145, 'opts', J$.R(5137, 'options', options, false, false), opts, false, false);
                            var stream;
                            J$.P(5169, J$.R(5153, 'req', req, false, false), '_body', J$.T(5161, true, 23, false));
                            var encoding = J$.W(5225, 'encoding', J$.C(344, J$.B(394, '!==', J$.G(5185, J$.R(5177, 'opts', opts, false, false), 'encoding'), J$.T(5193, null, 25, false))) ? J$.G(5209, J$.R(5201, 'opts', opts, false, false), 'encoding') : J$.T(5217, null, 25, false), encoding, false, false);
                            var verify = J$.W(5249, 'verify', J$.G(5241, J$.R(5233, 'opts', opts, false, false), 'verify'), verify, false, false);
                            try {
                                stream = J$.W(5305, 'stream', J$.F(5297, J$.R(5257, 'contentstream', contentstream, false, true), false)(J$.R(5265, 'req', req, false, false), J$.R(5273, 'debug', debug, false, false), J$.G(5289, J$.R(5281, 'opts', opts, false, false), 'inflate')), stream, false, false);
                                length = J$.W(5329, 'length', J$.G(5321, J$.R(5313, 'stream', stream, false, false), 'length'), length, false, false);
                                J$.P(5353, J$.R(5337, 'stream', stream, false, false), 'length', J$.T(5345, undefined, 24, false));
                            } catch (err) {
                                J$.N(5393, 'err', err, false, false, true);
                                return J$.Rt(5385, J$.F(5377, J$.R(5361, 'next', next, false, false), false)(J$.R(5369, 'err', err, false, false)));
                            }
                            J$.P(5417, J$.R(5401, 'opts', opts, false, false), 'length', J$.R(5409, 'length', length, false, false));
                            J$.P(5457, J$.R(5425, 'opts', opts, false, false), 'encoding', J$.C(352, J$.R(5433, 'verify', verify, false, false)) ? J$.T(5441, null, 25, false) : J$.R(5449, 'encoding', encoding, false, false));
                            if (J$.C(376, J$.C(368, J$.C(360, J$.B(402, '===', J$.G(5473, J$.R(5465, 'opts', opts, false, false), 'encoding'), J$.T(5481, null, 25, false))) ? J$.B(410, '!==', J$.R(5489, 'encoding', encoding, false, false), J$.T(5497, null, 25, false)) : J$._()) ? J$.U(418, '!', J$.M(5521, J$.R(5505, 'iconv', iconv, false, true), 'encodingExists', false)(J$.R(5513, 'encoding', encoding, false, false))) : J$._())) {
                                return J$.Rt(5633, J$.F(5625, J$.R(5529, 'next', next, false, false), false)(J$.F(5617, J$.R(5537, 'createError', createError, false, true), false)(J$.T(5545, 415, 22, false), J$.B(434, '+', J$.B(426, '+', J$.T(5553, 'unsupported charset "', 21, false), J$.M(5569, J$.R(5561, 'encoding', encoding, false, false), 'toUpperCase', false)()), J$.T(5577, '"', 21, false)), J$.T(5609, {
                                    charset: J$.M(5593, J$.R(5585, 'encoding', encoding, false, false), 'toLowerCase', false)(),
                                    type: J$.T(5601, 'charset.unsupported', 21, false)
                                }, 11, false))));
                            }
                            J$.F(5657, J$.R(5641, 'debug', debug, false, false), false)(J$.T(5649, 'read body', 21, false));
                            J$.F(6497, J$.R(5665, 'getBody', getBody, false, true), false)(J$.R(5673, 'stream', stream, false, false), J$.R(5681, 'opts', opts, false, false), J$.T(6489, function (error, body) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(6441, arguments.callee, this, arguments);
                                            arguments = J$.N(6449, 'arguments', arguments, true, false, false);
                                            error = J$.N(6457, 'error', error, true, false, false);
                                            body = J$.N(6465, 'body', body, true, false, false);
                                            J$.N(6473, '_error', _error, false, false, false);
                                            J$.N(6481, 'str', str, false, false, false);
                                            if (J$.C(392, J$.R(5689, 'error', error, false, false))) {
                                                var _error;
                                                if (J$.C(384, J$.B(442, '===', J$.G(5705, J$.R(5697, 'error', error, false, false), 'type'), J$.T(5713, 'encoding.unsupported', 21, false)))) {
                                                    _error = J$.W(5809, '_error', J$.F(5801, J$.R(5721, 'createError', createError, false, true), false)(J$.T(5729, 415, 22, false), J$.B(458, '+', J$.B(450, '+', J$.T(5737, 'unsupported charset "', 21, false), J$.M(5753, J$.R(5745, 'encoding', encoding, false, false), 'toUpperCase', false)()), J$.T(5761, '"', 21, false)), J$.T(5793, {
                                                        charset: J$.M(5777, J$.R(5769, 'encoding', encoding, false, false), 'toLowerCase', false)(),
                                                        type: J$.T(5785, 'charset.unsupported', 21, false)
                                                    }, 11, false)), _error, false, false);
                                                } else {
                                                    _error = J$.W(5849, '_error', J$.F(5841, J$.R(5817, 'createError', createError, false, true), false)(J$.T(5825, 400, 22, false), J$.R(5833, 'error', error, false, false)), _error, false, false);
                                                }
                                                J$.M(5865, J$.R(5857, 'stream', stream, false, false), 'resume', false)();
                                                J$.F(5961, J$.R(5873, 'onFinished', onFinished, false, true), false)(J$.R(5881, 'req', req, false, false), J$.T(5953, function onfinished() {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(5937, arguments.callee, this, arguments);
                                                                arguments = J$.N(5945, 'arguments', arguments, true, false, false);
                                                                J$.F(5929, J$.R(5889, 'next', next, false, false), false)(J$.F(5921, J$.R(5897, 'createError', createError, false, true), false)(J$.T(5905, 400, 22, false), J$.R(5913, '_error', _error, false, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(7273, J$e);
                                                            } finally {
                                                                if (J$.Fr(7281))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(5969, undefined);
                                            }
                                            if (J$.C(408, J$.R(5977, 'verify', verify, false, false))) {
                                                try {
                                                    J$.F(6001, J$.R(5985, 'debug', debug, false, false), false)(J$.T(5993, 'verify body', 21, false));
                                                    J$.F(6049, J$.R(6009, 'verify', verify, false, false), false)(J$.R(6017, 'req', req, false, false), J$.R(6025, 'res', res, false, false), J$.R(6033, 'body', body, false, false), J$.R(6041, 'encoding', encoding, false, false));
                                                } catch (err) {
                                                    J$.N(6153, 'err', err, false, false, true);
                                                    J$.F(6137, J$.R(6057, 'next', next, false, false), false)(J$.F(6129, J$.R(6065, 'createError', createError, false, true), false)(J$.T(6073, 403, 22, false), J$.R(6081, 'err', err, false, false), J$.T(6121, {
                                                        body: J$.R(6089, 'body', body, false, false),
                                                        type: J$.C(400, J$.G(6105, J$.R(6097, 'err', err, false, false), 'type')) ? J$._() : J$.T(6113, 'entity.verify.failed', 21, false)
                                                    }, 11, false)));
                                                    return J$.Rt(6145, undefined);
                                                }
                                            }
                                            var str = J$.W(6169, 'str', J$.R(6161, 'body', body, false, false), str, false, false);
                                            try {
                                                J$.F(6193, J$.R(6177, 'debug', debug, false, false), false)(J$.T(6185, 'parse body', 21, false));
                                                str = J$.W(6273, 'str', J$.C(424, J$.C(416, J$.B(474, '!==', J$.U(466, 'typeof', J$.R(6201, 'body', body, false, false)), J$.T(6209, 'string', 21, false))) ? J$.B(482, '!==', J$.R(6217, 'encoding', encoding, false, false), J$.T(6225, null, 25, false)) : J$._()) ? J$.M(6257, J$.R(6233, 'iconv', iconv, false, true), 'decode', false)(J$.R(6241, 'body', body, false, false), J$.R(6249, 'encoding', encoding, false, false)) : J$.R(6265, 'body', body, false, false), str, false, false);
                                                J$.P(6313, J$.R(6281, 'req', req, false, false), 'body', J$.F(6305, J$.R(6289, 'parse', parse, false, false), false)(J$.R(6297, 'str', str, false, false)));
                                            } catch (err) {
                                                J$.N(6417, 'err', err, false, false, true);
                                                J$.F(6401, J$.R(6321, 'next', next, false, false), false)(J$.F(6393, J$.R(6329, 'createError', createError, false, true), false)(J$.T(6337, 400, 22, false), J$.R(6345, 'err', err, false, false), J$.T(6385, {
                                                    body: J$.R(6353, 'str', str, false, false),
                                                    type: J$.C(432, J$.G(6369, J$.R(6361, 'err', err, false, false), 'type')) ? J$._() : J$.T(6377, 'entity.parse.failed', 21, false)
                                                }, 11, false)));
                                                return J$.Rt(6409, undefined);
                                            }
                                            J$.F(6433, J$.R(6425, 'next', next, false, false), false)();
                                        } catch (J$e) {
                                            J$.Ex(7289, J$e);
                                        } finally {
                                            if (J$.Fr(7297))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7305, J$e);
                        } finally {
                            if (J$.Fr(7313))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function contentstream(req, debug, inflate) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(7129, arguments.callee, this, arguments);
                            arguments = J$.N(7137, 'arguments', arguments, true, false, false);
                            req = J$.N(7145, 'req', req, true, false, false);
                            debug = J$.N(7153, 'debug', debug, true, false, false);
                            inflate = J$.N(7161, 'inflate', inflate, true, false, false);
                            J$.N(7169, 'encoding', encoding, false, false, false);
                            J$.N(7177, 'length', length, false, false, false);
                            J$.N(7185, 'stream', stream, false, false, false);
                            var encoding = J$.W(6657, 'encoding', J$.M(6649, J$.C(440, J$.G(6633, J$.G(6617, J$.R(6609, 'req', req, false, false), 'headers'), J$.T(6625, 'content-encoding', 21, false))) ? J$._() : J$.T(6641, 'identity', 21, false), 'toLowerCase', false)(), encoding, false, false);
                            var length = J$.W(6697, 'length', J$.G(6689, J$.G(6673, J$.R(6665, 'req', req, false, false), 'headers'), J$.T(6681, 'content-length', 21, false)), length, false, false);
                            var stream;
                            J$.F(6729, J$.R(6705, 'debug', debug, false, false), false)(J$.T(6713, 'content-encoding "%s"', 21, false), J$.R(6721, 'encoding', encoding, false, false));
                            if (J$.C(456, J$.C(448, J$.B(490, '===', J$.R(6737, 'inflate', inflate, false, false), J$.T(6745, false, 23, false))) ? J$.B(498, '!==', J$.R(6753, 'encoding', encoding, false, false), J$.T(6761, 'identity', 21, false)) : J$._())) {
                                throw J$.F(6817, J$.R(6769, 'createError', createError, false, true), false)(J$.T(6777, 415, 22, false), J$.T(6785, 'content encoding unsupported', 21, false), J$.T(6809, {
                                    encoding: J$.R(6793, 'encoding', encoding, false, false),
                                    type: J$.T(6801, 'encoding.unsupported', 21, false)
                                }, 11, false));
                            }
                            switch (J$.C1(464, J$.R(6825, 'encoding', encoding, false, false))) {
                            case J$.C2(472, J$.T(6905, 'deflate', 21, false)):
                                stream = J$.W(6849, 'stream', J$.M(6841, J$.R(6833, 'zlib', zlib, false, true), 'createInflate', false)(), stream, false, false);
                                J$.F(6873, J$.R(6857, 'debug', debug, false, false), false)(J$.T(6865, 'inflate body', 21, false));
                                J$.M(6897, J$.R(6881, 'req', req, false, false), 'pipe', false)(J$.R(6889, 'stream', stream, false, false));
                                break;
                            case J$.C2(480, J$.T(6985, 'gzip', 21, false)):
                                stream = J$.W(6929, 'stream', J$.M(6921, J$.R(6913, 'zlib', zlib, false, true), 'createGunzip', false)(), stream, false, false);
                                J$.F(6953, J$.R(6937, 'debug', debug, false, false), false)(J$.T(6945, 'gunzip body', 21, false));
                                J$.M(6977, J$.R(6961, 'req', req, false, false), 'pipe', false)(J$.R(6969, 'stream', stream, false, false));
                                break;
                            case J$.C2(488, J$.T(7033, 'identity', 21, false)):
                                stream = J$.W(7001, 'stream', J$.R(6993, 'req', req, false, false), stream, false, false);
                                J$.P(7025, J$.R(7009, 'stream', stream, false, false), 'length', J$.R(7017, 'length', length, false, false));
                                break;
                            default:
                                throw J$.F(7105, J$.R(7041, 'createError', createError, false, true), false)(J$.T(7049, 415, 22, false), J$.B(514, '+', J$.B(506, '+', J$.T(7057, 'unsupported content encoding "', 21, false), J$.R(7065, 'encoding', encoding, false, false)), J$.T(7073, '"', 21, false)), J$.T(7097, {
                                    encoding: J$.R(7081, 'encoding', encoding, false, false),
                                    type: J$.T(7089, 'encoding.unsupported', 21, false)
                                }, 11, false));
                            }
                            return J$.Rt(7121, J$.R(7113, 'stream', stream, false, false));
                        } catch (J$e) {
                            J$.Ex(7321, J$e);
                        } finally {
                            if (J$.Fr(7329))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7201, 'createError', createError, false, false, false);
            J$.N(7209, 'getBody', getBody, false, false, false);
            J$.N(7217, 'iconv', iconv, false, false, false);
            J$.N(7225, 'onFinished', onFinished, false, false, false);
            J$.N(7233, 'zlib', zlib, false, false, false);
            read = J$.N(7249, 'read', J$.T(7241, read, 12, false), true, false, false);
            contentstream = J$.N(7265, 'contentstream', J$.T(7257, contentstream, 12, false), true, false, false);
            J$.T(4945, 'use strict', 21, false);
            var createError = J$.W(4977, 'createError', J$.F(4969, J$.I(typeof require === 'undefined' ? require = J$.R(4953, 'require', undefined, true, true) : require = J$.R(4953, 'require', require, true, true)), false)(J$.T(4961, 'http-errors', 21, false)), createError, false, true);
            var getBody = J$.W(5009, 'getBody', J$.F(5001, J$.I(typeof require === 'undefined' ? require = J$.R(4985, 'require', undefined, true, true) : require = J$.R(4985, 'require', require, true, true)), false)(J$.T(4993, 'raw-body', 21, false)), getBody, false, true);
            var iconv = J$.W(5041, 'iconv', J$.F(5033, J$.I(typeof require === 'undefined' ? require = J$.R(5017, 'require', undefined, true, true) : require = J$.R(5017, 'require', require, true, true)), false)(J$.T(5025, 'iconv-lite', 21, false)), iconv, false, true);
            var onFinished = J$.W(5073, 'onFinished', J$.F(5065, J$.I(typeof require === 'undefined' ? require = J$.R(5049, 'require', undefined, true, true) : require = J$.R(5049, 'require', require, true, true)), false)(J$.T(5057, 'on-finished', 21, false)), onFinished, false, true);
            var zlib = J$.W(5105, 'zlib', J$.F(5097, J$.I(typeof require === 'undefined' ? require = J$.R(5081, 'require', undefined, true, true) : require = J$.R(5081, 'require', require, true, true)), false)(J$.T(5089, 'zlib', 21, false)), zlib, false, true);
            J$.P(5129, J$.I(typeof module === 'undefined' ? module = J$.R(5113, 'module', undefined, true, true) : module = J$.R(5113, 'module', module, true, true)), 'exports', J$.R(5121, 'read', read, false, true));
        } catch (J$e) {
            J$.Ex(7337, J$e);
        } finally {
            if (J$.Sr(7345))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

