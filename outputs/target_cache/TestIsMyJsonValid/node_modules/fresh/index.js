J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(166873, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/fresh/index.js');
            function fresh(reqHeaders, resHeaders) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(166209, arguments.callee, this, arguments);
                            arguments = J$.N(166217, 'arguments', arguments, true, false, false);
                            reqHeaders = J$.N(166225, 'reqHeaders', reqHeaders, true, false, false);
                            resHeaders = J$.N(166233, 'resHeaders', resHeaders, true, false, false);
                            J$.N(166241, 'modifiedSince', modifiedSince, false, false, false);
                            J$.N(166249, 'noneMatch', noneMatch, false, false, false);
                            J$.N(166257, 'cacheControl', cacheControl, false, false, false);
                            J$.N(166265, 'etag', etag, false, false, false);
                            J$.N(166273, 'etagStale', etagStale, false, false, false);
                            J$.N(166281, 'matches', matches, false, false, false);
                            J$.N(166289, 'i', i, false, false, false);
                            J$.N(166297, 'match', match, false, false, false);
                            J$.N(166305, 'lastModified', lastModified, false, false, false);
                            J$.N(166313, 'modifiedStale', modifiedStale, false, false, false);
                            var modifiedSince = J$.W(165593, 'modifiedSince', J$.G(165585, J$.R(165569, 'reqHeaders', reqHeaders, false, false), J$.T(165577, 'if-modified-since', 21, false)), modifiedSince, false, false);
                            var noneMatch = J$.W(165625, 'noneMatch', J$.G(165617, J$.R(165601, 'reqHeaders', reqHeaders, false, false), J$.T(165609, 'if-none-match', 21, false)), noneMatch, false, false);
                            if (J$.C(10064, J$.C(10056, J$.U(13338, '!', J$.R(165633, 'modifiedSince', modifiedSince, false, false))) ? J$.U(13346, '!', J$.R(165641, 'noneMatch', noneMatch, false, false)) : J$._())) {
                                return J$.Rt(165657, J$.T(165649, false, 23, false));
                            }
                            var cacheControl = J$.W(165689, 'cacheControl', J$.G(165681, J$.R(165665, 'reqHeaders', reqHeaders, false, false), J$.T(165673, 'cache-control', 21, false)), cacheControl, false, false);
                            if (J$.C(10080, J$.C(10072, J$.R(165697, 'cacheControl', cacheControl, false, false)) ? J$.M(165721, J$.R(165705, 'CACHE_CONTROL_NO_CACHE_REGEXP', CACHE_CONTROL_NO_CACHE_REGEXP, false, true), 'test', false)(J$.R(165713, 'cacheControl', cacheControl, false, false)) : J$._())) {
                                return J$.Rt(165737, J$.T(165729, false, 23, false));
                            }
                            if (J$.C(10144, J$.C(10088, J$.R(165745, 'noneMatch', noneMatch, false, false)) ? J$.B(13354, '!==', J$.R(165753, 'noneMatch', noneMatch, false, false), J$.T(165761, '*', 21, false)) : J$._())) {
                                var etag = J$.W(165793, 'etag', J$.G(165785, J$.R(165769, 'resHeaders', resHeaders, false, false), J$.T(165777, 'etag', 21, false)), etag, false, false);
                                if (J$.C(10096, J$.U(13362, '!', J$.R(165801, 'etag', etag, false, false)))) {
                                    return J$.Rt(165817, J$.T(165809, false, 23, false));
                                }
                                var etagStale = J$.W(165833, 'etagStale', J$.T(165825, true, 23, false), etagStale, false, false);
                                var matches = J$.W(165865, 'matches', J$.F(165857, J$.R(165841, 'parseTokenList', parseTokenList, false, true), false)(J$.R(165849, 'noneMatch', noneMatch, false, false)), matches, false, false);
                                for (var i = J$.W(165881, 'i', J$.T(165873, 0, 22, false), i, false, false); J$.C(10128, J$.B(13370, '<', J$.R(165889, 'i', i, false, false), J$.G(165905, J$.R(165897, 'matches', matches, false, false), 'length'))); J$.B(13394, '-', i = J$.W(165921, 'i', J$.B(13386, '+', J$.U(13378, '+', J$.R(165913, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var match = J$.W(165953, 'match', J$.G(165945, J$.R(165929, 'matches', matches, false, false), J$.R(165937, 'i', i, false, false)), match, false, false);
                                    if (J$.C(10120, J$.C(10112, J$.C(10104, J$.B(13402, '===', J$.R(165961, 'match', match, false, false), J$.R(165969, 'etag', etag, false, false))) ? J$._() : J$.B(13418, '===', J$.R(165977, 'match', match, false, false), J$.B(13410, '+', J$.T(165985, 'W/', 21, false), J$.R(165993, 'etag', etag, false, false)))) ? J$._() : J$.B(13434, '===', J$.B(13426, '+', J$.T(166001, 'W/', 21, false), J$.R(166009, 'match', match, false, false)), J$.R(166017, 'etag', etag, false, false)))) {
                                        etagStale = J$.W(166033, 'etagStale', J$.T(166025, false, 23, false), etagStale, false, false);
                                        break;
                                    }
                                }
                                if (J$.C(10136, J$.R(166041, 'etagStale', etagStale, false, false))) {
                                    return J$.Rt(166057, J$.T(166049, false, 23, false));
                                }
                            }
                            if (J$.C(10168, J$.R(166065, 'modifiedSince', modifiedSince, false, false))) {
                                var lastModified = J$.W(166097, 'lastModified', J$.G(166089, J$.R(166073, 'resHeaders', resHeaders, false, false), J$.T(166081, 'last-modified', 21, false)), lastModified, false, false);
                                var modifiedStale = J$.W(166161, 'modifiedStale', J$.C(10152, J$.U(13442, '!', J$.R(166105, 'lastModified', lastModified, false, false))) ? J$._() : J$.U(13458, '!', J$.B(13450, '<=', J$.F(166129, J$.R(166113, 'parseHttpDate', parseHttpDate, false, true), false)(J$.R(166121, 'lastModified', lastModified, false, false)), J$.F(166153, J$.R(166137, 'parseHttpDate', parseHttpDate, false, true), false)(J$.R(166145, 'modifiedSince', modifiedSince, false, false)))), modifiedStale, false, false);
                                if (J$.C(10160, J$.R(166169, 'modifiedStale', modifiedStale, false, false))) {
                                    return J$.Rt(166185, J$.T(166177, false, 23, false));
                                }
                            }
                            return J$.Rt(166201, J$.T(166193, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(166937, J$e);
                        } finally {
                            if (J$.Fr(166945))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseHttpDate(date) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(166401, arguments.callee, this, arguments);
                            arguments = J$.N(166409, 'arguments', arguments, true, false, false);
                            date = J$.N(166417, 'date', date, true, false, false);
                            J$.N(166425, 'timestamp', timestamp, false, false, false);
                            var timestamp = J$.W(166353, 'timestamp', J$.C(10176, J$.R(166321, 'date', date, false, false)) ? J$.M(166345, J$.I(typeof Date === 'undefined' ? Date = J$.R(166329, 'Date', undefined, true, true) : Date = J$.R(166329, 'Date', Date, true, true)), 'parse', false)(J$.R(166337, 'date', date, false, false)) : J$._(), timestamp, false, false);
                            return J$.Rt(166393, J$.C(10184, J$.B(13474, '===', J$.U(13466, 'typeof', J$.R(166361, 'timestamp', timestamp, false, false)), J$.T(166369, 'number', 21, false))) ? J$.R(166377, 'timestamp', timestamp, false, false) : J$.T(166385, NaN, 22, false));
                        } catch (J$e) {
                            J$.Ex(166953, J$e);
                        } finally {
                            if (J$.Fr(166961))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseTokenList(str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(166809, arguments.callee, this, arguments);
                            arguments = J$.N(166817, 'arguments', arguments, true, false, false);
                            str = J$.N(166825, 'str', str, true, false, false);
                            J$.N(166833, 'end', end, false, false, false);
                            J$.N(166841, 'list', list, false, false, false);
                            J$.N(166849, 'start', start, false, false, false);
                            J$.N(166857, 'i', i, false, false, false);
                            J$.N(166865, 'len', len, false, false, false);
                            var end = J$.W(166441, 'end', J$.T(166433, 0, 22, false), end, false, false);
                            var list = J$.W(166457, 'list', J$.T(166449, [], 10, false), list, false, false);
                            var start = J$.W(166473, 'start', J$.T(166465, 0, 22, false), start, false, false);
                            for (var i = J$.W(166505, 'i', J$.T(166481, 0, 22, false), i, false, false), len = J$.W(166513, 'len', J$.G(166497, J$.R(166489, 'str', str, false, false), 'length'), len, false, false); J$.C(10224, J$.B(13482, '<', J$.R(166521, 'i', i, false, false), J$.R(166529, 'len', len, false, false))); J$.B(13506, '-', i = J$.W(166545, 'i', J$.B(13498, '+', J$.U(13490, '+', J$.R(166537, 'i', i, false, false)), 1), i, false, false), 1)) {
                                switch (J$.C1(10200, J$.M(166569, J$.R(166553, 'str', str, false, false), 'charCodeAt', false)(J$.R(166561, 'i', i, false, false)))) {
                                case J$.C2(10208, J$.T(166625, 32, 22, false)):
                                    if (J$.C(10192, J$.B(13514, '===', J$.R(166577, 'start', start, false, false), J$.R(166585, 'end', end, false, false)))) {
                                        start = J$.W(166617, 'start', end = J$.W(166609, 'end', J$.B(13522, '+', J$.R(166593, 'i', i, false, false), J$.T(166601, 1, 22, false)), end, false, false), start, false, false);
                                    }
                                    break;
                                case J$.C2(10216, J$.T(166713, 44, 22, false)):
                                    J$.M(166673, J$.R(166633, 'list', list, false, false), 'push', false)(J$.M(166665, J$.R(166641, 'str', str, false, false), 'substring', false)(J$.R(166649, 'start', start, false, false), J$.R(166657, 'end', end, false, false)));
                                    start = J$.W(166705, 'start', end = J$.W(166697, 'end', J$.B(13530, '+', J$.R(166681, 'i', i, false, false), J$.T(166689, 1, 22, false)), end, false, false), start, false, false);
                                    break;
                                default:
                                    end = J$.W(166737, 'end', J$.B(13538, '+', J$.R(166721, 'i', i, false, false), J$.T(166729, 1, 22, false)), end, false, false);
                                    break;
                                }
                            }
                            J$.M(166785, J$.R(166745, 'list', list, false, false), 'push', false)(J$.M(166777, J$.R(166753, 'str', str, false, false), 'substring', false)(J$.R(166761, 'start', start, false, false), J$.R(166769, 'end', end, false, false)));
                            return J$.Rt(166801, J$.R(166793, 'list', list, false, false));
                        } catch (J$e) {
                            J$.Ex(166969, J$e);
                        } finally {
                            if (J$.Fr(166977))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(166881, 'CACHE_CONTROL_NO_CACHE_REGEXP', CACHE_CONTROL_NO_CACHE_REGEXP, false, false, false);
            fresh = J$.N(166897, 'fresh', J$.T(166889, fresh, 12, false), true, false, false);
            parseHttpDate = J$.N(166913, 'parseHttpDate', J$.T(166905, parseHttpDate, 12, false), true, false, false);
            parseTokenList = J$.N(166929, 'parseTokenList', J$.T(166921, parseTokenList, 12, false), true, false, false);
            J$.T(165497, 'use strict', 21, false);
            J$.F(165521, J$.I(typeof require === 'undefined' ? require = J$.R(165505, 'require', undefined, true, true) : require = J$.R(165505, 'require', require, true, true)), false)(J$.T(165513, 'core-js/modules/es.date.to-string', 21, false));
            var CACHE_CONTROL_NO_CACHE_REGEXP = J$.W(165537, 'CACHE_CONTROL_NO_CACHE_REGEXP', J$.T(165529, /(?:^|,)\s*?no-cache\s*?(?:,|$)/, 14, false), CACHE_CONTROL_NO_CACHE_REGEXP, false, true);
            J$.P(165561, J$.I(typeof module === 'undefined' ? module = J$.R(165545, 'module', undefined, true, true) : module = J$.R(165545, 'module', module, true, true)), 'exports', J$.R(165553, 'fresh', fresh, false, true));
        } catch (J$e) {
            J$.Ex(166985, J$e);
        } finally {
            if (J$.Sr(166993))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

