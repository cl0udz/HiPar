J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(4082505, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/fresh/index.js');
            function fresh(reqHeaders, resHeaders) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4081841, arguments.callee, this, arguments);
                            arguments = J$.N(4081849, 'arguments', arguments, true, false, false);
                            reqHeaders = J$.N(4081857, 'reqHeaders', reqHeaders, true, false, false);
                            resHeaders = J$.N(4081865, 'resHeaders', resHeaders, true, false, false);
                            J$.N(4081873, 'modifiedSince', modifiedSince, false, false, false);
                            J$.N(4081881, 'noneMatch', noneMatch, false, false, false);
                            J$.N(4081889, 'cacheControl', cacheControl, false, false, false);
                            J$.N(4081897, 'etag', etag, false, false, false);
                            J$.N(4081905, 'etagStale', etagStale, false, false, false);
                            J$.N(4081913, 'matches', matches, false, false, false);
                            J$.N(4081921, 'i', i, false, false, false);
                            J$.N(4081929, 'match', match, false, false, false);
                            J$.N(4081937, 'lastModified', lastModified, false, false, false);
                            J$.N(4081945, 'modifiedStale', modifiedStale, false, false, false);
                            var modifiedSince = J$.W(4081225, 'modifiedSince', J$.G(4081217, J$.R(4081201, 'reqHeaders', reqHeaders, false, false), J$.T(4081209, 'if-modified-since', 21, false)), modifiedSince, false, false);
                            var noneMatch = J$.W(4081257, 'noneMatch', J$.G(4081249, J$.R(4081233, 'reqHeaders', reqHeaders, false, false), J$.T(4081241, 'if-none-match', 21, false)), noneMatch, false, false);
                            if (J$.C(216192, J$.C(216184, J$.U(396266, '!', J$.R(4081265, 'modifiedSince', modifiedSince, false, false))) ? J$.U(396274, '!', J$.R(4081273, 'noneMatch', noneMatch, false, false)) : J$._())) {
                                return J$.Rt(4081289, J$.T(4081281, false, 23, false));
                            }
                            var cacheControl = J$.W(4081321, 'cacheControl', J$.G(4081313, J$.R(4081297, 'reqHeaders', reqHeaders, false, false), J$.T(4081305, 'cache-control', 21, false)), cacheControl, false, false);
                            if (J$.C(216208, J$.C(216200, J$.R(4081329, 'cacheControl', cacheControl, false, false)) ? J$.M(4081353, J$.R(4081337, 'CACHE_CONTROL_NO_CACHE_REGEXP', CACHE_CONTROL_NO_CACHE_REGEXP, false, true), 'test', false)(J$.R(4081345, 'cacheControl', cacheControl, false, false)) : J$._())) {
                                return J$.Rt(4081369, J$.T(4081361, false, 23, false));
                            }
                            if (J$.C(216272, J$.C(216216, J$.R(4081377, 'noneMatch', noneMatch, false, false)) ? J$.B(396282, '!==', J$.R(4081385, 'noneMatch', noneMatch, false, false), J$.T(4081393, '*', 21, false)) : J$._())) {
                                var etag = J$.W(4081425, 'etag', J$.G(4081417, J$.R(4081401, 'resHeaders', resHeaders, false, false), J$.T(4081409, 'etag', 21, false)), etag, false, false);
                                if (J$.C(216224, J$.U(396290, '!', J$.R(4081433, 'etag', etag, false, false)))) {
                                    return J$.Rt(4081449, J$.T(4081441, false, 23, false));
                                }
                                var etagStale = J$.W(4081465, 'etagStale', J$.T(4081457, true, 23, false), etagStale, false, false);
                                var matches = J$.W(4081497, 'matches', J$.F(4081489, J$.R(4081473, 'parseTokenList', parseTokenList, false, true), false)(J$.R(4081481, 'noneMatch', noneMatch, false, false)), matches, false, false);
                                for (var i = J$.W(4081513, 'i', J$.T(4081505, 0, 22, false), i, false, false); J$.C(216256, J$.B(396298, '<', J$.R(4081521, 'i', i, false, false), J$.G(4081537, J$.R(4081529, 'matches', matches, false, false), 'length'))); J$.B(396322, '-', i = J$.W(4081553, 'i', J$.B(396314, '+', J$.U(396306, '+', J$.R(4081545, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var match = J$.W(4081585, 'match', J$.G(4081577, J$.R(4081561, 'matches', matches, false, false), J$.R(4081569, 'i', i, false, false)), match, false, false);
                                    if (J$.C(216248, J$.C(216240, J$.C(216232, J$.B(396330, '===', J$.R(4081593, 'match', match, false, false), J$.R(4081601, 'etag', etag, false, false))) ? J$._() : J$.B(396346, '===', J$.R(4081609, 'match', match, false, false), J$.B(396338, '+', J$.T(4081617, 'W/', 21, false), J$.R(4081625, 'etag', etag, false, false)))) ? J$._() : J$.B(396362, '===', J$.B(396354, '+', J$.T(4081633, 'W/', 21, false), J$.R(4081641, 'match', match, false, false)), J$.R(4081649, 'etag', etag, false, false)))) {
                                        etagStale = J$.W(4081665, 'etagStale', J$.T(4081657, false, 23, false), etagStale, false, false);
                                        break;
                                    }
                                }
                                if (J$.C(216264, J$.R(4081673, 'etagStale', etagStale, false, false))) {
                                    return J$.Rt(4081689, J$.T(4081681, false, 23, false));
                                }
                            }
                            if (J$.C(216296, J$.R(4081697, 'modifiedSince', modifiedSince, false, false))) {
                                var lastModified = J$.W(4081729, 'lastModified', J$.G(4081721, J$.R(4081705, 'resHeaders', resHeaders, false, false), J$.T(4081713, 'last-modified', 21, false)), lastModified, false, false);
                                var modifiedStale = J$.W(4081793, 'modifiedStale', J$.C(216280, J$.U(396370, '!', J$.R(4081737, 'lastModified', lastModified, false, false))) ? J$._() : J$.U(396386, '!', J$.B(396378, '<=', J$.F(4081761, J$.R(4081745, 'parseHttpDate', parseHttpDate, false, true), false)(J$.R(4081753, 'lastModified', lastModified, false, false)), J$.F(4081785, J$.R(4081769, 'parseHttpDate', parseHttpDate, false, true), false)(J$.R(4081777, 'modifiedSince', modifiedSince, false, false)))), modifiedStale, false, false);
                                if (J$.C(216288, J$.R(4081801, 'modifiedStale', modifiedStale, false, false))) {
                                    return J$.Rt(4081817, J$.T(4081809, false, 23, false));
                                }
                            }
                            return J$.Rt(4081833, J$.T(4081825, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(4082569, J$e);
                        } finally {
                            if (J$.Fr(4082577))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseHttpDate(date) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4082033, arguments.callee, this, arguments);
                            arguments = J$.N(4082041, 'arguments', arguments, true, false, false);
                            date = J$.N(4082049, 'date', date, true, false, false);
                            J$.N(4082057, 'timestamp', timestamp, false, false, false);
                            var timestamp = J$.W(4081985, 'timestamp', J$.C(216304, J$.R(4081953, 'date', date, false, false)) ? J$.M(4081977, J$.I(typeof Date === 'undefined' ? Date = J$.R(4081961, 'Date', undefined, true, true) : Date = J$.R(4081961, 'Date', Date, true, true)), 'parse', false)(J$.R(4081969, 'date', date, false, false)) : J$._(), timestamp, false, false);
                            return J$.Rt(4082025, J$.C(216312, J$.B(396402, '===', J$.U(396394, 'typeof', J$.R(4081993, 'timestamp', timestamp, false, false)), J$.T(4082001, 'number', 21, false))) ? J$.R(4082009, 'timestamp', timestamp, false, false) : J$.T(4082017, NaN, 22, false));
                        } catch (J$e) {
                            J$.Ex(4082585, J$e);
                        } finally {
                            if (J$.Fr(4082593))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseTokenList(str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4082441, arguments.callee, this, arguments);
                            arguments = J$.N(4082449, 'arguments', arguments, true, false, false);
                            str = J$.N(4082457, 'str', str, true, false, false);
                            J$.N(4082465, 'end', end, false, false, false);
                            J$.N(4082473, 'list', list, false, false, false);
                            J$.N(4082481, 'start', start, false, false, false);
                            J$.N(4082489, 'i', i, false, false, false);
                            J$.N(4082497, 'len', len, false, false, false);
                            var end = J$.W(4082073, 'end', J$.T(4082065, 0, 22, false), end, false, false);
                            var list = J$.W(4082089, 'list', J$.T(4082081, [], 10, false), list, false, false);
                            var start = J$.W(4082105, 'start', J$.T(4082097, 0, 22, false), start, false, false);
                            for (var i = J$.W(4082137, 'i', J$.T(4082113, 0, 22, false), i, false, false), len = J$.W(4082145, 'len', J$.G(4082129, J$.R(4082121, 'str', str, false, false), 'length'), len, false, false); J$.C(216352, J$.B(396410, '<', J$.R(4082153, 'i', i, false, false), J$.R(4082161, 'len', len, false, false))); J$.B(396434, '-', i = J$.W(4082177, 'i', J$.B(396426, '+', J$.U(396418, '+', J$.R(4082169, 'i', i, false, false)), 1), i, false, false), 1)) {
                                switch (J$.C1(216328, J$.M(4082201, J$.R(4082185, 'str', str, false, false), 'charCodeAt', false)(J$.R(4082193, 'i', i, false, false)))) {
                                case J$.C2(216336, J$.T(4082257, 32, 22, false)):
                                    if (J$.C(216320, J$.B(396442, '===', J$.R(4082209, 'start', start, false, false), J$.R(4082217, 'end', end, false, false)))) {
                                        start = J$.W(4082249, 'start', end = J$.W(4082241, 'end', J$.B(396450, '+', J$.R(4082225, 'i', i, false, false), J$.T(4082233, 1, 22, false)), end, false, false), start, false, false);
                                    }
                                    break;
                                case J$.C2(216344, J$.T(4082345, 44, 22, false)):
                                    J$.M(4082305, J$.R(4082265, 'list', list, false, false), 'push', false)(J$.M(4082297, J$.R(4082273, 'str', str, false, false), 'substring', false)(J$.R(4082281, 'start', start, false, false), J$.R(4082289, 'end', end, false, false)));
                                    start = J$.W(4082337, 'start', end = J$.W(4082329, 'end', J$.B(396458, '+', J$.R(4082313, 'i', i, false, false), J$.T(4082321, 1, 22, false)), end, false, false), start, false, false);
                                    break;
                                default:
                                    end = J$.W(4082369, 'end', J$.B(396466, '+', J$.R(4082353, 'i', i, false, false), J$.T(4082361, 1, 22, false)), end, false, false);
                                    break;
                                }
                            }
                            J$.M(4082417, J$.R(4082377, 'list', list, false, false), 'push', false)(J$.M(4082409, J$.R(4082385, 'str', str, false, false), 'substring', false)(J$.R(4082393, 'start', start, false, false), J$.R(4082401, 'end', end, false, false)));
                            return J$.Rt(4082433, J$.R(4082425, 'list', list, false, false));
                        } catch (J$e) {
                            J$.Ex(4082601, J$e);
                        } finally {
                            if (J$.Fr(4082609))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4082513, 'CACHE_CONTROL_NO_CACHE_REGEXP', CACHE_CONTROL_NO_CACHE_REGEXP, false, false, false);
            fresh = J$.N(4082529, 'fresh', J$.T(4082521, fresh, 12, false), true, false, false);
            parseHttpDate = J$.N(4082545, 'parseHttpDate', J$.T(4082537, parseHttpDate, 12, false), true, false, false);
            parseTokenList = J$.N(4082561, 'parseTokenList', J$.T(4082553, parseTokenList, 12, false), true, false, false);
            J$.T(4081129, 'use strict', 21, false);
            J$.F(4081153, J$.I(typeof require === 'undefined' ? require = J$.R(4081137, 'require', undefined, true, true) : require = J$.R(4081137, 'require', require, true, true)), false)(J$.T(4081145, 'core-js/modules/es.date.to-string', 21, false));
            var CACHE_CONTROL_NO_CACHE_REGEXP = J$.W(4081169, 'CACHE_CONTROL_NO_CACHE_REGEXP', J$.T(4081161, /(?:^|,)\s*?no-cache\s*?(?:,|$)/, 14, false), CACHE_CONTROL_NO_CACHE_REGEXP, false, true);
            J$.P(4081193, J$.I(typeof module === 'undefined' ? module = J$.R(4081177, 'module', undefined, true, true) : module = J$.R(4081177, 'module', module, true, true)), 'exports', J$.R(4081185, 'fresh', fresh, false, true));
        } catch (J$e) {
            J$.Ex(4082617, J$e);
        } finally {
            if (J$.Sr(4082625))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

