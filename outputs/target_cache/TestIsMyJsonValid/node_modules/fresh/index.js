J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(124001, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/fresh/index.js');
            function fresh(reqHeaders, resHeaders) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(123337, arguments.callee, this, arguments);
                            arguments = J$.N(123345, 'arguments', arguments, true, false, false);
                            reqHeaders = J$.N(123353, 'reqHeaders', reqHeaders, true, false, false);
                            resHeaders = J$.N(123361, 'resHeaders', resHeaders, true, false, false);
                            J$.N(123369, 'modifiedSince', modifiedSince, false, false, false);
                            J$.N(123377, 'noneMatch', noneMatch, false, false, false);
                            J$.N(123385, 'cacheControl', cacheControl, false, false, false);
                            J$.N(123393, 'etag', etag, false, false, false);
                            J$.N(123401, 'etagStale', etagStale, false, false, false);
                            J$.N(123409, 'matches', matches, false, false, false);
                            J$.N(123417, 'i', i, false, false, false);
                            J$.N(123425, 'match', match, false, false, false);
                            J$.N(123433, 'lastModified', lastModified, false, false, false);
                            J$.N(123441, 'modifiedStale', modifiedStale, false, false, false);
                            var modifiedSince = J$.W(122721, 'modifiedSince', J$.G(122713, J$.R(122697, 'reqHeaders', reqHeaders, false, false), J$.T(122705, 'if-modified-since', 21, false)), modifiedSince, false, false);
                            var noneMatch = J$.W(122753, 'noneMatch', J$.G(122745, J$.R(122729, 'reqHeaders', reqHeaders, false, false), J$.T(122737, 'if-none-match', 21, false)), noneMatch, false, false);
                            if (J$.C(7792, J$.C(7784, J$.U(10218, '!', J$.R(122761, 'modifiedSince', modifiedSince, false, false))) ? J$.U(10226, '!', J$.R(122769, 'noneMatch', noneMatch, false, false)) : J$._())) {
                                return J$.Rt(122785, J$.T(122777, false, 23, false));
                            }
                            var cacheControl = J$.W(122817, 'cacheControl', J$.G(122809, J$.R(122793, 'reqHeaders', reqHeaders, false, false), J$.T(122801, 'cache-control', 21, false)), cacheControl, false, false);
                            if (J$.C(7808, J$.C(7800, J$.R(122825, 'cacheControl', cacheControl, false, false)) ? J$.M(122849, J$.R(122833, 'CACHE_CONTROL_NO_CACHE_REGEXP', CACHE_CONTROL_NO_CACHE_REGEXP, false, true), 'test', false)(J$.R(122841, 'cacheControl', cacheControl, false, false)) : J$._())) {
                                return J$.Rt(122865, J$.T(122857, false, 23, false));
                            }
                            if (J$.C(7872, J$.C(7816, J$.R(122873, 'noneMatch', noneMatch, false, false)) ? J$.B(10234, '!==', J$.R(122881, 'noneMatch', noneMatch, false, false), J$.T(122889, '*', 21, false)) : J$._())) {
                                var etag = J$.W(122921, 'etag', J$.G(122913, J$.R(122897, 'resHeaders', resHeaders, false, false), J$.T(122905, 'etag', 21, false)), etag, false, false);
                                if (J$.C(7824, J$.U(10242, '!', J$.R(122929, 'etag', etag, false, false)))) {
                                    return J$.Rt(122945, J$.T(122937, false, 23, false));
                                }
                                var etagStale = J$.W(122961, 'etagStale', J$.T(122953, true, 23, false), etagStale, false, false);
                                var matches = J$.W(122993, 'matches', J$.F(122985, J$.R(122969, 'parseTokenList', parseTokenList, false, true), false)(J$.R(122977, 'noneMatch', noneMatch, false, false)), matches, false, false);
                                for (var i = J$.W(123009, 'i', J$.T(123001, 0, 22, false), i, false, false); J$.C(7856, J$.B(10250, '<', J$.R(123017, 'i', i, false, false), J$.G(123033, J$.R(123025, 'matches', matches, false, false), 'length'))); J$.B(10274, '-', i = J$.W(123049, 'i', J$.B(10266, '+', J$.U(10258, '+', J$.R(123041, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var match = J$.W(123081, 'match', J$.G(123073, J$.R(123057, 'matches', matches, false, false), J$.R(123065, 'i', i, false, false)), match, false, false);
                                    if (J$.C(7848, J$.C(7840, J$.C(7832, J$.B(10282, '===', J$.R(123089, 'match', match, false, false), J$.R(123097, 'etag', etag, false, false))) ? J$._() : J$.B(10298, '===', J$.R(123105, 'match', match, false, false), J$.B(10290, '+', J$.T(123113, 'W/', 21, false), J$.R(123121, 'etag', etag, false, false)))) ? J$._() : J$.B(10314, '===', J$.B(10306, '+', J$.T(123129, 'W/', 21, false), J$.R(123137, 'match', match, false, false)), J$.R(123145, 'etag', etag, false, false)))) {
                                        etagStale = J$.W(123161, 'etagStale', J$.T(123153, false, 23, false), etagStale, false, false);
                                        break;
                                    }
                                }
                                if (J$.C(7864, J$.R(123169, 'etagStale', etagStale, false, false))) {
                                    return J$.Rt(123185, J$.T(123177, false, 23, false));
                                }
                            }
                            if (J$.C(7896, J$.R(123193, 'modifiedSince', modifiedSince, false, false))) {
                                var lastModified = J$.W(123225, 'lastModified', J$.G(123217, J$.R(123201, 'resHeaders', resHeaders, false, false), J$.T(123209, 'last-modified', 21, false)), lastModified, false, false);
                                var modifiedStale = J$.W(123289, 'modifiedStale', J$.C(7880, J$.U(10322, '!', J$.R(123233, 'lastModified', lastModified, false, false))) ? J$._() : J$.U(10338, '!', J$.B(10330, '<=', J$.F(123257, J$.R(123241, 'parseHttpDate', parseHttpDate, false, true), false)(J$.R(123249, 'lastModified', lastModified, false, false)), J$.F(123281, J$.R(123265, 'parseHttpDate', parseHttpDate, false, true), false)(J$.R(123273, 'modifiedSince', modifiedSince, false, false)))), modifiedStale, false, false);
                                if (J$.C(7888, J$.R(123297, 'modifiedStale', modifiedStale, false, false))) {
                                    return J$.Rt(123313, J$.T(123305, false, 23, false));
                                }
                            }
                            return J$.Rt(123329, J$.T(123321, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(124065, J$e);
                        } finally {
                            if (J$.Fr(124073))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseHttpDate(date) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(123529, arguments.callee, this, arguments);
                            arguments = J$.N(123537, 'arguments', arguments, true, false, false);
                            date = J$.N(123545, 'date', date, true, false, false);
                            J$.N(123553, 'timestamp', timestamp, false, false, false);
                            var timestamp = J$.W(123481, 'timestamp', J$.C(7904, J$.R(123449, 'date', date, false, false)) ? J$.M(123473, J$.I(typeof Date === 'undefined' ? Date = J$.R(123457, 'Date', undefined, true, true) : Date = J$.R(123457, 'Date', Date, true, true)), 'parse', false)(J$.R(123465, 'date', date, false, false)) : J$._(), timestamp, false, false);
                            return J$.Rt(123521, J$.C(7912, J$.B(10354, '===', J$.U(10346, 'typeof', J$.R(123489, 'timestamp', timestamp, false, false)), J$.T(123497, 'number', 21, false))) ? J$.R(123505, 'timestamp', timestamp, false, false) : J$.T(123513, NaN, 22, false));
                        } catch (J$e) {
                            J$.Ex(124081, J$e);
                        } finally {
                            if (J$.Fr(124089))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseTokenList(str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(123937, arguments.callee, this, arguments);
                            arguments = J$.N(123945, 'arguments', arguments, true, false, false);
                            str = J$.N(123953, 'str', str, true, false, false);
                            J$.N(123961, 'end', end, false, false, false);
                            J$.N(123969, 'list', list, false, false, false);
                            J$.N(123977, 'start', start, false, false, false);
                            J$.N(123985, 'i', i, false, false, false);
                            J$.N(123993, 'len', len, false, false, false);
                            var end = J$.W(123569, 'end', J$.T(123561, 0, 22, false), end, false, false);
                            var list = J$.W(123585, 'list', J$.T(123577, [], 10, false), list, false, false);
                            var start = J$.W(123601, 'start', J$.T(123593, 0, 22, false), start, false, false);
                            for (var i = J$.W(123633, 'i', J$.T(123609, 0, 22, false), i, false, false), len = J$.W(123641, 'len', J$.G(123625, J$.R(123617, 'str', str, false, false), 'length'), len, false, false); J$.C(7952, J$.B(10362, '<', J$.R(123649, 'i', i, false, false), J$.R(123657, 'len', len, false, false))); J$.B(10386, '-', i = J$.W(123673, 'i', J$.B(10378, '+', J$.U(10370, '+', J$.R(123665, 'i', i, false, false)), 1), i, false, false), 1)) {
                                switch (J$.C1(7928, J$.M(123697, J$.R(123681, 'str', str, false, false), 'charCodeAt', false)(J$.R(123689, 'i', i, false, false)))) {
                                case J$.C2(7936, J$.T(123753, 32, 22, false)):
                                    if (J$.C(7920, J$.B(10394, '===', J$.R(123705, 'start', start, false, false), J$.R(123713, 'end', end, false, false)))) {
                                        start = J$.W(123745, 'start', end = J$.W(123737, 'end', J$.B(10402, '+', J$.R(123721, 'i', i, false, false), J$.T(123729, 1, 22, false)), end, false, false), start, false, false);
                                    }
                                    break;
                                case J$.C2(7944, J$.T(123841, 44, 22, false)):
                                    J$.M(123801, J$.R(123761, 'list', list, false, false), 'push', false)(J$.M(123793, J$.R(123769, 'str', str, false, false), 'substring', false)(J$.R(123777, 'start', start, false, false), J$.R(123785, 'end', end, false, false)));
                                    start = J$.W(123833, 'start', end = J$.W(123825, 'end', J$.B(10410, '+', J$.R(123809, 'i', i, false, false), J$.T(123817, 1, 22, false)), end, false, false), start, false, false);
                                    break;
                                default:
                                    end = J$.W(123865, 'end', J$.B(10418, '+', J$.R(123849, 'i', i, false, false), J$.T(123857, 1, 22, false)), end, false, false);
                                    break;
                                }
                            }
                            J$.M(123913, J$.R(123873, 'list', list, false, false), 'push', false)(J$.M(123905, J$.R(123881, 'str', str, false, false), 'substring', false)(J$.R(123889, 'start', start, false, false), J$.R(123897, 'end', end, false, false)));
                            return J$.Rt(123929, J$.R(123921, 'list', list, false, false));
                        } catch (J$e) {
                            J$.Ex(124097, J$e);
                        } finally {
                            if (J$.Fr(124105))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(124009, 'CACHE_CONTROL_NO_CACHE_REGEXP', CACHE_CONTROL_NO_CACHE_REGEXP, false, false, false);
            fresh = J$.N(124025, 'fresh', J$.T(124017, fresh, 12, false), true, false, false);
            parseHttpDate = J$.N(124041, 'parseHttpDate', J$.T(124033, parseHttpDate, 12, false), true, false, false);
            parseTokenList = J$.N(124057, 'parseTokenList', J$.T(124049, parseTokenList, 12, false), true, false, false);
            J$.T(122625, 'use strict', 21, false);
            J$.F(122649, J$.I(typeof require === 'undefined' ? require = J$.R(122633, 'require', undefined, true, true) : require = J$.R(122633, 'require', require, true, true)), false)(J$.T(122641, 'core-js/modules/es.date.to-string', 21, false));
            var CACHE_CONTROL_NO_CACHE_REGEXP = J$.W(122665, 'CACHE_CONTROL_NO_CACHE_REGEXP', J$.T(122657, /(?:^|,)\s*?no-cache\s*?(?:,|$)/, 14, false), CACHE_CONTROL_NO_CACHE_REGEXP, false, true);
            J$.P(122689, J$.I(typeof module === 'undefined' ? module = J$.R(122673, 'module', undefined, true, true) : module = J$.R(122673, 'module', module, true, true)), 'exports', J$.R(122681, 'fresh', fresh, false, true));
        } catch (J$e) {
            J$.Ex(124113, J$e);
        } finally {
            if (J$.Sr(124121))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

