J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(3297, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/array-flatten/array-flatten.js');
            function flattenWithDepth(array, result, depth) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2873, arguments.callee, this, arguments);
                            arguments = J$.N(2881, 'arguments', arguments, true, false, false);
                            array = J$.N(2889, 'array', array, true, false, false);
                            result = J$.N(2897, 'result', result, true, false, false);
                            depth = J$.N(2905, 'depth', depth, true, false, false);
                            J$.N(2913, 'i', i, false, false, false);
                            J$.N(2921, 'value', value, false, false, false);
                            for (var i = J$.W(2665, 'i', J$.T(2657, 0, 22, false), i, false, false); J$.C(240, J$.B(290, '<', J$.R(2673, 'i', i, false, false), J$.G(2689, J$.R(2681, 'array', array, false, false), 'length'))); J$.B(314, '-', i = J$.W(2705, 'i', J$.B(306, '+', J$.U(298, '+', J$.R(2697, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var value = J$.W(2737, 'value', J$.G(2729, J$.R(2713, 'array', array, false, false), J$.R(2721, 'i', i, false, false)), value, false, false);
                                if (J$.C(232, J$.C(224, J$.B(322, '>', J$.R(2745, 'depth', depth, false, false), J$.T(2753, 0, 22, false))) ? J$.M(2777, J$.I(typeof Array === 'undefined' ? Array = J$.R(2761, 'Array', undefined, true, true) : Array = J$.R(2761, 'Array', Array, true, true)), 'isArray', false)(J$.R(2769, 'value', value, false, false)) : J$._())) {
                                    J$.F(2825, J$.R(2785, 'flattenWithDepth', flattenWithDepth, false, true), false)(J$.R(2793, 'value', value, false, false), J$.R(2801, 'result', result, false, false), J$.B(330, '-', J$.R(2809, 'depth', depth, false, false), J$.T(2817, 1, 22, false)));
                                } else {
                                    J$.M(2849, J$.R(2833, 'result', result, false, false), 'push', false)(J$.R(2841, 'value', value, false, false));
                                }
                            }
                            return J$.Rt(2865, J$.R(2857, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3353, J$e);
                        } finally {
                            if (J$.Fr(3361))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function flattenForever(array, result) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3113, arguments.callee, this, arguments);
                            arguments = J$.N(3121, 'arguments', arguments, true, false, false);
                            array = J$.N(3129, 'array', array, true, false, false);
                            result = J$.N(3137, 'result', result, true, false, false);
                            J$.N(3145, 'i', i, false, false, false);
                            J$.N(3153, 'value', value, false, false, false);
                            for (var i = J$.W(2937, 'i', J$.T(2929, 0, 22, false), i, false, false); J$.C(256, J$.B(338, '<', J$.R(2945, 'i', i, false, false), J$.G(2961, J$.R(2953, 'array', array, false, false), 'length'))); J$.B(362, '-', i = J$.W(2977, 'i', J$.B(354, '+', J$.U(346, '+', J$.R(2969, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var value = J$.W(3009, 'value', J$.G(3001, J$.R(2985, 'array', array, false, false), J$.R(2993, 'i', i, false, false)), value, false, false);
                                if (J$.C(248, J$.M(3033, J$.I(typeof Array === 'undefined' ? Array = J$.R(3017, 'Array', undefined, true, true) : Array = J$.R(3017, 'Array', Array, true, true)), 'isArray', false)(J$.R(3025, 'value', value, false, false)))) {
                                    J$.F(3065, J$.R(3041, 'flattenForever', flattenForever, false, true), false)(J$.R(3049, 'value', value, false, false), J$.R(3057, 'result', result, false, false));
                                } else {
                                    J$.M(3089, J$.R(3073, 'result', result, false, false), 'push', false)(J$.R(3081, 'value', value, false, false));
                                }
                            }
                            return J$.Rt(3105, J$.R(3097, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3369, J$e);
                        } finally {
                            if (J$.Fr(3377))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function arrayFlatten(array, depth) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3265, arguments.callee, this, arguments);
                            arguments = J$.N(3273, 'arguments', arguments, true, false, false);
                            array = J$.N(3281, 'array', array, true, false, false);
                            depth = J$.N(3289, 'depth', depth, true, false, false);
                            if (J$.C(264, J$.B(370, '==', J$.R(3161, 'depth', depth, false, false), J$.T(3169, null, 25, false)))) {
                                return J$.Rt(3209, J$.F(3201, J$.R(3177, 'flattenForever', flattenForever, false, true), false)(J$.R(3185, 'array', array, false, false), J$.T(3193, [], 10, false)));
                            }
                            return J$.Rt(3257, J$.F(3249, J$.R(3217, 'flattenWithDepth', flattenWithDepth, false, true), false)(J$.R(3225, 'array', array, false, false), J$.T(3233, [], 10, false), J$.R(3241, 'depth', depth, false, false)));
                        } catch (J$e) {
                            J$.Ex(3385, J$e);
                        } finally {
                            if (J$.Fr(3393))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            flattenWithDepth = J$.N(3313, 'flattenWithDepth', J$.T(3305, flattenWithDepth, 12, false), true, false, false);
            flattenForever = J$.N(3329, 'flattenForever', J$.T(3321, flattenForever, 12, false), true, false, false);
            arrayFlatten = J$.N(3345, 'arrayFlatten', J$.T(3337, arrayFlatten, 12, false), true, false, false);
            J$.T(2601, 'use strict', 21, false);
            J$.F(2625, J$.I(typeof require === 'undefined' ? require = J$.R(2609, 'require', undefined, true, true) : require = J$.R(2609, 'require', require, true, true)), false)(J$.T(2617, 'core-js/modules/es.array.is-array', 21, false));
            J$.P(2649, J$.I(typeof module === 'undefined' ? module = J$.R(2633, 'module', undefined, true, true) : module = J$.R(2633, 'module', module, true, true)), 'exports', J$.R(2641, 'arrayFlatten', arrayFlatten, false, true));
        } catch (J$e) {
            J$.Ex(3401, J$e);
        } finally {
            if (J$.Sr(3409))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

