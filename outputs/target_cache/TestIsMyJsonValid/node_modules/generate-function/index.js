J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(128377, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/generate-function/index.js');
            J$.N(128385, 'util', util, false, false, false);
            J$.N(128393, 'isProperty', isProperty, false, false, false);
            J$.N(128401, 'INDENT_START', INDENT_START, false, false, false);
            J$.N(128409, 'INDENT_END', INDENT_END, false, false, false);
            J$.N(128417, 'RESERVED', RESERVED, false, false, false);
            J$.N(128425, 'RESERVED_MAP', RESERVED_MAP, false, false, false);
            J$.N(128433, 'i', i, false, false, false);
            J$.N(128441, 'isVariable', isVariable, false, false, false);
            J$.N(128449, 'formats', formats, false, false, false);
            J$.N(128457, 'genfun', genfun, false, false, false);
            J$.T(124761, 'use strict', 21, false);
            J$.F(124785, J$.I(typeof require === 'undefined' ? require = J$.R(124769, 'require', undefined, true, true) : require = J$.R(124769, 'require', require, true, true)), false)(J$.T(124777, 'core-js/modules/es.array.concat', 21, false));
            J$.F(124809, J$.I(typeof require === 'undefined' ? require = J$.R(124793, 'require', undefined, true, true) : require = J$.R(124793, 'require', require, true, true)), false)(J$.T(124801, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(124833, J$.I(typeof require === 'undefined' ? require = J$.R(124817, 'require', undefined, true, true) : require = J$.R(124817, 'require', require, true, true)), false)(J$.T(124825, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(124857, J$.I(typeof require === 'undefined' ? require = J$.R(124841, 'require', undefined, true, true) : require = J$.R(124841, 'require', require, true, true)), false)(J$.T(124849, 'core-js/modules/es.array.join', 21, false));
            J$.F(124881, J$.I(typeof require === 'undefined' ? require = J$.R(124865, 'require', undefined, true, true) : require = J$.R(124865, 'require', require, true, true)), false)(J$.T(124873, 'core-js/modules/es.array.map', 21, false));
            J$.F(124905, J$.I(typeof require === 'undefined' ? require = J$.R(124889, 'require', undefined, true, true) : require = J$.R(124889, 'require', require, true, true)), false)(J$.T(124897, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(124929, J$.I(typeof require === 'undefined' ? require = J$.R(124913, 'require', undefined, true, true) : require = J$.R(124913, 'require', require, true, true)), false)(J$.T(124921, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(124953, J$.I(typeof require === 'undefined' ? require = J$.R(124937, 'require', undefined, true, true) : require = J$.R(124937, 'require', require, true, true)), false)(J$.T(124945, 'core-js/modules/es.object.keys', 21, false));
            J$.F(124977, J$.I(typeof require === 'undefined' ? require = J$.R(124961, 'require', undefined, true, true) : require = J$.R(124961, 'require', require, true, true)), false)(J$.T(124969, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(125001, J$.I(typeof require === 'undefined' ? require = J$.R(124985, 'require', undefined, true, true) : require = J$.R(124985, 'require', require, true, true)), false)(J$.T(124993, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(125025, J$.I(typeof require === 'undefined' ? require = J$.R(125009, 'require', undefined, true, true) : require = J$.R(125009, 'require', require, true, true)), false)(J$.T(125017, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(125049, J$.I(typeof require === 'undefined' ? require = J$.R(125033, 'require', undefined, true, true) : require = J$.R(125033, 'require', require, true, true)), false)(J$.T(125041, 'core-js/modules/es.string.split', 21, false));
            J$.F(125073, J$.I(typeof require === 'undefined' ? require = J$.R(125057, 'require', undefined, true, true) : require = J$.R(125057, 'require', require, true, true)), false)(J$.T(125065, 'core-js/modules/es.string.trim', 21, false));
            J$.F(125097, J$.I(typeof require === 'undefined' ? require = J$.R(125081, 'require', undefined, true, true) : require = J$.R(125081, 'require', require, true, true)), false)(J$.T(125089, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var util = J$.W(125129, 'util', J$.F(125121, J$.I(typeof require === 'undefined' ? require = J$.R(125105, 'require', undefined, true, true) : require = J$.R(125105, 'require', require, true, true)), false)(J$.T(125113, 'util', 21, false)), util, false, true);
            var isProperty = J$.W(125161, 'isProperty', J$.F(125153, J$.I(typeof require === 'undefined' ? require = J$.R(125137, 'require', undefined, true, true) : require = J$.R(125137, 'require', require, true, true)), false)(J$.T(125145, 'is-property', 21, false)), isProperty, false, true);
            var INDENT_START = J$.W(125177, 'INDENT_START', J$.T(125169, /[\{\[]/, 14, false), INDENT_START, false, true);
            var INDENT_END = J$.W(125193, 'INDENT_END', J$.T(125185, /[\}\]]/, 14, false), INDENT_END, false, true);
            var RESERVED = J$.W(125609, 'RESERVED', J$.T(125601, [
                J$.T(125201, 'do', 21, false),
                J$.T(125209, 'if', 21, false),
                J$.T(125217, 'in', 21, false),
                J$.T(125225, 'for', 21, false),
                J$.T(125233, 'let', 21, false),
                J$.T(125241, 'new', 21, false),
                J$.T(125249, 'try', 21, false),
                J$.T(125257, 'var', 21, false),
                J$.T(125265, 'case', 21, false),
                J$.T(125273, 'else', 21, false),
                J$.T(125281, 'enum', 21, false),
                J$.T(125289, 'eval', 21, false),
                J$.T(125297, 'null', 21, false),
                J$.T(125305, 'this', 21, false),
                J$.T(125313, 'true', 21, false),
                J$.T(125321, 'void', 21, false),
                J$.T(125329, 'with', 21, false),
                J$.T(125337, 'await', 21, false),
                J$.T(125345, 'break', 21, false),
                J$.T(125353, 'catch', 21, false),
                J$.T(125361, 'class', 21, false),
                J$.T(125369, 'const', 21, false),
                J$.T(125377, 'false', 21, false),
                J$.T(125385, 'super', 21, false),
                J$.T(125393, 'throw', 21, false),
                J$.T(125401, 'while', 21, false),
                J$.T(125409, 'yield', 21, false),
                J$.T(125417, 'delete', 21, false),
                J$.T(125425, 'export', 21, false),
                J$.T(125433, 'import', 21, false),
                J$.T(125441, 'public', 21, false),
                J$.T(125449, 'return', 21, false),
                J$.T(125457, 'static', 21, false),
                J$.T(125465, 'switch', 21, false),
                J$.T(125473, 'typeof', 21, false),
                J$.T(125481, 'default', 21, false),
                J$.T(125489, 'extends', 21, false),
                J$.T(125497, 'finally', 21, false),
                J$.T(125505, 'package', 21, false),
                J$.T(125513, 'private', 21, false),
                J$.T(125521, 'continue', 21, false),
                J$.T(125529, 'debugger', 21, false),
                J$.T(125537, 'function', 21, false),
                J$.T(125545, 'arguments', 21, false),
                J$.T(125553, 'interface', 21, false),
                J$.T(125561, 'protected', 21, false),
                J$.T(125569, 'implements', 21, false),
                J$.T(125577, 'instanceof', 21, false),
                J$.T(125585, 'NaN', 21, false),
                J$.T(125593, 'undefined', 21, false)
            ], 10, false), RESERVED, false, true);
            var RESERVED_MAP = J$.W(125625, 'RESERVED_MAP', J$.T(125617, {}, 11, false), RESERVED_MAP, false, true);
            for (var i = J$.W(125641, 'i', J$.T(125633, 0, 22, false), i, false, true); J$.C(7960, J$.B(10434, '<', J$.R(125649, 'i', i, false, true), J$.G(125665, J$.R(125657, 'RESERVED', RESERVED, false, true), 'length'))); J$.B(10458, '-', i = J$.W(125681, 'i', J$.B(10450, '+', J$.U(10442, '+', J$.R(125673, 'i', i, false, true)), 1), i, false, true), 1)) {
                J$.P(125729, J$.R(125689, 'RESERVED_MAP', RESERVED_MAP, false, true), J$.G(125713, J$.R(125697, 'RESERVED', RESERVED, false, true), J$.R(125705, 'i', i, false, true)), J$.T(125721, true, 23, false));
            }
            var isVariable = J$.W(125825, 'isVariable', J$.T(125817, function isVariable(name) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(125793, arguments.callee, this, arguments);
                            arguments = J$.N(125801, 'arguments', arguments, true, false, false);
                            name = J$.N(125809, 'name', name, true, false, false);
                            return J$.Rt(125785, J$.C(7968, J$.F(125753, J$.R(125737, 'isProperty', isProperty, false, true), false)(J$.R(125745, 'name', name, false, false))) ? J$.U(10466, '!', J$.M(125777, J$.R(125761, 'RESERVED_MAP', RESERVED_MAP, false, true), 'hasOwnProperty', false)(J$.R(125769, 'name', name, false, false))) : J$._());
                        } catch (J$e) {
                            J$.Ex(128465, J$e);
                        } finally {
                            if (J$.Fr(128473))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), isVariable, false, true);
            var formats = J$.W(126033, 'formats', J$.T(126025, {
                s: J$.T(125881, function s(_s) {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.Fe(125857, arguments.callee, this, arguments);
                                arguments = J$.N(125865, 'arguments', arguments, true, false, false);
                                _s = J$.N(125873, '_s', _s, true, false, false);
                                return J$.Rt(125849, J$.B(10474, '+', J$.T(125833, '', 21, false), J$.R(125841, '_s', _s, false, false)));
                            } catch (J$e) {
                                J$.Ex(128481, J$e);
                            } finally {
                                if (J$.Fr(128489))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                d: J$.T(125953, function d(_d) {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(125929, arguments.callee, this, arguments);
                                arguments = J$.N(125937, 'arguments', arguments, true, false, false);
                                _d = J$.N(125945, '_d', _d, true, false, false);
                                return J$.Rt(125921, J$.B(10482, '+', J$.T(125889, '', 21, false), J$.F(125913, J$.I(typeof Number === 'undefined' ? Number = J$.R(125897, 'Number', undefined, true, true) : Number = J$.R(125897, 'Number', Number, true, true)), false)(J$.R(125905, '_d', _d, false, false))));
                            } catch (J$e) {
                                J$.Ex(128497, J$e);
                            } finally {
                                if (J$.Fr(128505))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                o: J$.T(126017, function o(_o) {
                    jalangiLabel3:
                        while (true) {
                            try {
                                J$.Fe(125993, arguments.callee, this, arguments);
                                arguments = J$.N(126001, 'arguments', arguments, true, false, false);
                                _o = J$.N(126009, '_o', _o, true, false, false);
                                return J$.Rt(125985, J$.M(125977, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(125961, 'JSON', undefined, true, true) : JSON = J$.R(125961, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(125969, '_o', _o, false, false)));
                            } catch (J$e) {
                                J$.Ex(128513, J$e);
                            } finally {
                                if (J$.Fr(128521))
                                    continue jalangiLabel3;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), formats, false, true);
            var genfun = J$.W(128321, 'genfun', J$.T(128313, function genfun() {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(128249, arguments.callee, this, arguments);
                            arguments = J$.N(128257, 'arguments', arguments, true, false, false);
                            J$.N(128265, 'lines', lines, false, false, false);
                            J$.N(128273, 'indent', indent, false, false, false);
                            J$.N(128281, 'vars', vars, false, false, false);
                            J$.N(128289, 'push', push, false, false, false);
                            J$.N(128297, 'pushLine', pushLine, false, false, false);
                            J$.N(128305, 'line', line, false, false, false);
                            var lines = J$.W(126049, 'lines', J$.T(126041, [], 10, false), lines, false, false);
                            var indent = J$.W(126065, 'indent', J$.T(126057, 0, 22, false), indent, false, false);
                            var vars = J$.W(126081, 'vars', J$.T(126073, {}, 11, false), vars, false, false);
                            var push = J$.W(126233, 'push', J$.T(126225, function push(str) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(126193, arguments.callee, this, arguments);
                                            arguments = J$.N(126201, 'arguments', arguments, true, false, false);
                                            str = J$.N(126209, 'str', str, true, false, false);
                                            J$.N(126217, 'spaces', spaces, false, false, false);
                                            var spaces = J$.W(126097, 'spaces', J$.T(126089, '', 21, false), spaces, false, false);
                                            while (J$.C(7976, J$.B(10498, '<', J$.G(126113, J$.R(126105, 'spaces', spaces, false, false), 'length'), J$.B(10490, '*', J$.R(126121, 'indent', indent, false, false), J$.T(126129, 2, 22, false))))) {
                                                spaces = J$.W(126153, 'spaces', J$.B(10506, '+', J$.R(126145, 'spaces', spaces, false, false), J$.T(126137, '  ', 21, false)), spaces, false, false);
                                            }
                                            J$.M(126185, J$.R(126161, 'lines', lines, false, false), 'push', false)(J$.B(10514, '+', J$.R(126169, 'spaces', spaces, false, false), J$.R(126177, 'str', str, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(128529, J$e);
                                        } finally {
                                            if (J$.Fr(128537))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), push, false, false);
                            var pushLine = J$.W(126665, 'pushLine', J$.T(126657, function pushLine(line) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(126633, arguments.callee, this, arguments);
                                            arguments = J$.N(126641, 'arguments', arguments, true, false, false);
                                            line = J$.N(126649, 'line', line, true, false, false);
                                            if (J$.C(7992, J$.C(7984, J$.M(126281, J$.R(126241, 'INDENT_END', INDENT_END, false, true), 'test', false)(J$.G(126273, J$.M(126257, J$.R(126249, 'line', line, false, false), 'trim', false)(), J$.T(126265, 0, 22, false)))) ? J$.M(126337, J$.R(126289, 'INDENT_START', INDENT_START, false, true), 'test', false)(J$.G(126329, J$.R(126297, 'line', line, false, false), J$.B(10522, '-', J$.G(126313, J$.R(126305, 'line', line, false, false), 'length'), J$.T(126321, 1, 22, false)))) : J$._())) {
                                                J$.B(10546, '+', indent = J$.W(126353, 'indent', J$.B(10538, '-', J$.U(10530, '+', J$.R(126345, 'indent', indent, false, false)), 1), indent, false, false), 1);
                                                J$.F(126377, J$.R(126361, 'push', push, false, false), false)(J$.R(126369, 'line', line, false, false));
                                                J$.B(10570, '-', indent = J$.W(126393, 'indent', J$.B(10562, '+', J$.U(10554, '+', J$.R(126385, 'indent', indent, false, false)), 1), indent, false, false), 1);
                                                return J$.Rt(126401, undefined);
                                            }
                                            if (J$.C(8000, J$.M(126457, J$.R(126409, 'INDENT_START', INDENT_START, false, true), 'test', false)(J$.G(126449, J$.R(126417, 'line', line, false, false), J$.B(10578, '-', J$.G(126433, J$.R(126425, 'line', line, false, false), 'length'), J$.T(126441, 1, 22, false)))))) {
                                                J$.F(126481, J$.R(126465, 'push', push, false, false), false)(J$.R(126473, 'line', line, false, false));
                                                J$.B(10602, '-', indent = J$.W(126497, 'indent', J$.B(10594, '+', J$.U(10586, '+', J$.R(126489, 'indent', indent, false, false)), 1), indent, false, false), 1);
                                                return J$.Rt(126505, undefined);
                                            }
                                            if (J$.C(8008, J$.M(126553, J$.R(126513, 'INDENT_END', INDENT_END, false, true), 'test', false)(J$.G(126545, J$.M(126529, J$.R(126521, 'line', line, false, false), 'trim', false)(), J$.T(126537, 0, 22, false))))) {
                                                J$.B(10626, '+', indent = J$.W(126569, 'indent', J$.B(10618, '-', J$.U(10610, '+', J$.R(126561, 'indent', indent, false, false)), 1), indent, false, false), 1);
                                                J$.F(126593, J$.R(126577, 'push', push, false, false), false)(J$.R(126585, 'line', line, false, false));
                                                return J$.Rt(126601, undefined);
                                            }
                                            J$.F(126625, J$.R(126609, 'push', push, false, false), false)(J$.R(126617, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(128545, J$e);
                                        } finally {
                                            if (J$.Fr(128553))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), pushLine, false, false);
                            var line = J$.W(127017, 'line', J$.T(127009, function line(fmt) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(126969, arguments.callee, this, arguments);
                                            arguments = J$.N(126977, 'arguments', arguments, true, false, false);
                                            fmt = J$.N(126985, 'fmt', fmt, true, false, false);
                                            J$.N(126993, 'lines', lines, false, false, false);
                                            J$.N(127001, 'i', i, false, false, false);
                                            if (J$.C(8016, J$.U(10634, '!', J$.R(126673, 'fmt', fmt, false, false))))
                                                return J$.Rt(126689, J$.R(126681, 'line', line, false, false));
                                            if (J$.C(8040, J$.C(8024, J$.B(10642, '===', J$.G(126705, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(126697, 'arguments', undefined, true, true) : arguments = J$.R(126697, 'arguments', arguments, true, true)), 'length'), J$.T(126713, 1, 22, false))) ? J$.B(10658, '>', J$.M(126737, J$.R(126721, 'fmt', fmt, false, false), 'indexOf', false)(J$.T(126729, '\n', 21, false)), J$.U(10650, '-', J$.T(126745, 1, 22, false))) : J$._())) {
                                                var lines = J$.W(126785, 'lines', J$.M(126777, J$.M(126761, J$.R(126753, 'fmt', fmt, false, false), 'trim', false)(), 'split', false)(J$.T(126769, '\n', 21, false)), lines, false, false);
                                                for (var i = J$.W(126801, 'i', J$.T(126793, 0, 22, false), i, false, false); J$.C(8032, J$.B(10666, '<', J$.R(126809, 'i', i, false, false), J$.G(126825, J$.R(126817, 'lines', lines, false, false), 'length'))); J$.B(10690, '-', i = J$.W(126841, 'i', J$.B(10682, '+', J$.U(10674, '+', J$.R(126833, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                    J$.F(126889, J$.R(126849, 'pushLine', pushLine, false, false), false)(J$.M(126881, J$.G(126873, J$.R(126857, 'lines', lines, false, false), J$.R(126865, 'i', i, false, false)), 'trim', false)());
                                                }
                                            } else {
                                                J$.F(126945, J$.R(126897, 'pushLine', pushLine, false, false), false)(J$.M(126937, J$.G(126913, J$.R(126905, 'util', util, false, true), 'format'), 'apply', false)(J$.R(126921, 'util', util, false, true), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(126929, 'arguments', undefined, true, true) : arguments = J$.R(126929, 'arguments', arguments, true, true))));
                                            }
                                            return J$.Rt(126961, J$.R(126953, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(128561, J$e);
                                        } finally {
                                            if (J$.Fr(128569))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), line, false, false);
                            J$.P(127041, J$.R(127025, 'line', line, false, false), 'scope', J$.T(127033, {}, 11, false));
                            J$.P(127065, J$.R(127049, 'line', line, false, false), 'formats', J$.R(127057, 'formats', formats, false, true));
                            J$.P(127265, J$.R(127073, 'line', line, false, false), 'sym', J$.T(127257, function (name) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(127233, arguments.callee, this, arguments);
                                            arguments = J$.N(127241, 'arguments', arguments, true, false, false);
                                            name = J$.N(127249, 'name', name, true, false, false);
                                            if (J$.C(8056, J$.C(8048, J$.U(10698, '!', J$.R(127081, 'name', name, false, false))) ? J$._() : J$.U(10706, '!', J$.F(127105, J$.R(127089, 'isVariable', isVariable, false, true), false)(J$.R(127097, 'name', name, false, false)))))
                                                name = J$.W(127121, 'name', J$.T(127113, 'tmp', 21, false), name, false, false);
                                            if (J$.C(8064, J$.U(10714, '!', J$.G(127145, J$.R(127129, 'vars', vars, false, false), J$.R(127137, 'name', name, false, false)))))
                                                J$.P(127177, J$.R(127153, 'vars', vars, false, false), J$.R(127161, 'name', name, false, false), J$.T(127169, 0, 22, false));
                                            return J$.Rt(127225, J$.B(10730, '+', J$.R(127185, 'name', name, false, false), J$.C(8072, J$.B(10722, '-', J$.A(127209, J$.R(127193, 'vars', vars, false, false), J$.R(127201, 'name', name, false, false), '+')(1), 1)) ? J$._() : J$.T(127217, '', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(128577, J$e);
                                        } finally {
                                            if (J$.Fr(128585))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(127561, J$.R(127273, 'line', line, false, false), 'property', J$.T(127553, function (obj, name) {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(127521, arguments.callee, this, arguments);
                                            arguments = J$.N(127529, 'arguments', arguments, true, false, false);
                                            obj = J$.N(127537, 'obj', obj, true, false, false);
                                            name = J$.N(127545, 'name', name, true, false, false);
                                            if (J$.C(8080, J$.B(10738, '===', J$.G(127289, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(127281, 'arguments', undefined, true, true) : arguments = J$.R(127281, 'arguments', arguments, true, true)), 'length'), J$.T(127297, 1, 22, false)))) {
                                                name = J$.W(127313, 'name', J$.R(127305, 'obj', obj, false, false), name, false, false);
                                                obj = J$.W(127329, 'obj', J$.T(127321, '', 21, false), obj, false, false);
                                            }
                                            name = J$.W(127353, 'name', J$.B(10746, '+', J$.R(127337, 'name', name, false, false), J$.T(127345, '', 21, false)), name, false, false);
                                            if (J$.C(8096, J$.F(127377, J$.R(127361, 'isProperty', isProperty, false, true), false)(J$.R(127369, 'name', name, false, false))))
                                                return J$.Rt(127425, J$.C(8088, J$.R(127385, 'obj', obj, false, false)) ? J$.B(10762, '+', J$.B(10754, '+', J$.R(127393, 'obj', obj, false, false), J$.T(127401, '.', 21, false)), J$.R(127409, 'name', name, false, false)) : J$.R(127417, 'name', name, false, false));
                                            return J$.Rt(127513, J$.C(8104, J$.R(127433, 'obj', obj, false, false)) ? J$.B(10786, '+', J$.B(10778, '+', J$.B(10770, '+', J$.R(127441, 'obj', obj, false, false), J$.T(127449, '[', 21, false)), J$.M(127473, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(127457, 'JSON', undefined, true, true) : JSON = J$.R(127457, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(127465, 'name', name, false, false))), J$.T(127481, ']', 21, false)) : J$.M(127505, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(127489, 'JSON', undefined, true, true) : JSON = J$.R(127489, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(127497, 'name', name, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(128593, J$e);
                                        } finally {
                                            if (J$.Fr(128601))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(127633, J$.R(127569, 'line', line, false, false), 'toString', J$.T(127625, function () {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(127609, arguments.callee, this, arguments);
                                            arguments = J$.N(127617, 'arguments', arguments, true, false, false);
                                            return J$.Rt(127601, J$.M(127593, J$.R(127577, 'lines', lines, false, false), 'join', false)(J$.T(127585, '\n', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(128609, J$e);
                                        } finally {
                                            if (J$.Fr(128617))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(128177, J$.R(127641, 'line', line, false, false), 'toFunction', J$.T(128169, function (scope) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(128121, arguments.callee, this, arguments);
                                            arguments = J$.N(128129, 'arguments', arguments, true, false, false);
                                            scope = J$.N(128137, 'scope', scope, true, false, false);
                                            J$.N(128145, 'src', src, false, false, false);
                                            J$.N(128153, 'keys', keys, false, false, false);
                                            J$.N(128161, 'vals', vals, false, false, false);
                                            if (J$.C(8112, J$.U(10794, '!', J$.R(127649, 'scope', scope, false, false))))
                                                scope = J$.W(127665, 'scope', J$.T(127657, {}, 11, false), scope, false, false);
                                            var src = J$.W(127705, 'src', J$.B(10810, '+', J$.B(10802, '+', J$.T(127673, 'return (', 21, false), J$.M(127689, J$.R(127681, 'line', line, false, false), 'toString', false)()), J$.T(127697, ')', 21, false)), src, false, false);
                                            J$.M(127857, J$.M(127737, J$.I(typeof Object === 'undefined' ? Object = J$.R(127713, 'Object', undefined, true, true) : Object = J$.R(127713, 'Object', Object, true, true)), 'keys', false)(J$.G(127729, J$.R(127721, 'line', line, false, false), 'scope')), 'forEach', false)(J$.T(127849, function (key) {
                                                jalangiLabel10:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(127825, arguments.callee, this, arguments);
                                                            arguments = J$.N(127833, 'arguments', arguments, true, false, false);
                                                            key = J$.N(127841, 'key', key, true, false, false);
                                                            if (J$.C(8120, J$.U(10818, '!', J$.G(127761, J$.R(127745, 'scope', scope, false, false), J$.R(127753, 'key', key, false, false)))))
                                                                J$.P(127817, J$.R(127769, 'scope', scope, false, false), J$.R(127777, 'key', key, false, false), J$.G(127809, J$.G(127793, J$.R(127785, 'line', line, false, false), 'scope'), J$.R(127801, 'key', key, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(128625, J$e);
                                                        } finally {
                                                            if (J$.Fr(128633))
                                                                continue jalangiLabel10;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            var keys = J$.W(127945, 'keys', J$.M(127937, J$.M(127881, J$.I(typeof Object === 'undefined' ? Object = J$.R(127865, 'Object', undefined, true, true) : Object = J$.R(127865, 'Object', Object, true, true)), 'keys', false)(J$.R(127873, 'scope', scope, false, false)), 'map', false)(J$.T(127929, function (key) {
                                                jalangiLabel11:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(127905, arguments.callee, this, arguments);
                                                            arguments = J$.N(127913, 'arguments', arguments, true, false, false);
                                                            key = J$.N(127921, 'key', key, true, false, false);
                                                            return J$.Rt(127897, J$.R(127889, 'key', key, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(128641, J$e);
                                                        } finally {
                                                            if (J$.Fr(128649))
                                                                continue jalangiLabel11;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), keys, false, false);
                                            var vals = J$.W(128033, 'vals', J$.M(128025, J$.R(127953, 'keys', keys, false, false), 'map', false)(J$.T(128017, function (key) {
                                                jalangiLabel12:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(127993, arguments.callee, this, arguments);
                                                            arguments = J$.N(128001, 'arguments', arguments, true, false, false);
                                                            key = J$.N(128009, 'key', key, true, false, false);
                                                            return J$.Rt(127985, J$.G(127977, J$.R(127961, 'scope', scope, false, false), J$.R(127969, 'key', key, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(128657, J$e);
                                                        } finally {
                                                            if (J$.Fr(128665))
                                                                continue jalangiLabel12;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), vals, false, false);
                                            return J$.Rt(128113, J$.M(128105, J$.M(128081, J$.I(typeof Function === 'undefined' ? Function = J$.R(128041, 'Function', undefined, true, true) : Function = J$.R(128041, 'Function', Function, true, true)), 'apply', false)(J$.T(128049, null, 25, false), J$.M(128073, J$.R(128057, 'keys', keys, false, false), 'concat', false)(J$.R(128065, 'src', src, false, false))), 'apply', false)(J$.T(128089, null, 25, false), J$.R(128097, 'vals', vals, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(128673, J$e);
                                        } finally {
                                            if (J$.Fr(128681))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            if (J$.C(8128, J$.G(128193, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(128185, 'arguments', undefined, true, true) : arguments = J$.R(128185, 'arguments', arguments, true, true)), 'length')))
                                J$.M(128225, J$.R(128201, 'line', line, false, false), 'apply', false)(J$.T(128209, null, 25, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(128217, 'arguments', undefined, true, true) : arguments = J$.R(128217, 'arguments', arguments, true, true)));
                            return J$.Rt(128241, J$.R(128233, 'line', line, false, false));
                        } catch (J$e) {
                            J$.Ex(128689, J$e);
                        } finally {
                            if (J$.Fr(128697))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), genfun, false, true);
            J$.P(128345, J$.R(128329, 'genfun', genfun, false, true), 'formats', J$.R(128337, 'formats', formats, false, true));
            J$.P(128369, J$.I(typeof module === 'undefined' ? module = J$.R(128353, 'module', undefined, true, true) : module = J$.R(128353, 'module', module, true, true)), 'exports', J$.R(128361, 'genfun', genfun, false, true));
        } catch (J$e) {
            J$.Ex(128705, J$e);
        } finally {
            if (J$.Sr(128713))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

