J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(167521, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/generate-function/example.js');
            function multiply(a, b) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(167193, arguments.callee, this, arguments);
                            arguments = J$.N(167201, 'arguments', arguments, true, false, false);
                            a = J$.N(167209, 'a', a, true, false, false);
                            b = J$.N(167217, 'b', b, true, false, false);
                            return J$.Rt(167185, J$.B(13546, '*', J$.R(167169, 'a', a, false, false), J$.R(167177, 'b', b, false, false)));
                        } catch (J$e) {
                            J$.Ex(167585, J$e);
                        } finally {
                            if (J$.Fr(167593))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addAndMultiplyNumber(val) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(167377, arguments.callee, this, arguments);
                            arguments = J$.N(167385, 'arguments', arguments, true, false, false);
                            val = J$.N(167393, 'val', val, true, false, false);
                            J$.N(167401, 'fn', fn, false, false, false);
                            var fn = J$.W(167329, 'fn', J$.F(167321, J$.R(167225, 'genfun', genfun, false, true), false)(J$.M(167313, J$.M(167273, J$.T(167233, '\n    function (n) {\n      if (typeof n !== \'number\') {\n        throw new Error(\'argument should be a number\')\n      }\n      const result = multiply(', 21, false), 'concat', false)(J$.F(167257, J$.R(167241, 'd', d, false, true), false)(J$.R(167249, 'val', val, false, false)), J$.T(167265, ', n + ', 21, false)), 'concat', false)(J$.F(167297, J$.R(167281, 'd', d, false, true), false)(J$.R(167289, 'val', val, false, false)), J$.T(167305, ')\n      return result\n    }\n  ', 21, false))), fn, false, false);
                            return J$.Rt(167369, J$.M(167361, J$.R(167337, 'fn', fn, false, false), 'toFunction', false)(J$.T(167353, { multiply: J$.R(167345, 'multiply', multiply, false, true) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(167601, J$e);
                        } finally {
                            if (J$.Fr(167609))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(167529, 'genfun', genfun, false, false, false);
            J$.N(167537, 'd', d, false, false, false);
            multiply = J$.N(167553, 'multiply', J$.T(167545, multiply, 12, false), true, false, false);
            addAndMultiplyNumber = J$.N(167569, 'addAndMultiplyNumber', J$.T(167561, addAndMultiplyNumber, 12, false), true, false, false);
            J$.N(167577, 'addAndMultiply2', addAndMultiply2, false, false, false);
            J$.T(167001, 'use strict', 21, false);
            J$.F(167025, J$.I(typeof require === 'undefined' ? require = J$.R(167009, 'require', undefined, true, true) : require = J$.R(167009, 'require', require, true, true)), false)(J$.T(167017, 'core-js/modules/es.array.concat', 21, false));
            J$.F(167049, J$.I(typeof require === 'undefined' ? require = J$.R(167033, 'require', undefined, true, true) : require = J$.R(167033, 'require', require, true, true)), false)(J$.T(167041, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(167073, J$.I(typeof require === 'undefined' ? require = J$.R(167057, 'require', undefined, true, true) : require = J$.R(167057, 'require', require, true, true)), false)(J$.T(167065, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(167097, J$.I(typeof require === 'undefined' ? require = J$.R(167081, 'require', undefined, true, true) : require = J$.R(167081, 'require', require, true, true)), false)(J$.T(167089, 'core-js/modules/es.regexp.to-string', 21, false));
            var genfun = J$.W(167129, 'genfun', J$.F(167121, J$.I(typeof require === 'undefined' ? require = J$.R(167105, 'require', undefined, true, true) : require = J$.R(167105, 'require', require, true, true)), false)(J$.T(167113, './', 21, false)), genfun, false, true);
            var d = J$.W(167161, 'd', J$.G(167153, J$.G(167145, J$.R(167137, 'genfun', genfun, false, true), 'formats'), 'd'), d, false, true);
            var addAndMultiply2 = J$.W(167433, 'addAndMultiply2', J$.F(167425, J$.R(167409, 'addAndMultiplyNumber', addAndMultiplyNumber, false, true), false)(J$.T(167417, 2, 22, false)), addAndMultiply2, false, true);
            J$.M(167465, J$.I(typeof console === 'undefined' ? console = J$.R(167441, 'console', undefined, true, true) : console = J$.R(167441, 'console', console, true, true)), 'log', false)(J$.M(167457, J$.R(167449, 'addAndMultiply2', addAndMultiply2, false, true), 'toString', false)());
            J$.M(167513, J$.I(typeof console === 'undefined' ? console = J$.R(167473, 'console', undefined, true, true) : console = J$.R(167473, 'console', console, true, true)), 'log', false)(J$.T(167481, '(3 + 2) * 2 =', 21, false), J$.F(167505, J$.R(167489, 'addAndMultiply2', addAndMultiply2, false, true), false)(J$.T(167497, 3, 22, false)));
        } catch (J$e) {
            J$.Ex(167617, J$e);
        } finally {
            if (J$.Sr(167625))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

