J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(124649, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/generate-function/example.js');
            function multiply(a, b) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(124321, arguments.callee, this, arguments);
                            arguments = J$.N(124329, 'arguments', arguments, true, false, false);
                            a = J$.N(124337, 'a', a, true, false, false);
                            b = J$.N(124345, 'b', b, true, false, false);
                            return J$.Rt(124313, J$.B(10426, '*', J$.R(124297, 'a', a, false, false), J$.R(124305, 'b', b, false, false)));
                        } catch (J$e) {
                            J$.Ex(124713, J$e);
                        } finally {
                            if (J$.Fr(124721))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addAndMultiplyNumber(val) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(124505, arguments.callee, this, arguments);
                            arguments = J$.N(124513, 'arguments', arguments, true, false, false);
                            val = J$.N(124521, 'val', val, true, false, false);
                            J$.N(124529, 'fn', fn, false, false, false);
                            var fn = J$.W(124457, 'fn', J$.F(124449, J$.R(124353, 'genfun', genfun, false, true), false)(J$.M(124441, J$.M(124401, J$.T(124361, '\n    function (n) {\n      if (typeof n !== \'number\') {\n        throw new Error(\'argument should be a number\')\n      }\n      const result = multiply(', 21, false), 'concat', false)(J$.F(124385, J$.R(124369, 'd', d, false, true), false)(J$.R(124377, 'val', val, false, false)), J$.T(124393, ', n + ', 21, false)), 'concat', false)(J$.F(124425, J$.R(124409, 'd', d, false, true), false)(J$.R(124417, 'val', val, false, false)), J$.T(124433, ')\n      return result\n    }\n  ', 21, false))), fn, false, false);
                            return J$.Rt(124497, J$.M(124489, J$.R(124465, 'fn', fn, false, false), 'toFunction', false)(J$.T(124481, { multiply: J$.R(124473, 'multiply', multiply, false, true) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(124729, J$e);
                        } finally {
                            if (J$.Fr(124737))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(124657, 'genfun', genfun, false, false, false);
            J$.N(124665, 'd', d, false, false, false);
            multiply = J$.N(124681, 'multiply', J$.T(124673, multiply, 12, false), true, false, false);
            addAndMultiplyNumber = J$.N(124697, 'addAndMultiplyNumber', J$.T(124689, addAndMultiplyNumber, 12, false), true, false, false);
            J$.N(124705, 'addAndMultiply2', addAndMultiply2, false, false, false);
            J$.T(124129, 'use strict', 21, false);
            J$.F(124153, J$.I(typeof require === 'undefined' ? require = J$.R(124137, 'require', undefined, true, true) : require = J$.R(124137, 'require', require, true, true)), false)(J$.T(124145, 'core-js/modules/es.array.concat', 21, false));
            J$.F(124177, J$.I(typeof require === 'undefined' ? require = J$.R(124161, 'require', undefined, true, true) : require = J$.R(124161, 'require', require, true, true)), false)(J$.T(124169, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(124201, J$.I(typeof require === 'undefined' ? require = J$.R(124185, 'require', undefined, true, true) : require = J$.R(124185, 'require', require, true, true)), false)(J$.T(124193, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(124225, J$.I(typeof require === 'undefined' ? require = J$.R(124209, 'require', undefined, true, true) : require = J$.R(124209, 'require', require, true, true)), false)(J$.T(124217, 'core-js/modules/es.regexp.to-string', 21, false));
            var genfun = J$.W(124257, 'genfun', J$.F(124249, J$.I(typeof require === 'undefined' ? require = J$.R(124233, 'require', undefined, true, true) : require = J$.R(124233, 'require', require, true, true)), false)(J$.T(124241, './', 21, false)), genfun, false, true);
            var d = J$.W(124289, 'd', J$.G(124281, J$.G(124273, J$.R(124265, 'genfun', genfun, false, true), 'formats'), 'd'), d, false, true);
            var addAndMultiply2 = J$.W(124561, 'addAndMultiply2', J$.F(124553, J$.R(124537, 'addAndMultiplyNumber', addAndMultiplyNumber, false, true), false)(J$.T(124545, 2, 22, false)), addAndMultiply2, false, true);
            J$.M(124593, J$.I(typeof console === 'undefined' ? console = J$.R(124569, 'console', undefined, true, true) : console = J$.R(124569, 'console', console, true, true)), 'log', false)(J$.M(124585, J$.R(124577, 'addAndMultiply2', addAndMultiply2, false, true), 'toString', false)());
            J$.M(124641, J$.I(typeof console === 'undefined' ? console = J$.R(124601, 'console', undefined, true, true) : console = J$.R(124601, 'console', console, true, true)), 'log', false)(J$.T(124609, '(3 + 2) * 2 =', 21, false), J$.F(124633, J$.R(124617, 'addAndMultiply2', addAndMultiply2, false, true), false)(J$.T(124625, 3, 22, false)));
        } catch (J$e) {
            J$.Ex(124745, J$e);
        } finally {
            if (J$.Sr(124753))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

