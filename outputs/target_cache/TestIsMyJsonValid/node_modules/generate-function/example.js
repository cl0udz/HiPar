J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4083153, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/generate-function/example.js');
            function multiply(a, b) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4082825, arguments.callee, this, arguments);
                            arguments = J$.N(4082833, 'arguments', arguments, true, false, false);
                            a = J$.N(4082841, 'a', a, true, false, false);
                            b = J$.N(4082849, 'b', b, true, false, false);
                            return J$.Rt(4082817, J$.B(396474, '*', J$.R(4082801, 'a', a, false, false), J$.R(4082809, 'b', b, false, false)));
                        } catch (J$e) {
                            J$.Ex(4083217, J$e);
                        } finally {
                            if (J$.Fr(4083225))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addAndMultiplyNumber(val) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4083009, arguments.callee, this, arguments);
                            arguments = J$.N(4083017, 'arguments', arguments, true, false, false);
                            val = J$.N(4083025, 'val', val, true, false, false);
                            J$.N(4083033, 'fn', fn, false, false, false);
                            var fn = J$.W(4082961, 'fn', J$.F(4082953, J$.R(4082857, 'genfun', genfun, false, true), false)(J$.M(4082945, J$.M(4082905, J$.T(4082865, '\n    function (n) {\n      if (typeof n !== \'number\') {\n        throw new Error(\'argument should be a number\')\n      }\n      const result = multiply(', 21, false), 'concat', false)(J$.F(4082889, J$.R(4082873, 'd', d, false, true), false)(J$.R(4082881, 'val', val, false, false)), J$.T(4082897, ', n + ', 21, false)), 'concat', false)(J$.F(4082929, J$.R(4082913, 'd', d, false, true), false)(J$.R(4082921, 'val', val, false, false)), J$.T(4082937, ')\n      return result\n    }\n  ', 21, false))), fn, false, false);
                            return J$.Rt(4083001, J$.M(4082993, J$.R(4082969, 'fn', fn, false, false), 'toFunction', false)(J$.T(4082985, { multiply: J$.R(4082977, 'multiply', multiply, false, true) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(4083233, J$e);
                        } finally {
                            if (J$.Fr(4083241))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4083161, 'genfun', genfun, false, false, false);
            J$.N(4083169, 'd', d, false, false, false);
            multiply = J$.N(4083185, 'multiply', J$.T(4083177, multiply, 12, false), true, false, false);
            addAndMultiplyNumber = J$.N(4083201, 'addAndMultiplyNumber', J$.T(4083193, addAndMultiplyNumber, 12, false), true, false, false);
            J$.N(4083209, 'addAndMultiply2', addAndMultiply2, false, false, false);
            J$.T(4082633, 'use strict', 21, false);
            J$.F(4082657, J$.I(typeof require === 'undefined' ? require = J$.R(4082641, 'require', undefined, true, true) : require = J$.R(4082641, 'require', require, true, true)), false)(J$.T(4082649, 'core-js/modules/es.array.concat', 21, false));
            J$.F(4082681, J$.I(typeof require === 'undefined' ? require = J$.R(4082665, 'require', undefined, true, true) : require = J$.R(4082665, 'require', require, true, true)), false)(J$.T(4082673, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(4082705, J$.I(typeof require === 'undefined' ? require = J$.R(4082689, 'require', undefined, true, true) : require = J$.R(4082689, 'require', require, true, true)), false)(J$.T(4082697, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(4082729, J$.I(typeof require === 'undefined' ? require = J$.R(4082713, 'require', undefined, true, true) : require = J$.R(4082713, 'require', require, true, true)), false)(J$.T(4082721, 'core-js/modules/es.regexp.to-string', 21, false));
            var genfun = J$.W(4082761, 'genfun', J$.F(4082753, J$.I(typeof require === 'undefined' ? require = J$.R(4082737, 'require', undefined, true, true) : require = J$.R(4082737, 'require', require, true, true)), false)(J$.T(4082745, './', 21, false)), genfun, false, true);
            var d = J$.W(4082793, 'd', J$.G(4082785, J$.G(4082777, J$.R(4082769, 'genfun', genfun, false, true), 'formats'), 'd'), d, false, true);
            var addAndMultiply2 = J$.W(4083065, 'addAndMultiply2', J$.F(4083057, J$.R(4083041, 'addAndMultiplyNumber', addAndMultiplyNumber, false, true), false)(J$.T(4083049, 2, 22, false)), addAndMultiply2, false, true);
            J$.M(4083097, J$.I(typeof console === 'undefined' ? console = J$.R(4083073, 'console', undefined, true, true) : console = J$.R(4083073, 'console', console, true, true)), 'log', false)(J$.M(4083089, J$.R(4083081, 'addAndMultiply2', addAndMultiply2, false, true), 'toString', false)());
            J$.M(4083145, J$.I(typeof console === 'undefined' ? console = J$.R(4083105, 'console', undefined, true, true) : console = J$.R(4083105, 'console', console, true, true)), 'log', false)(J$.T(4083113, '(3 + 2) * 2 =', 21, false), J$.F(4083137, J$.R(4083121, 'addAndMultiply2', addAndMultiply2, false, true), false)(J$.T(4083129, 3, 22, false)));
        } catch (J$e) {
            J$.Ex(4083249, J$e);
        } finally {
            if (J$.Sr(4083257))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

