J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(4088601, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/generate-function/test.js');
            J$.N(4088609, 'tape', tape, false, false, false);
            J$.N(4088617, 'genfun', genfun, false, false, false);
            J$.T(4087225, 'use strict', 21, false);
            J$.F(4087249, J$.I(typeof require === 'undefined' ? require = J$.R(4087233, 'require', undefined, true, true) : require = J$.R(4087233, 'require', require, true, true)), false)(J$.T(4087241, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(4087273, J$.I(typeof require === 'undefined' ? require = J$.R(4087257, 'require', undefined, true, true) : require = J$.R(4087257, 'require', require, true, true)), false)(J$.T(4087265, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(4087297, J$.I(typeof require === 'undefined' ? require = J$.R(4087281, 'require', undefined, true, true) : require = J$.R(4087281, 'require', require, true, true)), false)(J$.T(4087289, 'core-js/modules/es.regexp.to-string', 21, false));
            var tape = J$.W(4087329, 'tape', J$.F(4087321, J$.I(typeof require === 'undefined' ? require = J$.R(4087305, 'require', undefined, true, true) : require = J$.R(4087305, 'require', require, true, true)), false)(J$.T(4087313, 'tape', 21, false)), tape, false, true);
            var genfun = J$.W(4087361, 'genfun', J$.F(4087353, J$.I(typeof require === 'undefined' ? require = J$.R(4087337, 'require', undefined, true, true) : require = J$.R(4087337, 'require', require, true, true)), false)(J$.T(4087345, './', 21, false)), genfun, false, true);
            J$.F(4087633, J$.R(4087369, 'tape', tape, false, true), false)(J$.T(4087377, 'generate add function', 21, false), J$.T(4087625, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4087593, arguments.callee, this, arguments);
                            arguments = J$.N(4087601, 'arguments', arguments, true, false, false);
                            t = J$.N(4087609, 't', t, true, false, false);
                            J$.N(4087617, 'fn', fn, false, false, false);
                            var fn = J$.W(4087457, 'fn', J$.F(4087449, J$.F(4087433, J$.F(4087409, J$.F(4087393, J$.R(4087385, 'genfun', genfun, false, true), false)(), false)(J$.T(4087401, 'function add(n) {', 21, false)), false)(J$.T(4087417, 'return n + %d', 21, false), J$.T(4087425, 42, 22, false)), false)(J$.T(4087441, '}', 21, false)), fn, false, false);
                            J$.M(4087505, J$.R(4087465, 't', t, false, false), 'same', false)(J$.M(4087481, J$.R(4087473, 'fn', fn, false, false), 'toString', false)(), J$.T(4087489, 'function add(n) {\n  return n + 42\n}', 21, false), J$.T(4087497, 'code is indented', 21, false));
                            J$.M(4087569, J$.R(4087513, 't', t, false, false), 'same', false)(J$.F(4087545, J$.M(4087529, J$.R(4087521, 'fn', fn, false, false), 'toFunction', false)(), false)(J$.T(4087537, 10, 22, false)), J$.T(4087553, 52, 22, false), J$.T(4087561, 'function works', 21, false));
                            J$.M(4087585, J$.R(4087577, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4088625, J$e);
                        } finally {
                            if (J$.Fr(4088633))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4088041, J$.R(4087641, 'tape', tape, false, true), false)(J$.T(4087649, 'generate function + closed variables', 21, false), J$.T(4088033, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4087985, arguments.callee, this, arguments);
                            arguments = J$.N(4087993, 'arguments', arguments, true, false, false);
                            t = J$.N(4088001, 't', t, true, false, false);
                            J$.N(4088009, 'fn', fn, false, false, false);
                            J$.N(4088017, 'notGood', notGood, false, false, false);
                            J$.N(4088025, 'good', good, false, false, false);
                            var fn = J$.W(4087729, 'fn', J$.F(4087721, J$.F(4087705, J$.F(4087681, J$.F(4087665, J$.R(4087657, 'genfun', genfun, false, true), false)(), false)(J$.T(4087673, 'function add(n) {', 21, false)), false)(J$.T(4087689, 'return n + %d + number', 21, false), J$.T(4087697, 42, 22, false)), false)(J$.T(4087713, '}', 21, false)), fn, false, false);
                            var notGood = J$.W(4087753, 'notGood', J$.M(4087745, J$.R(4087737, 'fn', fn, false, false), 'toFunction', false)(), notGood, false, false);
                            var good = J$.W(4087793, 'good', J$.M(4087785, J$.R(4087761, 'fn', fn, false, false), 'toFunction', false)(J$.T(4087777, { number: J$.T(4087769, 10, 22, false) }, 11, false)), good, false, false);
                            try {
                                J$.F(4087817, J$.R(4087801, 'notGood', notGood, false, false), false)(J$.T(4087809, 10, 22, false));
                                J$.M(4087849, J$.R(4087825, 't', t, false, false), 'ok', false)(J$.T(4087833, false, 23, false), J$.T(4087841, 'function should not work', 21, false));
                            } catch (err) {
                                J$.N(4087905, 'err', err, false, false, true);
                                J$.M(4087897, J$.R(4087857, 't', t, false, false), 'same', false)(J$.G(4087873, J$.R(4087865, 'err', err, false, false), 'message'), J$.T(4087881, 'number is not defined', 21, false), J$.T(4087889, 'throws reference error', 21, false));
                            }
                            J$.M(4087961, J$.R(4087913, 't', t, false, false), 'same', false)(J$.F(4087937, J$.R(4087921, 'good', good, false, false), false)(J$.T(4087929, 11, 22, false)), J$.T(4087945, 63, 22, false), J$.T(4087953, 'function with closed var works', 21, false));
                            J$.M(4087977, J$.R(4087969, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4088641, J$e);
                        } finally {
                            if (J$.Fr(4088649))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4088593, J$.R(4088049, 'tape', tape, false, true), false)(J$.T(4088057, 'generate property', 21, false), J$.T(4088585, function (t) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4088553, arguments.callee, this, arguments);
                            arguments = J$.N(4088561, 'arguments', arguments, true, false, false);
                            t = J$.N(4088569, 't', t, true, false, false);
                            J$.N(4088577, 'gen', gen, false, false, false);
                            var gen = J$.W(4088081, 'gen', J$.F(4088073, J$.R(4088065, 'genfun', genfun, false, true), false)(), gen, false, false);
                            J$.M(4088129, J$.R(4088089, 't', t, false, false), 'same', false)(J$.M(4088113, J$.R(4088097, 'gen', gen, false, false), 'property', false)(J$.T(4088105, 'a', 21, false)), J$.T(4088121, 'a', 21, false));
                            J$.M(4088177, J$.R(4088137, 't', t, false, false), 'same', false)(J$.M(4088161, J$.R(4088145, 'gen', gen, false, false), 'property', false)(J$.T(4088153, '42', 21, false)), J$.T(4088169, '"42"', 21, false));
                            J$.M(4088233, J$.R(4088185, 't', t, false, false), 'same', false)(J$.M(4088217, J$.R(4088193, 'gen', gen, false, false), 'property', false)(J$.T(4088201, 'b', 21, false), J$.T(4088209, 'a', 21, false)), J$.T(4088225, 'b.a', 21, false));
                            J$.M(4088289, J$.R(4088241, 't', t, false, false), 'same', false)(J$.M(4088273, J$.R(4088249, 'gen', gen, false, false), 'property', false)(J$.T(4088257, 'b', 21, false), J$.T(4088265, '42', 21, false)), J$.T(4088281, 'b["42"]', 21, false));
                            J$.M(4088337, J$.R(4088297, 't', t, false, false), 'same', false)(J$.M(4088321, J$.R(4088305, 'gen', gen, false, false), 'sym', false)(J$.T(4088313, 42, 22, false)), J$.T(4088329, 'tmp', 21, false));
                            J$.M(4088385, J$.R(4088345, 't', t, false, false), 'same', false)(J$.M(4088369, J$.R(4088353, 'gen', gen, false, false), 'sym', false)(J$.T(4088361, 'a', 21, false)), J$.T(4088377, 'a', 21, false));
                            J$.M(4088433, J$.R(4088393, 't', t, false, false), 'same', false)(J$.M(4088417, J$.R(4088401, 'gen', gen, false, false), 'sym', false)(J$.T(4088409, 'a', 21, false)), J$.T(4088425, 'a1', 21, false));
                            J$.M(4088481, J$.R(4088441, 't', t, false, false), 'same', false)(J$.M(4088465, J$.R(4088449, 'gen', gen, false, false), 'sym', false)(J$.T(4088457, 42, 22, false)), J$.T(4088473, 'tmp1', 21, false));
                            J$.M(4088529, J$.R(4088489, 't', t, false, false), 'same', false)(J$.M(4088513, J$.R(4088497, 'gen', gen, false, false), 'sym', false)(J$.T(4088505, 'const', 21, false)), J$.T(4088521, 'tmp2', 21, false));
                            J$.M(4088545, J$.R(4088537, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4088657, J$e);
                        } finally {
                            if (J$.Fr(4088665))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4088673, J$e);
        } finally {
            if (J$.Sr(4088681))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

