J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(130097, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/generate-function/test.js');
            J$.N(130105, 'tape', tape, false, false, false);
            J$.N(130113, 'genfun', genfun, false, false, false);
            J$.T(128721, 'use strict', 21, false);
            J$.F(128745, J$.I(typeof require === 'undefined' ? require = J$.R(128729, 'require', undefined, true, true) : require = J$.R(128729, 'require', require, true, true)), false)(J$.T(128737, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(128769, J$.I(typeof require === 'undefined' ? require = J$.R(128753, 'require', undefined, true, true) : require = J$.R(128753, 'require', require, true, true)), false)(J$.T(128761, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(128793, J$.I(typeof require === 'undefined' ? require = J$.R(128777, 'require', undefined, true, true) : require = J$.R(128777, 'require', require, true, true)), false)(J$.T(128785, 'core-js/modules/es.regexp.to-string', 21, false));
            var tape = J$.W(128825, 'tape', J$.F(128817, J$.I(typeof require === 'undefined' ? require = J$.R(128801, 'require', undefined, true, true) : require = J$.R(128801, 'require', require, true, true)), false)(J$.T(128809, 'tape', 21, false)), tape, false, true);
            var genfun = J$.W(128857, 'genfun', J$.F(128849, J$.I(typeof require === 'undefined' ? require = J$.R(128833, 'require', undefined, true, true) : require = J$.R(128833, 'require', require, true, true)), false)(J$.T(128841, './', 21, false)), genfun, false, true);
            J$.F(129129, J$.R(128865, 'tape', tape, false, true), false)(J$.T(128873, 'generate add function', 21, false), J$.T(129121, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(129089, arguments.callee, this, arguments);
                            arguments = J$.N(129097, 'arguments', arguments, true, false, false);
                            t = J$.N(129105, 't', t, true, false, false);
                            J$.N(129113, 'fn', fn, false, false, false);
                            var fn = J$.W(128953, 'fn', J$.F(128945, J$.F(128929, J$.F(128905, J$.F(128889, J$.R(128881, 'genfun', genfun, false, true), false)(), false)(J$.T(128897, 'function add(n) {', 21, false)), false)(J$.T(128913, 'return n + %d', 21, false), J$.T(128921, 42, 22, false)), false)(J$.T(128937, '}', 21, false)), fn, false, false);
                            J$.M(129001, J$.R(128961, 't', t, false, false), 'same', false)(J$.M(128977, J$.R(128969, 'fn', fn, false, false), 'toString', false)(), J$.T(128985, 'function add(n) {\n  return n + 42\n}', 21, false), J$.T(128993, 'code is indented', 21, false));
                            J$.M(129065, J$.R(129009, 't', t, false, false), 'same', false)(J$.F(129041, J$.M(129025, J$.R(129017, 'fn', fn, false, false), 'toFunction', false)(), false)(J$.T(129033, 10, 22, false)), J$.T(129049, 52, 22, false), J$.T(129057, 'function works', 21, false));
                            J$.M(129081, J$.R(129073, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(130121, J$e);
                        } finally {
                            if (J$.Fr(130129))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(129537, J$.R(129137, 'tape', tape, false, true), false)(J$.T(129145, 'generate function + closed variables', 21, false), J$.T(129529, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(129481, arguments.callee, this, arguments);
                            arguments = J$.N(129489, 'arguments', arguments, true, false, false);
                            t = J$.N(129497, 't', t, true, false, false);
                            J$.N(129505, 'fn', fn, false, false, false);
                            J$.N(129513, 'notGood', notGood, false, false, false);
                            J$.N(129521, 'good', good, false, false, false);
                            var fn = J$.W(129225, 'fn', J$.F(129217, J$.F(129201, J$.F(129177, J$.F(129161, J$.R(129153, 'genfun', genfun, false, true), false)(), false)(J$.T(129169, 'function add(n) {', 21, false)), false)(J$.T(129185, 'return n + %d + number', 21, false), J$.T(129193, 42, 22, false)), false)(J$.T(129209, '}', 21, false)), fn, false, false);
                            var notGood = J$.W(129249, 'notGood', J$.M(129241, J$.R(129233, 'fn', fn, false, false), 'toFunction', false)(), notGood, false, false);
                            var good = J$.W(129289, 'good', J$.M(129281, J$.R(129257, 'fn', fn, false, false), 'toFunction', false)(J$.T(129273, { number: J$.T(129265, 10, 22, false) }, 11, false)), good, false, false);
                            try {
                                J$.F(129313, J$.R(129297, 'notGood', notGood, false, false), false)(J$.T(129305, 10, 22, false));
                                J$.M(129345, J$.R(129321, 't', t, false, false), 'ok', false)(J$.T(129329, false, 23, false), J$.T(129337, 'function should not work', 21, false));
                            } catch (err) {
                                J$.N(129401, 'err', err, false, false, true);
                                J$.M(129393, J$.R(129353, 't', t, false, false), 'same', false)(J$.G(129369, J$.R(129361, 'err', err, false, false), 'message'), J$.T(129377, 'number is not defined', 21, false), J$.T(129385, 'throws reference error', 21, false));
                            }
                            J$.M(129457, J$.R(129409, 't', t, false, false), 'same', false)(J$.F(129433, J$.R(129417, 'good', good, false, false), false)(J$.T(129425, 11, 22, false)), J$.T(129441, 63, 22, false), J$.T(129449, 'function with closed var works', 21, false));
                            J$.M(129473, J$.R(129465, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(130137, J$e);
                        } finally {
                            if (J$.Fr(130145))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(130089, J$.R(129545, 'tape', tape, false, true), false)(J$.T(129553, 'generate property', 21, false), J$.T(130081, function (t) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(130049, arguments.callee, this, arguments);
                            arguments = J$.N(130057, 'arguments', arguments, true, false, false);
                            t = J$.N(130065, 't', t, true, false, false);
                            J$.N(130073, 'gen', gen, false, false, false);
                            var gen = J$.W(129577, 'gen', J$.F(129569, J$.R(129561, 'genfun', genfun, false, true), false)(), gen, false, false);
                            J$.M(129625, J$.R(129585, 't', t, false, false), 'same', false)(J$.M(129609, J$.R(129593, 'gen', gen, false, false), 'property', false)(J$.T(129601, 'a', 21, false)), J$.T(129617, 'a', 21, false));
                            J$.M(129673, J$.R(129633, 't', t, false, false), 'same', false)(J$.M(129657, J$.R(129641, 'gen', gen, false, false), 'property', false)(J$.T(129649, '42', 21, false)), J$.T(129665, '"42"', 21, false));
                            J$.M(129729, J$.R(129681, 't', t, false, false), 'same', false)(J$.M(129713, J$.R(129689, 'gen', gen, false, false), 'property', false)(J$.T(129697, 'b', 21, false), J$.T(129705, 'a', 21, false)), J$.T(129721, 'b.a', 21, false));
                            J$.M(129785, J$.R(129737, 't', t, false, false), 'same', false)(J$.M(129769, J$.R(129745, 'gen', gen, false, false), 'property', false)(J$.T(129753, 'b', 21, false), J$.T(129761, '42', 21, false)), J$.T(129777, 'b["42"]', 21, false));
                            J$.M(129833, J$.R(129793, 't', t, false, false), 'same', false)(J$.M(129817, J$.R(129801, 'gen', gen, false, false), 'sym', false)(J$.T(129809, 42, 22, false)), J$.T(129825, 'tmp', 21, false));
                            J$.M(129881, J$.R(129841, 't', t, false, false), 'same', false)(J$.M(129865, J$.R(129849, 'gen', gen, false, false), 'sym', false)(J$.T(129857, 'a', 21, false)), J$.T(129873, 'a', 21, false));
                            J$.M(129929, J$.R(129889, 't', t, false, false), 'same', false)(J$.M(129913, J$.R(129897, 'gen', gen, false, false), 'sym', false)(J$.T(129905, 'a', 21, false)), J$.T(129921, 'a1', 21, false));
                            J$.M(129977, J$.R(129937, 't', t, false, false), 'same', false)(J$.M(129961, J$.R(129945, 'gen', gen, false, false), 'sym', false)(J$.T(129953, 42, 22, false)), J$.T(129969, 'tmp1', 21, false));
                            J$.M(130025, J$.R(129985, 't', t, false, false), 'same', false)(J$.M(130009, J$.R(129993, 'gen', gen, false, false), 'sym', false)(J$.T(130001, 'const', 21, false)), J$.T(130017, 'tmp2', 21, false));
                            J$.M(130041, J$.R(130033, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(130153, J$e);
                        } finally {
                            if (J$.Fr(130161))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(130169, J$e);
        } finally {
            if (J$.Sr(130177))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

