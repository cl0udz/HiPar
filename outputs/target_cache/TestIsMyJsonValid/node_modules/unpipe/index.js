J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(441657, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/unpipe/index.js');
            function hasPipeDataListeners(stream) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(441265, arguments.callee, this, arguments);
                            arguments = J$.N(441273, 'arguments', arguments, true, false, false);
                            stream = J$.N(441281, 'stream', stream, true, false, false);
                            J$.N(441289, 'listeners', listeners, false, false, false);
                            J$.N(441297, 'i', i, false, false, false);
                            var listeners = J$.W(441129, 'listeners', J$.M(441121, J$.R(441105, 'stream', stream, false, false), 'listeners', false)(J$.T(441113, 'data', 21, false)), listeners, false, false);
                            for (var i = J$.W(441145, 'i', J$.T(441137, 0, 22, false), i, false, false); J$.C(24344, J$.B(38082, '<', J$.R(441153, 'i', i, false, false), J$.G(441169, J$.R(441161, 'listeners', listeners, false, false), 'length'))); J$.B(38106, '-', i = J$.W(441185, 'i', J$.B(38098, '+', J$.U(38090, '+', J$.R(441177, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(24336, J$.B(38114, '===', J$.G(441217, J$.G(441209, J$.R(441193, 'listeners', listeners, false, false), J$.R(441201, 'i', i, false, false)), 'name'), J$.T(441225, 'ondata', 21, false)))) {
                                    return J$.Rt(441241, J$.T(441233, true, 23, false));
                                }
                            }
                            return J$.Rt(441257, J$.T(441249, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(441697, J$e);
                        } finally {
                            if (J$.Fr(441705))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function unpipe(stream) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(441609, arguments.callee, this, arguments);
                            arguments = J$.N(441617, 'arguments', arguments, true, false, false);
                            stream = J$.N(441625, 'stream', stream, true, false, false);
                            J$.N(441633, 'listener', listener, false, false, false);
                            J$.N(441641, 'listeners', listeners, false, false, false);
                            J$.N(441649, 'i', i, false, false, false);
                            if (J$.C(24352, J$.U(38122, '!', J$.R(441305, 'stream', stream, false, false)))) {
                                throw J$.F(441329, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(441313, 'TypeError', undefined, true, true) : TypeError = J$.R(441313, 'TypeError', TypeError, true, true)), true)(J$.T(441321, 'argument stream is required', 21, false));
                            }
                            if (J$.C(24360, J$.B(38138, '===', J$.U(38130, 'typeof', J$.G(441345, J$.R(441337, 'stream', stream, false, false), 'unpipe')), J$.T(441353, 'function', 21, false)))) {
                                J$.M(441369, J$.R(441361, 'stream', stream, false, false), 'unpipe', false)();
                                return J$.Rt(441377, undefined);
                            }
                            if (J$.C(24368, J$.U(38146, '!', J$.F(441401, J$.R(441385, 'hasPipeDataListeners', hasPipeDataListeners, false, true), false)(J$.R(441393, 'stream', stream, false, false))))) {
                                return J$.Rt(441409, undefined);
                            }
                            var listener;
                            var listeners = J$.W(441441, 'listeners', J$.M(441433, J$.R(441417, 'stream', stream, false, false), 'listeners', false)(J$.T(441425, 'close', 21, false)), listeners, false, false);
                            for (var i = J$.W(441457, 'i', J$.T(441449, 0, 22, false), i, false, false); J$.C(24392, J$.B(38154, '<', J$.R(441465, 'i', i, false, false), J$.G(441481, J$.R(441473, 'listeners', listeners, false, false), 'length'))); J$.B(38178, '-', i = J$.W(441497, 'i', J$.B(38170, '+', J$.U(38162, '+', J$.R(441489, 'i', i, false, false)), 1), i, false, false), 1)) {
                                listener = J$.W(441529, 'listener', J$.G(441521, J$.R(441505, 'listeners', listeners, false, false), J$.R(441513, 'i', i, false, false)), listener, false, false);
                                if (J$.C(24384, J$.C(24376, J$.B(38186, '!==', J$.G(441545, J$.R(441537, 'listener', listener, false, false), 'name'), J$.T(441553, 'cleanup', 21, false))) ? J$.B(38194, '!==', J$.G(441569, J$.R(441561, 'listener', listener, false, false), 'name'), J$.T(441577, 'onclose', 21, false)) : J$._())) {
                                    continue;
                                }
                                J$.M(441601, J$.R(441585, 'listener', listener, false, false), 'call', false)(J$.R(441593, 'stream', stream, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(441713, J$e);
                        } finally {
                            if (J$.Fr(441721))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            hasPipeDataListeners = J$.N(441673, 'hasPipeDataListeners', J$.T(441665, hasPipeDataListeners, 12, false), true, false, false);
            unpipe = J$.N(441689, 'unpipe', J$.T(441681, unpipe, 12, false), true, false, false);
            J$.T(441049, 'use strict', 21, false);
            J$.F(441073, J$.I(typeof require === 'undefined' ? require = J$.R(441057, 'require', undefined, true, true) : require = J$.R(441057, 'require', require, true, true)), false)(J$.T(441065, 'core-js/modules/es.function.name', 21, false));
            J$.P(441097, J$.I(typeof module === 'undefined' ? module = J$.R(441081, 'module', undefined, true, true) : module = J$.R(441081, 'module', module, true, true)), 'exports', J$.R(441089, 'unpipe', unpipe, false, true));
        } catch (J$e) {
            J$.Ex(441729, J$e);
        } finally {
            if (J$.Sr(441737))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

