J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(484529, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/unpipe/index.js');
            function hasPipeDataListeners(stream) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(484137, arguments.callee, this, arguments);
                            arguments = J$.N(484145, 'arguments', arguments, true, false, false);
                            stream = J$.N(484153, 'stream', stream, true, false, false);
                            J$.N(484161, 'listeners', listeners, false, false, false);
                            J$.N(484169, 'i', i, false, false, false);
                            var listeners = J$.W(484001, 'listeners', J$.M(483993, J$.R(483977, 'stream', stream, false, false), 'listeners', false)(J$.T(483985, 'data', 21, false)), listeners, false, false);
                            for (var i = J$.W(484017, 'i', J$.T(484009, 0, 22, false), i, false, false); J$.C(26616, J$.B(41202, '<', J$.R(484025, 'i', i, false, false), J$.G(484041, J$.R(484033, 'listeners', listeners, false, false), 'length'))); J$.B(41226, '-', i = J$.W(484057, 'i', J$.B(41218, '+', J$.U(41210, '+', J$.R(484049, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(26608, J$.B(41234, '===', J$.G(484089, J$.G(484081, J$.R(484065, 'listeners', listeners, false, false), J$.R(484073, 'i', i, false, false)), 'name'), J$.T(484097, 'ondata', 21, false)))) {
                                    return J$.Rt(484113, J$.T(484105, true, 23, false));
                                }
                            }
                            return J$.Rt(484129, J$.T(484121, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(484569, J$e);
                        } finally {
                            if (J$.Fr(484577))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function unpipe(stream) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(484481, arguments.callee, this, arguments);
                            arguments = J$.N(484489, 'arguments', arguments, true, false, false);
                            stream = J$.N(484497, 'stream', stream, true, false, false);
                            J$.N(484505, 'listener', listener, false, false, false);
                            J$.N(484513, 'listeners', listeners, false, false, false);
                            J$.N(484521, 'i', i, false, false, false);
                            if (J$.C(26624, J$.U(41242, '!', J$.R(484177, 'stream', stream, false, false)))) {
                                throw J$.F(484201, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(484185, 'TypeError', undefined, true, true) : TypeError = J$.R(484185, 'TypeError', TypeError, true, true)), true)(J$.T(484193, 'argument stream is required', 21, false));
                            }
                            if (J$.C(26632, J$.B(41258, '===', J$.U(41250, 'typeof', J$.G(484217, J$.R(484209, 'stream', stream, false, false), 'unpipe')), J$.T(484225, 'function', 21, false)))) {
                                J$.M(484241, J$.R(484233, 'stream', stream, false, false), 'unpipe', false)();
                                return J$.Rt(484249, undefined);
                            }
                            if (J$.C(26640, J$.U(41266, '!', J$.F(484273, J$.R(484257, 'hasPipeDataListeners', hasPipeDataListeners, false, true), false)(J$.R(484265, 'stream', stream, false, false))))) {
                                return J$.Rt(484281, undefined);
                            }
                            var listener;
                            var listeners = J$.W(484313, 'listeners', J$.M(484305, J$.R(484289, 'stream', stream, false, false), 'listeners', false)(J$.T(484297, 'close', 21, false)), listeners, false, false);
                            for (var i = J$.W(484329, 'i', J$.T(484321, 0, 22, false), i, false, false); J$.C(26664, J$.B(41274, '<', J$.R(484337, 'i', i, false, false), J$.G(484353, J$.R(484345, 'listeners', listeners, false, false), 'length'))); J$.B(41298, '-', i = J$.W(484369, 'i', J$.B(41290, '+', J$.U(41282, '+', J$.R(484361, 'i', i, false, false)), 1), i, false, false), 1)) {
                                listener = J$.W(484401, 'listener', J$.G(484393, J$.R(484377, 'listeners', listeners, false, false), J$.R(484385, 'i', i, false, false)), listener, false, false);
                                if (J$.C(26656, J$.C(26648, J$.B(41306, '!==', J$.G(484417, J$.R(484409, 'listener', listener, false, false), 'name'), J$.T(484425, 'cleanup', 21, false))) ? J$.B(41314, '!==', J$.G(484441, J$.R(484433, 'listener', listener, false, false), 'name'), J$.T(484449, 'onclose', 21, false)) : J$._())) {
                                    continue;
                                }
                                J$.M(484473, J$.R(484457, 'listener', listener, false, false), 'call', false)(J$.R(484465, 'stream', stream, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(484585, J$e);
                        } finally {
                            if (J$.Fr(484593))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            hasPipeDataListeners = J$.N(484545, 'hasPipeDataListeners', J$.T(484537, hasPipeDataListeners, 12, false), true, false, false);
            unpipe = J$.N(484561, 'unpipe', J$.T(484553, unpipe, 12, false), true, false, false);
            J$.T(483921, 'use strict', 21, false);
            J$.F(483945, J$.I(typeof require === 'undefined' ? require = J$.R(483929, 'require', undefined, true, true) : require = J$.R(483929, 'require', require, true, true)), false)(J$.T(483937, 'core-js/modules/es.function.name', 21, false));
            J$.P(483969, J$.I(typeof module === 'undefined' ? module = J$.R(483953, 'module', undefined, true, true) : module = J$.R(483953, 'module', module, true, true)), 'exports', J$.R(483961, 'unpipe', unpipe, false, true));
        } catch (J$e) {
            J$.Ex(484601, J$e);
        } finally {
            if (J$.Sr(484609))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

