J$.noInstrEval = false;
jalangiLabel20:
    while (true) {
        try {
            J$.Se(122793, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/express/lib/request.js');
            function defineGetter(obj, name, getter) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(122753, arguments.callee, this, arguments);
                            arguments = J$.N(122761, 'arguments', arguments, true, false, false);
                            obj = J$.N(122769, 'obj', obj, true, false, false);
                            name = J$.N(122777, 'name', name, true, false, false);
                            getter = J$.N(122785, 'getter', getter, true, false, false);
                            J$.M(122745, J$.I(typeof Object === 'undefined' ? Object = J$.R(122689, 'Object', undefined, true, true) : Object = J$.R(122689, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(122697, 'obj', obj, false, false), J$.R(122705, 'name', name, false, false), J$.T(122737, {
                                configurable: J$.T(122713, true, 23, false),
                                enumerable: J$.T(122721, true, 23, false),
                                get: J$.R(122729, 'getter', getter, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(123201, J$e);
                        } finally {
                            if (J$.Fr(123209))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(122801, 'accepts', accepts, false, false, false);
            J$.N(122809, 'deprecate', deprecate, false, false, false);
            J$.N(122817, 'isIP', isIP, false, false, false);
            J$.N(122825, 'typeis', typeis, false, false, false);
            J$.N(122833, 'http', http, false, false, false);
            J$.N(122841, 'fresh', fresh, false, false, false);
            J$.N(122849, 'parseRange', parseRange, false, false, false);
            J$.N(122857, 'parse', parse, false, false, false);
            J$.N(122865, 'proxyaddr', proxyaddr, false, false, false);
            J$.N(122873, 'req', req, false, false, false);
            defineGetter = J$.N(122889, 'defineGetter', J$.T(122881, defineGetter, 12, false), true, false, false);
            J$.T(117689, 'use strict', 21, false);
            J$.F(117713, J$.I(typeof require === 'undefined' ? require = J$.R(117697, 'require', undefined, true, true) : require = J$.R(117697, 'require', require, true, true)), false)(J$.T(117705, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(117737, J$.I(typeof require === 'undefined' ? require = J$.R(117721, 'require', undefined, true, true) : require = J$.R(117721, 'require', require, true, true)), false)(J$.T(117729, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(117761, J$.I(typeof require === 'undefined' ? require = J$.R(117745, 'require', undefined, true, true) : require = J$.R(117745, 'require', require, true, true)), false)(J$.T(117753, 'core-js/modules/es.array.reverse', 21, false));
            J$.F(117785, J$.I(typeof require === 'undefined' ? require = J$.R(117769, 'require', undefined, true, true) : require = J$.R(117769, 'require', require, true, true)), false)(J$.T(117777, 'core-js/modules/es.array.slice', 21, false));
            J$.F(117809, J$.I(typeof require === 'undefined' ? require = J$.R(117793, 'require', undefined, true, true) : require = J$.R(117793, 'require', require, true, true)), false)(J$.T(117801, 'core-js/modules/es.object.create', 21, false));
            J$.F(117833, J$.I(typeof require === 'undefined' ? require = J$.R(117817, 'require', undefined, true, true) : require = J$.R(117817, 'require', require, true, true)), false)(J$.T(117825, 'core-js/modules/es.object.define-property', 21, false));
            J$.F(117857, J$.I(typeof require === 'undefined' ? require = J$.R(117841, 'require', undefined, true, true) : require = J$.R(117841, 'require', require, true, true)), false)(J$.T(117849, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(117881, J$.I(typeof require === 'undefined' ? require = J$.R(117865, 'require', undefined, true, true) : require = J$.R(117865, 'require', require, true, true)), false)(J$.T(117873, 'core-js/modules/es.string.split', 21, false));
            J$.F(117905, J$.I(typeof require === 'undefined' ? require = J$.R(117889, 'require', undefined, true, true) : require = J$.R(117889, 'require', require, true, true)), false)(J$.T(117897, 'core-js/modules/es.string.trim', 21, false));
            J$.F(117929, J$.I(typeof require === 'undefined' ? require = J$.R(117913, 'require', undefined, true, true) : require = J$.R(117913, 'require', require, true, true)), false)(J$.T(117921, 'core-js/modules/es.string.trim-end', 21, false));
            var accepts = J$.W(117961, 'accepts', J$.F(117953, J$.I(typeof require === 'undefined' ? require = J$.R(117937, 'require', undefined, true, true) : require = J$.R(117937, 'require', require, true, true)), false)(J$.T(117945, 'accepts', 21, false)), accepts, false, true);
            var deprecate = J$.W(118009, 'deprecate', J$.F(118001, J$.F(117985, J$.I(typeof require === 'undefined' ? require = J$.R(117969, 'require', undefined, true, true) : require = J$.R(117969, 'require', require, true, true)), false)(J$.T(117977, 'depd', 21, false)), false)(J$.T(117993, 'express', 21, false)), deprecate, false, true);
            var isIP = J$.W(118049, 'isIP', J$.G(118041, J$.F(118033, J$.I(typeof require === 'undefined' ? require = J$.R(118017, 'require', undefined, true, true) : require = J$.R(118017, 'require', require, true, true)), false)(J$.T(118025, 'net', 21, false)), 'isIP'), isIP, false, true);
            var typeis = J$.W(118081, 'typeis', J$.F(118073, J$.I(typeof require === 'undefined' ? require = J$.R(118057, 'require', undefined, true, true) : require = J$.R(118057, 'require', require, true, true)), false)(J$.T(118065, 'type-is', 21, false)), typeis, false, true);
            var http = J$.W(118113, 'http', J$.F(118105, J$.I(typeof require === 'undefined' ? require = J$.R(118089, 'require', undefined, true, true) : require = J$.R(118089, 'require', require, true, true)), false)(J$.T(118097, 'http', 21, false)), http, false, true);
            var fresh = J$.W(118145, 'fresh', J$.F(118137, J$.I(typeof require === 'undefined' ? require = J$.R(118121, 'require', undefined, true, true) : require = J$.R(118121, 'require', require, true, true)), false)(J$.T(118129, 'fresh', 21, false)), fresh, false, true);
            var parseRange = J$.W(118177, 'parseRange', J$.F(118169, J$.I(typeof require === 'undefined' ? require = J$.R(118153, 'require', undefined, true, true) : require = J$.R(118153, 'require', require, true, true)), false)(J$.T(118161, 'range-parser', 21, false)), parseRange, false, true);
            var parse = J$.W(118209, 'parse', J$.F(118201, J$.I(typeof require === 'undefined' ? require = J$.R(118185, 'require', undefined, true, true) : require = J$.R(118185, 'require', require, true, true)), false)(J$.T(118193, 'parseurl', 21, false)), parse, false, true);
            var proxyaddr = J$.W(118241, 'proxyaddr', J$.F(118233, J$.I(typeof require === 'undefined' ? require = J$.R(118217, 'require', undefined, true, true) : require = J$.R(118217, 'require', require, true, true)), false)(J$.T(118225, 'proxy-addr', 21, false)), proxyaddr, false, true);
            var req = J$.W(118289, 'req', J$.M(118281, J$.I(typeof Object === 'undefined' ? Object = J$.R(118249, 'Object', undefined, true, true) : Object = J$.R(118249, 'Object', Object, true, true)), 'create', false)(J$.G(118273, J$.G(118265, J$.R(118257, 'http', http, false, true), 'IncomingMessage'), 'prototype')), req, false, true);
            J$.P(118313, J$.I(typeof module === 'undefined' ? module = J$.R(118297, 'module', undefined, true, true) : module = J$.R(118297, 'module', module, true, true)), 'exports', J$.R(118305, 'req', req, false, true));
            J$.P(118601, J$.R(118321, 'req', req, false, true), 'get', J$.P(118593, J$.R(118329, 'req', req, false, true), 'header', J$.T(118585, function header(name) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(118553, arguments.callee, this, arguments);
                            arguments = J$.N(118561, 'arguments', arguments, true, false, false);
                            name = J$.N(118569, 'name', name, true, false, false);
                            J$.N(118577, 'lc', lc, false, false, false);
                            if (J$.C(7032, J$.U(9554, '!', J$.R(118337, 'name', name, false, false)))) {
                                throw J$.F(118361, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(118345, 'TypeError', undefined, true, true) : TypeError = J$.R(118345, 'TypeError', TypeError, true, true)), true)(J$.T(118353, 'name argument is required to req.get', 21, false));
                            }
                            if (J$.C(7040, J$.B(9570, '!==', J$.U(9562, 'typeof', J$.R(118369, 'name', name, false, false)), J$.T(118377, 'string', 21, false)))) {
                                throw J$.F(118401, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(118385, 'TypeError', undefined, true, true) : TypeError = J$.R(118385, 'TypeError', TypeError, true, true)), true)(J$.T(118393, 'name must be a string to req.get', 21, false));
                            }
                            var lc = J$.W(118425, 'lc', J$.M(118417, J$.R(118409, 'name', name, false, false), 'toLowerCase', false)(), lc, false, false);
                            switch (J$.C1(7056, J$.R(118433, 'lc', lc, false, false))) {
                            case J$.C2(7064, J$.T(118441, 'referer', 21, false)):
                            case J$.C2(7072, J$.T(118505, 'referrer', 21, false)):
                                return J$.Rt(118497, J$.C(7048, J$.G(118465, J$.G(118457, J$.R(118449, 'this', this, false, false), 'headers'), 'referrer')) ? J$._() : J$.G(118489, J$.G(118481, J$.R(118473, 'this', this, false, false), 'headers'), 'referer'));
                            default:
                                return J$.Rt(118545, J$.G(118537, J$.G(118521, J$.R(118513, 'this', this, false, false), 'headers'), J$.R(118529, 'lc', lc, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(122897, J$e);
                        } finally {
                            if (J$.Fr(122905))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)));
            J$.P(118729, J$.R(118609, 'req', req, false, true), 'accepts', J$.T(118721, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(118697, arguments.callee, this, arguments);
                            arguments = J$.N(118705, 'arguments', arguments, true, false, false);
                            J$.N(118713, 'accept', accept, false, false, false);
                            var accept = J$.W(118641, 'accept', J$.F(118633, J$.R(118617, 'accepts', accepts, false, true), false)(J$.R(118625, 'this', this, false, false)), accept, false, false);
                            return J$.Rt(118689, J$.M(118681, J$.G(118657, J$.R(118649, 'accept', accept, false, false), 'types'), 'apply', false)(J$.R(118665, 'accept', accept, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(118673, 'arguments', undefined, true, true) : arguments = J$.R(118673, 'arguments', arguments, true, true))));
                        } catch (J$e) {
                            J$.Ex(122913, J$e);
                        } finally {
                            if (J$.Fr(122921))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(118857, J$.R(118737, 'req', req, false, true), 'acceptsEncodings', J$.T(118849, function () {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(118825, arguments.callee, this, arguments);
                            arguments = J$.N(118833, 'arguments', arguments, true, false, false);
                            J$.N(118841, 'accept', accept, false, false, false);
                            var accept = J$.W(118769, 'accept', J$.F(118761, J$.R(118745, 'accepts', accepts, false, true), false)(J$.R(118753, 'this', this, false, false)), accept, false, false);
                            return J$.Rt(118817, J$.M(118809, J$.G(118785, J$.R(118777, 'accept', accept, false, false), 'encodings'), 'apply', false)(J$.R(118793, 'accept', accept, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(118801, 'arguments', undefined, true, true) : arguments = J$.R(118801, 'arguments', arguments, true, true))));
                        } catch (J$e) {
                            J$.Ex(122929, J$e);
                        } finally {
                            if (J$.Fr(122937))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(118921, J$.R(118865, 'req', req, false, true), 'acceptsEncoding', J$.M(118913, J$.R(118873, 'deprecate', deprecate, false, true), J$.T(118881, 'function', 21, false), false)(J$.G(118897, J$.R(118889, 'req', req, false, true), 'acceptsEncodings'), J$.T(118905, 'req.acceptsEncoding: Use acceptsEncodings instead', 21, false)));
            J$.P(119049, J$.R(118929, 'req', req, false, true), 'acceptsCharsets', J$.T(119041, function () {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(119017, arguments.callee, this, arguments);
                            arguments = J$.N(119025, 'arguments', arguments, true, false, false);
                            J$.N(119033, 'accept', accept, false, false, false);
                            var accept = J$.W(118961, 'accept', J$.F(118953, J$.R(118937, 'accepts', accepts, false, true), false)(J$.R(118945, 'this', this, false, false)), accept, false, false);
                            return J$.Rt(119009, J$.M(119001, J$.G(118977, J$.R(118969, 'accept', accept, false, false), 'charsets'), 'apply', false)(J$.R(118985, 'accept', accept, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(118993, 'arguments', undefined, true, true) : arguments = J$.R(118993, 'arguments', arguments, true, true))));
                        } catch (J$e) {
                            J$.Ex(122945, J$e);
                        } finally {
                            if (J$.Fr(122953))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(119113, J$.R(119057, 'req', req, false, true), 'acceptsCharset', J$.M(119105, J$.R(119065, 'deprecate', deprecate, false, true), J$.T(119073, 'function', 21, false), false)(J$.G(119089, J$.R(119081, 'req', req, false, true), 'acceptsCharsets'), J$.T(119097, 'req.acceptsCharset: Use acceptsCharsets instead', 21, false)));
            J$.P(119241, J$.R(119121, 'req', req, false, true), 'acceptsLanguages', J$.T(119233, function () {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(119209, arguments.callee, this, arguments);
                            arguments = J$.N(119217, 'arguments', arguments, true, false, false);
                            J$.N(119225, 'accept', accept, false, false, false);
                            var accept = J$.W(119153, 'accept', J$.F(119145, J$.R(119129, 'accepts', accepts, false, true), false)(J$.R(119137, 'this', this, false, false)), accept, false, false);
                            return J$.Rt(119201, J$.M(119193, J$.G(119169, J$.R(119161, 'accept', accept, false, false), 'languages'), 'apply', false)(J$.R(119177, 'accept', accept, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(119185, 'arguments', undefined, true, true) : arguments = J$.R(119185, 'arguments', arguments, true, true))));
                        } catch (J$e) {
                            J$.Ex(122961, J$e);
                        } finally {
                            if (J$.Fr(122969))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(119305, J$.R(119249, 'req', req, false, true), 'acceptsLanguage', J$.M(119297, J$.R(119257, 'deprecate', deprecate, false, true), J$.T(119265, 'function', 21, false), false)(J$.G(119281, J$.R(119273, 'req', req, false, true), 'acceptsLanguages'), J$.T(119289, 'req.acceptsLanguage: Use acceptsLanguages instead', 21, false)));
            J$.P(119465, J$.R(119313, 'req', req, false, true), 'range', J$.T(119457, function range(size, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(119417, arguments.callee, this, arguments);
                            arguments = J$.N(119425, 'arguments', arguments, true, false, false);
                            J$.N(119433, 'range', range, false, false, false);
                            size = J$.N(119441, 'size', size, true, false, false);
                            options = J$.N(119449, 'options', options, true, false, false);
                            var range = J$.W(119345, 'range', J$.M(119337, J$.R(119321, 'this', this, false, false), 'get', false)(J$.T(119329, 'Range', 21, false)), range, false, false);
                            if (J$.C(7080, J$.U(9578, '!', J$.R(119353, 'range', range, false, false))))
                                return J$.Rt(119361, undefined);
                            return J$.Rt(119409, J$.F(119401, J$.R(119369, 'parseRange', parseRange, false, true), false)(J$.R(119377, 'size', size, false, false), J$.R(119385, 'range', range, false, false), J$.R(119393, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(122977, J$e);
                        } finally {
                            if (J$.Fr(122985))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(119969, J$.R(119473, 'req', req, false, true), 'param', J$.T(119961, function param(name, defaultValue) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(119897, arguments.callee, this, arguments);
                            arguments = J$.N(119905, 'arguments', arguments, true, false, false);
                            name = J$.N(119913, 'name', name, true, false, false);
                            defaultValue = J$.N(119921, 'defaultValue', defaultValue, true, false, false);
                            J$.N(119929, 'params', params, false, false, false);
                            J$.N(119937, 'body', body, false, false, false);
                            J$.N(119945, 'query', query, false, false, false);
                            J$.N(119953, 'args', args, false, false, false);
                            var params = J$.W(119505, 'params', J$.C(7088, J$.G(119489, J$.R(119481, 'this', this, false, false), 'params')) ? J$._() : J$.T(119497, {}, 11, false), params, false, false);
                            var body = J$.W(119537, 'body', J$.C(7096, J$.G(119521, J$.R(119513, 'this', this, false, false), 'body')) ? J$._() : J$.T(119529, {}, 11, false), body, false, false);
                            var query = J$.W(119569, 'query', J$.C(7104, J$.G(119553, J$.R(119545, 'this', this, false, false), 'query')) ? J$._() : J$.T(119561, {}, 11, false), query, false, false);
                            var args = J$.W(119617, 'args', J$.C(7112, J$.B(9586, '===', J$.G(119585, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(119577, 'arguments', undefined, true, true) : arguments = J$.R(119577, 'arguments', arguments, true, true)), 'length'), J$.T(119593, 1, 22, false))) ? J$.T(119601, 'name', 21, false) : J$.T(119609, 'name, default', 21, false), args, false, false);
                            J$.F(119657, J$.R(119625, 'deprecate', deprecate, false, true), false)(J$.B(9602, '+', J$.B(9594, '+', J$.T(119633, 'req.param(', 21, false), J$.R(119641, 'args', args, false, false)), J$.T(119649, '): Use req.params, req.body, or req.query instead', 21, false)));
                            if (J$.C(7128, J$.C(7120, J$.B(9610, '!=', J$.T(119665, null, 25, false), J$.G(119689, J$.R(119673, 'params', params, false, false), J$.R(119681, 'name', name, false, false)))) ? J$.M(119713, J$.R(119697, 'params', params, false, false), 'hasOwnProperty', false)(J$.R(119705, 'name', name, false, false)) : J$._()))
                                return J$.Rt(119745, J$.G(119737, J$.R(119721, 'params', params, false, false), J$.R(119729, 'name', name, false, false)));
                            if (J$.C(7136, J$.B(9618, '!=', J$.T(119753, null, 25, false), J$.G(119777, J$.R(119761, 'body', body, false, false), J$.R(119769, 'name', name, false, false)))))
                                return J$.Rt(119809, J$.G(119801, J$.R(119785, 'body', body, false, false), J$.R(119793, 'name', name, false, false)));
                            if (J$.C(7144, J$.B(9626, '!=', J$.T(119817, null, 25, false), J$.G(119841, J$.R(119825, 'query', query, false, false), J$.R(119833, 'name', name, false, false)))))
                                return J$.Rt(119873, J$.G(119865, J$.R(119849, 'query', query, false, false), J$.R(119857, 'name', name, false, false)));
                            return J$.Rt(119889, J$.R(119881, 'defaultValue', defaultValue, false, false));
                        } catch (J$e) {
                            J$.Ex(122993, J$e);
                        } finally {
                            if (J$.Fr(123001))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(120257, J$.R(119977, 'req', req, false, true), 'is', J$.T(120249, function is(types) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(120209, arguments.callee, this, arguments);
                            arguments = J$.N(120217, 'arguments', arguments, true, false, false);
                            types = J$.N(120225, 'types', types, true, false, false);
                            J$.N(120233, 'arr', arr, false, false, false);
                            J$.N(120241, 'i', i, false, false, false);
                            var arr = J$.W(119993, 'arr', J$.R(119985, 'types', types, false, false), arr, false, false);
                            if (J$.C(7160, J$.U(9634, '!', J$.M(120017, J$.I(typeof Array === 'undefined' ? Array = J$.R(120001, 'Array', undefined, true, true) : Array = J$.R(120001, 'Array', Array, true, true)), 'isArray', false)(J$.R(120009, 'types', types, false, false))))) {
                                arr = J$.W(120057, 'arr', J$.F(120049, J$.I(typeof Array === 'undefined' ? Array = J$.R(120025, 'Array', undefined, true, true) : Array = J$.R(120025, 'Array', Array, true, true)), true)(J$.G(120041, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(120033, 'arguments', undefined, true, true) : arguments = J$.R(120033, 'arguments', arguments, true, true)), 'length')), arr, false, false);
                                for (var i = J$.W(120073, 'i', J$.T(120065, 0, 22, false), i, false, false); J$.C(7152, J$.B(9642, '<', J$.R(120081, 'i', i, false, false), J$.G(120097, J$.R(120089, 'arr', arr, false, false), 'length'))); J$.B(9666, '-', i = J$.W(120113, 'i', J$.B(9658, '+', J$.U(9650, '+', J$.R(120105, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.P(120161, J$.R(120121, 'arr', arr, false, false), J$.R(120129, 'i', i, false, false), J$.G(120153, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(120137, 'arguments', undefined, true, true) : arguments = J$.R(120137, 'arguments', arguments, true, true)), J$.R(120145, 'i', i, false, false)));
                                }
                            }
                            return J$.Rt(120201, J$.F(120193, J$.R(120169, 'typeis', typeis, false, true), false)(J$.R(120177, 'this', this, false, false), J$.R(120185, 'arr', arr, false, false)));
                        } catch (J$e) {
                            J$.Ex(123009, J$e);
                        } finally {
                            if (J$.Fr(123017))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(120649, J$.R(120265, 'defineGetter', defineGetter, false, true), false)(J$.R(120273, 'req', req, false, true), J$.T(120281, 'protocol', 21, false), J$.T(120641, function protocol() {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(120593, arguments.callee, this, arguments);
                            arguments = J$.N(120601, 'arguments', arguments, true, false, false);
                            J$.N(120609, 'proto', proto, false, false, false);
                            J$.N(120617, 'trust', trust, false, false, false);
                            J$.N(120625, 'header', header, false, false, false);
                            J$.N(120633, 'index', index, false, false, false);
                            var proto = J$.W(120329, 'proto', J$.C(7168, J$.G(120305, J$.G(120297, J$.R(120289, 'this', this, false, false), 'connection'), 'encrypted')) ? J$.T(120313, 'https', 21, false) : J$.T(120321, 'http', 21, false), proto, false, false);
                            var trust = J$.W(120369, 'trust', J$.M(120361, J$.G(120345, J$.R(120337, 'this', this, false, false), 'app'), 'get', false)(J$.T(120353, 'trust proxy fn', 21, false)), trust, false, false);
                            if (J$.C(7176, J$.U(9674, '!', J$.F(120417, J$.R(120377, 'trust', trust, false, false), false)(J$.G(120401, J$.G(120393, J$.R(120385, 'this', this, false, false), 'connection'), 'remoteAddress'), J$.T(120409, 0, 22, false))))) {
                                return J$.Rt(120433, J$.R(120425, 'proto', proto, false, false));
                            }
                            var header = J$.W(120473, 'header', J$.C(7184, J$.M(120457, J$.R(120441, 'this', this, false, false), 'get', false)(J$.T(120449, 'X-Forwarded-Proto', 21, false))) ? J$._() : J$.R(120465, 'proto', proto, false, false), header, false, false);
                            var index = J$.W(120505, 'index', J$.M(120497, J$.R(120481, 'header', header, false, false), 'indexOf', false)(J$.T(120489, ',', 21, false)), index, false, false);
                            return J$.Rt(120585, J$.C(7192, J$.B(9690, '!==', J$.R(120513, 'index', index, false, false), J$.U(9682, '-', J$.T(120521, 1, 22, false)))) ? J$.M(120561, J$.M(120553, J$.R(120529, 'header', header, false, false), 'substring', false)(J$.T(120537, 0, 22, false), J$.R(120545, 'index', index, false, false)), 'trim', false)() : J$.M(120577, J$.R(120569, 'header', header, false, false), 'trim', false)());
                        } catch (J$e) {
                            J$.Ex(123025, J$e);
                        } finally {
                            if (J$.Fr(123033))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(120737, J$.R(120657, 'defineGetter', defineGetter, false, true), false)(J$.R(120665, 'req', req, false, true), J$.T(120673, 'secure', 21, false), J$.T(120729, function secure() {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(120713, arguments.callee, this, arguments);
                            arguments = J$.N(120721, 'arguments', arguments, true, false, false);
                            return J$.Rt(120705, J$.B(9698, '===', J$.G(120689, J$.R(120681, 'this', this, false, false), 'protocol'), J$.T(120697, 'https', 21, false)));
                        } catch (J$e) {
                            J$.Ex(123041, J$e);
                        } finally {
                            if (J$.Fr(123049))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(120881, J$.R(120745, 'defineGetter', defineGetter, false, true), false)(J$.R(120753, 'req', req, false, true), J$.T(120761, 'ip', 21, false), J$.T(120873, function ip() {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(120849, arguments.callee, this, arguments);
                            arguments = J$.N(120857, 'arguments', arguments, true, false, false);
                            J$.N(120865, 'trust', trust, false, false, false);
                            var trust = J$.W(120801, 'trust', J$.M(120793, J$.G(120777, J$.R(120769, 'this', this, false, false), 'app'), 'get', false)(J$.T(120785, 'trust proxy fn', 21, false)), trust, false, false);
                            return J$.Rt(120841, J$.F(120833, J$.R(120809, 'proxyaddr', proxyaddr, false, true), false)(J$.R(120817, 'this', this, false, false), J$.R(120825, 'trust', trust, false, false)));
                        } catch (J$e) {
                            J$.Ex(123057, J$e);
                        } finally {
                            if (J$.Fr(123065))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(121073, J$.R(120889, 'defineGetter', defineGetter, false, true), false)(J$.R(120897, 'req', req, false, true), J$.T(120905, 'ips', 21, false), J$.T(121065, function ips() {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(121033, arguments.callee, this, arguments);
                            arguments = J$.N(121041, 'arguments', arguments, true, false, false);
                            J$.N(121049, 'trust', trust, false, false, false);
                            J$.N(121057, 'addrs', addrs, false, false, false);
                            var trust = J$.W(120945, 'trust', J$.M(120937, J$.G(120921, J$.R(120913, 'this', this, false, false), 'app'), 'get', false)(J$.T(120929, 'trust proxy fn', 21, false)), trust, false, false);
                            var addrs = J$.W(120985, 'addrs', J$.M(120977, J$.R(120953, 'proxyaddr', proxyaddr, false, true), 'all', false)(J$.R(120961, 'this', this, false, false), J$.R(120969, 'trust', trust, false, false)), addrs, false, false);
                            J$.M(121009, J$.M(121001, J$.R(120993, 'addrs', addrs, false, false), 'reverse', false)(), 'pop', false)();
                            return J$.Rt(121025, J$.R(121017, 'addrs', addrs, false, false));
                        } catch (J$e) {
                            J$.Ex(123073, J$e);
                        } finally {
                            if (J$.Fr(123081))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(121353, J$.R(121081, 'defineGetter', defineGetter, false, true), false)(J$.R(121089, 'req', req, false, true), J$.T(121097, 'subdomains', 21, false), J$.T(121345, function subdomains() {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(121305, arguments.callee, this, arguments);
                            arguments = J$.N(121313, 'arguments', arguments, true, false, false);
                            J$.N(121321, 'subdomains', subdomains, false, false, false);
                            J$.N(121329, 'hostname', hostname, false, false, false);
                            J$.N(121337, 'offset', offset, false, false, false);
                            var hostname = J$.W(121121, 'hostname', J$.G(121113, J$.R(121105, 'this', this, false, false), 'hostname'), hostname, false, false);
                            if (J$.C(7200, J$.U(9706, '!', J$.R(121129, 'hostname', hostname, false, false))))
                                return J$.Rt(121145, J$.T(121137, [], 10, false));
                            var offset = J$.W(121185, 'offset', J$.M(121177, J$.G(121161, J$.R(121153, 'this', this, false, false), 'app'), 'get', false)(J$.T(121169, 'subdomain offset', 21, false)), offset, false, false);
                            var subdomains = J$.W(121265, 'subdomains', J$.C(7208, J$.U(9714, '!', J$.F(121209, J$.R(121193, 'isIP', isIP, false, true), false)(J$.R(121201, 'hostname', hostname, false, false)))) ? J$.M(121241, J$.M(121233, J$.R(121217, 'hostname', hostname, false, false), 'split', false)(J$.T(121225, '.', 21, false)), 'reverse', false)() : J$.T(121257, [J$.R(121249, 'hostname', hostname, false, false)], 10, false), subdomains, false, false);
                            return J$.Rt(121297, J$.M(121289, J$.R(121273, 'subdomains', subdomains, false, false), 'slice', false)(J$.R(121281, 'offset', offset, false, false)));
                        } catch (J$e) {
                            J$.Ex(123089, J$e);
                        } finally {
                            if (J$.Fr(123097))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(121449, J$.R(121361, 'defineGetter', defineGetter, false, true), false)(J$.R(121369, 'req', req, false, true), J$.T(121377, 'path', 21, false), J$.T(121441, function path() {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(121425, arguments.callee, this, arguments);
                            arguments = J$.N(121433, 'arguments', arguments, true, false, false);
                            return J$.Rt(121417, J$.G(121409, J$.F(121401, J$.R(121385, 'parse', parse, false, true), false)(J$.R(121393, 'this', this, false, false)), 'pathname'));
                        } catch (J$e) {
                            J$.Ex(123105, J$e);
                        } finally {
                            if (J$.Fr(123113))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(121993, J$.R(121457, 'defineGetter', defineGetter, false, true), false)(J$.R(121465, 'req', req, false, true), J$.T(121473, 'hostname', 21, false), J$.T(121985, function hostname() {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(121937, arguments.callee, this, arguments);
                            arguments = J$.N(121945, 'arguments', arguments, true, false, false);
                            J$.N(121953, 'trust', trust, false, false, false);
                            J$.N(121961, 'host', host, false, false, false);
                            J$.N(121969, 'offset', offset, false, false, false);
                            J$.N(121977, 'index', index, false, false, false);
                            var trust = J$.W(121513, 'trust', J$.M(121505, J$.G(121489, J$.R(121481, 'this', this, false, false), 'app'), 'get', false)(J$.T(121497, 'trust proxy fn', 21, false)), trust, false, false);
                            var host = J$.W(121545, 'host', J$.M(121537, J$.R(121521, 'this', this, false, false), 'get', false)(J$.T(121529, 'X-Forwarded-Host', 21, false)), host, false, false);
                            if (J$.C(7232, J$.C(7216, J$.U(9722, '!', J$.R(121553, 'host', host, false, false))) ? J$._() : J$.U(9730, '!', J$.F(121601, J$.R(121561, 'trust', trust, false, false), false)(J$.G(121585, J$.G(121577, J$.R(121569, 'this', this, false, false), 'connection'), 'remoteAddress'), J$.T(121593, 0, 22, false))))) {
                                host = J$.W(121633, 'host', J$.M(121625, J$.R(121609, 'this', this, false, false), 'get', false)(J$.T(121617, 'Host', 21, false)), host, false, false);
                            } else if (J$.C(7224, J$.B(9746, '!==', J$.M(121657, J$.R(121641, 'host', host, false, false), 'indexOf', false)(J$.T(121649, ',', 21, false)), J$.U(9738, '-', J$.T(121665, 1, 22, false))))) {
                                host = J$.W(121729, 'host', J$.M(121721, J$.M(121713, J$.R(121673, 'host', host, false, false), 'substring', false)(J$.T(121681, 0, 22, false), J$.M(121705, J$.R(121689, 'host', host, false, false), 'indexOf', false)(J$.T(121697, ',', 21, false))), 'trimRight', false)(), host, false, false);
                            }
                            if (J$.C(7240, J$.U(9754, '!', J$.R(121737, 'host', host, false, false))))
                                return J$.Rt(121745, undefined);
                            var offset = J$.W(121825, 'offset', J$.C(7248, J$.B(9762, '===', J$.G(121769, J$.R(121753, 'host', host, false, false), J$.T(121761, 0, 22, false)), J$.T(121777, '[', 21, false))) ? J$.B(9770, '+', J$.M(121801, J$.R(121785, 'host', host, false, false), 'indexOf', false)(J$.T(121793, ']', 21, false)), J$.T(121809, 1, 22, false)) : J$.T(121817, 0, 22, false), offset, false, false);
                            var index = J$.W(121865, 'index', J$.M(121857, J$.R(121833, 'host', host, false, false), 'indexOf', false)(J$.T(121841, ':', 21, false), J$.R(121849, 'offset', offset, false, false)), index, false, false);
                            return J$.Rt(121929, J$.C(7256, J$.B(9786, '!==', J$.R(121873, 'index', index, false, false), J$.U(9778, '-', J$.T(121881, 1, 22, false)))) ? J$.M(121913, J$.R(121889, 'host', host, false, false), 'substring', false)(J$.T(121897, 0, 22, false), J$.R(121905, 'index', index, false, false)) : J$.R(121921, 'host', host, false, false));
                        } catch (J$e) {
                            J$.Ex(123121, J$e);
                        } finally {
                            if (J$.Fr(123129))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(122105, J$.R(122001, 'defineGetter', defineGetter, false, true), false)(J$.R(122009, 'req', req, false, true), J$.T(122017, 'host', 21, false), J$.M(122097, J$.R(122025, 'deprecate', deprecate, false, true), J$.T(122033, 'function', 21, false), false)(J$.T(122081, function host() {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(122065, arguments.callee, this, arguments);
                            arguments = J$.N(122073, 'arguments', arguments, true, false, false);
                            return J$.Rt(122057, J$.G(122049, J$.R(122041, 'this', this, false, false), 'hostname'));
                        } catch (J$e) {
                            J$.Ex(123137, J$e);
                        } finally {
                            if (J$.Fr(123145))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.T(122089, 'req.host: Use req.hostname instead', 21, false)));
            J$.F(122465, J$.R(122113, 'defineGetter', defineGetter, false, true), false)(J$.R(122121, 'req', req, false, true), J$.T(122129, 'fresh', 21, false), J$.T(122457, function () {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(122417, arguments.callee, this, arguments);
                            arguments = J$.N(122425, 'arguments', arguments, true, false, false);
                            J$.N(122433, 'method', method, false, false, false);
                            J$.N(122441, 'res', res, false, false, false);
                            J$.N(122449, 'status', status, false, false, false);
                            var method = J$.W(122153, 'method', J$.G(122145, J$.R(122137, 'this', this, false, false), 'method'), method, false, false);
                            var res = J$.W(122177, 'res', J$.G(122169, J$.R(122161, 'this', this, false, false), 'res'), res, false, false);
                            var status = J$.W(122201, 'status', J$.G(122193, J$.R(122185, 'res', res, false, false), 'statusCode'), status, false, false);
                            if (J$.C(7272, J$.C(7264, J$.B(9794, '!==', J$.T(122209, 'GET', 21, false), J$.R(122217, 'method', method, false, false))) ? J$.B(9802, '!==', J$.T(122225, 'HEAD', 21, false), J$.R(122233, 'method', method, false, false)) : J$._()))
                                return J$.Rt(122249, J$.T(122241, false, 23, false));
                            if (J$.C(7296, J$.C(7288, J$.C(7280, J$.B(9810, '>=', J$.R(122257, 'status', status, false, false), J$.T(122265, 200, 22, false))) ? J$.B(9818, '<', J$.R(122273, 'status', status, false, false), J$.T(122281, 300, 22, false)) : J$._()) ? J$._() : J$.B(9826, '===', J$.T(122289, 304, 22, false), J$.R(122297, 'status', status, false, false)))) {
                                return J$.Rt(122393, J$.F(122385, J$.R(122305, 'fresh', fresh, false, true), false)(J$.G(122321, J$.R(122313, 'this', this, false, false), 'headers'), J$.T(122377, {
                                    'etag': J$.M(122345, J$.R(122329, 'res', res, false, false), 'get', false)(J$.T(122337, 'ETag', 21, false)),
                                    'last-modified': J$.M(122369, J$.R(122353, 'res', res, false, false), 'get', false)(J$.T(122361, 'Last-Modified', 21, false))
                                }, 11, false)));
                            }
                            return J$.Rt(122409, J$.T(122401, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(123153, J$e);
                        } finally {
                            if (J$.Fr(123161))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(122545, J$.R(122473, 'defineGetter', defineGetter, false, true), false)(J$.R(122481, 'req', req, false, true), J$.T(122489, 'stale', 21, false), J$.T(122537, function stale() {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(122521, arguments.callee, this, arguments);
                            arguments = J$.N(122529, 'arguments', arguments, true, false, false);
                            return J$.Rt(122513, J$.U(9834, '!', J$.G(122505, J$.R(122497, 'this', this, false, false), 'fresh')));
                        } catch (J$e) {
                            J$.Ex(123169, J$e);
                        } finally {
                            if (J$.Fr(123177))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(122681, J$.R(122553, 'defineGetter', defineGetter, false, true), false)(J$.R(122561, 'req', req, false, true), J$.T(122569, 'xhr', 21, false), J$.T(122673, function xhr() {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(122649, arguments.callee, this, arguments);
                            arguments = J$.N(122657, 'arguments', arguments, true, false, false);
                            J$.N(122665, 'val', val, false, false, false);
                            var val = J$.W(122609, 'val', J$.C(7304, J$.M(122593, J$.R(122577, 'this', this, false, false), 'get', false)(J$.T(122585, 'X-Requested-With', 21, false))) ? J$._() : J$.T(122601, '', 21, false), val, false, false);
                            return J$.Rt(122641, J$.B(9842, '===', J$.M(122625, J$.R(122617, 'val', val, false, false), 'toLowerCase', false)(), J$.T(122633, 'xmlhttprequest', 21, false)));
                        } catch (J$e) {
                            J$.Ex(123185, J$e);
                        } finally {
                            if (J$.Fr(123193))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(123217, J$e);
        } finally {
            if (J$.Sr(123225))
                continue jalangiLabel20;
            else
                break jalangiLabel20;
        }
    }
// JALANGI DO NOT INSTRUMENT

