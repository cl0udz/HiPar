J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(117609, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/express/lib/middleware/query.js');
            J$.N(117617, 'merge', merge, false, false, false);
            J$.N(117625, 'parseUrl', parseUrl, false, false, false);
            J$.N(117633, 'qs', qs, false, false, false);
            J$.T(117081, 'use strict', 21, false);
            var merge = J$.W(117113, 'merge', J$.F(117105, J$.I(typeof require === 'undefined' ? require = J$.R(117089, 'require', undefined, true, true) : require = J$.R(117089, 'require', require, true, true)), false)(J$.T(117097, 'utils-merge', 21, false)), merge, false, true);
            var parseUrl = J$.W(117145, 'parseUrl', J$.F(117137, J$.I(typeof require === 'undefined' ? require = J$.R(117121, 'require', undefined, true, true) : require = J$.R(117121, 'require', require, true, true)), false)(J$.T(117129, 'parseurl', 21, false)), parseUrl, false, true);
            var qs = J$.W(117177, 'qs', J$.F(117169, J$.I(typeof require === 'undefined' ? require = J$.R(117153, 'require', undefined, true, true) : require = J$.R(117153, 'require', require, true, true)), false)(J$.T(117161, 'qs', 21, false)), qs, false, true);
            J$.P(117601, J$.I(typeof module === 'undefined' ? module = J$.R(117185, 'module', undefined, true, true) : module = J$.R(117185, 'module', module, true, true)), 'exports', J$.T(117593, function query(options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(117553, arguments.callee, this, arguments);
                            arguments = J$.N(117561, 'arguments', arguments, true, false, false);
                            options = J$.N(117569, 'options', options, true, false, false);
                            J$.N(117577, 'opts', opts, false, false, false);
                            J$.N(117585, 'queryparse', queryparse, false, false, false);
                            var opts = J$.W(117225, 'opts', J$.F(117217, J$.R(117193, 'merge', merge, false, true), false)(J$.T(117201, {}, 11, false), J$.R(117209, 'options', options, false, false)), opts, false, false);
                            var queryparse = J$.W(117249, 'queryparse', J$.G(117241, J$.R(117233, 'qs', qs, false, true), 'parse'), queryparse, false, false);
                            if (J$.C(7000, J$.B(9522, '===', J$.U(9514, 'typeof', J$.R(117257, 'options', options, false, false)), J$.T(117265, 'function', 21, false)))) {
                                queryparse = J$.W(117281, 'queryparse', J$.R(117273, 'options', options, false, false), queryparse, false, false);
                                opts = J$.W(117297, 'opts', J$.T(117289, undefined, 24, false), opts, false, false);
                            }
                            if (J$.C(7016, J$.C(7008, J$.B(9530, '!==', J$.R(117305, 'opts', opts, false, false), J$.T(117313, undefined, 24, false))) ? J$.B(9538, '===', J$.G(117329, J$.R(117321, 'opts', opts, false, false), 'allowPrototypes'), J$.T(117337, undefined, 24, false)) : J$._())) {
                                J$.P(117361, J$.R(117345, 'opts', opts, false, false), 'allowPrototypes', J$.T(117353, true, 23, false));
                            }
                            return J$.Rt(117545, J$.T(117537, function query(req, res, next) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(117489, arguments.callee, this, arguments);
                                            arguments = J$.N(117497, 'arguments', arguments, true, false, false);
                                            req = J$.N(117505, 'req', req, true, false, false);
                                            res = J$.N(117513, 'res', res, true, false, false);
                                            next = J$.N(117521, 'next', next, true, false, false);
                                            J$.N(117529, 'val', val, false, false, false);
                                            if (J$.C(7024, J$.U(9546, '!', J$.G(117377, J$.R(117369, 'req', req, false, false), 'query')))) {
                                                var val = J$.W(117417, 'val', J$.G(117409, J$.F(117401, J$.R(117385, 'parseUrl', parseUrl, false, true), false)(J$.R(117393, 'req', req, false, false)), 'query'), val, false, false);
                                                J$.P(117465, J$.R(117425, 'req', req, false, false), 'query', J$.F(117457, J$.R(117433, 'queryparse', queryparse, false, false), false)(J$.R(117441, 'val', val, false, false), J$.R(117449, 'opts', opts, false, false)));
                                            }
                                            J$.F(117481, J$.R(117473, 'next', next, false, false), false)();
                                        } catch (J$e) {
                                            J$.Ex(117641, J$e);
                                        } finally {
                                            if (J$.Fr(117649))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(117657, J$e);
                        } finally {
                            if (J$.Fr(117665))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(117673, J$e);
        } finally {
            if (J$.Sr(117681))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

