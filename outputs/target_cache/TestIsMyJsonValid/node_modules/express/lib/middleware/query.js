J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4033241, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/express/lib/middleware/query.js');
            J$.N(4033249, 'merge', merge, false, false, false);
            J$.N(4033257, 'parseUrl', parseUrl, false, false, false);
            J$.N(4033265, 'qs', qs, false, false, false);
            J$.T(4032713, 'use strict', 21, false);
            var merge = J$.W(4032745, 'merge', J$.F(4032737, J$.I(typeof require === 'undefined' ? require = J$.R(4032721, 'require', undefined, true, true) : require = J$.R(4032721, 'require', require, true, true)), false)(J$.T(4032729, 'utils-merge', 21, false)), merge, false, true);
            var parseUrl = J$.W(4032777, 'parseUrl', J$.F(4032769, J$.I(typeof require === 'undefined' ? require = J$.R(4032753, 'require', undefined, true, true) : require = J$.R(4032753, 'require', require, true, true)), false)(J$.T(4032761, 'parseurl', 21, false)), parseUrl, false, true);
            var qs = J$.W(4032809, 'qs', J$.F(4032801, J$.I(typeof require === 'undefined' ? require = J$.R(4032785, 'require', undefined, true, true) : require = J$.R(4032785, 'require', require, true, true)), false)(J$.T(4032793, 'qs', 21, false)), qs, false, true);
            J$.P(4033233, J$.I(typeof module === 'undefined' ? module = J$.R(4032817, 'module', undefined, true, true) : module = J$.R(4032817, 'module', module, true, true)), 'exports', J$.T(4033225, function query(options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4033185, arguments.callee, this, arguments);
                            arguments = J$.N(4033193, 'arguments', arguments, true, false, false);
                            options = J$.N(4033201, 'options', options, true, false, false);
                            J$.N(4033209, 'opts', opts, false, false, false);
                            J$.N(4033217, 'queryparse', queryparse, false, false, false);
                            var opts = J$.W(4032857, 'opts', J$.F(4032849, J$.R(4032825, 'merge', merge, false, true), false)(J$.T(4032833, {}, 11, false), J$.R(4032841, 'options', options, false, false)), opts, false, false);
                            var queryparse = J$.W(4032881, 'queryparse', J$.G(4032873, J$.R(4032865, 'qs', qs, false, true), 'parse'), queryparse, false, false);
                            if (J$.C(213128, J$.B(392450, '===', J$.U(392442, 'typeof', J$.R(4032889, 'options', options, false, false)), J$.T(4032897, 'function', 21, false)))) {
                                queryparse = J$.W(4032913, 'queryparse', J$.R(4032905, 'options', options, false, false), queryparse, false, false);
                                opts = J$.W(4032929, 'opts', J$.T(4032921, undefined, 24, false), opts, false, false);
                            }
                            if (J$.C(213144, J$.C(213136, J$.B(392458, '!==', J$.R(4032937, 'opts', opts, false, false), J$.T(4032945, undefined, 24, false))) ? J$.B(392466, '===', J$.G(4032961, J$.R(4032953, 'opts', opts, false, false), 'allowPrototypes'), J$.T(4032969, undefined, 24, false)) : J$._())) {
                                J$.P(4032993, J$.R(4032977, 'opts', opts, false, false), 'allowPrototypes', J$.T(4032985, true, 23, false));
                            }
                            return J$.Rt(4033177, J$.T(4033169, function query(req, res, next) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4033121, arguments.callee, this, arguments);
                                            arguments = J$.N(4033129, 'arguments', arguments, true, false, false);
                                            req = J$.N(4033137, 'req', req, true, false, false);
                                            res = J$.N(4033145, 'res', res, true, false, false);
                                            next = J$.N(4033153, 'next', next, true, false, false);
                                            J$.N(4033161, 'val', val, false, false, false);
                                            if (J$.C(213152, J$.U(392474, '!', J$.G(4033009, J$.R(4033001, 'req', req, false, false), 'query')))) {
                                                var val = J$.W(4033049, 'val', J$.G(4033041, J$.F(4033033, J$.R(4033017, 'parseUrl', parseUrl, false, true), false)(J$.R(4033025, 'req', req, false, false)), 'query'), val, false, false);
                                                J$.P(4033097, J$.R(4033057, 'req', req, false, false), 'query', J$.F(4033089, J$.R(4033065, 'queryparse', queryparse, false, false), false)(J$.R(4033073, 'val', val, false, false), J$.R(4033081, 'opts', opts, false, false)));
                                            }
                                            J$.F(4033113, J$.R(4033105, 'next', next, false, false), false)();
                                        } catch (J$e) {
                                            J$.Ex(4033273, J$e);
                                        } finally {
                                            if (J$.Fr(4033281))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(4033289, J$e);
                        } finally {
                            if (J$.Fr(4033297))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4033305, J$e);
        } finally {
            if (J$.Sr(4033313))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

