J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(286121, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/path-to-regexp/index.js');
            function pathtoRegexp(path, keys, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(286001, arguments.callee, this, arguments);
                            arguments = J$.N(286009, 'arguments', arguments, true, false, false);
                            path = J$.N(286017, 'path', path, true, false, false);
                            keys = J$.N(286025, 'keys', keys, true, false, false);
                            options = J$.N(286033, 'options', options, true, false, false);
                            J$.N(286041, 'strict', strict, false, false, false);
                            J$.N(286049, 'end', end, false, false, false);
                            J$.N(286057, 'flags', flags, false, false, false);
                            J$.N(286065, 'extraOffset', extraOffset, false, false, false);
                            J$.N(286073, 'keysOffset', keysOffset, false, false, false);
                            J$.N(286081, 'i', i, false, false, false);
                            J$.N(286089, 'name', name, false, false, false);
                            J$.N(286097, 'm', m, false, false, false);
                            J$.N(286105, 'escapeCount', escapeCount, false, false, false);
                            J$.N(286113, 'index', index, false, false, false);
                            options = J$.W(284129, 'options', J$.C(16640, J$.R(284113, 'options', options, false, false)) ? J$._() : J$.T(284121, {}, 11, false), options, false, false);
                            keys = J$.W(284153, 'keys', J$.C(16648, J$.R(284137, 'keys', keys, false, false)) ? J$._() : J$.T(284145, [], 10, false), keys, false, false);
                            var strict = J$.W(284177, 'strict', J$.G(284169, J$.R(284161, 'options', options, false, false), 'strict'), strict, false, false);
                            var end = J$.W(284209, 'end', J$.B(26490, '!==', J$.G(284193, J$.R(284185, 'options', options, false, false), 'end'), J$.T(284201, false, 23, false)), end, false, false);
                            var flags = J$.W(284249, 'flags', J$.C(16656, J$.G(284225, J$.R(284217, 'options', options, false, false), 'sensitive')) ? J$.T(284233, '', 21, false) : J$.T(284241, 'i', 21, false), flags, false, false);
                            var extraOffset = J$.W(284265, 'extraOffset', J$.T(284257, 0, 22, false), extraOffset, false, false);
                            var keysOffset = J$.W(284289, 'keysOffset', J$.G(284281, J$.R(284273, 'keys', keys, false, false), 'length'), keysOffset, false, false);
                            var i = J$.W(284305, 'i', J$.T(284297, 0, 22, false), i, false, false);
                            var name = J$.W(284321, 'name', J$.T(284313, 0, 22, false), name, false, false);
                            var m;
                            if (J$.C(16672, J$.B(26498, 'instanceof', J$.R(284329, 'path', path, false, false), J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(284337, 'RegExp', undefined, true, true) : RegExp = J$.R(284337, 'RegExp', RegExp, true, true))))) {
                                while (J$.C(16664, m = J$.W(284377, 'm', J$.M(284369, J$.R(284345, 'MATCHING_GROUP_REGEXP', MATCHING_GROUP_REGEXP, false, true), 'exec', false)(J$.G(284361, J$.R(284353, 'path', path, false, false), 'source')), m, false, false))) {
                                    J$.M(284441, J$.R(284385, 'keys', keys, false, false), 'push', false)(J$.T(284433, {
                                        name: J$.B(26522, '-', name = J$.W(284401, 'name', J$.B(26514, '+', J$.U(26506, '+', J$.R(284393, 'name', name, false, false)), 1), name, false, false), 1),
                                        optional: J$.T(284409, false, 23, false),
                                        offset: J$.G(284425, J$.R(284417, 'm', m, false, false), 'index')
                                    }, 11, false));
                                }
                                return J$.Rt(284457, J$.R(284449, 'path', path, false, false));
                            }
                            if (J$.C(16680, J$.M(284481, J$.I(typeof Array === 'undefined' ? Array = J$.R(284465, 'Array', undefined, true, true) : Array = J$.R(284465, 'Array', Array, true, true)), 'isArray', false)(J$.R(284473, 'path', path, false, false)))) {
                                path = J$.W(284593, 'path', J$.M(284585, J$.R(284489, 'path', path, false, false), 'map', false)(J$.T(284577, function (value) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(284553, arguments.callee, this, arguments);
                                                arguments = J$.N(284561, 'arguments', arguments, true, false, false);
                                                value = J$.N(284569, 'value', value, true, false, false);
                                                return J$.Rt(284545, J$.G(284537, J$.F(284529, J$.R(284497, 'pathtoRegexp', pathtoRegexp, false, true), false)(J$.R(284505, 'value', value, false, false), J$.R(284513, 'keys', keys, false, false), J$.R(284521, 'options', options, false, false)), 'source'));
                                            } catch (J$e) {
                                                J$.Ex(286153, J$e);
                                            } finally {
                                                if (J$.Fr(286161))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), path, false, false);
                                return J$.Rt(284665, J$.F(284657, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(284601, 'RegExp', undefined, true, true) : RegExp = J$.R(284601, 'RegExp', RegExp, true, true)), true)(J$.B(26538, '+', J$.B(26530, '+', J$.T(284609, '(?:', 21, false), J$.M(284633, J$.R(284617, 'path', path, false, false), 'join', false)(J$.T(284625, '|', 21, false))), J$.T(284641, ')', 21, false)), J$.R(284649, 'flags', flags, false, false)));
                            }
                            path = J$.W(285513, 'path', J$.M(285505, J$.M(285297, J$.M(284809, J$.M(284785, J$.B(26570, '+', J$.B(26546, '+', J$.T(284673, '^', 21, false), J$.R(284681, 'path', path, false, false)), J$.C(16696, J$.R(284689, 'strict', strict, false, false)) ? J$.T(284697, '', 21, false) : J$.C(16688, J$.B(26562, '===', J$.G(284737, J$.R(284705, 'path', path, false, false), J$.B(26554, '-', J$.G(284721, J$.R(284713, 'path', path, false, false), 'length'), J$.T(284729, 1, 22, false))), J$.T(284745, '/', 21, false))) ? J$.T(284753, '?', 21, false) : J$.T(284761, '/?', 21, false)), 'replace', false)(J$.T(284769, /\/\(/g, 14, false), J$.T(284777, '/(?:', 21, false)), 'replace', false)(J$.T(284793, /([\/\.])/g, 14, false), J$.T(284801, '\\$1', 21, false)), 'replace', false)(J$.T(284817, /(\\\/)?(\\\.)?:(\w+)(\(.*?\))?(\*)?(\?)?/g, 14, false), J$.T(285289, function (match, slash, format, key, capture, star, optional, offset) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(285201, arguments.callee, this, arguments);
                                            arguments = J$.N(285209, 'arguments', arguments, true, false, false);
                                            match = J$.N(285217, 'match', match, true, false, false);
                                            slash = J$.N(285225, 'slash', slash, true, false, false);
                                            format = J$.N(285233, 'format', format, true, false, false);
                                            key = J$.N(285241, 'key', key, true, false, false);
                                            capture = J$.N(285249, 'capture', capture, true, false, false);
                                            star = J$.N(285257, 'star', star, true, false, false);
                                            optional = J$.N(285265, 'optional', optional, true, false, false);
                                            offset = J$.N(285273, 'offset', offset, true, false, false);
                                            J$.N(285281, 'result', result, false, false, false);
                                            slash = J$.W(284841, 'slash', J$.C(16704, J$.R(284825, 'slash', slash, false, false)) ? J$._() : J$.T(284833, '', 21, false), slash, false, false);
                                            format = J$.W(284865, 'format', J$.C(16712, J$.R(284849, 'format', format, false, false)) ? J$._() : J$.T(284857, '', 21, false), format, false, false);
                                            capture = J$.W(284905, 'capture', J$.C(16720, J$.R(284873, 'capture', capture, false, false)) ? J$._() : J$.B(26586, '+', J$.B(26578, '+', J$.T(284881, '([^\\/', 21, false), J$.R(284889, 'format', format, false, false)), J$.T(284897, ']+?)', 21, false)), capture, false, false);
                                            optional = J$.W(284929, 'optional', J$.C(16728, J$.R(284913, 'optional', optional, false, false)) ? J$._() : J$.T(284921, '', 21, false), optional, false, false);
                                            J$.M(284985, J$.R(284937, 'keys', keys, false, false), 'push', false)(J$.T(284977, {
                                                name: J$.R(284945, 'key', key, false, false),
                                                optional: J$.U(26602, '!', J$.U(26594, '!', J$.R(284953, 'optional', optional, false, false))),
                                                offset: J$.B(26610, '+', J$.R(284961, 'offset', offset, false, false), J$.R(284969, 'extraOffset', extraOffset, false, false))
                                            }, 11, false));
                                            var result = J$.W(285129, 'result', J$.B(26690, '+', J$.B(26682, '+', J$.B(26674, '+', J$.B(26650, '+', J$.B(26642, '+', J$.B(26634, '+', J$.B(26626, '+', J$.B(26618, '+', J$.T(284993, '', 21, false), J$.C(16736, J$.R(285001, 'optional', optional, false, false)) ? J$.T(285009, '', 21, false) : J$.R(285017, 'slash', slash, false, false)), J$.T(285025, '(?:', 21, false)), J$.R(285033, 'format', format, false, false)), J$.C(16744, J$.R(285041, 'optional', optional, false, false)) ? J$.R(285049, 'slash', slash, false, false) : J$.T(285057, '', 21, false)), J$.R(285065, 'capture', capture, false, false)), J$.C(16752, J$.R(285073, 'star', star, false, false)) ? J$.B(26666, '+', J$.B(26658, '+', J$.T(285081, '((?:[\\/', 21, false), J$.R(285089, 'format', format, false, false)), J$.T(285097, '].+?)?)', 21, false)) : J$.T(285105, '', 21, false)), J$.T(285113, ')', 21, false)), J$.R(285121, 'optional', optional, false, false)), result, false, false);
                                            extraOffset = J$.W(285177, 'extraOffset', J$.B(26706, '+', J$.R(285169, 'extraOffset', extraOffset, false, false), J$.B(26698, '-', J$.G(285145, J$.R(285137, 'result', result, false, false), 'length'), J$.G(285161, J$.R(285153, 'match', match, false, false), 'length'))), extraOffset, false, false);
                                            return J$.Rt(285193, J$.R(285185, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(286169, J$e);
                                        } finally {
                                            if (J$.Fr(286177))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'replace', false)(J$.T(285305, /\*/g, 14, false), J$.T(285497, function (star, index) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(285457, arguments.callee, this, arguments);
                                            arguments = J$.N(285465, 'arguments', arguments, true, false, false);
                                            star = J$.N(285473, 'star', star, true, false, false);
                                            index = J$.N(285481, 'index', index, true, false, false);
                                            J$.N(285489, 'len', len, false, false, false);
                                            var len = J$.W(285329, 'len', J$.G(285321, J$.R(285313, 'keys', keys, false, false), 'length'), len, false, false);
                                            while (J$.C(16768, J$.C(16760, J$.B(26738, '>', J$.B(26730, '+', len = J$.W(285345, 'len', J$.B(26722, '-', J$.U(26714, '+', J$.R(285337, 'len', len, false, false)), 1), len, false, false), 1), J$.R(285353, 'keysOffset', keysOffset, false, false))) ? J$.B(26746, '>', J$.G(285385, J$.G(285377, J$.R(285361, 'keys', keys, false, false), J$.R(285369, 'len', len, false, false)), 'offset'), J$.R(285393, 'index', index, false, false)) : J$._())) {
                                                J$.A(285433, J$.G(285417, J$.R(285401, 'keys', keys, false, false), J$.R(285409, 'len', len, false, false)), 'offset', '+')(J$.T(285425, 3, 22, false));
                                            }
                                            return J$.Rt(285449, J$.T(285441, '(.*)', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(286185, J$e);
                                        } finally {
                                            if (J$.Fr(286193))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), path, false, false);
                            while (J$.C(16808, m = J$.W(285545, 'm', J$.M(285537, J$.R(285521, 'MATCHING_GROUP_REGEXP', MATCHING_GROUP_REGEXP, false, true), 'exec', false)(J$.R(285529, 'path', path, false, false)), m, false, false))) {
                                var escapeCount = J$.W(285561, 'escapeCount', J$.T(285553, 0, 22, false), escapeCount, false, false);
                                var index = J$.W(285585, 'index', J$.G(285577, J$.R(285569, 'm', m, false, false), 'index'), index, false, false);
                                while (J$.C(16776, J$.B(26770, '===', J$.M(285617, J$.R(285593, 'path', path, false, false), 'charAt', false)(index = J$.W(285609, 'index', J$.B(26762, '-', J$.U(26754, '+', J$.R(285601, 'index', index, false, false)), 1), index, false, false)), J$.T(285625, '\\', 21, false)))) {
                                    J$.B(26794, '-', escapeCount = J$.W(285641, 'escapeCount', J$.B(26786, '+', J$.U(26778, '+', J$.R(285633, 'escapeCount', escapeCount, false, false)), 1), escapeCount, false, false), 1);
                                }
                                if (J$.C(16784, J$.B(26810, '===', J$.B(26802, '%', J$.R(285649, 'escapeCount', escapeCount, false, false), J$.T(285657, 2, 22, false)), J$.T(285665, 1, 22, false)))) {
                                    continue;
                                }
                                if (J$.C(16800, J$.C(16792, J$.B(26826, '===', J$.B(26818, '+', J$.R(285673, 'keysOffset', keysOffset, false, false), J$.R(285681, 'i', i, false, false)), J$.G(285697, J$.R(285689, 'keys', keys, false, false), 'length'))) ? J$._() : J$.B(26842, '>', J$.G(285737, J$.G(285729, J$.R(285705, 'keys', keys, false, false), J$.B(26834, '+', J$.R(285713, 'keysOffset', keysOffset, false, false), J$.R(285721, 'i', i, false, false))), 'offset'), J$.G(285753, J$.R(285745, 'm', m, false, false), 'index')))) {
                                    J$.M(285841, J$.R(285761, 'keys', keys, false, false), 'splice', false)(J$.B(26850, '+', J$.R(285769, 'keysOffset', keysOffset, false, false), J$.R(285777, 'i', i, false, false)), J$.T(285785, 0, 22, false), J$.T(285833, {
                                        name: J$.B(26874, '-', name = J$.W(285801, 'name', J$.B(26866, '+', J$.U(26858, '+', J$.R(285793, 'name', name, false, false)), 1), name, false, false), 1),
                                        optional: J$.T(285809, false, 23, false),
                                        offset: J$.G(285825, J$.R(285817, 'm', m, false, false), 'index')
                                    }, 11, false));
                                }
                                J$.B(26898, '-', i = J$.W(285857, 'i', J$.B(26890, '+', J$.U(26882, '+', J$.R(285849, 'i', i, false, false)), 1), i, false, false), 1);
                            }
                            path = J$.W(285953, 'path', J$.B(26922, '+', J$.R(285945, 'path', path, false, false), J$.C(16824, J$.R(285865, 'end', end, false, false)) ? J$.T(285873, '$', 21, false) : J$.C(16816, J$.B(26914, '===', J$.G(285913, J$.R(285881, 'path', path, false, false), J$.B(26906, '-', J$.G(285897, J$.R(285889, 'path', path, false, false), 'length'), J$.T(285905, 1, 22, false))), J$.T(285921, '/', 21, false))) ? J$.T(285929, '', 21, false) : J$.T(285937, '(?=\\/|$)', 21, false)), path, false, false);
                            return J$.Rt(285993, J$.F(285985, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(285961, 'RegExp', undefined, true, true) : RegExp = J$.R(285961, 'RegExp', RegExp, true, true)), true)(J$.R(285969, 'path', path, false, false), J$.R(285977, 'flags', flags, false, false)));
                        } catch (J$e) {
                            J$.Ex(286201, J$e);
                        } finally {
                            if (J$.Fr(286209))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(286129, 'MATCHING_GROUP_REGEXP', MATCHING_GROUP_REGEXP, false, false, false);
            pathtoRegexp = J$.N(286145, 'pathtoRegexp', J$.T(286137, pathtoRegexp, 12, false), true, false, false);
            J$.T(283873, 'use strict', 21, false);
            J$.F(283897, J$.I(typeof require === 'undefined' ? require = J$.R(283881, 'require', undefined, true, true) : require = J$.R(283881, 'require', require, true, true)), false)(J$.T(283889, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(283921, J$.I(typeof require === 'undefined' ? require = J$.R(283905, 'require', undefined, true, true) : require = J$.R(283905, 'require', require, true, true)), false)(J$.T(283913, 'core-js/modules/es.array.join', 21, false));
            J$.F(283945, J$.I(typeof require === 'undefined' ? require = J$.R(283929, 'require', undefined, true, true) : require = J$.R(283929, 'require', require, true, true)), false)(J$.T(283937, 'core-js/modules/es.array.map', 21, false));
            J$.F(283969, J$.I(typeof require === 'undefined' ? require = J$.R(283953, 'require', undefined, true, true) : require = J$.R(283953, 'require', require, true, true)), false)(J$.T(283961, 'core-js/modules/es.array.splice', 21, false));
            J$.F(283993, J$.I(typeof require === 'undefined' ? require = J$.R(283977, 'require', undefined, true, true) : require = J$.R(283977, 'require', require, true, true)), false)(J$.T(283985, 'core-js/modules/es.regexp.constructor', 21, false));
            J$.F(284017, J$.I(typeof require === 'undefined' ? require = J$.R(284001, 'require', undefined, true, true) : require = J$.R(284001, 'require', require, true, true)), false)(J$.T(284009, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(284041, J$.I(typeof require === 'undefined' ? require = J$.R(284025, 'require', undefined, true, true) : require = J$.R(284025, 'require', require, true, true)), false)(J$.T(284033, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(284065, J$.I(typeof require === 'undefined' ? require = J$.R(284049, 'require', undefined, true, true) : require = J$.R(284049, 'require', require, true, true)), false)(J$.T(284057, 'core-js/modules/es.string.replace', 21, false));
            J$.P(284089, J$.I(typeof module === 'undefined' ? module = J$.R(284073, 'module', undefined, true, true) : module = J$.R(284073, 'module', module, true, true)), 'exports', J$.R(284081, 'pathtoRegexp', pathtoRegexp, false, true));
            var MATCHING_GROUP_REGEXP = J$.W(284105, 'MATCHING_GROUP_REGEXP', J$.T(284097, /\((?!\?)/g, 14, false), MATCHING_GROUP_REGEXP, false, true);
            ;
        } catch (J$e) {
            J$.Ex(286217, J$e);
        } finally {
            if (J$.Sr(286225))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

