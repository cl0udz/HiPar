J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(4244625, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/path-to-regexp/index.js');
            function pathtoRegexp(path, keys, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4244505, arguments.callee, this, arguments);
                            arguments = J$.N(4244513, 'arguments', arguments, true, false, false);
                            path = J$.N(4244521, 'path', path, true, false, false);
                            keys = J$.N(4244529, 'keys', keys, true, false, false);
                            options = J$.N(4244537, 'options', options, true, false, false);
                            J$.N(4244545, 'strict', strict, false, false, false);
                            J$.N(4244553, 'end', end, false, false, false);
                            J$.N(4244561, 'flags', flags, false, false, false);
                            J$.N(4244569, 'extraOffset', extraOffset, false, false, false);
                            J$.N(4244577, 'keysOffset', keysOffset, false, false, false);
                            J$.N(4244585, 'i', i, false, false, false);
                            J$.N(4244593, 'name', name, false, false, false);
                            J$.N(4244601, 'm', m, false, false, false);
                            J$.N(4244609, 'escapeCount', escapeCount, false, false, false);
                            J$.N(4244617, 'index', index, false, false, false);
                            options = J$.W(4242633, 'options', J$.C(225040, J$.R(4242617, 'options', options, false, false)) ? J$._() : J$.T(4242625, {}, 11, false), options, false, false);
                            keys = J$.W(4242657, 'keys', J$.C(225048, J$.R(4242641, 'keys', keys, false, false)) ? J$._() : J$.T(4242649, [], 10, false), keys, false, false);
                            var strict = J$.W(4242681, 'strict', J$.G(4242673, J$.R(4242665, 'options', options, false, false), 'strict'), strict, false, false);
                            var end = J$.W(4242713, 'end', J$.B(412538, '!==', J$.G(4242697, J$.R(4242689, 'options', options, false, false), 'end'), J$.T(4242705, false, 23, false)), end, false, false);
                            var flags = J$.W(4242753, 'flags', J$.C(225056, J$.G(4242729, J$.R(4242721, 'options', options, false, false), 'sensitive')) ? J$.T(4242737, '', 21, false) : J$.T(4242745, 'i', 21, false), flags, false, false);
                            var extraOffset = J$.W(4242769, 'extraOffset', J$.T(4242761, 0, 22, false), extraOffset, false, false);
                            var keysOffset = J$.W(4242793, 'keysOffset', J$.G(4242785, J$.R(4242777, 'keys', keys, false, false), 'length'), keysOffset, false, false);
                            var i = J$.W(4242809, 'i', J$.T(4242801, 0, 22, false), i, false, false);
                            var name = J$.W(4242825, 'name', J$.T(4242817, 0, 22, false), name, false, false);
                            var m;
                            if (J$.C(225072, J$.B(412546, 'instanceof', J$.R(4242833, 'path', path, false, false), J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(4242841, 'RegExp', undefined, true, true) : RegExp = J$.R(4242841, 'RegExp', RegExp, true, true))))) {
                                while (J$.C(225064, m = J$.W(4242881, 'm', J$.M(4242873, J$.R(4242849, 'MATCHING_GROUP_REGEXP', MATCHING_GROUP_REGEXP, false, true), 'exec', false)(J$.G(4242865, J$.R(4242857, 'path', path, false, false), 'source')), m, false, false))) {
                                    J$.M(4242945, J$.R(4242889, 'keys', keys, false, false), 'push', false)(J$.T(4242937, {
                                        name: J$.B(412570, '-', name = J$.W(4242905, 'name', J$.B(412562, '+', J$.U(412554, '+', J$.R(4242897, 'name', name, false, false)), 1), name, false, false), 1),
                                        optional: J$.T(4242913, false, 23, false),
                                        offset: J$.G(4242929, J$.R(4242921, 'm', m, false, false), 'index')
                                    }, 11, false));
                                }
                                return J$.Rt(4242961, J$.R(4242953, 'path', path, false, false));
                            }
                            if (J$.C(225080, J$.M(4242985, J$.I(typeof Array === 'undefined' ? Array = J$.R(4242969, 'Array', undefined, true, true) : Array = J$.R(4242969, 'Array', Array, true, true)), 'isArray', false)(J$.R(4242977, 'path', path, false, false)))) {
                                path = J$.W(4243097, 'path', J$.M(4243089, J$.R(4242993, 'path', path, false, false), 'map', false)(J$.T(4243081, function (value) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(4243057, arguments.callee, this, arguments);
                                                arguments = J$.N(4243065, 'arguments', arguments, true, false, false);
                                                value = J$.N(4243073, 'value', value, true, false, false);
                                                return J$.Rt(4243049, J$.G(4243041, J$.F(4243033, J$.R(4243001, 'pathtoRegexp', pathtoRegexp, false, true), false)(J$.R(4243009, 'value', value, false, false), J$.R(4243017, 'keys', keys, false, false), J$.R(4243025, 'options', options, false, false)), 'source'));
                                            } catch (J$e) {
                                                J$.Ex(4244657, J$e);
                                            } finally {
                                                if (J$.Fr(4244665))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), path, false, false);
                                return J$.Rt(4243169, J$.F(4243161, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(4243105, 'RegExp', undefined, true, true) : RegExp = J$.R(4243105, 'RegExp', RegExp, true, true)), true)(J$.B(412586, '+', J$.B(412578, '+', J$.T(4243113, '(?:', 21, false), J$.M(4243137, J$.R(4243121, 'path', path, false, false), 'join', false)(J$.T(4243129, '|', 21, false))), J$.T(4243145, ')', 21, false)), J$.R(4243153, 'flags', flags, false, false)));
                            }
                            path = J$.W(4244017, 'path', J$.M(4244009, J$.M(4243801, J$.M(4243313, J$.M(4243289, J$.B(412618, '+', J$.B(412594, '+', J$.T(4243177, '^', 21, false), J$.R(4243185, 'path', path, false, false)), J$.C(225096, J$.R(4243193, 'strict', strict, false, false)) ? J$.T(4243201, '', 21, false) : J$.C(225088, J$.B(412610, '===', J$.G(4243241, J$.R(4243209, 'path', path, false, false), J$.B(412602, '-', J$.G(4243225, J$.R(4243217, 'path', path, false, false), 'length'), J$.T(4243233, 1, 22, false))), J$.T(4243249, '/', 21, false))) ? J$.T(4243257, '?', 21, false) : J$.T(4243265, '/?', 21, false)), 'replace', false)(J$.T(4243273, /\/\(/g, 14, false), J$.T(4243281, '/(?:', 21, false)), 'replace', false)(J$.T(4243297, /([\/\.])/g, 14, false), J$.T(4243305, '\\$1', 21, false)), 'replace', false)(J$.T(4243321, /(\\\/)?(\\\.)?:(\w+)(\(.*?\))?(\*)?(\?)?/g, 14, false), J$.T(4243793, function (match, slash, format, key, capture, star, optional, offset) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(4243705, arguments.callee, this, arguments);
                                            arguments = J$.N(4243713, 'arguments', arguments, true, false, false);
                                            match = J$.N(4243721, 'match', match, true, false, false);
                                            slash = J$.N(4243729, 'slash', slash, true, false, false);
                                            format = J$.N(4243737, 'format', format, true, false, false);
                                            key = J$.N(4243745, 'key', key, true, false, false);
                                            capture = J$.N(4243753, 'capture', capture, true, false, false);
                                            star = J$.N(4243761, 'star', star, true, false, false);
                                            optional = J$.N(4243769, 'optional', optional, true, false, false);
                                            offset = J$.N(4243777, 'offset', offset, true, false, false);
                                            J$.N(4243785, 'result', result, false, false, false);
                                            slash = J$.W(4243345, 'slash', J$.C(225104, J$.R(4243329, 'slash', slash, false, false)) ? J$._() : J$.T(4243337, '', 21, false), slash, false, false);
                                            format = J$.W(4243369, 'format', J$.C(225112, J$.R(4243353, 'format', format, false, false)) ? J$._() : J$.T(4243361, '', 21, false), format, false, false);
                                            capture = J$.W(4243409, 'capture', J$.C(225120, J$.R(4243377, 'capture', capture, false, false)) ? J$._() : J$.B(412634, '+', J$.B(412626, '+', J$.T(4243385, '([^\\/', 21, false), J$.R(4243393, 'format', format, false, false)), J$.T(4243401, ']+?)', 21, false)), capture, false, false);
                                            optional = J$.W(4243433, 'optional', J$.C(225128, J$.R(4243417, 'optional', optional, false, false)) ? J$._() : J$.T(4243425, '', 21, false), optional, false, false);
                                            J$.M(4243489, J$.R(4243441, 'keys', keys, false, false), 'push', false)(J$.T(4243481, {
                                                name: J$.R(4243449, 'key', key, false, false),
                                                optional: J$.U(412650, '!', J$.U(412642, '!', J$.R(4243457, 'optional', optional, false, false))),
                                                offset: J$.B(412658, '+', J$.R(4243465, 'offset', offset, false, false), J$.R(4243473, 'extraOffset', extraOffset, false, false))
                                            }, 11, false));
                                            var result = J$.W(4243633, 'result', J$.B(412738, '+', J$.B(412730, '+', J$.B(412722, '+', J$.B(412698, '+', J$.B(412690, '+', J$.B(412682, '+', J$.B(412674, '+', J$.B(412666, '+', J$.T(4243497, '', 21, false), J$.C(225136, J$.R(4243505, 'optional', optional, false, false)) ? J$.T(4243513, '', 21, false) : J$.R(4243521, 'slash', slash, false, false)), J$.T(4243529, '(?:', 21, false)), J$.R(4243537, 'format', format, false, false)), J$.C(225144, J$.R(4243545, 'optional', optional, false, false)) ? J$.R(4243553, 'slash', slash, false, false) : J$.T(4243561, '', 21, false)), J$.R(4243569, 'capture', capture, false, false)), J$.C(225152, J$.R(4243577, 'star', star, false, false)) ? J$.B(412714, '+', J$.B(412706, '+', J$.T(4243585, '((?:[\\/', 21, false), J$.R(4243593, 'format', format, false, false)), J$.T(4243601, '].+?)?)', 21, false)) : J$.T(4243609, '', 21, false)), J$.T(4243617, ')', 21, false)), J$.R(4243625, 'optional', optional, false, false)), result, false, false);
                                            extraOffset = J$.W(4243681, 'extraOffset', J$.B(412754, '+', J$.R(4243673, 'extraOffset', extraOffset, false, false), J$.B(412746, '-', J$.G(4243649, J$.R(4243641, 'result', result, false, false), 'length'), J$.G(4243665, J$.R(4243657, 'match', match, false, false), 'length'))), extraOffset, false, false);
                                            return J$.Rt(4243697, J$.R(4243689, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(4244673, J$e);
                                        } finally {
                                            if (J$.Fr(4244681))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'replace', false)(J$.T(4243809, /\*/g, 14, false), J$.T(4244001, function (star, index) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(4243961, arguments.callee, this, arguments);
                                            arguments = J$.N(4243969, 'arguments', arguments, true, false, false);
                                            star = J$.N(4243977, 'star', star, true, false, false);
                                            index = J$.N(4243985, 'index', index, true, false, false);
                                            J$.N(4243993, 'len', len, false, false, false);
                                            var len = J$.W(4243833, 'len', J$.G(4243825, J$.R(4243817, 'keys', keys, false, false), 'length'), len, false, false);
                                            while (J$.C(225168, J$.C(225160, J$.B(412786, '>', J$.B(412778, '+', len = J$.W(4243849, 'len', J$.B(412770, '-', J$.U(412762, '+', J$.R(4243841, 'len', len, false, false)), 1), len, false, false), 1), J$.R(4243857, 'keysOffset', keysOffset, false, false))) ? J$.B(412794, '>', J$.G(4243889, J$.G(4243881, J$.R(4243865, 'keys', keys, false, false), J$.R(4243873, 'len', len, false, false)), 'offset'), J$.R(4243897, 'index', index, false, false)) : J$._())) {
                                                J$.A(4243937, J$.G(4243921, J$.R(4243905, 'keys', keys, false, false), J$.R(4243913, 'len', len, false, false)), 'offset', '+')(J$.T(4243929, 3, 22, false));
                                            }
                                            return J$.Rt(4243953, J$.T(4243945, '(.*)', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(4244689, J$e);
                                        } finally {
                                            if (J$.Fr(4244697))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), path, false, false);
                            while (J$.C(225208, m = J$.W(4244049, 'm', J$.M(4244041, J$.R(4244025, 'MATCHING_GROUP_REGEXP', MATCHING_GROUP_REGEXP, false, true), 'exec', false)(J$.R(4244033, 'path', path, false, false)), m, false, false))) {
                                var escapeCount = J$.W(4244065, 'escapeCount', J$.T(4244057, 0, 22, false), escapeCount, false, false);
                                var index = J$.W(4244089, 'index', J$.G(4244081, J$.R(4244073, 'm', m, false, false), 'index'), index, false, false);
                                while (J$.C(225176, J$.B(412818, '===', J$.M(4244121, J$.R(4244097, 'path', path, false, false), 'charAt', false)(index = J$.W(4244113, 'index', J$.B(412810, '-', J$.U(412802, '+', J$.R(4244105, 'index', index, false, false)), 1), index, false, false)), J$.T(4244129, '\\', 21, false)))) {
                                    J$.B(412842, '-', escapeCount = J$.W(4244145, 'escapeCount', J$.B(412834, '+', J$.U(412826, '+', J$.R(4244137, 'escapeCount', escapeCount, false, false)), 1), escapeCount, false, false), 1);
                                }
                                if (J$.C(225184, J$.B(412858, '===', J$.B(412850, '%', J$.R(4244153, 'escapeCount', escapeCount, false, false), J$.T(4244161, 2, 22, false)), J$.T(4244169, 1, 22, false)))) {
                                    continue;
                                }
                                if (J$.C(225200, J$.C(225192, J$.B(412874, '===', J$.B(412866, '+', J$.R(4244177, 'keysOffset', keysOffset, false, false), J$.R(4244185, 'i', i, false, false)), J$.G(4244201, J$.R(4244193, 'keys', keys, false, false), 'length'))) ? J$._() : J$.B(412890, '>', J$.G(4244241, J$.G(4244233, J$.R(4244209, 'keys', keys, false, false), J$.B(412882, '+', J$.R(4244217, 'keysOffset', keysOffset, false, false), J$.R(4244225, 'i', i, false, false))), 'offset'), J$.G(4244257, J$.R(4244249, 'm', m, false, false), 'index')))) {
                                    J$.M(4244345, J$.R(4244265, 'keys', keys, false, false), 'splice', false)(J$.B(412898, '+', J$.R(4244273, 'keysOffset', keysOffset, false, false), J$.R(4244281, 'i', i, false, false)), J$.T(4244289, 0, 22, false), J$.T(4244337, {
                                        name: J$.B(412922, '-', name = J$.W(4244305, 'name', J$.B(412914, '+', J$.U(412906, '+', J$.R(4244297, 'name', name, false, false)), 1), name, false, false), 1),
                                        optional: J$.T(4244313, false, 23, false),
                                        offset: J$.G(4244329, J$.R(4244321, 'm', m, false, false), 'index')
                                    }, 11, false));
                                }
                                J$.B(412946, '-', i = J$.W(4244361, 'i', J$.B(412938, '+', J$.U(412930, '+', J$.R(4244353, 'i', i, false, false)), 1), i, false, false), 1);
                            }
                            path = J$.W(4244457, 'path', J$.B(412970, '+', J$.R(4244449, 'path', path, false, false), J$.C(225224, J$.R(4244369, 'end', end, false, false)) ? J$.T(4244377, '$', 21, false) : J$.C(225216, J$.B(412962, '===', J$.G(4244417, J$.R(4244385, 'path', path, false, false), J$.B(412954, '-', J$.G(4244401, J$.R(4244393, 'path', path, false, false), 'length'), J$.T(4244409, 1, 22, false))), J$.T(4244425, '/', 21, false))) ? J$.T(4244433, '', 21, false) : J$.T(4244441, '(?=\\/|$)', 21, false)), path, false, false);
                            return J$.Rt(4244497, J$.F(4244489, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(4244465, 'RegExp', undefined, true, true) : RegExp = J$.R(4244465, 'RegExp', RegExp, true, true)), true)(J$.R(4244473, 'path', path, false, false), J$.R(4244481, 'flags', flags, false, false)));
                        } catch (J$e) {
                            J$.Ex(4244705, J$e);
                        } finally {
                            if (J$.Fr(4244713))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4244633, 'MATCHING_GROUP_REGEXP', MATCHING_GROUP_REGEXP, false, false, false);
            pathtoRegexp = J$.N(4244649, 'pathtoRegexp', J$.T(4244641, pathtoRegexp, 12, false), true, false, false);
            J$.T(4242377, 'use strict', 21, false);
            J$.F(4242401, J$.I(typeof require === 'undefined' ? require = J$.R(4242385, 'require', undefined, true, true) : require = J$.R(4242385, 'require', require, true, true)), false)(J$.T(4242393, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(4242425, J$.I(typeof require === 'undefined' ? require = J$.R(4242409, 'require', undefined, true, true) : require = J$.R(4242409, 'require', require, true, true)), false)(J$.T(4242417, 'core-js/modules/es.array.join', 21, false));
            J$.F(4242449, J$.I(typeof require === 'undefined' ? require = J$.R(4242433, 'require', undefined, true, true) : require = J$.R(4242433, 'require', require, true, true)), false)(J$.T(4242441, 'core-js/modules/es.array.map', 21, false));
            J$.F(4242473, J$.I(typeof require === 'undefined' ? require = J$.R(4242457, 'require', undefined, true, true) : require = J$.R(4242457, 'require', require, true, true)), false)(J$.T(4242465, 'core-js/modules/es.array.splice', 21, false));
            J$.F(4242497, J$.I(typeof require === 'undefined' ? require = J$.R(4242481, 'require', undefined, true, true) : require = J$.R(4242481, 'require', require, true, true)), false)(J$.T(4242489, 'core-js/modules/es.regexp.constructor', 21, false));
            J$.F(4242521, J$.I(typeof require === 'undefined' ? require = J$.R(4242505, 'require', undefined, true, true) : require = J$.R(4242505, 'require', require, true, true)), false)(J$.T(4242513, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(4242545, J$.I(typeof require === 'undefined' ? require = J$.R(4242529, 'require', undefined, true, true) : require = J$.R(4242529, 'require', require, true, true)), false)(J$.T(4242537, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(4242569, J$.I(typeof require === 'undefined' ? require = J$.R(4242553, 'require', undefined, true, true) : require = J$.R(4242553, 'require', require, true, true)), false)(J$.T(4242561, 'core-js/modules/es.string.replace', 21, false));
            J$.P(4242593, J$.I(typeof module === 'undefined' ? module = J$.R(4242577, 'module', undefined, true, true) : module = J$.R(4242577, 'module', module, true, true)), 'exports', J$.R(4242585, 'pathtoRegexp', pathtoRegexp, false, true));
            var MATCHING_GROUP_REGEXP = J$.W(4242609, 'MATCHING_GROUP_REGEXP', J$.T(4242601, /\((?!\?)/g, 14, false), MATCHING_GROUP_REGEXP, false, true);
            ;
        } catch (J$e) {
            J$.Ex(4244721, J$e);
        } finally {
            if (J$.Sr(4244729))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

