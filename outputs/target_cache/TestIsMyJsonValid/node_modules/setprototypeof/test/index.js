J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(436401, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/setprototypeof/test/index.js');
            J$.N(436409, 'assert', assert, false, false, false);
            J$.N(436417, 'setPrototypeOf', setPrototypeOf, false, false, false);
            J$.T(435801, 'use strict', 21, false);
            J$.F(435825, J$.I(typeof require === 'undefined' ? require = J$.R(435809, 'require', undefined, true, true) : require = J$.R(435809, 'require', require, true, true)), false)(J$.T(435817, 'core-js/modules/es.object.get-prototype-of', 21, false));
            var assert = J$.W(435857, 'assert', J$.F(435849, J$.I(typeof require === 'undefined' ? require = J$.R(435833, 'require', undefined, true, true) : require = J$.R(435833, 'require', require, true, true)), false)(J$.T(435841, 'assert', 21, false)), assert, false, true);
            var setPrototypeOf = J$.W(435889, 'setPrototypeOf', J$.F(435881, J$.I(typeof require === 'undefined' ? require = J$.R(435865, 'require', undefined, true, true) : require = J$.R(435865, 'require', require, true, true)), false)(J$.T(435873, '..', 21, false)), setPrototypeOf, false, true);
            J$.F(436393, J$.I(typeof describe === 'undefined' ? describe = J$.R(435897, 'describe', undefined, true, true) : describe = J$.R(435897, 'describe', describe, true, true)), false)(J$.T(435905, 'setProtoOf(obj, proto)', 21, false), J$.T(436385, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(436369, arguments.callee, this, arguments);
                            arguments = J$.N(436377, 'arguments', arguments, true, false, false);
                            J$.F(436361, J$.I(typeof it === 'undefined' ? it = J$.R(435913, 'it', undefined, true, true) : it = J$.R(435913, 'it', it, true, true)), false)(J$.T(435921, 'should merge objects', 21, false), J$.T(436353, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(436313, arguments.callee, this, arguments);
                                            arguments = J$.N(436321, 'arguments', arguments, true, false, false);
                                            J$.N(436329, 'obj', obj, false, false, false);
                                            J$.N(436337, 'proto', proto, false, false, false);
                                            J$.N(436345, 'mergeObj', mergeObj, false, false, false);
                                            var obj = J$.W(435953, 'obj', J$.T(435945, {
                                                a: J$.T(435929, 1, 22, false),
                                                b: J$.T(435937, 2, 22, false)
                                            }, 11, false), obj, false, false);
                                            var proto = J$.W(435985, 'proto', J$.T(435977, {
                                                b: J$.T(435961, 3, 22, false),
                                                c: J$.T(435969, 4, 22, false)
                                            }, 11, false), proto, false, false);
                                            var mergeObj = J$.W(436025, 'mergeObj', J$.F(436017, J$.R(435993, 'setPrototypeOf', setPrototypeOf, false, true), false)(J$.R(436001, 'obj', obj, false, false), J$.R(436009, 'proto', proto, false, false)), mergeObj, false, false);
                                            if (J$.C(24040, J$.G(436041, J$.I(typeof Object === 'undefined' ? Object = J$.R(436033, 'Object', undefined, true, true) : Object = J$.R(436033, 'Object', Object, true, true)), 'getPrototypeOf'))) {
                                                J$.M(436089, J$.R(436049, 'assert', assert, false, true), 'strictEqual', false)(J$.M(436073, J$.I(typeof Object === 'undefined' ? Object = J$.R(436057, 'Object', undefined, true, true) : Object = J$.R(436057, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(436065, 'obj', obj, false, false)), J$.R(436081, 'proto', proto, false, false));
                                            } else if (J$.C(24032, J$.B(37602, 'instanceof', J$.T(436105, { __proto__: J$.T(436097, [], 10, false) }, 11, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(436113, 'Array', undefined, true, true) : Array = J$.R(436113, 'Array', Array, true, true))))) {
                                                J$.M(436153, J$.R(436121, 'assert', assert, false, true), 'strictEqual', false)(J$.G(436137, J$.R(436129, 'obj', obj, false, false), '__proto__'), J$.R(436145, 'proto', proto, false, false));
                                            } else {
                                                J$.M(436193, J$.R(436161, 'assert', assert, false, true), 'strictEqual', false)(J$.G(436177, J$.R(436169, 'obj', obj, false, false), 'a'), J$.T(436185, 1, 22, false));
                                                J$.M(436233, J$.R(436201, 'assert', assert, false, true), 'strictEqual', false)(J$.G(436217, J$.R(436209, 'obj', obj, false, false), 'b'), J$.T(436225, 2, 22, false));
                                                J$.M(436273, J$.R(436241, 'assert', assert, false, true), 'strictEqual', false)(J$.G(436257, J$.R(436249, 'obj', obj, false, false), 'c'), J$.T(436265, 4, 22, false));
                                            }
                                            J$.M(436305, J$.R(436281, 'assert', assert, false, true), 'strictEqual', false)(J$.R(436289, 'mergeObj', mergeObj, false, false), J$.R(436297, 'obj', obj, false, false));
                                        } catch (J$e) {
                                            J$.Ex(436425, J$e);
                                        } finally {
                                            if (J$.Fr(436433))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(436441, J$e);
                        } finally {
                            if (J$.Fr(436449))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(436457, J$e);
        } finally {
            if (J$.Sr(436465))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

