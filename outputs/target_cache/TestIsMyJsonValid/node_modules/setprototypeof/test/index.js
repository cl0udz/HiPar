J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(479273, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/setprototypeof/test/index.js');
            J$.N(479281, 'assert', assert, false, false, false);
            J$.N(479289, 'setPrototypeOf', setPrototypeOf, false, false, false);
            J$.T(478673, 'use strict', 21, false);
            J$.F(478697, J$.I(typeof require === 'undefined' ? require = J$.R(478681, 'require', undefined, true, true) : require = J$.R(478681, 'require', require, true, true)), false)(J$.T(478689, 'core-js/modules/es.object.get-prototype-of', 21, false));
            var assert = J$.W(478729, 'assert', J$.F(478721, J$.I(typeof require === 'undefined' ? require = J$.R(478705, 'require', undefined, true, true) : require = J$.R(478705, 'require', require, true, true)), false)(J$.T(478713, 'assert', 21, false)), assert, false, true);
            var setPrototypeOf = J$.W(478761, 'setPrototypeOf', J$.F(478753, J$.I(typeof require === 'undefined' ? require = J$.R(478737, 'require', undefined, true, true) : require = J$.R(478737, 'require', require, true, true)), false)(J$.T(478745, '..', 21, false)), setPrototypeOf, false, true);
            J$.F(479265, J$.I(typeof describe === 'undefined' ? describe = J$.R(478769, 'describe', undefined, true, true) : describe = J$.R(478769, 'describe', describe, true, true)), false)(J$.T(478777, 'setProtoOf(obj, proto)', 21, false), J$.T(479257, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(479241, arguments.callee, this, arguments);
                            arguments = J$.N(479249, 'arguments', arguments, true, false, false);
                            J$.F(479233, J$.I(typeof it === 'undefined' ? it = J$.R(478785, 'it', undefined, true, true) : it = J$.R(478785, 'it', it, true, true)), false)(J$.T(478793, 'should merge objects', 21, false), J$.T(479225, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(479185, arguments.callee, this, arguments);
                                            arguments = J$.N(479193, 'arguments', arguments, true, false, false);
                                            J$.N(479201, 'obj', obj, false, false, false);
                                            J$.N(479209, 'proto', proto, false, false, false);
                                            J$.N(479217, 'mergeObj', mergeObj, false, false, false);
                                            var obj = J$.W(478825, 'obj', J$.T(478817, {
                                                a: J$.T(478801, 1, 22, false),
                                                b: J$.T(478809, 2, 22, false)
                                            }, 11, false), obj, false, false);
                                            var proto = J$.W(478857, 'proto', J$.T(478849, {
                                                b: J$.T(478833, 3, 22, false),
                                                c: J$.T(478841, 4, 22, false)
                                            }, 11, false), proto, false, false);
                                            var mergeObj = J$.W(478897, 'mergeObj', J$.F(478889, J$.R(478865, 'setPrototypeOf', setPrototypeOf, false, true), false)(J$.R(478873, 'obj', obj, false, false), J$.R(478881, 'proto', proto, false, false)), mergeObj, false, false);
                                            if (J$.C(26312, J$.G(478913, J$.I(typeof Object === 'undefined' ? Object = J$.R(478905, 'Object', undefined, true, true) : Object = J$.R(478905, 'Object', Object, true, true)), 'getPrototypeOf'))) {
                                                J$.M(478961, J$.R(478921, 'assert', assert, false, true), 'strictEqual', false)(J$.M(478945, J$.I(typeof Object === 'undefined' ? Object = J$.R(478929, 'Object', undefined, true, true) : Object = J$.R(478929, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(478937, 'obj', obj, false, false)), J$.R(478953, 'proto', proto, false, false));
                                            } else if (J$.C(26304, J$.B(40722, 'instanceof', J$.T(478977, { __proto__: J$.T(478969, [], 10, false) }, 11, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(478985, 'Array', undefined, true, true) : Array = J$.R(478985, 'Array', Array, true, true))))) {
                                                J$.M(479025, J$.R(478993, 'assert', assert, false, true), 'strictEqual', false)(J$.G(479009, J$.R(479001, 'obj', obj, false, false), '__proto__'), J$.R(479017, 'proto', proto, false, false));
                                            } else {
                                                J$.M(479065, J$.R(479033, 'assert', assert, false, true), 'strictEqual', false)(J$.G(479049, J$.R(479041, 'obj', obj, false, false), 'a'), J$.T(479057, 1, 22, false));
                                                J$.M(479105, J$.R(479073, 'assert', assert, false, true), 'strictEqual', false)(J$.G(479089, J$.R(479081, 'obj', obj, false, false), 'b'), J$.T(479097, 2, 22, false));
                                                J$.M(479145, J$.R(479113, 'assert', assert, false, true), 'strictEqual', false)(J$.G(479129, J$.R(479121, 'obj', obj, false, false), 'c'), J$.T(479137, 4, 22, false));
                                            }
                                            J$.M(479177, J$.R(479153, 'assert', assert, false, true), 'strictEqual', false)(J$.R(479161, 'mergeObj', mergeObj, false, false), J$.R(479169, 'obj', obj, false, false));
                                        } catch (J$e) {
                                            J$.Ex(479297, J$e);
                                        } finally {
                                            if (J$.Fr(479305))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(479313, J$e);
                        } finally {
                            if (J$.Fr(479321))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(479329, J$e);
        } finally {
            if (J$.Sr(479337))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

