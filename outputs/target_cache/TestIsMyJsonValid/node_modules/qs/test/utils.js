J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(374761, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/qs/test/utils.js');
            J$.N(374769, 'test', test, false, false, false);
            J$.N(374777, 'inspect', inspect, false, false, false);
            J$.N(374785, 'SaferBuffer', SaferBuffer, false, false, false);
            J$.N(374793, 'forEach', forEach, false, false, false);
            J$.N(374801, 'utils', utils, false, false, false);
            J$.T(370345, 'use strict', 21, false);
            J$.F(370369, J$.I(typeof require === 'undefined' ? require = J$.R(370353, 'require', undefined, true, true) : require = J$.R(370353, 'require', require, true, true)), false)(J$.T(370361, 'core-js/modules/es.object.define-property', 21, false));
            var test = J$.W(370401, 'test', J$.F(370393, J$.I(typeof require === 'undefined' ? require = J$.R(370377, 'require', undefined, true, true) : require = J$.R(370377, 'require', require, true, true)), false)(J$.T(370385, 'tape', 21, false)), test, false, true);
            var inspect = J$.W(370433, 'inspect', J$.F(370425, J$.I(typeof require === 'undefined' ? require = J$.R(370409, 'require', undefined, true, true) : require = J$.R(370409, 'require', require, true, true)), false)(J$.T(370417, 'object-inspect', 21, false)), inspect, false, true);
            var SaferBuffer = J$.W(370473, 'SaferBuffer', J$.G(370465, J$.F(370457, J$.I(typeof require === 'undefined' ? require = J$.R(370441, 'require', undefined, true, true) : require = J$.R(370441, 'require', require, true, true)), false)(J$.T(370449, 'safer-buffer', 21, false)), 'Buffer'), SaferBuffer, false, true);
            var forEach = J$.W(370505, 'forEach', J$.F(370497, J$.I(typeof require === 'undefined' ? require = J$.R(370481, 'require', undefined, true, true) : require = J$.R(370481, 'require', require, true, true)), false)(J$.T(370489, 'for-each', 21, false)), forEach, false, true);
            var utils = J$.W(370537, 'utils', J$.F(370529, J$.I(typeof require === 'undefined' ? require = J$.R(370513, 'require', undefined, true, true) : require = J$.R(370513, 'require', require, true, true)), false)(J$.T(370521, '../lib/utils', 21, false)), utils, false, true);
            J$.F(372193, J$.R(370545, 'test', test, false, true), false)(J$.T(370553, 'merge()', 21, false), J$.T(372185, function (t) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(372121, arguments.callee, this, arguments);
                            arguments = J$.N(372129, 'arguments', arguments, true, false, false);
                            t = J$.N(372137, 't', t, true, false, false);
                            J$.N(372145, 'oneMerged', oneMerged, false, false, false);
                            J$.N(372153, 'twoMerged', twoMerged, false, false, false);
                            J$.N(372161, 'sandwiched', sandwiched, false, false, false);
                            J$.N(372169, 'nestedArrays', nestedArrays, false, false, false);
                            J$.N(372177, 'noOptionsNonObjectSource', noOptionsNonObjectSource, false, false, false);
                            J$.M(370633, J$.R(370561, 't', t, false, false), 'deepEqual', false)(J$.M(370593, J$.R(370569, 'utils', utils, false, true), 'merge', false)(J$.T(370577, null, 25, false), J$.T(370585, true, 23, false)), J$.T(370617, [
                                J$.T(370601, null, 25, false),
                                J$.T(370609, true, 23, false)
                            ], 10, false), J$.T(370625, 'merges true into null', 21, false));
                            J$.M(370721, J$.R(370641, 't', t, false, false), 'deepEqual', false)(J$.M(370681, J$.R(370649, 'utils', utils, false, true), 'merge', false)(J$.T(370657, null, 25, false), J$.T(370673, [J$.T(370665, 42, 22, false)], 10, false)), J$.T(370705, [
                                J$.T(370689, null, 25, false),
                                J$.T(370697, 42, 22, false)
                            ], 10, false), J$.T(370713, 'merges null into an array', 21, false));
                            J$.M(370825, J$.R(370729, 't', t, false, false), 'deepEqual', false)(J$.M(370777, J$.R(370737, 'utils', utils, false, true), 'merge', false)(J$.T(370753, { a: J$.T(370745, 'b', 21, false) }, 11, false), J$.T(370769, { a: J$.T(370761, 'c', 21, false) }, 11, false)), J$.T(370809, {
                                a: J$.T(370801, [
                                    J$.T(370785, 'b', 21, false),
                                    J$.T(370793, 'c', 21, false)
                                ], 10, false)
                            }, 11, false), J$.T(370817, 'merges two objects with the same key', 21, false));
                            var oneMerged = J$.W(370889, 'oneMerged', J$.M(370881, J$.R(370833, 'utils', utils, false, true), 'merge', false)(J$.T(370849, { foo: J$.T(370841, 'bar', 21, false) }, 11, false), J$.T(370873, { foo: J$.T(370865, { first: J$.T(370857, '123', 21, false) }, 11, false) }, 11, false)), oneMerged, false, false);
                            J$.M(370961, J$.R(370897, 't', t, false, false), 'deepEqual', false)(J$.R(370905, 'oneMerged', oneMerged, false, false), J$.T(370945, {
                                foo: J$.T(370937, [
                                    J$.T(370913, 'bar', 21, false),
                                    J$.T(370929, { first: J$.T(370921, '123', 21, false) }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(370953, 'merges a standalone and an object into an array', 21, false));
                            var twoMerged = J$.W(371049, 'twoMerged', J$.M(371041, J$.R(370969, 'utils', utils, false, true), 'merge', false)(J$.T(371009, {
                                foo: J$.T(371001, [
                                    J$.T(370977, 'bar', 21, false),
                                    J$.T(370993, { first: J$.T(370985, '123', 21, false) }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(371033, { foo: J$.T(371025, { second: J$.T(371017, '456', 21, false) }, 11, false) }, 11, false)), twoMerged, false, false);
                            J$.M(371129, J$.R(371057, 't', t, false, false), 'deepEqual', false)(J$.R(371065, 'twoMerged', twoMerged, false, false), J$.T(371113, {
                                foo: J$.T(371105, {
                                    0: J$.T(371073, 'bar', 21, false),
                                    1: J$.T(371089, { first: J$.T(371081, '123', 21, false) }, 11, false),
                                    second: J$.T(371097, '456', 21, false)
                                }, 11, false)
                            }, 11, false), J$.T(371121, 'merges a standalone and two objects into an array', 21, false));
                            var sandwiched = J$.W(371217, 'sandwiched', J$.M(371209, J$.R(371137, 'utils', utils, false, true), 'merge', false)(J$.T(371185, {
                                foo: J$.T(371177, [
                                    J$.T(371145, 'bar', 21, false),
                                    J$.T(371169, {
                                        first: J$.T(371153, '123', 21, false),
                                        second: J$.T(371161, '456', 21, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(371201, { foo: J$.T(371193, 'baz', 21, false) }, 11, false)), sandwiched, false, false);
                            J$.M(371305, J$.R(371225, 't', t, false, false), 'deepEqual', false)(J$.R(371233, 'sandwiched', sandwiched, false, false), J$.T(371289, {
                                foo: J$.T(371281, [
                                    J$.T(371241, 'bar', 21, false),
                                    J$.T(371265, {
                                        first: J$.T(371249, '123', 21, false),
                                        second: J$.T(371257, '456', 21, false)
                                    }, 11, false),
                                    J$.T(371273, 'baz', 21, false)
                                ], 10, false)
                            }, 11, false), J$.T(371297, 'merges an object sandwiched by two standalones into an array', 21, false));
                            var nestedArrays = J$.W(371385, 'nestedArrays', J$.M(371377, J$.R(371313, 'utils', utils, false, true), 'merge', false)(J$.T(371337, { foo: J$.T(371329, [J$.T(371321, 'baz', 21, false)], 10, false) }, 11, false), J$.T(371369, {
                                foo: J$.T(371361, [
                                    J$.T(371345, 'bar', 21, false),
                                    J$.T(371353, 'xyzzy', 21, false)
                                ], 10, false)
                            }, 11, false)), nestedArrays, false, false);
                            J$.M(371449, J$.R(371393, 't', t, false, false), 'deepEqual', false)(J$.R(371401, 'nestedArrays', nestedArrays, false, false), J$.T(371441, {
                                foo: J$.T(371433, [
                                    J$.T(371409, 'baz', 21, false),
                                    J$.T(371417, 'bar', 21, false),
                                    J$.T(371425, 'xyzzy', 21, false)
                                ], 10, false)
                            }, 11, false));
                            var noOptionsNonObjectSource = J$.W(371497, 'noOptionsNonObjectSource', J$.M(371489, J$.R(371457, 'utils', utils, false, true), 'merge', false)(J$.T(371473, { foo: J$.T(371465, 'baz', 21, false) }, 11, false), J$.T(371481, 'bar', 21, false)), noOptionsNonObjectSource, false, false);
                            J$.M(371545, J$.R(371505, 't', t, false, false), 'deepEqual', false)(J$.R(371513, 'noOptionsNonObjectSource', noOptionsNonObjectSource, false, false), J$.T(371537, {
                                foo: J$.T(371521, 'baz', 21, false),
                                bar: J$.T(371529, true, 23, false)
                            }, 11, false));
                            J$.M(372097, J$.R(371553, 't', t, false, false), 'test', false)(J$.T(371561, 'avoids invoking array setters unnecessarily', 21, false), J$.T(371593, { skip: J$.B(33130, '!==', J$.U(33122, 'typeof', J$.G(371577, J$.I(typeof Object === 'undefined' ? Object = J$.R(371569, 'Object', undefined, true, true) : Object = J$.R(371569, 'Object', Object, true, true)), 'defineProperty')), J$.T(371585, 'function', 21, false)) }, 11, false), J$.T(372089, function (st) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(372041, arguments.callee, this, arguments);
                                            arguments = J$.N(372049, 'arguments', arguments, true, false, false);
                                            st = J$.N(372057, 'st', st, true, false, false);
                                            J$.N(372065, 'setCount', setCount, false, false, false);
                                            J$.N(372073, 'getCount', getCount, false, false, false);
                                            J$.N(372081, 'observed', observed, false, false, false);
                                            var setCount = J$.W(371609, 'setCount', J$.T(371601, 0, 22, false), setCount, false, false);
                                            var getCount = J$.W(371625, 'getCount', J$.T(371617, 0, 22, false), getCount, false, false);
                                            var observed = J$.W(371641, 'observed', J$.T(371633, [], 10, false), observed, false, false);
                                            J$.M(371801, J$.I(typeof Object === 'undefined' ? Object = J$.R(371649, 'Object', undefined, true, true) : Object = J$.R(371649, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(371657, 'observed', observed, false, false), J$.T(371665, 0, 22, false), J$.T(371793, {
                                                get: J$.T(371737, function get() {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(371721, arguments.callee, this, arguments);
                                                                arguments = J$.N(371729, 'arguments', arguments, true, false, false);
                                                                getCount = J$.W(371689, 'getCount', J$.B(33138, '+', J$.R(371681, 'getCount', getCount, false, false), J$.T(371673, 1, 22, false)), getCount, false, false);
                                                                return J$.Rt(371713, J$.T(371705, { bar: J$.T(371697, 'baz', 21, false) }, 11, false));
                                                            } catch (J$e) {
                                                                J$.Ex(374809, J$e);
                                                            } finally {
                                                                if (J$.Fr(374817))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false),
                                                set: J$.T(371785, function set() {
                                                    jalangiLabel1:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(371769, arguments.callee, this, arguments);
                                                                arguments = J$.N(371777, 'arguments', arguments, true, false, false);
                                                                setCount = J$.W(371761, 'setCount', J$.B(33146, '+', J$.R(371753, 'setCount', setCount, false, false), J$.T(371745, 1, 22, false)), setCount, false, false);
                                                            } catch (J$e) {
                                                                J$.Ex(374825, J$e);
                                                            } finally {
                                                                if (J$.Fr(374833))
                                                                    continue jalangiLabel1;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)
                                            }, 11, false));
                                            J$.M(371841, J$.R(371809, 'utils', utils, false, true), 'merge', false)(J$.R(371817, 'observed', observed, false, false), J$.T(371833, [J$.T(371825, null, 25, false)], 10, false));
                                            J$.M(371873, J$.R(371849, 'st', st, false, false), 'equal', false)(J$.R(371857, 'setCount', setCount, false, false), J$.T(371865, 0, 22, false));
                                            J$.M(371905, J$.R(371881, 'st', st, false, false), 'equal', false)(J$.R(371889, 'getCount', getCount, false, false), J$.T(371897, 1, 22, false));
                                            J$.P(371953, J$.R(371913, 'observed', observed, false, false), J$.T(371921, 0, 22, false), J$.G(371945, J$.R(371929, 'observed', observed, false, false), J$.T(371937, 0, 22, false)));
                                            J$.M(371985, J$.R(371961, 'st', st, false, false), 'equal', false)(J$.R(371969, 'setCount', setCount, false, false), J$.T(371977, 1, 22, false));
                                            J$.M(372017, J$.R(371993, 'st', st, false, false), 'equal', false)(J$.R(372001, 'getCount', getCount, false, false), J$.T(372009, 2, 22, false));
                                            J$.M(372033, J$.R(372025, 'st', st, false, false), 'end', false)();
                                        } catch (J$e) {
                                            J$.Ex(374841, J$e);
                                        } finally {
                                            if (J$.Fr(374849))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(372113, J$.R(372105, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(374857, J$e);
                        } finally {
                            if (J$.Fr(374865))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(372553, J$.R(372201, 'test', test, false, true), false)(J$.T(372209, 'assign()', 21, false), J$.T(372545, function (t) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(372497, arguments.callee, this, arguments);
                            arguments = J$.N(372505, 'arguments', arguments, true, false, false);
                            t = J$.N(372513, 't', t, true, false, false);
                            J$.N(372521, 'target', target, false, false, false);
                            J$.N(372529, 'source', source, false, false, false);
                            J$.N(372537, 'result', result, false, false, false);
                            var target = J$.W(372241, 'target', J$.T(372233, {
                                a: J$.T(372217, 1, 22, false),
                                b: J$.T(372225, 2, 22, false)
                            }, 11, false), target, false, false);
                            var source = J$.W(372273, 'source', J$.T(372265, {
                                b: J$.T(372249, 3, 22, false),
                                c: J$.T(372257, 4, 22, false)
                            }, 11, false), source, false, false);
                            var result = J$.W(372313, 'result', J$.M(372305, J$.R(372281, 'utils', utils, false, true), 'assign', false)(J$.R(372289, 'target', target, false, false), J$.R(372297, 'source', source, false, false)), result, false, false);
                            J$.M(372353, J$.R(372321, 't', t, false, false), 'equal', false)(J$.R(372329, 'result', result, false, false), J$.R(372337, 'target', target, false, false), J$.T(372345, 'returns the target', 21, false));
                            J$.M(372417, J$.R(372361, 't', t, false, false), 'deepEqual', false)(J$.R(372369, 'target', target, false, false), J$.T(372401, {
                                a: J$.T(372377, 1, 22, false),
                                b: J$.T(372385, 3, 22, false),
                                c: J$.T(372393, 4, 22, false)
                            }, 11, false), J$.T(372409, 'target and source are merged', 21, false));
                            J$.M(372473, J$.R(372425, 't', t, false, false), 'deepEqual', false)(J$.R(372433, 'source', source, false, false), J$.T(372457, {
                                b: J$.T(372441, 3, 22, false),
                                c: J$.T(372449, 4, 22, false)
                            }, 11, false), J$.T(372465, 'source is untouched', 21, false));
                            J$.M(372489, J$.R(372481, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(374873, J$e);
                        } finally {
                            if (J$.Fr(374881))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(374105, J$.R(372561, 'test', test, false, true), false)(J$.T(372569, 'combine()', 21, false), J$.T(374097, function (t) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(374073, arguments.callee, this, arguments);
                            arguments = J$.N(374081, 'arguments', arguments, true, false, false);
                            t = J$.N(374089, 't', t, true, false, false);
                            J$.M(372985, J$.R(372577, 't', t, false, false), 'test', false)(J$.T(372585, 'both arrays', 21, false), J$.T(372977, function (st) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(372929, arguments.callee, this, arguments);
                                            arguments = J$.N(372937, 'arguments', arguments, true, false, false);
                                            st = J$.N(372945, 'st', st, true, false, false);
                                            J$.N(372953, 'a', a, false, false, false);
                                            J$.N(372961, 'b', b, false, false, false);
                                            J$.N(372969, 'combined', combined, false, false, false);
                                            var a = J$.W(372609, 'a', J$.T(372601, [J$.T(372593, 1, 22, false)], 10, false), a, false, false);
                                            var b = J$.W(372633, 'b', J$.T(372625, [J$.T(372617, 2, 22, false)], 10, false), b, false, false);
                                            var combined = J$.W(372673, 'combined', J$.M(372665, J$.R(372641, 'utils', utils, false, true), 'combine', false)(J$.R(372649, 'a', a, false, false), J$.R(372657, 'b', b, false, false)), combined, false, false);
                                            J$.M(372721, J$.R(372681, 'st', st, false, false), 'deepEqual', false)(J$.R(372689, 'a', a, false, false), J$.T(372705, [J$.T(372697, 1, 22, false)], 10, false), J$.T(372713, 'a is not mutated', 21, false));
                                            J$.M(372769, J$.R(372729, 'st', st, false, false), 'deepEqual', false)(J$.R(372737, 'b', b, false, false), J$.T(372753, [J$.T(372745, 2, 22, false)], 10, false), J$.T(372761, 'b is not mutated', 21, false));
                                            J$.M(372809, J$.R(372777, 'st', st, false, false), 'notEqual', false)(J$.R(372785, 'a', a, false, false), J$.R(372793, 'combined', combined, false, false), J$.T(372801, 'a !== combined', 21, false));
                                            J$.M(372849, J$.R(372817, 'st', st, false, false), 'notEqual', false)(J$.R(372825, 'b', b, false, false), J$.R(372833, 'combined', combined, false, false), J$.T(372841, 'b !== combined', 21, false));
                                            J$.M(372905, J$.R(372857, 'st', st, false, false), 'deepEqual', false)(J$.R(372865, 'combined', combined, false, false), J$.T(372889, [
                                                J$.T(372873, 1, 22, false),
                                                J$.T(372881, 2, 22, false)
                                            ], 10, false), J$.T(372897, 'combined is a + b', 21, false));
                                            J$.M(372921, J$.R(372913, 'st', st, false, false), 'end', false)();
                                        } catch (J$e) {
                                            J$.Ex(374889, J$e);
                                        } finally {
                                            if (J$.Fr(374897))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(373793, J$.R(372993, 't', t, false, false), 'test', false)(J$.T(373001, 'one array, one non-array', 21, false), J$.T(373785, function (st) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(373713, arguments.callee, this, arguments);
                                            arguments = J$.N(373721, 'arguments', arguments, true, false, false);
                                            st = J$.N(373729, 'st', st, true, false, false);
                                            J$.N(373737, 'aN', aN, false, false, false);
                                            J$.N(373745, 'a', a, false, false, false);
                                            J$.N(373753, 'bN', bN, false, false, false);
                                            J$.N(373761, 'b', b, false, false, false);
                                            J$.N(373769, 'combinedAnB', combinedAnB, false, false, false);
                                            J$.N(373777, 'combinedABn', combinedABn, false, false, false);
                                            var aN = J$.W(373017, 'aN', J$.T(373009, 1, 22, false), aN, false, false);
                                            var a = J$.W(373041, 'a', J$.T(373033, [J$.R(373025, 'aN', aN, false, false)], 10, false), a, false, false);
                                            var bN = J$.W(373057, 'bN', J$.T(373049, 2, 22, false), bN, false, false);
                                            var b = J$.W(373081, 'b', J$.T(373073, [J$.R(373065, 'bN', bN, false, false)], 10, false), b, false, false);
                                            var combinedAnB = J$.W(373121, 'combinedAnB', J$.M(373113, J$.R(373089, 'utils', utils, false, true), 'combine', false)(J$.R(373097, 'aN', aN, false, false), J$.R(373105, 'b', b, false, false)), combinedAnB, false, false);
                                            J$.M(373169, J$.R(373129, 'st', st, false, false), 'deepEqual', false)(J$.R(373137, 'b', b, false, false), J$.T(373153, [J$.R(373145, 'bN', bN, false, false)], 10, false), J$.T(373161, 'b is not mutated', 21, false));
                                            J$.M(373209, J$.R(373177, 'st', st, false, false), 'notEqual', false)(J$.R(373185, 'aN', aN, false, false), J$.R(373193, 'combinedAnB', combinedAnB, false, false), J$.T(373201, 'aN + b !== aN', 21, false));
                                            J$.M(373249, J$.R(373217, 'st', st, false, false), 'notEqual', false)(J$.R(373225, 'a', a, false, false), J$.R(373233, 'combinedAnB', combinedAnB, false, false), J$.T(373241, 'aN + b !== a', 21, false));
                                            J$.M(373289, J$.R(373257, 'st', st, false, false), 'notEqual', false)(J$.R(373265, 'bN', bN, false, false), J$.R(373273, 'combinedAnB', combinedAnB, false, false), J$.T(373281, 'aN + b !== bN', 21, false));
                                            J$.M(373329, J$.R(373297, 'st', st, false, false), 'notEqual', false)(J$.R(373305, 'b', b, false, false), J$.R(373313, 'combinedAnB', combinedAnB, false, false), J$.T(373321, 'aN + b !== b', 21, false));
                                            J$.M(373385, J$.R(373337, 'st', st, false, false), 'deepEqual', false)(J$.T(373361, [
                                                J$.T(373345, 1, 22, false),
                                                J$.T(373353, 2, 22, false)
                                            ], 10, false), J$.R(373369, 'combinedAnB', combinedAnB, false, false), J$.T(373377, 'first argument is array-wrapped when not an array', 21, false));
                                            var combinedABn = J$.W(373425, 'combinedABn', J$.M(373417, J$.R(373393, 'utils', utils, false, true), 'combine', false)(J$.R(373401, 'a', a, false, false), J$.R(373409, 'bN', bN, false, false)), combinedABn, false, false);
                                            J$.M(373473, J$.R(373433, 'st', st, false, false), 'deepEqual', false)(J$.R(373441, 'a', a, false, false), J$.T(373457, [J$.R(373449, 'aN', aN, false, false)], 10, false), J$.T(373465, 'a is not mutated', 21, false));
                                            J$.M(373513, J$.R(373481, 'st', st, false, false), 'notEqual', false)(J$.R(373489, 'aN', aN, false, false), J$.R(373497, 'combinedABn', combinedABn, false, false), J$.T(373505, 'a + bN !== aN', 21, false));
                                            J$.M(373553, J$.R(373521, 'st', st, false, false), 'notEqual', false)(J$.R(373529, 'a', a, false, false), J$.R(373537, 'combinedABn', combinedABn, false, false), J$.T(373545, 'a + bN !== a', 21, false));
                                            J$.M(373593, J$.R(373561, 'st', st, false, false), 'notEqual', false)(J$.R(373569, 'bN', bN, false, false), J$.R(373577, 'combinedABn', combinedABn, false, false), J$.T(373585, 'a + bN !== bN', 21, false));
                                            J$.M(373633, J$.R(373601, 'st', st, false, false), 'notEqual', false)(J$.R(373609, 'b', b, false, false), J$.R(373617, 'combinedABn', combinedABn, false, false), J$.T(373625, 'a + bN !== b', 21, false));
                                            J$.M(373689, J$.R(373641, 'st', st, false, false), 'deepEqual', false)(J$.T(373665, [
                                                J$.T(373649, 1, 22, false),
                                                J$.T(373657, 2, 22, false)
                                            ], 10, false), J$.R(373673, 'combinedABn', combinedABn, false, false), J$.T(373681, 'second argument is array-wrapped when not an array', 21, false));
                                            J$.M(373705, J$.R(373697, 'st', st, false, false), 'end', false)();
                                        } catch (J$e) {
                                            J$.Ex(374905, J$e);
                                        } finally {
                                            if (J$.Fr(374913))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(374049, J$.R(373801, 't', t, false, false), 'test', false)(J$.T(373809, 'neither is an array', 21, false), J$.T(374041, function (st) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(374009, arguments.callee, this, arguments);
                                            arguments = J$.N(374017, 'arguments', arguments, true, false, false);
                                            st = J$.N(374025, 'st', st, true, false, false);
                                            J$.N(374033, 'combined', combined, false, false, false);
                                            var combined = J$.W(373849, 'combined', J$.M(373841, J$.R(373817, 'utils', utils, false, true), 'combine', false)(J$.T(373825, 1, 22, false), J$.T(373833, 2, 22, false)), combined, false, false);
                                            J$.M(373889, J$.R(373857, 'st', st, false, false), 'notEqual', false)(J$.T(373865, 1, 22, false), J$.R(373873, 'combined', combined, false, false), J$.T(373881, '1 + 2 !== 1', 21, false));
                                            J$.M(373929, J$.R(373897, 'st', st, false, false), 'notEqual', false)(J$.T(373905, 2, 22, false), J$.R(373913, 'combined', combined, false, false), J$.T(373921, '1 + 2 !== 2', 21, false));
                                            J$.M(373985, J$.R(373937, 'st', st, false, false), 'deepEqual', false)(J$.T(373961, [
                                                J$.T(373945, 1, 22, false),
                                                J$.T(373953, 2, 22, false)
                                            ], 10, false), J$.R(373969, 'combined', combined, false, false), J$.T(373977, 'both arguments are array-wrapped when not an array', 21, false));
                                            J$.M(374001, J$.R(373993, 'st', st, false, false), 'end', false)();
                                        } catch (J$e) {
                                            J$.Ex(374921, J$e);
                                        } finally {
                                            if (J$.Fr(374929))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(374065, J$.R(374057, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(374937, J$e);
                        } finally {
                            if (J$.Fr(374945))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(374753, J$.R(374113, 'test', test, false, true), false)(J$.T(374121, 'isBuffer()', 21, false), J$.T(374745, function (t) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(374697, arguments.callee, this, arguments);
                            arguments = J$.N(374705, 'arguments', arguments, true, false, false);
                            t = J$.N(374713, 't', t, true, false, false);
                            J$.N(374721, 'fakeBuffer', fakeBuffer, false, false, false);
                            J$.N(374729, 'saferBuffer', saferBuffer, false, false, false);
                            J$.N(374737, 'buffer', buffer, false, false, false);
                            J$.F(374377, J$.R(374129, 'forEach', forEach, false, true), false)(J$.T(374257, [
                                J$.T(374137, null, 25, false),
                                J$.T(374145, undefined, 24, false),
                                J$.T(374153, true, 23, false),
                                J$.T(374161, false, 23, false),
                                J$.T(374169, '', 21, false),
                                J$.T(374177, 'abc', 21, false),
                                J$.T(374185, 42, 22, false),
                                J$.T(374193, 0, 22, false),
                                J$.T(374201, NaN, 22, false),
                                J$.T(374209, {}, 11, false),
                                J$.T(374217, [], 10, false),
                                J$.T(374241, function () {
                                    jalangiLabel9:
                                        while (true) {
                                            try {
                                                J$.Fe(374225, arguments.callee, this, arguments);
                                                arguments = J$.N(374233, 'arguments', arguments, true, false, false);
                                            } catch (J$e) {
                                                J$.Ex(374953, J$e);
                                            } finally {
                                                if (J$.Fr(374961))
                                                    continue jalangiLabel9;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                J$.T(374249, /a/g, 14, false)
                            ], 10, false), J$.T(374369, function (x) {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(374345, arguments.callee, this, arguments);
                                            arguments = J$.N(374353, 'arguments', arguments, true, false, false);
                                            x = J$.N(374361, 'x', x, true, false, false);
                                            J$.M(374337, J$.R(374265, 't', t, false, false), 'equal', false)(J$.M(374289, J$.R(374273, 'utils', utils, false, true), 'isBuffer', false)(J$.R(374281, 'x', x, false, false)), J$.T(374297, false, 23, false), J$.B(33154, '+', J$.F(374321, J$.R(374305, 'inspect', inspect, false, true), false)(J$.R(374313, 'x', x, false, false)), J$.T(374329, ' is not a buffer', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(374969, J$e);
                                        } finally {
                                            if (J$.Fr(374977))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var fakeBuffer = J$.W(374401, 'fakeBuffer', J$.T(374393, { constructor: J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(374385, 'Buffer', undefined, true, true) : Buffer = J$.R(374385, 'Buffer', Buffer, true, true)) }, 11, false), fakeBuffer, false, false);
                            J$.M(374457, J$.R(374409, 't', t, false, false), 'equal', false)(J$.M(374433, J$.R(374417, 'utils', utils, false, true), 'isBuffer', false)(J$.R(374425, 'fakeBuffer', fakeBuffer, false, false)), J$.T(374441, false, 23, false), J$.T(374449, 'fake buffer is not a buffer', 21, false));
                            var saferBuffer = J$.W(374489, 'saferBuffer', J$.M(374481, J$.R(374465, 'SaferBuffer', SaferBuffer, false, true), 'from', false)(J$.T(374473, 'abc', 21, false)), saferBuffer, false, false);
                            J$.M(374545, J$.R(374497, 't', t, false, false), 'equal', false)(J$.M(374521, J$.R(374505, 'utils', utils, false, true), 'isBuffer', false)(J$.R(374513, 'saferBuffer', saferBuffer, false, false)), J$.T(374529, true, 23, false), J$.T(374537, 'SaferBuffer instance is a buffer', 21, false));
                            var buffer = J$.W(374617, 'buffer', J$.C(20760, J$.G(374561, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(374553, 'Buffer', undefined, true, true) : Buffer = J$.R(374553, 'Buffer', Buffer, true, true)), 'from')) ? J$.M(374585, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(374569, 'Buffer', undefined, true, true) : Buffer = J$.R(374569, 'Buffer', Buffer, true, true)), 'from', false)(J$.T(374577, 'abc', 21, false)) : J$.F(374609, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(374593, 'Buffer', undefined, true, true) : Buffer = J$.R(374593, 'Buffer', Buffer, true, true)), true)(J$.T(374601, 'abc', 21, false)), buffer, false, false);
                            J$.M(374673, J$.R(374625, 't', t, false, false), 'equal', false)(J$.M(374649, J$.R(374633, 'utils', utils, false, true), 'isBuffer', false)(J$.R(374641, 'buffer', buffer, false, false)), J$.T(374657, true, 23, false), J$.T(374665, 'real Buffer instance is a buffer', 21, false));
                            J$.M(374689, J$.R(374681, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(374985, J$e);
                        } finally {
                            if (J$.Fr(374993))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(375001, J$e);
        } finally {
            if (J$.Sr(375009))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

