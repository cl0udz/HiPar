J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4089041, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/generate-object-property/index.js');
            J$.N(4089049, 'isProperty', isProperty, false, false, false);
            J$.N(4089057, 'gen', gen, false, false, false);
            J$.T(4088689, 'use strict', 21, false);
            var isProperty = J$.W(4088721, 'isProperty', J$.F(4088713, J$.I(typeof require === 'undefined' ? require = J$.R(4088697, 'require', undefined, true, true) : require = J$.R(4088697, 'require', require, true, true)), false)(J$.T(4088705, 'is-property', 21, false)), isProperty, false, true);
            var gen = J$.W(4088873, 'gen', J$.T(4088865, function gen(obj, prop) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4088833, arguments.callee, this, arguments);
                            arguments = J$.N(4088841, 'arguments', arguments, true, false, false);
                            obj = J$.N(4088849, 'obj', obj, true, false, false);
                            prop = J$.N(4088857, 'prop', prop, true, false, false);
                            return J$.Rt(4088825, J$.C(216536, J$.F(4088745, J$.R(4088729, 'isProperty', isProperty, false, true), false)(J$.R(4088737, 'prop', prop, false, false))) ? J$.B(396882, '+', J$.B(396874, '+', J$.R(4088753, 'obj', obj, false, false), J$.T(4088761, '.', 21, false)), J$.R(4088769, 'prop', prop, false, false)) : J$.B(396906, '+', J$.B(396898, '+', J$.B(396890, '+', J$.R(4088777, 'obj', obj, false, false), J$.T(4088785, '[', 21, false)), J$.M(4088809, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(4088793, 'JSON', undefined, true, true) : JSON = J$.R(4088793, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(4088801, 'prop', prop, false, false))), J$.T(4088817, ']', 21, false)));
                        } catch (J$e) {
                            J$.Ex(4089065, J$e);
                        } finally {
                            if (J$.Fr(4089073))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), gen, false, true);
            J$.P(4088897, J$.R(4088881, 'gen', gen, false, true), 'valid', J$.R(4088889, 'isProperty', isProperty, false, true));
            J$.P(4089009, J$.R(4088905, 'gen', gen, false, true), 'property', J$.T(4089001, function (prop) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4088977, arguments.callee, this, arguments);
                            arguments = J$.N(4088985, 'arguments', arguments, true, false, false);
                            prop = J$.N(4088993, 'prop', prop, true, false, false);
                            return J$.Rt(4088969, J$.C(216544, J$.F(4088929, J$.R(4088913, 'isProperty', isProperty, false, true), false)(J$.R(4088921, 'prop', prop, false, false))) ? J$.R(4088937, 'prop', prop, false, false) : J$.M(4088961, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(4088945, 'JSON', undefined, true, true) : JSON = J$.R(4088945, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(4088953, 'prop', prop, false, false)));
                        } catch (J$e) {
                            J$.Ex(4089081, J$e);
                        } finally {
                            if (J$.Fr(4089089))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4089033, J$.I(typeof module === 'undefined' ? module = J$.R(4089017, 'module', undefined, true, true) : module = J$.R(4089017, 'module', module, true, true)), 'exports', J$.R(4089025, 'gen', gen, false, true));
        } catch (J$e) {
            J$.Ex(4089097, J$e);
        } finally {
            if (J$.Sr(4089105))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

