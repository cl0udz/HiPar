J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(173409, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/generate-object-property/index.js');
            J$.N(173417, 'isProperty', isProperty, false, false, false);
            J$.N(173425, 'gen', gen, false, false, false);
            J$.T(173057, 'use strict', 21, false);
            var isProperty = J$.W(173089, 'isProperty', J$.F(173081, J$.I(typeof require === 'undefined' ? require = J$.R(173065, 'require', undefined, true, true) : require = J$.R(173065, 'require', require, true, true)), false)(J$.T(173073, 'is-property', 21, false)), isProperty, false, true);
            var gen = J$.W(173241, 'gen', J$.T(173233, function gen(obj, prop) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(173201, arguments.callee, this, arguments);
                            arguments = J$.N(173209, 'arguments', arguments, true, false, false);
                            obj = J$.N(173217, 'obj', obj, true, false, false);
                            prop = J$.N(173225, 'prop', prop, true, false, false);
                            return J$.Rt(173193, J$.C(10408, J$.F(173113, J$.R(173097, 'isProperty', isProperty, false, true), false)(J$.R(173105, 'prop', prop, false, false))) ? J$.B(13954, '+', J$.B(13946, '+', J$.R(173121, 'obj', obj, false, false), J$.T(173129, '.', 21, false)), J$.R(173137, 'prop', prop, false, false)) : J$.B(13978, '+', J$.B(13970, '+', J$.B(13962, '+', J$.R(173145, 'obj', obj, false, false), J$.T(173153, '[', 21, false)), J$.M(173177, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(173161, 'JSON', undefined, true, true) : JSON = J$.R(173161, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(173169, 'prop', prop, false, false))), J$.T(173185, ']', 21, false)));
                        } catch (J$e) {
                            J$.Ex(173433, J$e);
                        } finally {
                            if (J$.Fr(173441))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), gen, false, true);
            J$.P(173265, J$.R(173249, 'gen', gen, false, true), 'valid', J$.R(173257, 'isProperty', isProperty, false, true));
            J$.P(173377, J$.R(173273, 'gen', gen, false, true), 'property', J$.T(173369, function (prop) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(173345, arguments.callee, this, arguments);
                            arguments = J$.N(173353, 'arguments', arguments, true, false, false);
                            prop = J$.N(173361, 'prop', prop, true, false, false);
                            return J$.Rt(173337, J$.C(10416, J$.F(173297, J$.R(173281, 'isProperty', isProperty, false, true), false)(J$.R(173289, 'prop', prop, false, false))) ? J$.R(173305, 'prop', prop, false, false) : J$.M(173329, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(173313, 'JSON', undefined, true, true) : JSON = J$.R(173313, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(173321, 'prop', prop, false, false)));
                        } catch (J$e) {
                            J$.Ex(173449, J$e);
                        } finally {
                            if (J$.Fr(173457))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(173401, J$.I(typeof module === 'undefined' ? module = J$.R(173385, 'module', undefined, true, true) : module = J$.R(173385, 'module', module, true, true)), 'exports', J$.R(173393, 'gen', gen, false, true));
        } catch (J$e) {
            J$.Ex(173465, J$e);
        } finally {
            if (J$.Sr(173473))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

