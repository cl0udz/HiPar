J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4210009, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/merge-descriptors/index.js');
            function merge(dest, src, redefine) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4209969, arguments.callee, this, arguments);
                            arguments = J$.N(4209977, 'arguments', arguments, true, false, false);
                            dest = J$.N(4209985, 'dest', dest, true, false, false);
                            src = J$.N(4209993, 'src', src, true, false, false);
                            redefine = J$.N(4210001, 'redefine', redefine, true, false, false);
                            if (J$.C(222888, J$.U(409754, '!', J$.R(4209657, 'dest', dest, false, false)))) {
                                throw J$.F(4209681, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(4209665, 'TypeError', undefined, true, true) : TypeError = J$.R(4209665, 'TypeError', TypeError, true, true)), true)(J$.T(4209673, 'argument dest is required', 21, false));
                            }
                            if (J$.C(222896, J$.U(409762, '!', J$.R(4209689, 'src', src, false, false)))) {
                                throw J$.F(4209713, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(4209697, 'TypeError', undefined, true, true) : TypeError = J$.R(4209697, 'TypeError', TypeError, true, true)), true)(J$.T(4209705, 'argument src is required', 21, false));
                            }
                            if (J$.C(222904, J$.B(409770, '===', J$.R(4209721, 'redefine', redefine, false, false), J$.T(4209729, undefined, 24, false)))) {
                                redefine = J$.W(4209745, 'redefine', J$.T(4209737, true, 23, false), redefine, false, false);
                            }
                            J$.M(4209945, J$.M(4209769, J$.I(typeof Object === 'undefined' ? Object = J$.R(4209753, 'Object', undefined, true, true) : Object = J$.R(4209753, 'Object', Object, true, true)), 'getOwnPropertyNames', false)(J$.R(4209761, 'src', src, false, false)), 'forEach', false)(J$.T(4209937, function forEachOwnPropertyName(name) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4209905, arguments.callee, this, arguments);
                                            arguments = J$.N(4209913, 'arguments', arguments, true, false, false);
                                            name = J$.N(4209921, 'name', name, true, false, false);
                                            J$.N(4209929, 'descriptor', descriptor, false, false, false);
                                            if (J$.C(222920, J$.C(222912, J$.U(409778, '!', J$.R(4209777, 'redefine', redefine, false, false))) ? J$.M(4209809, J$.R(4209785, 'hasOwnProperty', hasOwnProperty, false, true), 'call', false)(J$.R(4209793, 'dest', dest, false, false), J$.R(4209801, 'name', name, false, false)) : J$._())) {
                                                return J$.Rt(4209817, undefined);
                                            }
                                            var descriptor = J$.W(4209857, 'descriptor', J$.M(4209849, J$.I(typeof Object === 'undefined' ? Object = J$.R(4209825, 'Object', undefined, true, true) : Object = J$.R(4209825, 'Object', Object, true, true)), 'getOwnPropertyDescriptor', false)(J$.R(4209833, 'src', src, false, false), J$.R(4209841, 'name', name, false, false)), descriptor, false, false);
                                            J$.M(4209897, J$.I(typeof Object === 'undefined' ? Object = J$.R(4209865, 'Object', undefined, true, true) : Object = J$.R(4209865, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(4209873, 'dest', dest, false, false), J$.R(4209881, 'name', name, false, false), J$.R(4209889, 'descriptor', descriptor, false, false));
                                        } catch (J$e) {
                                            J$.Ex(4210041, J$e);
                                        } finally {
                                            if (J$.Fr(4210049))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4209961, J$.R(4209953, 'dest', dest, false, false));
                        } catch (J$e) {
                            J$.Ex(4210057, J$e);
                        } finally {
                            if (J$.Fr(4210065))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4210017, 'hasOwnProperty', hasOwnProperty, false, false, false);
            merge = J$.N(4210033, 'merge', J$.T(4210025, merge, 12, false), true, false, false);
            J$.T(4209473, 'use strict', 21, false);
            J$.F(4209497, J$.I(typeof require === 'undefined' ? require = J$.R(4209481, 'require', undefined, true, true) : require = J$.R(4209481, 'require', require, true, true)), false)(J$.T(4209489, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(4209521, J$.I(typeof require === 'undefined' ? require = J$.R(4209505, 'require', undefined, true, true) : require = J$.R(4209505, 'require', require, true, true)), false)(J$.T(4209513, 'core-js/modules/es.object.define-property', 21, false));
            J$.F(4209545, J$.I(typeof require === 'undefined' ? require = J$.R(4209529, 'require', undefined, true, true) : require = J$.R(4209529, 'require', require, true, true)), false)(J$.T(4209537, 'core-js/modules/es.object.get-own-property-descriptor', 21, false));
            J$.F(4209569, J$.I(typeof require === 'undefined' ? require = J$.R(4209553, 'require', undefined, true, true) : require = J$.R(4209553, 'require', require, true, true)), false)(J$.T(4209561, 'core-js/modules/es.object.get-own-property-names', 21, false));
            J$.F(4209593, J$.I(typeof require === 'undefined' ? require = J$.R(4209577, 'require', undefined, true, true) : require = J$.R(4209577, 'require', require, true, true)), false)(J$.T(4209585, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.P(4209617, J$.I(typeof module === 'undefined' ? module = J$.R(4209601, 'module', undefined, true, true) : module = J$.R(4209601, 'module', module, true, true)), 'exports', J$.R(4209609, 'merge', merge, false, true));
            var hasOwnProperty = J$.W(4209649, 'hasOwnProperty', J$.G(4209641, J$.G(4209633, J$.I(typeof Object === 'undefined' ? Object = J$.R(4209625, 'Object', undefined, true, true) : Object = J$.R(4209625, 'Object', Object, true, true)), 'prototype'), 'hasOwnProperty'), hasOwnProperty, false, true);
        } catch (J$e) {
            J$.Ex(4210073, J$e);
        } finally {
            if (J$.Sr(4210081))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

