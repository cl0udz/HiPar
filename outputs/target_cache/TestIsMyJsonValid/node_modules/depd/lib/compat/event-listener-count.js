J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(100529, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/depd/lib/compat/event-listener-count.js');
            function eventListenerCount(emitter, type) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(100497, arguments.callee, this, arguments);
                            arguments = J$.N(100505, 'arguments', arguments, true, false, false);
                            emitter = J$.N(100513, 'emitter', emitter, true, false, false);
                            type = J$.N(100521, 'type', type, true, false, false);
                            return J$.Rt(100489, J$.G(100481, J$.M(100473, J$.R(100457, 'emitter', emitter, false, false), 'listeners', false)(J$.R(100465, 'type', type, false, false)), 'length'));
                        } catch (J$e) {
                            J$.Ex(100553, J$e);
                        } finally {
                            if (J$.Fr(100561))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            eventListenerCount = J$.N(100545, 'eventListenerCount', J$.T(100537, eventListenerCount, 12, false), true, false, false);
            J$.T(100425, 'use strict', 21, false);
            J$.P(100449, J$.I(typeof module === 'undefined' ? module = J$.R(100433, 'module', undefined, true, true) : module = J$.R(100433, 'module', module, true, true)), 'exports', J$.R(100441, 'eventListenerCount', eventListenerCount, false, true));
        } catch (J$e) {
            J$.Ex(100569, J$e);
        } finally {
            if (J$.Sr(100577))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

