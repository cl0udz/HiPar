J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(58737, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/depd/lib/compat/index.js');
            function lazyProperty(obj, prop, getter) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(58633, arguments.callee, this, arguments);
                            function get() {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(58545, arguments.callee, this, arguments);
                                            arguments = J$.N(58553, 'arguments', arguments, true, false, false);
                                            J$.N(58561, 'val', val, false, false, false);
                                            var val = J$.W(58457, 'val', J$.F(58449, J$.R(58441, 'getter', getter, false, false), false)(), val, false, false);
                                            J$.M(58521, J$.I(typeof Object === 'undefined' ? Object = J$.R(58465, 'Object', undefined, true, true) : Object = J$.R(58465, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(58473, 'obj', obj, false, false), J$.R(58481, 'prop', prop, false, false), J$.T(58513, {
                                                configurable: J$.T(58489, true, 23, false),
                                                enumerable: J$.T(58497, true, 23, false),
                                                value: J$.R(58505, 'val', val, false, false)
                                            }, 11, false));
                                            return J$.Rt(58537, J$.R(58529, 'val', val, false, false));
                                        } catch (J$e) {
                                            J$.Ex(58833, J$e);
                                        } finally {
                                            if (J$.Fr(58841))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(58641, 'arguments', arguments, true, false, false);
                            obj = J$.N(58649, 'obj', obj, true, false, false);
                            prop = J$.N(58657, 'prop', prop, true, false, false);
                            getter = J$.N(58665, 'getter', getter, true, false, false);
                            get = J$.N(58681, 'get', J$.T(58673, get, 12, false), true, false, false);
                            J$.M(58625, J$.I(typeof Object === 'undefined' ? Object = J$.R(58569, 'Object', undefined, true, true) : Object = J$.R(58569, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(58577, 'obj', obj, false, false), J$.R(58585, 'prop', prop, false, false), J$.T(58617, {
                                configurable: J$.T(58593, true, 23, false),
                                enumerable: J$.T(58601, true, 23, false),
                                get: J$.R(58609, 'get', get, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(58849, J$e);
                        } finally {
                            if (J$.Fr(58857))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toString(obj) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(58713, arguments.callee, this, arguments);
                            arguments = J$.N(58721, 'arguments', arguments, true, false, false);
                            obj = J$.N(58729, 'obj', obj, true, false, false);
                            return J$.Rt(58705, J$.M(58697, J$.R(58689, 'obj', obj, false, false), 'toString', false)());
                        } catch (J$e) {
                            J$.Ex(58865, J$e);
                        } finally {
                            if (J$.Fr(58873))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(58745, 'EventEmitter', EventEmitter, false, false, false);
            lazyProperty = J$.N(58761, 'lazyProperty', J$.T(58753, lazyProperty, 12, false), true, false, false);
            toString = J$.N(58777, 'toString', J$.T(58769, toString, 12, false), true, false, false);
            J$.T(57713, 'use strict', 21, false);
            J$.F(57737, J$.I(typeof require === 'undefined' ? require = J$.R(57721, 'require', undefined, true, true) : require = J$.R(57721, 'require', require, true, true)), false)(J$.T(57729, 'core-js/modules/es.array.slice', 21, false));
            J$.F(57761, J$.I(typeof require === 'undefined' ? require = J$.R(57745, 'require', undefined, true, true) : require = J$.R(57745, 'require', require, true, true)), false)(J$.T(57753, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(57785, J$.I(typeof require === 'undefined' ? require = J$.R(57769, 'require', undefined, true, true) : require = J$.R(57769, 'require', require, true, true)), false)(J$.T(57777, 'core-js/modules/es.object.define-property', 21, false));
            J$.F(57809, J$.I(typeof require === 'undefined' ? require = J$.R(57793, 'require', undefined, true, true) : require = J$.R(57793, 'require', require, true, true)), false)(J$.T(57801, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(57833, J$.I(typeof require === 'undefined' ? require = J$.R(57817, 'require', undefined, true, true) : require = J$.R(57817, 'require', require, true, true)), false)(J$.T(57825, 'core-js/modules/es.regexp.to-string', 21, false));
            var EventEmitter = J$.W(57873, 'EventEmitter', J$.G(57865, J$.F(57857, J$.I(typeof require === 'undefined' ? require = J$.R(57841, 'require', undefined, true, true) : require = J$.R(57841, 'require', require, true, true)), false)(J$.T(57849, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            J$.F(58321, J$.R(57881, 'lazyProperty', lazyProperty, false, true), false)(J$.G(57897, J$.I(typeof module === 'undefined' ? module = J$.R(57889, 'module', undefined, true, true) : module = J$.R(57889, 'module', module, true, true)), 'exports'), J$.T(57905, 'callSiteToString', 21, false), J$.T(58313, function callSiteToString() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(58249, arguments.callee, this, arguments);
                            function prepareObjectStackTrace(obj, stack) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(57993, arguments.callee, this, arguments);
                                            arguments = J$.N(58001, 'arguments', arguments, true, false, false);
                                            obj = J$.N(58009, 'obj', obj, true, false, false);
                                            stack = J$.N(58017, 'stack', stack, true, false, false);
                                            return J$.Rt(57985, J$.R(57977, 'stack', stack, false, false));
                                        } catch (J$e) {
                                            J$.Ex(58785, J$e);
                                        } finally {
                                            if (J$.Fr(58793))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(58257, 'arguments', arguments, true, false, false);
                            J$.N(58265, 'limit', limit, false, false, false);
                            J$.N(58273, 'obj', obj, false, false, false);
                            J$.N(58281, 'prep', prep, false, false, false);
                            prepareObjectStackTrace = J$.N(58297, 'prepareObjectStackTrace', J$.T(58289, prepareObjectStackTrace, 12, false), true, false, false);
                            J$.N(58305, 'stack', stack, false, false, false);
                            var limit = J$.W(57929, 'limit', J$.G(57921, J$.I(typeof Error === 'undefined' ? Error = J$.R(57913, 'Error', undefined, true, true) : Error = J$.R(57913, 'Error', Error, true, true)), 'stackTraceLimit'), limit, false, false);
                            var obj = J$.W(57945, 'obj', J$.T(57937, {}, 11, false), obj, false, false);
                            var prep = J$.W(57969, 'prep', J$.G(57961, J$.I(typeof Error === 'undefined' ? Error = J$.R(57953, 'Error', undefined, true, true) : Error = J$.R(57953, 'Error', Error, true, true)), 'prepareStackTrace'), prep, false, false);
                            J$.P(58041, J$.I(typeof Error === 'undefined' ? Error = J$.R(58025, 'Error', undefined, true, true) : Error = J$.R(58025, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(58033, 'prepareObjectStackTrace', prepareObjectStackTrace, false, false));
                            J$.P(58065, J$.I(typeof Error === 'undefined' ? Error = J$.R(58049, 'Error', undefined, true, true) : Error = J$.R(58049, 'Error', Error, true, true)), 'stackTraceLimit', J$.T(58057, 2, 22, false));
                            J$.M(58089, J$.I(typeof Error === 'undefined' ? Error = J$.R(58073, 'Error', undefined, true, true) : Error = J$.R(58073, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(58081, 'obj', obj, false, false));
                            var stack = J$.W(58121, 'stack', J$.M(58113, J$.G(58105, J$.R(58097, 'obj', obj, false, false), 'stack'), 'slice', false)(), stack, false, false);
                            J$.P(58145, J$.I(typeof Error === 'undefined' ? Error = J$.R(58129, 'Error', undefined, true, true) : Error = J$.R(58129, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(58137, 'prep', prep, false, false));
                            J$.P(58169, J$.I(typeof Error === 'undefined' ? Error = J$.R(58153, 'Error', undefined, true, true) : Error = J$.R(58153, 'Error', Error, true, true)), 'stackTraceLimit', J$.R(58161, 'limit', limit, false, false));
                            return J$.Rt(58241, J$.C(3984, J$.G(58201, J$.G(58193, J$.R(58177, 'stack', stack, false, false), J$.T(58185, 0, 22, false)), 'toString')) ? J$.R(58209, 'toString', toString, false, true) : J$.F(58233, J$.I(typeof require === 'undefined' ? require = J$.R(58217, 'require', undefined, true, true) : require = J$.R(58217, 'require', require, true, true)), false)(J$.T(58225, './callsite-tostring', 21, false)));
                        } catch (J$e) {
                            J$.Ex(58801, J$e);
                        } finally {
                            if (J$.Fr(58809))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(58433, J$.R(58329, 'lazyProperty', lazyProperty, false, true), false)(J$.G(58345, J$.I(typeof module === 'undefined' ? module = J$.R(58337, 'module', undefined, true, true) : module = J$.R(58337, 'module', module, true, true)), 'exports'), J$.T(58353, 'eventListenerCount', 21, false), J$.T(58425, function eventListenerCount() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(58409, arguments.callee, this, arguments);
                            arguments = J$.N(58417, 'arguments', arguments, true, false, false);
                            return J$.Rt(58401, J$.C(3992, J$.G(58369, J$.R(58361, 'EventEmitter', EventEmitter, false, true), 'listenerCount')) ? J$._() : J$.F(58393, J$.I(typeof require === 'undefined' ? require = J$.R(58377, 'require', undefined, true, true) : require = J$.R(58377, 'require', require, true, true)), false)(J$.T(58385, './event-listener-count', 21, false)));
                        } catch (J$e) {
                            J$.Ex(58817, J$e);
                        } finally {
                            if (J$.Fr(58825))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(58881, J$e);
        } finally {
            if (J$.Sr(58889))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

