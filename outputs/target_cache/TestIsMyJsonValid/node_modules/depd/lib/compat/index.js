J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(101609, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/depd/lib/compat/index.js');
            function lazyProperty(obj, prop, getter) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(101505, arguments.callee, this, arguments);
                            function get() {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(101417, arguments.callee, this, arguments);
                                            arguments = J$.N(101425, 'arguments', arguments, true, false, false);
                                            J$.N(101433, 'val', val, false, false, false);
                                            var val = J$.W(101329, 'val', J$.F(101321, J$.R(101313, 'getter', getter, false, false), false)(), val, false, false);
                                            J$.M(101393, J$.I(typeof Object === 'undefined' ? Object = J$.R(101337, 'Object', undefined, true, true) : Object = J$.R(101337, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(101345, 'obj', obj, false, false), J$.R(101353, 'prop', prop, false, false), J$.T(101385, {
                                                configurable: J$.T(101361, true, 23, false),
                                                enumerable: J$.T(101369, true, 23, false),
                                                value: J$.R(101377, 'val', val, false, false)
                                            }, 11, false));
                                            return J$.Rt(101409, J$.R(101401, 'val', val, false, false));
                                        } catch (J$e) {
                                            J$.Ex(101705, J$e);
                                        } finally {
                                            if (J$.Fr(101713))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(101513, 'arguments', arguments, true, false, false);
                            obj = J$.N(101521, 'obj', obj, true, false, false);
                            prop = J$.N(101529, 'prop', prop, true, false, false);
                            getter = J$.N(101537, 'getter', getter, true, false, false);
                            get = J$.N(101553, 'get', J$.T(101545, get, 12, false), true, false, false);
                            J$.M(101497, J$.I(typeof Object === 'undefined' ? Object = J$.R(101441, 'Object', undefined, true, true) : Object = J$.R(101441, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(101449, 'obj', obj, false, false), J$.R(101457, 'prop', prop, false, false), J$.T(101489, {
                                configurable: J$.T(101465, true, 23, false),
                                enumerable: J$.T(101473, true, 23, false),
                                get: J$.R(101481, 'get', get, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(101721, J$e);
                        } finally {
                            if (J$.Fr(101729))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toString(obj) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(101585, arguments.callee, this, arguments);
                            arguments = J$.N(101593, 'arguments', arguments, true, false, false);
                            obj = J$.N(101601, 'obj', obj, true, false, false);
                            return J$.Rt(101577, J$.M(101569, J$.R(101561, 'obj', obj, false, false), 'toString', false)());
                        } catch (J$e) {
                            J$.Ex(101737, J$e);
                        } finally {
                            if (J$.Fr(101745))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(101617, 'EventEmitter', EventEmitter, false, false, false);
            lazyProperty = J$.N(101633, 'lazyProperty', J$.T(101625, lazyProperty, 12, false), true, false, false);
            toString = J$.N(101649, 'toString', J$.T(101641, toString, 12, false), true, false, false);
            J$.T(100585, 'use strict', 21, false);
            J$.F(100609, J$.I(typeof require === 'undefined' ? require = J$.R(100593, 'require', undefined, true, true) : require = J$.R(100593, 'require', require, true, true)), false)(J$.T(100601, 'core-js/modules/es.array.slice', 21, false));
            J$.F(100633, J$.I(typeof require === 'undefined' ? require = J$.R(100617, 'require', undefined, true, true) : require = J$.R(100617, 'require', require, true, true)), false)(J$.T(100625, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(100657, J$.I(typeof require === 'undefined' ? require = J$.R(100641, 'require', undefined, true, true) : require = J$.R(100641, 'require', require, true, true)), false)(J$.T(100649, 'core-js/modules/es.object.define-property', 21, false));
            J$.F(100681, J$.I(typeof require === 'undefined' ? require = J$.R(100665, 'require', undefined, true, true) : require = J$.R(100665, 'require', require, true, true)), false)(J$.T(100673, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(100705, J$.I(typeof require === 'undefined' ? require = J$.R(100689, 'require', undefined, true, true) : require = J$.R(100689, 'require', require, true, true)), false)(J$.T(100697, 'core-js/modules/es.regexp.to-string', 21, false));
            var EventEmitter = J$.W(100745, 'EventEmitter', J$.G(100737, J$.F(100729, J$.I(typeof require === 'undefined' ? require = J$.R(100713, 'require', undefined, true, true) : require = J$.R(100713, 'require', require, true, true)), false)(J$.T(100721, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            J$.F(101193, J$.R(100753, 'lazyProperty', lazyProperty, false, true), false)(J$.G(100769, J$.I(typeof module === 'undefined' ? module = J$.R(100761, 'module', undefined, true, true) : module = J$.R(100761, 'module', module, true, true)), 'exports'), J$.T(100777, 'callSiteToString', 21, false), J$.T(101185, function callSiteToString() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(101121, arguments.callee, this, arguments);
                            function prepareObjectStackTrace(obj, stack) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(100865, arguments.callee, this, arguments);
                                            arguments = J$.N(100873, 'arguments', arguments, true, false, false);
                                            obj = J$.N(100881, 'obj', obj, true, false, false);
                                            stack = J$.N(100889, 'stack', stack, true, false, false);
                                            return J$.Rt(100857, J$.R(100849, 'stack', stack, false, false));
                                        } catch (J$e) {
                                            J$.Ex(101657, J$e);
                                        } finally {
                                            if (J$.Fr(101665))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(101129, 'arguments', arguments, true, false, false);
                            J$.N(101137, 'limit', limit, false, false, false);
                            J$.N(101145, 'obj', obj, false, false, false);
                            J$.N(101153, 'prep', prep, false, false, false);
                            prepareObjectStackTrace = J$.N(101169, 'prepareObjectStackTrace', J$.T(101161, prepareObjectStackTrace, 12, false), true, false, false);
                            J$.N(101177, 'stack', stack, false, false, false);
                            var limit = J$.W(100801, 'limit', J$.G(100793, J$.I(typeof Error === 'undefined' ? Error = J$.R(100785, 'Error', undefined, true, true) : Error = J$.R(100785, 'Error', Error, true, true)), 'stackTraceLimit'), limit, false, false);
                            var obj = J$.W(100817, 'obj', J$.T(100809, {}, 11, false), obj, false, false);
                            var prep = J$.W(100841, 'prep', J$.G(100833, J$.I(typeof Error === 'undefined' ? Error = J$.R(100825, 'Error', undefined, true, true) : Error = J$.R(100825, 'Error', Error, true, true)), 'prepareStackTrace'), prep, false, false);
                            J$.P(100913, J$.I(typeof Error === 'undefined' ? Error = J$.R(100897, 'Error', undefined, true, true) : Error = J$.R(100897, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(100905, 'prepareObjectStackTrace', prepareObjectStackTrace, false, false));
                            J$.P(100937, J$.I(typeof Error === 'undefined' ? Error = J$.R(100921, 'Error', undefined, true, true) : Error = J$.R(100921, 'Error', Error, true, true)), 'stackTraceLimit', J$.T(100929, 2, 22, false));
                            J$.M(100961, J$.I(typeof Error === 'undefined' ? Error = J$.R(100945, 'Error', undefined, true, true) : Error = J$.R(100945, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(100953, 'obj', obj, false, false));
                            var stack = J$.W(100993, 'stack', J$.M(100985, J$.G(100977, J$.R(100969, 'obj', obj, false, false), 'stack'), 'slice', false)(), stack, false, false);
                            J$.P(101017, J$.I(typeof Error === 'undefined' ? Error = J$.R(101001, 'Error', undefined, true, true) : Error = J$.R(101001, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(101009, 'prep', prep, false, false));
                            J$.P(101041, J$.I(typeof Error === 'undefined' ? Error = J$.R(101025, 'Error', undefined, true, true) : Error = J$.R(101025, 'Error', Error, true, true)), 'stackTraceLimit', J$.R(101033, 'limit', limit, false, false));
                            return J$.Rt(101113, J$.C(6256, J$.G(101073, J$.G(101065, J$.R(101049, 'stack', stack, false, false), J$.T(101057, 0, 22, false)), 'toString')) ? J$.R(101081, 'toString', toString, false, true) : J$.F(101105, J$.I(typeof require === 'undefined' ? require = J$.R(101089, 'require', undefined, true, true) : require = J$.R(101089, 'require', require, true, true)), false)(J$.T(101097, './callsite-tostring', 21, false)));
                        } catch (J$e) {
                            J$.Ex(101673, J$e);
                        } finally {
                            if (J$.Fr(101681))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(101305, J$.R(101201, 'lazyProperty', lazyProperty, false, true), false)(J$.G(101217, J$.I(typeof module === 'undefined' ? module = J$.R(101209, 'module', undefined, true, true) : module = J$.R(101209, 'module', module, true, true)), 'exports'), J$.T(101225, 'eventListenerCount', 21, false), J$.T(101297, function eventListenerCount() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(101281, arguments.callee, this, arguments);
                            arguments = J$.N(101289, 'arguments', arguments, true, false, false);
                            return J$.Rt(101273, J$.C(6264, J$.G(101241, J$.R(101233, 'EventEmitter', EventEmitter, false, true), 'listenerCount')) ? J$._() : J$.F(101265, J$.I(typeof require === 'undefined' ? require = J$.R(101249, 'require', undefined, true, true) : require = J$.R(101249, 'require', require, true, true)), false)(J$.T(101257, './event-listener-count', 21, false)));
                        } catch (J$e) {
                            J$.Ex(101689, J$e);
                        } finally {
                            if (J$.Fr(101697))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(101753, J$e);
        } finally {
            if (J$.Sr(101761))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

