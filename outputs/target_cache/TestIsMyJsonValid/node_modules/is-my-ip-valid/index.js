J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(266081, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/is-my-ip-valid/index.js');
            function validate4(input) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(264601, arguments.callee, this, arguments);
                            arguments = J$.N(264609, 'arguments', arguments, true, false, false);
                            input = J$.N(264617, 'input', input, true, false, false);
                            J$.N(264625, 'parts', parts, false, false, false);
                            J$.N(264633, 'n0', n0, false, false, false);
                            J$.N(264641, 'n1', n1, false, false, false);
                            J$.N(264649, 'n2', n2, false, false, false);
                            J$.N(264657, 'n3', n3, false, false, false);
                            if (J$.C(14648, J$.U(23658, '!', J$.M(263761, J$.R(263745, 'reIpv4FirstPass', reIpv4FirstPass, false, true), 'test', false)(J$.R(263753, 'input', input, false, false)))))
                                return J$.Rt(263777, J$.T(263769, false, 23, false));
                            var parts = J$.W(263809, 'parts', J$.M(263801, J$.R(263785, 'input', input, false, false), 'split', false)(J$.T(263793, '.', 21, false)), parts, false, false);
                            if (J$.C(14656, J$.B(23666, '!==', J$.G(263825, J$.R(263817, 'parts', parts, false, false), 'length'), J$.T(263833, 4, 22, false))))
                                return J$.Rt(263849, J$.T(263841, false, 23, false));
                            if (J$.C(14672, J$.C(14664, J$.B(23674, '===', J$.G(263889, J$.G(263873, J$.R(263857, 'parts', parts, false, false), J$.T(263865, 0, 22, false)), J$.T(263881, 0, 22, false)), J$.T(263897, '0', 21, false))) ? J$.B(23682, '>', J$.G(263929, J$.G(263921, J$.R(263905, 'parts', parts, false, false), J$.T(263913, 0, 22, false)), 'length'), J$.T(263937, 1, 22, false)) : J$._()))
                                return J$.Rt(263953, J$.T(263945, false, 23, false));
                            if (J$.C(14688, J$.C(14680, J$.B(23690, '===', J$.G(263993, J$.G(263977, J$.R(263961, 'parts', parts, false, false), J$.T(263969, 1, 22, false)), J$.T(263985, 0, 22, false)), J$.T(264001, '0', 21, false))) ? J$.B(23698, '>', J$.G(264033, J$.G(264025, J$.R(264009, 'parts', parts, false, false), J$.T(264017, 1, 22, false)), 'length'), J$.T(264041, 1, 22, false)) : J$._()))
                                return J$.Rt(264057, J$.T(264049, false, 23, false));
                            if (J$.C(14704, J$.C(14696, J$.B(23706, '===', J$.G(264097, J$.G(264081, J$.R(264065, 'parts', parts, false, false), J$.T(264073, 2, 22, false)), J$.T(264089, 0, 22, false)), J$.T(264105, '0', 21, false))) ? J$.B(23714, '>', J$.G(264137, J$.G(264129, J$.R(264113, 'parts', parts, false, false), J$.T(264121, 2, 22, false)), 'length'), J$.T(264145, 1, 22, false)) : J$._()))
                                return J$.Rt(264161, J$.T(264153, false, 23, false));
                            if (J$.C(14720, J$.C(14712, J$.B(23722, '===', J$.G(264201, J$.G(264185, J$.R(264169, 'parts', parts, false, false), J$.T(264177, 3, 22, false)), J$.T(264193, 0, 22, false)), J$.T(264209, '0', 21, false))) ? J$.B(23730, '>', J$.G(264241, J$.G(264233, J$.R(264217, 'parts', parts, false, false), J$.T(264225, 3, 22, false)), 'length'), J$.T(264249, 1, 22, false)) : J$._()))
                                return J$.Rt(264265, J$.T(264257, false, 23, false));
                            var n0 = J$.W(264313, 'n0', J$.F(264305, J$.I(typeof Number === 'undefined' ? Number = J$.R(264273, 'Number', undefined, true, true) : Number = J$.R(264273, 'Number', Number, true, true)), false)(J$.G(264297, J$.R(264281, 'parts', parts, false, false), J$.T(264289, 0, 22, false))), n0, false, false);
                            var n1 = J$.W(264361, 'n1', J$.F(264353, J$.I(typeof Number === 'undefined' ? Number = J$.R(264321, 'Number', undefined, true, true) : Number = J$.R(264321, 'Number', Number, true, true)), false)(J$.G(264345, J$.R(264329, 'parts', parts, false, false), J$.T(264337, 1, 22, false))), n1, false, false);
                            var n2 = J$.W(264409, 'n2', J$.F(264401, J$.I(typeof Number === 'undefined' ? Number = J$.R(264369, 'Number', undefined, true, true) : Number = J$.R(264369, 'Number', Number, true, true)), false)(J$.G(264393, J$.R(264377, 'parts', parts, false, false), J$.T(264385, 2, 22, false))), n2, false, false);
                            var n3 = J$.W(264457, 'n3', J$.F(264449, J$.I(typeof Number === 'undefined' ? Number = J$.R(264417, 'Number', undefined, true, true) : Number = J$.R(264417, 'Number', Number, true, true)), false)(J$.G(264441, J$.R(264425, 'parts', parts, false, false), J$.T(264433, 3, 22, false))), n3, false, false);
                            return J$.Rt(264593, J$.C(14776, J$.C(14768, J$.C(14760, J$.C(14752, J$.C(14744, J$.C(14736, J$.C(14728, J$.B(23738, '>=', J$.R(264465, 'n0', n0, false, false), J$.T(264473, 0, 22, false))) ? J$.B(23746, '<', J$.R(264481, 'n0', n0, false, false), J$.T(264489, 256, 22, false)) : J$._()) ? J$.B(23754, '>=', J$.R(264497, 'n1', n1, false, false), J$.T(264505, 0, 22, false)) : J$._()) ? J$.B(23762, '<', J$.R(264513, 'n1', n1, false, false), J$.T(264521, 256, 22, false)) : J$._()) ? J$.B(23770, '>=', J$.R(264529, 'n2', n2, false, false), J$.T(264537, 0, 22, false)) : J$._()) ? J$.B(23778, '<', J$.R(264545, 'n2', n2, false, false), J$.T(264553, 256, 22, false)) : J$._()) ? J$.B(23786, '>=', J$.R(264561, 'n3', n3, false, false), J$.T(264569, 0, 22, false)) : J$._()) ? J$.B(23794, '<', J$.R(264577, 'n3', n3, false, false), J$.T(264585, 256, 22, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(266185, J$e);
                        } finally {
                            if (J$.Fr(266193))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validate6(input) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(265569, arguments.callee, this, arguments);
                            arguments = J$.N(265577, 'arguments', arguments, true, false, false);
                            input = J$.N(265585, 'input', input, true, false, false);
                            J$.N(265593, 'withoutSubnet', withoutSubnet, false, false, false);
                            J$.N(265601, 'hasSubnet', hasSubnet, false, false, false);
                            J$.N(265609, 'withoutZone', withoutZone, false, false, false);
                            J$.N(265617, 'lastPartSeparator', lastPartSeparator, false, false, false);
                            J$.N(265625, 'lastPart', lastPart, false, false, false);
                            J$.N(265633, 'hasV4Part', hasV4Part, false, false, false);
                            J$.N(265641, 'address', address, false, false, false);
                            J$.N(265649, 'halves', halves, false, false, false);
                            J$.N(265657, 'first', first, false, false, false);
                            J$.N(265665, 'last', last, false, false, false);
                            J$.N(265673, 'remainingLength', remainingLength, false, false, false);
                            var withoutSubnet = J$.W(264697, 'withoutSubnet', J$.M(264689, J$.R(264665, 'input', input, false, false), 'replace', false)(J$.R(264673, 'reSubnetString', reSubnetString, false, true), J$.T(264681, '', 21, false)), withoutSubnet, false, false);
                            var hasSubnet = J$.W(264737, 'hasSubnet', J$.B(23802, '!==', J$.G(264713, J$.R(264705, 'input', input, false, false), 'length'), J$.G(264729, J$.R(264721, 'withoutSubnet', withoutSubnet, false, false), 'length')), hasSubnet, false, false);
                            if (J$.C(14784, J$.R(264745, 'hasSubnet', hasSubnet, false, false)))
                                return J$.Rt(264761, J$.T(264753, false, 23, false));
                            if (J$.C(14800, J$.U(23810, '!', J$.R(264769, 'hasSubnet', hasSubnet, false, false)))) {
                                if (J$.C(14792, J$.M(264793, J$.R(264777, 'reForwardSlash', reForwardSlash, false, true), 'test', false)(J$.R(264785, 'input', input, false, false))))
                                    return J$.Rt(264809, J$.T(264801, false, 23, false));
                            }
                            var withoutZone = J$.W(264849, 'withoutZone', J$.M(264841, J$.R(264817, 'withoutSubnet', withoutSubnet, false, false), 'replace', false)(J$.R(264825, 'reZone', reZone, false, true), J$.T(264833, '', 21, false)), withoutZone, false, false);
                            var lastPartSeparator = J$.W(264881, 'lastPartSeparator', J$.M(264873, J$.R(264857, 'withoutZone', withoutZone, false, false), 'lastIndexOf', false)(J$.T(264865, ':', 21, false)), lastPartSeparator, false, false);
                            if (J$.C(14808, J$.B(23826, '===', J$.R(264889, 'lastPartSeparator', lastPartSeparator, false, false), J$.U(23818, '-', J$.T(264897, 1, 22, false)))))
                                return J$.Rt(264913, J$.T(264905, false, 23, false));
                            var lastPart = J$.W(264953, 'lastPart', J$.M(264945, J$.R(264921, 'withoutZone', withoutZone, false, false), 'substring', false)(J$.B(23834, '+', J$.R(264929, 'lastPartSeparator', lastPartSeparator, false, false), J$.T(264937, 1, 22, false))), lastPart, false, false);
                            var hasV4Part = J$.W(264985, 'hasV4Part', J$.F(264977, J$.R(264961, 'validate4', validate4, false, true), false)(J$.R(264969, 'lastPart', lastPart, false, false)), hasV4Part, false, false);
                            var address = J$.W(265057, 'address', J$.C(14816, J$.R(264993, 'hasV4Part', hasV4Part, false, false)) ? J$.B(23850, '+', J$.M(265033, J$.R(265001, 'withoutZone', withoutZone, false, false), 'substring', false)(J$.T(265009, 0, 22, false), J$.B(23842, '+', J$.R(265017, 'lastPartSeparator', lastPartSeparator, false, false), J$.T(265025, 1, 22, false))), J$.T(265041, '1234:5678', 21, false)) : J$.R(265049, 'withoutZone', withoutZone, false, false), address, false, false);
                            if (J$.C(14824, J$.M(265081, J$.R(265065, 'reBadCharacters', reBadCharacters, false, true), 'test', false)(J$.R(265073, 'address', address, false, false))))
                                return J$.Rt(265097, J$.T(265089, false, 23, false));
                            if (J$.C(14832, J$.M(265121, J$.R(265105, 'reBadAddress', reBadAddress, false, true), 'test', false)(J$.R(265113, 'address', address, false, false))))
                                return J$.Rt(265137, J$.T(265129, false, 23, false));
                            var halves = J$.W(265169, 'halves', J$.M(265161, J$.R(265145, 'address', address, false, false), 'split', false)(J$.T(265153, '::', 21, false)), halves, false, false);
                            if (J$.C(14840, J$.B(23858, '>', J$.G(265185, J$.R(265177, 'halves', halves, false, false), 'length'), J$.T(265193, 2, 22, false))))
                                return J$.Rt(265209, J$.T(265201, false, 23, false));
                            if (J$.C(14880, J$.B(23866, '===', J$.G(265225, J$.R(265217, 'halves', halves, false, false), 'length'), J$.T(265233, 2, 22, false)))) {
                                var first = J$.W(265321, 'first', J$.C(14848, J$.B(23874, '===', J$.G(265257, J$.R(265241, 'halves', halves, false, false), J$.T(265249, 0, 22, false)), J$.T(265265, '', 21, false))) ? J$.T(265273, [], 10, false) : J$.M(265313, J$.G(265297, J$.R(265281, 'halves', halves, false, false), J$.T(265289, 0, 22, false)), 'split', false)(J$.T(265305, ':', 21, false)), first, false, false);
                                var last = J$.W(265409, 'last', J$.C(14856, J$.B(23882, '===', J$.G(265345, J$.R(265329, 'halves', halves, false, false), J$.T(265337, 1, 22, false)), J$.T(265353, '', 21, false))) ? J$.T(265361, [], 10, false) : J$.M(265401, J$.G(265385, J$.R(265369, 'halves', halves, false, false), J$.T(265377, 1, 22, false)), 'split', false)(J$.T(265393, ':', 21, false)), last, false, false);
                                var remainingLength = J$.W(265457, 'remainingLength', J$.B(23898, '-', J$.T(265417, 8, 22, false), J$.B(23890, '+', J$.G(265433, J$.R(265425, 'first', first, false, false), 'length'), J$.G(265449, J$.R(265441, 'last', last, false, false), 'length'))), remainingLength, false, false);
                                if (J$.C(14864, J$.B(23906, '<=', J$.R(265465, 'remainingLength', remainingLength, false, false), J$.T(265473, 0, 22, false))))
                                    return J$.Rt(265489, J$.T(265481, false, 23, false));
                            } else {
                                if (J$.C(14872, J$.B(23914, '!==', J$.G(265521, J$.M(265513, J$.R(265497, 'address', address, false, false), 'split', false)(J$.T(265505, ':', 21, false)), 'length'), J$.T(265529, 8, 22, false))))
                                    return J$.Rt(265545, J$.T(265537, false, 23, false));
                            }
                            return J$.Rt(265561, J$.T(265553, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(266201, J$e);
                        } finally {
                            if (J$.Fr(266209))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validate(input) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(265737, arguments.callee, this, arguments);
                            arguments = J$.N(265745, 'arguments', arguments, true, false, false);
                            input = J$.N(265753, 'input', input, true, false, false);
                            return J$.Rt(265729, J$.C(14888, J$.F(265697, J$.R(265681, 'validate4', validate4, false, true), false)(J$.R(265689, 'input', input, false, false))) ? J$._() : J$.F(265721, J$.R(265705, 'validate6', validate6, false, true), false)(J$.R(265713, 'input', input, false, false)));
                        } catch (J$e) {
                            J$.Ex(266217, J$e);
                        } finally {
                            if (J$.Fr(266225))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(266089, 'reIpv4FirstPass', reIpv4FirstPass, false, false, false);
            J$.N(266097, 'reSubnetString', reSubnetString, false, false, false);
            J$.N(266105, 'reForwardSlash', reForwardSlash, false, false, false);
            J$.N(266113, 'reZone', reZone, false, false, false);
            J$.N(266121, 'reBadCharacters', reBadCharacters, false, false, false);
            J$.N(266129, 'reBadAddress', reBadAddress, false, false, false);
            validate4 = J$.N(266145, 'validate4', J$.T(266137, validate4, 12, false), true, false, false);
            validate6 = J$.N(266161, 'validate6', J$.T(266153, validate6, 12, false), true, false, false);
            validate = J$.N(266177, 'validate', J$.T(266169, validate, 12, false), true, false, false);
            J$.T(263521, 'use strict', 21, false);
            J$.F(263545, J$.I(typeof require === 'undefined' ? require = J$.R(263529, 'require', undefined, true, true) : require = J$.R(263529, 'require', require, true, true)), false)(J$.T(263537, 'core-js/modules/es.array.last-index-of', 21, false));
            J$.F(263569, J$.I(typeof require === 'undefined' ? require = J$.R(263553, 'require', undefined, true, true) : require = J$.R(263553, 'require', require, true, true)), false)(J$.T(263561, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(263593, J$.I(typeof require === 'undefined' ? require = J$.R(263577, 'require', undefined, true, true) : require = J$.R(263577, 'require', require, true, true)), false)(J$.T(263585, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(263617, J$.I(typeof require === 'undefined' ? require = J$.R(263601, 'require', undefined, true, true) : require = J$.R(263601, 'require', require, true, true)), false)(J$.T(263609, 'core-js/modules/es.string.replace', 21, false));
            J$.F(263641, J$.I(typeof require === 'undefined' ? require = J$.R(263625, 'require', undefined, true, true) : require = J$.R(263625, 'require', require, true, true)), false)(J$.T(263633, 'core-js/modules/es.string.split', 21, false));
            var reIpv4FirstPass = J$.W(263657, 'reIpv4FirstPass', J$.T(263649, /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/, 14, false), reIpv4FirstPass, false, true);
            var reSubnetString = J$.W(263673, 'reSubnetString', J$.T(263665, /\/\d{1,3}(?=%|$)/, 14, false), reSubnetString, false, true);
            var reForwardSlash = J$.W(263689, 'reForwardSlash', J$.T(263681, /\//, 14, false), reForwardSlash, false, true);
            var reZone = J$.W(263705, 'reZone', J$.T(263697, /%.*$/, 14, false), reZone, false, true);
            var reBadCharacters = J$.W(263721, 'reBadCharacters', J$.T(263713, /([^0-9a-f:/%])/i, 14, false), reBadCharacters, false, true);
            var reBadAddress = J$.W(263737, 'reBadAddress', J$.T(263729, /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\/$)/i, 14, false), reBadAddress, false, true);
            J$.P(265985, J$.I(typeof module === 'undefined' ? module = J$.R(265761, 'module', undefined, true, true) : module = J$.R(265761, 'module', module, true, true)), 'exports', J$.T(265977, function validator(options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(265953, arguments.callee, this, arguments);
                            arguments = J$.N(265961, 'arguments', arguments, true, false, false);
                            options = J$.N(265969, 'options', options, true, false, false);
                            if (J$.C(14896, J$.U(23922, '!', J$.R(265769, 'options', options, false, false))))
                                options = J$.W(265785, 'options', J$.T(265777, {}, 11, false), options, false, false);
                            if (J$.C(14904, J$.B(23930, '===', J$.G(265801, J$.R(265793, 'options', options, false, false), 'version'), J$.T(265809, 4, 22, false))))
                                return J$.Rt(265825, J$.R(265817, 'validate4', validate4, false, true));
                            if (J$.C(14912, J$.B(23938, '===', J$.G(265841, J$.R(265833, 'options', options, false, false), 'version'), J$.T(265849, 6, 22, false))))
                                return J$.Rt(265865, J$.R(265857, 'validate6', validate6, false, true));
                            if (J$.C(14920, J$.B(23946, '==', J$.G(265881, J$.R(265873, 'options', options, false, false), 'version'), J$.T(265889, null, 25, false))))
                                return J$.Rt(265905, J$.R(265897, 'validate', validate, false, true));
                            throw J$.F(265945, J$.I(typeof Error === 'undefined' ? Error = J$.R(265913, 'Error', undefined, true, true) : Error = J$.R(265913, 'Error', Error, true, true)), true)(J$.B(23954, '+', J$.T(265921, 'Unknown version: ', 21, false), J$.G(265937, J$.R(265929, 'options', options, false, false), 'version')));
                        } catch (J$e) {
                            J$.Ex(266233, J$e);
                        } finally {
                            if (J$.Fr(266241))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(266073, J$.G(266001, J$.I(typeof module === 'undefined' ? module = J$.R(265993, 'module', undefined, true, true) : module = J$.R(265993, 'module', module, true, true)), 'exports'), J$.T(266009, '__all_regexes__', 21, false), J$.T(266065, [
                J$.R(266017, 'reIpv4FirstPass', reIpv4FirstPass, false, true),
                J$.R(266025, 'reSubnetString', reSubnetString, false, true),
                J$.R(266033, 'reForwardSlash', reForwardSlash, false, true),
                J$.R(266041, 'reZone', reZone, false, true),
                J$.R(266049, 'reBadCharacters', reBadCharacters, false, true),
                J$.R(266057, 'reBadAddress', reBadAddress, false, true)
            ], 10, false));
        } catch (J$e) {
            J$.Ex(266249, J$e);
        } finally {
            if (J$.Sr(266257))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

