J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(4181713, '/home/james/nodejs/HiPar/outputs/target_cache/TestIsMyJsonValid/node_modules/is-my-ip-valid/index.js');
            function validate4(input) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4180233, arguments.callee, this, arguments);
                            arguments = J$.N(4180241, 'arguments', arguments, true, false, false);
                            input = J$.N(4180249, 'input', input, true, false, false);
                            J$.N(4180257, 'parts', parts, false, false, false);
                            J$.N(4180265, 'n0', n0, false, false, false);
                            J$.N(4180273, 'n1', n1, false, false, false);
                            J$.N(4180281, 'n2', n2, false, false, false);
                            J$.N(4180289, 'n3', n3, false, false, false);
                            if (J$.C(220776, J$.U(406586, '!', J$.M(4179393, J$.R(4179377, 'reIpv4FirstPass', reIpv4FirstPass, false, true), 'test', false)(J$.R(4179385, 'input', input, false, false)))))
                                return J$.Rt(4179409, J$.T(4179401, false, 23, false));
                            var parts = J$.W(4179441, 'parts', J$.M(4179433, J$.R(4179417, 'input', input, false, false), 'split', false)(J$.T(4179425, '.', 21, false)), parts, false, false);
                            if (J$.C(220784, J$.B(406594, '!==', J$.G(4179457, J$.R(4179449, 'parts', parts, false, false), 'length'), J$.T(4179465, 4, 22, false))))
                                return J$.Rt(4179481, J$.T(4179473, false, 23, false));
                            if (J$.C(220800, J$.C(220792, J$.B(406602, '===', J$.G(4179521, J$.G(4179505, J$.R(4179489, 'parts', parts, false, false), J$.T(4179497, 0, 22, false)), J$.T(4179513, 0, 22, false)), J$.T(4179529, '0', 21, false))) ? J$.B(406610, '>', J$.G(4179561, J$.G(4179553, J$.R(4179537, 'parts', parts, false, false), J$.T(4179545, 0, 22, false)), 'length'), J$.T(4179569, 1, 22, false)) : J$._()))
                                return J$.Rt(4179585, J$.T(4179577, false, 23, false));
                            if (J$.C(220816, J$.C(220808, J$.B(406618, '===', J$.G(4179625, J$.G(4179609, J$.R(4179593, 'parts', parts, false, false), J$.T(4179601, 1, 22, false)), J$.T(4179617, 0, 22, false)), J$.T(4179633, '0', 21, false))) ? J$.B(406626, '>', J$.G(4179665, J$.G(4179657, J$.R(4179641, 'parts', parts, false, false), J$.T(4179649, 1, 22, false)), 'length'), J$.T(4179673, 1, 22, false)) : J$._()))
                                return J$.Rt(4179689, J$.T(4179681, false, 23, false));
                            if (J$.C(220832, J$.C(220824, J$.B(406634, '===', J$.G(4179729, J$.G(4179713, J$.R(4179697, 'parts', parts, false, false), J$.T(4179705, 2, 22, false)), J$.T(4179721, 0, 22, false)), J$.T(4179737, '0', 21, false))) ? J$.B(406642, '>', J$.G(4179769, J$.G(4179761, J$.R(4179745, 'parts', parts, false, false), J$.T(4179753, 2, 22, false)), 'length'), J$.T(4179777, 1, 22, false)) : J$._()))
                                return J$.Rt(4179793, J$.T(4179785, false, 23, false));
                            if (J$.C(220848, J$.C(220840, J$.B(406650, '===', J$.G(4179833, J$.G(4179817, J$.R(4179801, 'parts', parts, false, false), J$.T(4179809, 3, 22, false)), J$.T(4179825, 0, 22, false)), J$.T(4179841, '0', 21, false))) ? J$.B(406658, '>', J$.G(4179873, J$.G(4179865, J$.R(4179849, 'parts', parts, false, false), J$.T(4179857, 3, 22, false)), 'length'), J$.T(4179881, 1, 22, false)) : J$._()))
                                return J$.Rt(4179897, J$.T(4179889, false, 23, false));
                            var n0 = J$.W(4179945, 'n0', J$.F(4179937, J$.I(typeof Number === 'undefined' ? Number = J$.R(4179905, 'Number', undefined, true, true) : Number = J$.R(4179905, 'Number', Number, true, true)), false)(J$.G(4179929, J$.R(4179913, 'parts', parts, false, false), J$.T(4179921, 0, 22, false))), n0, false, false);
                            var n1 = J$.W(4179993, 'n1', J$.F(4179985, J$.I(typeof Number === 'undefined' ? Number = J$.R(4179953, 'Number', undefined, true, true) : Number = J$.R(4179953, 'Number', Number, true, true)), false)(J$.G(4179977, J$.R(4179961, 'parts', parts, false, false), J$.T(4179969, 1, 22, false))), n1, false, false);
                            var n2 = J$.W(4180041, 'n2', J$.F(4180033, J$.I(typeof Number === 'undefined' ? Number = J$.R(4180001, 'Number', undefined, true, true) : Number = J$.R(4180001, 'Number', Number, true, true)), false)(J$.G(4180025, J$.R(4180009, 'parts', parts, false, false), J$.T(4180017, 2, 22, false))), n2, false, false);
                            var n3 = J$.W(4180089, 'n3', J$.F(4180081, J$.I(typeof Number === 'undefined' ? Number = J$.R(4180049, 'Number', undefined, true, true) : Number = J$.R(4180049, 'Number', Number, true, true)), false)(J$.G(4180073, J$.R(4180057, 'parts', parts, false, false), J$.T(4180065, 3, 22, false))), n3, false, false);
                            return J$.Rt(4180225, J$.C(220904, J$.C(220896, J$.C(220888, J$.C(220880, J$.C(220872, J$.C(220864, J$.C(220856, J$.B(406666, '>=', J$.R(4180097, 'n0', n0, false, false), J$.T(4180105, 0, 22, false))) ? J$.B(406674, '<', J$.R(4180113, 'n0', n0, false, false), J$.T(4180121, 256, 22, false)) : J$._()) ? J$.B(406682, '>=', J$.R(4180129, 'n1', n1, false, false), J$.T(4180137, 0, 22, false)) : J$._()) ? J$.B(406690, '<', J$.R(4180145, 'n1', n1, false, false), J$.T(4180153, 256, 22, false)) : J$._()) ? J$.B(406698, '>=', J$.R(4180161, 'n2', n2, false, false), J$.T(4180169, 0, 22, false)) : J$._()) ? J$.B(406706, '<', J$.R(4180177, 'n2', n2, false, false), J$.T(4180185, 256, 22, false)) : J$._()) ? J$.B(406714, '>=', J$.R(4180193, 'n3', n3, false, false), J$.T(4180201, 0, 22, false)) : J$._()) ? J$.B(406722, '<', J$.R(4180209, 'n3', n3, false, false), J$.T(4180217, 256, 22, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(4181817, J$e);
                        } finally {
                            if (J$.Fr(4181825))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validate6(input) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4181201, arguments.callee, this, arguments);
                            arguments = J$.N(4181209, 'arguments', arguments, true, false, false);
                            input = J$.N(4181217, 'input', input, true, false, false);
                            J$.N(4181225, 'withoutSubnet', withoutSubnet, false, false, false);
                            J$.N(4181233, 'hasSubnet', hasSubnet, false, false, false);
                            J$.N(4181241, 'withoutZone', withoutZone, false, false, false);
                            J$.N(4181249, 'lastPartSeparator', lastPartSeparator, false, false, false);
                            J$.N(4181257, 'lastPart', lastPart, false, false, false);
                            J$.N(4181265, 'hasV4Part', hasV4Part, false, false, false);
                            J$.N(4181273, 'address', address, false, false, false);
                            J$.N(4181281, 'halves', halves, false, false, false);
                            J$.N(4181289, 'first', first, false, false, false);
                            J$.N(4181297, 'last', last, false, false, false);
                            J$.N(4181305, 'remainingLength', remainingLength, false, false, false);
                            var withoutSubnet = J$.W(4180329, 'withoutSubnet', J$.M(4180321, J$.R(4180297, 'input', input, false, false), 'replace', false)(J$.R(4180305, 'reSubnetString', reSubnetString, false, true), J$.T(4180313, '', 21, false)), withoutSubnet, false, false);
                            var hasSubnet = J$.W(4180369, 'hasSubnet', J$.B(406730, '!==', J$.G(4180345, J$.R(4180337, 'input', input, false, false), 'length'), J$.G(4180361, J$.R(4180353, 'withoutSubnet', withoutSubnet, false, false), 'length')), hasSubnet, false, false);
                            if (J$.C(220912, J$.R(4180377, 'hasSubnet', hasSubnet, false, false)))
                                return J$.Rt(4180393, J$.T(4180385, false, 23, false));
                            if (J$.C(220928, J$.U(406738, '!', J$.R(4180401, 'hasSubnet', hasSubnet, false, false)))) {
                                if (J$.C(220920, J$.M(4180425, J$.R(4180409, 'reForwardSlash', reForwardSlash, false, true), 'test', false)(J$.R(4180417, 'input', input, false, false))))
                                    return J$.Rt(4180441, J$.T(4180433, false, 23, false));
                            }
                            var withoutZone = J$.W(4180481, 'withoutZone', J$.M(4180473, J$.R(4180449, 'withoutSubnet', withoutSubnet, false, false), 'replace', false)(J$.R(4180457, 'reZone', reZone, false, true), J$.T(4180465, '', 21, false)), withoutZone, false, false);
                            var lastPartSeparator = J$.W(4180513, 'lastPartSeparator', J$.M(4180505, J$.R(4180489, 'withoutZone', withoutZone, false, false), 'lastIndexOf', false)(J$.T(4180497, ':', 21, false)), lastPartSeparator, false, false);
                            if (J$.C(220936, J$.B(406754, '===', J$.R(4180521, 'lastPartSeparator', lastPartSeparator, false, false), J$.U(406746, '-', J$.T(4180529, 1, 22, false)))))
                                return J$.Rt(4180545, J$.T(4180537, false, 23, false));
                            var lastPart = J$.W(4180585, 'lastPart', J$.M(4180577, J$.R(4180553, 'withoutZone', withoutZone, false, false), 'substring', false)(J$.B(406762, '+', J$.R(4180561, 'lastPartSeparator', lastPartSeparator, false, false), J$.T(4180569, 1, 22, false))), lastPart, false, false);
                            var hasV4Part = J$.W(4180617, 'hasV4Part', J$.F(4180609, J$.R(4180593, 'validate4', validate4, false, true), false)(J$.R(4180601, 'lastPart', lastPart, false, false)), hasV4Part, false, false);
                            var address = J$.W(4180689, 'address', J$.C(220944, J$.R(4180625, 'hasV4Part', hasV4Part, false, false)) ? J$.B(406778, '+', J$.M(4180665, J$.R(4180633, 'withoutZone', withoutZone, false, false), 'substring', false)(J$.T(4180641, 0, 22, false), J$.B(406770, '+', J$.R(4180649, 'lastPartSeparator', lastPartSeparator, false, false), J$.T(4180657, 1, 22, false))), J$.T(4180673, '1234:5678', 21, false)) : J$.R(4180681, 'withoutZone', withoutZone, false, false), address, false, false);
                            if (J$.C(220952, J$.M(4180713, J$.R(4180697, 'reBadCharacters', reBadCharacters, false, true), 'test', false)(J$.R(4180705, 'address', address, false, false))))
                                return J$.Rt(4180729, J$.T(4180721, false, 23, false));
                            if (J$.C(220960, J$.M(4180753, J$.R(4180737, 'reBadAddress', reBadAddress, false, true), 'test', false)(J$.R(4180745, 'address', address, false, false))))
                                return J$.Rt(4180769, J$.T(4180761, false, 23, false));
                            var halves = J$.W(4180801, 'halves', J$.M(4180793, J$.R(4180777, 'address', address, false, false), 'split', false)(J$.T(4180785, '::', 21, false)), halves, false, false);
                            if (J$.C(220968, J$.B(406786, '>', J$.G(4180817, J$.R(4180809, 'halves', halves, false, false), 'length'), J$.T(4180825, 2, 22, false))))
                                return J$.Rt(4180841, J$.T(4180833, false, 23, false));
                            if (J$.C(221008, J$.B(406794, '===', J$.G(4180857, J$.R(4180849, 'halves', halves, false, false), 'length'), J$.T(4180865, 2, 22, false)))) {
                                var first = J$.W(4180953, 'first', J$.C(220976, J$.B(406802, '===', J$.G(4180889, J$.R(4180873, 'halves', halves, false, false), J$.T(4180881, 0, 22, false)), J$.T(4180897, '', 21, false))) ? J$.T(4180905, [], 10, false) : J$.M(4180945, J$.G(4180929, J$.R(4180913, 'halves', halves, false, false), J$.T(4180921, 0, 22, false)), 'split', false)(J$.T(4180937, ':', 21, false)), first, false, false);
                                var last = J$.W(4181041, 'last', J$.C(220984, J$.B(406810, '===', J$.G(4180977, J$.R(4180961, 'halves', halves, false, false), J$.T(4180969, 1, 22, false)), J$.T(4180985, '', 21, false))) ? J$.T(4180993, [], 10, false) : J$.M(4181033, J$.G(4181017, J$.R(4181001, 'halves', halves, false, false), J$.T(4181009, 1, 22, false)), 'split', false)(J$.T(4181025, ':', 21, false)), last, false, false);
                                var remainingLength = J$.W(4181089, 'remainingLength', J$.B(406826, '-', J$.T(4181049, 8, 22, false), J$.B(406818, '+', J$.G(4181065, J$.R(4181057, 'first', first, false, false), 'length'), J$.G(4181081, J$.R(4181073, 'last', last, false, false), 'length'))), remainingLength, false, false);
                                if (J$.C(220992, J$.B(406834, '<=', J$.R(4181097, 'remainingLength', remainingLength, false, false), J$.T(4181105, 0, 22, false))))
                                    return J$.Rt(4181121, J$.T(4181113, false, 23, false));
                            } else {
                                if (J$.C(221000, J$.B(406842, '!==', J$.G(4181153, J$.M(4181145, J$.R(4181129, 'address', address, false, false), 'split', false)(J$.T(4181137, ':', 21, false)), 'length'), J$.T(4181161, 8, 22, false))))
                                    return J$.Rt(4181177, J$.T(4181169, false, 23, false));
                            }
                            return J$.Rt(4181193, J$.T(4181185, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(4181833, J$e);
                        } finally {
                            if (J$.Fr(4181841))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validate(input) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4181369, arguments.callee, this, arguments);
                            arguments = J$.N(4181377, 'arguments', arguments, true, false, false);
                            input = J$.N(4181385, 'input', input, true, false, false);
                            return J$.Rt(4181361, J$.C(221016, J$.F(4181329, J$.R(4181313, 'validate4', validate4, false, true), false)(J$.R(4181321, 'input', input, false, false))) ? J$._() : J$.F(4181353, J$.R(4181337, 'validate6', validate6, false, true), false)(J$.R(4181345, 'input', input, false, false)));
                        } catch (J$e) {
                            J$.Ex(4181849, J$e);
                        } finally {
                            if (J$.Fr(4181857))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4181721, 'reIpv4FirstPass', reIpv4FirstPass, false, false, false);
            J$.N(4181729, 'reSubnetString', reSubnetString, false, false, false);
            J$.N(4181737, 'reForwardSlash', reForwardSlash, false, false, false);
            J$.N(4181745, 'reZone', reZone, false, false, false);
            J$.N(4181753, 'reBadCharacters', reBadCharacters, false, false, false);
            J$.N(4181761, 'reBadAddress', reBadAddress, false, false, false);
            validate4 = J$.N(4181777, 'validate4', J$.T(4181769, validate4, 12, false), true, false, false);
            validate6 = J$.N(4181793, 'validate6', J$.T(4181785, validate6, 12, false), true, false, false);
            validate = J$.N(4181809, 'validate', J$.T(4181801, validate, 12, false), true, false, false);
            J$.T(4179153, 'use strict', 21, false);
            J$.F(4179177, J$.I(typeof require === 'undefined' ? require = J$.R(4179161, 'require', undefined, true, true) : require = J$.R(4179161, 'require', require, true, true)), false)(J$.T(4179169, 'core-js/modules/es.array.last-index-of', 21, false));
            J$.F(4179201, J$.I(typeof require === 'undefined' ? require = J$.R(4179185, 'require', undefined, true, true) : require = J$.R(4179185, 'require', require, true, true)), false)(J$.T(4179193, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(4179225, J$.I(typeof require === 'undefined' ? require = J$.R(4179209, 'require', undefined, true, true) : require = J$.R(4179209, 'require', require, true, true)), false)(J$.T(4179217, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(4179249, J$.I(typeof require === 'undefined' ? require = J$.R(4179233, 'require', undefined, true, true) : require = J$.R(4179233, 'require', require, true, true)), false)(J$.T(4179241, 'core-js/modules/es.string.replace', 21, false));
            J$.F(4179273, J$.I(typeof require === 'undefined' ? require = J$.R(4179257, 'require', undefined, true, true) : require = J$.R(4179257, 'require', require, true, true)), false)(J$.T(4179265, 'core-js/modules/es.string.split', 21, false));
            var reIpv4FirstPass = J$.W(4179289, 'reIpv4FirstPass', J$.T(4179281, /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/, 14, false), reIpv4FirstPass, false, true);
            var reSubnetString = J$.W(4179305, 'reSubnetString', J$.T(4179297, /\/\d{1,3}(?=%|$)/, 14, false), reSubnetString, false, true);
            var reForwardSlash = J$.W(4179321, 'reForwardSlash', J$.T(4179313, /\//, 14, false), reForwardSlash, false, true);
            var reZone = J$.W(4179337, 'reZone', J$.T(4179329, /%.*$/, 14, false), reZone, false, true);
            var reBadCharacters = J$.W(4179353, 'reBadCharacters', J$.T(4179345, /([^0-9a-f:/%])/i, 14, false), reBadCharacters, false, true);
            var reBadAddress = J$.W(4179369, 'reBadAddress', J$.T(4179361, /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\/$)/i, 14, false), reBadAddress, false, true);
            J$.P(4181617, J$.I(typeof module === 'undefined' ? module = J$.R(4181393, 'module', undefined, true, true) : module = J$.R(4181393, 'module', module, true, true)), 'exports', J$.T(4181609, function validator(options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4181585, arguments.callee, this, arguments);
                            arguments = J$.N(4181593, 'arguments', arguments, true, false, false);
                            options = J$.N(4181601, 'options', options, true, false, false);
                            if (J$.C(221024, J$.U(406850, '!', J$.R(4181401, 'options', options, false, false))))
                                options = J$.W(4181417, 'options', J$.T(4181409, {}, 11, false), options, false, false);
                            if (J$.C(221032, J$.B(406858, '===', J$.G(4181433, J$.R(4181425, 'options', options, false, false), 'version'), J$.T(4181441, 4, 22, false))))
                                return J$.Rt(4181457, J$.R(4181449, 'validate4', validate4, false, true));
                            if (J$.C(221040, J$.B(406866, '===', J$.G(4181473, J$.R(4181465, 'options', options, false, false), 'version'), J$.T(4181481, 6, 22, false))))
                                return J$.Rt(4181497, J$.R(4181489, 'validate6', validate6, false, true));
                            if (J$.C(221048, J$.B(406874, '==', J$.G(4181513, J$.R(4181505, 'options', options, false, false), 'version'), J$.T(4181521, null, 25, false))))
                                return J$.Rt(4181537, J$.R(4181529, 'validate', validate, false, true));
                            throw J$.F(4181577, J$.I(typeof Error === 'undefined' ? Error = J$.R(4181545, 'Error', undefined, true, true) : Error = J$.R(4181545, 'Error', Error, true, true)), true)(J$.B(406882, '+', J$.T(4181553, 'Unknown version: ', 21, false), J$.G(4181569, J$.R(4181561, 'options', options, false, false), 'version')));
                        } catch (J$e) {
                            J$.Ex(4181865, J$e);
                        } finally {
                            if (J$.Fr(4181873))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4181705, J$.G(4181633, J$.I(typeof module === 'undefined' ? module = J$.R(4181625, 'module', undefined, true, true) : module = J$.R(4181625, 'module', module, true, true)), 'exports'), J$.T(4181641, '__all_regexes__', 21, false), J$.T(4181697, [
                J$.R(4181649, 'reIpv4FirstPass', reIpv4FirstPass, false, true),
                J$.R(4181657, 'reSubnetString', reSubnetString, false, true),
                J$.R(4181665, 'reForwardSlash', reForwardSlash, false, true),
                J$.R(4181673, 'reZone', reZone, false, true),
                J$.R(4181681, 'reBadCharacters', reBadCharacters, false, true),
                J$.R(4181689, 'reBadAddress', reBadAddress, false, true)
            ], 10, false));
        } catch (J$e) {
            J$.Ex(4181881, J$e);
        } finally {
            if (J$.Sr(4181889))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

