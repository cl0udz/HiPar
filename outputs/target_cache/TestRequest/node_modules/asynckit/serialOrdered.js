J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(2697113, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/asynckit/serialOrdered.js');
            function serialOrdered(list, iterator, sortMethod, callback) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2696881, arguments.callee, this, arguments);
                            arguments = J$.N(2696889, 'arguments', arguments, true, false, false);
                            list = J$.N(2696897, 'list', list, true, false, false);
                            iterator = J$.N(2696905, 'iterator', iterator, true, false, false);
                            sortMethod = J$.N(2696913, 'sortMethod', sortMethod, true, false, false);
                            callback = J$.N(2696921, 'callback', callback, true, false, false);
                            J$.N(2696929, 'state', state, false, false, false);
                            var state = J$.W(2696537, 'state', J$.F(2696529, J$.R(2696505, 'initState', initState, false, true), false)(J$.R(2696513, 'list', list, false, false), J$.R(2696521, 'sortMethod', sortMethod, false, false)), state, false, false);
                            J$.F(2696833, J$.R(2696545, 'iterate', iterate, false, true), false)(J$.R(2696553, 'list', list, false, false), J$.R(2696561, 'iterator', iterator, false, false), J$.R(2696569, 'state', state, false, false), J$.T(2696825, function iteratorHandler(error, result) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2696793, arguments.callee, this, arguments);
                                            arguments = J$.N(2696801, 'arguments', arguments, true, false, false);
                                            error = J$.N(2696809, 'error', error, true, false, false);
                                            result = J$.N(2696817, 'result', result, true, false, false);
                                            if (J$.C(130272, J$.R(2696577, 'error', error, false, false))) {
                                                J$.F(2696609, J$.R(2696585, 'callback', callback, false, false), false)(J$.R(2696593, 'error', error, false, false), J$.R(2696601, 'result', result, false, false));
                                                return J$.Rt(2696617, undefined);
                                            }
                                            J$.B(404842, '-', J$.A(2696633, J$.R(2696625, 'state', state, false, false), 'index', '+')(1), 1);
                                            if (J$.C(130288, J$.B(404850, '<', J$.G(2696649, J$.R(2696641, 'state', state, false, false), 'index'), J$.G(2696689, J$.C(130280, J$.G(2696673, J$.R(2696657, 'state', state, false, false), J$.T(2696665, 'keyedList', 21, false))) ? J$._() : J$.R(2696681, 'list', list, false, false), 'length')))) {
                                                J$.F(2696737, J$.R(2696697, 'iterate', iterate, false, true), false)(J$.R(2696705, 'list', list, false, false), J$.R(2696713, 'iterator', iterator, false, false), J$.R(2696721, 'state', state, false, false), J$.R(2696729, 'iteratorHandler', iteratorHandler, false, false));
                                                return J$.Rt(2696745, undefined);
                                            }
                                            J$.F(2696785, J$.R(2696753, 'callback', callback, false, false), false)(J$.T(2696761, null, 25, false), J$.G(2696777, J$.R(2696769, 'state', state, false, false), 'results'));
                                        } catch (J$e) {
                                            J$.Ex(2697193, J$e);
                                        } finally {
                                            if (J$.Fr(2697201))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2696873, J$.M(2696865, J$.R(2696841, 'terminator', terminator, false, true), 'bind', false)(J$.R(2696849, 'state', state, false, false), J$.R(2696857, 'callback', callback, false, false)));
                        } catch (J$e) {
                            J$.Ex(2697209, J$e);
                        } finally {
                            if (J$.Fr(2697217))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ascending(a, b) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2697001, arguments.callee, this, arguments);
                            arguments = J$.N(2697009, 'arguments', arguments, true, false, false);
                            a = J$.N(2697017, 'a', a, true, false, false);
                            b = J$.N(2697025, 'b', b, true, false, false);
                            return J$.Rt(2696993, J$.C(130304, J$.B(404858, '<', J$.R(2696937, 'a', a, false, false), J$.R(2696945, 'b', b, false, false))) ? J$.U(404866, '-', J$.T(2696953, 1, 22, false)) : J$.C(130296, J$.B(404874, '>', J$.R(2696961, 'a', a, false, false), J$.R(2696969, 'b', b, false, false))) ? J$.T(2696977, 1, 22, false) : J$.T(2696985, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(2697225, J$e);
                        } finally {
                            if (J$.Fr(2697233))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function descending(a, b) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2697081, arguments.callee, this, arguments);
                            arguments = J$.N(2697089, 'arguments', arguments, true, false, false);
                            a = J$.N(2697097, 'a', a, true, false, false);
                            b = J$.N(2697105, 'b', b, true, false, false);
                            return J$.Rt(2697073, J$.B(404890, '*', J$.U(404882, '-', J$.T(2697033, 1, 22, false)), J$.F(2697065, J$.R(2697041, 'ascending', ascending, false, true), false)(J$.R(2697049, 'a', a, false, false), J$.R(2697057, 'b', b, false, false))));
                        } catch (J$e) {
                            J$.Ex(2697241, J$e);
                        } finally {
                            if (J$.Fr(2697249))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2697121, 'iterate', iterate, false, false, false);
            J$.N(2697129, 'initState', initState, false, false, false);
            J$.N(2697137, 'terminator', terminator, false, false, false);
            serialOrdered = J$.N(2697153, 'serialOrdered', J$.T(2697145, serialOrdered, 12, false), true, false, false);
            ascending = J$.N(2697169, 'ascending', J$.T(2697161, ascending, 12, false), true, false, false);
            descending = J$.N(2697185, 'descending', J$.T(2697177, descending, 12, false), true, false, false);
            J$.T(2696289, 'use strict', 21, false);
            J$.F(2696313, J$.I(typeof require === 'undefined' ? require = J$.R(2696297, 'require', undefined, true, true) : require = J$.R(2696297, 'require', require, true, true)), false)(J$.T(2696305, 'core-js/modules/es.function.bind', 21, false));
            var iterate = J$.W(2696393, 'iterate', J$.F(2696337, J$.I(typeof require === 'undefined' ? require = J$.R(2696321, 'require', undefined, true, true) : require = J$.R(2696321, 'require', require, true, true)), false)(J$.T(2696329, './lib/iterate.js', 21, false)), iterate, false, true), initState = J$.W(2696401, 'initState', J$.F(2696361, J$.I(typeof require === 'undefined' ? require = J$.R(2696345, 'require', undefined, true, true) : require = J$.R(2696345, 'require', require, true, true)), false)(J$.T(2696353, './lib/state.js', 21, false)), initState, false, true), terminator = J$.W(2696409, 'terminator', J$.F(2696385, J$.I(typeof require === 'undefined' ? require = J$.R(2696369, 'require', undefined, true, true) : require = J$.R(2696369, 'require', require, true, true)), false)(J$.T(2696377, './lib/terminator.js', 21, false)), terminator, false, true);
            J$.P(2696433, J$.I(typeof module === 'undefined' ? module = J$.R(2696417, 'module', undefined, true, true) : module = J$.R(2696417, 'module', module, true, true)), 'exports', J$.R(2696425, 'serialOrdered', serialOrdered, false, true));
            J$.P(2696465, J$.G(2696449, J$.I(typeof module === 'undefined' ? module = J$.R(2696441, 'module', undefined, true, true) : module = J$.R(2696441, 'module', module, true, true)), 'exports'), 'ascending', J$.R(2696457, 'ascending', ascending, false, true));
            J$.P(2696497, J$.G(2696481, J$.I(typeof module === 'undefined' ? module = J$.R(2696473, 'module', undefined, true, true) : module = J$.R(2696473, 'module', module, true, true)), 'exports'), 'descending', J$.R(2696489, 'descending', descending, false, true));
        } catch (J$e) {
            J$.Ex(2697257, J$e);
        } finally {
            if (J$.Sr(2697265))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

