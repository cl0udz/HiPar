J$.noInstrEval = false;
jalangiLabel10:
    while (true) {
        try {
            J$.Se(2687649, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/asynckit/bench.js');
            J$.N(2687657, 'asynckit', asynckit, false, false, false);
            J$.N(2687665, 'async', async, false, false, false);
            J$.N(2687673, 'assert', assert, false, false, false);
            J$.N(2687681, 'expected', expected, false, false, false);
            J$.N(2687689, 'Benchmark', Benchmark, false, false, false);
            J$.N(2687697, 'suite', suite, false, false, false);
            J$.N(2687705, 'source', source, false, false, false);
            J$.N(2687713, 'z', z, false, false, false);
            J$.T(2686273, 'use strict', 21, false);
            J$.F(2686297, J$.I(typeof require === 'undefined' ? require = J$.R(2686281, 'require', undefined, true, true) : require = J$.R(2686281, 'require', require, true, true)), false)(J$.T(2686289, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2686321, J$.I(typeof require === 'undefined' ? require = J$.R(2686305, 'require', undefined, true, true) : require = J$.R(2686305, 'require', require, true, true)), false)(J$.T(2686313, 'core-js/modules/es.array.map', 21, false));
            J$.F(2686345, J$.I(typeof require === 'undefined' ? require = J$.R(2686329, 'require', undefined, true, true) : require = J$.R(2686329, 'require', require, true, true)), false)(J$.T(2686337, 'core-js/modules/web.immediate', 21, false));
            var asynckit = J$.W(2686433, 'asynckit', J$.F(2686369, J$.I(typeof require === 'undefined' ? require = J$.R(2686353, 'require', undefined, true, true) : require = J$.R(2686353, 'require', require, true, true)), false)(J$.T(2686361, './', 21, false)), asynckit, false, true), async = J$.W(2686441, 'async', J$.F(2686393, J$.I(typeof require === 'undefined' ? require = J$.R(2686377, 'require', undefined, true, true) : require = J$.R(2686377, 'require', require, true, true)), false)(J$.T(2686385, 'async', 21, false)), async, false, true), assert = J$.W(2686449, 'assert', J$.F(2686417, J$.I(typeof require === 'undefined' ? require = J$.R(2686401, 'require', undefined, true, true) : require = J$.R(2686401, 'require', require, true, true)), false)(J$.T(2686409, 'assert', 21, false)), assert, false, true), expected = J$.W(2686457, 'expected', J$.T(2686425, 0, 22, false), expected, false, true);
            var Benchmark = J$.W(2686489, 'Benchmark', J$.F(2686481, J$.I(typeof require === 'undefined' ? require = J$.R(2686465, 'require', undefined, true, true) : require = J$.R(2686465, 'require', require, true, true)), false)(J$.T(2686473, 'benchmark', 21, false)), Benchmark, false, true);
            var suite = J$.W(2686513, 'suite', J$.M(2686505, J$.R(2686497, 'Benchmark', Benchmark, false, true), 'Suite', true)(), suite, false, true);
            var source = J$.W(2686529, 'source', J$.T(2686521, [], 10, false), source, false, true);
            for (var z = J$.W(2686545, 'z', J$.T(2686537, 1, 22, false), z, false, true); J$.C(129928, J$.B(404402, '<', J$.R(2686553, 'z', z, false, true), J$.T(2686561, 100, 22, false))); J$.B(404426, '-', z = J$.W(2686577, 'z', J$.B(404418, '+', J$.U(404410, '+', J$.R(2686569, 'z', z, false, true)), 1), z, false, true), 1)) {
                J$.M(2686601, J$.R(2686585, 'source', source, false, true), 'push', false)(J$.R(2686593, 'z', z, false, true));
                expected = J$.W(2686625, 'expected', J$.B(404434, '+', J$.R(2686617, 'expected', expected, false, true), J$.R(2686609, 'z', z, false, true)), expected, false, true);
            }
            J$.M(2687641, J$.M(2687617, J$.M(2687513, J$.M(2687417, J$.M(2687025, J$.R(2686633, 'suite', suite, false, true), 'add', false)(J$.T(2686641, 'async.map', 21, false), J$.T(2687001, function (deferred) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2686969, arguments.callee, this, arguments);
                            arguments = J$.N(2686977, 'arguments', arguments, true, false, false);
                            deferred = J$.N(2686985, 'deferred', deferred, true, false, false);
                            J$.N(2686993, 'total', total, false, false, false);
                            var total = J$.W(2686657, 'total', J$.T(2686649, 0, 22, false), total, false, false);
                            J$.M(2686961, J$.R(2686665, 'async', async, false, true), 'map', false)(J$.R(2686673, 'source', source, false, true), J$.T(2686809, function (i, cb) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2686777, arguments.callee, this, arguments);
                                            arguments = J$.N(2686785, 'arguments', arguments, true, false, false);
                                            i = J$.N(2686793, 'i', i, true, false, false);
                                            cb = J$.N(2686801, 'cb', cb, true, false, false);
                                            J$.F(2686769, J$.I(typeof setImmediate === 'undefined' ? setImmediate = J$.R(2686681, 'setImmediate', undefined, true, true) : setImmediate = J$.R(2686681, 'setImmediate', setImmediate, true, true)), false)(J$.T(2686761, function () {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2686745, arguments.callee, this, arguments);
                                                            arguments = J$.N(2686753, 'arguments', arguments, true, false, false);
                                                            total = J$.W(2686705, 'total', J$.B(404442, '+', J$.R(2686697, 'total', total, false, false), J$.R(2686689, 'i', i, false, false)), total, false, false);
                                                            J$.F(2686737, J$.R(2686713, 'cb', cb, false, false), false)(J$.T(2686721, null, 25, false), J$.R(2686729, 'total', total, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(2687721, J$e);
                                                        } finally {
                                                            if (J$.Fr(2687729))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(2687737, J$e);
                                        } finally {
                                            if (J$.Fr(2687745))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.T(2686953, function (err, result) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(2686921, arguments.callee, this, arguments);
                                            arguments = J$.N(2686929, 'arguments', arguments, true, false, false);
                                            err = J$.N(2686937, 'err', err, true, false, false);
                                            result = J$.N(2686945, 'result', result, true, false, false);
                                            J$.M(2686833, J$.R(2686817, 'assert', assert, false, true), 'ifError', false)(J$.R(2686825, 'err', err, false, false));
                                            J$.M(2686897, J$.R(2686841, 'assert', assert, false, true), 'equal', false)(J$.G(2686881, J$.R(2686849, 'result', result, false, false), J$.B(404450, '-', J$.G(2686865, J$.R(2686857, 'result', result, false, false), 'length'), J$.T(2686873, 1, 22, false))), J$.R(2686889, 'expected', expected, false, true));
                                            J$.M(2686913, J$.R(2686905, 'deferred', deferred, false, false), 'resolve', false)();
                                        } catch (J$e) {
                                            J$.Ex(2687753, J$e);
                                        } finally {
                                            if (J$.Fr(2687761))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2687769, J$e);
                        } finally {
                            if (J$.Fr(2687777))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.T(2687017, { 'defer': J$.T(2687009, true, 23, false) }, 11, false)), 'add', false)(J$.T(2687033, 'asynckit.parallel', 21, false), J$.T(2687393, function (deferred) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2687361, arguments.callee, this, arguments);
                            arguments = J$.N(2687369, 'arguments', arguments, true, false, false);
                            deferred = J$.N(2687377, 'deferred', deferred, true, false, false);
                            J$.N(2687385, 'total', total, false, false, false);
                            var total = J$.W(2687049, 'total', J$.T(2687041, 0, 22, false), total, false, false);
                            J$.M(2687353, J$.R(2687057, 'asynckit', asynckit, false, true), 'parallel', false)(J$.R(2687065, 'source', source, false, true), J$.T(2687201, function (i, cb) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(2687169, arguments.callee, this, arguments);
                                            arguments = J$.N(2687177, 'arguments', arguments, true, false, false);
                                            i = J$.N(2687185, 'i', i, true, false, false);
                                            cb = J$.N(2687193, 'cb', cb, true, false, false);
                                            J$.F(2687161, J$.I(typeof setImmediate === 'undefined' ? setImmediate = J$.R(2687073, 'setImmediate', undefined, true, true) : setImmediate = J$.R(2687073, 'setImmediate', setImmediate, true, true)), false)(J$.T(2687153, function () {
                                                jalangiLabel4:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2687137, arguments.callee, this, arguments);
                                                            arguments = J$.N(2687145, 'arguments', arguments, true, false, false);
                                                            total = J$.W(2687097, 'total', J$.B(404458, '+', J$.R(2687089, 'total', total, false, false), J$.R(2687081, 'i', i, false, false)), total, false, false);
                                                            J$.F(2687129, J$.R(2687105, 'cb', cb, false, false), false)(J$.T(2687113, null, 25, false), J$.R(2687121, 'total', total, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(2687785, J$e);
                                                        } finally {
                                                            if (J$.Fr(2687793))
                                                                continue jalangiLabel4;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(2687801, J$e);
                                        } finally {
                                            if (J$.Fr(2687809))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.T(2687345, function (err, result) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(2687313, arguments.callee, this, arguments);
                                            arguments = J$.N(2687321, 'arguments', arguments, true, false, false);
                                            err = J$.N(2687329, 'err', err, true, false, false);
                                            result = J$.N(2687337, 'result', result, true, false, false);
                                            J$.M(2687225, J$.R(2687209, 'assert', assert, false, true), 'ifError', false)(J$.R(2687217, 'err', err, false, false));
                                            J$.M(2687289, J$.R(2687233, 'assert', assert, false, true), 'equal', false)(J$.G(2687273, J$.R(2687241, 'result', result, false, false), J$.B(404466, '-', J$.G(2687257, J$.R(2687249, 'result', result, false, false), 'length'), J$.T(2687265, 1, 22, false))), J$.R(2687281, 'expected', expected, false, true));
                                            J$.M(2687305, J$.R(2687297, 'deferred', deferred, false, false), 'resolve', false)();
                                        } catch (J$e) {
                                            J$.Ex(2687817, J$e);
                                        } finally {
                                            if (J$.Fr(2687825))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2687833, J$e);
                        } finally {
                            if (J$.Fr(2687841))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.T(2687409, { 'defer': J$.T(2687401, true, 23, false) }, 11, false)), 'on', false)(J$.T(2687425, 'cycle', 21, false), J$.T(2687505, function (ev) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2687481, arguments.callee, this, arguments);
                            arguments = J$.N(2687489, 'arguments', arguments, true, false, false);
                            ev = J$.N(2687497, 'ev', ev, true, false, false);
                            J$.M(2687473, J$.I(typeof console === 'undefined' ? console = J$.R(2687433, 'console', undefined, true, true) : console = J$.R(2687433, 'console', console, true, true)), 'log', false)(J$.F(2687465, J$.I(typeof String === 'undefined' ? String = J$.R(2687441, 'String', undefined, true, true) : String = J$.R(2687441, 'String', String, true, true)), false)(J$.G(2687457, J$.R(2687449, 'ev', ev, false, false), 'target')));
                        } catch (J$e) {
                            J$.Ex(2687849, J$e);
                        } finally {
                            if (J$.Fr(2687857))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), 'on', false)(J$.T(2687521, 'complete', 21, false), J$.T(2687609, function () {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(2687593, arguments.callee, this, arguments);
                            arguments = J$.N(2687601, 'arguments', arguments, true, false, false);
                            J$.M(2687585, J$.I(typeof console === 'undefined' ? console = J$.R(2687529, 'console', undefined, true, true) : console = J$.R(2687529, 'console', console, true, true)), 'log', false)(J$.B(404474, '+', J$.T(2687537, 'Fastest is ', 21, false), J$.M(2687577, J$.M(2687561, J$.R(2687545, 'this', this, false, false), 'filter', false)(J$.T(2687553, 'fastest', 21, false)), 'map', false)(J$.T(2687569, 'name', 21, false))));
                        } catch (J$e) {
                            J$.Ex(2687865, J$e);
                        } finally {
                            if (J$.Fr(2687873))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), 'run', false)(J$.T(2687633, { 'async': J$.T(2687625, true, 23, false) }, 11, false));
        } catch (J$e) {
            J$.Ex(2687881, J$e);
        } finally {
            if (J$.Sr(2687889))
                continue jalangiLabel10;
            else
                break jalangiLabel10;
        }
    }
// JALANGI DO NOT INSTRUMENT

