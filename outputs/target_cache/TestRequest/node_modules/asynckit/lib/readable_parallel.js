J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2692105, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/asynckit/lib/readable_parallel.js');
            function ReadableParallel(list, iterator, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2692065, arguments.callee, this, arguments);
                            arguments = J$.N(2692073, 'arguments', arguments, true, false, false);
                            list = J$.N(2692081, 'list', list, true, false, false);
                            iterator = J$.N(2692089, 'iterator', iterator, true, false, false);
                            callback = J$.N(2692097, 'callback', callback, true, false, false);
                            if (J$.C(130104, J$.U(404714, '!', J$.B(404706, 'instanceof', J$.R(2691905, 'this', this, false, false), J$.R(2691913, 'ReadableParallel', ReadableParallel, false, true))))) {
                                return J$.Rt(2691961, J$.F(2691953, J$.R(2691921, 'ReadableParallel', ReadableParallel, false, true), true)(J$.R(2691929, 'list', list, false, false), J$.R(2691937, 'iterator', iterator, false, false), J$.R(2691945, 'callback', callback, false, false)));
                            }
                            J$.M(2692009, J$.G(2691977, J$.R(2691969, 'ReadableParallel', ReadableParallel, false, true), 'super_'), 'call', false)(J$.R(2691985, 'this', this, false, false), J$.T(2692001, { objectMode: J$.T(2691993, true, 23, false) }, 11, false));
                            J$.M(2692057, J$.R(2692017, 'this', this, false, false), '_start', false)(J$.R(2692025, 'parallel', parallel, false, true), J$.R(2692033, 'list', list, false, false), J$.R(2692041, 'iterator', iterator, false, false), J$.R(2692049, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(2692137, J$e);
                        } finally {
                            if (J$.Fr(2692145))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2692113, 'parallel', parallel, false, false, false);
            ReadableParallel = J$.N(2692129, 'ReadableParallel', J$.T(2692121, ReadableParallel, 12, false), true, false, false);
            J$.T(2691841, 'use strict', 21, false);
            var parallel = J$.W(2691873, 'parallel', J$.F(2691865, J$.I(typeof require === 'undefined' ? require = J$.R(2691849, 'require', undefined, true, true) : require = J$.R(2691849, 'require', require, true, true)), false)(J$.T(2691857, '../parallel.js', 21, false)), parallel, false, true);
            J$.P(2691897, J$.I(typeof module === 'undefined' ? module = J$.R(2691881, 'module', undefined, true, true) : module = J$.R(2691881, 'module', module, true, true)), 'exports', J$.R(2691889, 'ReadableParallel', ReadableParallel, false, true));
        } catch (J$e) {
            J$.Ex(2692153, J$e);
        } finally {
            if (J$.Sr(2692161))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

