J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(2690537, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/asynckit/lib/iterate.js');
            function iterate(list, iterator, state, callback) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2690265, arguments.callee, this, arguments);
                            arguments = J$.N(2690273, 'arguments', arguments, true, false, false);
                            list = J$.N(2690281, 'list', list, true, false, false);
                            iterator = J$.N(2690289, 'iterator', iterator, true, false, false);
                            state = J$.N(2690297, 'state', state, true, false, false);
                            callback = J$.N(2690305, 'callback', callback, true, false, false);
                            J$.N(2690313, 'key', key, false, false, false);
                            var key = J$.W(2689961, 'key', J$.C(130040, J$.G(2689889, J$.R(2689873, 'state', state, false, false), J$.T(2689881, 'keyedList', 21, false))) ? J$.G(2689937, J$.G(2689913, J$.R(2689897, 'state', state, false, false), J$.T(2689905, 'keyedList', 21, false)), J$.G(2689929, J$.R(2689921, 'state', state, false, false), 'index')) : J$.G(2689953, J$.R(2689945, 'state', state, false, false), 'index'), key, false, false);
                            J$.P(2690257, J$.G(2689977, J$.R(2689969, 'state', state, false, false), 'jobs'), J$.R(2689985, 'key', key, false, false), J$.F(2690249, J$.R(2689993, 'runJob', runJob, false, true), false)(J$.R(2690001, 'iterator', iterator, false, false), J$.R(2690009, 'key', key, false, false), J$.G(2690033, J$.R(2690017, 'list', list, false, false), J$.R(2690025, 'key', key, false, false)), J$.T(2690241, function (error, output) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2690209, arguments.callee, this, arguments);
                                            arguments = J$.N(2690217, 'arguments', arguments, true, false, false);
                                            error = J$.N(2690225, 'error', error, true, false, false);
                                            output = J$.N(2690233, 'output', output, true, false, false);
                                            if (J$.C(130048, J$.U(404642, '!', J$.B(404634, 'in', J$.R(2690041, 'key', key, false, false), J$.G(2690057, J$.R(2690049, 'state', state, false, false), 'jobs'))))) {
                                                return J$.Rt(2690065, undefined);
                                            }
                                            J$.B(404650, 'delete', J$.G(2690081, J$.R(2690073, 'state', state, false, false), 'jobs'), J$.R(2690089, 'key', key, false, false));
                                            if (J$.C(130056, J$.R(2690097, 'error', error, false, false))) {
                                                J$.F(2690121, J$.R(2690105, 'abort', abort, false, true), false)(J$.R(2690113, 'state', state, false, false));
                                            } else {
                                                J$.P(2690161, J$.G(2690137, J$.R(2690129, 'state', state, false, false), 'results'), J$.R(2690145, 'key', key, false, false), J$.R(2690153, 'output', output, false, false));
                                            }
                                            J$.F(2690201, J$.R(2690169, 'callback', callback, false, false), false)(J$.R(2690177, 'error', error, false, false), J$.G(2690193, J$.R(2690185, 'state', state, false, false), 'results'));
                                        } catch (J$e) {
                                            J$.Ex(2690593, J$e);
                                        } finally {
                                            if (J$.Fr(2690601))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(2690609, J$e);
                        } finally {
                            if (J$.Fr(2690617))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function runJob(iterator, key, item, callback) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2690481, arguments.callee, this, arguments);
                            arguments = J$.N(2690489, 'arguments', arguments, true, false, false);
                            iterator = J$.N(2690497, 'iterator', iterator, true, false, false);
                            key = J$.N(2690505, 'key', key, true, false, false);
                            item = J$.N(2690513, 'item', item, true, false, false);
                            callback = J$.N(2690521, 'callback', callback, true, false, false);
                            J$.N(2690529, 'aborter', aborter, false, false, false);
                            var aborter;
                            if (J$.C(130064, J$.B(404658, '==', J$.G(2690329, J$.R(2690321, 'iterator', iterator, false, false), 'length'), J$.T(2690337, 2, 22, false)))) {
                                aborter = J$.W(2690393, 'aborter', J$.F(2690385, J$.R(2690345, 'iterator', iterator, false, false), false)(J$.R(2690353, 'item', item, false, false), J$.F(2690377, J$.R(2690361, 'async', async, false, true), false)(J$.R(2690369, 'callback', callback, false, false))), aborter, false, false);
                            } else {
                                aborter = J$.W(2690457, 'aborter', J$.F(2690449, J$.R(2690401, 'iterator', iterator, false, false), false)(J$.R(2690409, 'item', item, false, false), J$.R(2690417, 'key', key, false, false), J$.F(2690441, J$.R(2690425, 'async', async, false, true), false)(J$.R(2690433, 'callback', callback, false, false))), aborter, false, false);
                            }
                            return J$.Rt(2690473, J$.R(2690465, 'aborter', aborter, false, false));
                        } catch (J$e) {
                            J$.Ex(2690625, J$e);
                        } finally {
                            if (J$.Fr(2690633))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2690545, 'async', async, false, false, false);
            J$.N(2690553, 'abort', abort, false, false, false);
            iterate = J$.N(2690569, 'iterate', J$.T(2690561, iterate, 12, false), true, false, false);
            runJob = J$.N(2690585, 'runJob', J$.T(2690577, runJob, 12, false), true, false, false);
            J$.T(2689777, 'use strict', 21, false);
            var async = J$.W(2689833, 'async', J$.F(2689801, J$.I(typeof require === 'undefined' ? require = J$.R(2689785, 'require', undefined, true, true) : require = J$.R(2689785, 'require', require, true, true)), false)(J$.T(2689793, './async.js', 21, false)), async, false, true), abort = J$.W(2689841, 'abort', J$.F(2689825, J$.I(typeof require === 'undefined' ? require = J$.R(2689809, 'require', undefined, true, true) : require = J$.R(2689809, 'require', require, true, true)), false)(J$.T(2689817, './abort.js', 21, false)), abort, false, true);
            J$.P(2689865, J$.I(typeof module === 'undefined' ? module = J$.R(2689849, 'module', undefined, true, true) : module = J$.R(2689849, 'module', module, true, true)), 'exports', J$.R(2689857, 'iterate', iterate, false, true));
        } catch (J$e) {
            J$.Ex(2690641, J$e);
        } finally {
            if (J$.Sr(2690649))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

