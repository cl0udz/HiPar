J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2692433, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/asynckit/lib/readable_serial.js');
            function ReadableSerial(list, iterator, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2692393, arguments.callee, this, arguments);
                            arguments = J$.N(2692401, 'arguments', arguments, true, false, false);
                            list = J$.N(2692409, 'list', list, true, false, false);
                            iterator = J$.N(2692417, 'iterator', iterator, true, false, false);
                            callback = J$.N(2692425, 'callback', callback, true, false, false);
                            if (J$.C(130112, J$.U(404730, '!', J$.B(404722, 'instanceof', J$.R(2692233, 'this', this, false, false), J$.R(2692241, 'ReadableSerial', ReadableSerial, false, true))))) {
                                return J$.Rt(2692289, J$.F(2692281, J$.R(2692249, 'ReadableSerial', ReadableSerial, false, true), true)(J$.R(2692257, 'list', list, false, false), J$.R(2692265, 'iterator', iterator, false, false), J$.R(2692273, 'callback', callback, false, false)));
                            }
                            J$.M(2692337, J$.G(2692305, J$.R(2692297, 'ReadableSerial', ReadableSerial, false, true), 'super_'), 'call', false)(J$.R(2692313, 'this', this, false, false), J$.T(2692329, { objectMode: J$.T(2692321, true, 23, false) }, 11, false));
                            J$.M(2692385, J$.R(2692345, 'this', this, false, false), '_start', false)(J$.R(2692353, 'serial', serial, false, true), J$.R(2692361, 'list', list, false, false), J$.R(2692369, 'iterator', iterator, false, false), J$.R(2692377, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(2692465, J$e);
                        } finally {
                            if (J$.Fr(2692473))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2692441, 'serial', serial, false, false, false);
            ReadableSerial = J$.N(2692457, 'ReadableSerial', J$.T(2692449, ReadableSerial, 12, false), true, false, false);
            J$.T(2692169, 'use strict', 21, false);
            var serial = J$.W(2692201, 'serial', J$.F(2692193, J$.I(typeof require === 'undefined' ? require = J$.R(2692177, 'require', undefined, true, true) : require = J$.R(2692177, 'require', require, true, true)), false)(J$.T(2692185, '../serial.js', 21, false)), serial, false, true);
            J$.P(2692225, J$.I(typeof module === 'undefined' ? module = J$.R(2692209, 'module', undefined, true, true) : module = J$.R(2692209, 'module', module, true, true)), 'exports', J$.R(2692217, 'ReadableSerial', ReadableSerial, false, true));
        } catch (J$e) {
            J$.Ex(2692481, J$e);
        } finally {
            if (J$.Sr(2692489))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

