J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(3974753, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/uuid/lib/v35.js');
            function uuidToBytes(uuid) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3973641, arguments.callee, this, arguments);
                            arguments = J$.N(3973649, 'arguments', arguments, true, false, false);
                            uuid = J$.N(3973657, 'uuid', uuid, true, false, false);
                            J$.N(3973665, 'bytes', bytes, false, false, false);
                            var bytes = J$.W(3973513, 'bytes', J$.T(3973505, [], 10, false), bytes, false, false);
                            J$.M(3973617, J$.R(3973521, 'uuid', uuid, false, false), 'replace', false)(J$.T(3973529, /[a-fA-F0-9]{2}/g, 14, false), J$.T(3973609, function (hex) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3973585, arguments.callee, this, arguments);
                                            arguments = J$.N(3973593, 'arguments', arguments, true, false, false);
                                            hex = J$.N(3973601, 'hex', hex, true, false, false);
                                            J$.M(3973577, J$.R(3973537, 'bytes', bytes, false, false), 'push', false)(J$.F(3973569, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(3973545, 'parseInt', undefined, true, true) : parseInt = J$.R(3973545, 'parseInt', parseInt, true, true)), false)(J$.R(3973553, 'hex', hex, false, false), J$.T(3973561, 16, 22, false)));
                                        } catch (J$e) {
                                            J$.Ex(3974801, J$e);
                                        } finally {
                                            if (J$.Fr(3974809))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(3973633, J$.R(3973625, 'bytes', bytes, false, false));
                        } catch (J$e) {
                            J$.Ex(3974817, J$e);
                        } finally {
                            if (J$.Fr(3974825))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function stringToBytes(str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3973881, arguments.callee, this, arguments);
                            arguments = J$.N(3973889, 'arguments', arguments, true, false, false);
                            str = J$.N(3973897, 'str', str, true, false, false);
                            J$.N(3973905, 'bytes', bytes, false, false, false);
                            J$.N(3973913, 'i', i, false, false, false);
                            str = J$.W(3973713, 'str', J$.F(3973705, J$.I(typeof unescape === 'undefined' ? unescape = J$.R(3973673, 'unescape', undefined, true, true) : unescape = J$.R(3973673, 'unescape', unescape, true, true)), false)(J$.F(3973697, J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(3973681, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(3973681, 'encodeURIComponent', encodeURIComponent, true, true)), false)(J$.R(3973689, 'str', str, false, false))), str, false, false);
                            var bytes = J$.W(3973753, 'bytes', J$.F(3973745, J$.I(typeof Array === 'undefined' ? Array = J$.R(3973721, 'Array', undefined, true, true) : Array = J$.R(3973721, 'Array', Array, true, true)), true)(J$.G(3973737, J$.R(3973729, 'str', str, false, false), 'length')), bytes, false, false);
                            for (var i = J$.W(3973769, 'i', J$.T(3973761, 0, 22, false), i, false, false); J$.C(177792, J$.B(546218, '<', J$.R(3973777, 'i', i, false, false), J$.G(3973793, J$.R(3973785, 'str', str, false, false), 'length'))); J$.B(546242, '-', i = J$.W(3973809, 'i', J$.B(546234, '+', J$.U(546226, '+', J$.R(3973801, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.P(3973857, J$.R(3973817, 'bytes', bytes, false, false), J$.R(3973825, 'i', i, false, false), J$.M(3973849, J$.R(3973833, 'str', str, false, false), 'charCodeAt', false)(J$.R(3973841, 'i', i, false, false)));
                            }
                            return J$.Rt(3973873, J$.R(3973865, 'bytes', bytes, false, false));
                        } catch (J$e) {
                            J$.Ex(3974833, J$e);
                        } finally {
                            if (J$.Fr(3974841))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3974761, 'bytesToUuid', bytesToUuid, false, false, false);
            uuidToBytes = J$.N(3974777, 'uuidToBytes', J$.T(3974769, uuidToBytes, 12, false), true, false, false);
            stringToBytes = J$.N(3974793, 'stringToBytes', J$.T(3974785, stringToBytes, 12, false), true, false, false);
            J$.T(3973321, 'use strict', 21, false);
            J$.F(3973345, J$.I(typeof require === 'undefined' ? require = J$.R(3973329, 'require', undefined, true, true) : require = J$.R(3973329, 'require', require, true, true)), false)(J$.T(3973337, 'core-js/modules/es.array.concat', 21, false));
            J$.F(3973369, J$.I(typeof require === 'undefined' ? require = J$.R(3973353, 'require', undefined, true, true) : require = J$.R(3973353, 'require', require, true, true)), false)(J$.T(3973361, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(3973393, J$.I(typeof require === 'undefined' ? require = J$.R(3973377, 'require', undefined, true, true) : require = J$.R(3973377, 'require', require, true, true)), false)(J$.T(3973385, 'core-js/modules/es.function.name', 21, false));
            J$.F(3973417, J$.I(typeof require === 'undefined' ? require = J$.R(3973401, 'require', undefined, true, true) : require = J$.R(3973401, 'require', require, true, true)), false)(J$.T(3973409, 'core-js/modules/es.parse-int', 21, false));
            J$.F(3973441, J$.I(typeof require === 'undefined' ? require = J$.R(3973425, 'require', undefined, true, true) : require = J$.R(3973425, 'require', require, true, true)), false)(J$.T(3973433, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(3973465, J$.I(typeof require === 'undefined' ? require = J$.R(3973449, 'require', undefined, true, true) : require = J$.R(3973449, 'require', require, true, true)), false)(J$.T(3973457, 'core-js/modules/es.string.replace', 21, false));
            var bytesToUuid = J$.W(3973497, 'bytesToUuid', J$.F(3973489, J$.I(typeof require === 'undefined' ? require = J$.R(3973473, 'require', undefined, true, true) : require = J$.R(3973473, 'require', require, true, true)), false)(J$.T(3973481, './bytesToUuid', 21, false)), bytesToUuid, false, true);
            J$.P(3974745, J$.I(typeof module === 'undefined' ? module = J$.R(3973921, 'module', undefined, true, true) : module = J$.R(3973921, 'module', module, true, true)), 'exports', J$.T(3974737, function (name, version, hashfunc) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3974689, arguments.callee, this, arguments);
                            arguments = J$.N(3974697, 'arguments', arguments, true, false, false);
                            name = J$.N(3974705, 'name', name, true, false, false);
                            version = J$.N(3974713, 'version', version, true, false, false);
                            hashfunc = J$.N(3974721, 'hashfunc', hashfunc, true, false, false);
                            J$.N(3974729, 'generateUUID', generateUUID, false, false, false);
                            var generateUUID = J$.W(3974585, 'generateUUID', J$.T(3974577, function generateUUID(value, namespace, buf, offset) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3974505, arguments.callee, this, arguments);
                                            arguments = J$.N(3974513, 'arguments', arguments, true, false, false);
                                            value = J$.N(3974521, 'value', value, true, false, false);
                                            namespace = J$.N(3974529, 'namespace', namespace, true, false, false);
                                            buf = J$.N(3974537, 'buf', buf, true, false, false);
                                            offset = J$.N(3974545, 'offset', offset, true, false, false);
                                            J$.N(3974553, 'off', off, false, false, false);
                                            J$.N(3974561, 'bytes', bytes, false, false, false);
                                            J$.N(3974569, 'idx', idx, false, false, false);
                                            var off = J$.W(3973953, 'off', J$.C(177808, J$.C(177800, J$.R(3973929, 'buf', buf, false, false)) ? J$.R(3973937, 'offset', offset, false, false) : J$._()) ? J$._() : J$.T(3973945, 0, 22, false), off, false, false);
                                            if (J$.C(177816, J$.B(546258, '==', J$.U(546250, 'typeof', J$.R(3973961, 'value', value, false, false)), J$.T(3973969, 'string', 21, false))))
                                                value = J$.W(3974001, 'value', J$.F(3973993, J$.R(3973977, 'stringToBytes', stringToBytes, false, true), false)(J$.R(3973985, 'value', value, false, false)), value, false, false);
                                            if (J$.C(177824, J$.B(546274, '==', J$.U(546266, 'typeof', J$.R(3974009, 'namespace', namespace, false, false)), J$.T(3974017, 'string', 21, false))))
                                                namespace = J$.W(3974049, 'namespace', J$.F(3974041, J$.R(3974025, 'uuidToBytes', uuidToBytes, false, true), false)(J$.R(3974033, 'namespace', namespace, false, false)), namespace, false, false);
                                            if (J$.C(177832, J$.U(546282, '!', J$.M(3974073, J$.I(typeof Array === 'undefined' ? Array = J$.R(3974057, 'Array', undefined, true, true) : Array = J$.R(3974057, 'Array', Array, true, true)), 'isArray', false)(J$.R(3974065, 'value', value, false, false)))))
                                                throw J$.F(3974097, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3974081, 'TypeError', undefined, true, true) : TypeError = J$.R(3974081, 'TypeError', TypeError, true, true)), false)(J$.T(3974089, 'value must be an array of bytes', 21, false));
                                            if (J$.C(177848, J$.C(177840, J$.U(546290, '!', J$.M(3974121, J$.I(typeof Array === 'undefined' ? Array = J$.R(3974105, 'Array', undefined, true, true) : Array = J$.R(3974105, 'Array', Array, true, true)), 'isArray', false)(J$.R(3974113, 'namespace', namespace, false, false)))) ? J$._() : J$.B(546298, '!==', J$.G(3974137, J$.R(3974129, 'namespace', namespace, false, false), 'length'), J$.T(3974145, 16, 22, false))))
                                                throw J$.F(3974169, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3974153, 'TypeError', undefined, true, true) : TypeError = J$.R(3974153, 'TypeError', TypeError, true, true)), false)(J$.T(3974161, 'namespace must be uuid string or an Array of 16 byte values', 21, false));
                                            var bytes = J$.W(3974217, 'bytes', J$.F(3974209, J$.R(3974177, 'hashfunc', hashfunc, false, false), false)(J$.M(3974201, J$.R(3974185, 'namespace', namespace, false, false), 'concat', false)(J$.R(3974193, 'value', value, false, false))), bytes, false, false);
                                            J$.P(3974281, J$.R(3974225, 'bytes', bytes, false, false), J$.T(3974233, 6, 22, false), J$.B(546314, '|', J$.B(546306, '&', J$.G(3974257, J$.R(3974241, 'bytes', bytes, false, false), J$.T(3974249, 6, 22, false)), J$.T(3974265, 15, 22, false)), J$.R(3974273, 'version', version, false, false)));
                                            J$.P(3974345, J$.R(3974289, 'bytes', bytes, false, false), J$.T(3974297, 8, 22, false), J$.B(546330, '|', J$.B(546322, '&', J$.G(3974321, J$.R(3974305, 'bytes', bytes, false, false), J$.T(3974313, 8, 22, false)), J$.T(3974329, 63, 22, false)), J$.T(3974337, 128, 22, false)));
                                            if (J$.C(177864, J$.R(3974353, 'buf', buf, false, false))) {
                                                for (var idx = J$.W(3974369, 'idx', J$.T(3974361, 0, 22, false), idx, false, false); J$.C(177856, J$.B(546338, '<', J$.R(3974377, 'idx', idx, false, false), J$.T(3974385, 16, 22, false))); idx = J$.W(3974401, 'idx', J$.B(546354, '+', J$.U(546346, '+', J$.R(3974393, 'idx', idx, false, false)), 1), idx, false, false)) {
                                                    J$.P(3974457, J$.R(3974409, 'buf', buf, false, false), J$.B(546362, '+', J$.R(3974417, 'off', off, false, false), J$.R(3974425, 'idx', idx, false, false)), J$.G(3974449, J$.R(3974433, 'bytes', bytes, false, false), J$.R(3974441, 'idx', idx, false, false)));
                                                }
                                            }
                                            return J$.Rt(3974497, J$.C(177872, J$.R(3974465, 'buf', buf, false, false)) ? J$._() : J$.F(3974489, J$.R(3974473, 'bytesToUuid', bytesToUuid, false, true), false)(J$.R(3974481, 'bytes', bytes, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(3974849, J$e);
                                        } finally {
                                            if (J$.Fr(3974857))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), generateUUID, false, false);
                            try {
                                J$.P(3974609, J$.R(3974593, 'generateUUID', generateUUID, false, false), 'name', J$.R(3974601, 'name', name, false, false));
                            } catch (err) {
                                J$.N(3974617, 'err', err, false, false, true);
                            }
                            J$.P(3974641, J$.R(3974625, 'generateUUID', generateUUID, false, false), 'DNS', J$.T(3974633, '6ba7b810-9dad-11d1-80b4-00c04fd430c8', 21, false));
                            J$.P(3974665, J$.R(3974649, 'generateUUID', generateUUID, false, false), 'URL', J$.T(3974657, '6ba7b811-9dad-11d1-80b4-00c04fd430c8', 21, false));
                            return J$.Rt(3974681, J$.R(3974673, 'generateUUID', generateUUID, false, false));
                        } catch (J$e) {
                            J$.Ex(3974865, J$e);
                        } finally {
                            if (J$.Fr(3974873))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3974881, J$e);
        } finally {
            if (J$.Sr(3974889))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

