J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(2712105, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/aws4/lru.js');
            function LruCache(size) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2710337, arguments.callee, this, arguments);
                            arguments = J$.N(2710345, 'arguments', arguments, true, false, false);
                            size = J$.N(2710353, 'size', size, true, false, false);
                            J$.P(2710257, J$.R(2710233, 'this', this, false, false), 'capacity', J$.B(405698, '|', J$.R(2710241, 'size', size, false, false), J$.T(2710249, 0, 22, false)));
                            J$.P(2710297, J$.R(2710265, 'this', this, false, false), 'map', J$.M(2710289, J$.I(typeof Object === 'undefined' ? Object = J$.R(2710273, 'Object', undefined, true, true) : Object = J$.R(2710273, 'Object', Object, true, true)), 'create', false)(J$.T(2710281, null, 25, false)));
                            J$.P(2710329, J$.R(2710305, 'this', this, false, false), 'list', J$.F(2710321, J$.R(2710313, 'DoublyLinkedList', DoublyLinkedList, false, true), true)());
                        } catch (J$e) {
                            J$.Ex(2712177, J$e);
                        } finally {
                            if (J$.Fr(2712185))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DoublyLinkedList() {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2711185, arguments.callee, this, arguments);
                            arguments = J$.N(2711193, 'arguments', arguments, true, false, false);
                            J$.P(2711153, J$.R(2711137, 'this', this, false, false), 'firstNode', J$.T(2711145, null, 25, false));
                            J$.P(2711177, J$.R(2711161, 'this', this, false, false), 'lastNode', J$.T(2711169, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(2712257, J$e);
                        } finally {
                            if (J$.Fr(2712265))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DoublyLinkedNode(key, val) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(2712073, arguments.callee, this, arguments);
                            arguments = J$.N(2712081, 'arguments', arguments, true, false, false);
                            key = J$.N(2712089, 'key', key, true, false, false);
                            val = J$.N(2712097, 'val', val, true, false, false);
                            J$.P(2711993, J$.R(2711977, 'this', this, false, false), 'key', J$.R(2711985, 'key', key, false, false));
                            J$.P(2712017, J$.R(2712001, 'this', this, false, false), 'val', J$.R(2712009, 'val', val, false, false));
                            J$.P(2712041, J$.R(2712025, 'this', this, false, false), 'prev', J$.T(2712033, null, 25, false));
                            J$.P(2712065, J$.R(2712049, 'this', this, false, false), 'next', J$.T(2712057, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(2712321, J$e);
                        } finally {
                            if (J$.Fr(2712329))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            LruCache = J$.N(2712121, 'LruCache', J$.T(2712113, LruCache, 12, false), true, false, false);
            DoublyLinkedList = J$.N(2712137, 'DoublyLinkedList', J$.T(2712129, DoublyLinkedList, 12, false), true, false, false);
            DoublyLinkedNode = J$.N(2712153, 'DoublyLinkedNode', J$.T(2712145, DoublyLinkedNode, 12, false), true, false, false);
            J$.T(2710097, 'use strict', 21, false);
            J$.F(2710121, J$.I(typeof require === 'undefined' ? require = J$.R(2710105, 'require', undefined, true, true) : require = J$.R(2710105, 'require', require, true, true)), false)(J$.T(2710113, 'core-js/modules/es.array.map', 21, false));
            J$.F(2710145, J$.I(typeof require === 'undefined' ? require = J$.R(2710129, 'require', undefined, true, true) : require = J$.R(2710129, 'require', require, true, true)), false)(J$.T(2710137, 'core-js/modules/es.object.create', 21, false));
            J$.P(2710225, J$.I(typeof module === 'undefined' ? module = J$.R(2710153, 'module', undefined, true, true) : module = J$.R(2710153, 'module', module, true, true)), 'exports', J$.T(2710217, function (size) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2710193, arguments.callee, this, arguments);
                            arguments = J$.N(2710201, 'arguments', arguments, true, false, false);
                            size = J$.N(2710209, 'size', size, true, false, false);
                            return J$.Rt(2710185, J$.F(2710177, J$.R(2710161, 'LruCache', LruCache, false, true), true)(J$.R(2710169, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(2712161, J$e);
                        } finally {
                            if (J$.Fr(2712169))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2710537, J$.G(2710369, J$.R(2710361, 'LruCache', LruCache, false, true), 'prototype'), 'get', J$.T(2710529, function (key) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2710497, arguments.callee, this, arguments);
                            arguments = J$.N(2710505, 'arguments', arguments, true, false, false);
                            key = J$.N(2710513, 'key', key, true, false, false);
                            J$.N(2710521, 'node', node, false, false, false);
                            var node = J$.W(2710409, 'node', J$.G(2710401, J$.G(2710385, J$.R(2710377, 'this', this, false, false), 'map'), J$.R(2710393, 'key', key, false, false)), node, false, false);
                            if (J$.C(131120, J$.B(405706, '==', J$.R(2710417, 'node', node, false, false), J$.T(2710425, null, 25, false))))
                                return J$.Rt(2710441, J$.T(2710433, undefined, 24, false));
                            J$.M(2710465, J$.R(2710449, 'this', this, false, false), 'used', false)(J$.R(2710457, 'node', node, false, false));
                            return J$.Rt(2710489, J$.G(2710481, J$.R(2710473, 'node', node, false, false), 'val'));
                        } catch (J$e) {
                            J$.Ex(2712193, J$e);
                        } finally {
                            if (J$.Fr(2712201))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2710889, J$.G(2710553, J$.R(2710545, 'LruCache', LruCache, false, true), 'prototype'), 'set', J$.T(2710881, function (key, val) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2710841, arguments.callee, this, arguments);
                            arguments = J$.N(2710849, 'arguments', arguments, true, false, false);
                            key = J$.N(2710857, 'key', key, true, false, false);
                            val = J$.N(2710865, 'val', val, true, false, false);
                            J$.N(2710873, 'node', node, false, false, false);
                            var node = J$.W(2710593, 'node', J$.G(2710585, J$.G(2710569, J$.R(2710561, 'this', this, false, false), 'map'), J$.R(2710577, 'key', key, false, false)), node, false, false);
                            if (J$.C(131144, J$.B(405714, '!=', J$.R(2710601, 'node', node, false, false), J$.T(2710609, null, 25, false)))) {
                                J$.P(2710633, J$.R(2710617, 'node', node, false, false), 'val', J$.R(2710625, 'val', val, false, false));
                            } else {
                                if (J$.C(131128, J$.U(405722, '!', J$.G(2710649, J$.R(2710641, 'this', this, false, false), 'capacity'))))
                                    J$.M(2710665, J$.R(2710657, 'this', this, false, false), 'prune', false)();
                                if (J$.C(131136, J$.U(405730, '!', J$.G(2710681, J$.R(2710673, 'this', this, false, false), 'capacity'))))
                                    return J$.Rt(2710697, J$.T(2710689, false, 23, false));
                                node = J$.W(2710737, 'node', J$.F(2710729, J$.R(2710705, 'DoublyLinkedNode', DoublyLinkedNode, false, true), true)(J$.R(2710713, 'key', key, false, false), J$.R(2710721, 'val', val, false, false)), node, false, false);
                                J$.P(2710777, J$.G(2710753, J$.R(2710745, 'this', this, false, false), 'map'), J$.R(2710761, 'key', key, false, false), J$.R(2710769, 'node', node, false, false));
                                J$.B(405738, '+', J$.A(2710793, J$.R(2710785, 'this', this, false, false), 'capacity', '-')(1), 1);
                            }
                            J$.M(2710817, J$.R(2710801, 'this', this, false, false), 'used', false)(J$.R(2710809, 'node', node, false, false));
                            return J$.Rt(2710833, J$.T(2710825, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(2712209, J$e);
                        } finally {
                            if (J$.Fr(2712217))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2710977, J$.G(2710905, J$.R(2710897, 'LruCache', LruCache, false, true), 'prototype'), 'used', J$.T(2710969, function (node) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2710945, arguments.callee, this, arguments);
                            arguments = J$.N(2710953, 'arguments', arguments, true, false, false);
                            node = J$.N(2710961, 'node', node, true, false, false);
                            J$.M(2710937, J$.G(2710921, J$.R(2710913, 'this', this, false, false), 'list'), 'moveToFront', false)(J$.R(2710929, 'node', node, false, false));
                        } catch (J$e) {
                            J$.Ex(2712225, J$e);
                        } finally {
                            if (J$.Fr(2712233))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2711129, J$.G(2710993, J$.R(2710985, 'LruCache', LruCache, false, true), 'prototype'), 'prune', J$.T(2711121, function () {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2711097, arguments.callee, this, arguments);
                            arguments = J$.N(2711105, 'arguments', arguments, true, false, false);
                            J$.N(2711113, 'node', node, false, false, false);
                            var node = J$.W(2711025, 'node', J$.M(2711017, J$.G(2711009, J$.R(2711001, 'this', this, false, false), 'list'), 'pop', false)(), node, false, false);
                            if (J$.C(131152, J$.B(405746, '!=', J$.R(2711033, 'node', node, false, false), J$.T(2711041, null, 25, false)))) {
                                J$.B(405754, 'delete', J$.G(2711057, J$.R(2711049, 'this', this, false, false), 'map'), J$.G(2711073, J$.R(2711065, 'node', node, false, false), 'key'));
                                J$.B(405762, '-', J$.A(2711089, J$.R(2711081, 'this', this, false, false), 'capacity', '+')(1), 1);
                            }
                        } catch (J$e) {
                            J$.Ex(2712241, J$e);
                        } finally {
                            if (J$.Fr(2712249))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2711537, J$.G(2711209, J$.R(2711201, 'DoublyLinkedList', DoublyLinkedList, false, true), 'prototype'), 'moveToFront', J$.T(2711529, function (node) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2711505, arguments.callee, this, arguments);
                            arguments = J$.N(2711513, 'arguments', arguments, true, false, false);
                            node = J$.N(2711521, 'node', node, true, false, false);
                            if (J$.C(131160, J$.B(405770, '==', J$.G(2711225, J$.R(2711217, 'this', this, false, false), 'firstNode'), J$.R(2711233, 'node', node, false, false))))
                                return J$.Rt(2711241, undefined);
                            J$.M(2711265, J$.R(2711249, 'this', this, false, false), 'remove', false)(J$.R(2711257, 'node', node, false, false));
                            if (J$.C(131168, J$.B(405778, '==', J$.G(2711281, J$.R(2711273, 'this', this, false, false), 'firstNode'), J$.T(2711289, null, 25, false)))) {
                                J$.P(2711313, J$.R(2711297, 'this', this, false, false), 'firstNode', J$.R(2711305, 'node', node, false, false));
                                J$.P(2711337, J$.R(2711321, 'this', this, false, false), 'lastNode', J$.R(2711329, 'node', node, false, false));
                                J$.P(2711361, J$.R(2711345, 'node', node, false, false), 'prev', J$.T(2711353, null, 25, false));
                                J$.P(2711385, J$.R(2711369, 'node', node, false, false), 'next', J$.T(2711377, null, 25, false));
                            } else {
                                J$.P(2711409, J$.R(2711393, 'node', node, false, false), 'prev', J$.T(2711401, null, 25, false));
                                J$.P(2711441, J$.R(2711417, 'node', node, false, false), 'next', J$.G(2711433, J$.R(2711425, 'this', this, false, false), 'firstNode'));
                                J$.P(2711473, J$.G(2711457, J$.R(2711449, 'node', node, false, false), 'next'), 'prev', J$.R(2711465, 'node', node, false, false));
                                J$.P(2711497, J$.R(2711481, 'this', this, false, false), 'firstNode', J$.R(2711489, 'node', node, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2712273, J$e);
                        } finally {
                            if (J$.Fr(2712281))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2711673, J$.G(2711553, J$.R(2711545, 'DoublyLinkedList', DoublyLinkedList, false, true), 'prototype'), 'pop', J$.T(2711665, function () {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2711641, arguments.callee, this, arguments);
                            arguments = J$.N(2711649, 'arguments', arguments, true, false, false);
                            J$.N(2711657, 'lastNode', lastNode, false, false, false);
                            var lastNode = J$.W(2711577, 'lastNode', J$.G(2711569, J$.R(2711561, 'this', this, false, false), 'lastNode'), lastNode, false, false);
                            if (J$.C(131176, J$.B(405786, '!=', J$.R(2711585, 'lastNode', lastNode, false, false), J$.T(2711593, null, 25, false)))) {
                                J$.M(2711617, J$.R(2711601, 'this', this, false, false), 'remove', false)(J$.R(2711609, 'lastNode', lastNode, false, false));
                            }
                            return J$.Rt(2711633, J$.R(2711625, 'lastNode', lastNode, false, false));
                        } catch (J$e) {
                            J$.Ex(2712289, J$e);
                        } finally {
                            if (J$.Fr(2712297))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2711969, J$.G(2711689, J$.R(2711681, 'DoublyLinkedList', DoublyLinkedList, false, true), 'prototype'), 'remove', J$.T(2711961, function (node) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(2711937, arguments.callee, this, arguments);
                            arguments = J$.N(2711945, 'arguments', arguments, true, false, false);
                            node = J$.N(2711953, 'node', node, true, false, false);
                            if (J$.C(131192, J$.B(405794, '==', J$.G(2711705, J$.R(2711697, 'this', this, false, false), 'firstNode'), J$.R(2711713, 'node', node, false, false)))) {
                                J$.P(2711745, J$.R(2711721, 'this', this, false, false), 'firstNode', J$.G(2711737, J$.R(2711729, 'node', node, false, false), 'next'));
                            } else if (J$.C(131184, J$.B(405802, '!=', J$.G(2711761, J$.R(2711753, 'node', node, false, false), 'prev'), J$.T(2711769, null, 25, false)))) {
                                J$.P(2711809, J$.G(2711785, J$.R(2711777, 'node', node, false, false), 'prev'), 'next', J$.G(2711801, J$.R(2711793, 'node', node, false, false), 'next'));
                            }
                            if (J$.C(131208, J$.B(405810, '==', J$.G(2711825, J$.R(2711817, 'this', this, false, false), 'lastNode'), J$.R(2711833, 'node', node, false, false)))) {
                                J$.P(2711865, J$.R(2711841, 'this', this, false, false), 'lastNode', J$.G(2711857, J$.R(2711849, 'node', node, false, false), 'prev'));
                            } else if (J$.C(131200, J$.B(405818, '!=', J$.G(2711881, J$.R(2711873, 'node', node, false, false), 'next'), J$.T(2711889, null, 25, false)))) {
                                J$.P(2711929, J$.G(2711905, J$.R(2711897, 'node', node, false, false), 'next'), 'prev', J$.G(2711921, J$.R(2711913, 'node', node, false, false), 'prev'));
                            }
                        } catch (J$e) {
                            J$.Ex(2712305, J$e);
                        } finally {
                            if (J$.Fr(2712313))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2712337, J$e);
        } finally {
            if (J$.Sr(2712345))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

