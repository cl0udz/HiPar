J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(3276017, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/safe-buffer/index.js');
            function copyProps(src, dst) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3275001, arguments.callee, this, arguments);
                            arguments = J$.N(3275009, 'arguments', arguments, true, false, false);
                            src = J$.N(3275017, 'src', src, true, false, false);
                            dst = J$.N(3275025, 'dst', dst, true, false, false);
                            J$.N(3275033, 'key', key, false, false, false);
                            for (var key in J$.H(3274985, J$.R(3274929, 'src', src, false, false))) {
                                J$.N(3274993, 'key', key, false, true, false);
                                {
                                    {
                                        J$.P(3274977, J$.R(3274937, 'dst', dst, false, false), J$.R(3274945, 'key', key, false, false), J$.G(3274969, J$.R(3274953, 'src', src, false, false), J$.R(3274961, 'key', key, false, false)));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(3276073, J$e);
                        } finally {
                            if (J$.Fr(3276081))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function SafeBuffer(arg, encodingOrOffset, length) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3275233, arguments.callee, this, arguments);
                            arguments = J$.N(3275241, 'arguments', arguments, true, false, false);
                            arg = J$.N(3275249, 'arg', arg, true, false, false);
                            encodingOrOffset = J$.N(3275257, 'encodingOrOffset', encodingOrOffset, true, false, false);
                            length = J$.N(3275265, 'length', length, true, false, false);
                            return J$.Rt(3275225, J$.F(3275217, J$.R(3275185, 'Buffer', Buffer, false, true), false)(J$.R(3275193, 'arg', arg, false, false), J$.R(3275201, 'encodingOrOffset', encodingOrOffset, false, false), J$.R(3275209, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(3276089, J$e);
                        } finally {
                            if (J$.Fr(3276097))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3276025, 'buffer', buffer, false, false, false);
            J$.N(3276033, 'Buffer', Buffer, false, false, false);
            copyProps = J$.N(3276049, 'copyProps', J$.T(3276041, copyProps, 12, false), true, false, false);
            SafeBuffer = J$.N(3276065, 'SafeBuffer', J$.T(3276057, SafeBuffer, 12, false), true, false, false);
            J$.T(3274817, 'use strict', 21, false);
            J$.F(3274841, J$.I(typeof require === 'undefined' ? require = J$.R(3274825, 'require', undefined, true, true) : require = J$.R(3274825, 'require', require, true, true)), false)(J$.T(3274833, 'core-js/modules/es.array.fill', 21, false));
            J$.F(3274865, J$.I(typeof require === 'undefined' ? require = J$.R(3274849, 'require', undefined, true, true) : require = J$.R(3274849, 'require', require, true, true)), false)(J$.T(3274857, 'core-js/modules/es.object.create', 21, false));
            var buffer = J$.W(3274897, 'buffer', J$.F(3274889, J$.I(typeof require === 'undefined' ? require = J$.R(3274873, 'require', undefined, true, true) : require = J$.R(3274873, 'require', require, true, true)), false)(J$.T(3274881, 'buffer', 21, false)), buffer, false, true);
            var Buffer = J$.W(3274921, 'Buffer', J$.G(3274913, J$.R(3274905, 'buffer', buffer, false, true), 'Buffer'), Buffer, false, true);
            if (J$.C(153128, J$.C(153120, J$.C(153112, J$.C(153104, J$.G(3275049, J$.R(3275041, 'Buffer', Buffer, false, true), 'from')) ? J$.G(3275065, J$.R(3275057, 'Buffer', Buffer, false, true), 'alloc') : J$._()) ? J$.G(3275081, J$.R(3275073, 'Buffer', Buffer, false, true), 'allocUnsafe') : J$._()) ? J$.G(3275097, J$.R(3275089, 'Buffer', Buffer, false, true), 'allocUnsafeSlow') : J$._())) {
                J$.P(3275121, J$.I(typeof module === 'undefined' ? module = J$.R(3275105, 'module', undefined, true, true) : module = J$.R(3275105, 'module', module, true, true)), 'exports', J$.R(3275113, 'buffer', buffer, false, true));
            } else {
                J$.F(3275153, J$.R(3275129, 'copyProps', copyProps, false, true), false)(J$.R(3275137, 'buffer', buffer, false, true), J$.I(typeof exports === 'undefined' ? exports = J$.R(3275145, 'exports', undefined, true, true) : exports = J$.R(3275145, 'exports', exports, true, true)));
                J$.P(3275177, J$.I(typeof exports === 'undefined' ? exports = J$.R(3275161, 'exports', undefined, true, true) : exports = J$.R(3275161, 'exports', exports, true, true)), 'Buffer', J$.R(3275169, 'SafeBuffer', SafeBuffer, false, true));
            }
            J$.P(3275313, J$.R(3275273, 'SafeBuffer', SafeBuffer, false, true), 'prototype', J$.M(3275305, J$.I(typeof Object === 'undefined' ? Object = J$.R(3275281, 'Object', undefined, true, true) : Object = J$.R(3275281, 'Object', Object, true, true)), 'create', false)(J$.G(3275297, J$.R(3275289, 'Buffer', Buffer, false, true), 'prototype')));
            J$.F(3275345, J$.R(3275321, 'copyProps', copyProps, false, true), false)(J$.R(3275329, 'Buffer', Buffer, false, true), J$.R(3275337, 'SafeBuffer', SafeBuffer, false, true));
            J$.P(3275497, J$.R(3275353, 'SafeBuffer', SafeBuffer, false, true), 'from', J$.T(3275489, function (arg, encodingOrOffset, length) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3275449, arguments.callee, this, arguments);
                            arguments = J$.N(3275457, 'arguments', arguments, true, false, false);
                            arg = J$.N(3275465, 'arg', arg, true, false, false);
                            encodingOrOffset = J$.N(3275473, 'encodingOrOffset', encodingOrOffset, true, false, false);
                            length = J$.N(3275481, 'length', length, true, false, false);
                            if (J$.C(153136, J$.B(441834, '===', J$.U(441826, 'typeof', J$.R(3275361, 'arg', arg, false, false)), J$.T(3275369, 'number', 21, false)))) {
                                throw J$.F(3275393, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3275377, 'TypeError', undefined, true, true) : TypeError = J$.R(3275377, 'TypeError', TypeError, true, true)), true)(J$.T(3275385, 'Argument must not be a number', 21, false));
                            }
                            return J$.Rt(3275441, J$.F(3275433, J$.R(3275401, 'Buffer', Buffer, false, true), false)(J$.R(3275409, 'arg', arg, false, false), J$.R(3275417, 'encodingOrOffset', encodingOrOffset, false, false), J$.R(3275425, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(3276105, J$e);
                        } finally {
                            if (J$.Fr(3276113))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3275769, J$.R(3275505, 'SafeBuffer', SafeBuffer, false, true), 'alloc', J$.T(3275761, function (size, fill, encoding) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3275713, arguments.callee, this, arguments);
                            arguments = J$.N(3275721, 'arguments', arguments, true, false, false);
                            size = J$.N(3275729, 'size', size, true, false, false);
                            fill = J$.N(3275737, 'fill', fill, true, false, false);
                            encoding = J$.N(3275745, 'encoding', encoding, true, false, false);
                            J$.N(3275753, 'buf', buf, false, false, false);
                            if (J$.C(153144, J$.B(441850, '!==', J$.U(441842, 'typeof', J$.R(3275513, 'size', size, false, false)), J$.T(3275521, 'number', 21, false)))) {
                                throw J$.F(3275545, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3275529, 'TypeError', undefined, true, true) : TypeError = J$.R(3275529, 'TypeError', TypeError, true, true)), true)(J$.T(3275537, 'Argument must be a number', 21, false));
                            }
                            var buf = J$.W(3275577, 'buf', J$.F(3275569, J$.R(3275553, 'Buffer', Buffer, false, true), false)(J$.R(3275561, 'size', size, false, false)), buf, false, false);
                            if (J$.C(153160, J$.B(441858, '!==', J$.R(3275585, 'fill', fill, false, false), J$.T(3275593, undefined, 24, false)))) {
                                if (J$.C(153152, J$.B(441874, '===', J$.U(441866, 'typeof', J$.R(3275601, 'encoding', encoding, false, false)), J$.T(3275609, 'string', 21, false)))) {
                                    J$.M(3275641, J$.R(3275617, 'buf', buf, false, false), 'fill', false)(J$.R(3275625, 'fill', fill, false, false), J$.R(3275633, 'encoding', encoding, false, false));
                                } else {
                                    J$.M(3275665, J$.R(3275649, 'buf', buf, false, false), 'fill', false)(J$.R(3275657, 'fill', fill, false, false));
                                }
                            } else {
                                J$.M(3275689, J$.R(3275673, 'buf', buf, false, false), 'fill', false)(J$.T(3275681, 0, 22, false));
                            }
                            return J$.Rt(3275705, J$.R(3275697, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(3276121, J$e);
                        } finally {
                            if (J$.Fr(3276129))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3275889, J$.R(3275777, 'SafeBuffer', SafeBuffer, false, true), 'allocUnsafe', J$.T(3275881, function (size) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3275857, arguments.callee, this, arguments);
                            arguments = J$.N(3275865, 'arguments', arguments, true, false, false);
                            size = J$.N(3275873, 'size', size, true, false, false);
                            if (J$.C(153168, J$.B(441890, '!==', J$.U(441882, 'typeof', J$.R(3275785, 'size', size, false, false)), J$.T(3275793, 'number', 21, false)))) {
                                throw J$.F(3275817, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3275801, 'TypeError', undefined, true, true) : TypeError = J$.R(3275801, 'TypeError', TypeError, true, true)), true)(J$.T(3275809, 'Argument must be a number', 21, false));
                            }
                            return J$.Rt(3275849, J$.F(3275841, J$.R(3275825, 'Buffer', Buffer, false, true), false)(J$.R(3275833, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(3276137, J$e);
                        } finally {
                            if (J$.Fr(3276145))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3276009, J$.R(3275897, 'SafeBuffer', SafeBuffer, false, true), 'allocUnsafeSlow', J$.T(3276001, function (size) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(3275977, arguments.callee, this, arguments);
                            arguments = J$.N(3275985, 'arguments', arguments, true, false, false);
                            size = J$.N(3275993, 'size', size, true, false, false);
                            if (J$.C(153176, J$.B(441906, '!==', J$.U(441898, 'typeof', J$.R(3275905, 'size', size, false, false)), J$.T(3275913, 'number', 21, false)))) {
                                throw J$.F(3275937, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3275921, 'TypeError', undefined, true, true) : TypeError = J$.R(3275921, 'TypeError', TypeError, true, true)), true)(J$.T(3275929, 'Argument must be a number', 21, false));
                            }
                            return J$.Rt(3275969, J$.M(3275961, J$.R(3275945, 'buffer', buffer, false, true), 'SlowBuffer', false)(J$.R(3275953, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(3276153, J$e);
                        } finally {
                            if (J$.Fr(3276161))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3276169, J$e);
        } finally {
            if (J$.Sr(3276177))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

