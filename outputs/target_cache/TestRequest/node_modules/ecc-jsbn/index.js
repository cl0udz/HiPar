J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(2765609, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/ecc-jsbn/index.js');
            function unstupid(hex, len) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2764537, arguments.callee, this, arguments);
                            arguments = J$.N(2764545, 'arguments', arguments, true, false, false);
                            hex = J$.N(2764553, 'hex', hex, true, false, false);
                            len = J$.N(2764561, 'len', len, true, false, false);
                            return J$.Rt(2764529, J$.C(133264, J$.B(409466, '>=', J$.G(2764465, J$.R(2764457, 'hex', hex, false, false), 'length'), J$.R(2764473, 'len', len, false, false))) ? J$.R(2764481, 'hex', hex, false, false) : J$.F(2764521, J$.R(2764489, 'unstupid', unstupid, false, true), false)(J$.B(409474, '+', J$.T(2764497, '0', 21, false), J$.R(2764505, 'hex', hex, false, false)), J$.R(2764513, 'len', len, false, false)));
                        } catch (J$e) {
                            J$.Ex(2765665, J$e);
                        } finally {
                            if (J$.Fr(2765673))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2765617, 'crypto', crypto, false, false, false);
            J$.N(2765625, 'BigInteger', BigInteger, false, false, false);
            J$.N(2765633, 'ECPointFp', ECPointFp, false, false, false);
            J$.N(2765641, 'Buffer', Buffer, false, false, false);
            unstupid = J$.N(2765657, 'unstupid', J$.T(2765649, unstupid, 12, false), true, false, false);
            J$.T(2764185, 'use strict', 21, false);
            J$.F(2764209, J$.I(typeof require === 'undefined' ? require = J$.R(2764193, 'require', undefined, true, true) : require = J$.R(2764193, 'require', require, true, true)), false)(J$.T(2764201, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2764233, J$.I(typeof require === 'undefined' ? require = J$.R(2764217, 'require', undefined, true, true) : require = J$.R(2764217, 'require', require, true, true)), false)(J$.T(2764225, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2764257, J$.I(typeof require === 'undefined' ? require = J$.R(2764241, 'require', undefined, true, true) : require = J$.R(2764241, 'require', require, true, true)), false)(J$.T(2764249, 'core-js/modules/es.regexp.to-string', 21, false));
            var crypto = J$.W(2764289, 'crypto', J$.F(2764281, J$.I(typeof require === 'undefined' ? require = J$.R(2764265, 'require', undefined, true, true) : require = J$.R(2764265, 'require', require, true, true)), false)(J$.T(2764273, 'crypto', 21, false)), crypto, false, true);
            var BigInteger = J$.W(2764329, 'BigInteger', J$.G(2764321, J$.F(2764313, J$.I(typeof require === 'undefined' ? require = J$.R(2764297, 'require', undefined, true, true) : require = J$.R(2764297, 'require', require, true, true)), false)(J$.T(2764305, 'jsbn', 21, false)), 'BigInteger'), BigInteger, false, true);
            var ECPointFp = J$.W(2764369, 'ECPointFp', J$.G(2764361, J$.F(2764353, J$.I(typeof require === 'undefined' ? require = J$.R(2764337, 'require', undefined, true, true) : require = J$.R(2764337, 'require', require, true, true)), false)(J$.T(2764345, './lib/ec.js', 21, false)), 'ECPointFp'), ECPointFp, false, true);
            var Buffer = J$.W(2764409, 'Buffer', J$.G(2764401, J$.F(2764393, J$.I(typeof require === 'undefined' ? require = J$.R(2764377, 'require', undefined, true, true) : require = J$.R(2764377, 'require', require, true, true)), false)(J$.T(2764385, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            J$.P(2764449, J$.I(typeof exports === 'undefined' ? exports = J$.R(2764417, 'exports', undefined, true, true) : exports = J$.R(2764417, 'exports', exports, true, true)), 'ECCurves', J$.F(2764441, J$.I(typeof require === 'undefined' ? require = J$.R(2764425, 'require', undefined, true, true) : require = J$.R(2764425, 'require', require, true, true)), false)(J$.T(2764433, './lib/sec.js', 21, false)));
            J$.P(2765601, J$.I(typeof exports === 'undefined' ? exports = J$.R(2764569, 'exports', undefined, true, true) : exports = J$.R(2764569, 'exports', exports, true, true)), 'ECKey', J$.T(2765593, function (curve, key, isPublic) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2765505, arguments.callee, this, arguments);
                            arguments = J$.N(2765513, 'arguments', arguments, true, false, false);
                            curve = J$.N(2765521, 'curve', curve, true, false, false);
                            key = J$.N(2765529, 'key', key, true, false, false);
                            isPublic = J$.N(2765537, 'isPublic', isPublic, true, false, false);
                            J$.N(2765545, 'priv', priv, false, false, false);
                            J$.N(2765553, 'c', c, false, false, false);
                            J$.N(2765561, 'n', n, false, false, false);
                            J$.N(2765569, 'bytes', bytes, false, false, false);
                            J$.N(2765577, 'n1', n1, false, false, false);
                            J$.N(2765585, 'r', r, false, false, false);
                            var priv;
                            var c = J$.W(2764593, 'c', J$.F(2764585, J$.R(2764577, 'curve', curve, false, false), false)(), c, false, false);
                            var n = J$.W(2764617, 'n', J$.M(2764609, J$.R(2764601, 'c', c, false, false), 'getN', false)(), n, false, false);
                            var bytes = J$.W(2764665, 'bytes', J$.M(2764657, J$.I(typeof Math === 'undefined' ? Math = J$.R(2764625, 'Math', undefined, true, true) : Math = J$.R(2764625, 'Math', Math, true, true)), 'floor', false)(J$.B(409482, '/', J$.M(2764641, J$.R(2764633, 'n', n, false, false), 'bitLength', false)(), J$.T(2764649, 8, 22, false))), bytes, false, false);
                            if (J$.C(133288, J$.R(2764673, 'key', key, false, false))) {
                                if (J$.C(133280, J$.R(2764681, 'isPublic', isPublic, false, false))) {
                                    var curve = J$.W(2764705, 'curve', J$.M(2764697, J$.R(2764689, 'c', c, false, false), 'getCurve', false)(), curve, false, false);
                                    J$.P(2764761, J$.R(2764713, 'this', this, false, false), 'P', J$.M(2764753, J$.R(2764721, 'curve', curve, false, false), 'decodePointHex', false)(J$.M(2764745, J$.R(2764729, 'key', key, false, false), 'toString', false)(J$.T(2764737, 'hex', 21, false))));
                                } else {
                                    if (J$.C(133272, J$.B(409490, '!=', J$.G(2764777, J$.R(2764769, 'key', key, false, false), 'length'), J$.R(2764785, 'bytes', bytes, false, false))))
                                        return J$.Rt(2764801, J$.T(2764793, false, 23, false));
                                    priv = J$.W(2764857, 'priv', J$.F(2764849, J$.R(2764809, 'BigInteger', BigInteger, false, true), true)(J$.M(2764833, J$.R(2764817, 'key', key, false, false), 'toString', false)(J$.T(2764825, 'hex', 21, false)), J$.T(2764841, 16, 22, false)), priv, false, false);
                                }
                            } else {
                                var n1 = J$.W(2764897, 'n1', J$.M(2764889, J$.R(2764865, 'n', n, false, false), 'subtract', false)(J$.G(2764881, J$.R(2764873, 'BigInteger', BigInteger, false, true), 'ONE')), n1, false, false);
                                var r = J$.W(2764953, 'r', J$.F(2764945, J$.R(2764905, 'BigInteger', BigInteger, false, true), true)(J$.M(2764937, J$.R(2764913, 'crypto', crypto, false, true), 'randomBytes', false)(J$.M(2764929, J$.R(2764921, 'n', n, false, false), 'bitLength', false)())), r, false, false);
                                priv = J$.W(2765009, 'priv', J$.M(2765001, J$.M(2764977, J$.R(2764961, 'r', r, false, false), 'mod', false)(J$.R(2764969, 'n1', n1, false, false)), 'add', false)(J$.G(2764993, J$.R(2764985, 'BigInteger', BigInteger, false, true), 'ONE')), priv, false, false);
                                J$.P(2765057, J$.R(2765017, 'this', this, false, false), 'P', J$.M(2765049, J$.M(2765033, J$.R(2765025, 'c', c, false, false), 'getG', false)(), 'multiply', false)(J$.R(2765041, 'priv', priv, false, false)));
                            }
                            if (J$.C(133296, J$.G(2765073, J$.R(2765065, 'this', this, false, false), 'P'))) {
                                J$.P(2765153, J$.R(2765081, 'this', this, false, false), 'PublicKey', J$.M(2765145, J$.R(2765089, 'Buffer', Buffer, false, true), 'from', false)(J$.M(2765129, J$.M(2765105, J$.R(2765097, 'c', c, false, false), 'getCurve', false)(), 'encodeCompressedPointHex', false)(J$.G(2765121, J$.R(2765113, 'this', this, false, false), 'P')), J$.T(2765137, 'hex', 21, false)));
                            }
                            if (J$.C(133320, J$.R(2765161, 'priv', priv, false, false))) {
                                J$.P(2765257, J$.R(2765169, 'this', this, false, false), 'PrivateKey', J$.M(2765249, J$.R(2765177, 'Buffer', Buffer, false, true), 'from', false)(J$.F(2765233, J$.R(2765185, 'unstupid', unstupid, false, true), false)(J$.M(2765209, J$.R(2765193, 'priv', priv, false, false), 'toString', false)(J$.T(2765201, 16, 22, false)), J$.B(409498, '*', J$.R(2765217, 'bytes', bytes, false, false), J$.T(2765225, 2, 22, false))), J$.T(2765241, 'hex', 21, false)));
                                J$.P(2765497, J$.R(2765265, 'this', this, false, false), 'deriveSharedSecret', J$.T(2765489, function (key) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(2765457, arguments.callee, this, arguments);
                                                arguments = J$.N(2765465, 'arguments', arguments, true, false, false);
                                                key = J$.N(2765473, 'key', key, true, false, false);
                                                J$.N(2765481, 'S', S, false, false, false);
                                                if (J$.C(133312, J$.C(133304, J$.U(409506, '!', J$.R(2765273, 'key', key, false, false))) ? J$._() : J$.U(409514, '!', J$.G(2765289, J$.R(2765281, 'key', key, false, false), 'P'))))
                                                    return J$.Rt(2765305, J$.T(2765297, false, 23, false));
                                                var S = J$.W(2765345, 'S', J$.M(2765337, J$.G(2765321, J$.R(2765313, 'key', key, false, false), 'P'), 'multiply', false)(J$.R(2765329, 'priv', priv, false, false)), S, false, false);
                                                return J$.Rt(2765449, J$.M(2765441, J$.R(2765353, 'Buffer', Buffer, false, true), 'from', false)(J$.F(2765425, J$.R(2765361, 'unstupid', unstupid, false, true), false)(J$.M(2765401, J$.M(2765385, J$.M(2765377, J$.R(2765369, 'S', S, false, false), 'getX', false)(), 'toBigInteger', false)(), 'toString', false)(J$.T(2765393, 16, 22, false)), J$.B(409522, '*', J$.R(2765409, 'bytes', bytes, false, false), J$.T(2765417, 2, 22, false))), J$.T(2765433, 'hex', 21, false)));
                                            } catch (J$e) {
                                                J$.Ex(2765681, J$e);
                                            } finally {
                                                if (J$.Fr(2765689))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2765697, J$e);
                        } finally {
                            if (J$.Fr(2765705))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2765713, J$e);
        } finally {
            if (J$.Sr(2765721))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

