J$.noInstrEval = false;
jalangiLabel36:
    while (true) {
        try {
            J$.Se(2779441, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/ecc-jsbn/lib/ec.js');
            function ECFieldElementFp(q, x) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2765977, arguments.callee, this, arguments);
                            arguments = J$.N(2765985, 'arguments', arguments, true, false, false);
                            q = J$.N(2765993, 'q', q, true, false, false);
                            x = J$.N(2766001, 'x', x, true, false, false);
                            J$.P(2765945, J$.R(2765929, 'this', this, false, false), 'x', J$.R(2765937, 'x', x, false, false));
                            J$.P(2765969, J$.R(2765953, 'this', this, false, false), 'q', J$.R(2765961, 'q', q, false, false));
                        } catch (J$e) {
                            J$.Ex(2779937, J$e);
                        } finally {
                            if (J$.Fr(2779945))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpEquals(other) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2766129, arguments.callee, this, arguments);
                            arguments = J$.N(2766137, 'arguments', arguments, true, false, false);
                            other = J$.N(2766145, 'other', other, true, false, false);
                            if (J$.C(133328, J$.B(409530, '==', J$.R(2766009, 'other', other, false, false), J$.R(2766017, 'this', this, false, false))))
                                return J$.Rt(2766033, J$.T(2766025, true, 23, false));
                            return J$.Rt(2766121, J$.C(133336, J$.M(2766073, J$.G(2766049, J$.R(2766041, 'this', this, false, false), 'q'), 'equals', false)(J$.G(2766065, J$.R(2766057, 'other', other, false, false), 'q'))) ? J$.M(2766113, J$.G(2766089, J$.R(2766081, 'this', this, false, false), 'x'), 'equals', false)(J$.G(2766105, J$.R(2766097, 'other', other, false, false), 'x')) : J$._());
                        } catch (J$e) {
                            J$.Ex(2779953, J$e);
                        } finally {
                            if (J$.Fr(2779961))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpToBigInteger() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2766177, arguments.callee, this, arguments);
                            arguments = J$.N(2766185, 'arguments', arguments, true, false, false);
                            return J$.Rt(2766169, J$.G(2766161, J$.R(2766153, 'this', this, false, false), 'x'));
                        } catch (J$e) {
                            J$.Ex(2779969, J$e);
                        } finally {
                            if (J$.Fr(2779977))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpNegate() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2766281, arguments.callee, this, arguments);
                            arguments = J$.N(2766289, 'arguments', arguments, true, false, false);
                            return J$.Rt(2766273, J$.F(2766265, J$.R(2766193, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(2766209, J$.R(2766201, 'this', this, false, false), 'q'), J$.M(2766257, J$.M(2766233, J$.G(2766225, J$.R(2766217, 'this', this, false, false), 'x'), 'negate', false)(), 'mod', false)(J$.G(2766249, J$.R(2766241, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(2779985, J$e);
                        } finally {
                            if (J$.Fr(2779993))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpAdd(b) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2766401, arguments.callee, this, arguments);
                            arguments = J$.N(2766409, 'arguments', arguments, true, false, false);
                            b = J$.N(2766417, 'b', b, true, false, false);
                            return J$.Rt(2766393, J$.F(2766385, J$.R(2766297, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(2766313, J$.R(2766305, 'this', this, false, false), 'q'), J$.M(2766377, J$.M(2766353, J$.G(2766329, J$.R(2766321, 'this', this, false, false), 'x'), 'add', false)(J$.M(2766345, J$.R(2766337, 'b', b, false, false), 'toBigInteger', false)()), 'mod', false)(J$.G(2766369, J$.R(2766361, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(2780001, J$e);
                        } finally {
                            if (J$.Fr(2780009))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpSubtract(b) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2766529, arguments.callee, this, arguments);
                            arguments = J$.N(2766537, 'arguments', arguments, true, false, false);
                            b = J$.N(2766545, 'b', b, true, false, false);
                            return J$.Rt(2766521, J$.F(2766513, J$.R(2766425, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(2766441, J$.R(2766433, 'this', this, false, false), 'q'), J$.M(2766505, J$.M(2766481, J$.G(2766457, J$.R(2766449, 'this', this, false, false), 'x'), 'subtract', false)(J$.M(2766473, J$.R(2766465, 'b', b, false, false), 'toBigInteger', false)()), 'mod', false)(J$.G(2766497, J$.R(2766489, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(2780017, J$e);
                        } finally {
                            if (J$.Fr(2780025))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpMultiply(b) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2766657, arguments.callee, this, arguments);
                            arguments = J$.N(2766665, 'arguments', arguments, true, false, false);
                            b = J$.N(2766673, 'b', b, true, false, false);
                            return J$.Rt(2766649, J$.F(2766641, J$.R(2766553, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(2766569, J$.R(2766561, 'this', this, false, false), 'q'), J$.M(2766633, J$.M(2766609, J$.G(2766585, J$.R(2766577, 'this', this, false, false), 'x'), 'multiply', false)(J$.M(2766601, J$.R(2766593, 'b', b, false, false), 'toBigInteger', false)()), 'mod', false)(J$.G(2766625, J$.R(2766617, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(2780033, J$e);
                        } finally {
                            if (J$.Fr(2780041))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpSquare() {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2766769, arguments.callee, this, arguments);
                            arguments = J$.N(2766777, 'arguments', arguments, true, false, false);
                            return J$.Rt(2766761, J$.F(2766753, J$.R(2766681, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(2766697, J$.R(2766689, 'this', this, false, false), 'q'), J$.M(2766745, J$.M(2766721, J$.G(2766713, J$.R(2766705, 'this', this, false, false), 'x'), 'square', false)(), 'mod', false)(J$.G(2766737, J$.R(2766729, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(2780049, J$e);
                        } finally {
                            if (J$.Fr(2780057))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpDivide(b) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2766913, arguments.callee, this, arguments);
                            arguments = J$.N(2766921, 'arguments', arguments, true, false, false);
                            b = J$.N(2766929, 'b', b, true, false, false);
                            return J$.Rt(2766905, J$.F(2766897, J$.R(2766785, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(2766801, J$.R(2766793, 'this', this, false, false), 'q'), J$.M(2766889, J$.M(2766865, J$.G(2766817, J$.R(2766809, 'this', this, false, false), 'x'), 'multiply', false)(J$.M(2766857, J$.M(2766833, J$.R(2766825, 'b', b, false, false), 'toBigInteger', false)(), 'modInverse', false)(J$.G(2766849, J$.R(2766841, 'this', this, false, false), 'q'))), 'mod', false)(J$.G(2766881, J$.R(2766873, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(2780065, J$e);
                        } finally {
                            if (J$.Fr(2780073))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ECPointFp(curve, x, y, z) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(2767361, arguments.callee, this, arguments);
                            arguments = J$.N(2767369, 'arguments', arguments, true, false, false);
                            curve = J$.N(2767377, 'curve', curve, true, false, false);
                            x = J$.N(2767385, 'x', x, true, false, false);
                            y = J$.N(2767393, 'y', y, true, false, false);
                            z = J$.N(2767401, 'z', z, true, false, false);
                            J$.P(2767209, J$.R(2767193, 'this', this, false, false), 'curve', J$.R(2767201, 'curve', curve, false, false));
                            J$.P(2767233, J$.R(2767217, 'this', this, false, false), 'x', J$.R(2767225, 'x', x, false, false));
                            J$.P(2767257, J$.R(2767241, 'this', this, false, false), 'y', J$.R(2767249, 'y', y, false, false));
                            if (J$.C(133344, J$.B(409538, '==', J$.R(2767265, 'z', z, false, false), J$.T(2767273, null, 25, false)))) {
                                J$.P(2767305, J$.R(2767281, 'this', this, false, false), 'z', J$.G(2767297, J$.R(2767289, 'BigInteger', BigInteger, false, true), 'ONE'));
                            } else {
                                J$.P(2767329, J$.R(2767313, 'this', this, false, false), 'z', J$.R(2767321, 'z', z, false, false));
                            }
                            J$.P(2767353, J$.R(2767337, 'this', this, false, false), 'zinv', J$.T(2767345, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(2780081, J$e);
                        } finally {
                            if (J$.Fr(2780089))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpGetX() {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(2767625, arguments.callee, this, arguments);
                            arguments = J$.N(2767633, 'arguments', arguments, true, false, false);
                            J$.N(2767641, 'r', r, false, false, false);
                            if (J$.C(133352, J$.B(409546, '==', J$.G(2767417, J$.R(2767409, 'this', this, false, false), 'zinv'), J$.T(2767425, null, 25, false)))) {
                                J$.P(2767489, J$.R(2767433, 'this', this, false, false), 'zinv', J$.M(2767481, J$.G(2767449, J$.R(2767441, 'this', this, false, false), 'z'), 'modInverse', false)(J$.G(2767473, J$.G(2767465, J$.R(2767457, 'this', this, false, false), 'curve'), 'q')));
                            }
                            var r = J$.W(2767545, 'r', J$.M(2767537, J$.M(2767513, J$.G(2767505, J$.R(2767497, 'this', this, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2767529, J$.R(2767521, 'this', this, false, false), 'zinv')), r, false, false);
                            J$.M(2767577, J$.G(2767561, J$.R(2767553, 'this', this, false, false), 'curve'), 'reduce', false)(J$.R(2767569, 'r', r, false, false));
                            return J$.Rt(2767617, J$.M(2767609, J$.G(2767593, J$.R(2767585, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(2767601, 'r', r, false, false)));
                        } catch (J$e) {
                            J$.Ex(2780097, J$e);
                        } finally {
                            if (J$.Fr(2780105))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpGetY() {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(2767865, arguments.callee, this, arguments);
                            arguments = J$.N(2767873, 'arguments', arguments, true, false, false);
                            J$.N(2767881, 'r', r, false, false, false);
                            if (J$.C(133360, J$.B(409554, '==', J$.G(2767657, J$.R(2767649, 'this', this, false, false), 'zinv'), J$.T(2767665, null, 25, false)))) {
                                J$.P(2767729, J$.R(2767673, 'this', this, false, false), 'zinv', J$.M(2767721, J$.G(2767689, J$.R(2767681, 'this', this, false, false), 'z'), 'modInverse', false)(J$.G(2767713, J$.G(2767705, J$.R(2767697, 'this', this, false, false), 'curve'), 'q')));
                            }
                            var r = J$.W(2767785, 'r', J$.M(2767777, J$.M(2767753, J$.G(2767745, J$.R(2767737, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2767769, J$.R(2767761, 'this', this, false, false), 'zinv')), r, false, false);
                            J$.M(2767817, J$.G(2767801, J$.R(2767793, 'this', this, false, false), 'curve'), 'reduce', false)(J$.R(2767809, 'r', r, false, false));
                            return J$.Rt(2767857, J$.M(2767849, J$.G(2767833, J$.R(2767825, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(2767841, 'r', r, false, false)));
                        } catch (J$e) {
                            J$.Ex(2780113, J$e);
                        } finally {
                            if (J$.Fr(2780121))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpEquals(other) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(2768377, arguments.callee, this, arguments);
                            arguments = J$.N(2768385, 'arguments', arguments, true, false, false);
                            other = J$.N(2768393, 'other', other, true, false, false);
                            J$.N(2768401, 'u', u, false, false, false);
                            J$.N(2768409, 'v', v, false, false, false);
                            if (J$.C(133368, J$.B(409562, '==', J$.R(2767889, 'other', other, false, false), J$.R(2767897, 'this', this, false, false))))
                                return J$.Rt(2767913, J$.T(2767905, true, 23, false));
                            if (J$.C(133376, J$.M(2767929, J$.R(2767921, 'this', this, false, false), 'isInfinity', false)()))
                                return J$.Rt(2767953, J$.M(2767945, J$.R(2767937, 'other', other, false, false), 'isInfinity', false)());
                            if (J$.C(133384, J$.M(2767969, J$.R(2767961, 'other', other, false, false), 'isInfinity', false)()))
                                return J$.Rt(2767993, J$.M(2767985, J$.R(2767977, 'this', this, false, false), 'isInfinity', false)());
                            var u, v;
                            u = J$.W(2768137, 'u', J$.M(2768129, J$.M(2768097, J$.M(2768041, J$.M(2768017, J$.G(2768009, J$.R(2768001, 'other', other, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2768033, J$.R(2768025, 'this', this, false, false), 'z')), 'subtract', false)(J$.M(2768089, J$.M(2768065, J$.G(2768057, J$.R(2768049, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2768081, J$.R(2768073, 'other', other, false, false), 'z'))), 'mod', false)(J$.G(2768121, J$.G(2768113, J$.R(2768105, 'this', this, false, false), 'curve'), 'q')), u, false, false);
                            if (J$.C(133392, J$.U(409570, '!', J$.M(2768169, J$.R(2768145, 'u', u, false, false), 'equals', false)(J$.G(2768161, J$.R(2768153, 'BigInteger', BigInteger, false, true), 'ZERO')))))
                                return J$.Rt(2768185, J$.T(2768177, false, 23, false));
                            v = J$.W(2768329, 'v', J$.M(2768321, J$.M(2768289, J$.M(2768233, J$.M(2768209, J$.G(2768201, J$.R(2768193, 'other', other, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2768225, J$.R(2768217, 'this', this, false, false), 'z')), 'subtract', false)(J$.M(2768281, J$.M(2768257, J$.G(2768249, J$.R(2768241, 'this', this, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2768273, J$.R(2768265, 'other', other, false, false), 'z'))), 'mod', false)(J$.G(2768313, J$.G(2768305, J$.R(2768297, 'this', this, false, false), 'curve'), 'q')), v, false, false);
                            return J$.Rt(2768369, J$.M(2768361, J$.R(2768337, 'v', v, false, false), 'equals', false)(J$.G(2768353, J$.R(2768345, 'BigInteger', BigInteger, false, true), 'ZERO')));
                        } catch (J$e) {
                            J$.Ex(2780129, J$e);
                        } finally {
                            if (J$.Fr(2780137))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpIsInfinity() {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(2768577, arguments.callee, this, arguments);
                            arguments = J$.N(2768585, 'arguments', arguments, true, false, false);
                            if (J$.C(133408, J$.C(133400, J$.B(409578, '==', J$.G(2768425, J$.R(2768417, 'this', this, false, false), 'x'), J$.T(2768433, null, 25, false))) ? J$.B(409586, '==', J$.G(2768449, J$.R(2768441, 'this', this, false, false), 'y'), J$.T(2768457, null, 25, false)) : J$._()))
                                return J$.Rt(2768473, J$.T(2768465, true, 23, false));
                            return J$.Rt(2768569, J$.C(133416, J$.M(2768513, J$.G(2768489, J$.R(2768481, 'this', this, false, false), 'z'), 'equals', false)(J$.G(2768505, J$.R(2768497, 'BigInteger', BigInteger, false, true), 'ZERO'))) ? J$.U(409594, '!', J$.M(2768561, J$.M(2768537, J$.G(2768529, J$.R(2768521, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'equals', false)(J$.G(2768553, J$.R(2768545, 'BigInteger', BigInteger, false, true), 'ZERO'))) : J$._());
                        } catch (J$e) {
                            J$.Ex(2780145, J$e);
                        } finally {
                            if (J$.Fr(2780153))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpNegate() {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(2768689, arguments.callee, this, arguments);
                            arguments = J$.N(2768697, 'arguments', arguments, true, false, false);
                            return J$.Rt(2768681, J$.F(2768673, J$.R(2768593, 'ECPointFp', ECPointFp, false, true), true)(J$.G(2768609, J$.R(2768601, 'this', this, false, false), 'curve'), J$.G(2768625, J$.R(2768617, 'this', this, false, false), 'x'), J$.M(2768649, J$.G(2768641, J$.R(2768633, 'this', this, false, false), 'y'), 'negate', false)(), J$.G(2768665, J$.R(2768657, 'this', this, false, false), 'z')));
                        } catch (J$e) {
                            J$.Ex(2780161, J$e);
                        } finally {
                            if (J$.Fr(2780169))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpAdd(b) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(2770017, arguments.callee, this, arguments);
                            arguments = J$.N(2770025, 'arguments', arguments, true, false, false);
                            b = J$.N(2770033, 'b', b, true, false, false);
                            J$.N(2770041, 'u', u, false, false, false);
                            J$.N(2770049, 'v', v, false, false, false);
                            J$.N(2770057, 'THREE', THREE, false, false, false);
                            J$.N(2770065, 'x1', x1, false, false, false);
                            J$.N(2770073, 'y1', y1, false, false, false);
                            J$.N(2770081, 'x2', x2, false, false, false);
                            J$.N(2770089, 'y2', y2, false, false, false);
                            J$.N(2770097, 'v2', v2, false, false, false);
                            J$.N(2770105, 'v3', v3, false, false, false);
                            J$.N(2770113, 'x1v2', x1v2, false, false, false);
                            J$.N(2770121, 'zu2', zu2, false, false, false);
                            J$.N(2770129, 'x3', x3, false, false, false);
                            J$.N(2770137, 'y3', y3, false, false, false);
                            J$.N(2770145, 'z3', z3, false, false, false);
                            if (J$.C(133424, J$.M(2768713, J$.R(2768705, 'this', this, false, false), 'isInfinity', false)()))
                                return J$.Rt(2768729, J$.R(2768721, 'b', b, false, false));
                            if (J$.C(133432, J$.M(2768745, J$.R(2768737, 'b', b, false, false), 'isInfinity', false)()))
                                return J$.Rt(2768761, J$.R(2768753, 'this', this, false, false));
                            var u = J$.W(2768905, 'u', J$.M(2768897, J$.M(2768865, J$.M(2768809, J$.M(2768785, J$.G(2768777, J$.R(2768769, 'b', b, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2768801, J$.R(2768793, 'this', this, false, false), 'z')), 'subtract', false)(J$.M(2768857, J$.M(2768833, J$.G(2768825, J$.R(2768817, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2768849, J$.R(2768841, 'b', b, false, false), 'z'))), 'mod', false)(J$.G(2768889, J$.G(2768881, J$.R(2768873, 'this', this, false, false), 'curve'), 'q')), u, false, false);
                            var v = J$.W(2769049, 'v', J$.M(2769041, J$.M(2769009, J$.M(2768953, J$.M(2768929, J$.G(2768921, J$.R(2768913, 'b', b, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2768945, J$.R(2768937, 'this', this, false, false), 'z')), 'subtract', false)(J$.M(2769001, J$.M(2768977, J$.G(2768969, J$.R(2768961, 'this', this, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(2768993, J$.R(2768985, 'b', b, false, false), 'z'))), 'mod', false)(J$.G(2769033, J$.G(2769025, J$.R(2769017, 'this', this, false, false), 'curve'), 'q')), v, false, false);
                            if (J$.C(133448, J$.M(2769081, J$.G(2769065, J$.R(2769057, 'BigInteger', BigInteger, false, true), 'ZERO'), 'equals', false)(J$.R(2769073, 'v', v, false, false)))) {
                                if (J$.C(133440, J$.M(2769113, J$.G(2769097, J$.R(2769089, 'BigInteger', BigInteger, false, true), 'ZERO'), 'equals', false)(J$.R(2769105, 'u', u, false, false)))) {
                                    return J$.Rt(2769137, J$.M(2769129, J$.R(2769121, 'this', this, false, false), 'twice', false)());
                                }
                                return J$.Rt(2769169, J$.M(2769161, J$.G(2769153, J$.R(2769145, 'this', this, false, false), 'curve'), 'getInfinity', false)());
                            }
                            var THREE = J$.W(2769201, 'THREE', J$.F(2769193, J$.R(2769177, 'BigInteger', BigInteger, false, true), true)(J$.T(2769185, '3', 21, false)), THREE, false, false);
                            var x1 = J$.W(2769233, 'x1', J$.M(2769225, J$.G(2769217, J$.R(2769209, 'this', this, false, false), 'x'), 'toBigInteger', false)(), x1, false, false);
                            var y1 = J$.W(2769265, 'y1', J$.M(2769257, J$.G(2769249, J$.R(2769241, 'this', this, false, false), 'y'), 'toBigInteger', false)(), y1, false, false);
                            var x2 = J$.W(2769297, 'x2', J$.M(2769289, J$.G(2769281, J$.R(2769273, 'b', b, false, false), 'x'), 'toBigInteger', false)(), x2, false, false);
                            var y2 = J$.W(2769329, 'y2', J$.M(2769321, J$.G(2769313, J$.R(2769305, 'b', b, false, false), 'y'), 'toBigInteger', false)(), y2, false, false);
                            var v2 = J$.W(2769353, 'v2', J$.M(2769345, J$.R(2769337, 'v', v, false, false), 'square', false)(), v2, false, false);
                            var v3 = J$.W(2769385, 'v3', J$.M(2769377, J$.R(2769361, 'v2', v2, false, false), 'multiply', false)(J$.R(2769369, 'v', v, false, false)), v3, false, false);
                            var x1v2 = J$.W(2769417, 'x1v2', J$.M(2769409, J$.R(2769393, 'x1', x1, false, false), 'multiply', false)(J$.R(2769401, 'v2', v2, false, false)), x1v2, false, false);
                            var zu2 = J$.W(2769465, 'zu2', J$.M(2769457, J$.M(2769433, J$.R(2769425, 'u', u, false, false), 'square', false)(), 'multiply', false)(J$.G(2769449, J$.R(2769441, 'this', this, false, false), 'z')), zu2, false, false);
                            var x3 = J$.W(2769601, 'x3', J$.M(2769593, J$.M(2769561, J$.M(2769545, J$.M(2769529, J$.M(2769505, J$.R(2769473, 'zu2', zu2, false, false), 'subtract', false)(J$.M(2769497, J$.R(2769481, 'x1v2', x1v2, false, false), 'shiftLeft', false)(J$.T(2769489, 1, 22, false))), 'multiply', false)(J$.G(2769521, J$.R(2769513, 'b', b, false, false), 'z')), 'subtract', false)(J$.R(2769537, 'v3', v3, false, false)), 'multiply', false)(J$.R(2769553, 'v', v, false, false)), 'mod', false)(J$.G(2769585, J$.G(2769577, J$.R(2769569, 'this', this, false, false), 'curve'), 'q')), x3, false, false);
                            var y3 = J$.W(2769801, 'y3', J$.M(2769793, J$.M(2769761, J$.M(2769729, J$.M(2769705, J$.M(2769673, J$.M(2769641, J$.M(2769625, J$.R(2769609, 'x1v2', x1v2, false, false), 'multiply', false)(J$.R(2769617, 'THREE', THREE, false, false)), 'multiply', false)(J$.R(2769633, 'u', u, false, false)), 'subtract', false)(J$.M(2769665, J$.R(2769649, 'y1', y1, false, false), 'multiply', false)(J$.R(2769657, 'v3', v3, false, false))), 'subtract', false)(J$.M(2769697, J$.R(2769681, 'zu2', zu2, false, false), 'multiply', false)(J$.R(2769689, 'u', u, false, false))), 'multiply', false)(J$.G(2769721, J$.R(2769713, 'b', b, false, false), 'z')), 'add', false)(J$.M(2769753, J$.R(2769737, 'u', u, false, false), 'multiply', false)(J$.R(2769745, 'v3', v3, false, false))), 'mod', false)(J$.G(2769785, J$.G(2769777, J$.R(2769769, 'this', this, false, false), 'curve'), 'q')), y3, false, false);
                            var z3 = J$.W(2769897, 'z3', J$.M(2769889, J$.M(2769857, J$.M(2769833, J$.R(2769809, 'v3', v3, false, false), 'multiply', false)(J$.G(2769825, J$.R(2769817, 'this', this, false, false), 'z')), 'multiply', false)(J$.G(2769849, J$.R(2769841, 'b', b, false, false), 'z')), 'mod', false)(J$.G(2769881, J$.G(2769873, J$.R(2769865, 'this', this, false, false), 'curve'), 'q')), z3, false, false);
                            return J$.Rt(2770009, J$.F(2770001, J$.R(2769905, 'ECPointFp', ECPointFp, false, true), true)(J$.G(2769921, J$.R(2769913, 'this', this, false, false), 'curve'), J$.M(2769953, J$.G(2769937, J$.R(2769929, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(2769945, 'x3', x3, false, false)), J$.M(2769985, J$.G(2769969, J$.R(2769961, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(2769977, 'y3', y3, false, false)), J$.R(2769993, 'z3', z3, false, false)));
                        } catch (J$e) {
                            J$.Ex(2780177, J$e);
                        } finally {
                            if (J$.Fr(2780185))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpTwice() {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(2771201, arguments.callee, this, arguments);
                            arguments = J$.N(2771209, 'arguments', arguments, true, false, false);
                            J$.N(2771217, 'THREE', THREE, false, false, false);
                            J$.N(2771225, 'x1', x1, false, false, false);
                            J$.N(2771233, 'y1', y1, false, false, false);
                            J$.N(2771241, 'y1z1', y1z1, false, false, false);
                            J$.N(2771249, 'y1sqz1', y1sqz1, false, false, false);
                            J$.N(2771257, 'a', a, false, false, false);
                            J$.N(2771265, 'w', w, false, false, false);
                            J$.N(2771273, 'x3', x3, false, false, false);
                            J$.N(2771281, 'y3', y3, false, false, false);
                            J$.N(2771289, 'z3', z3, false, false, false);
                            if (J$.C(133456, J$.M(2770161, J$.R(2770153, 'this', this, false, false), 'isInfinity', false)()))
                                return J$.Rt(2770177, J$.R(2770169, 'this', this, false, false));
                            if (J$.C(133464, J$.B(409602, '==', J$.M(2770209, J$.M(2770201, J$.G(2770193, J$.R(2770185, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'signum', false)(), J$.T(2770217, 0, 22, false))))
                                return J$.Rt(2770249, J$.M(2770241, J$.G(2770233, J$.R(2770225, 'this', this, false, false), 'curve'), 'getInfinity', false)());
                            var THREE = J$.W(2770281, 'THREE', J$.F(2770273, J$.R(2770257, 'BigInteger', BigInteger, false, true), true)(J$.T(2770265, '3', 21, false)), THREE, false, false);
                            var x1 = J$.W(2770313, 'x1', J$.M(2770305, J$.G(2770297, J$.R(2770289, 'this', this, false, false), 'x'), 'toBigInteger', false)(), x1, false, false);
                            var y1 = J$.W(2770345, 'y1', J$.M(2770337, J$.G(2770329, J$.R(2770321, 'this', this, false, false), 'y'), 'toBigInteger', false)(), y1, false, false);
                            var y1z1 = J$.W(2770385, 'y1z1', J$.M(2770377, J$.R(2770353, 'y1', y1, false, false), 'multiply', false)(J$.G(2770369, J$.R(2770361, 'this', this, false, false), 'z')), y1z1, false, false);
                            var y1sqz1 = J$.W(2770449, 'y1sqz1', J$.M(2770441, J$.M(2770409, J$.R(2770393, 'y1z1', y1z1, false, false), 'multiply', false)(J$.R(2770401, 'y1', y1, false, false)), 'mod', false)(J$.G(2770433, J$.G(2770425, J$.R(2770417, 'this', this, false, false), 'curve'), 'q')), y1sqz1, false, false);
                            var a = J$.W(2770489, 'a', J$.M(2770481, J$.G(2770473, J$.G(2770465, J$.R(2770457, 'this', this, false, false), 'curve'), 'a'), 'toBigInteger', false)(), a, false, false);
                            var w = J$.W(2770529, 'w', J$.M(2770521, J$.M(2770505, J$.R(2770497, 'x1', x1, false, false), 'square', false)(), 'multiply', false)(J$.R(2770513, 'THREE', THREE, false, false)), w, false, false);
                            if (J$.C(133472, J$.U(409610, '!', J$.M(2770561, J$.G(2770545, J$.R(2770537, 'BigInteger', BigInteger, false, true), 'ZERO'), 'equals', false)(J$.R(2770553, 'a', a, false, false))))) {
                                w = J$.W(2770625, 'w', J$.M(2770617, J$.R(2770569, 'w', w, false, false), 'add', false)(J$.M(2770609, J$.M(2770593, J$.G(2770585, J$.R(2770577, 'this', this, false, false), 'z'), 'square', false)(), 'multiply', false)(J$.R(2770601, 'a', a, false, false))), w, false, false);
                            }
                            w = J$.W(2770673, 'w', J$.M(2770665, J$.R(2770633, 'w', w, false, false), 'mod', false)(J$.G(2770657, J$.G(2770649, J$.R(2770641, 'this', this, false, false), 'curve'), 'q')), w, false, false);
                            var x3 = J$.W(2770809, 'x3', J$.M(2770801, J$.M(2770769, J$.M(2770753, J$.M(2770737, J$.M(2770689, J$.R(2770681, 'w', w, false, false), 'square', false)(), 'subtract', false)(J$.M(2770729, J$.M(2770713, J$.R(2770697, 'x1', x1, false, false), 'shiftLeft', false)(J$.T(2770705, 3, 22, false)), 'multiply', false)(J$.R(2770721, 'y1sqz1', y1sqz1, false, false))), 'shiftLeft', false)(J$.T(2770745, 1, 22, false)), 'multiply', false)(J$.R(2770761, 'y1z1', y1z1, false, false)), 'mod', false)(J$.G(2770793, J$.G(2770785, J$.R(2770777, 'this', this, false, false), 'curve'), 'q')), x3, false, false);
                            var y3 = J$.W(2770993, 'y3', J$.M(2770985, J$.M(2770953, J$.M(2770913, J$.M(2770897, J$.M(2770881, J$.M(2770849, J$.M(2770833, J$.R(2770817, 'w', w, false, false), 'multiply', false)(J$.R(2770825, 'THREE', THREE, false, false)), 'multiply', false)(J$.R(2770841, 'x1', x1, false, false)), 'subtract', false)(J$.M(2770873, J$.R(2770857, 'y1sqz1', y1sqz1, false, false), 'shiftLeft', false)(J$.T(2770865, 1, 22, false))), 'shiftLeft', false)(J$.T(2770889, 2, 22, false)), 'multiply', false)(J$.R(2770905, 'y1sqz1', y1sqz1, false, false)), 'subtract', false)(J$.M(2770945, J$.M(2770929, J$.R(2770921, 'w', w, false, false), 'square', false)(), 'multiply', false)(J$.R(2770937, 'w', w, false, false))), 'mod', false)(J$.G(2770977, J$.G(2770969, J$.R(2770961, 'this', this, false, false), 'curve'), 'q')), y3, false, false);
                            var z3 = J$.W(2771081, 'z3', J$.M(2771073, J$.M(2771041, J$.M(2771025, J$.M(2771009, J$.R(2771001, 'y1z1', y1z1, false, false), 'square', false)(), 'multiply', false)(J$.R(2771017, 'y1z1', y1z1, false, false)), 'shiftLeft', false)(J$.T(2771033, 3, 22, false)), 'mod', false)(J$.G(2771065, J$.G(2771057, J$.R(2771049, 'this', this, false, false), 'curve'), 'q')), z3, false, false);
                            return J$.Rt(2771193, J$.F(2771185, J$.R(2771089, 'ECPointFp', ECPointFp, false, true), true)(J$.G(2771105, J$.R(2771097, 'this', this, false, false), 'curve'), J$.M(2771137, J$.G(2771121, J$.R(2771113, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(2771129, 'x3', x3, false, false)), J$.M(2771169, J$.G(2771153, J$.R(2771145, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(2771161, 'y3', y3, false, false)), J$.R(2771177, 'z3', z3, false, false)));
                        } catch (J$e) {
                            J$.Ex(2780193, J$e);
                        } finally {
                            if (J$.Fr(2780201))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpMultiply(k) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(2771721, arguments.callee, this, arguments);
                            arguments = J$.N(2771729, 'arguments', arguments, true, false, false);
                            k = J$.N(2771737, 'k', k, true, false, false);
                            J$.N(2771745, 'e', e, false, false, false);
                            J$.N(2771753, 'h', h, false, false, false);
                            J$.N(2771761, 'neg', neg, false, false, false);
                            J$.N(2771769, 'R', R, false, false, false);
                            J$.N(2771777, 'i', i, false, false, false);
                            J$.N(2771785, 'hBit', hBit, false, false, false);
                            J$.N(2771793, 'eBit', eBit, false, false, false);
                            if (J$.C(133480, J$.M(2771305, J$.R(2771297, 'this', this, false, false), 'isInfinity', false)()))
                                return J$.Rt(2771321, J$.R(2771313, 'this', this, false, false));
                            if (J$.C(133488, J$.B(409618, '==', J$.M(2771337, J$.R(2771329, 'k', k, false, false), 'signum', false)(), J$.T(2771345, 0, 22, false))))
                                return J$.Rt(2771377, J$.M(2771369, J$.G(2771361, J$.R(2771353, 'this', this, false, false), 'curve'), 'getInfinity', false)());
                            var e = J$.W(2771393, 'e', J$.R(2771385, 'k', k, false, false), e, false, false);
                            var h = J$.W(2771441, 'h', J$.M(2771433, J$.R(2771401, 'e', e, false, false), 'multiply', false)(J$.F(2771425, J$.R(2771409, 'BigInteger', BigInteger, false, true), true)(J$.T(2771417, '3', 21, false))), h, false, false);
                            var neg = J$.W(2771465, 'neg', J$.M(2771457, J$.R(2771449, 'this', this, false, false), 'negate', false)(), neg, false, false);
                            var R = J$.W(2771481, 'R', J$.R(2771473, 'this', this, false, false), R, false, false);
                            var i;
                            for (i = J$.W(2771513, 'i', J$.B(409626, '-', J$.M(2771497, J$.R(2771489, 'h', h, false, false), 'bitLength', false)(), J$.T(2771505, 2, 22, false)), i, false, false); J$.C(133512, J$.B(409634, '>', J$.R(2771521, 'i', i, false, false), J$.T(2771529, 0, 22, false))); i = J$.W(2771545, 'i', J$.B(409650, '-', J$.U(409642, '+', J$.R(2771537, 'i', i, false, false)), 1), i, false, false)) {
                                R = J$.W(2771569, 'R', J$.M(2771561, J$.R(2771553, 'R', R, false, false), 'twice', false)(), R, false, false);
                                var hBit = J$.W(2771601, 'hBit', J$.M(2771593, J$.R(2771577, 'h', h, false, false), 'testBit', false)(J$.R(2771585, 'i', i, false, false)), hBit, false, false);
                                var eBit = J$.W(2771633, 'eBit', J$.M(2771625, J$.R(2771609, 'e', e, false, false), 'testBit', false)(J$.R(2771617, 'i', i, false, false)), eBit, false, false);
                                if (J$.C(133504, J$.B(409658, '!=', J$.R(2771641, 'hBit', hBit, false, false), J$.R(2771649, 'eBit', eBit, false, false)))) {
                                    R = J$.W(2771697, 'R', J$.M(2771689, J$.R(2771657, 'R', R, false, false), 'add', false)(J$.C(133496, J$.R(2771665, 'hBit', hBit, false, false)) ? J$.R(2771673, 'this', this, false, false) : J$.R(2771681, 'neg', neg, false, false)), R, false, false);
                                }
                            }
                            return J$.Rt(2771713, J$.R(2771705, 'R', R, false, false));
                        } catch (J$e) {
                            J$.Ex(2780209, J$e);
                        } finally {
                            if (J$.Fr(2780217))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpMultiplyTwo(j, x, k) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(2772201, arguments.callee, this, arguments);
                            arguments = J$.N(2772209, 'arguments', arguments, true, false, false);
                            j = J$.N(2772217, 'j', j, true, false, false);
                            x = J$.N(2772225, 'x', x, true, false, false);
                            k = J$.N(2772233, 'k', k, true, false, false);
                            J$.N(2772241, 'i', i, false, false, false);
                            J$.N(2772249, 'R', R, false, false, false);
                            J$.N(2772257, 'both', both, false, false, false);
                            var i;
                            if (J$.C(133520, J$.B(409666, '>', J$.M(2771809, J$.R(2771801, 'j', j, false, false), 'bitLength', false)(), J$.M(2771825, J$.R(2771817, 'k', k, false, false), 'bitLength', false)())))
                                i = J$.W(2771857, 'i', J$.B(409674, '-', J$.M(2771841, J$.R(2771833, 'j', j, false, false), 'bitLength', false)(), J$.T(2771849, 1, 22, false)), i, false, false);
                            else
                                i = J$.W(2771889, 'i', J$.B(409682, '-', J$.M(2771873, J$.R(2771865, 'k', k, false, false), 'bitLength', false)(), J$.T(2771881, 1, 22, false)), i, false, false);
                            var R = J$.W(2771921, 'R', J$.M(2771913, J$.G(2771905, J$.R(2771897, 'this', this, false, false), 'curve'), 'getInfinity', false)(), R, false, false);
                            var both = J$.W(2771953, 'both', J$.M(2771945, J$.R(2771929, 'this', this, false, false), 'add', false)(J$.R(2771937, 'x', x, false, false)), both, false, false);
                            while (J$.C(133552, J$.B(409690, '>=', J$.R(2771961, 'i', i, false, false), J$.T(2771969, 0, 22, false)))) {
                                R = J$.W(2771993, 'R', J$.M(2771985, J$.R(2771977, 'R', R, false, false), 'twice', false)(), R, false, false);
                                if (J$.C(133544, J$.M(2772017, J$.R(2772001, 'j', j, false, false), 'testBit', false)(J$.R(2772009, 'i', i, false, false)))) {
                                    if (J$.C(133528, J$.M(2772041, J$.R(2772025, 'k', k, false, false), 'testBit', false)(J$.R(2772033, 'i', i, false, false)))) {
                                        R = J$.W(2772073, 'R', J$.M(2772065, J$.R(2772049, 'R', R, false, false), 'add', false)(J$.R(2772057, 'both', both, false, false)), R, false, false);
                                    } else {
                                        R = J$.W(2772105, 'R', J$.M(2772097, J$.R(2772081, 'R', R, false, false), 'add', false)(J$.R(2772089, 'this', this, false, false)), R, false, false);
                                    }
                                } else {
                                    if (J$.C(133536, J$.M(2772129, J$.R(2772113, 'k', k, false, false), 'testBit', false)(J$.R(2772121, 'i', i, false, false)))) {
                                        R = J$.W(2772161, 'R', J$.M(2772153, J$.R(2772137, 'R', R, false, false), 'add', false)(J$.R(2772145, 'x', x, false, false)), R, false, false);
                                    }
                                }
                                i = J$.W(2772177, 'i', J$.B(409706, '-', J$.U(409698, '+', J$.R(2772169, 'i', i, false, false)), 1), i, false, false);
                            }
                            return J$.Rt(2772193, J$.R(2772185, 'R', R, false, false));
                        } catch (J$e) {
                            J$.Ex(2780225, J$e);
                        } finally {
                            if (J$.Fr(2780233))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ECCurveFp(q, a, b) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(2772761, arguments.callee, this, arguments);
                            arguments = J$.N(2772769, 'arguments', arguments, true, false, false);
                            q = J$.N(2772777, 'q', q, true, false, false);
                            a = J$.N(2772785, 'a', a, true, false, false);
                            b = J$.N(2772793, 'b', b, true, false, false);
                            J$.P(2772569, J$.R(2772553, 'this', this, false, false), 'q', J$.R(2772561, 'q', q, false, false));
                            J$.P(2772609, J$.R(2772577, 'this', this, false, false), 'a', J$.M(2772601, J$.R(2772585, 'this', this, false, false), 'fromBigInteger', false)(J$.R(2772593, 'a', a, false, false)));
                            J$.P(2772649, J$.R(2772617, 'this', this, false, false), 'b', J$.M(2772641, J$.R(2772625, 'this', this, false, false), 'fromBigInteger', false)(J$.R(2772633, 'b', b, false, false)));
                            J$.P(2772705, J$.R(2772657, 'this', this, false, false), 'infinity', J$.F(2772697, J$.R(2772665, 'ECPointFp', ECPointFp, false, true), true)(J$.R(2772673, 'this', this, false, false), J$.T(2772681, null, 25, false), J$.T(2772689, null, 25, false)));
                            J$.P(2772753, J$.R(2772713, 'this', this, false, false), 'reducer', J$.F(2772745, J$.R(2772721, 'Barrett', Barrett, false, true), true)(J$.G(2772737, J$.R(2772729, 'this', this, false, false), 'q')));
                        } catch (J$e) {
                            J$.Ex(2780241, J$e);
                        } finally {
                            if (J$.Fr(2780249))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpGetQ() {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(2772825, arguments.callee, this, arguments);
                            arguments = J$.N(2772833, 'arguments', arguments, true, false, false);
                            return J$.Rt(2772817, J$.G(2772809, J$.R(2772801, 'this', this, false, false), 'q'));
                        } catch (J$e) {
                            J$.Ex(2780257, J$e);
                        } finally {
                            if (J$.Fr(2780265))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpGetA() {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(2772865, arguments.callee, this, arguments);
                            arguments = J$.N(2772873, 'arguments', arguments, true, false, false);
                            return J$.Rt(2772857, J$.G(2772849, J$.R(2772841, 'this', this, false, false), 'a'));
                        } catch (J$e) {
                            J$.Ex(2780273, J$e);
                        } finally {
                            if (J$.Fr(2780281))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpGetB() {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(2772905, arguments.callee, this, arguments);
                            arguments = J$.N(2772913, 'arguments', arguments, true, false, false);
                            return J$.Rt(2772897, J$.G(2772889, J$.R(2772881, 'this', this, false, false), 'b'));
                        } catch (J$e) {
                            J$.Ex(2780289, J$e);
                        } finally {
                            if (J$.Fr(2780297))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpEquals(other) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(2773081, arguments.callee, this, arguments);
                            arguments = J$.N(2773089, 'arguments', arguments, true, false, false);
                            other = J$.N(2773097, 'other', other, true, false, false);
                            if (J$.C(133560, J$.B(409714, '==', J$.R(2772921, 'other', other, false, false), J$.R(2772929, 'this', this, false, false))))
                                return J$.Rt(2772945, J$.T(2772937, true, 23, false));
                            return J$.Rt(2773073, J$.C(133576, J$.C(133568, J$.M(2772985, J$.G(2772961, J$.R(2772953, 'this', this, false, false), 'q'), 'equals', false)(J$.G(2772977, J$.R(2772969, 'other', other, false, false), 'q'))) ? J$.M(2773025, J$.G(2773001, J$.R(2772993, 'this', this, false, false), 'a'), 'equals', false)(J$.G(2773017, J$.R(2773009, 'other', other, false, false), 'a')) : J$._()) ? J$.M(2773065, J$.G(2773041, J$.R(2773033, 'this', this, false, false), 'b'), 'equals', false)(J$.G(2773057, J$.R(2773049, 'other', other, false, false), 'b')) : J$._());
                        } catch (J$e) {
                            J$.Ex(2780305, J$e);
                        } finally {
                            if (J$.Fr(2780313))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpGetInfinity() {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(2773129, arguments.callee, this, arguments);
                            arguments = J$.N(2773137, 'arguments', arguments, true, false, false);
                            return J$.Rt(2773121, J$.G(2773113, J$.R(2773105, 'this', this, false, false), 'infinity'));
                        } catch (J$e) {
                            J$.Ex(2780321, J$e);
                        } finally {
                            if (J$.Fr(2780329))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpFromBigInteger(x) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(2773193, arguments.callee, this, arguments);
                            arguments = J$.N(2773201, 'arguments', arguments, true, false, false);
                            x = J$.N(2773209, 'x', x, true, false, false);
                            return J$.Rt(2773185, J$.F(2773177, J$.R(2773145, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(2773161, J$.R(2773153, 'this', this, false, false), 'q'), J$.R(2773169, 'x', x, false, false)));
                        } catch (J$e) {
                            J$.Ex(2780337, J$e);
                        } finally {
                            if (J$.Fr(2780345))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveReduce(x) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(2773249, arguments.callee, this, arguments);
                            arguments = J$.N(2773257, 'arguments', arguments, true, false, false);
                            x = J$.N(2773265, 'x', x, true, false, false);
                            J$.M(2773241, J$.G(2773225, J$.R(2773217, 'this', this, false, false), 'reducer'), 'reduce', false)(J$.R(2773233, 'x', x, false, false));
                        } catch (J$e) {
                            J$.Ex(2780353, J$e);
                        } finally {
                            if (J$.Fr(2780361))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpDecodePointHex(s) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(2773689, arguments.callee, this, arguments);
                            arguments = J$.N(2773697, 'arguments', arguments, true, false, false);
                            s = J$.N(2773705, 's', s, true, false, false);
                            J$.N(2773713, 'len', len, false, false, false);
                            J$.N(2773721, 'xHex', xHex, false, false, false);
                            J$.N(2773729, 'yHex', yHex, false, false, false);
                            switch (J$.C1(133584, J$.F(2773321, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(2773273, 'parseInt', undefined, true, true) : parseInt = J$.R(2773273, 'parseInt', parseInt, true, true)), false)(J$.M(2773305, J$.R(2773281, 's', s, false, false), 'substr', false)(J$.T(2773289, 0, 22, false), J$.T(2773297, 2, 22, false)), J$.T(2773313, 16, 22, false)))) {
                            case J$.C2(133592, J$.T(2773353, 0, 22, false)):
                                return J$.Rt(2773345, J$.G(2773337, J$.R(2773329, 'this', this, false, false), 'infinity'));
                            case J$.C2(133600, J$.T(2773361, 2, 22, false)):
                            case J$.C2(133608, J$.T(2773385, 3, 22, false)):
                                return J$.Rt(2773377, J$.T(2773369, null, 25, false));
                            case J$.C2(133616, J$.T(2773393, 4, 22, false)):
                            case J$.C2(133624, J$.T(2773401, 6, 22, false)):
                            case J$.C2(133632, J$.T(2773665, 7, 22, false)):
                                var len = J$.W(2773441, 'len', J$.B(409730, '/', J$.B(409722, '-', J$.G(2773417, J$.R(2773409, 's', s, false, false), 'length'), J$.T(2773425, 2, 22, false)), J$.T(2773433, 2, 22, false)), len, false, false);
                                var xHex = J$.W(2773481, 'xHex', J$.M(2773473, J$.R(2773449, 's', s, false, false), 'substr', false)(J$.T(2773457, 2, 22, false), J$.R(2773465, 'len', len, false, false)), xHex, false, false);
                                var yHex = J$.W(2773529, 'yHex', J$.M(2773521, J$.R(2773489, 's', s, false, false), 'substr', false)(J$.B(409738, '+', J$.R(2773497, 'len', len, false, false), J$.T(2773505, 2, 22, false)), J$.R(2773513, 'len', len, false, false)), yHex, false, false);
                                return J$.Rt(2773657, J$.F(2773649, J$.R(2773537, 'ECPointFp', ECPointFp, false, true), true)(J$.R(2773545, 'this', this, false, false), J$.M(2773593, J$.R(2773553, 'this', this, false, false), 'fromBigInteger', false)(J$.F(2773585, J$.R(2773561, 'BigInteger', BigInteger, false, true), true)(J$.R(2773569, 'xHex', xHex, false, false), J$.T(2773577, 16, 22, false))), J$.M(2773641, J$.R(2773601, 'this', this, false, false), 'fromBigInteger', false)(J$.F(2773633, J$.R(2773609, 'BigInteger', BigInteger, false, true), true)(J$.R(2773617, 'yHex', yHex, false, false), J$.T(2773625, 16, 22, false)))));
                            default:
                                return J$.Rt(2773681, J$.T(2773673, null, 25, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2780369, J$e);
                        } finally {
                            if (J$.Fr(2780377))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpEncodePointHex(p) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(2774081, arguments.callee, this, arguments);
                            arguments = J$.N(2774089, 'arguments', arguments, true, false, false);
                            p = J$.N(2774097, 'p', p, true, false, false);
                            J$.N(2774105, 'xHex', xHex, false, false, false);
                            J$.N(2774113, 'yHex', yHex, false, false, false);
                            J$.N(2774121, 'oLen', oLen, false, false, false);
                            if (J$.C(133640, J$.M(2773745, J$.R(2773737, 'p', p, false, false), 'isInfinity', false)()))
                                return J$.Rt(2773761, J$.T(2773753, '00', 21, false));
                            var xHex = J$.W(2773809, 'xHex', J$.M(2773801, J$.M(2773785, J$.M(2773777, J$.R(2773769, 'p', p, false, false), 'getX', false)(), 'toBigInteger', false)(), 'toString', false)(J$.T(2773793, 16, 22, false)), xHex, false, false);
                            var yHex = J$.W(2773857, 'yHex', J$.M(2773849, J$.M(2773833, J$.M(2773825, J$.R(2773817, 'p', p, false, false), 'getY', false)(), 'toBigInteger', false)(), 'toString', false)(J$.T(2773841, 16, 22, false)), yHex, false, false);
                            var oLen = J$.W(2773905, 'oLen', J$.G(2773897, J$.M(2773889, J$.M(2773873, J$.R(2773865, 'this', this, false, false), 'getQ', false)(), 'toString', false)(J$.T(2773881, 16, 22, false)), 'length'), oLen, false, false);
                            if (J$.C(133648, J$.B(409754, '!=', J$.B(409746, '%', J$.R(2773913, 'oLen', oLen, false, false), J$.T(2773921, 2, 22, false)), J$.T(2773929, 0, 22, false))))
                                J$.B(409778, '-', oLen = J$.W(2773945, 'oLen', J$.B(409770, '+', J$.U(409762, '+', J$.R(2773937, 'oLen', oLen, false, false)), 1), oLen, false, false), 1);
                            while (J$.C(133656, J$.B(409786, '<', J$.G(2773961, J$.R(2773953, 'xHex', xHex, false, false), 'length'), J$.R(2773969, 'oLen', oLen, false, false)))) {
                                xHex = J$.W(2773993, 'xHex', J$.B(409794, '+', J$.T(2773977, '0', 21, false), J$.R(2773985, 'xHex', xHex, false, false)), xHex, false, false);
                            }
                            while (J$.C(133664, J$.B(409802, '<', J$.G(2774009, J$.R(2774001, 'yHex', yHex, false, false), 'length'), J$.R(2774017, 'oLen', oLen, false, false)))) {
                                yHex = J$.W(2774041, 'yHex', J$.B(409810, '+', J$.T(2774025, '0', 21, false), J$.R(2774033, 'yHex', yHex, false, false)), yHex, false, false);
                            }
                            return J$.Rt(2774073, J$.B(409826, '+', J$.B(409818, '+', J$.T(2774049, '04', 21, false), J$.R(2774057, 'xHex', xHex, false, false)), J$.R(2774065, 'yHex', yHex, false, false)));
                        } catch (J$e) {
                            J$.Ex(2780385, J$e);
                        } finally {
                            if (J$.Fr(2780393))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2779449, 'BigInteger', BigInteger, false, false, false);
            J$.N(2779457, 'Barrett', Barrett, false, false, false);
            ECFieldElementFp = J$.N(2779473, 'ECFieldElementFp', J$.T(2779465, ECFieldElementFp, 12, false), true, false, false);
            feFpEquals = J$.N(2779489, 'feFpEquals', J$.T(2779481, feFpEquals, 12, false), true, false, false);
            feFpToBigInteger = J$.N(2779505, 'feFpToBigInteger', J$.T(2779497, feFpToBigInteger, 12, false), true, false, false);
            feFpNegate = J$.N(2779521, 'feFpNegate', J$.T(2779513, feFpNegate, 12, false), true, false, false);
            feFpAdd = J$.N(2779537, 'feFpAdd', J$.T(2779529, feFpAdd, 12, false), true, false, false);
            feFpSubtract = J$.N(2779553, 'feFpSubtract', J$.T(2779545, feFpSubtract, 12, false), true, false, false);
            feFpMultiply = J$.N(2779569, 'feFpMultiply', J$.T(2779561, feFpMultiply, 12, false), true, false, false);
            feFpSquare = J$.N(2779585, 'feFpSquare', J$.T(2779577, feFpSquare, 12, false), true, false, false);
            feFpDivide = J$.N(2779601, 'feFpDivide', J$.T(2779593, feFpDivide, 12, false), true, false, false);
            ECPointFp = J$.N(2779617, 'ECPointFp', J$.T(2779609, ECPointFp, 12, false), true, false, false);
            pointFpGetX = J$.N(2779633, 'pointFpGetX', J$.T(2779625, pointFpGetX, 12, false), true, false, false);
            pointFpGetY = J$.N(2779649, 'pointFpGetY', J$.T(2779641, pointFpGetY, 12, false), true, false, false);
            pointFpEquals = J$.N(2779665, 'pointFpEquals', J$.T(2779657, pointFpEquals, 12, false), true, false, false);
            pointFpIsInfinity = J$.N(2779681, 'pointFpIsInfinity', J$.T(2779673, pointFpIsInfinity, 12, false), true, false, false);
            pointFpNegate = J$.N(2779697, 'pointFpNegate', J$.T(2779689, pointFpNegate, 12, false), true, false, false);
            pointFpAdd = J$.N(2779713, 'pointFpAdd', J$.T(2779705, pointFpAdd, 12, false), true, false, false);
            pointFpTwice = J$.N(2779729, 'pointFpTwice', J$.T(2779721, pointFpTwice, 12, false), true, false, false);
            pointFpMultiply = J$.N(2779745, 'pointFpMultiply', J$.T(2779737, pointFpMultiply, 12, false), true, false, false);
            pointFpMultiplyTwo = J$.N(2779761, 'pointFpMultiplyTwo', J$.T(2779753, pointFpMultiplyTwo, 12, false), true, false, false);
            ECCurveFp = J$.N(2779777, 'ECCurveFp', J$.T(2779769, ECCurveFp, 12, false), true, false, false);
            curveFpGetQ = J$.N(2779793, 'curveFpGetQ', J$.T(2779785, curveFpGetQ, 12, false), true, false, false);
            curveFpGetA = J$.N(2779809, 'curveFpGetA', J$.T(2779801, curveFpGetA, 12, false), true, false, false);
            curveFpGetB = J$.N(2779825, 'curveFpGetB', J$.T(2779817, curveFpGetB, 12, false), true, false, false);
            curveFpEquals = J$.N(2779841, 'curveFpEquals', J$.T(2779833, curveFpEquals, 12, false), true, false, false);
            curveFpGetInfinity = J$.N(2779857, 'curveFpGetInfinity', J$.T(2779849, curveFpGetInfinity, 12, false), true, false, false);
            curveFpFromBigInteger = J$.N(2779873, 'curveFpFromBigInteger', J$.T(2779865, curveFpFromBigInteger, 12, false), true, false, false);
            curveReduce = J$.N(2779889, 'curveReduce', J$.T(2779881, curveReduce, 12, false), true, false, false);
            curveFpDecodePointHex = J$.N(2779905, 'curveFpDecodePointHex', J$.T(2779897, curveFpDecodePointHex, 12, false), true, false, false);
            curveFpEncodePointHex = J$.N(2779921, 'curveFpEncodePointHex', J$.T(2779913, curveFpEncodePointHex, 12, false), true, false, false);
            J$.N(2779929, '_exports', _exports, false, false, false);
            J$.T(2765729, 'use strict', 21, false);
            J$.F(2765753, J$.I(typeof require === 'undefined' ? require = J$.R(2765737, 'require', undefined, true, true) : require = J$.R(2765737, 'require', require, true, true)), false)(J$.T(2765745, 'core-js/modules/es.array.reduce', 21, false));
            J$.F(2765777, J$.I(typeof require === 'undefined' ? require = J$.R(2765761, 'require', undefined, true, true) : require = J$.R(2765761, 'require', require, true, true)), false)(J$.T(2765769, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2765801, J$.I(typeof require === 'undefined' ? require = J$.R(2765785, 'require', undefined, true, true) : require = J$.R(2765785, 'require', require, true, true)), false)(J$.T(2765793, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2765825, J$.I(typeof require === 'undefined' ? require = J$.R(2765809, 'require', undefined, true, true) : require = J$.R(2765809, 'require', require, true, true)), false)(J$.T(2765817, 'core-js/modules/es.parse-int', 21, false));
            J$.F(2765849, J$.I(typeof require === 'undefined' ? require = J$.R(2765833, 'require', undefined, true, true) : require = J$.R(2765833, 'require', require, true, true)), false)(J$.T(2765841, 'core-js/modules/es.regexp.to-string', 21, false));
            var BigInteger = J$.W(2765889, 'BigInteger', J$.G(2765881, J$.F(2765873, J$.I(typeof require === 'undefined' ? require = J$.R(2765857, 'require', undefined, true, true) : require = J$.R(2765857, 'require', require, true, true)), false)(J$.T(2765865, 'jsbn', 21, false)), 'BigInteger'), BigInteger, false, true);
            var Barrett = J$.W(2765921, 'Barrett', J$.G(2765913, J$.G(2765905, J$.R(2765897, 'BigInteger', BigInteger, false, true), 'prototype'), 'Barrett'), Barrett, false, true);
            J$.P(2766961, J$.G(2766945, J$.R(2766937, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'equals', J$.R(2766953, 'feFpEquals', feFpEquals, false, true));
            J$.P(2766993, J$.G(2766977, J$.R(2766969, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'toBigInteger', J$.R(2766985, 'feFpToBigInteger', feFpToBigInteger, false, true));
            J$.P(2767025, J$.G(2767009, J$.R(2767001, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'negate', J$.R(2767017, 'feFpNegate', feFpNegate, false, true));
            J$.P(2767057, J$.G(2767041, J$.R(2767033, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'add', J$.R(2767049, 'feFpAdd', feFpAdd, false, true));
            J$.P(2767089, J$.G(2767073, J$.R(2767065, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'subtract', J$.R(2767081, 'feFpSubtract', feFpSubtract, false, true));
            J$.P(2767121, J$.G(2767105, J$.R(2767097, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'multiply', J$.R(2767113, 'feFpMultiply', feFpMultiply, false, true));
            J$.P(2767153, J$.G(2767137, J$.R(2767129, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'square', J$.R(2767145, 'feFpSquare', feFpSquare, false, true));
            J$.P(2767185, J$.G(2767169, J$.R(2767161, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'divide', J$.R(2767177, 'feFpDivide', feFpDivide, false, true));
            J$.P(2772289, J$.G(2772273, J$.R(2772265, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'getX', J$.R(2772281, 'pointFpGetX', pointFpGetX, false, true));
            J$.P(2772321, J$.G(2772305, J$.R(2772297, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'getY', J$.R(2772313, 'pointFpGetY', pointFpGetY, false, true));
            J$.P(2772353, J$.G(2772337, J$.R(2772329, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'equals', J$.R(2772345, 'pointFpEquals', pointFpEquals, false, true));
            J$.P(2772385, J$.G(2772369, J$.R(2772361, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'isInfinity', J$.R(2772377, 'pointFpIsInfinity', pointFpIsInfinity, false, true));
            J$.P(2772417, J$.G(2772401, J$.R(2772393, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'negate', J$.R(2772409, 'pointFpNegate', pointFpNegate, false, true));
            J$.P(2772449, J$.G(2772433, J$.R(2772425, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'add', J$.R(2772441, 'pointFpAdd', pointFpAdd, false, true));
            J$.P(2772481, J$.G(2772465, J$.R(2772457, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'twice', J$.R(2772473, 'pointFpTwice', pointFpTwice, false, true));
            J$.P(2772513, J$.G(2772497, J$.R(2772489, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'multiply', J$.R(2772505, 'pointFpMultiply', pointFpMultiply, false, true));
            J$.P(2772545, J$.G(2772529, J$.R(2772521, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'multiplyTwo', J$.R(2772537, 'pointFpMultiplyTwo', pointFpMultiplyTwo, false, true));
            J$.P(2774153, J$.G(2774137, J$.R(2774129, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'getQ', J$.R(2774145, 'curveFpGetQ', curveFpGetQ, false, true));
            J$.P(2774185, J$.G(2774169, J$.R(2774161, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'getA', J$.R(2774177, 'curveFpGetA', curveFpGetA, false, true));
            J$.P(2774217, J$.G(2774201, J$.R(2774193, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'getB', J$.R(2774209, 'curveFpGetB', curveFpGetB, false, true));
            J$.P(2774249, J$.G(2774233, J$.R(2774225, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'equals', J$.R(2774241, 'curveFpEquals', curveFpEquals, false, true));
            J$.P(2774281, J$.G(2774265, J$.R(2774257, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'getInfinity', J$.R(2774273, 'curveFpGetInfinity', curveFpGetInfinity, false, true));
            J$.P(2774313, J$.G(2774297, J$.R(2774289, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'fromBigInteger', J$.R(2774305, 'curveFpFromBigInteger', curveFpFromBigInteger, false, true));
            J$.P(2774345, J$.G(2774329, J$.R(2774321, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'reduce', J$.R(2774337, 'curveReduce', curveReduce, false, true));
            J$.P(2774377, J$.G(2774361, J$.R(2774353, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'encodePointHex', J$.R(2774369, 'curveFpEncodePointHex', curveFpEncodePointHex, false, true));
            J$.P(2775369, J$.G(2774393, J$.R(2774385, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'decodePointHex', J$.T(2775361, function (s) {
                jalangiLabel29:
                    while (true) {
                        try {
                            J$.Fe(2775273, arguments.callee, this, arguments);
                            arguments = J$.N(2775281, 'arguments', arguments, true, false, false);
                            s = J$.N(2775289, 's', s, true, false, false);
                            J$.N(2775297, 'yIsEven', yIsEven, false, false, false);
                            J$.N(2775305, 'len', len, false, false, false);
                            J$.N(2775313, 'xHex', xHex, false, false, false);
                            J$.N(2775321, 'x', x, false, false, false);
                            J$.N(2775329, 'alpha', alpha, false, false, false);
                            J$.N(2775337, 'beta', beta, false, false, false);
                            J$.N(2775345, 'betaValue', betaValue, false, false, false);
                            J$.N(2775353, 'yHex', yHex, false, false, false);
                            var yIsEven;
                            switch (J$.C1(133696, J$.F(2774449, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(2774401, 'parseInt', undefined, true, true) : parseInt = J$.R(2774401, 'parseInt', parseInt, true, true)), false)(J$.M(2774433, J$.R(2774409, 's', s, false, false), 'substr', false)(J$.T(2774417, 0, 22, false), J$.T(2774425, 2, 22, false)), J$.T(2774441, 16, 22, false)))) {
                            case J$.C2(133704, J$.T(2774481, 0, 22, false)):
                                return J$.Rt(2774473, J$.G(2774465, J$.R(2774457, 'this', this, false, false), 'infinity'));
                            case J$.C2(133712, J$.T(2774505, 2, 22, false)):
                                yIsEven = J$.W(2774497, 'yIsEven', J$.T(2774489, false, 23, false), yIsEven, false, false);
                            case J$.C2(133720, J$.T(2774969, 3, 22, false)):
                                if (J$.C(133672, J$.B(409834, '==', J$.R(2774513, 'yIsEven', yIsEven, false, false), J$.T(2774521, undefined, 24, false))))
                                    yIsEven = J$.W(2774537, 'yIsEven', J$.T(2774529, true, 23, false), yIsEven, false, false);
                                var len = J$.W(2774569, 'len', J$.B(409842, '-', J$.G(2774553, J$.R(2774545, 's', s, false, false), 'length'), J$.T(2774561, 2, 22, false)), len, false, false);
                                var xHex = J$.W(2774609, 'xHex', J$.M(2774601, J$.R(2774577, 's', s, false, false), 'substr', false)(J$.T(2774585, 2, 22, false), J$.R(2774593, 'len', len, false, false)), xHex, false, false);
                                var x = J$.W(2774665, 'x', J$.M(2774657, J$.R(2774617, 'this', this, false, false), 'fromBigInteger', false)(J$.F(2774649, J$.R(2774625, 'BigInteger', BigInteger, false, true), true)(J$.R(2774633, 'xHex', xHex, false, false), J$.T(2774641, 16, 22, false))), x, false, false);
                                var alpha = J$.W(2774753, 'alpha', J$.M(2774745, J$.M(2774721, J$.R(2774673, 'x', x, false, false), 'multiply', false)(J$.M(2774713, J$.M(2774689, J$.R(2774681, 'x', x, false, false), 'square', false)(), 'add', false)(J$.M(2774705, J$.R(2774697, 'this', this, false, false), 'getA', false)())), 'add', false)(J$.M(2774737, J$.R(2774729, 'this', this, false, false), 'getB', false)()), alpha, false, false);
                                var beta = J$.W(2774777, 'beta', J$.M(2774769, J$.R(2774761, 'alpha', alpha, false, false), 'sqrt', false)(), beta, false, false);
                                if (J$.C(133680, J$.B(409850, '==', J$.R(2774785, 'beta', beta, false, false), J$.T(2774793, null, 25, false))))
                                    throw J$.T(2774801, 'Invalid point compression', 21, false);
                                var betaValue = J$.W(2774825, 'betaValue', J$.M(2774817, J$.R(2774809, 'beta', beta, false, false), 'toBigInteger', false)(), betaValue, false, false);
                                if (J$.C(133688, J$.B(409858, '!=', J$.M(2774849, J$.R(2774833, 'betaValue', betaValue, false, false), 'testBit', false)(J$.T(2774841, 0, 22, false)), J$.R(2774857, 'yIsEven', yIsEven, false, false)))) {
                                    beta = J$.W(2774913, 'beta', J$.M(2774905, J$.R(2774865, 'this', this, false, false), 'fromBigInteger', false)(J$.M(2774897, J$.M(2774881, J$.R(2774873, 'this', this, false, false), 'getQ', false)(), 'subtract', false)(J$.R(2774889, 'betaValue', betaValue, false, false))), beta, false, false);
                                }
                                return J$.Rt(2774961, J$.F(2774953, J$.R(2774921, 'ECPointFp', ECPointFp, false, true), true)(J$.R(2774929, 'this', this, false, false), J$.R(2774937, 'x', x, false, false), J$.R(2774945, 'beta', beta, false, false)));
                            case J$.C2(133728, J$.T(2774977, 4, 22, false)):
                            case J$.C2(133736, J$.T(2774985, 6, 22, false)):
                            case J$.C2(133744, J$.T(2775249, 7, 22, false)):
                                var len = J$.W(2775025, 'len', J$.B(409874, '/', J$.B(409866, '-', J$.G(2775001, J$.R(2774993, 's', s, false, false), 'length'), J$.T(2775009, 2, 22, false)), J$.T(2775017, 2, 22, false)), len, false, false);
                                var xHex = J$.W(2775065, 'xHex', J$.M(2775057, J$.R(2775033, 's', s, false, false), 'substr', false)(J$.T(2775041, 2, 22, false), J$.R(2775049, 'len', len, false, false)), xHex, false, false);
                                var yHex = J$.W(2775113, 'yHex', J$.M(2775105, J$.R(2775073, 's', s, false, false), 'substr', false)(J$.B(409882, '+', J$.R(2775081, 'len', len, false, false), J$.T(2775089, 2, 22, false)), J$.R(2775097, 'len', len, false, false)), yHex, false, false);
                                return J$.Rt(2775241, J$.F(2775233, J$.R(2775121, 'ECPointFp', ECPointFp, false, true), true)(J$.R(2775129, 'this', this, false, false), J$.M(2775177, J$.R(2775137, 'this', this, false, false), 'fromBigInteger', false)(J$.F(2775169, J$.R(2775145, 'BigInteger', BigInteger, false, true), true)(J$.R(2775153, 'xHex', xHex, false, false), J$.T(2775161, 16, 22, false))), J$.M(2775225, J$.R(2775185, 'this', this, false, false), 'fromBigInteger', false)(J$.F(2775217, J$.R(2775193, 'BigInteger', BigInteger, false, true), true)(J$.R(2775201, 'yHex', yHex, false, false), J$.T(2775209, 16, 22, false)))));
                            default:
                                return J$.Rt(2775265, J$.T(2775257, null, 25, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2780401, J$e);
                        } finally {
                            if (J$.Fr(2780409))
                                continue jalangiLabel29;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2775753, J$.G(2775385, J$.R(2775377, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'encodeCompressedPointHex', J$.T(2775745, function (p) {
                jalangiLabel30:
                    while (true) {
                        try {
                            J$.Fe(2775697, arguments.callee, this, arguments);
                            arguments = J$.N(2775705, 'arguments', arguments, true, false, false);
                            p = J$.N(2775713, 'p', p, true, false, false);
                            J$.N(2775721, 'xHex', xHex, false, false, false);
                            J$.N(2775729, 'oLen', oLen, false, false, false);
                            J$.N(2775737, 'yPrefix', yPrefix, false, false, false);
                            if (J$.C(133752, J$.M(2775401, J$.R(2775393, 'p', p, false, false), 'isInfinity', false)()))
                                return J$.Rt(2775417, J$.T(2775409, '00', 21, false));
                            var xHex = J$.W(2775465, 'xHex', J$.M(2775457, J$.M(2775441, J$.M(2775433, J$.R(2775425, 'p', p, false, false), 'getX', false)(), 'toBigInteger', false)(), 'toString', false)(J$.T(2775449, 16, 22, false)), xHex, false, false);
                            var oLen = J$.W(2775513, 'oLen', J$.G(2775505, J$.M(2775497, J$.M(2775481, J$.R(2775473, 'this', this, false, false), 'getQ', false)(), 'toString', false)(J$.T(2775489, 16, 22, false)), 'length'), oLen, false, false);
                            if (J$.C(133760, J$.B(409898, '!=', J$.B(409890, '%', J$.R(2775521, 'oLen', oLen, false, false), J$.T(2775529, 2, 22, false)), J$.T(2775537, 0, 22, false))))
                                J$.B(409922, '-', oLen = J$.W(2775553, 'oLen', J$.B(409914, '+', J$.U(409906, '+', J$.R(2775545, 'oLen', oLen, false, false)), 1), oLen, false, false), 1);
                            while (J$.C(133768, J$.B(409930, '<', J$.G(2775569, J$.R(2775561, 'xHex', xHex, false, false), 'length'), J$.R(2775577, 'oLen', oLen, false, false)))) {
                                xHex = J$.W(2775601, 'xHex', J$.B(409938, '+', J$.T(2775585, '0', 21, false), J$.R(2775593, 'xHex', xHex, false, false)), xHex, false, false);
                            }
                            var yPrefix;
                            if (J$.C(133776, J$.M(2775633, J$.M(2775625, J$.M(2775617, J$.R(2775609, 'p', p, false, false), 'getY', false)(), 'toBigInteger', false)(), 'isEven', false)()))
                                yPrefix = J$.W(2775649, 'yPrefix', J$.T(2775641, '02', 21, false), yPrefix, false, false);
                            else
                                yPrefix = J$.W(2775665, 'yPrefix', J$.T(2775657, '03', 21, false), yPrefix, false, false);
                            return J$.Rt(2775689, J$.B(409946, '+', J$.R(2775673, 'yPrefix', yPrefix, false, false), J$.R(2775681, 'xHex', xHex, false, false)));
                        } catch (J$e) {
                            J$.Ex(2780417, J$e);
                        } finally {
                            if (J$.Fr(2780425))
                                continue jalangiLabel30;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2776105, J$.G(2775769, J$.R(2775761, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'getR', J$.T(2776097, function () {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(2776065, arguments.callee, this, arguments);
                            arguments = J$.N(2776073, 'arguments', arguments, true, false, false);
                            J$.N(2776081, 'bitLength', bitLength, false, false, false);
                            J$.N(2776089, 'firstWord', firstWord, false, false, false);
                            if (J$.C(133784, J$.B(409954, '!=', J$.G(2775785, J$.R(2775777, 'this', this, false, false), 'r'), J$.T(2775793, undefined, 24, false))))
                                return J$.Rt(2775817, J$.G(2775809, J$.R(2775801, 'this', this, false, false), 'r'));
                            J$.P(2775841, J$.R(2775825, 'this', this, false, false), 'r', J$.T(2775833, null, 25, false));
                            var bitLength = J$.W(2775873, 'bitLength', J$.M(2775865, J$.G(2775857, J$.R(2775849, 'this', this, false, false), 'q'), 'bitLength', false)(), bitLength, false, false);
                            if (J$.C(133800, J$.B(409962, '>', J$.R(2775881, 'bitLength', bitLength, false, false), J$.T(2775889, 128, 22, false)))) {
                                var firstWord = J$.W(2775937, 'firstWord', J$.M(2775929, J$.G(2775905, J$.R(2775897, 'this', this, false, false), 'q'), 'shiftRight', false)(J$.B(409970, '-', J$.R(2775913, 'bitLength', bitLength, false, false), J$.T(2775921, 64, 22, false))), firstWord, false, false);
                                if (J$.C(133792, J$.B(409986, '==', J$.M(2775953, J$.R(2775945, 'firstWord', firstWord, false, false), 'intValue', false)(), J$.U(409978, '-', J$.T(2775961, 1, 22, false))))) {
                                    J$.P(2776033, J$.R(2775969, 'this', this, false, false), 'r', J$.M(2776025, J$.M(2776001, J$.G(2775985, J$.R(2775977, 'BigInteger', BigInteger, false, true), 'ONE'), 'shiftLeft', false)(J$.R(2775993, 'bitLength', bitLength, false, false)), 'subtract', false)(J$.G(2776017, J$.R(2776009, 'this', this, false, false), 'q')));
                                }
                            }
                            return J$.Rt(2776057, J$.G(2776049, J$.R(2776041, 'this', this, false, false), 'r'));
                        } catch (J$e) {
                            J$.Ex(2780433, J$e);
                        } finally {
                            if (J$.Fr(2780441))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2776217, J$.G(2776121, J$.R(2776113, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'modMult', J$.T(2776209, function (x1, x2) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(2776177, arguments.callee, this, arguments);
                            arguments = J$.N(2776185, 'arguments', arguments, true, false, false);
                            x1 = J$.N(2776193, 'x1', x1, true, false, false);
                            x2 = J$.N(2776201, 'x2', x2, true, false, false);
                            return J$.Rt(2776169, J$.M(2776161, J$.R(2776129, 'this', this, false, false), 'modReduce', false)(J$.M(2776153, J$.R(2776137, 'x1', x1, false, false), 'multiply', false)(J$.R(2776145, 'x2', x2, false, false))));
                        } catch (J$e) {
                            J$.Ex(2780449, J$e);
                        } finally {
                            if (J$.Fr(2780457))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2776681, J$.G(2776233, J$.R(2776225, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'modReduce', J$.T(2776673, function (x) {
                jalangiLabel33:
                    while (true) {
                        try {
                            J$.Fe(2776625, arguments.callee, this, arguments);
                            arguments = J$.N(2776633, 'arguments', arguments, true, false, false);
                            x = J$.N(2776641, 'x', x, true, false, false);
                            J$.N(2776649, 'qLen', qLen, false, false, false);
                            J$.N(2776657, 'u', u, false, false, false);
                            J$.N(2776665, 'v', v, false, false, false);
                            if (J$.C(133832, J$.B(409994, '!=', J$.M(2776249, J$.R(2776241, 'this', this, false, false), 'getR', false)(), J$.T(2776257, null, 25, false)))) {
                                var qLen = J$.W(2776281, 'qLen', J$.M(2776273, J$.I(typeof q === 'undefined' ? q = J$.R(2776265, 'q', undefined, true, true) : q = J$.R(2776265, 'q', q, true, true)), 'bitLength', false)(), qLen, false, false);
                                while (J$.C(133816, J$.B(410010, '>', J$.M(2776297, J$.R(2776289, 'x', x, false, false), 'bitLength', false)(), J$.B(410002, '+', J$.R(2776305, 'qLen', qLen, false, false), J$.T(2776313, 1, 22, false))))) {
                                    var u = J$.W(2776345, 'u', J$.M(2776337, J$.R(2776321, 'x', x, false, false), 'shiftRight', false)(J$.R(2776329, 'qLen', qLen, false, false)), u, false, false);
                                    var v = J$.W(2776393, 'v', J$.M(2776385, J$.R(2776353, 'x', x, false, false), 'subtract', false)(J$.M(2776377, J$.R(2776361, 'u', u, false, false), 'shiftLeft', false)(J$.R(2776369, 'qLen', qLen, false, false))), v, false, false);
                                    if (J$.C(133808, J$.U(410018, '!', J$.M(2776433, J$.M(2776409, J$.R(2776401, 'this', this, false, false), 'getR', false)(), 'equals', false)(J$.G(2776425, J$.R(2776417, 'BigInteger', BigInteger, false, true), 'ONE'))))) {
                                        u = J$.W(2776473, 'u', J$.M(2776465, J$.R(2776441, 'u', u, false, false), 'multiply', false)(J$.M(2776457, J$.R(2776449, 'this', this, false, false), 'getR', false)()), u, false, false);
                                    }
                                    x = J$.W(2776505, 'x', J$.M(2776497, J$.R(2776481, 'u', u, false, false), 'add', false)(J$.R(2776489, 'v', v, false, false)), x, false, false);
                                }
                                while (J$.C(133824, J$.B(410026, '>=', J$.M(2776529, J$.R(2776513, 'x', x, false, false), 'compareTo', false)(J$.I(typeof q === 'undefined' ? q = J$.R(2776521, 'q', undefined, true, true) : q = J$.R(2776521, 'q', q, true, true))), J$.T(2776537, 0, 22, false)))) {
                                    x = J$.W(2776569, 'x', J$.M(2776561, J$.R(2776545, 'x', x, false, false), 'subtract', false)(J$.I(typeof q === 'undefined' ? q = J$.R(2776553, 'q', undefined, true, true) : q = J$.R(2776553, 'q', q, true, true))), x, false, false);
                                }
                            } else {
                                x = J$.W(2776601, 'x', J$.M(2776593, J$.R(2776577, 'x', x, false, false), 'mod', false)(J$.I(typeof q === 'undefined' ? q = J$.R(2776585, 'q', undefined, true, true) : q = J$.R(2776585, 'q', q, true, true))), x, false, false);
                            }
                            return J$.Rt(2776617, J$.R(2776609, 'x', x, false, false));
                        } catch (J$e) {
                            J$.Ex(2780465, J$e);
                        } finally {
                            if (J$.Fr(2780473))
                                continue jalangiLabel33;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2777961, J$.G(2776697, J$.R(2776689, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'sqrt', J$.T(2777953, function () {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(2777849, arguments.callee, this, arguments);
                            arguments = J$.N(2777857, 'arguments', arguments, true, false, false);
                            J$.N(2777865, 'z', z, false, false, false);
                            J$.N(2777873, 'qMinusOne', qMinusOne, false, false, false);
                            J$.N(2777881, 'legendreExponent', legendreExponent, false, false, false);
                            J$.N(2777889, 'u', u, false, false, false);
                            J$.N(2777897, 'k', k, false, false, false);
                            J$.N(2777905, 'Q', Q, false, false, false);
                            J$.N(2777913, 'fourQ', fourQ, false, false, false);
                            J$.N(2777921, 'U', U, false, false, false);
                            J$.N(2777929, 'V', V, false, false, false);
                            J$.N(2777937, 'P', P, false, false, false);
                            J$.N(2777945, 'result', result, false, false, false);
                            if (J$.C(133840, J$.U(410034, '!', J$.M(2776729, J$.G(2776713, J$.R(2776705, 'this', this, false, false), 'q'), 'testBit', false)(J$.T(2776721, 0, 22, false)))))
                                throw J$.T(2776737, 'unsupported', 21, false);
                            if (J$.C(133856, J$.M(2776769, J$.G(2776753, J$.R(2776745, 'this', this, false, false), 'q'), 'testBit', false)(J$.T(2776761, 1, 22, false)))) {
                                var z = J$.W(2776905, 'z', J$.F(2776897, J$.R(2776777, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(2776793, J$.R(2776785, 'this', this, false, false), 'q'), J$.M(2776889, J$.G(2776809, J$.R(2776801, 'this', this, false, false), 'x'), 'modPow', false)(J$.M(2776865, J$.M(2776841, J$.G(2776825, J$.R(2776817, 'this', this, false, false), 'q'), 'shiftRight', false)(J$.T(2776833, 2, 22, false)), 'add', false)(J$.G(2776857, J$.R(2776849, 'BigInteger', BigInteger, false, true), 'ONE')), J$.G(2776881, J$.R(2776873, 'this', this, false, false), 'q'))), z, false, false);
                                return J$.Rt(2776961, J$.C(133848, J$.M(2776937, J$.M(2776921, J$.R(2776913, 'z', z, false, false), 'square', false)(), 'equals', false)(J$.R(2776929, 'this', this, false, false))) ? J$.R(2776945, 'z', z, false, false) : J$.T(2776953, null, 25, false));
                            }
                            var qMinusOne = J$.W(2777009, 'qMinusOne', J$.M(2777001, J$.G(2776977, J$.R(2776969, 'this', this, false, false), 'q'), 'subtract', false)(J$.G(2776993, J$.R(2776985, 'BigInteger', BigInteger, false, true), 'ONE')), qMinusOne, false, false);
                            var legendreExponent = J$.W(2777041, 'legendreExponent', J$.M(2777033, J$.R(2777017, 'qMinusOne', qMinusOne, false, false), 'shiftRight', false)(J$.T(2777025, 1, 22, false)), legendreExponent, false, false);
                            if (J$.C(133864, J$.U(410042, '!', J$.M(2777113, J$.M(2777089, J$.G(2777057, J$.R(2777049, 'this', this, false, false), 'x'), 'modPow', false)(J$.R(2777065, 'legendreExponent', legendreExponent, false, false), J$.G(2777081, J$.R(2777073, 'this', this, false, false), 'q')), 'equals', false)(J$.G(2777105, J$.R(2777097, 'BigInteger', BigInteger, false, true), 'ONE'))))) {
                                return J$.Rt(2777129, J$.T(2777121, null, 25, false));
                            }
                            var u = J$.W(2777161, 'u', J$.M(2777153, J$.R(2777137, 'qMinusOne', qMinusOne, false, false), 'shiftRight', false)(J$.T(2777145, 2, 22, false)), u, false, false);
                            var k = J$.W(2777217, 'k', J$.M(2777209, J$.M(2777185, J$.R(2777169, 'u', u, false, false), 'shiftLeft', false)(J$.T(2777177, 1, 22, false)), 'add', false)(J$.G(2777201, J$.R(2777193, 'BigInteger', BigInteger, false, true), 'ONE')), k, false, false);
                            var Q = J$.W(2777241, 'Q', J$.G(2777233, J$.R(2777225, 'this', this, false, false), 'x'), Q, false, false);
                            var fourQ = J$.W(2777289, 'fourQ', J$.F(2777281, J$.I(typeof modDouble === 'undefined' ? modDouble = J$.R(2777249, 'modDouble', undefined, true, true) : modDouble = J$.R(2777249, 'modDouble', modDouble, true, true)), false)(J$.F(2777273, J$.I(typeof modDouble === 'undefined' ? modDouble = J$.R(2777257, 'modDouble', undefined, true, true) : modDouble = J$.R(2777257, 'modDouble', modDouble, true, true)), false)(J$.R(2777265, 'Q', Q, false, false))), fourQ, false, false);
                            var U, V;
                            do {
                                var P;
                                do {
                                    P = J$.W(2777353, 'P', J$.F(2777345, J$.R(2777297, 'BigInteger', BigInteger, false, true), true)(J$.M(2777321, J$.G(2777313, J$.R(2777305, 'this', this, false, false), 'q'), 'bitLength', false)(), J$.F(2777337, J$.I(typeof SecureRandom === 'undefined' ? SecureRandom = J$.R(2777329, 'SecureRandom', undefined, true, true) : SecureRandom = J$.R(2777329, 'SecureRandom', SecureRandom, true, true)), true)()), P, false, false);
                                } while (J$.C(133880, J$.C(133872, J$.B(410050, '>=', J$.M(2777385, J$.R(2777361, 'P', P, false, false), 'compareTo', false)(J$.G(2777377, J$.R(2777369, 'this', this, false, false), 'q')), J$.T(2777393, 0, 22, false))) ? J$._() : J$.U(410058, '!', J$.M(2777481, J$.M(2777465, J$.M(2777433, J$.M(2777417, J$.R(2777401, 'P', P, false, false), 'multiply', false)(J$.R(2777409, 'P', P, false, false)), 'subtract', false)(J$.R(2777425, 'fourQ', fourQ, false, false)), 'modPow', false)(J$.R(2777441, 'legendreExponent', legendreExponent, false, false), J$.G(2777457, J$.R(2777449, 'this', this, false, false), 'q')), 'equals', false)(J$.R(2777473, 'qMinusOne', qMinusOne, false, false)))));
                                var result = J$.W(2777529, 'result', J$.M(2777521, J$.R(2777489, 'this', this, false, false), 'lucasSequence', false)(J$.R(2777497, 'P', P, false, false), J$.R(2777505, 'Q', Q, false, false), J$.R(2777513, 'k', k, false, false)), result, false, false);
                                U = J$.W(2777561, 'U', J$.G(2777553, J$.R(2777537, 'result', result, false, false), J$.T(2777545, 0, 22, false)), U, false, false);
                                V = J$.W(2777593, 'V', J$.G(2777585, J$.R(2777569, 'result', result, false, false), J$.T(2777577, 1, 22, false)), V, false, false);
                                if (J$.C(133896, J$.M(2777641, J$.M(2777625, J$.R(2777601, 'this', this, false, false), 'modMult', false)(J$.R(2777609, 'V', V, false, false), J$.R(2777617, 'V', V, false, false)), 'equals', false)(J$.R(2777633, 'fourQ', fourQ, false, false)))) {
                                    if (J$.C(133888, J$.M(2777665, J$.R(2777649, 'V', V, false, false), 'testBit', false)(J$.T(2777657, 0, 22, false)))) {
                                        V = J$.W(2777697, 'V', J$.M(2777689, J$.R(2777673, 'V', V, false, false), 'add', false)(J$.I(typeof q === 'undefined' ? q = J$.R(2777681, 'q', undefined, true, true) : q = J$.R(2777681, 'q', q, true, true))), V, false, false);
                                    }
                                    V = J$.W(2777729, 'V', J$.M(2777721, J$.R(2777705, 'V', V, false, false), 'shiftRight', false)(J$.T(2777713, 1, 22, false)), V, false, false);
                                    return J$.Rt(2777769, J$.F(2777761, J$.R(2777737, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.I(typeof q === 'undefined' ? q = J$.R(2777745, 'q', undefined, true, true) : q = J$.R(2777745, 'q', q, true, true)), J$.R(2777753, 'V', V, false, false)));
                                }
                            } while (J$.C(133912, J$.C(133904, J$.M(2777801, J$.R(2777777, 'U', U, false, false), 'equals', false)(J$.G(2777793, J$.R(2777785, 'BigInteger', BigInteger, false, true), 'ONE'))) ? J$._() : J$.M(2777825, J$.R(2777809, 'U', U, false, false), 'equals', false)(J$.R(2777817, 'qMinusOne', qMinusOne, false, false))));
                            return J$.Rt(2777841, J$.T(2777833, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(2780481, J$e);
                        } finally {
                            if (J$.Fr(2780489))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2779369, J$.G(2777977, J$.R(2777969, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'lucasSequence', J$.T(2779361, function (P, Q, k) {
                jalangiLabel35:
                    while (true) {
                        try {
                            J$.Fe(2779257, arguments.callee, this, arguments);
                            arguments = J$.N(2779265, 'arguments', arguments, true, false, false);
                            P = J$.N(2779273, 'P', P, true, false, false);
                            Q = J$.N(2779281, 'Q', Q, true, false, false);
                            k = J$.N(2779289, 'k', k, true, false, false);
                            J$.N(2779297, 'n', n, false, false, false);
                            J$.N(2779305, 's', s, false, false, false);
                            J$.N(2779313, 'Uh', Uh, false, false, false);
                            J$.N(2779321, 'Vl', Vl, false, false, false);
                            J$.N(2779329, 'Vh', Vh, false, false, false);
                            J$.N(2779337, 'Ql', Ql, false, false, false);
                            J$.N(2779345, 'Qh', Qh, false, false, false);
                            J$.N(2779353, 'j', j, false, false, false);
                            var n = J$.W(2778001, 'n', J$.M(2777993, J$.R(2777985, 'k', k, false, false), 'bitLength', false)(), n, false, false);
                            var s = J$.W(2778025, 's', J$.M(2778017, J$.R(2778009, 'k', k, false, false), 'getLowestSetBit', false)(), s, false, false);
                            var Uh = J$.W(2778049, 'Uh', J$.G(2778041, J$.R(2778033, 'BigInteger', BigInteger, false, true), 'ONE'), Uh, false, false);
                            var Vl = J$.W(2778073, 'Vl', J$.G(2778065, J$.R(2778057, 'BigInteger', BigInteger, false, true), 'TWO'), Vl, false, false);
                            var Vh = J$.W(2778089, 'Vh', J$.R(2778081, 'P', P, false, false), Vh, false, false);
                            var Ql = J$.W(2778113, 'Ql', J$.G(2778105, J$.R(2778097, 'BigInteger', BigInteger, false, true), 'ONE'), Ql, false, false);
                            var Qh = J$.W(2778137, 'Qh', J$.G(2778129, J$.R(2778121, 'BigInteger', BigInteger, false, true), 'ONE'), Qh, false, false);
                            for (var j = J$.W(2778161, 'j', J$.B(410066, '-', J$.R(2778145, 'n', n, false, false), J$.T(2778153, 1, 22, false)), j, false, false); J$.C(133928, J$.B(410082, '>=', J$.R(2778169, 'j', j, false, false), J$.B(410074, '+', J$.R(2778177, 's', s, false, false), J$.T(2778185, 1, 22, false)))); j = J$.W(2778201, 'j', J$.B(410098, '-', J$.U(410090, '+', J$.R(2778193, 'j', j, false, false)), 1), j, false, false)) {
                                Ql = J$.W(2778241, 'Ql', J$.M(2778233, J$.R(2778209, 'this', this, false, false), 'modMult', false)(J$.R(2778217, 'Ql', Ql, false, false), J$.R(2778225, 'Qh', Qh, false, false)), Ql, false, false);
                                if (J$.C(133920, J$.M(2778265, J$.R(2778249, 'k', k, false, false), 'testBit', false)(J$.R(2778257, 'j', j, false, false)))) {
                                    Qh = J$.W(2778305, 'Qh', J$.M(2778297, J$.R(2778273, 'this', this, false, false), 'modMult', false)(J$.R(2778281, 'Ql', Ql, false, false), J$.R(2778289, 'Q', Q, false, false)), Qh, false, false);
                                    Uh = J$.W(2778345, 'Uh', J$.M(2778337, J$.R(2778313, 'this', this, false, false), 'modMult', false)(J$.R(2778321, 'Uh', Uh, false, false), J$.R(2778329, 'Vh', Vh, false, false)), Uh, false, false);
                                    Vl = J$.W(2778425, 'Vl', J$.M(2778417, J$.R(2778353, 'this', this, false, false), 'modReduce', false)(J$.M(2778409, J$.M(2778377, J$.R(2778361, 'Vh', Vh, false, false), 'multiply', false)(J$.R(2778369, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(2778401, J$.R(2778385, 'P', P, false, false), 'multiply', false)(J$.R(2778393, 'Ql', Ql, false, false)))), Vl, false, false);
                                    Vh = J$.W(2778505, 'Vh', J$.M(2778497, J$.R(2778433, 'this', this, false, false), 'modReduce', false)(J$.M(2778489, J$.M(2778457, J$.R(2778441, 'Vh', Vh, false, false), 'multiply', false)(J$.R(2778449, 'Vh', Vh, false, false)), 'subtract', false)(J$.M(2778481, J$.R(2778465, 'Qh', Qh, false, false), 'shiftLeft', false)(J$.T(2778473, 1, 22, false)))), Vh, false, false);
                                } else {
                                    Qh = J$.W(2778521, 'Qh', J$.R(2778513, 'Ql', Ql, false, false), Qh, false, false);
                                    Uh = J$.W(2778585, 'Uh', J$.M(2778577, J$.R(2778529, 'this', this, false, false), 'modReduce', false)(J$.M(2778569, J$.M(2778553, J$.R(2778537, 'Uh', Uh, false, false), 'multiply', false)(J$.R(2778545, 'Vl', Vl, false, false)), 'subtract', false)(J$.R(2778561, 'Ql', Ql, false, false))), Uh, false, false);
                                    Vh = J$.W(2778665, 'Vh', J$.M(2778657, J$.R(2778593, 'this', this, false, false), 'modReduce', false)(J$.M(2778649, J$.M(2778617, J$.R(2778601, 'Vh', Vh, false, false), 'multiply', false)(J$.R(2778609, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(2778641, J$.R(2778625, 'P', P, false, false), 'multiply', false)(J$.R(2778633, 'Ql', Ql, false, false)))), Vh, false, false);
                                    Vl = J$.W(2778745, 'Vl', J$.M(2778737, J$.R(2778673, 'this', this, false, false), 'modReduce', false)(J$.M(2778729, J$.M(2778697, J$.R(2778681, 'Vl', Vl, false, false), 'multiply', false)(J$.R(2778689, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(2778721, J$.R(2778705, 'Ql', Ql, false, false), 'shiftLeft', false)(J$.T(2778713, 1, 22, false)))), Vl, false, false);
                                }
                            }
                            Ql = J$.W(2778785, 'Ql', J$.M(2778777, J$.R(2778753, 'this', this, false, false), 'modMult', false)(J$.R(2778761, 'Ql', Ql, false, false), J$.R(2778769, 'Qh', Qh, false, false)), Ql, false, false);
                            Qh = J$.W(2778825, 'Qh', J$.M(2778817, J$.R(2778793, 'this', this, false, false), 'modMult', false)(J$.R(2778801, 'Ql', Ql, false, false), J$.R(2778809, 'Q', Q, false, false)), Qh, false, false);
                            Uh = J$.W(2778889, 'Uh', J$.M(2778881, J$.R(2778833, 'this', this, false, false), 'modReduce', false)(J$.M(2778873, J$.M(2778857, J$.R(2778841, 'Uh', Uh, false, false), 'multiply', false)(J$.R(2778849, 'Vl', Vl, false, false)), 'subtract', false)(J$.R(2778865, 'Ql', Ql, false, false))), Uh, false, false);
                            Vl = J$.W(2778969, 'Vl', J$.M(2778961, J$.R(2778897, 'this', this, false, false), 'modReduce', false)(J$.M(2778953, J$.M(2778921, J$.R(2778905, 'Vh', Vh, false, false), 'multiply', false)(J$.R(2778913, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(2778945, J$.R(2778929, 'P', P, false, false), 'multiply', false)(J$.R(2778937, 'Ql', Ql, false, false)))), Vl, false, false);
                            Ql = J$.W(2779009, 'Ql', J$.M(2779001, J$.R(2778977, 'this', this, false, false), 'modMult', false)(J$.R(2778985, 'Ql', Ql, false, false), J$.R(2778993, 'Qh', Qh, false, false)), Ql, false, false);
                            for (var j = J$.W(2779025, 'j', J$.T(2779017, 1, 22, false), j, false, false); J$.C(133936, J$.B(410106, '<=', J$.R(2779033, 'j', j, false, false), J$.R(2779041, 's', s, false, false))); j = J$.W(2779057, 'j', J$.B(410122, '+', J$.U(410114, '+', J$.R(2779049, 'j', j, false, false)), 1), j, false, false)) {
                                Uh = J$.W(2779097, 'Uh', J$.M(2779089, J$.R(2779065, 'this', this, false, false), 'modMult', false)(J$.R(2779073, 'Uh', Uh, false, false), J$.R(2779081, 'Vl', Vl, false, false)), Uh, false, false);
                                Vl = J$.W(2779177, 'Vl', J$.M(2779169, J$.R(2779105, 'this', this, false, false), 'modReduce', false)(J$.M(2779161, J$.M(2779129, J$.R(2779113, 'Vl', Vl, false, false), 'multiply', false)(J$.R(2779121, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(2779153, J$.R(2779137, 'Ql', Ql, false, false), 'shiftLeft', false)(J$.T(2779145, 1, 22, false)))), Vl, false, false);
                                Ql = J$.W(2779217, 'Ql', J$.M(2779209, J$.R(2779185, 'this', this, false, false), 'modMult', false)(J$.R(2779193, 'Ql', Ql, false, false), J$.R(2779201, 'Ql', Ql, false, false)), Ql, false, false);
                            }
                            return J$.Rt(2779249, J$.T(2779241, [
                                J$.R(2779225, 'Uh', Uh, false, false),
                                J$.R(2779233, 'Vl', Vl, false, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(2780497, J$e);
                        } finally {
                            if (J$.Fr(2780505))
                                continue jalangiLabel35;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var _exports = J$.W(2779409, '_exports', J$.T(2779401, {
                ECCurveFp: J$.R(2779377, 'ECCurveFp', ECCurveFp, false, true),
                ECPointFp: J$.R(2779385, 'ECPointFp', ECPointFp, false, true),
                ECFieldElementFp: J$.R(2779393, 'ECFieldElementFp', ECFieldElementFp, false, true)
            }, 11, false), _exports, false, true);
            J$.P(2779433, J$.I(typeof module === 'undefined' ? module = J$.R(2779417, 'module', undefined, true, true) : module = J$.R(2779417, 'module', module, true, true)), 'exports', J$.R(2779425, '_exports', _exports, false, true));
        } catch (J$e) {
            J$.Ex(2780513, J$e);
        } finally {
            if (J$.Sr(2780521))
                continue jalangiLabel36;
            else
                break jalangiLabel36;
        }
    }
// JALANGI DO NOT INSTRUMENT

