J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2666857, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/asn1/lib/ber/errors.js');
            J$.T(2666665, 'use strict', 21, false);
            J$.F(2666689, J$.I(typeof require === 'undefined' ? require = J$.R(2666673, 'require', undefined, true, true) : require = J$.R(2666673, 'require', require, true, true)), false)(J$.T(2666681, 'core-js/modules/es.function.name', 21, false));
            J$.P(2666849, J$.I(typeof module === 'undefined' ? module = J$.R(2666697, 'module', undefined, true, true) : module = J$.R(2666697, 'module', module, true, true)), 'exports', J$.T(2666841, {
                newInvalidAsn1Error: J$.T(2666833, function newInvalidAsn1Error(msg) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(2666801, arguments.callee, this, arguments);
                                arguments = J$.N(2666809, 'arguments', arguments, true, false, false);
                                msg = J$.N(2666817, 'msg', msg, true, false, false);
                                J$.N(2666825, 'e', e, false, false, false);
                                var e = J$.W(2666721, 'e', J$.F(2666713, J$.I(typeof Error === 'undefined' ? Error = J$.R(2666705, 'Error', undefined, true, true) : Error = J$.R(2666705, 'Error', Error, true, true)), true)(), e, false, false);
                                J$.P(2666745, J$.R(2666729, 'e', e, false, false), 'name', J$.T(2666737, 'InvalidAsn1Error', 21, false));
                                J$.P(2666777, J$.R(2666753, 'e', e, false, false), 'message', J$.C(128960, J$.R(2666761, 'msg', msg, false, false)) ? J$._() : J$.T(2666769, '', 21, false));
                                return J$.Rt(2666793, J$.R(2666785, 'e', e, false, false));
                            } catch (J$e) {
                                J$.Ex(2666865, J$e);
                            } finally {
                                if (J$.Fr(2666873))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2666881, J$e);
        } finally {
            if (J$.Sr(2666889))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

