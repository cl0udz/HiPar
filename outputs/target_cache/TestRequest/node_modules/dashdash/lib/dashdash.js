J$.noInstrEval = false;
jalangiLabel44:
    while (true) {
        try {
            J$.Se(2760697, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/dashdash/lib/dashdash.js');
            function renderTemplate(s, d) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2743777, arguments.callee, this, arguments);
                            arguments = J$.N(2743785, 'arguments', arguments, true, false, false);
                            s = J$.N(2743793, 's', s, true, false, false);
                            d = J$.N(2743801, 'd', d, true, false, false);
                            return J$.Rt(2743769, J$.M(2743761, J$.R(2743641, 's', s, false, false), 'replace', false)(J$.T(2743649, /{{([a-zA-Z]+)}}/g, 14, false), J$.T(2743753, function (match, key) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2743721, arguments.callee, this, arguments);
                                            arguments = J$.N(2743729, 'arguments', arguments, true, false, false);
                                            match = J$.N(2743737, 'match', match, true, false, false);
                                            key = J$.N(2743745, 'key', key, true, false, false);
                                            return J$.Rt(2743713, J$.C(131968, J$.M(2743673, J$.R(2743657, 'd', d, false, false), 'hasOwnProperty', false)(J$.R(2743665, 'key', key, false, false))) ? J$.G(2743697, J$.R(2743681, 'd', d, false, false), J$.R(2743689, 'key', key, false, false)) : J$.R(2743705, 'match', match, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2761105, J$e);
                                        } finally {
                                            if (J$.Fr(2761113))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(2761121, J$e);
                        } finally {
                            if (J$.Fr(2761129))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function shallowCopy(obj) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2743977, arguments.callee, this, arguments);
                            arguments = J$.N(2743985, 'arguments', arguments, true, false, false);
                            obj = J$.N(2743993, 'obj', obj, true, false, false);
                            J$.N(2744001, 'copy', copy, false, false, false);
                            if (J$.C(131976, J$.U(407810, '!', J$.R(2743809, 'obj', obj, false, false)))) {
                                return J$.Rt(2743825, J$.R(2743817, 'obj', obj, false, false));
                            }
                            var copy = J$.W(2743841, 'copy', J$.T(2743833, {}, 11, false), copy, false, false);
                            J$.M(2743953, J$.M(2743865, J$.I(typeof Object === 'undefined' ? Object = J$.R(2743849, 'Object', undefined, true, true) : Object = J$.R(2743849, 'Object', Object, true, true)), 'keys', false)(J$.R(2743857, 'obj', obj, false, false)), 'forEach', false)(J$.T(2743945, function (k) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2743921, arguments.callee, this, arguments);
                                            arguments = J$.N(2743929, 'arguments', arguments, true, false, false);
                                            k = J$.N(2743937, 'k', k, true, false, false);
                                            J$.P(2743913, J$.R(2743873, 'copy', copy, false, false), J$.R(2743881, 'k', k, false, false), J$.G(2743905, J$.R(2743889, 'obj', obj, false, false), J$.R(2743897, 'k', k, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2761137, J$e);
                                        } finally {
                                            if (J$.Fr(2761145))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2743969, J$.R(2743961, 'copy', copy, false, false));
                        } catch (J$e) {
                            J$.Ex(2761153, J$e);
                        } finally {
                            if (J$.Fr(2761161))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function space(n) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2744113, arguments.callee, this, arguments);
                            arguments = J$.N(2744121, 'arguments', arguments, true, false, false);
                            n = J$.N(2744129, 'n', n, true, false, false);
                            J$.N(2744137, 's', s, false, false, false);
                            J$.N(2744145, 'i', i, false, false, false);
                            var s = J$.W(2744017, 's', J$.T(2744009, '', 21, false), s, false, false);
                            for (var i = J$.W(2744033, 'i', J$.T(2744025, 0, 22, false), i, false, false); J$.C(131984, J$.B(407818, '<', J$.R(2744041, 'i', i, false, false), J$.R(2744049, 'n', n, false, false))); J$.B(407842, '-', i = J$.W(2744065, 'i', J$.B(407834, '+', J$.U(407826, '+', J$.R(2744057, 'i', i, false, false)), 1), i, false, false), 1)) {
                                s = J$.W(2744089, 's', J$.B(407850, '+', J$.R(2744081, 's', s, false, false), J$.T(2744073, ' ', 21, false)), s, false, false);
                            }
                            return J$.Rt(2744105, J$.R(2744097, 's', s, false, false));
                        } catch (J$e) {
                            J$.Ex(2761169, J$e);
                        } finally {
                            if (J$.Fr(2761177))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function makeIndent(arg, deflen, name) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2744345, arguments.callee, this, arguments);
                            arguments = J$.N(2744353, 'arguments', arguments, true, false, false);
                            arg = J$.N(2744361, 'arg', arg, true, false, false);
                            deflen = J$.N(2744369, 'deflen', deflen, true, false, false);
                            name = J$.N(2744377, 'name', name, true, false, false);
                            if (J$.C(132016, J$.C(131992, J$.B(407858, '===', J$.R(2744153, 'arg', arg, false, false), J$.T(2744161, null, 25, false))) ? J$._() : J$.B(407866, '===', J$.R(2744169, 'arg', arg, false, false), J$.T(2744177, undefined, 24, false))))
                                return J$.Rt(2744209, J$.F(2744201, J$.R(2744185, 'space', space, false, true), false)(J$.R(2744193, 'deflen', deflen, false, false)));
                            else if (J$.C(132008, J$.B(407882, '===', J$.U(407874, 'typeof', J$.R(2744217, 'arg', arg, false, false)), J$.T(2744225, 'number', 21, false))))
                                return J$.Rt(2744257, J$.F(2744249, J$.R(2744233, 'space', space, false, true), false)(J$.R(2744241, 'arg', arg, false, false)));
                            else if (J$.C(132000, J$.B(407898, '===', J$.U(407890, 'typeof', J$.R(2744265, 'arg', arg, false, false)), J$.T(2744273, 'string', 21, false))))
                                return J$.Rt(2744289, J$.R(2744281, 'arg', arg, false, false));
                            else
                                J$.M(2744337, J$.R(2744297, 'assert', assert, false, true), 'fail', false)(J$.B(407922, '+', J$.B(407914, '+', J$.B(407906, '+', J$.T(2744305, 'invalid "', 21, false), J$.R(2744313, 'name', name, false, false)), J$.T(2744321, '": not a string or number: ', 21, false)), J$.R(2744329, 'arg', arg, false, false)));
                        } catch (J$e) {
                            J$.Ex(2761185, J$e);
                        } finally {
                            if (J$.Fr(2761193))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function textwrap(s, width) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2744769, arguments.callee, this, arguments);
                            arguments = J$.N(2744777, 'arguments', arguments, true, false, false);
                            s = J$.N(2744785, 's', s, true, false, false);
                            width = J$.N(2744793, 'width', width, true, false, false);
                            J$.N(2744801, 'words', words, false, false, false);
                            J$.N(2744809, 'lines', lines, false, false, false);
                            J$.N(2744817, 'line', line, false, false, false);
                            var words = J$.W(2744417, 'words', J$.M(2744409, J$.M(2744393, J$.R(2744385, 's', s, false, false), 'trim', false)(), 'split', false)(J$.T(2744401, /\s+/, 14, false)), words, false, false);
                            var lines = J$.W(2744433, 'lines', J$.T(2744425, [], 10, false), lines, false, false);
                            var line = J$.W(2744449, 'line', J$.T(2744441, '', 21, false), line, false, false);
                            J$.M(2744721, J$.R(2744457, 'words', words, false, false), 'forEach', false)(J$.T(2744713, function (w) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(2744681, arguments.callee, this, arguments);
                                            arguments = J$.N(2744689, 'arguments', arguments, true, false, false);
                                            w = J$.N(2744697, 'w', w, true, false, false);
                                            J$.N(2744705, 'newLength', newLength, false, false, false);
                                            var newLength = J$.W(2744497, 'newLength', J$.B(407930, '+', J$.G(2744473, J$.R(2744465, 'line', line, false, false), 'length'), J$.G(2744489, J$.R(2744481, 'w', w, false, false), 'length')), newLength, false, false);
                                            if (J$.C(132024, J$.B(407938, '>', J$.G(2744513, J$.R(2744505, 'line', line, false, false), 'length'), J$.T(2744521, 0, 22, false))))
                                                newLength = J$.W(2744545, 'newLength', J$.B(407946, '+', J$.R(2744537, 'newLength', newLength, false, false), J$.T(2744529, 1, 22, false)), newLength, false, false);
                                            if (J$.C(132032, J$.B(407954, '>', J$.R(2744553, 'newLength', newLength, false, false), J$.R(2744561, 'width', width, false, false)))) {
                                                J$.M(2744585, J$.R(2744569, 'lines', lines, false, false), 'push', false)(J$.R(2744577, 'line', line, false, false));
                                                line = J$.W(2744601, 'line', J$.T(2744593, '', 21, false), line, false, false);
                                            }
                                            if (J$.C(132040, J$.B(407962, '>', J$.G(2744617, J$.R(2744609, 'line', line, false, false), 'length'), J$.T(2744625, 0, 22, false))))
                                                line = J$.W(2744649, 'line', J$.B(407970, '+', J$.R(2744641, 'line', line, false, false), J$.T(2744633, ' ', 21, false)), line, false, false);
                                            line = J$.W(2744673, 'line', J$.B(407978, '+', J$.R(2744665, 'line', line, false, false), J$.R(2744657, 'w', w, false, false)), line, false, false);
                                        } catch (J$e) {
                                            J$.Ex(2761201, J$e);
                                        } finally {
                                            if (J$.Fr(2761209))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(2744745, J$.R(2744729, 'lines', lines, false, false), 'push', false)(J$.R(2744737, 'line', line, false, false));
                            return J$.Rt(2744761, J$.R(2744753, 'lines', lines, false, false));
                        } catch (J$e) {
                            J$.Ex(2761217, J$e);
                        } finally {
                            if (J$.Fr(2761225))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function optionKeyFromName(name) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(2744865, arguments.callee, this, arguments);
                            arguments = J$.N(2744873, 'arguments', arguments, true, false, false);
                            name = J$.N(2744881, 'name', name, true, false, false);
                            return J$.Rt(2744857, J$.M(2744849, J$.R(2744825, 'name', name, false, false), 'replace', false)(J$.T(2744833, /-/g, 14, false), J$.T(2744841, '_', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2761233, J$e);
                        } finally {
                            if (J$.Fr(2761241))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseBool(option, optstr, arg) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(2744921, arguments.callee, this, arguments);
                            arguments = J$.N(2744929, 'arguments', arguments, true, false, false);
                            option = J$.N(2744937, 'option', option, true, false, false);
                            optstr = J$.N(2744945, 'optstr', optstr, true, false, false);
                            arg = J$.N(2744953, 'arg', arg, true, false, false);
                            return J$.Rt(2744913, J$.F(2744905, J$.I(typeof Boolean === 'undefined' ? Boolean = J$.R(2744889, 'Boolean', undefined, true, true) : Boolean = J$.R(2744889, 'Boolean', Boolean, true, true)), false)(J$.R(2744897, 'arg', arg, false, false)));
                        } catch (J$e) {
                            J$.Ex(2761249, J$e);
                        } finally {
                            if (J$.Fr(2761257))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseString(option, optstr, arg) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(2745009, arguments.callee, this, arguments);
                            arguments = J$.N(2745017, 'arguments', arguments, true, false, false);
                            option = J$.N(2745025, 'option', option, true, false, false);
                            optstr = J$.N(2745033, 'optstr', optstr, true, false, false);
                            arg = J$.N(2745041, 'arg', arg, true, false, false);
                            J$.M(2744985, J$.R(2744961, 'assert', assert, false, true), 'string', false)(J$.R(2744969, 'arg', arg, false, false), J$.T(2744977, 'arg', 21, false));
                            return J$.Rt(2745001, J$.R(2744993, 'arg', arg, false, false));
                        } catch (J$e) {
                            J$.Ex(2761265, J$e);
                        } finally {
                            if (J$.Fr(2761273))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseNumber(option, optstr, arg) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(2745209, arguments.callee, this, arguments);
                            arguments = J$.N(2745217, 'arguments', arguments, true, false, false);
                            option = J$.N(2745225, 'option', option, true, false, false);
                            optstr = J$.N(2745233, 'optstr', optstr, true, false, false);
                            arg = J$.N(2745241, 'arg', arg, true, false, false);
                            J$.N(2745249, 'num', num, false, false, false);
                            J$.M(2745073, J$.R(2745049, 'assert', assert, false, true), 'string', false)(J$.R(2745057, 'arg', arg, false, false), J$.T(2745065, 'arg', 21, false));
                            var num = J$.W(2745105, 'num', J$.F(2745097, J$.I(typeof Number === 'undefined' ? Number = J$.R(2745081, 'Number', undefined, true, true) : Number = J$.R(2745081, 'Number', Number, true, true)), false)(J$.R(2745089, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(132048, J$.F(2745129, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(2745113, 'isNaN', undefined, true, true) : isNaN = J$.R(2745113, 'isNaN', isNaN, true, true)), false)(J$.R(2745121, 'num', num, false, false)))) {
                                throw J$.F(2745185, J$.I(typeof Error === 'undefined' ? Error = J$.R(2745137, 'Error', undefined, true, true) : Error = J$.R(2745137, 'Error', Error, true, true)), true)(J$.F(2745177, J$.R(2745145, 'format', format, false, true), false)(J$.T(2745153, 'arg for "%s" is not a number: "%s"', 21, false), J$.R(2745161, 'optstr', optstr, false, false), J$.R(2745169, 'arg', arg, false, false)));
                            }
                            return J$.Rt(2745201, J$.R(2745193, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(2761281, J$e);
                        } finally {
                            if (J$.Fr(2761289))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseInteger(option, optstr, arg) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(2745441, arguments.callee, this, arguments);
                            arguments = J$.N(2745449, 'arguments', arguments, true, false, false);
                            option = J$.N(2745457, 'option', option, true, false, false);
                            optstr = J$.N(2745465, 'optstr', optstr, true, false, false);
                            arg = J$.N(2745473, 'arg', arg, true, false, false);
                            J$.N(2745481, 'num', num, false, false, false);
                            J$.M(2745281, J$.R(2745257, 'assert', assert, false, true), 'string', false)(J$.R(2745265, 'arg', arg, false, false), J$.T(2745273, 'arg', 21, false));
                            var num = J$.W(2745313, 'num', J$.F(2745305, J$.I(typeof Number === 'undefined' ? Number = J$.R(2745289, 'Number', undefined, true, true) : Number = J$.R(2745289, 'Number', Number, true, true)), false)(J$.R(2745297, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(132064, J$.C(132056, J$.U(407986, '!', J$.M(2745337, J$.T(2745321, /^[0-9-]+$/, 14, false), 'test', false)(J$.R(2745329, 'arg', arg, false, false)))) ? J$._() : J$.F(2745361, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(2745345, 'isNaN', undefined, true, true) : isNaN = J$.R(2745345, 'isNaN', isNaN, true, true)), false)(J$.R(2745353, 'num', num, false, false)))) {
                                throw J$.F(2745417, J$.I(typeof Error === 'undefined' ? Error = J$.R(2745369, 'Error', undefined, true, true) : Error = J$.R(2745369, 'Error', Error, true, true)), true)(J$.F(2745409, J$.R(2745377, 'format', format, false, true), false)(J$.T(2745385, 'arg for "%s" is not an integer: "%s"', 21, false), J$.R(2745393, 'optstr', optstr, false, false), J$.R(2745401, 'arg', arg, false, false)));
                            }
                            return J$.Rt(2745433, J$.R(2745425, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(2761297, J$e);
                        } finally {
                            if (J$.Fr(2761305))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parsePositiveInteger(option, optstr, arg) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(2745689, arguments.callee, this, arguments);
                            arguments = J$.N(2745697, 'arguments', arguments, true, false, false);
                            option = J$.N(2745705, 'option', option, true, false, false);
                            optstr = J$.N(2745713, 'optstr', optstr, true, false, false);
                            arg = J$.N(2745721, 'arg', arg, true, false, false);
                            J$.N(2745729, 'num', num, false, false, false);
                            J$.M(2745513, J$.R(2745489, 'assert', assert, false, true), 'string', false)(J$.R(2745497, 'arg', arg, false, false), J$.T(2745505, 'arg', 21, false));
                            var num = J$.W(2745545, 'num', J$.F(2745537, J$.I(typeof Number === 'undefined' ? Number = J$.R(2745521, 'Number', undefined, true, true) : Number = J$.R(2745521, 'Number', Number, true, true)), false)(J$.R(2745529, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(132088, J$.C(132080, J$.C(132072, J$.U(407994, '!', J$.M(2745569, J$.T(2745553, /^[0-9]+$/, 14, false), 'test', false)(J$.R(2745561, 'arg', arg, false, false)))) ? J$._() : J$.F(2745593, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(2745577, 'isNaN', undefined, true, true) : isNaN = J$.R(2745577, 'isNaN', isNaN, true, true)), false)(J$.R(2745585, 'num', num, false, false))) ? J$._() : J$.B(408002, '===', J$.R(2745601, 'num', num, false, false), J$.T(2745609, 0, 22, false)))) {
                                throw J$.F(2745665, J$.I(typeof Error === 'undefined' ? Error = J$.R(2745617, 'Error', undefined, true, true) : Error = J$.R(2745617, 'Error', Error, true, true)), true)(J$.F(2745657, J$.R(2745625, 'format', format, false, true), false)(J$.T(2745633, 'arg for "%s" is not a positive integer: "%s"', 21, false), J$.R(2745641, 'optstr', optstr, false, false), J$.R(2745649, 'arg', arg, false, false)));
                            }
                            return J$.Rt(2745681, J$.R(2745673, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(2761313, J$e);
                        } finally {
                            if (J$.Fr(2761321))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseDate(option, optstr, arg) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(2746057, arguments.callee, this, arguments);
                            arguments = J$.N(2746065, 'arguments', arguments, true, false, false);
                            option = J$.N(2746073, 'option', option, true, false, false);
                            optstr = J$.N(2746081, 'optstr', optstr, true, false, false);
                            arg = J$.N(2746089, 'arg', arg, true, false, false);
                            J$.N(2746097, 'date', date, false, false, false);
                            J$.M(2745761, J$.R(2745737, 'assert', assert, false, true), 'string', false)(J$.R(2745745, 'arg', arg, false, false), J$.T(2745753, 'arg', 21, false));
                            var date;
                            if (J$.C(132104, J$.M(2745785, J$.T(2745769, /^\d+$/, 14, false), 'test', false)(J$.R(2745777, 'arg', arg, false, false)))) {
                                date = J$.W(2745841, 'date', J$.F(2745833, J$.I(typeof Date === 'undefined' ? Date = J$.R(2745793, 'Date', undefined, true, true) : Date = J$.R(2745793, 'Date', Date, true, true)), true)(J$.B(408010, '*', J$.F(2745817, J$.I(typeof Number === 'undefined' ? Number = J$.R(2745801, 'Number', undefined, true, true) : Number = J$.R(2745801, 'Number', Number, true, true)), false)(J$.R(2745809, 'arg', arg, false, false)), J$.T(2745825, 1000, 22, false))), date, false, false);
                            } else if (J$.C(132096, J$.M(2745865, J$.T(2745849, /^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?Z?)?$/i, 14, false), 'test', false)(J$.R(2745857, 'arg', arg, false, false)))) {
                                date = J$.W(2745897, 'date', J$.F(2745889, J$.I(typeof Date === 'undefined' ? Date = J$.R(2745873, 'Date', undefined, true, true) : Date = J$.R(2745873, 'Date', Date, true, true)), true)(J$.R(2745881, 'arg', arg, false, false)), date, false, false);
                            } else {
                                throw J$.F(2745953, J$.I(typeof Error === 'undefined' ? Error = J$.R(2745905, 'Error', undefined, true, true) : Error = J$.R(2745905, 'Error', Error, true, true)), true)(J$.F(2745945, J$.R(2745913, 'format', format, false, true), false)(J$.T(2745921, 'arg for "%s" is not a valid date format: "%s"', 21, false), J$.R(2745929, 'optstr', optstr, false, false), J$.R(2745937, 'arg', arg, false, false)));
                            }
                            if (J$.C(132112, J$.B(408018, '===', J$.M(2745969, J$.R(2745961, 'date', date, false, false), 'toString', false)(), J$.T(2745977, 'Invalid Date', 21, false)))) {
                                throw J$.F(2746033, J$.I(typeof Error === 'undefined' ? Error = J$.R(2745985, 'Error', undefined, true, true) : Error = J$.R(2745985, 'Error', Error, true, true)), true)(J$.F(2746025, J$.R(2745993, 'format', format, false, true), false)(J$.T(2746001, 'arg for "%s" is an invalid date: "%s"', 21, false), J$.R(2746009, 'optstr', optstr, false, false), J$.R(2746017, 'arg', arg, false, false)));
                            }
                            return J$.Rt(2746049, J$.R(2746041, 'date', date, false, false));
                        } catch (J$e) {
                            J$.Ex(2761329, J$e);
                        } finally {
                            if (J$.Fr(2761337))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Parser(config) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(2748513, arguments.callee, this, arguments);
                            arguments = J$.N(2748521, 'arguments', arguments, true, false, false);
                            config = J$.N(2748529, 'config', config, true, false, false);
                            J$.N(2748537, 'self', self, false, false, false);
                            J$.N(2748545, 'i', i, false, false, false);
                            J$.N(2748553, 'o', o, false, false, false);
                            J$.N(2748561, 'env', env, false, false, false);
                            J$.M(2746561, J$.R(2746537, 'assert', assert, false, true), 'object', false)(J$.R(2746545, 'config', config, false, false), J$.T(2746553, 'config', 21, false));
                            J$.M(2746601, J$.R(2746569, 'assert', assert, false, true), 'arrayOfObject', false)(J$.G(2746585, J$.R(2746577, 'config', config, false, false), 'options'), J$.T(2746593, 'config.options', 21, false));
                            J$.M(2746641, J$.R(2746609, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2746625, J$.R(2746617, 'config', config, false, false), 'interspersed'), J$.T(2746633, 'config.interspersed', 21, false));
                            var self = J$.W(2746657, 'self', J$.R(2746649, 'this', this, false, false), self, false, false);
                            J$.P(2746721, J$.R(2746665, 'this', this, false, false), 'interspersed', J$.C(132120, J$.B(408026, '!==', J$.G(2746681, J$.R(2746673, 'config', config, false, false), 'interspersed'), J$.T(2746689, undefined, 24, false))) ? J$.G(2746705, J$.R(2746697, 'config', config, false, false), 'interspersed') : J$.T(2746713, true, 23, false));
                            J$.P(2746785, J$.R(2746729, 'this', this, false, false), 'allowUnknown', J$.C(132128, J$.B(408034, '!==', J$.G(2746745, J$.R(2746737, 'config', config, false, false), 'allowUnknown'), J$.T(2746753, undefined, 24, false))) ? J$.G(2746769, J$.R(2746761, 'config', config, false, false), 'allowUnknown') : J$.T(2746777, false, 23, false));
                            J$.P(2746889, J$.R(2746793, 'this', this, false, false), 'options', J$.M(2746881, J$.G(2746809, J$.R(2746801, 'config', config, false, false), 'options'), 'map', false)(J$.T(2746873, function (o) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(2746849, arguments.callee, this, arguments);
                                            arguments = J$.N(2746857, 'arguments', arguments, true, false, false);
                                            o = J$.N(2746865, 'o', o, true, false, false);
                                            return J$.Rt(2746841, J$.F(2746833, J$.R(2746817, 'shallowCopy', shallowCopy, false, true), false)(J$.R(2746825, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2761345, J$e);
                                        } finally {
                                            if (J$.Fr(2761353))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                            J$.P(2746913, J$.R(2746897, 'this', this, false, false), 'optionFromName', J$.T(2746905, {}, 11, false));
                            J$.P(2746937, J$.R(2746921, 'this', this, false, false), 'optionFromEnv', J$.T(2746929, {}, 11, false));
                            for (var i = J$.W(2746953, 'i', J$.T(2746945, 0, 22, false), i, false, false); J$.C(132216, J$.B(408042, '<', J$.R(2746961, 'i', i, false, false), J$.G(2746985, J$.G(2746977, J$.R(2746969, 'this', this, false, false), 'options'), 'length'))); J$.B(408066, '-', i = J$.W(2747001, 'i', J$.B(408058, '+', J$.U(408050, '+', J$.R(2746993, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var o = J$.W(2747041, 'o', J$.G(2747033, J$.G(2747017, J$.R(2747009, 'this', this, false, false), 'options'), J$.R(2747025, 'i', i, false, false)), o, false, false);
                                if (J$.C(132144, J$.C(132136, J$.B(408074, '!==', J$.G(2747057, J$.R(2747049, 'o', o, false, false), 'group'), J$.T(2747065, undefined, 24, false))) ? J$.B(408082, '!==', J$.G(2747081, J$.R(2747073, 'o', o, false, false), 'group'), J$.T(2747089, null, 25, false)) : J$._())) {
                                    J$.M(2747153, J$.R(2747097, 'assert', assert, false, true), 'optionalString', false)(J$.G(2747113, J$.R(2747105, 'o', o, false, false), 'group'), J$.F(2747145, J$.R(2747121, 'format', format, false, true), false)(J$.T(2747129, 'config.options.%d.group', 21, false), J$.R(2747137, 'i', i, false, false)));
                                    continue;
                                }
                                J$.M(2747257, J$.R(2747161, 'assert', assert, false, true), 'ok', false)(J$.G(2747193, J$.R(2747169, 'optionTypes', optionTypes, false, true), J$.G(2747185, J$.R(2747177, 'o', o, false, false), 'type')), J$.F(2747249, J$.R(2747201, 'format', format, false, true), false)(J$.T(2747209, 'invalid config.options.%d.type: "%s" in %j', 21, false), J$.R(2747217, 'i', i, false, false), J$.G(2747233, J$.R(2747225, 'o', o, false, false), 'type'), J$.R(2747241, 'o', o, false, false)));
                                J$.M(2747321, J$.R(2747265, 'assert', assert, false, true), 'optionalString', false)(J$.G(2747281, J$.R(2747273, 'o', o, false, false), 'name'), J$.F(2747313, J$.R(2747289, 'format', format, false, true), false)(J$.T(2747297, 'config.options.%d.name', 21, false), J$.R(2747305, 'i', i, false, false)));
                                J$.M(2747385, J$.R(2747329, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2747345, J$.R(2747337, 'o', o, false, false), 'names'), J$.F(2747377, J$.R(2747353, 'format', format, false, true), false)(J$.T(2747361, 'config.options.%d.names', 21, false), J$.R(2747369, 'i', i, false, false)));
                                J$.M(2747497, J$.R(2747393, 'assert', assert, false, true), 'ok', false)(J$.C(132168, J$.C(132152, J$.G(2747409, J$.R(2747401, 'o', o, false, false), 'name')) ? J$._() : J$.G(2747425, J$.R(2747417, 'o', o, false, false), 'names')) ? J$.U(408090, '!', J$.C(132160, J$.G(2747441, J$.R(2747433, 'o', o, false, false), 'name')) ? J$.G(2747457, J$.R(2747449, 'o', o, false, false), 'names') : J$._()) : J$._(), J$.F(2747489, J$.R(2747465, 'format', format, false, true), false)(J$.T(2747473, 'exactly one of "name" or "names" required: %j', 21, false), J$.R(2747481, 'o', o, false, false)));
                                J$.M(2747561, J$.R(2747505, 'assert', assert, false, true), 'optionalString', false)(J$.G(2747521, J$.R(2747513, 'o', o, false, false), 'help'), J$.F(2747553, J$.R(2747529, 'format', format, false, true), false)(J$.T(2747537, 'config.options.%d.help', 21, false), J$.R(2747545, 'i', i, false, false)));
                                var env = J$.W(2747593, 'env', J$.C(132176, J$.G(2747577, J$.R(2747569, 'o', o, false, false), 'env')) ? J$._() : J$.T(2747585, [], 10, false), env, false, false);
                                if (J$.C(132184, J$.B(408106, '===', J$.U(408098, 'typeof', J$.R(2747601, 'env', env, false, false)), J$.T(2747609, 'string', 21, false)))) {
                                    env = J$.W(2747633, 'env', J$.T(2747625, [J$.R(2747617, 'env', env, false, false)], 10, false), env, false, false);
                                }
                                J$.M(2747689, J$.R(2747641, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.R(2747649, 'env', env, false, false), J$.F(2747681, J$.R(2747657, 'format', format, false, true), false)(J$.T(2747665, 'config.options.%d.env', 21, false), J$.R(2747673, 'i', i, false, false)));
                                J$.M(2747753, J$.R(2747697, 'assert', assert, false, true), 'optionalString', false)(J$.G(2747713, J$.R(2747705, 'o', o, false, false), 'helpGroup'), J$.F(2747745, J$.R(2747721, 'format', format, false, true), false)(J$.T(2747729, 'config.options.%d.helpGroup', 21, false), J$.R(2747737, 'i', i, false, false)));
                                J$.M(2747817, J$.R(2747761, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2747777, J$.R(2747769, 'o', o, false, false), 'helpWrap'), J$.F(2747809, J$.R(2747785, 'format', format, false, true), false)(J$.T(2747793, 'config.options.%d.helpWrap', 21, false), J$.R(2747801, 'i', i, false, false)));
                                J$.M(2747881, J$.R(2747825, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2747841, J$.R(2747833, 'o', o, false, false), 'hidden'), J$.F(2747873, J$.R(2747849, 'format', format, false, true), false)(J$.T(2747857, 'config.options.%d.hidden', 21, false), J$.R(2747865, 'i', i, false, false)));
                                if (J$.C(132192, J$.G(2747897, J$.R(2747889, 'o', o, false, false), 'name'))) {
                                    J$.P(2747937, J$.R(2747905, 'o', o, false, false), 'names', J$.T(2747929, [J$.G(2747921, J$.R(2747913, 'o', o, false, false), 'name')], 10, false));
                                } else {
                                    J$.M(2748017, J$.R(2747945, 'assert', assert, false, true), 'string', false)(J$.G(2747977, J$.G(2747961, J$.R(2747953, 'o', o, false, false), 'names'), J$.T(2747969, 0, 22, false)), J$.F(2748009, J$.R(2747985, 'format', format, false, true), false)(J$.T(2747993, 'config.options.%d.names is empty', 21, false), J$.R(2748001, 'i', i, false, false)));
                                }
                                J$.P(2748081, J$.R(2748025, 'o', o, false, false), 'key', J$.F(2748073, J$.R(2748033, 'optionKeyFromName', optionKeyFromName, false, true), false)(J$.G(2748065, J$.G(2748049, J$.R(2748041, 'o', o, false, false), 'names'), J$.T(2748057, 0, 22, false))));
                                J$.M(2748297, J$.G(2748097, J$.R(2748089, 'o', o, false, false), 'names'), 'forEach', false)(J$.T(2748289, function (n) {
                                    jalangiLabel17:
                                        while (true) {
                                            try {
                                                J$.Fe(2748265, arguments.callee, this, arguments);
                                                arguments = J$.N(2748273, 'arguments', arguments, true, false, false);
                                                n = J$.N(2748281, 'n', n, true, false, false);
                                                if (J$.C(132200, J$.G(2748129, J$.G(2748113, J$.R(2748105, 'self', self, false, false), 'optionFromName'), J$.R(2748121, 'n', n, false, false)))) {
                                                    throw J$.F(2748217, J$.I(typeof Error === 'undefined' ? Error = J$.R(2748137, 'Error', undefined, true, true) : Error = J$.R(2748137, 'Error', Error, true, true)), true)(J$.F(2748209, J$.R(2748145, 'format', format, false, true), false)(J$.T(2748153, 'option name collision: "%s" used in %j and %j', 21, false), J$.R(2748161, 'n', n, false, false), J$.G(2748193, J$.G(2748177, J$.R(2748169, 'self', self, false, false), 'optionFromName'), J$.R(2748185, 'n', n, false, false)), J$.R(2748201, 'o', o, false, false)));
                                                }
                                                J$.P(2748257, J$.G(2748233, J$.R(2748225, 'self', self, false, false), 'optionFromName'), J$.R(2748241, 'n', n, false, false), J$.R(2748249, 'o', o, false, false));
                                            } catch (J$e) {
                                                J$.Ex(2761361, J$e);
                                            } finally {
                                                if (J$.Fr(2761369))
                                                    continue jalangiLabel17;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(2748505, J$.R(2748305, 'env', env, false, false), 'forEach', false)(J$.T(2748497, function (n) {
                                    jalangiLabel18:
                                        while (true) {
                                            try {
                                                J$.Fe(2748473, arguments.callee, this, arguments);
                                                arguments = J$.N(2748481, 'arguments', arguments, true, false, false);
                                                n = J$.N(2748489, 'n', n, true, false, false);
                                                if (J$.C(132208, J$.G(2748337, J$.G(2748321, J$.R(2748313, 'self', self, false, false), 'optionFromEnv'), J$.R(2748329, 'n', n, false, false)))) {
                                                    throw J$.F(2748425, J$.I(typeof Error === 'undefined' ? Error = J$.R(2748345, 'Error', undefined, true, true) : Error = J$.R(2748345, 'Error', Error, true, true)), true)(J$.F(2748417, J$.R(2748353, 'format', format, false, true), false)(J$.T(2748361, 'option env collision: "%s" used in %j and %j', 21, false), J$.R(2748369, 'n', n, false, false), J$.G(2748401, J$.G(2748385, J$.R(2748377, 'self', self, false, false), 'optionFromEnv'), J$.R(2748393, 'n', n, false, false)), J$.R(2748409, 'o', o, false, false)));
                                                }
                                                J$.P(2748465, J$.G(2748441, J$.R(2748433, 'self', self, false, false), 'optionFromEnv'), J$.R(2748449, 'n', n, false, false), J$.R(2748457, 'o', o, false, false));
                                            } catch (J$e) {
                                                J$.Ex(2761377, J$e);
                                            } finally {
                                                if (J$.Fr(2761385))
                                                    continue jalangiLabel18;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2761393, J$e);
                        } finally {
                            if (J$.Fr(2761401))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bashCompletionSpecFromOptions(args) {
                jalangiLabel36:
                    while (true) {
                        try {
                            J$.Fe(2758505, arguments.callee, this, arguments);
                            arguments = J$.N(2758513, 'arguments', arguments, true, false, false);
                            args = J$.N(2758521, 'args', args, true, false, false);
                            J$.N(2758529, 'context', context, false, false, false);
                            J$.N(2758537, 'includeHidden', includeHidden, false, false, false);
                            J$.N(2758545, 'spec', spec, false, false, false);
                            J$.N(2758553, 'shortopts', shortopts, false, false, false);
                            J$.N(2758561, 'longopts', longopts, false, false, false);
                            J$.N(2758569, 'optargs', optargs, false, false, false);
                            J$.M(2757073, J$.R(2757049, 'assert', assert, false, true), 'object', false)(J$.R(2757057, 'args', args, false, false), J$.T(2757065, 'args', 21, false));
                            J$.M(2757113, J$.R(2757081, 'assert', assert, false, true), 'object', false)(J$.G(2757097, J$.R(2757089, 'args', args, false, false), 'options'), J$.T(2757105, 'args.options', 21, false));
                            J$.M(2757153, J$.R(2757121, 'assert', assert, false, true), 'optionalString', false)(J$.G(2757137, J$.R(2757129, 'args', args, false, false), 'context'), J$.T(2757145, 'args.context', 21, false));
                            J$.M(2757193, J$.R(2757161, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2757177, J$.R(2757169, 'args', args, false, false), 'includeHidden'), J$.T(2757185, 'args.includeHidden', 21, false));
                            J$.M(2757233, J$.R(2757201, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2757217, J$.R(2757209, 'args', args, false, false), 'argtypes'), J$.T(2757225, 'args.argtypes', 21, false));
                            var context = J$.W(2757265, 'context', J$.C(132976, J$.G(2757249, J$.R(2757241, 'args', args, false, false), 'context')) ? J$._() : J$.T(2757257, '', 21, false), context, false, false);
                            var includeHidden = J$.W(2757321, 'includeHidden', J$.C(132984, J$.B(409186, '===', J$.G(2757281, J$.R(2757273, 'args', args, false, false), 'includeHidden'), J$.T(2757289, undefined, 24, false))) ? J$.T(2757297, false, 23, false) : J$.G(2757313, J$.R(2757305, 'args', args, false, false), 'includeHidden'), includeHidden, false, false);
                            var spec = J$.W(2757337, 'spec', J$.T(2757329, [], 10, false), spec, false, false);
                            var shortopts = J$.W(2757353, 'shortopts', J$.T(2757345, [], 10, false), shortopts, false, false);
                            var longopts = J$.W(2757369, 'longopts', J$.T(2757361, [], 10, false), longopts, false, false);
                            var optargs = J$.W(2757385, 'optargs', J$.T(2757377, [], 10, false), optargs, false, false);
                            J$.M(2758129, J$.C(132992, J$.G(2757401, J$.R(2757393, 'args', args, false, false), 'options')) ? J$._() : J$.T(2757409, [], 10, false), 'forEach', false)(J$.T(2758121, function (o) {
                                jalangiLabel35:
                                    while (true) {
                                        try {
                                            J$.Fe(2758073, arguments.callee, this, arguments);
                                            arguments = J$.N(2758081, 'arguments', arguments, true, false, false);
                                            o = J$.N(2758089, 'o', o, true, false, false);
                                            J$.N(2758097, 'optNames', optNames, false, false, false);
                                            J$.N(2758105, 'optType', optType, false, false, false);
                                            J$.N(2758113, 'completionType', completionType, false, false, false);
                                            if (J$.C(133008, J$.C(133000, J$.B(409194, '!==', J$.G(2757425, J$.R(2757417, 'o', o, false, false), 'group'), J$.T(2757433, undefined, 24, false))) ? J$.B(409202, '!==', J$.G(2757449, J$.R(2757441, 'o', o, false, false), 'group'), J$.T(2757457, null, 25, false)) : J$._())) {
                                                return J$.Rt(2757465, undefined);
                                            }
                                            var optNames = J$.W(2757513, 'optNames', J$.C(133016, J$.G(2757481, J$.R(2757473, 'o', o, false, false), 'names')) ? J$._() : J$.T(2757505, [J$.G(2757497, J$.R(2757489, 'o', o, false, false), 'name')], 10, false), optNames, false, false);
                                            var optType = J$.W(2757553, 'optType', J$.F(2757545, J$.R(2757521, 'getOptionType', getOptionType, false, true), false)(J$.G(2757537, J$.R(2757529, 'o', o, false, false), 'type')), optType, false, false);
                                            if (J$.C(133104, J$.G(2757569, J$.R(2757561, 'optType', optType, false, false), 'takesArg'))) {
                                                var completionType = J$.W(2757625, 'completionType', J$.C(133032, J$.C(133024, J$.G(2757585, J$.R(2757577, 'o', o, false, false), 'completionType')) ? J$._() : J$.G(2757601, J$.R(2757593, 'optType', optType, false, false), 'completionType')) ? J$._() : J$.G(2757617, J$.R(2757609, 'o', o, false, false), 'type'), completionType, false, false);
                                                J$.M(2757905, J$.R(2757633, 'optNames', optNames, false, false), 'forEach', false)(J$.T(2757897, function (optName) {
                                                    jalangiLabel33:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2757873, arguments.callee, this, arguments);
                                                                arguments = J$.N(2757881, 'arguments', arguments, true, false, false);
                                                                optName = J$.N(2757889, 'optName', optName, true, false, false);
                                                                if (J$.C(133072, J$.B(409210, '===', J$.G(2757649, J$.R(2757641, 'optName', optName, false, false), 'length'), J$.T(2757657, 1, 22, false)))) {
                                                                    if (J$.C(133048, J$.C(133040, J$.R(2757665, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(409218, '!', J$.G(2757681, J$.R(2757673, 'o', o, false, false), 'hidden')))) {
                                                                        J$.M(2757713, J$.R(2757689, 'shortopts', shortopts, false, false), 'push', false)(J$.B(409226, '+', J$.T(2757697, '-', 21, false), J$.R(2757705, 'optName', optName, false, false)));
                                                                    }
                                                                    J$.M(2757761, J$.R(2757721, 'optargs', optargs, false, false), 'push', false)(J$.B(409250, '+', J$.B(409242, '+', J$.B(409234, '+', J$.T(2757729, '-', 21, false), J$.R(2757737, 'optName', optName, false, false)), J$.T(2757745, '=', 21, false)), J$.R(2757753, 'completionType', completionType, false, false)));
                                                                } else {
                                                                    if (J$.C(133064, J$.C(133056, J$.R(2757769, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(409258, '!', J$.G(2757785, J$.R(2757777, 'o', o, false, false), 'hidden')))) {
                                                                        J$.M(2757817, J$.R(2757793, 'longopts', longopts, false, false), 'push', false)(J$.B(409266, '+', J$.T(2757801, '--', 21, false), J$.R(2757809, 'optName', optName, false, false)));
                                                                    }
                                                                    J$.M(2757865, J$.R(2757825, 'optargs', optargs, false, false), 'push', false)(J$.B(409290, '+', J$.B(409282, '+', J$.B(409274, '+', J$.T(2757833, '--', 21, false), J$.R(2757841, 'optName', optName, false, false)), J$.T(2757849, '=', 21, false)), J$.R(2757857, 'completionType', completionType, false, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(2761617, J$e);
                                                            } finally {
                                                                if (J$.Fr(2761625))
                                                                    continue jalangiLabel33;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } else {
                                                J$.M(2758065, J$.R(2757913, 'optNames', optNames, false, false), 'forEach', false)(J$.T(2758057, function (optName) {
                                                    jalangiLabel34:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2758033, arguments.callee, this, arguments);
                                                                arguments = J$.N(2758041, 'arguments', arguments, true, false, false);
                                                                optName = J$.N(2758049, 'optName', optName, true, false, false);
                                                                if (J$.C(133096, J$.C(133080, J$.R(2757921, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(409298, '!', J$.G(2757937, J$.R(2757929, 'o', o, false, false), 'hidden')))) {
                                                                    if (J$.C(133088, J$.B(409306, '===', J$.G(2757953, J$.R(2757945, 'optName', optName, false, false), 'length'), J$.T(2757961, 1, 22, false)))) {
                                                                        J$.M(2757993, J$.R(2757969, 'shortopts', shortopts, false, false), 'push', false)(J$.B(409314, '+', J$.T(2757977, '-', 21, false), J$.R(2757985, 'optName', optName, false, false)));
                                                                    } else {
                                                                        J$.M(2758025, J$.R(2758001, 'longopts', longopts, false, false), 'push', false)(J$.B(409322, '+', J$.T(2758009, '--', 21, false), J$.R(2758017, 'optName', optName, false, false)));
                                                                    }
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(2761633, J$e);
                                                            } finally {
                                                                if (J$.Fr(2761641))
                                                                    continue jalangiLabel34;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2761649, J$e);
                                        } finally {
                                            if (J$.Fr(2761657))
                                                continue jalangiLabel35;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(2758209, J$.R(2758137, 'spec', spec, false, false), 'push', false)(J$.F(2758201, J$.R(2758145, 'format', format, false, true), false)(J$.T(2758153, 'local cmd%s_shortopts="%s"', 21, false), J$.R(2758161, 'context', context, false, false), J$.M(2758193, J$.M(2758177, J$.R(2758169, 'shortopts', shortopts, false, false), 'sort', false)(), 'join', false)(J$.T(2758185, ' ', 21, false))));
                            J$.M(2758289, J$.R(2758217, 'spec', spec, false, false), 'push', false)(J$.F(2758281, J$.R(2758225, 'format', format, false, true), false)(J$.T(2758233, 'local cmd%s_longopts="%s"', 21, false), J$.R(2758241, 'context', context, false, false), J$.M(2758273, J$.M(2758257, J$.R(2758249, 'longopts', longopts, false, false), 'sort', false)(), 'join', false)(J$.T(2758265, ' ', 21, false))));
                            J$.M(2758369, J$.R(2758297, 'spec', spec, false, false), 'push', false)(J$.F(2758361, J$.R(2758305, 'format', format, false, true), false)(J$.T(2758313, 'local cmd%s_optargs="%s"', 21, false), J$.R(2758321, 'context', context, false, false), J$.M(2758353, J$.M(2758337, J$.R(2758329, 'optargs', optargs, false, false), 'sort', false)(), 'join', false)(J$.T(2758345, ' ', 21, false))));
                            if (J$.C(133112, J$.G(2758385, J$.R(2758377, 'args', args, false, false), 'argtypes'))) {
                                J$.M(2758465, J$.R(2758393, 'spec', spec, false, false), 'push', false)(J$.F(2758457, J$.R(2758401, 'format', format, false, true), false)(J$.T(2758409, 'local cmd%s_argtypes="%s"', 21, false), J$.R(2758417, 'context', context, false, false), J$.M(2758449, J$.G(2758433, J$.R(2758425, 'args', args, false, false), 'argtypes'), 'join', false)(J$.T(2758441, ' ', 21, false))));
                            }
                            return J$.Rt(2758497, J$.M(2758489, J$.R(2758473, 'spec', spec, false, false), 'join', false)(J$.T(2758481, '\n', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2761665, J$e);
                        } finally {
                            if (J$.Fr(2761673))
                                continue jalangiLabel36;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bashCompletionFromOptions(args) {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(2759009, arguments.callee, this, arguments);
                            arguments = J$.N(2759017, 'arguments', arguments, true, false, false);
                            args = J$.N(2759025, 'args', args, true, false, false);
                            J$.N(2759033, 'data', data, false, false, false);
                            J$.N(2759041, 'template', template, false, false, false);
                            J$.M(2758601, J$.R(2758577, 'assert', assert, false, true), 'object', false)(J$.R(2758585, 'args', args, false, false), J$.T(2758593, 'args', 21, false));
                            J$.M(2758641, J$.R(2758609, 'assert', assert, false, true), 'object', false)(J$.G(2758625, J$.R(2758617, 'args', args, false, false), 'options'), J$.T(2758633, 'args.options', 21, false));
                            J$.M(2758681, J$.R(2758649, 'assert', assert, false, true), 'string', false)(J$.G(2758665, J$.R(2758657, 'args', args, false, false), 'name'), J$.T(2758673, 'args.name', 21, false));
                            J$.M(2758721, J$.R(2758689, 'assert', assert, false, true), 'optionalString', false)(J$.G(2758705, J$.R(2758697, 'args', args, false, false), 'specExtra'), J$.T(2758713, 'args.specExtra', 21, false));
                            J$.M(2758761, J$.R(2758729, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2758745, J$.R(2758737, 'args', args, false, false), 'argtypes'), J$.T(2758753, 'args.argtypes', 21, false));
                            var data = J$.W(2758865, 'data', J$.T(2758857, {
                                name: J$.G(2758777, J$.R(2758769, 'args', args, false, false), 'name'),
                                date: J$.F(2758793, J$.I(typeof Date === 'undefined' ? Date = J$.R(2758785, 'Date', undefined, true, true) : Date = J$.R(2758785, 'Date', Date, true, true)), true)(),
                                spec: J$.F(2758849, J$.R(2758801, 'bashCompletionSpecFromOptions', bashCompletionSpecFromOptions, false, true), false)(J$.T(2758841, {
                                    options: J$.G(2758817, J$.R(2758809, 'args', args, false, false), 'options'),
                                    argtypes: J$.G(2758833, J$.R(2758825, 'args', args, false, false), 'argtypes')
                                }, 11, false))
                            }, 11, false), data, false, false);
                            if (J$.C(133120, J$.G(2758881, J$.R(2758873, 'args', args, false, false), 'specExtra'))) {
                                J$.A(2758921, J$.R(2758889, 'data', data, false, false), 'spec', '+')(J$.B(409330, '+', J$.T(2758897, '\n\n', 21, false), J$.G(2758913, J$.R(2758905, 'args', args, false, false), 'specExtra')));
                            }
                            var template = J$.W(2758961, 'template', J$.M(2758953, J$.R(2758929, 'fs', fs, false, true), 'readFileSync', false)(J$.R(2758937, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, true), J$.T(2758945, 'utf8', 21, false)), template, false, false);
                            return J$.Rt(2759001, J$.F(2758993, J$.R(2758969, 'renderTemplate', renderTemplate, false, true), false)(J$.R(2758977, 'template', template, false, false), J$.R(2758985, 'data', data, false, false)));
                        } catch (J$e) {
                            J$.Ex(2761681, J$e);
                        } finally {
                            if (J$.Fr(2761689))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createParser(config) {
                jalangiLabel38:
                    while (true) {
                        try {
                            J$.Fe(2759081, arguments.callee, this, arguments);
                            arguments = J$.N(2759089, 'arguments', arguments, true, false, false);
                            config = J$.N(2759097, 'config', config, true, false, false);
                            return J$.Rt(2759073, J$.F(2759065, J$.R(2759049, 'Parser', Parser, false, true), true)(J$.R(2759057, 'config', config, false, false)));
                        } catch (J$e) {
                            J$.Ex(2761697, J$e);
                        } finally {
                            if (J$.Fr(2761705))
                                continue jalangiLabel38;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parse(config) {
                jalangiLabel39:
                    while (true) {
                        try {
                            J$.Fe(2759393, arguments.callee, this, arguments);
                            arguments = J$.N(2759401, 'arguments', arguments, true, false, false);
                            config = J$.N(2759409, 'config', config, true, false, false);
                            J$.N(2759417, 'argv', argv, false, false, false);
                            J$.N(2759425, 'env', env, false, false, false);
                            J$.N(2759433, 'parser', parser, false, false, false);
                            J$.M(2759129, J$.R(2759105, 'assert', assert, false, true), 'object', false)(J$.R(2759113, 'config', config, false, false), J$.T(2759121, 'config', 21, false));
                            J$.M(2759169, J$.R(2759137, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2759153, J$.R(2759145, 'config', config, false, false), 'argv'), J$.T(2759161, 'config.argv', 21, false));
                            J$.M(2759209, J$.R(2759177, 'assert', assert, false, true), 'optionalObject', false)(J$.G(2759193, J$.R(2759185, 'config', config, false, false), 'env'), J$.T(2759201, 'config.env', 21, false));
                            var config = J$.W(2759241, 'config', J$.F(2759233, J$.R(2759217, 'shallowCopy', shallowCopy, false, true), false)(J$.R(2759225, 'config', config, false, false)), config, false, false);
                            var argv = J$.W(2759265, 'argv', J$.G(2759257, J$.R(2759249, 'config', config, false, false), 'argv'), argv, false, false);
                            J$.B(409338, 'delete', J$.R(2759273, 'config', config, false, false), 'argv');
                            var env = J$.W(2759297, 'env', J$.G(2759289, J$.R(2759281, 'config', config, false, false), 'env'), env, false, false);
                            J$.B(409346, 'delete', J$.R(2759305, 'config', config, false, false), 'env');
                            var parser = J$.W(2759337, 'parser', J$.F(2759329, J$.R(2759313, 'Parser', Parser, false, true), true)(J$.R(2759321, 'config', config, false, false)), parser, false, false);
                            return J$.Rt(2759385, J$.M(2759377, J$.R(2759345, 'parser', parser, false, false), 'parse', false)(J$.T(2759369, {
                                argv: J$.R(2759353, 'argv', argv, false, false),
                                env: J$.R(2759361, 'env', env, false, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(2761713, J$e);
                        } finally {
                            if (J$.Fr(2761721))
                                continue jalangiLabel39;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addOptionType(optionType) {
                jalangiLabel40:
                    while (true) {
                        try {
                            J$.Fe(2759873, arguments.callee, this, arguments);
                            arguments = J$.N(2759881, 'arguments', arguments, true, false, false);
                            optionType = J$.N(2759889, 'optionType', optionType, true, false, false);
                            J$.M(2759465, J$.R(2759441, 'assert', assert, false, true), 'object', false)(J$.R(2759449, 'optionType', optionType, false, false), J$.T(2759457, 'optionType', 21, false));
                            J$.M(2759505, J$.R(2759473, 'assert', assert, false, true), 'string', false)(J$.G(2759489, J$.R(2759481, 'optionType', optionType, false, false), 'name'), J$.T(2759497, 'optionType.name', 21, false));
                            J$.M(2759545, J$.R(2759513, 'assert', assert, false, true), 'bool', false)(J$.G(2759529, J$.R(2759521, 'optionType', optionType, false, false), 'takesArg'), J$.T(2759537, 'optionType.takesArg', 21, false));
                            if (J$.C(133128, J$.G(2759561, J$.R(2759553, 'optionType', optionType, false, false), 'takesArg'))) {
                                J$.M(2759601, J$.R(2759569, 'assert', assert, false, true), 'string', false)(J$.G(2759585, J$.R(2759577, 'optionType', optionType, false, false), 'helpArg'), J$.T(2759593, 'optionType.helpArg', 21, false));
                            }
                            J$.M(2759641, J$.R(2759609, 'assert', assert, false, true), 'func', false)(J$.G(2759625, J$.R(2759617, 'optionType', optionType, false, false), 'parseArg'), J$.T(2759633, 'optionType.parseArg', 21, false));
                            J$.M(2759681, J$.R(2759649, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2759665, J$.R(2759657, 'optionType', optionType, false, false), 'array'), J$.T(2759673, 'optionType.array', 21, false));
                            J$.M(2759721, J$.R(2759689, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2759705, J$.R(2759697, 'optionType', optionType, false, false), 'arrayFlatten'), J$.T(2759713, 'optionType.arrayFlatten', 21, false));
                            J$.P(2759865, J$.R(2759729, 'optionTypes', optionTypes, false, true), J$.G(2759745, J$.R(2759737, 'optionType', optionType, false, false), 'name'), J$.T(2759857, {
                                takesArg: J$.G(2759761, J$.R(2759753, 'optionType', optionType, false, false), 'takesArg'),
                                helpArg: J$.G(2759777, J$.R(2759769, 'optionType', optionType, false, false), 'helpArg'),
                                parseArg: J$.G(2759793, J$.R(2759785, 'optionType', optionType, false, false), 'parseArg'),
                                array: J$.G(2759809, J$.R(2759801, 'optionType', optionType, false, false), 'array'),
                                arrayFlatten: J$.G(2759825, J$.R(2759817, 'optionType', optionType, false, false), 'arrayFlatten'),
                                'default': J$.G(2759849, J$.R(2759833, 'optionType', optionType, false, false), J$.T(2759841, 'default', 21, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2761729, J$e);
                        } finally {
                            if (J$.Fr(2761737))
                                continue jalangiLabel40;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getOptionType(name) {
                jalangiLabel41:
                    while (true) {
                        try {
                            J$.Fe(2759961, arguments.callee, this, arguments);
                            arguments = J$.N(2759969, 'arguments', arguments, true, false, false);
                            name = J$.N(2759977, 'name', name, true, false, false);
                            J$.M(2759921, J$.R(2759897, 'assert', assert, false, true), 'string', false)(J$.R(2759905, 'name', name, false, false), J$.T(2759913, 'name', 21, false));
                            return J$.Rt(2759953, J$.G(2759945, J$.R(2759929, 'optionTypes', optionTypes, false, true), J$.R(2759937, 'name', name, false, false)));
                        } catch (J$e) {
                            J$.Ex(2761745, J$e);
                        } finally {
                            if (J$.Fr(2761753))
                                continue jalangiLabel41;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function synopsisFromOpt(o) {
                jalangiLabel43:
                    while (true) {
                        try {
                            J$.Fe(2760497, arguments.callee, this, arguments);
                            arguments = J$.N(2760505, 'arguments', arguments, true, false, false);
                            o = J$.N(2760513, 'o', o, true, false, false);
                            J$.N(2760521, 'names', names, false, false, false);
                            J$.N(2760529, 'type', type, false, false, false);
                            J$.N(2760537, 'helpArg', helpArg, false, false, false);
                            J$.N(2760545, 'parts', parts, false, false, false);
                            J$.M(2760009, J$.R(2759985, 'assert', assert, false, true), 'object', false)(J$.R(2759993, 'o', o, false, false), J$.T(2760001, 'o', 21, false));
                            if (J$.C(133136, J$.M(2760033, J$.R(2760017, 'o', o, false, false), 'hasOwnProperty', false)(J$.T(2760025, 'group', 21, false)))) {
                                return J$.Rt(2760049, J$.T(2760041, null, 25, false));
                            }
                            var names = J$.W(2760097, 'names', J$.C(133144, J$.G(2760065, J$.R(2760057, 'o', o, false, false), 'names')) ? J$._() : J$.T(2760089, [J$.G(2760081, J$.R(2760073, 'o', o, false, false), 'name')], 10, false), names, false, false);
                            var type = J$.W(2760137, 'type', J$.F(2760129, J$.R(2760105, 'getOptionType', getOptionType, false, true), false)(J$.G(2760121, J$.R(2760113, 'o', o, false, false), 'type')), type, false, false);
                            var helpArg = J$.W(2760193, 'helpArg', J$.C(133168, J$.C(133160, J$.G(2760153, J$.R(2760145, 'o', o, false, false), 'helpArg')) ? J$._() : J$.C(133152, J$.R(2760161, 'type', type, false, false)) ? J$.G(2760177, J$.R(2760169, 'type', type, false, false), 'helpArg') : J$._()) ? J$._() : J$.T(2760185, 'ARG', 21, false), helpArg, false, false);
                            var parts = J$.W(2760209, 'parts', J$.T(2760201, [], 10, false), parts, false, false);
                            J$.M(2760441, J$.R(2760217, 'names', names, false, false), 'forEach', false)(J$.T(2760433, function (name) {
                                jalangiLabel42:
                                    while (true) {
                                        try {
                                            J$.Fe(2760401, arguments.callee, this, arguments);
                                            arguments = J$.N(2760409, 'arguments', arguments, true, false, false);
                                            name = J$.N(2760417, 'name', name, true, false, false);
                                            J$.N(2760425, 'part', part, false, false, false);
                                            var part = J$.W(2760273, 'part', J$.B(409362, '+', J$.C(133176, J$.B(409354, '===', J$.G(2760233, J$.R(2760225, 'name', name, false, false), 'length'), J$.T(2760241, 1, 22, false))) ? J$.T(2760249, '-', 21, false) : J$.T(2760257, '--', 21, false), J$.R(2760265, 'name', name, false, false)), part, false, false);
                                            if (J$.C(133200, J$.C(133184, J$.R(2760281, 'type', type, false, false)) ? J$.G(2760297, J$.R(2760289, 'type', type, false, false), 'takesArg') : J$._())) {
                                                part = J$.W(2760369, 'part', J$.B(409394, '+', J$.R(2760361, 'part', part, false, false), J$.C(133192, J$.B(409370, '===', J$.G(2760313, J$.R(2760305, 'name', name, false, false), 'length'), J$.T(2760321, 1, 22, false))) ? J$.B(409378, '+', J$.T(2760329, ' ', 21, false), J$.R(2760337, 'helpArg', helpArg, false, false)) : J$.B(409386, '+', J$.T(2760345, '=', 21, false), J$.R(2760353, 'helpArg', helpArg, false, false))), part, false, false);
                                            }
                                            J$.M(2760393, J$.R(2760377, 'parts', parts, false, false), 'push', false)(J$.R(2760385, 'part', part, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2761761, J$e);
                                        } finally {
                                            if (J$.Fr(2761769))
                                                continue jalangiLabel42;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2760489, J$.B(409410, '+', J$.B(409402, '+', J$.T(2760449, '[ ', 21, false), J$.M(2760473, J$.R(2760457, 'parts', parts, false, false), 'join', false)(J$.T(2760465, ' | ', 21, false))), J$.T(2760481, ' ]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2761777, J$e);
                        } finally {
                            if (J$.Fr(2761785))
                                continue jalangiLabel43;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2760705, 'assert', assert, false, false, false);
            J$.N(2760713, 'format', format, false, false, false);
            J$.N(2760721, 'fs', fs, false, false, false);
            J$.N(2760729, 'path', path, false, false, false);
            J$.N(2760737, 'DEBUG', DEBUG, false, false, false);
            J$.N(2760745, 'debug', debug, false, false, false);
            renderTemplate = J$.N(2760761, 'renderTemplate', J$.T(2760753, renderTemplate, 12, false), true, false, false);
            shallowCopy = J$.N(2760777, 'shallowCopy', J$.T(2760769, shallowCopy, 12, false), true, false, false);
            space = J$.N(2760793, 'space', J$.T(2760785, space, 12, false), true, false, false);
            makeIndent = J$.N(2760809, 'makeIndent', J$.T(2760801, makeIndent, 12, false), true, false, false);
            textwrap = J$.N(2760825, 'textwrap', J$.T(2760817, textwrap, 12, false), true, false, false);
            optionKeyFromName = J$.N(2760841, 'optionKeyFromName', J$.T(2760833, optionKeyFromName, 12, false), true, false, false);
            parseBool = J$.N(2760857, 'parseBool', J$.T(2760849, parseBool, 12, false), true, false, false);
            parseString = J$.N(2760873, 'parseString', J$.T(2760865, parseString, 12, false), true, false, false);
            parseNumber = J$.N(2760889, 'parseNumber', J$.T(2760881, parseNumber, 12, false), true, false, false);
            parseInteger = J$.N(2760905, 'parseInteger', J$.T(2760897, parseInteger, 12, false), true, false, false);
            parsePositiveInteger = J$.N(2760921, 'parsePositiveInteger', J$.T(2760913, parsePositiveInteger, 12, false), true, false, false);
            parseDate = J$.N(2760937, 'parseDate', J$.T(2760929, parseDate, 12, false), true, false, false);
            J$.N(2760945, 'optionTypes', optionTypes, false, false, false);
            Parser = J$.N(2760961, 'Parser', J$.T(2760953, Parser, 12, false), true, false, false);
            J$.N(2760969, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, false, false);
            bashCompletionSpecFromOptions = J$.N(2760985, 'bashCompletionSpecFromOptions', J$.T(2760977, bashCompletionSpecFromOptions, 12, false), true, false, false);
            bashCompletionFromOptions = J$.N(2761001, 'bashCompletionFromOptions', J$.T(2760993, bashCompletionFromOptions, 12, false), true, false, false);
            createParser = J$.N(2761017, 'createParser', J$.T(2761009, createParser, 12, false), true, false, false);
            parse = J$.N(2761033, 'parse', J$.T(2761025, parse, 12, false), true, false, false);
            addOptionType = J$.N(2761049, 'addOptionType', J$.T(2761041, addOptionType, 12, false), true, false, false);
            getOptionType = J$.N(2761065, 'getOptionType', J$.T(2761057, getOptionType, 12, false), true, false, false);
            synopsisFromOpt = J$.N(2761081, 'synopsisFromOpt', J$.T(2761073, synopsisFromOpt, 12, false), true, false, false);
            J$.T(2742937, 'use strict', 21, false);
            J$.F(2742961, J$.I(typeof require === 'undefined' ? require = J$.R(2742945, 'require', undefined, true, true) : require = J$.R(2742945, 'require', require, true, true)), false)(J$.T(2742953, 'core-js/modules/es.array.concat', 21, false));
            J$.F(2742985, J$.I(typeof require === 'undefined' ? require = J$.R(2742969, 'require', undefined, true, true) : require = J$.R(2742969, 'require', require, true, true)), false)(J$.T(2742977, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2743009, J$.I(typeof require === 'undefined' ? require = J$.R(2742993, 'require', undefined, true, true) : require = J$.R(2742993, 'require', require, true, true)), false)(J$.T(2743001, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2743033, J$.I(typeof require === 'undefined' ? require = J$.R(2743017, 'require', undefined, true, true) : require = J$.R(2743017, 'require', require, true, true)), false)(J$.T(2743025, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2743057, J$.I(typeof require === 'undefined' ? require = J$.R(2743041, 'require', undefined, true, true) : require = J$.R(2743041, 'require', require, true, true)), false)(J$.T(2743049, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2743081, J$.I(typeof require === 'undefined' ? require = J$.R(2743065, 'require', undefined, true, true) : require = J$.R(2743065, 'require', require, true, true)), false)(J$.T(2743073, 'core-js/modules/es.array.join', 21, false));
            J$.F(2743105, J$.I(typeof require === 'undefined' ? require = J$.R(2743089, 'require', undefined, true, true) : require = J$.R(2743089, 'require', require, true, true)), false)(J$.T(2743097, 'core-js/modules/es.array.map', 21, false));
            J$.F(2743129, J$.I(typeof require === 'undefined' ? require = J$.R(2743113, 'require', undefined, true, true) : require = J$.R(2743113, 'require', require, true, true)), false)(J$.T(2743121, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2743153, J$.I(typeof require === 'undefined' ? require = J$.R(2743137, 'require', undefined, true, true) : require = J$.R(2743137, 'require', require, true, true)), false)(J$.T(2743145, 'core-js/modules/es.array.sort', 21, false));
            J$.F(2743177, J$.I(typeof require === 'undefined' ? require = J$.R(2743161, 'require', undefined, true, true) : require = J$.R(2743161, 'require', require, true, true)), false)(J$.T(2743169, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2743201, J$.I(typeof require === 'undefined' ? require = J$.R(2743185, 'require', undefined, true, true) : require = J$.R(2743185, 'require', require, true, true)), false)(J$.T(2743193, 'core-js/modules/es.function.name', 21, false));
            J$.F(2743225, J$.I(typeof require === 'undefined' ? require = J$.R(2743209, 'require', undefined, true, true) : require = J$.R(2743209, 'require', require, true, true)), false)(J$.T(2743217, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(2743249, J$.I(typeof require === 'undefined' ? require = J$.R(2743233, 'require', undefined, true, true) : require = J$.R(2743233, 'require', require, true, true)), false)(J$.T(2743241, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2743273, J$.I(typeof require === 'undefined' ? require = J$.R(2743257, 'require', undefined, true, true) : require = J$.R(2743257, 'require', require, true, true)), false)(J$.T(2743265, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2743297, J$.I(typeof require === 'undefined' ? require = J$.R(2743281, 'require', undefined, true, true) : require = J$.R(2743281, 'require', require, true, true)), false)(J$.T(2743289, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2743321, J$.I(typeof require === 'undefined' ? require = J$.R(2743305, 'require', undefined, true, true) : require = J$.R(2743305, 'require', require, true, true)), false)(J$.T(2743313, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2743345, J$.I(typeof require === 'undefined' ? require = J$.R(2743329, 'require', undefined, true, true) : require = J$.R(2743329, 'require', require, true, true)), false)(J$.T(2743337, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2743369, J$.I(typeof require === 'undefined' ? require = J$.R(2743353, 'require', undefined, true, true) : require = J$.R(2743353, 'require', require, true, true)), false)(J$.T(2743361, 'core-js/modules/es.string.split', 21, false));
            J$.F(2743393, J$.I(typeof require === 'undefined' ? require = J$.R(2743377, 'require', undefined, true, true) : require = J$.R(2743377, 'require', require, true, true)), false)(J$.T(2743385, 'core-js/modules/es.string.trim', 21, false));
            J$.F(2743417, J$.I(typeof require === 'undefined' ? require = J$.R(2743401, 'require', undefined, true, true) : require = J$.R(2743401, 'require', require, true, true)), false)(J$.T(2743409, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var assert = J$.W(2743449, 'assert', J$.F(2743441, J$.I(typeof require === 'undefined' ? require = J$.R(2743425, 'require', undefined, true, true) : require = J$.R(2743425, 'require', require, true, true)), false)(J$.T(2743433, 'assert-plus', 21, false)), assert, false, true);
            var format = J$.W(2743489, 'format', J$.G(2743481, J$.F(2743473, J$.I(typeof require === 'undefined' ? require = J$.R(2743457, 'require', undefined, true, true) : require = J$.R(2743457, 'require', require, true, true)), false)(J$.T(2743465, 'util', 21, false)), 'format'), format, false, true);
            var fs = J$.W(2743521, 'fs', J$.F(2743513, J$.I(typeof require === 'undefined' ? require = J$.R(2743497, 'require', undefined, true, true) : require = J$.R(2743497, 'require', require, true, true)), false)(J$.T(2743505, 'fs', 21, false)), fs, false, true);
            var path = J$.W(2743553, 'path', J$.F(2743545, J$.I(typeof require === 'undefined' ? require = J$.R(2743529, 'require', undefined, true, true) : require = J$.R(2743529, 'require', require, true, true)), false)(J$.T(2743537, 'path', 21, false)), path, false, true);
            var DEBUG = J$.W(2743569, 'DEBUG', J$.T(2743561, true, 23, false), DEBUG, false, true);
            if (J$.C(131960, J$.R(2743577, 'DEBUG', DEBUG, false, true))) {
                var debug = J$.W(2743601, 'debug', J$.G(2743593, J$.I(typeof console === 'undefined' ? console = J$.R(2743585, 'console', undefined, true, true) : console = J$.R(2743585, 'console', console, true, true)), 'warn'), debug, false, true);
            } else {
                var debug = J$.W(2743633, 'debug', J$.T(2743625, function debug() {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(2743609, arguments.callee, this, arguments);
                                arguments = J$.N(2743617, 'arguments', arguments, true, false, false);
                            } catch (J$e) {
                                J$.Ex(2761089, J$e);
                            } finally {
                                if (J$.Fr(2761097))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false), debug, false, true);
            }
            var optionTypes = J$.W(2746529, 'optionTypes', J$.T(2746521, {
                bool: J$.T(2746121, {
                    takesArg: J$.T(2746105, false, 23, false),
                    parseArg: J$.R(2746113, 'parseBool', parseBool, false, true)
                }, 11, false),
                string: J$.T(2746153, {
                    takesArg: J$.T(2746129, true, 23, false),
                    helpArg: J$.T(2746137, 'ARG', 21, false),
                    parseArg: J$.R(2746145, 'parseString', parseString, false, true)
                }, 11, false),
                number: J$.T(2746185, {
                    takesArg: J$.T(2746161, true, 23, false),
                    helpArg: J$.T(2746169, 'NUM', 21, false),
                    parseArg: J$.R(2746177, 'parseNumber', parseNumber, false, true)
                }, 11, false),
                integer: J$.T(2746217, {
                    takesArg: J$.T(2746193, true, 23, false),
                    helpArg: J$.T(2746201, 'INT', 21, false),
                    parseArg: J$.R(2746209, 'parseInteger', parseInteger, false, true)
                }, 11, false),
                positiveInteger: J$.T(2746249, {
                    takesArg: J$.T(2746225, true, 23, false),
                    helpArg: J$.T(2746233, 'INT', 21, false),
                    parseArg: J$.R(2746241, 'parsePositiveInteger', parsePositiveInteger, false, true)
                }, 11, false),
                date: J$.T(2746281, {
                    takesArg: J$.T(2746257, true, 23, false),
                    helpArg: J$.T(2746265, 'DATE', 21, false),
                    parseArg: J$.R(2746273, 'parseDate', parseDate, false, true)
                }, 11, false),
                arrayOfBool: J$.T(2746313, {
                    takesArg: J$.T(2746289, false, 23, false),
                    array: J$.T(2746297, true, 23, false),
                    parseArg: J$.R(2746305, 'parseBool', parseBool, false, true)
                }, 11, false),
                arrayOfString: J$.T(2746353, {
                    takesArg: J$.T(2746321, true, 23, false),
                    helpArg: J$.T(2746329, 'ARG', 21, false),
                    array: J$.T(2746337, true, 23, false),
                    parseArg: J$.R(2746345, 'parseString', parseString, false, true)
                }, 11, false),
                arrayOfNumber: J$.T(2746393, {
                    takesArg: J$.T(2746361, true, 23, false),
                    helpArg: J$.T(2746369, 'NUM', 21, false),
                    array: J$.T(2746377, true, 23, false),
                    parseArg: J$.R(2746385, 'parseNumber', parseNumber, false, true)
                }, 11, false),
                arrayOfInteger: J$.T(2746433, {
                    takesArg: J$.T(2746401, true, 23, false),
                    helpArg: J$.T(2746409, 'INT', 21, false),
                    array: J$.T(2746417, true, 23, false),
                    parseArg: J$.R(2746425, 'parseInteger', parseInteger, false, true)
                }, 11, false),
                arrayOfPositiveInteger: J$.T(2746473, {
                    takesArg: J$.T(2746441, true, 23, false),
                    helpArg: J$.T(2746449, 'INT', 21, false),
                    array: J$.T(2746457, true, 23, false),
                    parseArg: J$.R(2746465, 'parsePositiveInteger', parsePositiveInteger, false, true)
                }, 11, false),
                arrayOfDate: J$.T(2746513, {
                    takesArg: J$.T(2746481, true, 23, false),
                    helpArg: J$.T(2746489, 'INT', 21, false),
                    array: J$.T(2746497, true, 23, false),
                    parseArg: J$.R(2746505, 'parseDate', parseDate, false, true)
                }, 11, false)
            }, 11, false), optionTypes, false, true);
            J$.P(2748665, J$.G(2748577, J$.R(2748569, 'Parser', Parser, false, true), 'prototype'), 'optionTakesArg', J$.T(2748657, function optionTakesArg(option) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(2748633, arguments.callee, this, arguments);
                            arguments = J$.N(2748641, 'arguments', arguments, true, false, false);
                            option = J$.N(2748649, 'option', option, true, false, false);
                            return J$.Rt(2748625, J$.G(2748617, J$.G(2748609, J$.R(2748585, 'optionTypes', optionTypes, false, true), J$.G(2748601, J$.R(2748593, 'option', option, false, false), 'type')), 'takesArg'));
                        } catch (J$e) {
                            J$.Ex(2761409, J$e);
                        } finally {
                            if (J$.Fr(2761417))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2752737, J$.G(2748681, J$.R(2748673, 'Parser', Parser, false, true), 'prototype'), 'parse', J$.T(2752729, function parse(inputs) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(2752553, arguments.callee, this, arguments);
                            function addOpt(option, optstr, key, val, from) {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(2749553, arguments.callee, this, arguments);
                                            arguments = J$.N(2749561, 'arguments', arguments, true, false, false);
                                            option = J$.N(2749569, 'option', option, true, false, false);
                                            optstr = J$.N(2749577, 'optstr', optstr, true, false, false);
                                            key = J$.N(2749585, 'key', key, true, false, false);
                                            val = J$.N(2749593, 'val', val, true, false, false);
                                            from = J$.N(2749601, 'from', from, true, false, false);
                                            J$.N(2749609, 'type', type, false, false, false);
                                            J$.N(2749617, 'parsedVal', parsedVal, false, false, false);
                                            J$.N(2749625, 'i', i, false, false, false);
                                            J$.N(2749633, 'item', item, false, false, false);
                                            var type = J$.W(2749137, 'type', J$.G(2749129, J$.R(2749105, 'optionTypes', optionTypes, false, true), J$.G(2749121, J$.R(2749113, 'option', option, false, false), 'type')), type, false, false);
                                            var parsedVal = J$.W(2749185, 'parsedVal', J$.M(2749177, J$.R(2749145, 'type', type, false, false), 'parseArg', false)(J$.R(2749153, 'option', option, false, false), J$.R(2749161, 'optstr', optstr, false, false), J$.R(2749169, 'val', val, false, false)), parsedVal, false, false);
                                            if (J$.C(132296, J$.G(2749201, J$.R(2749193, 'type', type, false, false), 'array'))) {
                                                if (J$.C(132264, J$.U(408130, '!', J$.G(2749225, J$.R(2749209, 'opts', opts, false, false), J$.R(2749217, 'key', key, false, false))))) {
                                                    J$.P(2749257, J$.R(2749233, 'opts', opts, false, false), J$.R(2749241, 'key', key, false, false), J$.T(2749249, [], 10, false));
                                                }
                                                if (J$.C(132288, J$.C(132272, J$.G(2749273, J$.R(2749265, 'type', type, false, false), 'arrayFlatten')) ? J$.M(2749297, J$.I(typeof Array === 'undefined' ? Array = J$.R(2749281, 'Array', undefined, true, true) : Array = J$.R(2749281, 'Array', Array, true, true)), 'isArray', false)(J$.R(2749289, 'parsedVal', parsedVal, false, false)) : J$._())) {
                                                    for (var i = J$.W(2749313, 'i', J$.T(2749305, 0, 22, false), i, false, false); J$.C(132280, J$.B(408138, '<', J$.R(2749321, 'i', i, false, false), J$.G(2749337, J$.R(2749329, 'parsedVal', parsedVal, false, false), 'length'))); J$.B(408162, '-', i = J$.W(2749353, 'i', J$.B(408154, '+', J$.U(408146, '+', J$.R(2749345, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                        J$.M(2749409, J$.G(2749377, J$.R(2749361, 'opts', opts, false, false), J$.R(2749369, 'key', key, false, false)), 'push', false)(J$.G(2749401, J$.R(2749385, 'parsedVal', parsedVal, false, false), J$.R(2749393, 'i', i, false, false)));
                                                    }
                                                } else {
                                                    J$.M(2749449, J$.G(2749433, J$.R(2749417, 'opts', opts, false, false), J$.R(2749425, 'key', key, false, false)), 'push', false)(J$.R(2749441, 'parsedVal', parsedVal, false, false));
                                                }
                                            } else {
                                                J$.P(2749481, J$.R(2749457, 'opts', opts, false, false), J$.R(2749465, 'key', key, false, false), J$.R(2749473, 'parsedVal', parsedVal, false, false));
                                            }
                                            var item = J$.W(2749521, 'item', J$.T(2749513, {
                                                key: J$.R(2749489, 'key', key, false, false),
                                                value: J$.R(2749497, 'parsedVal', parsedVal, false, false),
                                                from: J$.R(2749505, 'from', from, false, false)
                                            }, 11, false), item, false, false);
                                            J$.M(2749545, J$.R(2749529, '_order', _order, false, false), 'push', false)(J$.R(2749537, 'item', item, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2761425, J$e);
                                        } finally {
                                            if (J$.Fr(2761433))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2752561, 'arguments', arguments, true, false, false);
                            inputs = J$.N(2752569, 'inputs', inputs, true, false, false);
                            J$.N(2752577, 'self', self, false, false, false);
                            J$.N(2752585, 'argv', argv, false, false, false);
                            J$.N(2752593, 'slice', slice, false, false, false);
                            J$.N(2752601, 'args', args, false, false, false);
                            J$.N(2752609, 'env', env, false, false, false);
                            J$.N(2752617, 'opts', opts, false, false, false);
                            J$.N(2752625, '_order', _order, false, false, false);
                            addOpt = J$.N(2752641, 'addOpt', J$.T(2752633, addOpt, 12, false), true, false, false);
                            J$.N(2752649, '_args', _args, false, false, false);
                            J$.N(2752657, 'i', i, false, false, false);
                            J$.N(2752665, 'arg', arg, false, false, false);
                            J$.N(2752673, 'name', name, false, false, false);
                            J$.N(2752681, 'val', val, false, false, false);
                            J$.N(2752689, 'idx', idx, false, false, false);
                            J$.N(2752697, 'option', option, false, false, false);
                            J$.N(2752705, 'takesArg', takesArg, false, false, false);
                            J$.N(2752713, 'j', j, false, false, false);
                            J$.N(2752721, 'allFound', allFound, false, false, false);
                            var self = J$.W(2748697, 'self', J$.R(2748689, 'this', this, false, false), self, false, false);
                            if (J$.C(132224, J$.M(2748737, J$.I(typeof Array === 'undefined' ? Array = J$.R(2748705, 'Array', undefined, true, true) : Array = J$.R(2748705, 'Array', Array, true, true)), 'isArray', false)(J$.G(2748729, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(2748713, 'arguments', undefined, true, true) : arguments = J$.R(2748713, 'arguments', arguments, true, true)), J$.T(2748721, 0, 22, false))))) {
                                inputs = J$.W(2748801, 'inputs', J$.T(2748793, {
                                    argv: J$.G(2748761, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(2748745, 'arguments', undefined, true, true) : arguments = J$.R(2748745, 'arguments', arguments, true, true)), J$.T(2748753, 0, 22, false)),
                                    slice: J$.G(2748785, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(2748769, 'arguments', undefined, true, true) : arguments = J$.R(2748769, 'arguments', arguments, true, true)), J$.T(2748777, 1, 22, false))
                                }, 11, false), inputs, false, false);
                            }
                            J$.M(2748833, J$.R(2748809, 'assert', assert, false, true), 'optionalObject', false)(J$.R(2748817, 'inputs', inputs, false, false), J$.T(2748825, 'inputs', 21, false));
                            if (J$.C(132232, J$.U(408114, '!', J$.R(2748841, 'inputs', inputs, false, false)))) {
                                inputs = J$.W(2748857, 'inputs', J$.T(2748849, {}, 11, false), inputs, false, false);
                            }
                            J$.M(2748897, J$.R(2748865, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2748881, J$.R(2748873, 'inputs', inputs, false, false), 'argv'), J$.T(2748889, 'inputs.argv', 21, false));
                            var argv = J$.W(2748937, 'argv', J$.C(132240, J$.G(2748913, J$.R(2748905, 'inputs', inputs, false, false), 'argv')) ? J$._() : J$.G(2748929, J$.I(typeof process === 'undefined' ? process = J$.R(2748921, 'process', undefined, true, true) : process = J$.R(2748921, 'process', process, true, true)), 'argv'), argv, false, false);
                            var slice = J$.W(2748993, 'slice', J$.C(132248, J$.B(408122, '!==', J$.G(2748953, J$.R(2748945, 'inputs', inputs, false, false), 'slice'), J$.T(2748961, undefined, 24, false))) ? J$.G(2748977, J$.R(2748969, 'inputs', inputs, false, false), 'slice') : J$.T(2748985, 2, 22, false), slice, false, false);
                            var args = J$.W(2749025, 'args', J$.M(2749017, J$.R(2749001, 'argv', argv, false, false), 'slice', false)(J$.R(2749009, 'slice', slice, false, false)), args, false, false);
                            var env = J$.W(2749065, 'env', J$.C(132256, J$.G(2749041, J$.R(2749033, 'inputs', inputs, false, false), 'env')) ? J$._() : J$.G(2749057, J$.I(typeof process === 'undefined' ? process = J$.R(2749049, 'process', undefined, true, true) : process = J$.R(2749049, 'process', process, true, true)), 'env'), env, false, false);
                            var opts = J$.W(2749081, 'opts', J$.T(2749073, {}, 11, false), opts, false, false);
                            var _order = J$.W(2749097, '_order', J$.T(2749089, [], 10, false), _order, false, false);
                            var _args = J$.W(2749649, '_args', J$.T(2749641, [], 10, false), _args, false, false);
                            var i = J$.W(2749665, 'i', J$.T(2749657, 0, 22, false), i, false, false);
                            outer:
                                while (J$.C(132504, J$.B(408170, '<', J$.R(2749673, 'i', i, false, false), J$.G(2749689, J$.R(2749681, 'args', args, false, false), 'length')))) {
                                    var arg = J$.W(2749721, 'arg', J$.G(2749713, J$.R(2749697, 'args', args, false, false), J$.R(2749705, 'i', i, false, false)), arg, false, false);
                                    if (J$.C(132496, J$.B(408178, '===', J$.R(2749729, 'arg', arg, false, false), J$.T(2749737, '--', 21, false)))) {
                                        J$.B(408202, '-', i = J$.W(2749753, 'i', J$.B(408194, '+', J$.U(408186, '+', J$.R(2749745, 'i', i, false, false)), 1), i, false, false), 1);
                                        break;
                                    } else if (J$.C(132488, J$.B(408210, '===', J$.M(2749785, J$.R(2749761, 'arg', arg, false, false), 'slice', false)(J$.T(2749769, 0, 22, false), J$.T(2749777, 2, 22, false)), J$.T(2749793, '--', 21, false)))) {
                                        var name = J$.W(2749825, 'name', J$.M(2749817, J$.R(2749801, 'arg', arg, false, false), 'slice', false)(J$.T(2749809, 2, 22, false)), name, false, false);
                                        var val = J$.W(2749841, 'val', J$.T(2749833, null, 25, false), val, false, false);
                                        var idx = J$.W(2749873, 'idx', J$.M(2749865, J$.R(2749849, 'name', name, false, false), 'indexOf', false)(J$.T(2749857, '=', 21, false)), idx, false, false);
                                        if (J$.C(132304, J$.B(408226, '!==', J$.R(2749881, 'idx', idx, false, false), J$.U(408218, '-', J$.T(2749889, 1, 22, false))))) {
                                            val = J$.W(2749929, 'val', J$.M(2749921, J$.R(2749897, 'name', name, false, false), 'slice', false)(J$.B(408234, '+', J$.R(2749905, 'idx', idx, false, false), J$.T(2749913, 1, 22, false))), val, false, false);
                                            name = J$.W(2749969, 'name', J$.M(2749961, J$.R(2749937, 'name', name, false, false), 'slice', false)(J$.T(2749945, 0, 22, false), J$.R(2749953, 'idx', idx, false, false)), name, false, false);
                                        }
                                        var option = J$.W(2750009, 'option', J$.G(2750001, J$.G(2749985, J$.R(2749977, 'this', this, false, false), 'optionFromName'), J$.R(2749993, 'name', name, false, false)), option, false, false);
                                        if (J$.C(132368, J$.U(408242, '!', J$.R(2750017, 'option', option, false, false)))) {
                                            if (J$.C(132320, J$.U(408250, '!', J$.G(2750033, J$.R(2750025, 'this', this, false, false), 'allowUnknown'))))
                                                throw J$.F(2750081, J$.I(typeof Error === 'undefined' ? Error = J$.R(2750041, 'Error', undefined, true, true) : Error = J$.R(2750041, 'Error', Error, true, true)), true)(J$.F(2750073, J$.R(2750049, 'format', format, false, true), false)(J$.T(2750057, 'unknown option: "--%s"', 21, false), J$.R(2750065, 'name', name, false, false)));
                                            else if (J$.C(132312, J$.G(2750097, J$.R(2750089, 'this', this, false, false), 'interspersed')))
                                                J$.M(2750121, J$.R(2750105, '_args', _args, false, false), 'push', false)(J$.R(2750113, 'arg', arg, false, false));
                                            else
                                                break outer;
                                        } else {
                                            var takesArg = J$.W(2750153, 'takesArg', J$.M(2750145, J$.R(2750129, 'this', this, false, false), 'optionTakesArg', false)(J$.R(2750137, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(132336, J$.C(132328, J$.B(408258, '!==', J$.R(2750161, 'val', val, false, false), J$.T(2750169, null, 25, false))) ? J$.U(408266, '!', J$.R(2750177, 'takesArg', takesArg, false, false)) : J$._())) {
                                                throw J$.F(2750241, J$.I(typeof Error === 'undefined' ? Error = J$.R(2750185, 'Error', undefined, true, true) : Error = J$.R(2750185, 'Error', Error, true, true)), true)(J$.F(2750233, J$.R(2750193, 'format', format, false, true), false)(J$.B(408274, '+', J$.T(2750201, 'argument given to "--%s" option ', 21, false), J$.T(2750209, 'that does not take one: "%s"', 21, false)), J$.R(2750217, 'name', name, false, false), J$.R(2750225, 'arg', arg, false, false)));
                                            }
                                            if (J$.C(132360, J$.U(408282, '!', J$.R(2750249, 'takesArg', takesArg, false, false)))) {
                                                J$.F(2750321, J$.R(2750257, 'addOpt', addOpt, false, false), false)(J$.R(2750265, 'option', option, false, false), J$.B(408290, '+', J$.T(2750273, '--', 21, false), J$.R(2750281, 'name', name, false, false)), J$.G(2750297, J$.R(2750289, 'option', option, false, false), 'key'), J$.T(2750305, true, 23, false), J$.T(2750313, 'argv', 21, false));
                                            } else if (J$.C(132352, J$.B(408298, '!==', J$.R(2750329, 'val', val, false, false), J$.T(2750337, null, 25, false)))) {
                                                J$.F(2750409, J$.R(2750345, 'addOpt', addOpt, false, false), false)(J$.R(2750353, 'option', option, false, false), J$.B(408306, '+', J$.T(2750361, '--', 21, false), J$.R(2750369, 'name', name, false, false)), J$.G(2750385, J$.R(2750377, 'option', option, false, false), 'key'), J$.R(2750393, 'val', val, false, false), J$.T(2750401, 'argv', 21, false));
                                            } else if (J$.C(132344, J$.B(408322, '>=', J$.B(408314, '+', J$.R(2750417, 'i', i, false, false), J$.T(2750425, 1, 22, false)), J$.G(2750441, J$.R(2750433, 'args', args, false, false), 'length')))) {
                                                throw J$.F(2750497, J$.I(typeof Error === 'undefined' ? Error = J$.R(2750449, 'Error', undefined, true, true) : Error = J$.R(2750449, 'Error', Error, true, true)), true)(J$.F(2750489, J$.R(2750457, 'format', format, false, true), false)(J$.B(408330, '+', J$.T(2750465, 'do not have enough args for "--%s" ', 21, false), J$.T(2750473, 'option', 21, false)), J$.R(2750481, 'name', name, false, false)));
                                            } else {
                                                J$.F(2750593, J$.R(2750505, 'addOpt', addOpt, false, false), false)(J$.R(2750513, 'option', option, false, false), J$.B(408338, '+', J$.T(2750521, '--', 21, false), J$.R(2750529, 'name', name, false, false)), J$.G(2750545, J$.R(2750537, 'option', option, false, false), 'key'), J$.G(2750577, J$.R(2750553, 'args', args, false, false), J$.B(408346, '+', J$.R(2750561, 'i', i, false, false), J$.T(2750569, 1, 22, false))), J$.T(2750585, 'argv', 21, false));
                                                J$.B(408370, '-', i = J$.W(2750609, 'i', J$.B(408362, '+', J$.U(408354, '+', J$.R(2750601, 'i', i, false, false)), 1), i, false, false), 1);
                                            }
                                        }
                                    } else if (J$.C(132480, J$.C(132376, J$.B(408378, '===', J$.G(2750633, J$.R(2750617, 'arg', arg, false, false), J$.T(2750625, 0, 22, false)), J$.T(2750641, '-', 21, false))) ? J$.B(408386, '>', J$.G(2750657, J$.R(2750649, 'arg', arg, false, false), 'length'), J$.T(2750665, 1, 22, false)) : J$._())) {
                                        var j = J$.W(2750681, 'j', J$.T(2750673, 1, 22, false), j, false, false);
                                        var allFound = J$.W(2750697, 'allFound', J$.T(2750689, true, 23, false), allFound, false, false);
                                        while (J$.C(132424, J$.B(408394, '<', J$.R(2750705, 'j', j, false, false), J$.G(2750721, J$.R(2750713, 'arg', arg, false, false), 'length')))) {
                                            var name = J$.W(2750753, 'name', J$.G(2750745, J$.R(2750729, 'arg', arg, false, false), J$.R(2750737, 'j', j, false, false)), name, false, false);
                                            var option = J$.W(2750793, 'option', J$.G(2750785, J$.G(2750769, J$.R(2750761, 'this', this, false, false), 'optionFromName'), J$.R(2750777, 'name', name, false, false)), option, false, false);
                                            if (J$.C(132416, J$.U(408402, '!', J$.R(2750801, 'option', option, false, false)))) {
                                                allFound = J$.W(2750817, 'allFound', J$.T(2750809, false, 23, false), allFound, false, false);
                                                if (J$.C(132400, J$.G(2750833, J$.R(2750825, 'this', this, false, false), 'allowUnknown'))) {
                                                    if (J$.C(132384, J$.G(2750849, J$.R(2750841, 'this', this, false, false), 'interspersed'))) {
                                                        J$.M(2750873, J$.R(2750857, '_args', _args, false, false), 'push', false)(J$.R(2750865, 'arg', arg, false, false));
                                                        break;
                                                    } else
                                                        break outer;
                                                } else if (J$.C(132392, J$.B(408410, '>', J$.G(2750889, J$.R(2750881, 'arg', arg, false, false), 'length'), J$.T(2750897, 2, 22, false)))) {
                                                    throw J$.F(2750953, J$.I(typeof Error === 'undefined' ? Error = J$.R(2750905, 'Error', undefined, true, true) : Error = J$.R(2750905, 'Error', Error, true, true)), true)(J$.F(2750945, J$.R(2750913, 'format', format, false, true), false)(J$.T(2750921, 'unknown option: "-%s" in "%s" group', 21, false), J$.R(2750929, 'name', name, false, false), J$.R(2750937, 'arg', arg, false, false)));
                                                } else {
                                                    throw J$.F(2751001, J$.I(typeof Error === 'undefined' ? Error = J$.R(2750961, 'Error', undefined, true, true) : Error = J$.R(2750961, 'Error', Error, true, true)), true)(J$.F(2750993, J$.R(2750969, 'format', format, false, true), false)(J$.T(2750977, 'unknown option: "-%s"', 21, false), J$.R(2750985, 'name', name, false, false)));
                                                }
                                            } else if (J$.C(132408, J$.M(2751025, J$.R(2751009, 'this', this, false, false), 'optionTakesArg', false)(J$.R(2751017, 'option', option, false, false)))) {
                                                break;
                                            }
                                            J$.B(408434, '-', j = J$.W(2751041, 'j', J$.B(408426, '+', J$.U(408418, '+', J$.R(2751033, 'j', j, false, false)), 1), j, false, false), 1);
                                        }
                                        j = J$.W(2751057, 'j', J$.T(2751049, 1, 22, false), j, false, false);
                                        while (J$.C(132464, J$.C(132432, J$.R(2751065, 'allFound', allFound, false, false)) ? J$.B(408442, '<', J$.R(2751073, 'j', j, false, false), J$.G(2751089, J$.R(2751081, 'arg', arg, false, false), 'length')) : J$._())) {
                                            var name = J$.W(2751121, 'name', J$.G(2751113, J$.R(2751097, 'arg', arg, false, false), J$.R(2751105, 'j', j, false, false)), name, false, false);
                                            var val = J$.W(2751161, 'val', J$.M(2751153, J$.R(2751129, 'arg', arg, false, false), 'slice', false)(J$.B(408450, '+', J$.R(2751137, 'j', j, false, false), J$.T(2751145, 1, 22, false))), val, false, false);
                                            var option = J$.W(2751201, 'option', J$.G(2751193, J$.G(2751177, J$.R(2751169, 'this', this, false, false), 'optionFromName'), J$.R(2751185, 'name', name, false, false)), option, false, false);
                                            var takesArg = J$.W(2751233, 'takesArg', J$.M(2751225, J$.R(2751209, 'this', this, false, false), 'optionTakesArg', false)(J$.R(2751217, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(132456, J$.U(408458, '!', J$.R(2751241, 'takesArg', takesArg, false, false)))) {
                                                J$.F(2751313, J$.R(2751249, 'addOpt', addOpt, false, false), false)(J$.R(2751257, 'option', option, false, false), J$.B(408466, '+', J$.T(2751265, '-', 21, false), J$.R(2751273, 'name', name, false, false)), J$.G(2751289, J$.R(2751281, 'option', option, false, false), 'key'), J$.T(2751297, true, 23, false), J$.T(2751305, 'argv', 21, false));
                                            } else if (J$.C(132448, J$.R(2751321, 'val', val, false, false))) {
                                                J$.F(2751393, J$.R(2751329, 'addOpt', addOpt, false, false), false)(J$.R(2751337, 'option', option, false, false), J$.B(408474, '+', J$.T(2751345, '-', 21, false), J$.R(2751353, 'name', name, false, false)), J$.G(2751369, J$.R(2751361, 'option', option, false, false), 'key'), J$.R(2751377, 'val', val, false, false), J$.T(2751385, 'argv', 21, false));
                                                break;
                                            } else {
                                                if (J$.C(132440, J$.B(408490, '>=', J$.B(408482, '+', J$.R(2751401, 'i', i, false, false), J$.T(2751409, 1, 22, false)), J$.G(2751425, J$.R(2751417, 'args', args, false, false), 'length')))) {
                                                    throw J$.F(2751481, J$.I(typeof Error === 'undefined' ? Error = J$.R(2751433, 'Error', undefined, true, true) : Error = J$.R(2751433, 'Error', Error, true, true)), true)(J$.F(2751473, J$.R(2751441, 'format', format, false, true), false)(J$.B(408498, '+', J$.T(2751449, 'do not have enough args ', 21, false), J$.T(2751457, 'for "-%s" option', 21, false)), J$.R(2751465, 'name', name, false, false)));
                                                }
                                                J$.F(2751577, J$.R(2751489, 'addOpt', addOpt, false, false), false)(J$.R(2751497, 'option', option, false, false), J$.B(408506, '+', J$.T(2751505, '-', 21, false), J$.R(2751513, 'name', name, false, false)), J$.G(2751529, J$.R(2751521, 'option', option, false, false), 'key'), J$.G(2751561, J$.R(2751537, 'args', args, false, false), J$.B(408514, '+', J$.R(2751545, 'i', i, false, false), J$.T(2751553, 1, 22, false))), J$.T(2751569, 'argv', 21, false));
                                                J$.B(408538, '-', i = J$.W(2751593, 'i', J$.B(408530, '+', J$.U(408522, '+', J$.R(2751585, 'i', i, false, false)), 1), i, false, false), 1);
                                                break;
                                            }
                                            J$.B(408562, '-', j = J$.W(2751609, 'j', J$.B(408554, '+', J$.U(408546, '+', J$.R(2751601, 'j', j, false, false)), 1), j, false, false), 1);
                                        }
                                    } else if (J$.C(132472, J$.G(2751625, J$.R(2751617, 'this', this, false, false), 'interspersed'))) {
                                        J$.M(2751649, J$.R(2751633, '_args', _args, false, false), 'push', false)(J$.R(2751641, 'arg', arg, false, false));
                                    } else {
                                        break outer;
                                    }
                                    J$.B(408586, '-', i = J$.W(2751665, 'i', J$.B(408578, '+', J$.U(408570, '+', J$.R(2751657, 'i', i, false, false)), 1), i, false, false), 1);
                                }
                            _args = J$.W(2751713, '_args', J$.M(2751705, J$.R(2751673, '_args', _args, false, false), 'concat', false)(J$.M(2751697, J$.R(2751681, 'args', args, false, false), 'slice', false)(J$.R(2751689, 'i', i, false, false))), _args, false, false);
                            J$.M(2752145, J$.M(2751745, J$.I(typeof Object === 'undefined' ? Object = J$.R(2751721, 'Object', undefined, true, true) : Object = J$.R(2751721, 'Object', Object, true, true)), 'keys', false)(J$.G(2751737, J$.R(2751729, 'this', this, false, false), 'optionFromEnv')), 'forEach', false)(J$.T(2752137, function (envname) {
                                jalangiLabel22:
                                    while (true) {
                                        try {
                                            J$.Fe(2752089, arguments.callee, this, arguments);
                                            arguments = J$.N(2752097, 'arguments', arguments, true, false, false);
                                            envname = J$.N(2752105, 'envname', envname, true, false, false);
                                            J$.N(2752113, 'val', val, false, false, false);
                                            J$.N(2752121, 'option', option, false, false, false);
                                            J$.N(2752129, 'takesArg', takesArg, false, false, false);
                                            var val = J$.W(2751777, 'val', J$.G(2751769, J$.R(2751753, 'env', env, false, false), J$.R(2751761, 'envname', envname, false, false)), val, false, false);
                                            if (J$.C(132512, J$.B(408594, '===', J$.R(2751785, 'val', val, false, false), J$.T(2751793, undefined, 24, false))))
                                                return J$.Rt(2751801, undefined);
                                            var option = J$.W(2751841, 'option', J$.G(2751833, J$.G(2751817, J$.R(2751809, 'self', self, false, false), 'optionFromEnv'), J$.R(2751825, 'envname', envname, false, false)), option, false, false);
                                            if (J$.C(132520, J$.B(408602, '!==', J$.G(2751873, J$.R(2751849, 'opts', opts, false, false), J$.G(2751865, J$.R(2751857, 'option', option, false, false), 'key')), J$.T(2751881, undefined, 24, false))))
                                                return J$.Rt(2751889, undefined);
                                            var takesArg = J$.W(2751921, 'takesArg', J$.M(2751913, J$.R(2751897, 'self', self, false, false), 'optionTakesArg', false)(J$.R(2751905, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(132536, J$.R(2751929, 'takesArg', takesArg, false, false))) {
                                                J$.F(2751993, J$.R(2751937, 'addOpt', addOpt, false, false), false)(J$.R(2751945, 'option', option, false, false), J$.R(2751953, 'envname', envname, false, false), J$.G(2751969, J$.R(2751961, 'option', option, false, false), 'key'), J$.R(2751977, 'val', val, false, false), J$.T(2751985, 'env', 21, false));
                                            } else if (J$.C(132528, J$.B(408610, '!==', J$.R(2752001, 'val', val, false, false), J$.T(2752009, '', 21, false)))) {
                                                J$.F(2752081, J$.R(2752017, 'addOpt', addOpt, false, false), false)(J$.R(2752025, 'option', option, false, false), J$.R(2752033, 'envname', envname, false, false), J$.G(2752049, J$.R(2752041, 'option', option, false, false), 'key'), J$.B(408618, '!==', J$.R(2752057, 'val', val, false, false), J$.T(2752065, '0', 21, false)), J$.T(2752073, 'env', 21, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2761441, J$e);
                                        } finally {
                                            if (J$.Fr(2761449))
                                                continue jalangiLabel22;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(2752481, J$.G(2752161, J$.R(2752153, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(2752473, function (o) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(2752449, arguments.callee, this, arguments);
                                            arguments = J$.N(2752457, 'arguments', arguments, true, false, false);
                                            o = J$.N(2752465, 'o', o, true, false, false);
                                            if (J$.C(132568, J$.B(408626, '===', J$.G(2752193, J$.R(2752169, 'opts', opts, false, false), J$.G(2752185, J$.R(2752177, 'o', o, false, false), 'key')), J$.T(2752201, undefined, 24, false)))) {
                                                if (J$.C(132560, J$.B(408634, '!==', J$.G(2752225, J$.R(2752209, 'o', o, false, false), J$.T(2752217, 'default', 21, false)), J$.T(2752233, undefined, 24, false)))) {
                                                    J$.P(2752289, J$.R(2752241, 'opts', opts, false, false), J$.G(2752257, J$.R(2752249, 'o', o, false, false), 'key'), J$.G(2752281, J$.R(2752265, 'o', o, false, false), J$.T(2752273, 'default', 21, false)));
                                                } else if (J$.C(132552, J$.C(132544, J$.G(2752305, J$.R(2752297, 'o', o, false, false), 'type')) ? J$.B(408642, '!==', J$.G(2752353, J$.G(2752337, J$.R(2752313, 'optionTypes', optionTypes, false, true), J$.G(2752329, J$.R(2752321, 'o', o, false, false), 'type')), J$.T(2752345, 'default', 21, false)), J$.T(2752361, undefined, 24, false)) : J$._())) {
                                                    J$.P(2752441, J$.R(2752369, 'opts', opts, false, false), J$.G(2752385, J$.R(2752377, 'o', o, false, false), 'key'), J$.G(2752433, J$.G(2752417, J$.R(2752393, 'optionTypes', optionTypes, false, true), J$.G(2752409, J$.R(2752401, 'o', o, false, false), 'type')), J$.T(2752425, 'default', 21, false)));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2761457, J$e);
                                        } finally {
                                            if (J$.Fr(2761465))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(2752505, J$.R(2752489, 'opts', opts, false, false), '_order', J$.R(2752497, '_order', _order, false, false));
                            J$.P(2752529, J$.R(2752513, 'opts', opts, false, false), '_args', J$.R(2752521, '_args', _args, false, false));
                            return J$.Rt(2752545, J$.R(2752537, 'opts', opts, false, false));
                        } catch (J$e) {
                            J$.Ex(2761473, J$e);
                        } finally {
                            if (J$.Fr(2761481))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2756697, J$.G(2752753, J$.R(2752745, 'Parser', Parser, false, true), 'prototype'), 'help', J$.T(2756689, function help(config) {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(2756577, arguments.callee, this, arguments);
                            arguments = J$.N(2756585, 'arguments', arguments, true, false, false);
                            config = J$.N(2756593, 'config', config, true, false, false);
                            J$.N(2756601, 'indent', indent, false, false, false);
                            J$.N(2756609, 'headingIndent', headingIndent, false, false, false);
                            J$.N(2756617, 'nameSort', nameSort, false, false, false);
                            J$.N(2756625, 'maxCol', maxCol, false, false, false);
                            J$.N(2756633, 'minHelpCol', minHelpCol, false, false, false);
                            J$.N(2756641, 'maxHelpCol', maxHelpCol, false, false, false);
                            J$.N(2756649, 'lines', lines, false, false, false);
                            J$.N(2756657, 'maxWidth', maxWidth, false, false, false);
                            J$.N(2756665, 'helpCol', helpCol, false, false, false);
                            J$.N(2756673, 'i', i, false, false, false);
                            J$.N(2756681, 'rv', rv, false, false, false);
                            config = J$.W(2752777, 'config', J$.C(132576, J$.R(2752761, 'config', config, false, false)) ? J$._() : J$.T(2752769, {}, 11, false), config, false, false);
                            J$.M(2752809, J$.R(2752785, 'assert', assert, false, true), 'object', false)(J$.R(2752793, 'config', config, false, false), J$.T(2752801, 'config', 21, false));
                            var indent = J$.W(2752865, 'indent', J$.F(2752857, J$.R(2752817, 'makeIndent', makeIndent, false, true), false)(J$.G(2752833, J$.R(2752825, 'config', config, false, false), 'indent'), J$.T(2752841, 4, 22, false), J$.T(2752849, 'config.indent', 21, false)), indent, false, false);
                            var headingIndent = J$.W(2752953, 'headingIndent', J$.F(2752945, J$.R(2752873, 'makeIndent', makeIndent, false, true), false)(J$.G(2752889, J$.R(2752881, 'config', config, false, false), 'headingIndent'), J$.M(2752929, J$.I(typeof Math === 'undefined' ? Math = J$.R(2752897, 'Math', undefined, true, true) : Math = J$.R(2752897, 'Math', Math, true, true)), 'round', false)(J$.B(408650, '/', J$.G(2752913, J$.R(2752905, 'indent', indent, false, false), 'length'), J$.T(2752921, 2, 22, false))), J$.T(2752937, 'config.headingIndent', 21, false)), headingIndent, false, false);
                            J$.M(2752993, J$.R(2752961, 'assert', assert, false, true), 'optionalString', false)(J$.G(2752977, J$.R(2752969, 'config', config, false, false), 'nameSort'), J$.T(2752985, 'config.nameSort', 21, false));
                            var nameSort = J$.W(2753025, 'nameSort', J$.C(132584, J$.G(2753009, J$.R(2753001, 'config', config, false, false), 'nameSort')) ? J$._() : J$.T(2753017, 'length', 21, false), nameSort, false, false);
                            J$.M(2753089, J$.R(2753033, 'assert', assert, false, true), 'ok', false)(J$.U(408658, '~', J$.M(2753073, J$.T(2753057, [
                                J$.T(2753041, 'length', 21, false),
                                J$.T(2753049, 'none', 21, false)
                            ], 10, false), 'indexOf', false)(J$.R(2753065, 'nameSort', nameSort, false, false))), J$.T(2753081, 'invalid "config.nameSort"', 21, false));
                            J$.M(2753129, J$.R(2753097, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(2753113, J$.R(2753105, 'config', config, false, false), 'maxCol'), J$.T(2753121, 'config.maxCol', 21, false));
                            J$.M(2753169, J$.R(2753137, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(2753153, J$.R(2753145, 'config', config, false, false), 'maxHelpCol'), J$.T(2753161, 'config.maxHelpCol', 21, false));
                            J$.M(2753209, J$.R(2753177, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(2753193, J$.R(2753185, 'config', config, false, false), 'minHelpCol'), J$.T(2753201, 'config.minHelpCol', 21, false));
                            J$.M(2753249, J$.R(2753217, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(2753233, J$.R(2753225, 'config', config, false, false), 'helpCol'), J$.T(2753241, 'config.helpCol', 21, false));
                            J$.M(2753289, J$.R(2753257, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2753273, J$.R(2753265, 'config', config, false, false), 'includeEnv'), J$.T(2753281, 'config.includeEnv', 21, false));
                            J$.M(2753329, J$.R(2753297, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2753313, J$.R(2753305, 'config', config, false, false), 'includeDefault'), J$.T(2753321, 'config.includeDefault', 21, false));
                            J$.M(2753369, J$.R(2753337, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2753353, J$.R(2753345, 'config', config, false, false), 'helpWrap'), J$.T(2753361, 'config.helpWrap', 21, false));
                            var maxCol = J$.W(2753401, 'maxCol', J$.C(132592, J$.G(2753385, J$.R(2753377, 'config', config, false, false), 'maxCol')) ? J$._() : J$.T(2753393, 80, 22, false), maxCol, false, false);
                            var minHelpCol = J$.W(2753433, 'minHelpCol', J$.C(132600, J$.G(2753417, J$.R(2753409, 'config', config, false, false), 'minHelpCol')) ? J$._() : J$.T(2753425, 20, 22, false), minHelpCol, false, false);
                            var maxHelpCol = J$.W(2753465, 'maxHelpCol', J$.C(132608, J$.G(2753449, J$.R(2753441, 'config', config, false, false), 'maxHelpCol')) ? J$._() : J$.T(2753457, 40, 22, false), maxHelpCol, false, false);
                            var lines = J$.W(2753481, 'lines', J$.T(2753473, [], 10, false), lines, false, false);
                            var maxWidth = J$.W(2753497, 'maxWidth', J$.T(2753489, 0, 22, false), maxWidth, false, false);
                            J$.M(2754361, J$.G(2753513, J$.R(2753505, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(2754353, function (o) {
                                jalangiLabel27:
                                    while (true) {
                                        try {
                                            J$.Fe(2754297, arguments.callee, this, arguments);
                                            arguments = J$.N(2754305, 'arguments', arguments, true, false, false);
                                            o = J$.N(2754313, 'o', o, true, false, false);
                                            J$.N(2754321, 'type', type, false, false, false);
                                            J$.N(2754329, 'arg', arg, false, false, false);
                                            J$.N(2754337, 'line', line, false, false, false);
                                            J$.N(2754345, 'names', names, false, false, false);
                                            if (J$.C(132616, J$.G(2753529, J$.R(2753521, 'o', o, false, false), 'hidden'))) {
                                                return J$.Rt(2753537, undefined);
                                            }
                                            if (J$.C(132632, J$.C(132624, J$.B(408666, '!==', J$.G(2753553, J$.R(2753545, 'o', o, false, false), 'group'), J$.T(2753561, undefined, 24, false))) ? J$.B(408674, '!==', J$.G(2753577, J$.R(2753569, 'o', o, false, false), 'group'), J$.T(2753585, null, 25, false)) : J$._())) {
                                                J$.M(2753609, J$.R(2753593, 'lines', lines, false, false), 'push', false)(J$.T(2753601, null, 25, false));
                                                return J$.Rt(2753617, undefined);
                                            }
                                            var type = J$.W(2753657, 'type', J$.G(2753649, J$.R(2753625, 'optionTypes', optionTypes, false, true), J$.G(2753641, J$.R(2753633, 'o', o, false, false), 'type')), type, false, false);
                                            var arg = J$.W(2753705, 'arg', J$.C(132648, J$.C(132640, J$.G(2753673, J$.R(2753665, 'o', o, false, false), 'helpArg')) ? J$._() : J$.G(2753689, J$.R(2753681, 'type', type, false, false), 'helpArg')) ? J$._() : J$.T(2753697, 'ARG', 21, false), arg, false, false);
                                            var line = J$.W(2753721, 'line', J$.T(2753713, '', 21, false), line, false, false);
                                            var names = J$.W(2753753, 'names', J$.M(2753745, J$.G(2753737, J$.R(2753729, 'o', o, false, false), 'names'), 'slice', false)(), names, false, false);
                                            if (J$.C(132672, J$.B(408682, '===', J$.R(2753761, 'nameSort', nameSort, false, false), J$.T(2753769, 'length', 21, false)))) {
                                                J$.M(2753937, J$.R(2753777, 'names', names, false, false), 'sort', false)(J$.T(2753929, function (a, b) {
                                                    jalangiLabel25:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2753897, arguments.callee, this, arguments);
                                                                arguments = J$.N(2753905, 'arguments', arguments, true, false, false);
                                                                a = J$.N(2753913, 'a', a, true, false, false);
                                                                b = J$.N(2753921, 'b', b, true, false, false);
                                                                if (J$.C(132664, J$.B(408690, '<', J$.G(2753793, J$.R(2753785, 'a', a, false, false), 'length'), J$.G(2753809, J$.R(2753801, 'b', b, false, false), 'length'))))
                                                                    return J$.Rt(2753825, J$.U(408698, '-', J$.T(2753817, 1, 22, false)));
                                                                else if (J$.C(132656, J$.B(408706, '<', J$.G(2753841, J$.R(2753833, 'b', b, false, false), 'length'), J$.G(2753857, J$.R(2753849, 'a', a, false, false), 'length'))))
                                                                    return J$.Rt(2753873, J$.T(2753865, 1, 22, false));
                                                                else
                                                                    return J$.Rt(2753889, J$.T(2753881, 0, 22, false));
                                                            } catch (J$e) {
                                                                J$.Ex(2761489, J$e);
                                                            } finally {
                                                                if (J$.Fr(2761497))
                                                                    continue jalangiLabel25;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                            J$.M(2754217, J$.R(2753945, 'names', names, false, false), 'forEach', false)(J$.T(2754209, function (name, i) {
                                                jalangiLabel26:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2754177, arguments.callee, this, arguments);
                                                            arguments = J$.N(2754185, 'arguments', arguments, true, false, false);
                                                            name = J$.N(2754193, 'name', name, true, false, false);
                                                            i = J$.N(2754201, 'i', i, true, false, false);
                                                            if (J$.C(132680, J$.B(408714, '>', J$.R(2753953, 'i', i, false, false), J$.T(2753961, 0, 22, false))))
                                                                line = J$.W(2753985, 'line', J$.B(408722, '+', J$.R(2753977, 'line', line, false, false), J$.T(2753969, ', ', 21, false)), line, false, false);
                                                            if (J$.C(132704, J$.B(408730, '===', J$.G(2754001, J$.R(2753993, 'name', name, false, false), 'length'), J$.T(2754009, 1, 22, false)))) {
                                                                line = J$.W(2754041, 'line', J$.B(408746, '+', J$.R(2754033, 'line', line, false, false), J$.B(408738, '+', J$.T(2754017, '-', 21, false), J$.R(2754025, 'name', name, false, false))), line, false, false);
                                                                if (J$.C(132688, J$.G(2754057, J$.R(2754049, 'type', type, false, false), 'takesArg')))
                                                                    line = J$.W(2754089, 'line', J$.B(408762, '+', J$.R(2754081, 'line', line, false, false), J$.B(408754, '+', J$.T(2754065, ' ', 21, false), J$.R(2754073, 'arg', arg, false, false))), line, false, false);
                                                            } else {
                                                                line = J$.W(2754121, 'line', J$.B(408778, '+', J$.R(2754113, 'line', line, false, false), J$.B(408770, '+', J$.T(2754097, '--', 21, false), J$.R(2754105, 'name', name, false, false))), line, false, false);
                                                                if (J$.C(132696, J$.G(2754137, J$.R(2754129, 'type', type, false, false), 'takesArg')))
                                                                    line = J$.W(2754169, 'line', J$.B(408794, '+', J$.R(2754161, 'line', line, false, false), J$.B(408786, '+', J$.T(2754145, '=', 21, false), J$.R(2754153, 'arg', arg, false, false))), line, false, false);
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(2761505, J$e);
                                                        } finally {
                                                            if (J$.Fr(2761513))
                                                                continue jalangiLabel26;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            maxWidth = J$.W(2754265, 'maxWidth', J$.M(2754257, J$.I(typeof Math === 'undefined' ? Math = J$.R(2754225, 'Math', undefined, true, true) : Math = J$.R(2754225, 'Math', Math, true, true)), 'max', false)(J$.R(2754233, 'maxWidth', maxWidth, false, false), J$.G(2754249, J$.R(2754241, 'line', line, false, false), 'length')), maxWidth, false, false);
                                            J$.M(2754289, J$.R(2754273, 'lines', lines, false, false), 'push', false)(J$.R(2754281, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2761521, J$e);
                                        } finally {
                                            if (J$.Fr(2761529))
                                                continue jalangiLabel27;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var helpCol = J$.W(2754385, 'helpCol', J$.G(2754377, J$.R(2754369, 'config', config, false, false), 'helpCol'), helpCol, false, false);
                            if (J$.C(132712, J$.U(408802, '!', J$.R(2754393, 'helpCol', helpCol, false, false)))) {
                                helpCol = J$.W(2754433, 'helpCol', J$.B(408818, '+', J$.B(408810, '+', J$.R(2754401, 'maxWidth', maxWidth, false, false), J$.G(2754417, J$.R(2754409, 'indent', indent, false, false), 'length')), J$.T(2754425, 2, 22, false)), helpCol, false, false);
                                helpCol = J$.W(2754497, 'helpCol', J$.M(2754489, J$.I(typeof Math === 'undefined' ? Math = J$.R(2754441, 'Math', undefined, true, true) : Math = J$.R(2754441, 'Math', Math, true, true)), 'min', false)(J$.M(2754473, J$.I(typeof Math === 'undefined' ? Math = J$.R(2754449, 'Math', undefined, true, true) : Math = J$.R(2754449, 'Math', Math, true, true)), 'max', false)(J$.R(2754457, 'helpCol', helpCol, false, false), J$.R(2754465, 'minHelpCol', minHelpCol, false, false)), J$.R(2754481, 'maxHelpCol', maxHelpCol, false, false)), helpCol, false, false);
                            }
                            var i = J$.W(2754513, 'i', J$.U(408826, '-', J$.T(2754505, 1, 22, false)), i, false, false);
                            J$.M(2756473, J$.G(2754529, J$.R(2754521, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(2756465, function (o) {
                                jalangiLabel30:
                                    while (true) {
                                        try {
                                            J$.Fe(2756369, arguments.callee, this, arguments);
                                            arguments = J$.N(2756377, 'arguments', arguments, true, false, false);
                                            o = J$.N(2756385, 'o', o, true, false, false);
                                            J$.N(2756393, 'helpDefault', helpDefault, false, false, false);
                                            J$.N(2756401, 'line', line, false, false, false);
                                            J$.N(2756409, 'n', n, false, false, false);
                                            J$.N(2756417, 'helpEnv', helpEnv, false, false, false);
                                            J$.N(2756425, 'type', type, false, false, false);
                                            J$.N(2756433, 'arg', arg, false, false, false);
                                            J$.N(2756441, 'envs', envs, false, false, false);
                                            J$.N(2756449, 'help', help, false, false, false);
                                            J$.N(2756457, 'helpLines', helpLines, false, false, false);
                                            if (J$.C(132720, J$.G(2754545, J$.R(2754537, 'o', o, false, false), 'hidden'))) {
                                                return J$.Rt(2754553, undefined);
                                            }
                                            J$.B(408850, '-', i = J$.W(2754569, 'i', J$.B(408842, '+', J$.U(408834, '+', J$.R(2754561, 'i', i, false, false)), 1), i, false, false), 1);
                                            if (J$.C(132752, J$.C(132728, J$.B(408858, '!==', J$.G(2754585, J$.R(2754577, 'o', o, false, false), 'group'), J$.T(2754593, undefined, 24, false))) ? J$.B(408866, '!==', J$.G(2754609, J$.R(2754601, 'o', o, false, false), 'group'), J$.T(2754617, null, 25, false)) : J$._())) {
                                                if (J$.C(132744, J$.B(408874, '===', J$.G(2754633, J$.R(2754625, 'o', o, false, false), 'group'), J$.T(2754641, '', 21, false)))) {
                                                    J$.P(2754673, J$.R(2754649, 'lines', lines, false, false), J$.R(2754657, 'i', i, false, false), J$.T(2754665, '', 21, false));
                                                } else {
                                                    J$.P(2754761, J$.R(2754681, 'lines', lines, false, false), J$.R(2754689, 'i', i, false, false), J$.B(408906, '+', J$.B(408898, '+', J$.B(408890, '+', J$.C(132736, J$.B(408882, '===', J$.R(2754697, 'i', i, false, false), J$.T(2754705, 0, 22, false))) ? J$.T(2754713, '', 21, false) : J$.T(2754721, '\n', 21, false), J$.R(2754729, 'headingIndent', headingIndent, false, false)), J$.G(2754745, J$.R(2754737, 'o', o, false, false), 'group')), J$.T(2754753, ':', 21, false)));
                                                }
                                                return J$.Rt(2754769, undefined);
                                            }
                                            var helpDefault;
                                            if (J$.C(132784, J$.G(2754785, J$.R(2754777, 'config', config, false, false), 'includeDefault'))) {
                                                if (J$.C(132776, J$.B(408914, '!==', J$.G(2754809, J$.R(2754793, 'o', o, false, false), J$.T(2754801, 'default', 21, false)), J$.T(2754817, undefined, 24, false)))) {
                                                    helpDefault = J$.W(2754873, 'helpDefault', J$.F(2754865, J$.R(2754825, 'format', format, false, true), false)(J$.T(2754833, 'Default: %j', 21, false), J$.G(2754857, J$.R(2754841, 'o', o, false, false), J$.T(2754849, 'default', 21, false))), helpDefault, false, false);
                                                } else if (J$.C(132768, J$.C(132760, J$.G(2754889, J$.R(2754881, 'o', o, false, false), 'type')) ? J$.B(408922, '!==', J$.G(2754937, J$.G(2754921, J$.R(2754897, 'optionTypes', optionTypes, false, true), J$.G(2754913, J$.R(2754905, 'o', o, false, false), 'type')), J$.T(2754929, 'default', 21, false)), J$.T(2754945, undefined, 24, false)) : J$._())) {
                                                    helpDefault = J$.W(2755025, 'helpDefault', J$.F(2755017, J$.R(2754953, 'format', format, false, true), false)(J$.T(2754961, 'Default: %j', 21, false), J$.G(2755009, J$.G(2754993, J$.R(2754969, 'optionTypes', optionTypes, false, true), J$.G(2754985, J$.R(2754977, 'o', o, false, false), 'type')), J$.T(2755001, 'default', 21, false))), helpDefault, false, false);
                                                }
                                            }
                                            var line = J$.W(2755089, 'line', J$.P(2755081, J$.R(2755033, 'lines', lines, false, false), J$.R(2755041, 'i', i, false, false), J$.B(408930, '+', J$.R(2755049, 'indent', indent, false, false), J$.G(2755073, J$.R(2755057, 'lines', lines, false, false), J$.R(2755065, 'i', i, false, false)))), line, false, false);
                                            if (J$.C(132816, J$.C(132808, J$.C(132800, J$.U(408938, '!', J$.G(2755105, J$.R(2755097, 'o', o, false, false), 'help'))) ? J$.U(408946, '!', J$.C(132792, J$.G(2755121, J$.R(2755113, 'config', config, false, false), 'includeEnv')) ? J$.G(2755137, J$.R(2755129, 'o', o, false, false), 'env') : J$._()) : J$._()) ? J$.U(408954, '!', J$.R(2755145, 'helpDefault', helpDefault, false, false)) : J$._())) {
                                                return J$.Rt(2755153, undefined);
                                            }
                                            var n = J$.W(2755185, 'n', J$.B(408962, '-', J$.R(2755161, 'helpCol', helpCol, false, false), J$.G(2755177, J$.R(2755169, 'line', line, false, false), 'length')), n, false, false);
                                            if (J$.C(132824, J$.B(408970, '>=', J$.R(2755193, 'n', n, false, false), J$.T(2755201, 0, 22, false)))) {
                                                line = J$.W(2755241, 'line', J$.B(408978, '+', J$.R(2755233, 'line', line, false, false), J$.F(2755225, J$.R(2755209, 'space', space, false, true), false)(J$.R(2755217, 'n', n, false, false))), line, false, false);
                                            } else {
                                                line = J$.W(2755289, 'line', J$.B(408994, '+', J$.R(2755281, 'line', line, false, false), J$.B(408986, '+', J$.T(2755249, '\n', 21, false), J$.F(2755273, J$.R(2755257, 'space', space, false, true), false)(J$.R(2755265, 'helpCol', helpCol, false, false)))), line, false, false);
                                            }
                                            var helpEnv = J$.W(2755305, 'helpEnv', J$.T(2755297, '', 21, false), helpEnv, false, false);
                                            if (J$.C(132880, J$.C(132840, J$.C(132832, J$.G(2755321, J$.R(2755313, 'o', o, false, false), 'env')) ? J$.G(2755345, J$.G(2755337, J$.R(2755329, 'o', o, false, false), 'env'), 'length') : J$._()) ? J$.G(2755361, J$.R(2755353, 'config', config, false, false), 'includeEnv') : J$._())) {
                                                helpEnv = J$.W(2755385, 'helpEnv', J$.B(409002, '+', J$.R(2755377, 'helpEnv', helpEnv, false, false), J$.T(2755369, 'Environment: ', 21, false)), helpEnv, false, false);
                                                var type = J$.W(2755425, 'type', J$.G(2755417, J$.R(2755393, 'optionTypes', optionTypes, false, true), J$.G(2755409, J$.R(2755401, 'o', o, false, false), 'type')), type, false, false);
                                                var arg = J$.W(2755473, 'arg', J$.C(132856, J$.C(132848, J$.G(2755441, J$.R(2755433, 'o', o, false, false), 'helpArg')) ? J$._() : J$.G(2755457, J$.R(2755449, 'type', type, false, false), 'helpArg')) ? J$._() : J$.T(2755465, 'ARG', 21, false), arg, false, false);
                                                var envs = J$.W(2755665, 'envs', J$.M(2755657, J$.C(132864, J$.M(2755505, J$.I(typeof Array === 'undefined' ? Array = J$.R(2755481, 'Array', undefined, true, true) : Array = J$.R(2755481, 'Array', Array, true, true)), 'isArray', false)(J$.G(2755497, J$.R(2755489, 'o', o, false, false), 'env'))) ? J$.G(2755521, J$.R(2755513, 'o', o, false, false), 'env') : J$.T(2755545, [J$.G(2755537, J$.R(2755529, 'o', o, false, false), 'env')], 10, false), 'map', false)(J$.T(2755649, function (e) {
                                                    jalangiLabel28:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2755625, arguments.callee, this, arguments);
                                                                arguments = J$.N(2755633, 'arguments', arguments, true, false, false);
                                                                e = J$.N(2755641, 'e', e, true, false, false);
                                                                if (J$.C(132872, J$.G(2755561, J$.R(2755553, 'type', type, false, false), 'takesArg'))) {
                                                                    return J$.Rt(2755593, J$.B(409018, '+', J$.B(409010, '+', J$.R(2755569, 'e', e, false, false), J$.T(2755577, '=', 21, false)), J$.R(2755585, 'arg', arg, false, false)));
                                                                } else {
                                                                    return J$.Rt(2755617, J$.B(409026, '+', J$.R(2755601, 'e', e, false, false), J$.T(2755609, '=1', 21, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(2761537, J$e);
                                                            } finally {
                                                                if (J$.Fr(2761545))
                                                                    continue jalangiLabel28;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), envs, false, false);
                                                helpEnv = J$.W(2755705, 'helpEnv', J$.B(409034, '+', J$.R(2755697, 'helpEnv', helpEnv, false, false), J$.M(2755689, J$.R(2755673, 'envs', envs, false, false), 'join', false)(J$.T(2755681, ', ', 21, false))), helpEnv, false, false);
                                            }
                                            var help = J$.W(2755745, 'help', J$.M(2755737, J$.C(132888, J$.G(2755721, J$.R(2755713, 'o', o, false, false), 'help')) ? J$._() : J$.T(2755729, '', 21, false), 'trim', false)(), help, false, false);
                                            if (J$.C(132960, J$.C(132896, J$.B(409042, '!==', J$.G(2755761, J$.R(2755753, 'o', o, false, false), 'helpWrap'), J$.T(2755769, false, 23, false))) ? J$.B(409050, '!==', J$.G(2755785, J$.R(2755777, 'config', config, false, false), 'helpWrap'), J$.T(2755793, false, 23, false)) : J$._())) {
                                                if (J$.C(132912, J$.C(132904, J$.G(2755809, J$.R(2755801, 'help', help, false, false), 'length')) ? J$.U(409074, '!', J$.U(409066, '~', J$.M(2755849, J$.T(2755817, '.!?"\'', 21, false), 'indexOf', false)(J$.M(2755841, J$.R(2755825, 'help', help, false, false), 'slice', false)(J$.U(409058, '-', J$.T(2755833, 1, 22, false)))))) : J$._())) {
                                                    help = J$.W(2755873, 'help', J$.B(409082, '+', J$.R(2755865, 'help', help, false, false), J$.T(2755857, '.', 21, false)), help, false, false);
                                                }
                                                if (J$.C(132920, J$.G(2755889, J$.R(2755881, 'help', help, false, false), 'length'))) {
                                                    help = J$.W(2755913, 'help', J$.B(409090, '+', J$.R(2755905, 'help', help, false, false), J$.T(2755897, ' ', 21, false)), help, false, false);
                                                }
                                                help = J$.W(2755937, 'help', J$.B(409098, '+', J$.R(2755929, 'help', help, false, false), J$.R(2755921, 'helpEnv', helpEnv, false, false)), help, false, false);
                                                if (J$.C(132936, J$.R(2755945, 'helpDefault', helpDefault, false, false))) {
                                                    if (J$.C(132928, J$.R(2755953, 'helpEnv', helpEnv, false, false))) {
                                                        help = J$.W(2755977, 'help', J$.B(409106, '+', J$.R(2755969, 'help', help, false, false), J$.T(2755961, '. ', 21, false)), help, false, false);
                                                    }
                                                    help = J$.W(2756001, 'help', J$.B(409114, '+', J$.R(2755993, 'help', help, false, false), J$.R(2755985, 'helpDefault', helpDefault, false, false)), help, false, false);
                                                }
                                                line = J$.W(2756097, 'line', J$.B(409138, '+', J$.R(2756089, 'line', line, false, false), J$.M(2756081, J$.F(2756041, J$.R(2756009, 'textwrap', textwrap, false, true), false)(J$.R(2756017, 'help', help, false, false), J$.B(409122, '-', J$.R(2756025, 'maxCol', maxCol, false, false), J$.R(2756033, 'helpCol', helpCol, false, false))), 'join', false)(J$.B(409130, '+', J$.T(2756049, '\n', 21, false), J$.F(2756073, J$.R(2756057, 'space', space, false, true), false)(J$.R(2756065, 'helpCol', helpCol, false, false))))), line, false, false);
                                            } else {
                                                var helpLines = J$.W(2756193, 'helpLines', J$.M(2756185, J$.M(2756121, J$.R(2756105, 'help', help, false, false), 'split', false)(J$.T(2756113, '\n', 21, false)), 'filter', false)(J$.T(2756177, function (ln) {
                                                    jalangiLabel29:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2756153, arguments.callee, this, arguments);
                                                                arguments = J$.N(2756161, 'arguments', arguments, true, false, false);
                                                                ln = J$.N(2756169, 'ln', ln, true, false, false);
                                                                return J$.Rt(2756145, J$.G(2756137, J$.R(2756129, 'ln', ln, false, false), 'length'));
                                                            } catch (J$e) {
                                                                J$.Ex(2761553, J$e);
                                                            } finally {
                                                                if (J$.Fr(2761561))
                                                                    continue jalangiLabel29;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), helpLines, false, false);
                                                if (J$.C(132944, J$.B(409146, '!==', J$.R(2756201, 'helpEnv', helpEnv, false, false), J$.T(2756209, '', 21, false)))) {
                                                    J$.M(2756233, J$.R(2756217, 'helpLines', helpLines, false, false), 'push', false)(J$.R(2756225, 'helpEnv', helpEnv, false, false));
                                                }
                                                if (J$.C(132952, J$.R(2756241, 'helpDefault', helpDefault, false, false))) {
                                                    J$.M(2756265, J$.R(2756249, 'helpLines', helpLines, false, false), 'push', false)(J$.R(2756257, 'helpDefault', helpDefault, false, false));
                                                }
                                                line = J$.W(2756329, 'line', J$.B(409162, '+', J$.R(2756321, 'line', line, false, false), J$.M(2756313, J$.R(2756273, 'helpLines', helpLines, false, false), 'join', false)(J$.B(409154, '+', J$.T(2756281, '\n', 21, false), J$.F(2756305, J$.R(2756289, 'space', space, false, true), false)(J$.R(2756297, 'helpCol', helpCol, false, false))))), line, false, false);
                                            }
                                            J$.P(2756361, J$.R(2756337, 'lines', lines, false, false), J$.R(2756345, 'i', i, false, false), J$.R(2756353, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2761569, J$e);
                                        } finally {
                                            if (J$.Fr(2761577))
                                                continue jalangiLabel30;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var rv = J$.W(2756489, 'rv', J$.T(2756481, '', 21, false), rv, false, false);
                            if (J$.C(132968, J$.B(409170, '>', J$.G(2756505, J$.R(2756497, 'lines', lines, false, false), 'length'), J$.T(2756513, 0, 22, false)))) {
                                rv = J$.W(2756553, 'rv', J$.B(409178, '+', J$.M(2756537, J$.R(2756521, 'lines', lines, false, false), 'join', false)(J$.T(2756529, '\n', 21, false)), J$.T(2756545, '\n', 21, false)), rv, false, false);
                            }
                            return J$.Rt(2756569, J$.R(2756561, 'rv', rv, false, false));
                        } catch (J$e) {
                            J$.Ex(2761585, J$e);
                        } finally {
                            if (J$.Fr(2761593))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2757001, J$.G(2756713, J$.R(2756705, 'Parser', Parser, false, true), 'prototype'), 'bashCompletion', J$.T(2756993, function bashCompletion(args) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(2756969, arguments.callee, this, arguments);
                            arguments = J$.N(2756977, 'arguments', arguments, true, false, false);
                            args = J$.N(2756985, 'args', args, true, false, false);
                            J$.M(2756745, J$.R(2756721, 'assert', assert, false, true), 'object', false)(J$.R(2756729, 'args', args, false, false), J$.T(2756737, 'args', 21, false));
                            J$.M(2756785, J$.R(2756753, 'assert', assert, false, true), 'string', false)(J$.G(2756769, J$.R(2756761, 'args', args, false, false), 'name'), J$.T(2756777, 'args.name', 21, false));
                            J$.M(2756825, J$.R(2756793, 'assert', assert, false, true), 'optionalString', false)(J$.G(2756809, J$.R(2756801, 'args', args, false, false), 'specExtra'), J$.T(2756817, 'args.specExtra', 21, false));
                            J$.M(2756865, J$.R(2756833, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2756849, J$.R(2756841, 'args', args, false, false), 'argtypes'), J$.T(2756857, 'args.argtypes', 21, false));
                            return J$.Rt(2756961, J$.F(2756953, J$.R(2756873, 'bashCompletionFromOptions', bashCompletionFromOptions, false, true), false)(J$.T(2756945, {
                                name: J$.G(2756889, J$.R(2756881, 'args', args, false, false), 'name'),
                                specExtra: J$.G(2756905, J$.R(2756897, 'args', args, false, false), 'specExtra'),
                                argtypes: J$.G(2756921, J$.R(2756913, 'args', args, false, false), 'argtypes'),
                                options: J$.G(2756937, J$.R(2756929, 'this', this, false, false), 'options')
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(2761601, J$e);
                        } finally {
                            if (J$.Fr(2761609))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var BASH_COMPLETION_TEMPLATE_PATH = J$.W(2757041, 'BASH_COMPLETION_TEMPLATE_PATH', J$.M(2757033, J$.R(2757009, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(2757017, '__dirname', undefined, true, true) : __dirname = J$.R(2757017, '__dirname', __dirname, true, true)), J$.T(2757025, '../etc/dashdash.bash_completion.in', 21, false)), BASH_COMPLETION_TEMPLATE_PATH, false, true);
            ;
            J$.P(2760689, J$.I(typeof module === 'undefined' ? module = J$.R(2760553, 'module', undefined, true, true) : module = J$.R(2760553, 'module', module, true, true)), 'exports', J$.T(2760681, {
                createParser: J$.R(2760561, 'createParser', createParser, false, true),
                Parser: J$.R(2760569, 'Parser', Parser, false, true),
                parse: J$.R(2760577, 'parse', parse, false, true),
                addOptionType: J$.R(2760585, 'addOptionType', addOptionType, false, true),
                getOptionType: J$.R(2760593, 'getOptionType', getOptionType, false, true),
                synopsisFromOpt: J$.R(2760601, 'synopsisFromOpt', synopsisFromOpt, false, true),
                BASH_COMPLETION_TEMPLATE_PATH: J$.R(2760609, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, true),
                bashCompletionFromOptions: J$.R(2760617, 'bashCompletionFromOptions', bashCompletionFromOptions, false, true),
                bashCompletionSpecFromOptions: J$.R(2760625, 'bashCompletionSpecFromOptions', bashCompletionSpecFromOptions, false, true),
                parseBool: J$.R(2760633, 'parseBool', parseBool, false, true),
                parseString: J$.R(2760641, 'parseString', parseString, false, true),
                parseNumber: J$.R(2760649, 'parseNumber', parseNumber, false, true),
                parseInteger: J$.R(2760657, 'parseInteger', parseInteger, false, true),
                parsePositiveInteger: J$.R(2760665, 'parsePositiveInteger', parsePositiveInteger, false, true),
                parseDate: J$.R(2760673, 'parseDate', parseDate, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2761793, J$e);
        } finally {
            if (J$.Sr(2761801))
                continue jalangiLabel44;
            else
                break jalangiLabel44;
        }
    }
// JALANGI DO NOT INSTRUMENT

