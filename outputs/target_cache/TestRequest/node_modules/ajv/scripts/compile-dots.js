J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2666425, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/ajv/scripts/compile-dots.js');
            J$.N(2666433, 'glob', glob, false, false, false);
            J$.N(2666441, 'fs', fs, false, false, false);
            J$.N(2666449, 'path', path, false, false, false);
            J$.N(2666457, 'doT', doT, false, false, false);
            J$.N(2666465, 'beautify', beautify, false, false, false);
            J$.N(2666473, 'defsRootPath', defsRootPath, false, false, false);
            J$.N(2666481, 'defs', defs, false, false, false);
            J$.N(2666489, 'defFiles', defFiles, false, false, false);
            J$.N(2666497, 'filesRootPath', filesRootPath, false, false, false);
            J$.N(2666505, 'files', files, false, false, false);
            J$.N(2666513, 'dotjsPath', dotjsPath, false, false, false);
            J$.N(2666521, 'FUNCTION_NAME', FUNCTION_NAME, false, false, false);
            J$.N(2666529, 'OUT_EMPTY_STRING', OUT_EMPTY_STRING, false, false, false);
            J$.N(2666537, 'ISTANBUL', ISTANBUL, false, false, false);
            J$.N(2666545, 'ERROR_KEYWORD', ERROR_KEYWORD, false, false, false);
            J$.N(2666553, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, false, false);
            J$.N(2666561, 'VARS', VARS, false, false, false);
            J$.T(2664201, 'use strict', 21, false);
            J$.F(2664225, J$.I(typeof require === 'undefined' ? require = J$.R(2664209, 'require', undefined, true, true) : require = J$.R(2664209, 'require', require, true, true)), false)(J$.T(2664217, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2664249, J$.I(typeof require === 'undefined' ? require = J$.R(2664233, 'require', undefined, true, true) : require = J$.R(2664233, 'require', require, true, true)), false)(J$.T(2664241, 'core-js/modules/es.array.join', 21, false));
            J$.F(2664273, J$.I(typeof require === 'undefined' ? require = J$.R(2664257, 'require', undefined, true, true) : require = J$.R(2664257, 'require', require, true, true)), false)(J$.T(2664265, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2664297, J$.I(typeof require === 'undefined' ? require = J$.R(2664281, 'require', undefined, true, true) : require = J$.R(2664281, 'require', require, true, true)), false)(J$.T(2664289, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2664321, J$.I(typeof require === 'undefined' ? require = J$.R(2664305, 'require', undefined, true, true) : require = J$.R(2664305, 'require', require, true, true)), false)(J$.T(2664313, 'core-js/modules/es.regexp.constructor', 21, false));
            J$.F(2664345, J$.I(typeof require === 'undefined' ? require = J$.R(2664329, 'require', undefined, true, true) : require = J$.R(2664329, 'require', require, true, true)), false)(J$.T(2664337, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2664369, J$.I(typeof require === 'undefined' ? require = J$.R(2664353, 'require', undefined, true, true) : require = J$.R(2664353, 'require', require, true, true)), false)(J$.T(2664361, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2664393, J$.I(typeof require === 'undefined' ? require = J$.R(2664377, 'require', undefined, true, true) : require = J$.R(2664377, 'require', require, true, true)), false)(J$.T(2664385, 'core-js/modules/es.string.match', 21, false));
            J$.F(2664417, J$.I(typeof require === 'undefined' ? require = J$.R(2664401, 'require', undefined, true, true) : require = J$.R(2664401, 'require', require, true, true)), false)(J$.T(2664409, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2664441, J$.I(typeof require === 'undefined' ? require = J$.R(2664425, 'require', undefined, true, true) : require = J$.R(2664425, 'require', require, true, true)), false)(J$.T(2664433, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var glob = J$.W(2664577, 'glob', J$.F(2664465, J$.I(typeof require === 'undefined' ? require = J$.R(2664449, 'require', undefined, true, true) : require = J$.R(2664449, 'require', require, true, true)), false)(J$.T(2664457, 'glob', 21, false)), glob, false, true), fs = J$.W(2664585, 'fs', J$.F(2664489, J$.I(typeof require === 'undefined' ? require = J$.R(2664473, 'require', undefined, true, true) : require = J$.R(2664473, 'require', require, true, true)), false)(J$.T(2664481, 'fs', 21, false)), fs, false, true), path = J$.W(2664593, 'path', J$.F(2664513, J$.I(typeof require === 'undefined' ? require = J$.R(2664497, 'require', undefined, true, true) : require = J$.R(2664497, 'require', require, true, true)), false)(J$.T(2664505, 'path', 21, false)), path, false, true), doT = J$.W(2664601, 'doT', J$.F(2664537, J$.I(typeof require === 'undefined' ? require = J$.R(2664521, 'require', undefined, true, true) : require = J$.R(2664521, 'require', require, true, true)), false)(J$.T(2664529, 'dot', 21, false)), doT, false, true), beautify = J$.W(2664609, 'beautify', J$.G(2664569, J$.F(2664561, J$.I(typeof require === 'undefined' ? require = J$.R(2664545, 'require', undefined, true, true) : require = J$.R(2664545, 'require', require, true, true)), false)(J$.T(2664553, 'js-beautify', 21, false)), 'js_beautify'), beautify, false, true);
            var defsRootPath = J$.W(2664681, 'defsRootPath', J$.C(128920, J$.G(2664641, J$.G(2664625, J$.I(typeof process === 'undefined' ? process = J$.R(2664617, 'process', undefined, true, true) : process = J$.R(2664617, 'process', process, true, true)), 'argv'), J$.T(2664633, 2, 22, false))) ? J$._() : J$.M(2664673, J$.R(2664649, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(2664657, '__dirname', undefined, true, true) : __dirname = J$.R(2664657, '__dirname', __dirname, true, true)), J$.T(2664665, '../lib', 21, false)), defsRootPath, false, true);
            var defs = J$.W(2664697, 'defs', J$.T(2664689, {}, 11, false), defs, false, true);
            var defFiles = J$.W(2664745, 'defFiles', J$.M(2664737, J$.R(2664705, 'glob', glob, false, true), 'sync', false)(J$.T(2664713, './dot/**/*.def', 21, false), J$.T(2664729, { cwd: J$.R(2664721, 'defsRootPath', defsRootPath, false, true) }, 11, false)), defFiles, false, true);
            J$.M(2664913, J$.R(2664753, 'defFiles', defFiles, false, true), 'forEach', false)(J$.T(2664905, function (f) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2664873, arguments.callee, this, arguments);
                            arguments = J$.N(2664881, 'arguments', arguments, true, false, false);
                            f = J$.N(2664889, 'f', f, true, false, false);
                            J$.N(2664897, 'name', name, false, false, false);
                            var name = J$.W(2664793, 'name', J$.M(2664785, J$.R(2664761, 'path', path, false, true), 'basename', false)(J$.R(2664769, 'f', f, false, false), J$.T(2664777, '.def', 21, false)), name, false, false);
                            J$.P(2664865, J$.R(2664801, 'defs', defs, false, true), J$.R(2664809, 'name', name, false, false), J$.M(2664857, J$.R(2664817, 'fs', fs, false, true), 'readFileSync', false)(J$.M(2664849, J$.R(2664825, 'path', path, false, true), 'join', false)(J$.R(2664833, 'defsRootPath', defsRootPath, false, true), J$.R(2664841, 'f', f, false, false))));
                        } catch (J$e) {
                            J$.Ex(2666569, J$e);
                        } finally {
                            if (J$.Fr(2666577))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var filesRootPath = J$.W(2664985, 'filesRootPath', J$.C(128928, J$.G(2664945, J$.G(2664929, J$.I(typeof process === 'undefined' ? process = J$.R(2664921, 'process', undefined, true, true) : process = J$.R(2664921, 'process', process, true, true)), 'argv'), J$.T(2664937, 3, 22, false))) ? J$._() : J$.M(2664977, J$.R(2664953, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(2664961, '__dirname', undefined, true, true) : __dirname = J$.R(2664961, '__dirname', __dirname, true, true)), J$.T(2664969, '../lib', 21, false)), filesRootPath, false, true);
            var files = J$.W(2665033, 'files', J$.M(2665025, J$.R(2664993, 'glob', glob, false, true), 'sync', false)(J$.T(2665001, './dot/**/*.jst', 21, false), J$.T(2665017, { cwd: J$.R(2665009, 'filesRootPath', filesRootPath, false, true) }, 11, false)), files, false, true);
            var dotjsPath = J$.W(2665073, 'dotjsPath', J$.M(2665065, J$.R(2665041, 'path', path, false, true), 'join', false)(J$.R(2665049, 'filesRootPath', filesRootPath, false, true), J$.T(2665057, './dotjs', 21, false)), dotjsPath, false, true);
            try {
                J$.M(2665097, J$.R(2665081, 'fs', fs, false, true), 'mkdirSync', false)(J$.R(2665089, 'dotjsPath', dotjsPath, false, true));
            } catch (e) {
                J$.N(2665105, 'e', e, false, false, true);
            }
            J$.M(2665129, J$.I(typeof console === 'undefined' ? console = J$.R(2665113, 'console', undefined, true, true) : console = J$.R(2665113, 'console', console, true, true)), 'log', false)(J$.T(2665121, '\n\nCompiling:', 21, false));
            var FUNCTION_NAME = J$.W(2665145, 'FUNCTION_NAME', J$.T(2665137, /function\s+anonymous\s*\(it[^)]*\)\s*{/, 14, false), FUNCTION_NAME, false, true);
            var OUT_EMPTY_STRING = J$.W(2665161, 'OUT_EMPTY_STRING', J$.T(2665153, /out\s*\+=\s*'\s*';/g, 14, false), OUT_EMPTY_STRING, false, true);
            var ISTANBUL = J$.W(2665177, 'ISTANBUL', J$.T(2665169, /'(istanbul[^']+)';/g, 14, false), ISTANBUL, false, true);
            var ERROR_KEYWORD = J$.W(2665193, 'ERROR_KEYWORD', J$.T(2665185, /\$errorKeyword/g, 14, false), ERROR_KEYWORD, false, true);
            var ERROR_KEYWORD_OR = J$.W(2665209, 'ERROR_KEYWORD_OR', J$.T(2665201, /\$errorKeyword\s+\|\|/g, 14, false), ERROR_KEYWORD_OR, false, true);
            var VARS = J$.W(2665297, 'VARS', J$.T(2665289, [
                J$.T(2665217, '$errs', 21, false),
                J$.T(2665225, '$valid', 21, false),
                J$.T(2665233, '$lvl', 21, false),
                J$.T(2665241, '$data', 21, false),
                J$.T(2665249, '$dataLvl', 21, false),
                J$.T(2665257, '$errorKeyword', 21, false),
                J$.T(2665265, '$closingBraces', 21, false),
                J$.T(2665273, '$schemaPath', 21, false),
                J$.T(2665281, '$validate', 21, false)
            ], 10, false), VARS, false, true);
            J$.M(2666417, J$.R(2665305, 'files', files, false, true), 'forEach', false)(J$.T(2666409, function (f) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2666305, arguments.callee, this, arguments);
                            function removeUnusedVar(v) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2666033, arguments.callee, this, arguments);
                                            arguments = J$.N(2666041, 'arguments', arguments, true, false, false);
                                            v = J$.N(2666049, 'v', v, true, false, false);
                                            J$.N(2666057, 'regexp', regexp, false, false, false);
                                            J$.N(2666065, 'count', count, false, false, false);
                                            v = J$.W(2665825, 'v', J$.M(2665817, J$.R(2665793, 'v', v, false, false), 'replace', false)(J$.T(2665801, /\$/g, 14, false), J$.T(2665809, '\\$$', 21, false)), v, false, false);
                                            var regexp = J$.W(2665873, 'regexp', J$.F(2665865, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2665833, 'RegExp', undefined, true, true) : RegExp = J$.R(2665833, 'RegExp', RegExp, true, true)), true)(J$.B(401882, '+', J$.R(2665841, 'v', v, false, false), J$.T(2665849, '[^A-Za-z0-9_$]', 21, false)), J$.T(2665857, 'g', 21, false)), regexp, false, false);
                                            var count = J$.W(2665905, 'count', J$.F(2665897, J$.R(2665881, 'occurrences', occurrences, false, false), false)(J$.R(2665889, 'regexp', regexp, false, false)), count, false, false);
                                            if (J$.C(128936, J$.B(401890, '==', J$.R(2665913, 'count', count, false, false), J$.T(2665921, 1, 22, false)))) {
                                                regexp = J$.W(2665985, 'regexp', J$.F(2665977, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2665929, 'RegExp', undefined, true, true) : RegExp = J$.R(2665929, 'RegExp', RegExp, true, true)), true)(J$.B(401922, '+', J$.B(401914, '+', J$.B(401906, '+', J$.B(401898, '+', J$.T(2665937, 'var\\s+', 21, false), J$.R(2665945, 'v', v, false, false)), J$.T(2665953, '\\s*=[^;]+;|var\\s+', 21, false)), J$.R(2665961, 'v', v, false, false)), J$.T(2665969, ';', 21, false))), regexp, false, false);
                                                code = J$.W(2666025, 'code', J$.M(2666017, J$.R(2665993, 'code', code, false, false), 'replace', false)(J$.R(2666001, 'regexp', regexp, false, false), J$.T(2666009, '', 21, false)), code, false, false);
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2666585, J$e);
                                        } finally {
                                            if (J$.Fr(2666593))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function removeAlwaysFalsyInOr() {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(2666201, arguments.callee, this, arguments);
                                            arguments = J$.N(2666209, 'arguments', arguments, true, false, false);
                                            J$.N(2666217, 'countUsed', countUsed, false, false, false);
                                            J$.N(2666225, 'countOr', countOr, false, false, false);
                                            var countUsed = J$.W(2666097, 'countUsed', J$.F(2666089, J$.R(2666073, 'occurrences', occurrences, false, false), false)(J$.R(2666081, 'ERROR_KEYWORD', ERROR_KEYWORD, false, true)), countUsed, false, false);
                                            var countOr = J$.W(2666129, 'countOr', J$.F(2666121, J$.R(2666105, 'occurrences', occurrences, false, false), false)(J$.R(2666113, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, true)), countOr, false, false);
                                            if (J$.C(128944, J$.B(401938, '==', J$.R(2666137, 'countUsed', countUsed, false, false), J$.B(401930, '+', J$.R(2666145, 'countOr', countOr, false, false), J$.T(2666153, 1, 22, false)))))
                                                code = J$.W(2666193, 'code', J$.M(2666185, J$.R(2666161, 'code', code, false, false), 'replace', false)(J$.R(2666169, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, true), J$.T(2666177, '', 21, false)), code, false, false);
                                        } catch (J$e) {
                                            J$.Ex(2666601, J$e);
                                        } finally {
                                            if (J$.Fr(2666609))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function occurrences(regexp) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2666281, arguments.callee, this, arguments);
                                            arguments = J$.N(2666289, 'arguments', arguments, true, false, false);
                                            regexp = J$.N(2666297, 'regexp', regexp, true, false, false);
                                            return J$.Rt(2666273, J$.G(2666265, J$.C(128952, J$.M(2666249, J$.R(2666233, 'code', code, false, false), 'match', false)(J$.R(2666241, 'regexp', regexp, false, false))) ? J$._() : J$.T(2666257, [], 10, false), 'length'));
                                        } catch (J$e) {
                                            J$.Ex(2666617, J$e);
                                        } finally {
                                            if (J$.Fr(2666625))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2666313, 'arguments', arguments, true, false, false);
                            f = J$.N(2666321, 'f', f, true, false, false);
                            J$.N(2666329, 'keyword', keyword, false, false, false);
                            J$.N(2666337, 'targetPath', targetPath, false, false, false);
                            J$.N(2666345, 'template', template, false, false, false);
                            J$.N(2666353, 'code', code, false, false, false);
                            removeUnusedVar = J$.N(2666369, 'removeUnusedVar', J$.T(2666361, removeUnusedVar, 12, false), true, false, false);
                            removeAlwaysFalsyInOr = J$.N(2666385, 'removeAlwaysFalsyInOr', J$.T(2666377, removeAlwaysFalsyInOr, 12, false), true, false, false);
                            occurrences = J$.N(2666401, 'occurrences', J$.T(2666393, occurrences, 12, false), true, false, false);
                            var keyword = J$.W(2665345, 'keyword', J$.M(2665337, J$.R(2665313, 'path', path, false, true), 'basename', false)(J$.R(2665321, 'f', f, false, false), J$.T(2665329, '.jst', 21, false)), keyword, false, false);
                            var targetPath = J$.W(2665393, 'targetPath', J$.M(2665385, J$.R(2665353, 'path', path, false, true), 'join', false)(J$.R(2665361, 'dotjsPath', dotjsPath, false, true), J$.B(401842, '+', J$.R(2665369, 'keyword', keyword, false, false), J$.T(2665377, '.js', 21, false))), targetPath, false, false);
                            var template = J$.W(2665449, 'template', J$.M(2665441, J$.R(2665401, 'fs', fs, false, true), 'readFileSync', false)(J$.M(2665433, J$.R(2665409, 'path', path, false, true), 'join', false)(J$.R(2665417, 'filesRootPath', filesRootPath, false, true), J$.R(2665425, 'f', f, false, false))), template, false, false);
                            var code = J$.W(2665489, 'code', J$.M(2665481, J$.R(2665457, 'doT', doT, false, true), 'compile', false)(J$.R(2665465, 'template', template, false, false), J$.R(2665473, 'defs', defs, false, true)), code, false, false);
                            code = J$.W(2665601, 'code', J$.M(2665593, J$.M(2665569, J$.M(2665529, J$.M(2665505, J$.R(2665497, 'code', code, false, false), 'toString', false)(), 'replace', false)(J$.R(2665513, 'OUT_EMPTY_STRING', OUT_EMPTY_STRING, false, true), J$.T(2665521, '', 21, false)), 'replace', false)(J$.R(2665537, 'FUNCTION_NAME', FUNCTION_NAME, false, true), J$.B(401858, '+', J$.B(401850, '+', J$.T(2665545, 'function generate_', 21, false), J$.R(2665553, 'keyword', keyword, false, false)), J$.T(2665561, '(it, $keyword, $ruleType) {', 21, false))), 'replace', false)(J$.R(2665577, 'ISTANBUL', ISTANBUL, false, true), J$.T(2665585, '/* $1 */', 21, false)), code, false, false);
                            J$.F(2665617, J$.R(2665609, 'removeAlwaysFalsyInOr', removeAlwaysFalsyInOr, false, false), false)();
                            J$.M(2665641, J$.R(2665625, 'VARS', VARS, false, true), 'forEach', false)(J$.R(2665633, 'removeUnusedVar', removeUnusedVar, false, false));
                            code = J$.W(2665665, 'code', J$.B(401866, '+', J$.T(2665649, '\'use strict\';\nmodule.exports = ', 21, false), J$.R(2665657, 'code', code, false, false)), code, false, false);
                            code = J$.W(2665721, 'code', J$.B(401874, '+', J$.F(2665705, J$.R(2665673, 'beautify', beautify, false, true), false)(J$.R(2665681, 'code', code, false, false), J$.T(2665697, { indent_size: J$.T(2665689, 2, 22, false) }, 11, false)), J$.T(2665713, '\n', 21, false)), code, false, false);
                            J$.M(2665753, J$.R(2665729, 'fs', fs, false, true), 'writeFileSync', false)(J$.R(2665737, 'targetPath', targetPath, false, false), J$.R(2665745, 'code', code, false, false));
                            J$.M(2665785, J$.I(typeof console === 'undefined' ? console = J$.R(2665761, 'console', undefined, true, true) : console = J$.R(2665761, 'console', console, true, true)), 'log', false)(J$.T(2665769, 'compiled', 21, false), J$.R(2665777, 'keyword', keyword, false, false));
                        } catch (J$e) {
                            J$.Ex(2666633, J$e);
                        } finally {
                            if (J$.Fr(2666641))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2666649, J$e);
        } finally {
            if (J$.Sr(2666657))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

