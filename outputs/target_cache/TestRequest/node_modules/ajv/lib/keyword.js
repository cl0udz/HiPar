J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2661929, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/ajv/lib/keyword.js');
            function addKeyword(keyword, definition) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2661009, arguments.callee, this, arguments);
                            function _addRule(keyword, dataType, definition) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2660921, arguments.callee, this, arguments);
                                            arguments = J$.N(2660929, 'arguments', arguments, true, false, false);
                                            keyword = J$.N(2660937, 'keyword', keyword, true, false, false);
                                            dataType = J$.N(2660945, 'dataType', dataType, true, false, false);
                                            definition = J$.N(2660953, 'definition', definition, true, false, false);
                                            J$.N(2660961, 'ruleGroup', ruleGroup, false, false, false);
                                            J$.N(2660969, 'i', i, false, false, false);
                                            J$.N(2660977, 'rg', rg, false, false, false);
                                            J$.N(2660985, 'rule', rule, false, false, false);
                                            var ruleGroup;
                                            for (var i = J$.W(2660593, 'i', J$.T(2660585, 0, 22, false), i, false, false); J$.C(128744, J$.B(401522, '<', J$.R(2660601, 'i', i, false, false), J$.G(2660617, J$.R(2660609, 'RULES', RULES, false, false), 'length'))); J$.B(401546, '-', i = J$.W(2660633, 'i', J$.B(401538, '+', J$.U(401530, '+', J$.R(2660625, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                var rg = J$.W(2660665, 'rg', J$.G(2660657, J$.R(2660641, 'RULES', RULES, false, false), J$.R(2660649, 'i', i, false, false)), rg, false, false);
                                                if (J$.C(128736, J$.B(401554, '==', J$.G(2660681, J$.R(2660673, 'rg', rg, false, false), 'type'), J$.R(2660689, 'dataType', dataType, false, false)))) {
                                                    ruleGroup = J$.W(2660705, 'ruleGroup', J$.R(2660697, 'rg', rg, false, false), ruleGroup, false, false);
                                                    break;
                                                }
                                            }
                                            if (J$.C(128752, J$.U(401562, '!', J$.R(2660713, 'ruleGroup', ruleGroup, false, false)))) {
                                                ruleGroup = J$.W(2660745, 'ruleGroup', J$.T(2660737, {
                                                    type: J$.R(2660721, 'dataType', dataType, false, false),
                                                    rules: J$.T(2660729, [], 10, false)
                                                }, 11, false), ruleGroup, false, false);
                                                J$.M(2660769, J$.R(2660753, 'RULES', RULES, false, false), 'push', false)(J$.R(2660761, 'ruleGroup', ruleGroup, false, false));
                                            }
                                            var rule = J$.W(2660841, 'rule', J$.T(2660833, {
                                                keyword: J$.R(2660777, 'keyword', keyword, false, false),
                                                definition: J$.R(2660785, 'definition', definition, false, false),
                                                custom: J$.T(2660793, true, 23, false),
                                                code: J$.R(2660801, 'customRuleCode', customRuleCode, false, true),
                                                'implements': J$.G(2660825, J$.R(2660809, 'definition', definition, false, false), J$.T(2660817, 'implements', 21, false))
                                            }, 11, false), rule, false, false);
                                            J$.M(2660873, J$.G(2660857, J$.R(2660849, 'ruleGroup', ruleGroup, false, false), 'rules'), 'push', false)(J$.R(2660865, 'rule', rule, false, false));
                                            J$.P(2660913, J$.G(2660889, J$.R(2660881, 'RULES', RULES, false, false), 'custom'), J$.R(2660897, 'keyword', keyword, false, false), J$.R(2660905, 'rule', rule, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2662025, J$e);
                                        } finally {
                                            if (J$.Fr(2662033))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2661017, 'arguments', arguments, true, false, false);
                            keyword = J$.N(2661025, 'keyword', keyword, true, false, false);
                            definition = J$.N(2661033, 'definition', definition, true, false, false);
                            J$.N(2661041, 'RULES', RULES, false, false, false);
                            J$.N(2661049, 'dataType', dataType, false, false, false);
                            J$.N(2661057, 'i', i, false, false, false);
                            J$.N(2661065, 'metaSchema', metaSchema, false, false, false);
                            _addRule = J$.N(2661081, '_addRule', J$.T(2661073, _addRule, 12, false), true, false, false);
                            var RULES = J$.W(2659961, 'RULES', J$.G(2659953, J$.R(2659945, 'this', this, false, false), 'RULES'), RULES, false, false);
                            if (J$.C(128672, J$.G(2659993, J$.G(2659977, J$.R(2659969, 'RULES', RULES, false, false), 'keywords'), J$.R(2659985, 'keyword', keyword, false, false))))
                                throw J$.F(2660033, J$.I(typeof Error === 'undefined' ? Error = J$.R(2660001, 'Error', undefined, true, true) : Error = J$.R(2660001, 'Error', Error, true, true)), true)(J$.B(401458, '+', J$.B(401450, '+', J$.T(2660009, 'Keyword ', 21, false), J$.R(2660017, 'keyword', keyword, false, false)), J$.T(2660025, ' is already defined', 21, false)));
                            if (J$.C(128680, J$.U(401466, '!', J$.M(2660057, J$.R(2660041, 'IDENTIFIER', IDENTIFIER, false, true), 'test', false)(J$.R(2660049, 'keyword', keyword, false, false)))))
                                throw J$.F(2660097, J$.I(typeof Error === 'undefined' ? Error = J$.R(2660065, 'Error', undefined, true, true) : Error = J$.R(2660065, 'Error', Error, true, true)), true)(J$.B(401482, '+', J$.B(401474, '+', J$.T(2660073, 'Keyword ', 21, false), J$.R(2660081, 'keyword', keyword, false, false)), J$.T(2660089, ' is not a valid identifier', 21, false)));
                            if (J$.C(128728, J$.R(2660105, 'definition', definition, false, false))) {
                                J$.M(2660137, J$.R(2660113, 'this', this, false, false), 'validateKeyword', false)(J$.R(2660121, 'definition', definition, false, false), J$.T(2660129, true, 23, false));
                                var dataType = J$.W(2660161, 'dataType', J$.G(2660153, J$.R(2660145, 'definition', definition, false, false), 'type'), dataType, false, false);
                                if (J$.C(128696, J$.M(2660185, J$.I(typeof Array === 'undefined' ? Array = J$.R(2660169, 'Array', undefined, true, true) : Array = J$.R(2660169, 'Array', Array, true, true)), 'isArray', false)(J$.R(2660177, 'dataType', dataType, false, false)))) {
                                    for (var i = J$.W(2660201, 'i', J$.T(2660193, 0, 22, false), i, false, false); J$.C(128688, J$.B(401490, '<', J$.R(2660209, 'i', i, false, false), J$.G(2660225, J$.R(2660217, 'dataType', dataType, false, false), 'length'))); J$.B(401514, '-', i = J$.W(2660241, 'i', J$.B(401506, '+', J$.U(401498, '+', J$.R(2660233, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        J$.F(2660297, J$.R(2660249, '_addRule', _addRule, false, false), false)(J$.R(2660257, 'keyword', keyword, false, false), J$.G(2660281, J$.R(2660265, 'dataType', dataType, false, false), J$.R(2660273, 'i', i, false, false)), J$.R(2660289, 'definition', definition, false, false));
                                    }
                                } else {
                                    J$.F(2660337, J$.R(2660305, '_addRule', _addRule, false, false), false)(J$.R(2660313, 'keyword', keyword, false, false), J$.R(2660321, 'dataType', dataType, false, false), J$.R(2660329, 'definition', definition, false, false));
                                }
                                var metaSchema = J$.W(2660361, 'metaSchema', J$.G(2660353, J$.R(2660345, 'definition', definition, false, false), 'metaSchema'), metaSchema, false, false);
                                if (J$.C(128720, J$.R(2660369, 'metaSchema', metaSchema, false, false))) {
                                    if (J$.C(128712, J$.C(128704, J$.G(2660385, J$.R(2660377, 'definition', definition, false, false), '$data')) ? J$.G(2660409, J$.G(2660401, J$.R(2660393, 'this', this, false, false), '_opts'), '$data') : J$._())) {
                                        metaSchema = J$.W(2660457, 'metaSchema', J$.T(2660449, {
                                            anyOf: J$.T(2660441, [
                                                J$.R(2660417, 'metaSchema', metaSchema, false, false),
                                                J$.T(2660433, { '$ref': J$.T(2660425, 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#', 21, false) }, 11, false)
                                            ], 10, false)
                                        }, 11, false), metaSchema, false, false);
                                    }
                                    J$.P(2660505, J$.R(2660465, 'definition', definition, false, false), 'validateSchema', J$.M(2660497, J$.R(2660473, 'this', this, false, false), 'compile', false)(J$.R(2660481, 'metaSchema', metaSchema, false, false), J$.T(2660489, true, 23, false)));
                                }
                            }
                            J$.P(2660577, J$.G(2660521, J$.R(2660513, 'RULES', RULES, false, false), 'keywords'), J$.R(2660529, 'keyword', keyword, false, false), J$.P(2660569, J$.G(2660545, J$.R(2660537, 'RULES', RULES, false, false), 'all'), J$.R(2660553, 'keyword', keyword, false, false), J$.T(2660561, true, 23, false)));
                            return J$.Rt(2661001, J$.R(2660993, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(2662041, J$e);
                        } finally {
                            if (J$.Fr(2662049))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getKeyword(keyword) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2661217, arguments.callee, this, arguments);
                            arguments = J$.N(2661225, 'arguments', arguments, true, false, false);
                            keyword = J$.N(2661233, 'keyword', keyword, true, false, false);
                            J$.N(2661241, 'rule', rule, false, false, false);
                            var rule = J$.W(2661129, 'rule', J$.G(2661121, J$.G(2661105, J$.G(2661097, J$.R(2661089, 'this', this, false, false), 'RULES'), 'custom'), J$.R(2661113, 'keyword', keyword, false, false)), rule, false, false);
                            return J$.Rt(2661209, J$.C(128768, J$.R(2661137, 'rule', rule, false, false)) ? J$.G(2661153, J$.R(2661145, 'rule', rule, false, false), 'definition') : J$.C(128760, J$.G(2661193, J$.G(2661177, J$.G(2661169, J$.R(2661161, 'this', this, false, false), 'RULES'), 'keywords'), J$.R(2661185, 'keyword', keyword, false, false))) ? J$._() : J$.T(2661201, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(2662057, J$e);
                        } finally {
                            if (J$.Fr(2662065))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function removeKeyword(keyword) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2661585, arguments.callee, this, arguments);
                            arguments = J$.N(2661593, 'arguments', arguments, true, false, false);
                            keyword = J$.N(2661601, 'keyword', keyword, true, false, false);
                            J$.N(2661609, 'RULES', RULES, false, false, false);
                            J$.N(2661617, 'i', i, false, false, false);
                            J$.N(2661625, 'rules', rules, false, false, false);
                            J$.N(2661633, 'j', j, false, false, false);
                            var RULES = J$.W(2661265, 'RULES', J$.G(2661257, J$.R(2661249, 'this', this, false, false), 'RULES'), RULES, false, false);
                            J$.B(401570, 'delete', J$.G(2661281, J$.R(2661273, 'RULES', RULES, false, false), 'keywords'), J$.R(2661289, 'keyword', keyword, false, false));
                            J$.B(401578, 'delete', J$.G(2661305, J$.R(2661297, 'RULES', RULES, false, false), 'all'), J$.R(2661313, 'keyword', keyword, false, false));
                            J$.B(401586, 'delete', J$.G(2661329, J$.R(2661321, 'RULES', RULES, false, false), 'custom'), J$.R(2661337, 'keyword', keyword, false, false));
                            for (var i = J$.W(2661353, 'i', J$.T(2661345, 0, 22, false), i, false, false); J$.C(128792, J$.B(401594, '<', J$.R(2661361, 'i', i, false, false), J$.G(2661377, J$.R(2661369, 'RULES', RULES, false, false), 'length'))); J$.B(401618, '-', i = J$.W(2661393, 'i', J$.B(401610, '+', J$.U(401602, '+', J$.R(2661385, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var rules = J$.W(2661433, 'rules', J$.G(2661425, J$.G(2661417, J$.R(2661401, 'RULES', RULES, false, false), J$.R(2661409, 'i', i, false, false)), 'rules'), rules, false, false);
                                for (var j = J$.W(2661449, 'j', J$.T(2661441, 0, 22, false), j, false, false); J$.C(128784, J$.B(401626, '<', J$.R(2661457, 'j', j, false, false), J$.G(2661473, J$.R(2661465, 'rules', rules, false, false), 'length'))); J$.B(401650, '-', j = J$.W(2661489, 'j', J$.B(401642, '+', J$.U(401634, '+', J$.R(2661481, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    if (J$.C(128776, J$.B(401658, '==', J$.G(2661521, J$.G(2661513, J$.R(2661497, 'rules', rules, false, false), J$.R(2661505, 'j', j, false, false)), 'keyword'), J$.R(2661529, 'keyword', keyword, false, false)))) {
                                        J$.M(2661561, J$.R(2661537, 'rules', rules, false, false), 'splice', false)(J$.R(2661545, 'j', j, false, false), J$.T(2661553, 1, 22, false));
                                        break;
                                    }
                                }
                            }
                            return J$.Rt(2661577, J$.R(2661569, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(2662073, J$e);
                        } finally {
                            if (J$.Fr(2662081))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateKeyword(definition, throwError) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2661889, arguments.callee, this, arguments);
                            arguments = J$.N(2661897, 'arguments', arguments, true, false, false);
                            definition = J$.N(2661905, 'definition', definition, true, false, false);
                            throwError = J$.N(2661913, 'throwError', throwError, true, false, false);
                            J$.N(2661921, 'v', v, false, false, false);
                            J$.P(2661657, J$.R(2661641, 'validateKeyword', validateKeyword, false, true), 'errors', J$.T(2661649, null, 25, false));
                            var v = J$.W(2661729, 'v', J$.P(2661721, J$.R(2661665, 'this', this, false, false), '_validateKeyword', J$.C(128800, J$.G(2661681, J$.R(2661673, 'this', this, false, false), '_validateKeyword')) ? J$._() : J$.M(2661713, J$.R(2661689, 'this', this, false, false), 'compile', false)(J$.R(2661697, 'definitionSchema', definitionSchema, false, true), J$.T(2661705, true, 23, false))), v, false, false);
                            if (J$.C(128808, J$.F(2661753, J$.R(2661737, 'v', v, false, false), false)(J$.R(2661745, 'definition', definition, false, false))))
                                return J$.Rt(2661769, J$.T(2661761, true, 23, false));
                            J$.P(2661801, J$.R(2661777, 'validateKeyword', validateKeyword, false, true), 'errors', J$.G(2661793, J$.R(2661785, 'v', v, false, false), 'errors'));
                            if (J$.C(128816, J$.R(2661809, 'throwError', throwError, false, false)))
                                throw J$.F(2661865, J$.I(typeof Error === 'undefined' ? Error = J$.R(2661817, 'Error', undefined, true, true) : Error = J$.R(2661817, 'Error', Error, true, true)), true)(J$.B(401666, '+', J$.T(2661825, 'custom keyword definition is invalid: ', 21, false), J$.M(2661857, J$.R(2661833, 'this', this, false, false), 'errorsText', false)(J$.G(2661849, J$.R(2661841, 'v', v, false, false), 'errors'))));
                            else
                                return J$.Rt(2661881, J$.T(2661873, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(2662089, J$e);
                        } finally {
                            if (J$.Fr(2662097))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2661937, 'IDENTIFIER', IDENTIFIER, false, false, false);
            J$.N(2661945, 'customRuleCode', customRuleCode, false, false, false);
            J$.N(2661953, 'definitionSchema', definitionSchema, false, false, false);
            addKeyword = J$.N(2661969, 'addKeyword', J$.T(2661961, addKeyword, 12, false), true, false, false);
            getKeyword = J$.N(2661985, 'getKeyword', J$.T(2661977, getKeyword, 12, false), true, false, false);
            removeKeyword = J$.N(2662001, 'removeKeyword', J$.T(2661993, removeKeyword, 12, false), true, false, false);
            validateKeyword = J$.N(2662017, 'validateKeyword', J$.T(2662009, validateKeyword, 12, false), true, false, false);
            J$.T(2659753, 'use strict', 21, false);
            J$.F(2659777, J$.I(typeof require === 'undefined' ? require = J$.R(2659761, 'require', undefined, true, true) : require = J$.R(2659761, 'require', require, true, true)), false)(J$.T(2659769, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2659801, J$.I(typeof require === 'undefined' ? require = J$.R(2659785, 'require', undefined, true, true) : require = J$.R(2659785, 'require', require, true, true)), false)(J$.T(2659793, 'core-js/modules/es.array.splice', 21, false));
            var IDENTIFIER = J$.W(2659817, 'IDENTIFIER', J$.T(2659809, /^[a-z_$][a-z0-9_$-]*$/i, 14, false), IDENTIFIER, false, true);
            var customRuleCode = J$.W(2659849, 'customRuleCode', J$.F(2659841, J$.I(typeof require === 'undefined' ? require = J$.R(2659825, 'require', undefined, true, true) : require = J$.R(2659825, 'require', require, true, true)), false)(J$.T(2659833, './dotjs/custom', 21, false)), customRuleCode, false, true);
            var definitionSchema = J$.W(2659881, 'definitionSchema', J$.F(2659873, J$.I(typeof require === 'undefined' ? require = J$.R(2659857, 'require', undefined, true, true) : require = J$.R(2659857, 'require', require, true, true)), false)(J$.T(2659865, './definition_schema', 21, false)), definitionSchema, false, true);
            J$.P(2659937, J$.I(typeof module === 'undefined' ? module = J$.R(2659889, 'module', undefined, true, true) : module = J$.R(2659889, 'module', module, true, true)), 'exports', J$.T(2659929, {
                add: J$.R(2659897, 'addKeyword', addKeyword, false, true),
                get: J$.R(2659905, 'getKeyword', getKeyword, false, true),
                remove: J$.R(2659913, 'removeKeyword', removeKeyword, false, true),
                validate: J$.R(2659921, 'validateKeyword', validateKeyword, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2662105, J$e);
        } finally {
            if (J$.Sr(2662113))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

