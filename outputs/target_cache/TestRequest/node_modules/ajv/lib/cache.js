J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2529097, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/ajv/lib/cache.js');
            J$.N(2529105, 'Cache', Cache, false, false, false);
            J$.T(2528665, 'use strict', 21, false);
            var Cache = J$.W(2528737, 'Cache', J$.P(2528729, J$.I(typeof module === 'undefined' ? module = J$.R(2528673, 'module', undefined, true, true) : module = J$.R(2528673, 'module', module, true, true)), 'exports', J$.T(2528721, function Cache() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2528705, arguments.callee, this, arguments);
                            arguments = J$.N(2528713, 'arguments', arguments, true, false, false);
                            J$.P(2528697, J$.R(2528681, 'this', this, false, false), '_cache', J$.T(2528689, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(2529113, J$e);
                        } finally {
                            if (J$.Fr(2529121))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), Cache, false, true);
            J$.P(2528841, J$.G(2528753, J$.R(2528745, 'Cache', Cache, false, true), 'prototype'), 'put', J$.T(2528833, function Cache_put(key, value) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2528801, arguments.callee, this, arguments);
                            arguments = J$.N(2528809, 'arguments', arguments, true, false, false);
                            key = J$.N(2528817, 'key', key, true, false, false);
                            value = J$.N(2528825, 'value', value, true, false, false);
                            J$.P(2528793, J$.G(2528769, J$.R(2528761, 'this', this, false, false), '_cache'), J$.R(2528777, 'key', key, false, false), J$.R(2528785, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(2529129, J$e);
                        } finally {
                            if (J$.Fr(2529137))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2528937, J$.G(2528857, J$.R(2528849, 'Cache', Cache, false, true), 'prototype'), 'get', J$.T(2528929, function Cache_get(key) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2528905, arguments.callee, this, arguments);
                            arguments = J$.N(2528913, 'arguments', arguments, true, false, false);
                            key = J$.N(2528921, 'key', key, true, false, false);
                            return J$.Rt(2528897, J$.G(2528889, J$.G(2528873, J$.R(2528865, 'this', this, false, false), '_cache'), J$.R(2528881, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(2529145, J$e);
                        } finally {
                            if (J$.Fr(2529153))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2529017, J$.G(2528953, J$.R(2528945, 'Cache', Cache, false, true), 'prototype'), 'del', J$.T(2529009, function Cache_del(key) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2528985, arguments.callee, this, arguments);
                            arguments = J$.N(2528993, 'arguments', arguments, true, false, false);
                            key = J$.N(2529001, 'key', key, true, false, false);
                            J$.B(368858, 'delete', J$.G(2528969, J$.R(2528961, 'this', this, false, false), '_cache'), J$.R(2528977, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(2529161, J$e);
                        } finally {
                            if (J$.Fr(2529169))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2529089, J$.G(2529033, J$.R(2529025, 'Cache', Cache, false, true), 'prototype'), 'clear', J$.T(2529081, function Cache_clear() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2529065, arguments.callee, this, arguments);
                            arguments = J$.N(2529073, 'arguments', arguments, true, false, false);
                            J$.P(2529057, J$.R(2529041, 'this', this, false, false), '_cache', J$.T(2529049, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(2529177, J$e);
                        } finally {
                            if (J$.Fr(2529185))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2529193, J$e);
        } finally {
            if (J$.Sr(2529201))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

