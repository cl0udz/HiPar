J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3209025, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/qs/test/utils.js');
            J$.N(3209033, 'test', test, false, false, false);
            J$.N(3209041, 'utils', utils, false, false, false);
            J$.T(3207761, 'use strict', 21, false);
            var test = J$.W(3207793, 'test', J$.F(3207785, J$.I(typeof require === 'undefined' ? require = J$.R(3207769, 'require', undefined, true, true) : require = J$.R(3207769, 'require', require, true, true)), false)(J$.T(3207777, 'tape', 21, false)), test, false, true);
            var utils = J$.W(3207825, 'utils', J$.F(3207817, J$.I(typeof require === 'undefined' ? require = J$.R(3207801, 'require', undefined, true, true) : require = J$.R(3207801, 'require', require, true, true)), false)(J$.T(3207809, '../lib/utils', 21, false)), utils, false, true);
            J$.F(3208657, J$.R(3207833, 'test', test, false, true), false)(J$.T(3207841, 'merge()', 21, false), J$.T(3208649, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3208593, arguments.callee, this, arguments);
                            arguments = J$.N(3208601, 'arguments', arguments, true, false, false);
                            t = J$.N(3208609, 't', t, true, false, false);
                            J$.N(3208617, 'oneMerged', oneMerged, false, false, false);
                            J$.N(3208625, 'twoMerged', twoMerged, false, false, false);
                            J$.N(3208633, 'sandwiched', sandwiched, false, false, false);
                            J$.N(3208641, 'nestedArrays', nestedArrays, false, false, false);
                            J$.M(3207945, J$.R(3207849, 't', t, false, false), 'deepEqual', false)(J$.M(3207897, J$.R(3207857, 'utils', utils, false, true), 'merge', false)(J$.T(3207873, { a: J$.T(3207865, 'b', 21, false) }, 11, false), J$.T(3207889, { a: J$.T(3207881, 'c', 21, false) }, 11, false)), J$.T(3207929, {
                                a: J$.T(3207921, [
                                    J$.T(3207905, 'b', 21, false),
                                    J$.T(3207913, 'c', 21, false)
                                ], 10, false)
                            }, 11, false), J$.T(3207937, 'merges two objects with the same key', 21, false));
                            var oneMerged = J$.W(3208009, 'oneMerged', J$.M(3208001, J$.R(3207953, 'utils', utils, false, true), 'merge', false)(J$.T(3207969, { foo: J$.T(3207961, 'bar', 21, false) }, 11, false), J$.T(3207993, { foo: J$.T(3207985, { first: J$.T(3207977, '123', 21, false) }, 11, false) }, 11, false)), oneMerged, false, false);
                            J$.M(3208081, J$.R(3208017, 't', t, false, false), 'deepEqual', false)(J$.R(3208025, 'oneMerged', oneMerged, false, false), J$.T(3208065, {
                                foo: J$.T(3208057, [
                                    J$.T(3208033, 'bar', 21, false),
                                    J$.T(3208049, { first: J$.T(3208041, '123', 21, false) }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(3208073, 'merges a standalone and an object into an array', 21, false));
                            var twoMerged = J$.W(3208169, 'twoMerged', J$.M(3208161, J$.R(3208089, 'utils', utils, false, true), 'merge', false)(J$.T(3208129, {
                                foo: J$.T(3208121, [
                                    J$.T(3208097, 'bar', 21, false),
                                    J$.T(3208113, { first: J$.T(3208105, '123', 21, false) }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(3208153, { foo: J$.T(3208145, { second: J$.T(3208137, '456', 21, false) }, 11, false) }, 11, false)), twoMerged, false, false);
                            J$.M(3208249, J$.R(3208177, 't', t, false, false), 'deepEqual', false)(J$.R(3208185, 'twoMerged', twoMerged, false, false), J$.T(3208233, {
                                foo: J$.T(3208225, {
                                    0: J$.T(3208193, 'bar', 21, false),
                                    1: J$.T(3208209, { first: J$.T(3208201, '123', 21, false) }, 11, false),
                                    second: J$.T(3208217, '456', 21, false)
                                }, 11, false)
                            }, 11, false), J$.T(3208241, 'merges a standalone and two objects into an array', 21, false));
                            var sandwiched = J$.W(3208337, 'sandwiched', J$.M(3208329, J$.R(3208257, 'utils', utils, false, true), 'merge', false)(J$.T(3208305, {
                                foo: J$.T(3208297, [
                                    J$.T(3208265, 'bar', 21, false),
                                    J$.T(3208289, {
                                        first: J$.T(3208273, '123', 21, false),
                                        second: J$.T(3208281, '456', 21, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(3208321, { foo: J$.T(3208313, 'baz', 21, false) }, 11, false)), sandwiched, false, false);
                            J$.M(3208425, J$.R(3208345, 't', t, false, false), 'deepEqual', false)(J$.R(3208353, 'sandwiched', sandwiched, false, false), J$.T(3208409, {
                                foo: J$.T(3208401, [
                                    J$.T(3208361, 'bar', 21, false),
                                    J$.T(3208385, {
                                        first: J$.T(3208369, '123', 21, false),
                                        second: J$.T(3208377, '456', 21, false)
                                    }, 11, false),
                                    J$.T(3208393, 'baz', 21, false)
                                ], 10, false)
                            }, 11, false), J$.T(3208417, 'merges an object sandwiched by two standalones into an array', 21, false));
                            var nestedArrays = J$.W(3208505, 'nestedArrays', J$.M(3208497, J$.R(3208433, 'utils', utils, false, true), 'merge', false)(J$.T(3208457, { foo: J$.T(3208449, [J$.T(3208441, 'baz', 21, false)], 10, false) }, 11, false), J$.T(3208489, {
                                foo: J$.T(3208481, [
                                    J$.T(3208465, 'bar', 21, false),
                                    J$.T(3208473, 'xyzzy', 21, false)
                                ], 10, false)
                            }, 11, false)), nestedArrays, false, false);
                            J$.M(3208569, J$.R(3208513, 't', t, false, false), 'deepEqual', false)(J$.R(3208521, 'nestedArrays', nestedArrays, false, false), J$.T(3208561, {
                                foo: J$.T(3208553, [
                                    J$.T(3208529, 'baz', 21, false),
                                    J$.T(3208537, 'bar', 21, false),
                                    J$.T(3208545, 'xyzzy', 21, false)
                                ], 10, false)
                            }, 11, false));
                            J$.M(3208585, J$.R(3208577, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(3209049, J$e);
                        } finally {
                            if (J$.Fr(3209057))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(3209017, J$.R(3208665, 'test', test, false, true), false)(J$.T(3208673, 'assign()', 21, false), J$.T(3209009, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3208961, arguments.callee, this, arguments);
                            arguments = J$.N(3208969, 'arguments', arguments, true, false, false);
                            t = J$.N(3208977, 't', t, true, false, false);
                            J$.N(3208985, 'target', target, false, false, false);
                            J$.N(3208993, 'source', source, false, false, false);
                            J$.N(3209001, 'result', result, false, false, false);
                            var target = J$.W(3208705, 'target', J$.T(3208697, {
                                a: J$.T(3208681, 1, 22, false),
                                b: J$.T(3208689, 2, 22, false)
                            }, 11, false), target, false, false);
                            var source = J$.W(3208737, 'source', J$.T(3208729, {
                                b: J$.T(3208713, 3, 22, false),
                                c: J$.T(3208721, 4, 22, false)
                            }, 11, false), source, false, false);
                            var result = J$.W(3208777, 'result', J$.M(3208769, J$.R(3208745, 'utils', utils, false, true), 'assign', false)(J$.R(3208753, 'target', target, false, false), J$.R(3208761, 'source', source, false, false)), result, false, false);
                            J$.M(3208817, J$.R(3208785, 't', t, false, false), 'equal', false)(J$.R(3208793, 'result', result, false, false), J$.R(3208801, 'target', target, false, false), J$.T(3208809, 'returns the target', 21, false));
                            J$.M(3208881, J$.R(3208825, 't', t, false, false), 'deepEqual', false)(J$.R(3208833, 'target', target, false, false), J$.T(3208865, {
                                a: J$.T(3208841, 1, 22, false),
                                b: J$.T(3208849, 3, 22, false),
                                c: J$.T(3208857, 4, 22, false)
                            }, 11, false), J$.T(3208873, 'target and source are merged', 21, false));
                            J$.M(3208937, J$.R(3208889, 't', t, false, false), 'deepEqual', false)(J$.R(3208897, 'source', source, false, false), J$.T(3208921, {
                                b: J$.T(3208905, 3, 22, false),
                                c: J$.T(3208913, 4, 22, false)
                            }, 11, false), J$.T(3208929, 'source is untouched', 21, false));
                            J$.M(3208953, J$.R(3208945, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(3209065, J$e);
                        } finally {
                            if (J$.Fr(3209073))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3209081, J$e);
        } finally {
            if (J$.Sr(3209089))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

