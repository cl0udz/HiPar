J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(2828969, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/http-signature/lib/parser.js');
            function ExpiredRequestError(message) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2824889, arguments.callee, this, arguments);
                            arguments = J$.N(2824897, 'arguments', arguments, true, false, false);
                            message = J$.N(2824905, 'message', message, true, false, false);
                            J$.M(2824881, J$.R(2824849, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(2824857, 'this', this, false, false), J$.R(2824865, 'message', message, false, false), J$.R(2824873, 'ExpiredRequestError', ExpiredRequestError, false, true));
                        } catch (J$e) {
                            J$.Ex(2829137, J$e);
                        } finally {
                            if (J$.Fr(2829145))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function InvalidHeaderError(message) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2824985, arguments.callee, this, arguments);
                            arguments = J$.N(2824993, 'arguments', arguments, true, false, false);
                            message = J$.N(2825001, 'message', message, true, false, false);
                            J$.M(2824977, J$.R(2824945, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(2824953, 'this', this, false, false), J$.R(2824961, 'message', message, false, false), J$.R(2824969, 'InvalidHeaderError', InvalidHeaderError, false, true));
                        } catch (J$e) {
                            J$.Ex(2829153, J$e);
                        } finally {
                            if (J$.Fr(2829161))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function InvalidParamsError(message) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2825081, arguments.callee, this, arguments);
                            arguments = J$.N(2825089, 'arguments', arguments, true, false, false);
                            message = J$.N(2825097, 'message', message, true, false, false);
                            J$.M(2825073, J$.R(2825041, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(2825049, 'this', this, false, false), J$.R(2825057, 'message', message, false, false), J$.R(2825065, 'InvalidParamsError', InvalidParamsError, false, true));
                        } catch (J$e) {
                            J$.Ex(2829169, J$e);
                        } finally {
                            if (J$.Fr(2829177))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function MissingHeaderError(message) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2825177, arguments.callee, this, arguments);
                            arguments = J$.N(2825185, 'arguments', arguments, true, false, false);
                            message = J$.N(2825193, 'message', message, true, false, false);
                            J$.M(2825169, J$.R(2825137, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(2825145, 'this', this, false, false), J$.R(2825153, 'message', message, false, false), J$.R(2825161, 'MissingHeaderError', MissingHeaderError, false, true));
                        } catch (J$e) {
                            J$.Ex(2829185, J$e);
                        } finally {
                            if (J$.Fr(2829193))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function StrictParsingError(message) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2825273, arguments.callee, this, arguments);
                            arguments = J$.N(2825281, 'arguments', arguments, true, false, false);
                            message = J$.N(2825289, 'message', message, true, false, false);
                            J$.M(2825265, J$.R(2825233, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(2825241, 'this', this, false, false), J$.R(2825249, 'message', message, false, false), J$.R(2825257, 'StrictParsingError', StrictParsingError, false, true));
                        } catch (J$e) {
                            J$.Ex(2829201, J$e);
                        } finally {
                            if (J$.Fr(2829209))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2828977, 'assert', assert, false, false, false);
            J$.N(2828985, 'util', util, false, false, false);
            J$.N(2828993, 'utils', utils, false, false, false);
            J$.N(2829001, 'HASH_ALGOS', HASH_ALGOS, false, false, false);
            J$.N(2829009, 'PK_ALGOS', PK_ALGOS, false, false, false);
            J$.N(2829017, 'HttpSignatureError', HttpSignatureError, false, false, false);
            J$.N(2829025, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            J$.N(2829033, 'validateAlgorithm', validateAlgorithm, false, false, false);
            J$.N(2829041, 'State', State, false, false, false);
            J$.N(2829049, 'ParamsState', ParamsState, false, false, false);
            ExpiredRequestError = J$.N(2829065, 'ExpiredRequestError', J$.T(2829057, ExpiredRequestError, 12, false), true, false, false);
            InvalidHeaderError = J$.N(2829081, 'InvalidHeaderError', J$.T(2829073, InvalidHeaderError, 12, false), true, false, false);
            InvalidParamsError = J$.N(2829097, 'InvalidParamsError', J$.T(2829089, InvalidParamsError, 12, false), true, false, false);
            MissingHeaderError = J$.N(2829113, 'MissingHeaderError', J$.T(2829105, MissingHeaderError, 12, false), true, false, false);
            StrictParsingError = J$.N(2829129, 'StrictParsingError', J$.T(2829121, StrictParsingError, 12, false), true, false, false);
            J$.T(2824377, 'use strict', 21, false);
            J$.F(2824401, J$.I(typeof require === 'undefined' ? require = J$.R(2824385, 'require', undefined, true, true) : require = J$.R(2824385, 'require', require, true, true)), false)(J$.T(2824393, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2824425, J$.I(typeof require === 'undefined' ? require = J$.R(2824409, 'require', undefined, true, true) : require = J$.R(2824409, 'require', require, true, true)), false)(J$.T(2824417, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2824449, J$.I(typeof require === 'undefined' ? require = J$.R(2824433, 'require', undefined, true, true) : require = J$.R(2824433, 'require', require, true, true)), false)(J$.T(2824441, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2824473, J$.I(typeof require === 'undefined' ? require = J$.R(2824457, 'require', undefined, true, true) : require = J$.R(2824457, 'require', require, true, true)), false)(J$.T(2824465, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(2824497, J$.I(typeof require === 'undefined' ? require = J$.R(2824481, 'require', undefined, true, true) : require = J$.R(2824481, 'require', require, true, true)), false)(J$.T(2824489, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2824521, J$.I(typeof require === 'undefined' ? require = J$.R(2824505, 'require', undefined, true, true) : require = J$.R(2824505, 'require', require, true, true)), false)(J$.T(2824513, 'core-js/modules/es.string.split', 21, false));
            J$.F(2824545, J$.I(typeof require === 'undefined' ? require = J$.R(2824529, 'require', undefined, true, true) : require = J$.R(2824529, 'require', require, true, true)), false)(J$.T(2824537, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var assert = J$.W(2824577, 'assert', J$.F(2824569, J$.I(typeof require === 'undefined' ? require = J$.R(2824553, 'require', undefined, true, true) : require = J$.R(2824553, 'require', require, true, true)), false)(J$.T(2824561, 'assert-plus', 21, false)), assert, false, true);
            var util = J$.W(2824609, 'util', J$.F(2824601, J$.I(typeof require === 'undefined' ? require = J$.R(2824585, 'require', undefined, true, true) : require = J$.R(2824585, 'require', require, true, true)), false)(J$.T(2824593, 'util', 21, false)), util, false, true);
            var utils = J$.W(2824641, 'utils', J$.F(2824633, J$.I(typeof require === 'undefined' ? require = J$.R(2824617, 'require', undefined, true, true) : require = J$.R(2824617, 'require', require, true, true)), false)(J$.T(2824625, './utils', 21, false)), utils, false, true);
            var HASH_ALGOS = J$.W(2824665, 'HASH_ALGOS', J$.G(2824657, J$.R(2824649, 'utils', utils, false, true), 'HASH_ALGOS'), HASH_ALGOS, false, true);
            var PK_ALGOS = J$.W(2824689, 'PK_ALGOS', J$.G(2824681, J$.R(2824673, 'utils', utils, false, true), 'PK_ALGOS'), PK_ALGOS, false, true);
            var HttpSignatureError = J$.W(2824713, 'HttpSignatureError', J$.G(2824705, J$.R(2824697, 'utils', utils, false, true), 'HttpSignatureError'), HttpSignatureError, false, true);
            var InvalidAlgorithmError = J$.W(2824737, 'InvalidAlgorithmError', J$.G(2824729, J$.R(2824721, 'utils', utils, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            var validateAlgorithm = J$.W(2824761, 'validateAlgorithm', J$.G(2824753, J$.R(2824745, 'utils', utils, false, true), 'validateAlgorithm'), validateAlgorithm, false, true);
            var State = J$.W(2824793, 'State', J$.T(2824785, {
                New: J$.T(2824769, 0, 22, false),
                Params: J$.T(2824777, 1, 22, false)
            }, 11, false), State, false, true);
            var ParamsState = J$.W(2824841, 'ParamsState', J$.T(2824833, {
                Name: J$.T(2824801, 0, 22, false),
                Quote: J$.T(2824809, 1, 22, false),
                Value: J$.T(2824817, 2, 22, false),
                Comma: J$.T(2824825, 3, 22, false)
            }, 11, false), ParamsState, false, true);
            J$.M(2824937, J$.R(2824913, 'util', util, false, true), 'inherits', false)(J$.R(2824921, 'ExpiredRequestError', ExpiredRequestError, false, true), J$.R(2824929, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(2825033, J$.R(2825009, 'util', util, false, true), 'inherits', false)(J$.R(2825017, 'InvalidHeaderError', InvalidHeaderError, false, true), J$.R(2825025, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(2825129, J$.R(2825105, 'util', util, false, true), 'inherits', false)(J$.R(2825113, 'InvalidParamsError', InvalidParamsError, false, true), J$.R(2825121, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(2825225, J$.R(2825201, 'util', util, false, true), 'inherits', false)(J$.R(2825209, 'MissingHeaderError', MissingHeaderError, false, true), J$.R(2825217, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(2825321, J$.R(2825297, 'util', util, false, true), 'inherits', false)(J$.R(2825305, 'StrictParsingError', StrictParsingError, false, true), J$.R(2825313, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.P(2828961, J$.I(typeof module === 'undefined' ? module = J$.R(2825329, 'module', undefined, true, true) : module = J$.R(2825329, 'module', module, true, true)), 'exports', J$.T(2828953, {
                parseRequest: J$.T(2828945, function parseRequest(request, options) {
                    jalangiLabel6:
                        while (true) {
                            try {
                                J$.Fe(2828793, arguments.callee, this, arguments);
                                arguments = J$.N(2828801, 'arguments', arguments, true, false, false);
                                request = J$.N(2828809, 'request', request, true, false, false);
                                options = J$.N(2828817, 'options', options, true, false, false);
                                J$.N(2828825, 'authzHeaderName', authzHeaderName, false, false, false);
                                J$.N(2828833, 'i', i, false, false, false);
                                J$.N(2828841, 'state', state, false, false, false);
                                J$.N(2828849, 'substate', substate, false, false, false);
                                J$.N(2828857, 'tmpName', tmpName, false, false, false);
                                J$.N(2828865, 'tmpValue', tmpValue, false, false, false);
                                J$.N(2828873, 'parsed', parsed, false, false, false);
                                J$.N(2828881, 'authz', authz, false, false, false);
                                J$.N(2828889, 'c', c, false, false, false);
                                J$.N(2828897, 'code', code, false, false, false);
                                J$.N(2828905, 'h', h, false, false, false);
                                J$.N(2828913, 'value', value, false, false, false);
                                J$.N(2828921, 'date', date, false, false, false);
                                J$.N(2828929, 'now', now, false, false, false);
                                J$.N(2828937, 'skew', skew, false, false, false);
                                J$.M(2825361, J$.R(2825337, 'assert', assert, false, true), 'object', false)(J$.R(2825345, 'request', request, false, false), J$.T(2825353, 'request', 21, false));
                                J$.M(2825401, J$.R(2825369, 'assert', assert, false, true), 'object', false)(J$.G(2825385, J$.R(2825377, 'request', request, false, false), 'headers'), J$.T(2825393, 'request.headers', 21, false));
                                if (J$.C(136232, J$.B(413018, '===', J$.R(2825409, 'options', options, false, false), J$.T(2825417, undefined, 24, false)))) {
                                    options = J$.W(2825433, 'options', J$.T(2825425, {}, 11, false), options, false, false);
                                }
                                if (J$.C(136248, J$.B(413026, '===', J$.G(2825449, J$.R(2825441, 'options', options, false, false), 'headers'), J$.T(2825457, undefined, 24, false)))) {
                                    J$.P(2825529, J$.R(2825465, 'options', options, false, false), 'headers', J$.T(2825521, [J$.C(136240, J$.G(2825497, J$.G(2825481, J$.R(2825473, 'request', request, false, false), 'headers'), J$.T(2825489, 'x-date', 21, false))) ? J$.T(2825505, 'x-date', 21, false) : J$.T(2825513, 'date', 21, false)], 10, false));
                                }
                                J$.M(2825561, J$.R(2825537, 'assert', assert, false, true), 'object', false)(J$.R(2825545, 'options', options, false, false), J$.T(2825553, 'options', 21, false));
                                J$.M(2825601, J$.R(2825569, 'assert', assert, false, true), 'arrayOfString', false)(J$.G(2825585, J$.R(2825577, 'options', options, false, false), 'headers'), J$.T(2825593, 'options.headers', 21, false));
                                J$.M(2825641, J$.R(2825609, 'assert', assert, false, true), 'optionalFinite', false)(J$.G(2825625, J$.R(2825617, 'options', options, false, false), 'clockSkew'), J$.T(2825633, 'options.clockSkew', 21, false));
                                var authzHeaderName = J$.W(2825673, 'authzHeaderName', J$.C(136256, J$.G(2825657, J$.R(2825649, 'options', options, false, false), 'authorizationHeaderName')) ? J$._() : J$.T(2825665, 'authorization', 21, false), authzHeaderName, false, false);
                                if (J$.C(136264, J$.U(413034, '!', J$.G(2825705, J$.G(2825689, J$.R(2825681, 'request', request, false, false), 'headers'), J$.R(2825697, 'authzHeaderName', authzHeaderName, false, false))))) {
                                    throw J$.F(2825753, J$.R(2825713, 'MissingHeaderError', MissingHeaderError, false, true), true)(J$.B(413058, '+', J$.B(413050, '+', J$.B(413042, '+', J$.T(2825721, 'no ', 21, false), J$.R(2825729, 'authzHeaderName', authzHeaderName, false, false)), J$.T(2825737, ' header ', 21, false)), J$.T(2825745, 'present in the request', 21, false)));
                                }
                                J$.P(2825793, J$.R(2825761, 'options', options, false, false), 'clockSkew', J$.C(136272, J$.G(2825777, J$.R(2825769, 'options', options, false, false), 'clockSkew')) ? J$._() : J$.T(2825785, 300, 22, false));
                                var i = J$.W(2825809, 'i', J$.T(2825801, 0, 22, false), i, false, false);
                                var state = J$.W(2825833, 'state', J$.G(2825825, J$.R(2825817, 'State', State, false, true), 'New'), state, false, false);
                                var substate = J$.W(2825857, 'substate', J$.G(2825849, J$.R(2825841, 'ParamsState', ParamsState, false, true), 'Name'), substate, false, false);
                                var tmpName = J$.W(2825873, 'tmpName', J$.T(2825865, '', 21, false), tmpName, false, false);
                                var tmpValue = J$.W(2825889, 'tmpValue', J$.T(2825881, '', 21, false), tmpValue, false, false);
                                var parsed = J$.W(2825929, 'parsed', J$.T(2825921, {
                                    scheme: J$.T(2825897, '', 21, false),
                                    params: J$.T(2825905, {}, 11, false),
                                    signingString: J$.T(2825913, '', 21, false)
                                }, 11, false), parsed, false, false);
                                var authz = J$.W(2825969, 'authz', J$.G(2825961, J$.G(2825945, J$.R(2825937, 'request', request, false, false), 'headers'), J$.R(2825953, 'authzHeaderName', authzHeaderName, false, false)), authz, false, false);
                                for (i = J$.W(2825985, 'i', J$.T(2825977, 0, 22, false), i, false, false); J$.C(136424, J$.B(413066, '<', J$.R(2825993, 'i', i, false, false), J$.G(2826009, J$.R(2826001, 'authz', authz, false, false), 'length'))); J$.B(413090, '-', i = J$.W(2826025, 'i', J$.B(413082, '+', J$.U(413074, '+', J$.R(2826017, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var c = J$.W(2826057, 'c', J$.M(2826049, J$.R(2826033, 'authz', authz, false, false), 'charAt', false)(J$.R(2826041, 'i', i, false, false)), c, false, false);
                                    switch (J$.C1(136400, J$.F(2826081, J$.I(typeof Number === 'undefined' ? Number = J$.R(2826065, 'Number', undefined, true, true) : Number = J$.R(2826065, 'Number', Number, true, true)), false)(J$.R(2826073, 'state', state, false, false)))) {
                                    case J$.C2(136408, J$.G(2826161, J$.R(2826153, 'State', State, false, true), 'New')):
                                        if (J$.C(136280, J$.B(413098, '!==', J$.R(2826089, 'c', c, false, false), J$.T(2826097, ' ', 21, false))))
                                            J$.A(2826121, J$.R(2826105, 'parsed', parsed, false, false), 'scheme', '+')(J$.R(2826113, 'c', c, false, false));
                                        else
                                            state = J$.W(2826145, 'state', J$.G(2826137, J$.R(2826129, 'State', State, false, true), 'Params'), state, false, false);
                                        break;
                                    case J$.C2(136416, J$.G(2826785, J$.R(2826777, 'State', State, false, true), 'Params')):
                                        switch (J$.C1(136360, J$.F(2826185, J$.I(typeof Number === 'undefined' ? Number = J$.R(2826169, 'Number', undefined, true, true) : Number = J$.R(2826169, 'Number', Number, true, true)), false)(J$.R(2826177, 'substate', substate, false, false)))) {
                                        case J$.C2(136368, J$.G(2826433, J$.R(2826425, 'ParamsState', ParamsState, false, true), 'Name')):
                                            var code = J$.W(2826217, 'code', J$.M(2826209, J$.R(2826193, 'c', c, false, false), 'charCodeAt', false)(J$.T(2826201, 0, 22, false)), code, false, false);
                                            if (J$.C(136328, J$.C(136304, J$.C(136288, J$.B(413106, '>=', J$.R(2826225, 'code', code, false, false), J$.T(2826233, 65, 22, false))) ? J$.B(413114, '<=', J$.R(2826241, 'code', code, false, false), J$.T(2826249, 90, 22, false)) : J$._()) ? J$._() : J$.C(136296, J$.B(413122, '>=', J$.R(2826257, 'code', code, false, false), J$.T(2826265, 97, 22, false))) ? J$.B(413130, '<=', J$.R(2826273, 'code', code, false, false), J$.T(2826281, 122, 22, false)) : J$._())) {
                                                tmpName = J$.W(2826305, 'tmpName', J$.B(413138, '+', J$.R(2826297, 'tmpName', tmpName, false, false), J$.R(2826289, 'c', c, false, false)), tmpName, false, false);
                                            } else if (J$.C(136320, J$.B(413146, '===', J$.R(2826313, 'c', c, false, false), J$.T(2826321, '=', 21, false)))) {
                                                if (J$.C(136312, J$.B(413154, '===', J$.G(2826337, J$.R(2826329, 'tmpName', tmpName, false, false), 'length'), J$.T(2826345, 0, 22, false))))
                                                    throw J$.F(2826369, J$.R(2826353, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(2826361, 'bad param format', 21, false));
                                                substate = J$.W(2826393, 'substate', J$.G(2826385, J$.R(2826377, 'ParamsState', ParamsState, false, true), 'Quote'), substate, false, false);
                                            } else {
                                                throw J$.F(2826417, J$.R(2826401, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(2826409, 'bad param format', 21, false));
                                            }
                                            break;
                                        case J$.C2(136376, J$.G(2826529, J$.R(2826521, 'ParamsState', ParamsState, false, true), 'Quote')):
                                            if (J$.C(136336, J$.B(413162, '===', J$.R(2826441, 'c', c, false, false), J$.T(2826449, '"', 21, false)))) {
                                                tmpValue = J$.W(2826465, 'tmpValue', J$.T(2826457, '', 21, false), tmpValue, false, false);
                                                substate = J$.W(2826489, 'substate', J$.G(2826481, J$.R(2826473, 'ParamsState', ParamsState, false, true), 'Value'), substate, false, false);
                                            } else {
                                                throw J$.F(2826513, J$.R(2826497, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(2826505, 'bad param format', 21, false));
                                            }
                                            break;
                                        case J$.C2(136384, J$.G(2826649, J$.R(2826641, 'ParamsState', ParamsState, false, true), 'Value')):
                                            if (J$.C(136344, J$.B(413170, '===', J$.R(2826537, 'c', c, false, false), J$.T(2826545, '"', 21, false)))) {
                                                J$.P(2826585, J$.G(2826561, J$.R(2826553, 'parsed', parsed, false, false), 'params'), J$.R(2826569, 'tmpName', tmpName, false, false), J$.R(2826577, 'tmpValue', tmpValue, false, false));
                                                substate = J$.W(2826609, 'substate', J$.G(2826601, J$.R(2826593, 'ParamsState', ParamsState, false, true), 'Comma'), substate, false, false);
                                            } else {
                                                tmpValue = J$.W(2826633, 'tmpValue', J$.B(413178, '+', J$.R(2826625, 'tmpValue', tmpValue, false, false), J$.R(2826617, 'c', c, false, false)), tmpValue, false, false);
                                            }
                                            break;
                                        case J$.C2(136392, J$.G(2826745, J$.R(2826737, 'ParamsState', ParamsState, false, true), 'Comma')):
                                            if (J$.C(136352, J$.B(413186, '===', J$.R(2826657, 'c', c, false, false), J$.T(2826665, ',', 21, false)))) {
                                                tmpName = J$.W(2826681, 'tmpName', J$.T(2826673, '', 21, false), tmpName, false, false);
                                                substate = J$.W(2826705, 'substate', J$.G(2826697, J$.R(2826689, 'ParamsState', ParamsState, false, true), 'Name'), substate, false, false);
                                            } else {
                                                throw J$.F(2826729, J$.R(2826713, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(2826721, 'bad param format', 21, false));
                                            }
                                            break;
                                        default:
                                            throw J$.F(2826769, J$.I(typeof Error === 'undefined' ? Error = J$.R(2826753, 'Error', undefined, true, true) : Error = J$.R(2826753, 'Error', Error, true, true)), true)(J$.T(2826761, 'Invalid substate', 21, false));
                                        }
                                        break;
                                    default:
                                        throw J$.F(2826809, J$.I(typeof Error === 'undefined' ? Error = J$.R(2826793, 'Error', undefined, true, true) : Error = J$.R(2826793, 'Error', Error, true, true)), true)(J$.T(2826801, 'Invalid substate', 21, false));
                                    }
                                }
                                if (J$.C(136448, J$.C(136432, J$.U(413194, '!', J$.G(2826833, J$.G(2826825, J$.R(2826817, 'parsed', parsed, false, false), 'params'), 'headers'))) ? J$._() : J$.B(413202, '===', J$.G(2826857, J$.G(2826849, J$.R(2826841, 'parsed', parsed, false, false), 'params'), 'headers'), J$.T(2826865, '', 21, false)))) {
                                    if (J$.C(136440, J$.G(2826897, J$.G(2826881, J$.R(2826873, 'request', request, false, false), 'headers'), J$.T(2826889, 'x-date', 21, false)))) {
                                        J$.P(2826937, J$.G(2826913, J$.R(2826905, 'parsed', parsed, false, false), 'params'), 'headers', J$.T(2826929, [J$.T(2826921, 'x-date', 21, false)], 10, false));
                                    } else {
                                        J$.P(2826977, J$.G(2826953, J$.R(2826945, 'parsed', parsed, false, false), 'params'), 'headers', J$.T(2826969, [J$.T(2826961, 'date', 21, false)], 10, false));
                                    }
                                } else {
                                    J$.P(2827041, J$.G(2826993, J$.R(2826985, 'parsed', parsed, false, false), 'params'), 'headers', J$.M(2827033, J$.G(2827017, J$.G(2827009, J$.R(2827001, 'parsed', parsed, false, false), 'params'), 'headers'), 'split', false)(J$.T(2827025, ' ', 21, false)));
                                }
                                if (J$.C(136464, J$.C(136456, J$.U(413210, '!', J$.G(2827057, J$.R(2827049, 'parsed', parsed, false, false), 'scheme'))) ? J$._() : J$.B(413218, '!==', J$.G(2827073, J$.R(2827065, 'parsed', parsed, false, false), 'scheme'), J$.T(2827081, 'Signature', 21, false))))
                                    throw J$.F(2827105, J$.R(2827089, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(2827097, 'scheme was not "Signature"', 21, false));
                                if (J$.C(136472, J$.U(413226, '!', J$.G(2827129, J$.G(2827121, J$.R(2827113, 'parsed', parsed, false, false), 'params'), 'keyId'))))
                                    throw J$.F(2827153, J$.R(2827137, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(2827145, 'keyId was not specified', 21, false));
                                if (J$.C(136480, J$.U(413234, '!', J$.G(2827177, J$.G(2827169, J$.R(2827161, 'parsed', parsed, false, false), 'params'), 'algorithm'))))
                                    throw J$.F(2827201, J$.R(2827185, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(2827193, 'algorithm was not specified', 21, false));
                                if (J$.C(136488, J$.U(413242, '!', J$.G(2827225, J$.G(2827217, J$.R(2827209, 'parsed', parsed, false, false), 'params'), 'signature'))))
                                    throw J$.F(2827249, J$.R(2827233, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(2827241, 'signature was not specified', 21, false));
                                J$.P(2827305, J$.G(2827265, J$.R(2827257, 'parsed', parsed, false, false), 'params'), 'algorithm', J$.M(2827297, J$.G(2827289, J$.G(2827281, J$.R(2827273, 'parsed', parsed, false, false), 'params'), 'algorithm'), 'toLowerCase', false)());
                                try {
                                    J$.F(2827345, J$.R(2827313, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(2827337, J$.G(2827329, J$.R(2827321, 'parsed', parsed, false, false), 'params'), 'algorithm'));
                                } catch (e) {
                                    J$.N(2827433, 'e', e, false, false, true);
                                    if (J$.C(136496, J$.B(413250, 'instanceof', J$.R(2827353, 'e', e, false, false), J$.R(2827361, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true))))
                                        throw J$.F(2827417, J$.R(2827369, 'InvalidParamsError', InvalidParamsError, false, true), true)(J$.B(413266, '+', J$.B(413258, '+', J$.G(2827393, J$.G(2827385, J$.R(2827377, 'parsed', parsed, false, false), 'params'), 'algorithm'), J$.T(2827401, ' is not ', 21, false)), J$.T(2827409, 'supported', 21, false)));
                                    else
                                        throw J$.R(2827425, 'e', e, false, false);
                                }
                                for (i = J$.W(2827449, 'i', J$.T(2827441, 0, 22, false), i, false, false); J$.C(136544, J$.B(413274, '<', J$.R(2827457, 'i', i, false, false), J$.G(2827489, J$.G(2827481, J$.G(2827473, J$.R(2827465, 'parsed', parsed, false, false), 'params'), 'headers'), 'length'))); J$.B(413298, '-', i = J$.W(2827505, 'i', J$.B(413290, '+', J$.U(413282, '+', J$.R(2827497, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var h = J$.W(2827561, 'h', J$.M(2827553, J$.G(2827545, J$.G(2827529, J$.G(2827521, J$.R(2827513, 'parsed', parsed, false, false), 'params'), 'headers'), J$.R(2827537, 'i', i, false, false)), 'toLowerCase', false)(), h, false, false);
                                    J$.P(2827609, J$.G(2827585, J$.G(2827577, J$.R(2827569, 'parsed', parsed, false, false), 'params'), 'headers'), J$.R(2827593, 'i', i, false, false), J$.R(2827601, 'h', h, false, false));
                                    if (J$.C(136528, J$.B(413306, '===', J$.R(2827617, 'h', h, false, false), J$.T(2827625, 'request-line', 21, false)))) {
                                        if (J$.C(136504, J$.U(413314, '!', J$.G(2827641, J$.R(2827633, 'options', options, false, false), 'strict')))) {
                                            J$.A(2827721, J$.R(2827649, 'parsed', parsed, false, false), 'signingString', '+')(J$.B(413346, '+', J$.B(413338, '+', J$.B(413330, '+', J$.B(413322, '+', J$.G(2827665, J$.R(2827657, 'request', request, false, false), 'method'), J$.T(2827673, ' ', 21, false)), J$.G(2827689, J$.R(2827681, 'request', request, false, false), 'url')), J$.T(2827697, ' HTTP/', 21, false)), J$.G(2827713, J$.R(2827705, 'request', request, false, false), 'httpVersion')));
                                        } else {
                                            throw J$.F(2827753, J$.R(2827729, 'StrictParsingError', StrictParsingError, false, true), true)(J$.B(413354, '+', J$.T(2827737, 'request-line is not a valid header ', 21, false), J$.T(2827745, 'with strict parsing enabled.', 21, false)));
                                        }
                                    } else if (J$.C(136520, J$.B(413362, '===', J$.R(2827761, 'h', h, false, false), J$.T(2827769, '(request-target)', 21, false)))) {
                                        J$.A(2827841, J$.R(2827777, 'parsed', parsed, false, false), 'signingString', '+')(J$.B(413386, '+', J$.B(413378, '+', J$.B(413370, '+', J$.T(2827785, '(request-target): ', 21, false), J$.M(2827809, J$.G(2827801, J$.R(2827793, 'request', request, false, false), 'method'), 'toLowerCase', false)()), J$.T(2827817, ' ', 21, false)), J$.G(2827833, J$.R(2827825, 'request', request, false, false), 'url')));
                                    } else {
                                        var value = J$.W(2827881, 'value', J$.G(2827873, J$.G(2827857, J$.R(2827849, 'request', request, false, false), 'headers'), J$.R(2827865, 'h', h, false, false)), value, false, false);
                                        if (J$.C(136512, J$.B(413394, '===', J$.R(2827889, 'value', value, false, false), J$.T(2827897, undefined, 24, false))))
                                            throw J$.F(2827929, J$.R(2827905, 'MissingHeaderError', MissingHeaderError, false, true), true)(J$.B(413402, '+', J$.R(2827913, 'h', h, false, false), J$.T(2827921, ' was not in the request', 21, false)));
                                        J$.A(2827969, J$.R(2827937, 'parsed', parsed, false, false), 'signingString', '+')(J$.B(413418, '+', J$.B(413410, '+', J$.R(2827945, 'h', h, false, false), J$.T(2827953, ': ', 21, false)), J$.R(2827961, 'value', value, false, false)));
                                    }
                                    if (J$.C(136536, J$.B(413434, '<', J$.B(413426, '+', J$.R(2827977, 'i', i, false, false), J$.T(2827985, 1, 22, false)), J$.G(2828017, J$.G(2828009, J$.G(2828001, J$.R(2827993, 'parsed', parsed, false, false), 'params'), 'headers'), 'length'))))
                                        J$.A(2828041, J$.R(2828025, 'parsed', parsed, false, false), 'signingString', '+')(J$.T(2828033, '\n', 21, false));
                                }
                                var date;
                                if (J$.C(136576, J$.C(136552, J$.G(2828065, J$.G(2828057, J$.R(2828049, 'request', request, false, false), 'headers'), 'date')) ? J$._() : J$.G(2828097, J$.G(2828081, J$.R(2828073, 'request', request, false, false), 'headers'), J$.T(2828089, 'x-date', 21, false)))) {
                                    if (J$.C(136560, J$.G(2828129, J$.G(2828113, J$.R(2828105, 'request', request, false, false), 'headers'), J$.T(2828121, 'x-date', 21, false)))) {
                                        date = J$.W(2828185, 'date', J$.F(2828177, J$.I(typeof Date === 'undefined' ? Date = J$.R(2828137, 'Date', undefined, true, true) : Date = J$.R(2828137, 'Date', Date, true, true)), true)(J$.G(2828169, J$.G(2828153, J$.R(2828145, 'request', request, false, false), 'headers'), J$.T(2828161, 'x-date', 21, false))), date, false, false);
                                    } else {
                                        date = J$.W(2828233, 'date', J$.F(2828225, J$.I(typeof Date === 'undefined' ? Date = J$.R(2828193, 'Date', undefined, true, true) : Date = J$.R(2828193, 'Date', Date, true, true)), true)(J$.G(2828217, J$.G(2828209, J$.R(2828201, 'request', request, false, false), 'headers'), 'date')), date, false, false);
                                    }
                                    var now = J$.W(2828257, 'now', J$.F(2828249, J$.I(typeof Date === 'undefined' ? Date = J$.R(2828241, 'Date', undefined, true, true) : Date = J$.R(2828241, 'Date', Date, true, true)), true)(), now, false, false);
                                    var skew = J$.W(2828313, 'skew', J$.M(2828305, J$.I(typeof Math === 'undefined' ? Math = J$.R(2828265, 'Math', undefined, true, true) : Math = J$.R(2828265, 'Math', Math, true, true)), 'abs', false)(J$.B(413442, '-', J$.M(2828281, J$.R(2828273, 'now', now, false, false), 'getTime', false)(), J$.M(2828297, J$.R(2828289, 'date', date, false, false), 'getTime', false)())), skew, false, false);
                                    if (J$.C(136568, J$.B(413458, '>', J$.R(2828321, 'skew', skew, false, false), J$.B(413450, '*', J$.G(2828337, J$.R(2828329, 'options', options, false, false), 'clockSkew'), J$.T(2828345, 1000, 22, false))))) {
                                        throw J$.F(2828417, J$.R(2828353, 'ExpiredRequestError', ExpiredRequestError, false, true), true)(J$.B(413498, '+', J$.B(413490, '+', J$.B(413482, '+', J$.B(413474, '+', J$.T(2828361, 'clock skew of ', 21, false), J$.B(413466, '/', J$.R(2828369, 'skew', skew, false, false), J$.T(2828377, 1000, 22, false))), J$.T(2828385, 's was greater than ', 21, false)), J$.G(2828401, J$.R(2828393, 'options', options, false, false), 'clockSkew')), J$.T(2828409, 's', 21, false)));
                                    }
                                }
                                J$.M(2828561, J$.G(2828433, J$.R(2828425, 'options', options, false, false), 'headers'), 'forEach', false)(J$.T(2828553, function (hdr) {
                                    jalangiLabel5:
                                        while (true) {
                                            try {
                                                J$.Fe(2828529, arguments.callee, this, arguments);
                                                arguments = J$.N(2828537, 'arguments', arguments, true, false, false);
                                                hdr = J$.N(2828545, 'hdr', hdr, true, false, false);
                                                if (J$.C(136584, J$.B(413506, '<', J$.M(2828481, J$.G(2828457, J$.G(2828449, J$.R(2828441, 'parsed', parsed, false, false), 'params'), 'headers'), 'indexOf', false)(J$.M(2828473, J$.R(2828465, 'hdr', hdr, false, false), 'toLowerCase', false)()), J$.T(2828489, 0, 22, false))))
                                                    throw J$.F(2828521, J$.R(2828497, 'MissingHeaderError', MissingHeaderError, false, true), true)(J$.B(413514, '+', J$.R(2828505, 'hdr', hdr, false, false), J$.T(2828513, ' was not a signed header', 21, false)));
                                            } catch (J$e) {
                                                J$.Ex(2829217, J$e);
                                            } finally {
                                                if (J$.Fr(2829225))
                                                    continue jalangiLabel5;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                if (J$.C(136600, J$.G(2828577, J$.R(2828569, 'options', options, false, false), 'algorithms'))) {
                                    if (J$.C(136592, J$.B(413530, '===', J$.M(2828625, J$.G(2828593, J$.R(2828585, 'options', options, false, false), 'algorithms'), 'indexOf', false)(J$.G(2828617, J$.G(2828609, J$.R(2828601, 'parsed', parsed, false, false), 'params'), 'algorithm')), J$.U(413522, '-', J$.T(2828633, 1, 22, false)))))
                                        throw J$.F(2828681, J$.R(2828641, 'InvalidParamsError', InvalidParamsError, false, true), true)(J$.B(413538, '+', J$.G(2828665, J$.G(2828657, J$.R(2828649, 'parsed', parsed, false, false), 'params'), 'algorithm'), J$.T(2828673, ' is not a supported algorithm', 21, false)));
                                }
                                J$.P(2828729, J$.R(2828689, 'parsed', parsed, false, false), 'algorithm', J$.M(2828721, J$.G(2828713, J$.G(2828705, J$.R(2828697, 'parsed', parsed, false, false), 'params'), 'algorithm'), 'toUpperCase', false)());
                                J$.P(2828769, J$.R(2828737, 'parsed', parsed, false, false), 'keyId', J$.G(2828761, J$.G(2828753, J$.R(2828745, 'parsed', parsed, false, false), 'params'), 'keyId'));
                                return J$.Rt(2828785, J$.R(2828777, 'parsed', parsed, false, false));
                            } catch (J$e) {
                                J$.Ex(2829233, J$e);
                            } finally {
                                if (J$.Fr(2829241))
                                    continue jalangiLabel6;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2829249, J$e);
        } finally {
            if (J$.Sr(2829257))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

