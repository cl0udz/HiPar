J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(2824321, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/http-signature/lib/index.js');
            J$.N(2824329, 'parser', parser, false, false, false);
            J$.N(2824337, 'signer', signer, false, false, false);
            J$.N(2824345, 'verify', verify, false, false, false);
            J$.N(2824353, 'utils', utils, false, false, false);
            J$.T(2823969, 'use strict', 21, false);
            var parser = J$.W(2824001, 'parser', J$.F(2823993, J$.I(typeof require === 'undefined' ? require = J$.R(2823977, 'require', undefined, true, true) : require = J$.R(2823977, 'require', require, true, true)), false)(J$.T(2823985, './parser', 21, false)), parser, false, true);
            var signer = J$.W(2824033, 'signer', J$.F(2824025, J$.I(typeof require === 'undefined' ? require = J$.R(2824009, 'require', undefined, true, true) : require = J$.R(2824009, 'require', require, true, true)), false)(J$.T(2824017, './signer', 21, false)), signer, false, true);
            var verify = J$.W(2824065, 'verify', J$.F(2824057, J$.I(typeof require === 'undefined' ? require = J$.R(2824041, 'require', undefined, true, true) : require = J$.R(2824041, 'require', require, true, true)), false)(J$.T(2824049, './verify', 21, false)), verify, false, true);
            var utils = J$.W(2824097, 'utils', J$.F(2824089, J$.I(typeof require === 'undefined' ? require = J$.R(2824073, 'require', undefined, true, true) : require = J$.R(2824073, 'require', require, true, true)), false)(J$.T(2824081, './utils', 21, false)), utils, false, true);
            J$.P(2824313, J$.I(typeof module === 'undefined' ? module = J$.R(2824105, 'module', undefined, true, true) : module = J$.R(2824105, 'module', module, true, true)), 'exports', J$.T(2824305, {
                parse: J$.G(2824121, J$.R(2824113, 'parser', parser, false, true), 'parseRequest'),
                parseRequest: J$.G(2824137, J$.R(2824129, 'parser', parser, false, true), 'parseRequest'),
                sign: J$.G(2824153, J$.R(2824145, 'signer', signer, false, true), 'signRequest'),
                signRequest: J$.G(2824169, J$.R(2824161, 'signer', signer, false, true), 'signRequest'),
                createSigner: J$.G(2824185, J$.R(2824177, 'signer', signer, false, true), 'createSigner'),
                isSigner: J$.G(2824201, J$.R(2824193, 'signer', signer, false, true), 'isSigner'),
                sshKeyToPEM: J$.G(2824217, J$.R(2824209, 'utils', utils, false, true), 'sshKeyToPEM'),
                sshKeyFingerprint: J$.G(2824233, J$.R(2824225, 'utils', utils, false, true), 'fingerprint'),
                pemToRsaSSHKey: J$.G(2824249, J$.R(2824241, 'utils', utils, false, true), 'pemToRsaSSHKey'),
                verify: J$.G(2824265, J$.R(2824257, 'verify', verify, false, true), 'verifySignature'),
                verifySignature: J$.G(2824281, J$.R(2824273, 'verify', verify, false, true), 'verifySignature'),
                verifyHMAC: J$.G(2824297, J$.R(2824289, 'verify', verify, false, true), 'verifyHMAC')
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2824361, J$e);
        } finally {
            if (J$.Sr(2824369))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

