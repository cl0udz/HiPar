J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2799841, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/fast-json-stable-stringify/test/nested.js');
            J$.N(2799849, 'test', test, false, false, false);
            J$.N(2799857, 'stringify', stringify, false, false, false);
            J$.T(2798593, 'use strict', 21, false);
            J$.F(2798617, J$.I(typeof require === 'undefined' ? require = J$.R(2798601, 'require', undefined, true, true) : require = J$.R(2798601, 'require', require, true, true)), false)(J$.T(2798609, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2798641, J$.I(typeof require === 'undefined' ? require = J$.R(2798625, 'require', undefined, true, true) : require = J$.R(2798625, 'require', require, true, true)), false)(J$.T(2798633, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2798665, J$.I(typeof require === 'undefined' ? require = J$.R(2798649, 'require', undefined, true, true) : require = J$.R(2798649, 'require', require, true, true)), false)(J$.T(2798657, 'core-js/modules/es.regexp.to-string', 21, false));
            var test = J$.W(2798697, 'test', J$.F(2798689, J$.I(typeof require === 'undefined' ? require = J$.R(2798673, 'require', undefined, true, true) : require = J$.R(2798673, 'require', require, true, true)), false)(J$.T(2798681, 'tape', 21, false)), test, false, true);
            var stringify = J$.W(2798729, 'stringify', J$.F(2798721, J$.I(typeof require === 'undefined' ? require = J$.R(2798705, 'require', undefined, true, true) : require = J$.R(2798705, 'require', require, true, true)), false)(J$.T(2798713, '../', 21, false)), stringify, false, true);
            J$.F(2798945, J$.R(2798737, 'test', test, false, true), false)(J$.T(2798745, 'nested', 21, false), J$.T(2798937, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2798905, arguments.callee, this, arguments);
                            arguments = J$.N(2798913, 'arguments', arguments, true, false, false);
                            t = J$.N(2798921, 't', t, true, false, false);
                            J$.N(2798929, 'obj', obj, false, false, false);
                            J$.M(2798769, J$.R(2798753, 't', t, false, false), 'plan', false)(J$.T(2798761, 1, 22, false));
                            var obj = J$.W(2798849, 'obj', J$.T(2798841, {
                                c: J$.T(2798777, 8, 22, false),
                                b: J$.T(2798825, [
                                    J$.T(2798809, {
                                        z: J$.T(2798785, 6, 22, false),
                                        y: J$.T(2798793, 5, 22, false),
                                        x: J$.T(2798801, 4, 22, false)
                                    }, 11, false),
                                    J$.T(2798817, 7, 22, false)
                                ], 10, false),
                                a: J$.T(2798833, 3, 22, false)
                            }, 11, false), obj, false, false);
                            J$.M(2798897, J$.R(2798857, 't', t, false, false), 'equal', false)(J$.F(2798881, J$.R(2798865, 'stringify', stringify, false, true), false)(J$.R(2798873, 'obj', obj, false, false)), J$.T(2798889, '{"a":3,"b":[{"x":4,"y":5,"z":6},7],"c":8}', 21, false));
                        } catch (J$e) {
                            J$.Ex(2799865, J$e);
                        } finally {
                            if (J$.Fr(2799873))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2799193, J$.R(2798953, 'test', test, false, true), false)(J$.T(2798961, 'cyclic (default)', 21, false), J$.T(2799185, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2799145, arguments.callee, this, arguments);
                            arguments = J$.N(2799153, 'arguments', arguments, true, false, false);
                            t = J$.N(2799161, 't', t, true, false, false);
                            J$.N(2799169, 'one', one, false, false, false);
                            J$.N(2799177, 'two', two, false, false, false);
                            J$.M(2798985, J$.R(2798969, 't', t, false, false), 'plan', false)(J$.T(2798977, 1, 22, false));
                            var one = J$.W(2799009, 'one', J$.T(2799001, { a: J$.T(2798993, 1, 22, false) }, 11, false), one, false, false);
                            var two = J$.W(2799041, 'two', J$.T(2799033, {
                                a: J$.T(2799017, 2, 22, false),
                                one: J$.R(2799025, 'one', one, false, false)
                            }, 11, false), two, false, false);
                            J$.P(2799065, J$.R(2799049, 'one', one, false, false), 'two', J$.R(2799057, 'two', two, false, false));
                            try {
                                J$.F(2799089, J$.R(2799073, 'stringify', stringify, false, true), false)(J$.R(2799081, 'one', one, false, false));
                            } catch (ex) {
                                J$.N(2799137, 'ex', ex, false, false, true);
                                J$.M(2799129, J$.R(2799097, 't', t, false, false), 'equal', false)(J$.M(2799113, J$.R(2799105, 'ex', ex, false, false), 'toString', false)(), J$.T(2799121, 'TypeError: Converting circular structure to JSON', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2799881, J$e);
                        } finally {
                            if (J$.Fr(2799889))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2799433, J$.R(2799201, 'test', test, false, true), false)(J$.T(2799209, 'cyclic (specifically allowed)', 21, false), J$.T(2799425, function (t) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2799385, arguments.callee, this, arguments);
                            arguments = J$.N(2799393, 'arguments', arguments, true, false, false);
                            t = J$.N(2799401, 't', t, true, false, false);
                            J$.N(2799409, 'one', one, false, false, false);
                            J$.N(2799417, 'two', two, false, false, false);
                            J$.M(2799233, J$.R(2799217, 't', t, false, false), 'plan', false)(J$.T(2799225, 1, 22, false));
                            var one = J$.W(2799257, 'one', J$.T(2799249, { a: J$.T(2799241, 1, 22, false) }, 11, false), one, false, false);
                            var two = J$.W(2799289, 'two', J$.T(2799281, {
                                a: J$.T(2799265, 2, 22, false),
                                one: J$.R(2799273, 'one', one, false, false)
                            }, 11, false), two, false, false);
                            J$.P(2799313, J$.R(2799297, 'one', one, false, false), 'two', J$.R(2799305, 'two', two, false, false));
                            J$.M(2799377, J$.R(2799321, 't', t, false, false), 'equal', false)(J$.F(2799361, J$.R(2799329, 'stringify', stringify, false, true), false)(J$.R(2799337, 'one', one, false, false), J$.T(2799353, { cycles: J$.T(2799345, true, 23, false) }, 11, false)), J$.T(2799369, '{"a":1,"two":{"a":2,"one":"__cycle__"}}', 21, false));
                        } catch (J$e) {
                            J$.Ex(2799897, J$e);
                        } finally {
                            if (J$.Fr(2799905))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2799633, J$.R(2799441, 'test', test, false, true), false)(J$.T(2799449, 'repeated non-cyclic value', 21, false), J$.T(2799625, function (t) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2799585, arguments.callee, this, arguments);
                            arguments = J$.N(2799593, 'arguments', arguments, true, false, false);
                            t = J$.N(2799601, 't', t, true, false, false);
                            J$.N(2799609, 'one', one, false, false, false);
                            J$.N(2799617, 'two', two, false, false, false);
                            J$.M(2799473, J$.R(2799457, 't', t, false, false), 'plan', false)(J$.T(2799465, 1, 22, false));
                            var one = J$.W(2799497, 'one', J$.T(2799489, { x: J$.T(2799481, 1, 22, false) }, 11, false), one, false, false);
                            var two = J$.W(2799529, 'two', J$.T(2799521, {
                                a: J$.R(2799505, 'one', one, false, false),
                                b: J$.R(2799513, 'one', one, false, false)
                            }, 11, false), two, false, false);
                            J$.M(2799577, J$.R(2799537, 't', t, false, false), 'equal', false)(J$.F(2799561, J$.R(2799545, 'stringify', stringify, false, true), false)(J$.R(2799553, 'two', two, false, false)), J$.T(2799569, '{"a":{"x":1},"b":{"x":1}}', 21, false));
                        } catch (J$e) {
                            J$.Ex(2799913, J$e);
                        } finally {
                            if (J$.Fr(2799921))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2799833, J$.R(2799641, 'test', test, false, true), false)(J$.T(2799649, 'acyclic but with reused obj-property pointers', 21, false), J$.T(2799825, function (t) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2799785, arguments.callee, this, arguments);
                            arguments = J$.N(2799793, 'arguments', arguments, true, false, false);
                            t = J$.N(2799801, 't', t, true, false, false);
                            J$.N(2799809, 'x', x, false, false, false);
                            J$.N(2799817, 'y', y, false, false, false);
                            J$.M(2799673, J$.R(2799657, 't', t, false, false), 'plan', false)(J$.T(2799665, 1, 22, false));
                            var x = J$.W(2799697, 'x', J$.T(2799689, { a: J$.T(2799681, 1, 22, false) }, 11, false), x, false, false);
                            var y = J$.W(2799729, 'y', J$.T(2799721, {
                                b: J$.R(2799705, 'x', x, false, false),
                                c: J$.R(2799713, 'x', x, false, false)
                            }, 11, false), y, false, false);
                            J$.M(2799777, J$.R(2799737, 't', t, false, false), 'equal', false)(J$.F(2799761, J$.R(2799745, 'stringify', stringify, false, true), false)(J$.R(2799753, 'y', y, false, false)), J$.T(2799769, '{"b":{"a":1},"c":{"a":1}}', 21, false));
                        } catch (J$e) {
                            J$.Ex(2799929, J$e);
                        } finally {
                            if (J$.Fr(2799937))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2799945, J$e);
        } finally {
            if (J$.Sr(2799953))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

