J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(2802129, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/fast-json-stable-stringify/test/to-json.js');
            J$.N(2802137, 'test', test, false, false, false);
            J$.N(2802145, 'stringify', stringify, false, false, false);
            J$.T(2801417, 'use strict', 21, false);
            var test = J$.W(2801449, 'test', J$.F(2801441, J$.I(typeof require === 'undefined' ? require = J$.R(2801425, 'require', undefined, true, true) : require = J$.R(2801425, 'require', require, true, true)), false)(J$.T(2801433, 'tape', 21, false)), test, false, true);
            var stringify = J$.W(2801481, 'stringify', J$.F(2801473, J$.I(typeof require === 'undefined' ? require = J$.R(2801457, 'require', undefined, true, true) : require = J$.R(2801457, 'require', require, true, true)), false)(J$.T(2801465, '../', 21, false)), stringify, false, true);
            J$.F(2801697, J$.R(2801489, 'test', test, false, true), false)(J$.T(2801497, 'toJSON function', 21, false), J$.T(2801689, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2801657, arguments.callee, this, arguments);
                            arguments = J$.N(2801665, 'arguments', arguments, true, false, false);
                            t = J$.N(2801673, 't', t, true, false, false);
                            J$.N(2801681, 'obj', obj, false, false, false);
                            J$.M(2801521, J$.R(2801505, 't', t, false, false), 'plan', false)(J$.T(2801513, 1, 22, false));
                            var obj = J$.W(2801601, 'obj', J$.T(2801593, {
                                one: J$.T(2801529, 1, 22, false),
                                two: J$.T(2801537, 2, 22, false),
                                toJSON: J$.T(2801585, function toJSON() {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(2801569, arguments.callee, this, arguments);
                                                arguments = J$.N(2801577, 'arguments', arguments, true, false, false);
                                                return J$.Rt(2801561, J$.T(2801553, { one: J$.T(2801545, 1, 22, false) }, 11, false));
                                            } catch (J$e) {
                                                J$.Ex(2802153, J$e);
                                            } finally {
                                                if (J$.Fr(2802161))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false), obj, false, false);
                            J$.M(2801649, J$.R(2801609, 't', t, false, false), 'equal', false)(J$.F(2801633, J$.R(2801617, 'stringify', stringify, false, true), false)(J$.R(2801625, 'obj', obj, false, false)), J$.T(2801641, '{"one":1}', 21, false));
                        } catch (J$e) {
                            J$.Ex(2802169, J$e);
                        } finally {
                            if (J$.Fr(2802177))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2801905, J$.R(2801705, 'test', test, false, true), false)(J$.T(2801713, 'toJSON returns string', 21, false), J$.T(2801897, function (t) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2801865, arguments.callee, this, arguments);
                            arguments = J$.N(2801873, 'arguments', arguments, true, false, false);
                            t = J$.N(2801881, 't', t, true, false, false);
                            J$.N(2801889, 'obj', obj, false, false, false);
                            J$.M(2801737, J$.R(2801721, 't', t, false, false), 'plan', false)(J$.T(2801729, 1, 22, false));
                            var obj = J$.W(2801809, 'obj', J$.T(2801801, {
                                one: J$.T(2801745, 1, 22, false),
                                two: J$.T(2801753, 2, 22, false),
                                toJSON: J$.T(2801793, function toJSON() {
                                    jalangiLabel2:
                                        while (true) {
                                            try {
                                                J$.Fe(2801777, arguments.callee, this, arguments);
                                                arguments = J$.N(2801785, 'arguments', arguments, true, false, false);
                                                return J$.Rt(2801769, J$.T(2801761, 'one', 21, false));
                                            } catch (J$e) {
                                                J$.Ex(2802185, J$e);
                                            } finally {
                                                if (J$.Fr(2802193))
                                                    continue jalangiLabel2;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false), obj, false, false);
                            J$.M(2801857, J$.R(2801817, 't', t, false, false), 'equal', false)(J$.F(2801841, J$.R(2801825, 'stringify', stringify, false, true), false)(J$.R(2801833, 'obj', obj, false, false)), J$.T(2801849, '"one"', 21, false));
                        } catch (J$e) {
                            J$.Ex(2802201, J$e);
                        } finally {
                            if (J$.Fr(2802209))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2802121, J$.R(2801913, 'test', test, false, true), false)(J$.T(2801921, 'toJSON returns array', 21, false), J$.T(2802113, function (t) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2802081, arguments.callee, this, arguments);
                            arguments = J$.N(2802089, 'arguments', arguments, true, false, false);
                            t = J$.N(2802097, 't', t, true, false, false);
                            J$.N(2802105, 'obj', obj, false, false, false);
                            J$.M(2801945, J$.R(2801929, 't', t, false, false), 'plan', false)(J$.T(2801937, 1, 22, false));
                            var obj = J$.W(2802025, 'obj', J$.T(2802017, {
                                one: J$.T(2801953, 1, 22, false),
                                two: J$.T(2801961, 2, 22, false),
                                toJSON: J$.T(2802009, function toJSON() {
                                    jalangiLabel4:
                                        while (true) {
                                            try {
                                                J$.Fe(2801993, arguments.callee, this, arguments);
                                                arguments = J$.N(2802001, 'arguments', arguments, true, false, false);
                                                return J$.Rt(2801985, J$.T(2801977, [J$.T(2801969, 'one', 21, false)], 10, false));
                                            } catch (J$e) {
                                                J$.Ex(2802217, J$e);
                                            } finally {
                                                if (J$.Fr(2802225))
                                                    continue jalangiLabel4;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false), obj, false, false);
                            J$.M(2802073, J$.R(2802033, 't', t, false, false), 'equal', false)(J$.F(2802057, J$.R(2802041, 'stringify', stringify, false, true), false)(J$.R(2802049, 'obj', obj, false, false)), J$.T(2802065, '["one"]', 21, false));
                        } catch (J$e) {
                            J$.Ex(2802233, J$e);
                        } finally {
                            if (J$.Fr(2802241))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2802249, J$e);
        } finally {
            if (J$.Sr(2802257))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

