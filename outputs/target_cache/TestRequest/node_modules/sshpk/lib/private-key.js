J$.noInstrEval = false;
jalangiLabel13:
    while (true) {
        try {
            J$.Se(3447721, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/sshpk/lib/private-key.js');
            function PrivateKey(opts) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3443217, arguments.callee, this, arguments);
                            arguments = J$.N(3443225, 'arguments', arguments, true, false, false);
                            opts = J$.N(3443233, 'opts', opts, true, false, false);
                            J$.M(3443153, J$.R(3443129, 'assert', assert, false, true), 'object', false)(J$.R(3443137, 'opts', opts, false, false), J$.T(3443145, 'options', 21, false));
                            J$.M(3443185, J$.R(3443161, 'Key', Key, false, true), 'call', false)(J$.R(3443169, 'this', this, false, false), J$.R(3443177, 'opts', opts, false, false));
                            J$.P(3443209, J$.R(3443193, 'this', this, false, false), '_pubCache', J$.T(3443201, undefined, 24, false));
                        } catch (J$e) {
                            J$.Ex(3447897, J$e);
                        } finally {
                            if (J$.Fr(3447905))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3447729, 'assert', assert, false, false, false);
            J$.N(3447737, 'Buffer', Buffer, false, false, false);
            J$.N(3447745, 'algs', algs, false, false, false);
            J$.N(3447753, 'crypto', crypto, false, false, false);
            J$.N(3447761, 'Fingerprint', Fingerprint, false, false, false);
            J$.N(3447769, 'Signature', Signature, false, false, false);
            J$.N(3447777, 'errs', errs, false, false, false);
            J$.N(3447785, 'util', util, false, false, false);
            J$.N(3447793, 'utils', utils, false, false, false);
            J$.N(3447801, 'dhe', dhe, false, false, false);
            J$.N(3447809, 'generateECDSA', generateECDSA, false, false, false);
            J$.N(3447817, 'generateED25519', generateED25519, false, false, false);
            J$.N(3447825, 'edCompat', edCompat, false, false, false);
            J$.N(3447833, 'nacl', nacl, false, false, false);
            J$.N(3447841, 'Key', Key, false, false, false);
            J$.N(3447849, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            J$.N(3447857, 'KeyParseError', KeyParseError, false, false, false);
            J$.N(3447865, 'KeyEncryptedError', KeyEncryptedError, false, false, false);
            J$.N(3447873, 'formats', formats, false, false, false);
            PrivateKey = J$.N(3447889, 'PrivateKey', J$.T(3447881, PrivateKey, 12, false), true, false, false);
            J$.T(3441337, 'use strict', 21, false);
            J$.F(3441361, J$.I(typeof require === 'undefined' ? require = J$.R(3441345, 'require', undefined, true, true) : require = J$.R(3441345, 'require', require, true, true)), false)(J$.T(3441353, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(3441385, J$.I(typeof require === 'undefined' ? require = J$.R(3441369, 'require', undefined, true, true) : require = J$.R(3441369, 'require', require, true, true)), false)(J$.T(3441377, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3441409, J$.I(typeof require === 'undefined' ? require = J$.R(3441393, 'require', undefined, true, true) : require = J$.R(3441393, 'require', require, true, true)), false)(J$.T(3441401, 'core-js/modules/es.array-buffer.slice', 21, false));
            J$.F(3441433, J$.I(typeof require === 'undefined' ? require = J$.R(3441417, 'require', undefined, true, true) : require = J$.R(3441417, 'require', require, true, true)), false)(J$.T(3441425, 'core-js/modules/es.function.bind', 21, false));
            J$.F(3441457, J$.I(typeof require === 'undefined' ? require = J$.R(3441441, 'require', undefined, true, true) : require = J$.R(3441441, 'require', require, true, true)), false)(J$.T(3441449, 'core-js/modules/es.function.name', 21, false));
            J$.F(3441481, J$.I(typeof require === 'undefined' ? require = J$.R(3441465, 'require', undefined, true, true) : require = J$.R(3441465, 'require', require, true, true)), false)(J$.T(3441473, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3441505, J$.I(typeof require === 'undefined' ? require = J$.R(3441489, 'require', undefined, true, true) : require = J$.R(3441489, 'require', require, true, true)), false)(J$.T(3441497, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(3441529, J$.I(typeof require === 'undefined' ? require = J$.R(3441513, 'require', undefined, true, true) : require = J$.R(3441513, 'require', require, true, true)), false)(J$.T(3441521, 'core-js/modules/es.string.match', 21, false));
            J$.F(3441553, J$.I(typeof require === 'undefined' ? require = J$.R(3441537, 'require', undefined, true, true) : require = J$.R(3441537, 'require', require, true, true)), false)(J$.T(3441545, 'core-js/modules/es.typed-array.uint8-array', 21, false));
            J$.F(3441577, J$.I(typeof require === 'undefined' ? require = J$.R(3441561, 'require', undefined, true, true) : require = J$.R(3441561, 'require', require, true, true)), false)(J$.T(3441569, 'core-js/modules/es.typed-array.copy-within', 21, false));
            J$.F(3441601, J$.I(typeof require === 'undefined' ? require = J$.R(3441585, 'require', undefined, true, true) : require = J$.R(3441585, 'require', require, true, true)), false)(J$.T(3441593, 'core-js/modules/es.typed-array.every', 21, false));
            J$.F(3441625, J$.I(typeof require === 'undefined' ? require = J$.R(3441609, 'require', undefined, true, true) : require = J$.R(3441609, 'require', require, true, true)), false)(J$.T(3441617, 'core-js/modules/es.typed-array.fill', 21, false));
            J$.F(3441649, J$.I(typeof require === 'undefined' ? require = J$.R(3441633, 'require', undefined, true, true) : require = J$.R(3441633, 'require', require, true, true)), false)(J$.T(3441641, 'core-js/modules/es.typed-array.filter', 21, false));
            J$.F(3441673, J$.I(typeof require === 'undefined' ? require = J$.R(3441657, 'require', undefined, true, true) : require = J$.R(3441657, 'require', require, true, true)), false)(J$.T(3441665, 'core-js/modules/es.typed-array.find', 21, false));
            J$.F(3441697, J$.I(typeof require === 'undefined' ? require = J$.R(3441681, 'require', undefined, true, true) : require = J$.R(3441681, 'require', require, true, true)), false)(J$.T(3441689, 'core-js/modules/es.typed-array.find-index', 21, false));
            J$.F(3441721, J$.I(typeof require === 'undefined' ? require = J$.R(3441705, 'require', undefined, true, true) : require = J$.R(3441705, 'require', require, true, true)), false)(J$.T(3441713, 'core-js/modules/es.typed-array.for-each', 21, false));
            J$.F(3441745, J$.I(typeof require === 'undefined' ? require = J$.R(3441729, 'require', undefined, true, true) : require = J$.R(3441729, 'require', require, true, true)), false)(J$.T(3441737, 'core-js/modules/es.typed-array.includes', 21, false));
            J$.F(3441769, J$.I(typeof require === 'undefined' ? require = J$.R(3441753, 'require', undefined, true, true) : require = J$.R(3441753, 'require', require, true, true)), false)(J$.T(3441761, 'core-js/modules/es.typed-array.index-of', 21, false));
            J$.F(3441793, J$.I(typeof require === 'undefined' ? require = J$.R(3441777, 'require', undefined, true, true) : require = J$.R(3441777, 'require', require, true, true)), false)(J$.T(3441785, 'core-js/modules/es.typed-array.iterator', 21, false));
            J$.F(3441817, J$.I(typeof require === 'undefined' ? require = J$.R(3441801, 'require', undefined, true, true) : require = J$.R(3441801, 'require', require, true, true)), false)(J$.T(3441809, 'core-js/modules/es.typed-array.join', 21, false));
            J$.F(3441841, J$.I(typeof require === 'undefined' ? require = J$.R(3441825, 'require', undefined, true, true) : require = J$.R(3441825, 'require', require, true, true)), false)(J$.T(3441833, 'core-js/modules/es.typed-array.last-index-of', 21, false));
            J$.F(3441865, J$.I(typeof require === 'undefined' ? require = J$.R(3441849, 'require', undefined, true, true) : require = J$.R(3441849, 'require', require, true, true)), false)(J$.T(3441857, 'core-js/modules/es.typed-array.map', 21, false));
            J$.F(3441889, J$.I(typeof require === 'undefined' ? require = J$.R(3441873, 'require', undefined, true, true) : require = J$.R(3441873, 'require', require, true, true)), false)(J$.T(3441881, 'core-js/modules/es.typed-array.reduce', 21, false));
            J$.F(3441913, J$.I(typeof require === 'undefined' ? require = J$.R(3441897, 'require', undefined, true, true) : require = J$.R(3441897, 'require', require, true, true)), false)(J$.T(3441905, 'core-js/modules/es.typed-array.reduce-right', 21, false));
            J$.F(3441937, J$.I(typeof require === 'undefined' ? require = J$.R(3441921, 'require', undefined, true, true) : require = J$.R(3441921, 'require', require, true, true)), false)(J$.T(3441929, 'core-js/modules/es.typed-array.reverse', 21, false));
            J$.F(3441961, J$.I(typeof require === 'undefined' ? require = J$.R(3441945, 'require', undefined, true, true) : require = J$.R(3441945, 'require', require, true, true)), false)(J$.T(3441953, 'core-js/modules/es.typed-array.set', 21, false));
            J$.F(3441985, J$.I(typeof require === 'undefined' ? require = J$.R(3441969, 'require', undefined, true, true) : require = J$.R(3441969, 'require', require, true, true)), false)(J$.T(3441977, 'core-js/modules/es.typed-array.slice', 21, false));
            J$.F(3442009, J$.I(typeof require === 'undefined' ? require = J$.R(3441993, 'require', undefined, true, true) : require = J$.R(3441993, 'require', require, true, true)), false)(J$.T(3442001, 'core-js/modules/es.typed-array.some', 21, false));
            J$.F(3442033, J$.I(typeof require === 'undefined' ? require = J$.R(3442017, 'require', undefined, true, true) : require = J$.R(3442017, 'require', require, true, true)), false)(J$.T(3442025, 'core-js/modules/es.typed-array.sort', 21, false));
            J$.F(3442057, J$.I(typeof require === 'undefined' ? require = J$.R(3442041, 'require', undefined, true, true) : require = J$.R(3442041, 'require', require, true, true)), false)(J$.T(3442049, 'core-js/modules/es.typed-array.subarray', 21, false));
            J$.F(3442081, J$.I(typeof require === 'undefined' ? require = J$.R(3442065, 'require', undefined, true, true) : require = J$.R(3442065, 'require', require, true, true)), false)(J$.T(3442073, 'core-js/modules/es.typed-array.to-locale-string', 21, false));
            J$.F(3442105, J$.I(typeof require === 'undefined' ? require = J$.R(3442089, 'require', undefined, true, true) : require = J$.R(3442089, 'require', require, true, true)), false)(J$.T(3442097, 'core-js/modules/es.typed-array.to-string', 21, false));
            J$.P(3442129, J$.I(typeof module === 'undefined' ? module = J$.R(3442113, 'module', undefined, true, true) : module = J$.R(3442113, 'module', module, true, true)), 'exports', J$.R(3442121, 'PrivateKey', PrivateKey, false, true));
            var assert = J$.W(3442161, 'assert', J$.F(3442153, J$.I(typeof require === 'undefined' ? require = J$.R(3442137, 'require', undefined, true, true) : require = J$.R(3442137, 'require', require, true, true)), false)(J$.T(3442145, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(3442201, 'Buffer', J$.G(3442193, J$.F(3442185, J$.I(typeof require === 'undefined' ? require = J$.R(3442169, 'require', undefined, true, true) : require = J$.R(3442169, 'require', require, true, true)), false)(J$.T(3442177, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(3442233, 'algs', J$.F(3442225, J$.I(typeof require === 'undefined' ? require = J$.R(3442209, 'require', undefined, true, true) : require = J$.R(3442209, 'require', require, true, true)), false)(J$.T(3442217, './algs', 21, false)), algs, false, true);
            var crypto = J$.W(3442265, 'crypto', J$.F(3442257, J$.I(typeof require === 'undefined' ? require = J$.R(3442241, 'require', undefined, true, true) : require = J$.R(3442241, 'require', require, true, true)), false)(J$.T(3442249, 'crypto', 21, false)), crypto, false, true);
            var Fingerprint = J$.W(3442297, 'Fingerprint', J$.F(3442289, J$.I(typeof require === 'undefined' ? require = J$.R(3442273, 'require', undefined, true, true) : require = J$.R(3442273, 'require', require, true, true)), false)(J$.T(3442281, './fingerprint', 21, false)), Fingerprint, false, true);
            var Signature = J$.W(3442329, 'Signature', J$.F(3442321, J$.I(typeof require === 'undefined' ? require = J$.R(3442305, 'require', undefined, true, true) : require = J$.R(3442305, 'require', require, true, true)), false)(J$.T(3442313, './signature', 21, false)), Signature, false, true);
            var errs = J$.W(3442361, 'errs', J$.F(3442353, J$.I(typeof require === 'undefined' ? require = J$.R(3442337, 'require', undefined, true, true) : require = J$.R(3442337, 'require', require, true, true)), false)(J$.T(3442345, './errors', 21, false)), errs, false, true);
            var util = J$.W(3442393, 'util', J$.F(3442385, J$.I(typeof require === 'undefined' ? require = J$.R(3442369, 'require', undefined, true, true) : require = J$.R(3442369, 'require', require, true, true)), false)(J$.T(3442377, 'util', 21, false)), util, false, true);
            var utils = J$.W(3442425, 'utils', J$.F(3442417, J$.I(typeof require === 'undefined' ? require = J$.R(3442401, 'require', undefined, true, true) : require = J$.R(3442401, 'require', require, true, true)), false)(J$.T(3442409, './utils', 21, false)), utils, false, true);
            var dhe = J$.W(3442457, 'dhe', J$.F(3442449, J$.I(typeof require === 'undefined' ? require = J$.R(3442433, 'require', undefined, true, true) : require = J$.R(3442433, 'require', require, true, true)), false)(J$.T(3442441, './dhe', 21, false)), dhe, false, true);
            var generateECDSA = J$.W(3442481, 'generateECDSA', J$.G(3442473, J$.R(3442465, 'dhe', dhe, false, true), 'generateECDSA'), generateECDSA, false, true);
            var generateED25519 = J$.W(3442505, 'generateED25519', J$.G(3442497, J$.R(3442489, 'dhe', dhe, false, true), 'generateED25519'), generateED25519, false, true);
            var edCompat = J$.W(3442537, 'edCompat', J$.F(3442529, J$.I(typeof require === 'undefined' ? require = J$.R(3442513, 'require', undefined, true, true) : require = J$.R(3442513, 'require', require, true, true)), false)(J$.T(3442521, './ed-compat', 21, false)), edCompat, false, true);
            var nacl = J$.W(3442569, 'nacl', J$.F(3442561, J$.I(typeof require === 'undefined' ? require = J$.R(3442545, 'require', undefined, true, true) : require = J$.R(3442545, 'require', require, true, true)), false)(J$.T(3442553, 'tweetnacl', 21, false)), nacl, false, true);
            var Key = J$.W(3442601, 'Key', J$.F(3442593, J$.I(typeof require === 'undefined' ? require = J$.R(3442577, 'require', undefined, true, true) : require = J$.R(3442577, 'require', require, true, true)), false)(J$.T(3442585, './key', 21, false)), Key, false, true);
            var InvalidAlgorithmError = J$.W(3442625, 'InvalidAlgorithmError', J$.G(3442617, J$.R(3442609, 'errs', errs, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            var KeyParseError = J$.W(3442649, 'KeyParseError', J$.G(3442641, J$.R(3442633, 'errs', errs, false, true), 'KeyParseError'), KeyParseError, false, true);
            var KeyEncryptedError = J$.W(3442673, 'KeyEncryptedError', J$.G(3442665, J$.R(3442657, 'errs', errs, false, true), 'KeyEncryptedError'), KeyEncryptedError, false, true);
            var formats = J$.W(3442689, 'formats', J$.T(3442681, {}, 11, false), formats, false, true);
            J$.P(3442737, J$.R(3442697, 'formats', formats, false, true), J$.T(3442705, 'auto', 21, false), J$.F(3442729, J$.I(typeof require === 'undefined' ? require = J$.R(3442713, 'require', undefined, true, true) : require = J$.R(3442713, 'require', require, true, true)), false)(J$.T(3442721, './formats/auto', 21, false)));
            J$.P(3442785, J$.R(3442745, 'formats', formats, false, true), J$.T(3442753, 'pem', 21, false), J$.F(3442777, J$.I(typeof require === 'undefined' ? require = J$.R(3442761, 'require', undefined, true, true) : require = J$.R(3442761, 'require', require, true, true)), false)(J$.T(3442769, './formats/pem', 21, false)));
            J$.P(3442833, J$.R(3442793, 'formats', formats, false, true), J$.T(3442801, 'pkcs1', 21, false), J$.F(3442825, J$.I(typeof require === 'undefined' ? require = J$.R(3442809, 'require', undefined, true, true) : require = J$.R(3442809, 'require', require, true, true)), false)(J$.T(3442817, './formats/pkcs1', 21, false)));
            J$.P(3442881, J$.R(3442841, 'formats', formats, false, true), J$.T(3442849, 'pkcs8', 21, false), J$.F(3442873, J$.I(typeof require === 'undefined' ? require = J$.R(3442857, 'require', undefined, true, true) : require = J$.R(3442857, 'require', require, true, true)), false)(J$.T(3442865, './formats/pkcs8', 21, false)));
            J$.P(3442929, J$.R(3442889, 'formats', formats, false, true), J$.T(3442897, 'rfc4253', 21, false), J$.F(3442921, J$.I(typeof require === 'undefined' ? require = J$.R(3442905, 'require', undefined, true, true) : require = J$.R(3442905, 'require', require, true, true)), false)(J$.T(3442913, './formats/rfc4253', 21, false)));
            J$.P(3442977, J$.R(3442937, 'formats', formats, false, true), J$.T(3442945, 'ssh-private', 21, false), J$.F(3442969, J$.I(typeof require === 'undefined' ? require = J$.R(3442953, 'require', undefined, true, true) : require = J$.R(3442953, 'require', require, true, true)), false)(J$.T(3442961, './formats/ssh-private', 21, false)));
            J$.P(3443025, J$.R(3442985, 'formats', formats, false, true), J$.T(3442993, 'openssh', 21, false), J$.G(3443017, J$.R(3443001, 'formats', formats, false, true), J$.T(3443009, 'ssh-private', 21, false)));
            J$.P(3443073, J$.R(3443033, 'formats', formats, false, true), J$.T(3443041, 'ssh', 21, false), J$.G(3443065, J$.R(3443049, 'formats', formats, false, true), J$.T(3443057, 'ssh-private', 21, false)));
            J$.P(3443121, J$.R(3443081, 'formats', formats, false, true), J$.T(3443089, 'dnssec', 21, false), J$.F(3443113, J$.I(typeof require === 'undefined' ? require = J$.R(3443097, 'require', undefined, true, true) : require = J$.R(3443097, 'require', require, true, true)), false)(J$.T(3443105, './formats/dnssec', 21, false)));
            J$.M(3443265, J$.R(3443241, 'util', util, false, true), 'inherits', false)(J$.R(3443249, 'PrivateKey', PrivateKey, false, true), J$.R(3443257, 'Key', Key, false, true));
            J$.P(3443289, J$.R(3443273, 'PrivateKey', PrivateKey, false, true), 'formats', J$.R(3443281, 'formats', formats, false, true));
            J$.P(3443553, J$.G(3443305, J$.R(3443297, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'toBuffer', J$.T(3443545, function (format, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3443513, arguments.callee, this, arguments);
                            arguments = J$.N(3443521, 'arguments', arguments, true, false, false);
                            format = J$.N(3443529, 'format', format, true, false, false);
                            options = J$.N(3443537, 'options', options, true, false, false);
                            if (J$.C(159968, J$.B(452442, '===', J$.R(3443313, 'format', format, false, false), J$.T(3443321, undefined, 24, false))))
                                format = J$.W(3443337, 'format', J$.T(3443329, 'pkcs1', 21, false), format, false, false);
                            J$.M(3443369, J$.R(3443345, 'assert', assert, false, true), 'string', false)(J$.R(3443353, 'format', format, false, false), J$.T(3443361, 'format', 21, false));
                            J$.M(3443417, J$.R(3443377, 'assert', assert, false, true), 'object', false)(J$.G(3443401, J$.R(3443385, 'formats', formats, false, true), J$.R(3443393, 'format', format, false, false)), J$.T(3443409, 'formats[format]', 21, false));
                            J$.M(3443449, J$.R(3443425, 'assert', assert, false, true), 'optionalObject', false)(J$.R(3443433, 'options', options, false, false), J$.T(3443441, 'options', 21, false));
                            return J$.Rt(3443505, J$.M(3443497, J$.G(3443473, J$.R(3443457, 'formats', formats, false, true), J$.R(3443465, 'format', format, false, false)), 'write', false)(J$.R(3443481, 'this', this, false, false), J$.R(3443489, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(3447913, J$e);
                        } finally {
                            if (J$.Fr(3447921))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3443665, J$.G(3443569, J$.R(3443561, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'hash', J$.T(3443657, function (algo, type) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3443625, arguments.callee, this, arguments);
                            arguments = J$.N(3443633, 'arguments', arguments, true, false, false);
                            algo = J$.N(3443641, 'algo', algo, true, false, false);
                            type = J$.N(3443649, 'type', type, true, false, false);
                            return J$.Rt(3443617, J$.M(3443609, J$.M(3443585, J$.R(3443577, 'this', this, false, false), 'toPublic', false)(), 'hash', false)(J$.R(3443593, 'algo', algo, false, false), J$.R(3443601, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(3447929, J$e);
                        } finally {
                            if (J$.Fr(3447937))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3443777, J$.G(3443681, J$.R(3443673, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'fingerprint', J$.T(3443769, function (algo, type) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3443737, arguments.callee, this, arguments);
                            arguments = J$.N(3443745, 'arguments', arguments, true, false, false);
                            algo = J$.N(3443753, 'algo', algo, true, false, false);
                            type = J$.N(3443761, 'type', type, true, false, false);
                            return J$.Rt(3443729, J$.M(3443721, J$.M(3443697, J$.R(3443689, 'this', this, false, false), 'toPublic', false)(), 'fingerprint', false)(J$.R(3443705, 'algo', algo, false, false), J$.R(3443713, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(3447945, J$e);
                        } finally {
                            if (J$.Fr(3447953))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3444265, J$.G(3443793, J$.R(3443785, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'toPublic', J$.T(3444257, function () {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3444209, arguments.callee, this, arguments);
                            arguments = J$.N(3444217, 'arguments', arguments, true, false, false);
                            J$.N(3444225, 'algInfo', algInfo, false, false, false);
                            J$.N(3444233, 'pubParts', pubParts, false, false, false);
                            J$.N(3444241, 'i', i, false, false, false);
                            J$.N(3444249, 'p', p, false, false, false);
                            if (J$.C(159976, J$.G(3443809, J$.R(3443801, 'this', this, false, false), '_pubCache')))
                                return J$.Rt(3443833, J$.G(3443825, J$.R(3443817, 'this', this, false, false), '_pubCache'));
                            var algInfo = J$.W(3443881, 'algInfo', J$.G(3443873, J$.G(3443849, J$.R(3443841, 'algs', algs, false, true), 'info'), J$.G(3443865, J$.R(3443857, 'this', this, false, false), 'type')), algInfo, false, false);
                            var pubParts = J$.W(3443897, 'pubParts', J$.T(3443889, [], 10, false), pubParts, false, false);
                            for (var i = J$.W(3443913, 'i', J$.T(3443905, 0, 22, false), i, false, false); J$.C(159984, J$.B(452450, '<', J$.R(3443921, 'i', i, false, false), J$.G(3443945, J$.G(3443937, J$.R(3443929, 'algInfo', algInfo, false, false), 'parts'), 'length'))); i = J$.W(3443961, 'i', J$.B(452466, '+', J$.U(452458, '+', J$.R(3443953, 'i', i, false, false)), 1), i, false, false)) {
                                var p = J$.W(3444001, 'p', J$.G(3443993, J$.G(3443977, J$.R(3443969, 'algInfo', algInfo, false, false), 'parts'), J$.R(3443985, 'i', i, false, false)), p, false, false);
                                J$.M(3444049, J$.R(3444009, 'pubParts', pubParts, false, false), 'push', false)(J$.G(3444041, J$.G(3444025, J$.R(3444017, 'this', this, false, false), 'part'), J$.R(3444033, 'p', p, false, false)));
                            }
                            J$.P(3444121, J$.R(3444057, 'this', this, false, false), '_pubCache', J$.F(3444113, J$.R(3444065, 'Key', Key, false, true), true)(J$.T(3444105, {
                                type: J$.G(3444081, J$.R(3444073, 'this', this, false, false), 'type'),
                                source: J$.R(3444089, 'this', this, false, false),
                                parts: J$.R(3444097, 'pubParts', pubParts, false, false)
                            }, 11, false)));
                            if (J$.C(159992, J$.G(3444137, J$.R(3444129, 'this', this, false, false), 'comment')))
                                J$.P(3444177, J$.G(3444153, J$.R(3444145, 'this', this, false, false), '_pubCache'), 'comment', J$.G(3444169, J$.R(3444161, 'this', this, false, false), 'comment'));
                            return J$.Rt(3444201, J$.G(3444193, J$.R(3444185, 'this', this, false, false), '_pubCache'));
                        } catch (J$e) {
                            J$.Ex(3447961, J$e);
                        } finally {
                            if (J$.Fr(3447969))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3445185, J$.G(3444281, J$.R(3444273, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'derive', J$.T(3445177, function (newType) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(3445129, arguments.callee, this, arguments);
                            arguments = J$.N(3445137, 'arguments', arguments, true, false, false);
                            newType = J$.N(3445145, 'newType', newType, true, false, false);
                            J$.N(3445153, 'priv', priv, false, false, false);
                            J$.N(3445161, 'pub', pub, false, false, false);
                            J$.N(3445169, 'pair', pair, false, false, false);
                            J$.M(3444313, J$.R(3444289, 'assert', assert, false, true), 'string', false)(J$.R(3444297, 'newType', newType, false, false), J$.T(3444305, 'type', 21, false));
                            var priv, pub, pair;
                            if (J$.C(160040, J$.C(160000, J$.B(452474, '===', J$.G(3444329, J$.R(3444321, 'this', this, false, false), 'type'), J$.T(3444337, 'ed25519', 21, false))) ? J$.B(452482, '===', J$.R(3444345, 'newType', newType, false, false), J$.T(3444353, 'curve25519', 21, false)) : J$._())) {
                                priv = J$.W(3444393, 'priv', J$.G(3444385, J$.G(3444377, J$.G(3444369, J$.R(3444361, 'this', this, false, false), 'part'), 'k'), 'data'), priv, false, false);
                                if (J$.C(160008, J$.B(452490, '===', J$.G(3444417, J$.R(3444401, 'priv', priv, false, false), J$.T(3444409, 0, 22, false)), J$.T(3444425, 0, 22, false))))
                                    priv = J$.W(3444457, 'priv', J$.M(3444449, J$.R(3444433, 'priv', priv, false, false), 'slice', false)(J$.T(3444441, 1, 22, false)), priv, false, false);
                                pair = J$.W(3444521, 'pair', J$.M(3444513, J$.G(3444481, J$.G(3444473, J$.R(3444465, 'nacl', nacl, false, true), 'box'), 'keyPair'), 'fromSecretKey', false)(J$.F(3444505, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3444489, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3444489, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(3444497, 'priv', priv, false, false))), pair, false, false);
                                pub = J$.W(3444561, 'pub', J$.M(3444553, J$.R(3444529, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3444545, J$.R(3444537, 'pair', pair, false, false), 'publicKey')), pub, false, false);
                                return J$.Rt(3444689, J$.F(3444681, J$.R(3444569, 'PrivateKey', PrivateKey, false, true), true)(J$.T(3444673, {
                                    type: J$.T(3444577, 'curve25519', 21, false),
                                    parts: J$.T(3444665, [
                                        J$.T(3444617, {
                                            name: J$.T(3444585, 'A', 21, false),
                                            data: J$.M(3444609, J$.R(3444593, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(3444601, 'pub', pub, false, false))
                                        }, 11, false),
                                        J$.T(3444657, {
                                            name: J$.T(3444625, 'k', 21, false),
                                            data: J$.M(3444649, J$.R(3444633, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(3444641, 'priv', priv, false, false))
                                        }, 11, false)
                                    ], 10, false)
                                }, 11, false)));
                            } else if (J$.C(160032, J$.C(160016, J$.B(452498, '===', J$.G(3444705, J$.R(3444697, 'this', this, false, false), 'type'), J$.T(3444713, 'curve25519', 21, false))) ? J$.B(452506, '===', J$.R(3444721, 'newType', newType, false, false), J$.T(3444729, 'ed25519', 21, false)) : J$._())) {
                                priv = J$.W(3444769, 'priv', J$.G(3444761, J$.G(3444753, J$.G(3444745, J$.R(3444737, 'this', this, false, false), 'part'), 'k'), 'data'), priv, false, false);
                                if (J$.C(160024, J$.B(452514, '===', J$.G(3444793, J$.R(3444777, 'priv', priv, false, false), J$.T(3444785, 0, 22, false)), J$.T(3444801, 0, 22, false))))
                                    priv = J$.W(3444833, 'priv', J$.M(3444825, J$.R(3444809, 'priv', priv, false, false), 'slice', false)(J$.T(3444817, 1, 22, false)), priv, false, false);
                                pair = J$.W(3444897, 'pair', J$.M(3444889, J$.G(3444857, J$.G(3444849, J$.R(3444841, 'nacl', nacl, false, true), 'sign'), 'keyPair'), 'fromSeed', false)(J$.F(3444881, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3444865, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3444865, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(3444873, 'priv', priv, false, false))), pair, false, false);
                                pub = J$.W(3444937, 'pub', J$.M(3444929, J$.R(3444905, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3444921, J$.R(3444913, 'pair', pair, false, false), 'publicKey')), pub, false, false);
                                return J$.Rt(3445065, J$.F(3445057, J$.R(3444945, 'PrivateKey', PrivateKey, false, true), true)(J$.T(3445049, {
                                    type: J$.T(3444953, 'ed25519', 21, false),
                                    parts: J$.T(3445041, [
                                        J$.T(3444993, {
                                            name: J$.T(3444961, 'A', 21, false),
                                            data: J$.M(3444985, J$.R(3444969, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(3444977, 'pub', pub, false, false))
                                        }, 11, false),
                                        J$.T(3445033, {
                                            name: J$.T(3445001, 'k', 21, false),
                                            data: J$.M(3445025, J$.R(3445009, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(3445017, 'priv', priv, false, false))
                                        }, 11, false)
                                    ], 10, false)
                                }, 11, false)));
                            }
                            throw J$.F(3445121, J$.I(typeof Error === 'undefined' ? Error = J$.R(3445073, 'Error', undefined, true, true) : Error = J$.R(3445073, 'Error', Error, true, true)), true)(J$.B(452538, '+', J$.B(452530, '+', J$.B(452522, '+', J$.T(3445081, 'Key derivation not supported from ', 21, false), J$.G(3445097, J$.R(3445089, 'this', this, false, false), 'type')), J$.T(3445105, ' to ', 21, false)), J$.R(3445113, 'newType', newType, false, false)));
                        } catch (J$e) {
                            J$.Ex(3447977, J$e);
                        } finally {
                            if (J$.Fr(3447985))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3445281, J$.G(3445201, J$.R(3445193, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'createVerify', J$.T(3445273, function (hashAlgo) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(3445249, arguments.callee, this, arguments);
                            arguments = J$.N(3445257, 'arguments', arguments, true, false, false);
                            hashAlgo = J$.N(3445265, 'hashAlgo', hashAlgo, true, false, false);
                            return J$.Rt(3445241, J$.M(3445233, J$.M(3445217, J$.R(3445209, 'this', this, false, false), 'toPublic', false)(), 'createVerify', false)(J$.R(3445225, 'hashAlgo', hashAlgo, false, false)));
                        } catch (J$e) {
                            J$.Ex(3447993, J$e);
                        } finally {
                            if (J$.Fr(3448001))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3446241, J$.G(3445297, J$.R(3445289, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'createSign', J$.T(3446233, function (hashAlgo) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(3446153, arguments.callee, this, arguments);
                            arguments = J$.N(3446161, 'arguments', arguments, true, false, false);
                            hashAlgo = J$.N(3446169, 'hashAlgo', hashAlgo, true, false, false);
                            J$.N(3446177, 'v', v, false, false, false);
                            J$.N(3446185, 'nm', nm, false, false, false);
                            J$.N(3446193, 'err', err, false, false, false);
                            J$.N(3446201, 'oldSign', oldSign, false, false, false);
                            J$.N(3446209, 'key', key, false, false, false);
                            J$.N(3446217, 'type', type, false, false, false);
                            J$.N(3446225, 'curve', curve, false, false, false);
                            if (J$.C(160048, J$.B(452546, '===', J$.R(3445305, 'hashAlgo', hashAlgo, false, false), J$.T(3445313, undefined, 24, false))))
                                hashAlgo = J$.W(3445337, 'hashAlgo', J$.M(3445329, J$.R(3445321, 'this', this, false, false), 'defaultHashAlgorithm', false)(), hashAlgo, false, false);
                            J$.M(3445369, J$.R(3445345, 'assert', assert, false, true), 'string', false)(J$.R(3445353, 'hashAlgo', hashAlgo, false, false), J$.T(3445361, 'hash algorithm', 21, false));
                            if (J$.C(160064, J$.C(160056, J$.B(452554, '===', J$.G(3445385, J$.R(3445377, 'this', this, false, false), 'type'), J$.T(3445393, 'ed25519', 21, false))) ? J$.B(452562, '!==', J$.R(3445401, 'edCompat', edCompat, false, true), J$.T(3445409, undefined, 24, false)) : J$._()))
                                return J$.Rt(3445449, J$.M(3445441, J$.R(3445417, 'edCompat', edCompat, false, true), 'Signer', true)(J$.R(3445425, 'this', this, false, false), J$.R(3445433, 'hashAlgo', hashAlgo, false, false)));
                            if (J$.C(160072, J$.B(452570, '===', J$.G(3445465, J$.R(3445457, 'this', this, false, false), 'type'), J$.T(3445473, 'curve25519', 21, false))))
                                throw J$.F(3445505, J$.I(typeof Error === 'undefined' ? Error = J$.R(3445481, 'Error', undefined, true, true) : Error = J$.R(3445481, 'Error', Error, true, true)), true)(J$.B(452578, '+', J$.T(3445489, 'Curve25519 keys are not suitable for ', 21, false), J$.T(3445497, 'signing or verification', 21, false)));
                            var v, nm, err;
                            try {
                                nm = J$.W(3445529, 'nm', J$.M(3445521, J$.R(3445513, 'hashAlgo', hashAlgo, false, false), 'toUpperCase', false)(), nm, false, false);
                                v = J$.W(3445561, 'v', J$.M(3445553, J$.R(3445537, 'crypto', crypto, false, true), 'createSign', false)(J$.R(3445545, 'nm', nm, false, false)), v, false, false);
                            } catch (e) {
                                J$.N(3445585, 'e', e, false, false, true);
                                err = J$.W(3445577, 'err', J$.R(3445569, 'e', e, false, false), err, false, false);
                            }
                            if (J$.C(160096, J$.C(160088, J$.B(452586, '===', J$.R(3445593, 'v', v, false, false), J$.T(3445601, undefined, 24, false))) ? J$._() : J$.C(160080, J$.B(452594, 'instanceof', J$.R(3445609, 'err', err, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(3445617, 'Error', undefined, true, true) : Error = J$.R(3445617, 'Error', Error, true, true)))) ? J$.M(3445649, J$.G(3445633, J$.R(3445625, 'err', err, false, false), 'message'), 'match', false)(J$.T(3445641, /Unknown message digest/, 14, false)) : J$._())) {
                                nm = J$.W(3445665, 'nm', J$.T(3445657, 'RSA-', 21, false), nm, false, false);
                                nm = J$.W(3445697, 'nm', J$.B(452602, '+', J$.R(3445689, 'nm', nm, false, false), J$.M(3445681, J$.R(3445673, 'hashAlgo', hashAlgo, false, false), 'toUpperCase', false)()), nm, false, false);
                                v = J$.W(3445729, 'v', J$.M(3445721, J$.R(3445705, 'crypto', crypto, false, true), 'createSign', false)(J$.R(3445713, 'nm', nm, false, false)), v, false, false);
                            }
                            J$.M(3445761, J$.R(3445737, 'assert', assert, false, true), 'ok', false)(J$.R(3445745, 'v', v, false, false), J$.T(3445753, 'failed to create verifier', 21, false));
                            var oldSign = J$.W(3445801, 'oldSign', J$.M(3445793, J$.G(3445777, J$.R(3445769, 'v', v, false, false), 'sign'), 'bind', false)(J$.R(3445785, 'v', v, false, false)), oldSign, false, false);
                            var key = J$.W(3445833, 'key', J$.M(3445825, J$.R(3445809, 'this', this, false, false), 'toBuffer', false)(J$.T(3445817, 'pkcs1', 21, false)), key, false, false);
                            var type = J$.W(3445857, 'type', J$.G(3445849, J$.R(3445841, 'this', this, false, false), 'type'), type, false, false);
                            var curve = J$.W(3445881, 'curve', J$.G(3445873, J$.R(3445865, 'this', this, false, false), 'curve'), curve, false, false);
                            J$.P(3446129, J$.R(3445889, 'v', v, false, false), 'sign', J$.T(3446121, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(3446097, arguments.callee, this, arguments);
                                            arguments = J$.N(3446105, 'arguments', arguments, true, false, false);
                                            J$.N(3446113, 'sig', sig, false, false, false);
                                            var sig = J$.W(3445921, 'sig', J$.F(3445913, J$.R(3445897, 'oldSign', oldSign, false, false), false)(J$.R(3445905, 'key', key, false, false)), sig, false, false);
                                            if (J$.C(160104, J$.B(452618, '===', J$.U(452610, 'typeof', J$.R(3445929, 'sig', sig, false, false)), J$.T(3445937, 'string', 21, false))))
                                                sig = J$.W(3445977, 'sig', J$.M(3445969, J$.R(3445945, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3445953, 'sig', sig, false, false), J$.T(3445961, 'binary', 21, false)), sig, false, false);
                                            sig = J$.W(3446025, 'sig', J$.M(3446017, J$.R(3445985, 'Signature', Signature, false, true), 'parse', false)(J$.R(3445993, 'sig', sig, false, false), J$.R(3446001, 'type', type, false, false), J$.T(3446009, 'asn1', 21, false)), sig, false, false);
                                            J$.P(3446049, J$.R(3446033, 'sig', sig, false, false), 'hashAlgorithm', J$.R(3446041, 'hashAlgo', hashAlgo, false, false));
                                            J$.P(3446073, J$.R(3446057, 'sig', sig, false, false), 'curve', J$.R(3446065, 'curve', curve, false, false));
                                            return J$.Rt(3446089, J$.R(3446081, 'sig', sig, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3448009, J$e);
                                        } finally {
                                            if (J$.Fr(3448017))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(3446145, J$.R(3446137, 'v', v, false, false));
                        } catch (J$e) {
                            J$.Ex(3448025, J$e);
                        } finally {
                            if (J$.Fr(3448033))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3446913, J$.R(3446249, 'PrivateKey', PrivateKey, false, true), 'parse', J$.T(3446905, function (data, format, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(3446857, arguments.callee, this, arguments);
                            arguments = J$.N(3446865, 'arguments', arguments, true, false, false);
                            data = J$.N(3446873, 'data', data, true, false, false);
                            format = J$.N(3446881, 'format', format, true, false, false);
                            options = J$.N(3446889, 'options', options, true, false, false);
                            J$.N(3446897, 'k', k, false, false, false);
                            if (J$.C(160112, J$.B(452634, '!==', J$.U(452626, 'typeof', J$.R(3446257, 'data', data, false, false)), J$.T(3446265, 'string', 21, false))))
                                J$.M(3446297, J$.R(3446273, 'assert', assert, false, true), 'buffer', false)(J$.R(3446281, 'data', data, false, false), J$.T(3446289, 'data', 21, false));
                            if (J$.C(160120, J$.B(452642, '===', J$.R(3446305, 'format', format, false, false), J$.T(3446313, undefined, 24, false))))
                                format = J$.W(3446329, 'format', J$.T(3446321, 'auto', 21, false), format, false, false);
                            J$.M(3446361, J$.R(3446337, 'assert', assert, false, true), 'string', false)(J$.R(3446345, 'format', format, false, false), J$.T(3446353, 'format', 21, false));
                            if (J$.C(160128, J$.B(452658, '===', J$.U(452650, 'typeof', J$.R(3446369, 'options', options, false, false)), J$.T(3446377, 'string', 21, false))))
                                options = J$.W(3446401, 'options', J$.T(3446393, { filename: J$.R(3446385, 'options', options, false, false) }, 11, false), options, false, false);
                            J$.M(3446433, J$.R(3446409, 'assert', assert, false, true), 'optionalObject', false)(J$.R(3446417, 'options', options, false, false), J$.T(3446425, 'options', 21, false));
                            if (J$.C(160136, J$.B(452666, '===', J$.R(3446441, 'options', options, false, false), J$.T(3446449, undefined, 24, false))))
                                options = J$.W(3446465, 'options', J$.T(3446457, {}, 11, false), options, false, false);
                            J$.M(3446505, J$.R(3446473, 'assert', assert, false, true), 'optionalString', false)(J$.G(3446489, J$.R(3446481, 'options', options, false, false), 'filename'), J$.T(3446497, 'options.filename', 21, false));
                            if (J$.C(160144, J$.B(452674, '===', J$.G(3446521, J$.R(3446513, 'options', options, false, false), 'filename'), J$.T(3446529, undefined, 24, false))))
                                J$.P(3446553, J$.R(3446537, 'options', options, false, false), 'filename', J$.T(3446545, '(unnamed)', 21, false));
                            J$.M(3446601, J$.R(3446561, 'assert', assert, false, true), 'object', false)(J$.G(3446585, J$.R(3446569, 'formats', formats, false, true), J$.R(3446577, 'format', format, false, false)), J$.T(3446593, 'formats[format]', 21, false));
                            try {
                                var k = J$.W(3446657, 'k', J$.M(3446649, J$.G(3446625, J$.R(3446609, 'formats', formats, false, true), J$.R(3446617, 'format', format, false, false)), 'read', false)(J$.R(3446633, 'data', data, false, false), J$.R(3446641, 'options', options, false, false)), k, false, false);
                                J$.M(3446697, J$.R(3446665, 'assert', assert, false, true), 'ok', false)(J$.B(452682, 'instanceof', J$.R(3446673, 'k', k, false, false), J$.R(3446681, 'PrivateKey', PrivateKey, false, true)), J$.T(3446689, 'key is not a private key', 21, false));
                                if (J$.C(160152, J$.U(452690, '!', J$.G(3446713, J$.R(3446705, 'k', k, false, false), 'comment'))))
                                    J$.P(3446745, J$.R(3446721, 'k', k, false, false), 'comment', J$.G(3446737, J$.R(3446729, 'options', options, false, false), 'filename'));
                                return J$.Rt(3446761, J$.R(3446753, 'k', k, false, false));
                            } catch (e) {
                                J$.N(3446849, 'e', e, false, false, true);
                                if (J$.C(160160, J$.B(452698, '===', J$.G(3446777, J$.R(3446769, 'e', e, false, false), 'name'), J$.T(3446785, 'KeyEncryptedError', 21, false))))
                                    throw J$.R(3446793, 'e', e, false, false);
                                throw J$.F(3446841, J$.R(3446801, 'KeyParseError', KeyParseError, false, true), true)(J$.G(3446817, J$.R(3446809, 'options', options, false, false), 'filename'), J$.R(3446825, 'format', format, false, false), J$.R(3446833, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(3448041, J$e);
                        } finally {
                            if (J$.Fr(3448049))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3447017, J$.R(3446921, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', J$.T(3447009, function (obj, ver) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(3446977, arguments.callee, this, arguments);
                            arguments = J$.N(3446985, 'arguments', arguments, true, false, false);
                            obj = J$.N(3446993, 'obj', obj, true, false, false);
                            ver = J$.N(3447001, 'ver', ver, true, false, false);
                            return J$.Rt(3446969, J$.M(3446961, J$.R(3446929, 'utils', utils, false, true), 'isCompatible', false)(J$.R(3446937, 'obj', obj, false, false), J$.R(3446945, 'PrivateKey', PrivateKey, false, true), J$.R(3446953, 'ver', ver, false, false)));
                        } catch (J$e) {
                            J$.Ex(3448057, J$e);
                        } finally {
                            if (J$.Fr(3448065))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3447361, J$.R(3447025, 'PrivateKey', PrivateKey, false, true), 'generate', J$.T(3447353, function (type, options) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(3447321, arguments.callee, this, arguments);
                            arguments = J$.N(3447329, 'arguments', arguments, true, false, false);
                            type = J$.N(3447337, 'type', type, true, false, false);
                            options = J$.N(3447345, 'options', options, true, false, false);
                            if (J$.C(160168, J$.B(452706, '===', J$.R(3447033, 'options', options, false, false), J$.T(3447041, undefined, 24, false))))
                                options = J$.W(3447057, 'options', J$.T(3447049, {}, 11, false), options, false, false);
                            J$.M(3447089, J$.R(3447065, 'assert', assert, false, true), 'object', false)(J$.R(3447073, 'options', options, false, false), J$.T(3447081, 'options', 21, false));
                            switch (J$.C1(160184, J$.R(3447097, 'type', type, false, false))) {
                            case J$.C2(160192, J$.T(3447233, 'ecdsa', 21, false)):
                                if (J$.C(160176, J$.B(452714, '===', J$.G(3447113, J$.R(3447105, 'options', options, false, false), 'curve'), J$.T(3447121, undefined, 24, false))))
                                    J$.P(3447145, J$.R(3447129, 'options', options, false, false), 'curve', J$.T(3447137, 'nistp256', 21, false));
                                J$.M(3447185, J$.R(3447153, 'assert', assert, false, true), 'string', false)(J$.G(3447169, J$.R(3447161, 'options', options, false, false), 'curve'), J$.T(3447177, 'options.curve', 21, false));
                                return J$.Rt(3447225, J$.F(3447217, J$.R(3447193, 'generateECDSA', generateECDSA, false, true), false)(J$.G(3447209, J$.R(3447201, 'options', options, false, false), 'curve')));
                            case J$.C2(160200, J$.T(3447265, 'ed25519', 21, false)):
                                return J$.Rt(3447257, J$.F(3447249, J$.R(3447241, 'generateED25519', generateED25519, false, true), false)());
                            default:
                                throw J$.F(3447313, J$.I(typeof Error === 'undefined' ? Error = J$.R(3447273, 'Error', undefined, true, true) : Error = J$.R(3447273, 'Error', Error, true, true)), true)(J$.B(452738, '+', J$.B(452730, '+', J$.B(452722, '+', J$.T(3447281, 'Key generation not supported with key ', 21, false), J$.T(3447289, 'type "', 21, false)), J$.R(3447297, 'type', type, false, false)), J$.T(3447305, '"', 21, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(3448073, J$e);
                        } finally {
                            if (J$.Fr(3448081))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3447409, J$.G(3447377, J$.R(3447369, 'PrivateKey', PrivateKey, false, true), 'prototype'), '_sshpkApiVersion', J$.T(3447401, [
                J$.T(3447385, 1, 22, false),
                J$.T(3447393, 6, 22, false)
            ], 10, false));
            J$.P(3447713, J$.R(3447417, 'PrivateKey', PrivateKey, false, true), '_oldVersionDetect', J$.T(3447705, function (obj) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(3447681, arguments.callee, this, arguments);
                            arguments = J$.N(3447689, 'arguments', arguments, true, false, false);
                            obj = J$.N(3447697, 'obj', obj, true, false, false);
                            J$.M(3447449, J$.R(3447425, 'assert', assert, false, true), 'func', false)(J$.G(3447441, J$.R(3447433, 'obj', obj, false, false), 'toPublic'));
                            J$.M(3447481, J$.R(3447457, 'assert', assert, false, true), 'func', false)(J$.G(3447473, J$.R(3447465, 'obj', obj, false, false), 'createSign'));
                            if (J$.C(160208, J$.G(3447497, J$.R(3447489, 'obj', obj, false, false), 'derive')))
                                return J$.Rt(3447529, J$.T(3447521, [
                                    J$.T(3447505, 1, 22, false),
                                    J$.T(3447513, 3, 22, false)
                                ], 10, false));
                            if (J$.C(160216, J$.G(3447545, J$.R(3447537, 'obj', obj, false, false), 'defaultHashAlgorithm')))
                                return J$.Rt(3447577, J$.T(3447569, [
                                    J$.T(3447553, 1, 22, false),
                                    J$.T(3447561, 2, 22, false)
                                ], 10, false));
                            if (J$.C(160224, J$.G(3447609, J$.G(3447593, J$.R(3447585, 'obj', obj, false, false), 'formats'), J$.T(3447601, 'auto', 21, false))))
                                return J$.Rt(3447641, J$.T(3447633, [
                                    J$.T(3447617, 1, 22, false),
                                    J$.T(3447625, 1, 22, false)
                                ], 10, false));
                            return J$.Rt(3447673, J$.T(3447665, [
                                J$.T(3447649, 1, 22, false),
                                J$.T(3447657, 0, 22, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(3448089, J$e);
                        } finally {
                            if (J$.Fr(3448097))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3448105, J$e);
        } finally {
            if (J$.Sr(3448113))
                continue jalangiLabel13;
            else
                break jalangiLabel13;
        }
    }
// JALANGI DO NOT INSTRUMENT

