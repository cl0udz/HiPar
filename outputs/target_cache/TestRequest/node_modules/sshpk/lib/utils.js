J$.noInstrEval = false;
jalangiLabel23:
    while (true) {
        try {
            J$.Se(3470889, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/sshpk/lib/utils.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3461217, arguments.callee, this, arguments);
                            arguments = J$.N(3461225, 'arguments', arguments, true, false, false);
                            obj = J$.N(3461233, 'obj', obj, true, false, false);
                            if (J$.C(160808, J$.C(160768, J$.B(453458, '===', J$.U(453450, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3460953, 'Symbol', undefined, true, true) : Symbol = J$.R(3460953, 'Symbol', Symbol, true, true))), J$.T(3460961, 'function', 21, false))) ? J$.B(453474, '===', J$.U(453466, 'typeof', J$.G(3460977, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3460969, 'Symbol', undefined, true, true) : Symbol = J$.R(3460969, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(3460985, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(3461041, '_typeof', J$.T(3461033, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(3461009, arguments.callee, this, arguments);
                                                arguments = J$.N(3461017, 'arguments', arguments, true, false, false);
                                                obj = J$.N(3461025, 'obj', obj, true, false, false);
                                                return J$.Rt(3461001, J$.U(453482, 'typeof', J$.R(3460993, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(3471321, J$e);
                                            } finally {
                                                if (J$.Fr(3471329))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(3461177, '_typeof', J$.T(3461169, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(3461145, arguments.callee, this, arguments);
                                                arguments = J$.N(3461153, 'arguments', arguments, true, false, false);
                                                obj = J$.N(3461161, 'obj', obj, true, false, false);
                                                return J$.Rt(3461137, J$.C(160800, J$.C(160792, J$.C(160784, J$.C(160776, J$.R(3461049, 'obj', obj, false, false)) ? J$.B(453498, '===', J$.U(453490, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3461057, 'Symbol', undefined, true, true) : Symbol = J$.R(3461057, 'Symbol', Symbol, true, true))), J$.T(3461065, 'function', 21, false)) : J$._()) ? J$.B(453506, '===', J$.G(3461081, J$.R(3461073, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3461089, 'Symbol', undefined, true, true) : Symbol = J$.R(3461089, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(453514, '!==', J$.R(3461097, 'obj', obj, false, false), J$.G(3461113, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3461105, 'Symbol', undefined, true, true) : Symbol = J$.R(3461105, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(3461121, 'symbol', 21, false) : J$.U(453522, 'typeof', J$.R(3461129, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(3471337, J$e);
                                            } finally {
                                                if (J$.Fr(3471345))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(3461209, J$.F(3461201, J$.R(3461185, '_typeof', _typeof, false, true), false)(J$.R(3461193, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(3471353, J$e);
                        } finally {
                            if (J$.Fr(3471361))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isCompatible(obj, klass, needVer) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3462393, arguments.callee, this, arguments);
                            arguments = J$.N(3462401, 'arguments', arguments, true, false, false);
                            obj = J$.N(3462409, 'obj', obj, true, false, false);
                            klass = J$.N(3462417, 'klass', klass, true, false, false);
                            needVer = J$.N(3462425, 'needVer', needVer, true, false, false);
                            J$.N(3462433, 'proto', proto, false, false, false);
                            J$.N(3462441, 'depth', depth, false, false, false);
                            J$.N(3462449, 'ver', ver, false, false, false);
                            if (J$.C(160824, J$.C(160816, J$.B(453530, '===', J$.R(3461761, 'obj', obj, false, false), J$.T(3461769, null, 25, false))) ? J$._() : J$.B(453538, '!==', J$.F(3461793, J$.R(3461777, '_typeof', _typeof, false, true), false)(J$.R(3461785, 'obj', obj, false, false)), J$.T(3461801, 'object', 21, false))))
                                return J$.Rt(3461817, J$.T(3461809, false, 23, false));
                            if (J$.C(160832, J$.B(453546, '===', J$.R(3461825, 'needVer', needVer, false, false), J$.T(3461833, undefined, 24, false))))
                                needVer = J$.W(3461865, 'needVer', J$.G(3461857, J$.G(3461849, J$.R(3461841, 'klass', klass, false, false), 'prototype'), '_sshpkApiVersion'), needVer, false, false);
                            if (J$.C(160848, J$.C(160840, J$.B(453554, 'instanceof', J$.R(3461873, 'obj', obj, false, false), J$.R(3461881, 'klass', klass, false, false))) ? J$.B(453562, '==', J$.G(3461921, J$.G(3461905, J$.G(3461897, J$.R(3461889, 'klass', klass, false, false), 'prototype'), '_sshpkApiVersion'), J$.T(3461913, 0, 22, false)), J$.G(3461945, J$.R(3461929, 'needVer', needVer, false, false), J$.T(3461937, 0, 22, false))) : J$._()))
                                return J$.Rt(3461961, J$.T(3461953, true, 23, false));
                            var proto = J$.W(3461993, 'proto', J$.M(3461985, J$.I(typeof Object === 'undefined' ? Object = J$.R(3461969, 'Object', undefined, true, true) : Object = J$.R(3461969, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(3461977, 'obj', obj, false, false)), proto, false, false);
                            var depth = J$.W(3462009, 'depth', J$.T(3462001, 0, 22, false), depth, false, false);
                            while (J$.C(160872, J$.B(453570, '!==', J$.G(3462033, J$.G(3462025, J$.R(3462017, 'proto', proto, false, false), 'constructor'), 'name'), J$.G(3462049, J$.R(3462041, 'klass', klass, false, false), 'name')))) {
                                proto = J$.W(3462081, 'proto', J$.M(3462073, J$.I(typeof Object === 'undefined' ? Object = J$.R(3462057, 'Object', undefined, true, true) : Object = J$.R(3462057, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(3462065, 'proto', proto, false, false)), proto, false, false);
                                if (J$.C(160864, J$.C(160856, J$.U(453578, '!', J$.R(3462089, 'proto', proto, false, false))) ? J$._() : J$.B(453602, '>', depth = J$.W(3462105, 'depth', J$.B(453594, '+', J$.U(453586, '+', J$.R(3462097, 'depth', depth, false, false)), 1), depth, false, false), J$.R(3462113, 'MAX_CLASS_DEPTH', MAX_CLASS_DEPTH, false, true))))
                                    return J$.Rt(3462129, J$.T(3462121, false, 23, false));
                            }
                            if (J$.C(160880, J$.B(453610, '!==', J$.G(3462153, J$.G(3462145, J$.R(3462137, 'proto', proto, false, false), 'constructor'), 'name'), J$.G(3462169, J$.R(3462161, 'klass', klass, false, false), 'name'))))
                                return J$.Rt(3462185, J$.T(3462177, false, 23, false));
                            var ver = J$.W(3462209, 'ver', J$.G(3462201, J$.R(3462193, 'proto', proto, false, false), '_sshpkApiVersion'), ver, false, false);
                            if (J$.C(160888, J$.B(453618, '===', J$.R(3462217, 'ver', ver, false, false), J$.T(3462225, undefined, 24, false))))
                                ver = J$.W(3462257, 'ver', J$.M(3462249, J$.R(3462233, 'klass', klass, false, false), '_oldVersionDetect', false)(J$.R(3462241, 'obj', obj, false, false)), ver, false, false);
                            if (J$.C(160904, J$.C(160896, J$.B(453626, '!=', J$.G(3462281, J$.R(3462265, 'ver', ver, false, false), J$.T(3462273, 0, 22, false)), J$.G(3462305, J$.R(3462289, 'needVer', needVer, false, false), J$.T(3462297, 0, 22, false)))) ? J$._() : J$.B(453634, '<', J$.G(3462329, J$.R(3462313, 'ver', ver, false, false), J$.T(3462321, 1, 22, false)), J$.G(3462353, J$.R(3462337, 'needVer', needVer, false, false), J$.T(3462345, 1, 22, false)))))
                                return J$.Rt(3462369, J$.T(3462361, false, 23, false));
                            return J$.Rt(3462385, J$.T(3462377, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(3471369, J$e);
                        } finally {
                            if (J$.Fr(3471377))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function assertCompatible(obj, klass, needVer, name) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3463297, arguments.callee, this, arguments);
                            arguments = J$.N(3463305, 'arguments', arguments, true, false, false);
                            obj = J$.N(3463313, 'obj', obj, true, false, false);
                            klass = J$.N(3463321, 'klass', klass, true, false, false);
                            needVer = J$.N(3463329, 'needVer', needVer, true, false, false);
                            name = J$.N(3463337, 'name', name, true, false, false);
                            J$.N(3463345, 'proto', proto, false, false, false);
                            J$.N(3463353, 'depth', depth, false, false, false);
                            J$.N(3463361, 'ver', ver, false, false, false);
                            if (J$.C(160912, J$.B(453642, '===', J$.R(3462457, 'name', name, false, false), J$.T(3462465, undefined, 24, false))))
                                name = J$.W(3462481, 'name', J$.T(3462473, 'object', 21, false), name, false, false);
                            J$.M(3462521, J$.R(3462489, 'assert', assert, false, true), 'ok', false)(J$.R(3462497, 'obj', obj, false, false), J$.B(453650, '+', J$.R(3462505, 'name', name, false, false), J$.T(3462513, ' must not be null', 21, false)));
                            J$.M(3462561, J$.R(3462529, 'assert', assert, false, true), 'object', false)(J$.R(3462537, 'obj', obj, false, false), J$.B(453658, '+', J$.R(3462545, 'name', name, false, false), J$.T(3462553, ' must be an object', 21, false)));
                            if (J$.C(160920, J$.B(453666, '===', J$.R(3462569, 'needVer', needVer, false, false), J$.T(3462577, undefined, 24, false))))
                                needVer = J$.W(3462609, 'needVer', J$.G(3462601, J$.G(3462593, J$.R(3462585, 'klass', klass, false, false), 'prototype'), '_sshpkApiVersion'), needVer, false, false);
                            if (J$.C(160936, J$.C(160928, J$.B(453674, 'instanceof', J$.R(3462617, 'obj', obj, false, false), J$.R(3462625, 'klass', klass, false, false))) ? J$.B(453682, '==', J$.G(3462665, J$.G(3462649, J$.G(3462641, J$.R(3462633, 'klass', klass, false, false), 'prototype'), '_sshpkApiVersion'), J$.T(3462657, 0, 22, false)), J$.G(3462689, J$.R(3462673, 'needVer', needVer, false, false), J$.T(3462681, 0, 22, false))) : J$._()))
                                return J$.Rt(3462697, undefined);
                            var proto = J$.W(3462729, 'proto', J$.M(3462721, J$.I(typeof Object === 'undefined' ? Object = J$.R(3462705, 'Object', undefined, true, true) : Object = J$.R(3462705, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(3462713, 'obj', obj, false, false)), proto, false, false);
                            var depth = J$.W(3462745, 'depth', J$.T(3462737, 0, 22, false), depth, false, false);
                            while (J$.C(160952, J$.B(453690, '!==', J$.G(3462769, J$.G(3462761, J$.R(3462753, 'proto', proto, false, false), 'constructor'), 'name'), J$.G(3462785, J$.R(3462777, 'klass', klass, false, false), 'name')))) {
                                proto = J$.W(3462817, 'proto', J$.M(3462809, J$.I(typeof Object === 'undefined' ? Object = J$.R(3462793, 'Object', undefined, true, true) : Object = J$.R(3462793, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(3462801, 'proto', proto, false, false)), proto, false, false);
                                J$.M(3462905, J$.R(3462825, 'assert', assert, false, true), 'ok', false)(J$.C(160944, J$.R(3462833, 'proto', proto, false, false)) ? J$.B(453714, '<=', depth = J$.W(3462849, 'depth', J$.B(453706, '+', J$.U(453698, '+', J$.R(3462841, 'depth', depth, false, false)), 1), depth, false, false), J$.R(3462857, 'MAX_CLASS_DEPTH', MAX_CLASS_DEPTH, false, true)) : J$._(), J$.B(453738, '+', J$.B(453730, '+', J$.B(453722, '+', J$.R(3462865, 'name', name, false, false), J$.T(3462873, ' must be a ', 21, false)), J$.G(3462889, J$.R(3462881, 'klass', klass, false, false), 'name')), J$.T(3462897, ' instance', 21, false)));
                            }
                            J$.M(3463001, J$.R(3462913, 'assert', assert, false, true), 'strictEqual', false)(J$.G(3462937, J$.G(3462929, J$.R(3462921, 'proto', proto, false, false), 'constructor'), 'name'), J$.G(3462953, J$.R(3462945, 'klass', klass, false, false), 'name'), J$.B(453762, '+', J$.B(453754, '+', J$.B(453746, '+', J$.R(3462961, 'name', name, false, false), J$.T(3462969, ' must be a ', 21, false)), J$.G(3462985, J$.R(3462977, 'klass', klass, false, false), 'name')), J$.T(3462993, ' instance', 21, false)));
                            var ver = J$.W(3463025, 'ver', J$.G(3463017, J$.R(3463009, 'proto', proto, false, false), '_sshpkApiVersion'), ver, false, false);
                            if (J$.C(160960, J$.B(453770, '===', J$.R(3463033, 'ver', ver, false, false), J$.T(3463041, undefined, 24, false))))
                                ver = J$.W(3463073, 'ver', J$.M(3463065, J$.R(3463049, 'klass', klass, false, false), '_oldVersionDetect', false)(J$.R(3463057, 'obj', obj, false, false)), ver, false, false);
                            J$.M(3463289, J$.R(3463081, 'assert', assert, false, true), 'ok', false)(J$.C(160968, J$.B(453778, '==', J$.G(3463105, J$.R(3463089, 'ver', ver, false, false), J$.T(3463097, 0, 22, false)), J$.G(3463129, J$.R(3463113, 'needVer', needVer, false, false), J$.T(3463121, 0, 22, false)))) ? J$.B(453786, '>=', J$.G(3463153, J$.R(3463137, 'ver', ver, false, false), J$.T(3463145, 1, 22, false)), J$.G(3463177, J$.R(3463161, 'needVer', needVer, false, false), J$.T(3463169, 1, 22, false))) : J$._(), J$.B(453842, '+', J$.B(453834, '+', J$.B(453826, '+', J$.B(453818, '+', J$.B(453810, '+', J$.B(453802, '+', J$.B(453794, '+', J$.R(3463185, 'name', name, false, false), J$.T(3463193, ' must be compatible with ', 21, false)), J$.G(3463209, J$.R(3463201, 'klass', klass, false, false), 'name')), J$.T(3463217, ' klass ', 21, false)), J$.T(3463225, 'version ', 21, false)), J$.G(3463249, J$.R(3463233, 'needVer', needVer, false, false), J$.T(3463241, 0, 22, false))), J$.T(3463257, '.', 21, false)), J$.G(3463281, J$.R(3463265, 'needVer', needVer, false, false), J$.T(3463273, 1, 22, false))));
                        } catch (J$e) {
                            J$.Ex(3471385, J$e);
                        } finally {
                            if (J$.Fr(3471393))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function opensslKeyDeriv(cipher, salt, passphrase, count) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(3464169, arguments.callee, this, arguments);
                            arguments = J$.N(3464177, 'arguments', arguments, true, false, false);
                            cipher = J$.N(3464185, 'cipher', cipher, true, false, false);
                            salt = J$.N(3464193, 'salt', salt, true, false, false);
                            passphrase = J$.N(3464201, 'passphrase', passphrase, true, false, false);
                            count = J$.N(3464209, 'count', count, true, false, false);
                            J$.N(3464217, 'clen', clen, false, false, false);
                            J$.N(3464225, 'D', D, false, false, false);
                            J$.N(3464233, 'D_prev', D_prev, false, false, false);
                            J$.N(3464241, 'bufs', bufs, false, false, false);
                            J$.N(3464249, 'material', material, false, false, false);
                            J$.N(3464257, 'j', j, false, false, false);
                            J$.M(3463497, J$.R(3463473, 'assert', assert, false, true), 'buffer', false)(J$.R(3463481, 'salt', salt, false, false), J$.T(3463489, 'salt', 21, false));
                            J$.M(3463529, J$.R(3463505, 'assert', assert, false, true), 'buffer', false)(J$.R(3463513, 'passphrase', passphrase, false, false), J$.T(3463521, 'passphrase', 21, false));
                            J$.M(3463561, J$.R(3463537, 'assert', assert, false, true), 'number', false)(J$.R(3463545, 'count', count, false, false), J$.T(3463553, 'iteration count', 21, false));
                            var clen = J$.W(3463593, 'clen', J$.G(3463585, J$.R(3463569, 'CIPHER_LEN', CIPHER_LEN, false, true), J$.R(3463577, 'cipher', cipher, false, false)), clen, false, false);
                            J$.M(3463625, J$.R(3463601, 'assert', assert, false, true), 'object', false)(J$.R(3463609, 'clen', clen, false, false), J$.T(3463617, 'supported cipher', 21, false));
                            salt = J$.W(3463665, 'salt', J$.M(3463657, J$.R(3463633, 'salt', salt, false, false), 'slice', false)(J$.T(3463641, 0, 22, false), J$.R(3463649, 'PKCS5_SALT_LEN', PKCS5_SALT_LEN, false, true)), salt, false, false);
                            var D, D_prev, bufs;
                            var material = J$.W(3463697, 'material', J$.M(3463689, J$.R(3463673, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(3463681, 0, 22, false)), material, false, false);
                            while (J$.C(160992, J$.B(453858, '<', J$.G(3463713, J$.R(3463705, 'material', material, false, false), 'length'), J$.B(453850, '+', J$.G(3463729, J$.R(3463721, 'clen', clen, false, false), 'key'), J$.G(3463745, J$.R(3463737, 'clen', clen, false, false), 'iv'))))) {
                                bufs = J$.W(3463761, 'bufs', J$.T(3463753, [], 10, false), bufs, false, false);
                                if (J$.C(160976, J$.R(3463769, 'D_prev', D_prev, false, false)))
                                    J$.M(3463793, J$.R(3463777, 'bufs', bufs, false, false), 'push', false)(J$.R(3463785, 'D_prev', D_prev, false, false));
                                J$.M(3463817, J$.R(3463801, 'bufs', bufs, false, false), 'push', false)(J$.R(3463809, 'passphrase', passphrase, false, false));
                                J$.M(3463841, J$.R(3463825, 'bufs', bufs, false, false), 'push', false)(J$.R(3463833, 'salt', salt, false, false));
                                D = J$.W(3463873, 'D', J$.M(3463865, J$.R(3463849, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(3463857, 'bufs', bufs, false, false)), D, false, false);
                                for (var j = J$.W(3463889, 'j', J$.T(3463881, 0, 22, false), j, false, false); J$.C(160984, J$.B(453866, '<', J$.R(3463897, 'j', j, false, false), J$.R(3463905, 'count', count, false, false))); j = J$.W(3463921, 'j', J$.B(453882, '+', J$.U(453874, '+', J$.R(3463913, 'j', j, false, false)), 1), j, false, false)) {
                                    D = J$.W(3463977, 'D', J$.M(3463969, J$.M(3463961, J$.M(3463945, J$.R(3463929, 'crypto', crypto, false, true), 'createHash', false)(J$.T(3463937, 'md5', 21, false)), 'update', false)(J$.R(3463953, 'D', D, false, false)), 'digest', false)(), D, false, false);
                                }
                                material = J$.W(3464025, 'material', J$.M(3464017, J$.R(3463985, 'Buffer', Buffer, false, true), 'concat', false)(J$.T(3464009, [
                                    J$.R(3463993, 'material', material, false, false),
                                    J$.R(3464001, 'D', D, false, false)
                                ], 10, false)), material, false, false);
                                D_prev = J$.W(3464041, 'D_prev', J$.R(3464033, 'D', D, false, false), D_prev, false, false);
                            }
                            return J$.Rt(3464161, J$.T(3464153, {
                                key: J$.M(3464081, J$.R(3464049, 'material', material, false, false), 'slice', false)(J$.T(3464057, 0, 22, false), J$.G(3464073, J$.R(3464065, 'clen', clen, false, false), 'key')),
                                iv: J$.M(3464145, J$.R(3464089, 'material', material, false, false), 'slice', false)(J$.G(3464105, J$.R(3464097, 'clen', clen, false, false), 'key'), J$.B(453890, '+', J$.G(3464121, J$.R(3464113, 'clen', clen, false, false), 'key'), J$.G(3464137, J$.R(3464129, 'clen', clen, false, false), 'iv')))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(3471401, J$e);
                        } finally {
                            if (J$.Fr(3471409))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pbkdf2(hashAlg, salt, iterations, size, passphrase) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(3465017, arguments.callee, this, arguments);
                            function T(I) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(3464953, arguments.callee, this, arguments);
                                            arguments = J$.N(3464961, 'arguments', arguments, true, false, false);
                                            I = J$.N(3464969, 'I', I, true, false, false);
                                            J$.N(3464977, 'hmac', hmac, false, false, false);
                                            J$.N(3464985, 'Ti', Ti, false, false, false);
                                            J$.N(3464993, 'Uc', Uc, false, false, false);
                                            J$.N(3465001, 'c', c, false, false, false);
                                            J$.N(3465009, 'x', x, false, false, false);
                                            J$.M(3464593, J$.R(3464553, 'hkey', hkey, false, false), 'writeUInt32BE', false)(J$.R(3464561, 'I', I, false, false), J$.B(453946, '-', J$.G(3464577, J$.R(3464569, 'hkey', hkey, false, false), 'length'), J$.T(3464585, 4, 22, false)));
                                            var hmac = J$.W(3464633, 'hmac', J$.M(3464625, J$.R(3464601, 'crypto', crypto, false, true), 'createHmac', false)(J$.R(3464609, 'hashAlg', hashAlg, false, false), J$.R(3464617, 'passphrase', passphrase, false, false)), hmac, false, false);
                                            J$.M(3464657, J$.R(3464641, 'hmac', hmac, false, false), 'update', false)(J$.R(3464649, 'hkey', hkey, false, false));
                                            var Ti = J$.W(3464681, 'Ti', J$.M(3464673, J$.R(3464665, 'hmac', hmac, false, false), 'digest', false)(), Ti, false, false);
                                            var Uc = J$.W(3464697, 'Uc', J$.R(3464689, 'Ti', Ti, false, false), Uc, false, false);
                                            var c = J$.W(3464713, 'c', J$.T(3464705, 1, 22, false), c, false, false);
                                            while (J$.C(161016, J$.B(453978, '<', J$.B(453970, '-', c = J$.W(3464729, 'c', J$.B(453962, '+', J$.U(453954, '+', J$.R(3464721, 'c', c, false, false)), 1), c, false, false), 1), J$.R(3464737, 'iterations', iterations, false, false)))) {
                                                hmac = J$.W(3464777, 'hmac', J$.M(3464769, J$.R(3464745, 'crypto', crypto, false, true), 'createHmac', false)(J$.R(3464753, 'hashAlg', hashAlg, false, false), J$.R(3464761, 'passphrase', passphrase, false, false)), hmac, false, false);
                                                J$.M(3464801, J$.R(3464785, 'hmac', hmac, false, false), 'update', false)(J$.R(3464793, 'Uc', Uc, false, false));
                                                Uc = J$.W(3464825, 'Uc', J$.M(3464817, J$.R(3464809, 'hmac', hmac, false, false), 'digest', false)(), Uc, false, false);
                                                for (var x = J$.W(3464841, 'x', J$.T(3464833, 0, 22, false), x, false, false); J$.C(161008, J$.B(453986, '<', J$.R(3464849, 'x', x, false, false), J$.G(3464865, J$.R(3464857, 'Ti', Ti, false, false), 'length'))); x = J$.W(3464881, 'x', J$.B(454002, '+', J$.U(453994, '+', J$.R(3464873, 'x', x, false, false)), 1), x, false, false)) {
                                                    J$.A(3464929, J$.R(3464889, 'Ti', Ti, false, false), J$.R(3464897, 'x', x, false, false), '^')(J$.G(3464921, J$.R(3464905, 'Uc', Uc, false, false), J$.R(3464913, 'x', x, false, false)));
                                                }
                                            }
                                            return J$.Rt(3464945, J$.R(3464937, 'Ti', Ti, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3471417, J$e);
                                        } finally {
                                            if (J$.Fr(3471425))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(3465025, 'arguments', arguments, true, false, false);
                            hashAlg = J$.N(3465033, 'hashAlg', hashAlg, true, false, false);
                            salt = J$.N(3465041, 'salt', salt, true, false, false);
                            iterations = J$.N(3465049, 'iterations', iterations, true, false, false);
                            size = J$.N(3465057, 'size', size, true, false, false);
                            passphrase = J$.N(3465065, 'passphrase', passphrase, true, false, false);
                            J$.N(3465073, 'hkey', hkey, false, false, false);
                            J$.N(3465081, 'gen', gen, false, false, false);
                            J$.N(3465089, 'ts', ts, false, false, false);
                            J$.N(3465097, 'i', i, false, false, false);
                            J$.N(3465105, 't', t, false, false, false);
                            T = J$.N(3465121, 'T', J$.T(3465113, T, 12, false), true, false, false);
                            var hkey = J$.W(3464305, 'hkey', J$.M(3464297, J$.R(3464265, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(453898, '+', J$.G(3464281, J$.R(3464273, 'salt', salt, false, false), 'length'), J$.T(3464289, 4, 22, false))), hkey, false, false);
                            J$.M(3464329, J$.R(3464313, 'salt', salt, false, false), 'copy', false)(J$.R(3464321, 'hkey', hkey, false, false));
                            var gen = J$.W(3464353, 'gen', J$.T(3464337, 0, 22, false), gen, false, false), ts = J$.W(3464361, 'ts', J$.T(3464345, [], 10, false), ts, false, false);
                            var i = J$.W(3464377, 'i', J$.T(3464369, 1, 22, false), i, false, false);
                            while (J$.C(161000, J$.B(453906, '<', J$.R(3464385, 'gen', gen, false, false), J$.R(3464393, 'size', size, false, false)))) {
                                var t = J$.W(3464433, 't', J$.F(3464425, J$.R(3464401, 'T', T, false, false), false)(J$.B(453930, '-', i = J$.W(3464417, 'i', J$.B(453922, '+', J$.U(453914, '+', J$.R(3464409, 'i', i, false, false)), 1), i, false, false), 1)), t, false, false);
                                gen = J$.W(3464465, 'gen', J$.B(453938, '+', J$.R(3464457, 'gen', gen, false, false), J$.G(3464449, J$.R(3464441, 't', t, false, false), 'length')), gen, false, false);
                                J$.M(3464489, J$.R(3464473, 'ts', ts, false, false), 'push', false)(J$.R(3464481, 't', t, false, false));
                            }
                            return J$.Rt(3464545, J$.M(3464537, J$.M(3464513, J$.R(3464497, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(3464505, 'ts', ts, false, false)), 'slice', false)(J$.T(3464521, 0, 22, false), J$.R(3464529, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(3471433, J$e);
                        } finally {
                            if (J$.Fr(3471441))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function countZeros(buf) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(3465361, arguments.callee, this, arguments);
                            arguments = J$.N(3465369, 'arguments', arguments, true, false, false);
                            buf = J$.N(3465377, 'buf', buf, true, false, false);
                            J$.N(3465385, 'o', o, false, false, false);
                            J$.N(3465393, 'obit', obit, false, false, false);
                            J$.N(3465401, 'mask', mask, false, false, false);
                            var o = J$.W(3465145, 'o', J$.T(3465129, 0, 22, false), o, false, false), obit = J$.W(3465153, 'obit', J$.T(3465137, 8, 22, false), obit, false, false);
                            while (J$.C(161040, J$.B(454010, '<', J$.R(3465161, 'o', o, false, false), J$.G(3465177, J$.R(3465169, 'buf', buf, false, false), 'length')))) {
                                var mask = J$.W(3465201, 'mask', J$.B(454018, '<<', J$.T(3465185, 1, 22, false), J$.R(3465193, 'obit', obit, false, false)), mask, false, false);
                                if (J$.C(161024, J$.B(454034, '===', J$.B(454026, '&', J$.G(3465225, J$.R(3465209, 'buf', buf, false, false), J$.R(3465217, 'o', o, false, false)), J$.R(3465233, 'mask', mask, false, false)), J$.R(3465241, 'mask', mask, false, false))))
                                    break;
                                J$.B(454058, '+', obit = J$.W(3465257, 'obit', J$.B(454050, '-', J$.U(454042, '+', J$.R(3465249, 'obit', obit, false, false)), 1), obit, false, false), 1);
                                if (J$.C(161032, J$.B(454066, '<', J$.R(3465265, 'obit', obit, false, false), J$.T(3465273, 0, 22, false)))) {
                                    J$.B(454090, '-', o = J$.W(3465289, 'o', J$.B(454082, '+', J$.U(454074, '+', J$.R(3465281, 'o', o, false, false)), 1), o, false, false), 1);
                                    obit = J$.W(3465305, 'obit', J$.T(3465297, 8, 22, false), obit, false, false);
                                }
                            }
                            return J$.Rt(3465353, J$.B(454122, '-', J$.B(454114, '+', J$.B(454098, '*', J$.R(3465313, 'o', o, false, false), J$.T(3465321, 8, 22, false)), J$.B(454106, '-', J$.T(3465329, 8, 22, false), J$.R(3465337, 'obit', obit, false, false))), J$.T(3465345, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(3471449, J$e);
                        } finally {
                            if (J$.Fr(3471457))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bufferSplit(buf, chr) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(3465937, arguments.callee, this, arguments);
                            arguments = J$.N(3465945, 'arguments', arguments, true, false, false);
                            buf = J$.N(3465953, 'buf', buf, true, false, false);
                            chr = J$.N(3465961, 'chr', chr, true, false, false);
                            J$.N(3465969, 'parts', parts, false, false, false);
                            J$.N(3465977, 'lastPart', lastPart, false, false, false);
                            J$.N(3465985, 'matches', matches, false, false, false);
                            J$.N(3465993, 'i', i, false, false, false);
                            J$.N(3466001, 'newPart', newPart, false, false, false);
                            J$.M(3465425, J$.R(3465409, 'assert', assert, false, true), 'buffer', false)(J$.R(3465417, 'buf', buf, false, false));
                            J$.M(3465449, J$.R(3465433, 'assert', assert, false, true), 'string', false)(J$.R(3465441, 'chr', chr, false, false));
                            var parts = J$.W(3465465, 'parts', J$.T(3465457, [], 10, false), parts, false, false);
                            var lastPart = J$.W(3465481, 'lastPart', J$.T(3465473, 0, 22, false), lastPart, false, false);
                            var matches = J$.W(3465497, 'matches', J$.T(3465489, 0, 22, false), matches, false, false);
                            for (var i = J$.W(3465513, 'i', J$.T(3465505, 0, 22, false), i, false, false); J$.C(161072, J$.B(454130, '<', J$.R(3465521, 'i', i, false, false), J$.G(3465537, J$.R(3465529, 'buf', buf, false, false), 'length'))); i = J$.W(3465553, 'i', J$.B(454146, '+', J$.U(454138, '+', J$.R(3465545, 'i', i, false, false)), 1), i, false, false)) {
                                if (J$.C(161056, J$.B(454154, '===', J$.G(3465577, J$.R(3465561, 'buf', buf, false, false), J$.R(3465569, 'i', i, false, false)), J$.M(3465601, J$.R(3465585, 'chr', chr, false, false), 'charCodeAt', false)(J$.R(3465593, 'matches', matches, false, false)))))
                                    matches = J$.W(3465617, 'matches', J$.B(454170, '+', J$.U(454162, '+', J$.R(3465609, 'matches', matches, false, false)), 1), matches, false, false);
                                else if (J$.C(161048, J$.B(454178, '===', J$.G(3465641, J$.R(3465625, 'buf', buf, false, false), J$.R(3465633, 'i', i, false, false)), J$.M(3465665, J$.R(3465649, 'chr', chr, false, false), 'charCodeAt', false)(J$.T(3465657, 0, 22, false)))))
                                    matches = J$.W(3465681, 'matches', J$.T(3465673, 1, 22, false), matches, false, false);
                                else
                                    matches = J$.W(3465697, 'matches', J$.T(3465689, 0, 22, false), matches, false, false);
                                if (J$.C(161064, J$.B(454186, '>=', J$.R(3465705, 'matches', matches, false, false), J$.G(3465721, J$.R(3465713, 'chr', chr, false, false), 'length')))) {
                                    var newPart = J$.W(3465745, 'newPart', J$.B(454194, '+', J$.R(3465729, 'i', i, false, false), J$.T(3465737, 1, 22, false)), newPart, false, false);
                                    J$.M(3465801, J$.R(3465753, 'parts', parts, false, false), 'push', false)(J$.M(3465793, J$.R(3465761, 'buf', buf, false, false), 'slice', false)(J$.R(3465769, 'lastPart', lastPart, false, false), J$.B(454202, '-', J$.R(3465777, 'newPart', newPart, false, false), J$.R(3465785, 'matches', matches, false, false))));
                                    lastPart = J$.W(3465817, 'lastPart', J$.R(3465809, 'newPart', newPart, false, false), lastPart, false, false);
                                    matches = J$.W(3465833, 'matches', J$.T(3465825, 0, 22, false), matches, false, false);
                                }
                            }
                            if (J$.C(161080, J$.B(454210, '<=', J$.R(3465841, 'lastPart', lastPart, false, false), J$.G(3465857, J$.R(3465849, 'buf', buf, false, false), 'length'))))
                                J$.M(3465913, J$.R(3465865, 'parts', parts, false, false), 'push', false)(J$.M(3465905, J$.R(3465873, 'buf', buf, false, false), 'slice', false)(J$.R(3465881, 'lastPart', lastPart, false, false), J$.G(3465897, J$.R(3465889, 'buf', buf, false, false), 'length')));
                            return J$.Rt(3465929, J$.R(3465921, 'parts', parts, false, false));
                        } catch (J$e) {
                            J$.Ex(3471465, J$e);
                        } finally {
                            if (J$.Fr(3471473))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ecNormalize(buf, addZero) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(3466577, arguments.callee, this, arguments);
                            arguments = J$.N(3466585, 'arguments', arguments, true, false, false);
                            buf = J$.N(3466593, 'buf', buf, true, false, false);
                            addZero = J$.N(3466601, 'addZero', addZero, true, false, false);
                            J$.N(3466609, 'b', b, false, false, false);
                            J$.M(3466025, J$.R(3466009, 'assert', assert, false, true), 'buffer', false)(J$.R(3466017, 'buf', buf, false, false));
                            if (J$.C(161160, J$.C(161088, J$.B(454218, '===', J$.G(3466049, J$.R(3466033, 'buf', buf, false, false), J$.T(3466041, 0, 22, false)), J$.T(3466057, 0, 22, false))) ? J$.B(454226, '===', J$.G(3466081, J$.R(3466065, 'buf', buf, false, false), J$.T(3466073, 1, 22, false)), J$.T(3466089, 4, 22, false)) : J$._())) {
                                if (J$.C(161096, J$.R(3466097, 'addZero', addZero, false, false)))
                                    return J$.Rt(3466113, J$.R(3466105, 'buf', buf, false, false));
                                return J$.Rt(3466145, J$.M(3466137, J$.R(3466121, 'buf', buf, false, false), 'slice', false)(J$.T(3466129, 1, 22, false)));
                            } else if (J$.C(161152, J$.B(454234, '===', J$.G(3466169, J$.R(3466153, 'buf', buf, false, false), J$.T(3466161, 0, 22, false)), J$.T(3466177, 4, 22, false)))) {
                                if (J$.C(161104, J$.U(454242, '!', J$.R(3466185, 'addZero', addZero, false, false))))
                                    return J$.Rt(3466201, J$.R(3466193, 'buf', buf, false, false));
                            } else {
                                while (J$.C(161112, J$.B(454250, '===', J$.G(3466225, J$.R(3466209, 'buf', buf, false, false), J$.T(3466217, 0, 22, false)), J$.T(3466233, 0, 22, false)))) {
                                    buf = J$.W(3466265, 'buf', J$.M(3466257, J$.R(3466241, 'buf', buf, false, false), 'slice', false)(J$.T(3466249, 1, 22, false)), buf, false, false);
                                }
                                if (J$.C(161128, J$.C(161120, J$.B(454258, '===', J$.G(3466289, J$.R(3466273, 'buf', buf, false, false), J$.T(3466281, 0, 22, false)), J$.T(3466297, 2, 22, false))) ? J$._() : J$.B(454266, '===', J$.G(3466321, J$.R(3466305, 'buf', buf, false, false), J$.T(3466313, 0, 22, false)), J$.T(3466329, 3, 22, false))))
                                    throw J$.F(3466361, J$.I(typeof Error === 'undefined' ? Error = J$.R(3466337, 'Error', undefined, true, true) : Error = J$.R(3466337, 'Error', Error, true, true)), true)(J$.B(454274, '+', J$.T(3466345, 'Compressed elliptic curve points ', 21, false), J$.T(3466353, 'are not supported', 21, false)));
                                if (J$.C(161136, J$.B(454282, '!==', J$.G(3466385, J$.R(3466369, 'buf', buf, false, false), J$.T(3466377, 0, 22, false)), J$.T(3466393, 4, 22, false))))
                                    throw J$.F(3466417, J$.I(typeof Error === 'undefined' ? Error = J$.R(3466401, 'Error', undefined, true, true) : Error = J$.R(3466401, 'Error', Error, true, true)), true)(J$.T(3466409, 'Not a valid elliptic curve point', 21, false));
                                if (J$.C(161144, J$.U(454290, '!', J$.R(3466425, 'addZero', addZero, false, false))))
                                    return J$.Rt(3466441, J$.R(3466433, 'buf', buf, false, false));
                            }
                            var b = J$.W(3466489, 'b', J$.M(3466481, J$.R(3466449, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(454298, '+', J$.G(3466465, J$.R(3466457, 'buf', buf, false, false), 'length'), J$.T(3466473, 1, 22, false))), b, false, false);
                            J$.P(3466521, J$.R(3466497, 'b', b, false, false), J$.T(3466505, 0, 22, false), J$.T(3466513, 0, 22, false));
                            J$.M(3466553, J$.R(3466529, 'buf', buf, false, false), 'copy', false)(J$.R(3466537, 'b', b, false, false), J$.T(3466545, 1, 22, false));
                            return J$.Rt(3466569, J$.R(3466561, 'b', b, false, false));
                        } catch (J$e) {
                            J$.Ex(3471481, J$e);
                        } finally {
                            if (J$.Fr(3471489))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readBitString(der, tag) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(3466849, arguments.callee, this, arguments);
                            arguments = J$.N(3466857, 'arguments', arguments, true, false, false);
                            der = J$.N(3466865, 'der', der, true, false, false);
                            tag = J$.N(3466873, 'tag', tag, true, false, false);
                            J$.N(3466881, 'buf', buf, false, false, false);
                            if (J$.C(161168, J$.B(454306, '===', J$.R(3466617, 'tag', tag, false, false), J$.T(3466625, undefined, 24, false))))
                                tag = J$.W(3466657, 'tag', J$.G(3466649, J$.G(3466641, J$.R(3466633, 'asn1', asn1, false, true), 'Ber'), 'BitString'), tag, false, false);
                            var buf = J$.W(3466697, 'buf', J$.M(3466689, J$.R(3466665, 'der', der, false, false), 'readString', false)(J$.R(3466673, 'tag', tag, false, false), J$.T(3466681, true, 23, false)), buf, false, false);
                            J$.M(3466809, J$.R(3466705, 'assert', assert, false, true), 'strictEqual', false)(J$.G(3466729, J$.R(3466713, 'buf', buf, false, false), J$.T(3466721, 0, 22, false)), J$.T(3466737, 0, 22, false), J$.B(454330, '+', J$.B(454322, '+', J$.B(454314, '+', J$.T(3466745, 'bit strings with unused bits are ', 21, false), J$.T(3466753, 'not supported (0x', 21, false)), J$.M(3466793, J$.G(3466777, J$.R(3466761, 'buf', buf, false, false), J$.T(3466769, 0, 22, false)), 'toString', false)(J$.T(3466785, 16, 22, false))), J$.T(3466801, ')', 21, false)));
                            return J$.Rt(3466841, J$.M(3466833, J$.R(3466817, 'buf', buf, false, false), 'slice', false)(J$.T(3466825, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(3471497, J$e);
                        } finally {
                            if (J$.Fr(3471505))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writeBitString(der, buf, tag) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(3467081, arguments.callee, this, arguments);
                            arguments = J$.N(3467089, 'arguments', arguments, true, false, false);
                            der = J$.N(3467097, 'der', der, true, false, false);
                            buf = J$.N(3467105, 'buf', buf, true, false, false);
                            tag = J$.N(3467113, 'tag', tag, true, false, false);
                            J$.N(3467121, 'b', b, false, false, false);
                            if (J$.C(161176, J$.B(454338, '===', J$.R(3466889, 'tag', tag, false, false), J$.T(3466897, undefined, 24, false))))
                                tag = J$.W(3466929, 'tag', J$.G(3466921, J$.G(3466913, J$.R(3466905, 'asn1', asn1, false, true), 'Ber'), 'BitString'), tag, false, false);
                            var b = J$.W(3466977, 'b', J$.M(3466969, J$.R(3466937, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(454346, '+', J$.G(3466953, J$.R(3466945, 'buf', buf, false, false), 'length'), J$.T(3466961, 1, 22, false))), b, false, false);
                            J$.P(3467009, J$.R(3466985, 'b', b, false, false), J$.T(3466993, 0, 22, false), J$.T(3467001, 0, 22, false));
                            J$.M(3467041, J$.R(3467017, 'buf', buf, false, false), 'copy', false)(J$.R(3467025, 'b', b, false, false), J$.T(3467033, 1, 22, false));
                            J$.M(3467073, J$.R(3467049, 'der', der, false, false), 'writeBuffer', false)(J$.R(3467057, 'b', b, false, false), J$.R(3467065, 'tag', tag, false, false));
                        } catch (J$e) {
                            J$.Ex(3471513, J$e);
                        } finally {
                            if (J$.Fr(3471521))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mpNormalize(buf) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(3467465, arguments.callee, this, arguments);
                            arguments = J$.N(3467473, 'arguments', arguments, true, false, false);
                            buf = J$.N(3467481, 'buf', buf, true, false, false);
                            J$.N(3467489, 'b', b, false, false, false);
                            J$.M(3467145, J$.R(3467129, 'assert', assert, false, true), 'buffer', false)(J$.R(3467137, 'buf', buf, false, false));
                            while (J$.C(161200, J$.C(161192, J$.C(161184, J$.B(454354, '>', J$.G(3467161, J$.R(3467153, 'buf', buf, false, false), 'length'), J$.T(3467169, 1, 22, false))) ? J$.B(454362, '===', J$.G(3467193, J$.R(3467177, 'buf', buf, false, false), J$.T(3467185, 0, 22, false)), J$.T(3467201, 0, 22, false)) : J$._()) ? J$.B(454378, '===', J$.B(454370, '&', J$.G(3467225, J$.R(3467209, 'buf', buf, false, false), J$.T(3467217, 1, 22, false)), J$.T(3467233, 128, 22, false)), J$.T(3467241, 0, 22, false)) : J$._())) {
                                buf = J$.W(3467273, 'buf', J$.M(3467265, J$.R(3467249, 'buf', buf, false, false), 'slice', false)(J$.T(3467257, 1, 22, false)), buf, false, false);
                            }
                            if (J$.C(161208, J$.B(454394, '===', J$.B(454386, '&', J$.G(3467297, J$.R(3467281, 'buf', buf, false, false), J$.T(3467289, 0, 22, false)), J$.T(3467305, 128, 22, false)), J$.T(3467313, 128, 22, false)))) {
                                var b = J$.W(3467361, 'b', J$.M(3467353, J$.R(3467321, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(454402, '+', J$.G(3467337, J$.R(3467329, 'buf', buf, false, false), 'length'), J$.T(3467345, 1, 22, false))), b, false, false);
                                J$.P(3467393, J$.R(3467369, 'b', b, false, false), J$.T(3467377, 0, 22, false), J$.T(3467385, 0, 22, false));
                                J$.M(3467425, J$.R(3467401, 'buf', buf, false, false), 'copy', false)(J$.R(3467409, 'b', b, false, false), J$.T(3467417, 1, 22, false));
                                buf = J$.W(3467441, 'buf', J$.R(3467433, 'b', b, false, false), buf, false, false);
                            }
                            return J$.Rt(3467457, J$.R(3467449, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(3471529, J$e);
                        } finally {
                            if (J$.Fr(3471537))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mpDenormalize(buf) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(3467625, arguments.callee, this, arguments);
                            arguments = J$.N(3467633, 'arguments', arguments, true, false, false);
                            buf = J$.N(3467641, 'buf', buf, true, false, false);
                            J$.M(3467513, J$.R(3467497, 'assert', assert, false, true), 'buffer', false)(J$.R(3467505, 'buf', buf, false, false));
                            while (J$.C(161224, J$.C(161216, J$.B(454410, '>', J$.G(3467529, J$.R(3467521, 'buf', buf, false, false), 'length'), J$.T(3467537, 1, 22, false))) ? J$.B(454418, '===', J$.G(3467561, J$.R(3467545, 'buf', buf, false, false), J$.T(3467553, 0, 22, false)), J$.T(3467569, 0, 22, false)) : J$._())) {
                                buf = J$.W(3467601, 'buf', J$.M(3467593, J$.R(3467577, 'buf', buf, false, false), 'slice', false)(J$.T(3467585, 1, 22, false)), buf, false, false);
                            }
                            return J$.Rt(3467617, J$.R(3467609, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(3471545, J$e);
                        } finally {
                            if (J$.Fr(3471553))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function zeroPadToLength(buf, len) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(3467969, arguments.callee, this, arguments);
                            arguments = J$.N(3467977, 'arguments', arguments, true, false, false);
                            buf = J$.N(3467985, 'buf', buf, true, false, false);
                            len = J$.N(3467993, 'len', len, true, false, false);
                            J$.N(3468001, 'b', b, false, false, false);
                            J$.M(3467665, J$.R(3467649, 'assert', assert, false, true), 'buffer', false)(J$.R(3467657, 'buf', buf, false, false));
                            J$.M(3467689, J$.R(3467673, 'assert', assert, false, true), 'number', false)(J$.R(3467681, 'len', len, false, false));
                            while (J$.C(161232, J$.B(454426, '>', J$.G(3467705, J$.R(3467697, 'buf', buf, false, false), 'length'), J$.R(3467713, 'len', len, false, false)))) {
                                J$.M(3467761, J$.R(3467721, 'assert', assert, false, true), 'equal', false)(J$.G(3467745, J$.R(3467729, 'buf', buf, false, false), J$.T(3467737, 0, 22, false)), J$.T(3467753, 0, 22, false));
                                buf = J$.W(3467793, 'buf', J$.M(3467785, J$.R(3467769, 'buf', buf, false, false), 'slice', false)(J$.T(3467777, 1, 22, false)), buf, false, false);
                            }
                            while (J$.C(161240, J$.B(454434, '<', J$.G(3467809, J$.R(3467801, 'buf', buf, false, false), 'length'), J$.R(3467817, 'len', len, false, false)))) {
                                var b = J$.W(3467865, 'b', J$.M(3467857, J$.R(3467825, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(454442, '+', J$.G(3467841, J$.R(3467833, 'buf', buf, false, false), 'length'), J$.T(3467849, 1, 22, false))), b, false, false);
                                J$.P(3467897, J$.R(3467873, 'b', b, false, false), J$.T(3467881, 0, 22, false), J$.T(3467889, 0, 22, false));
                                J$.M(3467929, J$.R(3467905, 'buf', buf, false, false), 'copy', false)(J$.R(3467913, 'b', b, false, false), J$.T(3467921, 1, 22, false));
                                buf = J$.W(3467945, 'buf', J$.R(3467937, 'b', b, false, false), buf, false, false);
                            }
                            return J$.Rt(3467961, J$.R(3467953, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(3471561, J$e);
                        } finally {
                            if (J$.Fr(3471569))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bigintToMpBuf(bigint) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(3468097, arguments.callee, this, arguments);
                            arguments = J$.N(3468105, 'arguments', arguments, true, false, false);
                            bigint = J$.N(3468113, 'bigint', bigint, true, false, false);
                            J$.N(3468121, 'buf', buf, false, false, false);
                            var buf = J$.W(3468041, 'buf', J$.M(3468033, J$.R(3468009, 'Buffer', Buffer, false, true), 'from', false)(J$.M(3468025, J$.R(3468017, 'bigint', bigint, false, false), 'toByteArray', false)()), buf, false, false);
                            buf = J$.W(3468073, 'buf', J$.F(3468065, J$.R(3468049, 'mpNormalize', mpNormalize, false, true), false)(J$.R(3468057, 'buf', buf, false, false)), buf, false, false);
                            return J$.Rt(3468089, J$.R(3468081, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(3471577, J$e);
                        } finally {
                            if (J$.Fr(3471585))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function calculateDSAPublic(g, p, x) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(3468385, arguments.callee, this, arguments);
                            arguments = J$.N(3468393, 'arguments', arguments, true, false, false);
                            g = J$.N(3468401, 'g', g, true, false, false);
                            p = J$.N(3468409, 'p', p, true, false, false);
                            x = J$.N(3468417, 'x', x, true, false, false);
                            J$.N(3468425, 'y', y, false, false, false);
                            J$.N(3468433, 'ybuf', ybuf, false, false, false);
                            J$.M(3468145, J$.R(3468129, 'assert', assert, false, true), 'buffer', false)(J$.R(3468137, 'g', g, false, false));
                            J$.M(3468169, J$.R(3468153, 'assert', assert, false, true), 'buffer', false)(J$.R(3468161, 'p', p, false, false));
                            J$.M(3468193, J$.R(3468177, 'assert', assert, false, true), 'buffer', false)(J$.R(3468185, 'x', x, false, false));
                            g = J$.W(3468225, 'g', J$.F(3468217, J$.R(3468201, 'jsbn', jsbn, false, true), true)(J$.R(3468209, 'g', g, false, false)), g, false, false);
                            p = J$.W(3468257, 'p', J$.F(3468249, J$.R(3468233, 'jsbn', jsbn, false, true), true)(J$.R(3468241, 'p', p, false, false)), p, false, false);
                            x = J$.W(3468289, 'x', J$.F(3468281, J$.R(3468265, 'jsbn', jsbn, false, true), true)(J$.R(3468273, 'x', x, false, false)), x, false, false);
                            var y = J$.W(3468329, 'y', J$.M(3468321, J$.R(3468297, 'g', g, false, false), 'modPow', false)(J$.R(3468305, 'x', x, false, false), J$.R(3468313, 'p', p, false, false)), y, false, false);
                            var ybuf = J$.W(3468361, 'ybuf', J$.F(3468353, J$.R(3468337, 'bigintToMpBuf', bigintToMpBuf, false, true), false)(J$.R(3468345, 'y', y, false, false)), ybuf, false, false);
                            return J$.Rt(3468377, J$.R(3468369, 'ybuf', ybuf, false, false));
                        } catch (J$e) {
                            J$.Ex(3471593, J$e);
                        } finally {
                            if (J$.Fr(3471601))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function calculateED25519Public(k) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(3468569, arguments.callee, this, arguments);
                            arguments = J$.N(3468577, 'arguments', arguments, true, false, false);
                            k = J$.N(3468585, 'k', k, true, false, false);
                            J$.N(3468593, 'kp', kp, false, false, false);
                            J$.M(3468457, J$.R(3468441, 'assert', assert, false, true), 'buffer', false)(J$.R(3468449, 'k', k, false, false));
                            var kp = J$.W(3468521, 'kp', J$.M(3468513, J$.G(3468481, J$.G(3468473, J$.R(3468465, 'nacl', nacl, false, true), 'sign'), 'keyPair'), 'fromSeed', false)(J$.F(3468505, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3468489, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3468489, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(3468497, 'k', k, false, false))), kp, false, false);
                            return J$.Rt(3468561, J$.M(3468553, J$.R(3468529, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3468545, J$.R(3468537, 'kp', kp, false, false), 'publicKey')));
                        } catch (J$e) {
                            J$.Ex(3471609, J$e);
                        } finally {
                            if (J$.Fr(3471617))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function calculateX25519Public(k) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(3468729, arguments.callee, this, arguments);
                            arguments = J$.N(3468737, 'arguments', arguments, true, false, false);
                            k = J$.N(3468745, 'k', k, true, false, false);
                            J$.N(3468753, 'kp', kp, false, false, false);
                            J$.M(3468617, J$.R(3468601, 'assert', assert, false, true), 'buffer', false)(J$.R(3468609, 'k', k, false, false));
                            var kp = J$.W(3468681, 'kp', J$.M(3468673, J$.G(3468641, J$.G(3468633, J$.R(3468625, 'nacl', nacl, false, true), 'box'), 'keyPair'), 'fromSeed', false)(J$.F(3468665, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3468649, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3468649, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(3468657, 'k', k, false, false))), kp, false, false);
                            return J$.Rt(3468721, J$.M(3468713, J$.R(3468689, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3468705, J$.R(3468697, 'kp', kp, false, false), 'publicKey')));
                        } catch (J$e) {
                            J$.Ex(3471625, J$e);
                        } finally {
                            if (J$.Fr(3471633))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addRSAMissing(key) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(3469409, arguments.callee, this, arguments);
                            arguments = J$.N(3469417, 'arguments', arguments, true, false, false);
                            key = J$.N(3469425, 'key', key, true, false, false);
                            J$.N(3469433, 'd', d, false, false, false);
                            J$.N(3469441, 'buf', buf, false, false, false);
                            J$.N(3469449, 'p', p, false, false, false);
                            J$.N(3469457, 'dmodp', dmodp, false, false, false);
                            J$.N(3469465, 'q', q, false, false, false);
                            J$.N(3469473, 'dmodq', dmodq, false, false, false);
                            J$.M(3468777, J$.R(3468761, 'assert', assert, false, true), 'object', false)(J$.R(3468769, 'key', key, false, false));
                            J$.F(3468833, J$.R(3468785, 'assertCompatible', assertCompatible, false, true), false)(J$.R(3468793, 'key', key, false, false), J$.R(3468801, 'PrivateKey', PrivateKey, false, true), J$.T(3468825, [
                                J$.T(3468809, 1, 22, false),
                                J$.T(3468817, 1, 22, false)
                            ], 10, false));
                            var d = J$.W(3468889, 'd', J$.F(3468881, J$.R(3468841, 'jsbn', jsbn, false, true), true)(J$.G(3468873, J$.G(3468865, J$.G(3468857, J$.R(3468849, 'key', key, false, false), 'part'), 'd'), 'data')), d, false, false);
                            var buf;
                            if (J$.C(161248, J$.U(454450, '!', J$.G(3468913, J$.G(3468905, J$.R(3468897, 'key', key, false, false), 'part'), 'dmodp')))) {
                                var p = J$.W(3468969, 'p', J$.F(3468961, J$.R(3468921, 'jsbn', jsbn, false, true), true)(J$.G(3468953, J$.G(3468945, J$.G(3468937, J$.R(3468929, 'key', key, false, false), 'part'), 'p'), 'data')), p, false, false);
                                var dmodp = J$.W(3469017, 'dmodp', J$.M(3469009, J$.R(3468977, 'd', d, false, false), 'mod', false)(J$.M(3469001, J$.R(3468985, 'p', p, false, false), 'subtract', false)(J$.T(3468993, 1, 22, false))), dmodp, false, false);
                                buf = J$.W(3469049, 'buf', J$.F(3469041, J$.R(3469025, 'bigintToMpBuf', bigintToMpBuf, false, true), false)(J$.R(3469033, 'dmodp', dmodp, false, false)), buf, false, false);
                                J$.P(3469097, J$.G(3469065, J$.R(3469057, 'key', key, false, false), 'part'), 'dmodp', J$.T(3469089, {
                                    name: J$.T(3469073, 'dmodp', 21, false),
                                    data: J$.R(3469081, 'buf', buf, false, false)
                                }, 11, false));
                                J$.M(3469145, J$.G(3469113, J$.R(3469105, 'key', key, false, false), 'parts'), 'push', false)(J$.G(3469137, J$.G(3469129, J$.R(3469121, 'key', key, false, false), 'part'), 'dmodp'));
                            }
                            if (J$.C(161256, J$.U(454458, '!', J$.G(3469169, J$.G(3469161, J$.R(3469153, 'key', key, false, false), 'part'), 'dmodq')))) {
                                var q = J$.W(3469225, 'q', J$.F(3469217, J$.R(3469177, 'jsbn', jsbn, false, true), true)(J$.G(3469209, J$.G(3469201, J$.G(3469193, J$.R(3469185, 'key', key, false, false), 'part'), 'q'), 'data')), q, false, false);
                                var dmodq = J$.W(3469273, 'dmodq', J$.M(3469265, J$.R(3469233, 'd', d, false, false), 'mod', false)(J$.M(3469257, J$.R(3469241, 'q', q, false, false), 'subtract', false)(J$.T(3469249, 1, 22, false))), dmodq, false, false);
                                buf = J$.W(3469305, 'buf', J$.F(3469297, J$.R(3469281, 'bigintToMpBuf', bigintToMpBuf, false, true), false)(J$.R(3469289, 'dmodq', dmodq, false, false)), buf, false, false);
                                J$.P(3469353, J$.G(3469321, J$.R(3469313, 'key', key, false, false), 'part'), 'dmodq', J$.T(3469345, {
                                    name: J$.T(3469329, 'dmodq', 21, false),
                                    data: J$.R(3469337, 'buf', buf, false, false)
                                }, 11, false));
                                J$.M(3469401, J$.G(3469369, J$.R(3469361, 'key', key, false, false), 'parts'), 'push', false)(J$.G(3469393, J$.G(3469385, J$.R(3469377, 'key', key, false, false), 'part'), 'dmodq'));
                            }
                        } catch (J$e) {
                            J$.Ex(3471641, J$e);
                        } finally {
                            if (J$.Fr(3471649))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function publicFromPrivateECDSA(curveName, priv) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(3470121, arguments.callee, this, arguments);
                            arguments = J$.N(3470129, 'arguments', arguments, true, false, false);
                            curveName = J$.N(3470137, 'curveName', curveName, true, false, false);
                            priv = J$.N(3470145, 'priv', priv, true, false, false);
                            J$.N(3470153, 'params', params, false, false, false);
                            J$.N(3470161, 'p', p, false, false, false);
                            J$.N(3470169, 'a', a, false, false, false);
                            J$.N(3470177, 'b', b, false, false, false);
                            J$.N(3470185, 'curve', curve, false, false, false);
                            J$.N(3470193, 'G', G, false, false, false);
                            J$.N(3470201, 'd', d, false, false, false);
                            J$.N(3470209, 'pub', pub, false, false, false);
                            J$.N(3470217, 'parts', parts, false, false, false);
                            J$.N(3470225, 'key', key, false, false, false);
                            J$.M(3469505, J$.R(3469481, 'assert', assert, false, true), 'string', false)(J$.R(3469489, 'curveName', curveName, false, false), J$.T(3469497, 'curveName', 21, false));
                            J$.M(3469529, J$.R(3469513, 'assert', assert, false, true), 'buffer', false)(J$.R(3469521, 'priv', priv, false, false));
                            var params = J$.W(3469569, 'params', J$.G(3469561, J$.G(3469545, J$.R(3469537, 'algs', algs, false, true), 'curves'), J$.R(3469553, 'curveName', curveName, false, false)), params, false, false);
                            var p = J$.W(3469609, 'p', J$.F(3469601, J$.R(3469577, 'jsbn', jsbn, false, true), true)(J$.G(3469593, J$.R(3469585, 'params', params, false, false), 'p')), p, false, false);
                            var a = J$.W(3469649, 'a', J$.F(3469641, J$.R(3469617, 'jsbn', jsbn, false, true), true)(J$.G(3469633, J$.R(3469625, 'params', params, false, false), 'a')), a, false, false);
                            var b = J$.W(3469689, 'b', J$.F(3469681, J$.R(3469657, 'jsbn', jsbn, false, true), true)(J$.G(3469673, J$.R(3469665, 'params', params, false, false), 'b')), b, false, false);
                            var curve = J$.W(3469737, 'curve', J$.M(3469729, J$.R(3469697, 'ec', ec, false, true), 'ECCurveFp', true)(J$.R(3469705, 'p', p, false, false), J$.R(3469713, 'a', a, false, false), J$.R(3469721, 'b', b, false, false)), curve, false, false);
                            var G = J$.W(3469793, 'G', J$.M(3469785, J$.R(3469745, 'curve', curve, false, false), 'decodePointHex', false)(J$.M(3469777, J$.G(3469761, J$.R(3469753, 'params', params, false, false), 'G'), 'toString', false)(J$.T(3469769, 'hex', 21, false))), G, false, false);
                            var d = J$.W(3469841, 'd', J$.F(3469833, J$.R(3469801, 'jsbn', jsbn, false, true), true)(J$.F(3469825, J$.R(3469809, 'mpNormalize', mpNormalize, false, true), false)(J$.R(3469817, 'priv', priv, false, false))), d, false, false);
                            var pub = J$.W(3469873, 'pub', J$.M(3469865, J$.R(3469849, 'G', G, false, false), 'multiply', false)(J$.R(3469857, 'd', d, false, false)), pub, false, false);
                            pub = J$.W(3469929, 'pub', J$.M(3469921, J$.R(3469881, 'Buffer', Buffer, false, true), 'from', false)(J$.M(3469905, J$.R(3469889, 'curve', curve, false, false), 'encodePointHex', false)(J$.R(3469897, 'pub', pub, false, false)), J$.T(3469913, 'hex', 21, false)), pub, false, false);
                            var parts = J$.W(3469945, 'parts', J$.T(3469937, [], 10, false), parts, false, false);
                            J$.M(3470001, J$.R(3469953, 'parts', parts, false, false), 'push', false)(J$.T(3469993, {
                                name: J$.T(3469961, 'curve', 21, false),
                                data: J$.M(3469985, J$.R(3469969, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3469977, 'curveName', curveName, false, false))
                            }, 11, false));
                            J$.M(3470041, J$.R(3470009, 'parts', parts, false, false), 'push', false)(J$.T(3470033, {
                                name: J$.T(3470017, 'Q', 21, false),
                                data: J$.R(3470025, 'pub', pub, false, false)
                            }, 11, false));
                            var key = J$.W(3470097, 'key', J$.F(3470089, J$.R(3470049, 'Key', Key, false, true), true)(J$.T(3470081, {
                                type: J$.T(3470057, 'ecdsa', 21, false),
                                curve: J$.R(3470065, 'curve', curve, false, false),
                                parts: J$.R(3470073, 'parts', parts, false, false)
                            }, 11, false)), key, false, false);
                            return J$.Rt(3470113, J$.R(3470105, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(3471657, J$e);
                        } finally {
                            if (J$.Fr(3471665))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function opensshCipherInfo(cipher) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(3470857, arguments.callee, this, arguments);
                            arguments = J$.N(3470865, 'arguments', arguments, true, false, false);
                            cipher = J$.N(3470873, 'cipher', cipher, true, false, false);
                            J$.N(3470881, 'inf', inf, false, false, false);
                            var inf = J$.W(3470241, 'inf', J$.T(3470233, {}, 11, false), inf, false, false);
                            switch (J$.C1(161264, J$.R(3470249, 'cipher', cipher, false, false))) {
                            case J$.C2(161272, J$.T(3470329, '3des-cbc', 21, false)):
                                J$.P(3470273, J$.R(3470257, 'inf', inf, false, false), 'keySize', J$.T(3470265, 24, 22, false));
                                J$.P(3470297, J$.R(3470281, 'inf', inf, false, false), 'blockSize', J$.T(3470289, 8, 22, false));
                                J$.P(3470321, J$.R(3470305, 'inf', inf, false, false), 'opensslName', J$.T(3470313, 'des-ede3-cbc', 21, false));
                                break;
                            case J$.C2(161280, J$.T(3470409, 'blowfish-cbc', 21, false)):
                                J$.P(3470353, J$.R(3470337, 'inf', inf, false, false), 'keySize', J$.T(3470345, 16, 22, false));
                                J$.P(3470377, J$.R(3470361, 'inf', inf, false, false), 'blockSize', J$.T(3470369, 8, 22, false));
                                J$.P(3470401, J$.R(3470385, 'inf', inf, false, false), 'opensslName', J$.T(3470393, 'bf-cbc', 21, false));
                                break;
                            case J$.C2(161288, J$.T(3470417, 'aes128-cbc', 21, false)):
                            case J$.C2(161296, J$.T(3470425, 'aes128-ctr', 21, false)):
                            case J$.C2(161304, J$.T(3470537, 'aes128-gcm@openssh.com', 21, false)):
                                J$.P(3470449, J$.R(3470433, 'inf', inf, false, false), 'keySize', J$.T(3470441, 16, 22, false));
                                J$.P(3470473, J$.R(3470457, 'inf', inf, false, false), 'blockSize', J$.T(3470465, 16, 22, false));
                                J$.P(3470529, J$.R(3470481, 'inf', inf, false, false), 'opensslName', J$.B(454466, '+', J$.T(3470489, 'aes-128-', 21, false), J$.M(3470521, J$.R(3470497, 'cipher', cipher, false, false), 'slice', false)(J$.T(3470505, 7, 22, false), J$.T(3470513, 10, 22, false))));
                                break;
                            case J$.C2(161312, J$.T(3470545, 'aes192-cbc', 21, false)):
                            case J$.C2(161320, J$.T(3470553, 'aes192-ctr', 21, false)):
                            case J$.C2(161328, J$.T(3470665, 'aes192-gcm@openssh.com', 21, false)):
                                J$.P(3470577, J$.R(3470561, 'inf', inf, false, false), 'keySize', J$.T(3470569, 24, 22, false));
                                J$.P(3470601, J$.R(3470585, 'inf', inf, false, false), 'blockSize', J$.T(3470593, 16, 22, false));
                                J$.P(3470657, J$.R(3470609, 'inf', inf, false, false), 'opensslName', J$.B(454474, '+', J$.T(3470617, 'aes-192-', 21, false), J$.M(3470649, J$.R(3470625, 'cipher', cipher, false, false), 'slice', false)(J$.T(3470633, 7, 22, false), J$.T(3470641, 10, 22, false))));
                                break;
                            case J$.C2(161336, J$.T(3470673, 'aes256-cbc', 21, false)):
                            case J$.C2(161344, J$.T(3470681, 'aes256-ctr', 21, false)):
                            case J$.C2(161352, J$.T(3470793, 'aes256-gcm@openssh.com', 21, false)):
                                J$.P(3470705, J$.R(3470689, 'inf', inf, false, false), 'keySize', J$.T(3470697, 32, 22, false));
                                J$.P(3470729, J$.R(3470713, 'inf', inf, false, false), 'blockSize', J$.T(3470721, 16, 22, false));
                                J$.P(3470785, J$.R(3470737, 'inf', inf, false, false), 'opensslName', J$.B(454482, '+', J$.T(3470745, 'aes-256-', 21, false), J$.M(3470777, J$.R(3470753, 'cipher', cipher, false, false), 'slice', false)(J$.T(3470761, 7, 22, false), J$.T(3470769, 10, 22, false))));
                                break;
                            default:
                                throw J$.F(3470833, J$.I(typeof Error === 'undefined' ? Error = J$.R(3470801, 'Error', undefined, true, true) : Error = J$.R(3470801, 'Error', Error, true, true)), true)(J$.B(454498, '+', J$.B(454490, '+', J$.T(3470809, 'Unsupported openssl cipher "', 21, false), J$.R(3470817, 'cipher', cipher, false, false)), J$.T(3470825, '"', 21, false)));
                            }
                            return J$.Rt(3470849, J$.R(3470841, 'inf', inf, false, false));
                        } catch (J$e) {
                            J$.Ex(3471673, J$e);
                        } finally {
                            if (J$.Fr(3471681))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(3470905, '_typeof', J$.T(3470897, _typeof, 12, false), true, false, false);
            J$.N(3470913, 'assert', assert, false, false, false);
            J$.N(3470921, 'Buffer', Buffer, false, false, false);
            J$.N(3470929, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(3470937, 'Key', Key, false, false, false);
            J$.N(3470945, 'crypto', crypto, false, false, false);
            J$.N(3470953, 'algs', algs, false, false, false);
            J$.N(3470961, 'asn1', asn1, false, false, false);
            J$.N(3470969, 'ec', ec, false, false, false);
            J$.N(3470977, 'jsbn', jsbn, false, false, false);
            J$.N(3470985, 'nacl', nacl, false, false, false);
            J$.N(3470993, 'MAX_CLASS_DEPTH', MAX_CLASS_DEPTH, false, false, false);
            isCompatible = J$.N(3471009, 'isCompatible', J$.T(3471001, isCompatible, 12, false), true, false, false);
            assertCompatible = J$.N(3471025, 'assertCompatible', J$.T(3471017, assertCompatible, 12, false), true, false, false);
            J$.N(3471033, 'CIPHER_LEN', CIPHER_LEN, false, false, false);
            J$.N(3471041, 'PKCS5_SALT_LEN', PKCS5_SALT_LEN, false, false, false);
            opensslKeyDeriv = J$.N(3471057, 'opensslKeyDeriv', J$.T(3471049, opensslKeyDeriv, 12, false), true, false, false);
            pbkdf2 = J$.N(3471073, 'pbkdf2', J$.T(3471065, pbkdf2, 12, false), true, false, false);
            countZeros = J$.N(3471089, 'countZeros', J$.T(3471081, countZeros, 12, false), true, false, false);
            bufferSplit = J$.N(3471105, 'bufferSplit', J$.T(3471097, bufferSplit, 12, false), true, false, false);
            ecNormalize = J$.N(3471121, 'ecNormalize', J$.T(3471113, ecNormalize, 12, false), true, false, false);
            readBitString = J$.N(3471137, 'readBitString', J$.T(3471129, readBitString, 12, false), true, false, false);
            writeBitString = J$.N(3471153, 'writeBitString', J$.T(3471145, writeBitString, 12, false), true, false, false);
            mpNormalize = J$.N(3471169, 'mpNormalize', J$.T(3471161, mpNormalize, 12, false), true, false, false);
            mpDenormalize = J$.N(3471185, 'mpDenormalize', J$.T(3471177, mpDenormalize, 12, false), true, false, false);
            zeroPadToLength = J$.N(3471201, 'zeroPadToLength', J$.T(3471193, zeroPadToLength, 12, false), true, false, false);
            bigintToMpBuf = J$.N(3471217, 'bigintToMpBuf', J$.T(3471209, bigintToMpBuf, 12, false), true, false, false);
            calculateDSAPublic = J$.N(3471233, 'calculateDSAPublic', J$.T(3471225, calculateDSAPublic, 12, false), true, false, false);
            calculateED25519Public = J$.N(3471249, 'calculateED25519Public', J$.T(3471241, calculateED25519Public, 12, false), true, false, false);
            calculateX25519Public = J$.N(3471265, 'calculateX25519Public', J$.T(3471257, calculateX25519Public, 12, false), true, false, false);
            addRSAMissing = J$.N(3471281, 'addRSAMissing', J$.T(3471273, addRSAMissing, 12, false), true, false, false);
            publicFromPrivateECDSA = J$.N(3471297, 'publicFromPrivateECDSA', J$.T(3471289, publicFromPrivateECDSA, 12, false), true, false, false);
            opensshCipherInfo = J$.N(3471313, 'opensshCipherInfo', J$.T(3471305, opensshCipherInfo, 12, false), true, false, false);
            J$.T(3460033, 'use strict', 21, false);
            J$.F(3460057, J$.I(typeof require === 'undefined' ? require = J$.R(3460041, 'require', undefined, true, true) : require = J$.R(3460041, 'require', require, true, true)), false)(J$.T(3460049, 'core-js/modules/es.symbol', 21, false));
            J$.F(3460081, J$.I(typeof require === 'undefined' ? require = J$.R(3460065, 'require', undefined, true, true) : require = J$.R(3460065, 'require', require, true, true)), false)(J$.T(3460073, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(3460105, J$.I(typeof require === 'undefined' ? require = J$.R(3460089, 'require', undefined, true, true) : require = J$.R(3460089, 'require', require, true, true)), false)(J$.T(3460097, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(3460129, J$.I(typeof require === 'undefined' ? require = J$.R(3460113, 'require', undefined, true, true) : require = J$.R(3460113, 'require', require, true, true)), false)(J$.T(3460121, 'core-js/modules/es.array.concat', 21, false));
            J$.F(3460153, J$.I(typeof require === 'undefined' ? require = J$.R(3460137, 'require', undefined, true, true) : require = J$.R(3460137, 'require', require, true, true)), false)(J$.T(3460145, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(3460177, J$.I(typeof require === 'undefined' ? require = J$.R(3460161, 'require', undefined, true, true) : require = J$.R(3460161, 'require', require, true, true)), false)(J$.T(3460169, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3460201, J$.I(typeof require === 'undefined' ? require = J$.R(3460185, 'require', undefined, true, true) : require = J$.R(3460185, 'require', require, true, true)), false)(J$.T(3460193, 'core-js/modules/es.array-buffer.slice', 21, false));
            J$.F(3460225, J$.I(typeof require === 'undefined' ? require = J$.R(3460209, 'require', undefined, true, true) : require = J$.R(3460209, 'require', require, true, true)), false)(J$.T(3460217, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(3460249, J$.I(typeof require === 'undefined' ? require = J$.R(3460233, 'require', undefined, true, true) : require = J$.R(3460233, 'require', require, true, true)), false)(J$.T(3460241, 'core-js/modules/es.function.name', 21, false));
            J$.F(3460273, J$.I(typeof require === 'undefined' ? require = J$.R(3460257, 'require', undefined, true, true) : require = J$.R(3460257, 'require', require, true, true)), false)(J$.T(3460265, 'core-js/modules/es.object.get-prototype-of', 21, false));
            J$.F(3460297, J$.I(typeof require === 'undefined' ? require = J$.R(3460281, 'require', undefined, true, true) : require = J$.R(3460281, 'require', require, true, true)), false)(J$.T(3460289, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3460321, J$.I(typeof require === 'undefined' ? require = J$.R(3460305, 'require', undefined, true, true) : require = J$.R(3460305, 'require', require, true, true)), false)(J$.T(3460313, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(3460345, J$.I(typeof require === 'undefined' ? require = J$.R(3460329, 'require', undefined, true, true) : require = J$.R(3460329, 'require', require, true, true)), false)(J$.T(3460337, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(3460369, J$.I(typeof require === 'undefined' ? require = J$.R(3460353, 'require', undefined, true, true) : require = J$.R(3460353, 'require', require, true, true)), false)(J$.T(3460361, 'core-js/modules/es.typed-array.uint8-array', 21, false));
            J$.F(3460393, J$.I(typeof require === 'undefined' ? require = J$.R(3460377, 'require', undefined, true, true) : require = J$.R(3460377, 'require', require, true, true)), false)(J$.T(3460385, 'core-js/modules/es.typed-array.copy-within', 21, false));
            J$.F(3460417, J$.I(typeof require === 'undefined' ? require = J$.R(3460401, 'require', undefined, true, true) : require = J$.R(3460401, 'require', require, true, true)), false)(J$.T(3460409, 'core-js/modules/es.typed-array.every', 21, false));
            J$.F(3460441, J$.I(typeof require === 'undefined' ? require = J$.R(3460425, 'require', undefined, true, true) : require = J$.R(3460425, 'require', require, true, true)), false)(J$.T(3460433, 'core-js/modules/es.typed-array.fill', 21, false));
            J$.F(3460465, J$.I(typeof require === 'undefined' ? require = J$.R(3460449, 'require', undefined, true, true) : require = J$.R(3460449, 'require', require, true, true)), false)(J$.T(3460457, 'core-js/modules/es.typed-array.filter', 21, false));
            J$.F(3460489, J$.I(typeof require === 'undefined' ? require = J$.R(3460473, 'require', undefined, true, true) : require = J$.R(3460473, 'require', require, true, true)), false)(J$.T(3460481, 'core-js/modules/es.typed-array.find', 21, false));
            J$.F(3460513, J$.I(typeof require === 'undefined' ? require = J$.R(3460497, 'require', undefined, true, true) : require = J$.R(3460497, 'require', require, true, true)), false)(J$.T(3460505, 'core-js/modules/es.typed-array.find-index', 21, false));
            J$.F(3460537, J$.I(typeof require === 'undefined' ? require = J$.R(3460521, 'require', undefined, true, true) : require = J$.R(3460521, 'require', require, true, true)), false)(J$.T(3460529, 'core-js/modules/es.typed-array.for-each', 21, false));
            J$.F(3460561, J$.I(typeof require === 'undefined' ? require = J$.R(3460545, 'require', undefined, true, true) : require = J$.R(3460545, 'require', require, true, true)), false)(J$.T(3460553, 'core-js/modules/es.typed-array.includes', 21, false));
            J$.F(3460585, J$.I(typeof require === 'undefined' ? require = J$.R(3460569, 'require', undefined, true, true) : require = J$.R(3460569, 'require', require, true, true)), false)(J$.T(3460577, 'core-js/modules/es.typed-array.index-of', 21, false));
            J$.F(3460609, J$.I(typeof require === 'undefined' ? require = J$.R(3460593, 'require', undefined, true, true) : require = J$.R(3460593, 'require', require, true, true)), false)(J$.T(3460601, 'core-js/modules/es.typed-array.iterator', 21, false));
            J$.F(3460633, J$.I(typeof require === 'undefined' ? require = J$.R(3460617, 'require', undefined, true, true) : require = J$.R(3460617, 'require', require, true, true)), false)(J$.T(3460625, 'core-js/modules/es.typed-array.join', 21, false));
            J$.F(3460657, J$.I(typeof require === 'undefined' ? require = J$.R(3460641, 'require', undefined, true, true) : require = J$.R(3460641, 'require', require, true, true)), false)(J$.T(3460649, 'core-js/modules/es.typed-array.last-index-of', 21, false));
            J$.F(3460681, J$.I(typeof require === 'undefined' ? require = J$.R(3460665, 'require', undefined, true, true) : require = J$.R(3460665, 'require', require, true, true)), false)(J$.T(3460673, 'core-js/modules/es.typed-array.map', 21, false));
            J$.F(3460705, J$.I(typeof require === 'undefined' ? require = J$.R(3460689, 'require', undefined, true, true) : require = J$.R(3460689, 'require', require, true, true)), false)(J$.T(3460697, 'core-js/modules/es.typed-array.reduce', 21, false));
            J$.F(3460729, J$.I(typeof require === 'undefined' ? require = J$.R(3460713, 'require', undefined, true, true) : require = J$.R(3460713, 'require', require, true, true)), false)(J$.T(3460721, 'core-js/modules/es.typed-array.reduce-right', 21, false));
            J$.F(3460753, J$.I(typeof require === 'undefined' ? require = J$.R(3460737, 'require', undefined, true, true) : require = J$.R(3460737, 'require', require, true, true)), false)(J$.T(3460745, 'core-js/modules/es.typed-array.reverse', 21, false));
            J$.F(3460777, J$.I(typeof require === 'undefined' ? require = J$.R(3460761, 'require', undefined, true, true) : require = J$.R(3460761, 'require', require, true, true)), false)(J$.T(3460769, 'core-js/modules/es.typed-array.set', 21, false));
            J$.F(3460801, J$.I(typeof require === 'undefined' ? require = J$.R(3460785, 'require', undefined, true, true) : require = J$.R(3460785, 'require', require, true, true)), false)(J$.T(3460793, 'core-js/modules/es.typed-array.slice', 21, false));
            J$.F(3460825, J$.I(typeof require === 'undefined' ? require = J$.R(3460809, 'require', undefined, true, true) : require = J$.R(3460809, 'require', require, true, true)), false)(J$.T(3460817, 'core-js/modules/es.typed-array.some', 21, false));
            J$.F(3460849, J$.I(typeof require === 'undefined' ? require = J$.R(3460833, 'require', undefined, true, true) : require = J$.R(3460833, 'require', require, true, true)), false)(J$.T(3460841, 'core-js/modules/es.typed-array.sort', 21, false));
            J$.F(3460873, J$.I(typeof require === 'undefined' ? require = J$.R(3460857, 'require', undefined, true, true) : require = J$.R(3460857, 'require', require, true, true)), false)(J$.T(3460865, 'core-js/modules/es.typed-array.subarray', 21, false));
            J$.F(3460897, J$.I(typeof require === 'undefined' ? require = J$.R(3460881, 'require', undefined, true, true) : require = J$.R(3460881, 'require', require, true, true)), false)(J$.T(3460889, 'core-js/modules/es.typed-array.to-locale-string', 21, false));
            J$.F(3460921, J$.I(typeof require === 'undefined' ? require = J$.R(3460905, 'require', undefined, true, true) : require = J$.R(3460905, 'require', require, true, true)), false)(J$.T(3460913, 'core-js/modules/es.typed-array.to-string', 21, false));
            J$.F(3460945, J$.I(typeof require === 'undefined' ? require = J$.R(3460929, 'require', undefined, true, true) : require = J$.R(3460929, 'require', require, true, true)), false)(J$.T(3460937, 'core-js/modules/web.dom-collections.iterator', 21, false));
            J$.P(3461401, J$.I(typeof module === 'undefined' ? module = J$.R(3461241, 'module', undefined, true, true) : module = J$.R(3461241, 'module', module, true, true)), 'exports', J$.T(3461393, {
                bufferSplit: J$.R(3461249, 'bufferSplit', bufferSplit, false, true),
                addRSAMissing: J$.R(3461257, 'addRSAMissing', addRSAMissing, false, true),
                calculateDSAPublic: J$.R(3461265, 'calculateDSAPublic', calculateDSAPublic, false, true),
                calculateED25519Public: J$.R(3461273, 'calculateED25519Public', calculateED25519Public, false, true),
                calculateX25519Public: J$.R(3461281, 'calculateX25519Public', calculateX25519Public, false, true),
                mpNormalize: J$.R(3461289, 'mpNormalize', mpNormalize, false, true),
                mpDenormalize: J$.R(3461297, 'mpDenormalize', mpDenormalize, false, true),
                ecNormalize: J$.R(3461305, 'ecNormalize', ecNormalize, false, true),
                countZeros: J$.R(3461313, 'countZeros', countZeros, false, true),
                assertCompatible: J$.R(3461321, 'assertCompatible', assertCompatible, false, true),
                isCompatible: J$.R(3461329, 'isCompatible', isCompatible, false, true),
                opensslKeyDeriv: J$.R(3461337, 'opensslKeyDeriv', opensslKeyDeriv, false, true),
                opensshCipherInfo: J$.R(3461345, 'opensshCipherInfo', opensshCipherInfo, false, true),
                publicFromPrivateECDSA: J$.R(3461353, 'publicFromPrivateECDSA', publicFromPrivateECDSA, false, true),
                zeroPadToLength: J$.R(3461361, 'zeroPadToLength', zeroPadToLength, false, true),
                writeBitString: J$.R(3461369, 'writeBitString', writeBitString, false, true),
                readBitString: J$.R(3461377, 'readBitString', readBitString, false, true),
                pbkdf2: J$.R(3461385, 'pbkdf2', pbkdf2, false, true)
            }, 11, false));
            var assert = J$.W(3461433, 'assert', J$.F(3461425, J$.I(typeof require === 'undefined' ? require = J$.R(3461409, 'require', undefined, true, true) : require = J$.R(3461409, 'require', require, true, true)), false)(J$.T(3461417, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(3461473, 'Buffer', J$.G(3461465, J$.F(3461457, J$.I(typeof require === 'undefined' ? require = J$.R(3461441, 'require', undefined, true, true) : require = J$.R(3461441, 'require', require, true, true)), false)(J$.T(3461449, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var PrivateKey = J$.W(3461505, 'PrivateKey', J$.F(3461497, J$.I(typeof require === 'undefined' ? require = J$.R(3461481, 'require', undefined, true, true) : require = J$.R(3461481, 'require', require, true, true)), false)(J$.T(3461489, './private-key', 21, false)), PrivateKey, false, true);
            var Key = J$.W(3461537, 'Key', J$.F(3461529, J$.I(typeof require === 'undefined' ? require = J$.R(3461513, 'require', undefined, true, true) : require = J$.R(3461513, 'require', require, true, true)), false)(J$.T(3461521, './key', 21, false)), Key, false, true);
            var crypto = J$.W(3461569, 'crypto', J$.F(3461561, J$.I(typeof require === 'undefined' ? require = J$.R(3461545, 'require', undefined, true, true) : require = J$.R(3461545, 'require', require, true, true)), false)(J$.T(3461553, 'crypto', 21, false)), crypto, false, true);
            var algs = J$.W(3461601, 'algs', J$.F(3461593, J$.I(typeof require === 'undefined' ? require = J$.R(3461577, 'require', undefined, true, true) : require = J$.R(3461577, 'require', require, true, true)), false)(J$.T(3461585, './algs', 21, false)), algs, false, true);
            var asn1 = J$.W(3461633, 'asn1', J$.F(3461625, J$.I(typeof require === 'undefined' ? require = J$.R(3461609, 'require', undefined, true, true) : require = J$.R(3461609, 'require', require, true, true)), false)(J$.T(3461617, 'asn1', 21, false)), asn1, false, true);
            var ec = J$.W(3461665, 'ec', J$.F(3461657, J$.I(typeof require === 'undefined' ? require = J$.R(3461641, 'require', undefined, true, true) : require = J$.R(3461641, 'require', require, true, true)), false)(J$.T(3461649, 'ecc-jsbn/lib/ec', 21, false)), ec, false, true);
            var jsbn = J$.W(3461705, 'jsbn', J$.G(3461697, J$.F(3461689, J$.I(typeof require === 'undefined' ? require = J$.R(3461673, 'require', undefined, true, true) : require = J$.R(3461673, 'require', require, true, true)), false)(J$.T(3461681, 'jsbn', 21, false)), 'BigInteger'), jsbn, false, true);
            var nacl = J$.W(3461737, 'nacl', J$.F(3461729, J$.I(typeof require === 'undefined' ? require = J$.R(3461713, 'require', undefined, true, true) : require = J$.R(3461713, 'require', require, true, true)), false)(J$.T(3461721, 'tweetnacl', 21, false)), nacl, false, true);
            var MAX_CLASS_DEPTH = J$.W(3461753, 'MAX_CLASS_DEPTH', J$.T(3461745, 3, 22, false), MAX_CLASS_DEPTH, false, true);
            var CIPHER_LEN = J$.W(3463449, 'CIPHER_LEN', J$.T(3463441, {
                'des-ede3-cbc': J$.T(3463385, {
                    key: J$.T(3463369, 24, 22, false),
                    iv: J$.T(3463377, 8, 22, false)
                }, 11, false),
                'aes-128-cbc': J$.T(3463409, {
                    key: J$.T(3463393, 16, 22, false),
                    iv: J$.T(3463401, 16, 22, false)
                }, 11, false),
                'aes-256-cbc': J$.T(3463433, {
                    key: J$.T(3463417, 32, 22, false),
                    iv: J$.T(3463425, 16, 22, false)
                }, 11, false)
            }, 11, false), CIPHER_LEN, false, true);
            var PKCS5_SALT_LEN = J$.W(3463465, 'PKCS5_SALT_LEN', J$.T(3463457, 8, 22, false), PKCS5_SALT_LEN, false, true);
        } catch (J$e) {
            J$.Ex(3471689, J$e);
        } finally {
            if (J$.Sr(3471697))
                continue jalangiLabel23;
            else
                break jalangiLabel23;
        }
    }
// JALANGI DO NOT INSTRUMENT

