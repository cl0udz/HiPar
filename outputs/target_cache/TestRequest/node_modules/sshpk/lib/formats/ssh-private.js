J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(3400073, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/sshpk/lib/formats/ssh-private.js');
            function read(buf, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3394937, arguments.callee, this, arguments);
                            arguments = J$.N(3394945, 'arguments', arguments, true, false, false);
                            buf = J$.N(3394953, 'buf', buf, true, false, false);
                            options = J$.N(3394961, 'options', options, true, false, false);
                            return J$.Rt(3394929, J$.M(3394921, J$.R(3394897, 'pem', pem, false, true), 'read', false)(J$.R(3394905, 'buf', buf, false, false), J$.R(3394913, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(3400241, J$e);
                        } finally {
                            if (J$.Fr(3400249))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readSSHPrivate(type, buf, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3396937, arguments.callee, this, arguments);
                            arguments = J$.N(3396945, 'arguments', arguments, true, false, false);
                            type = J$.N(3396953, 'type', type, true, false, false);
                            buf = J$.N(3396961, 'buf', buf, true, false, false);
                            options = J$.N(3396969, 'options', options, true, false, false);
                            J$.N(3396977, 'magic', magic, false, false, false);
                            J$.N(3396985, 'cipher', cipher, false, false, false);
                            J$.N(3396993, 'kdf', kdf, false, false, false);
                            J$.N(3397001, 'kdfOpts', kdfOpts, false, false, false);
                            J$.N(3397009, 'nkeys', nkeys, false, false, false);
                            J$.N(3397017, 'pubKey', pubKey, false, false, false);
                            J$.N(3397025, 'privKeyBlob', privKeyBlob, false, false, false);
                            J$.N(3397033, 'kdfOptsBuf', kdfOptsBuf, false, false, false);
                            J$.N(3397041, 'salt', salt, false, false, false);
                            J$.N(3397049, 'rounds', rounds, false, false, false);
                            J$.N(3397057, 'cinf', cinf, false, false, false);
                            J$.N(3397065, 'pass', pass, false, false, false);
                            J$.N(3397073, 'salti', salti, false, false, false);
                            J$.N(3397081, 'out', out, false, false, false);
                            J$.N(3397089, 'res', res, false, false, false);
                            J$.N(3397097, 'ckey', ckey, false, false, false);
                            J$.N(3397105, 'iv', iv, false, false, false);
                            J$.N(3397113, 'cipherStream', cipherStream, false, false, false);
                            J$.N(3397121, 'chunk', chunk, false, false, false);
                            J$.N(3397129, 'chunks', chunks, false, false, false);
                            J$.N(3397137, 'checkInt1', checkInt1, false, false, false);
                            J$.N(3397145, 'checkInt2', checkInt2, false, false, false);
                            J$.N(3397153, 'ret', ret, false, false, false);
                            J$.N(3397161, 'key', key, false, false, false);
                            J$.N(3397169, 'comment', comment, false, false, false);
                            buf = J$.W(3395017, 'buf', J$.F(3395009, J$.R(3394985, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(3395001, { buffer: J$.R(3394993, 'buf', buf, false, false) }, 11, false)), buf, false, false);
                            var magic = J$.W(3395041, 'magic', J$.M(3395033, J$.R(3395025, 'buf', buf, false, false), 'readCString', false)(), magic, false, false);
                            J$.M(3395081, J$.R(3395049, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3395057, 'magic', magic, false, false), J$.R(3395065, 'MAGIC', MAGIC, false, true), J$.T(3395073, 'bad magic string', 21, false));
                            var cipher = J$.W(3395105, 'cipher', J$.M(3395097, J$.R(3395089, 'buf', buf, false, false), 'readString', false)(), cipher, false, false);
                            var kdf = J$.W(3395129, 'kdf', J$.M(3395121, J$.R(3395113, 'buf', buf, false, false), 'readString', false)(), kdf, false, false);
                            var kdfOpts = J$.W(3395153, 'kdfOpts', J$.M(3395145, J$.R(3395137, 'buf', buf, false, false), 'readBuffer', false)(), kdfOpts, false, false);
                            var nkeys = J$.W(3395177, 'nkeys', J$.M(3395169, J$.R(3395161, 'buf', buf, false, false), 'readInt', false)(), nkeys, false, false);
                            if (J$.C(157688, J$.B(449130, '!==', J$.R(3395185, 'nkeys', nkeys, false, false), J$.T(3395193, 1, 22, false)))) {
                                throw J$.F(3395225, J$.I(typeof Error === 'undefined' ? Error = J$.R(3395201, 'Error', undefined, true, true) : Error = J$.R(3395201, 'Error', Error, true, true)), true)(J$.B(449138, '+', J$.T(3395209, 'OpenSSH-format key file contains ', 21, false), J$.T(3395217, 'multiple keys: this is unsupported.', 21, false)));
                            }
                            var pubKey = J$.W(3395249, 'pubKey', J$.M(3395241, J$.R(3395233, 'buf', buf, false, false), 'readBuffer', false)(), pubKey, false, false);
                            if (J$.C(157696, J$.B(449146, '===', J$.R(3395257, 'type', type, false, false), J$.T(3395265, 'public', 21, false)))) {
                                J$.M(3395305, J$.R(3395273, 'assert', assert, false, true), 'ok', false)(J$.M(3395289, J$.R(3395281, 'buf', buf, false, false), 'atEnd', false)(), J$.T(3395297, 'excess bytes left after key', 21, false));
                                return J$.Rt(3395337, J$.M(3395329, J$.R(3395313, 'rfc4253', rfc4253, false, true), 'read', false)(J$.R(3395321, 'pubKey', pubKey, false, false)));
                            }
                            var privKeyBlob = J$.W(3395361, 'privKeyBlob', J$.M(3395353, J$.R(3395345, 'buf', buf, false, false), 'readBuffer', false)(), privKeyBlob, false, false);
                            J$.M(3395401, J$.R(3395369, 'assert', assert, false, true), 'ok', false)(J$.M(3395385, J$.R(3395377, 'buf', buf, false, false), 'atEnd', false)(), J$.T(3395393, 'excess bytes left after key', 21, false));
                            var kdfOptsBuf = J$.W(3395441, 'kdfOptsBuf', J$.F(3395433, J$.R(3395409, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(3395425, { buffer: J$.R(3395417, 'kdfOpts', kdfOpts, false, false) }, 11, false)), kdfOptsBuf, false, false);
                            switch (J$.C1(157760, J$.R(3395449, 'kdf', kdf, false, false))) {
                            case J$.C2(157768, J$.T(3395505, 'none', 21, false)):
                                if (J$.C(157704, J$.B(449154, '!==', J$.R(3395457, 'cipher', cipher, false, false), J$.T(3395465, 'none', 21, false)))) {
                                    throw J$.F(3395497, J$.I(typeof Error === 'undefined' ? Error = J$.R(3395473, 'Error', undefined, true, true) : Error = J$.R(3395473, 'Error', Error, true, true)), true)(J$.B(449162, '+', J$.T(3395481, 'OpenSSH-format key uses KDF "none" ', 21, false), J$.T(3395489, 'but specifies a cipher other than "none"', 21, false)));
                                }
                                break;
                            case J$.C2(157776, J$.T(3396585, 'bcrypt', 21, false)):
                                var salt = J$.W(3395529, 'salt', J$.M(3395521, J$.R(3395513, 'kdfOptsBuf', kdfOptsBuf, false, false), 'readBuffer', false)(), salt, false, false);
                                var rounds = J$.W(3395553, 'rounds', J$.M(3395545, J$.R(3395537, 'kdfOptsBuf', kdfOptsBuf, false, false), 'readInt', false)(), rounds, false, false);
                                var cinf = J$.W(3395585, 'cinf', J$.M(3395577, J$.R(3395561, 'utils', utils, false, true), 'opensshCipherInfo', false)(J$.R(3395569, 'cipher', cipher, false, false)), cinf, false, false);
                                if (J$.C(157712, J$.B(449170, '===', J$.R(3395593, 'bcrypt', bcrypt, false, true), J$.T(3395601, undefined, 24, false)))) {
                                    bcrypt = J$.W(3395633, 'bcrypt', J$.F(3395625, J$.I(typeof require === 'undefined' ? require = J$.R(3395609, 'require', undefined, true, true) : require = J$.R(3395609, 'require', require, true, true)), false)(J$.T(3395617, 'bcrypt-pbkdf', 21, false)), bcrypt, false, true);
                                }
                                if (J$.C(157720, J$.B(449186, '===', J$.U(449178, 'typeof', J$.G(3395649, J$.R(3395641, 'options', options, false, false), 'passphrase')), J$.T(3395657, 'string', 21, false)))) {
                                    J$.P(3395713, J$.R(3395665, 'options', options, false, false), 'passphrase', J$.M(3395705, J$.R(3395673, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3395689, J$.R(3395681, 'options', options, false, false), 'passphrase'), J$.T(3395697, 'utf-8', 21, false)));
                                }
                                if (J$.C(157728, J$.U(449194, '!', J$.M(3395745, J$.R(3395721, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(3395737, J$.R(3395729, 'options', options, false, false), 'passphrase'))))) {
                                    throw J$.M(3395785, J$.R(3395753, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(3395769, J$.R(3395761, 'options', options, false, false), 'filename'), J$.T(3395777, 'OpenSSH', 21, false));
                                }
                                var pass = J$.W(3395825, 'pass', J$.F(3395817, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3395793, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3395793, 'Uint8Array', Uint8Array, true, true)), true)(J$.G(3395809, J$.R(3395801, 'options', options, false, false), 'passphrase')), pass, false, false);
                                var salti = J$.W(3395857, 'salti', J$.F(3395849, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3395833, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3395833, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(3395841, 'salt', salt, false, false)), salti, false, false);
                                var out = J$.W(3395913, 'out', J$.F(3395905, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3395865, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3395865, 'Uint8Array', Uint8Array, true, true)), true)(J$.B(449202, '+', J$.G(3395881, J$.R(3395873, 'cinf', cinf, false, false), 'keySize'), J$.G(3395897, J$.R(3395889, 'cinf', cinf, false, false), 'blockSize'))), out, false, false);
                                var res = J$.W(3396017, 'res', J$.M(3396009, J$.R(3395921, 'bcrypt', bcrypt, false, true), 'pbkdf', false)(J$.R(3395929, 'pass', pass, false, false), J$.G(3395945, J$.R(3395937, 'pass', pass, false, false), 'length'), J$.R(3395953, 'salti', salti, false, false), J$.G(3395969, J$.R(3395961, 'salti', salti, false, false), 'length'), J$.R(3395977, 'out', out, false, false), J$.G(3395993, J$.R(3395985, 'out', out, false, false), 'length'), J$.R(3396001, 'rounds', rounds, false, false)), res, false, false);
                                if (J$.C(157736, J$.B(449210, '!==', J$.R(3396025, 'res', res, false, false), J$.T(3396033, 0, 22, false)))) {
                                    throw J$.F(3396065, J$.I(typeof Error === 'undefined' ? Error = J$.R(3396041, 'Error', undefined, true, true) : Error = J$.R(3396041, 'Error', Error, true, true)), true)(J$.B(449218, '+', J$.T(3396049, 'bcrypt_pbkdf function returned ', 21, false), J$.T(3396057, 'failure, parameters invalid', 21, false)));
                                }
                                out = J$.W(3396097, 'out', J$.M(3396089, J$.R(3396073, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3396081, 'out', out, false, false)), out, false, false);
                                var ckey = J$.W(3396145, 'ckey', J$.M(3396137, J$.R(3396105, 'out', out, false, false), 'slice', false)(J$.T(3396113, 0, 22, false), J$.G(3396129, J$.R(3396121, 'cinf', cinf, false, false), 'keySize')), ckey, false, false);
                                var iv = J$.W(3396217, 'iv', J$.M(3396209, J$.R(3396153, 'out', out, false, false), 'slice', false)(J$.G(3396169, J$.R(3396161, 'cinf', cinf, false, false), 'keySize'), J$.B(449226, '+', J$.G(3396185, J$.R(3396177, 'cinf', cinf, false, false), 'keySize'), J$.G(3396201, J$.R(3396193, 'cinf', cinf, false, false), 'blockSize'))), iv, false, false);
                                var cipherStream = J$.W(3396273, 'cipherStream', J$.M(3396265, J$.R(3396225, 'crypto', crypto, false, true), 'createDecipheriv', false)(J$.G(3396241, J$.R(3396233, 'cinf', cinf, false, false), 'opensslName'), J$.R(3396249, 'ckey', ckey, false, false), J$.R(3396257, 'iv', iv, false, false)), cipherStream, false, false);
                                J$.M(3396297, J$.R(3396281, 'cipherStream', cipherStream, false, false), 'setAutoPadding', false)(J$.T(3396289, false, 23, false));
                                var chunk, chunks = J$.W(3396313, 'chunks', J$.T(3396305, [], 10, false), chunks, false, false);
                                J$.M(3396449, J$.R(3396321, 'cipherStream', cipherStream, false, false), 'once', false)(J$.T(3396329, 'error', 21, false), J$.T(3396441, function (e) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(3396417, arguments.callee, this, arguments);
                                                arguments = J$.N(3396425, 'arguments', arguments, true, false, false);
                                                e = J$.N(3396433, 'e', e, true, false, false);
                                                if (J$.C(157744, J$.B(449242, '!==', J$.M(3396361, J$.M(3396345, J$.R(3396337, 'e', e, false, false), 'toString', false)(), 'indexOf', false)(J$.T(3396353, 'bad decrypt', 21, false)), J$.U(449234, '-', J$.T(3396369, 1, 22, false))))) {
                                                    throw J$.F(3396401, J$.I(typeof Error === 'undefined' ? Error = J$.R(3396377, 'Error', undefined, true, true) : Error = J$.R(3396377, 'Error', Error, true, true)), true)(J$.B(449250, '+', J$.T(3396385, 'Incorrect passphrase ', 21, false), J$.T(3396393, 'supplied, could not decrypt key', 21, false)));
                                                }
                                                throw J$.R(3396409, 'e', e, false, false);
                                            } catch (J$e) {
                                                J$.Ex(3400257, J$e);
                                            } finally {
                                                if (J$.Fr(3400265))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(3396473, J$.R(3396457, 'cipherStream', cipherStream, false, false), 'write', false)(J$.R(3396465, 'privKeyBlob', privKeyBlob, false, false));
                                J$.M(3396489, J$.R(3396481, 'cipherStream', cipherStream, false, false), 'end', false)();
                                while (J$.C(157752, J$.B(449258, '!==', chunk = J$.W(3396513, 'chunk', J$.M(3396505, J$.R(3396497, 'cipherStream', cipherStream, false, false), 'read', false)(), chunk, false, false), J$.T(3396521, null, 25, false)))) {
                                    J$.M(3396545, J$.R(3396529, 'chunks', chunks, false, false), 'push', false)(J$.R(3396537, 'chunk', chunk, false, false));
                                }
                                privKeyBlob = J$.W(3396577, 'privKeyBlob', J$.M(3396569, J$.R(3396553, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(3396561, 'chunks', chunks, false, false)), privKeyBlob, false, false);
                                break;
                            default:
                                throw J$.F(3396625, J$.I(typeof Error === 'undefined' ? Error = J$.R(3396593, 'Error', undefined, true, true) : Error = J$.R(3396593, 'Error', Error, true, true)), true)(J$.B(449274, '+', J$.B(449266, '+', J$.T(3396601, 'OpenSSH-format key uses unknown KDF "', 21, false), J$.R(3396609, 'kdf', kdf, false, false)), J$.T(3396617, '"', 21, false)));
                            }
                            buf = J$.W(3396665, 'buf', J$.F(3396657, J$.R(3396633, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(3396649, { buffer: J$.R(3396641, 'privKeyBlob', privKeyBlob, false, false) }, 11, false)), buf, false, false);
                            var checkInt1 = J$.W(3396689, 'checkInt1', J$.M(3396681, J$.R(3396673, 'buf', buf, false, false), 'readInt', false)(), checkInt1, false, false);
                            var checkInt2 = J$.W(3396713, 'checkInt2', J$.M(3396705, J$.R(3396697, 'buf', buf, false, false), 'readInt', false)(), checkInt2, false, false);
                            if (J$.C(157784, J$.B(449282, '!==', J$.R(3396721, 'checkInt1', checkInt1, false, false), J$.R(3396729, 'checkInt2', checkInt2, false, false)))) {
                                throw J$.F(3396761, J$.I(typeof Error === 'undefined' ? Error = J$.R(3396737, 'Error', undefined, true, true) : Error = J$.R(3396737, 'Error', Error, true, true)), true)(J$.B(449290, '+', J$.T(3396745, 'Incorrect passphrase supplied, could not ', 21, false), J$.T(3396753, 'decrypt key', 21, false)));
                            }
                            var ret = J$.W(3396777, 'ret', J$.T(3396769, {}, 11, false), ret, false, false);
                            var key = J$.W(3396833, 'key', J$.M(3396825, J$.R(3396785, 'rfc4253', rfc4253, false, true), 'readInternal', false)(J$.R(3396793, 'ret', ret, false, false), J$.T(3396801, 'private', 21, false), J$.M(3396817, J$.R(3396809, 'buf', buf, false, false), 'remainder', false)()), key, false, false);
                            J$.M(3396865, J$.R(3396841, 'buf', buf, false, false), 'skip', false)(J$.G(3396857, J$.R(3396849, 'ret', ret, false, false), 'consumed'));
                            var comment = J$.W(3396889, 'comment', J$.M(3396881, J$.R(3396873, 'buf', buf, false, false), 'readString', false)(), comment, false, false);
                            J$.P(3396913, J$.R(3396897, 'key', key, false, false), 'comment', J$.R(3396905, 'comment', comment, false, false));
                            return J$.Rt(3396929, J$.R(3396921, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(3400273, J$e);
                        } finally {
                            if (J$.Fr(3400281))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3399817, arguments.callee, this, arguments);
                            arguments = J$.N(3399825, 'arguments', arguments, true, false, false);
                            key = J$.N(3399833, 'key', key, true, false, false);
                            options = J$.N(3399841, 'options', options, true, false, false);
                            J$.N(3399849, 'pubKey', pubKey, false, false, false);
                            J$.N(3399857, 'cipher', cipher, false, false, false);
                            J$.N(3399865, 'kdf', kdf, false, false, false);
                            J$.N(3399873, 'kdfopts', kdfopts, false, false, false);
                            J$.N(3399881, 'cinf', cinf, false, false, false);
                            J$.N(3399889, 'passphrase', passphrase, false, false, false);
                            J$.N(3399897, 'privBuf', privBuf, false, false, false);
                            J$.N(3399905, 'checkInt', checkInt, false, false, false);
                            J$.N(3399913, 'n', n, false, false, false);
                            J$.N(3399921, 'salt', salt, false, false, false);
                            J$.N(3399929, 'rounds', rounds, false, false, false);
                            J$.N(3399937, 'kdfssh', kdfssh, false, false, false);
                            J$.N(3399945, 'pass', pass, false, false, false);
                            J$.N(3399953, 'salti', salti, false, false, false);
                            J$.N(3399961, 'out', out, false, false, false);
                            J$.N(3399969, 'res', res, false, false, false);
                            J$.N(3399977, 'ckey', ckey, false, false, false);
                            J$.N(3399985, 'iv', iv, false, false, false);
                            J$.N(3399993, 'cipherStream', cipherStream, false, false, false);
                            J$.N(3400001, 'chunk', chunk, false, false, false);
                            J$.N(3400009, 'chunks', chunks, false, false, false);
                            J$.N(3400017, 'buf', buf, false, false, false);
                            J$.N(3400025, 'header', header, false, false, false);
                            J$.N(3400033, 'tmp', tmp, false, false, false);
                            J$.N(3400041, 'len', len, false, false, false);
                            J$.N(3400049, 'o', o, false, false, false);
                            J$.N(3400057, 'i', i, false, false, false);
                            J$.N(3400065, 'limit', limit, false, false, false);
                            var pubKey;
                            if (J$.C(157792, J$.M(3397193, J$.R(3397177, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3397185, 'key', key, false, false))))
                                pubKey = J$.W(3397217, 'pubKey', J$.M(3397209, J$.R(3397201, 'key', key, false, false), 'toPublic', false)(), pubKey, false, false);
                            else
                                pubKey = J$.W(3397233, 'pubKey', J$.R(3397225, 'key', key, false, false), pubKey, false, false);
                            var cipher = J$.W(3397249, 'cipher', J$.T(3397241, 'none', 21, false), cipher, false, false);
                            var kdf = J$.W(3397265, 'kdf', J$.T(3397257, 'none', 21, false), kdf, false, false);
                            var kdfopts = J$.W(3397297, 'kdfopts', J$.M(3397289, J$.R(3397273, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(3397281, 0, 22, false)), kdfopts, false, false);
                            var cinf = J$.W(3397321, 'cinf', J$.T(3397313, { blockSize: J$.T(3397305, 8, 22, false) }, 11, false), cinf, false, false);
                            var passphrase;
                            if (J$.C(157824, J$.B(449298, '!==', J$.R(3397329, 'options', options, false, false), J$.T(3397337, undefined, 24, false)))) {
                                passphrase = J$.W(3397361, 'passphrase', J$.G(3397353, J$.R(3397345, 'options', options, false, false), 'passphrase'), passphrase, false, false);
                                if (J$.C(157800, J$.B(449314, '===', J$.U(449306, 'typeof', J$.R(3397369, 'passphrase', passphrase, false, false)), J$.T(3397377, 'string', 21, false))))
                                    passphrase = J$.W(3397417, 'passphrase', J$.M(3397409, J$.R(3397385, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3397393, 'passphrase', passphrase, false, false), J$.T(3397401, 'utf-8', 21, false)), passphrase, false, false);
                                if (J$.C(157816, J$.B(449322, '!==', J$.R(3397425, 'passphrase', passphrase, false, false), J$.T(3397433, undefined, 24, false)))) {
                                    J$.M(3397465, J$.R(3397441, 'assert', assert, false, true), 'buffer', false)(J$.R(3397449, 'passphrase', passphrase, false, false), J$.T(3397457, 'options.passphrase', 21, false));
                                    J$.M(3397505, J$.R(3397473, 'assert', assert, false, true), 'optionalString', false)(J$.G(3397489, J$.R(3397481, 'options', options, false, false), 'cipher'), J$.T(3397497, 'options.cipher', 21, false));
                                    cipher = J$.W(3397529, 'cipher', J$.G(3397521, J$.R(3397513, 'options', options, false, false), 'cipher'), cipher, false, false);
                                    if (J$.C(157808, J$.B(449330, '===', J$.R(3397537, 'cipher', cipher, false, false), J$.T(3397545, undefined, 24, false))))
                                        cipher = J$.W(3397561, 'cipher', J$.T(3397553, 'aes128-ctr', 21, false), cipher, false, false);
                                    cinf = J$.W(3397593, 'cinf', J$.M(3397585, J$.R(3397569, 'utils', utils, false, true), 'opensshCipherInfo', false)(J$.R(3397577, 'cipher', cipher, false, false)), cinf, false, false);
                                    kdf = J$.W(3397609, 'kdf', J$.T(3397601, 'bcrypt', 21, false), kdf, false, false);
                                }
                            }
                            var privBuf;
                            if (J$.C(157848, J$.M(3397633, J$.R(3397617, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3397625, 'key', key, false, false)))) {
                                privBuf = J$.W(3397665, 'privBuf', J$.F(3397657, J$.R(3397641, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(3397649, {}, 11, false)), privBuf, false, false);
                                var checkInt = J$.W(3397713, 'checkInt', J$.M(3397705, J$.M(3397689, J$.R(3397673, 'crypto', crypto, false, true), 'randomBytes', false)(J$.T(3397681, 4, 22, false)), 'readUInt32BE', false)(J$.T(3397697, 0, 22, false)), checkInt, false, false);
                                J$.M(3397737, J$.R(3397721, 'privBuf', privBuf, false, false), 'writeInt', false)(J$.R(3397729, 'checkInt', checkInt, false, false));
                                J$.M(3397761, J$.R(3397745, 'privBuf', privBuf, false, false), 'writeInt', false)(J$.R(3397753, 'checkInt', checkInt, false, false));
                                J$.M(3397801, J$.R(3397769, 'privBuf', privBuf, false, false), 'write', false)(J$.M(3397793, J$.R(3397777, 'key', key, false, false), 'toBuffer', false)(J$.T(3397785, 'rfc4253', 21, false)));
                                J$.M(3397841, J$.R(3397809, 'privBuf', privBuf, false, false), 'writeString', false)(J$.C(157832, J$.G(3397825, J$.R(3397817, 'key', key, false, false), 'comment')) ? J$._() : J$.T(3397833, '', 21, false));
                                var n = J$.W(3397857, 'n', J$.T(3397849, 1, 22, false), n, false, false);
                                while (J$.C(157840, J$.B(449346, '!==', J$.B(449338, '%', J$.G(3397873, J$.R(3397865, 'privBuf', privBuf, false, false), '_offset'), J$.G(3397889, J$.R(3397881, 'cinf', cinf, false, false), 'blockSize')), J$.T(3397897, 0, 22, false)))) {
                                    J$.M(3397929, J$.R(3397905, 'privBuf', privBuf, false, false), 'writeChar', false)(J$.B(449370, '-', n = J$.W(3397921, 'n', J$.B(449362, '+', J$.U(449354, '+', J$.R(3397913, 'n', n, false, false)), 1), n, false, false), 1));
                                }
                                privBuf = J$.W(3397953, 'privBuf', J$.M(3397945, J$.R(3397937, 'privBuf', privBuf, false, false), 'toBuffer', false)(), privBuf, false, false);
                            }
                            switch (J$.C1(157880, J$.R(3397961, 'kdf', kdf, false, false))) {
                            case J$.C2(157888, J$.T(3397969, 'none', 21, false)):
                                break;
                            case J$.C2(157896, J$.T(3398889, 'bcrypt', 21, false)):
                                var salt = J$.W(3398001, 'salt', J$.M(3397993, J$.R(3397977, 'crypto', crypto, false, true), 'randomBytes', false)(J$.T(3397985, 16, 22, false)), salt, false, false);
                                var rounds = J$.W(3398017, 'rounds', J$.T(3398009, 16, 22, false), rounds, false, false);
                                var kdfssh = J$.W(3398049, 'kdfssh', J$.F(3398041, J$.R(3398025, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(3398033, {}, 11, false)), kdfssh, false, false);
                                J$.M(3398073, J$.R(3398057, 'kdfssh', kdfssh, false, false), 'writeBuffer', false)(J$.R(3398065, 'salt', salt, false, false));
                                J$.M(3398097, J$.R(3398081, 'kdfssh', kdfssh, false, false), 'writeInt', false)(J$.R(3398089, 'rounds', rounds, false, false));
                                kdfopts = J$.W(3398121, 'kdfopts', J$.M(3398113, J$.R(3398105, 'kdfssh', kdfssh, false, false), 'toBuffer', false)(), kdfopts, false, false);
                                if (J$.C(157856, J$.B(449378, '===', J$.R(3398129, 'bcrypt', bcrypt, false, true), J$.T(3398137, undefined, 24, false)))) {
                                    bcrypt = J$.W(3398169, 'bcrypt', J$.F(3398161, J$.I(typeof require === 'undefined' ? require = J$.R(3398145, 'require', undefined, true, true) : require = J$.R(3398145, 'require', require, true, true)), false)(J$.T(3398153, 'bcrypt-pbkdf', 21, false)), bcrypt, false, true);
                                }
                                var pass = J$.W(3398201, 'pass', J$.F(3398193, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3398177, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3398177, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(3398185, 'passphrase', passphrase, false, false)), pass, false, false);
                                var salti = J$.W(3398233, 'salti', J$.F(3398225, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3398209, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3398209, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(3398217, 'salt', salt, false, false)), salti, false, false);
                                var out = J$.W(3398289, 'out', J$.F(3398281, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(3398241, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(3398241, 'Uint8Array', Uint8Array, true, true)), true)(J$.B(449386, '+', J$.G(3398257, J$.R(3398249, 'cinf', cinf, false, false), 'keySize'), J$.G(3398273, J$.R(3398265, 'cinf', cinf, false, false), 'blockSize'))), out, false, false);
                                var res = J$.W(3398393, 'res', J$.M(3398385, J$.R(3398297, 'bcrypt', bcrypt, false, true), 'pbkdf', false)(J$.R(3398305, 'pass', pass, false, false), J$.G(3398321, J$.R(3398313, 'pass', pass, false, false), 'length'), J$.R(3398329, 'salti', salti, false, false), J$.G(3398345, J$.R(3398337, 'salti', salti, false, false), 'length'), J$.R(3398353, 'out', out, false, false), J$.G(3398369, J$.R(3398361, 'out', out, false, false), 'length'), J$.R(3398377, 'rounds', rounds, false, false)), res, false, false);
                                if (J$.C(157864, J$.B(449394, '!==', J$.R(3398401, 'res', res, false, false), J$.T(3398409, 0, 22, false)))) {
                                    throw J$.F(3398441, J$.I(typeof Error === 'undefined' ? Error = J$.R(3398417, 'Error', undefined, true, true) : Error = J$.R(3398417, 'Error', Error, true, true)), true)(J$.B(449402, '+', J$.T(3398425, 'bcrypt_pbkdf function returned ', 21, false), J$.T(3398433, 'failure, parameters invalid', 21, false)));
                                }
                                out = J$.W(3398473, 'out', J$.M(3398465, J$.R(3398449, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3398457, 'out', out, false, false)), out, false, false);
                                var ckey = J$.W(3398521, 'ckey', J$.M(3398513, J$.R(3398481, 'out', out, false, false), 'slice', false)(J$.T(3398489, 0, 22, false), J$.G(3398505, J$.R(3398497, 'cinf', cinf, false, false), 'keySize')), ckey, false, false);
                                var iv = J$.W(3398593, 'iv', J$.M(3398585, J$.R(3398529, 'out', out, false, false), 'slice', false)(J$.G(3398545, J$.R(3398537, 'cinf', cinf, false, false), 'keySize'), J$.B(449410, '+', J$.G(3398561, J$.R(3398553, 'cinf', cinf, false, false), 'keySize'), J$.G(3398577, J$.R(3398569, 'cinf', cinf, false, false), 'blockSize'))), iv, false, false);
                                var cipherStream = J$.W(3398649, 'cipherStream', J$.M(3398641, J$.R(3398601, 'crypto', crypto, false, true), 'createCipheriv', false)(J$.G(3398617, J$.R(3398609, 'cinf', cinf, false, false), 'opensslName'), J$.R(3398625, 'ckey', ckey, false, false), J$.R(3398633, 'iv', iv, false, false)), cipherStream, false, false);
                                J$.M(3398673, J$.R(3398657, 'cipherStream', cipherStream, false, false), 'setAutoPadding', false)(J$.T(3398665, false, 23, false));
                                var chunk, chunks = J$.W(3398689, 'chunks', J$.T(3398681, [], 10, false), chunks, false, false);
                                J$.M(3398753, J$.R(3398697, 'cipherStream', cipherStream, false, false), 'once', false)(J$.T(3398705, 'error', 21, false), J$.T(3398745, function (e) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(3398721, arguments.callee, this, arguments);
                                                arguments = J$.N(3398729, 'arguments', arguments, true, false, false);
                                                e = J$.N(3398737, 'e', e, true, false, false);
                                                throw J$.R(3398713, 'e', e, false, false);
                                            } catch (J$e) {
                                                J$.Ex(3400289, J$e);
                                            } finally {
                                                if (J$.Fr(3400297))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(3398777, J$.R(3398761, 'cipherStream', cipherStream, false, false), 'write', false)(J$.R(3398769, 'privBuf', privBuf, false, false));
                                J$.M(3398793, J$.R(3398785, 'cipherStream', cipherStream, false, false), 'end', false)();
                                while (J$.C(157872, J$.B(449418, '!==', chunk = J$.W(3398817, 'chunk', J$.M(3398809, J$.R(3398801, 'cipherStream', cipherStream, false, false), 'read', false)(), chunk, false, false), J$.T(3398825, null, 25, false)))) {
                                    J$.M(3398849, J$.R(3398833, 'chunks', chunks, false, false), 'push', false)(J$.R(3398841, 'chunk', chunk, false, false));
                                }
                                privBuf = J$.W(3398881, 'privBuf', J$.M(3398873, J$.R(3398857, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(3398865, 'chunks', chunks, false, false)), privBuf, false, false);
                                break;
                            default:
                                throw J$.F(3398921, J$.I(typeof Error === 'undefined' ? Error = J$.R(3398897, 'Error', undefined, true, true) : Error = J$.R(3398897, 'Error', Error, true, true)), true)(J$.B(449426, '+', J$.T(3398905, 'Unsupported kdf ', 21, false), J$.R(3398913, 'kdf', kdf, false, false)));
                            }
                            var buf = J$.W(3398953, 'buf', J$.F(3398945, J$.R(3398929, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(3398937, {}, 11, false)), buf, false, false);
                            J$.M(3398977, J$.R(3398961, 'buf', buf, false, false), 'writeCString', false)(J$.R(3398969, 'MAGIC', MAGIC, false, true));
                            J$.M(3399001, J$.R(3398985, 'buf', buf, false, false), 'writeString', false)(J$.R(3398993, 'cipher', cipher, false, false));
                            J$.M(3399025, J$.R(3399009, 'buf', buf, false, false), 'writeString', false)(J$.R(3399017, 'kdf', kdf, false, false));
                            J$.M(3399049, J$.R(3399033, 'buf', buf, false, false), 'writeBuffer', false)(J$.R(3399041, 'kdfopts', kdfopts, false, false));
                            J$.M(3399073, J$.R(3399057, 'buf', buf, false, false), 'writeInt', false)(J$.T(3399065, 1, 22, false));
                            J$.M(3399113, J$.R(3399081, 'buf', buf, false, false), 'writeBuffer', false)(J$.M(3399105, J$.R(3399089, 'pubKey', pubKey, false, false), 'toBuffer', false)(J$.T(3399097, 'rfc4253', 21, false)));
                            if (J$.C(157904, J$.R(3399121, 'privBuf', privBuf, false, false)))
                                J$.M(3399145, J$.R(3399129, 'buf', buf, false, false), 'writeBuffer', false)(J$.R(3399137, 'privBuf', privBuf, false, false));
                            buf = J$.W(3399169, 'buf', J$.M(3399161, J$.R(3399153, 'buf', buf, false, false), 'toBuffer', false)(), buf, false, false);
                            var header;
                            if (J$.C(157912, J$.M(3399193, J$.R(3399177, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3399185, 'key', key, false, false))))
                                header = J$.W(3399209, 'header', J$.T(3399201, 'OPENSSH PRIVATE KEY', 21, false), header, false, false);
                            else
                                header = J$.W(3399225, 'header', J$.T(3399217, 'OPENSSH PUBLIC KEY', 21, false), header, false, false);
                            var tmp = J$.W(3399257, 'tmp', J$.M(3399249, J$.R(3399233, 'buf', buf, false, false), 'toString', false)(J$.T(3399241, 'base64', 21, false)), tmp, false, false);
                            var len = J$.W(3399353, 'len', J$.B(449482, '+', J$.B(449474, '+', J$.B(449458, '+', J$.B(449450, '+', J$.B(449442, '+', J$.G(3399273, J$.R(3399265, 'tmp', tmp, false, false), 'length'), J$.B(449434, '/', J$.G(3399289, J$.R(3399281, 'tmp', tmp, false, false), 'length'), J$.T(3399297, 70, 22, false))), J$.T(3399305, 18, 22, false)), J$.T(3399313, 16, 22, false)), J$.B(449466, '*', J$.G(3399329, J$.R(3399321, 'header', header, false, false), 'length'), J$.T(3399337, 2, 22, false))), J$.T(3399345, 10, 22, false)), len, false, false);
                            buf = J$.W(3399385, 'buf', J$.M(3399377, J$.R(3399361, 'Buffer', Buffer, false, true), 'alloc', false)(J$.R(3399369, 'len', len, false, false)), buf, false, false);
                            var o = J$.W(3399401, 'o', J$.T(3399393, 0, 22, false), o, false, false);
                            o = J$.W(3399465, 'o', J$.B(449506, '+', J$.R(3399457, 'o', o, false, false), J$.M(3399449, J$.R(3399409, 'buf', buf, false, false), 'write', false)(J$.B(449498, '+', J$.B(449490, '+', J$.T(3399417, '-----BEGIN ', 21, false), J$.R(3399425, 'header', header, false, false)), J$.T(3399433, '-----\n', 21, false)), J$.R(3399441, 'o', o, false, false))), o, false, false);
                            for (var i = J$.W(3399481, 'i', J$.T(3399473, 0, 22, false), i, false, false); J$.C(157928, J$.B(449514, '<', J$.R(3399489, 'i', i, false, false), J$.G(3399505, J$.R(3399497, 'tmp', tmp, false, false), 'length')));) {
                                var limit = J$.W(3399529, 'limit', J$.B(449522, '+', J$.R(3399513, 'i', i, false, false), J$.T(3399521, 70, 22, false)), limit, false, false);
                                if (J$.C(157920, J$.B(449530, '>', J$.R(3399537, 'limit', limit, false, false), J$.G(3399553, J$.R(3399545, 'tmp', tmp, false, false), 'length'))))
                                    limit = J$.W(3399577, 'limit', J$.G(3399569, J$.R(3399561, 'tmp', tmp, false, false), 'length'), limit, false, false);
                                o = J$.W(3399649, 'o', J$.B(449538, '+', J$.R(3399641, 'o', o, false, false), J$.M(3399633, J$.R(3399585, 'buf', buf, false, false), 'write', false)(J$.M(3399617, J$.R(3399593, 'tmp', tmp, false, false), 'slice', false)(J$.R(3399601, 'i', i, false, false), J$.R(3399609, 'limit', limit, false, false)), J$.R(3399625, 'o', o, false, false))), o, false, false);
                                J$.P(3399689, J$.R(3399657, 'buf', buf, false, false), J$.B(449562, '-', o = J$.W(3399673, 'o', J$.B(449554, '+', J$.U(449546, '+', J$.R(3399665, 'o', o, false, false)), 1), o, false, false), 1), J$.T(3399681, 10, 22, false));
                                i = J$.W(3399705, 'i', J$.R(3399697, 'limit', limit, false, false), i, false, false);
                            }
                            o = J$.W(3399769, 'o', J$.B(449586, '+', J$.R(3399761, 'o', o, false, false), J$.M(3399753, J$.R(3399713, 'buf', buf, false, false), 'write', false)(J$.B(449578, '+', J$.B(449570, '+', J$.T(3399721, '-----END ', 21, false), J$.R(3399729, 'header', header, false, false)), J$.T(3399737, '-----\n', 21, false)), J$.R(3399745, 'o', o, false, false))), o, false, false);
                            return J$.Rt(3399809, J$.M(3399801, J$.R(3399777, 'buf', buf, false, false), 'slice', false)(J$.T(3399785, 0, 22, false), J$.R(3399793, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(3400305, J$e);
                        } finally {
                            if (J$.Fr(3400313))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3400081, 'assert', assert, false, false, false);
            J$.N(3400089, 'asn1', asn1, false, false, false);
            J$.N(3400097, 'Buffer', Buffer, false, false, false);
            J$.N(3400105, 'algs', algs, false, false, false);
            J$.N(3400113, 'utils', utils, false, false, false);
            J$.N(3400121, 'crypto', crypto, false, false, false);
            J$.N(3400129, 'Key', Key, false, false, false);
            J$.N(3400137, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(3400145, 'pem', pem, false, false, false);
            J$.N(3400153, 'rfc4253', rfc4253, false, false, false);
            J$.N(3400161, 'SSHBuffer', SSHBuffer, false, false, false);
            J$.N(3400169, 'errors', errors, false, false, false);
            J$.N(3400177, 'bcrypt', bcrypt, false, false, false);
            read = J$.N(3400193, 'read', J$.T(3400185, read, 12, false), true, false, false);
            J$.N(3400201, 'MAGIC', MAGIC, false, false, false);
            readSSHPrivate = J$.N(3400217, 'readSSHPrivate', J$.T(3400209, readSSHPrivate, 12, false), true, false, false);
            write = J$.N(3400233, 'write', J$.T(3400225, write, 12, false), true, false, false);
            J$.T(3393681, 'use strict', 21, false);
            J$.F(3393705, J$.I(typeof require === 'undefined' ? require = J$.R(3393689, 'require', undefined, true, true) : require = J$.R(3393689, 'require', require, true, true)), false)(J$.T(3393697, 'core-js/modules/es.array.concat', 21, false));
            J$.F(3393729, J$.I(typeof require === 'undefined' ? require = J$.R(3393713, 'require', undefined, true, true) : require = J$.R(3393713, 'require', require, true, true)), false)(J$.T(3393721, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(3393753, J$.I(typeof require === 'undefined' ? require = J$.R(3393737, 'require', undefined, true, true) : require = J$.R(3393737, 'require', require, true, true)), false)(J$.T(3393745, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(3393777, J$.I(typeof require === 'undefined' ? require = J$.R(3393761, 'require', undefined, true, true) : require = J$.R(3393761, 'require', require, true, true)), false)(J$.T(3393769, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3393801, J$.I(typeof require === 'undefined' ? require = J$.R(3393785, 'require', undefined, true, true) : require = J$.R(3393785, 'require', require, true, true)), false)(J$.T(3393793, 'core-js/modules/es.array-buffer.slice', 21, false));
            J$.F(3393825, J$.I(typeof require === 'undefined' ? require = J$.R(3393809, 'require', undefined, true, true) : require = J$.R(3393809, 'require', require, true, true)), false)(J$.T(3393817, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(3393849, J$.I(typeof require === 'undefined' ? require = J$.R(3393833, 'require', undefined, true, true) : require = J$.R(3393833, 'require', require, true, true)), false)(J$.T(3393841, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3393873, J$.I(typeof require === 'undefined' ? require = J$.R(3393857, 'require', undefined, true, true) : require = J$.R(3393857, 'require', require, true, true)), false)(J$.T(3393865, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(3393897, J$.I(typeof require === 'undefined' ? require = J$.R(3393881, 'require', undefined, true, true) : require = J$.R(3393881, 'require', require, true, true)), false)(J$.T(3393889, 'core-js/modules/es.typed-array.uint8-array', 21, false));
            J$.F(3393921, J$.I(typeof require === 'undefined' ? require = J$.R(3393905, 'require', undefined, true, true) : require = J$.R(3393905, 'require', require, true, true)), false)(J$.T(3393913, 'core-js/modules/es.typed-array.copy-within', 21, false));
            J$.F(3393945, J$.I(typeof require === 'undefined' ? require = J$.R(3393929, 'require', undefined, true, true) : require = J$.R(3393929, 'require', require, true, true)), false)(J$.T(3393937, 'core-js/modules/es.typed-array.every', 21, false));
            J$.F(3393969, J$.I(typeof require === 'undefined' ? require = J$.R(3393953, 'require', undefined, true, true) : require = J$.R(3393953, 'require', require, true, true)), false)(J$.T(3393961, 'core-js/modules/es.typed-array.fill', 21, false));
            J$.F(3393993, J$.I(typeof require === 'undefined' ? require = J$.R(3393977, 'require', undefined, true, true) : require = J$.R(3393977, 'require', require, true, true)), false)(J$.T(3393985, 'core-js/modules/es.typed-array.filter', 21, false));
            J$.F(3394017, J$.I(typeof require === 'undefined' ? require = J$.R(3394001, 'require', undefined, true, true) : require = J$.R(3394001, 'require', require, true, true)), false)(J$.T(3394009, 'core-js/modules/es.typed-array.find', 21, false));
            J$.F(3394041, J$.I(typeof require === 'undefined' ? require = J$.R(3394025, 'require', undefined, true, true) : require = J$.R(3394025, 'require', require, true, true)), false)(J$.T(3394033, 'core-js/modules/es.typed-array.find-index', 21, false));
            J$.F(3394065, J$.I(typeof require === 'undefined' ? require = J$.R(3394049, 'require', undefined, true, true) : require = J$.R(3394049, 'require', require, true, true)), false)(J$.T(3394057, 'core-js/modules/es.typed-array.for-each', 21, false));
            J$.F(3394089, J$.I(typeof require === 'undefined' ? require = J$.R(3394073, 'require', undefined, true, true) : require = J$.R(3394073, 'require', require, true, true)), false)(J$.T(3394081, 'core-js/modules/es.typed-array.includes', 21, false));
            J$.F(3394113, J$.I(typeof require === 'undefined' ? require = J$.R(3394097, 'require', undefined, true, true) : require = J$.R(3394097, 'require', require, true, true)), false)(J$.T(3394105, 'core-js/modules/es.typed-array.index-of', 21, false));
            J$.F(3394137, J$.I(typeof require === 'undefined' ? require = J$.R(3394121, 'require', undefined, true, true) : require = J$.R(3394121, 'require', require, true, true)), false)(J$.T(3394129, 'core-js/modules/es.typed-array.iterator', 21, false));
            J$.F(3394161, J$.I(typeof require === 'undefined' ? require = J$.R(3394145, 'require', undefined, true, true) : require = J$.R(3394145, 'require', require, true, true)), false)(J$.T(3394153, 'core-js/modules/es.typed-array.join', 21, false));
            J$.F(3394185, J$.I(typeof require === 'undefined' ? require = J$.R(3394169, 'require', undefined, true, true) : require = J$.R(3394169, 'require', require, true, true)), false)(J$.T(3394177, 'core-js/modules/es.typed-array.last-index-of', 21, false));
            J$.F(3394209, J$.I(typeof require === 'undefined' ? require = J$.R(3394193, 'require', undefined, true, true) : require = J$.R(3394193, 'require', require, true, true)), false)(J$.T(3394201, 'core-js/modules/es.typed-array.map', 21, false));
            J$.F(3394233, J$.I(typeof require === 'undefined' ? require = J$.R(3394217, 'require', undefined, true, true) : require = J$.R(3394217, 'require', require, true, true)), false)(J$.T(3394225, 'core-js/modules/es.typed-array.reduce', 21, false));
            J$.F(3394257, J$.I(typeof require === 'undefined' ? require = J$.R(3394241, 'require', undefined, true, true) : require = J$.R(3394241, 'require', require, true, true)), false)(J$.T(3394249, 'core-js/modules/es.typed-array.reduce-right', 21, false));
            J$.F(3394281, J$.I(typeof require === 'undefined' ? require = J$.R(3394265, 'require', undefined, true, true) : require = J$.R(3394265, 'require', require, true, true)), false)(J$.T(3394273, 'core-js/modules/es.typed-array.reverse', 21, false));
            J$.F(3394305, J$.I(typeof require === 'undefined' ? require = J$.R(3394289, 'require', undefined, true, true) : require = J$.R(3394289, 'require', require, true, true)), false)(J$.T(3394297, 'core-js/modules/es.typed-array.set', 21, false));
            J$.F(3394329, J$.I(typeof require === 'undefined' ? require = J$.R(3394313, 'require', undefined, true, true) : require = J$.R(3394313, 'require', require, true, true)), false)(J$.T(3394321, 'core-js/modules/es.typed-array.slice', 21, false));
            J$.F(3394353, J$.I(typeof require === 'undefined' ? require = J$.R(3394337, 'require', undefined, true, true) : require = J$.R(3394337, 'require', require, true, true)), false)(J$.T(3394345, 'core-js/modules/es.typed-array.some', 21, false));
            J$.F(3394377, J$.I(typeof require === 'undefined' ? require = J$.R(3394361, 'require', undefined, true, true) : require = J$.R(3394361, 'require', require, true, true)), false)(J$.T(3394369, 'core-js/modules/es.typed-array.sort', 21, false));
            J$.F(3394401, J$.I(typeof require === 'undefined' ? require = J$.R(3394385, 'require', undefined, true, true) : require = J$.R(3394385, 'require', require, true, true)), false)(J$.T(3394393, 'core-js/modules/es.typed-array.subarray', 21, false));
            J$.F(3394425, J$.I(typeof require === 'undefined' ? require = J$.R(3394409, 'require', undefined, true, true) : require = J$.R(3394409, 'require', require, true, true)), false)(J$.T(3394417, 'core-js/modules/es.typed-array.to-locale-string', 21, false));
            J$.F(3394449, J$.I(typeof require === 'undefined' ? require = J$.R(3394433, 'require', undefined, true, true) : require = J$.R(3394433, 'require', require, true, true)), false)(J$.T(3394441, 'core-js/modules/es.typed-array.to-string', 21, false));
            J$.P(3394497, J$.I(typeof module === 'undefined' ? module = J$.R(3394457, 'module', undefined, true, true) : module = J$.R(3394457, 'module', module, true, true)), 'exports', J$.T(3394489, {
                read: J$.R(3394465, 'read', read, false, true),
                readSSHPrivate: J$.R(3394473, 'readSSHPrivate', readSSHPrivate, false, true),
                write: J$.R(3394481, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(3394529, 'assert', J$.F(3394521, J$.I(typeof require === 'undefined' ? require = J$.R(3394505, 'require', undefined, true, true) : require = J$.R(3394505, 'require', require, true, true)), false)(J$.T(3394513, 'assert-plus', 21, false)), assert, false, true);
            var asn1 = J$.W(3394561, 'asn1', J$.F(3394553, J$.I(typeof require === 'undefined' ? require = J$.R(3394537, 'require', undefined, true, true) : require = J$.R(3394537, 'require', require, true, true)), false)(J$.T(3394545, 'asn1', 21, false)), asn1, false, true);
            var Buffer = J$.W(3394601, 'Buffer', J$.G(3394593, J$.F(3394585, J$.I(typeof require === 'undefined' ? require = J$.R(3394569, 'require', undefined, true, true) : require = J$.R(3394569, 'require', require, true, true)), false)(J$.T(3394577, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(3394633, 'algs', J$.F(3394625, J$.I(typeof require === 'undefined' ? require = J$.R(3394609, 'require', undefined, true, true) : require = J$.R(3394609, 'require', require, true, true)), false)(J$.T(3394617, '../algs', 21, false)), algs, false, true);
            var utils = J$.W(3394665, 'utils', J$.F(3394657, J$.I(typeof require === 'undefined' ? require = J$.R(3394641, 'require', undefined, true, true) : require = J$.R(3394641, 'require', require, true, true)), false)(J$.T(3394649, '../utils', 21, false)), utils, false, true);
            var crypto = J$.W(3394697, 'crypto', J$.F(3394689, J$.I(typeof require === 'undefined' ? require = J$.R(3394673, 'require', undefined, true, true) : require = J$.R(3394673, 'require', require, true, true)), false)(J$.T(3394681, 'crypto', 21, false)), crypto, false, true);
            var Key = J$.W(3394729, 'Key', J$.F(3394721, J$.I(typeof require === 'undefined' ? require = J$.R(3394705, 'require', undefined, true, true) : require = J$.R(3394705, 'require', require, true, true)), false)(J$.T(3394713, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(3394761, 'PrivateKey', J$.F(3394753, J$.I(typeof require === 'undefined' ? require = J$.R(3394737, 'require', undefined, true, true) : require = J$.R(3394737, 'require', require, true, true)), false)(J$.T(3394745, '../private-key', 21, false)), PrivateKey, false, true);
            var pem = J$.W(3394793, 'pem', J$.F(3394785, J$.I(typeof require === 'undefined' ? require = J$.R(3394769, 'require', undefined, true, true) : require = J$.R(3394769, 'require', require, true, true)), false)(J$.T(3394777, './pem', 21, false)), pem, false, true);
            var rfc4253 = J$.W(3394825, 'rfc4253', J$.F(3394817, J$.I(typeof require === 'undefined' ? require = J$.R(3394801, 'require', undefined, true, true) : require = J$.R(3394801, 'require', require, true, true)), false)(J$.T(3394809, './rfc4253', 21, false)), rfc4253, false, true);
            var SSHBuffer = J$.W(3394857, 'SSHBuffer', J$.F(3394849, J$.I(typeof require === 'undefined' ? require = J$.R(3394833, 'require', undefined, true, true) : require = J$.R(3394833, 'require', require, true, true)), false)(J$.T(3394841, '../ssh-buffer', 21, false)), SSHBuffer, false, true);
            var errors = J$.W(3394889, 'errors', J$.F(3394881, J$.I(typeof require === 'undefined' ? require = J$.R(3394865, 'require', undefined, true, true) : require = J$.R(3394865, 'require', require, true, true)), false)(J$.T(3394873, '../errors', 21, false)), errors, false, true);
            var bcrypt;
            var MAGIC = J$.W(3394977, 'MAGIC', J$.T(3394969, 'openssh-key-v1', 21, false), MAGIC, false, true);
        } catch (J$e) {
            J$.Ex(3400321, J$e);
        } finally {
            if (J$.Sr(3400329))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

