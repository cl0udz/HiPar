J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3402721, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/sshpk/lib/formats/ssh.js');
            function read(buf, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3402241, arguments.callee, this, arguments);
                            arguments = J$.N(3402249, 'arguments', arguments, true, false, false);
                            buf = J$.N(3402257, 'buf', buf, true, false, false);
                            options = J$.N(3402265, 'options', options, true, false, false);
                            J$.N(3402273, 'trimmed', trimmed, false, false, false);
                            J$.N(3402281, 'm', m, false, false, false);
                            J$.N(3402289, 'type', type, false, false, false);
                            J$.N(3402297, 'kbuf', kbuf, false, false, false);
                            J$.N(3402305, 'key', key, false, false, false);
                            J$.N(3402313, 'ret', ret, false, false, false);
                            J$.N(3402321, 'data', data, false, false, false);
                            J$.N(3402329, 'realOffset', realOffset, false, false, false);
                            J$.N(3402337, 'padding', padding, false, false, false);
                            J$.N(3402345, 'trailer', trailer, false, false, false);
                            if (J$.C(157936, J$.B(449602, '!==', J$.U(449594, 'typeof', J$.R(3400865, 'buf', buf, false, false)), J$.T(3400873, 'string', 21, false)))) {
                                J$.M(3400905, J$.R(3400881, 'assert', assert, false, true), 'buffer', false)(J$.R(3400889, 'buf', buf, false, false), J$.T(3400897, 'buf', 21, false));
                                buf = J$.W(3400937, 'buf', J$.M(3400929, J$.R(3400913, 'buf', buf, false, false), 'toString', false)(J$.T(3400921, 'ascii', 21, false)), buf, false, false);
                            }
                            var trimmed = J$.W(3400985, 'trimmed', J$.M(3400977, J$.M(3400953, J$.R(3400945, 'buf', buf, false, false), 'trim', false)(), 'replace', false)(J$.T(3400961, /[\\\r]/g, 14, false), J$.T(3400969, '', 21, false)), trimmed, false, false);
                            var m = J$.W(3401017, 'm', J$.M(3401009, J$.R(3400993, 'trimmed', trimmed, false, false), 'match', false)(J$.R(3401001, 'SSHKEY_RE', SSHKEY_RE, false, true)), m, false, false);
                            if (J$.C(157944, J$.U(449610, '!', J$.R(3401025, 'm', m, false, false))))
                                m = J$.W(3401057, 'm', J$.M(3401049, J$.R(3401033, 'trimmed', trimmed, false, false), 'match', false)(J$.R(3401041, 'SSHKEY_RE2', SSHKEY_RE2, false, true)), m, false, false);
                            J$.M(3401089, J$.R(3401065, 'assert', assert, false, true), 'ok', false)(J$.R(3401073, 'm', m, false, false), J$.T(3401081, 'key must match regex', 21, false));
                            var type = J$.W(3401137, 'type', J$.M(3401129, J$.R(3401097, 'rfc4253', rfc4253, false, true), 'algToKeyType', false)(J$.G(3401121, J$.R(3401105, 'm', m, false, false), J$.T(3401113, 1, 22, false))), type, false, false);
                            var kbuf = J$.W(3401193, 'kbuf', J$.M(3401185, J$.R(3401145, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3401169, J$.R(3401153, 'm', m, false, false), J$.T(3401161, 2, 22, false)), J$.T(3401177, 'base64', 21, false)), kbuf, false, false);
                            var key;
                            var ret = J$.W(3401209, 'ret', J$.T(3401201, {}, 11, false), ret, false, false);
                            if (J$.C(157952, J$.G(3401233, J$.R(3401217, 'm', m, false, false), J$.T(3401225, 4, 22, false)))) {
                                try {
                                    key = J$.W(3401265, 'key', J$.M(3401257, J$.R(3401241, 'rfc4253', rfc4253, false, true), 'read', false)(J$.R(3401249, 'kbuf', kbuf, false, false)), key, false, false);
                                } catch (e) {
                                    J$.N(3401441, 'e', e, false, false, true);
                                    m = J$.W(3401297, 'm', J$.M(3401289, J$.R(3401273, 'trimmed', trimmed, false, false), 'match', false)(J$.R(3401281, 'SSHKEY_RE2', SSHKEY_RE2, false, true)), m, false, false);
                                    J$.M(3401329, J$.R(3401305, 'assert', assert, false, true), 'ok', false)(J$.R(3401313, 'm', m, false, false), J$.T(3401321, 'key must match regex', 21, false));
                                    kbuf = J$.W(3401385, 'kbuf', J$.M(3401377, J$.R(3401337, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3401361, J$.R(3401345, 'm', m, false, false), J$.T(3401353, 2, 22, false)), J$.T(3401369, 'base64', 21, false)), kbuf, false, false);
                                    key = J$.W(3401433, 'key', J$.M(3401425, J$.R(3401393, 'rfc4253', rfc4253, false, true), 'readInternal', false)(J$.R(3401401, 'ret', ret, false, false), J$.T(3401409, 'public', 21, false), J$.R(3401417, 'kbuf', kbuf, false, false)), key, false, false);
                                }
                            } else {
                                key = J$.W(3401489, 'key', J$.M(3401481, J$.R(3401449, 'rfc4253', rfc4253, false, true), 'readInternal', false)(J$.R(3401457, 'ret', ret, false, false), J$.T(3401465, 'public', 21, false), J$.R(3401473, 'kbuf', kbuf, false, false)), key, false, false);
                            }
                            J$.M(3401529, J$.R(3401497, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3401505, 'type', type, false, false), J$.G(3401521, J$.R(3401513, 'key', key, false, false), 'type'));
                            if (J$.C(158016, J$.C(157960, J$.G(3401553, J$.R(3401537, 'm', m, false, false), J$.T(3401545, 4, 22, false))) ? J$.B(449618, '>', J$.G(3401585, J$.G(3401577, J$.R(3401561, 'm', m, false, false), J$.T(3401569, 4, 22, false)), 'length'), J$.T(3401593, 0, 22, false)) : J$._())) {
                                J$.P(3401633, J$.R(3401601, 'key', key, false, false), 'comment', J$.G(3401625, J$.R(3401609, 'm', m, false, false), J$.T(3401617, 4, 22, false)));
                            } else if (J$.C(158008, J$.G(3401649, J$.R(3401641, 'ret', ret, false, false), 'consumed'))) {
                                var data = J$.W(3401737, 'data', J$.B(449626, '+', J$.G(3401673, J$.R(3401657, 'm', m, false, false), J$.T(3401665, 2, 22, false)), J$.C(157968, J$.G(3401697, J$.R(3401681, 'm', m, false, false), J$.T(3401689, 3, 22, false))) ? J$.G(3401721, J$.R(3401705, 'm', m, false, false), J$.T(3401713, 3, 22, false)) : J$.T(3401729, '', 21, false)), data, false, false);
                                var realOffset = J$.W(3401793, 'realOffset', J$.B(449642, '*', J$.M(3401777, J$.I(typeof Math === 'undefined' ? Math = J$.R(3401745, 'Math', undefined, true, true) : Math = J$.R(3401745, 'Math', Math, true, true)), 'ceil', false)(J$.B(449634, '/', J$.G(3401761, J$.R(3401753, 'ret', ret, false, false), 'consumed'), J$.T(3401769, 3, 22, false))), J$.T(3401785, 4, 22, false)), realOffset, false, false);
                                data = J$.W(3401897, 'data', J$.B(449666, '+', J$.M(3401857, J$.M(3401833, J$.R(3401801, 'data', data, false, false), 'slice', false)(J$.T(3401809, 0, 22, false), J$.B(449650, '-', J$.R(3401817, 'realOffset', realOffset, false, false), J$.T(3401825, 2, 22, false))), 'replace', false)(J$.T(3401841, /[^a-zA-Z0-9+\/=]/g, 14, false), J$.T(3401849, '', 21, false)), J$.M(3401889, J$.R(3401865, 'data', data, false, false), 'slice', false)(J$.B(449658, '-', J$.R(3401873, 'realOffset', realOffset, false, false), J$.T(3401881, 2, 22, false)))), data, false, false);
                                var padding = J$.W(3401929, 'padding', J$.B(449674, '%', J$.G(3401913, J$.R(3401905, 'ret', ret, false, false), 'consumed'), J$.T(3401921, 3, 22, false)), padding, false, false);
                                if (J$.C(157984, J$.C(157976, J$.B(449682, '>', J$.R(3401937, 'padding', padding, false, false), J$.T(3401945, 0, 22, false))) ? J$.B(449698, '!==', J$.M(3401985, J$.R(3401953, 'data', data, false, false), 'slice', false)(J$.B(449690, '-', J$.R(3401961, 'realOffset', realOffset, false, false), J$.T(3401969, 1, 22, false)), J$.R(3401977, 'realOffset', realOffset, false, false)), J$.T(3401993, '=', 21, false)) : J$._()))
                                    J$.B(449722, '+', realOffset = J$.W(3402009, 'realOffset', J$.B(449714, '-', J$.U(449706, '+', J$.R(3402001, 'realOffset', realOffset, false, false)), 1), realOffset, false, false), 1);
                                while (J$.C(157992, J$.B(449738, '===', J$.M(3402049, J$.R(3402017, 'data', data, false, false), 'slice', false)(J$.R(3402025, 'realOffset', realOffset, false, false), J$.B(449730, '+', J$.R(3402033, 'realOffset', realOffset, false, false), J$.T(3402041, 1, 22, false))), J$.T(3402057, '=', 21, false)))) {
                                    J$.B(449762, '-', realOffset = J$.W(3402073, 'realOffset', J$.B(449754, '+', J$.U(449746, '+', J$.R(3402065, 'realOffset', realOffset, false, false)), 1), realOffset, false, false), 1);
                                }
                                var trailer = J$.W(3402105, 'trailer', J$.M(3402097, J$.R(3402081, 'data', data, false, false), 'slice', false)(J$.R(3402089, 'realOffset', realOffset, false, false)), trailer, false, false);
                                trailer = J$.W(3402169, 'trailer', J$.M(3402161, J$.M(3402137, J$.R(3402113, 'trailer', trailer, false, false), 'replace', false)(J$.T(3402121, /[\r\n]/g, 14, false), J$.T(3402129, ' ', 21, false)), 'replace', false)(J$.T(3402145, /^\s+/, 14, false), J$.T(3402153, '', 21, false)), trailer, false, false);
                                if (J$.C(158000, J$.M(3402193, J$.R(3402177, 'trailer', trailer, false, false), 'match', false)(J$.T(3402185, /^[a-zA-Z0-9]/, 14, false))))
                                    J$.P(3402217, J$.R(3402201, 'key', key, false, false), 'comment', J$.R(3402209, 'trailer', trailer, false, false));
                            }
                            return J$.Rt(3402233, J$.R(3402225, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(3402833, J$e);
                        } finally {
                            if (J$.Fr(3402841))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3402665, arguments.callee, this, arguments);
                            arguments = J$.N(3402673, 'arguments', arguments, true, false, false);
                            key = J$.N(3402681, 'key', key, true, false, false);
                            options = J$.N(3402689, 'options', options, true, false, false);
                            J$.N(3402697, 'parts', parts, false, false, false);
                            J$.N(3402705, 'alg', alg, false, false, false);
                            J$.N(3402713, 'buf', buf, false, false, false);
                            J$.M(3402369, J$.R(3402353, 'assert', assert, false, true), 'object', false)(J$.R(3402361, 'key', key, false, false));
                            if (J$.C(158024, J$.U(449770, '!', J$.M(3402393, J$.R(3402377, 'Key', Key, false, true), 'isKey', false)(J$.R(3402385, 'key', key, false, false)))))
                                throw J$.F(3402417, J$.I(typeof Error === 'undefined' ? Error = J$.R(3402401, 'Error', undefined, true, true) : Error = J$.R(3402401, 'Error', Error, true, true)), true)(J$.T(3402409, 'Must be a public key', 21, false));
                            var parts = J$.W(3402433, 'parts', J$.T(3402425, [], 10, false), parts, false, false);
                            var alg = J$.W(3402465, 'alg', J$.M(3402457, J$.R(3402441, 'rfc4253', rfc4253, false, true), 'keyTypeToAlg', false)(J$.R(3402449, 'key', key, false, false)), alg, false, false);
                            J$.M(3402489, J$.R(3402473, 'parts', parts, false, false), 'push', false)(J$.R(3402481, 'alg', alg, false, false));
                            var buf = J$.W(3402521, 'buf', J$.M(3402513, J$.R(3402497, 'rfc4253', rfc4253, false, true), 'write', false)(J$.R(3402505, 'key', key, false, false)), buf, false, false);
                            J$.M(3402561, J$.R(3402529, 'parts', parts, false, false), 'push', false)(J$.M(3402553, J$.R(3402537, 'buf', buf, false, false), 'toString', false)(J$.T(3402545, 'base64', 21, false)));
                            if (J$.C(158032, J$.G(3402577, J$.R(3402569, 'key', key, false, false), 'comment')))
                                J$.M(3402609, J$.R(3402585, 'parts', parts, false, false), 'push', false)(J$.G(3402601, J$.R(3402593, 'key', key, false, false), 'comment'));
                            return J$.Rt(3402657, J$.M(3402649, J$.R(3402617, 'Buffer', Buffer, false, true), 'from', false)(J$.M(3402641, J$.R(3402625, 'parts', parts, false, false), 'join', false)(J$.T(3402633, ' ', 21, false))));
                        } catch (J$e) {
                            J$.Ex(3402849, J$e);
                        } finally {
                            if (J$.Fr(3402857))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3402729, 'assert', assert, false, false, false);
            J$.N(3402737, 'Buffer', Buffer, false, false, false);
            J$.N(3402745, 'rfc4253', rfc4253, false, false, false);
            J$.N(3402753, 'utils', utils, false, false, false);
            J$.N(3402761, 'Key', Key, false, false, false);
            J$.N(3402769, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(3402777, 'sshpriv', sshpriv, false, false, false);
            J$.N(3402785, 'SSHKEY_RE', SSHKEY_RE, false, false, false);
            J$.N(3402793, 'SSHKEY_RE2', SSHKEY_RE2, false, false, false);
            read = J$.N(3402809, 'read', J$.T(3402801, read, 12, false), true, false, false);
            write = J$.N(3402825, 'write', J$.T(3402817, write, 12, false), true, false, false);
            J$.T(3400337, 'use strict', 21, false);
            J$.F(3400361, J$.I(typeof require === 'undefined' ? require = J$.R(3400345, 'require', undefined, true, true) : require = J$.R(3400345, 'require', require, true, true)), false)(J$.T(3400353, 'core-js/modules/es.array.join', 21, false));
            J$.F(3400385, J$.I(typeof require === 'undefined' ? require = J$.R(3400369, 'require', undefined, true, true) : require = J$.R(3400369, 'require', require, true, true)), false)(J$.T(3400377, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3400409, J$.I(typeof require === 'undefined' ? require = J$.R(3400393, 'require', undefined, true, true) : require = J$.R(3400393, 'require', require, true, true)), false)(J$.T(3400401, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(3400433, J$.I(typeof require === 'undefined' ? require = J$.R(3400417, 'require', undefined, true, true) : require = J$.R(3400417, 'require', require, true, true)), false)(J$.T(3400425, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3400457, J$.I(typeof require === 'undefined' ? require = J$.R(3400441, 'require', undefined, true, true) : require = J$.R(3400441, 'require', require, true, true)), false)(J$.T(3400449, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(3400481, J$.I(typeof require === 'undefined' ? require = J$.R(3400465, 'require', undefined, true, true) : require = J$.R(3400465, 'require', require, true, true)), false)(J$.T(3400473, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(3400505, J$.I(typeof require === 'undefined' ? require = J$.R(3400489, 'require', undefined, true, true) : require = J$.R(3400489, 'require', require, true, true)), false)(J$.T(3400497, 'core-js/modules/es.string.match', 21, false));
            J$.F(3400529, J$.I(typeof require === 'undefined' ? require = J$.R(3400513, 'require', undefined, true, true) : require = J$.R(3400513, 'require', require, true, true)), false)(J$.T(3400521, 'core-js/modules/es.string.replace', 21, false));
            J$.F(3400553, J$.I(typeof require === 'undefined' ? require = J$.R(3400537, 'require', undefined, true, true) : require = J$.R(3400537, 'require', require, true, true)), false)(J$.T(3400545, 'core-js/modules/es.string.trim', 21, false));
            J$.P(3400593, J$.I(typeof module === 'undefined' ? module = J$.R(3400561, 'module', undefined, true, true) : module = J$.R(3400561, 'module', module, true, true)), 'exports', J$.T(3400585, {
                read: J$.R(3400569, 'read', read, false, true),
                write: J$.R(3400577, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(3400625, 'assert', J$.F(3400617, J$.I(typeof require === 'undefined' ? require = J$.R(3400601, 'require', undefined, true, true) : require = J$.R(3400601, 'require', require, true, true)), false)(J$.T(3400609, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(3400665, 'Buffer', J$.G(3400657, J$.F(3400649, J$.I(typeof require === 'undefined' ? require = J$.R(3400633, 'require', undefined, true, true) : require = J$.R(3400633, 'require', require, true, true)), false)(J$.T(3400641, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var rfc4253 = J$.W(3400697, 'rfc4253', J$.F(3400689, J$.I(typeof require === 'undefined' ? require = J$.R(3400673, 'require', undefined, true, true) : require = J$.R(3400673, 'require', require, true, true)), false)(J$.T(3400681, './rfc4253', 21, false)), rfc4253, false, true);
            var utils = J$.W(3400729, 'utils', J$.F(3400721, J$.I(typeof require === 'undefined' ? require = J$.R(3400705, 'require', undefined, true, true) : require = J$.R(3400705, 'require', require, true, true)), false)(J$.T(3400713, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(3400761, 'Key', J$.F(3400753, J$.I(typeof require === 'undefined' ? require = J$.R(3400737, 'require', undefined, true, true) : require = J$.R(3400737, 'require', require, true, true)), false)(J$.T(3400745, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(3400793, 'PrivateKey', J$.F(3400785, J$.I(typeof require === 'undefined' ? require = J$.R(3400769, 'require', undefined, true, true) : require = J$.R(3400769, 'require', require, true, true)), false)(J$.T(3400777, '../private-key', 21, false)), PrivateKey, false, true);
            var sshpriv = J$.W(3400825, 'sshpriv', J$.F(3400817, J$.I(typeof require === 'undefined' ? require = J$.R(3400801, 'require', undefined, true, true) : require = J$.R(3400801, 'require', require, true, true)), false)(J$.T(3400809, './ssh-private', 21, false)), sshpriv, false, true);
            var SSHKEY_RE = J$.W(3400841, 'SSHKEY_RE', J$.T(3400833, /^([a-z0-9-]+)[ \t]+([a-zA-Z0-9+\/]+[=]*)([ \t]+([^ \t][^\n]*[\n]*)?)?$/, 14, false), SSHKEY_RE, false, true);
            var SSHKEY_RE2 = J$.W(3400857, 'SSHKEY_RE2', J$.T(3400849, /^([a-z0-9-]+)[ \t\n]+([a-zA-Z0-9+\/][a-zA-Z0-9+\/ \t\n=]*)([^a-zA-Z0-9+\/ \t\n=].*)?$/, 14, false), SSHKEY_RE2, false, true);
        } catch (J$e) {
            J$.Ex(3402865, J$e);
        } finally {
            if (J$.Sr(3402873))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

