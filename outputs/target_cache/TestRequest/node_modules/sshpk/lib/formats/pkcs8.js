J$.noInstrEval = false;
jalangiLabel29:
    while (true) {
        try {
            J$.Se(3385401, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/sshpk/lib/formats/pkcs8.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3372281, arguments.callee, this, arguments);
                            arguments = J$.N(3372289, 'arguments', arguments, true, false, false);
                            obj = J$.N(3372297, 'obj', obj, true, false, false);
                            if (J$.C(156848, J$.C(156808, J$.B(448018, '===', J$.U(448010, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3372017, 'Symbol', undefined, true, true) : Symbol = J$.R(3372017, 'Symbol', Symbol, true, true))), J$.T(3372025, 'function', 21, false))) ? J$.B(448034, '===', J$.U(448026, 'typeof', J$.G(3372041, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3372033, 'Symbol', undefined, true, true) : Symbol = J$.R(3372033, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(3372049, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(3372105, '_typeof', J$.T(3372097, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(3372073, arguments.callee, this, arguments);
                                                arguments = J$.N(3372081, 'arguments', arguments, true, false, false);
                                                obj = J$.N(3372089, 'obj', obj, true, false, false);
                                                return J$.Rt(3372065, J$.U(448042, 'typeof', J$.R(3372057, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(3385905, J$e);
                                            } finally {
                                                if (J$.Fr(3385913))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(3372241, '_typeof', J$.T(3372233, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(3372209, arguments.callee, this, arguments);
                                                arguments = J$.N(3372217, 'arguments', arguments, true, false, false);
                                                obj = J$.N(3372225, 'obj', obj, true, false, false);
                                                return J$.Rt(3372201, J$.C(156840, J$.C(156832, J$.C(156824, J$.C(156816, J$.R(3372113, 'obj', obj, false, false)) ? J$.B(448058, '===', J$.U(448050, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3372121, 'Symbol', undefined, true, true) : Symbol = J$.R(3372121, 'Symbol', Symbol, true, true))), J$.T(3372129, 'function', 21, false)) : J$._()) ? J$.B(448066, '===', J$.G(3372145, J$.R(3372137, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3372153, 'Symbol', undefined, true, true) : Symbol = J$.R(3372153, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(448074, '!==', J$.R(3372161, 'obj', obj, false, false), J$.G(3372177, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(3372169, 'Symbol', undefined, true, true) : Symbol = J$.R(3372169, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(3372185, 'symbol', 21, false) : J$.U(448082, 'typeof', J$.R(3372193, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(3385921, J$e);
                                            } finally {
                                                if (J$.Fr(3385929))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(3372273, J$.F(3372265, J$.R(3372249, '_typeof', _typeof, false, true), false)(J$.R(3372257, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(3385937, J$e);
                        } finally {
                            if (J$.Fr(3385945))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function read(buf, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3372697, arguments.callee, this, arguments);
                            arguments = J$.N(3372705, 'arguments', arguments, true, false, false);
                            buf = J$.N(3372713, 'buf', buf, true, false, false);
                            options = J$.N(3372721, 'options', options, true, false, false);
                            return J$.Rt(3372689, J$.M(3372681, J$.R(3372649, 'pem', pem, false, true), 'read', false)(J$.R(3372657, 'buf', buf, false, false), J$.R(3372665, 'options', options, false, false), J$.T(3372673, 'pkcs8', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3385953, J$e);
                        } finally {
                            if (J$.Fr(3385961))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3372777, arguments.callee, this, arguments);
                            arguments = J$.N(3372785, 'arguments', arguments, true, false, false);
                            key = J$.N(3372793, 'key', key, true, false, false);
                            options = J$.N(3372801, 'options', options, true, false, false);
                            return J$.Rt(3372769, J$.M(3372761, J$.R(3372729, 'pem', pem, false, true), 'write', false)(J$.R(3372737, 'key', key, false, false), J$.R(3372745, 'options', options, false, false), J$.T(3372753, 'pkcs8', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3385969, J$e);
                        } finally {
                            if (J$.Fr(3385977))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readMPInt(der, nm) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(3372953, arguments.callee, this, arguments);
                            arguments = J$.N(3372961, 'arguments', arguments, true, false, false);
                            der = J$.N(3372969, 'der', der, true, false, false);
                            nm = J$.N(3372977, 'nm', nm, true, false, false);
                            J$.M(3372873, J$.R(3372809, 'assert', assert, false, true), 'strictEqual', false)(J$.M(3372825, J$.R(3372817, 'der', der, false, false), 'peek', false)(), J$.G(3372849, J$.G(3372841, J$.R(3372833, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.B(448090, '+', J$.R(3372857, 'nm', nm, false, false), J$.T(3372865, ' is not an Integer', 21, false)));
                            return J$.Rt(3372945, J$.M(3372937, J$.R(3372881, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(3372929, J$.R(3372889, 'der', der, false, false), 'readString', false)(J$.G(3372913, J$.G(3372905, J$.R(3372897, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(3372921, true, 23, false))));
                        } catch (J$e) {
                            J$.Ex(3385985, J$e);
                        } finally {
                            if (J$.Fr(3385993))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8(alg, type, der) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(3373697, arguments.callee, this, arguments);
                            arguments = J$.N(3373705, 'arguments', arguments, true, false, false);
                            alg = J$.N(3373713, 'alg', alg, true, false, false);
                            type = J$.N(3373721, 'type', type, true, false, false);
                            der = J$.N(3373729, 'der', der, true, false, false);
                            J$.N(3373737, 'next', next, false, false, false);
                            J$.N(3373745, 'oid', oid, false, false, false);
                            if (J$.C(156856, J$.B(448098, '===', J$.M(3372993, J$.R(3372985, 'der', der, false, false), 'peek', false)(), J$.G(3373017, J$.G(3373009, J$.R(3373001, 'asn1', asn1, false, true), 'Ber'), 'Integer')))) {
                                J$.M(3373057, J$.R(3373025, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3373033, 'type', type, false, false), J$.T(3373041, 'private', 21, false), J$.T(3373049, 'unexpected Integer at start of public key', 21, false));
                                J$.M(3373105, J$.R(3373065, 'der', der, false, false), 'readString', false)(J$.G(3373089, J$.G(3373081, J$.R(3373073, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(3373097, true, 23, false));
                            }
                            J$.M(3373121, J$.R(3373113, 'der', der, false, false), 'readSequence', false)();
                            var next = J$.W(3373161, 'next', J$.B(448106, '+', J$.G(3373137, J$.R(3373129, 'der', der, false, false), 'offset'), J$.G(3373153, J$.R(3373145, 'der', der, false, false), 'length')), next, false, false);
                            var oid = J$.W(3373185, 'oid', J$.M(3373177, J$.R(3373169, 'der', der, false, false), 'readOID', false)(), oid, false, false);
                            switch (J$.C1(156904, J$.R(3373193, 'oid', oid, false, false))) {
                            case J$.C2(156912, J$.T(3373305, '1.2.840.113549.1.1.1', 21, false)):
                                J$.P(3373217, J$.R(3373201, 'der', der, false, false), '_offset', J$.R(3373209, 'next', next, false, false));
                                if (J$.C(156864, J$.B(448114, '===', J$.R(3373225, 'type', type, false, false), J$.T(3373233, 'public', 21, false))))
                                    return J$.Rt(3373265, J$.F(3373257, J$.R(3373241, 'readPkcs8RSAPublic', readPkcs8RSAPublic, false, true), false)(J$.R(3373249, 'der', der, false, false)));
                                else
                                    return J$.Rt(3373297, J$.F(3373289, J$.R(3373273, 'readPkcs8RSAPrivate', readPkcs8RSAPrivate, false, true), false)(J$.R(3373281, 'der', der, false, false)));
                            case J$.C2(156920, J$.T(3373393, '1.2.840.10040.4.1', 21, false)):
                                if (J$.C(156872, J$.B(448122, '===', J$.R(3373313, 'type', type, false, false), J$.T(3373321, 'public', 21, false))))
                                    return J$.Rt(3373353, J$.F(3373345, J$.R(3373329, 'readPkcs8DSAPublic', readPkcs8DSAPublic, false, true), false)(J$.R(3373337, 'der', der, false, false)));
                                else
                                    return J$.Rt(3373385, J$.F(3373377, J$.R(3373361, 'readPkcs8DSAPrivate', readPkcs8DSAPrivate, false, true), false)(J$.R(3373369, 'der', der, false, false)));
                            case J$.C2(156928, J$.T(3373481, '1.2.840.10045.2.1', 21, false)):
                                if (J$.C(156880, J$.B(448130, '===', J$.R(3373401, 'type', type, false, false), J$.T(3373409, 'public', 21, false))))
                                    return J$.Rt(3373441, J$.F(3373433, J$.R(3373417, 'readPkcs8ECDSAPublic', readPkcs8ECDSAPublic, false, true), false)(J$.R(3373425, 'der', der, false, false)));
                                else
                                    return J$.Rt(3373473, J$.F(3373465, J$.R(3373449, 'readPkcs8ECDSAPrivate', readPkcs8ECDSAPrivate, false, true), false)(J$.R(3373457, 'der', der, false, false)));
                            case J$.C2(156936, J$.T(3373569, '1.3.101.112', 21, false)):
                                if (J$.C(156888, J$.B(448138, '===', J$.R(3373489, 'type', type, false, false), J$.T(3373497, 'public', 21, false)))) {
                                    return J$.Rt(3373529, J$.F(3373521, J$.R(3373505, 'readPkcs8EdDSAPublic', readPkcs8EdDSAPublic, false, true), false)(J$.R(3373513, 'der', der, false, false)));
                                } else {
                                    return J$.Rt(3373561, J$.F(3373553, J$.R(3373537, 'readPkcs8EdDSAPrivate', readPkcs8EdDSAPrivate, false, true), false)(J$.R(3373545, 'der', der, false, false)));
                                }
                            case J$.C2(156944, J$.T(3373657, '1.3.101.110', 21, false)):
                                if (J$.C(156896, J$.B(448146, '===', J$.R(3373577, 'type', type, false, false), J$.T(3373585, 'public', 21, false)))) {
                                    return J$.Rt(3373617, J$.F(3373609, J$.R(3373593, 'readPkcs8X25519Public', readPkcs8X25519Public, false, true), false)(J$.R(3373601, 'der', der, false, false)));
                                } else {
                                    return J$.Rt(3373649, J$.F(3373641, J$.R(3373625, 'readPkcs8X25519Private', readPkcs8X25519Private, false, true), false)(J$.R(3373633, 'der', der, false, false)));
                                }
                            default:
                                throw J$.F(3373689, J$.I(typeof Error === 'undefined' ? Error = J$.R(3373665, 'Error', undefined, true, true) : Error = J$.R(3373665, 'Error', Error, true, true)), true)(J$.B(448154, '+', J$.T(3373673, 'Unknown key type OID ', 21, false), J$.R(3373681, 'oid', oid, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(3386001, J$e);
                        } finally {
                            if (J$.Fr(3386009))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8RSAPublic(der) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(3374033, arguments.callee, this, arguments);
                            arguments = J$.N(3374041, 'arguments', arguments, true, false, false);
                            der = J$.N(3374049, 'der', der, true, false, false);
                            J$.N(3374057, 'n', n, false, false, false);
                            J$.N(3374065, 'e', e, false, false, false);
                            J$.N(3374073, 'key', key, false, false, false);
                            J$.M(3373785, J$.R(3373753, 'der', der, false, false), 'readSequence', false)(J$.G(3373777, J$.G(3373769, J$.R(3373761, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(3373801, J$.R(3373793, 'der', der, false, false), 'readByte', false)();
                            J$.M(3373817, J$.R(3373809, 'der', der, false, false), 'readSequence', false)();
                            var n = J$.W(3373857, 'n', J$.F(3373849, J$.R(3373825, 'readMPInt', readMPInt, false, true), false)(J$.R(3373833, 'der', der, false, false), J$.T(3373841, 'modulus', 21, false)), n, false, false);
                            var e = J$.W(3373897, 'e', J$.F(3373889, J$.R(3373865, 'readMPInt', readMPInt, false, true), false)(J$.R(3373873, 'der', der, false, false), J$.T(3373881, 'exponent', 21, false)), e, false, false);
                            var key = J$.W(3373993, 'key', J$.T(3373985, {
                                type: J$.T(3373905, 'rsa', 21, false),
                                source: J$.G(3373921, J$.R(3373913, 'der', der, false, false), 'originalInput'),
                                parts: J$.T(3373977, [
                                    J$.T(3373945, {
                                        name: J$.T(3373929, 'e', 21, false),
                                        data: J$.R(3373937, 'e', e, false, false)
                                    }, 11, false),
                                    J$.T(3373969, {
                                        name: J$.T(3373953, 'n', 21, false),
                                        data: J$.R(3373961, 'n', n, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3374025, J$.F(3374017, J$.R(3374001, 'Key', Key, false, true), true)(J$.R(3374009, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386017, J$e);
                        } finally {
                            if (J$.Fr(3386025))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8RSAPrivate(der) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(3374809, arguments.callee, this, arguments);
                            arguments = J$.N(3374817, 'arguments', arguments, true, false, false);
                            der = J$.N(3374825, 'der', der, true, false, false);
                            J$.N(3374833, 'ver', ver, false, false, false);
                            J$.N(3374841, 'n', n, false, false, false);
                            J$.N(3374849, 'e', e, false, false, false);
                            J$.N(3374857, 'd', d, false, false, false);
                            J$.N(3374865, 'p', p, false, false, false);
                            J$.N(3374873, 'q', q, false, false, false);
                            J$.N(3374881, 'dmodp', dmodp, false, false, false);
                            J$.N(3374889, 'dmodq', dmodq, false, false, false);
                            J$.N(3374897, 'iqmp', iqmp, false, false, false);
                            J$.N(3374905, 'key', key, false, false, false);
                            J$.M(3374113, J$.R(3374081, 'der', der, false, false), 'readSequence', false)(J$.G(3374105, J$.G(3374097, J$.R(3374089, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(3374129, J$.R(3374121, 'der', der, false, false), 'readSequence', false)();
                            var ver = J$.W(3374169, 'ver', J$.F(3374161, J$.R(3374137, 'readMPInt', readMPInt, false, true), false)(J$.R(3374145, 'der', der, false, false), J$.T(3374153, 'version', 21, false)), ver, false, false);
                            J$.M(3374225, J$.R(3374177, 'assert', assert, false, true), 'equal', false)(J$.G(3374201, J$.R(3374185, 'ver', ver, false, false), J$.T(3374193, 0, 22, false)), J$.T(3374209, 0, 22, false), J$.T(3374217, 'unknown RSA private key version', 21, false));
                            var n = J$.W(3374265, 'n', J$.F(3374257, J$.R(3374233, 'readMPInt', readMPInt, false, true), false)(J$.R(3374241, 'der', der, false, false), J$.T(3374249, 'modulus', 21, false)), n, false, false);
                            var e = J$.W(3374305, 'e', J$.F(3374297, J$.R(3374273, 'readMPInt', readMPInt, false, true), false)(J$.R(3374281, 'der', der, false, false), J$.T(3374289, 'public exponent', 21, false)), e, false, false);
                            var d = J$.W(3374345, 'd', J$.F(3374337, J$.R(3374313, 'readMPInt', readMPInt, false, true), false)(J$.R(3374321, 'der', der, false, false), J$.T(3374329, 'private exponent', 21, false)), d, false, false);
                            var p = J$.W(3374385, 'p', J$.F(3374377, J$.R(3374353, 'readMPInt', readMPInt, false, true), false)(J$.R(3374361, 'der', der, false, false), J$.T(3374369, 'prime1', 21, false)), p, false, false);
                            var q = J$.W(3374425, 'q', J$.F(3374417, J$.R(3374393, 'readMPInt', readMPInt, false, true), false)(J$.R(3374401, 'der', der, false, false), J$.T(3374409, 'prime2', 21, false)), q, false, false);
                            var dmodp = J$.W(3374465, 'dmodp', J$.F(3374457, J$.R(3374433, 'readMPInt', readMPInt, false, true), false)(J$.R(3374441, 'der', der, false, false), J$.T(3374449, 'exponent1', 21, false)), dmodp, false, false);
                            var dmodq = J$.W(3374505, 'dmodq', J$.F(3374497, J$.R(3374473, 'readMPInt', readMPInt, false, true), false)(J$.R(3374481, 'der', der, false, false), J$.T(3374489, 'exponent2', 21, false)), dmodq, false, false);
                            var iqmp = J$.W(3374545, 'iqmp', J$.F(3374537, J$.R(3374513, 'readMPInt', readMPInt, false, true), false)(J$.R(3374521, 'der', der, false, false), J$.T(3374529, 'iqmp', 21, false)), iqmp, false, false);
                            var key = J$.W(3374769, 'key', J$.T(3374761, {
                                type: J$.T(3374553, 'rsa', 21, false),
                                parts: J$.T(3374753, [
                                    J$.T(3374577, {
                                        name: J$.T(3374561, 'n', 21, false),
                                        data: J$.R(3374569, 'n', n, false, false)
                                    }, 11, false),
                                    J$.T(3374601, {
                                        name: J$.T(3374585, 'e', 21, false),
                                        data: J$.R(3374593, 'e', e, false, false)
                                    }, 11, false),
                                    J$.T(3374625, {
                                        name: J$.T(3374609, 'd', 21, false),
                                        data: J$.R(3374617, 'd', d, false, false)
                                    }, 11, false),
                                    J$.T(3374649, {
                                        name: J$.T(3374633, 'iqmp', 21, false),
                                        data: J$.R(3374641, 'iqmp', iqmp, false, false)
                                    }, 11, false),
                                    J$.T(3374673, {
                                        name: J$.T(3374657, 'p', 21, false),
                                        data: J$.R(3374665, 'p', p, false, false)
                                    }, 11, false),
                                    J$.T(3374697, {
                                        name: J$.T(3374681, 'q', 21, false),
                                        data: J$.R(3374689, 'q', q, false, false)
                                    }, 11, false),
                                    J$.T(3374721, {
                                        name: J$.T(3374705, 'dmodp', 21, false),
                                        data: J$.R(3374713, 'dmodp', dmodp, false, false)
                                    }, 11, false),
                                    J$.T(3374745, {
                                        name: J$.T(3374729, 'dmodq', 21, false),
                                        data: J$.R(3374737, 'dmodq', dmodq, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3374801, J$.F(3374793, J$.R(3374777, 'PrivateKey', PrivateKey, false, true), true)(J$.R(3374785, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386033, J$e);
                        } finally {
                            if (J$.Fr(3386041))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8DSAPublic(der) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(3375305, arguments.callee, this, arguments);
                            arguments = J$.N(3375313, 'arguments', arguments, true, false, false);
                            der = J$.N(3375321, 'der', der, true, false, false);
                            J$.N(3375329, 'p', p, false, false, false);
                            J$.N(3375337, 'q', q, false, false, false);
                            J$.N(3375345, 'g', g, false, false, false);
                            J$.N(3375353, 'y', y, false, false, false);
                            J$.N(3375361, 'key', key, false, false, false);
                            J$.M(3374921, J$.R(3374913, 'der', der, false, false), 'readSequence', false)();
                            var p = J$.W(3374961, 'p', J$.F(3374953, J$.R(3374929, 'readMPInt', readMPInt, false, true), false)(J$.R(3374937, 'der', der, false, false), J$.T(3374945, 'p', 21, false)), p, false, false);
                            var q = J$.W(3375001, 'q', J$.F(3374993, J$.R(3374969, 'readMPInt', readMPInt, false, true), false)(J$.R(3374977, 'der', der, false, false), J$.T(3374985, 'q', 21, false)), q, false, false);
                            var g = J$.W(3375041, 'g', J$.F(3375033, J$.R(3375009, 'readMPInt', readMPInt, false, true), false)(J$.R(3375017, 'der', der, false, false), J$.T(3375025, 'g', 21, false)), g, false, false);
                            J$.M(3375081, J$.R(3375049, 'der', der, false, false), 'readSequence', false)(J$.G(3375073, J$.G(3375065, J$.R(3375057, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(3375097, J$.R(3375089, 'der', der, false, false), 'readByte', false)();
                            var y = J$.W(3375137, 'y', J$.F(3375129, J$.R(3375105, 'readMPInt', readMPInt, false, true), false)(J$.R(3375113, 'der', der, false, false), J$.T(3375121, 'y', 21, false)), y, false, false);
                            var key = J$.W(3375265, 'key', J$.T(3375257, {
                                type: J$.T(3375145, 'dsa', 21, false),
                                parts: J$.T(3375249, [
                                    J$.T(3375169, {
                                        name: J$.T(3375153, 'p', 21, false),
                                        data: J$.R(3375161, 'p', p, false, false)
                                    }, 11, false),
                                    J$.T(3375193, {
                                        name: J$.T(3375177, 'q', 21, false),
                                        data: J$.R(3375185, 'q', q, false, false)
                                    }, 11, false),
                                    J$.T(3375217, {
                                        name: J$.T(3375201, 'g', 21, false),
                                        data: J$.R(3375209, 'g', g, false, false)
                                    }, 11, false),
                                    J$.T(3375241, {
                                        name: J$.T(3375225, 'y', 21, false),
                                        data: J$.R(3375233, 'y', y, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3375297, J$.F(3375289, J$.R(3375273, 'Key', Key, false, true), true)(J$.R(3375281, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386049, J$e);
                        } finally {
                            if (J$.Fr(3386057))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8DSAPrivate(der) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(3375817, arguments.callee, this, arguments);
                            arguments = J$.N(3375825, 'arguments', arguments, true, false, false);
                            der = J$.N(3375833, 'der', der, true, false, false);
                            J$.N(3375841, 'p', p, false, false, false);
                            J$.N(3375849, 'q', q, false, false, false);
                            J$.N(3375857, 'g', g, false, false, false);
                            J$.N(3375865, 'x', x, false, false, false);
                            J$.N(3375873, 'y', y, false, false, false);
                            J$.N(3375881, 'key', key, false, false, false);
                            J$.M(3375377, J$.R(3375369, 'der', der, false, false), 'readSequence', false)();
                            var p = J$.W(3375417, 'p', J$.F(3375409, J$.R(3375385, 'readMPInt', readMPInt, false, true), false)(J$.R(3375393, 'der', der, false, false), J$.T(3375401, 'p', 21, false)), p, false, false);
                            var q = J$.W(3375457, 'q', J$.F(3375449, J$.R(3375425, 'readMPInt', readMPInt, false, true), false)(J$.R(3375433, 'der', der, false, false), J$.T(3375441, 'q', 21, false)), q, false, false);
                            var g = J$.W(3375497, 'g', J$.F(3375489, J$.R(3375465, 'readMPInt', readMPInt, false, true), false)(J$.R(3375473, 'der', der, false, false), J$.T(3375481, 'g', 21, false)), g, false, false);
                            J$.M(3375537, J$.R(3375505, 'der', der, false, false), 'readSequence', false)(J$.G(3375529, J$.G(3375521, J$.R(3375513, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            var x = J$.W(3375577, 'x', J$.F(3375569, J$.R(3375545, 'readMPInt', readMPInt, false, true), false)(J$.R(3375553, 'der', der, false, false), J$.T(3375561, 'x', 21, false)), x, false, false);
                            var y = J$.W(3375625, 'y', J$.M(3375617, J$.R(3375585, 'utils', utils, false, true), 'calculateDSAPublic', false)(J$.R(3375593, 'g', g, false, false), J$.R(3375601, 'p', p, false, false), J$.R(3375609, 'x', x, false, false)), y, false, false);
                            var key = J$.W(3375777, 'key', J$.T(3375769, {
                                type: J$.T(3375633, 'dsa', 21, false),
                                parts: J$.T(3375761, [
                                    J$.T(3375657, {
                                        name: J$.T(3375641, 'p', 21, false),
                                        data: J$.R(3375649, 'p', p, false, false)
                                    }, 11, false),
                                    J$.T(3375681, {
                                        name: J$.T(3375665, 'q', 21, false),
                                        data: J$.R(3375673, 'q', q, false, false)
                                    }, 11, false),
                                    J$.T(3375705, {
                                        name: J$.T(3375689, 'g', 21, false),
                                        data: J$.R(3375697, 'g', g, false, false)
                                    }, 11, false),
                                    J$.T(3375729, {
                                        name: J$.T(3375713, 'y', 21, false),
                                        data: J$.R(3375721, 'y', y, false, false)
                                    }, 11, false),
                                    J$.T(3375753, {
                                        name: J$.T(3375737, 'x', 21, false),
                                        data: J$.R(3375745, 'x', x, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3375809, J$.F(3375801, J$.R(3375785, 'PrivateKey', PrivateKey, false, true), true)(J$.R(3375793, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386065, J$e);
                        } finally {
                            if (J$.Fr(3386073))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readECDSACurve(der) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(3377913, arguments.callee, this, arguments);
                            arguments = J$.N(3377921, 'arguments', arguments, true, false, false);
                            der = J$.N(3377929, 'der', der, true, false, false);
                            J$.N(3377937, 'curveName', curveName, false, false, false);
                            J$.N(3377945, 'curveNames', curveNames, false, false, false);
                            J$.N(3377953, 'j', j, false, false, false);
                            J$.N(3377961, 'c', c, false, false, false);
                            J$.N(3377969, 'cd', cd, false, false, false);
                            J$.N(3377977, 'oid', oid, false, false, false);
                            J$.N(3377985, 'version', version, false, false, false);
                            J$.N(3377993, 'curve', curve, false, false, false);
                            J$.N(3378001, 'fieldTypeOid', fieldTypeOid, false, false, false);
                            J$.N(3378009, 'p', p, false, false, false);
                            J$.N(3378017, 'ks', ks, false, false, false);
                            J$.N(3378025, 'equal', equal, false, false, false);
                            J$.N(3378033, 'i', i, false, false, false);
                            J$.N(3378041, 'k', k, false, false, false);
                            var curveName, curveNames;
                            var j, c, cd;
                            if (J$.C(157056, J$.B(448162, '===', J$.M(3375897, J$.R(3375889, 'der', der, false, false), 'peek', false)(), J$.G(3375921, J$.G(3375913, J$.R(3375905, 'asn1', asn1, false, true), 'Ber'), 'OID')))) {
                                var oid = J$.W(3375945, 'oid', J$.M(3375937, J$.R(3375929, 'der', der, false, false), 'readOID', false)(), oid, false, false);
                                curveNames = J$.W(3375985, 'curveNames', J$.M(3375977, J$.I(typeof Object === 'undefined' ? Object = J$.R(3375953, 'Object', undefined, true, true) : Object = J$.R(3375953, 'Object', Object, true, true)), 'keys', false)(J$.G(3375969, J$.R(3375961, 'algs', algs, false, true), 'curves')), curveNames, false, false);
                                for (j = J$.W(3376001, 'j', J$.T(3375993, 0, 22, false), j, false, false); J$.C(156960, J$.B(448170, '<', J$.R(3376009, 'j', j, false, false), J$.G(3376025, J$.R(3376017, 'curveNames', curveNames, false, false), 'length'))); j = J$.W(3376041, 'j', J$.B(448186, '+', J$.U(448178, '+', J$.R(3376033, 'j', j, false, false)), 1), j, false, false)) {
                                    c = J$.W(3376073, 'c', J$.G(3376065, J$.R(3376049, 'curveNames', curveNames, false, false), J$.R(3376057, 'j', j, false, false)), c, false, false);
                                    cd = J$.W(3376113, 'cd', J$.G(3376105, J$.G(3376089, J$.R(3376081, 'algs', algs, false, true), 'curves'), J$.R(3376097, 'c', c, false, false)), cd, false, false);
                                    if (J$.C(156952, J$.B(448194, '===', J$.G(3376129, J$.R(3376121, 'cd', cd, false, false), 'pkcs8oid'), J$.R(3376137, 'oid', oid, false, false)))) {
                                        curveName = J$.W(3376153, 'curveName', J$.R(3376145, 'c', c, false, false), curveName, false, false);
                                        break;
                                    }
                                }
                            } else {
                                J$.M(3376169, J$.R(3376161, 'der', der, false, false), 'readSequence', false)();
                                var version = J$.W(3376225, 'version', J$.M(3376217, J$.R(3376177, 'der', der, false, false), 'readString', false)(J$.G(3376201, J$.G(3376193, J$.R(3376185, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(3376209, true, 23, false)), version, false, false);
                                J$.M(3376281, J$.R(3376233, 'assert', assert, false, true), 'strictEqual', false)(J$.G(3376257, J$.R(3376241, 'version', version, false, false), J$.T(3376249, 0, 22, false)), J$.T(3376265, 1, 22, false), J$.T(3376273, 'ECDSA key not version 1', 21, false));
                                var curve = J$.W(3376297, 'curve', J$.T(3376289, {}, 11, false), curve, false, false);
                                J$.M(3376313, J$.R(3376305, 'der', der, false, false), 'readSequence', false)();
                                var fieldTypeOid = J$.W(3376337, 'fieldTypeOid', J$.M(3376329, J$.R(3376321, 'der', der, false, false), 'readOID', false)(), fieldTypeOid, false, false);
                                J$.M(3376377, J$.R(3376345, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3376353, 'fieldTypeOid', fieldTypeOid, false, false), J$.T(3376361, '1.2.840.10045.1.1', 21, false), J$.T(3376369, 'ECDSA key is not from a prime-field', 21, false));
                                var p = J$.W(3376465, 'p', J$.P(3376457, J$.R(3376385, 'curve', curve, false, false), 'p', J$.M(3376449, J$.R(3376393, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(3376441, J$.R(3376401, 'der', der, false, false), 'readString', false)(J$.G(3376425, J$.G(3376417, J$.R(3376409, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(3376433, true, 23, false)))), p, false, false);
                                J$.P(3376529, J$.R(3376473, 'curve', curve, false, false), 'size', J$.B(448210, '-', J$.B(448202, '*', J$.G(3376489, J$.R(3376481, 'p', p, false, false), 'length'), J$.T(3376497, 8, 22, false)), J$.M(3376521, J$.R(3376505, 'utils', utils, false, true), 'countZeros', false)(J$.R(3376513, 'p', p, false, false))));
                                J$.M(3376545, J$.R(3376537, 'der', der, false, false), 'readSequence', false)();
                                J$.P(3376625, J$.R(3376553, 'curve', curve, false, false), 'a', J$.M(3376617, J$.R(3376561, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(3376609, J$.R(3376569, 'der', der, false, false), 'readString', false)(J$.G(3376593, J$.G(3376585, J$.R(3376577, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3376601, true, 23, false))));
                                J$.P(3376705, J$.R(3376633, 'curve', curve, false, false), 'b', J$.M(3376697, J$.R(3376641, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(3376689, J$.R(3376649, 'der', der, false, false), 'readString', false)(J$.G(3376673, J$.G(3376665, J$.R(3376657, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3376681, true, 23, false))));
                                if (J$.C(156968, J$.B(448218, '===', J$.M(3376721, J$.R(3376713, 'der', der, false, false), 'peek', false)(), J$.G(3376745, J$.G(3376737, J$.R(3376729, 'asn1', asn1, false, true), 'Ber'), 'BitString'))))
                                    J$.P(3376809, J$.R(3376753, 'curve', curve, false, false), 's', J$.M(3376801, J$.R(3376761, 'der', der, false, false), 'readString', false)(J$.G(3376785, J$.G(3376777, J$.R(3376769, 'asn1', asn1, false, true), 'Ber'), 'BitString'), J$.T(3376793, true, 23, false)));
                                J$.P(3376873, J$.R(3376817, 'curve', curve, false, false), 'G', J$.M(3376865, J$.R(3376825, 'der', der, false, false), 'readString', false)(J$.G(3376849, J$.G(3376841, J$.R(3376833, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3376857, true, 23, false)));
                                J$.M(3376937, J$.R(3376881, 'assert', assert, false, true), 'strictEqual', false)(J$.G(3376913, J$.G(3376897, J$.R(3376889, 'curve', curve, false, false), 'G'), J$.T(3376905, 0, 22, false)), J$.T(3376921, 4, 22, false), J$.T(3376929, 'uncompressed G is required', 21, false));
                                J$.P(3377017, J$.R(3376945, 'curve', curve, false, false), 'n', J$.M(3377009, J$.R(3376953, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(3377001, J$.R(3376961, 'der', der, false, false), 'readString', false)(J$.G(3376985, J$.G(3376977, J$.R(3376969, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(3376993, true, 23, false))));
                                J$.P(3377097, J$.R(3377025, 'curve', curve, false, false), 'h', J$.M(3377089, J$.R(3377033, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(3377081, J$.R(3377041, 'der', der, false, false), 'readString', false)(J$.G(3377065, J$.G(3377057, J$.R(3377049, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(3377073, true, 23, false))));
                                J$.M(3377169, J$.R(3377105, 'assert', assert, false, true), 'strictEqual', false)(J$.G(3377137, J$.G(3377121, J$.R(3377113, 'curve', curve, false, false), 'h'), J$.T(3377129, 0, 22, false)), J$.T(3377145, 1, 22, false), J$.B(448226, '+', J$.T(3377153, 'a cofactor=1 curve is ', 21, false), J$.T(3377161, 'required', 21, false)));
                                curveNames = J$.W(3377209, 'curveNames', J$.M(3377201, J$.I(typeof Object === 'undefined' ? Object = J$.R(3377177, 'Object', undefined, true, true) : Object = J$.R(3377177, 'Object', Object, true, true)), 'keys', false)(J$.G(3377193, J$.R(3377185, 'algs', algs, false, true), 'curves')), curveNames, false, false);
                                var ks = J$.W(3377241, 'ks', J$.M(3377233, J$.I(typeof Object === 'undefined' ? Object = J$.R(3377217, 'Object', undefined, true, true) : Object = J$.R(3377217, 'Object', Object, true, true)), 'keys', false)(J$.R(3377225, 'curve', curve, false, false)), ks, false, false);
                                for (j = J$.W(3377257, 'j', J$.T(3377249, 0, 22, false), j, false, false); J$.C(157048, J$.B(448234, '<', J$.R(3377265, 'j', j, false, false), J$.G(3377281, J$.R(3377273, 'curveNames', curveNames, false, false), 'length'))); j = J$.W(3377297, 'j', J$.B(448250, '+', J$.U(448242, '+', J$.R(3377289, 'j', j, false, false)), 1), j, false, false)) {
                                    c = J$.W(3377329, 'c', J$.G(3377321, J$.R(3377305, 'curveNames', curveNames, false, false), J$.R(3377313, 'j', j, false, false)), c, false, false);
                                    cd = J$.W(3377369, 'cd', J$.G(3377361, J$.G(3377345, J$.R(3377337, 'algs', algs, false, true), 'curves'), J$.R(3377353, 'c', c, false, false)), cd, false, false);
                                    var equal = J$.W(3377385, 'equal', J$.T(3377377, true, 23, false), equal, false, false);
                                    for (var i = J$.W(3377401, 'i', J$.T(3377393, 0, 22, false), i, false, false); J$.C(157032, J$.B(448258, '<', J$.R(3377409, 'i', i, false, false), J$.G(3377425, J$.R(3377417, 'ks', ks, false, false), 'length'))); i = J$.W(3377441, 'i', J$.B(448274, '+', J$.U(448266, '+', J$.R(3377433, 'i', i, false, false)), 1), i, false, false)) {
                                        var k = J$.W(3377473, 'k', J$.G(3377465, J$.R(3377449, 'ks', ks, false, false), J$.R(3377457, 'i', i, false, false)), k, false, false);
                                        if (J$.C(156976, J$.B(448282, '===', J$.G(3377497, J$.R(3377481, 'cd', cd, false, false), J$.R(3377489, 'k', k, false, false)), J$.T(3377505, undefined, 24, false))))
                                            continue;
                                        if (J$.C(157024, J$.C(156984, J$.B(448290, '===', J$.F(3377545, J$.R(3377513, '_typeof', _typeof, false, true), false)(J$.G(3377537, J$.R(3377521, 'cd', cd, false, false), J$.R(3377529, 'k', k, false, false))), J$.T(3377553, 'object', 21, false))) ? J$.B(448298, '!==', J$.G(3377585, J$.G(3377577, J$.R(3377561, 'cd', cd, false, false), J$.R(3377569, 'k', k, false, false)), 'equals'), J$.T(3377593, undefined, 24, false)) : J$._())) {
                                            if (J$.C(156992, J$.U(448306, '!', J$.M(3377649, J$.G(3377617, J$.R(3377601, 'cd', cd, false, false), J$.R(3377609, 'k', k, false, false)), 'equals', false)(J$.G(3377641, J$.R(3377625, 'curve', curve, false, false), J$.R(3377633, 'k', k, false, false)))))) {
                                                equal = J$.W(3377665, 'equal', J$.T(3377657, false, 23, false), equal, false, false);
                                                break;
                                            }
                                        } else if (J$.C(157016, J$.M(3377705, J$.R(3377673, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(3377697, J$.R(3377681, 'cd', cd, false, false), J$.R(3377689, 'k', k, false, false))))) {
                                            if (J$.C(157000, J$.B(448314, '!==', J$.M(3377745, J$.G(3377729, J$.R(3377713, 'cd', cd, false, false), J$.R(3377721, 'k', k, false, false)), 'toString', false)(J$.T(3377737, 'binary', 21, false)), J$.M(3377785, J$.G(3377769, J$.R(3377753, 'curve', curve, false, false), J$.R(3377761, 'k', k, false, false)), 'toString', false)(J$.T(3377777, 'binary', 21, false))))) {
                                                equal = J$.W(3377801, 'equal', J$.T(3377793, false, 23, false), equal, false, false);
                                                break;
                                            }
                                        } else {
                                            if (J$.C(157008, J$.B(448322, '!==', J$.G(3377825, J$.R(3377809, 'cd', cd, false, false), J$.R(3377817, 'k', k, false, false)), J$.G(3377849, J$.R(3377833, 'curve', curve, false, false), J$.R(3377841, 'k', k, false, false))))) {
                                                equal = J$.W(3377865, 'equal', J$.T(3377857, false, 23, false), equal, false, false);
                                                break;
                                            }
                                        }
                                    }
                                    if (J$.C(157040, J$.R(3377873, 'equal', equal, false, false))) {
                                        curveName = J$.W(3377889, 'curveName', J$.R(3377881, 'c', c, false, false), curveName, false, false);
                                        break;
                                    }
                                }
                            }
                            return J$.Rt(3377905, J$.R(3377897, 'curveName', curveName, false, false));
                        } catch (J$e) {
                            J$.Ex(3386081, J$e);
                        } finally {
                            if (J$.Fr(3386089))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8ECDSAPrivate(der) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(3378785, arguments.callee, this, arguments);
                            arguments = J$.N(3378793, 'arguments', arguments, true, false, false);
                            der = J$.N(3378801, 'der', der, true, false, false);
                            J$.N(3378809, 'curveName', curveName, false, false, false);
                            J$.N(3378817, 'version', version, false, false, false);
                            J$.N(3378825, 'd', d, false, false, false);
                            J$.N(3378833, 'Q', Q, false, false, false);
                            J$.N(3378841, 'pub', pub, false, false, false);
                            J$.N(3378849, 'key', key, false, false, false);
                            var curveName = J$.W(3378073, 'curveName', J$.F(3378065, J$.R(3378049, 'readECDSACurve', readECDSACurve, false, true), false)(J$.R(3378057, 'der', der, false, false)), curveName, false, false);
                            J$.M(3378105, J$.R(3378081, 'assert', assert, false, true), 'string', false)(J$.R(3378089, 'curveName', curveName, false, false), J$.T(3378097, 'a known elliptic curve', 21, false));
                            J$.M(3378145, J$.R(3378113, 'der', der, false, false), 'readSequence', false)(J$.G(3378137, J$.G(3378129, J$.R(3378121, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(3378161, J$.R(3378153, 'der', der, false, false), 'readSequence', false)();
                            var version = J$.W(3378201, 'version', J$.F(3378193, J$.R(3378169, 'readMPInt', readMPInt, false, true), false)(J$.R(3378177, 'der', der, false, false), J$.T(3378185, 'version', 21, false)), version, false, false);
                            J$.M(3378257, J$.R(3378209, 'assert', assert, false, true), 'equal', false)(J$.G(3378233, J$.R(3378217, 'version', version, false, false), J$.T(3378225, 0, 22, false)), J$.T(3378241, 1, 22, false), J$.T(3378249, 'unknown version of ECDSA key', 21, false));
                            var d = J$.W(3378313, 'd', J$.M(3378305, J$.R(3378265, 'der', der, false, false), 'readString', false)(J$.G(3378289, J$.G(3378281, J$.R(3378273, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3378297, true, 23, false)), d, false, false);
                            var Q;
                            if (J$.C(157064, J$.B(448330, '==', J$.M(3378329, J$.R(3378321, 'der', der, false, false), 'peek', false)(), J$.T(3378337, 160, 22, false)))) {
                                J$.M(3378361, J$.R(3378345, 'der', der, false, false), 'readSequence', false)(J$.T(3378353, 160, 22, false));
                                J$.A(3378393, J$.R(3378369, 'der', der, false, false), '_offset', '+')(J$.G(3378385, J$.R(3378377, 'der', der, false, false), 'length'));
                            }
                            if (J$.C(157072, J$.B(448338, '==', J$.M(3378409, J$.R(3378401, 'der', der, false, false), 'peek', false)(), J$.T(3378417, 161, 22, false)))) {
                                J$.M(3378441, J$.R(3378425, 'der', der, false, false), 'readSequence', false)(J$.T(3378433, 161, 22, false));
                                Q = J$.W(3378497, 'Q', J$.M(3378489, J$.R(3378449, 'der', der, false, false), 'readString', false)(J$.G(3378473, J$.G(3378465, J$.R(3378457, 'asn1', asn1, false, true), 'Ber'), 'BitString'), J$.T(3378481, true, 23, false)), Q, false, false);
                                Q = J$.W(3378529, 'Q', J$.M(3378521, J$.R(3378505, 'utils', utils, false, true), 'ecNormalize', false)(J$.R(3378513, 'Q', Q, false, false)), Q, false, false);
                            }
                            if (J$.C(157080, J$.B(448346, '===', J$.R(3378537, 'Q', Q, false, false), J$.T(3378545, undefined, 24, false)))) {
                                var pub = J$.W(3378585, 'pub', J$.M(3378577, J$.R(3378553, 'utils', utils, false, true), 'publicFromPrivateECDSA', false)(J$.R(3378561, 'curveName', curveName, false, false), J$.R(3378569, 'd', d, false, false)), pub, false, false);
                                Q = J$.W(3378625, 'Q', J$.G(3378617, J$.G(3378609, J$.G(3378601, J$.R(3378593, 'pub', pub, false, false), 'part'), 'Q'), 'data'), Q, false, false);
                            }
                            var key = J$.W(3378745, 'key', J$.T(3378737, {
                                type: J$.T(3378633, 'ecdsa', 21, false),
                                parts: J$.T(3378729, [
                                    J$.T(3378673, {
                                        name: J$.T(3378641, 'curve', 21, false),
                                        data: J$.M(3378665, J$.R(3378649, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3378657, 'curveName', curveName, false, false))
                                    }, 11, false),
                                    J$.T(3378697, {
                                        name: J$.T(3378681, 'Q', 21, false),
                                        data: J$.R(3378689, 'Q', Q, false, false)
                                    }, 11, false),
                                    J$.T(3378721, {
                                        name: J$.T(3378705, 'd', 21, false),
                                        data: J$.R(3378713, 'd', d, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3378777, J$.F(3378769, J$.R(3378753, 'PrivateKey', PrivateKey, false, true), true)(J$.R(3378761, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386097, J$e);
                        } finally {
                            if (J$.Fr(3386105))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8ECDSAPublic(der) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(3379137, arguments.callee, this, arguments);
                            arguments = J$.N(3379145, 'arguments', arguments, true, false, false);
                            der = J$.N(3379153, 'der', der, true, false, false);
                            J$.N(3379161, 'curveName', curveName, false, false, false);
                            J$.N(3379169, 'Q', Q, false, false, false);
                            J$.N(3379177, 'key', key, false, false, false);
                            var curveName = J$.W(3378881, 'curveName', J$.F(3378873, J$.R(3378857, 'readECDSACurve', readECDSACurve, false, true), false)(J$.R(3378865, 'der', der, false, false)), curveName, false, false);
                            J$.M(3378913, J$.R(3378889, 'assert', assert, false, true), 'string', false)(J$.R(3378897, 'curveName', curveName, false, false), J$.T(3378905, 'a known elliptic curve', 21, false));
                            var Q = J$.W(3378969, 'Q', J$.M(3378961, J$.R(3378921, 'der', der, false, false), 'readString', false)(J$.G(3378945, J$.G(3378937, J$.R(3378929, 'asn1', asn1, false, true), 'Ber'), 'BitString'), J$.T(3378953, true, 23, false)), Q, false, false);
                            Q = J$.W(3379001, 'Q', J$.M(3378993, J$.R(3378977, 'utils', utils, false, true), 'ecNormalize', false)(J$.R(3378985, 'Q', Q, false, false)), Q, false, false);
                            var key = J$.W(3379097, 'key', J$.T(3379089, {
                                type: J$.T(3379009, 'ecdsa', 21, false),
                                parts: J$.T(3379081, [
                                    J$.T(3379049, {
                                        name: J$.T(3379017, 'curve', 21, false),
                                        data: J$.M(3379041, J$.R(3379025, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3379033, 'curveName', curveName, false, false))
                                    }, 11, false),
                                    J$.T(3379073, {
                                        name: J$.T(3379057, 'Q', 21, false),
                                        data: J$.R(3379065, 'Q', Q, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3379129, J$.F(3379121, J$.R(3379105, 'Key', Key, false, true), true)(J$.R(3379113, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386113, J$e);
                        } finally {
                            if (J$.Fr(3386121))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8EdDSAPublic(der) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(3379369, arguments.callee, this, arguments);
                            arguments = J$.N(3379377, 'arguments', arguments, true, false, false);
                            der = J$.N(3379385, 'der', der, true, false, false);
                            J$.N(3379393, 'A', A, false, false, false);
                            J$.N(3379401, 'key', key, false, false, false);
                            if (J$.C(157088, J$.B(448354, '===', J$.M(3379193, J$.R(3379185, 'der', der, false, false), 'peek', false)(), J$.T(3379201, 0, 22, false))))
                                J$.M(3379217, J$.R(3379209, 'der', der, false, false), 'readByte', false)();
                            var A = J$.W(3379249, 'A', J$.M(3379241, J$.R(3379225, 'utils', utils, false, true), 'readBitString', false)(J$.R(3379233, 'der', der, false, false)), A, false, false);
                            var key = J$.W(3379329, 'key', J$.T(3379321, {
                                type: J$.T(3379257, 'ed25519', 21, false),
                                parts: J$.T(3379313, [J$.T(3379305, {
                                        name: J$.T(3379265, 'A', 21, false),
                                        data: J$.M(3379297, J$.R(3379273, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(3379281, 'A', A, false, false), J$.T(3379289, 32, 22, false))
                                    }, 11, false)], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3379361, J$.F(3379353, J$.R(3379337, 'Key', Key, false, true), true)(J$.R(3379345, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386129, J$e);
                        } finally {
                            if (J$.Fr(3386137))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8X25519Public(der) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(3379553, arguments.callee, this, arguments);
                            arguments = J$.N(3379561, 'arguments', arguments, true, false, false);
                            der = J$.N(3379569, 'der', der, true, false, false);
                            J$.N(3379577, 'A', A, false, false, false);
                            J$.N(3379585, 'key', key, false, false, false);
                            var A = J$.W(3379433, 'A', J$.M(3379425, J$.R(3379409, 'utils', utils, false, true), 'readBitString', false)(J$.R(3379417, 'der', der, false, false)), A, false, false);
                            var key = J$.W(3379513, 'key', J$.T(3379505, {
                                type: J$.T(3379441, 'curve25519', 21, false),
                                parts: J$.T(3379497, [J$.T(3379489, {
                                        name: J$.T(3379449, 'A', 21, false),
                                        data: J$.M(3379481, J$.R(3379457, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(3379465, 'A', A, false, false), J$.T(3379473, 32, 22, false))
                                    }, 11, false)], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3379545, J$.F(3379537, J$.R(3379521, 'Key', Key, false, true), true)(J$.R(3379529, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386145, J$e);
                        } finally {
                            if (J$.Fr(3386153))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8EdDSAPrivate(der) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(3380073, arguments.callee, this, arguments);
                            arguments = J$.N(3380081, 'arguments', arguments, true, false, false);
                            der = J$.N(3380089, 'der', der, true, false, false);
                            J$.N(3380097, 'k', k, false, false, false);
                            J$.N(3380105, 'A', A, false, false, false);
                            J$.N(3380113, 'key', key, false, false, false);
                            if (J$.C(157096, J$.B(448362, '===', J$.M(3379601, J$.R(3379593, 'der', der, false, false), 'peek', false)(), J$.T(3379609, 0, 22, false))))
                                J$.M(3379625, J$.R(3379617, 'der', der, false, false), 'readByte', false)();
                            J$.M(3379665, J$.R(3379633, 'der', der, false, false), 'readSequence', false)(J$.G(3379657, J$.G(3379649, J$.R(3379641, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            var k = J$.W(3379721, 'k', J$.M(3379713, J$.R(3379673, 'der', der, false, false), 'readString', false)(J$.G(3379697, J$.G(3379689, J$.R(3379681, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3379705, true, 23, false)), k, false, false);
                            k = J$.W(3379761, 'k', J$.M(3379753, J$.R(3379729, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(3379737, 'k', k, false, false), J$.T(3379745, 32, 22, false)), k, false, false);
                            var A;
                            if (J$.C(157104, J$.B(448370, '===', J$.M(3379777, J$.R(3379769, 'der', der, false, false), 'peek', false)(), J$.G(3379801, J$.G(3379793, J$.R(3379785, 'asn1', asn1, false, true), 'Ber'), 'BitString')))) {
                                A = J$.W(3379833, 'A', J$.M(3379825, J$.R(3379809, 'utils', utils, false, true), 'readBitString', false)(J$.R(3379817, 'der', der, false, false)), A, false, false);
                                A = J$.W(3379873, 'A', J$.M(3379865, J$.R(3379841, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(3379849, 'A', A, false, false), J$.T(3379857, 32, 22, false)), A, false, false);
                            } else {
                                A = J$.W(3379905, 'A', J$.M(3379897, J$.R(3379881, 'utils', utils, false, true), 'calculateED25519Public', false)(J$.R(3379889, 'k', k, false, false)), A, false, false);
                            }
                            var key = J$.W(3380033, 'key', J$.T(3380025, {
                                type: J$.T(3379913, 'ed25519', 21, false),
                                parts: J$.T(3380017, [
                                    J$.T(3379961, {
                                        name: J$.T(3379921, 'A', 21, false),
                                        data: J$.M(3379953, J$.R(3379929, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(3379937, 'A', A, false, false), J$.T(3379945, 32, 22, false))
                                    }, 11, false),
                                    J$.T(3380009, {
                                        name: J$.T(3379969, 'k', 21, false),
                                        data: J$.M(3380001, J$.R(3379977, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(3379985, 'k', k, false, false), J$.T(3379993, 32, 22, false))
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3380065, J$.F(3380057, J$.R(3380041, 'PrivateKey', PrivateKey, false, true), true)(J$.R(3380049, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386161, J$e);
                        } finally {
                            if (J$.Fr(3386169))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8X25519Private(der) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(3380489, arguments.callee, this, arguments);
                            arguments = J$.N(3380497, 'arguments', arguments, true, false, false);
                            der = J$.N(3380505, 'der', der, true, false, false);
                            J$.N(3380513, 'k', k, false, false, false);
                            J$.N(3380521, 'A', A, false, false, false);
                            J$.N(3380529, 'key', key, false, false, false);
                            if (J$.C(157112, J$.B(448378, '===', J$.M(3380129, J$.R(3380121, 'der', der, false, false), 'peek', false)(), J$.T(3380137, 0, 22, false))))
                                J$.M(3380153, J$.R(3380145, 'der', der, false, false), 'readByte', false)();
                            J$.M(3380193, J$.R(3380161, 'der', der, false, false), 'readSequence', false)(J$.G(3380185, J$.G(3380177, J$.R(3380169, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            var k = J$.W(3380249, 'k', J$.M(3380241, J$.R(3380201, 'der', der, false, false), 'readString', false)(J$.G(3380225, J$.G(3380217, J$.R(3380209, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3380233, true, 23, false)), k, false, false);
                            k = J$.W(3380289, 'k', J$.M(3380281, J$.R(3380257, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(3380265, 'k', k, false, false), J$.T(3380273, 32, 22, false)), k, false, false);
                            var A = J$.W(3380321, 'A', J$.M(3380313, J$.R(3380297, 'utils', utils, false, true), 'calculateX25519Public', false)(J$.R(3380305, 'k', k, false, false)), A, false, false);
                            var key = J$.W(3380449, 'key', J$.T(3380441, {
                                type: J$.T(3380329, 'curve25519', 21, false),
                                parts: J$.T(3380433, [
                                    J$.T(3380377, {
                                        name: J$.T(3380337, 'A', 21, false),
                                        data: J$.M(3380369, J$.R(3380345, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(3380353, 'A', A, false, false), J$.T(3380361, 32, 22, false))
                                    }, 11, false),
                                    J$.T(3380425, {
                                        name: J$.T(3380385, 'k', 21, false),
                                        data: J$.M(3380417, J$.R(3380393, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(3380401, 'k', k, false, false), J$.T(3380409, 32, 22, false))
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(3380481, J$.F(3380473, J$.R(3380457, 'PrivateKey', PrivateKey, false, true), true)(J$.R(3380465, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3386177, J$e);
                        } finally {
                            if (J$.Fr(3386185))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pkcs8ToBuffer(key) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(3380617, arguments.callee, this, arguments);
                            arguments = J$.N(3380625, 'arguments', arguments, true, false, false);
                            key = J$.N(3380633, 'key', key, true, false, false);
                            J$.N(3380641, 'der', der, false, false, false);
                            var der = J$.W(3380553, 'der', J$.M(3380545, J$.R(3380537, 'asn1', asn1, false, true), 'BerWriter', true)(), der, false, false);
                            J$.F(3380585, J$.R(3380561, 'writePkcs8', writePkcs8, false, true), false)(J$.R(3380569, 'der', der, false, false), J$.R(3380577, 'key', key, false, false));
                            return J$.Rt(3380609, J$.G(3380601, J$.R(3380593, 'der', der, false, false), 'buffer'));
                        } catch (J$e) {
                            J$.Ex(3386193, J$e);
                        } finally {
                            if (J$.Fr(3386201))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8(der, key) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(3381345, arguments.callee, this, arguments);
                            arguments = J$.N(3381353, 'arguments', arguments, true, false, false);
                            der = J$.N(3381361, 'der', der, true, false, false);
                            key = J$.N(3381369, 'key', key, true, false, false);
                            J$.N(3381377, 'sillyInt', sillyInt, false, false, false);
                            J$.M(3380657, J$.R(3380649, 'der', der, false, false), 'startSequence', false)();
                            if (J$.C(157120, J$.M(3380681, J$.R(3380665, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3380673, 'key', key, false, false)))) {
                                var sillyInt = J$.W(3380721, 'sillyInt', J$.M(3380713, J$.R(3380689, 'Buffer', Buffer, false, true), 'from', false)(J$.T(3380705, [J$.T(3380697, 0, 22, false)], 10, false)), sillyInt, false, false);
                                J$.M(3380769, J$.R(3380729, 'der', der, false, false), 'writeBuffer', false)(J$.R(3380737, 'sillyInt', sillyInt, false, false), J$.G(3380761, J$.G(3380753, J$.R(3380745, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            }
                            J$.M(3380785, J$.R(3380777, 'der', der, false, false), 'startSequence', false)();
                            switch (J$.C1(157160, J$.G(3380801, J$.R(3380793, 'key', key, false, false), 'type'))) {
                            case J$.C2(157168, J$.T(3380921, 'rsa', 21, false)):
                                J$.M(3380825, J$.R(3380809, 'der', der, false, false), 'writeOID', false)(J$.T(3380817, '1.2.840.113549.1.1.1', 21, false));
                                if (J$.C(157128, J$.M(3380849, J$.R(3380833, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3380841, 'key', key, false, false))))
                                    J$.F(3380881, J$.R(3380857, 'writePkcs8RSAPrivate', writePkcs8RSAPrivate, false, true), false)(J$.R(3380865, 'key', key, false, false), J$.R(3380873, 'der', der, false, false));
                                else
                                    J$.F(3380913, J$.R(3380889, 'writePkcs8RSAPublic', writePkcs8RSAPublic, false, true), false)(J$.R(3380897, 'key', key, false, false), J$.R(3380905, 'der', der, false, false));
                                break;
                            case J$.C2(157176, J$.T(3381041, 'dsa', 21, false)):
                                J$.M(3380945, J$.R(3380929, 'der', der, false, false), 'writeOID', false)(J$.T(3380937, '1.2.840.10040.4.1', 21, false));
                                if (J$.C(157136, J$.M(3380969, J$.R(3380953, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3380961, 'key', key, false, false))))
                                    J$.F(3381001, J$.R(3380977, 'writePkcs8DSAPrivate', writePkcs8DSAPrivate, false, true), false)(J$.R(3380985, 'key', key, false, false), J$.R(3380993, 'der', der, false, false));
                                else
                                    J$.F(3381033, J$.R(3381009, 'writePkcs8DSAPublic', writePkcs8DSAPublic, false, true), false)(J$.R(3381017, 'key', key, false, false), J$.R(3381025, 'der', der, false, false));
                                break;
                            case J$.C2(157184, J$.T(3381161, 'ecdsa', 21, false)):
                                J$.M(3381065, J$.R(3381049, 'der', der, false, false), 'writeOID', false)(J$.T(3381057, '1.2.840.10045.2.1', 21, false));
                                if (J$.C(157144, J$.M(3381089, J$.R(3381073, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3381081, 'key', key, false, false))))
                                    J$.F(3381121, J$.R(3381097, 'writePkcs8ECDSAPrivate', writePkcs8ECDSAPrivate, false, true), false)(J$.R(3381105, 'key', key, false, false), J$.R(3381113, 'der', der, false, false));
                                else
                                    J$.F(3381153, J$.R(3381129, 'writePkcs8ECDSAPublic', writePkcs8ECDSAPublic, false, true), false)(J$.R(3381137, 'key', key, false, false), J$.R(3381145, 'der', der, false, false));
                                break;
                            case J$.C2(157192, J$.T(3381281, 'ed25519', 21, false)):
                                J$.M(3381185, J$.R(3381169, 'der', der, false, false), 'writeOID', false)(J$.T(3381177, '1.3.101.112', 21, false));
                                if (J$.C(157152, J$.M(3381209, J$.R(3381193, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3381201, 'key', key, false, false))))
                                    throw J$.F(3381241, J$.I(typeof Error === 'undefined' ? Error = J$.R(3381217, 'Error', undefined, true, true) : Error = J$.R(3381217, 'Error', Error, true, true)), true)(J$.B(448386, '+', J$.T(3381225, 'Ed25519 private keys in pkcs8 ', 21, false), J$.T(3381233, 'format are not supported', 21, false)));
                                J$.F(3381273, J$.R(3381249, 'writePkcs8EdDSAPublic', writePkcs8EdDSAPublic, false, true), false)(J$.R(3381257, 'key', key, false, false), J$.R(3381265, 'der', der, false, false));
                                break;
                            default:
                                throw J$.F(3381321, J$.I(typeof Error === 'undefined' ? Error = J$.R(3381289, 'Error', undefined, true, true) : Error = J$.R(3381289, 'Error', Error, true, true)), true)(J$.B(448394, '+', J$.T(3381297, 'Unsupported key type: ', 21, false), J$.G(3381313, J$.R(3381305, 'key', key, false, false), 'type')));
                            }
                            J$.M(3381337, J$.R(3381329, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(3386209, J$e);
                        } finally {
                            if (J$.Fr(3386217))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8RSAPrivate(key, der) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(3382241, arguments.callee, this, arguments);
                            arguments = J$.N(3382249, 'arguments', arguments, true, false, false);
                            key = J$.N(3382257, 'key', key, true, false, false);
                            der = J$.N(3382265, 'der', der, true, false, false);
                            J$.N(3382273, 'version', version, false, false, false);
                            J$.M(3381393, J$.R(3381385, 'der', der, false, false), 'writeNull', false)();
                            J$.M(3381409, J$.R(3381401, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3381449, J$.R(3381417, 'der', der, false, false), 'startSequence', false)(J$.G(3381441, J$.G(3381433, J$.R(3381425, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(3381465, J$.R(3381457, 'der', der, false, false), 'startSequence', false)();
                            var version = J$.W(3381505, 'version', J$.M(3381497, J$.R(3381473, 'Buffer', Buffer, false, true), 'from', false)(J$.T(3381489, [J$.T(3381481, 0, 22, false)], 10, false)), version, false, false);
                            J$.M(3381553, J$.R(3381513, 'der', der, false, false), 'writeBuffer', false)(J$.R(3381521, 'version', version, false, false), J$.G(3381545, J$.G(3381537, J$.R(3381529, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3381625, J$.R(3381561, 'der', der, false, false), 'writeBuffer', false)(J$.G(3381593, J$.G(3381585, J$.G(3381577, J$.R(3381569, 'key', key, false, false), 'part'), 'n'), 'data'), J$.G(3381617, J$.G(3381609, J$.R(3381601, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3381697, J$.R(3381633, 'der', der, false, false), 'writeBuffer', false)(J$.G(3381665, J$.G(3381657, J$.G(3381649, J$.R(3381641, 'key', key, false, false), 'part'), 'e'), 'data'), J$.G(3381689, J$.G(3381681, J$.R(3381673, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3381769, J$.R(3381705, 'der', der, false, false), 'writeBuffer', false)(J$.G(3381737, J$.G(3381729, J$.G(3381721, J$.R(3381713, 'key', key, false, false), 'part'), 'd'), 'data'), J$.G(3381761, J$.G(3381753, J$.R(3381745, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3381841, J$.R(3381777, 'der', der, false, false), 'writeBuffer', false)(J$.G(3381809, J$.G(3381801, J$.G(3381793, J$.R(3381785, 'key', key, false, false), 'part'), 'p'), 'data'), J$.G(3381833, J$.G(3381825, J$.R(3381817, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3381913, J$.R(3381849, 'der', der, false, false), 'writeBuffer', false)(J$.G(3381881, J$.G(3381873, J$.G(3381865, J$.R(3381857, 'key', key, false, false), 'part'), 'q'), 'data'), J$.G(3381905, J$.G(3381897, J$.R(3381889, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            if (J$.C(157208, J$.C(157200, J$.U(448402, '!', J$.G(3381937, J$.G(3381929, J$.R(3381921, 'key', key, false, false), 'part'), 'dmodp'))) ? J$._() : J$.U(448410, '!', J$.G(3381961, J$.G(3381953, J$.R(3381945, 'key', key, false, false), 'part'), 'dmodq'))))
                                J$.M(3381985, J$.R(3381969, 'utils', utils, false, true), 'addRSAMissing', false)(J$.R(3381977, 'key', key, false, false));
                            J$.M(3382057, J$.R(3381993, 'der', der, false, false), 'writeBuffer', false)(J$.G(3382025, J$.G(3382017, J$.G(3382009, J$.R(3382001, 'key', key, false, false), 'part'), 'dmodp'), 'data'), J$.G(3382049, J$.G(3382041, J$.R(3382033, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3382129, J$.R(3382065, 'der', der, false, false), 'writeBuffer', false)(J$.G(3382097, J$.G(3382089, J$.G(3382081, J$.R(3382073, 'key', key, false, false), 'part'), 'dmodq'), 'data'), J$.G(3382121, J$.G(3382113, J$.R(3382105, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3382201, J$.R(3382137, 'der', der, false, false), 'writeBuffer', false)(J$.G(3382169, J$.G(3382161, J$.G(3382153, J$.R(3382145, 'key', key, false, false), 'part'), 'iqmp'), 'data'), J$.G(3382193, J$.G(3382185, J$.R(3382177, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3382217, J$.R(3382209, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3382233, J$.R(3382225, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(3386225, J$e);
                        } finally {
                            if (J$.Fr(3386233))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8RSAPublic(key, der) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(3382569, arguments.callee, this, arguments);
                            arguments = J$.N(3382577, 'arguments', arguments, true, false, false);
                            key = J$.N(3382585, 'key', key, true, false, false);
                            der = J$.N(3382593, 'der', der, true, false, false);
                            J$.M(3382289, J$.R(3382281, 'der', der, false, false), 'writeNull', false)();
                            J$.M(3382305, J$.R(3382297, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3382345, J$.R(3382313, 'der', der, false, false), 'startSequence', false)(J$.G(3382337, J$.G(3382329, J$.R(3382321, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(3382369, J$.R(3382353, 'der', der, false, false), 'writeByte', false)(J$.T(3382361, 0, 22, false));
                            J$.M(3382385, J$.R(3382377, 'der', der, false, false), 'startSequence', false)();
                            J$.M(3382457, J$.R(3382393, 'der', der, false, false), 'writeBuffer', false)(J$.G(3382425, J$.G(3382417, J$.G(3382409, J$.R(3382401, 'key', key, false, false), 'part'), 'n'), 'data'), J$.G(3382449, J$.G(3382441, J$.R(3382433, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3382529, J$.R(3382465, 'der', der, false, false), 'writeBuffer', false)(J$.G(3382497, J$.G(3382489, J$.G(3382481, J$.R(3382473, 'key', key, false, false), 'part'), 'e'), 'data'), J$.G(3382521, J$.G(3382513, J$.R(3382505, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3382545, J$.R(3382537, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3382561, J$.R(3382553, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(3386241, J$e);
                        } finally {
                            if (J$.Fr(3386249))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8DSAPrivate(key, der) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(3382993, arguments.callee, this, arguments);
                            arguments = J$.N(3383001, 'arguments', arguments, true, false, false);
                            key = J$.N(3383009, 'key', key, true, false, false);
                            der = J$.N(3383017, 'der', der, true, false, false);
                            J$.M(3382609, J$.R(3382601, 'der', der, false, false), 'startSequence', false)();
                            J$.M(3382681, J$.R(3382617, 'der', der, false, false), 'writeBuffer', false)(J$.G(3382649, J$.G(3382641, J$.G(3382633, J$.R(3382625, 'key', key, false, false), 'part'), 'p'), 'data'), J$.G(3382673, J$.G(3382665, J$.R(3382657, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3382753, J$.R(3382689, 'der', der, false, false), 'writeBuffer', false)(J$.G(3382721, J$.G(3382713, J$.G(3382705, J$.R(3382697, 'key', key, false, false), 'part'), 'q'), 'data'), J$.G(3382745, J$.G(3382737, J$.R(3382729, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3382825, J$.R(3382761, 'der', der, false, false), 'writeBuffer', false)(J$.G(3382793, J$.G(3382785, J$.G(3382777, J$.R(3382769, 'key', key, false, false), 'part'), 'g'), 'data'), J$.G(3382817, J$.G(3382809, J$.R(3382801, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3382841, J$.R(3382833, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3382857, J$.R(3382849, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3382897, J$.R(3382865, 'der', der, false, false), 'startSequence', false)(J$.G(3382889, J$.G(3382881, J$.R(3382873, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(3382969, J$.R(3382905, 'der', der, false, false), 'writeBuffer', false)(J$.G(3382937, J$.G(3382929, J$.G(3382921, J$.R(3382913, 'key', key, false, false), 'part'), 'x'), 'data'), J$.G(3382961, J$.G(3382953, J$.R(3382945, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3382985, J$.R(3382977, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(3386257, J$e);
                        } finally {
                            if (J$.Fr(3386265))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8DSAPublic(key, der) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(3383441, arguments.callee, this, arguments);
                            arguments = J$.N(3383449, 'arguments', arguments, true, false, false);
                            key = J$.N(3383457, 'key', key, true, false, false);
                            der = J$.N(3383465, 'der', der, true, false, false);
                            J$.M(3383033, J$.R(3383025, 'der', der, false, false), 'startSequence', false)();
                            J$.M(3383105, J$.R(3383041, 'der', der, false, false), 'writeBuffer', false)(J$.G(3383073, J$.G(3383065, J$.G(3383057, J$.R(3383049, 'key', key, false, false), 'part'), 'p'), 'data'), J$.G(3383097, J$.G(3383089, J$.R(3383081, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3383177, J$.R(3383113, 'der', der, false, false), 'writeBuffer', false)(J$.G(3383145, J$.G(3383137, J$.G(3383129, J$.R(3383121, 'key', key, false, false), 'part'), 'q'), 'data'), J$.G(3383169, J$.G(3383161, J$.R(3383153, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3383249, J$.R(3383185, 'der', der, false, false), 'writeBuffer', false)(J$.G(3383217, J$.G(3383209, J$.G(3383201, J$.R(3383193, 'key', key, false, false), 'part'), 'g'), 'data'), J$.G(3383241, J$.G(3383233, J$.R(3383225, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3383265, J$.R(3383257, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3383281, J$.R(3383273, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3383321, J$.R(3383289, 'der', der, false, false), 'startSequence', false)(J$.G(3383313, J$.G(3383305, J$.R(3383297, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(3383345, J$.R(3383329, 'der', der, false, false), 'writeByte', false)(J$.T(3383337, 0, 22, false));
                            J$.M(3383417, J$.R(3383353, 'der', der, false, false), 'writeBuffer', false)(J$.G(3383385, J$.G(3383377, J$.G(3383369, J$.R(3383361, 'key', key, false, false), 'part'), 'y'), 'data'), J$.G(3383409, J$.G(3383401, J$.R(3383393, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3383433, J$.R(3383425, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(3386273, J$e);
                        } finally {
                            if (J$.Fr(3386281))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writeECDSACurve(key, der) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(3384313, arguments.callee, this, arguments);
                            arguments = J$.N(3384321, 'arguments', arguments, true, false, false);
                            key = J$.N(3384329, 'key', key, true, false, false);
                            der = J$.N(3384337, 'der', der, true, false, false);
                            J$.N(3384345, 'curve', curve, false, false, false);
                            J$.N(3384353, 'version', version, false, false, false);
                            J$.N(3384361, 'a', a, false, false, false);
                            J$.N(3384369, 'h', h, false, false, false);
                            var curve = J$.W(3383513, 'curve', J$.G(3383505, J$.G(3383481, J$.R(3383473, 'algs', algs, false, true), 'curves'), J$.G(3383497, J$.R(3383489, 'key', key, false, false), 'curve')), curve, false, false);
                            if (J$.C(157232, J$.G(3383529, J$.R(3383521, 'curve', curve, false, false), 'pkcs8oid'))) {
                                J$.M(3383561, J$.R(3383537, 'der', der, false, false), 'writeOID', false)(J$.G(3383553, J$.R(3383545, 'curve', curve, false, false), 'pkcs8oid'));
                            } else {
                                J$.M(3383577, J$.R(3383569, 'der', der, false, false), 'startSequence', false)();
                                var version = J$.W(3383617, 'version', J$.M(3383609, J$.R(3383585, 'Buffer', Buffer, false, true), 'from', false)(J$.T(3383601, [J$.T(3383593, 1, 22, false)], 10, false)), version, false, false);
                                J$.M(3383665, J$.R(3383625, 'der', der, false, false), 'writeBuffer', false)(J$.R(3383633, 'version', version, false, false), J$.G(3383657, J$.G(3383649, J$.R(3383641, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                J$.M(3383681, J$.R(3383673, 'der', der, false, false), 'startSequence', false)();
                                J$.M(3383705, J$.R(3383689, 'der', der, false, false), 'writeOID', false)(J$.T(3383697, '1.2.840.10045.1.1', 21, false));
                                J$.M(3383761, J$.R(3383713, 'der', der, false, false), 'writeBuffer', false)(J$.G(3383729, J$.R(3383721, 'curve', curve, false, false), 'p'), J$.G(3383753, J$.G(3383745, J$.R(3383737, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                J$.M(3383777, J$.R(3383769, 'der', der, false, false), 'endSequence', false)();
                                J$.M(3383793, J$.R(3383785, 'der', der, false, false), 'startSequence', false)();
                                var a = J$.W(3383817, 'a', J$.G(3383809, J$.R(3383801, 'curve', curve, false, false), 'p'), a, false, false);
                                if (J$.C(157216, J$.B(448418, '===', J$.G(3383841, J$.R(3383825, 'a', a, false, false), J$.T(3383833, 0, 22, false)), J$.T(3383849, 0, 22, false))))
                                    a = J$.W(3383881, 'a', J$.M(3383873, J$.R(3383857, 'a', a, false, false), 'slice', false)(J$.T(3383865, 1, 22, false)), a, false, false);
                                J$.M(3383929, J$.R(3383889, 'der', der, false, false), 'writeBuffer', false)(J$.R(3383897, 'a', a, false, false), J$.G(3383921, J$.G(3383913, J$.R(3383905, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                                J$.M(3383985, J$.R(3383937, 'der', der, false, false), 'writeBuffer', false)(J$.G(3383953, J$.R(3383945, 'curve', curve, false, false), 'b'), J$.G(3383977, J$.G(3383969, J$.R(3383961, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                                J$.M(3384041, J$.R(3383993, 'der', der, false, false), 'writeBuffer', false)(J$.G(3384009, J$.R(3384001, 'curve', curve, false, false), 's'), J$.G(3384033, J$.G(3384025, J$.R(3384017, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                                J$.M(3384057, J$.R(3384049, 'der', der, false, false), 'endSequence', false)();
                                J$.M(3384113, J$.R(3384065, 'der', der, false, false), 'writeBuffer', false)(J$.G(3384081, J$.R(3384073, 'curve', curve, false, false), 'G'), J$.G(3384105, J$.G(3384097, J$.R(3384089, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                                J$.M(3384169, J$.R(3384121, 'der', der, false, false), 'writeBuffer', false)(J$.G(3384137, J$.R(3384129, 'curve', curve, false, false), 'n'), J$.G(3384161, J$.G(3384153, J$.R(3384145, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                var h = J$.W(3384193, 'h', J$.G(3384185, J$.R(3384177, 'curve', curve, false, false), 'h'), h, false, false);
                                if (J$.C(157224, J$.U(448426, '!', J$.R(3384201, 'h', h, false, false)))) {
                                    h = J$.W(3384241, 'h', J$.M(3384233, J$.R(3384209, 'Buffer', Buffer, false, true), 'from', false)(J$.T(3384225, [J$.T(3384217, 1, 22, false)], 10, false)), h, false, false);
                                }
                                J$.M(3384289, J$.R(3384249, 'der', der, false, false), 'writeBuffer', false)(J$.R(3384257, 'h', h, false, false), J$.G(3384281, J$.G(3384273, J$.R(3384265, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                J$.M(3384305, J$.R(3384297, 'der', der, false, false), 'endSequence', false)();
                            }
                        } catch (J$e) {
                            J$.Ex(3386289, J$e);
                        } finally {
                            if (J$.Fr(3386297))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8ECDSAPublic(key, der) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(3384537, arguments.callee, this, arguments);
                            arguments = J$.N(3384545, 'arguments', arguments, true, false, false);
                            key = J$.N(3384553, 'key', key, true, false, false);
                            der = J$.N(3384561, 'der', der, true, false, false);
                            J$.N(3384569, 'Q', Q, false, false, false);
                            J$.F(3384401, J$.R(3384377, 'writeECDSACurve', writeECDSACurve, false, true), false)(J$.R(3384385, 'key', key, false, false), J$.R(3384393, 'der', der, false, false));
                            J$.M(3384417, J$.R(3384409, 'der', der, false, false), 'endSequence', false)();
                            var Q = J$.W(3384481, 'Q', J$.M(3384473, J$.R(3384425, 'utils', utils, false, true), 'ecNormalize', false)(J$.G(3384457, J$.G(3384449, J$.G(3384441, J$.R(3384433, 'key', key, false, false), 'part'), 'Q'), 'data'), J$.T(3384465, true, 23, false)), Q, false, false);
                            J$.M(3384529, J$.R(3384489, 'der', der, false, false), 'writeBuffer', false)(J$.R(3384497, 'Q', Q, false, false), J$.G(3384521, J$.G(3384513, J$.R(3384505, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                        } catch (J$e) {
                            J$.Ex(3386305, J$e);
                        } finally {
                            if (J$.Fr(3386313))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8ECDSAPrivate(key, der) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(3385025, arguments.callee, this, arguments);
                            arguments = J$.N(3385033, 'arguments', arguments, true, false, false);
                            key = J$.N(3385041, 'key', key, true, false, false);
                            der = J$.N(3385049, 'der', der, true, false, false);
                            J$.N(3385057, 'version', version, false, false, false);
                            J$.N(3385065, 'Q', Q, false, false, false);
                            J$.F(3384601, J$.R(3384577, 'writeECDSACurve', writeECDSACurve, false, true), false)(J$.R(3384585, 'key', key, false, false), J$.R(3384593, 'der', der, false, false));
                            J$.M(3384617, J$.R(3384609, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3384657, J$.R(3384625, 'der', der, false, false), 'startSequence', false)(J$.G(3384649, J$.G(3384641, J$.R(3384633, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(3384673, J$.R(3384665, 'der', der, false, false), 'startSequence', false)();
                            var version = J$.W(3384713, 'version', J$.M(3384705, J$.R(3384681, 'Buffer', Buffer, false, true), 'from', false)(J$.T(3384697, [J$.T(3384689, 1, 22, false)], 10, false)), version, false, false);
                            J$.M(3384761, J$.R(3384721, 'der', der, false, false), 'writeBuffer', false)(J$.R(3384729, 'version', version, false, false), J$.G(3384753, J$.G(3384745, J$.R(3384737, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(3384833, J$.R(3384769, 'der', der, false, false), 'writeBuffer', false)(J$.G(3384801, J$.G(3384793, J$.G(3384785, J$.R(3384777, 'key', key, false, false), 'part'), 'd'), 'data'), J$.G(3384825, J$.G(3384817, J$.R(3384809, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(3384857, J$.R(3384841, 'der', der, false, false), 'startSequence', false)(J$.T(3384849, 161, 22, false));
                            var Q = J$.W(3384921, 'Q', J$.M(3384913, J$.R(3384865, 'utils', utils, false, true), 'ecNormalize', false)(J$.G(3384897, J$.G(3384889, J$.G(3384881, J$.R(3384873, 'key', key, false, false), 'part'), 'Q'), 'data'), J$.T(3384905, true, 23, false)), Q, false, false);
                            J$.M(3384969, J$.R(3384929, 'der', der, false, false), 'writeBuffer', false)(J$.R(3384937, 'Q', Q, false, false), J$.G(3384961, J$.G(3384953, J$.R(3384945, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(3384985, J$.R(3384977, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3385001, J$.R(3384993, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3385017, J$.R(3385009, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(3386321, J$e);
                        } finally {
                            if (J$.Fr(3386329))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8EdDSAPublic(key, der) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(3385145, arguments.callee, this, arguments);
                            arguments = J$.N(3385153, 'arguments', arguments, true, false, false);
                            key = J$.N(3385161, 'key', key, true, false, false);
                            der = J$.N(3385169, 'der', der, true, false, false);
                            J$.M(3385081, J$.R(3385073, 'der', der, false, false), 'endSequence', false)();
                            J$.M(3385137, J$.R(3385089, 'utils', utils, false, true), 'writeBitString', false)(J$.R(3385097, 'der', der, false, false), J$.G(3385129, J$.G(3385121, J$.G(3385113, J$.R(3385105, 'key', key, false, false), 'part'), 'A'), 'data'));
                        } catch (J$e) {
                            J$.Ex(3386337, J$e);
                        } finally {
                            if (J$.Fr(3386345))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8EdDSAPrivate(key, der) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(3385361, arguments.callee, this, arguments);
                            arguments = J$.N(3385369, 'arguments', arguments, true, false, false);
                            key = J$.N(3385377, 'key', key, true, false, false);
                            der = J$.N(3385385, 'der', der, true, false, false);
                            J$.N(3385393, 'k', k, false, false, false);
                            J$.M(3385185, J$.R(3385177, 'der', der, false, false), 'endSequence', false)();
                            var k = J$.W(3385249, 'k', J$.M(3385241, J$.R(3385193, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(3385225, J$.G(3385217, J$.G(3385209, J$.R(3385201, 'key', key, false, false), 'part'), 'k'), 'data'), J$.T(3385233, true, 23, false)), k, false, false);
                            J$.M(3385289, J$.R(3385257, 'der', der, false, false), 'startSequence', false)(J$.G(3385281, J$.G(3385273, J$.R(3385265, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(3385337, J$.R(3385297, 'der', der, false, false), 'writeBuffer', false)(J$.R(3385305, 'k', k, false, false), J$.G(3385329, J$.G(3385321, J$.R(3385313, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(3385353, J$.R(3385345, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(3386353, J$e);
                        } finally {
                            if (J$.Fr(3386361))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(3385417, '_typeof', J$.T(3385409, _typeof, 12, false), true, false, false);
            J$.N(3385425, 'assert', assert, false, false, false);
            J$.N(3385433, 'asn1', asn1, false, false, false);
            J$.N(3385441, 'Buffer', Buffer, false, false, false);
            J$.N(3385449, 'algs', algs, false, false, false);
            J$.N(3385457, 'utils', utils, false, false, false);
            J$.N(3385465, 'Key', Key, false, false, false);
            J$.N(3385473, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(3385481, 'pem', pem, false, false, false);
            read = J$.N(3385497, 'read', J$.T(3385489, read, 12, false), true, false, false);
            write = J$.N(3385513, 'write', J$.T(3385505, write, 12, false), true, false, false);
            readMPInt = J$.N(3385529, 'readMPInt', J$.T(3385521, readMPInt, 12, false), true, false, false);
            readPkcs8 = J$.N(3385545, 'readPkcs8', J$.T(3385537, readPkcs8, 12, false), true, false, false);
            readPkcs8RSAPublic = J$.N(3385561, 'readPkcs8RSAPublic', J$.T(3385553, readPkcs8RSAPublic, 12, false), true, false, false);
            readPkcs8RSAPrivate = J$.N(3385577, 'readPkcs8RSAPrivate', J$.T(3385569, readPkcs8RSAPrivate, 12, false), true, false, false);
            readPkcs8DSAPublic = J$.N(3385593, 'readPkcs8DSAPublic', J$.T(3385585, readPkcs8DSAPublic, 12, false), true, false, false);
            readPkcs8DSAPrivate = J$.N(3385609, 'readPkcs8DSAPrivate', J$.T(3385601, readPkcs8DSAPrivate, 12, false), true, false, false);
            readECDSACurve = J$.N(3385625, 'readECDSACurve', J$.T(3385617, readECDSACurve, 12, false), true, false, false);
            readPkcs8ECDSAPrivate = J$.N(3385641, 'readPkcs8ECDSAPrivate', J$.T(3385633, readPkcs8ECDSAPrivate, 12, false), true, false, false);
            readPkcs8ECDSAPublic = J$.N(3385657, 'readPkcs8ECDSAPublic', J$.T(3385649, readPkcs8ECDSAPublic, 12, false), true, false, false);
            readPkcs8EdDSAPublic = J$.N(3385673, 'readPkcs8EdDSAPublic', J$.T(3385665, readPkcs8EdDSAPublic, 12, false), true, false, false);
            readPkcs8X25519Public = J$.N(3385689, 'readPkcs8X25519Public', J$.T(3385681, readPkcs8X25519Public, 12, false), true, false, false);
            readPkcs8EdDSAPrivate = J$.N(3385705, 'readPkcs8EdDSAPrivate', J$.T(3385697, readPkcs8EdDSAPrivate, 12, false), true, false, false);
            readPkcs8X25519Private = J$.N(3385721, 'readPkcs8X25519Private', J$.T(3385713, readPkcs8X25519Private, 12, false), true, false, false);
            pkcs8ToBuffer = J$.N(3385737, 'pkcs8ToBuffer', J$.T(3385729, pkcs8ToBuffer, 12, false), true, false, false);
            writePkcs8 = J$.N(3385753, 'writePkcs8', J$.T(3385745, writePkcs8, 12, false), true, false, false);
            writePkcs8RSAPrivate = J$.N(3385769, 'writePkcs8RSAPrivate', J$.T(3385761, writePkcs8RSAPrivate, 12, false), true, false, false);
            writePkcs8RSAPublic = J$.N(3385785, 'writePkcs8RSAPublic', J$.T(3385777, writePkcs8RSAPublic, 12, false), true, false, false);
            writePkcs8DSAPrivate = J$.N(3385801, 'writePkcs8DSAPrivate', J$.T(3385793, writePkcs8DSAPrivate, 12, false), true, false, false);
            writePkcs8DSAPublic = J$.N(3385817, 'writePkcs8DSAPublic', J$.T(3385809, writePkcs8DSAPublic, 12, false), true, false, false);
            writeECDSACurve = J$.N(3385833, 'writeECDSACurve', J$.T(3385825, writeECDSACurve, 12, false), true, false, false);
            writePkcs8ECDSAPublic = J$.N(3385849, 'writePkcs8ECDSAPublic', J$.T(3385841, writePkcs8ECDSAPublic, 12, false), true, false, false);
            writePkcs8ECDSAPrivate = J$.N(3385865, 'writePkcs8ECDSAPrivate', J$.T(3385857, writePkcs8ECDSAPrivate, 12, false), true, false, false);
            writePkcs8EdDSAPublic = J$.N(3385881, 'writePkcs8EdDSAPublic', J$.T(3385873, writePkcs8EdDSAPublic, 12, false), true, false, false);
            writePkcs8EdDSAPrivate = J$.N(3385897, 'writePkcs8EdDSAPrivate', J$.T(3385889, writePkcs8EdDSAPrivate, 12, false), true, false, false);
            J$.T(3371745, 'use strict', 21, false);
            J$.F(3371769, J$.I(typeof require === 'undefined' ? require = J$.R(3371753, 'require', undefined, true, true) : require = J$.R(3371753, 'require', require, true, true)), false)(J$.T(3371761, 'core-js/modules/es.symbol', 21, false));
            J$.F(3371793, J$.I(typeof require === 'undefined' ? require = J$.R(3371777, 'require', undefined, true, true) : require = J$.R(3371777, 'require', require, true, true)), false)(J$.T(3371785, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(3371817, J$.I(typeof require === 'undefined' ? require = J$.R(3371801, 'require', undefined, true, true) : require = J$.R(3371801, 'require', require, true, true)), false)(J$.T(3371809, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(3371841, J$.I(typeof require === 'undefined' ? require = J$.R(3371825, 'require', undefined, true, true) : require = J$.R(3371825, 'require', require, true, true)), false)(J$.T(3371833, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(3371865, J$.I(typeof require === 'undefined' ? require = J$.R(3371849, 'require', undefined, true, true) : require = J$.R(3371849, 'require', require, true, true)), false)(J$.T(3371857, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3371889, J$.I(typeof require === 'undefined' ? require = J$.R(3371873, 'require', undefined, true, true) : require = J$.R(3371873, 'require', require, true, true)), false)(J$.T(3371881, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(3371913, J$.I(typeof require === 'undefined' ? require = J$.R(3371897, 'require', undefined, true, true) : require = J$.R(3371897, 'require', require, true, true)), false)(J$.T(3371905, 'core-js/modules/es.object.keys', 21, false));
            J$.F(3371937, J$.I(typeof require === 'undefined' ? require = J$.R(3371921, 'require', undefined, true, true) : require = J$.R(3371921, 'require', require, true, true)), false)(J$.T(3371929, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3371961, J$.I(typeof require === 'undefined' ? require = J$.R(3371945, 'require', undefined, true, true) : require = J$.R(3371945, 'require', require, true, true)), false)(J$.T(3371953, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(3371985, J$.I(typeof require === 'undefined' ? require = J$.R(3371969, 'require', undefined, true, true) : require = J$.R(3371969, 'require', require, true, true)), false)(J$.T(3371977, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(3372009, J$.I(typeof require === 'undefined' ? require = J$.R(3371993, 'require', undefined, true, true) : require = J$.R(3371993, 'require', require, true, true)), false)(J$.T(3372001, 'core-js/modules/web.dom-collections.iterator', 21, false));
            J$.P(3372377, J$.I(typeof module === 'undefined' ? module = J$.R(3372305, 'module', undefined, true, true) : module = J$.R(3372305, 'module', module, true, true)), 'exports', J$.T(3372369, {
                read: J$.R(3372313, 'read', read, false, true),
                readPkcs8: J$.R(3372321, 'readPkcs8', readPkcs8, false, true),
                write: J$.R(3372329, 'write', write, false, true),
                writePkcs8: J$.R(3372337, 'writePkcs8', writePkcs8, false, true),
                pkcs8ToBuffer: J$.R(3372345, 'pkcs8ToBuffer', pkcs8ToBuffer, false, true),
                readECDSACurve: J$.R(3372353, 'readECDSACurve', readECDSACurve, false, true),
                writeECDSACurve: J$.R(3372361, 'writeECDSACurve', writeECDSACurve, false, true)
            }, 11, false));
            var assert = J$.W(3372409, 'assert', J$.F(3372401, J$.I(typeof require === 'undefined' ? require = J$.R(3372385, 'require', undefined, true, true) : require = J$.R(3372385, 'require', require, true, true)), false)(J$.T(3372393, 'assert-plus', 21, false)), assert, false, true);
            var asn1 = J$.W(3372441, 'asn1', J$.F(3372433, J$.I(typeof require === 'undefined' ? require = J$.R(3372417, 'require', undefined, true, true) : require = J$.R(3372417, 'require', require, true, true)), false)(J$.T(3372425, 'asn1', 21, false)), asn1, false, true);
            var Buffer = J$.W(3372481, 'Buffer', J$.G(3372473, J$.F(3372465, J$.I(typeof require === 'undefined' ? require = J$.R(3372449, 'require', undefined, true, true) : require = J$.R(3372449, 'require', require, true, true)), false)(J$.T(3372457, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(3372513, 'algs', J$.F(3372505, J$.I(typeof require === 'undefined' ? require = J$.R(3372489, 'require', undefined, true, true) : require = J$.R(3372489, 'require', require, true, true)), false)(J$.T(3372497, '../algs', 21, false)), algs, false, true);
            var utils = J$.W(3372545, 'utils', J$.F(3372537, J$.I(typeof require === 'undefined' ? require = J$.R(3372521, 'require', undefined, true, true) : require = J$.R(3372521, 'require', require, true, true)), false)(J$.T(3372529, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(3372577, 'Key', J$.F(3372569, J$.I(typeof require === 'undefined' ? require = J$.R(3372553, 'require', undefined, true, true) : require = J$.R(3372553, 'require', require, true, true)), false)(J$.T(3372561, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(3372609, 'PrivateKey', J$.F(3372601, J$.I(typeof require === 'undefined' ? require = J$.R(3372585, 'require', undefined, true, true) : require = J$.R(3372585, 'require', require, true, true)), false)(J$.T(3372593, '../private-key', 21, false)), PrivateKey, false, true);
            var pem = J$.W(3372641, 'pem', J$.F(3372633, J$.I(typeof require === 'undefined' ? require = J$.R(3372617, 'require', undefined, true, true) : require = J$.R(3372617, 'require', require, true, true)), false)(J$.T(3372625, './pem', 21, false)), pem, false, true);
        } catch (J$e) {
            J$.Ex(3386369, J$e);
        } finally {
            if (J$.Sr(3386377))
                continue jalangiLabel29;
            else
                break jalangiLabel29;
        }
    }
// JALANGI DO NOT INSTRUMENT

