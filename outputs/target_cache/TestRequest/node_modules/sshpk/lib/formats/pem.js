J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(3362033, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/sshpk/lib/formats/pem.js');
            function read(buf, options, forceType) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3360537, arguments.callee, this, arguments);
                            arguments = J$.N(3360545, 'arguments', arguments, true, false, false);
                            buf = J$.N(3360553, 'buf', buf, true, false, false);
                            options = J$.N(3360561, 'options', options, true, false, false);
                            forceType = J$.N(3360569, 'forceType', forceType, true, false, false);
                            J$.N(3360577, 'input', input, false, false, false);
                            J$.N(3360585, 'lines', lines, false, false, false);
                            J$.N(3360593, 'm', m, false, false, false);
                            J$.N(3360601, 'si', si, false, false, false);
                            J$.N(3360609, 'm2', m2, false, false, false);
                            J$.N(3360617, 'ei', ei, false, false, false);
                            J$.N(3360625, 'type', type, false, false, false);
                            J$.N(3360633, 'alg', alg, false, false, false);
                            J$.N(3360641, 'headers', headers, false, false, false);
                            J$.N(3360649, 'cipher', cipher, false, false, false);
                            J$.N(3360657, 'key', key, false, false, false);
                            J$.N(3360665, 'iv', iv, false, false, false);
                            J$.N(3360673, 'parts', parts, false, false, false);
                            J$.N(3360681, 'eder', eder, false, false, false);
                            J$.N(3360689, 'pbesEnd', pbesEnd, false, false, false);
                            J$.N(3360697, 'method', method, false, false, false);
                            J$.N(3360705, 'kdfEnd', kdfEnd, false, false, false);
                            J$.N(3360713, 'kdfOid', kdfOid, false, false, false);
                            J$.N(3360721, 'salt', salt, false, false, false);
                            J$.N(3360729, 'iterations', iterations, false, false, false);
                            J$.N(3360737, 'hashAlg', hashAlg, false, false, false);
                            J$.N(3360745, 'hashAlgOid', hashAlgOid, false, false, false);
                            J$.N(3360753, 'cipherOid', cipherOid, false, false, false);
                            J$.N(3360761, 'cinfo', cinfo, false, false, false);
                            J$.N(3360769, 'cipherStream', cipherStream, false, false, false);
                            J$.N(3360777, 'chunk', chunk, false, false, false);
                            J$.N(3360785, 'chunks', chunks, false, false, false);
                            J$.N(3360793, 'der', der, false, false, false);
                            var input = J$.W(3357057, 'input', J$.R(3357049, 'buf', buf, false, false), input, false, false);
                            if (J$.C(156240, J$.B(447330, '!==', J$.U(447322, 'typeof', J$.R(3357065, 'buf', buf, false, false)), J$.T(3357073, 'string', 21, false)))) {
                                J$.M(3357105, J$.R(3357081, 'assert', assert, false, true), 'buffer', false)(J$.R(3357089, 'buf', buf, false, false), J$.T(3357097, 'buf', 21, false));
                                buf = J$.W(3357137, 'buf', J$.M(3357129, J$.R(3357113, 'buf', buf, false, false), 'toString', false)(J$.T(3357121, 'ascii', 21, false)), buf, false, false);
                            }
                            var lines = J$.W(3357177, 'lines', J$.M(3357169, J$.M(3357153, J$.R(3357145, 'buf', buf, false, false), 'trim', false)(), 'split', false)(J$.T(3357161, /[\r\n]+/g, 14, false)), lines, false, false);
                            var m;
                            var si = J$.W(3357193, 'si', J$.U(447338, '-', J$.T(3357185, 1, 22, false)), si, false, false);
                            while (J$.C(156256, J$.C(156248, J$.U(447346, '!', J$.R(3357201, 'm', m, false, false))) ? J$.B(447354, '<', J$.R(3357209, 'si', si, false, false), J$.G(3357225, J$.R(3357217, 'lines', lines, false, false), 'length')) : J$._())) {
                                m = J$.W(3357281, 'm', J$.M(3357273, J$.G(3357257, J$.R(3357233, 'lines', lines, false, false), si = J$.W(3357249, 'si', J$.B(447370, '+', J$.U(447362, '+', J$.R(3357241, 'si', si, false, false)), 1), si, false, false)), 'match', false)(J$.T(3357265, /[-]+[ ]*BEGIN ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/, 14, false)), m, false, false);
                            }
                            J$.M(3357313, J$.R(3357289, 'assert', assert, false, true), 'ok', false)(J$.R(3357297, 'm', m, false, false), J$.T(3357305, 'invalid PEM header', 21, false));
                            var m2;
                            var ei = J$.W(3357337, 'ei', J$.G(3357329, J$.R(3357321, 'lines', lines, false, false), 'length'), ei, false, false);
                            while (J$.C(156272, J$.C(156264, J$.U(447378, '!', J$.R(3357345, 'm2', m2, false, false))) ? J$.B(447386, '>', J$.R(3357353, 'ei', ei, false, false), J$.T(3357361, 0, 22, false)) : J$._())) {
                                m2 = J$.W(3357417, 'm2', J$.M(3357409, J$.G(3357393, J$.R(3357369, 'lines', lines, false, false), ei = J$.W(3357385, 'ei', J$.B(447402, '-', J$.U(447394, '+', J$.R(3357377, 'ei', ei, false, false)), 1), ei, false, false)), 'match', false)(J$.T(3357401, /[-]+[ ]*END ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/, 14, false)), m2, false, false);
                            }
                            J$.M(3357449, J$.R(3357425, 'assert', assert, false, true), 'ok', false)(J$.R(3357433, 'm2', m2, false, false), J$.T(3357441, 'invalid PEM footer', 21, false));
                            J$.M(3357513, J$.R(3357457, 'assert', assert, false, true), 'equal', false)(J$.G(3357481, J$.R(3357465, 'm', m, false, false), J$.T(3357473, 2, 22, false)), J$.G(3357505, J$.R(3357489, 'm2', m2, false, false), J$.T(3357497, 2, 22, false)));
                            var type = J$.W(3357553, 'type', J$.M(3357545, J$.G(3357537, J$.R(3357521, 'm', m, false, false), J$.T(3357529, 2, 22, false)), 'toLowerCase', false)(), type, false, false);
                            var alg;
                            if (J$.C(156280, J$.G(3357577, J$.R(3357561, 'm', m, false, false), J$.T(3357569, 1, 22, false)))) {
                                J$.M(3357649, J$.R(3357585, 'assert', assert, false, true), 'equal', false)(J$.G(3357609, J$.R(3357593, 'm', m, false, false), J$.T(3357601, 1, 22, false)), J$.G(3357633, J$.R(3357617, 'm2', m2, false, false), J$.T(3357625, 1, 22, false)), J$.T(3357641, 'PEM header and footer mismatch', 21, false));
                                alg = J$.W(3357689, 'alg', J$.M(3357681, J$.G(3357673, J$.R(3357657, 'm', m, false, false), J$.T(3357665, 1, 22, false)), 'trim', false)(), alg, false, false);
                            }
                            lines = J$.W(3357737, 'lines', J$.M(3357729, J$.R(3357697, 'lines', lines, false, false), 'slice', false)(J$.R(3357705, 'si', si, false, false), J$.B(447410, '+', J$.R(3357713, 'ei', ei, false, false), J$.T(3357721, 1, 22, false))), lines, false, false);
                            var headers = J$.W(3357753, 'headers', J$.T(3357745, {}, 11, false), headers, false, false);
                            while (J$.C(156296, J$.T(3357761, true, 23, false))) {
                                lines = J$.W(3357793, 'lines', J$.M(3357785, J$.R(3357769, 'lines', lines, false, false), 'slice', false)(J$.T(3357777, 1, 22, false)), lines, false, false);
                                m = J$.W(3357841, 'm', J$.M(3357833, J$.G(3357817, J$.R(3357801, 'lines', lines, false, false), J$.T(3357809, 0, 22, false)), 'match', false)(J$.T(3357825, /^([A-Za-z0-9-]+): (.+)$/, 14, false)), m, false, false);
                                if (J$.C(156288, J$.U(447418, '!', J$.R(3357849, 'm', m, false, false))))
                                    break;
                                J$.P(3357921, J$.R(3357857, 'headers', headers, false, false), J$.M(3357889, J$.G(3357881, J$.R(3357865, 'm', m, false, false), J$.T(3357873, 1, 22, false)), 'toLowerCase', false)(), J$.G(3357913, J$.R(3357897, 'm', m, false, false), J$.T(3357905, 2, 22, false)));
                            }
                            lines = J$.W(3357977, 'lines', J$.M(3357969, J$.M(3357953, J$.R(3357929, 'lines', lines, false, false), 'slice', false)(J$.T(3357937, 0, 22, false), J$.U(447426, '-', J$.T(3357945, 1, 22, false))), 'join', false)(J$.T(3357961, '', 21, false)), lines, false, false);
                            buf = J$.W(3358017, 'buf', J$.M(3358009, J$.R(3357985, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3357993, 'lines', lines, false, false), J$.T(3358001, 'base64', 21, false)), buf, false, false);
                            var cipher, key, iv;
                            if (J$.C(156336, J$.G(3358041, J$.R(3358025, 'headers', headers, false, false), J$.T(3358033, 'proc-type', 21, false)))) {
                                var parts = J$.W(3358089, 'parts', J$.M(3358081, J$.G(3358065, J$.R(3358049, 'headers', headers, false, false), J$.T(3358057, 'proc-type', 21, false)), 'split', false)(J$.T(3358073, ',', 21, false)), parts, false, false);
                                if (J$.C(156328, J$.C(156304, J$.B(447434, '===', J$.G(3358113, J$.R(3358097, 'parts', parts, false, false), J$.T(3358105, 0, 22, false)), J$.T(3358121, '4', 21, false))) ? J$.B(447442, '===', J$.G(3358145, J$.R(3358129, 'parts', parts, false, false), J$.T(3358137, 1, 22, false)), J$.T(3358153, 'ENCRYPTED', 21, false)) : J$._())) {
                                    if (J$.C(156312, J$.B(447458, '===', J$.U(447450, 'typeof', J$.G(3358169, J$.R(3358161, 'options', options, false, false), 'passphrase')), J$.T(3358177, 'string', 21, false)))) {
                                        J$.P(3358233, J$.R(3358185, 'options', options, false, false), 'passphrase', J$.M(3358225, J$.R(3358193, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3358209, J$.R(3358201, 'options', options, false, false), 'passphrase'), J$.T(3358217, 'utf-8', 21, false)));
                                    }
                                    if (J$.C(156320, J$.U(447466, '!', J$.M(3358265, J$.R(3358241, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(3358257, J$.R(3358249, 'options', options, false, false), 'passphrase'))))) {
                                        throw J$.M(3358305, J$.R(3358273, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(3358289, J$.R(3358281, 'options', options, false, false), 'filename'), J$.T(3358297, 'PEM', 21, false));
                                    } else {
                                        parts = J$.W(3358353, 'parts', J$.M(3358345, J$.G(3358329, J$.R(3358313, 'headers', headers, false, false), J$.T(3358321, 'dek-info', 21, false)), 'split', false)(J$.T(3358337, ',', 21, false)), parts, false, false);
                                        J$.M(3358393, J$.R(3358361, 'assert', assert, false, true), 'ok', false)(J$.B(447474, '===', J$.G(3358377, J$.R(3358369, 'parts', parts, false, false), 'length'), J$.T(3358385, 2, 22, false)));
                                        cipher = J$.W(3358433, 'cipher', J$.M(3358425, J$.G(3358417, J$.R(3358401, 'parts', parts, false, false), J$.T(3358409, 0, 22, false)), 'toLowerCase', false)(), cipher, false, false);
                                        iv = J$.W(3358489, 'iv', J$.M(3358481, J$.R(3358441, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3358465, J$.R(3358449, 'parts', parts, false, false), J$.T(3358457, 1, 22, false)), J$.T(3358473, 'hex', 21, false)), iv, false, false);
                                        key = J$.W(3358561, 'key', J$.G(3358553, J$.M(3358545, J$.R(3358497, 'utils', utils, false, true), 'opensslKeyDeriv', false)(J$.R(3358505, 'cipher', cipher, false, false), J$.R(3358513, 'iv', iv, false, false), J$.G(3358529, J$.R(3358521, 'options', options, false, false), 'passphrase'), J$.T(3358537, 1, 22, false)), 'key'), key, false, false);
                                    }
                                }
                            }
                            if (J$.C(156408, J$.C(156344, J$.R(3358569, 'alg', alg, false, false)) ? J$.B(447482, '===', J$.M(3358585, J$.R(3358577, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(3358593, 'encrypted', 21, false)) : J$._())) {
                                var eder = J$.W(3358625, 'eder', J$.M(3358617, J$.R(3358601, 'asn1', asn1, false, true), 'BerReader', true)(J$.R(3358609, 'buf', buf, false, false)), eder, false, false);
                                var pbesEnd;
                                J$.M(3358641, J$.R(3358633, 'eder', eder, false, false), 'readSequence', false)();
                                J$.M(3358657, J$.R(3358649, 'eder', eder, false, false), 'readSequence', false)();
                                pbesEnd = J$.W(3358697, 'pbesEnd', J$.B(447490, '+', J$.G(3358673, J$.R(3358665, 'eder', eder, false, false), 'offset'), J$.G(3358689, J$.R(3358681, 'eder', eder, false, false), 'length')), pbesEnd, false, false);
                                var method = J$.W(3358721, 'method', J$.M(3358713, J$.R(3358705, 'eder', eder, false, false), 'readOID', false)(), method, false, false);
                                if (J$.C(156352, J$.B(447498, '!==', J$.R(3358729, 'method', method, false, false), J$.R(3358737, 'OID_PBES2', OID_PBES2, false, true)))) {
                                    throw J$.F(3358777, J$.I(typeof Error === 'undefined' ? Error = J$.R(3358745, 'Error', undefined, true, true) : Error = J$.R(3358745, 'Error', Error, true, true)), true)(J$.B(447514, '+', J$.B(447506, '+', J$.T(3358753, 'Unsupported PEM/PKCS8 encryption ', 21, false), J$.T(3358761, 'scheme: ', 21, false)), J$.R(3358769, 'method', method, false, false)));
                                }
                                J$.M(3358793, J$.R(3358785, 'eder', eder, false, false), 'readSequence', false)();
                                J$.M(3358809, J$.R(3358801, 'eder', eder, false, false), 'readSequence', false)();
                                var kdfEnd = J$.W(3358849, 'kdfEnd', J$.B(447522, '+', J$.G(3358825, J$.R(3358817, 'eder', eder, false, false), 'offset'), J$.G(3358841, J$.R(3358833, 'eder', eder, false, false), 'length')), kdfEnd, false, false);
                                var kdfOid = J$.W(3358873, 'kdfOid', J$.M(3358865, J$.R(3358857, 'eder', eder, false, false), 'readOID', false)(), kdfOid, false, false);
                                if (J$.C(156360, J$.B(447530, '!==', J$.R(3358881, 'kdfOid', kdfOid, false, false), J$.R(3358889, 'OID_PBKDF2', OID_PBKDF2, false, true))))
                                    throw J$.F(3358921, J$.I(typeof Error === 'undefined' ? Error = J$.R(3358897, 'Error', undefined, true, true) : Error = J$.R(3358897, 'Error', Error, true, true)), true)(J$.B(447538, '+', J$.T(3358905, 'Unsupported PBES2 KDF: ', 21, false), J$.R(3358913, 'kdfOid', kdfOid, false, false)));
                                J$.M(3358937, J$.R(3358929, 'eder', eder, false, false), 'readSequence', false)();
                                var salt = J$.W(3358993, 'salt', J$.M(3358985, J$.R(3358945, 'eder', eder, false, false), 'readString', false)(J$.G(3358969, J$.G(3358961, J$.R(3358953, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3358977, true, 23, false)), salt, false, false);
                                var iterations = J$.W(3359017, 'iterations', J$.M(3359009, J$.R(3359001, 'eder', eder, false, false), 'readInt', false)(), iterations, false, false);
                                var hashAlg = J$.W(3359033, 'hashAlg', J$.T(3359025, 'sha1', 21, false), hashAlg, false, false);
                                if (J$.C(156376, J$.B(447546, '<', J$.G(3359049, J$.R(3359041, 'eder', eder, false, false), 'offset'), J$.R(3359057, 'kdfEnd', kdfEnd, false, false)))) {
                                    J$.M(3359073, J$.R(3359065, 'eder', eder, false, false), 'readSequence', false)();
                                    var hashAlgOid = J$.W(3359097, 'hashAlgOid', J$.M(3359089, J$.R(3359081, 'eder', eder, false, false), 'readOID', false)(), hashAlgOid, false, false);
                                    hashAlg = J$.W(3359129, 'hashAlg', J$.G(3359121, J$.R(3359105, 'OID_TO_HASH', OID_TO_HASH, false, true), J$.R(3359113, 'hashAlgOid', hashAlgOid, false, false)), hashAlg, false, false);
                                    if (J$.C(156368, J$.B(447554, '===', J$.R(3359137, 'hashAlg', hashAlg, false, false), J$.T(3359145, undefined, 24, false)))) {
                                        throw J$.F(3359177, J$.I(typeof Error === 'undefined' ? Error = J$.R(3359153, 'Error', undefined, true, true) : Error = J$.R(3359153, 'Error', Error, true, true)), true)(J$.B(447562, '+', J$.T(3359161, 'Unsupported PBKDF2 hash: ', 21, false), J$.R(3359169, 'hashAlgOid', hashAlgOid, false, false)));
                                    }
                                }
                                J$.P(3359201, J$.R(3359185, 'eder', eder, false, false), '_offset', J$.R(3359193, 'kdfEnd', kdfEnd, false, false));
                                J$.M(3359217, J$.R(3359209, 'eder', eder, false, false), 'readSequence', false)();
                                var cipherOid = J$.W(3359241, 'cipherOid', J$.M(3359233, J$.R(3359225, 'eder', eder, false, false), 'readOID', false)(), cipherOid, false, false);
                                cipher = J$.W(3359273, 'cipher', J$.G(3359265, J$.R(3359249, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true), J$.R(3359257, 'cipherOid', cipherOid, false, false)), cipher, false, false);
                                if (J$.C(156384, J$.B(447570, '===', J$.R(3359281, 'cipher', cipher, false, false), J$.T(3359289, undefined, 24, false)))) {
                                    throw J$.F(3359321, J$.I(typeof Error === 'undefined' ? Error = J$.R(3359297, 'Error', undefined, true, true) : Error = J$.R(3359297, 'Error', Error, true, true)), true)(J$.B(447578, '+', J$.T(3359305, 'Unsupported PBES2 cipher: ', 21, false), J$.R(3359313, 'cipherOid', cipherOid, false, false)));
                                }
                                iv = J$.W(3359377, 'iv', J$.M(3359369, J$.R(3359329, 'eder', eder, false, false), 'readString', false)(J$.G(3359353, J$.G(3359345, J$.R(3359337, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3359361, true, 23, false)), iv, false, false);
                                J$.P(3359401, J$.R(3359385, 'eder', eder, false, false), '_offset', J$.R(3359393, 'pbesEnd', pbesEnd, false, false));
                                buf = J$.W(3359457, 'buf', J$.M(3359449, J$.R(3359409, 'eder', eder, false, false), 'readString', false)(J$.G(3359433, J$.G(3359425, J$.R(3359417, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3359441, true, 23, false)), buf, false, false);
                                if (J$.C(156392, J$.B(447594, '===', J$.U(447586, 'typeof', J$.G(3359473, J$.R(3359465, 'options', options, false, false), 'passphrase')), J$.T(3359481, 'string', 21, false)))) {
                                    J$.P(3359537, J$.R(3359489, 'options', options, false, false), 'passphrase', J$.M(3359529, J$.R(3359497, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3359513, J$.R(3359505, 'options', options, false, false), 'passphrase'), J$.T(3359521, 'utf-8', 21, false)));
                                }
                                if (J$.C(156400, J$.U(447602, '!', J$.M(3359569, J$.R(3359545, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(3359561, J$.R(3359553, 'options', options, false, false), 'passphrase'))))) {
                                    throw J$.M(3359609, J$.R(3359577, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(3359593, J$.R(3359585, 'options', options, false, false), 'filename'), J$.T(3359601, 'PEM', 21, false));
                                }
                                var cinfo = J$.W(3359641, 'cinfo', J$.M(3359633, J$.R(3359617, 'utils', utils, false, true), 'opensshCipherInfo', false)(J$.R(3359625, 'cipher', cipher, false, false)), cinfo, false, false);
                                cipher = J$.W(3359665, 'cipher', J$.G(3359657, J$.R(3359649, 'cinfo', cinfo, false, false), 'opensslName'), cipher, false, false);
                                key = J$.W(3359745, 'key', J$.M(3359737, J$.R(3359673, 'utils', utils, false, true), 'pbkdf2', false)(J$.R(3359681, 'hashAlg', hashAlg, false, false), J$.R(3359689, 'salt', salt, false, false), J$.R(3359697, 'iterations', iterations, false, false), J$.G(3359713, J$.R(3359705, 'cinfo', cinfo, false, false), 'keySize'), J$.G(3359729, J$.R(3359721, 'options', options, false, false), 'passphrase')), key, false, false);
                                alg = J$.W(3359761, 'alg', J$.T(3359753, undefined, 24, false), alg, false, false);
                            }
                            if (J$.C(156448, J$.C(156424, J$.C(156416, J$.R(3359769, 'cipher', cipher, false, false)) ? J$.R(3359777, 'key', key, false, false) : J$._()) ? J$.R(3359785, 'iv', iv, false, false) : J$._())) {
                                var cipherStream = J$.W(3359833, 'cipherStream', J$.M(3359825, J$.R(3359793, 'crypto', crypto, false, true), 'createDecipheriv', false)(J$.R(3359801, 'cipher', cipher, false, false), J$.R(3359809, 'key', key, false, false), J$.R(3359817, 'iv', iv, false, false)), cipherStream, false, false);
                                var chunk, chunks = J$.W(3359849, 'chunks', J$.T(3359841, [], 10, false), chunks, false, false);
                                J$.M(3359985, J$.R(3359857, 'cipherStream', cipherStream, false, false), 'once', false)(J$.T(3359865, 'error', 21, false), J$.T(3359977, function (e) {
                                    jalangiLabel2:
                                        while (true) {
                                            try {
                                                J$.Fe(3359953, arguments.callee, this, arguments);
                                                arguments = J$.N(3359961, 'arguments', arguments, true, false, false);
                                                e = J$.N(3359969, 'e', e, true, false, false);
                                                if (J$.C(156432, J$.B(447618, '!==', J$.M(3359897, J$.M(3359881, J$.R(3359873, 'e', e, false, false), 'toString', false)(), 'indexOf', false)(J$.T(3359889, 'bad decrypt', 21, false)), J$.U(447610, '-', J$.T(3359905, 1, 22, false))))) {
                                                    throw J$.F(3359937, J$.I(typeof Error === 'undefined' ? Error = J$.R(3359913, 'Error', undefined, true, true) : Error = J$.R(3359913, 'Error', Error, true, true)), true)(J$.B(447626, '+', J$.T(3359921, 'Incorrect passphrase ', 21, false), J$.T(3359929, 'supplied, could not decrypt key', 21, false)));
                                                }
                                                throw J$.R(3359945, 'e', e, false, false);
                                            } catch (J$e) {
                                                J$.Ex(3362257, J$e);
                                            } finally {
                                                if (J$.Fr(3362265))
                                                    continue jalangiLabel2;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(3360009, J$.R(3359993, 'cipherStream', cipherStream, false, false), 'write', false)(J$.R(3360001, 'buf', buf, false, false));
                                J$.M(3360025, J$.R(3360017, 'cipherStream', cipherStream, false, false), 'end', false)();
                                while (J$.C(156440, J$.B(447634, '!==', chunk = J$.W(3360049, 'chunk', J$.M(3360041, J$.R(3360033, 'cipherStream', cipherStream, false, false), 'read', false)(), chunk, false, false), J$.T(3360057, null, 25, false)))) {
                                    J$.M(3360081, J$.R(3360065, 'chunks', chunks, false, false), 'push', false)(J$.R(3360073, 'chunk', chunk, false, false));
                                }
                                buf = J$.W(3360113, 'buf', J$.M(3360105, J$.R(3360089, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(3360097, 'chunks', chunks, false, false)), buf, false, false);
                            }
                            if (J$.C(156464, J$.C(156456, J$.R(3360121, 'alg', alg, false, false)) ? J$.B(447642, '===', J$.M(3360137, J$.R(3360129, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(3360145, 'openssh', 21, false)) : J$._()))
                                return J$.Rt(3360193, J$.M(3360185, J$.R(3360153, 'sshpriv', sshpriv, false, true), 'readSSHPrivate', false)(J$.R(3360161, 'type', type, false, false), J$.R(3360169, 'buf', buf, false, false), J$.R(3360177, 'options', options, false, false)));
                            if (J$.C(156480, J$.C(156472, J$.R(3360201, 'alg', alg, false, false)) ? J$.B(447650, '===', J$.M(3360217, J$.R(3360209, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(3360225, 'ssh2', 21, false)) : J$._()))
                                return J$.Rt(3360273, J$.M(3360265, J$.R(3360233, 'rfc4253', rfc4253, false, true), 'readType', false)(J$.R(3360241, 'type', type, false, false), J$.R(3360249, 'buf', buf, false, false), J$.R(3360257, 'options', options, false, false)));
                            var der = J$.W(3360305, 'der', J$.M(3360297, J$.R(3360281, 'asn1', asn1, false, true), 'BerReader', true)(J$.R(3360289, 'buf', buf, false, false)), der, false, false);
                            J$.P(3360329, J$.R(3360313, 'der', der, false, false), 'originalInput', J$.R(3360321, 'input', input, false, false));
                            J$.M(3360345, J$.R(3360337, 'der', der, false, false), 'readSequence', false)();
                            if (J$.C(156504, J$.R(3360353, 'alg', alg, false, false))) {
                                if (J$.C(156488, J$.R(3360361, 'forceType', forceType, false, false)))
                                    J$.M(3360393, J$.R(3360369, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3360377, 'forceType', forceType, false, false), J$.T(3360385, 'pkcs1', 21, false));
                                return J$.Rt(3360441, J$.M(3360433, J$.R(3360401, 'pkcs1', pkcs1, false, true), 'readPkcs1', false)(J$.R(3360409, 'alg', alg, false, false), J$.R(3360417, 'type', type, false, false), J$.R(3360425, 'der', der, false, false)));
                            } else {
                                if (J$.C(156496, J$.R(3360449, 'forceType', forceType, false, false)))
                                    J$.M(3360481, J$.R(3360457, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3360465, 'forceType', forceType, false, false), J$.T(3360473, 'pkcs8', 21, false));
                                return J$.Rt(3360529, J$.M(3360521, J$.R(3360489, 'pkcs8', pkcs8, false, true), 'readPkcs8', false)(J$.R(3360497, 'alg', alg, false, false), J$.R(3360505, 'type', type, false, false), J$.R(3360513, 'der', der, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(3362273, J$e);
                        } finally {
                            if (J$.Fr(3362281))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options, type) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3361921, arguments.callee, this, arguments);
                            arguments = J$.N(3361929, 'arguments', arguments, true, false, false);
                            key = J$.N(3361937, 'key', key, true, false, false);
                            options = J$.N(3361945, 'options', options, true, false, false);
                            type = J$.N(3361953, 'type', type, true, false, false);
                            J$.N(3361961, 'alg', alg, false, false, false);
                            J$.N(3361969, 'header', header, false, false, false);
                            J$.N(3361977, 'der', der, false, false, false);
                            J$.N(3361985, 'tmp', tmp, false, false, false);
                            J$.N(3361993, 'len', len, false, false, false);
                            J$.N(3362001, 'buf', buf, false, false, false);
                            J$.N(3362009, 'o', o, false, false, false);
                            J$.N(3362017, 'i', i, false, false, false);
                            J$.N(3362025, 'limit', limit, false, false, false);
                            J$.M(3360817, J$.R(3360801, 'assert', assert, false, true), 'object', false)(J$.R(3360809, 'key', key, false, false));
                            var alg = J$.W(3360889, 'alg', J$.G(3360881, J$.T(3360857, {
                                'ecdsa': J$.T(3360825, 'EC', 21, false),
                                'rsa': J$.T(3360833, 'RSA', 21, false),
                                'dsa': J$.T(3360841, 'DSA', 21, false),
                                'ed25519': J$.T(3360849, 'EdDSA', 21, false)
                            }, 11, false), J$.G(3360873, J$.R(3360865, 'key', key, false, false), 'type')), alg, false, false);
                            var header;
                            var der = J$.W(3360913, 'der', J$.M(3360905, J$.R(3360897, 'asn1', asn1, false, true), 'BerWriter', true)(), der, false, false);
                            if (J$.C(156568, J$.M(3360937, J$.R(3360921, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3360929, 'key', key, false, false)))) {
                                if (J$.C(156528, J$.C(156512, J$.R(3360945, 'type', type, false, false)) ? J$.B(447658, '===', J$.R(3360953, 'type', type, false, false), J$.T(3360961, 'pkcs8', 21, false)) : J$._())) {
                                    header = J$.W(3360977, 'header', J$.T(3360969, 'PRIVATE KEY', 21, false), header, false, false);
                                    J$.M(3361009, J$.R(3360985, 'pkcs8', pkcs8, false, true), 'writePkcs8', false)(J$.R(3360993, 'der', der, false, false), J$.R(3361001, 'key', key, false, false));
                                } else {
                                    if (J$.C(156520, J$.R(3361017, 'type', type, false, false)))
                                        J$.M(3361049, J$.R(3361025, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3361033, 'type', type, false, false), J$.T(3361041, 'pkcs1', 21, false));
                                    header = J$.W(3361073, 'header', J$.B(447666, '+', J$.R(3361057, 'alg', alg, false, false), J$.T(3361065, ' PRIVATE KEY', 21, false)), header, false, false);
                                    J$.M(3361105, J$.R(3361081, 'pkcs1', pkcs1, false, true), 'writePkcs1', false)(J$.R(3361089, 'der', der, false, false), J$.R(3361097, 'key', key, false, false));
                                }
                            } else if (J$.C(156560, J$.M(3361129, J$.R(3361113, 'Key', Key, false, true), 'isKey', false)(J$.R(3361121, 'key', key, false, false)))) {
                                if (J$.C(156552, J$.C(156536, J$.R(3361137, 'type', type, false, false)) ? J$.B(447674, '===', J$.R(3361145, 'type', type, false, false), J$.T(3361153, 'pkcs1', 21, false)) : J$._())) {
                                    header = J$.W(3361177, 'header', J$.B(447682, '+', J$.R(3361161, 'alg', alg, false, false), J$.T(3361169, ' PUBLIC KEY', 21, false)), header, false, false);
                                    J$.M(3361209, J$.R(3361185, 'pkcs1', pkcs1, false, true), 'writePkcs1', false)(J$.R(3361193, 'der', der, false, false), J$.R(3361201, 'key', key, false, false));
                                } else {
                                    if (J$.C(156544, J$.R(3361217, 'type', type, false, false)))
                                        J$.M(3361249, J$.R(3361225, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3361233, 'type', type, false, false), J$.T(3361241, 'pkcs8', 21, false));
                                    header = J$.W(3361265, 'header', J$.T(3361257, 'PUBLIC KEY', 21, false), header, false, false);
                                    J$.M(3361297, J$.R(3361273, 'pkcs8', pkcs8, false, true), 'writePkcs8', false)(J$.R(3361281, 'der', der, false, false), J$.R(3361289, 'key', key, false, false));
                                }
                            } else {
                                throw J$.F(3361321, J$.I(typeof Error === 'undefined' ? Error = J$.R(3361305, 'Error', undefined, true, true) : Error = J$.R(3361305, 'Error', Error, true, true)), true)(J$.T(3361313, 'key is not a Key or PrivateKey', 21, false));
                            }
                            var tmp = J$.W(3361361, 'tmp', J$.M(3361353, J$.G(3361337, J$.R(3361329, 'der', der, false, false), 'buffer'), 'toString', false)(J$.T(3361345, 'base64', 21, false)), tmp, false, false);
                            var len = J$.W(3361457, 'len', J$.B(447738, '+', J$.B(447730, '+', J$.B(447714, '+', J$.B(447706, '+', J$.B(447698, '+', J$.G(3361377, J$.R(3361369, 'tmp', tmp, false, false), 'length'), J$.B(447690, '/', J$.G(3361393, J$.R(3361385, 'tmp', tmp, false, false), 'length'), J$.T(3361401, 64, 22, false))), J$.T(3361409, 18, 22, false)), J$.T(3361417, 16, 22, false)), J$.B(447722, '*', J$.G(3361433, J$.R(3361425, 'header', header, false, false), 'length'), J$.T(3361441, 2, 22, false))), J$.T(3361449, 10, 22, false)), len, false, false);
                            var buf = J$.W(3361489, 'buf', J$.M(3361481, J$.R(3361465, 'Buffer', Buffer, false, true), 'alloc', false)(J$.R(3361473, 'len', len, false, false)), buf, false, false);
                            var o = J$.W(3361505, 'o', J$.T(3361497, 0, 22, false), o, false, false);
                            o = J$.W(3361569, 'o', J$.B(447762, '+', J$.R(3361561, 'o', o, false, false), J$.M(3361553, J$.R(3361513, 'buf', buf, false, false), 'write', false)(J$.B(447754, '+', J$.B(447746, '+', J$.T(3361521, '-----BEGIN ', 21, false), J$.R(3361529, 'header', header, false, false)), J$.T(3361537, '-----\n', 21, false)), J$.R(3361545, 'o', o, false, false))), o, false, false);
                            for (var i = J$.W(3361585, 'i', J$.T(3361577, 0, 22, false), i, false, false); J$.C(156584, J$.B(447770, '<', J$.R(3361593, 'i', i, false, false), J$.G(3361609, J$.R(3361601, 'tmp', tmp, false, false), 'length')));) {
                                var limit = J$.W(3361633, 'limit', J$.B(447778, '+', J$.R(3361617, 'i', i, false, false), J$.T(3361625, 64, 22, false)), limit, false, false);
                                if (J$.C(156576, J$.B(447786, '>', J$.R(3361641, 'limit', limit, false, false), J$.G(3361657, J$.R(3361649, 'tmp', tmp, false, false), 'length'))))
                                    limit = J$.W(3361681, 'limit', J$.G(3361673, J$.R(3361665, 'tmp', tmp, false, false), 'length'), limit, false, false);
                                o = J$.W(3361753, 'o', J$.B(447794, '+', J$.R(3361745, 'o', o, false, false), J$.M(3361737, J$.R(3361689, 'buf', buf, false, false), 'write', false)(J$.M(3361721, J$.R(3361697, 'tmp', tmp, false, false), 'slice', false)(J$.R(3361705, 'i', i, false, false), J$.R(3361713, 'limit', limit, false, false)), J$.R(3361729, 'o', o, false, false))), o, false, false);
                                J$.P(3361793, J$.R(3361761, 'buf', buf, false, false), J$.B(447818, '-', o = J$.W(3361777, 'o', J$.B(447810, '+', J$.U(447802, '+', J$.R(3361769, 'o', o, false, false)), 1), o, false, false), 1), J$.T(3361785, 10, 22, false));
                                i = J$.W(3361809, 'i', J$.R(3361801, 'limit', limit, false, false), i, false, false);
                            }
                            o = J$.W(3361873, 'o', J$.B(447842, '+', J$.R(3361865, 'o', o, false, false), J$.M(3361857, J$.R(3361817, 'buf', buf, false, false), 'write', false)(J$.B(447834, '+', J$.B(447826, '+', J$.T(3361825, '-----END ', 21, false), J$.R(3361833, 'header', header, false, false)), J$.T(3361841, '-----\n', 21, false)), J$.R(3361849, 'o', o, false, false))), o, false, false);
                            return J$.Rt(3361913, J$.M(3361905, J$.R(3361881, 'buf', buf, false, false), 'slice', false)(J$.T(3361889, 0, 22, false), J$.R(3361897, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(3362289, J$e);
                        } finally {
                            if (J$.Fr(3362297))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3362041, 'assert', assert, false, false, false);
            J$.N(3362049, 'asn1', asn1, false, false, false);
            J$.N(3362057, 'crypto', crypto, false, false, false);
            J$.N(3362065, 'Buffer', Buffer, false, false, false);
            J$.N(3362073, 'algs', algs, false, false, false);
            J$.N(3362081, 'utils', utils, false, false, false);
            J$.N(3362089, 'Key', Key, false, false, false);
            J$.N(3362097, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(3362105, 'pkcs1', pkcs1, false, false, false);
            J$.N(3362113, 'pkcs8', pkcs8, false, false, false);
            J$.N(3362121, 'sshpriv', sshpriv, false, false, false);
            J$.N(3362129, 'rfc4253', rfc4253, false, false, false);
            J$.N(3362137, 'errors', errors, false, false, false);
            J$.N(3362145, 'OID_PBES2', OID_PBES2, false, false, false);
            J$.N(3362153, 'OID_PBKDF2', OID_PBKDF2, false, false, false);
            J$.N(3362161, 'OID_TO_CIPHER', OID_TO_CIPHER, false, false, false);
            J$.N(3362169, 'CIPHER_TO_OID', CIPHER_TO_OID, false, false, false);
            J$.N(3362177, 'OID_TO_HASH', OID_TO_HASH, false, false, false);
            J$.N(3362185, 'HASH_TO_OID', HASH_TO_OID, false, false, false);
            read = J$.N(3362201, 'read', J$.T(3362193, read, 12, false), true, false, false);
            write = J$.N(3362217, 'write', J$.T(3362209, write, 12, false), true, false, false);
            J$.T(3355873, 'use strict', 21, false);
            J$.F(3355897, J$.I(typeof require === 'undefined' ? require = J$.R(3355881, 'require', undefined, true, true) : require = J$.R(3355881, 'require', require, true, true)), false)(J$.T(3355889, 'core-js/modules/es.array.concat', 21, false));
            J$.F(3355921, J$.I(typeof require === 'undefined' ? require = J$.R(3355905, 'require', undefined, true, true) : require = J$.R(3355905, 'require', require, true, true)), false)(J$.T(3355913, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(3355945, J$.I(typeof require === 'undefined' ? require = J$.R(3355929, 'require', undefined, true, true) : require = J$.R(3355929, 'require', require, true, true)), false)(J$.T(3355937, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(3355969, J$.I(typeof require === 'undefined' ? require = J$.R(3355953, 'require', undefined, true, true) : require = J$.R(3355953, 'require', require, true, true)), false)(J$.T(3355961, 'core-js/modules/es.array.join', 21, false));
            J$.F(3355993, J$.I(typeof require === 'undefined' ? require = J$.R(3355977, 'require', undefined, true, true) : require = J$.R(3355977, 'require', require, true, true)), false)(J$.T(3355985, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3356017, J$.I(typeof require === 'undefined' ? require = J$.R(3356001, 'require', undefined, true, true) : require = J$.R(3356001, 'require', require, true, true)), false)(J$.T(3356009, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(3356041, J$.I(typeof require === 'undefined' ? require = J$.R(3356025, 'require', undefined, true, true) : require = J$.R(3356025, 'require', require, true, true)), false)(J$.T(3356033, 'core-js/modules/es.object.keys', 21, false));
            J$.F(3356065, J$.I(typeof require === 'undefined' ? require = J$.R(3356049, 'require', undefined, true, true) : require = J$.R(3356049, 'require', require, true, true)), false)(J$.T(3356057, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3356089, J$.I(typeof require === 'undefined' ? require = J$.R(3356073, 'require', undefined, true, true) : require = J$.R(3356073, 'require', require, true, true)), false)(J$.T(3356081, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(3356113, J$.I(typeof require === 'undefined' ? require = J$.R(3356097, 'require', undefined, true, true) : require = J$.R(3356097, 'require', require, true, true)), false)(J$.T(3356105, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(3356137, J$.I(typeof require === 'undefined' ? require = J$.R(3356121, 'require', undefined, true, true) : require = J$.R(3356121, 'require', require, true, true)), false)(J$.T(3356129, 'core-js/modules/es.string.match', 21, false));
            J$.F(3356161, J$.I(typeof require === 'undefined' ? require = J$.R(3356145, 'require', undefined, true, true) : require = J$.R(3356145, 'require', require, true, true)), false)(J$.T(3356153, 'core-js/modules/es.string.split', 21, false));
            J$.F(3356185, J$.I(typeof require === 'undefined' ? require = J$.R(3356169, 'require', undefined, true, true) : require = J$.R(3356169, 'require', require, true, true)), false)(J$.T(3356177, 'core-js/modules/es.string.trim', 21, false));
            J$.F(3356209, J$.I(typeof require === 'undefined' ? require = J$.R(3356193, 'require', undefined, true, true) : require = J$.R(3356193, 'require', require, true, true)), false)(J$.T(3356201, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.P(3356249, J$.I(typeof module === 'undefined' ? module = J$.R(3356217, 'module', undefined, true, true) : module = J$.R(3356217, 'module', module, true, true)), 'exports', J$.T(3356241, {
                read: J$.R(3356225, 'read', read, false, true),
                write: J$.R(3356233, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(3356281, 'assert', J$.F(3356273, J$.I(typeof require === 'undefined' ? require = J$.R(3356257, 'require', undefined, true, true) : require = J$.R(3356257, 'require', require, true, true)), false)(J$.T(3356265, 'assert-plus', 21, false)), assert, false, true);
            var asn1 = J$.W(3356313, 'asn1', J$.F(3356305, J$.I(typeof require === 'undefined' ? require = J$.R(3356289, 'require', undefined, true, true) : require = J$.R(3356289, 'require', require, true, true)), false)(J$.T(3356297, 'asn1', 21, false)), asn1, false, true);
            var crypto = J$.W(3356345, 'crypto', J$.F(3356337, J$.I(typeof require === 'undefined' ? require = J$.R(3356321, 'require', undefined, true, true) : require = J$.R(3356321, 'require', require, true, true)), false)(J$.T(3356329, 'crypto', 21, false)), crypto, false, true);
            var Buffer = J$.W(3356385, 'Buffer', J$.G(3356377, J$.F(3356369, J$.I(typeof require === 'undefined' ? require = J$.R(3356353, 'require', undefined, true, true) : require = J$.R(3356353, 'require', require, true, true)), false)(J$.T(3356361, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(3356417, 'algs', J$.F(3356409, J$.I(typeof require === 'undefined' ? require = J$.R(3356393, 'require', undefined, true, true) : require = J$.R(3356393, 'require', require, true, true)), false)(J$.T(3356401, '../algs', 21, false)), algs, false, true);
            var utils = J$.W(3356449, 'utils', J$.F(3356441, J$.I(typeof require === 'undefined' ? require = J$.R(3356425, 'require', undefined, true, true) : require = J$.R(3356425, 'require', require, true, true)), false)(J$.T(3356433, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(3356481, 'Key', J$.F(3356473, J$.I(typeof require === 'undefined' ? require = J$.R(3356457, 'require', undefined, true, true) : require = J$.R(3356457, 'require', require, true, true)), false)(J$.T(3356465, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(3356513, 'PrivateKey', J$.F(3356505, J$.I(typeof require === 'undefined' ? require = J$.R(3356489, 'require', undefined, true, true) : require = J$.R(3356489, 'require', require, true, true)), false)(J$.T(3356497, '../private-key', 21, false)), PrivateKey, false, true);
            var pkcs1 = J$.W(3356545, 'pkcs1', J$.F(3356537, J$.I(typeof require === 'undefined' ? require = J$.R(3356521, 'require', undefined, true, true) : require = J$.R(3356521, 'require', require, true, true)), false)(J$.T(3356529, './pkcs1', 21, false)), pkcs1, false, true);
            var pkcs8 = J$.W(3356577, 'pkcs8', J$.F(3356569, J$.I(typeof require === 'undefined' ? require = J$.R(3356553, 'require', undefined, true, true) : require = J$.R(3356553, 'require', require, true, true)), false)(J$.T(3356561, './pkcs8', 21, false)), pkcs8, false, true);
            var sshpriv = J$.W(3356609, 'sshpriv', J$.F(3356601, J$.I(typeof require === 'undefined' ? require = J$.R(3356585, 'require', undefined, true, true) : require = J$.R(3356585, 'require', require, true, true)), false)(J$.T(3356593, './ssh-private', 21, false)), sshpriv, false, true);
            var rfc4253 = J$.W(3356641, 'rfc4253', J$.F(3356633, J$.I(typeof require === 'undefined' ? require = J$.R(3356617, 'require', undefined, true, true) : require = J$.R(3356617, 'require', require, true, true)), false)(J$.T(3356625, './rfc4253', 21, false)), rfc4253, false, true);
            var errors = J$.W(3356673, 'errors', J$.F(3356665, J$.I(typeof require === 'undefined' ? require = J$.R(3356649, 'require', undefined, true, true) : require = J$.R(3356649, 'require', require, true, true)), false)(J$.T(3356657, '../errors', 21, false)), errors, false, true);
            var OID_PBES2 = J$.W(3356689, 'OID_PBES2', J$.T(3356681, '1.2.840.113549.1.5.13', 21, false), OID_PBES2, false, true);
            var OID_PBKDF2 = J$.W(3356705, 'OID_PBKDF2', J$.T(3356697, '1.2.840.113549.1.5.12', 21, false), OID_PBKDF2, false, true);
            var OID_TO_CIPHER = J$.W(3356745, 'OID_TO_CIPHER', J$.T(3356737, {
                '1.2.840.113549.3.7': J$.T(3356713, '3des-cbc', 21, false),
                '2.16.840.1.101.3.4.1.2': J$.T(3356721, 'aes128-cbc', 21, false),
                '2.16.840.1.101.3.4.1.42': J$.T(3356729, 'aes256-cbc', 21, false)
            }, 11, false), OID_TO_CIPHER, false, true);
            var CIPHER_TO_OID = J$.W(3356761, 'CIPHER_TO_OID', J$.T(3356753, {}, 11, false), CIPHER_TO_OID, false, true);
            J$.M(3356873, J$.M(3356785, J$.I(typeof Object === 'undefined' ? Object = J$.R(3356769, 'Object', undefined, true, true) : Object = J$.R(3356769, 'Object', Object, true, true)), 'keys', false)(J$.R(3356777, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true)), 'forEach', false)(J$.T(3356865, function (k) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3356841, arguments.callee, this, arguments);
                            arguments = J$.N(3356849, 'arguments', arguments, true, false, false);
                            k = J$.N(3356857, 'k', k, true, false, false);
                            J$.P(3356833, J$.R(3356793, 'CIPHER_TO_OID', CIPHER_TO_OID, false, true), J$.G(3356817, J$.R(3356801, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true), J$.R(3356809, 'k', k, false, false)), J$.R(3356825, 'k', k, false, false));
                        } catch (J$e) {
                            J$.Ex(3362225, J$e);
                        } finally {
                            if (J$.Fr(3362233))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var OID_TO_HASH = J$.W(3356913, 'OID_TO_HASH', J$.T(3356905, {
                '1.2.840.113549.2.7': J$.T(3356881, 'sha1', 21, false),
                '1.2.840.113549.2.9': J$.T(3356889, 'sha256', 21, false),
                '1.2.840.113549.2.11': J$.T(3356897, 'sha512', 21, false)
            }, 11, false), OID_TO_HASH, false, true);
            var HASH_TO_OID = J$.W(3356929, 'HASH_TO_OID', J$.T(3356921, {}, 11, false), HASH_TO_OID, false, true);
            J$.M(3357041, J$.M(3356953, J$.I(typeof Object === 'undefined' ? Object = J$.R(3356937, 'Object', undefined, true, true) : Object = J$.R(3356937, 'Object', Object, true, true)), 'keys', false)(J$.R(3356945, 'OID_TO_HASH', OID_TO_HASH, false, true)), 'forEach', false)(J$.T(3357033, function (k) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3357009, arguments.callee, this, arguments);
                            arguments = J$.N(3357017, 'arguments', arguments, true, false, false);
                            k = J$.N(3357025, 'k', k, true, false, false);
                            J$.P(3357001, J$.R(3356961, 'HASH_TO_OID', HASH_TO_OID, false, true), J$.G(3356985, J$.R(3356969, 'OID_TO_HASH', OID_TO_HASH, false, true), J$.R(3356977, 'k', k, false, false)), J$.R(3356993, 'k', k, false, false));
                        } catch (J$e) {
                            J$.Ex(3362241, J$e);
                        } finally {
                            if (J$.Fr(3362249))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3362305, J$e);
        } finally {
            if (J$.Sr(3362313))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

