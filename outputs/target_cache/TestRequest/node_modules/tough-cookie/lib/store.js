J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(3501305, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/tough-cookie/lib/store.js');
            function Store() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3500569, arguments.callee, this, arguments);
                            arguments = J$.N(3500577, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(3501329, J$e);
                        } finally {
                            if (J$.Fr(3501337))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            Store = J$.N(3501321, 'Store', J$.T(3501313, Store, 12, false), true, false, false);
            J$.T(3500561, 'use strict', 21, false);
            J$.P(3500601, J$.I(typeof exports === 'undefined' ? exports = J$.R(3500585, 'exports', undefined, true, true) : exports = J$.R(3500585, 'exports', exports, true, true)), 'Store', J$.R(3500593, 'Store', Store, false, true));
            J$.P(3500633, J$.G(3500617, J$.R(3500609, 'Store', Store, false, true), 'prototype'), 'synchronous', J$.T(3500625, false, 23, false));
            J$.P(3500737, J$.G(3500649, J$.R(3500641, 'Store', Store, false, true), 'prototype'), 'findCookie', J$.T(3500729, function (domain, path, key, cb) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3500681, arguments.callee, this, arguments);
                            arguments = J$.N(3500689, 'arguments', arguments, true, false, false);
                            domain = J$.N(3500697, 'domain', domain, true, false, false);
                            path = J$.N(3500705, 'path', path, true, false, false);
                            key = J$.N(3500713, 'key', key, true, false, false);
                            cb = J$.N(3500721, 'cb', cb, true, false, false);
                            throw J$.F(3500673, J$.I(typeof Error === 'undefined' ? Error = J$.R(3500657, 'Error', undefined, true, true) : Error = J$.R(3500657, 'Error', Error, true, true)), true)(J$.T(3500665, 'findCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3501345, J$e);
                        } finally {
                            if (J$.Fr(3501353))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3500833, J$.G(3500753, J$.R(3500745, 'Store', Store, false, true), 'prototype'), 'findCookies', J$.T(3500825, function (domain, path, cb) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3500785, arguments.callee, this, arguments);
                            arguments = J$.N(3500793, 'arguments', arguments, true, false, false);
                            domain = J$.N(3500801, 'domain', domain, true, false, false);
                            path = J$.N(3500809, 'path', path, true, false, false);
                            cb = J$.N(3500817, 'cb', cb, true, false, false);
                            throw J$.F(3500777, J$.I(typeof Error === 'undefined' ? Error = J$.R(3500761, 'Error', undefined, true, true) : Error = J$.R(3500761, 'Error', Error, true, true)), true)(J$.T(3500769, 'findCookies is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3501361, J$e);
                        } finally {
                            if (J$.Fr(3501369))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3500921, J$.G(3500849, J$.R(3500841, 'Store', Store, false, true), 'prototype'), 'putCookie', J$.T(3500913, function (cookie, cb) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3500881, arguments.callee, this, arguments);
                            arguments = J$.N(3500889, 'arguments', arguments, true, false, false);
                            cookie = J$.N(3500897, 'cookie', cookie, true, false, false);
                            cb = J$.N(3500905, 'cb', cb, true, false, false);
                            throw J$.F(3500873, J$.I(typeof Error === 'undefined' ? Error = J$.R(3500857, 'Error', undefined, true, true) : Error = J$.R(3500857, 'Error', Error, true, true)), true)(J$.T(3500865, 'putCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3501377, J$e);
                        } finally {
                            if (J$.Fr(3501385))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3501017, J$.G(3500937, J$.R(3500929, 'Store', Store, false, true), 'prototype'), 'updateCookie', J$.T(3501009, function (oldCookie, newCookie, cb) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3500969, arguments.callee, this, arguments);
                            arguments = J$.N(3500977, 'arguments', arguments, true, false, false);
                            oldCookie = J$.N(3500985, 'oldCookie', oldCookie, true, false, false);
                            newCookie = J$.N(3500993, 'newCookie', newCookie, true, false, false);
                            cb = J$.N(3501001, 'cb', cb, true, false, false);
                            throw J$.F(3500961, J$.I(typeof Error === 'undefined' ? Error = J$.R(3500945, 'Error', undefined, true, true) : Error = J$.R(3500945, 'Error', Error, true, true)), true)(J$.T(3500953, 'updateCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3501393, J$e);
                        } finally {
                            if (J$.Fr(3501401))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3501121, J$.G(3501033, J$.R(3501025, 'Store', Store, false, true), 'prototype'), 'removeCookie', J$.T(3501113, function (domain, path, key, cb) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(3501065, arguments.callee, this, arguments);
                            arguments = J$.N(3501073, 'arguments', arguments, true, false, false);
                            domain = J$.N(3501081, 'domain', domain, true, false, false);
                            path = J$.N(3501089, 'path', path, true, false, false);
                            key = J$.N(3501097, 'key', key, true, false, false);
                            cb = J$.N(3501105, 'cb', cb, true, false, false);
                            throw J$.F(3501057, J$.I(typeof Error === 'undefined' ? Error = J$.R(3501041, 'Error', undefined, true, true) : Error = J$.R(3501041, 'Error', Error, true, true)), true)(J$.T(3501049, 'removeCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3501409, J$e);
                        } finally {
                            if (J$.Fr(3501417))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3501217, J$.G(3501137, J$.R(3501129, 'Store', Store, false, true), 'prototype'), 'removeCookies', J$.T(3501209, function (domain, path, cb) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(3501169, arguments.callee, this, arguments);
                            arguments = J$.N(3501177, 'arguments', arguments, true, false, false);
                            domain = J$.N(3501185, 'domain', domain, true, false, false);
                            path = J$.N(3501193, 'path', path, true, false, false);
                            cb = J$.N(3501201, 'cb', cb, true, false, false);
                            throw J$.F(3501161, J$.I(typeof Error === 'undefined' ? Error = J$.R(3501145, 'Error', undefined, true, true) : Error = J$.R(3501145, 'Error', Error, true, true)), true)(J$.T(3501153, 'removeCookies is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3501425, J$e);
                        } finally {
                            if (J$.Fr(3501433))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3501297, J$.G(3501233, J$.R(3501225, 'Store', Store, false, true), 'prototype'), 'getAllCookies', J$.T(3501289, function (cb) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(3501265, arguments.callee, this, arguments);
                            arguments = J$.N(3501273, 'arguments', arguments, true, false, false);
                            cb = J$.N(3501281, 'cb', cb, true, false, false);
                            throw J$.F(3501257, J$.I(typeof Error === 'undefined' ? Error = J$.R(3501241, 'Error', undefined, true, true) : Error = J$.R(3501241, 'Error', Error, true, true)), true)(J$.T(3501249, 'getAllCookies is not implemented (therefore jar cannot be serialized)', 21, false));
                        } catch (J$e) {
                            J$.Ex(3501441, J$e);
                        } finally {
                            if (J$.Fr(3501449))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3501457, J$e);
        } finally {
            if (J$.Sr(3501465))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

