J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3500313, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestRequest/node_modules/tough-cookie/lib/permuteDomain.js');
            function permuteDomain(domain) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3500225, arguments.callee, this, arguments);
                            arguments = J$.N(3500233, 'arguments', arguments, true, false, false);
                            domain = J$.N(3500241, 'domain', domain, true, false, false);
                            J$.N(3500249, 'pubSuf', pubSuf, false, false, false);
                            J$.N(3500257, 'prefix', prefix, false, false, false);
                            J$.N(3500265, 'parts', parts, false, false, false);
                            J$.N(3500273, 'cur', cur, false, false, false);
                            J$.N(3500281, 'permutations', permutations, false, false, false);
                            var pubSuf = J$.W(3499921, 'pubSuf', J$.M(3499913, J$.R(3499897, 'pubsuffix', pubsuffix, false, true), 'getPublicSuffix', false)(J$.R(3499905, 'domain', domain, false, false)), pubSuf, false, false);
                            if (J$.C(163616, J$.U(457050, '!', J$.R(3499929, 'pubSuf', pubSuf, false, false)))) {
                                return J$.Rt(3499945, J$.T(3499937, null, 25, false));
                            }
                            if (J$.C(163624, J$.B(457058, '==', J$.R(3499953, 'pubSuf', pubSuf, false, false), J$.R(3499961, 'domain', domain, false, false)))) {
                                return J$.Rt(3499985, J$.T(3499977, [J$.R(3499969, 'domain', domain, false, false)], 10, false));
                            }
                            var prefix = J$.W(3500041, 'prefix', J$.M(3500033, J$.R(3499993, 'domain', domain, false, false), 'slice', false)(J$.T(3500001, 0, 22, false), J$.U(457074, '-', J$.B(457066, '+', J$.G(3500017, J$.R(3500009, 'pubSuf', pubSuf, false, false), 'length'), J$.T(3500025, 1, 22, false)))), prefix, false, false);
                            var parts = J$.W(3500081, 'parts', J$.M(3500073, J$.M(3500065, J$.R(3500049, 'prefix', prefix, false, false), 'split', false)(J$.T(3500057, '.', 21, false)), 'reverse', false)(), parts, false, false);
                            var cur = J$.W(3500097, 'cur', J$.R(3500089, 'pubSuf', pubSuf, false, false), cur, false, false);
                            var permutations = J$.W(3500121, 'permutations', J$.T(3500113, [J$.R(3500105, 'cur', cur, false, false)], 10, false), permutations, false, false);
                            while (J$.C(163632, J$.G(3500137, J$.R(3500129, 'parts', parts, false, false), 'length'))) {
                                cur = J$.W(3500177, 'cur', J$.B(457090, '+', J$.B(457082, '+', J$.M(3500153, J$.R(3500145, 'parts', parts, false, false), 'shift', false)(), J$.T(3500161, '.', 21, false)), J$.R(3500169, 'cur', cur, false, false)), cur, false, false);
                                J$.M(3500201, J$.R(3500185, 'permutations', permutations, false, false), 'push', false)(J$.R(3500193, 'cur', cur, false, false));
                            }
                            return J$.Rt(3500217, J$.R(3500209, 'permutations', permutations, false, false));
                        } catch (J$e) {
                            J$.Ex(3500345, J$e);
                        } finally {
                            if (J$.Fr(3500353))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3500321, 'pubsuffix', pubsuffix, false, false, false);
            permuteDomain = J$.N(3500337, 'permuteDomain', J$.T(3500329, permuteDomain, 12, false), true, false, false);
            J$.T(3499761, 'use strict', 21, false);
            J$.F(3499785, J$.I(typeof require === 'undefined' ? require = J$.R(3499769, 'require', undefined, true, true) : require = J$.R(3499769, 'require', require, true, true)), false)(J$.T(3499777, 'core-js/modules/es.array.reverse', 21, false));
            J$.F(3499809, J$.I(typeof require === 'undefined' ? require = J$.R(3499793, 'require', undefined, true, true) : require = J$.R(3499793, 'require', require, true, true)), false)(J$.T(3499801, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3499833, J$.I(typeof require === 'undefined' ? require = J$.R(3499817, 'require', undefined, true, true) : require = J$.R(3499817, 'require', require, true, true)), false)(J$.T(3499825, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(3499857, J$.I(typeof require === 'undefined' ? require = J$.R(3499841, 'require', undefined, true, true) : require = J$.R(3499841, 'require', require, true, true)), false)(J$.T(3499849, 'core-js/modules/es.string.split', 21, false));
            var pubsuffix = J$.W(3499889, 'pubsuffix', J$.F(3499881, J$.I(typeof require === 'undefined' ? require = J$.R(3499865, 'require', undefined, true, true) : require = J$.R(3499865, 'require', require, true, true)), false)(J$.T(3499873, './pubsuffix-psl', 21, false)), pubsuffix, false, true);
            J$.P(3500305, J$.I(typeof exports === 'undefined' ? exports = J$.R(3500289, 'exports', undefined, true, true) : exports = J$.R(3500289, 'exports', exports, true, true)), 'permuteDomain', J$.R(3500297, 'permuteDomain', permuteDomain, false, true));
        } catch (J$e) {
            J$.Ex(3500361, J$e);
        } finally {
            if (J$.Sr(3500369))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

