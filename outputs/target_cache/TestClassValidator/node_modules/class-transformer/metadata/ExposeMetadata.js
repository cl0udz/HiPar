J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5784513, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-transformer/metadata/ExposeMetadata.js');
            J$.N(5784521, 'ExposeMetadata', ExposeMetadata, false, false, false);
            J$.T(5784249, 'use strict', 21, false);
            J$.M(5784297, J$.I(typeof Object === 'undefined' ? Object = J$.R(5784257, 'Object', undefined, true, true) : Object = J$.R(5784257, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5784265, 'exports', undefined, true, true) : exports = J$.R(5784265, 'exports', exports, true, true)), J$.T(5784273, '__esModule', 21, false), J$.T(5784289, { value: J$.T(5784281, true, 23, false) }, 11, false));
            var ExposeMetadata = J$.W(5784481, 'ExposeMetadata', J$.F(5784473, J$.T(5784465, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5784433, arguments.callee, this, arguments);
                            function ExposeMetadata(target, propertyName, options) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(5784377, arguments.callee, this, arguments);
                                            arguments = J$.N(5784385, 'arguments', arguments, true, false, false);
                                            target = J$.N(5784393, 'target', target, true, false, false);
                                            propertyName = J$.N(5784401, 'propertyName', propertyName, true, false, false);
                                            options = J$.N(5784409, 'options', options, true, false, false);
                                            J$.P(5784321, J$.R(5784305, 'this', this, false, false), 'target', J$.R(5784313, 'target', target, false, false));
                                            J$.P(5784345, J$.R(5784329, 'this', this, false, false), 'propertyName', J$.R(5784337, 'propertyName', propertyName, false, false));
                                            J$.P(5784369, J$.R(5784353, 'this', this, false, false), 'options', J$.R(5784361, 'options', options, false, false));
                                        } catch (J$e) {
                                            J$.Ex(5784529, J$e);
                                        } finally {
                                            if (J$.Fr(5784537))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(5784441, 'arguments', arguments, true, false, false);
                            ExposeMetadata = J$.N(5784457, 'ExposeMetadata', J$.T(5784449, ExposeMetadata, 12, false), true, false, false);
                            return J$.Rt(5784425, J$.R(5784417, 'ExposeMetadata', ExposeMetadata, false, false));
                        } catch (J$e) {
                            J$.Ex(5784545, J$e);
                        } finally {
                            if (J$.Fr(5784553))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), ExposeMetadata, false, true);
            J$.P(5784505, J$.I(typeof exports === 'undefined' ? exports = J$.R(5784489, 'exports', undefined, true, true) : exports = J$.R(5784489, 'exports', exports, true, true)), 'ExposeMetadata', J$.R(5784497, 'ExposeMetadata', ExposeMetadata, false, true));
        } catch (J$e) {
            J$.Ex(5784561, J$e);
        } finally {
            if (J$.Sr(5784569))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

