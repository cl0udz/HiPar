J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2001217, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-transformer/metadata/ExposeMetadata.js');
            J$.N(2001225, 'ExposeMetadata', ExposeMetadata, false, false, false);
            J$.T(2000953, 'use strict', 21, false);
            J$.M(2001001, J$.I(typeof Object === 'undefined' ? Object = J$.R(2000961, 'Object', undefined, true, true) : Object = J$.R(2000961, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2000969, 'exports', undefined, true, true) : exports = J$.R(2000969, 'exports', exports, true, true)), J$.T(2000977, '__esModule', 21, false), J$.T(2000993, { value: J$.T(2000985, true, 23, false) }, 11, false));
            var ExposeMetadata = J$.W(2001185, 'ExposeMetadata', J$.F(2001177, J$.T(2001169, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2001137, arguments.callee, this, arguments);
                            function ExposeMetadata(target, propertyName, options) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2001081, arguments.callee, this, arguments);
                                            arguments = J$.N(2001089, 'arguments', arguments, true, false, false);
                                            target = J$.N(2001097, 'target', target, true, false, false);
                                            propertyName = J$.N(2001105, 'propertyName', propertyName, true, false, false);
                                            options = J$.N(2001113, 'options', options, true, false, false);
                                            J$.P(2001025, J$.R(2001009, 'this', this, false, false), 'target', J$.R(2001017, 'target', target, false, false));
                                            J$.P(2001049, J$.R(2001033, 'this', this, false, false), 'propertyName', J$.R(2001041, 'propertyName', propertyName, false, false));
                                            J$.P(2001073, J$.R(2001057, 'this', this, false, false), 'options', J$.R(2001065, 'options', options, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2001233, J$e);
                                        } finally {
                                            if (J$.Fr(2001241))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2001145, 'arguments', arguments, true, false, false);
                            ExposeMetadata = J$.N(2001161, 'ExposeMetadata', J$.T(2001153, ExposeMetadata, 12, false), true, false, false);
                            return J$.Rt(2001129, J$.R(2001121, 'ExposeMetadata', ExposeMetadata, false, false));
                        } catch (J$e) {
                            J$.Ex(2001249, J$e);
                        } finally {
                            if (J$.Fr(2001257))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), ExposeMetadata, false, true);
            J$.P(2001209, J$.I(typeof exports === 'undefined' ? exports = J$.R(2001193, 'exports', undefined, true, true) : exports = J$.R(2001193, 'exports', exports, true, true)), 'ExposeMetadata', J$.R(2001201, 'ExposeMetadata', ExposeMetadata, false, true));
        } catch (J$e) {
            J$.Ex(2001265, J$e);
        } finally {
            if (J$.Sr(2001273))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

