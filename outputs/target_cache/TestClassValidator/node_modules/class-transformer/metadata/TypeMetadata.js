J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2008569, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-transformer/metadata/TypeMetadata.js');
            J$.N(2008577, 'TypeMetadata', TypeMetadata, false, false, false);
            J$.T(2008241, 'use strict', 21, false);
            J$.M(2008289, J$.I(typeof Object === 'undefined' ? Object = J$.R(2008249, 'Object', undefined, true, true) : Object = J$.R(2008249, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2008257, 'exports', undefined, true, true) : exports = J$.R(2008257, 'exports', exports, true, true)), J$.T(2008265, '__esModule', 21, false), J$.T(2008281, { value: J$.T(2008273, true, 23, false) }, 11, false));
            var TypeMetadata = J$.W(2008537, 'TypeMetadata', J$.F(2008529, J$.T(2008521, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2008489, arguments.callee, this, arguments);
                            function TypeMetadata(target, propertyName, reflectedType, typeFunction, options) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2008417, arguments.callee, this, arguments);
                                            arguments = J$.N(2008425, 'arguments', arguments, true, false, false);
                                            target = J$.N(2008433, 'target', target, true, false, false);
                                            propertyName = J$.N(2008441, 'propertyName', propertyName, true, false, false);
                                            reflectedType = J$.N(2008449, 'reflectedType', reflectedType, true, false, false);
                                            typeFunction = J$.N(2008457, 'typeFunction', typeFunction, true, false, false);
                                            options = J$.N(2008465, 'options', options, true, false, false);
                                            J$.P(2008313, J$.R(2008297, 'this', this, false, false), 'target', J$.R(2008305, 'target', target, false, false));
                                            J$.P(2008337, J$.R(2008321, 'this', this, false, false), 'propertyName', J$.R(2008329, 'propertyName', propertyName, false, false));
                                            J$.P(2008361, J$.R(2008345, 'this', this, false, false), 'reflectedType', J$.R(2008353, 'reflectedType', reflectedType, false, false));
                                            J$.P(2008385, J$.R(2008369, 'this', this, false, false), 'typeFunction', J$.R(2008377, 'typeFunction', typeFunction, false, false));
                                            J$.P(2008409, J$.R(2008393, 'this', this, false, false), 'options', J$.R(2008401, 'options', options, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2008585, J$e);
                                        } finally {
                                            if (J$.Fr(2008593))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2008497, 'arguments', arguments, true, false, false);
                            TypeMetadata = J$.N(2008513, 'TypeMetadata', J$.T(2008505, TypeMetadata, 12, false), true, false, false);
                            return J$.Rt(2008481, J$.R(2008473, 'TypeMetadata', TypeMetadata, false, false));
                        } catch (J$e) {
                            J$.Ex(2008601, J$e);
                        } finally {
                            if (J$.Fr(2008609))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), TypeMetadata, false, true);
            J$.P(2008561, J$.I(typeof exports === 'undefined' ? exports = J$.R(2008545, 'exports', undefined, true, true) : exports = J$.R(2008545, 'exports', exports, true, true)), 'TypeMetadata', J$.R(2008553, 'TypeMetadata', TypeMetadata, false, true));
        } catch (J$e) {
            J$.Ex(2008617, J$e);
        } finally {
            if (J$.Sr(2008625))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

