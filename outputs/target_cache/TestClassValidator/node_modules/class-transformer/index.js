J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(1142369, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-transformer/index.js');
            function __export(m) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1140913, arguments.callee, this, arguments);
                            arguments = J$.N(1140921, 'arguments', arguments, true, false, false);
                            m = J$.N(1140929, 'm', m, true, false, false);
                            J$.N(1140937, 'p', p, false, false, false);
                            for (var p in J$.H(1140897, J$.R(1140817, 'm', m, false, false))) {
                                J$.N(1140905, 'p', p, false, true, false);
                                {
                                    if (J$.C(66080, J$.U(84066, '!', J$.M(1140841, J$.I(typeof exports === 'undefined' ? exports = J$.R(1140825, 'exports', undefined, true, true) : exports = J$.R(1140825, 'exports', exports, true, true)), 'hasOwnProperty', false)(J$.R(1140833, 'p', p, false, false)))))
                                        J$.P(1140889, J$.I(typeof exports === 'undefined' ? exports = J$.R(1140849, 'exports', undefined, true, true) : exports = J$.R(1140849, 'exports', exports, true, true)), J$.R(1140857, 'p', p, false, false), J$.G(1140881, J$.R(1140865, 'm', m, false, false), J$.R(1140873, 'p', p, false, false)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1142569, J$e);
                        } finally {
                            if (J$.Fr(1142577))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToPlain(object, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1141193, arguments.callee, this, arguments);
                            arguments = J$.N(1141201, 'arguments', arguments, true, false, false);
                            object = J$.N(1141209, 'object', object, true, false, false);
                            options = J$.N(1141217, 'options', options, true, false, false);
                            return J$.Rt(1141185, J$.M(1141177, J$.R(1141153, 'classTransformer', classTransformer, false, true), 'classToPlain', false)(J$.R(1141161, 'object', object, false, false), J$.R(1141169, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1142585, J$e);
                        } finally {
                            if (J$.Fr(1142593))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToPlainFromExist(object, plainObject, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1141297, arguments.callee, this, arguments);
                            arguments = J$.N(1141305, 'arguments', arguments, true, false, false);
                            object = J$.N(1141313, 'object', object, true, false, false);
                            plainObject = J$.N(1141321, 'plainObject', plainObject, true, false, false);
                            options = J$.N(1141329, 'options', options, true, false, false);
                            return J$.Rt(1141289, J$.M(1141281, J$.R(1141249, 'classTransformer', classTransformer, false, true), 'classToPlainFromExist', false)(J$.R(1141257, 'object', object, false, false), J$.R(1141265, 'plainObject', plainObject, false, false), J$.R(1141273, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1142601, J$e);
                        } finally {
                            if (J$.Fr(1142609))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function plainToClass(cls, plain, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1141409, arguments.callee, this, arguments);
                            arguments = J$.N(1141417, 'arguments', arguments, true, false, false);
                            cls = J$.N(1141425, 'cls', cls, true, false, false);
                            plain = J$.N(1141433, 'plain', plain, true, false, false);
                            options = J$.N(1141441, 'options', options, true, false, false);
                            return J$.Rt(1141401, J$.M(1141393, J$.R(1141361, 'classTransformer', classTransformer, false, true), 'plainToClass', false)(J$.R(1141369, 'cls', cls, false, false), J$.R(1141377, 'plain', plain, false, false), J$.R(1141385, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1142617, J$e);
                        } finally {
                            if (J$.Fr(1142625))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function plainToClassFromExist(clsObject, plain, options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1141521, arguments.callee, this, arguments);
                            arguments = J$.N(1141529, 'arguments', arguments, true, false, false);
                            clsObject = J$.N(1141537, 'clsObject', clsObject, true, false, false);
                            plain = J$.N(1141545, 'plain', plain, true, false, false);
                            options = J$.N(1141553, 'options', options, true, false, false);
                            return J$.Rt(1141513, J$.M(1141505, J$.R(1141473, 'classTransformer', classTransformer, false, true), 'plainToClassFromExist', false)(J$.R(1141481, 'clsObject', clsObject, false, false), J$.R(1141489, 'plain', plain, false, false), J$.R(1141497, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1142633, J$e);
                        } finally {
                            if (J$.Fr(1142641))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToClass(object, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1141625, arguments.callee, this, arguments);
                            arguments = J$.N(1141633, 'arguments', arguments, true, false, false);
                            object = J$.N(1141641, 'object', object, true, false, false);
                            options = J$.N(1141649, 'options', options, true, false, false);
                            return J$.Rt(1141617, J$.M(1141609, J$.R(1141585, 'classTransformer', classTransformer, false, true), 'classToClass', false)(J$.R(1141593, 'object', object, false, false), J$.R(1141601, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1142649, J$e);
                        } finally {
                            if (J$.Fr(1142657))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToClassFromExist(object, fromObject, options) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1141729, arguments.callee, this, arguments);
                            arguments = J$.N(1141737, 'arguments', arguments, true, false, false);
                            object = J$.N(1141745, 'object', object, true, false, false);
                            fromObject = J$.N(1141753, 'fromObject', fromObject, true, false, false);
                            options = J$.N(1141761, 'options', options, true, false, false);
                            return J$.Rt(1141721, J$.M(1141713, J$.R(1141681, 'classTransformer', classTransformer, false, true), 'classToClassFromExist', false)(J$.R(1141689, 'object', object, false, false), J$.R(1141697, 'fromObject', fromObject, false, false), J$.R(1141705, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1142665, J$e);
                        } finally {
                            if (J$.Fr(1142673))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function serialize(object, options) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1141833, arguments.callee, this, arguments);
                            arguments = J$.N(1141841, 'arguments', arguments, true, false, false);
                            object = J$.N(1141849, 'object', object, true, false, false);
                            options = J$.N(1141857, 'options', options, true, false, false);
                            return J$.Rt(1141825, J$.M(1141817, J$.R(1141793, 'classTransformer', classTransformer, false, true), 'serialize', false)(J$.R(1141801, 'object', object, false, false), J$.R(1141809, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1142681, J$e);
                        } finally {
                            if (J$.Fr(1142689))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function deserialize(cls, json, options) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(1141937, arguments.callee, this, arguments);
                            arguments = J$.N(1141945, 'arguments', arguments, true, false, false);
                            cls = J$.N(1141953, 'cls', cls, true, false, false);
                            json = J$.N(1141961, 'json', json, true, false, false);
                            options = J$.N(1141969, 'options', options, true, false, false);
                            return J$.Rt(1141929, J$.M(1141921, J$.R(1141889, 'classTransformer', classTransformer, false, true), 'deserialize', false)(J$.R(1141897, 'cls', cls, false, false), J$.R(1141905, 'json', json, false, false), J$.R(1141913, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1142697, J$e);
                        } finally {
                            if (J$.Fr(1142705))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function deserializeArray(cls, json, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(1142049, arguments.callee, this, arguments);
                            arguments = J$.N(1142057, 'arguments', arguments, true, false, false);
                            cls = J$.N(1142065, 'cls', cls, true, false, false);
                            json = J$.N(1142073, 'json', json, true, false, false);
                            options = J$.N(1142081, 'options', options, true, false, false);
                            return J$.Rt(1142041, J$.M(1142033, J$.R(1142001, 'classTransformer', classTransformer, false, true), 'deserializeArray', false)(J$.R(1142009, 'cls', cls, false, false), J$.R(1142017, 'json', json, false, false), J$.R(1142025, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1142713, J$e);
                        } finally {
                            if (J$.Fr(1142721))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            __export = J$.N(1142385, '__export', J$.T(1142377, __export, 12, false), true, false, false);
            J$.N(1142393, 'ClassTransformer_1', ClassTransformer_1, false, false, false);
            J$.N(1142401, 'ClassTransformer_2', ClassTransformer_2, false, false, false);
            J$.N(1142409, 'classTransformer', classTransformer, false, false, false);
            classToPlain = J$.N(1142425, 'classToPlain', J$.T(1142417, classToPlain, 12, false), true, false, false);
            classToPlainFromExist = J$.N(1142441, 'classToPlainFromExist', J$.T(1142433, classToPlainFromExist, 12, false), true, false, false);
            plainToClass = J$.N(1142457, 'plainToClass', J$.T(1142449, plainToClass, 12, false), true, false, false);
            plainToClassFromExist = J$.N(1142473, 'plainToClassFromExist', J$.T(1142465, plainToClassFromExist, 12, false), true, false, false);
            classToClass = J$.N(1142489, 'classToClass', J$.T(1142481, classToClass, 12, false), true, false, false);
            classToClassFromExist = J$.N(1142505, 'classToClassFromExist', J$.T(1142497, classToClassFromExist, 12, false), true, false, false);
            serialize = J$.N(1142521, 'serialize', J$.T(1142513, serialize, 12, false), true, false, false);
            deserialize = J$.N(1142537, 'deserialize', J$.T(1142529, deserialize, 12, false), true, false, false);
            deserializeArray = J$.N(1142553, 'deserializeArray', J$.T(1142545, deserializeArray, 12, false), true, false, false);
            J$.N(1142561, 'TransformationType', TransformationType, false, false, false);
            J$.T(1140809, 'use strict', 21, false);
            J$.M(1140985, J$.I(typeof Object === 'undefined' ? Object = J$.R(1140945, 'Object', undefined, true, true) : Object = J$.R(1140945, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1140953, 'exports', undefined, true, true) : exports = J$.R(1140953, 'exports', exports, true, true)), J$.T(1140961, '__esModule', 21, false), J$.T(1140977, { value: J$.T(1140969, true, 23, false) }, 11, false));
            var ClassTransformer_1 = J$.W(1141017, 'ClassTransformer_1', J$.F(1141009, J$.I(typeof require === 'undefined' ? require = J$.R(1140993, 'require', undefined, true, true) : require = J$.R(1140993, 'require', require, true, true)), false)(J$.T(1141001, './ClassTransformer', 21, false)), ClassTransformer_1, false, true);
            var ClassTransformer_2 = J$.W(1141049, 'ClassTransformer_2', J$.F(1141041, J$.I(typeof require === 'undefined' ? require = J$.R(1141025, 'require', undefined, true, true) : require = J$.R(1141025, 'require', require, true, true)), false)(J$.T(1141033, './ClassTransformer', 21, false)), ClassTransformer_2, false, true);
            J$.P(1141081, J$.I(typeof exports === 'undefined' ? exports = J$.R(1141057, 'exports', undefined, true, true) : exports = J$.R(1141057, 'exports', exports, true, true)), 'ClassTransformer', J$.G(1141073, J$.R(1141065, 'ClassTransformer_2', ClassTransformer_2, false, true), 'ClassTransformer'));
            J$.F(1141121, J$.R(1141089, '__export', __export, false, true), false)(J$.F(1141113, J$.I(typeof require === 'undefined' ? require = J$.R(1141097, 'require', undefined, true, true) : require = J$.R(1141097, 'require', require, true, true)), false)(J$.T(1141105, './decorators', 21, false)));
            var classTransformer = J$.W(1141145, 'classTransformer', J$.M(1141137, J$.R(1141129, 'ClassTransformer_1', ClassTransformer_1, false, true), 'ClassTransformer', true)(), classTransformer, false, true);
            J$.P(1141241, J$.I(typeof exports === 'undefined' ? exports = J$.R(1141225, 'exports', undefined, true, true) : exports = J$.R(1141225, 'exports', exports, true, true)), 'classToPlain', J$.R(1141233, 'classToPlain', classToPlain, false, true));
            J$.P(1141353, J$.I(typeof exports === 'undefined' ? exports = J$.R(1141337, 'exports', undefined, true, true) : exports = J$.R(1141337, 'exports', exports, true, true)), 'classToPlainFromExist', J$.R(1141345, 'classToPlainFromExist', classToPlainFromExist, false, true));
            J$.P(1141465, J$.I(typeof exports === 'undefined' ? exports = J$.R(1141449, 'exports', undefined, true, true) : exports = J$.R(1141449, 'exports', exports, true, true)), 'plainToClass', J$.R(1141457, 'plainToClass', plainToClass, false, true));
            J$.P(1141577, J$.I(typeof exports === 'undefined' ? exports = J$.R(1141561, 'exports', undefined, true, true) : exports = J$.R(1141561, 'exports', exports, true, true)), 'plainToClassFromExist', J$.R(1141569, 'plainToClassFromExist', plainToClassFromExist, false, true));
            J$.P(1141673, J$.I(typeof exports === 'undefined' ? exports = J$.R(1141657, 'exports', undefined, true, true) : exports = J$.R(1141657, 'exports', exports, true, true)), 'classToClass', J$.R(1141665, 'classToClass', classToClass, false, true));
            J$.P(1141785, J$.I(typeof exports === 'undefined' ? exports = J$.R(1141769, 'exports', undefined, true, true) : exports = J$.R(1141769, 'exports', exports, true, true)), 'classToClassFromExist', J$.R(1141777, 'classToClassFromExist', classToClassFromExist, false, true));
            J$.P(1141881, J$.I(typeof exports === 'undefined' ? exports = J$.R(1141865, 'exports', undefined, true, true) : exports = J$.R(1141865, 'exports', exports, true, true)), 'serialize', J$.R(1141873, 'serialize', serialize, false, true));
            J$.P(1141993, J$.I(typeof exports === 'undefined' ? exports = J$.R(1141977, 'exports', undefined, true, true) : exports = J$.R(1141977, 'exports', exports, true, true)), 'deserialize', J$.R(1141985, 'deserialize', deserialize, false, true));
            J$.P(1142105, J$.I(typeof exports === 'undefined' ? exports = J$.R(1142089, 'exports', undefined, true, true) : exports = J$.R(1142089, 'exports', exports, true, true)), 'deserializeArray', J$.R(1142097, 'deserializeArray', deserializeArray, false, true));
            var TransformationType;
            J$.F(1142361, J$.T(1142305, function (TransformationType) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(1142281, arguments.callee, this, arguments);
                            arguments = J$.N(1142289, 'arguments', arguments, true, false, false);
                            TransformationType = J$.N(1142297, 'TransformationType', TransformationType, true, false, false);
                            J$.P(1142161, J$.R(1142113, 'TransformationType', TransformationType, false, false), J$.P(1142145, J$.R(1142121, 'TransformationType', TransformationType, false, false), J$.T(1142129, 'PLAIN_TO_CLASS', 21, false), J$.T(1142137, 0, 22, false)), J$.T(1142153, 'PLAIN_TO_CLASS', 21, false));
                            J$.P(1142217, J$.R(1142169, 'TransformationType', TransformationType, false, false), J$.P(1142201, J$.R(1142177, 'TransformationType', TransformationType, false, false), J$.T(1142185, 'CLASS_TO_PLAIN', 21, false), J$.T(1142193, 1, 22, false)), J$.T(1142209, 'CLASS_TO_PLAIN', 21, false));
                            J$.P(1142273, J$.R(1142225, 'TransformationType', TransformationType, false, false), J$.P(1142257, J$.R(1142233, 'TransformationType', TransformationType, false, false), J$.T(1142241, 'CLASS_TO_CLASS', 21, false), J$.T(1142249, 2, 22, false)), J$.T(1142265, 'CLASS_TO_CLASS', 21, false));
                        } catch (J$e) {
                            J$.Ex(1142729, J$e);
                        } finally {
                            if (J$.Fr(1142737))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(TransformationType = J$.W(1142353, 'TransformationType', J$.C(66088, J$.G(1142321, J$.I(typeof exports === 'undefined' ? exports = J$.R(1142313, 'exports', undefined, true, true) : exports = J$.R(1142313, 'exports', exports, true, true)), 'TransformationType')) ? J$._() : J$.P(1142345, J$.I(typeof exports === 'undefined' ? exports = J$.R(1142329, 'exports', undefined, true, true) : exports = J$.R(1142329, 'exports', exports, true, true)), 'TransformationType', J$.T(1142337, {}, 11, false)), TransformationType, false, true));
        } catch (J$e) {
            J$.Ex(1142745, J$e);
        } finally {
            if (J$.Sr(1142753))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

