J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(5783449, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-transformer/index.js');
            function __export(m) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5781993, arguments.callee, this, arguments);
                            arguments = J$.N(5782001, 'arguments', arguments, true, false, false);
                            m = J$.N(5782009, 'm', m, true, false, false);
                            J$.N(5782017, 'p', p, false, false, false);
                            for (var p in J$.H(5781977, J$.R(5781897, 'm', m, false, false))) {
                                J$.N(5781985, 'p', p, false, true, false);
                                {
                                    if (J$.C(316600, J$.U(600602, '!', J$.M(5781921, J$.I(typeof exports === 'undefined' ? exports = J$.R(5781905, 'exports', undefined, true, true) : exports = J$.R(5781905, 'exports', exports, true, true)), 'hasOwnProperty', false)(J$.R(5781913, 'p', p, false, false)))))
                                        J$.P(5781969, J$.I(typeof exports === 'undefined' ? exports = J$.R(5781929, 'exports', undefined, true, true) : exports = J$.R(5781929, 'exports', exports, true, true)), J$.R(5781937, 'p', p, false, false), J$.G(5781961, J$.R(5781945, 'm', m, false, false), J$.R(5781953, 'p', p, false, false)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(5783649, J$e);
                        } finally {
                            if (J$.Fr(5783657))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToPlain(object, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5782273, arguments.callee, this, arguments);
                            arguments = J$.N(5782281, 'arguments', arguments, true, false, false);
                            object = J$.N(5782289, 'object', object, true, false, false);
                            options = J$.N(5782297, 'options', options, true, false, false);
                            return J$.Rt(5782265, J$.M(5782257, J$.R(5782233, 'classTransformer', classTransformer, false, true), 'classToPlain', false)(J$.R(5782241, 'object', object, false, false), J$.R(5782249, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5783665, J$e);
                        } finally {
                            if (J$.Fr(5783673))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToPlainFromExist(object, plainObject, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5782377, arguments.callee, this, arguments);
                            arguments = J$.N(5782385, 'arguments', arguments, true, false, false);
                            object = J$.N(5782393, 'object', object, true, false, false);
                            plainObject = J$.N(5782401, 'plainObject', plainObject, true, false, false);
                            options = J$.N(5782409, 'options', options, true, false, false);
                            return J$.Rt(5782369, J$.M(5782361, J$.R(5782329, 'classTransformer', classTransformer, false, true), 'classToPlainFromExist', false)(J$.R(5782337, 'object', object, false, false), J$.R(5782345, 'plainObject', plainObject, false, false), J$.R(5782353, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5783681, J$e);
                        } finally {
                            if (J$.Fr(5783689))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function plainToClass(cls, plain, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5782489, arguments.callee, this, arguments);
                            arguments = J$.N(5782497, 'arguments', arguments, true, false, false);
                            cls = J$.N(5782505, 'cls', cls, true, false, false);
                            plain = J$.N(5782513, 'plain', plain, true, false, false);
                            options = J$.N(5782521, 'options', options, true, false, false);
                            return J$.Rt(5782481, J$.M(5782473, J$.R(5782441, 'classTransformer', classTransformer, false, true), 'plainToClass', false)(J$.R(5782449, 'cls', cls, false, false), J$.R(5782457, 'plain', plain, false, false), J$.R(5782465, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5783697, J$e);
                        } finally {
                            if (J$.Fr(5783705))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function plainToClassFromExist(clsObject, plain, options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5782601, arguments.callee, this, arguments);
                            arguments = J$.N(5782609, 'arguments', arguments, true, false, false);
                            clsObject = J$.N(5782617, 'clsObject', clsObject, true, false, false);
                            plain = J$.N(5782625, 'plain', plain, true, false, false);
                            options = J$.N(5782633, 'options', options, true, false, false);
                            return J$.Rt(5782593, J$.M(5782585, J$.R(5782553, 'classTransformer', classTransformer, false, true), 'plainToClassFromExist', false)(J$.R(5782561, 'clsObject', clsObject, false, false), J$.R(5782569, 'plain', plain, false, false), J$.R(5782577, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5783713, J$e);
                        } finally {
                            if (J$.Fr(5783721))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToClass(object, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5782705, arguments.callee, this, arguments);
                            arguments = J$.N(5782713, 'arguments', arguments, true, false, false);
                            object = J$.N(5782721, 'object', object, true, false, false);
                            options = J$.N(5782729, 'options', options, true, false, false);
                            return J$.Rt(5782697, J$.M(5782689, J$.R(5782665, 'classTransformer', classTransformer, false, true), 'classToClass', false)(J$.R(5782673, 'object', object, false, false), J$.R(5782681, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5783729, J$e);
                        } finally {
                            if (J$.Fr(5783737))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToClassFromExist(object, fromObject, options) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5782809, arguments.callee, this, arguments);
                            arguments = J$.N(5782817, 'arguments', arguments, true, false, false);
                            object = J$.N(5782825, 'object', object, true, false, false);
                            fromObject = J$.N(5782833, 'fromObject', fromObject, true, false, false);
                            options = J$.N(5782841, 'options', options, true, false, false);
                            return J$.Rt(5782801, J$.M(5782793, J$.R(5782761, 'classTransformer', classTransformer, false, true), 'classToClassFromExist', false)(J$.R(5782769, 'object', object, false, false), J$.R(5782777, 'fromObject', fromObject, false, false), J$.R(5782785, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5783745, J$e);
                        } finally {
                            if (J$.Fr(5783753))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function serialize(object, options) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(5782913, arguments.callee, this, arguments);
                            arguments = J$.N(5782921, 'arguments', arguments, true, false, false);
                            object = J$.N(5782929, 'object', object, true, false, false);
                            options = J$.N(5782937, 'options', options, true, false, false);
                            return J$.Rt(5782905, J$.M(5782897, J$.R(5782873, 'classTransformer', classTransformer, false, true), 'serialize', false)(J$.R(5782881, 'object', object, false, false), J$.R(5782889, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5783761, J$e);
                        } finally {
                            if (J$.Fr(5783769))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function deserialize(cls, json, options) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(5783017, arguments.callee, this, arguments);
                            arguments = J$.N(5783025, 'arguments', arguments, true, false, false);
                            cls = J$.N(5783033, 'cls', cls, true, false, false);
                            json = J$.N(5783041, 'json', json, true, false, false);
                            options = J$.N(5783049, 'options', options, true, false, false);
                            return J$.Rt(5783009, J$.M(5783001, J$.R(5782969, 'classTransformer', classTransformer, false, true), 'deserialize', false)(J$.R(5782977, 'cls', cls, false, false), J$.R(5782985, 'json', json, false, false), J$.R(5782993, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5783777, J$e);
                        } finally {
                            if (J$.Fr(5783785))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function deserializeArray(cls, json, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(5783129, arguments.callee, this, arguments);
                            arguments = J$.N(5783137, 'arguments', arguments, true, false, false);
                            cls = J$.N(5783145, 'cls', cls, true, false, false);
                            json = J$.N(5783153, 'json', json, true, false, false);
                            options = J$.N(5783161, 'options', options, true, false, false);
                            return J$.Rt(5783121, J$.M(5783113, J$.R(5783081, 'classTransformer', classTransformer, false, true), 'deserializeArray', false)(J$.R(5783089, 'cls', cls, false, false), J$.R(5783097, 'json', json, false, false), J$.R(5783105, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5783793, J$e);
                        } finally {
                            if (J$.Fr(5783801))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            __export = J$.N(5783465, '__export', J$.T(5783457, __export, 12, false), true, false, false);
            J$.N(5783473, 'ClassTransformer_1', ClassTransformer_1, false, false, false);
            J$.N(5783481, 'ClassTransformer_2', ClassTransformer_2, false, false, false);
            J$.N(5783489, 'classTransformer', classTransformer, false, false, false);
            classToPlain = J$.N(5783505, 'classToPlain', J$.T(5783497, classToPlain, 12, false), true, false, false);
            classToPlainFromExist = J$.N(5783521, 'classToPlainFromExist', J$.T(5783513, classToPlainFromExist, 12, false), true, false, false);
            plainToClass = J$.N(5783537, 'plainToClass', J$.T(5783529, plainToClass, 12, false), true, false, false);
            plainToClassFromExist = J$.N(5783553, 'plainToClassFromExist', J$.T(5783545, plainToClassFromExist, 12, false), true, false, false);
            classToClass = J$.N(5783569, 'classToClass', J$.T(5783561, classToClass, 12, false), true, false, false);
            classToClassFromExist = J$.N(5783585, 'classToClassFromExist', J$.T(5783577, classToClassFromExist, 12, false), true, false, false);
            serialize = J$.N(5783601, 'serialize', J$.T(5783593, serialize, 12, false), true, false, false);
            deserialize = J$.N(5783617, 'deserialize', J$.T(5783609, deserialize, 12, false), true, false, false);
            deserializeArray = J$.N(5783633, 'deserializeArray', J$.T(5783625, deserializeArray, 12, false), true, false, false);
            J$.N(5783641, 'TransformationType', TransformationType, false, false, false);
            J$.T(5781889, 'use strict', 21, false);
            J$.M(5782065, J$.I(typeof Object === 'undefined' ? Object = J$.R(5782025, 'Object', undefined, true, true) : Object = J$.R(5782025, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5782033, 'exports', undefined, true, true) : exports = J$.R(5782033, 'exports', exports, true, true)), J$.T(5782041, '__esModule', 21, false), J$.T(5782057, { value: J$.T(5782049, true, 23, false) }, 11, false));
            var ClassTransformer_1 = J$.W(5782097, 'ClassTransformer_1', J$.F(5782089, J$.I(typeof require === 'undefined' ? require = J$.R(5782073, 'require', undefined, true, true) : require = J$.R(5782073, 'require', require, true, true)), false)(J$.T(5782081, './ClassTransformer', 21, false)), ClassTransformer_1, false, true);
            var ClassTransformer_2 = J$.W(5782129, 'ClassTransformer_2', J$.F(5782121, J$.I(typeof require === 'undefined' ? require = J$.R(5782105, 'require', undefined, true, true) : require = J$.R(5782105, 'require', require, true, true)), false)(J$.T(5782113, './ClassTransformer', 21, false)), ClassTransformer_2, false, true);
            J$.P(5782161, J$.I(typeof exports === 'undefined' ? exports = J$.R(5782137, 'exports', undefined, true, true) : exports = J$.R(5782137, 'exports', exports, true, true)), 'ClassTransformer', J$.G(5782153, J$.R(5782145, 'ClassTransformer_2', ClassTransformer_2, false, true), 'ClassTransformer'));
            J$.F(5782201, J$.R(5782169, '__export', __export, false, true), false)(J$.F(5782193, J$.I(typeof require === 'undefined' ? require = J$.R(5782177, 'require', undefined, true, true) : require = J$.R(5782177, 'require', require, true, true)), false)(J$.T(5782185, './decorators', 21, false)));
            var classTransformer = J$.W(5782225, 'classTransformer', J$.M(5782217, J$.R(5782209, 'ClassTransformer_1', ClassTransformer_1, false, true), 'ClassTransformer', true)(), classTransformer, false, true);
            J$.P(5782321, J$.I(typeof exports === 'undefined' ? exports = J$.R(5782305, 'exports', undefined, true, true) : exports = J$.R(5782305, 'exports', exports, true, true)), 'classToPlain', J$.R(5782313, 'classToPlain', classToPlain, false, true));
            J$.P(5782433, J$.I(typeof exports === 'undefined' ? exports = J$.R(5782417, 'exports', undefined, true, true) : exports = J$.R(5782417, 'exports', exports, true, true)), 'classToPlainFromExist', J$.R(5782425, 'classToPlainFromExist', classToPlainFromExist, false, true));
            J$.P(5782545, J$.I(typeof exports === 'undefined' ? exports = J$.R(5782529, 'exports', undefined, true, true) : exports = J$.R(5782529, 'exports', exports, true, true)), 'plainToClass', J$.R(5782537, 'plainToClass', plainToClass, false, true));
            J$.P(5782657, J$.I(typeof exports === 'undefined' ? exports = J$.R(5782641, 'exports', undefined, true, true) : exports = J$.R(5782641, 'exports', exports, true, true)), 'plainToClassFromExist', J$.R(5782649, 'plainToClassFromExist', plainToClassFromExist, false, true));
            J$.P(5782753, J$.I(typeof exports === 'undefined' ? exports = J$.R(5782737, 'exports', undefined, true, true) : exports = J$.R(5782737, 'exports', exports, true, true)), 'classToClass', J$.R(5782745, 'classToClass', classToClass, false, true));
            J$.P(5782865, J$.I(typeof exports === 'undefined' ? exports = J$.R(5782849, 'exports', undefined, true, true) : exports = J$.R(5782849, 'exports', exports, true, true)), 'classToClassFromExist', J$.R(5782857, 'classToClassFromExist', classToClassFromExist, false, true));
            J$.P(5782961, J$.I(typeof exports === 'undefined' ? exports = J$.R(5782945, 'exports', undefined, true, true) : exports = J$.R(5782945, 'exports', exports, true, true)), 'serialize', J$.R(5782953, 'serialize', serialize, false, true));
            J$.P(5783073, J$.I(typeof exports === 'undefined' ? exports = J$.R(5783057, 'exports', undefined, true, true) : exports = J$.R(5783057, 'exports', exports, true, true)), 'deserialize', J$.R(5783065, 'deserialize', deserialize, false, true));
            J$.P(5783185, J$.I(typeof exports === 'undefined' ? exports = J$.R(5783169, 'exports', undefined, true, true) : exports = J$.R(5783169, 'exports', exports, true, true)), 'deserializeArray', J$.R(5783177, 'deserializeArray', deserializeArray, false, true));
            var TransformationType;
            J$.F(5783441, J$.T(5783385, function (TransformationType) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(5783361, arguments.callee, this, arguments);
                            arguments = J$.N(5783369, 'arguments', arguments, true, false, false);
                            TransformationType = J$.N(5783377, 'TransformationType', TransformationType, true, false, false);
                            J$.P(5783241, J$.R(5783193, 'TransformationType', TransformationType, false, false), J$.P(5783225, J$.R(5783201, 'TransformationType', TransformationType, false, false), J$.T(5783209, 'PLAIN_TO_CLASS', 21, false), J$.T(5783217, 0, 22, false)), J$.T(5783233, 'PLAIN_TO_CLASS', 21, false));
                            J$.P(5783297, J$.R(5783249, 'TransformationType', TransformationType, false, false), J$.P(5783281, J$.R(5783257, 'TransformationType', TransformationType, false, false), J$.T(5783265, 'CLASS_TO_PLAIN', 21, false), J$.T(5783273, 1, 22, false)), J$.T(5783289, 'CLASS_TO_PLAIN', 21, false));
                            J$.P(5783353, J$.R(5783305, 'TransformationType', TransformationType, false, false), J$.P(5783337, J$.R(5783313, 'TransformationType', TransformationType, false, false), J$.T(5783321, 'CLASS_TO_CLASS', 21, false), J$.T(5783329, 2, 22, false)), J$.T(5783345, 'CLASS_TO_CLASS', 21, false));
                        } catch (J$e) {
                            J$.Ex(5783809, J$e);
                        } finally {
                            if (J$.Fr(5783817))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(TransformationType = J$.W(5783433, 'TransformationType', J$.C(316608, J$.G(5783401, J$.I(typeof exports === 'undefined' ? exports = J$.R(5783393, 'exports', undefined, true, true) : exports = J$.R(5783393, 'exports', exports, true, true)), 'TransformationType')) ? J$._() : J$.P(5783425, J$.I(typeof exports === 'undefined' ? exports = J$.R(5783409, 'exports', undefined, true, true) : exports = J$.R(5783409, 'exports', exports, true, true)), 'TransformationType', J$.T(5783417, {}, 11, false)), TransformationType, false, true));
        } catch (J$e) {
            J$.Ex(5783825, J$e);
        } finally {
            if (J$.Sr(5783833))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

