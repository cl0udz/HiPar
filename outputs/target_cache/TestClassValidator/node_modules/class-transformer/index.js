J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(2000153, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-transformer/index.js');
            function __export(m) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1998697, arguments.callee, this, arguments);
                            arguments = J$.N(1998705, 'arguments', arguments, true, false, false);
                            m = J$.N(1998713, 'm', m, true, false, false);
                            J$.N(1998721, 'p', p, false, false, false);
                            for (var p in J$.H(1998681, J$.R(1998601, 'm', m, false, false))) {
                                J$.N(1998689, 'p', p, false, true, false);
                                {
                                    if (J$.C(120080, J$.U(253186, '!', J$.M(1998625, J$.I(typeof exports === 'undefined' ? exports = J$.R(1998609, 'exports', undefined, true, true) : exports = J$.R(1998609, 'exports', exports, true, true)), 'hasOwnProperty', false)(J$.R(1998617, 'p', p, false, false)))))
                                        J$.P(1998673, J$.I(typeof exports === 'undefined' ? exports = J$.R(1998633, 'exports', undefined, true, true) : exports = J$.R(1998633, 'exports', exports, true, true)), J$.R(1998641, 'p', p, false, false), J$.G(1998665, J$.R(1998649, 'm', m, false, false), J$.R(1998657, 'p', p, false, false)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(2000353, J$e);
                        } finally {
                            if (J$.Fr(2000361))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToPlain(object, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1998977, arguments.callee, this, arguments);
                            arguments = J$.N(1998985, 'arguments', arguments, true, false, false);
                            object = J$.N(1998993, 'object', object, true, false, false);
                            options = J$.N(1999001, 'options', options, true, false, false);
                            return J$.Rt(1998969, J$.M(1998961, J$.R(1998937, 'classTransformer', classTransformer, false, true), 'classToPlain', false)(J$.R(1998945, 'object', object, false, false), J$.R(1998953, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(2000369, J$e);
                        } finally {
                            if (J$.Fr(2000377))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToPlainFromExist(object, plainObject, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1999081, arguments.callee, this, arguments);
                            arguments = J$.N(1999089, 'arguments', arguments, true, false, false);
                            object = J$.N(1999097, 'object', object, true, false, false);
                            plainObject = J$.N(1999105, 'plainObject', plainObject, true, false, false);
                            options = J$.N(1999113, 'options', options, true, false, false);
                            return J$.Rt(1999073, J$.M(1999065, J$.R(1999033, 'classTransformer', classTransformer, false, true), 'classToPlainFromExist', false)(J$.R(1999041, 'object', object, false, false), J$.R(1999049, 'plainObject', plainObject, false, false), J$.R(1999057, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(2000385, J$e);
                        } finally {
                            if (J$.Fr(2000393))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function plainToClass(cls, plain, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1999193, arguments.callee, this, arguments);
                            arguments = J$.N(1999201, 'arguments', arguments, true, false, false);
                            cls = J$.N(1999209, 'cls', cls, true, false, false);
                            plain = J$.N(1999217, 'plain', plain, true, false, false);
                            options = J$.N(1999225, 'options', options, true, false, false);
                            return J$.Rt(1999185, J$.M(1999177, J$.R(1999145, 'classTransformer', classTransformer, false, true), 'plainToClass', false)(J$.R(1999153, 'cls', cls, false, false), J$.R(1999161, 'plain', plain, false, false), J$.R(1999169, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(2000401, J$e);
                        } finally {
                            if (J$.Fr(2000409))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function plainToClassFromExist(clsObject, plain, options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1999305, arguments.callee, this, arguments);
                            arguments = J$.N(1999313, 'arguments', arguments, true, false, false);
                            clsObject = J$.N(1999321, 'clsObject', clsObject, true, false, false);
                            plain = J$.N(1999329, 'plain', plain, true, false, false);
                            options = J$.N(1999337, 'options', options, true, false, false);
                            return J$.Rt(1999297, J$.M(1999289, J$.R(1999257, 'classTransformer', classTransformer, false, true), 'plainToClassFromExist', false)(J$.R(1999265, 'clsObject', clsObject, false, false), J$.R(1999273, 'plain', plain, false, false), J$.R(1999281, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(2000417, J$e);
                        } finally {
                            if (J$.Fr(2000425))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToClass(object, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1999409, arguments.callee, this, arguments);
                            arguments = J$.N(1999417, 'arguments', arguments, true, false, false);
                            object = J$.N(1999425, 'object', object, true, false, false);
                            options = J$.N(1999433, 'options', options, true, false, false);
                            return J$.Rt(1999401, J$.M(1999393, J$.R(1999369, 'classTransformer', classTransformer, false, true), 'classToClass', false)(J$.R(1999377, 'object', object, false, false), J$.R(1999385, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(2000433, J$e);
                        } finally {
                            if (J$.Fr(2000441))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function classToClassFromExist(object, fromObject, options) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1999513, arguments.callee, this, arguments);
                            arguments = J$.N(1999521, 'arguments', arguments, true, false, false);
                            object = J$.N(1999529, 'object', object, true, false, false);
                            fromObject = J$.N(1999537, 'fromObject', fromObject, true, false, false);
                            options = J$.N(1999545, 'options', options, true, false, false);
                            return J$.Rt(1999505, J$.M(1999497, J$.R(1999465, 'classTransformer', classTransformer, false, true), 'classToClassFromExist', false)(J$.R(1999473, 'object', object, false, false), J$.R(1999481, 'fromObject', fromObject, false, false), J$.R(1999489, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(2000449, J$e);
                        } finally {
                            if (J$.Fr(2000457))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function serialize(object, options) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1999617, arguments.callee, this, arguments);
                            arguments = J$.N(1999625, 'arguments', arguments, true, false, false);
                            object = J$.N(1999633, 'object', object, true, false, false);
                            options = J$.N(1999641, 'options', options, true, false, false);
                            return J$.Rt(1999609, J$.M(1999601, J$.R(1999577, 'classTransformer', classTransformer, false, true), 'serialize', false)(J$.R(1999585, 'object', object, false, false), J$.R(1999593, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(2000465, J$e);
                        } finally {
                            if (J$.Fr(2000473))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function deserialize(cls, json, options) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(1999721, arguments.callee, this, arguments);
                            arguments = J$.N(1999729, 'arguments', arguments, true, false, false);
                            cls = J$.N(1999737, 'cls', cls, true, false, false);
                            json = J$.N(1999745, 'json', json, true, false, false);
                            options = J$.N(1999753, 'options', options, true, false, false);
                            return J$.Rt(1999713, J$.M(1999705, J$.R(1999673, 'classTransformer', classTransformer, false, true), 'deserialize', false)(J$.R(1999681, 'cls', cls, false, false), J$.R(1999689, 'json', json, false, false), J$.R(1999697, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(2000481, J$e);
                        } finally {
                            if (J$.Fr(2000489))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function deserializeArray(cls, json, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(1999833, arguments.callee, this, arguments);
                            arguments = J$.N(1999841, 'arguments', arguments, true, false, false);
                            cls = J$.N(1999849, 'cls', cls, true, false, false);
                            json = J$.N(1999857, 'json', json, true, false, false);
                            options = J$.N(1999865, 'options', options, true, false, false);
                            return J$.Rt(1999825, J$.M(1999817, J$.R(1999785, 'classTransformer', classTransformer, false, true), 'deserializeArray', false)(J$.R(1999793, 'cls', cls, false, false), J$.R(1999801, 'json', json, false, false), J$.R(1999809, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(2000497, J$e);
                        } finally {
                            if (J$.Fr(2000505))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            __export = J$.N(2000169, '__export', J$.T(2000161, __export, 12, false), true, false, false);
            J$.N(2000177, 'ClassTransformer_1', ClassTransformer_1, false, false, false);
            J$.N(2000185, 'ClassTransformer_2', ClassTransformer_2, false, false, false);
            J$.N(2000193, 'classTransformer', classTransformer, false, false, false);
            classToPlain = J$.N(2000209, 'classToPlain', J$.T(2000201, classToPlain, 12, false), true, false, false);
            classToPlainFromExist = J$.N(2000225, 'classToPlainFromExist', J$.T(2000217, classToPlainFromExist, 12, false), true, false, false);
            plainToClass = J$.N(2000241, 'plainToClass', J$.T(2000233, plainToClass, 12, false), true, false, false);
            plainToClassFromExist = J$.N(2000257, 'plainToClassFromExist', J$.T(2000249, plainToClassFromExist, 12, false), true, false, false);
            classToClass = J$.N(2000273, 'classToClass', J$.T(2000265, classToClass, 12, false), true, false, false);
            classToClassFromExist = J$.N(2000289, 'classToClassFromExist', J$.T(2000281, classToClassFromExist, 12, false), true, false, false);
            serialize = J$.N(2000305, 'serialize', J$.T(2000297, serialize, 12, false), true, false, false);
            deserialize = J$.N(2000321, 'deserialize', J$.T(2000313, deserialize, 12, false), true, false, false);
            deserializeArray = J$.N(2000337, 'deserializeArray', J$.T(2000329, deserializeArray, 12, false), true, false, false);
            J$.N(2000345, 'TransformationType', TransformationType, false, false, false);
            J$.T(1998593, 'use strict', 21, false);
            J$.M(1998769, J$.I(typeof Object === 'undefined' ? Object = J$.R(1998729, 'Object', undefined, true, true) : Object = J$.R(1998729, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1998737, 'exports', undefined, true, true) : exports = J$.R(1998737, 'exports', exports, true, true)), J$.T(1998745, '__esModule', 21, false), J$.T(1998761, { value: J$.T(1998753, true, 23, false) }, 11, false));
            var ClassTransformer_1 = J$.W(1998801, 'ClassTransformer_1', J$.F(1998793, J$.I(typeof require === 'undefined' ? require = J$.R(1998777, 'require', undefined, true, true) : require = J$.R(1998777, 'require', require, true, true)), false)(J$.T(1998785, './ClassTransformer', 21, false)), ClassTransformer_1, false, true);
            var ClassTransformer_2 = J$.W(1998833, 'ClassTransformer_2', J$.F(1998825, J$.I(typeof require === 'undefined' ? require = J$.R(1998809, 'require', undefined, true, true) : require = J$.R(1998809, 'require', require, true, true)), false)(J$.T(1998817, './ClassTransformer', 21, false)), ClassTransformer_2, false, true);
            J$.P(1998865, J$.I(typeof exports === 'undefined' ? exports = J$.R(1998841, 'exports', undefined, true, true) : exports = J$.R(1998841, 'exports', exports, true, true)), 'ClassTransformer', J$.G(1998857, J$.R(1998849, 'ClassTransformer_2', ClassTransformer_2, false, true), 'ClassTransformer'));
            J$.F(1998905, J$.R(1998873, '__export', __export, false, true), false)(J$.F(1998897, J$.I(typeof require === 'undefined' ? require = J$.R(1998881, 'require', undefined, true, true) : require = J$.R(1998881, 'require', require, true, true)), false)(J$.T(1998889, './decorators', 21, false)));
            var classTransformer = J$.W(1998929, 'classTransformer', J$.M(1998921, J$.R(1998913, 'ClassTransformer_1', ClassTransformer_1, false, true), 'ClassTransformer', true)(), classTransformer, false, true);
            J$.P(1999025, J$.I(typeof exports === 'undefined' ? exports = J$.R(1999009, 'exports', undefined, true, true) : exports = J$.R(1999009, 'exports', exports, true, true)), 'classToPlain', J$.R(1999017, 'classToPlain', classToPlain, false, true));
            J$.P(1999137, J$.I(typeof exports === 'undefined' ? exports = J$.R(1999121, 'exports', undefined, true, true) : exports = J$.R(1999121, 'exports', exports, true, true)), 'classToPlainFromExist', J$.R(1999129, 'classToPlainFromExist', classToPlainFromExist, false, true));
            J$.P(1999249, J$.I(typeof exports === 'undefined' ? exports = J$.R(1999233, 'exports', undefined, true, true) : exports = J$.R(1999233, 'exports', exports, true, true)), 'plainToClass', J$.R(1999241, 'plainToClass', plainToClass, false, true));
            J$.P(1999361, J$.I(typeof exports === 'undefined' ? exports = J$.R(1999345, 'exports', undefined, true, true) : exports = J$.R(1999345, 'exports', exports, true, true)), 'plainToClassFromExist', J$.R(1999353, 'plainToClassFromExist', plainToClassFromExist, false, true));
            J$.P(1999457, J$.I(typeof exports === 'undefined' ? exports = J$.R(1999441, 'exports', undefined, true, true) : exports = J$.R(1999441, 'exports', exports, true, true)), 'classToClass', J$.R(1999449, 'classToClass', classToClass, false, true));
            J$.P(1999569, J$.I(typeof exports === 'undefined' ? exports = J$.R(1999553, 'exports', undefined, true, true) : exports = J$.R(1999553, 'exports', exports, true, true)), 'classToClassFromExist', J$.R(1999561, 'classToClassFromExist', classToClassFromExist, false, true));
            J$.P(1999665, J$.I(typeof exports === 'undefined' ? exports = J$.R(1999649, 'exports', undefined, true, true) : exports = J$.R(1999649, 'exports', exports, true, true)), 'serialize', J$.R(1999657, 'serialize', serialize, false, true));
            J$.P(1999777, J$.I(typeof exports === 'undefined' ? exports = J$.R(1999761, 'exports', undefined, true, true) : exports = J$.R(1999761, 'exports', exports, true, true)), 'deserialize', J$.R(1999769, 'deserialize', deserialize, false, true));
            J$.P(1999889, J$.I(typeof exports === 'undefined' ? exports = J$.R(1999873, 'exports', undefined, true, true) : exports = J$.R(1999873, 'exports', exports, true, true)), 'deserializeArray', J$.R(1999881, 'deserializeArray', deserializeArray, false, true));
            var TransformationType;
            J$.F(2000145, J$.T(2000089, function (TransformationType) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(2000065, arguments.callee, this, arguments);
                            arguments = J$.N(2000073, 'arguments', arguments, true, false, false);
                            TransformationType = J$.N(2000081, 'TransformationType', TransformationType, true, false, false);
                            J$.P(1999945, J$.R(1999897, 'TransformationType', TransformationType, false, false), J$.P(1999929, J$.R(1999905, 'TransformationType', TransformationType, false, false), J$.T(1999913, 'PLAIN_TO_CLASS', 21, false), J$.T(1999921, 0, 22, false)), J$.T(1999937, 'PLAIN_TO_CLASS', 21, false));
                            J$.P(2000001, J$.R(1999953, 'TransformationType', TransformationType, false, false), J$.P(1999985, J$.R(1999961, 'TransformationType', TransformationType, false, false), J$.T(1999969, 'CLASS_TO_PLAIN', 21, false), J$.T(1999977, 1, 22, false)), J$.T(1999993, 'CLASS_TO_PLAIN', 21, false));
                            J$.P(2000057, J$.R(2000009, 'TransformationType', TransformationType, false, false), J$.P(2000041, J$.R(2000017, 'TransformationType', TransformationType, false, false), J$.T(2000025, 'CLASS_TO_CLASS', 21, false), J$.T(2000033, 2, 22, false)), J$.T(2000049, 'CLASS_TO_CLASS', 21, false));
                        } catch (J$e) {
                            J$.Ex(2000513, J$e);
                        } finally {
                            if (J$.Fr(2000521))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(TransformationType = J$.W(2000137, 'TransformationType', J$.C(120088, J$.G(2000105, J$.I(typeof exports === 'undefined' ? exports = J$.R(2000097, 'exports', undefined, true, true) : exports = J$.R(2000097, 'exports', exports, true, true)), 'TransformationType')) ? J$._() : J$.P(2000129, J$.I(typeof exports === 'undefined' ? exports = J$.R(2000113, 'exports', undefined, true, true) : exports = J$.R(2000113, 'exports', exports, true, true)), 'TransformationType', J$.T(2000121, {}, 11, false)), TransformationType, false, true));
        } catch (J$e) {
            J$.Ex(2000529, J$e);
        } finally {
            if (J$.Sr(2000537))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

