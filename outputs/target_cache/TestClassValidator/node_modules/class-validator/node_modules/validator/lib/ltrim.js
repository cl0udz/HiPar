J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5882697, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/ltrim.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5882441, arguments.callee, this, arguments);
                            arguments = J$.N(5882449, 'arguments', arguments, true, false, false);
                            obj = J$.N(5882457, 'obj', obj, true, false, false);
                            return J$.Rt(5882433, J$.C(320432, J$.C(320424, J$.R(5882385, 'obj', obj, false, false)) ? J$.G(5882401, J$.R(5882393, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5882409, 'obj', obj, false, false) : J$.T(5882425, { default: J$.R(5882417, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5882753, J$e);
                        } finally {
                            if (J$.Fr(5882761))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ltrim(str, chars) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5882617, arguments.callee, this, arguments);
                            arguments = J$.N(5882625, 'arguments', arguments, true, false, false);
                            str = J$.N(5882633, 'str', str, true, false, false);
                            chars = J$.N(5882641, 'chars', chars, true, false, false);
                            J$.N(5882649, 'pattern', pattern, false, false, false);
                            J$.F(5882497, (J$.T(5882465, 0, 22, false), J$.G(5882481, J$.R(5882473, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5882489, 'str', str, false, false));
                            var pattern = J$.W(5882569, 'pattern', J$.C(320440, J$.R(5882505, 'chars', chars, false, false)) ? J$.F(5882553, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5882513, 'RegExp', undefined, true, true) : RegExp = J$.R(5882513, 'RegExp', RegExp, true, true)), true)(J$.B(604906, '+', J$.B(604898, '+', J$.T(5882521, '^[', 21, false), J$.R(5882529, 'chars', chars, false, false)), J$.T(5882537, ']+', 21, false)), J$.T(5882545, 'g', 21, false)) : J$.T(5882561, /^\s+/g, 14, false), pattern, false, false);
                            return J$.Rt(5882609, J$.M(5882601, J$.R(5882577, 'str', str, false, false), 'replace', false)(J$.R(5882585, 'pattern', pattern, false, false), J$.T(5882593, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5882769, J$e);
                        } finally {
                            if (J$.Fr(5882777))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5882705, '_assertString', _assertString, false, false, false);
            J$.N(5882713, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(5882729, '_interopRequireDefault', J$.T(5882721, _interopRequireDefault, 12, false), true, false, false);
            ltrim = J$.N(5882745, 'ltrim', J$.T(5882737, ltrim, 12, false), true, false, false);
            J$.T(5882241, 'use strict', 21, false);
            J$.M(5882289, J$.I(typeof Object === 'undefined' ? Object = J$.R(5882249, 'Object', undefined, true, true) : Object = J$.R(5882249, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5882257, 'exports', undefined, true, true) : exports = J$.R(5882257, 'exports', exports, true, true)), J$.T(5882265, '__esModule', 21, false), J$.T(5882281, { value: J$.T(5882273, true, 23, false) }, 11, false));
            J$.P(5882313, J$.I(typeof exports === 'undefined' ? exports = J$.R(5882297, 'exports', undefined, true, true) : exports = J$.R(5882297, 'exports', exports, true, true)), 'default', J$.R(5882305, 'ltrim', ltrim, false, true));
            var _assertString = J$.W(5882345, '_assertString', J$.F(5882337, J$.I(typeof require === 'undefined' ? require = J$.R(5882321, 'require', undefined, true, true) : require = J$.R(5882321, 'require', require, true, true)), false)(J$.T(5882329, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5882377, '_assertString2', J$.F(5882369, J$.R(5882353, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5882361, '_assertString', _assertString, false, true)), _assertString2, false, true);
            J$.P(5882689, J$.I(typeof module === 'undefined' ? module = J$.R(5882657, 'module', undefined, true, true) : module = J$.R(5882657, 'module', module, true, true)), 'exports', J$.G(5882681, J$.I(typeof exports === 'undefined' ? exports = J$.R(5882665, 'exports', undefined, true, true) : exports = J$.R(5882665, 'exports', exports, true, true)), J$.T(5882673, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5882785, J$e);
        } finally {
            if (J$.Sr(5882793))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

