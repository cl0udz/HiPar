J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1235665, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isSurrogatePair.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1235489, arguments.callee, this, arguments);
                            arguments = J$.N(1235497, 'arguments', arguments, true, false, false);
                            obj = J$.N(1235505, 'obj', obj, true, false, false);
                            return J$.Rt(1235481, J$.C(69480, J$.C(69472, J$.R(1235433, 'obj', obj, false, false)) ? J$.G(1235449, J$.R(1235441, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1235457, 'obj', obj, false, false) : J$.T(1235473, { default: J$.R(1235465, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1235729, J$e);
                        } finally {
                            if (J$.Fr(1235737))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isSurrogatePair(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1235601, arguments.callee, this, arguments);
                            arguments = J$.N(1235609, 'arguments', arguments, true, false, false);
                            str = J$.N(1235617, 'str', str, true, false, false);
                            J$.F(1235561, (J$.T(1235529, 0, 22, false), J$.G(1235545, J$.R(1235537, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1235553, 'str', str, false, false));
                            return J$.Rt(1235593, J$.M(1235585, J$.R(1235569, 'surrogatePair', surrogatePair, false, true), 'test', false)(J$.R(1235577, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(1235745, J$e);
                        } finally {
                            if (J$.Fr(1235753))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1235673, '_assertString', _assertString, false, false, false);
            J$.N(1235681, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(1235697, '_interopRequireDefault', J$.T(1235689, _interopRequireDefault, 12, false), true, false, false);
            J$.N(1235705, 'surrogatePair', surrogatePair, false, false, false);
            isSurrogatePair = J$.N(1235721, 'isSurrogatePair', J$.T(1235713, isSurrogatePair, 12, false), true, false, false);
            J$.T(1235289, 'use strict', 21, false);
            J$.M(1235337, J$.I(typeof Object === 'undefined' ? Object = J$.R(1235297, 'Object', undefined, true, true) : Object = J$.R(1235297, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1235305, 'exports', undefined, true, true) : exports = J$.R(1235305, 'exports', exports, true, true)), J$.T(1235313, '__esModule', 21, false), J$.T(1235329, { value: J$.T(1235321, true, 23, false) }, 11, false));
            J$.P(1235361, J$.I(typeof exports === 'undefined' ? exports = J$.R(1235345, 'exports', undefined, true, true) : exports = J$.R(1235345, 'exports', exports, true, true)), 'default', J$.R(1235353, 'isSurrogatePair', isSurrogatePair, false, true));
            var _assertString = J$.W(1235393, '_assertString', J$.F(1235385, J$.I(typeof require === 'undefined' ? require = J$.R(1235369, 'require', undefined, true, true) : require = J$.R(1235369, 'require', require, true, true)), false)(J$.T(1235377, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1235425, '_assertString2', J$.F(1235417, J$.R(1235401, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1235409, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var surrogatePair = J$.W(1235521, 'surrogatePair', J$.T(1235513, /[\uD800-\uDBFF][\uDC00-\uDFFF]/, 14, false), surrogatePair, false, true);
            J$.P(1235657, J$.I(typeof module === 'undefined' ? module = J$.R(1235625, 'module', undefined, true, true) : module = J$.R(1235625, 'module', module, true, true)), 'exports', J$.G(1235649, J$.I(typeof exports === 'undefined' ? exports = J$.R(1235633, 'exports', undefined, true, true) : exports = J$.R(1235633, 'exports', exports, true, true)), J$.T(1235641, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1235761, J$e);
        } finally {
            if (J$.Sr(1235769))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

