J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5880961, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isUppercase.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5880801, arguments.callee, this, arguments);
                            arguments = J$.N(5880809, 'arguments', arguments, true, false, false);
                            obj = J$.N(5880817, 'obj', obj, true, false, false);
                            return J$.Rt(5880793, J$.C(320360, J$.C(320352, J$.R(5880745, 'obj', obj, false, false)) ? J$.G(5880761, J$.R(5880753, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5880769, 'obj', obj, false, false) : J$.T(5880785, { default: J$.R(5880777, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5881017, J$e);
                        } finally {
                            if (J$.Fr(5881025))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isUppercase(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5880897, arguments.callee, this, arguments);
                            arguments = J$.N(5880905, 'arguments', arguments, true, false, false);
                            str = J$.N(5880913, 'str', str, true, false, false);
                            J$.F(5880857, (J$.T(5880825, 0, 22, false), J$.G(5880841, J$.R(5880833, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5880849, 'str', str, false, false));
                            return J$.Rt(5880889, J$.B(604834, '===', J$.R(5880865, 'str', str, false, false), J$.M(5880881, J$.R(5880873, 'str', str, false, false), 'toUpperCase', false)()));
                        } catch (J$e) {
                            J$.Ex(5881033, J$e);
                        } finally {
                            if (J$.Fr(5881041))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5880969, '_assertString', _assertString, false, false, false);
            J$.N(5880977, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(5880993, '_interopRequireDefault', J$.T(5880985, _interopRequireDefault, 12, false), true, false, false);
            isUppercase = J$.N(5881009, 'isUppercase', J$.T(5881001, isUppercase, 12, false), true, false, false);
            J$.T(5880601, 'use strict', 21, false);
            J$.M(5880649, J$.I(typeof Object === 'undefined' ? Object = J$.R(5880609, 'Object', undefined, true, true) : Object = J$.R(5880609, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5880617, 'exports', undefined, true, true) : exports = J$.R(5880617, 'exports', exports, true, true)), J$.T(5880625, '__esModule', 21, false), J$.T(5880641, { value: J$.T(5880633, true, 23, false) }, 11, false));
            J$.P(5880673, J$.I(typeof exports === 'undefined' ? exports = J$.R(5880657, 'exports', undefined, true, true) : exports = J$.R(5880657, 'exports', exports, true, true)), 'default', J$.R(5880665, 'isUppercase', isUppercase, false, true));
            var _assertString = J$.W(5880705, '_assertString', J$.F(5880697, J$.I(typeof require === 'undefined' ? require = J$.R(5880681, 'require', undefined, true, true) : require = J$.R(5880681, 'require', require, true, true)), false)(J$.T(5880689, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5880737, '_assertString2', J$.F(5880729, J$.R(5880713, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5880721, '_assertString', _assertString, false, true)), _assertString2, false, true);
            J$.P(5880953, J$.I(typeof module === 'undefined' ? module = J$.R(5880921, 'module', undefined, true, true) : module = J$.R(5880921, 'module', module, true, true)), 'exports', J$.G(5880945, J$.I(typeof exports === 'undefined' ? exports = J$.R(5880929, 'exports', undefined, true, true) : exports = J$.R(5880929, 'exports', exports, true, true)), J$.T(5880937, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5881049, J$e);
        } finally {
            if (J$.Sr(5881057))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

