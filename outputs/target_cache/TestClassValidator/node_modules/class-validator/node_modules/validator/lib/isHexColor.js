J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1209769, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isHexColor.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1209593, arguments.callee, this, arguments);
                            arguments = J$.N(1209601, 'arguments', arguments, true, false, false);
                            obj = J$.N(1209609, 'obj', obj, true, false, false);
                            return J$.Rt(1209585, J$.C(68144, J$.C(68136, J$.R(1209537, 'obj', obj, false, false)) ? J$.G(1209553, J$.R(1209545, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1209561, 'obj', obj, false, false) : J$.T(1209577, { default: J$.R(1209569, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1209833, J$e);
                        } finally {
                            if (J$.Fr(1209841))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isHexColor(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1209705, arguments.callee, this, arguments);
                            arguments = J$.N(1209713, 'arguments', arguments, true, false, false);
                            str = J$.N(1209721, 'str', str, true, false, false);
                            J$.F(1209665, (J$.T(1209633, 0, 22, false), J$.G(1209649, J$.R(1209641, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1209657, 'str', str, false, false));
                            return J$.Rt(1209697, J$.M(1209689, J$.R(1209673, 'hexcolor', hexcolor, false, true), 'test', false)(J$.R(1209681, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(1209849, J$e);
                        } finally {
                            if (J$.Fr(1209857))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1209777, '_assertString', _assertString, false, false, false);
            J$.N(1209785, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(1209801, '_interopRequireDefault', J$.T(1209793, _interopRequireDefault, 12, false), true, false, false);
            J$.N(1209809, 'hexcolor', hexcolor, false, false, false);
            isHexColor = J$.N(1209825, 'isHexColor', J$.T(1209817, isHexColor, 12, false), true, false, false);
            J$.T(1209393, 'use strict', 21, false);
            J$.M(1209441, J$.I(typeof Object === 'undefined' ? Object = J$.R(1209401, 'Object', undefined, true, true) : Object = J$.R(1209401, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1209409, 'exports', undefined, true, true) : exports = J$.R(1209409, 'exports', exports, true, true)), J$.T(1209417, '__esModule', 21, false), J$.T(1209433, { value: J$.T(1209425, true, 23, false) }, 11, false));
            J$.P(1209465, J$.I(typeof exports === 'undefined' ? exports = J$.R(1209449, 'exports', undefined, true, true) : exports = J$.R(1209449, 'exports', exports, true, true)), 'default', J$.R(1209457, 'isHexColor', isHexColor, false, true));
            var _assertString = J$.W(1209497, '_assertString', J$.F(1209489, J$.I(typeof require === 'undefined' ? require = J$.R(1209473, 'require', undefined, true, true) : require = J$.R(1209473, 'require', require, true, true)), false)(J$.T(1209481, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1209529, '_assertString2', J$.F(1209521, J$.R(1209505, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1209513, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var hexcolor = J$.W(1209625, 'hexcolor', J$.T(1209617, /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i, 14, false), hexcolor, false, true);
            J$.P(1209761, J$.I(typeof module === 'undefined' ? module = J$.R(1209729, 'module', undefined, true, true) : module = J$.R(1209729, 'module', module, true, true)), 'exports', J$.G(1209753, J$.I(typeof exports === 'undefined' ? exports = J$.R(1209737, 'exports', undefined, true, true) : exports = J$.R(1209737, 'exports', exports, true, true)), J$.T(1209745, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1209865, J$e);
        } finally {
            if (J$.Sr(1209873))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

