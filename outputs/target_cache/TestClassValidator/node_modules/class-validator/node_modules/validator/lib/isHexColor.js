J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2067553, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isHexColor.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2067377, arguments.callee, this, arguments);
                            arguments = J$.N(2067385, 'arguments', arguments, true, false, false);
                            obj = J$.N(2067393, 'obj', obj, true, false, false);
                            return J$.Rt(2067369, J$.C(122144, J$.C(122136, J$.R(2067321, 'obj', obj, false, false)) ? J$.G(2067337, J$.R(2067329, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(2067345, 'obj', obj, false, false) : J$.T(2067361, { default: J$.R(2067353, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2067617, J$e);
                        } finally {
                            if (J$.Fr(2067625))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isHexColor(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2067489, arguments.callee, this, arguments);
                            arguments = J$.N(2067497, 'arguments', arguments, true, false, false);
                            str = J$.N(2067505, 'str', str, true, false, false);
                            J$.F(2067449, (J$.T(2067417, 0, 22, false), J$.G(2067433, J$.R(2067425, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(2067441, 'str', str, false, false));
                            return J$.Rt(2067481, J$.M(2067473, J$.R(2067457, 'hexcolor', hexcolor, false, true), 'test', false)(J$.R(2067465, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(2067633, J$e);
                        } finally {
                            if (J$.Fr(2067641))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2067561, '_assertString', _assertString, false, false, false);
            J$.N(2067569, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(2067585, '_interopRequireDefault', J$.T(2067577, _interopRequireDefault, 12, false), true, false, false);
            J$.N(2067593, 'hexcolor', hexcolor, false, false, false);
            isHexColor = J$.N(2067609, 'isHexColor', J$.T(2067601, isHexColor, 12, false), true, false, false);
            J$.T(2067177, 'use strict', 21, false);
            J$.M(2067225, J$.I(typeof Object === 'undefined' ? Object = J$.R(2067185, 'Object', undefined, true, true) : Object = J$.R(2067185, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2067193, 'exports', undefined, true, true) : exports = J$.R(2067193, 'exports', exports, true, true)), J$.T(2067201, '__esModule', 21, false), J$.T(2067217, { value: J$.T(2067209, true, 23, false) }, 11, false));
            J$.P(2067249, J$.I(typeof exports === 'undefined' ? exports = J$.R(2067233, 'exports', undefined, true, true) : exports = J$.R(2067233, 'exports', exports, true, true)), 'default', J$.R(2067241, 'isHexColor', isHexColor, false, true));
            var _assertString = J$.W(2067281, '_assertString', J$.F(2067273, J$.I(typeof require === 'undefined' ? require = J$.R(2067257, 'require', undefined, true, true) : require = J$.R(2067257, 'require', require, true, true)), false)(J$.T(2067265, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(2067313, '_assertString2', J$.F(2067305, J$.R(2067289, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2067297, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var hexcolor = J$.W(2067409, 'hexcolor', J$.T(2067401, /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i, 14, false), hexcolor, false, true);
            J$.P(2067545, J$.I(typeof module === 'undefined' ? module = J$.R(2067513, 'module', undefined, true, true) : module = J$.R(2067513, 'module', module, true, true)), 'exports', J$.G(2067537, J$.I(typeof exports === 'undefined' ? exports = J$.R(2067521, 'exports', undefined, true, true) : exports = J$.R(2067521, 'exports', exports, true, true)), J$.T(2067529, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(2067649, J$e);
        } finally {
            if (J$.Sr(2067657))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

