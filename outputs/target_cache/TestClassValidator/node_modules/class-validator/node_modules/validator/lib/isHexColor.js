J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5850849, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isHexColor.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5850673, arguments.callee, this, arguments);
                            arguments = J$.N(5850681, 'arguments', arguments, true, false, false);
                            obj = J$.N(5850689, 'obj', obj, true, false, false);
                            return J$.Rt(5850665, J$.C(318664, J$.C(318656, J$.R(5850617, 'obj', obj, false, false)) ? J$.G(5850633, J$.R(5850625, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5850641, 'obj', obj, false, false) : J$.T(5850657, { default: J$.R(5850649, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5850913, J$e);
                        } finally {
                            if (J$.Fr(5850921))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isHexColor(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5850785, arguments.callee, this, arguments);
                            arguments = J$.N(5850793, 'arguments', arguments, true, false, false);
                            str = J$.N(5850801, 'str', str, true, false, false);
                            J$.F(5850745, (J$.T(5850713, 0, 22, false), J$.G(5850729, J$.R(5850721, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5850737, 'str', str, false, false));
                            return J$.Rt(5850777, J$.M(5850769, J$.R(5850753, 'hexcolor', hexcolor, false, true), 'test', false)(J$.R(5850761, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(5850929, J$e);
                        } finally {
                            if (J$.Fr(5850937))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5850857, '_assertString', _assertString, false, false, false);
            J$.N(5850865, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(5850881, '_interopRequireDefault', J$.T(5850873, _interopRequireDefault, 12, false), true, false, false);
            J$.N(5850889, 'hexcolor', hexcolor, false, false, false);
            isHexColor = J$.N(5850905, 'isHexColor', J$.T(5850897, isHexColor, 12, false), true, false, false);
            J$.T(5850473, 'use strict', 21, false);
            J$.M(5850521, J$.I(typeof Object === 'undefined' ? Object = J$.R(5850481, 'Object', undefined, true, true) : Object = J$.R(5850481, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5850489, 'exports', undefined, true, true) : exports = J$.R(5850489, 'exports', exports, true, true)), J$.T(5850497, '__esModule', 21, false), J$.T(5850513, { value: J$.T(5850505, true, 23, false) }, 11, false));
            J$.P(5850545, J$.I(typeof exports === 'undefined' ? exports = J$.R(5850529, 'exports', undefined, true, true) : exports = J$.R(5850529, 'exports', exports, true, true)), 'default', J$.R(5850537, 'isHexColor', isHexColor, false, true));
            var _assertString = J$.W(5850577, '_assertString', J$.F(5850569, J$.I(typeof require === 'undefined' ? require = J$.R(5850553, 'require', undefined, true, true) : require = J$.R(5850553, 'require', require, true, true)), false)(J$.T(5850561, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5850609, '_assertString2', J$.F(5850601, J$.R(5850585, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5850593, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var hexcolor = J$.W(5850705, 'hexcolor', J$.T(5850697, /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i, 14, false), hexcolor, false, true);
            J$.P(5850841, J$.I(typeof module === 'undefined' ? module = J$.R(5850809, 'module', undefined, true, true) : module = J$.R(5850809, 'module', module, true, true)), 'exports', J$.G(5850833, J$.I(typeof exports === 'undefined' ? exports = J$.R(5850817, 'exports', undefined, true, true) : exports = J$.R(5850817, 'exports', exports, true, true)), J$.T(5850825, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5850945, J$e);
        } finally {
            if (J$.Sr(5850953))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

