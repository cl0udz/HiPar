J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1221393, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isISRC.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1221217, arguments.callee, this, arguments);
                            arguments = J$.N(1221225, 'arguments', arguments, true, false, false);
                            obj = J$.N(1221233, 'obj', obj, true, false, false);
                            return J$.Rt(1221209, J$.C(68640, J$.C(68632, J$.R(1221161, 'obj', obj, false, false)) ? J$.G(1221177, J$.R(1221169, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1221185, 'obj', obj, false, false) : J$.T(1221201, { default: J$.R(1221193, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1221457, J$e);
                        } finally {
                            if (J$.Fr(1221465))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isISRC(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1221329, arguments.callee, this, arguments);
                            arguments = J$.N(1221337, 'arguments', arguments, true, false, false);
                            str = J$.N(1221345, 'str', str, true, false, false);
                            J$.F(1221289, (J$.T(1221257, 0, 22, false), J$.G(1221273, J$.R(1221265, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1221281, 'str', str, false, false));
                            return J$.Rt(1221321, J$.M(1221313, J$.R(1221297, 'isrc', isrc, false, true), 'test', false)(J$.R(1221305, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(1221473, J$e);
                        } finally {
                            if (J$.Fr(1221481))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1221401, '_assertString', _assertString, false, false, false);
            J$.N(1221409, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(1221425, '_interopRequireDefault', J$.T(1221417, _interopRequireDefault, 12, false), true, false, false);
            J$.N(1221433, 'isrc', isrc, false, false, false);
            isISRC = J$.N(1221449, 'isISRC', J$.T(1221441, isISRC, 12, false), true, false, false);
            J$.T(1221017, 'use strict', 21, false);
            J$.M(1221065, J$.I(typeof Object === 'undefined' ? Object = J$.R(1221025, 'Object', undefined, true, true) : Object = J$.R(1221025, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1221033, 'exports', undefined, true, true) : exports = J$.R(1221033, 'exports', exports, true, true)), J$.T(1221041, '__esModule', 21, false), J$.T(1221057, { value: J$.T(1221049, true, 23, false) }, 11, false));
            J$.P(1221089, J$.I(typeof exports === 'undefined' ? exports = J$.R(1221073, 'exports', undefined, true, true) : exports = J$.R(1221073, 'exports', exports, true, true)), 'default', J$.R(1221081, 'isISRC', isISRC, false, true));
            var _assertString = J$.W(1221121, '_assertString', J$.F(1221113, J$.I(typeof require === 'undefined' ? require = J$.R(1221097, 'require', undefined, true, true) : require = J$.R(1221097, 'require', require, true, true)), false)(J$.T(1221105, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1221153, '_assertString2', J$.F(1221145, J$.R(1221129, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1221137, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var isrc = J$.W(1221249, 'isrc', J$.T(1221241, /^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/, 14, false), isrc, false, true);
            J$.P(1221385, J$.I(typeof module === 'undefined' ? module = J$.R(1221353, 'module', undefined, true, true) : module = J$.R(1221353, 'module', module, true, true)), 'exports', J$.G(1221377, J$.I(typeof exports === 'undefined' ? exports = J$.R(1221361, 'exports', undefined, true, true) : exports = J$.R(1221361, 'exports', exports, true, true)), J$.T(1221369, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1221489, J$e);
        } finally {
            if (J$.Sr(1221497))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

