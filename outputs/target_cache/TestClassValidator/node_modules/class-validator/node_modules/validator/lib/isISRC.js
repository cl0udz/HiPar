J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2079177, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isISRC.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2079001, arguments.callee, this, arguments);
                            arguments = J$.N(2079009, 'arguments', arguments, true, false, false);
                            obj = J$.N(2079017, 'obj', obj, true, false, false);
                            return J$.Rt(2078993, J$.C(122640, J$.C(122632, J$.R(2078945, 'obj', obj, false, false)) ? J$.G(2078961, J$.R(2078953, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(2078969, 'obj', obj, false, false) : J$.T(2078985, { default: J$.R(2078977, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2079241, J$e);
                        } finally {
                            if (J$.Fr(2079249))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isISRC(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2079113, arguments.callee, this, arguments);
                            arguments = J$.N(2079121, 'arguments', arguments, true, false, false);
                            str = J$.N(2079129, 'str', str, true, false, false);
                            J$.F(2079073, (J$.T(2079041, 0, 22, false), J$.G(2079057, J$.R(2079049, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(2079065, 'str', str, false, false));
                            return J$.Rt(2079105, J$.M(2079097, J$.R(2079081, 'isrc', isrc, false, true), 'test', false)(J$.R(2079089, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(2079257, J$e);
                        } finally {
                            if (J$.Fr(2079265))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2079185, '_assertString', _assertString, false, false, false);
            J$.N(2079193, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(2079209, '_interopRequireDefault', J$.T(2079201, _interopRequireDefault, 12, false), true, false, false);
            J$.N(2079217, 'isrc', isrc, false, false, false);
            isISRC = J$.N(2079233, 'isISRC', J$.T(2079225, isISRC, 12, false), true, false, false);
            J$.T(2078801, 'use strict', 21, false);
            J$.M(2078849, J$.I(typeof Object === 'undefined' ? Object = J$.R(2078809, 'Object', undefined, true, true) : Object = J$.R(2078809, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2078817, 'exports', undefined, true, true) : exports = J$.R(2078817, 'exports', exports, true, true)), J$.T(2078825, '__esModule', 21, false), J$.T(2078841, { value: J$.T(2078833, true, 23, false) }, 11, false));
            J$.P(2078873, J$.I(typeof exports === 'undefined' ? exports = J$.R(2078857, 'exports', undefined, true, true) : exports = J$.R(2078857, 'exports', exports, true, true)), 'default', J$.R(2078865, 'isISRC', isISRC, false, true));
            var _assertString = J$.W(2078905, '_assertString', J$.F(2078897, J$.I(typeof require === 'undefined' ? require = J$.R(2078881, 'require', undefined, true, true) : require = J$.R(2078881, 'require', require, true, true)), false)(J$.T(2078889, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(2078937, '_assertString2', J$.F(2078929, J$.R(2078913, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2078921, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var isrc = J$.W(2079033, 'isrc', J$.T(2079025, /^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/, 14, false), isrc, false, true);
            J$.P(2079169, J$.I(typeof module === 'undefined' ? module = J$.R(2079137, 'module', undefined, true, true) : module = J$.R(2079137, 'module', module, true, true)), 'exports', J$.G(2079161, J$.I(typeof exports === 'undefined' ? exports = J$.R(2079145, 'exports', undefined, true, true) : exports = J$.R(2079145, 'exports', exports, true, true)), J$.T(2079153, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(2079273, J$e);
        } finally {
            if (J$.Sr(2079281))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

