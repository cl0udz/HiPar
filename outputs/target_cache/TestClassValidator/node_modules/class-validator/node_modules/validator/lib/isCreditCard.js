J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5838817, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isCreditCard.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5838129, arguments.callee, this, arguments);
                            arguments = J$.N(5838137, 'arguments', arguments, true, false, false);
                            obj = J$.N(5838145, 'obj', obj, true, false, false);
                            return J$.Rt(5838121, J$.C(317832, J$.C(317824, J$.R(5838073, 'obj', obj, false, false)) ? J$.G(5838089, J$.R(5838081, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5838097, 'obj', obj, false, false) : J$.T(5838113, { default: J$.R(5838105, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5838881, J$e);
                        } finally {
                            if (J$.Fr(5838889))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isCreditCard(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5838705, arguments.callee, this, arguments);
                            arguments = J$.N(5838713, 'arguments', arguments, true, false, false);
                            str = J$.N(5838721, 'str', str, true, false, false);
                            J$.N(5838729, 'sanitized', sanitized, false, false, false);
                            J$.N(5838737, 'sum', sum, false, false, false);
                            J$.N(5838745, 'digit', digit, false, false, false);
                            J$.N(5838753, 'tmpNum', tmpNum, false, false, false);
                            J$.N(5838761, 'shouldDouble', shouldDouble, false, false, false);
                            J$.N(5838769, 'i', i, false, false, false);
                            J$.F(5838201, (J$.T(5838169, 0, 22, false), J$.G(5838185, J$.R(5838177, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5838193, 'str', str, false, false));
                            var sanitized = J$.W(5838241, 'sanitized', J$.M(5838233, J$.R(5838209, 'str', str, false, false), 'replace', false)(J$.T(5838217, /[- ]+/g, 14, false), J$.T(5838225, '', 21, false)), sanitized, false, false);
                            if (J$.C(317840, J$.U(601986, '!', J$.M(5838265, J$.R(5838249, 'creditCard', creditCard, false, true), 'test', false)(J$.R(5838257, 'sanitized', sanitized, false, false))))) {
                                return J$.Rt(5838281, J$.T(5838273, false, 23, false));
                            }
                            var sum = J$.W(5838297, 'sum', J$.T(5838289, 0, 22, false), sum, false, false);
                            var digit = J$.W(5838313, 'digit', void J$.T(5838305, 0, 22, false), digit, false, false);
                            var tmpNum = J$.W(5838329, 'tmpNum', void J$.T(5838321, 0, 22, false), tmpNum, false, false);
                            var shouldDouble = J$.W(5838345, 'shouldDouble', void J$.T(5838337, 0, 22, false), shouldDouble, false, false);
                            for (var i = J$.W(5838377, 'i', J$.B(601994, '-', J$.G(5838361, J$.R(5838353, 'sanitized', sanitized, false, false), 'length'), J$.T(5838369, 1, 22, false)), i, false, false); J$.C(317864, J$.B(602002, '>=', J$.R(5838385, 'i', i, false, false), J$.T(5838393, 0, 22, false))); J$.B(602026, '+', i = J$.W(5838409, 'i', J$.B(602018, '-', J$.U(602010, '+', J$.R(5838401, 'i', i, false, false)), 1), i, false, false), 1)) {
                                digit = J$.W(5838457, 'digit', J$.M(5838449, J$.R(5838417, 'sanitized', sanitized, false, false), 'substring', false)(J$.R(5838425, 'i', i, false, false), J$.B(602034, '+', J$.R(5838433, 'i', i, false, false), J$.T(5838441, 1, 22, false))), digit, false, false);
                                tmpNum = J$.W(5838497, 'tmpNum', J$.F(5838489, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(5838465, 'parseInt', undefined, true, true) : parseInt = J$.R(5838465, 'parseInt', parseInt, true, true)), false)(J$.R(5838473, 'digit', digit, false, false), J$.T(5838481, 10, 22, false)), tmpNum, false, false);
                                if (J$.C(317856, J$.R(5838505, 'shouldDouble', shouldDouble, false, false))) {
                                    tmpNum = J$.W(5838529, 'tmpNum', J$.B(602042, '*', J$.R(5838521, 'tmpNum', tmpNum, false, false), J$.T(5838513, 2, 22, false)), tmpNum, false, false);
                                    if (J$.C(317848, J$.B(602050, '>=', J$.R(5838537, 'tmpNum', tmpNum, false, false), J$.T(5838545, 10, 22, false)))) {
                                        sum = J$.W(5838585, 'sum', J$.B(602074, '+', J$.R(5838577, 'sum', sum, false, false), J$.B(602066, '+', J$.B(602058, '%', J$.R(5838553, 'tmpNum', tmpNum, false, false), J$.T(5838561, 10, 22, false)), J$.T(5838569, 1, 22, false))), sum, false, false);
                                    } else {
                                        sum = J$.W(5838609, 'sum', J$.B(602082, '+', J$.R(5838601, 'sum', sum, false, false), J$.R(5838593, 'tmpNum', tmpNum, false, false)), sum, false, false);
                                    }
                                } else {
                                    sum = J$.W(5838633, 'sum', J$.B(602090, '+', J$.R(5838625, 'sum', sum, false, false), J$.R(5838617, 'tmpNum', tmpNum, false, false)), sum, false, false);
                                }
                                shouldDouble = J$.W(5838649, 'shouldDouble', J$.U(602098, '!', J$.R(5838641, 'shouldDouble', shouldDouble, false, false)), shouldDouble, false, false);
                            }
                            return J$.Rt(5838697, J$.U(602130, '!', J$.U(602122, '!', J$.C(317872, J$.B(602114, '===', J$.B(602106, '%', J$.R(5838657, 'sum', sum, false, false), J$.T(5838665, 10, 22, false)), J$.T(5838673, 0, 22, false))) ? J$.R(5838681, 'sanitized', sanitized, false, false) : J$.T(5838689, false, 23, false))));
                        } catch (J$e) {
                            J$.Ex(5838897, J$e);
                        } finally {
                            if (J$.Fr(5838905))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5838825, '_assertString', _assertString, false, false, false);
            J$.N(5838833, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(5838849, '_interopRequireDefault', J$.T(5838841, _interopRequireDefault, 12, false), true, false, false);
            J$.N(5838857, 'creditCard', creditCard, false, false, false);
            isCreditCard = J$.N(5838873, 'isCreditCard', J$.T(5838865, isCreditCard, 12, false), true, false, false);
            J$.T(5837929, 'use strict', 21, false);
            J$.M(5837977, J$.I(typeof Object === 'undefined' ? Object = J$.R(5837937, 'Object', undefined, true, true) : Object = J$.R(5837937, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5837945, 'exports', undefined, true, true) : exports = J$.R(5837945, 'exports', exports, true, true)), J$.T(5837953, '__esModule', 21, false), J$.T(5837969, { value: J$.T(5837961, true, 23, false) }, 11, false));
            J$.P(5838001, J$.I(typeof exports === 'undefined' ? exports = J$.R(5837985, 'exports', undefined, true, true) : exports = J$.R(5837985, 'exports', exports, true, true)), 'default', J$.R(5837993, 'isCreditCard', isCreditCard, false, true));
            var _assertString = J$.W(5838033, '_assertString', J$.F(5838025, J$.I(typeof require === 'undefined' ? require = J$.R(5838009, 'require', undefined, true, true) : require = J$.R(5838009, 'require', require, true, true)), false)(J$.T(5838017, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5838065, '_assertString2', J$.F(5838057, J$.R(5838041, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5838049, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var creditCard = J$.W(5838161, 'creditCard', J$.T(5838153, /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/, 14, false), creditCard, false, true);
            J$.P(5838809, J$.I(typeof module === 'undefined' ? module = J$.R(5838777, 'module', undefined, true, true) : module = J$.R(5838777, 'module', module, true, true)), 'exports', J$.G(5838801, J$.I(typeof exports === 'undefined' ? exports = J$.R(5838785, 'exports', undefined, true, true) : exports = J$.R(5838785, 'exports', exports, true, true)), J$.T(5838793, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5838913, J$e);
        } finally {
            if (J$.Sr(5838921))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

