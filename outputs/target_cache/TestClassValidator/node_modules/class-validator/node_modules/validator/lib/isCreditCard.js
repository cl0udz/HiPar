J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1197737, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isCreditCard.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1197049, arguments.callee, this, arguments);
                            arguments = J$.N(1197057, 'arguments', arguments, true, false, false);
                            obj = J$.N(1197065, 'obj', obj, true, false, false);
                            return J$.Rt(1197041, J$.C(67312, J$.C(67304, J$.R(1196993, 'obj', obj, false, false)) ? J$.G(1197009, J$.R(1197001, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1197017, 'obj', obj, false, false) : J$.T(1197033, { default: J$.R(1197025, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1197801, J$e);
                        } finally {
                            if (J$.Fr(1197809))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isCreditCard(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1197625, arguments.callee, this, arguments);
                            arguments = J$.N(1197633, 'arguments', arguments, true, false, false);
                            str = J$.N(1197641, 'str', str, true, false, false);
                            J$.N(1197649, 'sanitized', sanitized, false, false, false);
                            J$.N(1197657, 'sum', sum, false, false, false);
                            J$.N(1197665, 'digit', digit, false, false, false);
                            J$.N(1197673, 'tmpNum', tmpNum, false, false, false);
                            J$.N(1197681, 'shouldDouble', shouldDouble, false, false, false);
                            J$.N(1197689, 'i', i, false, false, false);
                            J$.F(1197121, (J$.T(1197089, 0, 22, false), J$.G(1197105, J$.R(1197097, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1197113, 'str', str, false, false));
                            var sanitized = J$.W(1197161, 'sanitized', J$.M(1197153, J$.R(1197129, 'str', str, false, false), 'replace', false)(J$.T(1197137, /[- ]+/g, 14, false), J$.T(1197145, '', 21, false)), sanitized, false, false);
                            if (J$.C(67320, J$.U(85450, '!', J$.M(1197185, J$.R(1197169, 'creditCard', creditCard, false, true), 'test', false)(J$.R(1197177, 'sanitized', sanitized, false, false))))) {
                                return J$.Rt(1197201, J$.T(1197193, false, 23, false));
                            }
                            var sum = J$.W(1197217, 'sum', J$.T(1197209, 0, 22, false), sum, false, false);
                            var digit = J$.W(1197233, 'digit', void J$.T(1197225, 0, 22, false), digit, false, false);
                            var tmpNum = J$.W(1197249, 'tmpNum', void J$.T(1197241, 0, 22, false), tmpNum, false, false);
                            var shouldDouble = J$.W(1197265, 'shouldDouble', void J$.T(1197257, 0, 22, false), shouldDouble, false, false);
                            for (var i = J$.W(1197297, 'i', J$.B(85458, '-', J$.G(1197281, J$.R(1197273, 'sanitized', sanitized, false, false), 'length'), J$.T(1197289, 1, 22, false)), i, false, false); J$.C(67344, J$.B(85466, '>=', J$.R(1197305, 'i', i, false, false), J$.T(1197313, 0, 22, false))); J$.B(85490, '+', i = J$.W(1197329, 'i', J$.B(85482, '-', J$.U(85474, '+', J$.R(1197321, 'i', i, false, false)), 1), i, false, false), 1)) {
                                digit = J$.W(1197377, 'digit', J$.M(1197369, J$.R(1197337, 'sanitized', sanitized, false, false), 'substring', false)(J$.R(1197345, 'i', i, false, false), J$.B(85498, '+', J$.R(1197353, 'i', i, false, false), J$.T(1197361, 1, 22, false))), digit, false, false);
                                tmpNum = J$.W(1197417, 'tmpNum', J$.F(1197409, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1197385, 'parseInt', undefined, true, true) : parseInt = J$.R(1197385, 'parseInt', parseInt, true, true)), false)(J$.R(1197393, 'digit', digit, false, false), J$.T(1197401, 10, 22, false)), tmpNum, false, false);
                                if (J$.C(67336, J$.R(1197425, 'shouldDouble', shouldDouble, false, false))) {
                                    tmpNum = J$.W(1197449, 'tmpNum', J$.B(85506, '*', J$.R(1197441, 'tmpNum', tmpNum, false, false), J$.T(1197433, 2, 22, false)), tmpNum, false, false);
                                    if (J$.C(67328, J$.B(85514, '>=', J$.R(1197457, 'tmpNum', tmpNum, false, false), J$.T(1197465, 10, 22, false)))) {
                                        sum = J$.W(1197505, 'sum', J$.B(85538, '+', J$.R(1197497, 'sum', sum, false, false), J$.B(85530, '+', J$.B(85522, '%', J$.R(1197473, 'tmpNum', tmpNum, false, false), J$.T(1197481, 10, 22, false)), J$.T(1197489, 1, 22, false))), sum, false, false);
                                    } else {
                                        sum = J$.W(1197529, 'sum', J$.B(85546, '+', J$.R(1197521, 'sum', sum, false, false), J$.R(1197513, 'tmpNum', tmpNum, false, false)), sum, false, false);
                                    }
                                } else {
                                    sum = J$.W(1197553, 'sum', J$.B(85554, '+', J$.R(1197545, 'sum', sum, false, false), J$.R(1197537, 'tmpNum', tmpNum, false, false)), sum, false, false);
                                }
                                shouldDouble = J$.W(1197569, 'shouldDouble', J$.U(85562, '!', J$.R(1197561, 'shouldDouble', shouldDouble, false, false)), shouldDouble, false, false);
                            }
                            return J$.Rt(1197617, J$.U(85594, '!', J$.U(85586, '!', J$.C(67352, J$.B(85578, '===', J$.B(85570, '%', J$.R(1197577, 'sum', sum, false, false), J$.T(1197585, 10, 22, false)), J$.T(1197593, 0, 22, false))) ? J$.R(1197601, 'sanitized', sanitized, false, false) : J$.T(1197609, false, 23, false))));
                        } catch (J$e) {
                            J$.Ex(1197817, J$e);
                        } finally {
                            if (J$.Fr(1197825))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1197745, '_assertString', _assertString, false, false, false);
            J$.N(1197753, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(1197769, '_interopRequireDefault', J$.T(1197761, _interopRequireDefault, 12, false), true, false, false);
            J$.N(1197777, 'creditCard', creditCard, false, false, false);
            isCreditCard = J$.N(1197793, 'isCreditCard', J$.T(1197785, isCreditCard, 12, false), true, false, false);
            J$.T(1196849, 'use strict', 21, false);
            J$.M(1196897, J$.I(typeof Object === 'undefined' ? Object = J$.R(1196857, 'Object', undefined, true, true) : Object = J$.R(1196857, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1196865, 'exports', undefined, true, true) : exports = J$.R(1196865, 'exports', exports, true, true)), J$.T(1196873, '__esModule', 21, false), J$.T(1196889, { value: J$.T(1196881, true, 23, false) }, 11, false));
            J$.P(1196921, J$.I(typeof exports === 'undefined' ? exports = J$.R(1196905, 'exports', undefined, true, true) : exports = J$.R(1196905, 'exports', exports, true, true)), 'default', J$.R(1196913, 'isCreditCard', isCreditCard, false, true));
            var _assertString = J$.W(1196953, '_assertString', J$.F(1196945, J$.I(typeof require === 'undefined' ? require = J$.R(1196929, 'require', undefined, true, true) : require = J$.R(1196929, 'require', require, true, true)), false)(J$.T(1196937, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1196985, '_assertString2', J$.F(1196977, J$.R(1196961, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1196969, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var creditCard = J$.W(1197081, 'creditCard', J$.T(1197073, /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/, 14, false), creditCard, false, true);
            J$.P(1197729, J$.I(typeof module === 'undefined' ? module = J$.R(1197697, 'module', undefined, true, true) : module = J$.R(1197697, 'module', module, true, true)), 'exports', J$.G(1197721, J$.I(typeof exports === 'undefined' ? exports = J$.R(1197705, 'exports', undefined, true, true) : exports = J$.R(1197705, 'exports', exports, true, true)), J$.T(1197713, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1197833, J$e);
        } finally {
            if (J$.Sr(1197841))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

