J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2055521, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isCreditCard.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2054833, arguments.callee, this, arguments);
                            arguments = J$.N(2054841, 'arguments', arguments, true, false, false);
                            obj = J$.N(2054849, 'obj', obj, true, false, false);
                            return J$.Rt(2054825, J$.C(121312, J$.C(121304, J$.R(2054777, 'obj', obj, false, false)) ? J$.G(2054793, J$.R(2054785, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(2054801, 'obj', obj, false, false) : J$.T(2054817, { default: J$.R(2054809, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2055585, J$e);
                        } finally {
                            if (J$.Fr(2055593))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isCreditCard(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2055409, arguments.callee, this, arguments);
                            arguments = J$.N(2055417, 'arguments', arguments, true, false, false);
                            str = J$.N(2055425, 'str', str, true, false, false);
                            J$.N(2055433, 'sanitized', sanitized, false, false, false);
                            J$.N(2055441, 'sum', sum, false, false, false);
                            J$.N(2055449, 'digit', digit, false, false, false);
                            J$.N(2055457, 'tmpNum', tmpNum, false, false, false);
                            J$.N(2055465, 'shouldDouble', shouldDouble, false, false, false);
                            J$.N(2055473, 'i', i, false, false, false);
                            J$.F(2054905, (J$.T(2054873, 0, 22, false), J$.G(2054889, J$.R(2054881, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(2054897, 'str', str, false, false));
                            var sanitized = J$.W(2054945, 'sanitized', J$.M(2054937, J$.R(2054913, 'str', str, false, false), 'replace', false)(J$.T(2054921, /[- ]+/g, 14, false), J$.T(2054929, '', 21, false)), sanitized, false, false);
                            if (J$.C(121320, J$.U(254570, '!', J$.M(2054969, J$.R(2054953, 'creditCard', creditCard, false, true), 'test', false)(J$.R(2054961, 'sanitized', sanitized, false, false))))) {
                                return J$.Rt(2054985, J$.T(2054977, false, 23, false));
                            }
                            var sum = J$.W(2055001, 'sum', J$.T(2054993, 0, 22, false), sum, false, false);
                            var digit = J$.W(2055017, 'digit', void J$.T(2055009, 0, 22, false), digit, false, false);
                            var tmpNum = J$.W(2055033, 'tmpNum', void J$.T(2055025, 0, 22, false), tmpNum, false, false);
                            var shouldDouble = J$.W(2055049, 'shouldDouble', void J$.T(2055041, 0, 22, false), shouldDouble, false, false);
                            for (var i = J$.W(2055081, 'i', J$.B(254578, '-', J$.G(2055065, J$.R(2055057, 'sanitized', sanitized, false, false), 'length'), J$.T(2055073, 1, 22, false)), i, false, false); J$.C(121344, J$.B(254586, '>=', J$.R(2055089, 'i', i, false, false), J$.T(2055097, 0, 22, false))); J$.B(254610, '+', i = J$.W(2055113, 'i', J$.B(254602, '-', J$.U(254594, '+', J$.R(2055105, 'i', i, false, false)), 1), i, false, false), 1)) {
                                digit = J$.W(2055161, 'digit', J$.M(2055153, J$.R(2055121, 'sanitized', sanitized, false, false), 'substring', false)(J$.R(2055129, 'i', i, false, false), J$.B(254618, '+', J$.R(2055137, 'i', i, false, false), J$.T(2055145, 1, 22, false))), digit, false, false);
                                tmpNum = J$.W(2055201, 'tmpNum', J$.F(2055193, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(2055169, 'parseInt', undefined, true, true) : parseInt = J$.R(2055169, 'parseInt', parseInt, true, true)), false)(J$.R(2055177, 'digit', digit, false, false), J$.T(2055185, 10, 22, false)), tmpNum, false, false);
                                if (J$.C(121336, J$.R(2055209, 'shouldDouble', shouldDouble, false, false))) {
                                    tmpNum = J$.W(2055233, 'tmpNum', J$.B(254626, '*', J$.R(2055225, 'tmpNum', tmpNum, false, false), J$.T(2055217, 2, 22, false)), tmpNum, false, false);
                                    if (J$.C(121328, J$.B(254634, '>=', J$.R(2055241, 'tmpNum', tmpNum, false, false), J$.T(2055249, 10, 22, false)))) {
                                        sum = J$.W(2055289, 'sum', J$.B(254658, '+', J$.R(2055281, 'sum', sum, false, false), J$.B(254650, '+', J$.B(254642, '%', J$.R(2055257, 'tmpNum', tmpNum, false, false), J$.T(2055265, 10, 22, false)), J$.T(2055273, 1, 22, false))), sum, false, false);
                                    } else {
                                        sum = J$.W(2055313, 'sum', J$.B(254666, '+', J$.R(2055305, 'sum', sum, false, false), J$.R(2055297, 'tmpNum', tmpNum, false, false)), sum, false, false);
                                    }
                                } else {
                                    sum = J$.W(2055337, 'sum', J$.B(254674, '+', J$.R(2055329, 'sum', sum, false, false), J$.R(2055321, 'tmpNum', tmpNum, false, false)), sum, false, false);
                                }
                                shouldDouble = J$.W(2055353, 'shouldDouble', J$.U(254682, '!', J$.R(2055345, 'shouldDouble', shouldDouble, false, false)), shouldDouble, false, false);
                            }
                            return J$.Rt(2055401, J$.U(254714, '!', J$.U(254706, '!', J$.C(121352, J$.B(254698, '===', J$.B(254690, '%', J$.R(2055361, 'sum', sum, false, false), J$.T(2055369, 10, 22, false)), J$.T(2055377, 0, 22, false))) ? J$.R(2055385, 'sanitized', sanitized, false, false) : J$.T(2055393, false, 23, false))));
                        } catch (J$e) {
                            J$.Ex(2055601, J$e);
                        } finally {
                            if (J$.Fr(2055609))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2055529, '_assertString', _assertString, false, false, false);
            J$.N(2055537, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(2055553, '_interopRequireDefault', J$.T(2055545, _interopRequireDefault, 12, false), true, false, false);
            J$.N(2055561, 'creditCard', creditCard, false, false, false);
            isCreditCard = J$.N(2055577, 'isCreditCard', J$.T(2055569, isCreditCard, 12, false), true, false, false);
            J$.T(2054633, 'use strict', 21, false);
            J$.M(2054681, J$.I(typeof Object === 'undefined' ? Object = J$.R(2054641, 'Object', undefined, true, true) : Object = J$.R(2054641, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2054649, 'exports', undefined, true, true) : exports = J$.R(2054649, 'exports', exports, true, true)), J$.T(2054657, '__esModule', 21, false), J$.T(2054673, { value: J$.T(2054665, true, 23, false) }, 11, false));
            J$.P(2054705, J$.I(typeof exports === 'undefined' ? exports = J$.R(2054689, 'exports', undefined, true, true) : exports = J$.R(2054689, 'exports', exports, true, true)), 'default', J$.R(2054697, 'isCreditCard', isCreditCard, false, true));
            var _assertString = J$.W(2054737, '_assertString', J$.F(2054729, J$.I(typeof require === 'undefined' ? require = J$.R(2054713, 'require', undefined, true, true) : require = J$.R(2054713, 'require', require, true, true)), false)(J$.T(2054721, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(2054769, '_assertString2', J$.F(2054761, J$.R(2054745, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2054753, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var creditCard = J$.W(2054865, 'creditCard', J$.T(2054857, /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/, 14, false), creditCard, false, true);
            J$.P(2055513, J$.I(typeof module === 'undefined' ? module = J$.R(2055481, 'module', undefined, true, true) : module = J$.R(2055481, 'module', module, true, true)), 'exports', J$.G(2055505, J$.I(typeof exports === 'undefined' ? exports = J$.R(2055489, 'exports', undefined, true, true) : exports = J$.R(2055489, 'exports', exports, true, true)), J$.T(2055497, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(2055617, J$e);
        } finally {
            if (J$.Sr(2055625))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

