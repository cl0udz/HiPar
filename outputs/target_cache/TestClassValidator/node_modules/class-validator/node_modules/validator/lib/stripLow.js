J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5888017, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/stripLow.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5887785, arguments.callee, this, arguments);
                            arguments = J$.N(5887793, 'arguments', arguments, true, false, false);
                            obj = J$.N(5887801, 'obj', obj, true, false, false);
                            return J$.Rt(5887777, J$.C(320776, J$.C(320768, J$.R(5887729, 'obj', obj, false, false)) ? J$.G(5887745, J$.R(5887737, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5887753, 'obj', obj, false, false) : J$.T(5887769, { default: J$.R(5887761, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5888089, J$e);
                        } finally {
                            if (J$.Fr(5888097))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function stripLow(str, keep_new_lines) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5887937, arguments.callee, this, arguments);
                            arguments = J$.N(5887945, 'arguments', arguments, true, false, false);
                            str = J$.N(5887953, 'str', str, true, false, false);
                            keep_new_lines = J$.N(5887961, 'keep_new_lines', keep_new_lines, true, false, false);
                            J$.N(5887969, 'chars', chars, false, false, false);
                            J$.F(5887841, (J$.T(5887809, 0, 22, false), J$.G(5887825, J$.R(5887817, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5887833, 'str', str, false, false));
                            var chars = J$.W(5887873, 'chars', J$.C(320784, J$.R(5887849, 'keep_new_lines', keep_new_lines, false, false)) ? J$.T(5887857, '\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F', 21, false) : J$.T(5887865, '\\x00-\\x1F\\x7F', 21, false), chars, false, false);
                            return J$.Rt(5887929, J$.F(5887921, (J$.T(5887881, 0, 22, false), J$.G(5887897, J$.R(5887889, '_blacklist2', _blacklist2, false, true), 'default')), false)(J$.R(5887905, 'str', str, false, false), J$.R(5887913, 'chars', chars, false, false)));
                        } catch (J$e) {
                            J$.Ex(5888105, J$e);
                        } finally {
                            if (J$.Fr(5888113))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5888025, '_assertString', _assertString, false, false, false);
            J$.N(5888033, '_assertString2', _assertString2, false, false, false);
            J$.N(5888041, '_blacklist', _blacklist, false, false, false);
            J$.N(5888049, '_blacklist2', _blacklist2, false, false, false);
            _interopRequireDefault = J$.N(5888065, '_interopRequireDefault', J$.T(5888057, _interopRequireDefault, 12, false), true, false, false);
            stripLow = J$.N(5888081, 'stripLow', J$.T(5888073, stripLow, 12, false), true, false, false);
            J$.T(5887521, 'use strict', 21, false);
            J$.M(5887569, J$.I(typeof Object === 'undefined' ? Object = J$.R(5887529, 'Object', undefined, true, true) : Object = J$.R(5887529, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5887537, 'exports', undefined, true, true) : exports = J$.R(5887537, 'exports', exports, true, true)), J$.T(5887545, '__esModule', 21, false), J$.T(5887561, { value: J$.T(5887553, true, 23, false) }, 11, false));
            J$.P(5887593, J$.I(typeof exports === 'undefined' ? exports = J$.R(5887577, 'exports', undefined, true, true) : exports = J$.R(5887577, 'exports', exports, true, true)), 'default', J$.R(5887585, 'stripLow', stripLow, false, true));
            var _assertString = J$.W(5887625, '_assertString', J$.F(5887617, J$.I(typeof require === 'undefined' ? require = J$.R(5887601, 'require', undefined, true, true) : require = J$.R(5887601, 'require', require, true, true)), false)(J$.T(5887609, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5887657, '_assertString2', J$.F(5887649, J$.R(5887633, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5887641, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var _blacklist = J$.W(5887689, '_blacklist', J$.F(5887681, J$.I(typeof require === 'undefined' ? require = J$.R(5887665, 'require', undefined, true, true) : require = J$.R(5887665, 'require', require, true, true)), false)(J$.T(5887673, './blacklist', 21, false)), _blacklist, false, true);
            var _blacklist2 = J$.W(5887721, '_blacklist2', J$.F(5887713, J$.R(5887697, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5887705, '_blacklist', _blacklist, false, true)), _blacklist2, false, true);
            J$.P(5888009, J$.I(typeof module === 'undefined' ? module = J$.R(5887977, 'module', undefined, true, true) : module = J$.R(5887977, 'module', module, true, true)), 'exports', J$.G(5888001, J$.I(typeof exports === 'undefined' ? exports = J$.R(5887985, 'exports', undefined, true, true) : exports = J$.R(5887985, 'exports', exports, true, true)), J$.T(5887993, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5888121, J$e);
        } finally {
            if (J$.Sr(5888129))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

