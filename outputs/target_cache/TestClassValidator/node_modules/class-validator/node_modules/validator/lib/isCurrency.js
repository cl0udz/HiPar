J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(2057441, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isCurrency.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2055897, arguments.callee, this, arguments);
                            arguments = J$.N(2055905, 'arguments', arguments, true, false, false);
                            obj = J$.N(2055913, 'obj', obj, true, false, false);
                            return J$.Rt(2055889, J$.C(121368, J$.C(121360, J$.R(2055841, 'obj', obj, false, false)) ? J$.G(2055857, J$.R(2055849, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(2055865, 'obj', obj, false, false) : J$.T(2055881, { default: J$.R(2055873, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2057537, J$e);
                        } finally {
                            if (J$.Fr(2057545))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function currencyRegex(options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2056985, arguments.callee, this, arguments);
                            arguments = J$.N(2056993, 'arguments', arguments, true, false, false);
                            options = J$.N(2057001, 'options', options, true, false, false);
                            J$.N(2057009, 'decimal_digits', decimal_digits, false, false, false);
                            J$.N(2057017, 'symbol', symbol, false, false, false);
                            J$.N(2057025, 'negative', negative, false, false, false);
                            J$.N(2057033, 'whole_dollar_amount_without_sep', whole_dollar_amount_without_sep, false, false, false);
                            J$.N(2057041, 'whole_dollar_amount_with_sep', whole_dollar_amount_with_sep, false, false, false);
                            J$.N(2057049, 'valid_whole_dollar_amounts', valid_whole_dollar_amounts, false, false, false);
                            J$.N(2057057, 'whole_dollar_amount', whole_dollar_amount, false, false, false);
                            J$.N(2057065, 'decimal_amount', decimal_amount, false, false, false);
                            J$.N(2057073, 'pattern', pattern, false, false, false);
                            var decimal_digits = J$.W(2055969, 'decimal_digits', J$.B(254730, '+', J$.B(254722, '+', J$.T(2055921, '\\d{', 21, false), J$.G(2055953, J$.G(2055937, J$.R(2055929, 'options', options, false, false), 'digits_after_decimal'), J$.T(2055945, 0, 22, false))), J$.T(2055961, '}', 21, false)), decimal_digits, false, false);
                            J$.M(2056089, J$.G(2055985, J$.R(2055977, 'options', options, false, false), 'digits_after_decimal'), 'forEach', false)(J$.T(2056081, function (digit, index) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2056049, arguments.callee, this, arguments);
                                            arguments = J$.N(2056057, 'arguments', arguments, true, false, false);
                                            digit = J$.N(2056065, 'digit', digit, true, false, false);
                                            index = J$.N(2056073, 'index', index, true, false, false);
                                            if (J$.C(121376, J$.B(254738, '!==', J$.R(2055993, 'index', index, false, false), J$.T(2056001, 0, 22, false))))
                                                decimal_digits = J$.W(2056041, 'decimal_digits', J$.B(254762, '+', J$.B(254754, '+', J$.B(254746, '+', J$.R(2056009, 'decimal_digits', decimal_digits, false, false), J$.T(2056017, '|\\d{', 21, false)), J$.R(2056025, 'digit', digit, false, false)), J$.T(2056033, '}', 21, false)), decimal_digits, false, false);
                                        } catch (J$e) {
                                            J$.Ex(2057553, J$e);
                                        } finally {
                                            if (J$.Fr(2057561))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var symbol = J$.W(2056385, 'symbol', J$.B(254786, '+', J$.B(254778, '+', J$.B(254770, '+', J$.T(2056097, '(\\', 21, false), J$.M(2056137, J$.G(2056113, J$.R(2056105, 'options', options, false, false), 'symbol'), 'replace', false)(J$.T(2056121, /\./g, 14, false), J$.T(2056129, '\\.', 21, false))), J$.T(2056145, ')', 21, false)), J$.C(121384, J$.G(2056161, J$.R(2056153, 'options', options, false, false), 'require_symbol')) ? J$.T(2056169, '', 21, false) : J$.T(2056177, '?', 21, false)), symbol, false, false), negative = J$.W(2056393, 'negative', J$.T(2056185, '-?', 21, false), negative, false, false), whole_dollar_amount_without_sep = J$.W(2056401, 'whole_dollar_amount_without_sep', J$.T(2056193, '[1-9]\\d*', 21, false), whole_dollar_amount_without_sep, false, false), whole_dollar_amount_with_sep = J$.W(2056409, 'whole_dollar_amount_with_sep', J$.B(254802, '+', J$.B(254794, '+', J$.T(2056201, '[1-9]\\d{0,2}(\\', 21, false), J$.G(2056217, J$.R(2056209, 'options', options, false, false), 'thousands_separator')), J$.T(2056225, '\\d{3})*', 21, false)), whole_dollar_amount_with_sep, false, false), valid_whole_dollar_amounts = J$.W(2056417, 'valid_whole_dollar_amounts', J$.T(2056257, [
                                    J$.T(2056233, '0', 21, false),
                                    J$.R(2056241, 'whole_dollar_amount_without_sep', whole_dollar_amount_without_sep, false, false),
                                    J$.R(2056249, 'whole_dollar_amount_with_sep', whole_dollar_amount_with_sep, false, false)
                                ], 10, false), valid_whole_dollar_amounts, false, false), whole_dollar_amount = J$.W(2056425, 'whole_dollar_amount', J$.B(254818, '+', J$.B(254810, '+', J$.T(2056265, '(', 21, false), J$.M(2056289, J$.R(2056273, 'valid_whole_dollar_amounts', valid_whole_dollar_amounts, false, false), 'join', false)(J$.T(2056281, '|', 21, false))), J$.T(2056297, ')?', 21, false)), whole_dollar_amount, false, false), decimal_amount = J$.W(2056433, 'decimal_amount', J$.B(254858, '+', J$.B(254850, '+', J$.B(254842, '+', J$.B(254834, '+', J$.B(254826, '+', J$.T(2056305, '(\\', 21, false), J$.G(2056321, J$.R(2056313, 'options', options, false, false), 'decimal_separator')), J$.T(2056329, '(', 21, false)), J$.R(2056337, 'decimal_digits', decimal_digits, false, false)), J$.T(2056345, '))', 21, false)), J$.C(121392, J$.G(2056361, J$.R(2056353, 'options', options, false, false), 'require_decimal')) ? J$.T(2056369, '', 21, false) : J$.T(2056377, '?', 21, false)), decimal_amount, false, false);
                            var pattern = J$.W(2056497, 'pattern', J$.B(254866, '+', J$.R(2056441, 'whole_dollar_amount', whole_dollar_amount, false, false), J$.C(121408, J$.C(121400, J$.G(2056457, J$.R(2056449, 'options', options, false, false), 'allow_decimal')) ? J$._() : J$.G(2056473, J$.R(2056465, 'options', options, false, false), 'require_decimal')) ? J$.R(2056481, 'decimal_amount', decimal_amount, false, false) : J$.T(2056489, '', 21, false)), pattern, false, false);
                            if (J$.C(121440, J$.C(121416, J$.G(2056513, J$.R(2056505, 'options', options, false, false), 'allow_negatives')) ? J$.U(254874, '!', J$.G(2056529, J$.R(2056521, 'options', options, false, false), 'parens_for_negatives')) : J$._())) {
                                if (J$.C(121432, J$.G(2056545, J$.R(2056537, 'options', options, false, false), 'negative_sign_after_digits'))) {
                                    pattern = J$.W(2056569, 'pattern', J$.B(254882, '+', J$.R(2056561, 'pattern', pattern, false, false), J$.R(2056553, 'negative', negative, false, false)), pattern, false, false);
                                } else if (J$.C(121424, J$.G(2056585, J$.R(2056577, 'options', options, false, false), 'negative_sign_before_digits'))) {
                                    pattern = J$.W(2056609, 'pattern', J$.B(254890, '+', J$.R(2056593, 'negative', negative, false, false), J$.R(2056601, 'pattern', pattern, false, false)), pattern, false, false);
                                }
                            }
                            if (J$.C(121464, J$.G(2056625, J$.R(2056617, 'options', options, false, false), 'allow_negative_sign_placeholder'))) {
                                pattern = J$.W(2056649, 'pattern', J$.B(254898, '+', J$.T(2056633, '( (?!\\-))?', 21, false), J$.R(2056641, 'pattern', pattern, false, false)), pattern, false, false);
                            } else if (J$.C(121456, J$.G(2056665, J$.R(2056657, 'options', options, false, false), 'allow_space_after_symbol'))) {
                                pattern = J$.W(2056689, 'pattern', J$.B(254906, '+', J$.T(2056673, ' ?', 21, false), J$.R(2056681, 'pattern', pattern, false, false)), pattern, false, false);
                            } else if (J$.C(121448, J$.G(2056705, J$.R(2056697, 'options', options, false, false), 'allow_space_after_digits'))) {
                                pattern = J$.W(2056729, 'pattern', J$.B(254914, '+', J$.R(2056721, 'pattern', pattern, false, false), J$.T(2056713, '( (?!$))?', 21, false)), pattern, false, false);
                            }
                            if (J$.C(121472, J$.G(2056745, J$.R(2056737, 'options', options, false, false), 'symbol_after_digits'))) {
                                pattern = J$.W(2056769, 'pattern', J$.B(254922, '+', J$.R(2056761, 'pattern', pattern, false, false), J$.R(2056753, 'symbol', symbol, false, false)), pattern, false, false);
                            } else {
                                pattern = J$.W(2056793, 'pattern', J$.B(254930, '+', J$.R(2056777, 'symbol', symbol, false, false), J$.R(2056785, 'pattern', pattern, false, false)), pattern, false, false);
                            }
                            if (J$.C(121504, J$.G(2056809, J$.R(2056801, 'options', options, false, false), 'allow_negatives'))) {
                                if (J$.C(121496, J$.G(2056825, J$.R(2056817, 'options', options, false, false), 'parens_for_negatives'))) {
                                    pattern = J$.W(2056873, 'pattern', J$.B(254962, '+', J$.B(254954, '+', J$.B(254946, '+', J$.B(254938, '+', J$.T(2056833, '(\\(', 21, false), J$.R(2056841, 'pattern', pattern, false, false)), J$.T(2056849, '\\)|', 21, false)), J$.R(2056857, 'pattern', pattern, false, false)), J$.T(2056865, ')', 21, false)), pattern, false, false);
                                } else if (J$.C(121488, J$.U(254970, '!', J$.C(121480, J$.G(2056889, J$.R(2056881, 'options', options, false, false), 'negative_sign_before_digits')) ? J$._() : J$.G(2056905, J$.R(2056897, 'options', options, false, false), 'negative_sign_after_digits')))) {
                                    pattern = J$.W(2056929, 'pattern', J$.B(254978, '+', J$.R(2056913, 'negative', negative, false, false), J$.R(2056921, 'pattern', pattern, false, false)), pattern, false, false);
                                }
                            }
                            return J$.Rt(2056977, J$.F(2056969, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2056937, 'RegExp', undefined, true, true) : RegExp = J$.R(2056937, 'RegExp', RegExp, true, true)), true)(J$.B(254994, '+', J$.B(254986, '+', J$.T(2056945, '^(?!-? )(?=.*\\d)', 21, false), J$.R(2056953, 'pattern', pattern, false, false)), J$.T(2056961, '$', 21, false))));
                        } catch (J$e) {
                            J$.Ex(2057569, J$e);
                        } finally {
                            if (J$.Fr(2057577))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isCurrency(str, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2057369, arguments.callee, this, arguments);
                            arguments = J$.N(2057377, 'arguments', arguments, true, false, false);
                            str = J$.N(2057385, 'str', str, true, false, false);
                            options = J$.N(2057393, 'options', options, true, false, false);
                            J$.F(2057257, (J$.T(2057225, 0, 22, false), J$.G(2057241, J$.R(2057233, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(2057249, 'str', str, false, false));
                            options = J$.W(2057313, 'options', J$.F(2057305, (J$.T(2057265, 0, 22, false), J$.G(2057281, J$.R(2057273, '_merge2', _merge2, false, true), 'default')), false)(J$.R(2057289, 'options', options, false, false), J$.R(2057297, 'default_currency_options', default_currency_options, false, true)), options, false, false);
                            return J$.Rt(2057361, J$.M(2057353, J$.F(2057337, J$.R(2057321, 'currencyRegex', currencyRegex, false, true), false)(J$.R(2057329, 'options', options, false, false)), 'test', false)(J$.R(2057345, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(2057585, J$e);
                        } finally {
                            if (J$.Fr(2057593))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2057449, '_merge', _merge, false, false, false);
            J$.N(2057457, '_merge2', _merge2, false, false, false);
            J$.N(2057465, '_assertString', _assertString, false, false, false);
            J$.N(2057473, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(2057489, '_interopRequireDefault', J$.T(2057481, _interopRequireDefault, 12, false), true, false, false);
            currencyRegex = J$.N(2057505, 'currencyRegex', J$.T(2057497, currencyRegex, 12, false), true, false, false);
            J$.N(2057513, 'default_currency_options', default_currency_options, false, false, false);
            isCurrency = J$.N(2057529, 'isCurrency', J$.T(2057521, isCurrency, 12, false), true, false, false);
            J$.T(2055633, 'use strict', 21, false);
            J$.M(2055681, J$.I(typeof Object === 'undefined' ? Object = J$.R(2055641, 'Object', undefined, true, true) : Object = J$.R(2055641, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2055649, 'exports', undefined, true, true) : exports = J$.R(2055649, 'exports', exports, true, true)), J$.T(2055657, '__esModule', 21, false), J$.T(2055673, { value: J$.T(2055665, true, 23, false) }, 11, false));
            J$.P(2055705, J$.I(typeof exports === 'undefined' ? exports = J$.R(2055689, 'exports', undefined, true, true) : exports = J$.R(2055689, 'exports', exports, true, true)), 'default', J$.R(2055697, 'isCurrency', isCurrency, false, true));
            var _merge = J$.W(2055737, '_merge', J$.F(2055729, J$.I(typeof require === 'undefined' ? require = J$.R(2055713, 'require', undefined, true, true) : require = J$.R(2055713, 'require', require, true, true)), false)(J$.T(2055721, './util/merge', 21, false)), _merge, false, true);
            var _merge2 = J$.W(2055769, '_merge2', J$.F(2055761, J$.R(2055745, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2055753, '_merge', _merge, false, true)), _merge2, false, true);
            var _assertString = J$.W(2055801, '_assertString', J$.F(2055793, J$.I(typeof require === 'undefined' ? require = J$.R(2055777, 'require', undefined, true, true) : require = J$.R(2055777, 'require', require, true, true)), false)(J$.T(2055785, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(2055833, '_assertString2', J$.F(2055825, J$.R(2055809, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2055817, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var default_currency_options = J$.W(2057217, 'default_currency_options', J$.T(2057209, {
                symbol: J$.T(2057081, '$', 21, false),
                require_symbol: J$.T(2057089, false, 23, false),
                allow_space_after_symbol: J$.T(2057097, false, 23, false),
                symbol_after_digits: J$.T(2057105, false, 23, false),
                allow_negatives: J$.T(2057113, true, 23, false),
                parens_for_negatives: J$.T(2057121, false, 23, false),
                negative_sign_before_digits: J$.T(2057129, false, 23, false),
                negative_sign_after_digits: J$.T(2057137, false, 23, false),
                allow_negative_sign_placeholder: J$.T(2057145, false, 23, false),
                thousands_separator: J$.T(2057153, ',', 21, false),
                decimal_separator: J$.T(2057161, '.', 21, false),
                allow_decimal: J$.T(2057169, true, 23, false),
                require_decimal: J$.T(2057177, false, 23, false),
                digits_after_decimal: J$.T(2057193, [J$.T(2057185, 2, 22, false)], 10, false),
                allow_space_after_digits: J$.T(2057201, false, 23, false)
            }, 11, false), default_currency_options, false, true);
            J$.P(2057433, J$.I(typeof module === 'undefined' ? module = J$.R(2057401, 'module', undefined, true, true) : module = J$.R(2057401, 'module', module, true, true)), 'exports', J$.G(2057425, J$.I(typeof exports === 'undefined' ? exports = J$.R(2057409, 'exports', undefined, true, true) : exports = J$.R(2057409, 'exports', exports, true, true)), J$.T(2057417, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(2057601, J$e);
        } finally {
            if (J$.Sr(2057609))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

