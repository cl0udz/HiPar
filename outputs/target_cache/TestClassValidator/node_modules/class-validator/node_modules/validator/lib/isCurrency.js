J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(5840737, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isCurrency.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5839193, arguments.callee, this, arguments);
                            arguments = J$.N(5839201, 'arguments', arguments, true, false, false);
                            obj = J$.N(5839209, 'obj', obj, true, false, false);
                            return J$.Rt(5839185, J$.C(317888, J$.C(317880, J$.R(5839137, 'obj', obj, false, false)) ? J$.G(5839153, J$.R(5839145, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5839161, 'obj', obj, false, false) : J$.T(5839177, { default: J$.R(5839169, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5840833, J$e);
                        } finally {
                            if (J$.Fr(5840841))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function currencyRegex(options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5840281, arguments.callee, this, arguments);
                            arguments = J$.N(5840289, 'arguments', arguments, true, false, false);
                            options = J$.N(5840297, 'options', options, true, false, false);
                            J$.N(5840305, 'decimal_digits', decimal_digits, false, false, false);
                            J$.N(5840313, 'symbol', symbol, false, false, false);
                            J$.N(5840321, 'negative', negative, false, false, false);
                            J$.N(5840329, 'whole_dollar_amount_without_sep', whole_dollar_amount_without_sep, false, false, false);
                            J$.N(5840337, 'whole_dollar_amount_with_sep', whole_dollar_amount_with_sep, false, false, false);
                            J$.N(5840345, 'valid_whole_dollar_amounts', valid_whole_dollar_amounts, false, false, false);
                            J$.N(5840353, 'whole_dollar_amount', whole_dollar_amount, false, false, false);
                            J$.N(5840361, 'decimal_amount', decimal_amount, false, false, false);
                            J$.N(5840369, 'pattern', pattern, false, false, false);
                            var decimal_digits = J$.W(5839265, 'decimal_digits', J$.B(602146, '+', J$.B(602138, '+', J$.T(5839217, '\\d{', 21, false), J$.G(5839249, J$.G(5839233, J$.R(5839225, 'options', options, false, false), 'digits_after_decimal'), J$.T(5839241, 0, 22, false))), J$.T(5839257, '}', 21, false)), decimal_digits, false, false);
                            J$.M(5839385, J$.G(5839281, J$.R(5839273, 'options', options, false, false), 'digits_after_decimal'), 'forEach', false)(J$.T(5839377, function (digit, index) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(5839345, arguments.callee, this, arguments);
                                            arguments = J$.N(5839353, 'arguments', arguments, true, false, false);
                                            digit = J$.N(5839361, 'digit', digit, true, false, false);
                                            index = J$.N(5839369, 'index', index, true, false, false);
                                            if (J$.C(317896, J$.B(602154, '!==', J$.R(5839289, 'index', index, false, false), J$.T(5839297, 0, 22, false))))
                                                decimal_digits = J$.W(5839337, 'decimal_digits', J$.B(602178, '+', J$.B(602170, '+', J$.B(602162, '+', J$.R(5839305, 'decimal_digits', decimal_digits, false, false), J$.T(5839313, '|\\d{', 21, false)), J$.R(5839321, 'digit', digit, false, false)), J$.T(5839329, '}', 21, false)), decimal_digits, false, false);
                                        } catch (J$e) {
                                            J$.Ex(5840849, J$e);
                                        } finally {
                                            if (J$.Fr(5840857))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var symbol = J$.W(5839681, 'symbol', J$.B(602202, '+', J$.B(602194, '+', J$.B(602186, '+', J$.T(5839393, '(\\', 21, false), J$.M(5839433, J$.G(5839409, J$.R(5839401, 'options', options, false, false), 'symbol'), 'replace', false)(J$.T(5839417, /\./g, 14, false), J$.T(5839425, '\\.', 21, false))), J$.T(5839441, ')', 21, false)), J$.C(317904, J$.G(5839457, J$.R(5839449, 'options', options, false, false), 'require_symbol')) ? J$.T(5839465, '', 21, false) : J$.T(5839473, '?', 21, false)), symbol, false, false), negative = J$.W(5839689, 'negative', J$.T(5839481, '-?', 21, false), negative, false, false), whole_dollar_amount_without_sep = J$.W(5839697, 'whole_dollar_amount_without_sep', J$.T(5839489, '[1-9]\\d*', 21, false), whole_dollar_amount_without_sep, false, false), whole_dollar_amount_with_sep = J$.W(5839705, 'whole_dollar_amount_with_sep', J$.B(602218, '+', J$.B(602210, '+', J$.T(5839497, '[1-9]\\d{0,2}(\\', 21, false), J$.G(5839513, J$.R(5839505, 'options', options, false, false), 'thousands_separator')), J$.T(5839521, '\\d{3})*', 21, false)), whole_dollar_amount_with_sep, false, false), valid_whole_dollar_amounts = J$.W(5839713, 'valid_whole_dollar_amounts', J$.T(5839553, [
                                    J$.T(5839529, '0', 21, false),
                                    J$.R(5839537, 'whole_dollar_amount_without_sep', whole_dollar_amount_without_sep, false, false),
                                    J$.R(5839545, 'whole_dollar_amount_with_sep', whole_dollar_amount_with_sep, false, false)
                                ], 10, false), valid_whole_dollar_amounts, false, false), whole_dollar_amount = J$.W(5839721, 'whole_dollar_amount', J$.B(602234, '+', J$.B(602226, '+', J$.T(5839561, '(', 21, false), J$.M(5839585, J$.R(5839569, 'valid_whole_dollar_amounts', valid_whole_dollar_amounts, false, false), 'join', false)(J$.T(5839577, '|', 21, false))), J$.T(5839593, ')?', 21, false)), whole_dollar_amount, false, false), decimal_amount = J$.W(5839729, 'decimal_amount', J$.B(602274, '+', J$.B(602266, '+', J$.B(602258, '+', J$.B(602250, '+', J$.B(602242, '+', J$.T(5839601, '(\\', 21, false), J$.G(5839617, J$.R(5839609, 'options', options, false, false), 'decimal_separator')), J$.T(5839625, '(', 21, false)), J$.R(5839633, 'decimal_digits', decimal_digits, false, false)), J$.T(5839641, '))', 21, false)), J$.C(317912, J$.G(5839657, J$.R(5839649, 'options', options, false, false), 'require_decimal')) ? J$.T(5839665, '', 21, false) : J$.T(5839673, '?', 21, false)), decimal_amount, false, false);
                            var pattern = J$.W(5839793, 'pattern', J$.B(602282, '+', J$.R(5839737, 'whole_dollar_amount', whole_dollar_amount, false, false), J$.C(317928, J$.C(317920, J$.G(5839753, J$.R(5839745, 'options', options, false, false), 'allow_decimal')) ? J$._() : J$.G(5839769, J$.R(5839761, 'options', options, false, false), 'require_decimal')) ? J$.R(5839777, 'decimal_amount', decimal_amount, false, false) : J$.T(5839785, '', 21, false)), pattern, false, false);
                            if (J$.C(317960, J$.C(317936, J$.G(5839809, J$.R(5839801, 'options', options, false, false), 'allow_negatives')) ? J$.U(602290, '!', J$.G(5839825, J$.R(5839817, 'options', options, false, false), 'parens_for_negatives')) : J$._())) {
                                if (J$.C(317952, J$.G(5839841, J$.R(5839833, 'options', options, false, false), 'negative_sign_after_digits'))) {
                                    pattern = J$.W(5839865, 'pattern', J$.B(602298, '+', J$.R(5839857, 'pattern', pattern, false, false), J$.R(5839849, 'negative', negative, false, false)), pattern, false, false);
                                } else if (J$.C(317944, J$.G(5839881, J$.R(5839873, 'options', options, false, false), 'negative_sign_before_digits'))) {
                                    pattern = J$.W(5839905, 'pattern', J$.B(602306, '+', J$.R(5839889, 'negative', negative, false, false), J$.R(5839897, 'pattern', pattern, false, false)), pattern, false, false);
                                }
                            }
                            if (J$.C(317984, J$.G(5839921, J$.R(5839913, 'options', options, false, false), 'allow_negative_sign_placeholder'))) {
                                pattern = J$.W(5839945, 'pattern', J$.B(602314, '+', J$.T(5839929, '( (?!\\-))?', 21, false), J$.R(5839937, 'pattern', pattern, false, false)), pattern, false, false);
                            } else if (J$.C(317976, J$.G(5839961, J$.R(5839953, 'options', options, false, false), 'allow_space_after_symbol'))) {
                                pattern = J$.W(5839985, 'pattern', J$.B(602322, '+', J$.T(5839969, ' ?', 21, false), J$.R(5839977, 'pattern', pattern, false, false)), pattern, false, false);
                            } else if (J$.C(317968, J$.G(5840001, J$.R(5839993, 'options', options, false, false), 'allow_space_after_digits'))) {
                                pattern = J$.W(5840025, 'pattern', J$.B(602330, '+', J$.R(5840017, 'pattern', pattern, false, false), J$.T(5840009, '( (?!$))?', 21, false)), pattern, false, false);
                            }
                            if (J$.C(317992, J$.G(5840041, J$.R(5840033, 'options', options, false, false), 'symbol_after_digits'))) {
                                pattern = J$.W(5840065, 'pattern', J$.B(602338, '+', J$.R(5840057, 'pattern', pattern, false, false), J$.R(5840049, 'symbol', symbol, false, false)), pattern, false, false);
                            } else {
                                pattern = J$.W(5840089, 'pattern', J$.B(602346, '+', J$.R(5840073, 'symbol', symbol, false, false), J$.R(5840081, 'pattern', pattern, false, false)), pattern, false, false);
                            }
                            if (J$.C(318024, J$.G(5840105, J$.R(5840097, 'options', options, false, false), 'allow_negatives'))) {
                                if (J$.C(318016, J$.G(5840121, J$.R(5840113, 'options', options, false, false), 'parens_for_negatives'))) {
                                    pattern = J$.W(5840169, 'pattern', J$.B(602378, '+', J$.B(602370, '+', J$.B(602362, '+', J$.B(602354, '+', J$.T(5840129, '(\\(', 21, false), J$.R(5840137, 'pattern', pattern, false, false)), J$.T(5840145, '\\)|', 21, false)), J$.R(5840153, 'pattern', pattern, false, false)), J$.T(5840161, ')', 21, false)), pattern, false, false);
                                } else if (J$.C(318008, J$.U(602386, '!', J$.C(318000, J$.G(5840185, J$.R(5840177, 'options', options, false, false), 'negative_sign_before_digits')) ? J$._() : J$.G(5840201, J$.R(5840193, 'options', options, false, false), 'negative_sign_after_digits')))) {
                                    pattern = J$.W(5840225, 'pattern', J$.B(602394, '+', J$.R(5840209, 'negative', negative, false, false), J$.R(5840217, 'pattern', pattern, false, false)), pattern, false, false);
                                }
                            }
                            return J$.Rt(5840273, J$.F(5840265, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5840233, 'RegExp', undefined, true, true) : RegExp = J$.R(5840233, 'RegExp', RegExp, true, true)), true)(J$.B(602410, '+', J$.B(602402, '+', J$.T(5840241, '^(?!-? )(?=.*\\d)', 21, false), J$.R(5840249, 'pattern', pattern, false, false)), J$.T(5840257, '$', 21, false))));
                        } catch (J$e) {
                            J$.Ex(5840865, J$e);
                        } finally {
                            if (J$.Fr(5840873))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isCurrency(str, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5840665, arguments.callee, this, arguments);
                            arguments = J$.N(5840673, 'arguments', arguments, true, false, false);
                            str = J$.N(5840681, 'str', str, true, false, false);
                            options = J$.N(5840689, 'options', options, true, false, false);
                            J$.F(5840553, (J$.T(5840521, 0, 22, false), J$.G(5840537, J$.R(5840529, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5840545, 'str', str, false, false));
                            options = J$.W(5840609, 'options', J$.F(5840601, (J$.T(5840561, 0, 22, false), J$.G(5840577, J$.R(5840569, '_merge2', _merge2, false, true), 'default')), false)(J$.R(5840585, 'options', options, false, false), J$.R(5840593, 'default_currency_options', default_currency_options, false, true)), options, false, false);
                            return J$.Rt(5840657, J$.M(5840649, J$.F(5840633, J$.R(5840617, 'currencyRegex', currencyRegex, false, true), false)(J$.R(5840625, 'options', options, false, false)), 'test', false)(J$.R(5840641, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(5840881, J$e);
                        } finally {
                            if (J$.Fr(5840889))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5840745, '_merge', _merge, false, false, false);
            J$.N(5840753, '_merge2', _merge2, false, false, false);
            J$.N(5840761, '_assertString', _assertString, false, false, false);
            J$.N(5840769, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(5840785, '_interopRequireDefault', J$.T(5840777, _interopRequireDefault, 12, false), true, false, false);
            currencyRegex = J$.N(5840801, 'currencyRegex', J$.T(5840793, currencyRegex, 12, false), true, false, false);
            J$.N(5840809, 'default_currency_options', default_currency_options, false, false, false);
            isCurrency = J$.N(5840825, 'isCurrency', J$.T(5840817, isCurrency, 12, false), true, false, false);
            J$.T(5838929, 'use strict', 21, false);
            J$.M(5838977, J$.I(typeof Object === 'undefined' ? Object = J$.R(5838937, 'Object', undefined, true, true) : Object = J$.R(5838937, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5838945, 'exports', undefined, true, true) : exports = J$.R(5838945, 'exports', exports, true, true)), J$.T(5838953, '__esModule', 21, false), J$.T(5838969, { value: J$.T(5838961, true, 23, false) }, 11, false));
            J$.P(5839001, J$.I(typeof exports === 'undefined' ? exports = J$.R(5838985, 'exports', undefined, true, true) : exports = J$.R(5838985, 'exports', exports, true, true)), 'default', J$.R(5838993, 'isCurrency', isCurrency, false, true));
            var _merge = J$.W(5839033, '_merge', J$.F(5839025, J$.I(typeof require === 'undefined' ? require = J$.R(5839009, 'require', undefined, true, true) : require = J$.R(5839009, 'require', require, true, true)), false)(J$.T(5839017, './util/merge', 21, false)), _merge, false, true);
            var _merge2 = J$.W(5839065, '_merge2', J$.F(5839057, J$.R(5839041, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5839049, '_merge', _merge, false, true)), _merge2, false, true);
            var _assertString = J$.W(5839097, '_assertString', J$.F(5839089, J$.I(typeof require === 'undefined' ? require = J$.R(5839073, 'require', undefined, true, true) : require = J$.R(5839073, 'require', require, true, true)), false)(J$.T(5839081, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5839129, '_assertString2', J$.F(5839121, J$.R(5839105, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5839113, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var default_currency_options = J$.W(5840513, 'default_currency_options', J$.T(5840505, {
                symbol: J$.T(5840377, '$', 21, false),
                require_symbol: J$.T(5840385, false, 23, false),
                allow_space_after_symbol: J$.T(5840393, false, 23, false),
                symbol_after_digits: J$.T(5840401, false, 23, false),
                allow_negatives: J$.T(5840409, true, 23, false),
                parens_for_negatives: J$.T(5840417, false, 23, false),
                negative_sign_before_digits: J$.T(5840425, false, 23, false),
                negative_sign_after_digits: J$.T(5840433, false, 23, false),
                allow_negative_sign_placeholder: J$.T(5840441, false, 23, false),
                thousands_separator: J$.T(5840449, ',', 21, false),
                decimal_separator: J$.T(5840457, '.', 21, false),
                allow_decimal: J$.T(5840465, true, 23, false),
                require_decimal: J$.T(5840473, false, 23, false),
                digits_after_decimal: J$.T(5840489, [J$.T(5840481, 2, 22, false)], 10, false),
                allow_space_after_digits: J$.T(5840497, false, 23, false)
            }, 11, false), default_currency_options, false, true);
            J$.P(5840729, J$.I(typeof module === 'undefined' ? module = J$.R(5840697, 'module', undefined, true, true) : module = J$.R(5840697, 'module', module, true, true)), 'exports', J$.G(5840721, J$.I(typeof exports === 'undefined' ? exports = J$.R(5840705, 'exports', undefined, true, true) : exports = J$.R(5840705, 'exports', exports, true, true)), J$.T(5840713, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5840897, J$e);
        } finally {
            if (J$.Sr(5840905))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

