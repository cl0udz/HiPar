J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1242185, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/matches.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1241921, arguments.callee, this, arguments);
                            arguments = J$.N(1241929, 'arguments', arguments, true, false, false);
                            obj = J$.N(1241937, 'obj', obj, true, false, false);
                            return J$.Rt(1241913, J$.C(69936, J$.C(69928, J$.R(1241865, 'obj', obj, false, false)) ? J$.G(1241881, J$.R(1241873, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1241889, 'obj', obj, false, false) : J$.T(1241905, { default: J$.R(1241897, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1242241, J$e);
                        } finally {
                            if (J$.Fr(1242249))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function matches(str, pattern, modifiers) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1242105, arguments.callee, this, arguments);
                            arguments = J$.N(1242113, 'arguments', arguments, true, false, false);
                            str = J$.N(1242121, 'str', str, true, false, false);
                            pattern = J$.N(1242129, 'pattern', pattern, true, false, false);
                            modifiers = J$.N(1242137, 'modifiers', modifiers, true, false, false);
                            J$.F(1241977, (J$.T(1241945, 0, 22, false), J$.G(1241961, J$.R(1241953, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1241969, 'str', str, false, false));
                            if (J$.C(69944, J$.B(88378, '!==', J$.M(1242017, J$.G(1242001, J$.G(1241993, J$.I(typeof Object === 'undefined' ? Object = J$.R(1241985, 'Object', undefined, true, true) : Object = J$.R(1241985, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(1242009, 'pattern', pattern, false, false)), J$.T(1242025, '[object RegExp]', 21, false)))) {
                                pattern = J$.W(1242065, 'pattern', J$.F(1242057, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(1242033, 'RegExp', undefined, true, true) : RegExp = J$.R(1242033, 'RegExp', RegExp, true, true)), true)(J$.R(1242041, 'pattern', pattern, false, false), J$.R(1242049, 'modifiers', modifiers, false, false)), pattern, false, false);
                            }
                            return J$.Rt(1242097, J$.M(1242089, J$.R(1242073, 'pattern', pattern, false, false), 'test', false)(J$.R(1242081, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(1242257, J$e);
                        } finally {
                            if (J$.Fr(1242265))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1242193, '_assertString', _assertString, false, false, false);
            J$.N(1242201, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(1242217, '_interopRequireDefault', J$.T(1242209, _interopRequireDefault, 12, false), true, false, false);
            matches = J$.N(1242233, 'matches', J$.T(1242225, matches, 12, false), true, false, false);
            J$.T(1241721, 'use strict', 21, false);
            J$.M(1241769, J$.I(typeof Object === 'undefined' ? Object = J$.R(1241729, 'Object', undefined, true, true) : Object = J$.R(1241729, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1241737, 'exports', undefined, true, true) : exports = J$.R(1241737, 'exports', exports, true, true)), J$.T(1241745, '__esModule', 21, false), J$.T(1241761, { value: J$.T(1241753, true, 23, false) }, 11, false));
            J$.P(1241793, J$.I(typeof exports === 'undefined' ? exports = J$.R(1241777, 'exports', undefined, true, true) : exports = J$.R(1241777, 'exports', exports, true, true)), 'default', J$.R(1241785, 'matches', matches, false, true));
            var _assertString = J$.W(1241825, '_assertString', J$.F(1241817, J$.I(typeof require === 'undefined' ? require = J$.R(1241801, 'require', undefined, true, true) : require = J$.R(1241801, 'require', require, true, true)), false)(J$.T(1241809, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1241857, '_assertString2', J$.F(1241849, J$.R(1241833, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1241841, '_assertString', _assertString, false, true)), _assertString2, false, true);
            J$.P(1242177, J$.I(typeof module === 'undefined' ? module = J$.R(1242145, 'module', undefined, true, true) : module = J$.R(1242145, 'module', module, true, true)), 'exports', J$.G(1242169, J$.I(typeof exports === 'undefined' ? exports = J$.R(1242153, 'exports', undefined, true, true) : exports = J$.R(1242153, 'exports', exports, true, true)), J$.T(1242161, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1242273, J$e);
        } finally {
            if (J$.Sr(1242281))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

