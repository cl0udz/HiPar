J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5883265, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/matches.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5883001, arguments.callee, this, arguments);
                            arguments = J$.N(5883009, 'arguments', arguments, true, false, false);
                            obj = J$.N(5883017, 'obj', obj, true, false, false);
                            return J$.Rt(5882993, J$.C(320456, J$.C(320448, J$.R(5882945, 'obj', obj, false, false)) ? J$.G(5882961, J$.R(5882953, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5882969, 'obj', obj, false, false) : J$.T(5882985, { default: J$.R(5882977, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5883321, J$e);
                        } finally {
                            if (J$.Fr(5883329))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function matches(str, pattern, modifiers) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5883185, arguments.callee, this, arguments);
                            arguments = J$.N(5883193, 'arguments', arguments, true, false, false);
                            str = J$.N(5883201, 'str', str, true, false, false);
                            pattern = J$.N(5883209, 'pattern', pattern, true, false, false);
                            modifiers = J$.N(5883217, 'modifiers', modifiers, true, false, false);
                            J$.F(5883057, (J$.T(5883025, 0, 22, false), J$.G(5883041, J$.R(5883033, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5883049, 'str', str, false, false));
                            if (J$.C(320464, J$.B(604914, '!==', J$.M(5883097, J$.G(5883081, J$.G(5883073, J$.I(typeof Object === 'undefined' ? Object = J$.R(5883065, 'Object', undefined, true, true) : Object = J$.R(5883065, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(5883089, 'pattern', pattern, false, false)), J$.T(5883105, '[object RegExp]', 21, false)))) {
                                pattern = J$.W(5883145, 'pattern', J$.F(5883137, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5883113, 'RegExp', undefined, true, true) : RegExp = J$.R(5883113, 'RegExp', RegExp, true, true)), true)(J$.R(5883121, 'pattern', pattern, false, false), J$.R(5883129, 'modifiers', modifiers, false, false)), pattern, false, false);
                            }
                            return J$.Rt(5883177, J$.M(5883169, J$.R(5883153, 'pattern', pattern, false, false), 'test', false)(J$.R(5883161, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(5883337, J$e);
                        } finally {
                            if (J$.Fr(5883345))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5883273, '_assertString', _assertString, false, false, false);
            J$.N(5883281, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(5883297, '_interopRequireDefault', J$.T(5883289, _interopRequireDefault, 12, false), true, false, false);
            matches = J$.N(5883313, 'matches', J$.T(5883305, matches, 12, false), true, false, false);
            J$.T(5882801, 'use strict', 21, false);
            J$.M(5882849, J$.I(typeof Object === 'undefined' ? Object = J$.R(5882809, 'Object', undefined, true, true) : Object = J$.R(5882809, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5882817, 'exports', undefined, true, true) : exports = J$.R(5882817, 'exports', exports, true, true)), J$.T(5882825, '__esModule', 21, false), J$.T(5882841, { value: J$.T(5882833, true, 23, false) }, 11, false));
            J$.P(5882873, J$.I(typeof exports === 'undefined' ? exports = J$.R(5882857, 'exports', undefined, true, true) : exports = J$.R(5882857, 'exports', exports, true, true)), 'default', J$.R(5882865, 'matches', matches, false, true));
            var _assertString = J$.W(5882905, '_assertString', J$.F(5882897, J$.I(typeof require === 'undefined' ? require = J$.R(5882881, 'require', undefined, true, true) : require = J$.R(5882881, 'require', require, true, true)), false)(J$.T(5882889, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5882937, '_assertString2', J$.F(5882929, J$.R(5882913, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5882921, '_assertString', _assertString, false, true)), _assertString2, false, true);
            J$.P(5883257, J$.I(typeof module === 'undefined' ? module = J$.R(5883225, 'module', undefined, true, true) : module = J$.R(5883225, 'module', module, true, true)), 'exports', J$.G(5883249, J$.I(typeof exports === 'undefined' ? exports = J$.R(5883233, 'exports', undefined, true, true) : exports = J$.R(5883233, 'exports', exports, true, true)), J$.T(5883241, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5883353, J$e);
        } finally {
            if (J$.Sr(5883361))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

