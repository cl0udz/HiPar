J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5834753, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isAscii.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5834577, arguments.callee, this, arguments);
                            arguments = J$.N(5834585, 'arguments', arguments, true, false, false);
                            obj = J$.N(5834593, 'obj', obj, true, false, false);
                            return J$.Rt(5834569, J$.C(317584, J$.C(317576, J$.R(5834521, 'obj', obj, false, false)) ? J$.G(5834537, J$.R(5834529, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5834545, 'obj', obj, false, false) : J$.T(5834561, { default: J$.R(5834553, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5834817, J$e);
                        } finally {
                            if (J$.Fr(5834825))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isAscii(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5834689, arguments.callee, this, arguments);
                            arguments = J$.N(5834697, 'arguments', arguments, true, false, false);
                            str = J$.N(5834705, 'str', str, true, false, false);
                            J$.F(5834649, (J$.T(5834617, 0, 22, false), J$.G(5834633, J$.R(5834625, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5834641, 'str', str, false, false));
                            return J$.Rt(5834681, J$.M(5834673, J$.R(5834657, 'ascii', ascii, false, true), 'test', false)(J$.R(5834665, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(5834833, J$e);
                        } finally {
                            if (J$.Fr(5834841))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5834761, '_assertString', _assertString, false, false, false);
            J$.N(5834769, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(5834785, '_interopRequireDefault', J$.T(5834777, _interopRequireDefault, 12, false), true, false, false);
            J$.N(5834793, 'ascii', ascii, false, false, false);
            isAscii = J$.N(5834809, 'isAscii', J$.T(5834801, isAscii, 12, false), true, false, false);
            J$.T(5834377, 'use strict', 21, false);
            J$.M(5834425, J$.I(typeof Object === 'undefined' ? Object = J$.R(5834385, 'Object', undefined, true, true) : Object = J$.R(5834385, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5834393, 'exports', undefined, true, true) : exports = J$.R(5834393, 'exports', exports, true, true)), J$.T(5834401, '__esModule', 21, false), J$.T(5834417, { value: J$.T(5834409, true, 23, false) }, 11, false));
            J$.P(5834449, J$.I(typeof exports === 'undefined' ? exports = J$.R(5834433, 'exports', undefined, true, true) : exports = J$.R(5834433, 'exports', exports, true, true)), 'default', J$.R(5834441, 'isAscii', isAscii, false, true));
            var _assertString = J$.W(5834481, '_assertString', J$.F(5834473, J$.I(typeof require === 'undefined' ? require = J$.R(5834457, 'require', undefined, true, true) : require = J$.R(5834457, 'require', require, true, true)), false)(J$.T(5834465, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5834513, '_assertString2', J$.F(5834505, J$.R(5834489, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5834497, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var ascii = J$.W(5834609, 'ascii', J$.T(5834601, /^[\x00-\x7F]+$/, 14, false), ascii, false, true);
            J$.P(5834745, J$.I(typeof module === 'undefined' ? module = J$.R(5834713, 'module', undefined, true, true) : module = J$.R(5834713, 'module', module, true, true)), 'exports', J$.G(5834737, J$.I(typeof exports === 'undefined' ? exports = J$.R(5834721, 'exports', undefined, true, true) : exports = J$.R(5834721, 'exports', exports, true, true)), J$.T(5834729, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5834849, J$e);
        } finally {
            if (J$.Sr(5834857))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

