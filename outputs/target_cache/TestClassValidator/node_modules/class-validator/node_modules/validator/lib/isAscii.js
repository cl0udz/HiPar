J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1193673, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isAscii.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1193497, arguments.callee, this, arguments);
                            arguments = J$.N(1193505, 'arguments', arguments, true, false, false);
                            obj = J$.N(1193513, 'obj', obj, true, false, false);
                            return J$.Rt(1193489, J$.C(67064, J$.C(67056, J$.R(1193441, 'obj', obj, false, false)) ? J$.G(1193457, J$.R(1193449, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1193465, 'obj', obj, false, false) : J$.T(1193481, { default: J$.R(1193473, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1193737, J$e);
                        } finally {
                            if (J$.Fr(1193745))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isAscii(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1193609, arguments.callee, this, arguments);
                            arguments = J$.N(1193617, 'arguments', arguments, true, false, false);
                            str = J$.N(1193625, 'str', str, true, false, false);
                            J$.F(1193569, (J$.T(1193537, 0, 22, false), J$.G(1193553, J$.R(1193545, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1193561, 'str', str, false, false));
                            return J$.Rt(1193601, J$.M(1193593, J$.R(1193577, 'ascii', ascii, false, true), 'test', false)(J$.R(1193585, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(1193753, J$e);
                        } finally {
                            if (J$.Fr(1193761))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1193681, '_assertString', _assertString, false, false, false);
            J$.N(1193689, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(1193705, '_interopRequireDefault', J$.T(1193697, _interopRequireDefault, 12, false), true, false, false);
            J$.N(1193713, 'ascii', ascii, false, false, false);
            isAscii = J$.N(1193729, 'isAscii', J$.T(1193721, isAscii, 12, false), true, false, false);
            J$.T(1193297, 'use strict', 21, false);
            J$.M(1193345, J$.I(typeof Object === 'undefined' ? Object = J$.R(1193305, 'Object', undefined, true, true) : Object = J$.R(1193305, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1193313, 'exports', undefined, true, true) : exports = J$.R(1193313, 'exports', exports, true, true)), J$.T(1193321, '__esModule', 21, false), J$.T(1193337, { value: J$.T(1193329, true, 23, false) }, 11, false));
            J$.P(1193369, J$.I(typeof exports === 'undefined' ? exports = J$.R(1193353, 'exports', undefined, true, true) : exports = J$.R(1193353, 'exports', exports, true, true)), 'default', J$.R(1193361, 'isAscii', isAscii, false, true));
            var _assertString = J$.W(1193401, '_assertString', J$.F(1193393, J$.I(typeof require === 'undefined' ? require = J$.R(1193377, 'require', undefined, true, true) : require = J$.R(1193377, 'require', require, true, true)), false)(J$.T(1193385, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1193433, '_assertString2', J$.F(1193425, J$.R(1193409, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1193417, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var ascii = J$.W(1193529, 'ascii', J$.T(1193521, /^[\x00-\x7F]+$/, 14, false), ascii, false, true);
            J$.P(1193665, J$.I(typeof module === 'undefined' ? module = J$.R(1193633, 'module', undefined, true, true) : module = J$.R(1193633, 'module', module, true, true)), 'exports', J$.G(1193657, J$.I(typeof exports === 'undefined' ? exports = J$.R(1193641, 'exports', undefined, true, true) : exports = J$.R(1193641, 'exports', exports, true, true)), J$.T(1193649, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1193769, J$e);
        } finally {
            if (J$.Sr(1193777))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

