J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2051457, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isAscii.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2051281, arguments.callee, this, arguments);
                            arguments = J$.N(2051289, 'arguments', arguments, true, false, false);
                            obj = J$.N(2051297, 'obj', obj, true, false, false);
                            return J$.Rt(2051273, J$.C(121064, J$.C(121056, J$.R(2051225, 'obj', obj, false, false)) ? J$.G(2051241, J$.R(2051233, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(2051249, 'obj', obj, false, false) : J$.T(2051265, { default: J$.R(2051257, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2051521, J$e);
                        } finally {
                            if (J$.Fr(2051529))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isAscii(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2051393, arguments.callee, this, arguments);
                            arguments = J$.N(2051401, 'arguments', arguments, true, false, false);
                            str = J$.N(2051409, 'str', str, true, false, false);
                            J$.F(2051353, (J$.T(2051321, 0, 22, false), J$.G(2051337, J$.R(2051329, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(2051345, 'str', str, false, false));
                            return J$.Rt(2051385, J$.M(2051377, J$.R(2051361, 'ascii', ascii, false, true), 'test', false)(J$.R(2051369, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(2051537, J$e);
                        } finally {
                            if (J$.Fr(2051545))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2051465, '_assertString', _assertString, false, false, false);
            J$.N(2051473, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(2051489, '_interopRequireDefault', J$.T(2051481, _interopRequireDefault, 12, false), true, false, false);
            J$.N(2051497, 'ascii', ascii, false, false, false);
            isAscii = J$.N(2051513, 'isAscii', J$.T(2051505, isAscii, 12, false), true, false, false);
            J$.T(2051081, 'use strict', 21, false);
            J$.M(2051129, J$.I(typeof Object === 'undefined' ? Object = J$.R(2051089, 'Object', undefined, true, true) : Object = J$.R(2051089, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2051097, 'exports', undefined, true, true) : exports = J$.R(2051097, 'exports', exports, true, true)), J$.T(2051105, '__esModule', 21, false), J$.T(2051121, { value: J$.T(2051113, true, 23, false) }, 11, false));
            J$.P(2051153, J$.I(typeof exports === 'undefined' ? exports = J$.R(2051137, 'exports', undefined, true, true) : exports = J$.R(2051137, 'exports', exports, true, true)), 'default', J$.R(2051145, 'isAscii', isAscii, false, true));
            var _assertString = J$.W(2051185, '_assertString', J$.F(2051177, J$.I(typeof require === 'undefined' ? require = J$.R(2051161, 'require', undefined, true, true) : require = J$.R(2051161, 'require', require, true, true)), false)(J$.T(2051169, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(2051217, '_assertString2', J$.F(2051209, J$.R(2051193, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2051201, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var ascii = J$.W(2051313, 'ascii', J$.T(2051305, /^[\x00-\x7F]+$/, 14, false), ascii, false, true);
            J$.P(2051449, J$.I(typeof module === 'undefined' ? module = J$.R(2051417, 'module', undefined, true, true) : module = J$.R(2051417, 'module', module, true, true)), 'exports', J$.G(2051441, J$.I(typeof exports === 'undefined' ? exports = J$.R(2051425, 'exports', undefined, true, true) : exports = J$.R(2051425, 'exports', exports, true, true)), J$.T(2051433, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(2051553, J$e);
        } finally {
            if (J$.Sr(2051561))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

