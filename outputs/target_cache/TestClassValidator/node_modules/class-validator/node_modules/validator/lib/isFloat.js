J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2065417, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isFloat.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2064777, arguments.callee, this, arguments);
                            arguments = J$.N(2064785, 'arguments', arguments, true, false, false);
                            obj = J$.N(2064793, 'obj', obj, true, false, false);
                            return J$.Rt(2064769, J$.C(121968, J$.C(121960, J$.R(2064721, 'obj', obj, false, false)) ? J$.G(2064737, J$.R(2064729, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(2064745, 'obj', obj, false, false) : J$.T(2064761, { default: J$.R(2064753, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2065481, J$e);
                        } finally {
                            if (J$.Fr(2065489))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isFloat(str, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2065329, arguments.callee, this, arguments);
                            arguments = J$.N(2065337, 'arguments', arguments, true, false, false);
                            str = J$.N(2065345, 'str', str, true, false, false);
                            options = J$.N(2065353, 'options', options, true, false, false);
                            J$.N(2065361, 'float', float, false, false, false);
                            J$.N(2065369, 'value', value, false, false, false);
                            J$.F(2064833, (J$.T(2064801, 0, 22, false), J$.G(2064817, J$.R(2064809, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(2064825, 'str', str, false, false));
                            options = J$.W(2064857, 'options', J$.C(121976, J$.R(2064841, 'options', options, false, false)) ? J$._() : J$.T(2064849, {}, 11, false), options, false, false);
                            var float = J$.W(2064961, 'float', J$.F(2064953, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2064865, 'RegExp', undefined, true, true) : RegExp = J$.R(2064865, 'RegExp', RegExp, true, true)), true)(J$.B(255538, '+', J$.B(255530, '+', J$.T(2064873, '^(?:[-+])?(?:[0-9]+)?(?:\\', 21, false), J$.C(121984, J$.G(2064889, J$.R(2064881, 'options', options, false, false), 'locale')) ? J$.G(2064929, J$.G(2064905, J$.R(2064897, '_alpha', _alpha, false, true), 'decimal'), J$.G(2064921, J$.R(2064913, 'options', options, false, false), 'locale')) : J$.T(2064937, '.', 21, false)), J$.T(2064945, '[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$', 21, false))), float, false, false);
                            if (J$.C(122016, J$.C(122008, J$.C(122000, J$.C(121992, J$.B(255546, '===', J$.R(2064969, 'str', str, false, false), J$.T(2064977, '', 21, false))) ? J$._() : J$.B(255554, '===', J$.R(2064985, 'str', str, false, false), J$.T(2064993, '.', 21, false))) ? J$._() : J$.B(255562, '===', J$.R(2065001, 'str', str, false, false), J$.T(2065009, '-', 21, false))) ? J$._() : J$.B(255570, '===', J$.R(2065017, 'str', str, false, false), J$.T(2065025, '+', 21, false)))) {
                                return J$.Rt(2065041, J$.T(2065033, false, 23, false));
                            }
                            var value = J$.W(2065097, 'value', J$.F(2065089, J$.I(typeof parseFloat === 'undefined' ? parseFloat = J$.R(2065049, 'parseFloat', undefined, true, true) : parseFloat = J$.R(2065049, 'parseFloat', parseFloat, true, true)), false)(J$.M(2065081, J$.R(2065057, 'str', str, false, false), 'replace', false)(J$.T(2065065, ',', 21, false), J$.T(2065073, '.', 21, false))), value, false, false);
                            return J$.Rt(2065321, J$.C(122080, J$.C(122064, J$.C(122048, J$.C(122032, J$.M(2065121, J$.R(2065105, 'float', float, false, false), 'test', false)(J$.R(2065113, 'str', str, false, false))) ? J$.C(122024, J$.U(255578, '!', J$.M(2065145, J$.R(2065129, 'options', options, false, false), 'hasOwnProperty', false)(J$.T(2065137, 'min', 21, false)))) ? J$._() : J$.B(255586, '>=', J$.R(2065153, 'value', value, false, false), J$.G(2065169, J$.R(2065161, 'options', options, false, false), 'min')) : J$._()) ? J$.C(122040, J$.U(255594, '!', J$.M(2065193, J$.R(2065177, 'options', options, false, false), 'hasOwnProperty', false)(J$.T(2065185, 'max', 21, false)))) ? J$._() : J$.B(255602, '<=', J$.R(2065201, 'value', value, false, false), J$.G(2065217, J$.R(2065209, 'options', options, false, false), 'max')) : J$._()) ? J$.C(122056, J$.U(255610, '!', J$.M(2065241, J$.R(2065225, 'options', options, false, false), 'hasOwnProperty', false)(J$.T(2065233, 'lt', 21, false)))) ? J$._() : J$.B(255618, '<', J$.R(2065249, 'value', value, false, false), J$.G(2065265, J$.R(2065257, 'options', options, false, false), 'lt')) : J$._()) ? J$.C(122072, J$.U(255626, '!', J$.M(2065289, J$.R(2065273, 'options', options, false, false), 'hasOwnProperty', false)(J$.T(2065281, 'gt', 21, false)))) ? J$._() : J$.B(255634, '>', J$.R(2065297, 'value', value, false, false), J$.G(2065313, J$.R(2065305, 'options', options, false, false), 'gt')) : J$._());
                        } catch (J$e) {
                            J$.Ex(2065497, J$e);
                        } finally {
                            if (J$.Fr(2065505))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2065425, '_assertString', _assertString, false, false, false);
            J$.N(2065433, '_assertString2', _assertString2, false, false, false);
            J$.N(2065441, '_alpha', _alpha, false, false, false);
            _interopRequireDefault = J$.N(2065457, '_interopRequireDefault', J$.T(2065449, _interopRequireDefault, 12, false), true, false, false);
            isFloat = J$.N(2065473, 'isFloat', J$.T(2065465, isFloat, 12, false), true, false, false);
            J$.T(2064545, 'use strict', 21, false);
            J$.M(2064593, J$.I(typeof Object === 'undefined' ? Object = J$.R(2064553, 'Object', undefined, true, true) : Object = J$.R(2064553, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2064561, 'exports', undefined, true, true) : exports = J$.R(2064561, 'exports', exports, true, true)), J$.T(2064569, '__esModule', 21, false), J$.T(2064585, { value: J$.T(2064577, true, 23, false) }, 11, false));
            J$.P(2064617, J$.I(typeof exports === 'undefined' ? exports = J$.R(2064601, 'exports', undefined, true, true) : exports = J$.R(2064601, 'exports', exports, true, true)), 'default', J$.R(2064609, 'isFloat', isFloat, false, true));
            var _assertString = J$.W(2064649, '_assertString', J$.F(2064641, J$.I(typeof require === 'undefined' ? require = J$.R(2064625, 'require', undefined, true, true) : require = J$.R(2064625, 'require', require, true, true)), false)(J$.T(2064633, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(2064681, '_assertString2', J$.F(2064673, J$.R(2064657, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2064665, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var _alpha = J$.W(2064713, '_alpha', J$.F(2064705, J$.I(typeof require === 'undefined' ? require = J$.R(2064689, 'require', undefined, true, true) : require = J$.R(2064689, 'require', require, true, true)), false)(J$.T(2064697, './alpha', 21, false)), _alpha, false, true);
            J$.P(2065409, J$.I(typeof module === 'undefined' ? module = J$.R(2065377, 'module', undefined, true, true) : module = J$.R(2065377, 'module', module, true, true)), 'exports', J$.G(2065401, J$.I(typeof exports === 'undefined' ? exports = J$.R(2065385, 'exports', undefined, true, true) : exports = J$.R(2065385, 'exports', exports, true, true)), J$.T(2065393, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(2065513, J$e);
        } finally {
            if (J$.Sr(2065521))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

