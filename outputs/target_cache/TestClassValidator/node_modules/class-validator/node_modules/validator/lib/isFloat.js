J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1207633, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isFloat.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1206993, arguments.callee, this, arguments);
                            arguments = J$.N(1207001, 'arguments', arguments, true, false, false);
                            obj = J$.N(1207009, 'obj', obj, true, false, false);
                            return J$.Rt(1206985, J$.C(67968, J$.C(67960, J$.R(1206937, 'obj', obj, false, false)) ? J$.G(1206953, J$.R(1206945, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1206961, 'obj', obj, false, false) : J$.T(1206977, { default: J$.R(1206969, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1207697, J$e);
                        } finally {
                            if (J$.Fr(1207705))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isFloat(str, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1207545, arguments.callee, this, arguments);
                            arguments = J$.N(1207553, 'arguments', arguments, true, false, false);
                            str = J$.N(1207561, 'str', str, true, false, false);
                            options = J$.N(1207569, 'options', options, true, false, false);
                            J$.N(1207577, 'float', float, false, false, false);
                            J$.N(1207585, 'value', value, false, false, false);
                            J$.F(1207049, (J$.T(1207017, 0, 22, false), J$.G(1207033, J$.R(1207025, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1207041, 'str', str, false, false));
                            options = J$.W(1207073, 'options', J$.C(67976, J$.R(1207057, 'options', options, false, false)) ? J$._() : J$.T(1207065, {}, 11, false), options, false, false);
                            var float = J$.W(1207177, 'float', J$.F(1207169, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(1207081, 'RegExp', undefined, true, true) : RegExp = J$.R(1207081, 'RegExp', RegExp, true, true)), true)(J$.B(86418, '+', J$.B(86410, '+', J$.T(1207089, '^(?:[-+])?(?:[0-9]+)?(?:\\', 21, false), J$.C(67984, J$.G(1207105, J$.R(1207097, 'options', options, false, false), 'locale')) ? J$.G(1207145, J$.G(1207121, J$.R(1207113, '_alpha', _alpha, false, true), 'decimal'), J$.G(1207137, J$.R(1207129, 'options', options, false, false), 'locale')) : J$.T(1207153, '.', 21, false)), J$.T(1207161, '[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$', 21, false))), float, false, false);
                            if (J$.C(68016, J$.C(68008, J$.C(68000, J$.C(67992, J$.B(86426, '===', J$.R(1207185, 'str', str, false, false), J$.T(1207193, '', 21, false))) ? J$._() : J$.B(86434, '===', J$.R(1207201, 'str', str, false, false), J$.T(1207209, '.', 21, false))) ? J$._() : J$.B(86442, '===', J$.R(1207217, 'str', str, false, false), J$.T(1207225, '-', 21, false))) ? J$._() : J$.B(86450, '===', J$.R(1207233, 'str', str, false, false), J$.T(1207241, '+', 21, false)))) {
                                return J$.Rt(1207257, J$.T(1207249, false, 23, false));
                            }
                            var value = J$.W(1207313, 'value', J$.F(1207305, J$.I(typeof parseFloat === 'undefined' ? parseFloat = J$.R(1207265, 'parseFloat', undefined, true, true) : parseFloat = J$.R(1207265, 'parseFloat', parseFloat, true, true)), false)(J$.M(1207297, J$.R(1207273, 'str', str, false, false), 'replace', false)(J$.T(1207281, ',', 21, false), J$.T(1207289, '.', 21, false))), value, false, false);
                            return J$.Rt(1207537, J$.C(68080, J$.C(68064, J$.C(68048, J$.C(68032, J$.M(1207337, J$.R(1207321, 'float', float, false, false), 'test', false)(J$.R(1207329, 'str', str, false, false))) ? J$.C(68024, J$.U(86458, '!', J$.M(1207361, J$.R(1207345, 'options', options, false, false), 'hasOwnProperty', false)(J$.T(1207353, 'min', 21, false)))) ? J$._() : J$.B(86466, '>=', J$.R(1207369, 'value', value, false, false), J$.G(1207385, J$.R(1207377, 'options', options, false, false), 'min')) : J$._()) ? J$.C(68040, J$.U(86474, '!', J$.M(1207409, J$.R(1207393, 'options', options, false, false), 'hasOwnProperty', false)(J$.T(1207401, 'max', 21, false)))) ? J$._() : J$.B(86482, '<=', J$.R(1207417, 'value', value, false, false), J$.G(1207433, J$.R(1207425, 'options', options, false, false), 'max')) : J$._()) ? J$.C(68056, J$.U(86490, '!', J$.M(1207457, J$.R(1207441, 'options', options, false, false), 'hasOwnProperty', false)(J$.T(1207449, 'lt', 21, false)))) ? J$._() : J$.B(86498, '<', J$.R(1207465, 'value', value, false, false), J$.G(1207481, J$.R(1207473, 'options', options, false, false), 'lt')) : J$._()) ? J$.C(68072, J$.U(86506, '!', J$.M(1207505, J$.R(1207489, 'options', options, false, false), 'hasOwnProperty', false)(J$.T(1207497, 'gt', 21, false)))) ? J$._() : J$.B(86514, '>', J$.R(1207513, 'value', value, false, false), J$.G(1207529, J$.R(1207521, 'options', options, false, false), 'gt')) : J$._());
                        } catch (J$e) {
                            J$.Ex(1207713, J$e);
                        } finally {
                            if (J$.Fr(1207721))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1207641, '_assertString', _assertString, false, false, false);
            J$.N(1207649, '_assertString2', _assertString2, false, false, false);
            J$.N(1207657, '_alpha', _alpha, false, false, false);
            _interopRequireDefault = J$.N(1207673, '_interopRequireDefault', J$.T(1207665, _interopRequireDefault, 12, false), true, false, false);
            isFloat = J$.N(1207689, 'isFloat', J$.T(1207681, isFloat, 12, false), true, false, false);
            J$.T(1206761, 'use strict', 21, false);
            J$.M(1206809, J$.I(typeof Object === 'undefined' ? Object = J$.R(1206769, 'Object', undefined, true, true) : Object = J$.R(1206769, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1206777, 'exports', undefined, true, true) : exports = J$.R(1206777, 'exports', exports, true, true)), J$.T(1206785, '__esModule', 21, false), J$.T(1206801, { value: J$.T(1206793, true, 23, false) }, 11, false));
            J$.P(1206833, J$.I(typeof exports === 'undefined' ? exports = J$.R(1206817, 'exports', undefined, true, true) : exports = J$.R(1206817, 'exports', exports, true, true)), 'default', J$.R(1206825, 'isFloat', isFloat, false, true));
            var _assertString = J$.W(1206865, '_assertString', J$.F(1206857, J$.I(typeof require === 'undefined' ? require = J$.R(1206841, 'require', undefined, true, true) : require = J$.R(1206841, 'require', require, true, true)), false)(J$.T(1206849, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1206897, '_assertString2', J$.F(1206889, J$.R(1206873, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1206881, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var _alpha = J$.W(1206929, '_alpha', J$.F(1206921, J$.I(typeof require === 'undefined' ? require = J$.R(1206905, 'require', undefined, true, true) : require = J$.R(1206905, 'require', require, true, true)), false)(J$.T(1206913, './alpha', 21, false)), _alpha, false, true);
            J$.P(1207625, J$.I(typeof module === 'undefined' ? module = J$.R(1207593, 'module', undefined, true, true) : module = J$.R(1207593, 'module', module, true, true)), 'exports', J$.G(1207617, J$.I(typeof exports === 'undefined' ? exports = J$.R(1207601, 'exports', undefined, true, true) : exports = J$.R(1207601, 'exports', exports, true, true)), J$.T(1207609, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1207729, J$e);
        } finally {
            if (J$.Sr(1207737))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

