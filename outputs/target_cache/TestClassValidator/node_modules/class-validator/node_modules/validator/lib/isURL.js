J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(5879697, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isURL.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5877249, arguments.callee, this, arguments);
                            arguments = J$.N(5877257, 'arguments', arguments, true, false, false);
                            obj = J$.N(5877265, 'obj', obj, true, false, false);
                            return J$.Rt(5877241, J$.C(320016, J$.C(320008, J$.R(5877193, 'obj', obj, false, false)) ? J$.G(5877209, J$.R(5877201, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5877217, 'obj', obj, false, false) : J$.T(5877233, { default: J$.R(5877225, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5879849, J$e);
                        } finally {
                            if (J$.Fr(5879857))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isRegExp(obj) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5877449, arguments.callee, this, arguments);
                            arguments = J$.N(5877457, 'arguments', arguments, true, false, false);
                            obj = J$.N(5877465, 'obj', obj, true, false, false);
                            return J$.Rt(5877441, J$.B(604594, '===', J$.M(5877425, J$.G(5877409, J$.G(5877401, J$.I(typeof Object === 'undefined' ? Object = J$.R(5877393, 'Object', undefined, true, true) : Object = J$.R(5877393, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(5877417, 'obj', obj, false, false)), J$.T(5877433, '[object RegExp]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5879865, J$e);
                        } finally {
                            if (J$.Fr(5879873))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkHost(host, matches) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5877657, arguments.callee, this, arguments);
                            arguments = J$.N(5877665, 'arguments', arguments, true, false, false);
                            host = J$.N(5877673, 'host', host, true, false, false);
                            matches = J$.N(5877681, 'matches', matches, true, false, false);
                            J$.N(5877689, 'i', i, false, false, false);
                            J$.N(5877697, 'match', match, false, false, false);
                            for (var i = J$.W(5877481, 'i', J$.T(5877473, 0, 22, false), i, false, false); J$.C(320048, J$.B(604602, '<', J$.R(5877489, 'i', i, false, false), J$.G(5877505, J$.R(5877497, 'matches', matches, false, false), 'length'))); J$.B(604626, '-', i = J$.W(5877521, 'i', J$.B(604618, '+', J$.U(604610, '+', J$.R(5877513, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var match = J$.W(5877553, 'match', J$.G(5877545, J$.R(5877529, 'matches', matches, false, false), J$.R(5877537, 'i', i, false, false)), match, false, false);
                                if (J$.C(320040, J$.C(320032, J$.B(604634, '===', J$.R(5877561, 'host', host, false, false), J$.R(5877569, 'match', match, false, false))) ? J$._() : J$.C(320024, J$.F(5877593, J$.R(5877577, 'isRegExp', isRegExp, false, true), false)(J$.R(5877585, 'match', match, false, false))) ? J$.M(5877617, J$.R(5877601, 'match', match, false, false), 'test', false)(J$.R(5877609, 'host', host, false, false)) : J$._())) {
                                    return J$.Rt(5877633, J$.T(5877625, true, 23, false));
                                }
                            }
                            return J$.Rt(5877649, J$.T(5877641, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(5879881, J$e);
                        } finally {
                            if (J$.Fr(5879889))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isURL(url, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5879553, arguments.callee, this, arguments);
                            arguments = J$.N(5879561, 'arguments', arguments, true, false, false);
                            url = J$.N(5879569, 'url', url, true, false, false);
                            options = J$.N(5879577, 'options', options, true, false, false);
                            J$.N(5879585, 'protocol', protocol, false, false, false);
                            J$.N(5879593, 'auth', auth, false, false, false);
                            J$.N(5879601, 'host', host, false, false, false);
                            J$.N(5879609, 'hostname', hostname, false, false, false);
                            J$.N(5879617, 'port', port, false, false, false);
                            J$.N(5879625, 'port_str', port_str, false, false, false);
                            J$.N(5879633, 'split', split, false, false, false);
                            J$.N(5879641, 'ipv6', ipv6, false, false, false);
                            J$.N(5879649, 'ipv6_match', ipv6_match, false, false, false);
                            J$.F(5877737, (J$.T(5877705, 0, 22, false), J$.G(5877721, J$.R(5877713, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5877729, 'url', url, false, false));
                            if (J$.C(320072, J$.C(320064, J$.C(320056, J$.U(604642, '!', J$.R(5877745, 'url', url, false, false))) ? J$._() : J$.B(604650, '>=', J$.G(5877761, J$.R(5877753, 'url', url, false, false), 'length'), J$.T(5877769, 2083, 22, false))) ? J$._() : J$.M(5877793, J$.T(5877777, /[\s<>]/, 14, false), 'test', false)(J$.R(5877785, 'url', url, false, false)))) {
                                return J$.Rt(5877809, J$.T(5877801, false, 23, false));
                            }
                            if (J$.C(320080, J$.B(604658, '===', J$.M(5877833, J$.R(5877817, 'url', url, false, false), 'indexOf', false)(J$.T(5877825, 'mailto:', 21, false)), J$.T(5877841, 0, 22, false)))) {
                                return J$.Rt(5877857, J$.T(5877849, false, 23, false));
                            }
                            options = J$.W(5877913, 'options', J$.F(5877905, (J$.T(5877865, 0, 22, false), J$.G(5877881, J$.R(5877873, '_merge2', _merge2, false, true), 'default')), false)(J$.R(5877889, 'options', options, false, false), J$.R(5877897, 'default_url_options', default_url_options, false, true)), options, false, false);
                            var protocol = J$.W(5877985, 'protocol', void J$.T(5877921, 0, 22, false), protocol, false, false), auth = J$.W(5877993, 'auth', void J$.T(5877929, 0, 22, false), auth, false, false), host = J$.W(5878001, 'host', void J$.T(5877937, 0, 22, false), host, false, false), hostname = J$.W(5878009, 'hostname', void J$.T(5877945, 0, 22, false), hostname, false, false), port = J$.W(5878017, 'port', void J$.T(5877953, 0, 22, false), port, false, false), port_str = J$.W(5878025, 'port_str', void J$.T(5877961, 0, 22, false), port_str, false, false), split = J$.W(5878033, 'split', void J$.T(5877969, 0, 22, false), split, false, false), ipv6 = J$.W(5878041, 'ipv6', void J$.T(5877977, 0, 22, false), ipv6, false, false);
                            split = J$.W(5878073, 'split', J$.M(5878065, J$.R(5878049, 'url', url, false, false), 'split', false)(J$.T(5878057, '#', 21, false)), split, false, false);
                            url = J$.W(5878097, 'url', J$.M(5878089, J$.R(5878081, 'split', split, false, false), 'shift', false)(), url, false, false);
                            split = J$.W(5878129, 'split', J$.M(5878121, J$.R(5878105, 'url', url, false, false), 'split', false)(J$.T(5878113, '?', 21, false)), split, false, false);
                            url = J$.W(5878153, 'url', J$.M(5878145, J$.R(5878137, 'split', split, false, false), 'shift', false)(), url, false, false);
                            split = J$.W(5878185, 'split', J$.M(5878177, J$.R(5878161, 'url', url, false, false), 'split', false)(J$.T(5878169, '://', 21, false)), split, false, false);
                            if (J$.C(320128, J$.B(604666, '>', J$.G(5878201, J$.R(5878193, 'split', split, false, false), 'length'), J$.T(5878209, 1, 22, false)))) {
                                protocol = J$.W(5878233, 'protocol', J$.M(5878225, J$.R(5878217, 'split', split, false, false), 'shift', false)(), protocol, false, false);
                                if (J$.C(320096, J$.C(320088, J$.G(5878249, J$.R(5878241, 'options', options, false, false), 'require_valid_protocol')) ? J$.B(604682, '===', J$.M(5878281, J$.G(5878265, J$.R(5878257, 'options', options, false, false), 'protocols'), 'indexOf', false)(J$.R(5878273, 'protocol', protocol, false, false)), J$.U(604674, '-', J$.T(5878289, 1, 22, false))) : J$._())) {
                                    return J$.Rt(5878305, J$.T(5878297, false, 23, false));
                                }
                            } else if (J$.C(320120, J$.G(5878321, J$.R(5878313, 'options', options, false, false), 'require_protocol'))) {
                                return J$.Rt(5878337, J$.T(5878329, false, 23, false));
                            } else if (J$.C(320112, J$.C(320104, J$.G(5878353, J$.R(5878345, 'options', options, false, false), 'allow_protocol_relative_urls')) ? J$.B(604690, '===', J$.M(5878385, J$.R(5878361, 'url', url, false, false), 'substr', false)(J$.T(5878369, 0, 22, false), J$.T(5878377, 2, 22, false)), J$.T(5878393, '//', 21, false)) : J$._())) {
                                J$.P(5878441, J$.R(5878401, 'split', split, false, false), J$.T(5878409, 0, 22, false), J$.M(5878433, J$.R(5878417, 'url', url, false, false), 'substr', false)(J$.T(5878425, 2, 22, false)));
                            }
                            url = J$.W(5878473, 'url', J$.M(5878465, J$.R(5878449, 'split', split, false, false), 'join', false)(J$.T(5878457, '://', 21, false)), url, false, false);
                            if (J$.C(320136, J$.B(604698, '===', J$.R(5878481, 'url', url, false, false), J$.T(5878489, '', 21, false)))) {
                                return J$.Rt(5878505, J$.T(5878497, false, 23, false));
                            }
                            split = J$.W(5878537, 'split', J$.M(5878529, J$.R(5878513, 'url', url, false, false), 'split', false)(J$.T(5878521, '/', 21, false)), split, false, false);
                            url = J$.W(5878561, 'url', J$.M(5878553, J$.R(5878545, 'split', split, false, false), 'shift', false)(), url, false, false);
                            if (J$.C(320152, J$.C(320144, J$.B(604706, '===', J$.R(5878569, 'url', url, false, false), J$.T(5878577, '', 21, false))) ? J$.U(604714, '!', J$.G(5878593, J$.R(5878585, 'options', options, false, false), 'require_host')) : J$._())) {
                                return J$.Rt(5878609, J$.T(5878601, true, 23, false));
                            }
                            split = J$.W(5878641, 'split', J$.M(5878633, J$.R(5878617, 'url', url, false, false), 'split', false)(J$.T(5878625, '@', 21, false)), split, false, false);
                            if (J$.C(320176, J$.B(604722, '>', J$.G(5878657, J$.R(5878649, 'split', split, false, false), 'length'), J$.T(5878665, 1, 22, false)))) {
                                auth = J$.W(5878689, 'auth', J$.M(5878681, J$.R(5878673, 'split', split, false, false), 'shift', false)(), auth, false, false);
                                if (J$.C(320168, J$.C(320160, J$.B(604730, '>=', J$.M(5878713, J$.R(5878697, 'auth', auth, false, false), 'indexOf', false)(J$.T(5878705, ':', 21, false)), J$.T(5878721, 0, 22, false))) ? J$.B(604738, '>', J$.G(5878753, J$.M(5878745, J$.R(5878729, 'auth', auth, false, false), 'split', false)(J$.T(5878737, ':', 21, false)), 'length'), J$.T(5878761, 2, 22, false)) : J$._())) {
                                    return J$.Rt(5878777, J$.T(5878769, false, 23, false));
                                }
                            }
                            hostname = J$.W(5878809, 'hostname', J$.M(5878801, J$.R(5878785, 'split', split, false, false), 'join', false)(J$.T(5878793, '@', 21, false)), hostname, false, false);
                            port_str = J$.W(5878825, 'port_str', J$.T(5878817, null, 25, false), port_str, false, false);
                            ipv6 = J$.W(5878841, 'ipv6', J$.T(5878833, null, 25, false), ipv6, false, false);
                            var ipv6_match = J$.W(5878873, 'ipv6_match', J$.M(5878865, J$.R(5878849, 'hostname', hostname, false, false), 'match', false)(J$.R(5878857, 'wrapped_ipv6', wrapped_ipv6, false, true)), ipv6_match, false, false);
                            if (J$.C(320200, J$.R(5878881, 'ipv6_match', ipv6_match, false, false))) {
                                host = J$.W(5878897, 'host', J$.T(5878889, '', 21, false), host, false, false);
                                ipv6 = J$.W(5878929, 'ipv6', J$.G(5878921, J$.R(5878905, 'ipv6_match', ipv6_match, false, false), J$.T(5878913, 1, 22, false)), ipv6, false, false);
                                port_str = J$.W(5878969, 'port_str', J$.C(320184, J$.G(5878953, J$.R(5878937, 'ipv6_match', ipv6_match, false, false), J$.T(5878945, 2, 22, false))) ? J$._() : J$.T(5878961, null, 25, false), port_str, false, false);
                            } else {
                                split = J$.W(5879001, 'split', J$.M(5878993, J$.R(5878977, 'hostname', hostname, false, false), 'split', false)(J$.T(5878985, ':', 21, false)), split, false, false);
                                host = J$.W(5879025, 'host', J$.M(5879017, J$.R(5879009, 'split', split, false, false), 'shift', false)(), host, false, false);
                                if (J$.C(320192, J$.G(5879041, J$.R(5879033, 'split', split, false, false), 'length'))) {
                                    port_str = J$.W(5879073, 'port_str', J$.M(5879065, J$.R(5879049, 'split', split, false, false), 'join', false)(J$.T(5879057, ':', 21, false)), port_str, false, false);
                                }
                            }
                            if (J$.C(320232, J$.B(604746, '!==', J$.R(5879081, 'port_str', port_str, false, false), J$.T(5879089, null, 25, false)))) {
                                port = J$.W(5879129, 'port', J$.F(5879121, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(5879097, 'parseInt', undefined, true, true) : parseInt = J$.R(5879097, 'parseInt', parseInt, true, true)), false)(J$.R(5879105, 'port_str', port_str, false, false), J$.T(5879113, 10, 22, false)), port, false, false);
                                if (J$.C(320224, J$.C(320216, J$.C(320208, J$.U(604754, '!', J$.M(5879153, J$.T(5879137, /^[0-9]+$/, 14, false), 'test', false)(J$.R(5879145, 'port_str', port_str, false, false)))) ? J$._() : J$.B(604762, '<=', J$.R(5879161, 'port', port, false, false), J$.T(5879169, 0, 22, false))) ? J$._() : J$.B(604770, '>', J$.R(5879177, 'port', port, false, false), J$.T(5879185, 65535, 22, false)))) {
                                    return J$.Rt(5879201, J$.T(5879193, false, 23, false));
                                }
                            }
                            if (J$.C(320264, J$.C(320256, J$.C(320240, J$.U(604778, '!', J$.F(5879241, (J$.T(5879209, 0, 22, false), J$.G(5879225, J$.R(5879217, '_isIP2', _isIP2, false, true), 'default')), false)(J$.R(5879233, 'host', host, false, false)))) ? J$.U(604786, '!', J$.F(5879289, (J$.T(5879249, 0, 22, false), J$.G(5879265, J$.R(5879257, '_isFQDN2', _isFQDN2, false, true), 'default')), false)(J$.R(5879273, 'host', host, false, false), J$.R(5879281, 'options', options, false, false))) : J$._()) ? J$.C(320248, J$.U(604794, '!', J$.R(5879297, 'ipv6', ipv6, false, false))) ? J$._() : J$.U(604802, '!', J$.F(5879345, (J$.T(5879305, 0, 22, false), J$.G(5879321, J$.R(5879313, '_isIP2', _isIP2, false, true), 'default')), false)(J$.R(5879329, 'ipv6', ipv6, false, false), J$.T(5879337, 6, 22, false))) : J$._())) {
                                return J$.Rt(5879361, J$.T(5879353, false, 23, false));
                            }
                            host = J$.W(5879385, 'host', J$.C(320272, J$.R(5879369, 'host', host, false, false)) ? J$._() : J$.R(5879377, 'ipv6', ipv6, false, false), host, false, false);
                            if (J$.C(320288, J$.C(320280, J$.G(5879401, J$.R(5879393, 'options', options, false, false), 'host_whitelist')) ? J$.U(604810, '!', J$.F(5879441, J$.R(5879409, 'checkHost', checkHost, false, true), false)(J$.R(5879417, 'host', host, false, false), J$.G(5879433, J$.R(5879425, 'options', options, false, false), 'host_whitelist'))) : J$._())) {
                                return J$.Rt(5879457, J$.T(5879449, false, 23, false));
                            }
                            if (J$.C(320304, J$.C(320296, J$.G(5879473, J$.R(5879465, 'options', options, false, false), 'host_blacklist')) ? J$.F(5879513, J$.R(5879481, 'checkHost', checkHost, false, true), false)(J$.R(5879489, 'host', host, false, false), J$.G(5879505, J$.R(5879497, 'options', options, false, false), 'host_blacklist')) : J$._())) {
                                return J$.Rt(5879529, J$.T(5879521, false, 23, false));
                            }
                            return J$.Rt(5879545, J$.T(5879537, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(5879897, J$e);
                        } finally {
                            if (J$.Fr(5879905))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5879705, '_assertString', _assertString, false, false, false);
            J$.N(5879713, '_assertString2', _assertString2, false, false, false);
            J$.N(5879721, '_isFQDN', _isFQDN, false, false, false);
            J$.N(5879729, '_isFQDN2', _isFQDN2, false, false, false);
            J$.N(5879737, '_isIP', _isIP, false, false, false);
            J$.N(5879745, '_isIP2', _isIP2, false, false, false);
            J$.N(5879753, '_merge', _merge, false, false, false);
            J$.N(5879761, '_merge2', _merge2, false, false, false);
            _interopRequireDefault = J$.N(5879777, '_interopRequireDefault', J$.T(5879769, _interopRequireDefault, 12, false), true, false, false);
            J$.N(5879785, 'default_url_options', default_url_options, false, false, false);
            J$.N(5879793, 'wrapped_ipv6', wrapped_ipv6, false, false, false);
            isRegExp = J$.N(5879809, 'isRegExp', J$.T(5879801, isRegExp, 12, false), true, false, false);
            checkHost = J$.N(5879825, 'checkHost', J$.T(5879817, checkHost, 12, false), true, false, false);
            isURL = J$.N(5879841, 'isURL', J$.T(5879833, isURL, 12, false), true, false, false);
            J$.T(5876857, 'use strict', 21, false);
            J$.M(5876905, J$.I(typeof Object === 'undefined' ? Object = J$.R(5876865, 'Object', undefined, true, true) : Object = J$.R(5876865, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5876873, 'exports', undefined, true, true) : exports = J$.R(5876873, 'exports', exports, true, true)), J$.T(5876881, '__esModule', 21, false), J$.T(5876897, { value: J$.T(5876889, true, 23, false) }, 11, false));
            J$.P(5876929, J$.I(typeof exports === 'undefined' ? exports = J$.R(5876913, 'exports', undefined, true, true) : exports = J$.R(5876913, 'exports', exports, true, true)), 'default', J$.R(5876921, 'isURL', isURL, false, true));
            var _assertString = J$.W(5876961, '_assertString', J$.F(5876953, J$.I(typeof require === 'undefined' ? require = J$.R(5876937, 'require', undefined, true, true) : require = J$.R(5876937, 'require', require, true, true)), false)(J$.T(5876945, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5876993, '_assertString2', J$.F(5876985, J$.R(5876969, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5876977, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var _isFQDN = J$.W(5877025, '_isFQDN', J$.F(5877017, J$.I(typeof require === 'undefined' ? require = J$.R(5877001, 'require', undefined, true, true) : require = J$.R(5877001, 'require', require, true, true)), false)(J$.T(5877009, './isFQDN', 21, false)), _isFQDN, false, true);
            var _isFQDN2 = J$.W(5877057, '_isFQDN2', J$.F(5877049, J$.R(5877033, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5877041, '_isFQDN', _isFQDN, false, true)), _isFQDN2, false, true);
            var _isIP = J$.W(5877089, '_isIP', J$.F(5877081, J$.I(typeof require === 'undefined' ? require = J$.R(5877065, 'require', undefined, true, true) : require = J$.R(5877065, 'require', require, true, true)), false)(J$.T(5877073, './isIP', 21, false)), _isIP, false, true);
            var _isIP2 = J$.W(5877121, '_isIP2', J$.F(5877113, J$.R(5877097, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5877105, '_isIP', _isIP, false, true)), _isIP2, false, true);
            var _merge = J$.W(5877153, '_merge', J$.F(5877145, J$.I(typeof require === 'undefined' ? require = J$.R(5877129, 'require', undefined, true, true) : require = J$.R(5877129, 'require', require, true, true)), false)(J$.T(5877137, './util/merge', 21, false)), _merge, false, true);
            var _merge2 = J$.W(5877185, '_merge2', J$.F(5877177, J$.R(5877161, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5877169, '_merge', _merge, false, true)), _merge2, false, true);
            var default_url_options = J$.W(5877369, 'default_url_options', J$.T(5877361, {
                protocols: J$.T(5877297, [
                    J$.T(5877273, 'http', 21, false),
                    J$.T(5877281, 'https', 21, false),
                    J$.T(5877289, 'ftp', 21, false)
                ], 10, false),
                require_tld: J$.T(5877305, true, 23, false),
                require_protocol: J$.T(5877313, false, 23, false),
                require_host: J$.T(5877321, true, 23, false),
                require_valid_protocol: J$.T(5877329, true, 23, false),
                allow_underscores: J$.T(5877337, false, 23, false),
                allow_trailing_dot: J$.T(5877345, false, 23, false),
                allow_protocol_relative_urls: J$.T(5877353, false, 23, false)
            }, 11, false), default_url_options, false, true);
            var wrapped_ipv6 = J$.W(5877385, 'wrapped_ipv6', J$.T(5877377, /^\[([^\]]+)\](?::([0-9]+))?$/, 14, false), wrapped_ipv6, false, true);
            J$.P(5879689, J$.I(typeof module === 'undefined' ? module = J$.R(5879657, 'module', undefined, true, true) : module = J$.R(5879657, 'module', module, true, true)), 'exports', J$.G(5879681, J$.I(typeof exports === 'undefined' ? exports = J$.R(5879665, 'exports', undefined, true, true) : exports = J$.R(5879665, 'exports', exports, true, true)), J$.T(5879673, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5879913, J$e);
        } finally {
            if (J$.Sr(5879921))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

