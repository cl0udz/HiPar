J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(1238617, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isURL.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1236169, arguments.callee, this, arguments);
                            arguments = J$.N(1236177, 'arguments', arguments, true, false, false);
                            obj = J$.N(1236185, 'obj', obj, true, false, false);
                            return J$.Rt(1236161, J$.C(69496, J$.C(69488, J$.R(1236113, 'obj', obj, false, false)) ? J$.G(1236129, J$.R(1236121, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1236137, 'obj', obj, false, false) : J$.T(1236153, { default: J$.R(1236145, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1238769, J$e);
                        } finally {
                            if (J$.Fr(1238777))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isRegExp(obj) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1236369, arguments.callee, this, arguments);
                            arguments = J$.N(1236377, 'arguments', arguments, true, false, false);
                            obj = J$.N(1236385, 'obj', obj, true, false, false);
                            return J$.Rt(1236361, J$.B(88058, '===', J$.M(1236345, J$.G(1236329, J$.G(1236321, J$.I(typeof Object === 'undefined' ? Object = J$.R(1236313, 'Object', undefined, true, true) : Object = J$.R(1236313, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(1236337, 'obj', obj, false, false)), J$.T(1236353, '[object RegExp]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1238785, J$e);
                        } finally {
                            if (J$.Fr(1238793))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkHost(host, matches) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1236577, arguments.callee, this, arguments);
                            arguments = J$.N(1236585, 'arguments', arguments, true, false, false);
                            host = J$.N(1236593, 'host', host, true, false, false);
                            matches = J$.N(1236601, 'matches', matches, true, false, false);
                            J$.N(1236609, 'i', i, false, false, false);
                            J$.N(1236617, 'match', match, false, false, false);
                            for (var i = J$.W(1236401, 'i', J$.T(1236393, 0, 22, false), i, false, false); J$.C(69528, J$.B(88066, '<', J$.R(1236409, 'i', i, false, false), J$.G(1236425, J$.R(1236417, 'matches', matches, false, false), 'length'))); J$.B(88090, '-', i = J$.W(1236441, 'i', J$.B(88082, '+', J$.U(88074, '+', J$.R(1236433, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var match = J$.W(1236473, 'match', J$.G(1236465, J$.R(1236449, 'matches', matches, false, false), J$.R(1236457, 'i', i, false, false)), match, false, false);
                                if (J$.C(69520, J$.C(69512, J$.B(88098, '===', J$.R(1236481, 'host', host, false, false), J$.R(1236489, 'match', match, false, false))) ? J$._() : J$.C(69504, J$.F(1236513, J$.R(1236497, 'isRegExp', isRegExp, false, true), false)(J$.R(1236505, 'match', match, false, false))) ? J$.M(1236537, J$.R(1236521, 'match', match, false, false), 'test', false)(J$.R(1236529, 'host', host, false, false)) : J$._())) {
                                    return J$.Rt(1236553, J$.T(1236545, true, 23, false));
                                }
                            }
                            return J$.Rt(1236569, J$.T(1236561, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1238801, J$e);
                        } finally {
                            if (J$.Fr(1238809))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isURL(url, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1238473, arguments.callee, this, arguments);
                            arguments = J$.N(1238481, 'arguments', arguments, true, false, false);
                            url = J$.N(1238489, 'url', url, true, false, false);
                            options = J$.N(1238497, 'options', options, true, false, false);
                            J$.N(1238505, 'protocol', protocol, false, false, false);
                            J$.N(1238513, 'auth', auth, false, false, false);
                            J$.N(1238521, 'host', host, false, false, false);
                            J$.N(1238529, 'hostname', hostname, false, false, false);
                            J$.N(1238537, 'port', port, false, false, false);
                            J$.N(1238545, 'port_str', port_str, false, false, false);
                            J$.N(1238553, 'split', split, false, false, false);
                            J$.N(1238561, 'ipv6', ipv6, false, false, false);
                            J$.N(1238569, 'ipv6_match', ipv6_match, false, false, false);
                            J$.F(1236657, (J$.T(1236625, 0, 22, false), J$.G(1236641, J$.R(1236633, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1236649, 'url', url, false, false));
                            if (J$.C(69552, J$.C(69544, J$.C(69536, J$.U(88106, '!', J$.R(1236665, 'url', url, false, false))) ? J$._() : J$.B(88114, '>=', J$.G(1236681, J$.R(1236673, 'url', url, false, false), 'length'), J$.T(1236689, 2083, 22, false))) ? J$._() : J$.M(1236713, J$.T(1236697, /[\s<>]/, 14, false), 'test', false)(J$.R(1236705, 'url', url, false, false)))) {
                                return J$.Rt(1236729, J$.T(1236721, false, 23, false));
                            }
                            if (J$.C(69560, J$.B(88122, '===', J$.M(1236753, J$.R(1236737, 'url', url, false, false), 'indexOf', false)(J$.T(1236745, 'mailto:', 21, false)), J$.T(1236761, 0, 22, false)))) {
                                return J$.Rt(1236777, J$.T(1236769, false, 23, false));
                            }
                            options = J$.W(1236833, 'options', J$.F(1236825, (J$.T(1236785, 0, 22, false), J$.G(1236801, J$.R(1236793, '_merge2', _merge2, false, true), 'default')), false)(J$.R(1236809, 'options', options, false, false), J$.R(1236817, 'default_url_options', default_url_options, false, true)), options, false, false);
                            var protocol = J$.W(1236905, 'protocol', void J$.T(1236841, 0, 22, false), protocol, false, false), auth = J$.W(1236913, 'auth', void J$.T(1236849, 0, 22, false), auth, false, false), host = J$.W(1236921, 'host', void J$.T(1236857, 0, 22, false), host, false, false), hostname = J$.W(1236929, 'hostname', void J$.T(1236865, 0, 22, false), hostname, false, false), port = J$.W(1236937, 'port', void J$.T(1236873, 0, 22, false), port, false, false), port_str = J$.W(1236945, 'port_str', void J$.T(1236881, 0, 22, false), port_str, false, false), split = J$.W(1236953, 'split', void J$.T(1236889, 0, 22, false), split, false, false), ipv6 = J$.W(1236961, 'ipv6', void J$.T(1236897, 0, 22, false), ipv6, false, false);
                            split = J$.W(1236993, 'split', J$.M(1236985, J$.R(1236969, 'url', url, false, false), 'split', false)(J$.T(1236977, '#', 21, false)), split, false, false);
                            url = J$.W(1237017, 'url', J$.M(1237009, J$.R(1237001, 'split', split, false, false), 'shift', false)(), url, false, false);
                            split = J$.W(1237049, 'split', J$.M(1237041, J$.R(1237025, 'url', url, false, false), 'split', false)(J$.T(1237033, '?', 21, false)), split, false, false);
                            url = J$.W(1237073, 'url', J$.M(1237065, J$.R(1237057, 'split', split, false, false), 'shift', false)(), url, false, false);
                            split = J$.W(1237105, 'split', J$.M(1237097, J$.R(1237081, 'url', url, false, false), 'split', false)(J$.T(1237089, '://', 21, false)), split, false, false);
                            if (J$.C(69608, J$.B(88130, '>', J$.G(1237121, J$.R(1237113, 'split', split, false, false), 'length'), J$.T(1237129, 1, 22, false)))) {
                                protocol = J$.W(1237153, 'protocol', J$.M(1237145, J$.R(1237137, 'split', split, false, false), 'shift', false)(), protocol, false, false);
                                if (J$.C(69576, J$.C(69568, J$.G(1237169, J$.R(1237161, 'options', options, false, false), 'require_valid_protocol')) ? J$.B(88146, '===', J$.M(1237201, J$.G(1237185, J$.R(1237177, 'options', options, false, false), 'protocols'), 'indexOf', false)(J$.R(1237193, 'protocol', protocol, false, false)), J$.U(88138, '-', J$.T(1237209, 1, 22, false))) : J$._())) {
                                    return J$.Rt(1237225, J$.T(1237217, false, 23, false));
                                }
                            } else if (J$.C(69600, J$.G(1237241, J$.R(1237233, 'options', options, false, false), 'require_protocol'))) {
                                return J$.Rt(1237257, J$.T(1237249, false, 23, false));
                            } else if (J$.C(69592, J$.C(69584, J$.G(1237273, J$.R(1237265, 'options', options, false, false), 'allow_protocol_relative_urls')) ? J$.B(88154, '===', J$.M(1237305, J$.R(1237281, 'url', url, false, false), 'substr', false)(J$.T(1237289, 0, 22, false), J$.T(1237297, 2, 22, false)), J$.T(1237313, '//', 21, false)) : J$._())) {
                                J$.P(1237361, J$.R(1237321, 'split', split, false, false), J$.T(1237329, 0, 22, false), J$.M(1237353, J$.R(1237337, 'url', url, false, false), 'substr', false)(J$.T(1237345, 2, 22, false)));
                            }
                            url = J$.W(1237393, 'url', J$.M(1237385, J$.R(1237369, 'split', split, false, false), 'join', false)(J$.T(1237377, '://', 21, false)), url, false, false);
                            if (J$.C(69616, J$.B(88162, '===', J$.R(1237401, 'url', url, false, false), J$.T(1237409, '', 21, false)))) {
                                return J$.Rt(1237425, J$.T(1237417, false, 23, false));
                            }
                            split = J$.W(1237457, 'split', J$.M(1237449, J$.R(1237433, 'url', url, false, false), 'split', false)(J$.T(1237441, '/', 21, false)), split, false, false);
                            url = J$.W(1237481, 'url', J$.M(1237473, J$.R(1237465, 'split', split, false, false), 'shift', false)(), url, false, false);
                            if (J$.C(69632, J$.C(69624, J$.B(88170, '===', J$.R(1237489, 'url', url, false, false), J$.T(1237497, '', 21, false))) ? J$.U(88178, '!', J$.G(1237513, J$.R(1237505, 'options', options, false, false), 'require_host')) : J$._())) {
                                return J$.Rt(1237529, J$.T(1237521, true, 23, false));
                            }
                            split = J$.W(1237561, 'split', J$.M(1237553, J$.R(1237537, 'url', url, false, false), 'split', false)(J$.T(1237545, '@', 21, false)), split, false, false);
                            if (J$.C(69656, J$.B(88186, '>', J$.G(1237577, J$.R(1237569, 'split', split, false, false), 'length'), J$.T(1237585, 1, 22, false)))) {
                                auth = J$.W(1237609, 'auth', J$.M(1237601, J$.R(1237593, 'split', split, false, false), 'shift', false)(), auth, false, false);
                                if (J$.C(69648, J$.C(69640, J$.B(88194, '>=', J$.M(1237633, J$.R(1237617, 'auth', auth, false, false), 'indexOf', false)(J$.T(1237625, ':', 21, false)), J$.T(1237641, 0, 22, false))) ? J$.B(88202, '>', J$.G(1237673, J$.M(1237665, J$.R(1237649, 'auth', auth, false, false), 'split', false)(J$.T(1237657, ':', 21, false)), 'length'), J$.T(1237681, 2, 22, false)) : J$._())) {
                                    return J$.Rt(1237697, J$.T(1237689, false, 23, false));
                                }
                            }
                            hostname = J$.W(1237729, 'hostname', J$.M(1237721, J$.R(1237705, 'split', split, false, false), 'join', false)(J$.T(1237713, '@', 21, false)), hostname, false, false);
                            port_str = J$.W(1237745, 'port_str', J$.T(1237737, null, 25, false), port_str, false, false);
                            ipv6 = J$.W(1237761, 'ipv6', J$.T(1237753, null, 25, false), ipv6, false, false);
                            var ipv6_match = J$.W(1237793, 'ipv6_match', J$.M(1237785, J$.R(1237769, 'hostname', hostname, false, false), 'match', false)(J$.R(1237777, 'wrapped_ipv6', wrapped_ipv6, false, true)), ipv6_match, false, false);
                            if (J$.C(69680, J$.R(1237801, 'ipv6_match', ipv6_match, false, false))) {
                                host = J$.W(1237817, 'host', J$.T(1237809, '', 21, false), host, false, false);
                                ipv6 = J$.W(1237849, 'ipv6', J$.G(1237841, J$.R(1237825, 'ipv6_match', ipv6_match, false, false), J$.T(1237833, 1, 22, false)), ipv6, false, false);
                                port_str = J$.W(1237889, 'port_str', J$.C(69664, J$.G(1237873, J$.R(1237857, 'ipv6_match', ipv6_match, false, false), J$.T(1237865, 2, 22, false))) ? J$._() : J$.T(1237881, null, 25, false), port_str, false, false);
                            } else {
                                split = J$.W(1237921, 'split', J$.M(1237913, J$.R(1237897, 'hostname', hostname, false, false), 'split', false)(J$.T(1237905, ':', 21, false)), split, false, false);
                                host = J$.W(1237945, 'host', J$.M(1237937, J$.R(1237929, 'split', split, false, false), 'shift', false)(), host, false, false);
                                if (J$.C(69672, J$.G(1237961, J$.R(1237953, 'split', split, false, false), 'length'))) {
                                    port_str = J$.W(1237993, 'port_str', J$.M(1237985, J$.R(1237969, 'split', split, false, false), 'join', false)(J$.T(1237977, ':', 21, false)), port_str, false, false);
                                }
                            }
                            if (J$.C(69712, J$.B(88210, '!==', J$.R(1238001, 'port_str', port_str, false, false), J$.T(1238009, null, 25, false)))) {
                                port = J$.W(1238049, 'port', J$.F(1238041, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1238017, 'parseInt', undefined, true, true) : parseInt = J$.R(1238017, 'parseInt', parseInt, true, true)), false)(J$.R(1238025, 'port_str', port_str, false, false), J$.T(1238033, 10, 22, false)), port, false, false);
                                if (J$.C(69704, J$.C(69696, J$.C(69688, J$.U(88218, '!', J$.M(1238073, J$.T(1238057, /^[0-9]+$/, 14, false), 'test', false)(J$.R(1238065, 'port_str', port_str, false, false)))) ? J$._() : J$.B(88226, '<=', J$.R(1238081, 'port', port, false, false), J$.T(1238089, 0, 22, false))) ? J$._() : J$.B(88234, '>', J$.R(1238097, 'port', port, false, false), J$.T(1238105, 65535, 22, false)))) {
                                    return J$.Rt(1238121, J$.T(1238113, false, 23, false));
                                }
                            }
                            if (J$.C(69744, J$.C(69736, J$.C(69720, J$.U(88242, '!', J$.F(1238161, (J$.T(1238129, 0, 22, false), J$.G(1238145, J$.R(1238137, '_isIP2', _isIP2, false, true), 'default')), false)(J$.R(1238153, 'host', host, false, false)))) ? J$.U(88250, '!', J$.F(1238209, (J$.T(1238169, 0, 22, false), J$.G(1238185, J$.R(1238177, '_isFQDN2', _isFQDN2, false, true), 'default')), false)(J$.R(1238193, 'host', host, false, false), J$.R(1238201, 'options', options, false, false))) : J$._()) ? J$.C(69728, J$.U(88258, '!', J$.R(1238217, 'ipv6', ipv6, false, false))) ? J$._() : J$.U(88266, '!', J$.F(1238265, (J$.T(1238225, 0, 22, false), J$.G(1238241, J$.R(1238233, '_isIP2', _isIP2, false, true), 'default')), false)(J$.R(1238249, 'ipv6', ipv6, false, false), J$.T(1238257, 6, 22, false))) : J$._())) {
                                return J$.Rt(1238281, J$.T(1238273, false, 23, false));
                            }
                            host = J$.W(1238305, 'host', J$.C(69752, J$.R(1238289, 'host', host, false, false)) ? J$._() : J$.R(1238297, 'ipv6', ipv6, false, false), host, false, false);
                            if (J$.C(69768, J$.C(69760, J$.G(1238321, J$.R(1238313, 'options', options, false, false), 'host_whitelist')) ? J$.U(88274, '!', J$.F(1238361, J$.R(1238329, 'checkHost', checkHost, false, true), false)(J$.R(1238337, 'host', host, false, false), J$.G(1238353, J$.R(1238345, 'options', options, false, false), 'host_whitelist'))) : J$._())) {
                                return J$.Rt(1238377, J$.T(1238369, false, 23, false));
                            }
                            if (J$.C(69784, J$.C(69776, J$.G(1238393, J$.R(1238385, 'options', options, false, false), 'host_blacklist')) ? J$.F(1238433, J$.R(1238401, 'checkHost', checkHost, false, true), false)(J$.R(1238409, 'host', host, false, false), J$.G(1238425, J$.R(1238417, 'options', options, false, false), 'host_blacklist')) : J$._())) {
                                return J$.Rt(1238449, J$.T(1238441, false, 23, false));
                            }
                            return J$.Rt(1238465, J$.T(1238457, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(1238817, J$e);
                        } finally {
                            if (J$.Fr(1238825))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1238625, '_assertString', _assertString, false, false, false);
            J$.N(1238633, '_assertString2', _assertString2, false, false, false);
            J$.N(1238641, '_isFQDN', _isFQDN, false, false, false);
            J$.N(1238649, '_isFQDN2', _isFQDN2, false, false, false);
            J$.N(1238657, '_isIP', _isIP, false, false, false);
            J$.N(1238665, '_isIP2', _isIP2, false, false, false);
            J$.N(1238673, '_merge', _merge, false, false, false);
            J$.N(1238681, '_merge2', _merge2, false, false, false);
            _interopRequireDefault = J$.N(1238697, '_interopRequireDefault', J$.T(1238689, _interopRequireDefault, 12, false), true, false, false);
            J$.N(1238705, 'default_url_options', default_url_options, false, false, false);
            J$.N(1238713, 'wrapped_ipv6', wrapped_ipv6, false, false, false);
            isRegExp = J$.N(1238729, 'isRegExp', J$.T(1238721, isRegExp, 12, false), true, false, false);
            checkHost = J$.N(1238745, 'checkHost', J$.T(1238737, checkHost, 12, false), true, false, false);
            isURL = J$.N(1238761, 'isURL', J$.T(1238753, isURL, 12, false), true, false, false);
            J$.T(1235777, 'use strict', 21, false);
            J$.M(1235825, J$.I(typeof Object === 'undefined' ? Object = J$.R(1235785, 'Object', undefined, true, true) : Object = J$.R(1235785, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1235793, 'exports', undefined, true, true) : exports = J$.R(1235793, 'exports', exports, true, true)), J$.T(1235801, '__esModule', 21, false), J$.T(1235817, { value: J$.T(1235809, true, 23, false) }, 11, false));
            J$.P(1235849, J$.I(typeof exports === 'undefined' ? exports = J$.R(1235833, 'exports', undefined, true, true) : exports = J$.R(1235833, 'exports', exports, true, true)), 'default', J$.R(1235841, 'isURL', isURL, false, true));
            var _assertString = J$.W(1235881, '_assertString', J$.F(1235873, J$.I(typeof require === 'undefined' ? require = J$.R(1235857, 'require', undefined, true, true) : require = J$.R(1235857, 'require', require, true, true)), false)(J$.T(1235865, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1235913, '_assertString2', J$.F(1235905, J$.R(1235889, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1235897, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var _isFQDN = J$.W(1235945, '_isFQDN', J$.F(1235937, J$.I(typeof require === 'undefined' ? require = J$.R(1235921, 'require', undefined, true, true) : require = J$.R(1235921, 'require', require, true, true)), false)(J$.T(1235929, './isFQDN', 21, false)), _isFQDN, false, true);
            var _isFQDN2 = J$.W(1235977, '_isFQDN2', J$.F(1235969, J$.R(1235953, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1235961, '_isFQDN', _isFQDN, false, true)), _isFQDN2, false, true);
            var _isIP = J$.W(1236009, '_isIP', J$.F(1236001, J$.I(typeof require === 'undefined' ? require = J$.R(1235985, 'require', undefined, true, true) : require = J$.R(1235985, 'require', require, true, true)), false)(J$.T(1235993, './isIP', 21, false)), _isIP, false, true);
            var _isIP2 = J$.W(1236041, '_isIP2', J$.F(1236033, J$.R(1236017, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1236025, '_isIP', _isIP, false, true)), _isIP2, false, true);
            var _merge = J$.W(1236073, '_merge', J$.F(1236065, J$.I(typeof require === 'undefined' ? require = J$.R(1236049, 'require', undefined, true, true) : require = J$.R(1236049, 'require', require, true, true)), false)(J$.T(1236057, './util/merge', 21, false)), _merge, false, true);
            var _merge2 = J$.W(1236105, '_merge2', J$.F(1236097, J$.R(1236081, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1236089, '_merge', _merge, false, true)), _merge2, false, true);
            var default_url_options = J$.W(1236289, 'default_url_options', J$.T(1236281, {
                protocols: J$.T(1236217, [
                    J$.T(1236193, 'http', 21, false),
                    J$.T(1236201, 'https', 21, false),
                    J$.T(1236209, 'ftp', 21, false)
                ], 10, false),
                require_tld: J$.T(1236225, true, 23, false),
                require_protocol: J$.T(1236233, false, 23, false),
                require_host: J$.T(1236241, true, 23, false),
                require_valid_protocol: J$.T(1236249, true, 23, false),
                allow_underscores: J$.T(1236257, false, 23, false),
                allow_trailing_dot: J$.T(1236265, false, 23, false),
                allow_protocol_relative_urls: J$.T(1236273, false, 23, false)
            }, 11, false), default_url_options, false, true);
            var wrapped_ipv6 = J$.W(1236305, 'wrapped_ipv6', J$.T(1236297, /^\[([^\]]+)\](?::([0-9]+))?$/, 14, false), wrapped_ipv6, false, true);
            J$.P(1238609, J$.I(typeof module === 'undefined' ? module = J$.R(1238577, 'module', undefined, true, true) : module = J$.R(1238577, 'module', module, true, true)), 'exports', J$.G(1238601, J$.I(typeof exports === 'undefined' ? exports = J$.R(1238585, 'exports', undefined, true, true) : exports = J$.R(1238585, 'exports', exports, true, true)), J$.T(1238593, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1238833, J$e);
        } finally {
            if (J$.Sr(1238841))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

