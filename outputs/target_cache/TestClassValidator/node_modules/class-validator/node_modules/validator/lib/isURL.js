J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(2096401, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isURL.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2093953, arguments.callee, this, arguments);
                            arguments = J$.N(2093961, 'arguments', arguments, true, false, false);
                            obj = J$.N(2093969, 'obj', obj, true, false, false);
                            return J$.Rt(2093945, J$.C(123496, J$.C(123488, J$.R(2093897, 'obj', obj, false, false)) ? J$.G(2093913, J$.R(2093905, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(2093921, 'obj', obj, false, false) : J$.T(2093937, { default: J$.R(2093929, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2096553, J$e);
                        } finally {
                            if (J$.Fr(2096561))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isRegExp(obj) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2094153, arguments.callee, this, arguments);
                            arguments = J$.N(2094161, 'arguments', arguments, true, false, false);
                            obj = J$.N(2094169, 'obj', obj, true, false, false);
                            return J$.Rt(2094145, J$.B(257178, '===', J$.M(2094129, J$.G(2094113, J$.G(2094105, J$.I(typeof Object === 'undefined' ? Object = J$.R(2094097, 'Object', undefined, true, true) : Object = J$.R(2094097, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(2094121, 'obj', obj, false, false)), J$.T(2094137, '[object RegExp]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2096569, J$e);
                        } finally {
                            if (J$.Fr(2096577))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkHost(host, matches) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2094361, arguments.callee, this, arguments);
                            arguments = J$.N(2094369, 'arguments', arguments, true, false, false);
                            host = J$.N(2094377, 'host', host, true, false, false);
                            matches = J$.N(2094385, 'matches', matches, true, false, false);
                            J$.N(2094393, 'i', i, false, false, false);
                            J$.N(2094401, 'match', match, false, false, false);
                            for (var i = J$.W(2094185, 'i', J$.T(2094177, 0, 22, false), i, false, false); J$.C(123528, J$.B(257186, '<', J$.R(2094193, 'i', i, false, false), J$.G(2094209, J$.R(2094201, 'matches', matches, false, false), 'length'))); J$.B(257210, '-', i = J$.W(2094225, 'i', J$.B(257202, '+', J$.U(257194, '+', J$.R(2094217, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var match = J$.W(2094257, 'match', J$.G(2094249, J$.R(2094233, 'matches', matches, false, false), J$.R(2094241, 'i', i, false, false)), match, false, false);
                                if (J$.C(123520, J$.C(123512, J$.B(257218, '===', J$.R(2094265, 'host', host, false, false), J$.R(2094273, 'match', match, false, false))) ? J$._() : J$.C(123504, J$.F(2094297, J$.R(2094281, 'isRegExp', isRegExp, false, true), false)(J$.R(2094289, 'match', match, false, false))) ? J$.M(2094321, J$.R(2094305, 'match', match, false, false), 'test', false)(J$.R(2094313, 'host', host, false, false)) : J$._())) {
                                    return J$.Rt(2094337, J$.T(2094329, true, 23, false));
                                }
                            }
                            return J$.Rt(2094353, J$.T(2094345, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(2096585, J$e);
                        } finally {
                            if (J$.Fr(2096593))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isURL(url, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2096257, arguments.callee, this, arguments);
                            arguments = J$.N(2096265, 'arguments', arguments, true, false, false);
                            url = J$.N(2096273, 'url', url, true, false, false);
                            options = J$.N(2096281, 'options', options, true, false, false);
                            J$.N(2096289, 'protocol', protocol, false, false, false);
                            J$.N(2096297, 'auth', auth, false, false, false);
                            J$.N(2096305, 'host', host, false, false, false);
                            J$.N(2096313, 'hostname', hostname, false, false, false);
                            J$.N(2096321, 'port', port, false, false, false);
                            J$.N(2096329, 'port_str', port_str, false, false, false);
                            J$.N(2096337, 'split', split, false, false, false);
                            J$.N(2096345, 'ipv6', ipv6, false, false, false);
                            J$.N(2096353, 'ipv6_match', ipv6_match, false, false, false);
                            J$.F(2094441, (J$.T(2094409, 0, 22, false), J$.G(2094425, J$.R(2094417, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(2094433, 'url', url, false, false));
                            if (J$.C(123552, J$.C(123544, J$.C(123536, J$.U(257226, '!', J$.R(2094449, 'url', url, false, false))) ? J$._() : J$.B(257234, '>=', J$.G(2094465, J$.R(2094457, 'url', url, false, false), 'length'), J$.T(2094473, 2083, 22, false))) ? J$._() : J$.M(2094497, J$.T(2094481, /[\s<>]/, 14, false), 'test', false)(J$.R(2094489, 'url', url, false, false)))) {
                                return J$.Rt(2094513, J$.T(2094505, false, 23, false));
                            }
                            if (J$.C(123560, J$.B(257242, '===', J$.M(2094537, J$.R(2094521, 'url', url, false, false), 'indexOf', false)(J$.T(2094529, 'mailto:', 21, false)), J$.T(2094545, 0, 22, false)))) {
                                return J$.Rt(2094561, J$.T(2094553, false, 23, false));
                            }
                            options = J$.W(2094617, 'options', J$.F(2094609, (J$.T(2094569, 0, 22, false), J$.G(2094585, J$.R(2094577, '_merge2', _merge2, false, true), 'default')), false)(J$.R(2094593, 'options', options, false, false), J$.R(2094601, 'default_url_options', default_url_options, false, true)), options, false, false);
                            var protocol = J$.W(2094689, 'protocol', void J$.T(2094625, 0, 22, false), protocol, false, false), auth = J$.W(2094697, 'auth', void J$.T(2094633, 0, 22, false), auth, false, false), host = J$.W(2094705, 'host', void J$.T(2094641, 0, 22, false), host, false, false), hostname = J$.W(2094713, 'hostname', void J$.T(2094649, 0, 22, false), hostname, false, false), port = J$.W(2094721, 'port', void J$.T(2094657, 0, 22, false), port, false, false), port_str = J$.W(2094729, 'port_str', void J$.T(2094665, 0, 22, false), port_str, false, false), split = J$.W(2094737, 'split', void J$.T(2094673, 0, 22, false), split, false, false), ipv6 = J$.W(2094745, 'ipv6', void J$.T(2094681, 0, 22, false), ipv6, false, false);
                            split = J$.W(2094777, 'split', J$.M(2094769, J$.R(2094753, 'url', url, false, false), 'split', false)(J$.T(2094761, '#', 21, false)), split, false, false);
                            url = J$.W(2094801, 'url', J$.M(2094793, J$.R(2094785, 'split', split, false, false), 'shift', false)(), url, false, false);
                            split = J$.W(2094833, 'split', J$.M(2094825, J$.R(2094809, 'url', url, false, false), 'split', false)(J$.T(2094817, '?', 21, false)), split, false, false);
                            url = J$.W(2094857, 'url', J$.M(2094849, J$.R(2094841, 'split', split, false, false), 'shift', false)(), url, false, false);
                            split = J$.W(2094889, 'split', J$.M(2094881, J$.R(2094865, 'url', url, false, false), 'split', false)(J$.T(2094873, '://', 21, false)), split, false, false);
                            if (J$.C(123608, J$.B(257250, '>', J$.G(2094905, J$.R(2094897, 'split', split, false, false), 'length'), J$.T(2094913, 1, 22, false)))) {
                                protocol = J$.W(2094937, 'protocol', J$.M(2094929, J$.R(2094921, 'split', split, false, false), 'shift', false)(), protocol, false, false);
                                if (J$.C(123576, J$.C(123568, J$.G(2094953, J$.R(2094945, 'options', options, false, false), 'require_valid_protocol')) ? J$.B(257266, '===', J$.M(2094985, J$.G(2094969, J$.R(2094961, 'options', options, false, false), 'protocols'), 'indexOf', false)(J$.R(2094977, 'protocol', protocol, false, false)), J$.U(257258, '-', J$.T(2094993, 1, 22, false))) : J$._())) {
                                    return J$.Rt(2095009, J$.T(2095001, false, 23, false));
                                }
                            } else if (J$.C(123600, J$.G(2095025, J$.R(2095017, 'options', options, false, false), 'require_protocol'))) {
                                return J$.Rt(2095041, J$.T(2095033, false, 23, false));
                            } else if (J$.C(123592, J$.C(123584, J$.G(2095057, J$.R(2095049, 'options', options, false, false), 'allow_protocol_relative_urls')) ? J$.B(257274, '===', J$.M(2095089, J$.R(2095065, 'url', url, false, false), 'substr', false)(J$.T(2095073, 0, 22, false), J$.T(2095081, 2, 22, false)), J$.T(2095097, '//', 21, false)) : J$._())) {
                                J$.P(2095145, J$.R(2095105, 'split', split, false, false), J$.T(2095113, 0, 22, false), J$.M(2095137, J$.R(2095121, 'url', url, false, false), 'substr', false)(J$.T(2095129, 2, 22, false)));
                            }
                            url = J$.W(2095177, 'url', J$.M(2095169, J$.R(2095153, 'split', split, false, false), 'join', false)(J$.T(2095161, '://', 21, false)), url, false, false);
                            if (J$.C(123616, J$.B(257282, '===', J$.R(2095185, 'url', url, false, false), J$.T(2095193, '', 21, false)))) {
                                return J$.Rt(2095209, J$.T(2095201, false, 23, false));
                            }
                            split = J$.W(2095241, 'split', J$.M(2095233, J$.R(2095217, 'url', url, false, false), 'split', false)(J$.T(2095225, '/', 21, false)), split, false, false);
                            url = J$.W(2095265, 'url', J$.M(2095257, J$.R(2095249, 'split', split, false, false), 'shift', false)(), url, false, false);
                            if (J$.C(123632, J$.C(123624, J$.B(257290, '===', J$.R(2095273, 'url', url, false, false), J$.T(2095281, '', 21, false))) ? J$.U(257298, '!', J$.G(2095297, J$.R(2095289, 'options', options, false, false), 'require_host')) : J$._())) {
                                return J$.Rt(2095313, J$.T(2095305, true, 23, false));
                            }
                            split = J$.W(2095345, 'split', J$.M(2095337, J$.R(2095321, 'url', url, false, false), 'split', false)(J$.T(2095329, '@', 21, false)), split, false, false);
                            if (J$.C(123656, J$.B(257306, '>', J$.G(2095361, J$.R(2095353, 'split', split, false, false), 'length'), J$.T(2095369, 1, 22, false)))) {
                                auth = J$.W(2095393, 'auth', J$.M(2095385, J$.R(2095377, 'split', split, false, false), 'shift', false)(), auth, false, false);
                                if (J$.C(123648, J$.C(123640, J$.B(257314, '>=', J$.M(2095417, J$.R(2095401, 'auth', auth, false, false), 'indexOf', false)(J$.T(2095409, ':', 21, false)), J$.T(2095425, 0, 22, false))) ? J$.B(257322, '>', J$.G(2095457, J$.M(2095449, J$.R(2095433, 'auth', auth, false, false), 'split', false)(J$.T(2095441, ':', 21, false)), 'length'), J$.T(2095465, 2, 22, false)) : J$._())) {
                                    return J$.Rt(2095481, J$.T(2095473, false, 23, false));
                                }
                            }
                            hostname = J$.W(2095513, 'hostname', J$.M(2095505, J$.R(2095489, 'split', split, false, false), 'join', false)(J$.T(2095497, '@', 21, false)), hostname, false, false);
                            port_str = J$.W(2095529, 'port_str', J$.T(2095521, null, 25, false), port_str, false, false);
                            ipv6 = J$.W(2095545, 'ipv6', J$.T(2095537, null, 25, false), ipv6, false, false);
                            var ipv6_match = J$.W(2095577, 'ipv6_match', J$.M(2095569, J$.R(2095553, 'hostname', hostname, false, false), 'match', false)(J$.R(2095561, 'wrapped_ipv6', wrapped_ipv6, false, true)), ipv6_match, false, false);
                            if (J$.C(123680, J$.R(2095585, 'ipv6_match', ipv6_match, false, false))) {
                                host = J$.W(2095601, 'host', J$.T(2095593, '', 21, false), host, false, false);
                                ipv6 = J$.W(2095633, 'ipv6', J$.G(2095625, J$.R(2095609, 'ipv6_match', ipv6_match, false, false), J$.T(2095617, 1, 22, false)), ipv6, false, false);
                                port_str = J$.W(2095673, 'port_str', J$.C(123664, J$.G(2095657, J$.R(2095641, 'ipv6_match', ipv6_match, false, false), J$.T(2095649, 2, 22, false))) ? J$._() : J$.T(2095665, null, 25, false), port_str, false, false);
                            } else {
                                split = J$.W(2095705, 'split', J$.M(2095697, J$.R(2095681, 'hostname', hostname, false, false), 'split', false)(J$.T(2095689, ':', 21, false)), split, false, false);
                                host = J$.W(2095729, 'host', J$.M(2095721, J$.R(2095713, 'split', split, false, false), 'shift', false)(), host, false, false);
                                if (J$.C(123672, J$.G(2095745, J$.R(2095737, 'split', split, false, false), 'length'))) {
                                    port_str = J$.W(2095777, 'port_str', J$.M(2095769, J$.R(2095753, 'split', split, false, false), 'join', false)(J$.T(2095761, ':', 21, false)), port_str, false, false);
                                }
                            }
                            if (J$.C(123712, J$.B(257330, '!==', J$.R(2095785, 'port_str', port_str, false, false), J$.T(2095793, null, 25, false)))) {
                                port = J$.W(2095833, 'port', J$.F(2095825, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(2095801, 'parseInt', undefined, true, true) : parseInt = J$.R(2095801, 'parseInt', parseInt, true, true)), false)(J$.R(2095809, 'port_str', port_str, false, false), J$.T(2095817, 10, 22, false)), port, false, false);
                                if (J$.C(123704, J$.C(123696, J$.C(123688, J$.U(257338, '!', J$.M(2095857, J$.T(2095841, /^[0-9]+$/, 14, false), 'test', false)(J$.R(2095849, 'port_str', port_str, false, false)))) ? J$._() : J$.B(257346, '<=', J$.R(2095865, 'port', port, false, false), J$.T(2095873, 0, 22, false))) ? J$._() : J$.B(257354, '>', J$.R(2095881, 'port', port, false, false), J$.T(2095889, 65535, 22, false)))) {
                                    return J$.Rt(2095905, J$.T(2095897, false, 23, false));
                                }
                            }
                            if (J$.C(123744, J$.C(123736, J$.C(123720, J$.U(257362, '!', J$.F(2095945, (J$.T(2095913, 0, 22, false), J$.G(2095929, J$.R(2095921, '_isIP2', _isIP2, false, true), 'default')), false)(J$.R(2095937, 'host', host, false, false)))) ? J$.U(257370, '!', J$.F(2095993, (J$.T(2095953, 0, 22, false), J$.G(2095969, J$.R(2095961, '_isFQDN2', _isFQDN2, false, true), 'default')), false)(J$.R(2095977, 'host', host, false, false), J$.R(2095985, 'options', options, false, false))) : J$._()) ? J$.C(123728, J$.U(257378, '!', J$.R(2096001, 'ipv6', ipv6, false, false))) ? J$._() : J$.U(257386, '!', J$.F(2096049, (J$.T(2096009, 0, 22, false), J$.G(2096025, J$.R(2096017, '_isIP2', _isIP2, false, true), 'default')), false)(J$.R(2096033, 'ipv6', ipv6, false, false), J$.T(2096041, 6, 22, false))) : J$._())) {
                                return J$.Rt(2096065, J$.T(2096057, false, 23, false));
                            }
                            host = J$.W(2096089, 'host', J$.C(123752, J$.R(2096073, 'host', host, false, false)) ? J$._() : J$.R(2096081, 'ipv6', ipv6, false, false), host, false, false);
                            if (J$.C(123768, J$.C(123760, J$.G(2096105, J$.R(2096097, 'options', options, false, false), 'host_whitelist')) ? J$.U(257394, '!', J$.F(2096145, J$.R(2096113, 'checkHost', checkHost, false, true), false)(J$.R(2096121, 'host', host, false, false), J$.G(2096137, J$.R(2096129, 'options', options, false, false), 'host_whitelist'))) : J$._())) {
                                return J$.Rt(2096161, J$.T(2096153, false, 23, false));
                            }
                            if (J$.C(123784, J$.C(123776, J$.G(2096177, J$.R(2096169, 'options', options, false, false), 'host_blacklist')) ? J$.F(2096217, J$.R(2096185, 'checkHost', checkHost, false, true), false)(J$.R(2096193, 'host', host, false, false), J$.G(2096209, J$.R(2096201, 'options', options, false, false), 'host_blacklist')) : J$._())) {
                                return J$.Rt(2096233, J$.T(2096225, false, 23, false));
                            }
                            return J$.Rt(2096249, J$.T(2096241, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(2096601, J$e);
                        } finally {
                            if (J$.Fr(2096609))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2096409, '_assertString', _assertString, false, false, false);
            J$.N(2096417, '_assertString2', _assertString2, false, false, false);
            J$.N(2096425, '_isFQDN', _isFQDN, false, false, false);
            J$.N(2096433, '_isFQDN2', _isFQDN2, false, false, false);
            J$.N(2096441, '_isIP', _isIP, false, false, false);
            J$.N(2096449, '_isIP2', _isIP2, false, false, false);
            J$.N(2096457, '_merge', _merge, false, false, false);
            J$.N(2096465, '_merge2', _merge2, false, false, false);
            _interopRequireDefault = J$.N(2096481, '_interopRequireDefault', J$.T(2096473, _interopRequireDefault, 12, false), true, false, false);
            J$.N(2096489, 'default_url_options', default_url_options, false, false, false);
            J$.N(2096497, 'wrapped_ipv6', wrapped_ipv6, false, false, false);
            isRegExp = J$.N(2096513, 'isRegExp', J$.T(2096505, isRegExp, 12, false), true, false, false);
            checkHost = J$.N(2096529, 'checkHost', J$.T(2096521, checkHost, 12, false), true, false, false);
            isURL = J$.N(2096545, 'isURL', J$.T(2096537, isURL, 12, false), true, false, false);
            J$.T(2093561, 'use strict', 21, false);
            J$.M(2093609, J$.I(typeof Object === 'undefined' ? Object = J$.R(2093569, 'Object', undefined, true, true) : Object = J$.R(2093569, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2093577, 'exports', undefined, true, true) : exports = J$.R(2093577, 'exports', exports, true, true)), J$.T(2093585, '__esModule', 21, false), J$.T(2093601, { value: J$.T(2093593, true, 23, false) }, 11, false));
            J$.P(2093633, J$.I(typeof exports === 'undefined' ? exports = J$.R(2093617, 'exports', undefined, true, true) : exports = J$.R(2093617, 'exports', exports, true, true)), 'default', J$.R(2093625, 'isURL', isURL, false, true));
            var _assertString = J$.W(2093665, '_assertString', J$.F(2093657, J$.I(typeof require === 'undefined' ? require = J$.R(2093641, 'require', undefined, true, true) : require = J$.R(2093641, 'require', require, true, true)), false)(J$.T(2093649, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(2093697, '_assertString2', J$.F(2093689, J$.R(2093673, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2093681, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var _isFQDN = J$.W(2093729, '_isFQDN', J$.F(2093721, J$.I(typeof require === 'undefined' ? require = J$.R(2093705, 'require', undefined, true, true) : require = J$.R(2093705, 'require', require, true, true)), false)(J$.T(2093713, './isFQDN', 21, false)), _isFQDN, false, true);
            var _isFQDN2 = J$.W(2093761, '_isFQDN2', J$.F(2093753, J$.R(2093737, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2093745, '_isFQDN', _isFQDN, false, true)), _isFQDN2, false, true);
            var _isIP = J$.W(2093793, '_isIP', J$.F(2093785, J$.I(typeof require === 'undefined' ? require = J$.R(2093769, 'require', undefined, true, true) : require = J$.R(2093769, 'require', require, true, true)), false)(J$.T(2093777, './isIP', 21, false)), _isIP, false, true);
            var _isIP2 = J$.W(2093825, '_isIP2', J$.F(2093817, J$.R(2093801, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2093809, '_isIP', _isIP, false, true)), _isIP2, false, true);
            var _merge = J$.W(2093857, '_merge', J$.F(2093849, J$.I(typeof require === 'undefined' ? require = J$.R(2093833, 'require', undefined, true, true) : require = J$.R(2093833, 'require', require, true, true)), false)(J$.T(2093841, './util/merge', 21, false)), _merge, false, true);
            var _merge2 = J$.W(2093889, '_merge2', J$.F(2093881, J$.R(2093865, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2093873, '_merge', _merge, false, true)), _merge2, false, true);
            var default_url_options = J$.W(2094073, 'default_url_options', J$.T(2094065, {
                protocols: J$.T(2094001, [
                    J$.T(2093977, 'http', 21, false),
                    J$.T(2093985, 'https', 21, false),
                    J$.T(2093993, 'ftp', 21, false)
                ], 10, false),
                require_tld: J$.T(2094009, true, 23, false),
                require_protocol: J$.T(2094017, false, 23, false),
                require_host: J$.T(2094025, true, 23, false),
                require_valid_protocol: J$.T(2094033, true, 23, false),
                allow_underscores: J$.T(2094041, false, 23, false),
                allow_trailing_dot: J$.T(2094049, false, 23, false),
                allow_protocol_relative_urls: J$.T(2094057, false, 23, false)
            }, 11, false), default_url_options, false, true);
            var wrapped_ipv6 = J$.W(2094089, 'wrapped_ipv6', J$.T(2094081, /^\[([^\]]+)\](?::([0-9]+))?$/, 14, false), wrapped_ipv6, false, true);
            J$.P(2096393, J$.I(typeof module === 'undefined' ? module = J$.R(2096361, 'module', undefined, true, true) : module = J$.R(2096361, 'module', module, true, true)), 'exports', J$.G(2096385, J$.I(typeof exports === 'undefined' ? exports = J$.R(2096369, 'exports', undefined, true, true) : exports = J$.R(2096369, 'exports', exports, true, true)), J$.T(2096377, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(2096617, J$e);
        } finally {
            if (J$.Sr(2096625))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

