J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1222441, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isISSN.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1221705, arguments.callee, this, arguments);
                            arguments = J$.N(1221713, 'arguments', arguments, true, false, false);
                            obj = J$.N(1221721, 'obj', obj, true, false, false);
                            return J$.Rt(1221697, J$.C(68656, J$.C(68648, J$.R(1221649, 'obj', obj, false, false)) ? J$.G(1221665, J$.R(1221657, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1221673, 'obj', obj, false, false) : J$.T(1221689, { default: J$.R(1221681, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1222505, J$e);
                        } finally {
                            if (J$.Fr(1222513))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isISSN(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1222329, arguments.callee, this, arguments);
                            arguments = J$.N(1222337, 'arguments', arguments, true, false, false);
                            str = J$.N(1222345, 'str', str, true, false, false);
                            J$.N(1222353, 'options', options, false, false, false);
                            J$.N(1222361, 'testIssn', testIssn, false, false, false);
                            J$.N(1222369, 'digits', digits, false, false, false);
                            J$.N(1222377, 'checksum', checksum, false, false, false);
                            J$.N(1222385, 'i', i, false, false, false);
                            J$.N(1222393, 'digit', digit, false, false, false);
                            var options = J$.W(1221833, 'options', J$.C(68672, J$.C(68664, J$.B(87226, '>', J$.G(1221753, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1221745, 'arguments', undefined, true, true) : arguments = J$.R(1221745, 'arguments', arguments, true, true)), 'length'), J$.T(1221761, 1, 22, false))) ? J$.B(87234, '!==', J$.G(1221785, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1221769, 'arguments', undefined, true, true) : arguments = J$.R(1221769, 'arguments', arguments, true, true)), J$.T(1221777, 1, 22, false)), J$.T(1221793, undefined, 24, false)) : J$._()) ? J$.G(1221817, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1221801, 'arguments', undefined, true, true) : arguments = J$.R(1221801, 'arguments', arguments, true, true)), J$.T(1221809, 1, 22, false)) : J$.T(1221825, {}, 11, false), options, false, false);
                            J$.F(1221873, (J$.T(1221841, 0, 22, false), J$.G(1221857, J$.R(1221849, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1221865, 'str', str, false, false));
                            var testIssn = J$.W(1221889, 'testIssn', J$.R(1221881, 'issn', issn, false, true), testIssn, false, false);
                            testIssn = J$.W(1221953, 'testIssn', J$.C(68680, J$.G(1221905, J$.R(1221897, 'options', options, false, false), 'require_hyphen')) ? J$.M(1221937, J$.R(1221913, 'testIssn', testIssn, false, false), 'replace', false)(J$.T(1221921, '?', 21, false), J$.T(1221929, '', 21, false)) : J$.R(1221945, 'testIssn', testIssn, false, false), testIssn, false, false);
                            testIssn = J$.W(1222033, 'testIssn', J$.C(68688, J$.G(1221969, J$.R(1221961, 'options', options, false, false), 'case_sensitive')) ? J$.F(1221993, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(1221977, 'RegExp', undefined, true, true) : RegExp = J$.R(1221977, 'RegExp', RegExp, true, true)), true)(J$.R(1221985, 'testIssn', testIssn, false, false)) : J$.F(1222025, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(1222001, 'RegExp', undefined, true, true) : RegExp = J$.R(1222001, 'RegExp', RegExp, true, true)), true)(J$.R(1222009, 'testIssn', testIssn, false, false), J$.T(1222017, 'i', 21, false)), testIssn, false, false);
                            if (J$.C(68696, J$.U(87242, '!', J$.M(1222057, J$.R(1222041, 'testIssn', testIssn, false, false), 'test', false)(J$.R(1222049, 'str', str, false, false))))) {
                                return J$.Rt(1222073, J$.T(1222065, false, 23, false));
                            }
                            var digits = J$.W(1222121, 'digits', J$.M(1222113, J$.M(1222105, J$.R(1222081, 'str', str, false, false), 'replace', false)(J$.T(1222089, '-', 21, false), J$.T(1222097, '', 21, false)), 'toUpperCase', false)(), digits, false, false);
                            var checksum = J$.W(1222137, 'checksum', J$.T(1222129, 0, 22, false), checksum, false, false);
                            for (var i = J$.W(1222153, 'i', J$.T(1222145, 0, 22, false), i, false, false); J$.C(68712, J$.B(87250, '<', J$.R(1222161, 'i', i, false, false), J$.G(1222177, J$.R(1222169, 'digits', digits, false, false), 'length'))); J$.B(87274, '-', i = J$.W(1222193, 'i', J$.B(87266, '+', J$.U(87258, '+', J$.R(1222185, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var digit = J$.W(1222225, 'digit', J$.G(1222217, J$.R(1222201, 'digits', digits, false, false), J$.R(1222209, 'i', i, false, false)), digit, false, false);
                                checksum = J$.W(1222289, 'checksum', J$.B(87314, '+', J$.R(1222281, 'checksum', checksum, false, false), J$.B(87306, '*', J$.C(68704, J$.B(87282, '===', J$.R(1222233, 'digit', digit, false, false), J$.T(1222241, 'X', 21, false))) ? J$.T(1222249, 10, 22, false) : J$.U(87290, '+', J$.R(1222257, 'digit', digit, false, false)), J$.B(87298, '-', J$.T(1222265, 8, 22, false), J$.R(1222273, 'i', i, false, false)))), checksum, false, false);
                            }
                            return J$.Rt(1222321, J$.B(87330, '===', J$.B(87322, '%', J$.R(1222297, 'checksum', checksum, false, false), J$.T(1222305, 11, 22, false)), J$.T(1222313, 0, 22, false)));
                        } catch (J$e) {
                            J$.Ex(1222521, J$e);
                        } finally {
                            if (J$.Fr(1222529))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1222449, '_assertString', _assertString, false, false, false);
            J$.N(1222457, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(1222473, '_interopRequireDefault', J$.T(1222465, _interopRequireDefault, 12, false), true, false, false);
            J$.N(1222481, 'issn', issn, false, false, false);
            isISSN = J$.N(1222497, 'isISSN', J$.T(1222489, isISSN, 12, false), true, false, false);
            J$.T(1221505, 'use strict', 21, false);
            J$.M(1221553, J$.I(typeof Object === 'undefined' ? Object = J$.R(1221513, 'Object', undefined, true, true) : Object = J$.R(1221513, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1221521, 'exports', undefined, true, true) : exports = J$.R(1221521, 'exports', exports, true, true)), J$.T(1221529, '__esModule', 21, false), J$.T(1221545, { value: J$.T(1221537, true, 23, false) }, 11, false));
            J$.P(1221577, J$.I(typeof exports === 'undefined' ? exports = J$.R(1221561, 'exports', undefined, true, true) : exports = J$.R(1221561, 'exports', exports, true, true)), 'default', J$.R(1221569, 'isISSN', isISSN, false, true));
            var _assertString = J$.W(1221609, '_assertString', J$.F(1221601, J$.I(typeof require === 'undefined' ? require = J$.R(1221585, 'require', undefined, true, true) : require = J$.R(1221585, 'require', require, true, true)), false)(J$.T(1221593, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1221641, '_assertString2', J$.F(1221633, J$.R(1221617, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1221625, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var issn = J$.W(1221737, 'issn', J$.T(1221729, '^\\d{4}-?\\d{3}[\\dX]$', 21, false), issn, false, true);
            J$.P(1222433, J$.I(typeof module === 'undefined' ? module = J$.R(1222401, 'module', undefined, true, true) : module = J$.R(1222401, 'module', module, true, true)), 'exports', J$.G(1222425, J$.I(typeof exports === 'undefined' ? exports = J$.R(1222409, 'exports', undefined, true, true) : exports = J$.R(1222409, 'exports', exports, true, true)), J$.T(1222417, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1222537, J$e);
        } finally {
            if (J$.Sr(1222545))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

