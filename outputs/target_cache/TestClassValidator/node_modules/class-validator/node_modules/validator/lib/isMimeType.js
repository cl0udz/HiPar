J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2086921, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isMimeType.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2086665, arguments.callee, this, arguments);
                            arguments = J$.N(2086673, 'arguments', arguments, true, false, false);
                            obj = J$.N(2086681, 'obj', obj, true, false, false);
                            return J$.Rt(2086657, J$.C(123216, J$.C(123208, J$.R(2086609, 'obj', obj, false, false)) ? J$.G(2086625, J$.R(2086617, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(2086633, 'obj', obj, false, false) : J$.T(2086649, { default: J$.R(2086641, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2087001, J$e);
                        } finally {
                            if (J$.Fr(2087009))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isMimeType(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2086857, arguments.callee, this, arguments);
                            arguments = J$.N(2086865, 'arguments', arguments, true, false, false);
                            str = J$.N(2086873, 'str', str, true, false, false);
                            J$.F(2086769, (J$.T(2086737, 0, 22, false), J$.G(2086753, J$.R(2086745, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(2086761, 'str', str, false, false));
                            return J$.Rt(2086849, J$.C(123232, J$.C(123224, J$.M(2086793, J$.R(2086777, 'mimeTypeSimple', mimeTypeSimple, false, true), 'test', false)(J$.R(2086785, 'str', str, false, false))) ? J$._() : J$.M(2086817, J$.R(2086801, 'mimeTypeText', mimeTypeText, false, true), 'test', false)(J$.R(2086809, 'str', str, false, false))) ? J$._() : J$.M(2086841, J$.R(2086825, 'mimeTypeMultipart', mimeTypeMultipart, false, true), 'test', false)(J$.R(2086833, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(2087017, J$e);
                        } finally {
                            if (J$.Fr(2087025))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2086929, '_assertString', _assertString, false, false, false);
            J$.N(2086937, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(2086953, '_interopRequireDefault', J$.T(2086945, _interopRequireDefault, 12, false), true, false, false);
            J$.N(2086961, 'mimeTypeSimple', mimeTypeSimple, false, false, false);
            J$.N(2086969, 'mimeTypeText', mimeTypeText, false, false, false);
            J$.N(2086977, 'mimeTypeMultipart', mimeTypeMultipart, false, false, false);
            isMimeType = J$.N(2086993, 'isMimeType', J$.T(2086985, isMimeType, 12, false), true, false, false);
            J$.T(2086465, 'use strict', 21, false);
            J$.M(2086513, J$.I(typeof Object === 'undefined' ? Object = J$.R(2086473, 'Object', undefined, true, true) : Object = J$.R(2086473, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2086481, 'exports', undefined, true, true) : exports = J$.R(2086481, 'exports', exports, true, true)), J$.T(2086489, '__esModule', 21, false), J$.T(2086505, { value: J$.T(2086497, true, 23, false) }, 11, false));
            J$.P(2086537, J$.I(typeof exports === 'undefined' ? exports = J$.R(2086521, 'exports', undefined, true, true) : exports = J$.R(2086521, 'exports', exports, true, true)), 'default', J$.R(2086529, 'isMimeType', isMimeType, false, true));
            var _assertString = J$.W(2086569, '_assertString', J$.F(2086561, J$.I(typeof require === 'undefined' ? require = J$.R(2086545, 'require', undefined, true, true) : require = J$.R(2086545, 'require', require, true, true)), false)(J$.T(2086553, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(2086601, '_assertString2', J$.F(2086593, J$.R(2086577, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(2086585, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var mimeTypeSimple = J$.W(2086697, 'mimeTypeSimple', J$.T(2086689, /^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i, 14, false), mimeTypeSimple, false, true);
            var mimeTypeText = J$.W(2086713, 'mimeTypeText', J$.T(2086705, /^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i, 14, false), mimeTypeText, false, true);
            var mimeTypeMultipart = J$.W(2086729, 'mimeTypeMultipart', J$.T(2086721, /^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i, 14, false), mimeTypeMultipart, false, true);
            J$.P(2086913, J$.I(typeof module === 'undefined' ? module = J$.R(2086881, 'module', undefined, true, true) : module = J$.R(2086881, 'module', module, true, true)), 'exports', J$.G(2086905, J$.I(typeof exports === 'undefined' ? exports = J$.R(2086889, 'exports', undefined, true, true) : exports = J$.R(2086889, 'exports', exports, true, true)), J$.T(2086897, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(2087033, J$e);
        } finally {
            if (J$.Sr(2087041))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

