J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1229137, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isMimeType.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1228881, arguments.callee, this, arguments);
                            arguments = J$.N(1228889, 'arguments', arguments, true, false, false);
                            obj = J$.N(1228897, 'obj', obj, true, false, false);
                            return J$.Rt(1228873, J$.C(69216, J$.C(69208, J$.R(1228825, 'obj', obj, false, false)) ? J$.G(1228841, J$.R(1228833, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(1228849, 'obj', obj, false, false) : J$.T(1228865, { default: J$.R(1228857, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1229217, J$e);
                        } finally {
                            if (J$.Fr(1229225))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isMimeType(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1229073, arguments.callee, this, arguments);
                            arguments = J$.N(1229081, 'arguments', arguments, true, false, false);
                            str = J$.N(1229089, 'str', str, true, false, false);
                            J$.F(1228985, (J$.T(1228953, 0, 22, false), J$.G(1228969, J$.R(1228961, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(1228977, 'str', str, false, false));
                            return J$.Rt(1229065, J$.C(69232, J$.C(69224, J$.M(1229009, J$.R(1228993, 'mimeTypeSimple', mimeTypeSimple, false, true), 'test', false)(J$.R(1229001, 'str', str, false, false))) ? J$._() : J$.M(1229033, J$.R(1229017, 'mimeTypeText', mimeTypeText, false, true), 'test', false)(J$.R(1229025, 'str', str, false, false))) ? J$._() : J$.M(1229057, J$.R(1229041, 'mimeTypeMultipart', mimeTypeMultipart, false, true), 'test', false)(J$.R(1229049, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(1229233, J$e);
                        } finally {
                            if (J$.Fr(1229241))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1229145, '_assertString', _assertString, false, false, false);
            J$.N(1229153, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(1229169, '_interopRequireDefault', J$.T(1229161, _interopRequireDefault, 12, false), true, false, false);
            J$.N(1229177, 'mimeTypeSimple', mimeTypeSimple, false, false, false);
            J$.N(1229185, 'mimeTypeText', mimeTypeText, false, false, false);
            J$.N(1229193, 'mimeTypeMultipart', mimeTypeMultipart, false, false, false);
            isMimeType = J$.N(1229209, 'isMimeType', J$.T(1229201, isMimeType, 12, false), true, false, false);
            J$.T(1228681, 'use strict', 21, false);
            J$.M(1228729, J$.I(typeof Object === 'undefined' ? Object = J$.R(1228689, 'Object', undefined, true, true) : Object = J$.R(1228689, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1228697, 'exports', undefined, true, true) : exports = J$.R(1228697, 'exports', exports, true, true)), J$.T(1228705, '__esModule', 21, false), J$.T(1228721, { value: J$.T(1228713, true, 23, false) }, 11, false));
            J$.P(1228753, J$.I(typeof exports === 'undefined' ? exports = J$.R(1228737, 'exports', undefined, true, true) : exports = J$.R(1228737, 'exports', exports, true, true)), 'default', J$.R(1228745, 'isMimeType', isMimeType, false, true));
            var _assertString = J$.W(1228785, '_assertString', J$.F(1228777, J$.I(typeof require === 'undefined' ? require = J$.R(1228761, 'require', undefined, true, true) : require = J$.R(1228761, 'require', require, true, true)), false)(J$.T(1228769, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(1228817, '_assertString2', J$.F(1228809, J$.R(1228793, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(1228801, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var mimeTypeSimple = J$.W(1228913, 'mimeTypeSimple', J$.T(1228905, /^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i, 14, false), mimeTypeSimple, false, true);
            var mimeTypeText = J$.W(1228929, 'mimeTypeText', J$.T(1228921, /^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i, 14, false), mimeTypeText, false, true);
            var mimeTypeMultipart = J$.W(1228945, 'mimeTypeMultipart', J$.T(1228937, /^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i, 14, false), mimeTypeMultipart, false, true);
            J$.P(1229129, J$.I(typeof module === 'undefined' ? module = J$.R(1229097, 'module', undefined, true, true) : module = J$.R(1229097, 'module', module, true, true)), 'exports', J$.G(1229121, J$.I(typeof exports === 'undefined' ? exports = J$.R(1229105, 'exports', undefined, true, true) : exports = J$.R(1229105, 'exports', exports, true, true)), J$.T(1229113, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(1229249, J$e);
        } finally {
            if (J$.Sr(1229257))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

