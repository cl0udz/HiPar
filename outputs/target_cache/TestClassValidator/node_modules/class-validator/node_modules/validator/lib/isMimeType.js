J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5870217, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/node_modules/validator/lib/isMimeType.js');
            function _interopRequireDefault(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5869961, arguments.callee, this, arguments);
                            arguments = J$.N(5869969, 'arguments', arguments, true, false, false);
                            obj = J$.N(5869977, 'obj', obj, true, false, false);
                            return J$.Rt(5869953, J$.C(319736, J$.C(319728, J$.R(5869905, 'obj', obj, false, false)) ? J$.G(5869921, J$.R(5869913, 'obj', obj, false, false), '__esModule') : J$._()) ? J$.R(5869929, 'obj', obj, false, false) : J$.T(5869945, { default: J$.R(5869937, 'obj', obj, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5870297, J$e);
                        } finally {
                            if (J$.Fr(5870305))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isMimeType(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5870153, arguments.callee, this, arguments);
                            arguments = J$.N(5870161, 'arguments', arguments, true, false, false);
                            str = J$.N(5870169, 'str', str, true, false, false);
                            J$.F(5870065, (J$.T(5870033, 0, 22, false), J$.G(5870049, J$.R(5870041, '_assertString2', _assertString2, false, true), 'default')), false)(J$.R(5870057, 'str', str, false, false));
                            return J$.Rt(5870145, J$.C(319752, J$.C(319744, J$.M(5870089, J$.R(5870073, 'mimeTypeSimple', mimeTypeSimple, false, true), 'test', false)(J$.R(5870081, 'str', str, false, false))) ? J$._() : J$.M(5870113, J$.R(5870097, 'mimeTypeText', mimeTypeText, false, true), 'test', false)(J$.R(5870105, 'str', str, false, false))) ? J$._() : J$.M(5870137, J$.R(5870121, 'mimeTypeMultipart', mimeTypeMultipart, false, true), 'test', false)(J$.R(5870129, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(5870313, J$e);
                        } finally {
                            if (J$.Fr(5870321))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5870225, '_assertString', _assertString, false, false, false);
            J$.N(5870233, '_assertString2', _assertString2, false, false, false);
            _interopRequireDefault = J$.N(5870249, '_interopRequireDefault', J$.T(5870241, _interopRequireDefault, 12, false), true, false, false);
            J$.N(5870257, 'mimeTypeSimple', mimeTypeSimple, false, false, false);
            J$.N(5870265, 'mimeTypeText', mimeTypeText, false, false, false);
            J$.N(5870273, 'mimeTypeMultipart', mimeTypeMultipart, false, false, false);
            isMimeType = J$.N(5870289, 'isMimeType', J$.T(5870281, isMimeType, 12, false), true, false, false);
            J$.T(5869761, 'use strict', 21, false);
            J$.M(5869809, J$.I(typeof Object === 'undefined' ? Object = J$.R(5869769, 'Object', undefined, true, true) : Object = J$.R(5869769, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5869777, 'exports', undefined, true, true) : exports = J$.R(5869777, 'exports', exports, true, true)), J$.T(5869785, '__esModule', 21, false), J$.T(5869801, { value: J$.T(5869793, true, 23, false) }, 11, false));
            J$.P(5869833, J$.I(typeof exports === 'undefined' ? exports = J$.R(5869817, 'exports', undefined, true, true) : exports = J$.R(5869817, 'exports', exports, true, true)), 'default', J$.R(5869825, 'isMimeType', isMimeType, false, true));
            var _assertString = J$.W(5869865, '_assertString', J$.F(5869857, J$.I(typeof require === 'undefined' ? require = J$.R(5869841, 'require', undefined, true, true) : require = J$.R(5869841, 'require', require, true, true)), false)(J$.T(5869849, './util/assertString', 21, false)), _assertString, false, true);
            var _assertString2 = J$.W(5869897, '_assertString2', J$.F(5869889, J$.R(5869873, '_interopRequireDefault', _interopRequireDefault, false, true), false)(J$.R(5869881, '_assertString', _assertString, false, true)), _assertString2, false, true);
            var mimeTypeSimple = J$.W(5869993, 'mimeTypeSimple', J$.T(5869985, /^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i, 14, false), mimeTypeSimple, false, true);
            var mimeTypeText = J$.W(5870009, 'mimeTypeText', J$.T(5870001, /^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i, 14, false), mimeTypeText, false, true);
            var mimeTypeMultipart = J$.W(5870025, 'mimeTypeMultipart', J$.T(5870017, /^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i, 14, false), mimeTypeMultipart, false, true);
            J$.P(5870209, J$.I(typeof module === 'undefined' ? module = J$.R(5870177, 'module', undefined, true, true) : module = J$.R(5870177, 'module', module, true, true)), 'exports', J$.G(5870201, J$.I(typeof exports === 'undefined' ? exports = J$.R(5870185, 'exports', undefined, true, true) : exports = J$.R(5870185, 'exports', exports, true, true)), J$.T(5870193, 'default', 21, false)));
        } catch (J$e) {
            J$.Ex(5870329, J$e);
        } finally {
            if (J$.Sr(5870337))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

