J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(1364497, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/validation-schema/ValidationSchemaToMetadataTransformer.js');
            J$.N(1364505, 'ValidationMetadata_1', ValidationMetadata_1, false, false, false);
            J$.N(1364513, 'ValidationTypes_1', ValidationTypes_1, false, false, false);
            J$.N(1364521, 'ValidationSchemaToMetadataTransformer', ValidationSchemaToMetadataTransformer, false, false, false);
            J$.T(1363673, 'use strict', 21, false);
            J$.M(1363721, J$.I(typeof Object === 'undefined' ? Object = J$.R(1363681, 'Object', undefined, true, true) : Object = J$.R(1363681, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1363689, 'exports', undefined, true, true) : exports = J$.R(1363689, 'exports', exports, true, true)), J$.T(1363697, '__esModule', 21, false), J$.T(1363713, { value: J$.T(1363705, true, 23, false) }, 11, false));
            var ValidationMetadata_1 = J$.W(1363753, 'ValidationMetadata_1', J$.F(1363745, J$.I(typeof require === 'undefined' ? require = J$.R(1363729, 'require', undefined, true, true) : require = J$.R(1363729, 'require', require, true, true)), false)(J$.T(1363737, '../metadata/ValidationMetadata', 21, false)), ValidationMetadata_1, false, true);
            var ValidationTypes_1 = J$.W(1363785, 'ValidationTypes_1', J$.F(1363777, J$.I(typeof require === 'undefined' ? require = J$.R(1363761, 'require', undefined, true, true) : require = J$.R(1363761, 'require', require, true, true)), false)(J$.T(1363769, '../validation/ValidationTypes', 21, false)), ValidationTypes_1, false, true);
            var ValidationSchemaToMetadataTransformer = J$.W(1364465, 'ValidationSchemaToMetadataTransformer', J$.F(1364457, J$.T(1364449, function () {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1364417, arguments.callee, this, arguments);
                            function ValidationSchemaToMetadataTransformer() {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(1363793, arguments.callee, this, arguments);
                                            arguments = J$.N(1363801, 'arguments', arguments, true, false, false);
                                        } catch (J$e) {
                                            J$.Ex(1364529, J$e);
                                        } finally {
                                            if (J$.Fr(1364537))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1364425, 'arguments', arguments, true, false, false);
                            ValidationSchemaToMetadataTransformer = J$.N(1364441, 'ValidationSchemaToMetadataTransformer', J$.T(1364433, ValidationSchemaToMetadataTransformer, 12, false), true, false, false);
                            J$.P(1364393, J$.G(1363817, J$.R(1363809, 'ValidationSchemaToMetadataTransformer', ValidationSchemaToMetadataTransformer, false, false), 'prototype'), 'transform', J$.T(1364385, function (schema) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(1364353, arguments.callee, this, arguments);
                                            arguments = J$.N(1364361, 'arguments', arguments, true, false, false);
                                            schema = J$.N(1364369, 'schema', schema, true, false, false);
                                            J$.N(1364377, 'metadatas', metadatas, false, false, false);
                                            var metadatas = J$.W(1363833, 'metadatas', J$.T(1363825, [], 10, false), metadatas, false, false);
                                            J$.M(1364329, J$.M(1363865, J$.I(typeof Object === 'undefined' ? Object = J$.R(1363841, 'Object', undefined, true, true) : Object = J$.R(1363841, 'Object', Object, true, true)), 'keys', false)(J$.G(1363857, J$.R(1363849, 'schema', schema, false, false), 'properties')), 'forEach', false)(J$.T(1364321, function (property) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1364297, arguments.callee, this, arguments);
                                                            arguments = J$.N(1364305, 'arguments', arguments, true, false, false);
                                                            property = J$.N(1364313, 'property', property, true, false, false);
                                                            J$.M(1364289, J$.G(1363897, J$.G(1363881, J$.R(1363873, 'schema', schema, false, false), 'properties'), J$.R(1363889, 'property', property, false, false)), 'forEach', false)(J$.T(1364281, function (validation) {
                                                                jalangiLabel1:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1364241, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1364249, 'arguments', arguments, true, false, false);
                                                                            validation = J$.N(1364257, 'validation', validation, true, false, false);
                                                                            J$.N(1364265, 'validationOptions', validationOptions, false, false, false);
                                                                            J$.N(1364273, 'args', args, false, false, false);
                                                                            if (J$.C(78352, J$.U(99826, '!', J$.M(1363937, J$.G(1363913, J$.R(1363905, 'ValidationTypes_1', ValidationTypes_1, false, true), 'ValidationTypes'), 'isValid', false)(J$.G(1363929, J$.R(1363921, 'validation', validation, false, false), 'type')))))
                                                                                throw J$.F(1364017, J$.I(typeof Error === 'undefined' ? Error = J$.R(1363945, 'Error', undefined, true, true) : Error = J$.R(1363945, 'Error', Error, true, true)), true)(J$.B(99866, '+', J$.B(99858, '+', J$.B(99850, '+', J$.B(99842, '+', J$.B(99834, '+', J$.T(1363953, 'Validation schema ', 21, false), J$.G(1363969, J$.R(1363961, 'schema', schema, false, false), 'name')), J$.T(1363977, '#', 21, false)), J$.R(1363985, 'property', property, false, false)), J$.T(1363993, ' as incorrect type ', 21, false)), J$.G(1364009, J$.R(1364001, 'validation', validation, false, false), 'type')));
                                                                            var validationOptions = J$.W(1364097, 'validationOptions', J$.T(1364089, {
                                                                                message: J$.G(1364033, J$.R(1364025, 'validation', validation, false, false), 'message'),
                                                                                groups: J$.G(1364049, J$.R(1364041, 'validation', validation, false, false), 'groups'),
                                                                                always: J$.G(1364065, J$.R(1364057, 'validation', validation, false, false), 'always'),
                                                                                each: J$.G(1364081, J$.R(1364073, 'validation', validation, false, false), 'each')
                                                                            }, 11, false), validationOptions, false, false);
                                                                            var args = J$.W(1364193, 'args', J$.T(1364185, {
                                                                                type: J$.G(1364113, J$.R(1364105, 'validation', validation, false, false), 'type'),
                                                                                target: J$.G(1364129, J$.R(1364121, 'schema', schema, false, false), 'name'),
                                                                                propertyName: J$.R(1364137, 'property', property, false, false),
                                                                                constraints: J$.G(1364153, J$.R(1364145, 'validation', validation, false, false), 'constraints'),
                                                                                validationTypeOptions: J$.G(1364169, J$.R(1364161, 'validation', validation, false, false), 'options'),
                                                                                validationOptions: J$.R(1364177, 'validationOptions', validationOptions, false, false)
                                                                            }, 11, false), args, false, false);
                                                                            J$.M(1364233, J$.R(1364201, 'metadatas', metadatas, false, false), 'push', false)(J$.M(1364225, J$.R(1364209, 'ValidationMetadata_1', ValidationMetadata_1, false, true), 'ValidationMetadata', true)(J$.R(1364217, 'args', args, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(1364545, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1364553))
                                                                                continue jalangiLabel1;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1364561, J$e);
                                                        } finally {
                                                            if (J$.Fr(1364569))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            return J$.Rt(1364345, J$.R(1364337, 'metadatas', metadatas, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1364577, J$e);
                                        } finally {
                                            if (J$.Fr(1364585))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(1364409, J$.R(1364401, 'ValidationSchemaToMetadataTransformer', ValidationSchemaToMetadataTransformer, false, false));
                        } catch (J$e) {
                            J$.Ex(1364593, J$e);
                        } finally {
                            if (J$.Fr(1364601))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), ValidationSchemaToMetadataTransformer, false, true);
            J$.P(1364489, J$.I(typeof exports === 'undefined' ? exports = J$.R(1364473, 'exports', undefined, true, true) : exports = J$.R(1364473, 'exports', exports, true, true)), 'ValidationSchemaToMetadataTransformer', J$.R(1364481, 'ValidationSchemaToMetadataTransformer', ValidationSchemaToMetadataTransformer, false, true));
        } catch (J$e) {
            J$.Ex(1364609, J$e);
        } finally {
            if (J$.Sr(1364617))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

