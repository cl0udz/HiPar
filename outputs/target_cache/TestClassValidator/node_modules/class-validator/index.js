J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(5816833, '/home/james/nodejs/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/index.js');
            function __export(m) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5815633, arguments.callee, this, arguments);
                            arguments = J$.N(5815641, 'arguments', arguments, true, false, false);
                            m = J$.N(5815649, 'm', m, true, false, false);
                            J$.N(5815657, 'p', p, false, false, false);
                            for (var p in J$.H(5815617, J$.R(5815537, 'm', m, false, false))) {
                                J$.N(5815625, 'p', p, false, true, false);
                                {
                                    if (J$.C(317160, J$.U(601146, '!', J$.M(5815561, J$.I(typeof exports === 'undefined' ? exports = J$.R(5815545, 'exports', undefined, true, true) : exports = J$.R(5815545, 'exports', exports, true, true)), 'hasOwnProperty', false)(J$.R(5815553, 'p', p, false, false)))))
                                        J$.P(5815609, J$.I(typeof exports === 'undefined' ? exports = J$.R(5815569, 'exports', undefined, true, true) : exports = J$.R(5815569, 'exports', exports, true, true)), J$.R(5815577, 'p', p, false, false), J$.G(5815601, J$.R(5815585, 'm', m, false, false), J$.R(5815593, 'p', p, false, false)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(5816945, J$e);
                        } finally {
                            if (J$.Fr(5816953))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5816241, arguments.callee, this, arguments);
                            arguments = J$.N(5816249, 'arguments', arguments, true, false, false);
                            schemaNameOrObject = J$.N(5816257, 'schemaNameOrObject', schemaNameOrObject, true, false, false);
                            objectOrValidationOptions = J$.N(5816265, 'objectOrValidationOptions', objectOrValidationOptions, true, false, false);
                            maybeValidatorOptions = J$.N(5816273, 'maybeValidatorOptions', maybeValidatorOptions, true, false, false);
                            if (J$.C(317168, J$.B(601162, '===', J$.U(601154, 'typeof', J$.R(5816089, 'schemaNameOrObject', schemaNameOrObject, false, false)), J$.T(5816097, 'string', 21, false)))) {
                                return J$.Rt(5816169, J$.M(5816161, J$.M(5816129, J$.R(5816105, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(5816121, J$.R(5816113, 'Validator_1', Validator_1, false, true), 'Validator')), 'validate', false)(J$.R(5816137, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(5816145, 'objectOrValidationOptions', objectOrValidationOptions, false, false), J$.R(5816153, 'maybeValidatorOptions', maybeValidatorOptions, false, false)));
                            } else {
                                return J$.Rt(5816233, J$.M(5816225, J$.M(5816201, J$.R(5816177, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(5816193, J$.R(5816185, 'Validator_1', Validator_1, false, true), 'Validator')), 'validate', false)(J$.R(5816209, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(5816217, 'objectOrValidationOptions', objectOrValidationOptions, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5816961, J$e);
                        } finally {
                            if (J$.Fr(5816969))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5816457, arguments.callee, this, arguments);
                            arguments = J$.N(5816465, 'arguments', arguments, true, false, false);
                            schemaNameOrObject = J$.N(5816473, 'schemaNameOrObject', schemaNameOrObject, true, false, false);
                            objectOrValidationOptions = J$.N(5816481, 'objectOrValidationOptions', objectOrValidationOptions, true, false, false);
                            maybeValidatorOptions = J$.N(5816489, 'maybeValidatorOptions', maybeValidatorOptions, true, false, false);
                            if (J$.C(317176, J$.B(601178, '===', J$.U(601170, 'typeof', J$.R(5816305, 'schemaNameOrObject', schemaNameOrObject, false, false)), J$.T(5816313, 'string', 21, false)))) {
                                return J$.Rt(5816385, J$.M(5816377, J$.M(5816345, J$.R(5816321, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(5816337, J$.R(5816329, 'Validator_1', Validator_1, false, true), 'Validator')), 'validateOrReject', false)(J$.R(5816353, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(5816361, 'objectOrValidationOptions', objectOrValidationOptions, false, false), J$.R(5816369, 'maybeValidatorOptions', maybeValidatorOptions, false, false)));
                            } else {
                                return J$.Rt(5816449, J$.M(5816441, J$.M(5816417, J$.R(5816393, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(5816409, J$.R(5816401, 'Validator_1', Validator_1, false, true), 'Validator')), 'validateOrReject', false)(J$.R(5816425, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(5816433, 'objectOrValidationOptions', objectOrValidationOptions, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5816977, J$e);
                        } finally {
                            if (J$.Fr(5816985))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5816673, arguments.callee, this, arguments);
                            arguments = J$.N(5816681, 'arguments', arguments, true, false, false);
                            schemaNameOrObject = J$.N(5816689, 'schemaNameOrObject', schemaNameOrObject, true, false, false);
                            objectOrValidationOptions = J$.N(5816697, 'objectOrValidationOptions', objectOrValidationOptions, true, false, false);
                            maybeValidatorOptions = J$.N(5816705, 'maybeValidatorOptions', maybeValidatorOptions, true, false, false);
                            if (J$.C(317184, J$.B(601194, '===', J$.U(601186, 'typeof', J$.R(5816521, 'schemaNameOrObject', schemaNameOrObject, false, false)), J$.T(5816529, 'string', 21, false)))) {
                                return J$.Rt(5816601, J$.M(5816593, J$.M(5816561, J$.R(5816537, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(5816553, J$.R(5816545, 'Validator_1', Validator_1, false, true), 'Validator')), 'validateSync', false)(J$.R(5816569, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(5816577, 'objectOrValidationOptions', objectOrValidationOptions, false, false), J$.R(5816585, 'maybeValidatorOptions', maybeValidatorOptions, false, false)));
                            } else {
                                return J$.Rt(5816665, J$.M(5816657, J$.M(5816633, J$.R(5816609, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(5816625, J$.R(5816617, 'Validator_1', Validator_1, false, true), 'Validator')), 'validateSync', false)(J$.R(5816641, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(5816649, 'objectOrValidationOptions', objectOrValidationOptions, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5816993, J$e);
                        } finally {
                            if (J$.Fr(5817001))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function registerSchema(schema) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5816785, arguments.callee, this, arguments);
                            arguments = J$.N(5816793, 'arguments', arguments, true, false, false);
                            schema = J$.N(5816801, 'schema', schema, true, false, false);
                            J$.M(5816777, J$.M(5816761, J$.R(5816737, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(5816753, J$.R(5816745, 'MetadataStorage_1', MetadataStorage_1, false, true), 'MetadataStorage')), 'addValidationSchema', false)(J$.R(5816769, 'schema', schema, false, false));
                        } catch (J$e) {
                            J$.Ex(5817009, J$e);
                        } finally {
                            if (J$.Fr(5817017))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            __export = J$.N(5816849, '__export', J$.T(5816841, __export, 12, false), true, false, false);
            J$.N(5816857, 'MetadataStorage_1', MetadataStorage_1, false, false, false);
            J$.N(5816865, 'Validator_1', Validator_1, false, false, false);
            J$.N(5816873, 'container_1', container_1, false, false, false);
            validate = J$.N(5816889, 'validate', J$.T(5816881, validate, 12, false), true, false, false);
            validateOrReject = J$.N(5816905, 'validateOrReject', J$.T(5816897, validateOrReject, 12, false), true, false, false);
            validateSync = J$.N(5816921, 'validateSync', J$.T(5816913, validateSync, 12, false), true, false, false);
            registerSchema = J$.N(5816937, 'registerSchema', J$.T(5816929, registerSchema, 12, false), true, false, false);
            J$.T(5815529, 'use strict', 21, false);
            J$.M(5815705, J$.I(typeof Object === 'undefined' ? Object = J$.R(5815665, 'Object', undefined, true, true) : Object = J$.R(5815665, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(5815673, 'exports', undefined, true, true) : exports = J$.R(5815673, 'exports', exports, true, true)), J$.T(5815681, '__esModule', 21, false), J$.T(5815697, { value: J$.T(5815689, true, 23, false) }, 11, false));
            var MetadataStorage_1 = J$.W(5815737, 'MetadataStorage_1', J$.F(5815729, J$.I(typeof require === 'undefined' ? require = J$.R(5815713, 'require', undefined, true, true) : require = J$.R(5815713, 'require', require, true, true)), false)(J$.T(5815721, './metadata/MetadataStorage', 21, false)), MetadataStorage_1, false, true);
            var Validator_1 = J$.W(5815769, 'Validator_1', J$.F(5815761, J$.I(typeof require === 'undefined' ? require = J$.R(5815745, 'require', undefined, true, true) : require = J$.R(5815745, 'require', require, true, true)), false)(J$.T(5815753, './validation/Validator', 21, false)), Validator_1, false, true);
            var container_1 = J$.W(5815801, 'container_1', J$.F(5815793, J$.I(typeof require === 'undefined' ? require = J$.R(5815777, 'require', undefined, true, true) : require = J$.R(5815777, 'require', require, true, true)), false)(J$.T(5815785, './container', 21, false)), container_1, false, true);
            J$.F(5815841, J$.R(5815809, '__export', __export, false, true), false)(J$.F(5815833, J$.I(typeof require === 'undefined' ? require = J$.R(5815817, 'require', undefined, true, true) : require = J$.R(5815817, 'require', require, true, true)), false)(J$.T(5815825, './container', 21, false)));
            J$.F(5815881, J$.R(5815849, '__export', __export, false, true), false)(J$.F(5815873, J$.I(typeof require === 'undefined' ? require = J$.R(5815857, 'require', undefined, true, true) : require = J$.R(5815857, 'require', require, true, true)), false)(J$.T(5815865, './decorator/decorators', 21, false)));
            J$.F(5815921, J$.R(5815889, '__export', __export, false, true), false)(J$.F(5815913, J$.I(typeof require === 'undefined' ? require = J$.R(5815897, 'require', undefined, true, true) : require = J$.R(5815897, 'require', require, true, true)), false)(J$.T(5815905, './validation/ValidationError', 21, false)));
            J$.F(5815961, J$.R(5815929, '__export', __export, false, true), false)(J$.F(5815953, J$.I(typeof require === 'undefined' ? require = J$.R(5815937, 'require', undefined, true, true) : require = J$.R(5815937, 'require', require, true, true)), false)(J$.T(5815945, './validation/ValidationTypes', 21, false)));
            J$.F(5816001, J$.R(5815969, '__export', __export, false, true), false)(J$.F(5815993, J$.I(typeof require === 'undefined' ? require = J$.R(5815977, 'require', undefined, true, true) : require = J$.R(5815977, 'require', require, true, true)), false)(J$.T(5815985, './validation/Validator', 21, false)));
            J$.F(5816041, J$.R(5816009, '__export', __export, false, true), false)(J$.F(5816033, J$.I(typeof require === 'undefined' ? require = J$.R(5816017, 'require', undefined, true, true) : require = J$.R(5816017, 'require', require, true, true)), false)(J$.T(5816025, './register-decorator', 21, false)));
            J$.F(5816081, J$.R(5816049, '__export', __export, false, true), false)(J$.F(5816073, J$.I(typeof require === 'undefined' ? require = J$.R(5816057, 'require', undefined, true, true) : require = J$.R(5816057, 'require', require, true, true)), false)(J$.T(5816065, './metadata/MetadataStorage', 21, false)));
            J$.P(5816297, J$.I(typeof exports === 'undefined' ? exports = J$.R(5816281, 'exports', undefined, true, true) : exports = J$.R(5816281, 'exports', exports, true, true)), 'validate', J$.R(5816289, 'validate', validate, false, true));
            J$.P(5816513, J$.I(typeof exports === 'undefined' ? exports = J$.R(5816497, 'exports', undefined, true, true) : exports = J$.R(5816497, 'exports', exports, true, true)), 'validateOrReject', J$.R(5816505, 'validateOrReject', validateOrReject, false, true));
            J$.P(5816729, J$.I(typeof exports === 'undefined' ? exports = J$.R(5816713, 'exports', undefined, true, true) : exports = J$.R(5816713, 'exports', exports, true, true)), 'validateSync', J$.R(5816721, 'validateSync', validateSync, false, true));
            J$.P(5816825, J$.I(typeof exports === 'undefined' ? exports = J$.R(5816809, 'exports', undefined, true, true) : exports = J$.R(5816809, 'exports', exports, true, true)), 'registerSchema', J$.R(5816817, 'registerSchema', registerSchema, false, true));
        } catch (J$e) {
            J$.Ex(5817025, J$e);
        } finally {
            if (J$.Sr(5817033))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

