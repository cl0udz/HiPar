J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(1175753, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/index.js');
            function __export(m) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1174553, arguments.callee, this, arguments);
                            arguments = J$.N(1174561, 'arguments', arguments, true, false, false);
                            m = J$.N(1174569, 'm', m, true, false, false);
                            J$.N(1174577, 'p', p, false, false, false);
                            for (var p in J$.H(1174537, J$.R(1174457, 'm', m, false, false))) {
                                J$.N(1174545, 'p', p, false, true, false);
                                {
                                    if (J$.C(66640, J$.U(84610, '!', J$.M(1174481, J$.I(typeof exports === 'undefined' ? exports = J$.R(1174465, 'exports', undefined, true, true) : exports = J$.R(1174465, 'exports', exports, true, true)), 'hasOwnProperty', false)(J$.R(1174473, 'p', p, false, false)))))
                                        J$.P(1174529, J$.I(typeof exports === 'undefined' ? exports = J$.R(1174489, 'exports', undefined, true, true) : exports = J$.R(1174489, 'exports', exports, true, true)), J$.R(1174497, 'p', p, false, false), J$.G(1174521, J$.R(1174505, 'm', m, false, false), J$.R(1174513, 'p', p, false, false)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1175865, J$e);
                        } finally {
                            if (J$.Fr(1175873))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1175161, arguments.callee, this, arguments);
                            arguments = J$.N(1175169, 'arguments', arguments, true, false, false);
                            schemaNameOrObject = J$.N(1175177, 'schemaNameOrObject', schemaNameOrObject, true, false, false);
                            objectOrValidationOptions = J$.N(1175185, 'objectOrValidationOptions', objectOrValidationOptions, true, false, false);
                            maybeValidatorOptions = J$.N(1175193, 'maybeValidatorOptions', maybeValidatorOptions, true, false, false);
                            if (J$.C(66648, J$.B(84626, '===', J$.U(84618, 'typeof', J$.R(1175009, 'schemaNameOrObject', schemaNameOrObject, false, false)), J$.T(1175017, 'string', 21, false)))) {
                                return J$.Rt(1175089, J$.M(1175081, J$.M(1175049, J$.R(1175025, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(1175041, J$.R(1175033, 'Validator_1', Validator_1, false, true), 'Validator')), 'validate', false)(J$.R(1175057, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(1175065, 'objectOrValidationOptions', objectOrValidationOptions, false, false), J$.R(1175073, 'maybeValidatorOptions', maybeValidatorOptions, false, false)));
                            } else {
                                return J$.Rt(1175153, J$.M(1175145, J$.M(1175121, J$.R(1175097, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(1175113, J$.R(1175105, 'Validator_1', Validator_1, false, true), 'Validator')), 'validate', false)(J$.R(1175129, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(1175137, 'objectOrValidationOptions', objectOrValidationOptions, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(1175881, J$e);
                        } finally {
                            if (J$.Fr(1175889))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1175377, arguments.callee, this, arguments);
                            arguments = J$.N(1175385, 'arguments', arguments, true, false, false);
                            schemaNameOrObject = J$.N(1175393, 'schemaNameOrObject', schemaNameOrObject, true, false, false);
                            objectOrValidationOptions = J$.N(1175401, 'objectOrValidationOptions', objectOrValidationOptions, true, false, false);
                            maybeValidatorOptions = J$.N(1175409, 'maybeValidatorOptions', maybeValidatorOptions, true, false, false);
                            if (J$.C(66656, J$.B(84642, '===', J$.U(84634, 'typeof', J$.R(1175225, 'schemaNameOrObject', schemaNameOrObject, false, false)), J$.T(1175233, 'string', 21, false)))) {
                                return J$.Rt(1175305, J$.M(1175297, J$.M(1175265, J$.R(1175241, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(1175257, J$.R(1175249, 'Validator_1', Validator_1, false, true), 'Validator')), 'validateOrReject', false)(J$.R(1175273, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(1175281, 'objectOrValidationOptions', objectOrValidationOptions, false, false), J$.R(1175289, 'maybeValidatorOptions', maybeValidatorOptions, false, false)));
                            } else {
                                return J$.Rt(1175369, J$.M(1175361, J$.M(1175337, J$.R(1175313, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(1175329, J$.R(1175321, 'Validator_1', Validator_1, false, true), 'Validator')), 'validateOrReject', false)(J$.R(1175345, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(1175353, 'objectOrValidationOptions', objectOrValidationOptions, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(1175897, J$e);
                        } finally {
                            if (J$.Fr(1175905))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1175593, arguments.callee, this, arguments);
                            arguments = J$.N(1175601, 'arguments', arguments, true, false, false);
                            schemaNameOrObject = J$.N(1175609, 'schemaNameOrObject', schemaNameOrObject, true, false, false);
                            objectOrValidationOptions = J$.N(1175617, 'objectOrValidationOptions', objectOrValidationOptions, true, false, false);
                            maybeValidatorOptions = J$.N(1175625, 'maybeValidatorOptions', maybeValidatorOptions, true, false, false);
                            if (J$.C(66664, J$.B(84658, '===', J$.U(84650, 'typeof', J$.R(1175441, 'schemaNameOrObject', schemaNameOrObject, false, false)), J$.T(1175449, 'string', 21, false)))) {
                                return J$.Rt(1175521, J$.M(1175513, J$.M(1175481, J$.R(1175457, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(1175473, J$.R(1175465, 'Validator_1', Validator_1, false, true), 'Validator')), 'validateSync', false)(J$.R(1175489, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(1175497, 'objectOrValidationOptions', objectOrValidationOptions, false, false), J$.R(1175505, 'maybeValidatorOptions', maybeValidatorOptions, false, false)));
                            } else {
                                return J$.Rt(1175585, J$.M(1175577, J$.M(1175553, J$.R(1175529, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(1175545, J$.R(1175537, 'Validator_1', Validator_1, false, true), 'Validator')), 'validateSync', false)(J$.R(1175561, 'schemaNameOrObject', schemaNameOrObject, false, false), J$.R(1175569, 'objectOrValidationOptions', objectOrValidationOptions, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(1175913, J$e);
                        } finally {
                            if (J$.Fr(1175921))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function registerSchema(schema) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1175705, arguments.callee, this, arguments);
                            arguments = J$.N(1175713, 'arguments', arguments, true, false, false);
                            schema = J$.N(1175721, 'schema', schema, true, false, false);
                            J$.M(1175697, J$.M(1175681, J$.R(1175657, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(1175673, J$.R(1175665, 'MetadataStorage_1', MetadataStorage_1, false, true), 'MetadataStorage')), 'addValidationSchema', false)(J$.R(1175689, 'schema', schema, false, false));
                        } catch (J$e) {
                            J$.Ex(1175929, J$e);
                        } finally {
                            if (J$.Fr(1175937))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            __export = J$.N(1175769, '__export', J$.T(1175761, __export, 12, false), true, false, false);
            J$.N(1175777, 'MetadataStorage_1', MetadataStorage_1, false, false, false);
            J$.N(1175785, 'Validator_1', Validator_1, false, false, false);
            J$.N(1175793, 'container_1', container_1, false, false, false);
            validate = J$.N(1175809, 'validate', J$.T(1175801, validate, 12, false), true, false, false);
            validateOrReject = J$.N(1175825, 'validateOrReject', J$.T(1175817, validateOrReject, 12, false), true, false, false);
            validateSync = J$.N(1175841, 'validateSync', J$.T(1175833, validateSync, 12, false), true, false, false);
            registerSchema = J$.N(1175857, 'registerSchema', J$.T(1175849, registerSchema, 12, false), true, false, false);
            J$.T(1174449, 'use strict', 21, false);
            J$.M(1174625, J$.I(typeof Object === 'undefined' ? Object = J$.R(1174585, 'Object', undefined, true, true) : Object = J$.R(1174585, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(1174593, 'exports', undefined, true, true) : exports = J$.R(1174593, 'exports', exports, true, true)), J$.T(1174601, '__esModule', 21, false), J$.T(1174617, { value: J$.T(1174609, true, 23, false) }, 11, false));
            var MetadataStorage_1 = J$.W(1174657, 'MetadataStorage_1', J$.F(1174649, J$.I(typeof require === 'undefined' ? require = J$.R(1174633, 'require', undefined, true, true) : require = J$.R(1174633, 'require', require, true, true)), false)(J$.T(1174641, './metadata/MetadataStorage', 21, false)), MetadataStorage_1, false, true);
            var Validator_1 = J$.W(1174689, 'Validator_1', J$.F(1174681, J$.I(typeof require === 'undefined' ? require = J$.R(1174665, 'require', undefined, true, true) : require = J$.R(1174665, 'require', require, true, true)), false)(J$.T(1174673, './validation/Validator', 21, false)), Validator_1, false, true);
            var container_1 = J$.W(1174721, 'container_1', J$.F(1174713, J$.I(typeof require === 'undefined' ? require = J$.R(1174697, 'require', undefined, true, true) : require = J$.R(1174697, 'require', require, true, true)), false)(J$.T(1174705, './container', 21, false)), container_1, false, true);
            J$.F(1174761, J$.R(1174729, '__export', __export, false, true), false)(J$.F(1174753, J$.I(typeof require === 'undefined' ? require = J$.R(1174737, 'require', undefined, true, true) : require = J$.R(1174737, 'require', require, true, true)), false)(J$.T(1174745, './container', 21, false)));
            J$.F(1174801, J$.R(1174769, '__export', __export, false, true), false)(J$.F(1174793, J$.I(typeof require === 'undefined' ? require = J$.R(1174777, 'require', undefined, true, true) : require = J$.R(1174777, 'require', require, true, true)), false)(J$.T(1174785, './decorator/decorators', 21, false)));
            J$.F(1174841, J$.R(1174809, '__export', __export, false, true), false)(J$.F(1174833, J$.I(typeof require === 'undefined' ? require = J$.R(1174817, 'require', undefined, true, true) : require = J$.R(1174817, 'require', require, true, true)), false)(J$.T(1174825, './validation/ValidationError', 21, false)));
            J$.F(1174881, J$.R(1174849, '__export', __export, false, true), false)(J$.F(1174873, J$.I(typeof require === 'undefined' ? require = J$.R(1174857, 'require', undefined, true, true) : require = J$.R(1174857, 'require', require, true, true)), false)(J$.T(1174865, './validation/ValidationTypes', 21, false)));
            J$.F(1174921, J$.R(1174889, '__export', __export, false, true), false)(J$.F(1174913, J$.I(typeof require === 'undefined' ? require = J$.R(1174897, 'require', undefined, true, true) : require = J$.R(1174897, 'require', require, true, true)), false)(J$.T(1174905, './validation/Validator', 21, false)));
            J$.F(1174961, J$.R(1174929, '__export', __export, false, true), false)(J$.F(1174953, J$.I(typeof require === 'undefined' ? require = J$.R(1174937, 'require', undefined, true, true) : require = J$.R(1174937, 'require', require, true, true)), false)(J$.T(1174945, './register-decorator', 21, false)));
            J$.F(1175001, J$.R(1174969, '__export', __export, false, true), false)(J$.F(1174993, J$.I(typeof require === 'undefined' ? require = J$.R(1174977, 'require', undefined, true, true) : require = J$.R(1174977, 'require', require, true, true)), false)(J$.T(1174985, './metadata/MetadataStorage', 21, false)));
            J$.P(1175217, J$.I(typeof exports === 'undefined' ? exports = J$.R(1175201, 'exports', undefined, true, true) : exports = J$.R(1175201, 'exports', exports, true, true)), 'validate', J$.R(1175209, 'validate', validate, false, true));
            J$.P(1175433, J$.I(typeof exports === 'undefined' ? exports = J$.R(1175417, 'exports', undefined, true, true) : exports = J$.R(1175417, 'exports', exports, true, true)), 'validateOrReject', J$.R(1175425, 'validateOrReject', validateOrReject, false, true));
            J$.P(1175649, J$.I(typeof exports === 'undefined' ? exports = J$.R(1175633, 'exports', undefined, true, true) : exports = J$.R(1175633, 'exports', exports, true, true)), 'validateSync', J$.R(1175641, 'validateSync', validateSync, false, true));
            J$.P(1175745, J$.I(typeof exports === 'undefined' ? exports = J$.R(1175729, 'exports', undefined, true, true) : exports = J$.R(1175729, 'exports', exports, true, true)), 'registerSchema', J$.R(1175737, 'registerSchema', registerSchema, false, true));
        } catch (J$e) {
            J$.Ex(1175945, J$e);
        } finally {
            if (J$.Sr(1175953))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

