J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2185305, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestClassValidator/node_modules/class-validator/register-decorator.js');
            function registerDecorator(options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2185233, arguments.callee, this, arguments);
                            arguments = J$.N(2185241, 'arguments', arguments, true, false, false);
                            options = J$.N(2185249, 'options', options, true, false, false);
                            J$.N(2185257, 'constraintCls', constraintCls, false, false, false);
                            J$.N(2185265, 'validator_1', validator_1, false, false, false);
                            J$.N(2185273, 'validationMetadataArgs', validationMetadataArgs, false, false, false);
                            var constraintCls;
                            if (J$.C(129544, J$.B(266082, 'instanceof', J$.G(2184585, J$.R(2184577, 'options', options, false, false), 'validator'), J$.I(typeof Function === 'undefined' ? Function = J$.R(2184593, 'Function', undefined, true, true) : Function = J$.R(2184593, 'Function', Function, true, true))))) {
                                constraintCls = J$.W(2184617, 'constraintCls', J$.G(2184609, J$.R(2184601, 'options', options, false, false), 'validator'), constraintCls, false, false);
                            } else {
                                var validator_1 = J$.W(2184641, 'validator_1', J$.G(2184633, J$.R(2184625, 'options', options, false, false), 'validator'), validator_1, false, false);
                                constraintCls = J$.W(2184953, 'constraintCls', J$.F(2184945, J$.T(2184937, function () {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(2184905, arguments.callee, this, arguments);
                                                function CustomConstraint() {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2184649, arguments.callee, this, arguments);
                                                                arguments = J$.N(2184657, 'arguments', arguments, true, false, false);
                                                            } catch (J$e) {
                                                                J$.Ex(2185369, J$e);
                                                            } finally {
                                                                if (J$.Fr(2185377))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }
                                                arguments = J$.N(2184913, 'arguments', arguments, true, false, false);
                                                CustomConstraint = J$.N(2184929, 'CustomConstraint', J$.T(2184921, CustomConstraint, 12, false), true, false, false);
                                                J$.P(2184761, J$.G(2184673, J$.R(2184665, 'CustomConstraint', CustomConstraint, false, false), 'prototype'), 'validate', J$.T(2184753, function (value, validationArguments) {
                                                    jalangiLabel1:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2184721, arguments.callee, this, arguments);
                                                                arguments = J$.N(2184729, 'arguments', arguments, true, false, false);
                                                                value = J$.N(2184737, 'value', value, true, false, false);
                                                                validationArguments = J$.N(2184745, 'validationArguments', validationArguments, true, false, false);
                                                                return J$.Rt(2184713, J$.M(2184705, J$.R(2184681, 'validator_1', validator_1, false, false), 'validate', false)(J$.R(2184689, 'value', value, false, false), J$.R(2184697, 'validationArguments', validationArguments, false, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(2185385, J$e);
                                                            } finally {
                                                                if (J$.Fr(2185393))
                                                                    continue jalangiLabel1;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                J$.P(2184881, J$.G(2184777, J$.R(2184769, 'CustomConstraint', CustomConstraint, false, false), 'prototype'), 'defaultMessage', J$.T(2184873, function (validationArguments) {
                                                    jalangiLabel2:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2184849, arguments.callee, this, arguments);
                                                                arguments = J$.N(2184857, 'arguments', arguments, true, false, false);
                                                                validationArguments = J$.N(2184865, 'validationArguments', validationArguments, true, false, false);
                                                                if (J$.C(129536, J$.G(2184793, J$.R(2184785, 'validator_1', validator_1, false, false), 'defaultMessage'))) {
                                                                    return J$.Rt(2184825, J$.M(2184817, J$.R(2184801, 'validator_1', validator_1, false, false), 'defaultMessage', false)(J$.R(2184809, 'validationArguments', validationArguments, false, false)));
                                                                }
                                                                return J$.Rt(2184841, J$.T(2184833, '', 21, false));
                                                            } catch (J$e) {
                                                                J$.Ex(2185401, J$e);
                                                            } finally {
                                                                if (J$.Fr(2185409))
                                                                    continue jalangiLabel2;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(2184897, J$.R(2184889, 'CustomConstraint', CustomConstraint, false, false));
                                            } catch (J$e) {
                                                J$.Ex(2185417, J$e);
                                            } finally {
                                                if (J$.Fr(2185425))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), false)(), constraintCls, false, false);
                                J$.M(2185049, J$.M(2184985, J$.R(2184961, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(2184977, J$.R(2184969, 'MetadataStorage_1', MetadataStorage_1, false, true), 'MetadataStorage')), 'addConstraintMetadata', false)(J$.M(2185041, J$.R(2184993, 'ConstraintMetadata_1', ConstraintMetadata_1, false, true), 'ConstraintMetadata', true)(J$.R(2185001, 'constraintCls', constraintCls, false, false), J$.G(2185017, J$.R(2185009, 'options', options, false, false), 'name'), J$.G(2185033, J$.R(2185025, 'options', options, false, false), 'async')));
                            }
                            var validationMetadataArgs = J$.W(2185161, 'validationMetadataArgs', J$.T(2185153, {
                                type: J$.G(2185073, J$.G(2185065, J$.R(2185057, 'ValidationTypes_1', ValidationTypes_1, false, true), 'ValidationTypes'), 'CUSTOM_VALIDATION'),
                                target: J$.G(2185089, J$.R(2185081, 'options', options, false, false), 'target'),
                                propertyName: J$.G(2185105, J$.R(2185097, 'options', options, false, false), 'propertyName'),
                                validationOptions: J$.G(2185121, J$.R(2185113, 'options', options, false, false), 'options'),
                                constraintCls: J$.R(2185129, 'constraintCls', constraintCls, false, false),
                                constraints: J$.G(2185145, J$.R(2185137, 'options', options, false, false), 'constraints')
                            }, 11, false), validationMetadataArgs, false, false);
                            J$.M(2185225, J$.M(2185193, J$.R(2185169, 'container_1', container_1, false, true), 'getFromContainer', false)(J$.G(2185185, J$.R(2185177, 'MetadataStorage_1', MetadataStorage_1, false, true), 'MetadataStorage')), 'addValidationMetadata', false)(J$.M(2185217, J$.R(2185201, 'ValidationMetadata_1', ValidationMetadata_1, false, true), 'ValidationMetadata', true)(J$.R(2185209, 'validationMetadataArgs', validationMetadataArgs, false, false)));
                        } catch (J$e) {
                            J$.Ex(2185433, J$e);
                        } finally {
                            if (J$.Fr(2185441))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2185313, 'MetadataStorage_1', MetadataStorage_1, false, false, false);
            J$.N(2185321, 'ConstraintMetadata_1', ConstraintMetadata_1, false, false, false);
            J$.N(2185329, 'ValidationMetadata_1', ValidationMetadata_1, false, false, false);
            J$.N(2185337, 'ValidationTypes_1', ValidationTypes_1, false, false, false);
            J$.N(2185345, 'container_1', container_1, false, false, false);
            registerDecorator = J$.N(2185361, 'registerDecorator', J$.T(2185353, registerDecorator, 12, false), true, false, false);
            J$.T(2184361, 'use strict', 21, false);
            J$.M(2184409, J$.I(typeof Object === 'undefined' ? Object = J$.R(2184369, 'Object', undefined, true, true) : Object = J$.R(2184369, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2184377, 'exports', undefined, true, true) : exports = J$.R(2184377, 'exports', exports, true, true)), J$.T(2184385, '__esModule', 21, false), J$.T(2184401, { value: J$.T(2184393, true, 23, false) }, 11, false));
            var MetadataStorage_1 = J$.W(2184441, 'MetadataStorage_1', J$.F(2184433, J$.I(typeof require === 'undefined' ? require = J$.R(2184417, 'require', undefined, true, true) : require = J$.R(2184417, 'require', require, true, true)), false)(J$.T(2184425, './metadata/MetadataStorage', 21, false)), MetadataStorage_1, false, true);
            var ConstraintMetadata_1 = J$.W(2184473, 'ConstraintMetadata_1', J$.F(2184465, J$.I(typeof require === 'undefined' ? require = J$.R(2184449, 'require', undefined, true, true) : require = J$.R(2184449, 'require', require, true, true)), false)(J$.T(2184457, './metadata/ConstraintMetadata', 21, false)), ConstraintMetadata_1, false, true);
            var ValidationMetadata_1 = J$.W(2184505, 'ValidationMetadata_1', J$.F(2184497, J$.I(typeof require === 'undefined' ? require = J$.R(2184481, 'require', undefined, true, true) : require = J$.R(2184481, 'require', require, true, true)), false)(J$.T(2184489, './metadata/ValidationMetadata', 21, false)), ValidationMetadata_1, false, true);
            var ValidationTypes_1 = J$.W(2184537, 'ValidationTypes_1', J$.F(2184529, J$.I(typeof require === 'undefined' ? require = J$.R(2184513, 'require', undefined, true, true) : require = J$.R(2184513, 'require', require, true, true)), false)(J$.T(2184521, './validation/ValidationTypes', 21, false)), ValidationTypes_1, false, true);
            var container_1 = J$.W(2184569, 'container_1', J$.F(2184561, J$.I(typeof require === 'undefined' ? require = J$.R(2184545, 'require', undefined, true, true) : require = J$.R(2184545, 'require', require, true, true)), false)(J$.T(2184553, './container', 21, false)), container_1, false, true);
            J$.P(2185297, J$.I(typeof exports === 'undefined' ? exports = J$.R(2185281, 'exports', undefined, true, true) : exports = J$.R(2185281, 'exports', exports, true, true)), 'registerDecorator', J$.R(2185289, 'registerDecorator', registerDecorator, false, true));
        } catch (J$e) {
            J$.Ex(2185449, J$e);
        } finally {
            if (J$.Sr(2185457))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

