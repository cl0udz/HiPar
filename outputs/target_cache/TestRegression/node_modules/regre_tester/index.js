J$.noInstrEval = false;
jalangiLabel16:
    while (true) {
        try {
            J$.Se(1633, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestRegression/node_modules/regre_tester/index.js');
            function do_test(user_input) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(225, arguments.callee, this, arguments);
                            arguments = J$.N(233, 'arguments', arguments, true, false, false);
                            user_input = J$.N(241, 'user_input', user_input, true, false, false);
                            J$.F(33, J$.R(17, 'one_layer_hipar', one_layer_hipar, false, true), false)(J$.R(25, 'user_input', user_input, false, false));
                            J$.F(57, J$.R(41, 'multi_layer_hipar', multi_layer_hipar, false, true), false)(J$.R(49, 'user_input', user_input, false, false));
                            J$.F(81, J$.R(65, 'mix_hipar', mix_hipar, false, true), false)(J$.R(73, 'user_input', user_input, false, false));
                            J$.F(105, J$.R(89, 'proto_hipar', proto_hipar, false, true), false)(J$.R(97, 'user_input', user_input, false, false));
                            J$.F(137, J$.R(113, 'child_hipar', child_hipar, false, true), false)(J$.T(129, { 'root': J$.R(121, 'user_input', user_input, false, false) }, 11, false));
                            J$.F(169, J$.R(145, 'time_hipar', time_hipar, false, true), false)(J$.T(161, { 'root': J$.R(153, 'user_input', user_input, false, false) }, 11, false));
                            J$.F(193, J$.R(177, 'func_var_nested_hipar', func_var_nested_hipar, false, true), false)(J$.R(185, 'user_input', user_input, false, false));
                            J$.F(217, J$.R(201, 'expr_func_nested_hipar', expr_func_nested_hipar, false, true), false)(J$.R(209, 'user_input', user_input, false, false));
                        } catch (J$e) {
                            J$.Ex(1793, J$e);
                        } finally {
                            if (J$.Fr(1801))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function one_layer_hipar(obj) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(345, arguments.callee, this, arguments);
                            arguments = J$.N(353, 'arguments', arguments, true, false, false);
                            obj = J$.N(361, 'obj', obj, true, false, false);
                            J$.N(369, 'b', b, false, false, false);
                            if (J$.C(8, J$.G(289, J$.R(273, 'obj', obj, false, false), J$.T(281, 'explicit_one_layer_hipar', 21, false)))) {
                                return J$.Rt(297, undefined);
                            }
                            if (J$.C(16, J$.T(305, false, 23, false))) {
                                var b = J$.W(337, 'b', J$.G(329, J$.R(313, 'obj', obj, false, false), J$.T(321, 'implicit_one_layer_hipar', 21, false)), b, false, false);
                            }
                        } catch (J$e) {
                            J$.Ex(1809, J$e);
                        } finally {
                            if (J$.Fr(1817))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function multi_layer_hipar(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(473, arguments.callee, this, arguments);
                            arguments = J$.N(481, 'arguments', arguments, true, false, false);
                            obj = J$.N(489, 'obj', obj, true, false, false);
                            J$.N(497, 'cmd', cmd, false, false, false);
                            J$.P(393, J$.R(377, 'obj', obj, false, false), 'a', J$.T(385, {}, 11, false));
                            J$.P(425, J$.G(409, J$.R(401, 'obj', obj, false, false), 'a'), 'b', J$.T(417, {}, 11, false));
                            var cmd = J$.W(465, 'cmd', J$.G(457, J$.G(449, J$.G(441, J$.R(433, 'obj', obj, false, false), 'a'), 'b'), 'multi_layer_hipar'), cmd, false, false);
                        } catch (J$e) {
                            J$.Ex(1825, J$e);
                        } finally {
                            if (J$.Fr(1833))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mix_hipar(obj) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(657, arguments.callee, this, arguments);
                            arguments = J$.N(665, 'arguments', arguments, true, false, false);
                            obj = J$.N(673, 'obj', obj, true, false, false);
                            J$.N(681, 'cmd', cmd, false, false, false);
                            J$.P(521, J$.R(505, 'obj', obj, false, false), 'a', J$.T(513, {}, 11, false));
                            J$.P(553, J$.G(537, J$.R(529, 'obj', obj, false, false), 'a'), 'b', J$.T(545, {}, 11, false));
                            J$.P(593, J$.G(577, J$.G(569, J$.R(561, 'obj', obj, false, false), 'a'), 'b'), 'c', J$.T(585, {}, 11, false));
                            var cmd = J$.W(649, 'cmd', J$.G(641, J$.G(633, J$.G(625, J$.G(609, J$.R(601, 'obj', obj, false, false), 'a'), J$.T(617, 'b', 21, false)), 'c'), 'mix_hipar'), cmd, false, false);
                        } catch (J$e) {
                            J$.Ex(1841, J$e);
                        } finally {
                            if (J$.Fr(1849))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function proto_hipar(obj) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(953, arguments.callee, this, arguments);
                            arguments = J$.N(961, 'arguments', arguments, true, false, false);
                            obj = J$.N(969, 'obj', obj, true, false, false);
                            J$.N(977, 'person', person, false, false, false);
                            J$.N(985, 'overwritten_obj', overwritten_obj, false, false, false);
                            J$.N(993, 'cmd1', cmd1, false, false, false);
                            J$.N(1001, 'cmd2', cmd2, false, false, false);
                            J$.N(1009, 'cmd3', cmd3, false, false, false);
                            var person = J$.W(801, 'person', J$.T(793, function person(firstname, lastname) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(761, arguments.callee, this, arguments);
                                            arguments = J$.N(769, 'arguments', arguments, true, false, false);
                                            firstname = J$.N(777, 'firstname', firstname, true, false, false);
                                            lastname = J$.N(785, 'lastname', lastname, true, false, false);
                                            J$.P(705, J$.R(689, 'this', this, false, false), 'normal_hipar', J$.R(697, 'firstname', firstname, false, false)), J$.P(753, J$.R(713, 'this', this, false, false), 'func_hipar', J$.T(745, function () {
                                                jalangiLabel4:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(729, arguments.callee, this, arguments);
                                                            arguments = J$.N(737, 'arguments', arguments, true, false, false);
                                                            return J$.Rt(721, undefined);
                                                        } catch (J$e) {
                                                            J$.Ex(1857, J$e);
                                                        } finally {
                                                            if (J$.Fr(1865))
                                                                continue jalangiLabel4;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1873, J$e);
                                        } finally {
                                            if (J$.Fr(1881))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), person, false, false);
                            var overwritten_obj = J$.W(841, 'overwritten_obj', J$.F(833, J$.R(809, 'person', person, false, false), true)(J$.T(817, 'a', 21, false), J$.T(825, 'b', 21, false)), overwritten_obj, false, false);
                            J$.M(873, J$.I(typeof Object === 'undefined' ? Object = J$.R(849, 'Object', undefined, true, true) : Object = J$.R(849, 'Object', Object, true, true)), 'assign', false)(J$.R(857, 'overwritten_obj', overwritten_obj, false, false), J$.R(865, 'obj', obj, false, false));
                            var cmd1 = J$.W(897, 'cmd1', J$.G(889, J$.R(881, 'overwritten_obj', overwritten_obj, false, false), 'normal_hipar'), cmd1, false, false);
                            var cmd2 = J$.W(921, 'cmd2', J$.G(913, J$.R(905, 'overwritten_obj', overwritten_obj, false, false), 'constructor'), cmd2, false, false);
                            var cmd3 = J$.W(945, 'cmd3', J$.M(937, J$.R(929, 'overwritten_obj', overwritten_obj, false, false), 'func_hipar', false)(), cmd3, false, false);
                        } catch (J$e) {
                            J$.Ex(1889, J$e);
                        } finally {
                            if (J$.Fr(1897))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function child_hipar(obj) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1049, arguments.callee, this, arguments);
                            arguments = J$.N(1057, 'arguments', arguments, true, false, false);
                            obj = J$.N(1065, 'obj', obj, true, false, false);
                            J$.N(1073, 'cmd', cmd, false, false, false);
                            var cmd = J$.W(1041, 'cmd', J$.G(1033, J$.G(1025, J$.R(1017, 'obj', obj, false, false), 'root'), 'child_hipar'), cmd, false, false);
                        } catch (J$e) {
                            J$.Ex(1905, J$e);
                        } finally {
                            if (J$.Fr(1913))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function time_hipar(obj) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(1313, arguments.callee, this, arguments);
                            arguments = J$.N(1321, 'arguments', arguments, true, false, false);
                            obj = J$.N(1329, 'obj', obj, true, false, false);
                            J$.N(1337, 'sleep', sleep, false, false, false);
                            var sleep = J$.W(1209, 'sleep', J$.T(1201, function sleep(milliseconds) {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(1177, arguments.callee, this, arguments);
                                            arguments = J$.N(1185, 'arguments', arguments, true, false, false);
                                            milliseconds = J$.N(1193, 'milliseconds', milliseconds, true, false, false);
                                            return J$.Rt(1169, J$.F(1161, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(1081, 'Promise', undefined, true, true) : Promise = J$.R(1081, 'Promise', Promise, true, true)), true)(J$.T(1153, function (resolve) {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1129, arguments.callee, this, arguments);
                                                            arguments = J$.N(1137, 'arguments', arguments, true, false, false);
                                                            resolve = J$.N(1145, 'resolve', resolve, true, false, false);
                                                            return J$.Rt(1121, J$.F(1113, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(1089, 'setTimeout', undefined, true, true) : setTimeout = J$.R(1089, 'setTimeout', setTimeout, true, true)), false)(J$.R(1097, 'resolve', resolve, false, false), J$.R(1105, 'milliseconds', milliseconds, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(1921, J$e);
                                                        } finally {
                                                            if (J$.Fr(1929))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(1937, J$e);
                                        } finally {
                                            if (J$.Fr(1945))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), sleep, false, false);
                            J$.M(1305, J$.F(1233, J$.R(1217, 'sleep', sleep, false, false), false)(J$.T(1225, 1000, 22, false)), 'then', false)(J$.T(1297, function () {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(1273, arguments.callee, this, arguments);
                                            arguments = J$.N(1281, 'arguments', arguments, true, false, false);
                                            J$.N(1289, 'cmd', cmd, false, false, false);
                                            var cmd = J$.W(1265, 'cmd', J$.G(1257, J$.G(1249, J$.R(1241, 'obj', obj, false, false), 'root'), 'timing_hipar'), cmd, false, false);
                                        } catch (J$e) {
                                            J$.Ex(1953, J$e);
                                        } finally {
                                            if (J$.Fr(1961))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1969, J$e);
                        } finally {
                            if (J$.Fr(1977))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function func_var_nested_hipar(obj) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(1505, arguments.callee, this, arguments);
                            function nest_func(n_obj) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(1449, arguments.callee, this, arguments);
                                            arguments = J$.N(1457, 'arguments', arguments, true, false, false);
                                            n_obj = J$.N(1465, 'n_obj', n_obj, true, false, false);
                                            J$.N(1473, 'cmd', cmd, false, false, false);
                                            var cmd = J$.W(1441, 'cmd', J$.G(1433, J$.R(1425, 'n_obj', n_obj, false, false), 'func_func_hipar'), cmd, false, false);
                                        } catch (J$e) {
                                            J$.Ex(2001, J$e);
                                        } finally {
                                            if (J$.Fr(2009))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1513, 'arguments', arguments, true, false, false);
                            obj = J$.N(1521, 'obj', obj, true, false, false);
                            nest_func = J$.N(1537, 'nest_func', J$.T(1529, nest_func, 12, false), true, false, false);
                            J$.F(1417, J$.T(1401, function (anon) {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(1369, arguments.callee, this, arguments);
                                            arguments = J$.N(1377, 'arguments', arguments, true, false, false);
                                            anon = J$.N(1385, 'anon', anon, true, false, false);
                                            J$.N(1393, 'cmd', cmd, false, false, false);
                                            var cmd = J$.W(1361, 'cmd', J$.G(1353, J$.R(1345, 'anon', anon, false, false), 'func_anon_hipar'), cmd, false, false);
                                        } catch (J$e) {
                                            J$.Ex(1985, J$e);
                                        } finally {
                                            if (J$.Fr(1993))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), false)(J$.R(1409, 'obj', obj, false, false));
                            J$.F(1497, J$.R(1481, 'nest_func', nest_func, false, false), false)(J$.R(1489, 'obj', obj, false, false));
                        } catch (J$e) {
                            J$.Ex(2017, J$e);
                        } finally {
                            if (J$.Fr(2025))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function expr_func_nested_hipar(obj) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(1593, arguments.callee, this, arguments);
                            arguments = J$.N(1601, 'arguments', arguments, true, false, false);
                            obj = J$.N(1609, 'obj', obj, true, false, false);
                            J$.G(1585, J$.M(1577, J$.T(1561, [J$.G(1553, J$.R(1545, 'obj', obj, false, false), 'expr_f_hipar')], 10, false), 'concat', false)(J$.T(1569, '1', 21, false)), 'length');
                        } catch (J$e) {
                            J$.Ex(2033, J$e);
                        } finally {
                            if (J$.Fr(2041))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            do_test = J$.N(1649, 'do_test', J$.T(1641, do_test, 12, false), true, false, false);
            one_layer_hipar = J$.N(1665, 'one_layer_hipar', J$.T(1657, one_layer_hipar, 12, false), true, false, false);
            multi_layer_hipar = J$.N(1681, 'multi_layer_hipar', J$.T(1673, multi_layer_hipar, 12, false), true, false, false);
            mix_hipar = J$.N(1697, 'mix_hipar', J$.T(1689, mix_hipar, 12, false), true, false, false);
            proto_hipar = J$.N(1713, 'proto_hipar', J$.T(1705, proto_hipar, 12, false), true, false, false);
            child_hipar = J$.N(1729, 'child_hipar', J$.T(1721, child_hipar, 12, false), true, false, false);
            time_hipar = J$.N(1745, 'time_hipar', J$.T(1737, time_hipar, 12, false), true, false, false);
            func_var_nested_hipar = J$.N(1761, 'func_var_nested_hipar', J$.T(1753, func_var_nested_hipar, 12, false), true, false, false);
            expr_func_nested_hipar = J$.N(1777, 'expr_func_nested_hipar', J$.T(1769, expr_func_nested_hipar, 12, false), true, false, false);
            J$.N(1785, 'obj', obj, false, false, false);
            J$.T(9, 'use strict', 21, false);
            J$.P(265, J$.I(typeof module === 'undefined' ? module = J$.R(249, 'module', undefined, true, true) : module = J$.R(249, 'module', module, true, true)), 'exports', J$.R(257, 'do_test', do_test, false, true));
            var obj = J$.W(1625, 'obj', J$.T(1617, {}, 11, false), obj, false, true);
        } catch (J$e) {
            J$.Ex(2049, J$e);
        } finally {
            if (J$.Sr(2057))
                continue jalangiLabel16;
            else
                break jalangiLabel16;
        }
    }
// JALANGI DO NOT INSTRUMENT

