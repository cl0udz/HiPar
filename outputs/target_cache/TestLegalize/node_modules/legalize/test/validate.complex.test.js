J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(119417, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/test/validate.complex.test.js');
            J$.N(119425, 'expect', expect, false, false, false);
            J$.N(119433, 'L', L, false, false, false);
            J$.T(118609, 'use strict', 21, false);
            var expect = J$.W(118649, 'expect', J$.G(118641, J$.F(118633, J$.I(typeof require === 'undefined' ? require = J$.R(118617, 'require', undefined, true, true) : require = J$.R(118617, 'require', require, true, true)), false)(J$.T(118625, 'chai', 21, false)), 'expect'), expect, false, true);
            var L = J$.W(118681, 'L', J$.F(118673, J$.I(typeof require === 'undefined' ? require = J$.R(118657, 'require', undefined, true, true) : require = J$.R(118657, 'require', require, true, true)), false)(J$.T(118665, '../src/legalize-node.js', 21, false)), L, false, true);
            J$.F(119409, J$.I(typeof describe === 'undefined' ? describe = J$.R(118689, 'describe', undefined, true, true) : describe = J$.R(118689, 'describe', describe, true, true)), false)(J$.T(118697, 'complex test scenarios', 21, false), J$.T(119401, function () {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(119385, arguments.callee, this, arguments);
                            arguments = J$.N(119393, 'arguments', arguments, true, false, false);
                            J$.F(118921, J$.I(typeof it === 'undefined' ? it = J$.R(118705, 'it', undefined, true, true) : it = J$.R(118705, 'it', it, true, true)), false)(J$.T(118713, 'calls a callback if provided with one', 21, false), J$.T(118913, function (done) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(118889, arguments.callee, this, arguments);
                                            arguments = J$.N(118897, 'arguments', arguments, true, false, false);
                                            done = J$.N(118905, 'done', done, true, false, false);
                                            J$.M(118881, J$.R(118721, 'L', L, false, true), 'validate', false)(J$.T(118737, { a: J$.T(118729, 'x', 21, false) }, 11, false), J$.T(118769, { a: J$.M(118761, J$.M(118753, J$.R(118745, 'L', L, false, true), 'number', false)(), 'required', false)() }, 11, false), J$.T(118873, function (error) {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(118849, arguments.callee, this, arguments);
                                                            arguments = J$.N(118857, 'arguments', arguments, true, false, false);
                                                            error = J$.N(118865, 'error', error, true, false, false);
                                                            J$.M(118825, J$.G(118817, J$.G(118809, J$.G(118801, J$.F(118793, J$.R(118777, 'expect', expect, false, true), false)(J$.R(118785, 'error', error, false, false)), 'not'), 'to'), 'be'), 'null', false)();
                                                            J$.F(118841, J$.R(118833, 'done', done, false, false), false)();
                                                        } catch (J$e) {
                                                            J$.Ex(119441, J$e);
                                                        } finally {
                                                            if (J$.Fr(119449))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(119457, J$e);
                                        } finally {
                                            if (J$.Fr(119465))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(119153, J$.I(typeof it === 'undefined' ? it = J$.R(118929, 'it', undefined, true, true) : it = J$.R(118929, 'it', it, true, true)), false)(J$.T(118937, 'calls a callback if provided with one and with options', 21, false), J$.T(119145, function (done) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(119121, arguments.callee, this, arguments);
                                            arguments = J$.N(119129, 'arguments', arguments, true, false, false);
                                            done = J$.N(119137, 'done', done, true, false, false);
                                            J$.M(119113, J$.R(118945, 'L', L, false, true), 'validate', false)(J$.T(118961, { a: J$.T(118953, 'x', 21, false) }, 11, false), J$.T(118993, { a: J$.M(118985, J$.M(118977, J$.R(118969, 'L', L, false, true), 'number', false)(), 'required', false)() }, 11, false), J$.T(119001, {}, 11, false), J$.T(119105, function (error) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(119081, arguments.callee, this, arguments);
                                                            arguments = J$.N(119089, 'arguments', arguments, true, false, false);
                                                            error = J$.N(119097, 'error', error, true, false, false);
                                                            J$.M(119057, J$.G(119049, J$.G(119041, J$.G(119033, J$.F(119025, J$.R(119009, 'expect', expect, false, true), false)(J$.R(119017, 'error', error, false, false)), 'not'), 'to'), 'be'), 'null', false)();
                                                            J$.F(119073, J$.R(119065, 'done', done, false, false), false)();
                                                        } catch (J$e) {
                                                            J$.Ex(119473, J$e);
                                                        } finally {
                                                            if (J$.Fr(119481))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(119489, J$e);
                                        } finally {
                                            if (J$.Fr(119497))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(119377, J$.I(typeof it === 'undefined' ? it = J$.R(119161, 'it', undefined, true, true) : it = J$.R(119161, 'it', it, true, true)), false)(J$.T(119169, 'forbidden value encountered @devel', 21, false), J$.T(119369, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(119345, arguments.callee, this, arguments);
                                            arguments = J$.N(119353, 'arguments', arguments, true, false, false);
                                            J$.N(119361, 'validationResult', validationResult, false, false, false);
                                            var validationResult = J$.W(119265, 'validationResult', J$.M(119257, J$.R(119177, 'L', L, false, true), 'validate', false)(J$.T(119193, { a: J$.T(119185, 'x', 21, false) }, 11, false), J$.T(119225, { a: J$.M(119217, J$.M(119209, J$.R(119201, 'L', L, false, true), 'any', false)(), 'forbidden', false)() }, 11, false), J$.T(119249, {
                                                allowUnknown: J$.T(119233, true, 23, false),
                                                warnUnknown: J$.T(119241, false, 23, false)
                                            }, 11, false)), validationResult, false, false);
                                            J$.M(119337, J$.G(119313, J$.G(119305, J$.G(119297, J$.F(119289, J$.R(119273, 'expect', expect, false, true), false)(J$.R(119281, 'validationResult', validationResult, false, false)), 'to'), 'deep'), 'have'), 'property', false)(J$.T(119321, 'error[0].type', 21, false), J$.T(119329, 'forbidden_encountered', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(119505, J$e);
                                        } finally {
                                            if (J$.Fr(119513))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(119521, J$e);
                        } finally {
                            if (J$.Fr(119529))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(119537, J$e);
        } finally {
            if (J$.Sr(119545))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

