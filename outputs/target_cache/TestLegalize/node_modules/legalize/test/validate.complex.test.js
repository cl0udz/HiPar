J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(3044833, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/test/validate.complex.test.js');
            J$.N(3044841, 'expect', expect, false, false, false);
            J$.N(3044849, 'L', L, false, false, false);
            J$.T(3044025, 'use strict', 21, false);
            var expect = J$.W(3044065, 'expect', J$.G(3044057, J$.F(3044049, J$.I(typeof require === 'undefined' ? require = J$.R(3044033, 'require', undefined, true, true) : require = J$.R(3044033, 'require', require, true, true)), false)(J$.T(3044041, 'chai', 21, false)), 'expect'), expect, false, true);
            var L = J$.W(3044097, 'L', J$.F(3044089, J$.I(typeof require === 'undefined' ? require = J$.R(3044073, 'require', undefined, true, true) : require = J$.R(3044073, 'require', require, true, true)), false)(J$.T(3044081, '../src/legalize-node.js', 21, false)), L, false, true);
            J$.F(3044825, J$.I(typeof describe === 'undefined' ? describe = J$.R(3044105, 'describe', undefined, true, true) : describe = J$.R(3044105, 'describe', describe, true, true)), false)(J$.T(3044113, 'complex test scenarios', 21, false), J$.T(3044817, function () {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(3044801, arguments.callee, this, arguments);
                            arguments = J$.N(3044809, 'arguments', arguments, true, false, false);
                            J$.F(3044337, J$.I(typeof it === 'undefined' ? it = J$.R(3044121, 'it', undefined, true, true) : it = J$.R(3044121, 'it', it, true, true)), false)(J$.T(3044129, 'calls a callback if provided with one', 21, false), J$.T(3044329, function (done) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(3044305, arguments.callee, this, arguments);
                                            arguments = J$.N(3044313, 'arguments', arguments, true, false, false);
                                            done = J$.N(3044321, 'done', done, true, false, false);
                                            J$.M(3044297, J$.R(3044137, 'L', L, false, true), 'validate', false)(J$.T(3044153, { a: J$.T(3044145, 'x', 21, false) }, 11, false), J$.T(3044185, { a: J$.M(3044177, J$.M(3044169, J$.R(3044161, 'L', L, false, true), 'number', false)(), 'required', false)() }, 11, false), J$.T(3044289, function (error) {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3044265, arguments.callee, this, arguments);
                                                            arguments = J$.N(3044273, 'arguments', arguments, true, false, false);
                                                            error = J$.N(3044281, 'error', error, true, false, false);
                                                            J$.M(3044241, J$.G(3044233, J$.G(3044225, J$.G(3044217, J$.F(3044209, J$.R(3044193, 'expect', expect, false, true), false)(J$.R(3044201, 'error', error, false, false)), 'not'), 'to'), 'be'), 'null', false)();
                                                            J$.F(3044257, J$.R(3044249, 'done', done, false, false), false)();
                                                        } catch (J$e) {
                                                            J$.Ex(3044857, J$e);
                                                        } finally {
                                                            if (J$.Fr(3044865))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(3044873, J$e);
                                        } finally {
                                            if (J$.Fr(3044881))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3044569, J$.I(typeof it === 'undefined' ? it = J$.R(3044345, 'it', undefined, true, true) : it = J$.R(3044345, 'it', it, true, true)), false)(J$.T(3044353, 'calls a callback if provided with one and with options', 21, false), J$.T(3044561, function (done) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3044537, arguments.callee, this, arguments);
                                            arguments = J$.N(3044545, 'arguments', arguments, true, false, false);
                                            done = J$.N(3044553, 'done', done, true, false, false);
                                            J$.M(3044529, J$.R(3044361, 'L', L, false, true), 'validate', false)(J$.T(3044377, { a: J$.T(3044369, 'x', 21, false) }, 11, false), J$.T(3044409, { a: J$.M(3044401, J$.M(3044393, J$.R(3044385, 'L', L, false, true), 'number', false)(), 'required', false)() }, 11, false), J$.T(3044417, {}, 11, false), J$.T(3044521, function (error) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3044497, arguments.callee, this, arguments);
                                                            arguments = J$.N(3044505, 'arguments', arguments, true, false, false);
                                                            error = J$.N(3044513, 'error', error, true, false, false);
                                                            J$.M(3044473, J$.G(3044465, J$.G(3044457, J$.G(3044449, J$.F(3044441, J$.R(3044425, 'expect', expect, false, true), false)(J$.R(3044433, 'error', error, false, false)), 'not'), 'to'), 'be'), 'null', false)();
                                                            J$.F(3044489, J$.R(3044481, 'done', done, false, false), false)();
                                                        } catch (J$e) {
                                                            J$.Ex(3044889, J$e);
                                                        } finally {
                                                            if (J$.Fr(3044897))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(3044905, J$e);
                                        } finally {
                                            if (J$.Fr(3044913))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3044793, J$.I(typeof it === 'undefined' ? it = J$.R(3044577, 'it', undefined, true, true) : it = J$.R(3044577, 'it', it, true, true)), false)(J$.T(3044585, 'forbidden value encountered @devel', 21, false), J$.T(3044785, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(3044761, arguments.callee, this, arguments);
                                            arguments = J$.N(3044769, 'arguments', arguments, true, false, false);
                                            J$.N(3044777, 'validationResult', validationResult, false, false, false);
                                            var validationResult = J$.W(3044681, 'validationResult', J$.M(3044673, J$.R(3044593, 'L', L, false, true), 'validate', false)(J$.T(3044609, { a: J$.T(3044601, 'x', 21, false) }, 11, false), J$.T(3044641, { a: J$.M(3044633, J$.M(3044625, J$.R(3044617, 'L', L, false, true), 'any', false)(), 'forbidden', false)() }, 11, false), J$.T(3044665, {
                                                allowUnknown: J$.T(3044649, true, 23, false),
                                                warnUnknown: J$.T(3044657, false, 23, false)
                                            }, 11, false)), validationResult, false, false);
                                            J$.M(3044753, J$.G(3044729, J$.G(3044721, J$.G(3044713, J$.F(3044705, J$.R(3044689, 'expect', expect, false, true), false)(J$.R(3044697, 'validationResult', validationResult, false, false)), 'to'), 'deep'), 'have'), 'property', false)(J$.T(3044737, 'error[0].type', 21, false), J$.T(3044745, 'forbidden_encountered', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(3044921, J$e);
                                        } finally {
                                            if (J$.Fr(3044929))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(3044937, J$e);
                        } finally {
                            if (J$.Fr(3044945))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3044953, J$e);
        } finally {
            if (J$.Sr(3044961))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

