J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(3046465, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/test/validate.errors.test.js');
            J$.N(3046473, 'expect', expect, false, false, false);
            J$.N(3046481, 'L', L, false, false, false);
            J$.T(3044969, 'use strict', 21, false);
            var expect = J$.W(3045009, 'expect', J$.G(3045001, J$.F(3044993, J$.I(typeof require === 'undefined' ? require = J$.R(3044977, 'require', undefined, true, true) : require = J$.R(3044977, 'require', require, true, true)), false)(J$.T(3044985, 'chai', 21, false)), 'expect'), expect, false, true);
            var L = J$.W(3045041, 'L', J$.F(3045033, J$.I(typeof require === 'undefined' ? require = J$.R(3045017, 'require', undefined, true, true) : require = J$.R(3045017, 'require', require, true, true)), false)(J$.T(3045025, '../src/legalize-node.js', 21, false)), L, false, true);
            J$.F(3046457, J$.I(typeof describe === 'undefined' ? describe = J$.R(3045049, 'describe', undefined, true, true) : describe = J$.R(3045049, 'describe', describe, true, true)), false)(J$.T(3045057, 'error reporting', 21, false), J$.T(3046449, function () {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3046433, arguments.callee, this, arguments);
                            arguments = J$.N(3046441, 'arguments', arguments, true, false, false);
                            J$.F(3045465, J$.I(typeof it === 'undefined' ? it = J$.R(3045065, 'it', undefined, true, true) : it = J$.R(3045065, 'it', it, true, true)), false)(J$.T(3045073, 'returns \'required_missing\' error for missing required keys', 21, false), J$.T(3045457, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3045425, arguments.callee, this, arguments);
                                            arguments = J$.N(3045433, 'arguments', arguments, true, false, false);
                                            J$.N(3045441, 'schema', schema, false, false, false);
                                            J$.N(3045449, 'result', result, false, false, false);
                                            var schema = J$.W(3045137, 'schema', J$.T(3045129, {
                                                a: J$.M(3045097, J$.M(3045089, J$.R(3045081, 'L', L, false, true), 'string', false)(), 'required', false)(),
                                                b: J$.M(3045121, J$.M(3045113, J$.R(3045105, 'L', L, false, true), 'string', false)(), 'optional', false)()
                                            }, 11, false), schema, false, false);
                                            var result = J$.W(3045185, 'result', J$.M(3045177, J$.R(3045145, 'L', L, false, true), 'validate', false)(J$.T(3045161, { b: J$.T(3045153, 'foobar', 21, false) }, 11, false), J$.R(3045169, 'schema', schema, false, false)), result, false, false);
                                            J$.M(3045241, J$.G(3045233, J$.G(3045225, J$.F(3045217, J$.R(3045193, 'expect', expect, false, true), false)(J$.U(212130, '!', J$.G(3045209, J$.R(3045201, 'result', result, false, false), 'error'))), 'to'), 'be'), 'false', false)();
                                            J$.M(3045329, J$.G(3045313, J$.G(3045305, J$.F(3045297, J$.R(3045249, 'expect', expect, false, true), false)(J$.G(3045289, J$.G(3045281, J$.G(3045265, J$.R(3045257, 'result', result, false, false), 'error'), J$.T(3045273, 0, 22, false)), 'type')), 'to'), 'be'), 'equal', false)(J$.T(3045321, 'required_missing', 21, false));
                                            J$.M(3045417, J$.G(3045401, J$.G(3045393, J$.F(3045385, J$.R(3045337, 'expect', expect, false, true), false)(J$.G(3045377, J$.G(3045369, J$.G(3045353, J$.R(3045345, 'result', result, false, false), 'error'), J$.T(3045361, 0, 22, false)), 'sourcePath')), 'to'), 'be'), 'equal', false)(J$.T(3045409, '/a', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(3046489, J$e);
                                        } finally {
                                            if (J$.Fr(3046497))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3045889, J$.I(typeof it === 'undefined' ? it = J$.R(3045473, 'it', undefined, true, true) : it = J$.R(3045473, 'it', it, true, true)), false)(J$.T(3045481, 'returns \'invalid_value\' error for invalid() required() value', 21, false), J$.T(3045881, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(3045849, arguments.callee, this, arguments);
                                            arguments = J$.N(3045857, 'arguments', arguments, true, false, false);
                                            J$.N(3045865, 'schema', schema, false, false, false);
                                            J$.N(3045873, 'result', result, false, false, false);
                                            var schema = J$.W(3045537, 'schema', J$.T(3045529, { x: J$.M(3045521, J$.M(3045513, J$.M(3045497, J$.R(3045489, 'L', L, false, true), 'any', false)(), 'invalid', false)(J$.T(3045505, 17, 22, false)), 'required', false)() }, 11, false), schema, false, false);
                                            var result = J$.W(3045585, 'result', J$.M(3045577, J$.R(3045545, 'L', L, false, true), 'validate', false)(J$.T(3045561, { x: J$.T(3045553, 17, 22, false) }, 11, false), J$.R(3045569, 'schema', schema, false, false)), result, false, false);
                                            J$.M(3045609, J$.I(typeof console === 'undefined' ? console = J$.R(3045593, 'console', undefined, true, true) : console = J$.R(3045593, 'console', console, true, true)), 'log', false)(J$.R(3045601, 'result', result, false, false));
                                            J$.M(3045665, J$.G(3045657, J$.G(3045649, J$.F(3045641, J$.R(3045617, 'expect', expect, false, true), false)(J$.U(212138, '!', J$.G(3045633, J$.R(3045625, 'result', result, false, false), 'error'))), 'to'), 'be'), 'false', false)();
                                            J$.M(3045753, J$.G(3045737, J$.G(3045729, J$.F(3045721, J$.R(3045673, 'expect', expect, false, true), false)(J$.G(3045713, J$.G(3045705, J$.G(3045689, J$.R(3045681, 'result', result, false, false), 'error'), J$.T(3045697, 0, 22, false)), 'type')), 'to'), 'be'), 'equal', false)(J$.T(3045745, 'invalid_value', 21, false));
                                            J$.M(3045841, J$.G(3045825, J$.G(3045817, J$.F(3045809, J$.R(3045761, 'expect', expect, false, true), false)(J$.G(3045801, J$.G(3045793, J$.G(3045777, J$.R(3045769, 'result', result, false, false), 'error'), J$.T(3045785, 0, 22, false)), 'sourcePath')), 'to'), 'be'), 'equal', false)(J$.T(3045833, '/x', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(3046505, J$e);
                                        } finally {
                                            if (J$.Fr(3046513))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3046185, J$.I(typeof it === 'undefined' ? it = J$.R(3045897, 'it', undefined, true, true) : it = J$.R(3045897, 'it', it, true, true)), false)(J$.T(3045905, '\'no_alternative_matched\' is returned if alternatives() did not match', 21, false), J$.T(3046177, function () {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(3046145, arguments.callee, this, arguments);
                                            arguments = J$.N(3046153, 'arguments', arguments, true, false, false);
                                            J$.N(3046161, 'schema', schema, false, false, false);
                                            J$.N(3046169, 'result', result, false, false, false);
                                            var schema = J$.W(3045953, 'schema', J$.T(3045945, [
                                                J$.M(3045921, J$.R(3045913, 'L', L, false, true), 'string', false)(),
                                                J$.M(3045937, J$.R(3045929, 'L', L, false, true), 'number', false)()
                                            ], 10, false), schema, false, false);
                                            var result = J$.W(3045993, 'result', J$.M(3045985, J$.R(3045961, 'L', L, false, true), 'validate', false)(J$.T(3045969, true, 23, false), J$.R(3045977, 'schema', schema, false, false)), result, false, false);
                                            J$.M(3046049, J$.G(3046041, J$.G(3046033, J$.F(3046025, J$.R(3046001, 'expect', expect, false, true), false)(J$.U(212146, '!', J$.G(3046017, J$.R(3046009, 'result', result, false, false), 'error'))), 'to'), 'be'), 'false', false)();
                                            J$.M(3046137, J$.G(3046121, J$.G(3046113, J$.F(3046105, J$.R(3046057, 'expect', expect, false, true), false)(J$.G(3046097, J$.G(3046089, J$.G(3046073, J$.R(3046065, 'result', result, false, false), 'error'), J$.T(3046081, 0, 22, false)), 'type')), 'to'), 'be'), 'equal', false)(J$.T(3046129, 'no_alternative_matched', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(3046521, J$e);
                                        } finally {
                                            if (J$.Fr(3046529))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3046425, J$.I(typeof it === 'undefined' ? it = J$.R(3046193, 'it', undefined, true, true) : it = J$.R(3046193, 'it', it, true, true)), false)(J$.T(3046201, 'no error is thrown if no any().invalid() value is encountered', 21, false), J$.T(3046417, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3046385, arguments.callee, this, arguments);
                                            arguments = J$.N(3046393, 'arguments', arguments, true, false, false);
                                            J$.N(3046401, 'schema', schema, false, false, false);
                                            J$.N(3046409, 'result', result, false, false, false);
                                            var schema = J$.W(3046257, 'schema', J$.M(3046249, J$.M(3046233, J$.M(3046217, J$.R(3046209, 'L', L, false, true), 'any', false)(), 'invalid', false)(J$.T(3046225, 3, 22, false)), 'invalid', false)(J$.T(3046241, 4, 22, false)), schema, false, false);
                                            var result = J$.W(3046297, 'result', J$.M(3046289, J$.R(3046265, 'L', L, false, true), 'validate', false)(J$.T(3046273, 17, 22, false), J$.R(3046281, 'schema', schema, false, false)), result, false, false);
                                            J$.M(3046321, J$.I(typeof console === 'undefined' ? console = J$.R(3046305, 'console', undefined, true, true) : console = J$.R(3046305, 'console', console, true, true)), 'log', false)(J$.R(3046313, 'result', result, false, false));
                                            J$.M(3046377, J$.G(3046369, J$.G(3046361, J$.F(3046353, J$.R(3046329, 'expect', expect, false, true), false)(J$.U(212154, '!', J$.G(3046345, J$.R(3046337, 'result', result, false, false), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(3046537, J$e);
                                        } finally {
                                            if (J$.Fr(3046545))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(3046553, J$e);
                        } finally {
                            if (J$.Fr(3046561))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3046569, J$e);
        } finally {
            if (J$.Sr(3046577))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

