J$.noInstrEval = false;
jalangiLabel9:
    while (true) {
        try {
            J$.Se(3054073, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/test/validate.string.test.js');
            J$.N(3054081, 'expect', expect, false, false, false);
            J$.N(3054089, 'L', L, false, false, false);
            J$.T(3052633, 'use strict', 21, false);
            var expect = J$.W(3052673, 'expect', J$.G(3052665, J$.F(3052657, J$.I(typeof require === 'undefined' ? require = J$.R(3052641, 'require', undefined, true, true) : require = J$.R(3052641, 'require', require, true, true)), false)(J$.T(3052649, 'chai', 21, false)), 'expect'), expect, false, true);
            var L = J$.W(3052705, 'L', J$.F(3052697, J$.I(typeof require === 'undefined' ? require = J$.R(3052681, 'require', undefined, true, true) : require = J$.R(3052681, 'require', require, true, true)), false)(J$.T(3052689, '../src/legalize-node.js', 21, false)), L, false, true);
            J$.F(3054065, J$.I(typeof describe === 'undefined' ? describe = J$.R(3052713, 'describe', undefined, true, true) : describe = J$.R(3052713, 'describe', describe, true, true)), false)(J$.T(3052721, 'string validations', 21, false), J$.T(3054057, function () {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(3054041, arguments.callee, this, arguments);
                            arguments = J$.N(3054049, 'arguments', arguments, true, false, false);
                            J$.F(3052897, J$.I(typeof it === 'undefined' ? it = J$.R(3052729, 'it', undefined, true, true) : it = J$.R(3052729, 'it', it, true, true)), false)(J$.T(3052737, 'string().matches(/^[0-9]+$/) accepts strings that match', 21, false), J$.T(3052889, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3052865, arguments.callee, this, arguments);
                                            arguments = J$.N(3052873, 'arguments', arguments, true, false, false);
                                            J$.N(3052881, 'schema', schema, false, false, false);
                                            var schema = J$.W(3052777, 'schema', J$.M(3052769, J$.M(3052753, J$.R(3052745, 'L', L, false, true), 'string', false)(), 'match', false)(J$.T(3052761, /^[0-9]+$/, 14, false)), schema, false, false);
                                            J$.M(3052857, J$.G(3052849, J$.G(3052841, J$.F(3052833, J$.R(3052785, 'expect', expect, false, true), false)(J$.U(212402, '!', J$.G(3052825, J$.M(3052817, J$.R(3052793, 'L', L, false, true), 'validate', false)(J$.T(3052801, '30485', 21, false), J$.R(3052809, 'schema', schema, false, false)), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(3054097, J$e);
                                        } finally {
                                            if (J$.Fr(3054105))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3053073, J$.I(typeof it === 'undefined' ? it = J$.R(3052905, 'it', undefined, true, true) : it = J$.R(3052905, 'it', it, true, true)), false)(J$.T(3052913, 'string().matches(/^[0-9]+$/) rejects strings that do not match', 21, false), J$.T(3053065, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(3053041, arguments.callee, this, arguments);
                                            arguments = J$.N(3053049, 'arguments', arguments, true, false, false);
                                            J$.N(3053057, 'schema', schema, false, false, false);
                                            var schema = J$.W(3052953, 'schema', J$.M(3052945, J$.M(3052929, J$.R(3052921, 'L', L, false, true), 'string', false)(), 'match', false)(J$.T(3052937, /^[0-9]+$/, 14, false)), schema, false, false);
                                            J$.M(3053033, J$.G(3053025, J$.G(3053017, J$.F(3053009, J$.R(3052961, 'expect', expect, false, true), false)(J$.U(212410, '!', J$.G(3053001, J$.M(3052993, J$.R(3052969, 'L', L, false, true), 'validate', false)(J$.T(3052977, '304a85', 21, false), J$.R(3052985, 'schema', schema, false, false)), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(3054113, J$e);
                                        } finally {
                                            if (J$.Fr(3054121))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3053241, J$.I(typeof it === 'undefined' ? it = J$.R(3053081, 'it', undefined, true, true) : it = J$.R(3053081, 'it', it, true, true)), false)(J$.T(3053089, 'string().lowercase() matches lower case strings', 21, false), J$.T(3053233, function () {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(3053209, arguments.callee, this, arguments);
                                            arguments = J$.N(3053217, 'arguments', arguments, true, false, false);
                                            J$.N(3053225, 'schema', schema, false, false, false);
                                            var schema = J$.W(3053121, 'schema', J$.M(3053113, J$.M(3053105, J$.R(3053097, 'L', L, false, true), 'string', false)(), 'lowercase', false)(), schema, false, false);
                                            J$.M(3053201, J$.G(3053193, J$.G(3053185, J$.F(3053177, J$.R(3053129, 'expect', expect, false, true), false)(J$.U(212418, '!', J$.G(3053169, J$.M(3053161, J$.R(3053137, 'L', L, false, true), 'validate', false)(J$.T(3053145, 'abcdef', 21, false), J$.R(3053153, 'schema', schema, false, false)), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(3054129, J$e);
                                        } finally {
                                            if (J$.Fr(3054137))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3053409, J$.I(typeof it === 'undefined' ? it = J$.R(3053249, 'it', undefined, true, true) : it = J$.R(3053249, 'it', it, true, true)), false)(J$.T(3053257, 'string().lowercase() rejects strings that contain upper case letters', 21, false), J$.T(3053401, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3053377, arguments.callee, this, arguments);
                                            arguments = J$.N(3053385, 'arguments', arguments, true, false, false);
                                            J$.N(3053393, 'schema', schema, false, false, false);
                                            var schema = J$.W(3053289, 'schema', J$.M(3053281, J$.M(3053273, J$.R(3053265, 'L', L, false, true), 'string', false)(), 'lowercase', false)(), schema, false, false);
                                            J$.M(3053369, J$.G(3053361, J$.G(3053353, J$.F(3053345, J$.R(3053297, 'expect', expect, false, true), false)(J$.U(212426, '!', J$.G(3053337, J$.M(3053329, J$.R(3053305, 'L', L, false, true), 'validate', false)(J$.T(3053313, 'abcDef', 21, false), J$.R(3053321, 'schema', schema, false, false)), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(3054145, J$e);
                                        } finally {
                                            if (J$.Fr(3054153))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3053577, J$.I(typeof it === 'undefined' ? it = J$.R(3053417, 'it', undefined, true, true) : it = J$.R(3053417, 'it', it, true, true)), false)(J$.T(3053425, 'string().uppercase() matches upper case strings', 21, false), J$.T(3053569, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(3053545, arguments.callee, this, arguments);
                                            arguments = J$.N(3053553, 'arguments', arguments, true, false, false);
                                            J$.N(3053561, 'schema', schema, false, false, false);
                                            var schema = J$.W(3053457, 'schema', J$.M(3053449, J$.M(3053441, J$.R(3053433, 'L', L, false, true), 'string', false)(), 'uppercase', false)(), schema, false, false);
                                            J$.M(3053537, J$.G(3053529, J$.G(3053521, J$.F(3053513, J$.R(3053465, 'expect', expect, false, true), false)(J$.U(212434, '!', J$.G(3053505, J$.M(3053497, J$.R(3053473, 'L', L, false, true), 'validate', false)(J$.T(3053481, 'ABCDEF', 21, false), J$.R(3053489, 'schema', schema, false, false)), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(3054161, J$e);
                                        } finally {
                                            if (J$.Fr(3054169))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3053745, J$.I(typeof it === 'undefined' ? it = J$.R(3053585, 'it', undefined, true, true) : it = J$.R(3053585, 'it', it, true, true)), false)(J$.T(3053593, 'string().uppercase() rejects strings that contain lower case letters', 21, false), J$.T(3053737, function () {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(3053713, arguments.callee, this, arguments);
                                            arguments = J$.N(3053721, 'arguments', arguments, true, false, false);
                                            J$.N(3053729, 'schema', schema, false, false, false);
                                            var schema = J$.W(3053625, 'schema', J$.M(3053617, J$.M(3053609, J$.R(3053601, 'L', L, false, true), 'string', false)(), 'uppercase', false)(), schema, false, false);
                                            J$.M(3053705, J$.G(3053697, J$.G(3053689, J$.F(3053681, J$.R(3053633, 'expect', expect, false, true), false)(J$.U(212442, '!', J$.G(3053673, J$.M(3053665, J$.R(3053641, 'L', L, false, true), 'validate', false)(J$.T(3053649, 'abcDef', 21, false), J$.R(3053657, 'schema', schema, false, false)), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(3054177, J$e);
                                        } finally {
                                            if (J$.Fr(3054185))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3053889, J$.I(typeof it === 'undefined' ? it = J$.R(3053753, 'it', undefined, true, true) : it = J$.R(3053753, 'it', it, true, true)), false)(J$.T(3053761, 'string().url() accepts urls', 21, false), J$.T(3053881, function () {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(3053865, arguments.callee, this, arguments);
                                            arguments = J$.N(3053873, 'arguments', arguments, true, false, false);
                                            J$.M(3053857, J$.G(3053849, J$.G(3053841, J$.F(3053833, J$.R(3053769, 'expect', expect, false, true), false)(J$.U(212450, '!', J$.G(3053825, J$.M(3053817, J$.R(3053777, 'L', L, false, true), 'validate', false)(J$.T(3053785, 'http://localhost/', 21, false), J$.M(3053809, J$.M(3053801, J$.R(3053793, 'L', L, false, true), 'string', false)(), 'url', false)()), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(3054193, J$e);
                                        } finally {
                                            if (J$.Fr(3054201))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3054033, J$.I(typeof it === 'undefined' ? it = J$.R(3053897, 'it', undefined, true, true) : it = J$.R(3053897, 'it', it, true, true)), false)(J$.T(3053905, 'string().url() rejects non-urls', 21, false), J$.T(3054025, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(3054009, arguments.callee, this, arguments);
                                            arguments = J$.N(3054017, 'arguments', arguments, true, false, false);
                                            J$.M(3054001, J$.G(3053993, J$.G(3053985, J$.F(3053977, J$.R(3053913, 'expect', expect, false, true), false)(J$.U(212458, '!', J$.G(3053969, J$.M(3053961, J$.R(3053921, 'L', L, false, true), 'validate', false)(J$.T(3053929, 'www.localhost.com', 21, false), J$.M(3053953, J$.M(3053945, J$.R(3053937, 'L', L, false, true), 'string', false)(), 'url', false)()), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(3054209, J$e);
                                        } finally {
                                            if (J$.Fr(3054217))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(3054225, J$e);
                        } finally {
                            if (J$.Fr(3054233))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3054241, J$e);
        } finally {
            if (J$.Sr(3054249))
                continue jalangiLabel9;
            else
                break jalangiLabel9;
        }
    }
// JALANGI DO NOT INSTRUMENT

