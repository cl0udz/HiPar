J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(105801, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/test/reporting.test.js');
            J$.N(105809, 'expect', expect, false, false, false);
            J$.N(105817, 'L', L, false, false, false);
            J$.T(104713, 'use strict', 21, false);
            var expect = J$.W(104753, 'expect', J$.G(104745, J$.F(104737, J$.I(typeof require === 'undefined' ? require = J$.R(104721, 'require', undefined, true, true) : require = J$.R(104721, 'require', require, true, true)), false)(J$.T(104729, 'chai', 21, false)), 'expect'), expect, false, true);
            var L = J$.W(104785, 'L', J$.F(104777, J$.I(typeof require === 'undefined' ? require = J$.R(104761, 'require', undefined, true, true) : require = J$.R(104761, 'require', require, true, true)), false)(J$.T(104769, '../src/legalize-node.js', 21, false)), L, false, true);
            J$.F(105793, J$.I(typeof describe === 'undefined' ? describe = J$.R(104793, 'describe', undefined, true, true) : describe = J$.R(104793, 'describe', describe, true, true)), false)(J$.T(104801, 'custom error reporting', 21, false), J$.T(105785, function () {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(105769, arguments.callee, this, arguments);
                            arguments = J$.N(105777, 'arguments', arguments, true, false, false);
                            J$.F(105337, J$.I(typeof it === 'undefined' ? it = J$.R(104809, 'it', undefined, true, true) : it = J$.R(104809, 'it', it, true, true)), false)(J$.T(104817, 'does propagate a custom warning from check() functions', 21, false), J$.T(105329, function () {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(105297, arguments.callee, this, arguments);
                                            arguments = J$.N(105305, 'arguments', arguments, true, false, false);
                                            J$.N(105313, 'schema', schema, false, false, false);
                                            J$.N(105321, 'validationResult', validationResult, false, false, false);
                                            var schema = J$.W(105081, 'schema', J$.M(105073, J$.M(104929, J$.M(104833, J$.R(104825, 'L', L, false, true), 'object', false)(), 'keys', false)(J$.T(104921, {
                                                a: J$.M(104897, J$.M(104849, J$.R(104841, 'L', L, false, true), 'number', false)(), 'check', false)(J$.T(104889, function () {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(104873, arguments.callee, this, arguments);
                                                                arguments = J$.N(104881, 'arguments', arguments, true, false, false);
                                                                return J$.Rt(104865, J$.T(104857, true, 23, false));
                                                            } catch (J$e) {
                                                                J$.Ex(105825, J$e);
                                                            } finally {
                                                                if (J$.Fr(105833))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)),
                                                b: J$.M(104913, J$.R(104905, 'L', L, false, true), 'number', false)()
                                            }, 11, false)), 'check', false)(J$.T(105065, function (obj) {
                                                jalangiLabel1:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(105041, arguments.callee, this, arguments);
                                                            arguments = J$.N(105049, 'arguments', arguments, true, false, false);
                                                            obj = J$.N(105057, 'obj', obj, true, false, false);
                                                            if (J$.C(4728, J$.B(9634, '===', J$.G(104945, J$.R(104937, 'obj', obj, false, false), 'a'), J$.U(9626, '-', J$.G(104961, J$.R(104953, 'obj', obj, false, false), 'b'))))) {
                                                                return J$.Rt(104977, J$.T(104969, true, 23, false));
                                                            } else {
                                                                J$.P(105009, J$.R(104985, 'obj', obj, false, false), 'b', J$.U(9642, '-', J$.G(105001, J$.R(104993, 'obj', obj, false, false), 'a')));
                                                                return J$.Rt(105033, J$.T(105025, { msgType: J$.T(105017, 'custom_error', 21, false) }, 11, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(105841, J$e);
                                                        } finally {
                                                            if (J$.Fr(105849))
                                                                continue jalangiLabel1;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), schema, false, false);
                                            var validationResult = J$.W(105137, 'validationResult', J$.M(105129, J$.R(105089, 'L', L, false, true), 'validate', false)(J$.T(105113, {
                                                a: J$.T(105097, 3, 22, false),
                                                b: J$.U(9650, '-', J$.T(105105, 4, 22, false))
                                            }, 11, false), J$.R(105121, 'schema', schema, false, false)), validationResult, false, false);
                                            J$.M(105209, J$.G(105177, J$.F(105169, J$.R(105145, 'expect', expect, false, true), false)(J$.G(105161, J$.R(105153, 'validationResult', validationResult, false, false), 'value')), 'to'), 'eql', false)(J$.T(105201, {
                                                a: J$.T(105185, 3, 22, false),
                                                b: J$.U(9658, '-', J$.T(105193, 3, 22, false))
                                            }, 11, false));
                                            J$.M(105289, J$.G(105265, J$.G(105257, J$.G(105249, J$.F(105241, J$.R(105217, 'expect', expect, false, true), false)(J$.G(105233, J$.R(105225, 'validationResult', validationResult, false, false), 'warnings')), 'to'), 'deep'), 'have'), 'property', false)(J$.T(105273, '[0].msgType', 21, false), J$.T(105281, 'custom_error', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(105857, J$e);
                                        } finally {
                                            if (J$.Fr(105865))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(105761, J$.I(typeof it === 'undefined' ? it = J$.R(105345, 'it', undefined, true, true) : it = J$.R(105345, 'it', it, true, true)), false)(J$.T(105353, 'does propagate custom warnings from check() functions', 21, false), J$.T(105753, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(105713, arguments.callee, this, arguments);
                                            arguments = J$.N(105721, 'arguments', arguments, true, false, false);
                                            J$.N(105729, 'schema', schema, false, false, false);
                                            J$.N(105737, 'options', options, false, false, false);
                                            J$.N(105745, 'validationResult', validationResult, false, false, false);
                                            var schema = J$.W(105449, 'schema', J$.M(105441, J$.M(105369, J$.R(105361, 'L', L, false, true), 'object', false)(), 'check', false)(J$.T(105433, function () {
                                                jalangiLabel3:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(105417, arguments.callee, this, arguments);
                                                            arguments = J$.N(105425, 'arguments', arguments, true, false, false);
                                                            return J$.Rt(105409, J$.T(105401, [
                                                                J$.T(105385, { msgType: J$.T(105377, 'some_error', 21, false) }, 11, false),
                                                                J$.T(105393, 'some_warning', 21, false)
                                                            ], 10, false));
                                                        } catch (J$e) {
                                                            J$.Ex(105873, J$e);
                                                        } finally {
                                                            if (J$.Fr(105881))
                                                                continue jalangiLabel3;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), schema, false, false);
                                            var options = J$.W(105481, 'options', J$.T(105473, {
                                                allowUnknown: J$.T(105457, true, 23, false),
                                                warnUnknown: J$.T(105465, false, 23, false)
                                            }, 11, false), options, false, false);
                                            var validationResult = J$.W(105545, 'validationResult', J$.M(105537, J$.R(105489, 'L', L, false, true), 'validate', false)(J$.T(105513, {
                                                a: J$.T(105497, 3, 22, false),
                                                b: J$.U(9666, '-', J$.T(105505, 4, 22, false))
                                            }, 11, false), J$.R(105521, 'schema', schema, false, false), J$.R(105529, 'options', options, false, false)), validationResult, false, false);
                                            J$.M(105625, J$.G(105601, J$.G(105593, J$.G(105585, J$.F(105577, J$.R(105553, 'expect', expect, false, true), false)(J$.G(105569, J$.R(105561, 'validationResult', validationResult, false, false), 'warnings')), 'to'), 'deep'), 'have'), 'property', false)(J$.T(105609, '[0].msgType', 21, false), J$.T(105617, 'some_error', 21, false));
                                            J$.M(105705, J$.G(105681, J$.G(105673, J$.G(105665, J$.F(105657, J$.R(105633, 'expect', expect, false, true), false)(J$.G(105649, J$.R(105641, 'validationResult', validationResult, false, false), 'warnings')), 'to'), 'deep'), 'have'), 'property', false)(J$.T(105689, '[1].type', 21, false), J$.T(105697, 'some_warning', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(105889, J$e);
                                        } finally {
                                            if (J$.Fr(105897))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(105905, J$e);
                        } finally {
                            if (J$.Fr(105913))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(105921, J$e);
        } finally {
            if (J$.Sr(105929))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

