J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(126985, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/test/validate.object.test.js');
            J$.N(126993, 'expect', expect, false, false, false);
            J$.N(127001, 'L', L, false, false, false);
            J$.T(124137, 'use strict', 21, false);
            var expect = J$.W(124177, 'expect', J$.G(124169, J$.F(124161, J$.I(typeof require === 'undefined' ? require = J$.R(124145, 'require', undefined, true, true) : require = J$.R(124145, 'require', require, true, true)), false)(J$.T(124153, 'chai', 21, false)), 'expect'), expect, false, true);
            var L = J$.W(124209, 'L', J$.F(124201, J$.I(typeof require === 'undefined' ? require = J$.R(124185, 'require', undefined, true, true) : require = J$.R(124185, 'require', require, true, true)), false)(J$.T(124193, '../src/legalize-node.js', 21, false)), L, false, true);
            J$.F(126977, J$.I(typeof describe === 'undefined' ? describe = J$.R(124217, 'describe', undefined, true, true) : describe = J$.R(124217, 'describe', describe, true, true)), false)(J$.T(124225, 'object validations', 21, false), J$.T(126969, function () {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(126953, arguments.callee, this, arguments);
                            arguments = J$.N(126961, 'arguments', arguments, true, false, false);
                            J$.F(124569, J$.I(typeof it === 'undefined' ? it = J$.R(124233, 'it', undefined, true, true) : it = J$.R(124233, 'it', it, true, true)), false)(J$.T(124241, 'object().valid(...).valid(...) accepts ...', 21, false), J$.T(124561, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(124529, arguments.callee, this, arguments);
                                            arguments = J$.N(124537, 'arguments', arguments, true, false, false);
                                            J$.N(124545, 'result', result, false, false, false);
                                            J$.N(124553, 'schema', schema, false, false, false);
                                            var result;
                                            var schema = J$.W(124313, 'schema', J$.M(124305, J$.M(124281, J$.M(124257, J$.R(124249, 'L', L, false, true), 'object', false)(), 'valid', false)(J$.T(124273, { x: J$.T(124265, 3, 22, false) }, 11, false)), 'valid', false)(J$.T(124297, { y: J$.T(124289, 7, 22, false) }, 11, false)), schema, false, false);
                                            result = J$.W(124361, 'result', J$.M(124353, J$.R(124321, 'L', L, false, true), 'validate', false)(J$.T(124337, { x: J$.T(124329, 3, 22, false) }, 11, false), J$.R(124345, 'schema', schema, false, false)), result, false, false);
                                            J$.M(124417, J$.G(124409, J$.G(124401, J$.F(124393, J$.R(124369, 'expect', expect, false, true), false)(J$.U(10050, '!', J$.G(124385, J$.R(124377, 'result', result, false, false), 'error'))), 'to'), 'be'), 'true', false)();
                                            result = J$.W(124465, 'result', J$.M(124457, J$.R(124425, 'L', L, false, true), 'validate', false)(J$.T(124441, { y: J$.T(124433, 7, 22, false) }, 11, false), J$.R(124449, 'schema', schema, false, false)), result, false, false);
                                            J$.M(124521, J$.G(124513, J$.G(124505, J$.F(124497, J$.R(124473, 'expect', expect, false, true), false)(J$.U(10058, '!', J$.G(124489, J$.R(124481, 'result', result, false, false), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(127009, J$e);
                                        } finally {
                                            if (J$.Fr(127017))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(124801, J$.I(typeof it === 'undefined' ? it = J$.R(124577, 'it', undefined, true, true) : it = J$.R(124577, 'it', it, true, true)), false)(J$.T(124585, 'object().valid(...).valid(...) rejects ...', 21, false), J$.T(124793, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(124761, arguments.callee, this, arguments);
                                            arguments = J$.N(124769, 'arguments', arguments, true, false, false);
                                            J$.N(124777, 'result', result, false, false, false);
                                            J$.N(124785, 'schema', schema, false, false, false);
                                            var result;
                                            var schema = J$.W(124657, 'schema', J$.M(124649, J$.M(124625, J$.M(124601, J$.R(124593, 'L', L, false, true), 'object', false)(), 'valid', false)(J$.T(124617, { x: J$.T(124609, 3, 22, false) }, 11, false)), 'valid', false)(J$.T(124641, { y: J$.T(124633, 7, 22, false) }, 11, false)), schema, false, false);
                                            result = J$.W(124697, 'result', J$.M(124689, J$.R(124665, 'L', L, false, true), 'validate', false)(J$.T(124673, {}, 11, false), J$.R(124681, 'schema', schema, false, false)), result, false, false);
                                            J$.M(124753, J$.G(124745, J$.G(124737, J$.F(124729, J$.R(124705, 'expect', expect, false, true), false)(J$.U(10066, '!', J$.G(124721, J$.R(124713, 'result', result, false, false), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(127025, J$e);
                                        } finally {
                                            if (J$.Fr(127033))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(125137, J$.I(typeof it === 'undefined' ? it = J$.R(124809, 'it', undefined, true, true) : it = J$.R(124809, 'it', it, true, true)), false)(J$.T(124817, 'object().valid(..., ...) accepts ...', 21, false), J$.T(125129, function () {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(125097, arguments.callee, this, arguments);
                                            arguments = J$.N(125105, 'arguments', arguments, true, false, false);
                                            J$.N(125113, 'result', result, false, false, false);
                                            J$.N(125121, 'schema', schema, false, false, false);
                                            var result;
                                            var schema = J$.W(124881, 'schema', J$.M(124873, J$.M(124833, J$.R(124825, 'L', L, false, true), 'object', false)(), 'valid', false)(J$.T(124849, { x: J$.T(124841, 3, 22, false) }, 11, false), J$.T(124865, { y: J$.T(124857, 7, 22, false) }, 11, false)), schema, false, false);
                                            result = J$.W(124929, 'result', J$.M(124921, J$.R(124889, 'L', L, false, true), 'validate', false)(J$.T(124905, { x: J$.T(124897, 3, 22, false) }, 11, false), J$.R(124913, 'schema', schema, false, false)), result, false, false);
                                            J$.M(124985, J$.G(124977, J$.G(124969, J$.F(124961, J$.R(124937, 'expect', expect, false, true), false)(J$.U(10074, '!', J$.G(124953, J$.R(124945, 'result', result, false, false), 'error'))), 'to'), 'be'), 'true', false)();
                                            result = J$.W(125033, 'result', J$.M(125025, J$.R(124993, 'L', L, false, true), 'validate', false)(J$.T(125009, { y: J$.T(125001, 7, 22, false) }, 11, false), J$.R(125017, 'schema', schema, false, false)), result, false, false);
                                            J$.M(125089, J$.G(125081, J$.G(125073, J$.F(125065, J$.R(125041, 'expect', expect, false, true), false)(J$.U(10082, '!', J$.G(125057, J$.R(125049, 'result', result, false, false), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(127041, J$e);
                                        } finally {
                                            if (J$.Fr(127049))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(125361, J$.I(typeof it === 'undefined' ? it = J$.R(125145, 'it', undefined, true, true) : it = J$.R(125145, 'it', it, true, true)), false)(J$.T(125153, 'object().valid(..., ...) rejects ...', 21, false), J$.T(125353, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(125321, arguments.callee, this, arguments);
                                            arguments = J$.N(125329, 'arguments', arguments, true, false, false);
                                            J$.N(125337, 'result', result, false, false, false);
                                            J$.N(125345, 'schema', schema, false, false, false);
                                            var result;
                                            var schema = J$.W(125217, 'schema', J$.M(125209, J$.M(125169, J$.R(125161, 'L', L, false, true), 'object', false)(), 'valid', false)(J$.T(125185, { x: J$.T(125177, 3, 22, false) }, 11, false), J$.T(125201, { y: J$.T(125193, 7, 22, false) }, 11, false)), schema, false, false);
                                            result = J$.W(125257, 'result', J$.M(125249, J$.R(125225, 'L', L, false, true), 'validate', false)(J$.T(125233, {}, 11, false), J$.R(125241, 'schema', schema, false, false)), result, false, false);
                                            J$.M(125313, J$.G(125305, J$.G(125297, J$.F(125289, J$.R(125265, 'expect', expect, false, true), false)(J$.U(10090, '!', J$.G(125281, J$.R(125273, 'result', result, false, false), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(127057, J$e);
                                        } finally {
                                            if (J$.Fr(127065))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(125537, J$.I(typeof it === 'undefined' ? it = J$.R(125369, 'it', undefined, true, true) : it = J$.R(125369, 'it', it, true, true)), false)(J$.T(125377, 'object().type(RegExp) should accept regular expressions', 21, false), J$.T(125529, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(125505, arguments.callee, this, arguments);
                                            arguments = J$.N(125513, 'arguments', arguments, true, false, false);
                                            J$.N(125521, 'schema', schema, false, false, false);
                                            var schema = J$.W(125417, 'schema', J$.M(125409, J$.M(125393, J$.R(125385, 'L', L, false, true), 'object', false)(), 'type', false)(J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(125401, 'RegExp', undefined, true, true) : RegExp = J$.R(125401, 'RegExp', RegExp, true, true))), schema, false, false);
                                            J$.M(125497, J$.G(125489, J$.G(125481, J$.F(125473, J$.R(125425, 'expect', expect, false, true), false)(J$.U(10098, '!', J$.G(125465, J$.M(125457, J$.R(125433, 'L', L, false, true), 'validate', false)(J$.T(125441, /^[0-9]+$/, 14, false), J$.R(125449, 'schema', schema, false, false)), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(127073, J$e);
                                        } finally {
                                            if (J$.Fr(127081))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(125793, J$.I(typeof it === 'undefined' ? it = J$.R(125545, 'it', undefined, true, true) : it = J$.R(125545, 'it', it, true, true)), false)(J$.T(125553, 'object().type(RegExp) should reject anything but regular expressions', 21, false), J$.T(125785, function () {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(125761, arguments.callee, this, arguments);
                                            arguments = J$.N(125769, 'arguments', arguments, true, false, false);
                                            J$.N(125777, 'schema', schema, false, false, false);
                                            var schema = J$.W(125593, 'schema', J$.M(125585, J$.M(125569, J$.R(125561, 'L', L, false, true), 'object', false)(), 'type', false)(J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(125577, 'RegExp', undefined, true, true) : RegExp = J$.R(125577, 'RegExp', RegExp, true, true))), schema, false, false);
                                            J$.M(125673, J$.G(125665, J$.G(125657, J$.F(125649, J$.R(125601, 'expect', expect, false, true), false)(J$.U(10106, '!', J$.G(125641, J$.M(125633, J$.R(125609, 'L', L, false, true), 'validate', false)(J$.T(125617, 2353, 22, false), J$.R(125625, 'schema', schema, false, false)), 'error'))), 'to'), 'be'), 'false', false)();
                                            J$.M(125753, J$.G(125745, J$.G(125737, J$.F(125729, J$.R(125681, 'expect', expect, false, true), false)(J$.U(10114, '!', J$.G(125721, J$.M(125713, J$.R(125689, 'L', L, false, true), 'validate', false)(J$.T(125697, 'ax', 21, false), J$.R(125705, 'schema', schema, false, false)), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(127089, J$e);
                                        } finally {
                                            if (J$.Fr(127097))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(126081, J$.I(typeof it === 'undefined' ? it = J$.R(125801, 'it', undefined, true, true) : it = J$.R(125801, 'it', it, true, true)), false)(J$.T(125809, 'validate(..., {...}) should accept the object according to def.', 21, false), J$.T(126073, function () {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(126049, arguments.callee, this, arguments);
                                            arguments = J$.N(126057, 'arguments', arguments, true, false, false);
                                            J$.N(126065, 'result', result, false, false, false);
                                            var result = J$.W(125913, 'result', J$.M(125905, J$.R(125817, 'L', L, false, true), 'validate', false)(J$.T(125841, {
                                                x: J$.T(125825, 3, 22, false),
                                                y: J$.T(125833, 'hello', 21, false)
                                            }, 11, false), J$.T(125897, {
                                                x: J$.M(125873, J$.M(125857, J$.R(125849, 'L', L, false, true), 'any', false)(), 'valid', false)(J$.T(125865, 3, 22, false)),
                                                y: J$.M(125889, J$.R(125881, 'L', L, false, true), 'string', false)()
                                            }, 11, false)), result, false, false);
                                            J$.M(125969, J$.G(125961, J$.G(125953, J$.F(125945, J$.R(125921, 'expect', expect, false, true), false)(J$.U(10122, '!', J$.G(125937, J$.R(125929, 'result', result, false, false), 'error'))), 'to'), 'be'), 'true', false)();
                                            J$.M(126041, J$.G(126009, J$.F(126001, J$.R(125977, 'expect', expect, false, true), false)(J$.G(125993, J$.R(125985, 'result', result, false, false), 'value')), 'to'), 'eql', false)(J$.T(126033, {
                                                x: J$.T(126017, 3, 22, false),
                                                y: J$.T(126025, 'hello', 21, false)
                                            }, 11, false));
                                        } catch (J$e) {
                                            J$.Ex(127105, J$e);
                                        } finally {
                                            if (J$.Fr(127113))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(126329, J$.I(typeof it === 'undefined' ? it = J$.R(126089, 'it', undefined, true, true) : it = J$.R(126089, 'it', it, true, true)), false)(J$.T(126097, 'validate({}, {...}) should populate an object of default values', 21, false), J$.T(126321, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(126297, arguments.callee, this, arguments);
                                            arguments = J$.N(126305, 'arguments', arguments, true, false, false);
                                            J$.N(126313, 'result', result, false, false, false);
                                            var result = J$.W(126169, 'result', J$.M(126161, J$.R(126105, 'L', L, false, true), 'validate', false)(J$.T(126113, {}, 11, false), J$.T(126153, { x: J$.M(126145, J$.M(126129, J$.R(126121, 'L', L, false, true), 'any', false)(), 'default', false)(J$.T(126137, 3, 22, false)) }, 11, false)), result, false, false);
                                            J$.M(126225, J$.G(126217, J$.G(126209, J$.F(126201, J$.R(126177, 'expect', expect, false, true), false)(J$.U(10130, '!', J$.G(126193, J$.R(126185, 'result', result, false, false), 'error'))), 'to'), 'be'), 'true', false)();
                                            J$.M(126289, J$.G(126265, J$.F(126257, J$.R(126233, 'expect', expect, false, true), false)(J$.G(126249, J$.R(126241, 'result', result, false, false), 'value')), 'to'), 'eql', false)(J$.T(126281, { x: J$.T(126273, 3, 22, false) }, 11, false));
                                        } catch (J$e) {
                                            J$.Ex(127121, J$e);
                                        } finally {
                                            if (J$.Fr(127129))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(126673, J$.I(typeof it === 'undefined' ? it = J$.R(126337, 'it', undefined, true, true) : it = J$.R(126337, 'it', it, true, true)), false)(J$.T(126345, 'validate() with options strict=false', 21, false), J$.T(126665, function () {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(126641, arguments.callee, this, arguments);
                                            arguments = J$.N(126649, 'arguments', arguments, true, false, false);
                                            J$.N(126657, 'result', result, false, false, false);
                                            var result = J$.W(126489, 'result', J$.M(126481, J$.R(126353, 'L', L, false, true), 'validate', false)(J$.T(126393, {
                                                x: J$.T(126361, '34', 21, false),
                                                y: J$.T(126369, true, 23, false),
                                                z: J$.T(126377, 1, 22, false),
                                                q: J$.T(126385, '389457', 21, false)
                                            }, 11, false), J$.T(126457, {
                                                x: J$.M(126409, J$.R(126401, 'L', L, false, true), 'number', false)(),
                                                y: J$.M(126425, J$.R(126417, 'L', L, false, true), 'string', false)(),
                                                z: J$.M(126441, J$.R(126433, 'L', L, false, true), 'boolean', false)(),
                                                q: J$.T(126449, /^[0-9]+$/, 14, false)
                                            }, 11, false), J$.T(126473, { strict: J$.T(126465, false, 23, false) }, 11, false)), result, false, false);
                                            J$.M(126545, J$.G(126537, J$.G(126529, J$.F(126521, J$.R(126497, 'expect', expect, false, true), false)(J$.U(10138, '!', J$.G(126513, J$.R(126505, 'result', result, false, false), 'error'))), 'to'), 'be'), 'true', false)();
                                            J$.M(126633, J$.G(126585, J$.F(126577, J$.R(126553, 'expect', expect, false, true), false)(J$.G(126569, J$.R(126561, 'result', result, false, false), 'value')), 'to'), 'eql', false)(J$.T(126625, {
                                                x: J$.T(126593, 34, 22, false),
                                                y: J$.T(126601, 'true', 21, false),
                                                z: J$.T(126609, true, 23, false),
                                                q: J$.T(126617, '389457', 21, false)
                                            }, 11, false));
                                        } catch (J$e) {
                                            J$.Ex(127137, J$e);
                                        } finally {
                                            if (J$.Fr(127145))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(126945, J$.I(typeof it === 'undefined' ? it = J$.R(126681, 'it', undefined, true, true) : it = J$.R(126681, 'it', it, true, true)), false)(J$.T(126689, 'validate() with a callback works equally well', 21, false), J$.T(126937, function (done) {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(126913, arguments.callee, this, arguments);
                                            arguments = J$.N(126921, 'arguments', arguments, true, false, false);
                                            done = J$.N(126929, 'done', done, true, false, false);
                                            J$.M(126905, J$.R(126697, 'L', L, false, true), 'validate', false)(J$.T(126713, { x: J$.T(126705, 'woop woop', 21, false) }, 11, false), J$.T(126737, { x: J$.M(126729, J$.R(126721, 'L', L, false, true), 'string', false)() }, 11, false), J$.T(126897, function (err, val) {
                                                jalangiLabel9:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(126865, arguments.callee, this, arguments);
                                                            arguments = J$.N(126873, 'arguments', arguments, true, false, false);
                                                            err = J$.N(126881, 'err', err, true, false, false);
                                                            val = J$.N(126889, 'val', val, true, false, false);
                                                            J$.M(126785, J$.G(126777, J$.G(126769, J$.F(126761, J$.R(126745, 'expect', expect, false, true), false)(J$.U(10146, '!', J$.R(126753, 'err', err, false, false))), 'to'), 'be'), 'true', false)();
                                                            J$.M(126841, J$.G(126817, J$.F(126809, J$.R(126793, 'expect', expect, false, true), false)(J$.R(126801, 'val', val, false, false)), 'to'), 'eql', false)(J$.T(126833, { x: J$.T(126825, 'woop woop', 21, false) }, 11, false));
                                                            J$.F(126857, J$.R(126849, 'done', done, false, false), false)();
                                                        } catch (J$e) {
                                                            J$.Ex(127153, J$e);
                                                        } finally {
                                                            if (J$.Fr(127161))
                                                                continue jalangiLabel9;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(127169, J$e);
                                        } finally {
                                            if (J$.Fr(127177))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(127185, J$e);
                        } finally {
                            if (J$.Fr(127193))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(127201, J$e);
        } finally {
            if (J$.Sr(127209))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

