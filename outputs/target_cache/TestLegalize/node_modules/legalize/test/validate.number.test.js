J$.noInstrEval = false;
jalangiLabel17:
    while (true) {
        try {
            J$.Se(123825, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/test/validate.number.test.js');
            J$.N(123833, 'expect', expect, false, false, false);
            J$.N(123841, 'L', L, false, false, false);
            J$.T(121169, 'use strict', 21, false);
            var expect = J$.W(121209, 'expect', J$.G(121201, J$.F(121193, J$.I(typeof require === 'undefined' ? require = J$.R(121177, 'require', undefined, true, true) : require = J$.R(121177, 'require', require, true, true)), false)(J$.T(121185, 'chai', 21, false)), 'expect'), expect, false, true);
            var L = J$.W(121241, 'L', J$.F(121233, J$.I(typeof require === 'undefined' ? require = J$.R(121217, 'require', undefined, true, true) : require = J$.R(121217, 'require', require, true, true)), false)(J$.T(121225, '../src/legalize-node.js', 21, false)), L, false, true);
            J$.F(123817, J$.I(typeof describe === 'undefined' ? describe = J$.R(121249, 'describe', undefined, true, true) : describe = J$.R(121249, 'describe', describe, true, true)), false)(J$.T(121257, 'number validations', 21, false), J$.T(123809, function () {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(123793, arguments.callee, this, arguments);
                            arguments = J$.N(123801, 'arguments', arguments, true, false, false);
                            J$.F(121409, J$.I(typeof it === 'undefined' ? it = J$.R(121265, 'it', undefined, true, true) : it = J$.R(121265, 'it', it, true, true)), false)(J$.T(121273, 'number.min(470) should accept 470', 21, false), J$.T(121401, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(121385, arguments.callee, this, arguments);
                                            arguments = J$.N(121393, 'arguments', arguments, true, false, false);
                                            J$.M(121377, J$.G(121369, J$.G(121361, J$.F(121353, J$.R(121281, 'expect', expect, false, true), false)(J$.U(9914, '!', J$.G(121345, J$.M(121337, J$.R(121289, 'L', L, false, true), 'validate', false)(J$.T(121297, 470, 22, false), J$.M(121329, J$.M(121313, J$.R(121305, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(121321, 470, 22, false))), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(123849, J$e);
                                        } finally {
                                            if (J$.Fr(123857))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(121561, J$.I(typeof it === 'undefined' ? it = J$.R(121417, 'it', undefined, true, true) : it = J$.R(121417, 'it', it, true, true)), false)(J$.T(121425, 'number.greater(470) should accept 471', 21, false), J$.T(121553, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(121537, arguments.callee, this, arguments);
                                            arguments = J$.N(121545, 'arguments', arguments, true, false, false);
                                            J$.M(121529, J$.G(121521, J$.G(121513, J$.F(121505, J$.R(121433, 'expect', expect, false, true), false)(J$.U(9922, '!', J$.G(121497, J$.M(121489, J$.R(121441, 'L', L, false, true), 'validate', false)(J$.T(121449, 471, 22, false), J$.M(121481, J$.M(121465, J$.R(121457, 'L', L, false, true), 'number', false)(), 'greater', false)(J$.T(121473, 470, 22, false))), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(123865, J$e);
                                        } finally {
                                            if (J$.Fr(123873))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(121713, J$.I(typeof it === 'undefined' ? it = J$.R(121569, 'it', undefined, true, true) : it = J$.R(121569, 'it', it, true, true)), false)(J$.T(121577, 'number.min(470) should accept 1470', 21, false), J$.T(121705, function () {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(121689, arguments.callee, this, arguments);
                                            arguments = J$.N(121697, 'arguments', arguments, true, false, false);
                                            J$.M(121681, J$.G(121673, J$.G(121665, J$.F(121657, J$.R(121585, 'expect', expect, false, true), false)(J$.U(9930, '!', J$.G(121649, J$.M(121641, J$.R(121593, 'L', L, false, true), 'validate', false)(J$.T(121601, 1470, 22, false), J$.M(121633, J$.M(121617, J$.R(121609, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(121625, 470, 22, false))), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(123881, J$e);
                                        } finally {
                                            if (J$.Fr(123889))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(121865, J$.I(typeof it === 'undefined' ? it = J$.R(121721, 'it', undefined, true, true) : it = J$.R(121721, 'it', it, true, true)), false)(J$.T(121729, 'number.lesser(470) should accept 469', 21, false), J$.T(121857, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(121841, arguments.callee, this, arguments);
                                            arguments = J$.N(121849, 'arguments', arguments, true, false, false);
                                            J$.M(121833, J$.G(121825, J$.G(121817, J$.F(121809, J$.R(121737, 'expect', expect, false, true), false)(J$.U(9938, '!', J$.G(121801, J$.M(121793, J$.R(121745, 'L', L, false, true), 'validate', false)(J$.T(121753, 469, 22, false), J$.M(121785, J$.M(121769, J$.R(121761, 'L', L, false, true), 'number', false)(), 'lesser', false)(J$.T(121777, 470, 22, false))), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(123897, J$e);
                                        } finally {
                                            if (J$.Fr(123905))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(122017, J$.I(typeof it === 'undefined' ? it = J$.R(121873, 'it', undefined, true, true) : it = J$.R(121873, 'it', it, true, true)), false)(J$.T(121881, 'number.max(470) should accept 470', 21, false), J$.T(122009, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(121993, arguments.callee, this, arguments);
                                            arguments = J$.N(122001, 'arguments', arguments, true, false, false);
                                            J$.M(121985, J$.G(121977, J$.G(121969, J$.F(121961, J$.R(121889, 'expect', expect, false, true), false)(J$.U(9946, '!', J$.G(121953, J$.M(121945, J$.R(121897, 'L', L, false, true), 'validate', false)(J$.T(121905, 470, 22, false), J$.M(121937, J$.M(121921, J$.R(121913, 'L', L, false, true), 'number', false)(), 'max', false)(J$.T(121929, 470, 22, false))), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(123913, J$e);
                                        } finally {
                                            if (J$.Fr(123921))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(122169, J$.I(typeof it === 'undefined' ? it = J$.R(122025, 'it', undefined, true, true) : it = J$.R(122025, 'it', it, true, true)), false)(J$.T(122033, 'number.min(470).max(470) should accept 470', 21, false), J$.T(122161, function () {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(122145, arguments.callee, this, arguments);
                                            arguments = J$.N(122153, 'arguments', arguments, true, false, false);
                                            J$.M(122137, J$.G(122129, J$.G(122121, J$.F(122113, J$.R(122041, 'expect', expect, false, true), false)(J$.U(9954, '!', J$.G(122105, J$.M(122097, J$.R(122049, 'L', L, false, true), 'validate', false)(J$.T(122057, 470, 22, false), J$.M(122089, J$.M(122073, J$.R(122065, 'L', L, false, true), 'number', false)(), 'max', false)(J$.T(122081, 470, 22, false))), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(123929, J$e);
                                        } finally {
                                            if (J$.Fr(123937))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(122337, J$.I(typeof it === 'undefined' ? it = J$.R(122177, 'it', undefined, true, true) : it = J$.R(122177, 'it', it, true, true)), false)(J$.T(122185, 'number.min(130).max(470) should accept 470', 21, false), J$.T(122329, function () {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(122313, arguments.callee, this, arguments);
                                            arguments = J$.N(122321, 'arguments', arguments, true, false, false);
                                            J$.M(122305, J$.G(122297, J$.G(122289, J$.F(122281, J$.R(122193, 'expect', expect, false, true), false)(J$.U(9962, '!', J$.G(122273, J$.M(122265, J$.R(122201, 'L', L, false, true), 'validate', false)(J$.T(122209, 470, 22, false), J$.M(122257, J$.M(122241, J$.M(122225, J$.R(122217, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(122233, 130, 22, false)), 'max', false)(J$.T(122249, 470, 22, false))), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(123945, J$e);
                                        } finally {
                                            if (J$.Fr(123953))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(122505, J$.I(typeof it === 'undefined' ? it = J$.R(122345, 'it', undefined, true, true) : it = J$.R(122345, 'it', it, true, true)), false)(J$.T(122353, 'number.min(130).max(470) should accept 130', 21, false), J$.T(122497, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(122481, arguments.callee, this, arguments);
                                            arguments = J$.N(122489, 'arguments', arguments, true, false, false);
                                            J$.M(122473, J$.G(122465, J$.G(122457, J$.F(122449, J$.R(122361, 'expect', expect, false, true), false)(J$.U(9970, '!', J$.G(122441, J$.M(122433, J$.R(122369, 'L', L, false, true), 'validate', false)(J$.T(122377, 130, 22, false), J$.M(122425, J$.M(122409, J$.M(122393, J$.R(122385, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(122401, 130, 22, false)), 'max', false)(J$.T(122417, 470, 22, false))), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(123961, J$e);
                                        } finally {
                                            if (J$.Fr(123969))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(122673, J$.I(typeof it === 'undefined' ? it = J$.R(122513, 'it', undefined, true, true) : it = J$.R(122513, 'it', it, true, true)), false)(J$.T(122521, 'number.min(130).max(470) should accept 200', 21, false), J$.T(122665, function () {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(122649, arguments.callee, this, arguments);
                                            arguments = J$.N(122657, 'arguments', arguments, true, false, false);
                                            J$.M(122641, J$.G(122633, J$.G(122625, J$.F(122617, J$.R(122529, 'expect', expect, false, true), false)(J$.U(9978, '!', J$.G(122609, J$.M(122601, J$.R(122537, 'L', L, false, true), 'validate', false)(J$.T(122545, 470, 22, false), J$.M(122593, J$.M(122577, J$.M(122561, J$.R(122553, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(122569, 130, 22, false)), 'max', false)(J$.T(122585, 470, 22, false))), 'error'))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(123977, J$e);
                                        } finally {
                                            if (J$.Fr(123985))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(122825, J$.I(typeof it === 'undefined' ? it = J$.R(122681, 'it', undefined, true, true) : it = J$.R(122681, 'it', it, true, true)), false)(J$.T(122689, 'number.min(470) should reject 469', 21, false), J$.T(122817, function () {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(122801, arguments.callee, this, arguments);
                                            arguments = J$.N(122809, 'arguments', arguments, true, false, false);
                                            J$.M(122793, J$.G(122785, J$.G(122777, J$.F(122769, J$.R(122697, 'expect', expect, false, true), false)(J$.U(9986, '!', J$.G(122761, J$.M(122753, J$.R(122705, 'L', L, false, true), 'validate', false)(J$.T(122713, 469, 22, false), J$.M(122745, J$.M(122729, J$.R(122721, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(122737, 470, 22, false))), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(123993, J$e);
                                        } finally {
                                            if (J$.Fr(124001))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(122977, J$.I(typeof it === 'undefined' ? it = J$.R(122833, 'it', undefined, true, true) : it = J$.R(122833, 'it', it, true, true)), false)(J$.T(122841, 'number.min(470) should reject -1470', 21, false), J$.T(122969, function () {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(122953, arguments.callee, this, arguments);
                                            arguments = J$.N(122961, 'arguments', arguments, true, false, false);
                                            J$.M(122945, J$.G(122937, J$.G(122929, J$.F(122921, J$.R(122849, 'expect', expect, false, true), false)(J$.U(10002, '!', J$.G(122913, J$.M(122905, J$.R(122857, 'L', L, false, true), 'validate', false)(J$.U(9994, '-', J$.T(122865, 1470, 22, false)), J$.M(122897, J$.M(122881, J$.R(122873, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(122889, 470, 22, false))), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(124009, J$e);
                                        } finally {
                                            if (J$.Fr(124017))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(123129, J$.I(typeof it === 'undefined' ? it = J$.R(122985, 'it', undefined, true, true) : it = J$.R(122985, 'it', it, true, true)), false)(J$.T(122993, 'number.max(470) should reject 471', 21, false), J$.T(123121, function () {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(123105, arguments.callee, this, arguments);
                                            arguments = J$.N(123113, 'arguments', arguments, true, false, false);
                                            J$.M(123097, J$.G(123089, J$.G(123081, J$.F(123073, J$.R(123001, 'expect', expect, false, true), false)(J$.U(10010, '!', J$.G(123065, J$.M(123057, J$.R(123009, 'L', L, false, true), 'validate', false)(J$.T(123017, 471, 22, false), J$.M(123049, J$.M(123033, J$.R(123025, 'L', L, false, true), 'number', false)(), 'max', false)(J$.T(123041, 470, 22, false))), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(124025, J$e);
                                        } finally {
                                            if (J$.Fr(124033))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(123281, J$.I(typeof it === 'undefined' ? it = J$.R(123137, 'it', undefined, true, true) : it = J$.R(123137, 'it', it, true, true)), false)(J$.T(123145, 'number.min(470).max(470) should reject 471', 21, false), J$.T(123273, function () {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(123257, arguments.callee, this, arguments);
                                            arguments = J$.N(123265, 'arguments', arguments, true, false, false);
                                            J$.M(123249, J$.G(123241, J$.G(123233, J$.F(123225, J$.R(123153, 'expect', expect, false, true), false)(J$.U(10018, '!', J$.G(123217, J$.M(123209, J$.R(123161, 'L', L, false, true), 'validate', false)(J$.T(123169, 471, 22, false), J$.M(123201, J$.M(123185, J$.R(123177, 'L', L, false, true), 'number', false)(), 'max', false)(J$.T(123193, 470, 22, false))), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(124041, J$e);
                                        } finally {
                                            if (J$.Fr(124049))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(123449, J$.I(typeof it === 'undefined' ? it = J$.R(123289, 'it', undefined, true, true) : it = J$.R(123289, 'it', it, true, true)), false)(J$.T(123297, 'number.min(470).max(470) should reject 469', 21, false), J$.T(123441, function () {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(123425, arguments.callee, this, arguments);
                                            arguments = J$.N(123433, 'arguments', arguments, true, false, false);
                                            J$.M(123417, J$.G(123409, J$.G(123401, J$.F(123393, J$.R(123305, 'expect', expect, false, true), false)(J$.U(10026, '!', J$.G(123385, J$.M(123377, J$.R(123313, 'L', L, false, true), 'validate', false)(J$.T(123321, 469, 22, false), J$.M(123369, J$.M(123353, J$.M(123337, J$.R(123329, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(123345, 470, 22, false)), 'max', false)(J$.T(123361, 470, 22, false))), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(124057, J$e);
                                        } finally {
                                            if (J$.Fr(124065))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(123617, J$.I(typeof it === 'undefined' ? it = J$.R(123457, 'it', undefined, true, true) : it = J$.R(123457, 'it', it, true, true)), false)(J$.T(123465, 'number.min(130).max(470) should reject 471', 21, false), J$.T(123609, function () {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(123593, arguments.callee, this, arguments);
                                            arguments = J$.N(123601, 'arguments', arguments, true, false, false);
                                            J$.M(123585, J$.G(123577, J$.G(123569, J$.F(123561, J$.R(123473, 'expect', expect, false, true), false)(J$.U(10034, '!', J$.G(123553, J$.M(123545, J$.R(123481, 'L', L, false, true), 'validate', false)(J$.T(123489, 471, 22, false), J$.M(123537, J$.M(123521, J$.M(123505, J$.R(123497, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(123513, 130, 22, false)), 'max', false)(J$.T(123529, 470, 22, false))), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(124073, J$e);
                                        } finally {
                                            if (J$.Fr(124081))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(123785, J$.I(typeof it === 'undefined' ? it = J$.R(123625, 'it', undefined, true, true) : it = J$.R(123625, 'it', it, true, true)), false)(J$.T(123633, 'number.min(130).max(470) should reject 129', 21, false), J$.T(123777, function () {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(123761, arguments.callee, this, arguments);
                                            arguments = J$.N(123769, 'arguments', arguments, true, false, false);
                                            J$.M(123753, J$.G(123745, J$.G(123737, J$.F(123729, J$.R(123641, 'expect', expect, false, true), false)(J$.U(10042, '!', J$.G(123721, J$.M(123713, J$.R(123649, 'L', L, false, true), 'validate', false)(J$.T(123657, 129, 22, false), J$.M(123705, J$.M(123689, J$.M(123673, J$.R(123665, 'L', L, false, true), 'number', false)(), 'min', false)(J$.T(123681, 130, 22, false)), 'max', false)(J$.T(123697, 470, 22, false))), 'error'))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(124089, J$e);
                                        } finally {
                                            if (J$.Fr(124097))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(124105, J$e);
                        } finally {
                            if (J$.Fr(124113))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(124121, J$e);
        } finally {
            if (J$.Sr(124129))
                continue jalangiLabel17;
            else
                break jalangiLabel17;
        }
    }
// JALANGI DO NOT INSTRUMENT

