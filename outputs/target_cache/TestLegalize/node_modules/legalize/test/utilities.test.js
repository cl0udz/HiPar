J$.noInstrEval = false;
jalangiLabel28:
    while (true) {
        try {
            J$.Se(3036833, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/test/utilities.test.js');
            J$.N(3036841, 'expect', expect, false, false, false);
            J$.N(3036849, 'core', core, false, false, false);
            J$.T(3031353, 'use strict', 21, false);
            var expect = J$.W(3031393, 'expect', J$.G(3031385, J$.F(3031377, J$.I(typeof require === 'undefined' ? require = J$.R(3031361, 'require', undefined, true, true) : require = J$.R(3031361, 'require', require, true, true)), false)(J$.T(3031369, 'chai', 21, false)), 'expect'), expect, false, true);
            var core = J$.W(3031425, 'core', J$.F(3031417, J$.I(typeof require === 'undefined' ? require = J$.R(3031401, 'require', undefined, true, true) : require = J$.R(3031401, 'require', require, true, true)), false)(J$.T(3031409, '../src/legalize.js', 21, false)), core, false, true);
            J$.F(3036825, J$.I(typeof describe === 'undefined' ? describe = J$.R(3031433, 'describe', undefined, true, true) : describe = J$.R(3031433, 'describe', describe, true, true)), false)(J$.T(3031441, 'utilities', 21, false), J$.T(3036817, function () {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(3036801, arguments.callee, this, arguments);
                            arguments = J$.N(3036809, 'arguments', arguments, true, false, false);
                            J$.F(3031665, J$.I(typeof it === 'undefined' ? it = J$.R(3031449, 'it', undefined, true, true) : it = J$.R(3031449, 'it', it, true, true)), false)(J$.T(3031457, '#isFunction should return true when given a function', 21, false), J$.T(3031657, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(3031641, arguments.callee, this, arguments);
                                            arguments = J$.N(3031649, 'arguments', arguments, true, false, false);
                                            J$.M(3031553, J$.G(3031537, J$.G(3031529, J$.G(3031521, J$.F(3031513, J$.R(3031465, 'expect', expect, false, true), false)(J$.M(3031505, J$.R(3031473, 'core', core, false, true), 'isFunction', false)(J$.T(3031497, function () {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3031481, arguments.callee, this, arguments);
                                                            arguments = J$.N(3031489, 'arguments', arguments, true, false, false);
                                                        } catch (J$e) {
                                                            J$.Ex(3036857, J$e);
                                                        } finally {
                                                            if (J$.Fr(3036865))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3031545, true, 23, false));
                                            J$.M(3031633, J$.G(3031617, J$.G(3031609, J$.G(3031601, J$.F(3031593, J$.R(3031561, 'expect', expect, false, true), false)(J$.M(3031585, J$.R(3031569, 'core', core, false, true), 'isFunction', false)(J$.T(3031577, {}, 11, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3031625, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3036873, J$e);
                                        } finally {
                                            if (J$.Fr(3036881))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3032033, J$.I(typeof it === 'undefined' ? it = J$.R(3031673, 'it', undefined, true, true) : it = J$.R(3031673, 'it', it, true, true)), false)(J$.T(3031681, '#isFunction should return false when not given a function', 21, false), J$.T(3032025, function () {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(3032009, arguments.callee, this, arguments);
                                            arguments = J$.N(3032017, 'arguments', arguments, true, false, false);
                                            J$.M(3031761, J$.G(3031745, J$.G(3031737, J$.G(3031729, J$.F(3031721, J$.R(3031689, 'expect', expect, false, true), false)(J$.M(3031713, J$.R(3031697, 'core', core, false, true), 'isFunction', false)(J$.T(3031705, {}, 11, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3031753, false, 23, false));
                                            J$.M(3031841, J$.G(3031825, J$.G(3031817, J$.G(3031809, J$.F(3031801, J$.R(3031769, 'expect', expect, false, true), false)(J$.M(3031793, J$.R(3031777, 'core', core, false, true), 'isFunction', false)(J$.T(3031785, '', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3031833, false, 23, false));
                                            J$.M(3031921, J$.G(3031905, J$.G(3031897, J$.G(3031889, J$.F(3031881, J$.R(3031849, 'expect', expect, false, true), false)(J$.M(3031873, J$.R(3031857, 'core', core, false, true), 'isFunction', false)(J$.T(3031865, undefined, 24, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3031913, false, 23, false));
                                            J$.M(3032001, J$.G(3031985, J$.G(3031977, J$.G(3031969, J$.F(3031961, J$.R(3031929, 'expect', expect, false, true), false)(J$.M(3031953, J$.R(3031937, 'core', core, false, true), 'isFunction', false)(J$.T(3031945, null, 25, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3031993, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3036889, J$e);
                                        } finally {
                                            if (J$.Fr(3036897))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3032153, J$.I(typeof it === 'undefined' ? it = J$.R(3032041, 'it', undefined, true, true) : it = J$.R(3032041, 'it', it, true, true)), false)(J$.T(3032049, '#isObject should return true if passed an object', 21, false), J$.T(3032145, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(3032129, arguments.callee, this, arguments);
                                            arguments = J$.N(3032137, 'arguments', arguments, true, false, false);
                                            J$.M(3032121, J$.G(3032105, J$.G(3032097, J$.F(3032089, J$.R(3032057, 'expect', expect, false, true), false)(J$.M(3032081, J$.R(3032065, 'core', core, false, true), 'isObject', false)(J$.T(3032073, {}, 11, false))), 'to'), 'be'), 'equal', false)(J$.T(3032113, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3036905, J$e);
                                        } finally {
                                            if (J$.Fr(3036913))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3032273, J$.I(typeof it === 'undefined' ? it = J$.R(3032161, 'it', undefined, true, true) : it = J$.R(3032161, 'it', it, true, true)), false)(J$.T(3032169, '#isObject should return false if passed `null\'', 21, false), J$.T(3032265, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(3032249, arguments.callee, this, arguments);
                                            arguments = J$.N(3032257, 'arguments', arguments, true, false, false);
                                            J$.M(3032241, J$.G(3032225, J$.G(3032217, J$.F(3032209, J$.R(3032177, 'expect', expect, false, true), false)(J$.M(3032201, J$.R(3032185, 'core', core, false, true), 'isObject', false)(J$.T(3032193, null, 25, false))), 'to'), 'be'), 'equal', false)(J$.T(3032233, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3036921, J$e);
                                        } finally {
                                            if (J$.Fr(3036929))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3032393, J$.I(typeof it === 'undefined' ? it = J$.R(3032281, 'it', undefined, true, true) : it = J$.R(3032281, 'it', it, true, true)), false)(J$.T(3032289, '#isEmpty should return true for the empty string', 21, false), J$.T(3032385, function () {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(3032369, arguments.callee, this, arguments);
                                            arguments = J$.N(3032377, 'arguments', arguments, true, false, false);
                                            J$.M(3032361, J$.G(3032345, J$.G(3032337, J$.F(3032329, J$.R(3032297, 'expect', expect, false, true), false)(J$.M(3032321, J$.R(3032305, 'core', core, false, true), 'isEmpty', false)(J$.T(3032313, '', 21, false))), 'to'), 'be'), 'equal', false)(J$.T(3032353, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3036937, J$e);
                                        } finally {
                                            if (J$.Fr(3036945))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3032513, J$.I(typeof it === 'undefined' ? it = J$.R(3032401, 'it', undefined, true, true) : it = J$.R(3032401, 'it', it, true, true)), false)(J$.T(3032409, '#isEmpty should return true for the empty object', 21, false), J$.T(3032505, function () {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(3032489, arguments.callee, this, arguments);
                                            arguments = J$.N(3032497, 'arguments', arguments, true, false, false);
                                            J$.M(3032481, J$.G(3032465, J$.G(3032457, J$.F(3032449, J$.R(3032417, 'expect', expect, false, true), false)(J$.M(3032441, J$.R(3032425, 'core', core, false, true), 'isEmpty', false)(J$.T(3032433, {}, 11, false))), 'to'), 'be'), 'equal', false)(J$.T(3032473, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3036953, J$e);
                                        } finally {
                                            if (J$.Fr(3036961))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3032633, J$.I(typeof it === 'undefined' ? it = J$.R(3032521, 'it', undefined, true, true) : it = J$.R(3032521, 'it', it, true, true)), false)(J$.T(3032529, '#isUndefined should return true for `undefined\'', 21, false), J$.T(3032625, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(3032609, arguments.callee, this, arguments);
                                            arguments = J$.N(3032617, 'arguments', arguments, true, false, false);
                                            J$.M(3032601, J$.G(3032585, J$.G(3032577, J$.F(3032569, J$.R(3032537, 'expect', expect, false, true), false)(J$.M(3032561, J$.R(3032545, 'core', core, false, true), 'isUndefined', false)(J$.T(3032553, undefined, 24, false))), 'to'), 'be'), 'equal', false)(J$.T(3032593, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3036969, J$e);
                                        } finally {
                                            if (J$.Fr(3036977))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3032753, J$.I(typeof it === 'undefined' ? it = J$.R(3032641, 'it', undefined, true, true) : it = J$.R(3032641, 'it', it, true, true)), false)(J$.T(3032649, '#isUndefined should return true for `null\'', 21, false), J$.T(3032745, function () {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(3032729, arguments.callee, this, arguments);
                                            arguments = J$.N(3032737, 'arguments', arguments, true, false, false);
                                            J$.M(3032721, J$.G(3032705, J$.G(3032697, J$.F(3032689, J$.R(3032657, 'expect', expect, false, true), false)(J$.M(3032681, J$.R(3032665, 'core', core, false, true), 'isUndefined', false)(J$.T(3032673, null, 25, false))), 'to'), 'be'), 'equal', false)(J$.T(3032713, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3036985, J$e);
                                        } finally {
                                            if (J$.Fr(3036993))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3032881, J$.I(typeof it === 'undefined' ? it = J$.R(3032761, 'it', undefined, true, true) : it = J$.R(3032761, 'it', it, true, true)), false)(J$.T(3032769, '#isDefined should return false for `undefined\'', 21, false), J$.T(3032873, function () {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(3032857, arguments.callee, this, arguments);
                                            arguments = J$.N(3032865, 'arguments', arguments, true, false, false);
                                            J$.M(3032849, J$.G(3032833, J$.G(3032825, J$.G(3032817, J$.F(3032809, J$.R(3032777, 'expect', expect, false, true), false)(J$.M(3032801, J$.R(3032785, 'core', core, false, true), 'isDefined', false)(J$.T(3032793, undefined, 24, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3032841, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3037001, J$e);
                                        } finally {
                                            if (J$.Fr(3037009))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3033009, J$.I(typeof it === 'undefined' ? it = J$.R(3032889, 'it', undefined, true, true) : it = J$.R(3032889, 'it', it, true, true)), false)(J$.T(3032897, '#isDefined should return false for `null\'', 21, false), J$.T(3033001, function () {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(3032985, arguments.callee, this, arguments);
                                            arguments = J$.N(3032993, 'arguments', arguments, true, false, false);
                                            J$.M(3032977, J$.G(3032961, J$.G(3032953, J$.G(3032945, J$.F(3032937, J$.R(3032905, 'expect', expect, false, true), false)(J$.M(3032929, J$.R(3032913, 'core', core, false, true), 'isDefined', false)(J$.T(3032921, null, 25, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3032969, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3037017, J$e);
                                        } finally {
                                            if (J$.Fr(3037025))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3033153, J$.I(typeof it === 'undefined' ? it = J$.R(3033017, 'it', undefined, true, true) : it = J$.R(3033017, 'it', it, true, true)), false)(J$.T(3033025, '#getLength should return 2 for { a: ..., b: ... }', 21, false), J$.T(3033145, function () {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(3033129, arguments.callee, this, arguments);
                                            arguments = J$.N(3033137, 'arguments', arguments, true, false, false);
                                            J$.M(3033121, J$.G(3033105, J$.G(3033097, J$.G(3033089, J$.F(3033081, J$.R(3033033, 'expect', expect, false, true), false)(J$.M(3033073, J$.R(3033041, 'core', core, false, true), 'getLength', false)(J$.T(3033065, {
                                                a: J$.T(3033049, null, 25, false),
                                                b: J$.T(3033057, null, 25, false)
                                            }, 11, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3033113, 2, 22, false));
                                        } catch (J$e) {
                                            J$.Ex(3037033, J$e);
                                        } finally {
                                            if (J$.Fr(3037041))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3033281, J$.I(typeof it === 'undefined' ? it = J$.R(3033161, 'it', undefined, true, true) : it = J$.R(3033161, 'it', it, true, true)), false)(J$.T(3033169, '#getLength should return 10 for \'0123456789\'', 21, false), J$.T(3033273, function () {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(3033257, arguments.callee, this, arguments);
                                            arguments = J$.N(3033265, 'arguments', arguments, true, false, false);
                                            J$.M(3033249, J$.G(3033233, J$.G(3033225, J$.G(3033217, J$.F(3033209, J$.R(3033177, 'expect', expect, false, true), false)(J$.M(3033201, J$.R(3033185, 'core', core, false, true), 'getLength', false)(J$.T(3033193, '0123456789', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3033241, 10, 22, false));
                                        } catch (J$e) {
                                            J$.Ex(3037049, J$e);
                                        } finally {
                                            if (J$.Fr(3037057))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3033433, J$.I(typeof it === 'undefined' ? it = J$.R(3033289, 'it', undefined, true, true) : it = J$.R(3033289, 'it', it, true, true)), false)(J$.T(3033297, '#getLength should return 3 for `[1, \'hello\', {}]\'', 21, false), J$.T(3033425, function () {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(3033409, arguments.callee, this, arguments);
                                            arguments = J$.N(3033417, 'arguments', arguments, true, false, false);
                                            J$.M(3033401, J$.G(3033385, J$.G(3033377, J$.G(3033369, J$.F(3033361, J$.R(3033305, 'expect', expect, false, true), false)(J$.M(3033353, J$.R(3033313, 'core', core, false, true), 'getLength', false)(J$.T(3033345, [
                                                J$.T(3033321, 1, 22, false),
                                                J$.T(3033329, 'hello', 21, false),
                                                J$.T(3033337, {}, 11, false)
                                            ], 10, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3033393, 3, 22, false));
                                        } catch (J$e) {
                                            J$.Ex(3037065, J$e);
                                        } finally {
                                            if (J$.Fr(3037073))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3033625, J$.I(typeof it === 'undefined' ? it = J$.R(3033441, 'it', undefined, true, true) : it = J$.R(3033441, 'it', it, true, true)), false)(J$.T(3033449, '#getLength should return `undefined\' if not object, array, or string', 21, false), J$.T(3033617, function () {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(3033601, arguments.callee, this, arguments);
                                            arguments = J$.N(3033609, 'arguments', arguments, true, false, false);
                                            J$.M(3033529, J$.G(3033521, J$.G(3033513, J$.F(3033505, J$.R(3033457, 'expect', expect, false, true), false)(J$.M(3033497, J$.R(3033465, 'core', core, false, true), 'getLength', false)(J$.T(3033489, function () {
                                                jalangiLabel14:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3033473, arguments.callee, this, arguments);
                                                            arguments = J$.N(3033481, 'arguments', arguments, true, false, false);
                                                        } catch (J$e) {
                                                            J$.Ex(3037081, J$e);
                                                        } finally {
                                                            if (J$.Fr(3037089))
                                                                continue jalangiLabel14;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false))), 'to'), 'be'), 'undefined', false)();
                                            J$.M(3033593, J$.G(3033585, J$.G(3033577, J$.F(3033569, J$.R(3033537, 'expect', expect, false, true), false)(J$.M(3033561, J$.R(3033545, 'core', core, false, true), 'getLength', false)(J$.T(3033553, 0.01, 22, false))), 'to'), 'be'), 'undefined', false)();
                                        } catch (J$e) {
                                            J$.Ex(3037097, J$e);
                                        } finally {
                                            if (J$.Fr(3037105))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3033833, J$.I(typeof it === 'undefined' ? it = J$.R(3033633, 'it', undefined, true, true) : it = J$.R(3033633, 'it', it, true, true)), false)(J$.T(3033641, '#isNumber should return true when given a number', 21, false), J$.T(3033825, function () {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(3033809, arguments.callee, this, arguments);
                                            arguments = J$.N(3033817, 'arguments', arguments, true, false, false);
                                            J$.M(3033721, J$.G(3033705, J$.G(3033697, J$.G(3033689, J$.F(3033681, J$.R(3033649, 'expect', expect, false, true), false)(J$.M(3033673, J$.R(3033657, 'core', core, false, true), 'isNumber', false)(J$.T(3033665, 1.7e-22, 22, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3033713, true, 23, false));
                                            J$.M(3033801, J$.G(3033785, J$.G(3033777, J$.G(3033769, J$.F(3033761, J$.R(3033729, 'expect', expect, false, true), false)(J$.M(3033753, J$.R(3033737, 'core', core, false, true), 'isNumber', false)(J$.T(3033745, NaN, 22, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3033793, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3037113, J$e);
                                        } finally {
                                            if (J$.Fr(3037121))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3034121, J$.I(typeof it === 'undefined' ? it = J$.R(3033841, 'it', undefined, true, true) : it = J$.R(3033841, 'it', it, true, true)), false)(J$.T(3033849, '#isNumber should return  when not given a number', 21, false), J$.T(3034113, function () {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(3034097, arguments.callee, this, arguments);
                                            arguments = J$.N(3034105, 'arguments', arguments, true, false, false);
                                            J$.M(3033929, J$.G(3033913, J$.G(3033905, J$.G(3033897, J$.F(3033889, J$.R(3033857, 'expect', expect, false, true), false)(J$.M(3033881, J$.R(3033865, 'core', core, false, true), 'isNumber', false)(J$.T(3033873, '123', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3033921, false, 23, false));
                                            J$.M(3034009, J$.G(3033993, J$.G(3033985, J$.G(3033977, J$.F(3033969, J$.R(3033937, 'expect', expect, false, true), false)(J$.M(3033961, J$.R(3033945, 'core', core, false, true), 'isNumber', false)(J$.T(3033953, /hello/, 14, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034001, false, 23, false));
                                            J$.M(3034089, J$.G(3034073, J$.G(3034065, J$.G(3034057, J$.F(3034049, J$.R(3034017, 'expect', expect, false, true), false)(J$.M(3034041, J$.R(3034025, 'core', core, false, true), 'isNumber', false)(J$.T(3034033, {}, 11, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034081, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3037129, J$e);
                                        } finally {
                                            if (J$.Fr(3037137))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3034729, J$.I(typeof it === 'undefined' ? it = J$.R(3034129, 'it', undefined, true, true) : it = J$.R(3034129, 'it', it, true, true)), false)(J$.T(3034137, '#isNumeric should work for strings and numbers', 21, false), J$.T(3034721, function () {
                                jalangiLabel18:
                                    while (true) {
                                        try {
                                            J$.Fe(3034705, arguments.callee, this, arguments);
                                            arguments = J$.N(3034713, 'arguments', arguments, true, false, false);
                                            J$.M(3034217, J$.G(3034201, J$.G(3034193, J$.G(3034185, J$.F(3034177, J$.R(3034145, 'expect', expect, false, true), false)(J$.M(3034169, J$.R(3034153, 'core', core, false, true), 'isNumeric', false)(J$.T(3034161, 3475, 22, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034209, true, 23, false));
                                            J$.M(3034297, J$.G(3034281, J$.G(3034273, J$.G(3034265, J$.F(3034257, J$.R(3034225, 'expect', expect, false, true), false)(J$.M(3034249, J$.R(3034233, 'core', core, false, true), 'isNumeric', false)(J$.T(3034241, 34.5, 22, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034289, true, 23, false));
                                            J$.M(3034377, J$.G(3034361, J$.G(3034353, J$.G(3034345, J$.F(3034337, J$.R(3034305, 'expect', expect, false, true), false)(J$.M(3034329, J$.R(3034313, 'core', core, false, true), 'isNumeric', false)(J$.T(3034321, '-23984', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034369, true, 23, false));
                                            J$.M(3034457, J$.G(3034441, J$.G(3034433, J$.G(3034425, J$.F(3034417, J$.R(3034385, 'expect', expect, false, true), false)(J$.M(3034409, J$.R(3034393, 'core', core, false, true), 'isNumeric', false)(J$.T(3034401, '34234', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034449, true, 23, false));
                                            J$.M(3034537, J$.G(3034521, J$.G(3034513, J$.G(3034505, J$.F(3034497, J$.R(3034465, 'expect', expect, false, true), false)(J$.M(3034489, J$.R(3034473, 'core', core, false, true), 'isNumeric', false)(J$.T(3034481, '34.3e+75', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034529, true, 23, false));
                                            J$.M(3034617, J$.G(3034601, J$.G(3034593, J$.G(3034585, J$.F(3034577, J$.R(3034545, 'expect', expect, false, true), false)(J$.M(3034569, J$.R(3034553, 'core', core, false, true), 'isNumeric', false)(J$.T(3034561, '34e75', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034609, true, 23, false));
                                            J$.M(3034697, J$.G(3034681, J$.G(3034673, J$.G(3034665, J$.F(3034657, J$.R(3034625, 'expect', expect, false, true), false)(J$.M(3034649, J$.R(3034633, 'core', core, false, true), 'isNumeric', false)(J$.T(3034641, '34e-75', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034689, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3037145, J$e);
                                        } finally {
                                            if (J$.Fr(3037153))
                                                continue jalangiLabel18;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3035177, J$.I(typeof it === 'undefined' ? it = J$.R(3034737, 'it', undefined, true, true) : it = J$.R(3034737, 'it', it, true, true)), false)(J$.T(3034745, '#isNumeric should not work for string that to not contain a number', 21, false), J$.T(3035169, function () {
                                jalangiLabel19:
                                    while (true) {
                                        try {
                                            J$.Fe(3035153, arguments.callee, this, arguments);
                                            arguments = J$.N(3035161, 'arguments', arguments, true, false, false);
                                            J$.M(3034825, J$.G(3034809, J$.G(3034801, J$.G(3034793, J$.F(3034785, J$.R(3034753, 'expect', expect, false, true), false)(J$.M(3034777, J$.R(3034761, 'core', core, false, true), 'isNumeric', false)(J$.T(3034769, 'sohrgo', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034817, false, 23, false));
                                            J$.M(3034905, J$.G(3034889, J$.G(3034881, J$.G(3034873, J$.F(3034865, J$.R(3034833, 'expect', expect, false, true), false)(J$.M(3034857, J$.R(3034841, 'core', core, false, true), 'isNumeric', false)(J$.T(3034849, /hello/, 14, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034897, false, 23, false));
                                            J$.M(3034985, J$.G(3034969, J$.G(3034961, J$.G(3034953, J$.F(3034945, J$.R(3034913, 'expect', expect, false, true), false)(J$.M(3034937, J$.R(3034921, 'core', core, false, true), 'isNumeric', false)(J$.T(3034929, {}, 11, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3034977, false, 23, false));
                                            J$.M(3035065, J$.G(3035049, J$.G(3035041, J$.G(3035033, J$.F(3035025, J$.R(3034993, 'expect', expect, false, true), false)(J$.M(3035017, J$.R(3035001, 'core', core, false, true), 'isNumeric', false)(J$.T(3035009, 'as3e4234', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3035057, false, 23, false));
                                            J$.M(3035145, J$.G(3035129, J$.G(3035121, J$.G(3035113, J$.F(3035105, J$.R(3035073, 'expect', expect, false, true), false)(J$.M(3035097, J$.R(3035081, 'core', core, false, true), 'isNumeric', false)(J$.T(3035089, 'as3e4234', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3035137, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3037161, J$e);
                                        } finally {
                                            if (J$.Fr(3037169))
                                                continue jalangiLabel19;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3035465, J$.I(typeof it === 'undefined' ? it = J$.R(3035185, 'it', undefined, true, true) : it = J$.R(3035185, 'it', it, true, true)), false)(J$.T(3035193, '#isInteger should not work for numbers that are not integers', 21, false), J$.T(3035457, function () {
                                jalangiLabel20:
                                    while (true) {
                                        try {
                                            J$.Fe(3035441, arguments.callee, this, arguments);
                                            arguments = J$.N(3035449, 'arguments', arguments, true, false, false);
                                            J$.M(3035273, J$.G(3035257, J$.G(3035249, J$.G(3035241, J$.F(3035233, J$.R(3035201, 'expect', expect, false, true), false)(J$.M(3035225, J$.R(3035209, 'core', core, false, true), 'isInteger', false)(J$.T(3035217, 31.9, 22, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3035265, false, 23, false));
                                            J$.M(3035353, J$.G(3035337, J$.G(3035329, J$.G(3035321, J$.F(3035313, J$.R(3035281, 'expect', expect, false, true), false)(J$.M(3035305, J$.R(3035289, 'core', core, false, true), 'isInteger', false)(J$.T(3035297, NaN, 22, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3035345, false, 23, false));
                                            J$.M(3035433, J$.G(3035417, J$.G(3035409, J$.G(3035401, J$.F(3035393, J$.R(3035361, 'expect', expect, false, true), false)(J$.M(3035385, J$.R(3035369, 'core', core, false, true), 'isInteger', false)(J$.T(3035377, '39.3', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3035425, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3037177, J$e);
                                        } finally {
                                            if (J$.Fr(3037185))
                                                continue jalangiLabel20;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3035753, J$.I(typeof it === 'undefined' ? it = J$.R(3035473, 'it', undefined, true, true) : it = J$.R(3035473, 'it', it, true, true)), false)(J$.T(3035481, '#isInteger should only work for numbers that are integers', 21, false), J$.T(3035745, function () {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(3035729, arguments.callee, this, arguments);
                                            arguments = J$.N(3035737, 'arguments', arguments, true, false, false);
                                            J$.M(3035561, J$.G(3035545, J$.G(3035537, J$.G(3035529, J$.F(3035521, J$.R(3035489, 'expect', expect, false, true), false)(J$.M(3035513, J$.R(3035497, 'core', core, false, true), 'isInteger', false)(J$.T(3035505, 41, 22, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3035553, true, 23, false));
                                            J$.M(3035641, J$.G(3035625, J$.G(3035617, J$.G(3035609, J$.F(3035601, J$.R(3035569, 'expect', expect, false, true), false)(J$.M(3035593, J$.R(3035577, 'core', core, false, true), 'isInteger', false)(J$.T(3035585, '39.0', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3035633, true, 23, false));
                                            J$.M(3035721, J$.G(3035705, J$.G(3035697, J$.G(3035689, J$.F(3035681, J$.R(3035649, 'expect', expect, false, true), false)(J$.M(3035673, J$.R(3035657, 'core', core, false, true), 'isInteger', false)(J$.T(3035665, '47', 21, false))), 'to'), 'be'), 'be'), 'equal', false)(J$.T(3035713, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(3037193, J$e);
                                        } finally {
                                            if (J$.Fr(3037201))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3036169, J$.I(typeof it === 'undefined' ? it = J$.R(3035761, 'it', undefined, true, true) : it = J$.R(3035761, 'it', it, true, true)), false)(J$.T(3035769, '#cast with target type = source type', 21, false), J$.T(3036161, function () {
                                jalangiLabel22:
                                    while (true) {
                                        try {
                                            J$.Fe(3036129, arguments.callee, this, arguments);
                                            arguments = J$.N(3036137, 'arguments', arguments, true, false, false);
                                            J$.N(3036145, 'array', array, false, false, false);
                                            J$.N(3036153, 'object', object, false, false, false);
                                            J$.M(3035849, J$.G(3035833, J$.G(3035825, J$.F(3035817, J$.R(3035777, 'expect', expect, false, true), false)(J$.M(3035809, J$.R(3035785, 'core', core, false, true), 'cast', false)(J$.T(3035793, '24234', 21, false), J$.T(3035801, 'string', 21, false))), 'to'), 'be'), 'equal', false)(J$.T(3035841, '24234', 21, false));
                                            J$.M(3035929, J$.G(3035913, J$.G(3035905, J$.F(3035897, J$.R(3035857, 'expect', expect, false, true), false)(J$.M(3035889, J$.R(3035865, 'core', core, false, true), 'cast', false)(J$.T(3035873, 34758, 22, false), J$.T(3035881, 'number', 21, false))), 'to'), 'be'), 'equal', false)(J$.T(3035921, 34758, 22, false));
                                            var array = J$.W(3035945, 'array', J$.T(3035937, [], 10, false), array, false, false);
                                            J$.M(3036025, J$.G(3036009, J$.G(3036001, J$.F(3035993, J$.R(3035953, 'expect', expect, false, true), false)(J$.M(3035985, J$.R(3035961, 'core', core, false, true), 'cast', false)(J$.R(3035969, 'array', array, false, false), J$.T(3035977, 'array', 21, false))), 'to'), 'be'), 'equal', false)(J$.R(3036017, 'array', array, false, false));
                                            var object = J$.W(3036041, 'object', J$.T(3036033, {}, 11, false), object, false, false);
                                            J$.M(3036121, J$.G(3036105, J$.G(3036097, J$.F(3036089, J$.R(3036049, 'expect', expect, false, true), false)(J$.M(3036081, J$.R(3036057, 'core', core, false, true), 'cast', false)(J$.R(3036065, 'object', object, false, false), J$.T(3036073, 'object', 21, false))), 'to'), 'be'), 'equal', false)(J$.R(3036113, 'object', object, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3037209, J$e);
                                        } finally {
                                            if (J$.Fr(3037217))
                                                continue jalangiLabel22;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3036361, J$.I(typeof it === 'undefined' ? it = J$.R(3036177, 'it', undefined, true, true) : it = J$.R(3036177, 'it', it, true, true)), false)(J$.T(3036185, '#cast converts stringified boolean values', 21, false), J$.T(3036353, function () {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(3036337, arguments.callee, this, arguments);
                                            arguments = J$.N(3036345, 'arguments', arguments, true, false, false);
                                            J$.M(3036257, J$.G(3036249, J$.G(3036241, J$.F(3036233, J$.R(3036193, 'expect', expect, false, true), false)(J$.M(3036225, J$.R(3036201, 'core', core, false, true), 'cast', false)(J$.T(3036209, 'true', 21, false), J$.T(3036217, 'boolean', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(3036329, J$.G(3036321, J$.G(3036313, J$.F(3036305, J$.R(3036265, 'expect', expect, false, true), false)(J$.M(3036297, J$.R(3036273, 'core', core, false, true), 'cast', false)(J$.T(3036281, 'false', 21, false), J$.T(3036289, 'boolean', 21, false))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(3037225, J$e);
                                        } finally {
                                            if (J$.Fr(3037233))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3036553, J$.I(typeof it === 'undefined' ? it = J$.R(3036369, 'it', undefined, true, true) : it = J$.R(3036369, 'it', it, true, true)), false)(J$.T(3036377, '#cast converts numeric boolean values', 21, false), J$.T(3036545, function () {
                                jalangiLabel24:
                                    while (true) {
                                        try {
                                            J$.Fe(3036529, arguments.callee, this, arguments);
                                            arguments = J$.N(3036537, 'arguments', arguments, true, false, false);
                                            J$.M(3036449, J$.G(3036441, J$.G(3036433, J$.F(3036425, J$.R(3036385, 'expect', expect, false, true), false)(J$.M(3036417, J$.R(3036393, 'core', core, false, true), 'cast', false)(J$.T(3036401, '1', 21, false), J$.T(3036409, 'boolean', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(3036521, J$.G(3036513, J$.G(3036505, J$.F(3036497, J$.R(3036457, 'expect', expect, false, true), false)(J$.M(3036489, J$.R(3036465, 'core', core, false, true), 'cast', false)(J$.T(3036473, '0', 21, false), J$.T(3036481, 'boolean', 21, false))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(3037241, J$e);
                                        } finally {
                                            if (J$.Fr(3037249))
                                                continue jalangiLabel24;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3036673, J$.I(typeof it === 'undefined' ? it = J$.R(3036561, 'it', undefined, true, true) : it = J$.R(3036561, 'it', it, true, true)), false)(J$.T(3036569, '#cast returns undefined for object', 21, false), J$.T(3036665, function () {
                                jalangiLabel25:
                                    while (true) {
                                        try {
                                            J$.Fe(3036649, arguments.callee, this, arguments);
                                            arguments = J$.N(3036657, 'arguments', arguments, true, false, false);
                                            J$.M(3036641, J$.G(3036633, J$.G(3036625, J$.F(3036617, J$.R(3036577, 'expect', expect, false, true), false)(J$.M(3036609, J$.R(3036585, 'core', core, false, true), 'cast', false)(J$.T(3036593, '1', 21, false), J$.T(3036601, 'object', 21, false))), 'to'), 'be'), 'undefined', false)();
                                        } catch (J$e) {
                                            J$.Ex(3037257, J$e);
                                        } finally {
                                            if (J$.Fr(3037265))
                                                continue jalangiLabel25;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(3036793, J$.I(typeof it === 'undefined' ? it = J$.R(3036681, 'it', undefined, true, true) : it = J$.R(3036681, 'it', it, true, true)), false)(J$.T(3036689, '#equals treats two NaN values as equal', 21, false), J$.T(3036785, function () {
                                jalangiLabel26:
                                    while (true) {
                                        try {
                                            J$.Fe(3036769, arguments.callee, this, arguments);
                                            arguments = J$.N(3036777, 'arguments', arguments, true, false, false);
                                            J$.M(3036761, J$.G(3036753, J$.G(3036745, J$.F(3036737, J$.R(3036697, 'expect', expect, false, true), false)(J$.M(3036729, J$.R(3036705, 'core', core, false, true), 'equals', false)(J$.T(3036713, NaN, 22, false), J$.T(3036721, NaN, 22, false))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(3037273, J$e);
                                        } finally {
                                            if (J$.Fr(3037281))
                                                continue jalangiLabel26;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(3037289, J$e);
                        } finally {
                            if (J$.Fr(3037297))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3037305, J$e);
        } finally {
            if (J$.Sr(3037313))
                continue jalangiLabel28;
            else
                break jalangiLabel28;
        }
    }
// JALANGI DO NOT INSTRUMENT

