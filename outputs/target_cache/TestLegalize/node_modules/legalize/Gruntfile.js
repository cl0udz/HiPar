J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(64321, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/Gruntfile.js');
            J$.N(64329, 'coverageCommand', coverageCommand, false, false, false);
            J$.N(64337, 'minifiedBanner', minifiedBanner, false, false, false);
            J$.N(64345, 'buildDir', buildDir, false, false, false);
            var coverageCommand = J$.W(63337, 'coverageCommand', J$.T(63329, 'node_modules/.bin/istanbul cover node_modules/.bin/_mocha -- -u exports -R spec', 21, false), coverageCommand, false, true);
            var minifiedBanner = J$.W(63369, 'minifiedBanner', J$.B(7866, '+', J$.B(7858, '+', J$.T(63345, '/*! <%= pkg.name %> <%= grunt.template.today(\'dd-mm-yyyy\') %>\n', 21, false), J$.T(63353, '    Copyright (C) 2014 PayPal\n', 21, false)), J$.T(63361, '    Licensed under the Apache License, Version 2.0. */\n', 21, false)), minifiedBanner, false, true);
            var buildDir = J$.W(63385, 'buildDir', J$.T(63377, '.build', 21, false), buildDir, false, true);
            J$.P(64313, J$.I(typeof module === 'undefined' ? module = J$.R(63393, 'module', undefined, true, true) : module = J$.R(63393, 'module', module, true, true)), 'exports', J$.T(64305, function (grunt) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(64281, arguments.callee, this, arguments);
                            arguments = J$.N(64289, 'arguments', arguments, true, false, false);
                            grunt = J$.N(64297, 'grunt', grunt, true, false, false);
                            J$.T(63401, 'use strict', 21, false);
                            J$.M(63937, J$.R(63409, 'grunt', grunt, false, false), 'initConfig', false)(J$.T(63929, {
                                pkg: J$.M(63441, J$.G(63425, J$.R(63417, 'grunt', grunt, false, false), 'file'), 'readJSON', false)(J$.T(63433, 'package.json', 21, false)),
                                jshint: J$.T(63513, {
                                    src: J$.T(63457, [J$.T(63449, 'src/**/*.js', 21, false)], 10, false),
                                    gruntfile: J$.T(63473, [J$.T(63465, 'Gruntfile.js', 21, false)], 10, false),
                                    test: J$.T(63489, [J$.T(63481, 'test/**/*.js', 21, false)], 10, false),
                                    options: J$.T(63505, { jshintrc: J$.T(63497, true, 23, false) }, 11, false)
                                }, 11, false),
                                preprocess: J$.T(63545, {
                                    files: J$.T(63537, {
                                        src: J$.T(63521, 'src/legalize-browser.js', 21, false),
                                        dest: J$.T(63529, 'legalize.js', 21, false)
                                    }, 11, false)
                                }, 11, false),
                                uglify: J$.T(63649, {
                                    dist: J$.T(63641, {
                                        files: J$.T(63569, { 'dist/legalize.min.js': J$.T(63561, [J$.T(63553, 'legalize.js', 21, false)], 10, false) }, 11, false),
                                        options: J$.T(63633, {
                                            compress: J$.T(63585, { warnings: J$.T(63577, false, 23, false) }, 11, false),
                                            report: J$.T(63593, 'gzip', 21, false),
                                            preserveComments: J$.T(63601, 'some', 21, false),
                                            banner: J$.R(63609, 'minifiedBanner', minifiedBanner, false, true),
                                            sourceMap: J$.T(63617, true, 23, false),
                                            beautify: J$.T(63625, false, 23, false)
                                        }, 11, false)
                                    }, 11, false)
                                }, 11, false),
                                mochaTest: J$.T(63745, {
                                    test: J$.T(63689, {
                                        options: J$.T(63665, { reporter: J$.T(63657, 'spec', 21, false) }, 11, false),
                                        src: J$.T(63681, [J$.T(63673, 'test/**/*.js', 21, false)], 10, false)
                                    }, 11, false),
                                    devel: J$.T(63737, {
                                        options: J$.T(63713, {
                                            reporter: J$.T(63697, 'spec', 21, false),
                                            grep: J$.T(63705, '@devel', 21, false)
                                        }, 11, false),
                                        src: J$.T(63729, [J$.T(63721, 'test/**/*.js', 21, false)], 10, false)
                                    }, 11, false)
                                }, 11, false),
                                mkdir: J$.T(63785, { coverage: J$.T(63777, { options: J$.T(63769, { create: J$.T(63761, [J$.T(63753, 'coverage', 21, false)], 10, false) }, 11, false) }, 11, false) }, 11, false),
                                exec: J$.T(63825, {
                                    coverage: J$.T(63817, {
                                        command: J$.R(63793, 'coverageCommand', coverageCommand, false, true),
                                        stdout: J$.T(63801, true, 23, false),
                                        stderr: J$.T(63809, false, 23, false)
                                    }, 11, false)
                                }, 11, false),
                                coverage: J$.T(63889, {
                                    options: J$.T(63881, {
                                        thresholds: J$.T(63865, {
                                            statements: J$.T(63833, 90, 22, false),
                                            branches: J$.T(63841, 90, 22, false),
                                            lines: J$.T(63849, 90, 22, false),
                                            functions: J$.T(63857, 90, 22, false)
                                        }, 11, false),
                                        dir: J$.T(63873, 'coverage', 21, false)
                                    }, 11, false)
                                }, 11, false),
                                clean: J$.T(63921, [
                                    J$.R(63897, 'buildDir', buildDir, false, true),
                                    J$.T(63905, 'dist', 21, false),
                                    J$.T(63913, 'coverage', 21, false)
                                ], 10, false)
                            }, 11, false));
                            J$.F(63977, J$.F(63961, J$.I(typeof require === 'undefined' ? require = J$.R(63945, 'require', undefined, true, true) : require = J$.R(63945, 'require', require, true, true)), false)(J$.T(63953, 'load-grunt-tasks', 21, false)), false)(J$.R(63969, 'grunt', grunt, false, false));
                            J$.M(64017, J$.R(63985, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(63993, 'lint', 21, false), J$.T(64009, [J$.T(64001, 'jshint', 21, false)], 10, false));
                            J$.M(64065, J$.R(64025, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(64033, 'test', 21, false), J$.T(64057, [
                                J$.T(64041, 'lint', 21, false),
                                J$.T(64049, 'mochaTest:test', 21, false)
                            ], 10, false));
                            J$.M(64121, J$.R(64073, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(64081, 'check', 21, false), J$.T(64113, [
                                J$.T(64089, 'mkdir:coverage', 21, false),
                                J$.T(64097, 'exec:coverage', 21, false),
                                J$.T(64105, 'coverage', 21, false)
                            ], 10, false));
                            J$.M(64177, J$.R(64129, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(64137, 'build', 21, false), J$.T(64169, [
                                J$.T(64145, 'lint', 21, false),
                                J$.T(64153, 'check', 21, false),
                                J$.T(64161, 'preprocess', 21, false)
                            ], 10, false));
                            J$.M(64225, J$.R(64185, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(64193, 'dist', 21, false), J$.T(64217, [
                                J$.T(64201, 'build', 21, false),
                                J$.T(64209, 'uglify:dist', 21, false)
                            ], 10, false));
                            J$.M(64273, J$.R(64233, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(64241, 'default', 21, false), J$.T(64265, [
                                J$.T(64249, 'check-modules', 21, false),
                                J$.T(64257, 'dist', 21, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(64353, J$e);
                        } finally {
                            if (J$.Fr(64361))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(64369, J$e);
        } finally {
            if (J$.Sr(64377))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

