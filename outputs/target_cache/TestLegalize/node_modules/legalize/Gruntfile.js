J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2989737, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestLegalize/node_modules/legalize/Gruntfile.js');
            J$.N(2989745, 'coverageCommand', coverageCommand, false, false, false);
            J$.N(2989753, 'minifiedBanner', minifiedBanner, false, false, false);
            J$.N(2989761, 'buildDir', buildDir, false, false, false);
            var coverageCommand = J$.W(2988753, 'coverageCommand', J$.T(2988745, 'node_modules/.bin/istanbul cover node_modules/.bin/_mocha -- -u exports -R spec', 21, false), coverageCommand, false, true);
            var minifiedBanner = J$.W(2988785, 'minifiedBanner', J$.B(210114, '+', J$.B(210106, '+', J$.T(2988761, '/*! <%= pkg.name %> <%= grunt.template.today(\'dd-mm-yyyy\') %>\n', 21, false), J$.T(2988769, '    Copyright (C) 2014 PayPal\n', 21, false)), J$.T(2988777, '    Licensed under the Apache License, Version 2.0. */\n', 21, false)), minifiedBanner, false, true);
            var buildDir = J$.W(2988801, 'buildDir', J$.T(2988793, '.build', 21, false), buildDir, false, true);
            J$.P(2989729, J$.I(typeof module === 'undefined' ? module = J$.R(2988809, 'module', undefined, true, true) : module = J$.R(2988809, 'module', module, true, true)), 'exports', J$.T(2989721, function (grunt) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2989697, arguments.callee, this, arguments);
                            arguments = J$.N(2989705, 'arguments', arguments, true, false, false);
                            grunt = J$.N(2989713, 'grunt', grunt, true, false, false);
                            J$.T(2988817, 'use strict', 21, false);
                            J$.M(2989353, J$.R(2988825, 'grunt', grunt, false, false), 'initConfig', false)(J$.T(2989345, {
                                pkg: J$.M(2988857, J$.G(2988841, J$.R(2988833, 'grunt', grunt, false, false), 'file'), 'readJSON', false)(J$.T(2988849, 'package.json', 21, false)),
                                jshint: J$.T(2988929, {
                                    src: J$.T(2988873, [J$.T(2988865, 'src/**/*.js', 21, false)], 10, false),
                                    gruntfile: J$.T(2988889, [J$.T(2988881, 'Gruntfile.js', 21, false)], 10, false),
                                    test: J$.T(2988905, [J$.T(2988897, 'test/**/*.js', 21, false)], 10, false),
                                    options: J$.T(2988921, { jshintrc: J$.T(2988913, true, 23, false) }, 11, false)
                                }, 11, false),
                                preprocess: J$.T(2988961, {
                                    files: J$.T(2988953, {
                                        src: J$.T(2988937, 'src/legalize-browser.js', 21, false),
                                        dest: J$.T(2988945, 'legalize.js', 21, false)
                                    }, 11, false)
                                }, 11, false),
                                uglify: J$.T(2989065, {
                                    dist: J$.T(2989057, {
                                        files: J$.T(2988985, { 'dist/legalize.min.js': J$.T(2988977, [J$.T(2988969, 'legalize.js', 21, false)], 10, false) }, 11, false),
                                        options: J$.T(2989049, {
                                            compress: J$.T(2989001, { warnings: J$.T(2988993, false, 23, false) }, 11, false),
                                            report: J$.T(2989009, 'gzip', 21, false),
                                            preserveComments: J$.T(2989017, 'some', 21, false),
                                            banner: J$.R(2989025, 'minifiedBanner', minifiedBanner, false, true),
                                            sourceMap: J$.T(2989033, true, 23, false),
                                            beautify: J$.T(2989041, false, 23, false)
                                        }, 11, false)
                                    }, 11, false)
                                }, 11, false),
                                mochaTest: J$.T(2989161, {
                                    test: J$.T(2989105, {
                                        options: J$.T(2989081, { reporter: J$.T(2989073, 'spec', 21, false) }, 11, false),
                                        src: J$.T(2989097, [J$.T(2989089, 'test/**/*.js', 21, false)], 10, false)
                                    }, 11, false),
                                    devel: J$.T(2989153, {
                                        options: J$.T(2989129, {
                                            reporter: J$.T(2989113, 'spec', 21, false),
                                            grep: J$.T(2989121, '@devel', 21, false)
                                        }, 11, false),
                                        src: J$.T(2989145, [J$.T(2989137, 'test/**/*.js', 21, false)], 10, false)
                                    }, 11, false)
                                }, 11, false),
                                mkdir: J$.T(2989201, { coverage: J$.T(2989193, { options: J$.T(2989185, { create: J$.T(2989177, [J$.T(2989169, 'coverage', 21, false)], 10, false) }, 11, false) }, 11, false) }, 11, false),
                                exec: J$.T(2989241, {
                                    coverage: J$.T(2989233, {
                                        command: J$.R(2989209, 'coverageCommand', coverageCommand, false, true),
                                        stdout: J$.T(2989217, true, 23, false),
                                        stderr: J$.T(2989225, false, 23, false)
                                    }, 11, false)
                                }, 11, false),
                                coverage: J$.T(2989305, {
                                    options: J$.T(2989297, {
                                        thresholds: J$.T(2989281, {
                                            statements: J$.T(2989249, 90, 22, false),
                                            branches: J$.T(2989257, 90, 22, false),
                                            lines: J$.T(2989265, 90, 22, false),
                                            functions: J$.T(2989273, 90, 22, false)
                                        }, 11, false),
                                        dir: J$.T(2989289, 'coverage', 21, false)
                                    }, 11, false)
                                }, 11, false),
                                clean: J$.T(2989337, [
                                    J$.R(2989313, 'buildDir', buildDir, false, true),
                                    J$.T(2989321, 'dist', 21, false),
                                    J$.T(2989329, 'coverage', 21, false)
                                ], 10, false)
                            }, 11, false));
                            J$.F(2989393, J$.F(2989377, J$.I(typeof require === 'undefined' ? require = J$.R(2989361, 'require', undefined, true, true) : require = J$.R(2989361, 'require', require, true, true)), false)(J$.T(2989369, 'load-grunt-tasks', 21, false)), false)(J$.R(2989385, 'grunt', grunt, false, false));
                            J$.M(2989433, J$.R(2989401, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(2989409, 'lint', 21, false), J$.T(2989425, [J$.T(2989417, 'jshint', 21, false)], 10, false));
                            J$.M(2989481, J$.R(2989441, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(2989449, 'test', 21, false), J$.T(2989473, [
                                J$.T(2989457, 'lint', 21, false),
                                J$.T(2989465, 'mochaTest:test', 21, false)
                            ], 10, false));
                            J$.M(2989537, J$.R(2989489, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(2989497, 'check', 21, false), J$.T(2989529, [
                                J$.T(2989505, 'mkdir:coverage', 21, false),
                                J$.T(2989513, 'exec:coverage', 21, false),
                                J$.T(2989521, 'coverage', 21, false)
                            ], 10, false));
                            J$.M(2989593, J$.R(2989545, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(2989553, 'build', 21, false), J$.T(2989585, [
                                J$.T(2989561, 'lint', 21, false),
                                J$.T(2989569, 'check', 21, false),
                                J$.T(2989577, 'preprocess', 21, false)
                            ], 10, false));
                            J$.M(2989641, J$.R(2989601, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(2989609, 'dist', 21, false), J$.T(2989633, [
                                J$.T(2989617, 'build', 21, false),
                                J$.T(2989625, 'uglify:dist', 21, false)
                            ], 10, false));
                            J$.M(2989689, J$.R(2989649, 'grunt', grunt, false, false), 'registerTask', false)(J$.T(2989657, 'default', 21, false), J$.T(2989681, [
                                J$.T(2989665, 'check-modules', 21, false),
                                J$.T(2989673, 'dist', 21, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(2989769, J$e);
                        } finally {
                            if (J$.Fr(2989777))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2989785, J$e);
        } finally {
            if (J$.Sr(2989793))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

