J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(2350393, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestAnalytics/node_modules/join-component/test/index.js');
            J$.N(2350401, 'join', join, false, false, false);
            var join = J$.W(2349441, 'join', J$.F(2349433, J$.I(typeof require === 'undefined' ? require = J$.R(2349417, 'require', undefined, true, true) : require = J$.R(2349417, 'require', require, true, true)), false)(J$.T(2349425, '..', 21, false)), join, false, true);
            J$.F(2349601, J$.I(typeof describe === 'undefined' ? describe = J$.R(2349449, 'describe', undefined, true, true) : describe = J$.R(2349449, 'describe', describe, true, true)), false)(J$.T(2349457, 'join(arr)', 21, false), J$.T(2349593, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2349577, arguments.callee, this, arguments);
                            arguments = J$.N(2349585, 'arguments', arguments, true, false, false);
                            J$.F(2349569, J$.I(typeof it === 'undefined' ? it = J$.R(2349465, 'it', undefined, true, true) : it = J$.R(2349465, 'it', it, true, true)), false)(J$.T(2349473, 'should default to "and"', 21, false), J$.T(2349561, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2349545, arguments.callee, this, arguments);
                                            arguments = J$.N(2349553, 'arguments', arguments, true, false, false);
                                            J$.M(2349537, J$.G(2349521, J$.F(2349513, J$.R(2349481, 'join', join, false, true), false)(J$.T(2349505, [
                                                J$.T(2349489, 'foo', 21, false),
                                                J$.T(2349497, 'bar', 21, false)
                                            ], 10, false)), 'should'), 'equal', false)(J$.T(2349529, 'foo and bar', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(2350409, J$e);
                                        } finally {
                                            if (J$.Fr(2350417))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2350425, J$e);
                        } finally {
                            if (J$.Fr(2350433))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2349969, J$.I(typeof describe === 'undefined' ? describe = J$.R(2349609, 'describe', undefined, true, true) : describe = J$.R(2349609, 'describe', describe, true, true)), false)(J$.T(2349617, 'join(arr, str)', 21, false), J$.T(2349961, function () {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2349945, arguments.callee, this, arguments);
                            arguments = J$.N(2349953, 'arguments', arguments, true, false, false);
                            J$.F(2349937, J$.I(typeof it === 'undefined' ? it = J$.R(2349625, 'it', undefined, true, true) : it = J$.R(2349625, 'it', it, true, true)), false)(J$.T(2349633, 'should join', 21, false), J$.T(2349929, function () {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(2349913, arguments.callee, this, arguments);
                                            arguments = J$.N(2349921, 'arguments', arguments, true, false, false);
                                            J$.M(2349689, J$.G(2349673, J$.F(2349665, J$.R(2349641, 'join', join, false, true), false)(J$.T(2349649, [], 10, false), J$.T(2349657, 'and', 21, false)), 'should'), 'equal', false)(J$.T(2349681, '', 21, false));
                                            J$.M(2349753, J$.G(2349737, J$.F(2349729, J$.R(2349697, 'join', join, false, true), false)(J$.T(2349713, [J$.T(2349705, 'foo', 21, false)], 10, false), J$.T(2349721, 'and', 21, false)), 'should'), 'equal', false)(J$.T(2349745, 'foo', 21, false));
                                            J$.M(2349825, J$.G(2349809, J$.F(2349801, J$.R(2349761, 'join', join, false, true), false)(J$.T(2349785, [
                                                J$.T(2349769, 'foo', 21, false),
                                                J$.T(2349777, 'bar', 21, false)
                                            ], 10, false), J$.T(2349793, 'and', 21, false)), 'should'), 'equal', false)(J$.T(2349817, 'foo and bar', 21, false));
                                            J$.M(2349905, J$.G(2349889, J$.F(2349881, J$.R(2349833, 'join', join, false, true), false)(J$.T(2349865, [
                                                J$.T(2349841, 'foo', 21, false),
                                                J$.T(2349849, 'bar', 21, false),
                                                J$.T(2349857, 'baz', 21, false)
                                            ], 10, false), J$.T(2349873, 'or', 21, false)), 'should'), 'equal', false)(J$.T(2349897, 'foo, bar or baz', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(2350441, J$e);
                                        } finally {
                                            if (J$.Fr(2350449))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2350457, J$e);
                        } finally {
                            if (J$.Fr(2350465))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2350385, J$.I(typeof describe === 'undefined' ? describe = J$.R(2349977, 'describe', undefined, true, true) : describe = J$.R(2349977, 'describe', describe, true, true)), false)(J$.T(2349985, 'join(arr, str) with Oxford comma', 21, false), J$.T(2350377, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2350361, arguments.callee, this, arguments);
                            arguments = J$.N(2350369, 'arguments', arguments, true, false, false);
                            J$.F(2350225, J$.I(typeof it === 'undefined' ? it = J$.R(2349993, 'it', undefined, true, true) : it = J$.R(2349993, 'it', it, true, true)), false)(J$.T(2350001, 'should remove comma with less than 3 items', 21, false), J$.T(2350217, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(2350201, arguments.callee, this, arguments);
                                            arguments = J$.N(2350209, 'arguments', arguments, true, false, false);
                                            J$.M(2350057, J$.G(2350041, J$.F(2350033, J$.R(2350009, 'join', join, false, true), false)(J$.T(2350017, [], 10, false), J$.T(2350025, ', or', 21, false)), 'should'), 'equal', false)(J$.T(2350049, '', 21, false));
                                            J$.M(2350121, J$.G(2350105, J$.F(2350097, J$.R(2350065, 'join', join, false, true), false)(J$.T(2350081, [J$.T(2350073, 'foo', 21, false)], 10, false), J$.T(2350089, ', or', 21, false)), 'should'), 'equal', false)(J$.T(2350113, 'foo', 21, false));
                                            J$.M(2350193, J$.G(2350177, J$.F(2350169, J$.R(2350129, 'join', join, false, true), false)(J$.T(2350153, [
                                                J$.T(2350137, 'foo', 21, false),
                                                J$.T(2350145, 'bar', 21, false)
                                            ], 10, false), J$.T(2350161, ', or', 21, false)), 'should'), 'equal', false)(J$.T(2350185, 'foo or bar', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(2350473, J$e);
                                        } finally {
                                            if (J$.Fr(2350481))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(2350353, J$.I(typeof it === 'undefined' ? it = J$.R(2350233, 'it', undefined, true, true) : it = J$.R(2350233, 'it', it, true, true)), false)(J$.T(2350241, 'should join with 3 or more items', 21, false), J$.T(2350345, function () {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(2350329, arguments.callee, this, arguments);
                                            arguments = J$.N(2350337, 'arguments', arguments, true, false, false);
                                            J$.M(2350321, J$.G(2350305, J$.F(2350297, J$.R(2350249, 'join', join, false, true), false)(J$.T(2350281, [
                                                J$.T(2350257, 'foo', 21, false),
                                                J$.T(2350265, 'bar', 21, false),
                                                J$.T(2350273, 'baz', 21, false)
                                            ], 10, false), J$.T(2350289, ', and', 21, false)), 'should'), 'equal', false)(J$.T(2350313, 'foo, bar, and baz', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(2350489, J$e);
                                        } finally {
                                            if (J$.Fr(2350497))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2350505, J$e);
                        } finally {
                            if (J$.Fr(2350513))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2350521, J$e);
        } finally {
            if (J$.Sr(2350529))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

