J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2384169, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestAnalytics/node_modules/uuid/lib/v35.js');
            function uuidToBytes(uuid) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2383057, arguments.callee, this, arguments);
                            arguments = J$.N(2383065, 'arguments', arguments, true, false, false);
                            uuid = J$.N(2383073, 'uuid', uuid, true, false, false);
                            J$.N(2383081, 'bytes', bytes, false, false, false);
                            var bytes = J$.W(2382929, 'bytes', J$.T(2382921, [], 10, false), bytes, false, false);
                            J$.M(2383033, J$.R(2382937, 'uuid', uuid, false, false), 'replace', false)(J$.T(2382945, /[a-fA-F0-9]{2}/g, 14, false), J$.T(2383025, function (hex) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2383001, arguments.callee, this, arguments);
                                            arguments = J$.N(2383009, 'arguments', arguments, true, false, false);
                                            hex = J$.N(2383017, 'hex', hex, true, false, false);
                                            J$.M(2382993, J$.R(2382953, 'bytes', bytes, false, false), 'push', false)(J$.F(2382985, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(2382961, 'parseInt', undefined, true, true) : parseInt = J$.R(2382961, 'parseInt', parseInt, true, true)), false)(J$.R(2382969, 'hex', hex, false, false), J$.T(2382977, 16, 22, false)));
                                        } catch (J$e) {
                                            J$.Ex(2384217, J$e);
                                        } finally {
                                            if (J$.Fr(2384225))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2383049, J$.R(2383041, 'bytes', bytes, false, false));
                        } catch (J$e) {
                            J$.Ex(2384233, J$e);
                        } finally {
                            if (J$.Fr(2384241))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function stringToBytes(str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2383297, arguments.callee, this, arguments);
                            arguments = J$.N(2383305, 'arguments', arguments, true, false, false);
                            str = J$.N(2383313, 'str', str, true, false, false);
                            J$.N(2383321, 'bytes', bytes, false, false, false);
                            J$.N(2383329, 'i', i, false, false, false);
                            str = J$.W(2383129, 'str', J$.F(2383121, J$.I(typeof unescape === 'undefined' ? unescape = J$.R(2383089, 'unescape', undefined, true, true) : unescape = J$.R(2383089, 'unescape', unescape, true, true)), false)(J$.F(2383113, J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(2383097, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(2383097, 'encodeURIComponent', encodeURIComponent, true, true)), false)(J$.R(2383105, 'str', str, false, false))), str, false, false);
                            var bytes = J$.W(2383169, 'bytes', J$.F(2383161, J$.I(typeof Array === 'undefined' ? Array = J$.R(2383137, 'Array', undefined, true, true) : Array = J$.R(2383137, 'Array', Array, true, true)), true)(J$.G(2383153, J$.R(2383145, 'str', str, false, false), 'length')), bytes, false, false);
                            for (var i = J$.W(2383185, 'i', J$.T(2383177, 0, 22, false), i, false, false); J$.C(111576, J$.B(304578, '<', J$.R(2383193, 'i', i, false, false), J$.G(2383209, J$.R(2383201, 'str', str, false, false), 'length'))); J$.B(304602, '-', i = J$.W(2383225, 'i', J$.B(304594, '+', J$.U(304586, '+', J$.R(2383217, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.P(2383273, J$.R(2383233, 'bytes', bytes, false, false), J$.R(2383241, 'i', i, false, false), J$.M(2383265, J$.R(2383249, 'str', str, false, false), 'charCodeAt', false)(J$.R(2383257, 'i', i, false, false)));
                            }
                            return J$.Rt(2383289, J$.R(2383281, 'bytes', bytes, false, false));
                        } catch (J$e) {
                            J$.Ex(2384249, J$e);
                        } finally {
                            if (J$.Fr(2384257))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2384177, 'bytesToUuid', bytesToUuid, false, false, false);
            uuidToBytes = J$.N(2384193, 'uuidToBytes', J$.T(2384185, uuidToBytes, 12, false), true, false, false);
            stringToBytes = J$.N(2384209, 'stringToBytes', J$.T(2384201, stringToBytes, 12, false), true, false, false);
            var bytesToUuid = J$.W(2382913, 'bytesToUuid', J$.F(2382905, J$.I(typeof require === 'undefined' ? require = J$.R(2382889, 'require', undefined, true, true) : require = J$.R(2382889, 'require', require, true, true)), false)(J$.T(2382897, './bytesToUuid', 21, false)), bytesToUuid, false, true);
            J$.P(2384161, J$.I(typeof module === 'undefined' ? module = J$.R(2383337, 'module', undefined, true, true) : module = J$.R(2383337, 'module', module, true, true)), 'exports', J$.T(2384153, function (name, version, hashfunc) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2384105, arguments.callee, this, arguments);
                            arguments = J$.N(2384113, 'arguments', arguments, true, false, false);
                            name = J$.N(2384121, 'name', name, true, false, false);
                            version = J$.N(2384129, 'version', version, true, false, false);
                            hashfunc = J$.N(2384137, 'hashfunc', hashfunc, true, false, false);
                            J$.N(2384145, 'generateUUID', generateUUID, false, false, false);
                            var generateUUID = J$.W(2384001, 'generateUUID', J$.T(2383993, function (value, namespace, buf, offset) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2383921, arguments.callee, this, arguments);
                                            arguments = J$.N(2383929, 'arguments', arguments, true, false, false);
                                            value = J$.N(2383937, 'value', value, true, false, false);
                                            namespace = J$.N(2383945, 'namespace', namespace, true, false, false);
                                            buf = J$.N(2383953, 'buf', buf, true, false, false);
                                            offset = J$.N(2383961, 'offset', offset, true, false, false);
                                            J$.N(2383969, 'off', off, false, false, false);
                                            J$.N(2383977, 'bytes', bytes, false, false, false);
                                            J$.N(2383985, 'idx', idx, false, false, false);
                                            var off = J$.W(2383369, 'off', J$.C(111592, J$.C(111584, J$.R(2383345, 'buf', buf, false, false)) ? J$.R(2383353, 'offset', offset, false, false) : J$._()) ? J$._() : J$.T(2383361, 0, 22, false), off, false, false);
                                            if (J$.C(111600, J$.B(304618, '==', J$.U(304610, 'typeof', J$.R(2383377, 'value', value, false, false)), J$.T(2383385, 'string', 21, false))))
                                                value = J$.W(2383417, 'value', J$.F(2383409, J$.R(2383393, 'stringToBytes', stringToBytes, false, true), false)(J$.R(2383401, 'value', value, false, false)), value, false, false);
                                            if (J$.C(111608, J$.B(304634, '==', J$.U(304626, 'typeof', J$.R(2383425, 'namespace', namespace, false, false)), J$.T(2383433, 'string', 21, false))))
                                                namespace = J$.W(2383465, 'namespace', J$.F(2383457, J$.R(2383441, 'uuidToBytes', uuidToBytes, false, true), false)(J$.R(2383449, 'namespace', namespace, false, false)), namespace, false, false);
                                            if (J$.C(111616, J$.U(304642, '!', J$.M(2383489, J$.I(typeof Array === 'undefined' ? Array = J$.R(2383473, 'Array', undefined, true, true) : Array = J$.R(2383473, 'Array', Array, true, true)), 'isArray', false)(J$.R(2383481, 'value', value, false, false)))))
                                                throw J$.F(2383513, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2383497, 'TypeError', undefined, true, true) : TypeError = J$.R(2383497, 'TypeError', TypeError, true, true)), false)(J$.T(2383505, 'value must be an array of bytes', 21, false));
                                            if (J$.C(111632, J$.C(111624, J$.U(304650, '!', J$.M(2383537, J$.I(typeof Array === 'undefined' ? Array = J$.R(2383521, 'Array', undefined, true, true) : Array = J$.R(2383521, 'Array', Array, true, true)), 'isArray', false)(J$.R(2383529, 'namespace', namespace, false, false)))) ? J$._() : J$.B(304658, '!==', J$.G(2383553, J$.R(2383545, 'namespace', namespace, false, false), 'length'), J$.T(2383561, 16, 22, false))))
                                                throw J$.F(2383585, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2383569, 'TypeError', undefined, true, true) : TypeError = J$.R(2383569, 'TypeError', TypeError, true, true)), false)(J$.T(2383577, 'namespace must be uuid string or an Array of 16 byte values', 21, false));
                                            var bytes = J$.W(2383633, 'bytes', J$.F(2383625, J$.R(2383593, 'hashfunc', hashfunc, false, false), false)(J$.M(2383617, J$.R(2383601, 'namespace', namespace, false, false), 'concat', false)(J$.R(2383609, 'value', value, false, false))), bytes, false, false);
                                            J$.P(2383697, J$.R(2383641, 'bytes', bytes, false, false), J$.T(2383649, 6, 22, false), J$.B(304674, '|', J$.B(304666, '&', J$.G(2383673, J$.R(2383657, 'bytes', bytes, false, false), J$.T(2383665, 6, 22, false)), J$.T(2383681, 15, 22, false)), J$.R(2383689, 'version', version, false, false)));
                                            J$.P(2383761, J$.R(2383705, 'bytes', bytes, false, false), J$.T(2383713, 8, 22, false), J$.B(304690, '|', J$.B(304682, '&', J$.G(2383737, J$.R(2383721, 'bytes', bytes, false, false), J$.T(2383729, 8, 22, false)), J$.T(2383745, 63, 22, false)), J$.T(2383753, 128, 22, false)));
                                            if (J$.C(111648, J$.R(2383769, 'buf', buf, false, false))) {
                                                for (var idx = J$.W(2383785, 'idx', J$.T(2383777, 0, 22, false), idx, false, false); J$.C(111640, J$.B(304698, '<', J$.R(2383793, 'idx', idx, false, false), J$.T(2383801, 16, 22, false))); idx = J$.W(2383817, 'idx', J$.B(304714, '+', J$.U(304706, '+', J$.R(2383809, 'idx', idx, false, false)), 1), idx, false, false)) {
                                                    J$.P(2383873, J$.R(2383825, 'buf', buf, false, false), J$.B(304722, '+', J$.R(2383833, 'off', off, false, false), J$.R(2383841, 'idx', idx, false, false)), J$.G(2383865, J$.R(2383849, 'bytes', bytes, false, false), J$.R(2383857, 'idx', idx, false, false)));
                                                }
                                            }
                                            return J$.Rt(2383913, J$.C(111656, J$.R(2383881, 'buf', buf, false, false)) ? J$._() : J$.F(2383905, J$.R(2383889, 'bytesToUuid', bytesToUuid, false, true), false)(J$.R(2383897, 'bytes', bytes, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2384265, J$e);
                                        } finally {
                                            if (J$.Fr(2384273))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), generateUUID, false, false);
                            try {
                                J$.P(2384025, J$.R(2384009, 'generateUUID', generateUUID, false, false), 'name', J$.R(2384017, 'name', name, false, false));
                            } catch (err) {
                                J$.N(2384033, 'err', err, false, false, true);
                            }
                            J$.P(2384057, J$.R(2384041, 'generateUUID', generateUUID, false, false), 'DNS', J$.T(2384049, '6ba7b810-9dad-11d1-80b4-00c04fd430c8', 21, false));
                            J$.P(2384081, J$.R(2384065, 'generateUUID', generateUUID, false, false), 'URL', J$.T(2384073, '6ba7b811-9dad-11d1-80b4-00c04fd430c8', 21, false));
                            return J$.Rt(2384097, J$.R(2384089, 'generateUUID', generateUUID, false, false));
                        } catch (J$e) {
                            J$.Ex(2384281, J$e);
                        } finally {
                            if (J$.Fr(2384289))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2384297, J$e);
        } finally {
            if (J$.Sr(2384305))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

