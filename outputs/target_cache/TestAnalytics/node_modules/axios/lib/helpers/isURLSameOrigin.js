J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2223217, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestAnalytics/node_modules/axios/lib/helpers/isURLSameOrigin.js');
            J$.N(2223225, 'utils', utils, false, false, false);
            J$.T(2222193, 'use strict', 21, false);
            var utils = J$.W(2222225, 'utils', J$.F(2222217, J$.I(typeof require === 'undefined' ? require = J$.R(2222201, 'require', undefined, true, true) : require = J$.R(2222201, 'require', require, true, true)), false)(J$.T(2222209, './../utils', 21, false)), utils, false, true);
            J$.P(2223209, J$.I(typeof module === 'undefined' ? module = J$.R(2222233, 'module', undefined, true, true) : module = J$.R(2222233, 'module', module, true, true)), 'exports', J$.C(105704, J$.M(2222249, J$.R(2222241, 'utils', utils, false, true), 'isStandardBrowserEnv', false)()) ? J$.F(2223121, J$.T(2223113, function standardBrowserEnv() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2223057, arguments.callee, this, arguments);
                            function resolveURL(url) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2222793, arguments.callee, this, arguments);
                                            arguments = J$.N(2222801, 'arguments', arguments, true, false, false);
                                            url = J$.N(2222809, 'url', url, true, false, false);
                                            J$.N(2222817, 'href', href, false, false, false);
                                            var href = J$.W(2222337, 'href', J$.R(2222329, 'url', url, false, false), href, false, false);
                                            if (J$.C(105648, J$.R(2222345, 'msie', msie, false, false))) {
                                                J$.M(2222377, J$.R(2222353, 'urlParsingNode', urlParsingNode, false, false), 'setAttribute', false)(J$.T(2222361, 'href', 21, false), J$.R(2222369, 'href', href, false, false));
                                                href = J$.W(2222401, 'href', J$.G(2222393, J$.R(2222385, 'urlParsingNode', urlParsingNode, false, false), 'href'), href, false, false);
                                            }
                                            J$.M(2222433, J$.R(2222409, 'urlParsingNode', urlParsingNode, false, false), 'setAttribute', false)(J$.T(2222417, 'href', 21, false), J$.R(2222425, 'href', href, false, false));
                                            return J$.Rt(2222785, J$.T(2222777, {
                                                href: J$.G(2222449, J$.R(2222441, 'urlParsingNode', urlParsingNode, false, false), 'href'),
                                                protocol: J$.C(105656, J$.G(2222465, J$.R(2222457, 'urlParsingNode', urlParsingNode, false, false), 'protocol')) ? J$.M(2222505, J$.G(2222481, J$.R(2222473, 'urlParsingNode', urlParsingNode, false, false), 'protocol'), 'replace', false)(J$.T(2222489, /:$/, 14, false), J$.T(2222497, '', 21, false)) : J$.T(2222513, '', 21, false),
                                                host: J$.G(2222529, J$.R(2222521, 'urlParsingNode', urlParsingNode, false, false), 'host'),
                                                search: J$.C(105664, J$.G(2222545, J$.R(2222537, 'urlParsingNode', urlParsingNode, false, false), 'search')) ? J$.M(2222585, J$.G(2222561, J$.R(2222553, 'urlParsingNode', urlParsingNode, false, false), 'search'), 'replace', false)(J$.T(2222569, /^\?/, 14, false), J$.T(2222577, '', 21, false)) : J$.T(2222593, '', 21, false),
                                                hash: J$.C(105672, J$.G(2222609, J$.R(2222601, 'urlParsingNode', urlParsingNode, false, false), 'hash')) ? J$.M(2222649, J$.G(2222625, J$.R(2222617, 'urlParsingNode', urlParsingNode, false, false), 'hash'), 'replace', false)(J$.T(2222633, /^#/, 14, false), J$.T(2222641, '', 21, false)) : J$.T(2222657, '', 21, false),
                                                hostname: J$.G(2222673, J$.R(2222665, 'urlParsingNode', urlParsingNode, false, false), 'hostname'),
                                                port: J$.G(2222689, J$.R(2222681, 'urlParsingNode', urlParsingNode, false, false), 'port'),
                                                pathname: J$.C(105680, J$.B(290162, '===', J$.M(2222721, J$.G(2222705, J$.R(2222697, 'urlParsingNode', urlParsingNode, false, false), 'pathname'), 'charAt', false)(J$.T(2222713, 0, 22, false)), J$.T(2222729, '/', 21, false))) ? J$.G(2222745, J$.R(2222737, 'urlParsingNode', urlParsingNode, false, false), 'pathname') : J$.B(290170, '+', J$.T(2222753, '/', 21, false), J$.G(2222769, J$.R(2222761, 'urlParsingNode', urlParsingNode, false, false), 'pathname'))
                                            }, 11, false));
                                        } catch (J$e) {
                                            J$.Ex(2223233, J$e);
                                        } finally {
                                            if (J$.Fr(2223241))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2223065, 'arguments', arguments, true, false, false);
                            J$.N(2223073, 'msie', msie, false, false, false);
                            J$.N(2223081, 'urlParsingNode', urlParsingNode, false, false, false);
                            J$.N(2223089, 'originURL', originURL, false, false, false);
                            resolveURL = J$.N(2223105, 'resolveURL', J$.T(2223097, resolveURL, 12, false), true, false, false);
                            var msie = J$.W(2222289, 'msie', J$.M(2222281, J$.T(2222257, /(msie|trident)/i, 14, false), 'test', false)(J$.G(2222273, J$.I(typeof navigator === 'undefined' ? navigator = J$.R(2222265, 'navigator', undefined, true, true) : navigator = J$.R(2222265, 'navigator', navigator, true, true)), 'userAgent')), msie, false, false);
                            var urlParsingNode = J$.W(2222321, 'urlParsingNode', J$.M(2222313, J$.I(typeof document === 'undefined' ? document = J$.R(2222297, 'document', undefined, true, true) : document = J$.R(2222297, 'document', document, true, true)), 'createElement', false)(J$.T(2222305, 'a', 21, false)), urlParsingNode, false, false);
                            var originURL;
                            originURL = J$.W(2222865, 'originURL', J$.F(2222857, J$.R(2222825, 'resolveURL', resolveURL, false, false), false)(J$.G(2222849, J$.G(2222841, J$.I(typeof window === 'undefined' ? window = J$.R(2222833, 'window', undefined, true, true) : window = J$.R(2222833, 'window', window, true, true)), 'location'), 'href')), originURL, false, false);
                            return J$.Rt(2223049, J$.T(2223041, function isURLSameOrigin(requestURL) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2223009, arguments.callee, this, arguments);
                                            arguments = J$.N(2223017, 'arguments', arguments, true, false, false);
                                            requestURL = J$.N(2223025, 'requestURL', requestURL, true, false, false);
                                            J$.N(2223033, 'parsed', parsed, false, false, false);
                                            var parsed = J$.W(2222929, 'parsed', J$.C(105688, J$.M(2222889, J$.R(2222873, 'utils', utils, false, true), 'isString', false)(J$.R(2222881, 'requestURL', requestURL, false, false))) ? J$.F(2222913, J$.R(2222897, 'resolveURL', resolveURL, false, false), false)(J$.R(2222905, 'requestURL', requestURL, false, false)) : J$.R(2222921, 'requestURL', requestURL, false, false), parsed, false, false);
                                            return J$.Rt(2223001, J$.C(105696, J$.B(290178, '===', J$.G(2222945, J$.R(2222937, 'parsed', parsed, false, false), 'protocol'), J$.G(2222961, J$.R(2222953, 'originURL', originURL, false, false), 'protocol'))) ? J$.B(290186, '===', J$.G(2222977, J$.R(2222969, 'parsed', parsed, false, false), 'host'), J$.G(2222993, J$.R(2222985, 'originURL', originURL, false, false), 'host')) : J$._());
                                        } catch (J$e) {
                                            J$.Ex(2223249, J$e);
                                        } finally {
                                            if (J$.Fr(2223257))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2223265, J$e);
                        } finally {
                            if (J$.Fr(2223273))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)() : J$.F(2223201, J$.T(2223193, function nonStandardBrowserEnv() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2223177, arguments.callee, this, arguments);
                            arguments = J$.N(2223185, 'arguments', arguments, true, false, false);
                            return J$.Rt(2223169, J$.T(2223161, function isURLSameOrigin() {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2223145, arguments.callee, this, arguments);
                                            arguments = J$.N(2223153, 'arguments', arguments, true, false, false);
                                            return J$.Rt(2223137, J$.T(2223129, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(2223281, J$e);
                                        } finally {
                                            if (J$.Fr(2223289))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2223297, J$e);
                        } finally {
                            if (J$.Fr(2223305))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)());
        } catch (J$e) {
            J$.Ex(2223313, J$e);
        } finally {
            if (J$.Sr(2223321))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

