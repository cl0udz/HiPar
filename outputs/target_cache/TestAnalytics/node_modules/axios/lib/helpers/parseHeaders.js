J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2224489, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestAnalytics/node_modules/axios/lib/helpers/parseHeaders.js');
            J$.N(2224497, 'utils', utils, false, false, false);
            J$.N(2224505, 'ignoreDuplicateOf', ignoreDuplicateOf, false, false, false);
            J$.T(2223649, 'use strict', 21, false);
            var utils = J$.W(2223681, 'utils', J$.F(2223673, J$.I(typeof require === 'undefined' ? require = J$.R(2223657, 'require', undefined, true, true) : require = J$.R(2223657, 'require', require, true, true)), false)(J$.T(2223665, './../utils', 21, false)), utils, false, true);
            var ignoreDuplicateOf = J$.W(2223833, 'ignoreDuplicateOf', J$.T(2223825, [
                J$.T(2223689, 'age', 21, false),
                J$.T(2223697, 'authorization', 21, false),
                J$.T(2223705, 'content-length', 21, false),
                J$.T(2223713, 'content-type', 21, false),
                J$.T(2223721, 'etag', 21, false),
                J$.T(2223729, 'expires', 21, false),
                J$.T(2223737, 'from', 21, false),
                J$.T(2223745, 'host', 21, false),
                J$.T(2223753, 'if-modified-since', 21, false),
                J$.T(2223761, 'if-unmodified-since', 21, false),
                J$.T(2223769, 'last-modified', 21, false),
                J$.T(2223777, 'location', 21, false),
                J$.T(2223785, 'max-forwards', 21, false),
                J$.T(2223793, 'proxy-authorization', 21, false),
                J$.T(2223801, 'referer', 21, false),
                J$.T(2223809, 'retry-after', 21, false),
                J$.T(2223817, 'user-agent', 21, false)
            ], 10, false), ignoreDuplicateOf, false, true);
            J$.P(2224481, J$.I(typeof module === 'undefined' ? module = J$.R(2223841, 'module', undefined, true, true) : module = J$.R(2223841, 'module', module, true, true)), 'exports', J$.T(2224473, function parseHeaders(headers) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2224417, arguments.callee, this, arguments);
                            arguments = J$.N(2224425, 'arguments', arguments, true, false, false);
                            headers = J$.N(2224433, 'headers', headers, true, false, false);
                            J$.N(2224441, 'parsed', parsed, false, false, false);
                            J$.N(2224449, 'key', key, false, false, false);
                            J$.N(2224457, 'val', val, false, false, false);
                            J$.N(2224465, 'i', i, false, false, false);
                            var parsed = J$.W(2223857, 'parsed', J$.T(2223849, {}, 11, false), parsed, false, false);
                            var key;
                            var val;
                            var i;
                            if (J$.C(105728, J$.U(290218, '!', J$.R(2223865, 'headers', headers, false, false)))) {
                                return J$.Rt(2223881, J$.R(2223873, 'parsed', parsed, false, false));
                            }
                            J$.M(2224393, J$.R(2223889, 'utils', utils, false, true), 'forEach', false)(J$.M(2223913, J$.R(2223897, 'headers', headers, false, false), 'split', false)(J$.T(2223905, '\n', 21, false)), J$.T(2224385, function parser(line) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2224361, arguments.callee, this, arguments);
                                            arguments = J$.N(2224369, 'arguments', arguments, true, false, false);
                                            line = J$.N(2224377, 'line', line, true, false, false);
                                            i = J$.W(2223945, 'i', J$.M(2223937, J$.R(2223921, 'line', line, false, false), 'indexOf', false)(J$.T(2223929, ':', 21, false)), i, false, false);
                                            key = J$.W(2224009, 'key', J$.M(2224001, J$.M(2223993, J$.R(2223953, 'utils', utils, false, true), 'trim', false)(J$.M(2223985, J$.R(2223961, 'line', line, false, false), 'substr', false)(J$.T(2223969, 0, 22, false), J$.R(2223977, 'i', i, false, false))), 'toLowerCase', false)(), key, false, false);
                                            val = J$.W(2224065, 'val', J$.M(2224057, J$.R(2224017, 'utils', utils, false, true), 'trim', false)(J$.M(2224049, J$.R(2224025, 'line', line, false, false), 'substr', false)(J$.B(290226, '+', J$.R(2224033, 'i', i, false, false), J$.T(2224041, 1, 22, false)))), val, false, false);
                                            if (J$.C(105776, J$.R(2224073, 'key', key, false, false))) {
                                                if (J$.C(105744, J$.C(105736, J$.G(2224097, J$.R(2224081, 'parsed', parsed, false, false), J$.R(2224089, 'key', key, false, false))) ? J$.B(290234, '>=', J$.M(2224121, J$.R(2224105, 'ignoreDuplicateOf', ignoreDuplicateOf, false, true), 'indexOf', false)(J$.R(2224113, 'key', key, false, false)), J$.T(2224129, 0, 22, false)) : J$._())) {
                                                    return J$.Rt(2224137, undefined);
                                                }
                                                if (J$.C(105768, J$.B(290242, '===', J$.R(2224145, 'key', key, false, false), J$.T(2224153, 'set-cookie', 21, false)))) {
                                                    J$.P(2224257, J$.R(2224161, 'parsed', parsed, false, false), J$.R(2224169, 'key', key, false, false), J$.M(2224249, J$.C(105752, J$.G(2224193, J$.R(2224177, 'parsed', parsed, false, false), J$.R(2224185, 'key', key, false, false))) ? J$.G(2224217, J$.R(2224201, 'parsed', parsed, false, false), J$.R(2224209, 'key', key, false, false)) : J$.T(2224225, [], 10, false), 'concat', false)(J$.T(2224241, [J$.R(2224233, 'val', val, false, false)], 10, false)));
                                                } else {
                                                    J$.P(2224353, J$.R(2224265, 'parsed', parsed, false, false), J$.R(2224273, 'key', key, false, false), J$.C(105760, J$.G(2224297, J$.R(2224281, 'parsed', parsed, false, false), J$.R(2224289, 'key', key, false, false))) ? J$.B(290258, '+', J$.B(290250, '+', J$.G(2224321, J$.R(2224305, 'parsed', parsed, false, false), J$.R(2224313, 'key', key, false, false)), J$.T(2224329, ', ', 21, false)), J$.R(2224337, 'val', val, false, false)) : J$.R(2224345, 'val', val, false, false));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2224513, J$e);
                                        } finally {
                                            if (J$.Fr(2224521))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2224409, J$.R(2224401, 'parsed', parsed, false, false));
                        } catch (J$e) {
                            J$.Ex(2224529, J$e);
                        } finally {
                            if (J$.Fr(2224537))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2224545, J$e);
        } finally {
            if (J$.Sr(2224553))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

