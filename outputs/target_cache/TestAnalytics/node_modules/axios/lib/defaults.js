J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(2218841, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestAnalytics/node_modules/axios/lib/defaults.js');
            function setContentTypeIfUnset(headers, value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2217633, arguments.callee, this, arguments);
                            arguments = J$.N(2217641, 'arguments', arguments, true, false, false);
                            headers = J$.N(2217649, 'headers', headers, true, false, false);
                            value = J$.N(2217657, 'value', value, true, false, false);
                            if (J$.C(105376, J$.C(105368, J$.U(289818, '!', J$.M(2217553, J$.R(2217537, 'utils', utils, false, true), 'isUndefined', false)(J$.R(2217545, 'headers', headers, false, false)))) ? J$.M(2217593, J$.R(2217561, 'utils', utils, false, true), 'isUndefined', false)(J$.G(2217585, J$.R(2217569, 'headers', headers, false, false), J$.T(2217577, 'Content-Type', 21, false))) : J$._())) {
                                J$.P(2217625, J$.R(2217601, 'headers', headers, false, false), J$.T(2217609, 'Content-Type', 21, false), J$.R(2217617, 'value', value, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2218913, J$e);
                        } finally {
                            if (J$.Fr(2218921))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getDefaultAdapter() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2217777, arguments.callee, this, arguments);
                            arguments = J$.N(2217785, 'arguments', arguments, true, false, false);
                            J$.N(2217793, 'adapter', adapter, false, false, false);
                            var adapter;
                            if (J$.C(105392, J$.B(289834, '!==', J$.U(289826, 'typeof', J$.I(typeof XMLHttpRequest === 'undefined' ? XMLHttpRequest = J$.R(2217665, 'XMLHttpRequest', undefined, true, true) : XMLHttpRequest = J$.R(2217665, 'XMLHttpRequest', XMLHttpRequest, true, true))), J$.T(2217673, 'undefined', 21, false)))) {
                                adapter = J$.W(2217705, 'adapter', J$.F(2217697, J$.I(typeof require === 'undefined' ? require = J$.R(2217681, 'require', undefined, true, true) : require = J$.R(2217681, 'require', require, true, true)), false)(J$.T(2217689, './adapters/xhr', 21, false)), adapter, false, false);
                            } else if (J$.C(105384, J$.B(289850, '!==', J$.U(289842, 'typeof', J$.I(typeof process === 'undefined' ? process = J$.R(2217713, 'process', undefined, true, true) : process = J$.R(2217713, 'process', process, true, true))), J$.T(2217721, 'undefined', 21, false)))) {
                                adapter = J$.W(2217753, 'adapter', J$.F(2217745, J$.I(typeof require === 'undefined' ? require = J$.R(2217729, 'require', undefined, true, true) : require = J$.R(2217729, 'require', require, true, true)), false)(J$.T(2217737, './adapters/http', 21, false)), adapter, false, false);
                            }
                            return J$.Rt(2217769, J$.R(2217761, 'adapter', adapter, false, false));
                        } catch (J$e) {
                            J$.Ex(2218929, J$e);
                        } finally {
                            if (J$.Fr(2218937))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2218849, 'utils', utils, false, false, false);
            J$.N(2218857, 'normalizeHeaderName', normalizeHeaderName, false, false, false);
            J$.N(2218865, 'DEFAULT_CONTENT_TYPE', DEFAULT_CONTENT_TYPE, false, false, false);
            setContentTypeIfUnset = J$.N(2218881, 'setContentTypeIfUnset', J$.T(2218873, setContentTypeIfUnset, 12, false), true, false, false);
            getDefaultAdapter = J$.N(2218897, 'getDefaultAdapter', J$.T(2218889, getDefaultAdapter, 12, false), true, false, false);
            J$.N(2218905, 'defaults', defaults, false, false, false);
            J$.T(2217441, 'use strict', 21, false);
            var utils = J$.W(2217473, 'utils', J$.F(2217465, J$.I(typeof require === 'undefined' ? require = J$.R(2217449, 'require', undefined, true, true) : require = J$.R(2217449, 'require', require, true, true)), false)(J$.T(2217457, './utils', 21, false)), utils, false, true);
            var normalizeHeaderName = J$.W(2217505, 'normalizeHeaderName', J$.F(2217497, J$.I(typeof require === 'undefined' ? require = J$.R(2217481, 'require', undefined, true, true) : require = J$.R(2217481, 'require', require, true, true)), false)(J$.T(2217489, './helpers/normalizeHeaderName', 21, false)), normalizeHeaderName, false, true);
            var DEFAULT_CONTENT_TYPE = J$.W(2217529, 'DEFAULT_CONTENT_TYPE', J$.T(2217521, { 'Content-Type': J$.T(2217513, 'application/x-www-form-urlencoded', 21, false) }, 11, false), DEFAULT_CONTENT_TYPE, false, true);
            var defaults = J$.W(2218513, 'defaults', J$.T(2218505, {
                adapter: J$.F(2217809, J$.R(2217801, 'getDefaultAdapter', getDefaultAdapter, false, true), false)(),
                transformRequest: J$.T(2218281, [J$.T(2218273, function transformRequest(data, headers) {
                        jalangiLabel2:
                            while (true) {
                                try {
                                    J$.Fe(2218241, arguments.callee, this, arguments);
                                    arguments = J$.N(2218249, 'arguments', arguments, true, false, false);
                                    data = J$.N(2218257, 'data', data, true, false, false);
                                    headers = J$.N(2218265, 'headers', headers, true, false, false);
                                    J$.F(2217841, J$.R(2217817, 'normalizeHeaderName', normalizeHeaderName, false, true), false)(J$.R(2217825, 'headers', headers, false, false), J$.T(2217833, 'Content-Type', 21, false));
                                    if (J$.C(105440, J$.C(105432, J$.C(105424, J$.C(105416, J$.C(105408, J$.C(105400, J$.M(2217865, J$.R(2217849, 'utils', utils, false, true), 'isFormData', false)(J$.R(2217857, 'data', data, false, false))) ? J$._() : J$.M(2217889, J$.R(2217873, 'utils', utils, false, true), 'isArrayBuffer', false)(J$.R(2217881, 'data', data, false, false))) ? J$._() : J$.M(2217913, J$.R(2217897, 'utils', utils, false, true), 'isBuffer', false)(J$.R(2217905, 'data', data, false, false))) ? J$._() : J$.M(2217937, J$.R(2217921, 'utils', utils, false, true), 'isStream', false)(J$.R(2217929, 'data', data, false, false))) ? J$._() : J$.M(2217961, J$.R(2217945, 'utils', utils, false, true), 'isFile', false)(J$.R(2217953, 'data', data, false, false))) ? J$._() : J$.M(2217985, J$.R(2217969, 'utils', utils, false, true), 'isBlob', false)(J$.R(2217977, 'data', data, false, false)))) {
                                        return J$.Rt(2218001, J$.R(2217993, 'data', data, false, false));
                                    }
                                    if (J$.C(105448, J$.M(2218025, J$.R(2218009, 'utils', utils, false, true), 'isArrayBufferView', false)(J$.R(2218017, 'data', data, false, false)))) {
                                        return J$.Rt(2218049, J$.G(2218041, J$.R(2218033, 'data', data, false, false), 'buffer'));
                                    }
                                    if (J$.C(105456, J$.M(2218073, J$.R(2218057, 'utils', utils, false, true), 'isURLSearchParams', false)(J$.R(2218065, 'data', data, false, false)))) {
                                        J$.F(2218105, J$.R(2218081, 'setContentTypeIfUnset', setContentTypeIfUnset, false, true), false)(J$.R(2218089, 'headers', headers, false, false), J$.T(2218097, 'application/x-www-form-urlencoded;charset=utf-8', 21, false));
                                        return J$.Rt(2218129, J$.M(2218121, J$.R(2218113, 'data', data, false, false), 'toString', false)());
                                    }
                                    if (J$.C(105464, J$.M(2218153, J$.R(2218137, 'utils', utils, false, true), 'isObject', false)(J$.R(2218145, 'data', data, false, false)))) {
                                        J$.F(2218185, J$.R(2218161, 'setContentTypeIfUnset', setContentTypeIfUnset, false, true), false)(J$.R(2218169, 'headers', headers, false, false), J$.T(2218177, 'application/json;charset=utf-8', 21, false));
                                        return J$.Rt(2218217, J$.M(2218209, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(2218193, 'JSON', undefined, true, true) : JSON = J$.R(2218193, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(2218201, 'data', data, false, false)));
                                    }
                                    return J$.Rt(2218233, J$.R(2218225, 'data', data, false, false));
                                } catch (J$e) {
                                    J$.Ex(2218945, J$e);
                                } finally {
                                    if (J$.Fr(2218953))
                                        continue jalangiLabel2;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)], 10, false),
                transformResponse: J$.T(2218393, [J$.T(2218385, function transformResponse(data) {
                        jalangiLabel3:
                            while (true) {
                                try {
                                    J$.Fe(2218361, arguments.callee, this, arguments);
                                    arguments = J$.N(2218369, 'arguments', arguments, true, false, false);
                                    data = J$.N(2218377, 'data', data, true, false, false);
                                    if (J$.C(105472, J$.B(289866, '===', J$.U(289858, 'typeof', J$.R(2218289, 'data', data, false, false)), J$.T(2218297, 'string', 21, false)))) {
                                        try {
                                            data = J$.W(2218329, 'data', J$.M(2218321, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(2218305, 'JSON', undefined, true, true) : JSON = J$.R(2218305, 'JSON', JSON, true, true)), 'parse', false)(J$.R(2218313, 'data', data, false, false)), data, false, false);
                                        } catch (e) {
                                            J$.N(2218337, 'e', e, false, false, true);
                                        }
                                    }
                                    return J$.Rt(2218353, J$.R(2218345, 'data', data, false, false));
                                } catch (J$e) {
                                    J$.Ex(2218961, J$e);
                                } finally {
                                    if (J$.Fr(2218969))
                                        continue jalangiLabel3;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)], 10, false),
                timeout: J$.T(2218401, 0, 22, false),
                xsrfCookieName: J$.T(2218409, 'XSRF-TOKEN', 21, false),
                xsrfHeaderName: J$.T(2218417, 'X-XSRF-TOKEN', 21, false),
                maxContentLength: J$.U(289874, '-', J$.T(2218425, 1, 22, false)),
                validateStatus: J$.T(2218497, function validateStatus(status) {
                    jalangiLabel4:
                        while (true) {
                            try {
                                J$.Fe(2218473, arguments.callee, this, arguments);
                                arguments = J$.N(2218481, 'arguments', arguments, true, false, false);
                                status = J$.N(2218489, 'status', status, true, false, false);
                                return J$.Rt(2218465, J$.C(105480, J$.B(289882, '>=', J$.R(2218433, 'status', status, false, false), J$.T(2218441, 200, 22, false))) ? J$.B(289890, '<', J$.R(2218449, 'status', status, false, false), J$.T(2218457, 300, 22, false)) : J$._());
                            } catch (J$e) {
                                J$.Ex(2218977, J$e);
                            } finally {
                                if (J$.Fr(2218985))
                                    continue jalangiLabel4;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), defaults, false, true);
            J$.P(2218553, J$.R(2218521, 'defaults', defaults, false, true), 'headers', J$.T(2218545, { common: J$.T(2218537, { 'Accept': J$.T(2218529, 'application/json, text/plain, */*', 21, false) }, 11, false) }, 11, false));
            J$.M(2218673, J$.R(2218561, 'utils', utils, false, true), 'forEach', false)(J$.T(2218593, [
                J$.T(2218569, 'delete', 21, false),
                J$.T(2218577, 'get', 21, false),
                J$.T(2218585, 'head', 21, false)
            ], 10, false), J$.T(2218665, function forEachMethodNoData(method) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2218641, arguments.callee, this, arguments);
                            arguments = J$.N(2218649, 'arguments', arguments, true, false, false);
                            method = J$.N(2218657, 'method', method, true, false, false);
                            J$.P(2218633, J$.G(2218609, J$.R(2218601, 'defaults', defaults, false, true), 'headers'), J$.R(2218617, 'method', method, false, false), J$.T(2218625, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(2218993, J$e);
                        } finally {
                            if (J$.Fr(2219001))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.M(2218809, J$.R(2218681, 'utils', utils, false, true), 'forEach', false)(J$.T(2218713, [
                J$.T(2218689, 'post', 21, false),
                J$.T(2218697, 'put', 21, false),
                J$.T(2218705, 'patch', 21, false)
            ], 10, false), J$.T(2218801, function forEachMethodWithData(method) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2218777, arguments.callee, this, arguments);
                            arguments = J$.N(2218785, 'arguments', arguments, true, false, false);
                            method = J$.N(2218793, 'method', method, true, false, false);
                            J$.P(2218769, J$.G(2218729, J$.R(2218721, 'defaults', defaults, false, true), 'headers'), J$.R(2218737, 'method', method, false, false), J$.M(2218761, J$.R(2218745, 'utils', utils, false, true), 'merge', false)(J$.R(2218753, 'DEFAULT_CONTENT_TYPE', DEFAULT_CONTENT_TYPE, false, true)));
                        } catch (J$e) {
                            J$.Ex(2219009, J$e);
                        } finally {
                            if (J$.Fr(2219017))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2218833, J$.I(typeof module === 'undefined' ? module = J$.R(2218817, 'module', undefined, true, true) : module = J$.R(2218817, 'module', module, true, true)), 'exports', J$.R(2218825, 'defaults', defaults, false, true));
        } catch (J$e) {
            J$.Ex(2219025, J$e);
        } finally {
            if (J$.Sr(2219033))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

