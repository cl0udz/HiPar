J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(2232521, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestAnalytics/node_modules/charenc/charenc.js');
            J$.N(2232529, 'charenc', charenc, false, false, false);
            var charenc = J$.W(2232489, 'charenc', J$.T(2232481, {
                utf8: J$.T(2232073, {
                    stringToBytes: J$.T(2231961, function (str) {
                        jalangiLabel0:
                            while (true) {
                                try {
                                    J$.Fe(2231937, arguments.callee, this, arguments);
                                    arguments = J$.N(2231945, 'arguments', arguments, true, false, false);
                                    str = J$.N(2231953, 'str', str, true, false, false);
                                    return J$.Rt(2231929, J$.M(2231921, J$.G(2231873, J$.R(2231865, 'charenc', charenc, false, true), 'bin'), 'stringToBytes', false)(J$.F(2231913, J$.I(typeof unescape === 'undefined' ? unescape = J$.R(2231881, 'unescape', undefined, true, true) : unescape = J$.R(2231881, 'unescape', unescape, true, true)), false)(J$.F(2231905, J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(2231889, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(2231889, 'encodeURIComponent', encodeURIComponent, true, true)), false)(J$.R(2231897, 'str', str, false, false)))));
                                } catch (J$e) {
                                    J$.Ex(2232537, J$e);
                                } finally {
                                    if (J$.Fr(2232545))
                                        continue jalangiLabel0;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    bytesToString: J$.T(2232065, function (bytes) {
                        jalangiLabel1:
                            while (true) {
                                try {
                                    J$.Fe(2232041, arguments.callee, this, arguments);
                                    arguments = J$.N(2232049, 'arguments', arguments, true, false, false);
                                    bytes = J$.N(2232057, 'bytes', bytes, true, false, false);
                                    return J$.Rt(2232033, J$.F(2232025, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(2231969, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(2231969, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.F(2232017, J$.I(typeof escape === 'undefined' ? escape = J$.R(2231977, 'escape', undefined, true, true) : escape = J$.R(2231977, 'escape', escape, true, true)), false)(J$.M(2232009, J$.G(2231993, J$.R(2231985, 'charenc', charenc, false, true), 'bin'), 'bytesToString', false)(J$.R(2232001, 'bytes', bytes, false, false)))));
                                } catch (J$e) {
                                    J$.Ex(2232553, J$e);
                                } finally {
                                    if (J$.Fr(2232561))
                                        continue jalangiLabel1;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                bin: J$.T(2232473, {
                    stringToBytes: J$.T(2232257, function (str) {
                        jalangiLabel2:
                            while (true) {
                                try {
                                    J$.Fe(2232217, arguments.callee, this, arguments);
                                    arguments = J$.N(2232225, 'arguments', arguments, true, false, false);
                                    str = J$.N(2232233, 'str', str, true, false, false);
                                    J$.N(2232241, 'bytes', bytes, false, false, false);
                                    J$.N(2232249, 'i', i, false, false, false);
                                    for (var bytes = J$.W(2232097, 'bytes', J$.T(2232081, [], 10, false), bytes, false, false), i = J$.W(2232105, 'i', J$.T(2232089, 0, 22, false), i, false, false); J$.C(106200, J$.B(290938, '<', J$.R(2232113, 'i', i, false, false), J$.G(2232129, J$.R(2232121, 'str', str, false, false), 'length'))); J$.B(290962, '-', i = J$.W(2232145, 'i', J$.B(290954, '+', J$.U(290946, '+', J$.R(2232137, 'i', i, false, false)), 1), i, false, false), 1))
                                        J$.M(2232193, J$.R(2232153, 'bytes', bytes, false, false), 'push', false)(J$.B(290970, '&', J$.M(2232177, J$.R(2232161, 'str', str, false, false), 'charCodeAt', false)(J$.R(2232169, 'i', i, false, false)), J$.T(2232185, 255, 22, false)));
                                    return J$.Rt(2232209, J$.R(2232201, 'bytes', bytes, false, false));
                                } catch (J$e) {
                                    J$.Ex(2232569, J$e);
                                } finally {
                                    if (J$.Fr(2232577))
                                        continue jalangiLabel2;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    bytesToString: J$.T(2232465, function (bytes) {
                        jalangiLabel3:
                            while (true) {
                                try {
                                    J$.Fe(2232425, arguments.callee, this, arguments);
                                    arguments = J$.N(2232433, 'arguments', arguments, true, false, false);
                                    bytes = J$.N(2232441, 'bytes', bytes, true, false, false);
                                    J$.N(2232449, 'str', str, false, false, false);
                                    J$.N(2232457, 'i', i, false, false, false);
                                    for (var str = J$.W(2232281, 'str', J$.T(2232265, [], 10, false), str, false, false), i = J$.W(2232289, 'i', J$.T(2232273, 0, 22, false), i, false, false); J$.C(106208, J$.B(290978, '<', J$.R(2232297, 'i', i, false, false), J$.G(2232313, J$.R(2232305, 'bytes', bytes, false, false), 'length'))); J$.B(291002, '-', i = J$.W(2232329, 'i', J$.B(290994, '+', J$.U(290986, '+', J$.R(2232321, 'i', i, false, false)), 1), i, false, false), 1))
                                        J$.M(2232385, J$.R(2232337, 'str', str, false, false), 'push', false)(J$.M(2232377, J$.I(typeof String === 'undefined' ? String = J$.R(2232345, 'String', undefined, true, true) : String = J$.R(2232345, 'String', String, true, true)), 'fromCharCode', false)(J$.G(2232369, J$.R(2232353, 'bytes', bytes, false, false), J$.R(2232361, 'i', i, false, false))));
                                    return J$.Rt(2232417, J$.M(2232409, J$.R(2232393, 'str', str, false, false), 'join', false)(J$.T(2232401, '', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(2232585, J$e);
                                } finally {
                                    if (J$.Fr(2232593))
                                        continue jalangiLabel3;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false)
            }, 11, false), charenc, false, true);
            J$.P(2232513, J$.I(typeof module === 'undefined' ? module = J$.R(2232497, 'module', undefined, true, true) : module = J$.R(2232497, 'module', module, true, true)), 'exports', J$.R(2232505, 'charenc', charenc, false, true));
        } catch (J$e) {
            J$.Ex(2232601, J$e);
        } finally {
            if (J$.Sr(2232609))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

