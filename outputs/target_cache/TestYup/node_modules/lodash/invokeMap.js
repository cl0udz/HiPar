J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4160081, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/invokeMap.js');
            J$.N(4160089, 'apply', apply, false, false, false);
            J$.N(4160097, 'baseEach', baseEach, false, false, false);
            J$.N(4160105, 'baseInvoke', baseInvoke, false, false, false);
            J$.N(4160113, 'baseRest', baseRest, false, false, false);
            J$.N(4160121, 'isArrayLike', isArrayLike, false, false, false);
            J$.N(4160129, 'invokeMap', invokeMap, false, false, false);
            J$.T(4159489, 'use strict', 21, false);
            var apply = J$.W(4159617, 'apply', J$.F(4159513, J$.I(typeof require === 'undefined' ? require = J$.R(4159497, 'require', undefined, true, true) : require = J$.R(4159497, 'require', require, true, true)), false)(J$.T(4159505, './_apply', 21, false)), apply, false, true), baseEach = J$.W(4159625, 'baseEach', J$.F(4159537, J$.I(typeof require === 'undefined' ? require = J$.R(4159521, 'require', undefined, true, true) : require = J$.R(4159521, 'require', require, true, true)), false)(J$.T(4159529, './_baseEach', 21, false)), baseEach, false, true), baseInvoke = J$.W(4159633, 'baseInvoke', J$.F(4159561, J$.I(typeof require === 'undefined' ? require = J$.R(4159545, 'require', undefined, true, true) : require = J$.R(4159545, 'require', require, true, true)), false)(J$.T(4159553, './_baseInvoke', 21, false)), baseInvoke, false, true), baseRest = J$.W(4159641, 'baseRest', J$.F(4159585, J$.I(typeof require === 'undefined' ? require = J$.R(4159569, 'require', undefined, true, true) : require = J$.R(4159569, 'require', require, true, true)), false)(J$.T(4159577, './_baseRest', 21, false)), baseRest, false, true), isArrayLike = J$.W(4159649, 'isArrayLike', J$.F(4159609, J$.I(typeof require === 'undefined' ? require = J$.R(4159593, 'require', undefined, true, true) : require = J$.R(4159593, 'require', require, true, true)), false)(J$.T(4159601, './isArrayLike', 21, false)), isArrayLike, false, true);
            var invokeMap = J$.W(4160049, 'invokeMap', J$.F(4160041, J$.R(4159657, 'baseRest', baseRest, false, true), false)(J$.T(4160033, function (collection, path, args) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4159969, arguments.callee, this, arguments);
                            arguments = J$.N(4159977, 'arguments', arguments, true, false, false);
                            collection = J$.N(4159985, 'collection', collection, true, false, false);
                            path = J$.N(4159993, 'path', path, true, false, false);
                            args = J$.N(4160001, 'args', args, true, false, false);
                            J$.N(4160009, 'index', index, false, false, false);
                            J$.N(4160017, 'isFunc', isFunc, false, false, false);
                            J$.N(4160025, 'result', result, false, false, false);
                            var index = J$.W(4159753, 'index', J$.U(445002, '-', J$.T(4159665, 1, 22, false)), index, false, false), isFunc = J$.W(4159761, 'isFunc', J$.B(445018, '==', J$.U(445010, 'typeof', J$.R(4159673, 'path', path, false, false)), J$.T(4159681, 'function', 21, false)), isFunc, false, false), result = J$.W(4159769, 'result', J$.C(216216, J$.F(4159705, J$.R(4159689, 'isArrayLike', isArrayLike, false, true), false)(J$.R(4159697, 'collection', collection, false, false))) ? J$.F(4159737, J$.I(typeof Array === 'undefined' ? Array = J$.R(4159713, 'Array', undefined, true, true) : Array = J$.R(4159713, 'Array', Array, true, true)), false)(J$.G(4159729, J$.R(4159721, 'collection', collection, false, false), 'length')) : J$.T(4159745, [], 10, false), result, false, false);
                            J$.F(4159945, J$.R(4159777, 'baseEach', baseEach, false, true), false)(J$.R(4159785, 'collection', collection, false, false), J$.T(4159937, function (value) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4159913, arguments.callee, this, arguments);
                                            arguments = J$.N(4159921, 'arguments', arguments, true, false, false);
                                            value = J$.N(4159929, 'value', value, true, false, false);
                                            J$.P(4159905, J$.R(4159793, 'result', result, false, false), index = J$.W(4159809, 'index', J$.B(445034, '+', J$.U(445026, '+', J$.R(4159801, 'index', index, false, false)), 1), index, false, false), J$.C(216224, J$.R(4159817, 'isFunc', isFunc, false, false)) ? J$.F(4159857, J$.R(4159825, 'apply', apply, false, true), false)(J$.R(4159833, 'path', path, false, false), J$.R(4159841, 'value', value, false, false), J$.R(4159849, 'args', args, false, false)) : J$.F(4159897, J$.R(4159865, 'baseInvoke', baseInvoke, false, true), false)(J$.R(4159873, 'value', value, false, false), J$.R(4159881, 'path', path, false, false), J$.R(4159889, 'args', args, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(4160137, J$e);
                                        } finally {
                                            if (J$.Fr(4160145))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4159961, J$.R(4159953, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(4160153, J$e);
                        } finally {
                            if (J$.Fr(4160161))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), invokeMap, false, true);
            J$.P(4160073, J$.I(typeof module === 'undefined' ? module = J$.R(4160057, 'module', undefined, true, true) : module = J$.R(4160057, 'module', module, true, true)), 'exports', J$.R(4160065, 'invokeMap', invokeMap, false, true));
        } catch (J$e) {
            J$.Ex(4160169, J$e);
        } finally {
            if (J$.Sr(4160177))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

