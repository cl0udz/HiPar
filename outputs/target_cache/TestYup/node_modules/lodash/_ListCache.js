J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3808513, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/_ListCache.js');
            function ListCache(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3808273, arguments.callee, this, arguments);
                            arguments = J$.N(3808281, 'arguments', arguments, true, false, false);
                            entries = J$.N(3808289, 'entries', entries, true, false, false);
                            J$.N(3808297, 'index', index, false, false, false);
                            J$.N(3808305, 'length', length, false, false, false);
                            J$.N(3808313, 'entry', entry, false, false, false);
                            var index = J$.W(3808121, 'index', J$.U(425498, '-', J$.T(3808073, 1, 22, false)), index, false, false), length = J$.W(3808129, 'length', J$.C(200704, J$.B(425506, '==', J$.R(3808081, 'entries', entries, false, false), J$.T(3808089, null, 25, false))) ? J$.T(3808097, 0, 22, false) : J$.G(3808113, J$.R(3808105, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(3808145, J$.R(3808137, 'this', this, false, false), 'clear', false)();
                            while (J$.C(200712, J$.B(425530, '<', index = J$.W(3808161, 'index', J$.B(425522, '+', J$.U(425514, '+', J$.R(3808153, 'index', index, false, false)), 1), index, false, false), J$.R(3808169, 'length', length, false, false)))) {
                                var entry = J$.W(3808201, 'entry', J$.G(3808193, J$.R(3808177, 'entries', entries, false, false), J$.R(3808185, 'index', index, false, false)), entry, false, false);
                                J$.M(3808265, J$.R(3808209, 'this', this, false, false), 'set', false)(J$.G(3808233, J$.R(3808217, 'entry', entry, false, false), J$.T(3808225, 0, 22, false)), J$.G(3808257, J$.R(3808241, 'entry', entry, false, false), J$.T(3808249, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(3808577, J$e);
                        } finally {
                            if (J$.Fr(3808585))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3808521, 'listCacheClear', listCacheClear, false, false, false);
            J$.N(3808529, 'listCacheDelete', listCacheDelete, false, false, false);
            J$.N(3808537, 'listCacheGet', listCacheGet, false, false, false);
            J$.N(3808545, 'listCacheHas', listCacheHas, false, false, false);
            J$.N(3808553, 'listCacheSet', listCacheSet, false, false, false);
            ListCache = J$.N(3808569, 'ListCache', J$.T(3808561, ListCache, 12, false), true, false, false);
            J$.T(3807905, 'use strict', 21, false);
            var listCacheClear = J$.W(3808033, 'listCacheClear', J$.F(3807929, J$.I(typeof require === 'undefined' ? require = J$.R(3807913, 'require', undefined, true, true) : require = J$.R(3807913, 'require', require, true, true)), false)(J$.T(3807921, './_listCacheClear', 21, false)), listCacheClear, false, true), listCacheDelete = J$.W(3808041, 'listCacheDelete', J$.F(3807953, J$.I(typeof require === 'undefined' ? require = J$.R(3807937, 'require', undefined, true, true) : require = J$.R(3807937, 'require', require, true, true)), false)(J$.T(3807945, './_listCacheDelete', 21, false)), listCacheDelete, false, true), listCacheGet = J$.W(3808049, 'listCacheGet', J$.F(3807977, J$.I(typeof require === 'undefined' ? require = J$.R(3807961, 'require', undefined, true, true) : require = J$.R(3807961, 'require', require, true, true)), false)(J$.T(3807969, './_listCacheGet', 21, false)), listCacheGet, false, true), listCacheHas = J$.W(3808057, 'listCacheHas', J$.F(3808001, J$.I(typeof require === 'undefined' ? require = J$.R(3807985, 'require', undefined, true, true) : require = J$.R(3807985, 'require', require, true, true)), false)(J$.T(3807993, './_listCacheHas', 21, false)), listCacheHas, false, true), listCacheSet = J$.W(3808065, 'listCacheSet', J$.F(3808025, J$.I(typeof require === 'undefined' ? require = J$.R(3808009, 'require', undefined, true, true) : require = J$.R(3808009, 'require', require, true, true)), false)(J$.T(3808017, './_listCacheSet', 21, false)), listCacheSet, false, true);
            J$.P(3808345, J$.G(3808329, J$.R(3808321, 'ListCache', ListCache, false, true), 'prototype'), 'clear', J$.R(3808337, 'listCacheClear', listCacheClear, false, true));
            J$.P(3808385, J$.G(3808361, J$.R(3808353, 'ListCache', ListCache, false, true), 'prototype'), J$.T(3808369, 'delete', 21, false), J$.R(3808377, 'listCacheDelete', listCacheDelete, false, true));
            J$.P(3808417, J$.G(3808401, J$.R(3808393, 'ListCache', ListCache, false, true), 'prototype'), 'get', J$.R(3808409, 'listCacheGet', listCacheGet, false, true));
            J$.P(3808449, J$.G(3808433, J$.R(3808425, 'ListCache', ListCache, false, true), 'prototype'), 'has', J$.R(3808441, 'listCacheHas', listCacheHas, false, true));
            J$.P(3808481, J$.G(3808465, J$.R(3808457, 'ListCache', ListCache, false, true), 'prototype'), 'set', J$.R(3808473, 'listCacheSet', listCacheSet, false, true));
            J$.P(3808505, J$.I(typeof module === 'undefined' ? module = J$.R(3808489, 'module', undefined, true, true) : module = J$.R(3808489, 'module', module, true, true)), 'exports', J$.R(3808497, 'ListCache', ListCache, false, true));
        } catch (J$e) {
            J$.Ex(3808593, J$e);
        } finally {
            if (J$.Sr(3808601))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

