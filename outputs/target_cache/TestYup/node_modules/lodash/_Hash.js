J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3807345, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/_Hash.js');
            function Hash(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3807105, arguments.callee, this, arguments);
                            arguments = J$.N(3807113, 'arguments', arguments, true, false, false);
                            entries = J$.N(3807121, 'entries', entries, true, false, false);
                            J$.N(3807129, 'index', index, false, false, false);
                            J$.N(3807137, 'length', length, false, false, false);
                            J$.N(3807145, 'entry', entry, false, false, false);
                            var index = J$.W(3806953, 'index', J$.U(425458, '-', J$.T(3806905, 1, 22, false)), index, false, false), length = J$.W(3806961, 'length', J$.C(200688, J$.B(425466, '==', J$.R(3806913, 'entries', entries, false, false), J$.T(3806921, null, 25, false))) ? J$.T(3806929, 0, 22, false) : J$.G(3806945, J$.R(3806937, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(3806977, J$.R(3806969, 'this', this, false, false), 'clear', false)();
                            while (J$.C(200696, J$.B(425490, '<', index = J$.W(3806993, 'index', J$.B(425482, '+', J$.U(425474, '+', J$.R(3806985, 'index', index, false, false)), 1), index, false, false), J$.R(3807001, 'length', length, false, false)))) {
                                var entry = J$.W(3807033, 'entry', J$.G(3807025, J$.R(3807009, 'entries', entries, false, false), J$.R(3807017, 'index', index, false, false)), entry, false, false);
                                J$.M(3807097, J$.R(3807041, 'this', this, false, false), 'set', false)(J$.G(3807065, J$.R(3807049, 'entry', entry, false, false), J$.T(3807057, 0, 22, false)), J$.G(3807089, J$.R(3807073, 'entry', entry, false, false), J$.T(3807081, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(3807409, J$e);
                        } finally {
                            if (J$.Fr(3807417))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3807353, 'hashClear', hashClear, false, false, false);
            J$.N(3807361, 'hashDelete', hashDelete, false, false, false);
            J$.N(3807369, 'hashGet', hashGet, false, false, false);
            J$.N(3807377, 'hashHas', hashHas, false, false, false);
            J$.N(3807385, 'hashSet', hashSet, false, false, false);
            Hash = J$.N(3807401, 'Hash', J$.T(3807393, Hash, 12, false), true, false, false);
            J$.T(3806737, 'use strict', 21, false);
            var hashClear = J$.W(3806865, 'hashClear', J$.F(3806761, J$.I(typeof require === 'undefined' ? require = J$.R(3806745, 'require', undefined, true, true) : require = J$.R(3806745, 'require', require, true, true)), false)(J$.T(3806753, './_hashClear', 21, false)), hashClear, false, true), hashDelete = J$.W(3806873, 'hashDelete', J$.F(3806785, J$.I(typeof require === 'undefined' ? require = J$.R(3806769, 'require', undefined, true, true) : require = J$.R(3806769, 'require', require, true, true)), false)(J$.T(3806777, './_hashDelete', 21, false)), hashDelete, false, true), hashGet = J$.W(3806881, 'hashGet', J$.F(3806809, J$.I(typeof require === 'undefined' ? require = J$.R(3806793, 'require', undefined, true, true) : require = J$.R(3806793, 'require', require, true, true)), false)(J$.T(3806801, './_hashGet', 21, false)), hashGet, false, true), hashHas = J$.W(3806889, 'hashHas', J$.F(3806833, J$.I(typeof require === 'undefined' ? require = J$.R(3806817, 'require', undefined, true, true) : require = J$.R(3806817, 'require', require, true, true)), false)(J$.T(3806825, './_hashHas', 21, false)), hashHas, false, true), hashSet = J$.W(3806897, 'hashSet', J$.F(3806857, J$.I(typeof require === 'undefined' ? require = J$.R(3806841, 'require', undefined, true, true) : require = J$.R(3806841, 'require', require, true, true)), false)(J$.T(3806849, './_hashSet', 21, false)), hashSet, false, true);
            J$.P(3807177, J$.G(3807161, J$.R(3807153, 'Hash', Hash, false, true), 'prototype'), 'clear', J$.R(3807169, 'hashClear', hashClear, false, true));
            J$.P(3807217, J$.G(3807193, J$.R(3807185, 'Hash', Hash, false, true), 'prototype'), J$.T(3807201, 'delete', 21, false), J$.R(3807209, 'hashDelete', hashDelete, false, true));
            J$.P(3807249, J$.G(3807233, J$.R(3807225, 'Hash', Hash, false, true), 'prototype'), 'get', J$.R(3807241, 'hashGet', hashGet, false, true));
            J$.P(3807281, J$.G(3807265, J$.R(3807257, 'Hash', Hash, false, true), 'prototype'), 'has', J$.R(3807273, 'hashHas', hashHas, false, true));
            J$.P(3807313, J$.G(3807297, J$.R(3807289, 'Hash', Hash, false, true), 'prototype'), 'set', J$.R(3807305, 'hashSet', hashSet, false, true));
            J$.P(3807337, J$.I(typeof module === 'undefined' ? module = J$.R(3807321, 'module', undefined, true, true) : module = J$.R(3807321, 'module', module, true, true)), 'exports', J$.R(3807329, 'Hash', Hash, false, true));
        } catch (J$e) {
            J$.Ex(3807425, J$e);
        } finally {
            if (J$.Sr(3807433))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

