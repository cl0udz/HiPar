J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3833449, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/_baseGet.js');
            function baseGet(object, path) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3833377, arguments.callee, this, arguments);
                            arguments = J$.N(3833385, 'arguments', arguments, true, false, false);
                            object = J$.N(3833393, 'object', object, true, false, false);
                            path = J$.N(3833401, 'path', path, true, false, false);
                            J$.N(3833409, 'index', index, false, false, false);
                            J$.N(3833417, 'length', length, false, false, false);
                            path = J$.W(3833177, 'path', J$.F(3833169, J$.R(3833145, 'castPath', castPath, false, true), false)(J$.R(3833153, 'path', path, false, false), J$.R(3833161, 'object', object, false, false)), path, false, false);
                            var index = J$.W(3833209, 'index', J$.T(3833185, 0, 22, false), index, false, false), length = J$.W(3833217, 'length', J$.G(3833201, J$.R(3833193, 'path', path, false, false), 'length'), length, false, false);
                            while (J$.C(202032, J$.C(202024, J$.B(427114, '!=', J$.R(3833225, 'object', object, false, false), J$.T(3833233, null, 25, false))) ? J$.B(427122, '<', J$.R(3833241, 'index', index, false, false), J$.R(3833249, 'length', length, false, false)) : J$._())) {
                                object = J$.W(3833321, 'object', J$.G(3833313, J$.R(3833257, 'object', object, false, false), J$.F(3833305, J$.R(3833265, 'toKey', toKey, false, true), false)(J$.G(3833297, J$.R(3833273, 'path', path, false, false), J$.B(427146, '-', index = J$.W(3833289, 'index', J$.B(427138, '+', J$.U(427130, '+', J$.R(3833281, 'index', index, false, false)), 1), index, false, false), 1)))), object, false, false);
                            }
                            return J$.Rt(3833369, J$.C(202048, J$.C(202040, J$.R(3833329, 'index', index, false, false)) ? J$.B(427154, '==', J$.R(3833337, 'index', index, false, false), J$.R(3833345, 'length', length, false, false)) : J$._()) ? J$.R(3833353, 'object', object, false, false) : J$.T(3833361, undefined, 24, false));
                        } catch (J$e) {
                            J$.Ex(3833489, J$e);
                        } finally {
                            if (J$.Fr(3833497))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3833457, 'castPath', castPath, false, false, false);
            J$.N(3833465, 'toKey', toKey, false, false, false);
            baseGet = J$.N(3833481, 'baseGet', J$.T(3833473, baseGet, 12, false), true, false, false);
            J$.T(3833073, 'use strict', 21, false);
            var castPath = J$.W(3833129, 'castPath', J$.F(3833097, J$.I(typeof require === 'undefined' ? require = J$.R(3833081, 'require', undefined, true, true) : require = J$.R(3833081, 'require', require, true, true)), false)(J$.T(3833089, './_castPath', 21, false)), castPath, false, true), toKey = J$.W(3833137, 'toKey', J$.F(3833121, J$.I(typeof require === 'undefined' ? require = J$.R(3833105, 'require', undefined, true, true) : require = J$.R(3833105, 'require', require, true, true)), false)(J$.T(3833113, './_toKey', 21, false)), toKey, false, true);
            J$.P(3833441, J$.I(typeof module === 'undefined' ? module = J$.R(3833425, 'module', undefined, true, true) : module = J$.R(3833425, 'module', module, true, true)), 'exports', J$.R(3833433, 'baseGet', baseGet, false, true));
        } catch (J$e) {
            J$.Ex(3833505, J$e);
        } finally {
            if (J$.Sr(3833513))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

