J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3831289, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/_baseFindKey.js');
            function baseFindKey(collection, predicate, eachFunc) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3831217, arguments.callee, this, arguments);
                            arguments = J$.N(3831225, 'arguments', arguments, true, false, false);
                            collection = J$.N(3831233, 'collection', collection, true, false, false);
                            predicate = J$.N(3831241, 'predicate', predicate, true, false, false);
                            eachFunc = J$.N(3831249, 'eachFunc', eachFunc, true, false, false);
                            J$.N(3831257, 'result', result, false, false, false);
                            var result;
                            J$.F(3831193, J$.R(3831057, 'eachFunc', eachFunc, false, false), false)(J$.R(3831065, 'collection', collection, false, false), J$.T(3831185, function (value, key, collection) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3831145, arguments.callee, this, arguments);
                                            arguments = J$.N(3831153, 'arguments', arguments, true, false, false);
                                            value = J$.N(3831161, 'value', value, true, false, false);
                                            key = J$.N(3831169, 'key', key, true, false, false);
                                            collection = J$.N(3831177, 'collection', collection, true, false, false);
                                            if (J$.C(201944, J$.F(3831105, J$.R(3831073, 'predicate', predicate, false, false), false)(J$.R(3831081, 'value', value, false, false), J$.R(3831089, 'key', key, false, false), J$.R(3831097, 'collection', collection, false, false)))) {
                                                result = J$.W(3831121, 'result', J$.R(3831113, 'key', key, false, false), result, false, false);
                                                return J$.Rt(3831137, J$.T(3831129, false, 23, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(3831313, J$e);
                                        } finally {
                                            if (J$.Fr(3831321))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(3831209, J$.R(3831201, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3831329, J$e);
                        } finally {
                            if (J$.Fr(3831337))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            baseFindKey = J$.N(3831305, 'baseFindKey', J$.T(3831297, baseFindKey, 12, false), true, false, false);
            J$.T(3831049, 'use strict', 21, false);
            J$.P(3831281, J$.I(typeof module === 'undefined' ? module = J$.R(3831265, 'module', undefined, true, true) : module = J$.R(3831265, 'module', module, true, true)), 'exports', J$.R(3831273, 'baseFindKey', baseFindKey, false, true));
        } catch (J$e) {
            J$.Ex(3831345, J$e);
        } finally {
            if (J$.Sr(3831353))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

