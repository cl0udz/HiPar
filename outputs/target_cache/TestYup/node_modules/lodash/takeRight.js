J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4571073, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/takeRight.js');
            function takeRight(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4571001, arguments.callee, this, arguments);
                            arguments = J$.N(4571009, 'arguments', arguments, true, false, false);
                            array = J$.N(4571017, 'array', array, true, false, false);
                            n = J$.N(4571025, 'n', n, true, false, false);
                            guard = J$.N(4571033, 'guard', guard, true, false, false);
                            J$.N(4571041, 'length', length, false, false, false);
                            var length = J$.W(4570809, 'length', J$.C(245080, J$.B(476042, '==', J$.R(4570769, 'array', array, false, false), J$.T(4570777, null, 25, false))) ? J$.T(4570785, 0, 22, false) : J$.G(4570801, J$.R(4570793, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(245088, J$.U(476050, '!', J$.R(4570817, 'length', length, false, false)))) {
                                return J$.Rt(4570833, J$.T(4570825, [], 10, false));
                            }
                            n = J$.W(4570897, 'n', J$.C(245104, J$.C(245096, J$.R(4570841, 'guard', guard, false, false)) ? J$._() : J$.B(476058, '===', J$.R(4570849, 'n', n, false, false), J$.T(4570857, undefined, 24, false))) ? J$.T(4570865, 1, 22, false) : J$.F(4570889, J$.R(4570873, 'toInteger', toInteger, false, true), false)(J$.R(4570881, 'n', n, false, false)), n, false, false);
                            n = J$.W(4570921, 'n', J$.B(476066, '-', J$.R(4570905, 'length', length, false, false), J$.R(4570913, 'n', n, false, false)), n, false, false);
                            return J$.Rt(4570993, J$.F(4570985, J$.R(4570929, 'baseSlice', baseSlice, false, true), false)(J$.R(4570937, 'array', array, false, false), J$.C(245112, J$.B(476074, '<', J$.R(4570945, 'n', n, false, false), J$.T(4570953, 0, 22, false))) ? J$.T(4570961, 0, 22, false) : J$.R(4570969, 'n', n, false, false), J$.R(4570977, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(4571113, J$e);
                        } finally {
                            if (J$.Fr(4571121))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4571081, 'baseSlice', baseSlice, false, false, false);
            J$.N(4571089, 'toInteger', toInteger, false, false, false);
            takeRight = J$.N(4571105, 'takeRight', J$.T(4571097, takeRight, 12, false), true, false, false);
            J$.T(4570697, 'use strict', 21, false);
            var baseSlice = J$.W(4570753, 'baseSlice', J$.F(4570721, J$.I(typeof require === 'undefined' ? require = J$.R(4570705, 'require', undefined, true, true) : require = J$.R(4570705, 'require', require, true, true)), false)(J$.T(4570713, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(4570761, 'toInteger', J$.F(4570745, J$.I(typeof require === 'undefined' ? require = J$.R(4570729, 'require', undefined, true, true) : require = J$.R(4570729, 'require', require, true, true)), false)(J$.T(4570737, './toInteger', 21, false)), toInteger, false, true);
            J$.P(4571065, J$.I(typeof module === 'undefined' ? module = J$.R(4571049, 'module', undefined, true, true) : module = J$.R(4571049, 'module', module, true, true)), 'exports', J$.R(4571057, 'takeRight', takeRight, false, true));
        } catch (J$e) {
            J$.Ex(4571129, J$e);
        } finally {
            if (J$.Sr(4571137))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

