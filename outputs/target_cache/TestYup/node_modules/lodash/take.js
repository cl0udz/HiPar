J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4570625, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/take.js');
            function take(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4570561, arguments.callee, this, arguments);
                            arguments = J$.N(4570569, 'arguments', arguments, true, false, false);
                            array = J$.N(4570577, 'array', array, true, false, false);
                            n = J$.N(4570585, 'n', n, true, false, false);
                            guard = J$.N(4570593, 'guard', guard, true, false, false);
                            if (J$.C(245048, J$.U(476018, '!', J$.C(245040, J$.R(4570385, 'array', array, false, false)) ? J$.G(4570401, J$.R(4570393, 'array', array, false, false), 'length') : J$._()))) {
                                return J$.Rt(4570417, J$.T(4570409, [], 10, false));
                            }
                            n = J$.W(4570481, 'n', J$.C(245064, J$.C(245056, J$.R(4570425, 'guard', guard, false, false)) ? J$._() : J$.B(476026, '===', J$.R(4570433, 'n', n, false, false), J$.T(4570441, undefined, 24, false))) ? J$.T(4570449, 1, 22, false) : J$.F(4570473, J$.R(4570457, 'toInteger', toInteger, false, true), false)(J$.R(4570465, 'n', n, false, false)), n, false, false);
                            return J$.Rt(4570553, J$.F(4570545, J$.R(4570489, 'baseSlice', baseSlice, false, true), false)(J$.R(4570497, 'array', array, false, false), J$.T(4570505, 0, 22, false), J$.C(245072, J$.B(476034, '<', J$.R(4570513, 'n', n, false, false), J$.T(4570521, 0, 22, false))) ? J$.T(4570529, 0, 22, false) : J$.R(4570537, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(4570665, J$e);
                        } finally {
                            if (J$.Fr(4570673))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4570633, 'baseSlice', baseSlice, false, false, false);
            J$.N(4570641, 'toInteger', toInteger, false, false, false);
            take = J$.N(4570657, 'take', J$.T(4570649, take, 12, false), true, false, false);
            J$.T(4570313, 'use strict', 21, false);
            var baseSlice = J$.W(4570369, 'baseSlice', J$.F(4570337, J$.I(typeof require === 'undefined' ? require = J$.R(4570321, 'require', undefined, true, true) : require = J$.R(4570321, 'require', require, true, true)), false)(J$.T(4570329, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(4570377, 'toInteger', J$.F(4570361, J$.I(typeof require === 'undefined' ? require = J$.R(4570345, 'require', undefined, true, true) : require = J$.R(4570345, 'require', require, true, true)), false)(J$.T(4570353, './toInteger', 21, false)), toInteger, false, true);
            J$.P(4570617, J$.I(typeof module === 'undefined' ? module = J$.R(4570601, 'module', undefined, true, true) : module = J$.R(4570601, 'module', module, true, true)), 'exports', J$.R(4570609, 'take', take, false, true));
        } catch (J$e) {
            J$.Ex(4570681, J$e);
        } finally {
            if (J$.Sr(4570689))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

