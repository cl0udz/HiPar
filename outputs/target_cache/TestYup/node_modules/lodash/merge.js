J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4535361, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/merge.js');
            J$.N(4535369, 'baseMerge', baseMerge, false, false, false);
            J$.N(4535377, 'createAssigner', createAssigner, false, false, false);
            J$.N(4535385, 'merge', merge, false, false, false);
            J$.T(4535153, 'use strict', 21, false);
            var baseMerge = J$.W(4535209, 'baseMerge', J$.F(4535177, J$.I(typeof require === 'undefined' ? require = J$.R(4535161, 'require', undefined, true, true) : require = J$.R(4535161, 'require', require, true, true)), false)(J$.T(4535169, './_baseMerge', 21, false)), baseMerge, false, true), createAssigner = J$.W(4535217, 'createAssigner', J$.F(4535201, J$.I(typeof require === 'undefined' ? require = J$.R(4535185, 'require', undefined, true, true) : require = J$.R(4535185, 'require', require, true, true)), false)(J$.T(4535193, './_createAssigner', 21, false)), createAssigner, false, true);
            var merge = J$.W(4535329, 'merge', J$.F(4535321, J$.R(4535225, 'createAssigner', createAssigner, false, true), false)(J$.T(4535313, function (object, source, srcIndex) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4535273, arguments.callee, this, arguments);
                            arguments = J$.N(4535281, 'arguments', arguments, true, false, false);
                            object = J$.N(4535289, 'object', object, true, false, false);
                            source = J$.N(4535297, 'source', source, true, false, false);
                            srcIndex = J$.N(4535305, 'srcIndex', srcIndex, true, false, false);
                            J$.F(4535265, J$.R(4535233, 'baseMerge', baseMerge, false, true), false)(J$.R(4535241, 'object', object, false, false), J$.R(4535249, 'source', source, false, false), J$.R(4535257, 'srcIndex', srcIndex, false, false));
                        } catch (J$e) {
                            J$.Ex(4535393, J$e);
                        } finally {
                            if (J$.Fr(4535401))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), merge, false, true);
            J$.P(4535353, J$.I(typeof module === 'undefined' ? module = J$.R(4535337, 'module', undefined, true, true) : module = J$.R(4535337, 'module', module, true, true)), 'exports', J$.R(4535345, 'merge', merge, false, true));
        } catch (J$e) {
            J$.Ex(4535409, J$e);
        } finally {
            if (J$.Sr(4535417))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

