J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4166377, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/isInteger.js');
            function isInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4166329, arguments.callee, this, arguments);
                            arguments = J$.N(4166337, 'arguments', arguments, true, false, false);
                            value = J$.N(4166345, 'value', value, true, false, false);
                            return J$.Rt(4166321, J$.C(216704, J$.B(445506, '==', J$.U(445498, 'typeof', J$.R(4166273, 'value', value, false, false)), J$.T(4166281, 'number', 21, false))) ? J$.B(445514, '==', J$.R(4166289, 'value', value, false, false), J$.F(4166313, J$.R(4166297, 'toInteger', toInteger, false, true), false)(J$.R(4166305, 'value', value, false, false))) : J$._());
                        } catch (J$e) {
                            J$.Ex(4166409, J$e);
                        } finally {
                            if (J$.Fr(4166417))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4166385, 'toInteger', toInteger, false, false, false);
            isInteger = J$.N(4166401, 'isInteger', J$.T(4166393, isInteger, 12, false), true, false, false);
            J$.T(4166233, 'use strict', 21, false);
            var toInteger = J$.W(4166265, 'toInteger', J$.F(4166257, J$.I(typeof require === 'undefined' ? require = J$.R(4166241, 'require', undefined, true, true) : require = J$.R(4166241, 'require', require, true, true)), false)(J$.T(4166249, './toInteger', 21, false)), toInteger, false, true);
            J$.P(4166369, J$.I(typeof module === 'undefined' ? module = J$.R(4166353, 'module', undefined, true, true) : module = J$.R(4166353, 'module', module, true, true)), 'exports', J$.R(4166361, 'isInteger', isInteger, false, true));
        } catch (J$e) {
            J$.Ex(4166425, J$e);
        } finally {
            if (J$.Sr(4166433))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

