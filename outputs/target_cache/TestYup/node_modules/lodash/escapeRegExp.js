J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4048985, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/escapeRegExp.js');
            function escapeRegExp(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4048937, arguments.callee, this, arguments);
                            arguments = J$.N(4048945, 'arguments', arguments, true, false, false);
                            string = J$.N(4048953, 'string', string, true, false, false);
                            string = J$.W(4048849, 'string', J$.F(4048841, J$.R(4048825, 'toString', toString, false, true), false)(J$.R(4048833, 'string', string, false, false)), string, false, false);
                            return J$.Rt(4048929, J$.C(214944, J$.C(214936, J$.R(4048857, 'string', string, false, false)) ? J$.M(4048881, J$.R(4048865, 'reHasRegExpChar', reHasRegExpChar, false, true), 'test', false)(J$.R(4048873, 'string', string, false, false)) : J$._()) ? J$.M(4048913, J$.R(4048889, 'string', string, false, false), 'replace', false)(J$.R(4048897, 'reRegExpChar', reRegExpChar, false, true), J$.T(4048905, '\\$&', 21, false)) : J$.R(4048921, 'string', string, false, false));
                        } catch (J$e) {
                            J$.Ex(4049033, J$e);
                        } finally {
                            if (J$.Fr(4049041))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4048993, 'toString', toString, false, false, false);
            J$.N(4049001, 'reRegExpChar', reRegExpChar, false, false, false);
            J$.N(4049009, 'reHasRegExpChar', reHasRegExpChar, false, false, false);
            escapeRegExp = J$.N(4049025, 'escapeRegExp', J$.T(4049017, escapeRegExp, 12, false), true, false, false);
            J$.T(4048633, 'use strict', 21, false);
            J$.F(4048657, J$.I(typeof require === 'undefined' ? require = J$.R(4048641, 'require', undefined, true, true) : require = J$.R(4048641, 'require', require, true, true)), false)(J$.T(4048649, 'core-js/modules/es.regexp.constructor', 21, false));
            J$.F(4048681, J$.I(typeof require === 'undefined' ? require = J$.R(4048665, 'require', undefined, true, true) : require = J$.R(4048665, 'require', require, true, true)), false)(J$.T(4048673, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(4048705, J$.I(typeof require === 'undefined' ? require = J$.R(4048689, 'require', undefined, true, true) : require = J$.R(4048689, 'require', require, true, true)), false)(J$.T(4048697, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(4048729, J$.I(typeof require === 'undefined' ? require = J$.R(4048713, 'require', undefined, true, true) : require = J$.R(4048713, 'require', require, true, true)), false)(J$.T(4048721, 'core-js/modules/es.string.replace', 21, false));
            var toString = J$.W(4048761, 'toString', J$.F(4048753, J$.I(typeof require === 'undefined' ? require = J$.R(4048737, 'require', undefined, true, true) : require = J$.R(4048737, 'require', require, true, true)), false)(J$.T(4048745, './toString', 21, false)), toString, false, true);
            var reRegExpChar = J$.W(4048809, 'reRegExpChar', J$.T(4048769, /[\\^$.*+?()[\]{}|]/g, 14, false), reRegExpChar, false, true), reHasRegExpChar = J$.W(4048817, 'reHasRegExpChar', J$.F(4048801, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(4048777, 'RegExp', undefined, true, true) : RegExp = J$.R(4048777, 'RegExp', RegExp, true, true)), false)(J$.G(4048793, J$.R(4048785, 'reRegExpChar', reRegExpChar, false, true), 'source')), reHasRegExpChar, false, true);
            J$.P(4048977, J$.I(typeof module === 'undefined' ? module = J$.R(4048961, 'module', undefined, true, true) : module = J$.R(4048961, 'module', module, true, true)), 'exports', J$.R(4048969, 'escapeRegExp', escapeRegExp, false, true));
        } catch (J$e) {
            J$.Ex(4049049, J$e);
        } finally {
            if (J$.Sr(4049057))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

