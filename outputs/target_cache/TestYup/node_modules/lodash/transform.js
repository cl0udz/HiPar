J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4582337, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/transform.js');
            function transform(object, iteratee, accumulator) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4582249, arguments.callee, this, arguments);
                            arguments = J$.N(4582257, 'arguments', arguments, true, false, false);
                            object = J$.N(4582265, 'object', object, true, false, false);
                            iteratee = J$.N(4582273, 'iteratee', iteratee, true, false, false);
                            accumulator = J$.N(4582281, 'accumulator', accumulator, true, false, false);
                            J$.N(4582289, 'isArr', isArr, false, false, false);
                            J$.N(4582297, 'isArrLike', isArrLike, false, false, false);
                            J$.N(4582305, 'Ctor', Ctor, false, false, false);
                            var isArr = J$.W(4581817, 'isArr', J$.F(4581753, J$.R(4581737, 'isArray', isArray, false, true), false)(J$.R(4581745, 'object', object, false, false)), isArr, false, false), isArrLike = J$.W(4581825, 'isArrLike', J$.C(245640, J$.C(245632, J$.R(4581761, 'isArr', isArr, false, false)) ? J$._() : J$.F(4581785, J$.R(4581769, 'isBuffer', isBuffer, false, true), false)(J$.R(4581777, 'object', object, false, false))) ? J$._() : J$.F(4581809, J$.R(4581793, 'isTypedArray', isTypedArray, false, true), false)(J$.R(4581801, 'object', object, false, false)), isArrLike, false, false);
                            iteratee = J$.W(4581865, 'iteratee', J$.F(4581857, J$.R(4581833, 'baseIteratee', baseIteratee, false, true), false)(J$.R(4581841, 'iteratee', iteratee, false, false), J$.T(4581849, 4, 22, false)), iteratee, false, false);
                            if (J$.C(245688, J$.B(476730, '==', J$.R(4581873, 'accumulator', accumulator, false, false), J$.T(4581881, null, 25, false)))) {
                                var Ctor = J$.W(4581913, 'Ctor', J$.C(245648, J$.R(4581889, 'object', object, false, false)) ? J$.G(4581905, J$.R(4581897, 'object', object, false, false), 'constructor') : J$._(), Ctor, false, false);
                                if (J$.C(245680, J$.R(4581921, 'isArrLike', isArrLike, false, false))) {
                                    accumulator = J$.W(4581961, 'accumulator', J$.C(245656, J$.R(4581929, 'isArr', isArr, false, false)) ? J$.F(4581945, J$.R(4581937, 'Ctor', Ctor, false, false), true)() : J$.T(4581953, [], 10, false), accumulator, false, false);
                                } else if (J$.C(245672, J$.F(4581985, J$.R(4581969, 'isObject', isObject, false, true), false)(J$.R(4581977, 'object', object, false, false)))) {
                                    accumulator = J$.W(4582065, 'accumulator', J$.C(245664, J$.F(4582009, J$.R(4581993, 'isFunction', isFunction, false, true), false)(J$.R(4582001, 'Ctor', Ctor, false, false))) ? J$.F(4582049, J$.R(4582017, 'baseCreate', baseCreate, false, true), false)(J$.F(4582041, J$.R(4582025, 'getPrototype', getPrototype, false, true), false)(J$.R(4582033, 'object', object, false, false))) : J$.T(4582057, {}, 11, false), accumulator, false, false);
                                } else {
                                    accumulator = J$.W(4582081, 'accumulator', J$.T(4582073, {}, 11, false), accumulator, false, false);
                                }
                            }
                            J$.F(4582225, J$.C(245696, J$.R(4582089, 'isArrLike', isArrLike, false, false)) ? J$.R(4582097, 'arrayEach', arrayEach, false, true) : J$.R(4582105, 'baseForOwn', baseForOwn, false, true), false)(J$.R(4582113, 'object', object, false, false), J$.T(4582217, function (value, index, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4582177, arguments.callee, this, arguments);
                                            arguments = J$.N(4582185, 'arguments', arguments, true, false, false);
                                            value = J$.N(4582193, 'value', value, true, false, false);
                                            index = J$.N(4582201, 'index', index, true, false, false);
                                            object = J$.N(4582209, 'object', object, true, false, false);
                                            return J$.Rt(4582169, J$.F(4582161, J$.R(4582121, 'iteratee', iteratee, false, false), false)(J$.R(4582129, 'accumulator', accumulator, false, false), J$.R(4582137, 'value', value, false, false), J$.R(4582145, 'index', index, false, false), J$.R(4582153, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(4582441, J$e);
                                        } finally {
                                            if (J$.Fr(4582449))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4582241, J$.R(4582233, 'accumulator', accumulator, false, false));
                        } catch (J$e) {
                            J$.Ex(4582457, J$e);
                        } finally {
                            if (J$.Fr(4582465))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4582345, 'arrayEach', arrayEach, false, false, false);
            J$.N(4582353, 'baseCreate', baseCreate, false, false, false);
            J$.N(4582361, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(4582369, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(4582377, 'getPrototype', getPrototype, false, false, false);
            J$.N(4582385, 'isArray', isArray, false, false, false);
            J$.N(4582393, 'isBuffer', isBuffer, false, false, false);
            J$.N(4582401, 'isFunction', isFunction, false, false, false);
            J$.N(4582409, 'isObject', isObject, false, false, false);
            J$.N(4582417, 'isTypedArray', isTypedArray, false, false, false);
            transform = J$.N(4582433, 'transform', J$.T(4582425, transform, 12, false), true, false, false);
            J$.T(4581409, 'use strict', 21, false);
            var arrayEach = J$.W(4581657, 'arrayEach', J$.F(4581433, J$.I(typeof require === 'undefined' ? require = J$.R(4581417, 'require', undefined, true, true) : require = J$.R(4581417, 'require', require, true, true)), false)(J$.T(4581425, './_arrayEach', 21, false)), arrayEach, false, true), baseCreate = J$.W(4581665, 'baseCreate', J$.F(4581457, J$.I(typeof require === 'undefined' ? require = J$.R(4581441, 'require', undefined, true, true) : require = J$.R(4581441, 'require', require, true, true)), false)(J$.T(4581449, './_baseCreate', 21, false)), baseCreate, false, true), baseForOwn = J$.W(4581673, 'baseForOwn', J$.F(4581481, J$.I(typeof require === 'undefined' ? require = J$.R(4581465, 'require', undefined, true, true) : require = J$.R(4581465, 'require', require, true, true)), false)(J$.T(4581473, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(4581681, 'baseIteratee', J$.F(4581505, J$.I(typeof require === 'undefined' ? require = J$.R(4581489, 'require', undefined, true, true) : require = J$.R(4581489, 'require', require, true, true)), false)(J$.T(4581497, './_baseIteratee', 21, false)), baseIteratee, false, true), getPrototype = J$.W(4581689, 'getPrototype', J$.F(4581529, J$.I(typeof require === 'undefined' ? require = J$.R(4581513, 'require', undefined, true, true) : require = J$.R(4581513, 'require', require, true, true)), false)(J$.T(4581521, './_getPrototype', 21, false)), getPrototype, false, true), isArray = J$.W(4581697, 'isArray', J$.F(4581553, J$.I(typeof require === 'undefined' ? require = J$.R(4581537, 'require', undefined, true, true) : require = J$.R(4581537, 'require', require, true, true)), false)(J$.T(4581545, './isArray', 21, false)), isArray, false, true), isBuffer = J$.W(4581705, 'isBuffer', J$.F(4581577, J$.I(typeof require === 'undefined' ? require = J$.R(4581561, 'require', undefined, true, true) : require = J$.R(4581561, 'require', require, true, true)), false)(J$.T(4581569, './isBuffer', 21, false)), isBuffer, false, true), isFunction = J$.W(4581713, 'isFunction', J$.F(4581601, J$.I(typeof require === 'undefined' ? require = J$.R(4581585, 'require', undefined, true, true) : require = J$.R(4581585, 'require', require, true, true)), false)(J$.T(4581593, './isFunction', 21, false)), isFunction, false, true), isObject = J$.W(4581721, 'isObject', J$.F(4581625, J$.I(typeof require === 'undefined' ? require = J$.R(4581609, 'require', undefined, true, true) : require = J$.R(4581609, 'require', require, true, true)), false)(J$.T(4581617, './isObject', 21, false)), isObject, false, true), isTypedArray = J$.W(4581729, 'isTypedArray', J$.F(4581649, J$.I(typeof require === 'undefined' ? require = J$.R(4581633, 'require', undefined, true, true) : require = J$.R(4581633, 'require', require, true, true)), false)(J$.T(4581641, './isTypedArray', 21, false)), isTypedArray, false, true);
            J$.P(4582329, J$.I(typeof module === 'undefined' ? module = J$.R(4582313, 'module', undefined, true, true) : module = J$.R(4582313, 'module', module, true, true)), 'exports', J$.R(4582321, 'transform', transform, false, true));
        } catch (J$e) {
            J$.Ex(4582473, J$e);
        } finally {
            if (J$.Sr(4582481))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

