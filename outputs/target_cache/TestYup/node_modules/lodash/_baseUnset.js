J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3868993, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/_baseUnset.js');
            function baseUnset(object, path) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3868937, arguments.callee, this, arguments);
                            arguments = J$.N(3868945, 'arguments', arguments, true, false, false);
                            object = J$.N(3868953, 'object', object, true, false, false);
                            path = J$.N(3868961, 'path', path, true, false, false);
                            path = J$.W(3868817, 'path', J$.F(3868809, J$.R(3868785, 'castPath', castPath, false, true), false)(J$.R(3868793, 'path', path, false, false), J$.R(3868801, 'object', object, false, false)), path, false, false);
                            object = J$.W(3868857, 'object', J$.F(3868849, J$.R(3868825, 'parent', parent, false, true), false)(J$.R(3868833, 'object', object, false, false), J$.R(3868841, 'path', path, false, false)), object, false, false);
                            return J$.Rt(3868929, J$.C(204040, J$.B(429402, '==', J$.R(3868865, 'object', object, false, false), J$.T(3868873, null, 25, false))) ? J$._() : J$.B(429410, 'delete', J$.R(3868881, 'object', object, false, false), J$.F(3868921, J$.R(3868889, 'toKey', toKey, false, true), false)(J$.F(3868913, J$.R(3868897, 'last', last, false, true), false)(J$.R(3868905, 'path', path, false, false)))));
                        } catch (J$e) {
                            J$.Ex(3869049, J$e);
                        } finally {
                            if (J$.Fr(3869057))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3869001, 'castPath', castPath, false, false, false);
            J$.N(3869009, 'last', last, false, false, false);
            J$.N(3869017, 'parent', parent, false, false, false);
            J$.N(3869025, 'toKey', toKey, false, false, false);
            baseUnset = J$.N(3869041, 'baseUnset', J$.T(3869033, baseUnset, 12, false), true, false, false);
            J$.T(3868649, 'use strict', 21, false);
            var castPath = J$.W(3868753, 'castPath', J$.F(3868673, J$.I(typeof require === 'undefined' ? require = J$.R(3868657, 'require', undefined, true, true) : require = J$.R(3868657, 'require', require, true, true)), false)(J$.T(3868665, './_castPath', 21, false)), castPath, false, true), last = J$.W(3868761, 'last', J$.F(3868697, J$.I(typeof require === 'undefined' ? require = J$.R(3868681, 'require', undefined, true, true) : require = J$.R(3868681, 'require', require, true, true)), false)(J$.T(3868689, './last', 21, false)), last, false, true), parent = J$.W(3868769, 'parent', J$.F(3868721, J$.I(typeof require === 'undefined' ? require = J$.R(3868705, 'require', undefined, true, true) : require = J$.R(3868705, 'require', require, true, true)), false)(J$.T(3868713, './_parent', 21, false)), parent, false, true), toKey = J$.W(3868777, 'toKey', J$.F(3868745, J$.I(typeof require === 'undefined' ? require = J$.R(3868729, 'require', undefined, true, true) : require = J$.R(3868729, 'require', require, true, true)), false)(J$.T(3868737, './_toKey', 21, false)), toKey, false, true);
            J$.P(3868985, J$.I(typeof module === 'undefined' ? module = J$.R(3868969, 'module', undefined, true, true) : module = J$.R(3868969, 'module', module, true, true)), 'exports', J$.R(3868977, 'baseUnset', baseUnset, false, true));
        } catch (J$e) {
            J$.Ex(3869065, J$e);
        } finally {
            if (J$.Sr(3869073))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

