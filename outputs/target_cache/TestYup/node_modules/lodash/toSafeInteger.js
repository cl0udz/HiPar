J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4580929, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/toSafeInteger.js');
            function toSafeInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4580881, arguments.callee, this, arguments);
                            arguments = J$.N(4580889, 'arguments', arguments, true, false, false);
                            value = J$.N(4580897, 'value', value, true, false, false);
                            return J$.Rt(4580873, J$.C(245616, J$.R(4580777, 'value', value, false, false)) ? J$.F(4580833, J$.R(4580785, 'baseClamp', baseClamp, false, true), false)(J$.F(4580809, J$.R(4580793, 'toInteger', toInteger, false, true), false)(J$.R(4580801, 'value', value, false, false)), J$.U(476706, '-', J$.R(4580817, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)), J$.R(4580825, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)) : J$.C(245608, J$.B(476714, '===', J$.R(4580841, 'value', value, false, false), J$.T(4580849, 0, 22, false))) ? J$.R(4580857, 'value', value, false, false) : J$.T(4580865, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(4580977, J$e);
                        } finally {
                            if (J$.Fr(4580985))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4580937, 'baseClamp', baseClamp, false, false, false);
            J$.N(4580945, 'toInteger', toInteger, false, false, false);
            J$.N(4580953, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, false, false);
            toSafeInteger = J$.N(4580969, 'toSafeInteger', J$.T(4580961, toSafeInteger, 12, false), true, false, false);
            J$.T(4580689, 'use strict', 21, false);
            var baseClamp = J$.W(4580745, 'baseClamp', J$.F(4580713, J$.I(typeof require === 'undefined' ? require = J$.R(4580697, 'require', undefined, true, true) : require = J$.R(4580697, 'require', require, true, true)), false)(J$.T(4580705, './_baseClamp', 21, false)), baseClamp, false, true), toInteger = J$.W(4580753, 'toInteger', J$.F(4580737, J$.I(typeof require === 'undefined' ? require = J$.R(4580721, 'require', undefined, true, true) : require = J$.R(4580721, 'require', require, true, true)), false)(J$.T(4580729, './toInteger', 21, false)), toInteger, false, true);
            var MAX_SAFE_INTEGER = J$.W(4580769, 'MAX_SAFE_INTEGER', J$.T(4580761, 9007199254740991, 22, false), MAX_SAFE_INTEGER, false, true);
            J$.P(4580921, J$.I(typeof module === 'undefined' ? module = J$.R(4580905, 'module', undefined, true, true) : module = J$.R(4580905, 'module', module, true, true)), 'exports', J$.R(4580913, 'toSafeInteger', toSafeInteger, false, true));
        } catch (J$e) {
            J$.Ex(4580993, J$e);
        } finally {
            if (J$.Sr(4581001))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

