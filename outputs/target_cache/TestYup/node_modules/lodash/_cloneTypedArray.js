J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3876465, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/_cloneTypedArray.js');
            function cloneTypedArray(typedArray, isDeep) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3876401, arguments.callee, this, arguments);
                            arguments = J$.N(3876409, 'arguments', arguments, true, false, false);
                            typedArray = J$.N(3876417, 'typedArray', typedArray, true, false, false);
                            isDeep = J$.N(3876425, 'isDeep', isDeep, true, false, false);
                            J$.N(3876433, 'buffer', buffer, false, false, false);
                            var buffer = J$.W(3876329, 'buffer', J$.C(204472, J$.R(3876273, 'isDeep', isDeep, false, false)) ? J$.F(3876305, J$.R(3876281, 'cloneArrayBuffer', cloneArrayBuffer, false, true), false)(J$.G(3876297, J$.R(3876289, 'typedArray', typedArray, false, false), 'buffer')) : J$.G(3876321, J$.R(3876313, 'typedArray', typedArray, false, false), 'buffer'), buffer, false, false);
                            return J$.Rt(3876393, J$.M(3876385, J$.R(3876337, 'typedArray', typedArray, false, false), 'constructor', true)(J$.R(3876345, 'buffer', buffer, false, false), J$.G(3876361, J$.R(3876353, 'typedArray', typedArray, false, false), 'byteOffset'), J$.G(3876377, J$.R(3876369, 'typedArray', typedArray, false, false), 'length')));
                        } catch (J$e) {
                            J$.Ex(3876497, J$e);
                        } finally {
                            if (J$.Fr(3876505))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3876473, 'cloneArrayBuffer', cloneArrayBuffer, false, false, false);
            cloneTypedArray = J$.N(3876489, 'cloneTypedArray', J$.T(3876481, cloneTypedArray, 12, false), true, false, false);
            J$.T(3876233, 'use strict', 21, false);
            var cloneArrayBuffer = J$.W(3876265, 'cloneArrayBuffer', J$.F(3876257, J$.I(typeof require === 'undefined' ? require = J$.R(3876241, 'require', undefined, true, true) : require = J$.R(3876241, 'require', require, true, true)), false)(J$.T(3876249, './_cloneArrayBuffer', 21, false)), cloneArrayBuffer, false, true);
            J$.P(3876457, J$.I(typeof module === 'undefined' ? module = J$.R(3876441, 'module', undefined, true, true) : module = J$.R(3876441, 'module', module, true, true)), 'exports', J$.R(3876449, 'cloneTypedArray', cloneTypedArray, false, true));
        } catch (J$e) {
            J$.Ex(3876513, J$e);
        } finally {
            if (J$.Sr(3876521))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

