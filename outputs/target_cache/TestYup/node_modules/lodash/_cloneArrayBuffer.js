J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3874041, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/_cloneArrayBuffer.js');
            function cloneArrayBuffer(arrayBuffer) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3873985, arguments.callee, this, arguments);
                            arguments = J$.N(3873993, 'arguments', arguments, true, false, false);
                            arrayBuffer = J$.N(3874001, 'arrayBuffer', arrayBuffer, true, false, false);
                            J$.N(3874009, 'result', result, false, false, false);
                            var result = J$.W(3873905, 'result', J$.M(3873897, J$.R(3873873, 'arrayBuffer', arrayBuffer, false, false), 'constructor', true)(J$.G(3873889, J$.R(3873881, 'arrayBuffer', arrayBuffer, false, false), 'byteLength')), result, false, false);
                            J$.M(3873961, J$.F(3873929, J$.R(3873913, 'Uint8Array', Uint8Array, false, true), true)(J$.R(3873921, 'result', result, false, false)), 'set', false)(J$.F(3873953, J$.R(3873937, 'Uint8Array', Uint8Array, false, true), true)(J$.R(3873945, 'arrayBuffer', arrayBuffer, false, false)));
                            return J$.Rt(3873977, J$.R(3873969, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(3874073, J$e);
                        } finally {
                            if (J$.Fr(3874081))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3874049, 'Uint8Array', Uint8Array, false, false, false);
            cloneArrayBuffer = J$.N(3874065, 'cloneArrayBuffer', J$.T(3874057, cloneArrayBuffer, 12, false), true, false, false);
            J$.T(3873833, 'use strict', 21, false);
            var Uint8Array = J$.W(3873865, 'Uint8Array', J$.F(3873857, J$.I(typeof require === 'undefined' ? require = J$.R(3873841, 'require', undefined, true, true) : require = J$.R(3873841, 'require', require, true, true)), false)(J$.T(3873849, './_Uint8Array', 21, false)), Uint8Array, false, true);
            J$.P(3874033, J$.I(typeof module === 'undefined' ? module = J$.R(3874017, 'module', undefined, true, true) : module = J$.R(3874017, 'module', module, true, true)), 'exports', J$.R(3874025, 'cloneArrayBuffer', cloneArrayBuffer, false, true));
        } catch (J$e) {
            J$.Ex(3874089, J$e);
        } finally {
            if (J$.Sr(3874097))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

