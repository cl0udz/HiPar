J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3811265, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/_Stack.js');
            function Stack(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3811041, arguments.callee, this, arguments);
                            arguments = J$.N(3811049, 'arguments', arguments, true, false, false);
                            entries = J$.N(3811057, 'entries', entries, true, false, false);
                            J$.N(3811065, 'data', data, false, false, false);
                            var data = J$.W(3811001, 'data', J$.P(3810993, J$.R(3810961, 'this', this, false, false), '__data__', J$.F(3810985, J$.R(3810969, 'ListCache', ListCache, false, true), true)(J$.R(3810977, 'entries', entries, false, false))), data, false, false);
                            J$.P(3811033, J$.R(3811009, 'this', this, false, false), 'size', J$.G(3811025, J$.R(3811017, 'data', data, false, false), 'size'));
                        } catch (J$e) {
                            J$.Ex(3811337, J$e);
                        } finally {
                            if (J$.Fr(3811345))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3811273, 'ListCache', ListCache, false, false, false);
            J$.N(3811281, 'stackClear', stackClear, false, false, false);
            J$.N(3811289, 'stackDelete', stackDelete, false, false, false);
            J$.N(3811297, 'stackGet', stackGet, false, false, false);
            J$.N(3811305, 'stackHas', stackHas, false, false, false);
            J$.N(3811313, 'stackSet', stackSet, false, false, false);
            Stack = J$.N(3811329, 'Stack', J$.T(3811321, Stack, 12, false), true, false, false);
            J$.T(3810761, 'use strict', 21, false);
            var ListCache = J$.W(3810913, 'ListCache', J$.F(3810785, J$.I(typeof require === 'undefined' ? require = J$.R(3810769, 'require', undefined, true, true) : require = J$.R(3810769, 'require', require, true, true)), false)(J$.T(3810777, './_ListCache', 21, false)), ListCache, false, true), stackClear = J$.W(3810921, 'stackClear', J$.F(3810809, J$.I(typeof require === 'undefined' ? require = J$.R(3810793, 'require', undefined, true, true) : require = J$.R(3810793, 'require', require, true, true)), false)(J$.T(3810801, './_stackClear', 21, false)), stackClear, false, true), stackDelete = J$.W(3810929, 'stackDelete', J$.F(3810833, J$.I(typeof require === 'undefined' ? require = J$.R(3810817, 'require', undefined, true, true) : require = J$.R(3810817, 'require', require, true, true)), false)(J$.T(3810825, './_stackDelete', 21, false)), stackDelete, false, true), stackGet = J$.W(3810937, 'stackGet', J$.F(3810857, J$.I(typeof require === 'undefined' ? require = J$.R(3810841, 'require', undefined, true, true) : require = J$.R(3810841, 'require', require, true, true)), false)(J$.T(3810849, './_stackGet', 21, false)), stackGet, false, true), stackHas = J$.W(3810945, 'stackHas', J$.F(3810881, J$.I(typeof require === 'undefined' ? require = J$.R(3810865, 'require', undefined, true, true) : require = J$.R(3810865, 'require', require, true, true)), false)(J$.T(3810873, './_stackHas', 21, false)), stackHas, false, true), stackSet = J$.W(3810953, 'stackSet', J$.F(3810905, J$.I(typeof require === 'undefined' ? require = J$.R(3810889, 'require', undefined, true, true) : require = J$.R(3810889, 'require', require, true, true)), false)(J$.T(3810897, './_stackSet', 21, false)), stackSet, false, true);
            J$.P(3811097, J$.G(3811081, J$.R(3811073, 'Stack', Stack, false, true), 'prototype'), 'clear', J$.R(3811089, 'stackClear', stackClear, false, true));
            J$.P(3811137, J$.G(3811113, J$.R(3811105, 'Stack', Stack, false, true), 'prototype'), J$.T(3811121, 'delete', 21, false), J$.R(3811129, 'stackDelete', stackDelete, false, true));
            J$.P(3811169, J$.G(3811153, J$.R(3811145, 'Stack', Stack, false, true), 'prototype'), 'get', J$.R(3811161, 'stackGet', stackGet, false, true));
            J$.P(3811201, J$.G(3811185, J$.R(3811177, 'Stack', Stack, false, true), 'prototype'), 'has', J$.R(3811193, 'stackHas', stackHas, false, true));
            J$.P(3811233, J$.G(3811217, J$.R(3811209, 'Stack', Stack, false, true), 'prototype'), 'set', J$.R(3811225, 'stackSet', stackSet, false, true));
            J$.P(3811257, J$.I(typeof module === 'undefined' ? module = J$.R(3811241, 'module', undefined, true, true) : module = J$.R(3811241, 'module', module, true, true)), 'exports', J$.R(3811249, 'Stack', Stack, false, true));
        } catch (J$e) {
            J$.Ex(3811353, J$e);
        } finally {
            if (J$.Sr(3811361))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

