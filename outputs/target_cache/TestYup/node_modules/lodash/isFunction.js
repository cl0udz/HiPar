J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4166129, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/isFunction.js');
            function isFunction(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4166073, arguments.callee, this, arguments);
                            arguments = J$.N(4166081, 'arguments', arguments, true, false, false);
                            value = J$.N(4166089, 'value', value, true, false, false);
                            J$.N(4166097, 'tag', tag, false, false, false);
                            if (J$.C(216672, J$.U(445458, '!', J$.F(4165945, J$.R(4165929, 'isObject', isObject, false, true), false)(J$.R(4165937, 'value', value, false, false))))) {
                                return J$.Rt(4165961, J$.T(4165953, false, 23, false));
                            }
                            var tag = J$.W(4165993, 'tag', J$.F(4165985, J$.R(4165969, 'baseGetTag', baseGetTag, false, true), false)(J$.R(4165977, 'value', value, false, false)), tag, false, false);
                            return J$.Rt(4166065, J$.C(216696, J$.C(216688, J$.C(216680, J$.B(445466, '==', J$.R(4166001, 'tag', tag, false, false), J$.R(4166009, 'funcTag', funcTag, false, true))) ? J$._() : J$.B(445474, '==', J$.R(4166017, 'tag', tag, false, false), J$.R(4166025, 'genTag', genTag, false, true))) ? J$._() : J$.B(445482, '==', J$.R(4166033, 'tag', tag, false, false), J$.R(4166041, 'asyncTag', asyncTag, false, true))) ? J$._() : J$.B(445490, '==', J$.R(4166049, 'tag', tag, false, false), J$.R(4166057, 'proxyTag', proxyTag, false, true)));
                        } catch (J$e) {
                            J$.Ex(4166201, J$e);
                        } finally {
                            if (J$.Fr(4166209))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4166137, 'baseGetTag', baseGetTag, false, false, false);
            J$.N(4166145, 'isObject', isObject, false, false, false);
            J$.N(4166153, 'asyncTag', asyncTag, false, false, false);
            J$.N(4166161, 'funcTag', funcTag, false, false, false);
            J$.N(4166169, 'genTag', genTag, false, false, false);
            J$.N(4166177, 'proxyTag', proxyTag, false, false, false);
            isFunction = J$.N(4166193, 'isFunction', J$.T(4166185, isFunction, 12, false), true, false, false);
            J$.T(4165793, 'use strict', 21, false);
            var baseGetTag = J$.W(4165849, 'baseGetTag', J$.F(4165817, J$.I(typeof require === 'undefined' ? require = J$.R(4165801, 'require', undefined, true, true) : require = J$.R(4165801, 'require', require, true, true)), false)(J$.T(4165809, './_baseGetTag', 21, false)), baseGetTag, false, true), isObject = J$.W(4165857, 'isObject', J$.F(4165841, J$.I(typeof require === 'undefined' ? require = J$.R(4165825, 'require', undefined, true, true) : require = J$.R(4165825, 'require', require, true, true)), false)(J$.T(4165833, './isObject', 21, false)), isObject, false, true);
            var asyncTag = J$.W(4165897, 'asyncTag', J$.T(4165865, '[object AsyncFunction]', 21, false), asyncTag, false, true), funcTag = J$.W(4165905, 'funcTag', J$.T(4165873, '[object Function]', 21, false), funcTag, false, true), genTag = J$.W(4165913, 'genTag', J$.T(4165881, '[object GeneratorFunction]', 21, false), genTag, false, true), proxyTag = J$.W(4165921, 'proxyTag', J$.T(4165889, '[object Proxy]', 21, false), proxyTag, false, true);
            J$.P(4166121, J$.I(typeof module === 'undefined' ? module = J$.R(4166105, 'module', undefined, true, true) : module = J$.R(4166105, 'module', module, true, true)), 'exports', J$.R(4166113, 'isFunction', isFunction, false, true));
        } catch (J$e) {
            J$.Ex(4166217, J$e);
        } finally {
            if (J$.Sr(4166225))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

