J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3872697, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/lodash/_castPath.js');
            function castPath(value, object) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3872641, arguments.callee, this, arguments);
                            arguments = J$.N(3872649, 'arguments', arguments, true, false, false);
                            value = J$.N(3872657, 'value', value, true, false, false);
                            object = J$.N(3872665, 'object', object, true, false, false);
                            if (J$.C(204208, J$.F(3872521, J$.R(3872505, 'isArray', isArray, false, true), false)(J$.R(3872513, 'value', value, false, false)))) {
                                return J$.Rt(3872537, J$.R(3872529, 'value', value, false, false));
                            }
                            return J$.Rt(3872633, J$.C(204216, J$.F(3872569, J$.R(3872545, 'isKey', isKey, false, true), false)(J$.R(3872553, 'value', value, false, false), J$.R(3872561, 'object', object, false, false))) ? J$.T(3872585, [J$.R(3872577, 'value', value, false, false)], 10, false) : J$.F(3872625, J$.R(3872593, 'stringToPath', stringToPath, false, true), false)(J$.F(3872617, J$.R(3872601, 'toString', toString, false, true), false)(J$.R(3872609, 'value', value, false, false))));
                        } catch (J$e) {
                            J$.Ex(3872753, J$e);
                        } finally {
                            if (J$.Fr(3872761))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3872705, 'isArray', isArray, false, false, false);
            J$.N(3872713, 'isKey', isKey, false, false, false);
            J$.N(3872721, 'stringToPath', stringToPath, false, false, false);
            J$.N(3872729, 'toString', toString, false, false, false);
            castPath = J$.N(3872745, 'castPath', J$.T(3872737, castPath, 12, false), true, false, false);
            J$.T(3872369, 'use strict', 21, false);
            var isArray = J$.W(3872473, 'isArray', J$.F(3872393, J$.I(typeof require === 'undefined' ? require = J$.R(3872377, 'require', undefined, true, true) : require = J$.R(3872377, 'require', require, true, true)), false)(J$.T(3872385, './isArray', 21, false)), isArray, false, true), isKey = J$.W(3872481, 'isKey', J$.F(3872417, J$.I(typeof require === 'undefined' ? require = J$.R(3872401, 'require', undefined, true, true) : require = J$.R(3872401, 'require', require, true, true)), false)(J$.T(3872409, './_isKey', 21, false)), isKey, false, true), stringToPath = J$.W(3872489, 'stringToPath', J$.F(3872441, J$.I(typeof require === 'undefined' ? require = J$.R(3872425, 'require', undefined, true, true) : require = J$.R(3872425, 'require', require, true, true)), false)(J$.T(3872433, './_stringToPath', 21, false)), stringToPath, false, true), toString = J$.W(3872497, 'toString', J$.F(3872465, J$.I(typeof require === 'undefined' ? require = J$.R(3872449, 'require', undefined, true, true) : require = J$.R(3872449, 'require', require, true, true)), false)(J$.T(3872457, './toString', 21, false)), toString, false, true);
            J$.P(3872689, J$.I(typeof module === 'undefined' ? module = J$.R(3872673, 'module', undefined, true, true) : module = J$.R(3872673, 'module', module, true, true)), 'exports', J$.R(3872681, 'castPath', castPath, false, true));
        } catch (J$e) {
            J$.Ex(3872769, J$e);
        } finally {
            if (J$.Sr(3872777))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

