J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3791857, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/@babel/runtime/helpers/nonIterableRest.js');
            function _nonIterableRest() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3791817, arguments.callee, this, arguments);
                            arguments = J$.N(3791825, 'arguments', arguments, true, false, false);
                            throw J$.F(3791809, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3791793, 'TypeError', undefined, true, true) : TypeError = J$.R(3791793, 'TypeError', TypeError, true, true)), true)(J$.T(3791801, 'Invalid attempt to destructure non-iterable instance', 21, false));
                        } catch (J$e) {
                            J$.Ex(3791881, J$e);
                        } finally {
                            if (J$.Fr(3791889))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _nonIterableRest = J$.N(3791873, '_nonIterableRest', J$.T(3791865, _nonIterableRest, 12, false), true, false, false);
            J$.T(3791785, 'use strict', 21, false);
            J$.P(3791849, J$.I(typeof module === 'undefined' ? module = J$.R(3791833, 'module', undefined, true, true) : module = J$.R(3791833, 'module', module, true, true)), 'exports', J$.R(3791841, '_nonIterableRest', _nonIterableRest, false, true));
        } catch (J$e) {
            J$.Ex(3791897, J$e);
        } finally {
            if (J$.Sr(3791905))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

