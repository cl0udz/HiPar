J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3718977, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/@babel/runtime/helpers/classStaticPrivateMethodSet.js');
            function _classStaticPrivateMethodSet() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3718937, arguments.callee, this, arguments);
                            arguments = J$.N(3718945, 'arguments', arguments, true, false, false);
                            throw J$.F(3718929, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3718913, 'TypeError', undefined, true, true) : TypeError = J$.R(3718913, 'TypeError', TypeError, true, true)), true)(J$.T(3718921, 'attempted to set read only static private field', 21, false));
                        } catch (J$e) {
                            J$.Ex(3719001, J$e);
                        } finally {
                            if (J$.Fr(3719009))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _classStaticPrivateMethodSet = J$.N(3718993, '_classStaticPrivateMethodSet', J$.T(3718985, _classStaticPrivateMethodSet, 12, false), true, false, false);
            J$.T(3718905, 'use strict', 21, false);
            J$.P(3718969, J$.I(typeof module === 'undefined' ? module = J$.R(3718953, 'module', undefined, true, true) : module = J$.R(3718953, 'module', module, true, true)), 'exports', J$.R(3718961, '_classStaticPrivateMethodSet', _classStaticPrivateMethodSet, false, true));
        } catch (J$e) {
            J$.Ex(3719017, J$e);
        } finally {
            if (J$.Sr(3719025))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

