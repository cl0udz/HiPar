J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3713081, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/@babel/runtime/helpers/assertThisInitialized.js');
            function _assertThisInitialized(self) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3713033, arguments.callee, this, arguments);
                            arguments = J$.N(3713041, 'arguments', arguments, true, false, false);
                            self = J$.N(3713049, 'self', self, true, false, false);
                            if (J$.C(195832, J$.B(420314, '===', J$.R(3712977, 'self', self, false, false), void J$.T(3712985, 0, 22, false)))) {
                                throw J$.F(3713009, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(3712993, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(3712993, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(3713001, 'this hasn\'t been initialised - super() hasn\'t been called', 21, false));
                            }
                            return J$.Rt(3713025, J$.R(3713017, 'self', self, false, false));
                        } catch (J$e) {
                            J$.Ex(3713105, J$e);
                        } finally {
                            if (J$.Fr(3713113))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _assertThisInitialized = J$.N(3713097, '_assertThisInitialized', J$.T(3713089, _assertThisInitialized, 12, false), true, false, false);
            J$.T(3712969, 'use strict', 21, false);
            J$.P(3713073, J$.I(typeof module === 'undefined' ? module = J$.R(3713057, 'module', undefined, true, true) : module = J$.R(3713057, 'module', module, true, true)), 'exports', J$.R(3713065, '_assertThisInitialized', _assertThisInitialized, false, true));
        } catch (J$e) {
            J$.Ex(3713121, J$e);
        } finally {
            if (J$.Sr(3713129))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

