J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3797401, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/@babel/runtime/helpers/skipFirstGeneratorNext.js');
            function _skipFirstGeneratorNext(fn) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3797353, arguments.callee, this, arguments);
                            arguments = J$.N(3797361, 'arguments', arguments, true, false, false);
                            fn = J$.N(3797369, 'fn', fn, true, false, false);
                            return J$.Rt(3797345, J$.T(3797337, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3797313, arguments.callee, this, arguments);
                                            arguments = J$.N(3797321, 'arguments', arguments, true, false, false);
                                            J$.N(3797329, 'it', it, false, false, false);
                                            var it = J$.W(3797273, 'it', J$.M(3797265, J$.R(3797241, 'fn', fn, false, false), 'apply', false)(J$.R(3797249, 'this', this, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(3797257, 'arguments', undefined, true, true) : arguments = J$.R(3797257, 'arguments', arguments, true, true))), it, false, false);
                                            J$.M(3797289, J$.R(3797281, 'it', it, false, false), 'next', false)();
                                            return J$.Rt(3797305, J$.R(3797297, 'it', it, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3797425, J$e);
                                        } finally {
                                            if (J$.Fr(3797433))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(3797441, J$e);
                        } finally {
                            if (J$.Fr(3797449))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _skipFirstGeneratorNext = J$.N(3797417, '_skipFirstGeneratorNext', J$.T(3797409, _skipFirstGeneratorNext, 12, false), true, false, false);
            J$.T(3797233, 'use strict', 21, false);
            J$.P(3797393, J$.I(typeof module === 'undefined' ? module = J$.R(3797377, 'module', undefined, true, true) : module = J$.R(3797377, 'module', module, true, true)), 'exports', J$.R(3797385, '_skipFirstGeneratorNext', _skipFirstGeneratorNext, false, true));
        } catch (J$e) {
            J$.Ex(3797457, J$e);
        } finally {
            if (J$.Sr(3797465))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

