J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3795753, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/@babel/runtime/helpers/readOnlyError.js');
            function _readOnlyError(name) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3795705, arguments.callee, this, arguments);
                            arguments = J$.N(3795713, 'arguments', arguments, true, false, false);
                            name = J$.N(3795721, 'name', name, true, false, false);
                            throw J$.F(3795697, J$.I(typeof Error === 'undefined' ? Error = J$.R(3795665, 'Error', undefined, true, true) : Error = J$.R(3795665, 'Error', Error, true, true)), true)(J$.B(424986, '+', J$.B(424978, '+', J$.T(3795673, '"', 21, false), J$.R(3795681, 'name', name, false, false)), J$.T(3795689, '" is read-only', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3795777, J$e);
                        } finally {
                            if (J$.Fr(3795785))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _readOnlyError = J$.N(3795769, '_readOnlyError', J$.T(3795761, _readOnlyError, 12, false), true, false, false);
            J$.T(3795657, 'use strict', 21, false);
            J$.P(3795745, J$.I(typeof module === 'undefined' ? module = J$.R(3795729, 'module', undefined, true, true) : module = J$.R(3795729, 'module', module, true, true)), 'exports', J$.R(3795737, '_readOnlyError', _readOnlyError, false, true));
        } catch (J$e) {
            J$.Ex(3795793, J$e);
        } finally {
            if (J$.Sr(3795801))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

