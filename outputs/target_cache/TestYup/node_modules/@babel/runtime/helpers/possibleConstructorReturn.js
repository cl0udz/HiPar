J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3795585, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js');
            function _possibleConstructorReturn(self, call) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3795529, arguments.callee, this, arguments);
                            arguments = J$.N(3795537, 'arguments', arguments, true, false, false);
                            self = J$.N(3795545, 'self', self, true, false, false);
                            call = J$.N(3795553, 'call', call, true, false, false);
                            if (J$.C(200160, J$.C(200152, J$.R(3795425, 'call', call, false, false)) ? J$.C(200144, J$.B(424954, '===', J$.F(3795449, J$.R(3795433, '_typeof', _typeof, false, true), false)(J$.R(3795441, 'call', call, false, false)), J$.T(3795457, 'object', 21, false))) ? J$._() : J$.B(424970, '===', J$.U(424962, 'typeof', J$.R(3795465, 'call', call, false, false)), J$.T(3795473, 'function', 21, false)) : J$._())) {
                                return J$.Rt(3795489, J$.R(3795481, 'call', call, false, false));
                            }
                            return J$.Rt(3795521, J$.F(3795513, J$.R(3795497, 'assertThisInitialized', assertThisInitialized, false, true), false)(J$.R(3795505, 'self', self, false, false)));
                        } catch (J$e) {
                            J$.Ex(3795625, J$e);
                        } finally {
                            if (J$.Fr(3795633))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3795593, '_typeof', _typeof, false, false, false);
            J$.N(3795601, 'assertThisInitialized', assertThisInitialized, false, false, false);
            _possibleConstructorReturn = J$.N(3795617, '_possibleConstructorReturn', J$.T(3795609, _possibleConstructorReturn, 12, false), true, false, false);
            J$.T(3795353, 'use strict', 21, false);
            var _typeof = J$.W(3795385, '_typeof', J$.F(3795377, J$.I(typeof require === 'undefined' ? require = J$.R(3795361, 'require', undefined, true, true) : require = J$.R(3795361, 'require', require, true, true)), false)(J$.T(3795369, '../helpers/typeof', 21, false)), _typeof, false, true);
            var assertThisInitialized = J$.W(3795417, 'assertThisInitialized', J$.F(3795409, J$.I(typeof require === 'undefined' ? require = J$.R(3795393, 'require', undefined, true, true) : require = J$.R(3795393, 'require', require, true, true)), false)(J$.T(3795401, './assertThisInitialized', 21, false)), assertThisInitialized, false, true);
            J$.P(3795577, J$.I(typeof module === 'undefined' ? module = J$.R(3795561, 'module', undefined, true, true) : module = J$.R(3795561, 'module', module, true, true)), 'exports', J$.R(3795569, '_possibleConstructorReturn', _possibleConstructorReturn, false, true));
        } catch (J$e) {
            J$.Ex(3795641, J$e);
        } finally {
            if (J$.Sr(3795649))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

