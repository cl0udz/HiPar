J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3717785, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/@babel/runtime/helpers/classPrivateFieldSet.js');
            function _classPrivateFieldSet(receiver, privateMap, value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3717713, arguments.callee, this, arguments);
                            arguments = J$.N(3717721, 'arguments', arguments, true, false, false);
                            receiver = J$.N(3717729, 'receiver', receiver, true, false, false);
                            privateMap = J$.N(3717737, 'privateMap', privateMap, true, false, false);
                            value = J$.N(3717745, 'value', value, true, false, false);
                            J$.N(3717753, 'descriptor', descriptor, false, false, false);
                            var descriptor = J$.W(3717537, 'descriptor', J$.M(3717529, J$.R(3717513, 'privateMap', privateMap, false, false), 'get', false)(J$.R(3717521, 'receiver', receiver, false, false)), descriptor, false, false);
                            if (J$.C(196008, J$.U(420530, '!', J$.R(3717545, 'descriptor', descriptor, false, false)))) {
                                throw J$.F(3717569, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3717553, 'TypeError', undefined, true, true) : TypeError = J$.R(3717553, 'TypeError', TypeError, true, true)), true)(J$.T(3717561, 'attempted to set private field on non-instance', 21, false));
                            }
                            if (J$.C(196024, J$.G(3717585, J$.R(3717577, 'descriptor', descriptor, false, false), 'set'))) {
                                J$.M(3717625, J$.G(3717601, J$.R(3717593, 'descriptor', descriptor, false, false), 'set'), 'call', false)(J$.R(3717609, 'receiver', receiver, false, false), J$.R(3717617, 'value', value, false, false));
                            } else {
                                if (J$.C(196016, J$.U(420538, '!', J$.G(3717641, J$.R(3717633, 'descriptor', descriptor, false, false), 'writable')))) {
                                    throw J$.F(3717665, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3717649, 'TypeError', undefined, true, true) : TypeError = J$.R(3717649, 'TypeError', TypeError, true, true)), true)(J$.T(3717657, 'attempted to set read only private field', 21, false));
                                }
                                J$.P(3717689, J$.R(3717673, 'descriptor', descriptor, false, false), 'value', J$.R(3717681, 'value', value, false, false));
                            }
                            return J$.Rt(3717705, J$.R(3717697, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(3717809, J$e);
                        } finally {
                            if (J$.Fr(3717817))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _classPrivateFieldSet = J$.N(3717801, '_classPrivateFieldSet', J$.T(3717793, _classPrivateFieldSet, 12, false), true, false, false);
            J$.T(3717505, 'use strict', 21, false);
            J$.P(3717777, J$.I(typeof module === 'undefined' ? module = J$.R(3717761, 'module', undefined, true, true) : module = J$.R(3717761, 'module', module, true, true)), 'exports', J$.R(3717769, '_classPrivateFieldSet', _classPrivateFieldSet, false, true));
        } catch (J$e) {
            J$.Ex(3717825, J$e);
        } finally {
            if (J$.Sr(3717833))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

