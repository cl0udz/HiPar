J$.noInstrEval = false;
jalangiLabel20:
    while (true) {
        try {
            J$.Se(4687809, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestYup/node_modules/toposort/test.js');
            J$.N(4687817, 'vows', vows, false, false, false);
            J$.N(4687825, 'toposort', toposort, false, false, false);
            J$.N(4687833, 'assert', assert, false, false, false);
            J$.N(4687841, 'suite', suite, false, false, false);
            J$.T(4684177, 'use strict', 21, false);
            J$.F(4684201, J$.I(typeof require === 'undefined' ? require = J$.R(4684185, 'require', undefined, true, true) : require = J$.R(4684185, 'require', require, true, true)), false)(J$.T(4684193, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(4684225, J$.I(typeof require === 'undefined' ? require = J$.R(4684209, 'require', undefined, true, true) : require = J$.R(4684209, 'require', require, true, true)), false)(J$.T(4684217, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(4684249, J$.I(typeof require === 'undefined' ? require = J$.R(4684233, 'require', undefined, true, true) : require = J$.R(4684233, 'require', require, true, true)), false)(J$.T(4684241, 'core-js/modules/es.array.splice', 21, false));
            J$.F(4684273, J$.I(typeof require === 'undefined' ? require = J$.R(4684257, 'require', undefined, true, true) : require = J$.R(4684257, 'require', require, true, true)), false)(J$.T(4684265, 'core-js/modules/es.date.to-string', 21, false));
            var vows = J$.W(4684353, 'vows', J$.F(4684297, J$.I(typeof require === 'undefined' ? require = J$.R(4684281, 'require', undefined, true, true) : require = J$.R(4684281, 'require', require, true, true)), false)(J$.T(4684289, 'vows', 21, false)), vows, false, true), toposort = J$.W(4684361, 'toposort', J$.F(4684321, J$.I(typeof require === 'undefined' ? require = J$.R(4684305, 'require', undefined, true, true) : require = J$.R(4684305, 'require', require, true, true)), false)(J$.T(4684313, './index', 21, false)), toposort, false, true), assert = J$.W(4684369, 'assert', J$.F(4684345, J$.I(typeof require === 'undefined' ? require = J$.R(4684329, 'require', undefined, true, true) : require = J$.R(4684329, 'require', require, true, true)), false)(J$.T(4684337, 'assert', 21, false)), assert, false, true);
            var suite = J$.W(4684401, 'suite', J$.M(4684393, J$.R(4684377, 'vows', vows, false, true), 'describe', false)(J$.T(4684385, 'toposort', 21, false)), suite, false, true);
            J$.M(4687801, J$.M(4687657, J$.R(4684409, 'suite', suite, false, true), 'addBatch', false)(J$.T(4687649, {
                'acyclic graphs': J$.T(4685217, {
                    topic: J$.T(4684585, function topic() {
                        jalangiLabel0:
                            while (true) {
                                try {
                                    J$.Fe(4684569, arguments.callee, this, arguments);
                                    arguments = J$.N(4684577, 'arguments', arguments, true, false, false);
                                    return J$.Rt(4684561, J$.F(4684553, J$.R(4684417, 'toposort', toposort, false, true), false)(J$.T(4684545, [
                                        J$.T(4684441, [
                                            J$.T(4684425, '3', 21, false),
                                            J$.T(4684433, '2', 21, false)
                                        ], 10, false),
                                        J$.T(4684465, [
                                            J$.T(4684449, '2', 21, false),
                                            J$.T(4684457, '1', 21, false)
                                        ], 10, false),
                                        J$.T(4684489, [
                                            J$.T(4684473, '6', 21, false),
                                            J$.T(4684481, '5', 21, false)
                                        ], 10, false),
                                        J$.T(4684513, [
                                            J$.T(4684497, '5', 21, false),
                                            J$.T(4684505, '2', 21, false)
                                        ], 10, false),
                                        J$.T(4684537, [
                                            J$.T(4684521, '5', 21, false),
                                            J$.T(4684529, '4', 21, false)
                                        ], 10, false)
                                    ], 10, false)));
                                } catch (J$e) {
                                    J$.Ex(4687849, J$e);
                                } finally {
                                    if (J$.Fr(4687857))
                                        continue jalangiLabel0;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    'should be sorted correctly': J$.T(4685209, function shouldBeSortedCorrectly(er, result) {
                        jalangiLabel2:
                            while (true) {
                                try {
                                    J$.Fe(4685161, arguments.callee, this, arguments);
                                    arguments = J$.N(4685169, 'arguments', arguments, true, false, false);
                                    er = J$.N(4685177, 'er', er, true, false, false);
                                    result = J$.N(4685185, 'result', result, true, false, false);
                                    J$.N(4685193, 'failed', failed, false, false, false);
                                    J$.N(4685201, 'passed', passed, false, false, false);
                                    J$.M(4684617, J$.R(4684593, 'assert', assert, false, true), 'instanceOf', false)(J$.R(4684601, 'result', result, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(4684609, 'Array', undefined, true, true) : Array = J$.R(4684609, 'Array', Array, true, true)));
                                    var failed = J$.W(4684633, 'failed', J$.T(4684625, [], 10, false), failed, false, false), passed;
                                    J$.M(4685097, J$.T(4684977, [
                                        J$.T(4684689, [
                                            J$.T(4684641, '3', 21, false),
                                            J$.T(4684649, '6', 21, false),
                                            J$.T(4684657, '5', 21, false),
                                            J$.T(4684665, '2', 21, false),
                                            J$.T(4684673, '1', 21, false),
                                            J$.T(4684681, '4', 21, false)
                                        ], 10, false),
                                        J$.T(4684745, [
                                            J$.T(4684697, '3', 21, false),
                                            J$.T(4684705, '6', 21, false),
                                            J$.T(4684713, '5', 21, false),
                                            J$.T(4684721, '2', 21, false),
                                            J$.T(4684729, '4', 21, false),
                                            J$.T(4684737, '1', 21, false)
                                        ], 10, false),
                                        J$.T(4684801, [
                                            J$.T(4684753, '6', 21, false),
                                            J$.T(4684761, '3', 21, false),
                                            J$.T(4684769, '5', 21, false),
                                            J$.T(4684777, '2', 21, false),
                                            J$.T(4684785, '1', 21, false),
                                            J$.T(4684793, '4', 21, false)
                                        ], 10, false),
                                        J$.T(4684857, [
                                            J$.T(4684809, '6', 21, false),
                                            J$.T(4684817, '5', 21, false),
                                            J$.T(4684825, '3', 21, false),
                                            J$.T(4684833, '2', 21, false),
                                            J$.T(4684841, '1', 21, false),
                                            J$.T(4684849, '4', 21, false)
                                        ], 10, false),
                                        J$.T(4684913, [
                                            J$.T(4684865, '6', 21, false),
                                            J$.T(4684873, '5', 21, false),
                                            J$.T(4684881, '3', 21, false),
                                            J$.T(4684889, '2', 21, false),
                                            J$.T(4684897, '4', 21, false),
                                            J$.T(4684905, '1', 21, false)
                                        ], 10, false),
                                        J$.T(4684969, [
                                            J$.T(4684921, '6', 21, false),
                                            J$.T(4684929, '5', 21, false),
                                            J$.T(4684937, '4', 21, false),
                                            J$.T(4684945, '3', 21, false),
                                            J$.T(4684953, '2', 21, false),
                                            J$.T(4684961, '1', 21, false)
                                        ], 10, false)
                                    ], 10, false), 'forEach', false)(J$.T(4685089, function (solution) {
                                        jalangiLabel1:
                                            while (true) {
                                                try {
                                                    J$.Fe(4685065, arguments.callee, this, arguments);
                                                    arguments = J$.N(4685073, 'arguments', arguments, true, false, false);
                                                    solution = J$.N(4685081, 'solution', solution, true, false, false);
                                                    try {
                                                        J$.M(4685009, J$.R(4684985, 'assert', assert, false, true), 'deepEqual', false)(J$.R(4684993, 'result', result, false, false), J$.R(4685001, 'solution', solution, false, false));
                                                        passed = J$.W(4685025, 'passed', J$.T(4685017, true, 23, false), passed, false, false);
                                                    } catch (e) {
                                                        J$.N(4685057, 'e', e, false, false, true);
                                                        J$.M(4685049, J$.R(4685033, 'failed', failed, false, false), 'push', false)(J$.R(4685041, 'e', e, false, false));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(4687865, J$e);
                                                } finally {
                                                    if (J$.Fr(4687873))
                                                        continue jalangiLabel1;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                    if (J$.C(248960, J$.U(479346, '!', J$.R(4685105, 'passed', passed, false, false)))) {
                                        J$.M(4685129, J$.I(typeof console === 'undefined' ? console = J$.R(4685113, 'console', undefined, true, true) : console = J$.R(4685113, 'console', console, true, true)), 'log', false)(J$.R(4685121, 'failed', failed, false, false));
                                        throw J$.G(4685153, J$.R(4685137, 'failed', failed, false, false), J$.T(4685145, 0, 22, false));
                                    }
                                } catch (J$e) {
                                    J$.Ex(4687881, J$e);
                                } finally {
                                    if (J$.Fr(4687889))
                                        continue jalangiLabel2;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                'simple cyclic graphs': J$.T(4685401, {
                    topic: J$.T(4685321, function topic() {
                        jalangiLabel3:
                            while (true) {
                                try {
                                    J$.Fe(4685305, arguments.callee, this, arguments);
                                    arguments = J$.N(4685313, 'arguments', arguments, true, false, false);
                                    return J$.Rt(4685297, J$.F(4685289, J$.R(4685225, 'toposort', toposort, false, true), false)(J$.T(4685281, [
                                        J$.T(4685249, [
                                            J$.T(4685233, 'foo', 21, false),
                                            J$.T(4685241, 'bar', 21, false)
                                        ], 10, false),
                                        J$.T(4685273, [
                                            J$.T(4685257, 'bar', 21, false),
                                            J$.T(4685265, 'foo', 21, false)
                                        ], 10, false)
                                    ], 10, false)));
                                } catch (J$e) {
                                    J$.Ex(4687897, J$e);
                                } finally {
                                    if (J$.Fr(4687905))
                                        continue jalangiLabel3;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    'should throw an exception': J$.T(4685393, function shouldThrowAnException(_, val) {
                        jalangiLabel4:
                            while (true) {
                                try {
                                    J$.Fe(4685361, arguments.callee, this, arguments);
                                    arguments = J$.N(4685369, 'arguments', arguments, true, false, false);
                                    _ = J$.N(4685377, '_', _, true, false, false);
                                    val = J$.N(4685385, 'val', val, true, false, false);
                                    J$.M(4685353, J$.R(4685329, 'assert', assert, false, true), 'instanceOf', false)(J$.R(4685337, 'val', val, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(4685345, 'Error', undefined, true, true) : Error = J$.R(4685345, 'Error', Error, true, true)));
                                } catch (J$e) {
                                    J$.Ex(4687913, J$e);
                                } finally {
                                    if (J$.Fr(4687921))
                                        continue jalangiLabel4;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                'complex cyclic graphs': J$.T(4685657, {
                    topic: J$.T(4685577, function topic() {
                        jalangiLabel5:
                            while (true) {
                                try {
                                    J$.Fe(4685561, arguments.callee, this, arguments);
                                    arguments = J$.N(4685569, 'arguments', arguments, true, false, false);
                                    return J$.Rt(4685553, J$.F(4685545, J$.R(4685409, 'toposort', toposort, false, true), false)(J$.T(4685537, [
                                        J$.T(4685433, [
                                            J$.T(4685417, 'foo', 21, false),
                                            J$.T(4685425, 'bar', 21, false)
                                        ], 10, false),
                                        J$.T(4685457, [
                                            J$.T(4685441, 'bar', 21, false),
                                            J$.T(4685449, 'ron', 21, false)
                                        ], 10, false),
                                        J$.T(4685481, [
                                            J$.T(4685465, 'john', 21, false),
                                            J$.T(4685473, 'bar', 21, false)
                                        ], 10, false),
                                        J$.T(4685505, [
                                            J$.T(4685489, 'tom', 21, false),
                                            J$.T(4685497, 'john', 21, false)
                                        ], 10, false),
                                        J$.T(4685529, [
                                            J$.T(4685513, 'ron', 21, false),
                                            J$.T(4685521, 'tom', 21, false)
                                        ], 10, false)
                                    ], 10, false)));
                                } catch (J$e) {
                                    J$.Ex(4687929, J$e);
                                } finally {
                                    if (J$.Fr(4687937))
                                        continue jalangiLabel5;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    'should throw an exception': J$.T(4685649, function shouldThrowAnException(_, val) {
                        jalangiLabel6:
                            while (true) {
                                try {
                                    J$.Fe(4685617, arguments.callee, this, arguments);
                                    arguments = J$.N(4685625, 'arguments', arguments, true, false, false);
                                    _ = J$.N(4685633, '_', _, true, false, false);
                                    val = J$.N(4685641, 'val', val, true, false, false);
                                    J$.M(4685609, J$.R(4685585, 'assert', assert, false, true), 'instanceOf', false)(J$.R(4685593, 'val', val, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(4685601, 'Error', undefined, true, true) : Error = J$.R(4685601, 'Error', Error, true, true)));
                                } catch (J$e) {
                                    J$.Ex(4687945, J$e);
                                } finally {
                                    if (J$.Fr(4687953))
                                        continue jalangiLabel6;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                'unknown nodes in edges': J$.T(4685929, {
                    topic: J$.T(4685849, function topic() {
                        jalangiLabel7:
                            while (true) {
                                try {
                                    J$.Fe(4685833, arguments.callee, this, arguments);
                                    arguments = J$.N(4685841, 'arguments', arguments, true, false, false);
                                    return J$.Rt(4685825, J$.M(4685817, J$.R(4685665, 'toposort', toposort, false, true), 'array', false)(J$.T(4685681, [J$.T(4685673, 'bla', 21, false)], 10, false), J$.T(4685809, [
                                        J$.T(4685705, [
                                            J$.T(4685689, 'foo', 21, false),
                                            J$.T(4685697, 'bar', 21, false)
                                        ], 10, false),
                                        J$.T(4685729, [
                                            J$.T(4685713, 'bar', 21, false),
                                            J$.T(4685721, 'ron', 21, false)
                                        ], 10, false),
                                        J$.T(4685753, [
                                            J$.T(4685737, 'john', 21, false),
                                            J$.T(4685745, 'bar', 21, false)
                                        ], 10, false),
                                        J$.T(4685777, [
                                            J$.T(4685761, 'tom', 21, false),
                                            J$.T(4685769, 'john', 21, false)
                                        ], 10, false),
                                        J$.T(4685801, [
                                            J$.T(4685785, 'ron', 21, false),
                                            J$.T(4685793, 'tom', 21, false)
                                        ], 10, false)
                                    ], 10, false)));
                                } catch (J$e) {
                                    J$.Ex(4687961, J$e);
                                } finally {
                                    if (J$.Fr(4687969))
                                        continue jalangiLabel7;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    'should throw an exception': J$.T(4685921, function shouldThrowAnException(_, val) {
                        jalangiLabel8:
                            while (true) {
                                try {
                                    J$.Fe(4685889, arguments.callee, this, arguments);
                                    arguments = J$.N(4685897, 'arguments', arguments, true, false, false);
                                    _ = J$.N(4685905, '_', _, true, false, false);
                                    val = J$.N(4685913, 'val', val, true, false, false);
                                    J$.M(4685881, J$.R(4685857, 'assert', assert, false, true), 'instanceOf', false)(J$.R(4685865, 'val', val, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(4685873, 'Error', undefined, true, true) : Error = J$.R(4685873, 'Error', Error, true, true)));
                                } catch (J$e) {
                                    J$.Ex(4687977, J$e);
                                } finally {
                                    if (J$.Fr(4687985))
                                        continue jalangiLabel8;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                'triangular dependency': J$.T(4686161, {
                    topic: J$.T(4686057, function topic() {
                        jalangiLabel9:
                            while (true) {
                                try {
                                    J$.Fe(4686041, arguments.callee, this, arguments);
                                    arguments = J$.N(4686049, 'arguments', arguments, true, false, false);
                                    return J$.Rt(4686033, J$.F(4686025, J$.R(4685937, 'toposort', toposort, false, true), false)(J$.T(4686017, [
                                        J$.T(4685961, [
                                            J$.T(4685945, 'a', 21, false),
                                            J$.T(4685953, 'b', 21, false)
                                        ], 10, false),
                                        J$.T(4685985, [
                                            J$.T(4685969, 'a', 21, false),
                                            J$.T(4685977, 'c', 21, false)
                                        ], 10, false),
                                        J$.T(4686009, [
                                            J$.T(4685993, 'b', 21, false),
                                            J$.T(4686001, 'c', 21, false)
                                        ], 10, false)
                                    ], 10, false)));
                                } catch (J$e) {
                                    J$.Ex(4687993, J$e);
                                } finally {
                                    if (J$.Fr(4688001))
                                        continue jalangiLabel9;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    'shouldn\'t throw an error': J$.T(4686153, function shouldnTThrowAnError(er, result) {
                        jalangiLabel10:
                            while (true) {
                                try {
                                    J$.Fe(4686121, arguments.callee, this, arguments);
                                    arguments = J$.N(4686129, 'arguments', arguments, true, false, false);
                                    er = J$.N(4686137, 'er', er, true, false, false);
                                    result = J$.N(4686145, 'result', result, true, false, false);
                                    J$.M(4686113, J$.R(4686065, 'assert', assert, false, true), 'deepEqual', false)(J$.R(4686073, 'result', result, false, false), J$.T(4686105, [
                                        J$.T(4686081, 'a', 21, false),
                                        J$.T(4686089, 'b', 21, false),
                                        J$.T(4686097, 'c', 21, false)
                                    ], 10, false));
                                } catch (J$e) {
                                    J$.Ex(4688009, J$e);
                                } finally {
                                    if (J$.Fr(4688017))
                                        continue jalangiLabel10;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                'toposort.array': J$.T(4686513, {
                    topic: J$.T(4686305, function topic() {
                        jalangiLabel11:
                            while (true) {
                                try {
                                    J$.Fe(4686289, arguments.callee, this, arguments);
                                    arguments = J$.N(4686297, 'arguments', arguments, true, false, false);
                                    return J$.Rt(4686281, J$.M(4686273, J$.R(4686169, 'toposort', toposort, false, true), 'array', false)(J$.T(4686209, [
                                        J$.T(4686177, 'd', 21, false),
                                        J$.T(4686185, 'c', 21, false),
                                        J$.T(4686193, 'a', 21, false),
                                        J$.T(4686201, 'b', 21, false)
                                    ], 10, false), J$.T(4686265, [
                                        J$.T(4686233, [
                                            J$.T(4686217, 'a', 21, false),
                                            J$.T(4686225, 'b', 21, false)
                                        ], 10, false),
                                        J$.T(4686257, [
                                            J$.T(4686241, 'b', 21, false),
                                            J$.T(4686249, 'c', 21, false)
                                        ], 10, false)
                                    ], 10, false)));
                                } catch (J$e) {
                                    J$.Ex(4688025, J$e);
                                } finally {
                                    if (J$.Fr(4688033))
                                        continue jalangiLabel11;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    'should include unconnected nodes': J$.T(4686505, function shouldIncludeUnconnectedNodes(er, result) {
                        jalangiLabel12:
                            while (true) {
                                try {
                                    J$.Fe(4686465, arguments.callee, this, arguments);
                                    arguments = J$.N(4686473, 'arguments', arguments, true, false, false);
                                    er = J$.N(4686481, 'er', er, true, false, false);
                                    result = J$.N(4686489, 'result', result, true, false, false);
                                    J$.N(4686497, 'i', i, false, false, false);
                                    var i = J$.W(4686337, 'i', J$.M(4686329, J$.R(4686313, 'result', result, false, false), 'indexOf', false)(J$.T(4686321, 'd', 21, false)), i, false, false);
                                    J$.F(4686369, J$.R(4686345, 'assert', assert, false, true), false)(J$.B(479354, '>=', J$.R(4686353, 'i', i, false, false), J$.T(4686361, 0, 22, false)));
                                    J$.M(4686401, J$.R(4686377, 'result', result, false, false), 'splice', false)(J$.R(4686385, 'i', i, false, false), J$.T(4686393, 1, 22, false));
                                    J$.M(4686457, J$.R(4686409, 'assert', assert, false, true), 'deepEqual', false)(J$.R(4686417, 'result', result, false, false), J$.T(4686449, [
                                        J$.T(4686425, 'a', 21, false),
                                        J$.T(4686433, 'b', 21, false),
                                        J$.T(4686441, 'c', 21, false)
                                    ], 10, false));
                                } catch (J$e) {
                                    J$.Ex(4688041, J$e);
                                } finally {
                                    if (J$.Fr(4688049))
                                        continue jalangiLabel12;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                'toposort.array mutation': J$.T(4686801, {
                    topic: J$.T(4686689, function topic() {
                        jalangiLabel13:
                            while (true) {
                                try {
                                    J$.Fe(4686665, arguments.callee, this, arguments);
                                    arguments = J$.N(4686673, 'arguments', arguments, true, false, false);
                                    J$.N(4686681, 'array', array, false, false, false);
                                    var array = J$.W(4686561, 'array', J$.T(4686553, [
                                        J$.T(4686521, 'd', 21, false),
                                        J$.T(4686529, 'c', 21, false),
                                        J$.T(4686537, 'a', 21, false),
                                        J$.T(4686545, 'b', 21, false)
                                    ], 10, false), array, false, false);
                                    J$.M(4686641, J$.R(4686569, 'toposort', toposort, false, true), 'array', false)(J$.R(4686577, 'array', array, false, false), J$.T(4686633, [
                                        J$.T(4686601, [
                                            J$.T(4686585, 'a', 21, false),
                                            J$.T(4686593, 'b', 21, false)
                                        ], 10, false),
                                        J$.T(4686625, [
                                            J$.T(4686609, 'b', 21, false),
                                            J$.T(4686617, 'c', 21, false)
                                        ], 10, false)
                                    ], 10, false));
                                    return J$.Rt(4686657, J$.R(4686649, 'array', array, false, false));
                                } catch (J$e) {
                                    J$.Ex(4688057, J$e);
                                } finally {
                                    if (J$.Fr(4688065))
                                        continue jalangiLabel13;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    'should not mutate its arguments': J$.T(4686793, function shouldNotMutateItsArguments(er, result) {
                        jalangiLabel14:
                            while (true) {
                                try {
                                    J$.Fe(4686761, arguments.callee, this, arguments);
                                    arguments = J$.N(4686769, 'arguments', arguments, true, false, false);
                                    er = J$.N(4686777, 'er', er, true, false, false);
                                    result = J$.N(4686785, 'result', result, true, false, false);
                                    J$.M(4686753, J$.R(4686697, 'assert', assert, false, true), 'deepEqual', false)(J$.R(4686705, 'result', result, false, false), J$.T(4686745, [
                                        J$.T(4686713, 'd', 21, false),
                                        J$.T(4686721, 'c', 21, false),
                                        J$.T(4686729, 'a', 21, false),
                                        J$.T(4686737, 'b', 21, false)
                                    ], 10, false));
                                } catch (J$e) {
                                    J$.Ex(4688073, J$e);
                                } finally {
                                    if (J$.Fr(4688081))
                                        continue jalangiLabel14;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                'giant graphs': J$.T(4687233, {
                    topic: J$.T(4686993, function topic() {
                        jalangiLabel15:
                            while (true) {
                                try {
                                    J$.Fe(4686953, arguments.callee, this, arguments);
                                    arguments = J$.N(4686961, 'arguments', arguments, true, false, false);
                                    J$.N(4686969, 'graph', graph, false, false, false);
                                    J$.N(4686977, 'nodeCount', nodeCount, false, false, false);
                                    J$.N(4686985, 'i', i, false, false, false);
                                    var graph = J$.W(4686825, 'graph', J$.T(4686809, [], 10, false), graph, false, false), nodeCount = J$.W(4686833, 'nodeCount', J$.T(4686817, 100000, 22, false), nodeCount, false, false);
                                    for (var i = J$.W(4686849, 'i', J$.T(4686841, 0, 22, false), i, false, false); J$.C(248968, J$.B(479362, '<', J$.R(4686857, 'i', i, false, false), J$.R(4686865, 'nodeCount', nodeCount, false, false))); J$.B(479386, '-', i = J$.W(4686881, 'i', J$.B(479378, '+', J$.U(479370, '+', J$.R(4686873, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        J$.M(4686929, J$.R(4686889, 'graph', graph, false, false), 'push', false)(J$.T(4686921, [
                                            J$.R(4686897, 'i', i, false, false),
                                            J$.B(479394, '+', J$.R(4686905, 'i', i, false, false), J$.T(4686913, 1, 22, false))
                                        ], 10, false));
                                    }
                                    return J$.Rt(4686945, J$.R(4686937, 'graph', graph, false, false));
                                } catch (J$e) {
                                    J$.Ex(4688089, J$e);
                                } finally {
                                    if (J$.Fr(4688097))
                                        continue jalangiLabel15;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    'should sort quickly': J$.T(4687225, function shouldSortQuickly(er, result) {
                        jalangiLabel16:
                            while (true) {
                                try {
                                    J$.Fe(4687161, arguments.callee, this, arguments);
                                    arguments = J$.N(4687169, 'arguments', arguments, true, false, false);
                                    er = J$.N(4687177, 'er', er, true, false, false);
                                    result = J$.N(4687185, 'result', result, true, false, false);
                                    J$.N(4687193, 'start', start, false, false, false);
                                    J$.N(4687201, 'sorted', sorted, false, false, false);
                                    J$.N(4687209, 'end', end, false, false, false);
                                    J$.N(4687217, 'elapsedSeconds', elapsedSeconds, false, false, false);
                                    var start = J$.W(4687025, 'start', J$.M(4687017, J$.F(4687009, J$.I(typeof Date === 'undefined' ? Date = J$.R(4687001, 'Date', undefined, true, true) : Date = J$.R(4687001, 'Date', Date, true, true)), true)(), 'getTime', false)(), start, false, false);
                                    var sorted = J$.W(4687057, 'sorted', J$.F(4687049, J$.R(4687033, 'toposort', toposort, false, true), false)(J$.R(4687041, 'result', result, false, false)), sorted, false, false);
                                    var end = J$.W(4687089, 'end', J$.M(4687081, J$.F(4687073, J$.I(typeof Date === 'undefined' ? Date = J$.R(4687065, 'Date', undefined, true, true) : Date = J$.R(4687065, 'Date', Date, true, true)), true)(), 'getTime', false)(), end, false, false);
                                    var elapsedSeconds = J$.W(4687121, 'elapsedSeconds', J$.B(479410, '/', J$.B(479402, '-', J$.R(4687097, 'end', end, false, false), J$.R(4687105, 'start', start, false, false)), J$.T(4687113, 1000, 22, false)), elapsedSeconds, false, false);
                                    J$.F(4687153, J$.R(4687129, 'assert', assert, false, true), false)(J$.B(479418, '<', J$.R(4687137, 'elapsedSeconds', elapsedSeconds, false, false), J$.T(4687145, 1, 22, false)));
                                } catch (J$e) {
                                    J$.Ex(4688105, J$e);
                                } finally {
                                    if (J$.Fr(4688113))
                                        continue jalangiLabel16;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                'object keys': J$.T(4687641, {
                    topic: J$.T(4687457, function topic() {
                        jalangiLabel17:
                            while (true) {
                                try {
                                    J$.Fe(4687409, arguments.callee, this, arguments);
                                    arguments = J$.N(4687417, 'arguments', arguments, true, false, false);
                                    J$.N(4687425, 'o1', o1, false, false, false);
                                    J$.N(4687433, 'o2', o2, false, false, false);
                                    J$.N(4687441, 'o3', o3, false, false, false);
                                    J$.N(4687449, 'graph', graph, false, false, false);
                                    var o1 = J$.W(4687273, 'o1', J$.T(4687265, {
                                        k1: J$.T(4687241, 'v1', 21, false),
                                        nested: J$.T(4687257, { k2: J$.T(4687249, 'v2', 21, false) }, 11, false)
                                    }, 11, false), o1, false, false);
                                    var o2 = J$.W(4687297, 'o2', J$.T(4687289, { k2: J$.T(4687281, 'v2', 21, false) }, 11, false), o2, false, false);
                                    var o3 = J$.W(4687321, 'o3', J$.T(4687313, { k3: J$.T(4687305, 'v3', 21, false) }, 11, false), o3, false, false);
                                    var graph = J$.W(4687385, 'graph', J$.T(4687377, [
                                        J$.T(4687345, [
                                            J$.R(4687329, 'o1', o1, false, false),
                                            J$.R(4687337, 'o2', o2, false, false)
                                        ], 10, false),
                                        J$.T(4687369, [
                                            J$.R(4687353, 'o2', o2, false, false),
                                            J$.R(4687361, 'o3', o3, false, false)
                                        ], 10, false)
                                    ], 10, false), graph, false, false);
                                    return J$.Rt(4687401, J$.R(4687393, 'graph', graph, false, false));
                                } catch (J$e) {
                                    J$.Ex(4688121, J$e);
                                } finally {
                                    if (J$.Fr(4688129))
                                        continue jalangiLabel17;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    'should handle object nodes': J$.T(4687633, function shouldHandleObjectNodes(er, result) {
                        jalangiLabel18:
                            while (true) {
                                try {
                                    J$.Fe(4687593, arguments.callee, this, arguments);
                                    arguments = J$.N(4687601, 'arguments', arguments, true, false, false);
                                    er = J$.N(4687609, 'er', er, true, false, false);
                                    result = J$.N(4687617, 'result', result, true, false, false);
                                    J$.N(4687625, 'sorted', sorted, false, false, false);
                                    var sorted = J$.W(4687489, 'sorted', J$.F(4687481, J$.R(4687465, 'toposort', toposort, false, true), false)(J$.R(4687473, 'result', result, false, false)), sorted, false, false);
                                    J$.M(4687585, J$.R(4687497, 'assert', assert, false, true), 'deepEqual', false)(J$.R(4687505, 'sorted', sorted, false, false), J$.T(4687577, [
                                        J$.T(4687537, {
                                            k1: J$.T(4687513, 'v1', 21, false),
                                            nested: J$.T(4687529, { k2: J$.T(4687521, 'v2', 21, false) }, 11, false)
                                        }, 11, false),
                                        J$.T(4687553, { k2: J$.T(4687545, 'v2', 21, false) }, 11, false),
                                        J$.T(4687569, { k3: J$.T(4687561, 'v3', 21, false) }, 11, false)
                                    ], 10, false));
                                } catch (J$e) {
                                    J$.Ex(4688137, J$e);
                                } finally {
                                    if (J$.Fr(4688145))
                                        continue jalangiLabel18;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false)
            }, 11, false)), 'run', false)(J$.T(4687665, null, 25, false), J$.T(4687793, function () {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(4687777, arguments.callee, this, arguments);
                            arguments = J$.N(4687785, 'arguments', arguments, true, false, false);
                            J$.C(248976, J$.B(479434, '>', J$.B(479426, '+', J$.G(4687689, J$.G(4687681, J$.R(4687673, 'suite', suite, false, true), 'results'), 'broken'), J$.G(4687713, J$.G(4687705, J$.R(4687697, 'suite', suite, false, true), 'results'), 'errored')), J$.T(4687721, 0, 22, false))) ? J$.M(4687745, J$.I(typeof process === 'undefined' ? process = J$.R(4687729, 'process', undefined, true, true) : process = J$.R(4687729, 'process', process, true, true)), 'exit', false)(J$.T(4687737, 1, 22, false)) : J$._();
                            J$.M(4687769, J$.I(typeof process === 'undefined' ? process = J$.R(4687753, 'process', undefined, true, true) : process = J$.R(4687753, 'process', process, true, true)), 'exit', false)(J$.T(4687761, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(4688153, J$e);
                        } finally {
                            if (J$.Fr(4688161))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4688169, J$e);
        } finally {
            if (J$.Sr(4688177))
                continue jalangiLabel20;
            else
                break jalangiLabel20;
        }
    }
// JALANGI DO NOT INSTRUMENT

