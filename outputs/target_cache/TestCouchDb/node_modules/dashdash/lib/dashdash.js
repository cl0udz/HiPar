J$.noInstrEval = false;
jalangiLabel44:
    while (true) {
        try {
            J$.Se(2209561, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/dashdash/lib/dashdash.js');
            function renderTemplate(s, d) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2192641, arguments.callee, this, arguments);
                            arguments = J$.N(2192649, 'arguments', arguments, true, false, false);
                            s = J$.N(2192657, 's', s, true, false, false);
                            d = J$.N(2192665, 'd', d, true, false, false);
                            return J$.Rt(2192633, J$.M(2192625, J$.R(2192505, 's', s, false, false), 'replace', false)(J$.T(2192513, /{{([a-zA-Z]+)}}/g, 14, false), J$.T(2192617, function (match, key) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2192585, arguments.callee, this, arguments);
                                            arguments = J$.N(2192593, 'arguments', arguments, true, false, false);
                                            match = J$.N(2192601, 'match', match, true, false, false);
                                            key = J$.N(2192609, 'key', key, true, false, false);
                                            return J$.Rt(2192577, J$.C(135888, J$.M(2192537, J$.R(2192521, 'd', d, false, false), 'hasOwnProperty', false)(J$.R(2192529, 'key', key, false, false))) ? J$.G(2192561, J$.R(2192545, 'd', d, false, false), J$.R(2192553, 'key', key, false, false)) : J$.R(2192569, 'match', match, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2209969, J$e);
                                        } finally {
                                            if (J$.Fr(2209977))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(2209985, J$e);
                        } finally {
                            if (J$.Fr(2209993))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function shallowCopy(obj) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2192841, arguments.callee, this, arguments);
                            arguments = J$.N(2192849, 'arguments', arguments, true, false, false);
                            obj = J$.N(2192857, 'obj', obj, true, false, false);
                            J$.N(2192865, 'copy', copy, false, false, false);
                            if (J$.C(135896, J$.U(264874, '!', J$.R(2192673, 'obj', obj, false, false)))) {
                                return J$.Rt(2192689, J$.R(2192681, 'obj', obj, false, false));
                            }
                            var copy = J$.W(2192705, 'copy', J$.T(2192697, {}, 11, false), copy, false, false);
                            J$.M(2192817, J$.M(2192729, J$.I(typeof Object === 'undefined' ? Object = J$.R(2192713, 'Object', undefined, true, true) : Object = J$.R(2192713, 'Object', Object, true, true)), 'keys', false)(J$.R(2192721, 'obj', obj, false, false)), 'forEach', false)(J$.T(2192809, function (k) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2192785, arguments.callee, this, arguments);
                                            arguments = J$.N(2192793, 'arguments', arguments, true, false, false);
                                            k = J$.N(2192801, 'k', k, true, false, false);
                                            J$.P(2192777, J$.R(2192737, 'copy', copy, false, false), J$.R(2192745, 'k', k, false, false), J$.G(2192769, J$.R(2192753, 'obj', obj, false, false), J$.R(2192761, 'k', k, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2210001, J$e);
                                        } finally {
                                            if (J$.Fr(2210009))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2192833, J$.R(2192825, 'copy', copy, false, false));
                        } catch (J$e) {
                            J$.Ex(2210017, J$e);
                        } finally {
                            if (J$.Fr(2210025))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function space(n) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2192977, arguments.callee, this, arguments);
                            arguments = J$.N(2192985, 'arguments', arguments, true, false, false);
                            n = J$.N(2192993, 'n', n, true, false, false);
                            J$.N(2193001, 's', s, false, false, false);
                            J$.N(2193009, 'i', i, false, false, false);
                            var s = J$.W(2192881, 's', J$.T(2192873, '', 21, false), s, false, false);
                            for (var i = J$.W(2192897, 'i', J$.T(2192889, 0, 22, false), i, false, false); J$.C(135904, J$.B(264882, '<', J$.R(2192905, 'i', i, false, false), J$.R(2192913, 'n', n, false, false))); J$.B(264906, '-', i = J$.W(2192929, 'i', J$.B(264898, '+', J$.U(264890, '+', J$.R(2192921, 'i', i, false, false)), 1), i, false, false), 1)) {
                                s = J$.W(2192953, 's', J$.B(264914, '+', J$.R(2192945, 's', s, false, false), J$.T(2192937, ' ', 21, false)), s, false, false);
                            }
                            return J$.Rt(2192969, J$.R(2192961, 's', s, false, false));
                        } catch (J$e) {
                            J$.Ex(2210033, J$e);
                        } finally {
                            if (J$.Fr(2210041))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function makeIndent(arg, deflen, name) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2193209, arguments.callee, this, arguments);
                            arguments = J$.N(2193217, 'arguments', arguments, true, false, false);
                            arg = J$.N(2193225, 'arg', arg, true, false, false);
                            deflen = J$.N(2193233, 'deflen', deflen, true, false, false);
                            name = J$.N(2193241, 'name', name, true, false, false);
                            if (J$.C(135936, J$.C(135912, J$.B(264922, '===', J$.R(2193017, 'arg', arg, false, false), J$.T(2193025, null, 25, false))) ? J$._() : J$.B(264930, '===', J$.R(2193033, 'arg', arg, false, false), J$.T(2193041, undefined, 24, false))))
                                return J$.Rt(2193073, J$.F(2193065, J$.R(2193049, 'space', space, false, true), false)(J$.R(2193057, 'deflen', deflen, false, false)));
                            else if (J$.C(135928, J$.B(264946, '===', J$.U(264938, 'typeof', J$.R(2193081, 'arg', arg, false, false)), J$.T(2193089, 'number', 21, false))))
                                return J$.Rt(2193121, J$.F(2193113, J$.R(2193097, 'space', space, false, true), false)(J$.R(2193105, 'arg', arg, false, false)));
                            else if (J$.C(135920, J$.B(264962, '===', J$.U(264954, 'typeof', J$.R(2193129, 'arg', arg, false, false)), J$.T(2193137, 'string', 21, false))))
                                return J$.Rt(2193153, J$.R(2193145, 'arg', arg, false, false));
                            else
                                J$.M(2193201, J$.R(2193161, 'assert', assert, false, true), 'fail', false)(J$.B(264986, '+', J$.B(264978, '+', J$.B(264970, '+', J$.T(2193169, 'invalid "', 21, false), J$.R(2193177, 'name', name, false, false)), J$.T(2193185, '": not a string or number: ', 21, false)), J$.R(2193193, 'arg', arg, false, false)));
                        } catch (J$e) {
                            J$.Ex(2210049, J$e);
                        } finally {
                            if (J$.Fr(2210057))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function textwrap(s, width) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2193633, arguments.callee, this, arguments);
                            arguments = J$.N(2193641, 'arguments', arguments, true, false, false);
                            s = J$.N(2193649, 's', s, true, false, false);
                            width = J$.N(2193657, 'width', width, true, false, false);
                            J$.N(2193665, 'words', words, false, false, false);
                            J$.N(2193673, 'lines', lines, false, false, false);
                            J$.N(2193681, 'line', line, false, false, false);
                            var words = J$.W(2193281, 'words', J$.M(2193273, J$.M(2193257, J$.R(2193249, 's', s, false, false), 'trim', false)(), 'split', false)(J$.T(2193265, /\s+/, 14, false)), words, false, false);
                            var lines = J$.W(2193297, 'lines', J$.T(2193289, [], 10, false), lines, false, false);
                            var line = J$.W(2193313, 'line', J$.T(2193305, '', 21, false), line, false, false);
                            J$.M(2193585, J$.R(2193321, 'words', words, false, false), 'forEach', false)(J$.T(2193577, function (w) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(2193545, arguments.callee, this, arguments);
                                            arguments = J$.N(2193553, 'arguments', arguments, true, false, false);
                                            w = J$.N(2193561, 'w', w, true, false, false);
                                            J$.N(2193569, 'newLength', newLength, false, false, false);
                                            var newLength = J$.W(2193361, 'newLength', J$.B(264994, '+', J$.G(2193337, J$.R(2193329, 'line', line, false, false), 'length'), J$.G(2193353, J$.R(2193345, 'w', w, false, false), 'length')), newLength, false, false);
                                            if (J$.C(135944, J$.B(265002, '>', J$.G(2193377, J$.R(2193369, 'line', line, false, false), 'length'), J$.T(2193385, 0, 22, false))))
                                                newLength = J$.W(2193409, 'newLength', J$.B(265010, '+', J$.R(2193401, 'newLength', newLength, false, false), J$.T(2193393, 1, 22, false)), newLength, false, false);
                                            if (J$.C(135952, J$.B(265018, '>', J$.R(2193417, 'newLength', newLength, false, false), J$.R(2193425, 'width', width, false, false)))) {
                                                J$.M(2193449, J$.R(2193433, 'lines', lines, false, false), 'push', false)(J$.R(2193441, 'line', line, false, false));
                                                line = J$.W(2193465, 'line', J$.T(2193457, '', 21, false), line, false, false);
                                            }
                                            if (J$.C(135960, J$.B(265026, '>', J$.G(2193481, J$.R(2193473, 'line', line, false, false), 'length'), J$.T(2193489, 0, 22, false))))
                                                line = J$.W(2193513, 'line', J$.B(265034, '+', J$.R(2193505, 'line', line, false, false), J$.T(2193497, ' ', 21, false)), line, false, false);
                                            line = J$.W(2193537, 'line', J$.B(265042, '+', J$.R(2193529, 'line', line, false, false), J$.R(2193521, 'w', w, false, false)), line, false, false);
                                        } catch (J$e) {
                                            J$.Ex(2210065, J$e);
                                        } finally {
                                            if (J$.Fr(2210073))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(2193609, J$.R(2193593, 'lines', lines, false, false), 'push', false)(J$.R(2193601, 'line', line, false, false));
                            return J$.Rt(2193625, J$.R(2193617, 'lines', lines, false, false));
                        } catch (J$e) {
                            J$.Ex(2210081, J$e);
                        } finally {
                            if (J$.Fr(2210089))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function optionKeyFromName(name) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(2193729, arguments.callee, this, arguments);
                            arguments = J$.N(2193737, 'arguments', arguments, true, false, false);
                            name = J$.N(2193745, 'name', name, true, false, false);
                            return J$.Rt(2193721, J$.M(2193713, J$.R(2193689, 'name', name, false, false), 'replace', false)(J$.T(2193697, /-/g, 14, false), J$.T(2193705, '_', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2210097, J$e);
                        } finally {
                            if (J$.Fr(2210105))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseBool(option, optstr, arg) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(2193785, arguments.callee, this, arguments);
                            arguments = J$.N(2193793, 'arguments', arguments, true, false, false);
                            option = J$.N(2193801, 'option', option, true, false, false);
                            optstr = J$.N(2193809, 'optstr', optstr, true, false, false);
                            arg = J$.N(2193817, 'arg', arg, true, false, false);
                            return J$.Rt(2193777, J$.F(2193769, J$.I(typeof Boolean === 'undefined' ? Boolean = J$.R(2193753, 'Boolean', undefined, true, true) : Boolean = J$.R(2193753, 'Boolean', Boolean, true, true)), false)(J$.R(2193761, 'arg', arg, false, false)));
                        } catch (J$e) {
                            J$.Ex(2210113, J$e);
                        } finally {
                            if (J$.Fr(2210121))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseString(option, optstr, arg) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(2193873, arguments.callee, this, arguments);
                            arguments = J$.N(2193881, 'arguments', arguments, true, false, false);
                            option = J$.N(2193889, 'option', option, true, false, false);
                            optstr = J$.N(2193897, 'optstr', optstr, true, false, false);
                            arg = J$.N(2193905, 'arg', arg, true, false, false);
                            J$.M(2193849, J$.R(2193825, 'assert', assert, false, true), 'string', false)(J$.R(2193833, 'arg', arg, false, false), J$.T(2193841, 'arg', 21, false));
                            return J$.Rt(2193865, J$.R(2193857, 'arg', arg, false, false));
                        } catch (J$e) {
                            J$.Ex(2210129, J$e);
                        } finally {
                            if (J$.Fr(2210137))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseNumber(option, optstr, arg) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(2194073, arguments.callee, this, arguments);
                            arguments = J$.N(2194081, 'arguments', arguments, true, false, false);
                            option = J$.N(2194089, 'option', option, true, false, false);
                            optstr = J$.N(2194097, 'optstr', optstr, true, false, false);
                            arg = J$.N(2194105, 'arg', arg, true, false, false);
                            J$.N(2194113, 'num', num, false, false, false);
                            J$.M(2193937, J$.R(2193913, 'assert', assert, false, true), 'string', false)(J$.R(2193921, 'arg', arg, false, false), J$.T(2193929, 'arg', 21, false));
                            var num = J$.W(2193969, 'num', J$.F(2193961, J$.I(typeof Number === 'undefined' ? Number = J$.R(2193945, 'Number', undefined, true, true) : Number = J$.R(2193945, 'Number', Number, true, true)), false)(J$.R(2193953, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(135968, J$.F(2193993, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(2193977, 'isNaN', undefined, true, true) : isNaN = J$.R(2193977, 'isNaN', isNaN, true, true)), false)(J$.R(2193985, 'num', num, false, false)))) {
                                throw J$.F(2194049, J$.I(typeof Error === 'undefined' ? Error = J$.R(2194001, 'Error', undefined, true, true) : Error = J$.R(2194001, 'Error', Error, true, true)), true)(J$.F(2194041, J$.R(2194009, 'format', format, false, true), false)(J$.T(2194017, 'arg for "%s" is not a number: "%s"', 21, false), J$.R(2194025, 'optstr', optstr, false, false), J$.R(2194033, 'arg', arg, false, false)));
                            }
                            return J$.Rt(2194065, J$.R(2194057, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(2210145, J$e);
                        } finally {
                            if (J$.Fr(2210153))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseInteger(option, optstr, arg) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(2194305, arguments.callee, this, arguments);
                            arguments = J$.N(2194313, 'arguments', arguments, true, false, false);
                            option = J$.N(2194321, 'option', option, true, false, false);
                            optstr = J$.N(2194329, 'optstr', optstr, true, false, false);
                            arg = J$.N(2194337, 'arg', arg, true, false, false);
                            J$.N(2194345, 'num', num, false, false, false);
                            J$.M(2194145, J$.R(2194121, 'assert', assert, false, true), 'string', false)(J$.R(2194129, 'arg', arg, false, false), J$.T(2194137, 'arg', 21, false));
                            var num = J$.W(2194177, 'num', J$.F(2194169, J$.I(typeof Number === 'undefined' ? Number = J$.R(2194153, 'Number', undefined, true, true) : Number = J$.R(2194153, 'Number', Number, true, true)), false)(J$.R(2194161, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(135984, J$.C(135976, J$.U(265050, '!', J$.M(2194201, J$.T(2194185, /^[0-9-]+$/, 14, false), 'test', false)(J$.R(2194193, 'arg', arg, false, false)))) ? J$._() : J$.F(2194225, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(2194209, 'isNaN', undefined, true, true) : isNaN = J$.R(2194209, 'isNaN', isNaN, true, true)), false)(J$.R(2194217, 'num', num, false, false)))) {
                                throw J$.F(2194281, J$.I(typeof Error === 'undefined' ? Error = J$.R(2194233, 'Error', undefined, true, true) : Error = J$.R(2194233, 'Error', Error, true, true)), true)(J$.F(2194273, J$.R(2194241, 'format', format, false, true), false)(J$.T(2194249, 'arg for "%s" is not an integer: "%s"', 21, false), J$.R(2194257, 'optstr', optstr, false, false), J$.R(2194265, 'arg', arg, false, false)));
                            }
                            return J$.Rt(2194297, J$.R(2194289, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(2210161, J$e);
                        } finally {
                            if (J$.Fr(2210169))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parsePositiveInteger(option, optstr, arg) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(2194553, arguments.callee, this, arguments);
                            arguments = J$.N(2194561, 'arguments', arguments, true, false, false);
                            option = J$.N(2194569, 'option', option, true, false, false);
                            optstr = J$.N(2194577, 'optstr', optstr, true, false, false);
                            arg = J$.N(2194585, 'arg', arg, true, false, false);
                            J$.N(2194593, 'num', num, false, false, false);
                            J$.M(2194377, J$.R(2194353, 'assert', assert, false, true), 'string', false)(J$.R(2194361, 'arg', arg, false, false), J$.T(2194369, 'arg', 21, false));
                            var num = J$.W(2194409, 'num', J$.F(2194401, J$.I(typeof Number === 'undefined' ? Number = J$.R(2194385, 'Number', undefined, true, true) : Number = J$.R(2194385, 'Number', Number, true, true)), false)(J$.R(2194393, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(136008, J$.C(136000, J$.C(135992, J$.U(265058, '!', J$.M(2194433, J$.T(2194417, /^[0-9]+$/, 14, false), 'test', false)(J$.R(2194425, 'arg', arg, false, false)))) ? J$._() : J$.F(2194457, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(2194441, 'isNaN', undefined, true, true) : isNaN = J$.R(2194441, 'isNaN', isNaN, true, true)), false)(J$.R(2194449, 'num', num, false, false))) ? J$._() : J$.B(265066, '===', J$.R(2194465, 'num', num, false, false), J$.T(2194473, 0, 22, false)))) {
                                throw J$.F(2194529, J$.I(typeof Error === 'undefined' ? Error = J$.R(2194481, 'Error', undefined, true, true) : Error = J$.R(2194481, 'Error', Error, true, true)), true)(J$.F(2194521, J$.R(2194489, 'format', format, false, true), false)(J$.T(2194497, 'arg for "%s" is not a positive integer: "%s"', 21, false), J$.R(2194505, 'optstr', optstr, false, false), J$.R(2194513, 'arg', arg, false, false)));
                            }
                            return J$.Rt(2194545, J$.R(2194537, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(2210177, J$e);
                        } finally {
                            if (J$.Fr(2210185))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseDate(option, optstr, arg) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(2194921, arguments.callee, this, arguments);
                            arguments = J$.N(2194929, 'arguments', arguments, true, false, false);
                            option = J$.N(2194937, 'option', option, true, false, false);
                            optstr = J$.N(2194945, 'optstr', optstr, true, false, false);
                            arg = J$.N(2194953, 'arg', arg, true, false, false);
                            J$.N(2194961, 'date', date, false, false, false);
                            J$.M(2194625, J$.R(2194601, 'assert', assert, false, true), 'string', false)(J$.R(2194609, 'arg', arg, false, false), J$.T(2194617, 'arg', 21, false));
                            var date;
                            if (J$.C(136024, J$.M(2194649, J$.T(2194633, /^\d+$/, 14, false), 'test', false)(J$.R(2194641, 'arg', arg, false, false)))) {
                                date = J$.W(2194705, 'date', J$.F(2194697, J$.I(typeof Date === 'undefined' ? Date = J$.R(2194657, 'Date', undefined, true, true) : Date = J$.R(2194657, 'Date', Date, true, true)), true)(J$.B(265074, '*', J$.F(2194681, J$.I(typeof Number === 'undefined' ? Number = J$.R(2194665, 'Number', undefined, true, true) : Number = J$.R(2194665, 'Number', Number, true, true)), false)(J$.R(2194673, 'arg', arg, false, false)), J$.T(2194689, 1000, 22, false))), date, false, false);
                            } else if (J$.C(136016, J$.M(2194729, J$.T(2194713, /^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?Z?)?$/i, 14, false), 'test', false)(J$.R(2194721, 'arg', arg, false, false)))) {
                                date = J$.W(2194761, 'date', J$.F(2194753, J$.I(typeof Date === 'undefined' ? Date = J$.R(2194737, 'Date', undefined, true, true) : Date = J$.R(2194737, 'Date', Date, true, true)), true)(J$.R(2194745, 'arg', arg, false, false)), date, false, false);
                            } else {
                                throw J$.F(2194817, J$.I(typeof Error === 'undefined' ? Error = J$.R(2194769, 'Error', undefined, true, true) : Error = J$.R(2194769, 'Error', Error, true, true)), true)(J$.F(2194809, J$.R(2194777, 'format', format, false, true), false)(J$.T(2194785, 'arg for "%s" is not a valid date format: "%s"', 21, false), J$.R(2194793, 'optstr', optstr, false, false), J$.R(2194801, 'arg', arg, false, false)));
                            }
                            if (J$.C(136032, J$.B(265082, '===', J$.M(2194833, J$.R(2194825, 'date', date, false, false), 'toString', false)(), J$.T(2194841, 'Invalid Date', 21, false)))) {
                                throw J$.F(2194897, J$.I(typeof Error === 'undefined' ? Error = J$.R(2194849, 'Error', undefined, true, true) : Error = J$.R(2194849, 'Error', Error, true, true)), true)(J$.F(2194889, J$.R(2194857, 'format', format, false, true), false)(J$.T(2194865, 'arg for "%s" is an invalid date: "%s"', 21, false), J$.R(2194873, 'optstr', optstr, false, false), J$.R(2194881, 'arg', arg, false, false)));
                            }
                            return J$.Rt(2194913, J$.R(2194905, 'date', date, false, false));
                        } catch (J$e) {
                            J$.Ex(2210193, J$e);
                        } finally {
                            if (J$.Fr(2210201))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Parser(config) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(2197377, arguments.callee, this, arguments);
                            arguments = J$.N(2197385, 'arguments', arguments, true, false, false);
                            config = J$.N(2197393, 'config', config, true, false, false);
                            J$.N(2197401, 'self', self, false, false, false);
                            J$.N(2197409, 'i', i, false, false, false);
                            J$.N(2197417, 'o', o, false, false, false);
                            J$.N(2197425, 'env', env, false, false, false);
                            J$.M(2195425, J$.R(2195401, 'assert', assert, false, true), 'object', false)(J$.R(2195409, 'config', config, false, false), J$.T(2195417, 'config', 21, false));
                            J$.M(2195465, J$.R(2195433, 'assert', assert, false, true), 'arrayOfObject', false)(J$.G(2195449, J$.R(2195441, 'config', config, false, false), 'options'), J$.T(2195457, 'config.options', 21, false));
                            J$.M(2195505, J$.R(2195473, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2195489, J$.R(2195481, 'config', config, false, false), 'interspersed'), J$.T(2195497, 'config.interspersed', 21, false));
                            var self = J$.W(2195521, 'self', J$.R(2195513, 'this', this, false, false), self, false, false);
                            J$.P(2195585, J$.R(2195529, 'this', this, false, false), 'interspersed', J$.C(136040, J$.B(265090, '!==', J$.G(2195545, J$.R(2195537, 'config', config, false, false), 'interspersed'), J$.T(2195553, undefined, 24, false))) ? J$.G(2195569, J$.R(2195561, 'config', config, false, false), 'interspersed') : J$.T(2195577, true, 23, false));
                            J$.P(2195649, J$.R(2195593, 'this', this, false, false), 'allowUnknown', J$.C(136048, J$.B(265098, '!==', J$.G(2195609, J$.R(2195601, 'config', config, false, false), 'allowUnknown'), J$.T(2195617, undefined, 24, false))) ? J$.G(2195633, J$.R(2195625, 'config', config, false, false), 'allowUnknown') : J$.T(2195641, false, 23, false));
                            J$.P(2195753, J$.R(2195657, 'this', this, false, false), 'options', J$.M(2195745, J$.G(2195673, J$.R(2195665, 'config', config, false, false), 'options'), 'map', false)(J$.T(2195737, function (o) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(2195713, arguments.callee, this, arguments);
                                            arguments = J$.N(2195721, 'arguments', arguments, true, false, false);
                                            o = J$.N(2195729, 'o', o, true, false, false);
                                            return J$.Rt(2195705, J$.F(2195697, J$.R(2195681, 'shallowCopy', shallowCopy, false, true), false)(J$.R(2195689, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2210209, J$e);
                                        } finally {
                                            if (J$.Fr(2210217))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                            J$.P(2195777, J$.R(2195761, 'this', this, false, false), 'optionFromName', J$.T(2195769, {}, 11, false));
                            J$.P(2195801, J$.R(2195785, 'this', this, false, false), 'optionFromEnv', J$.T(2195793, {}, 11, false));
                            for (var i = J$.W(2195817, 'i', J$.T(2195809, 0, 22, false), i, false, false); J$.C(136136, J$.B(265106, '<', J$.R(2195825, 'i', i, false, false), J$.G(2195849, J$.G(2195841, J$.R(2195833, 'this', this, false, false), 'options'), 'length'))); J$.B(265130, '-', i = J$.W(2195865, 'i', J$.B(265122, '+', J$.U(265114, '+', J$.R(2195857, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var o = J$.W(2195905, 'o', J$.G(2195897, J$.G(2195881, J$.R(2195873, 'this', this, false, false), 'options'), J$.R(2195889, 'i', i, false, false)), o, false, false);
                                if (J$.C(136064, J$.C(136056, J$.B(265138, '!==', J$.G(2195921, J$.R(2195913, 'o', o, false, false), 'group'), J$.T(2195929, undefined, 24, false))) ? J$.B(265146, '!==', J$.G(2195945, J$.R(2195937, 'o', o, false, false), 'group'), J$.T(2195953, null, 25, false)) : J$._())) {
                                    J$.M(2196017, J$.R(2195961, 'assert', assert, false, true), 'optionalString', false)(J$.G(2195977, J$.R(2195969, 'o', o, false, false), 'group'), J$.F(2196009, J$.R(2195985, 'format', format, false, true), false)(J$.T(2195993, 'config.options.%d.group', 21, false), J$.R(2196001, 'i', i, false, false)));
                                    continue;
                                }
                                J$.M(2196121, J$.R(2196025, 'assert', assert, false, true), 'ok', false)(J$.G(2196057, J$.R(2196033, 'optionTypes', optionTypes, false, true), J$.G(2196049, J$.R(2196041, 'o', o, false, false), 'type')), J$.F(2196113, J$.R(2196065, 'format', format, false, true), false)(J$.T(2196073, 'invalid config.options.%d.type: "%s" in %j', 21, false), J$.R(2196081, 'i', i, false, false), J$.G(2196097, J$.R(2196089, 'o', o, false, false), 'type'), J$.R(2196105, 'o', o, false, false)));
                                J$.M(2196185, J$.R(2196129, 'assert', assert, false, true), 'optionalString', false)(J$.G(2196145, J$.R(2196137, 'o', o, false, false), 'name'), J$.F(2196177, J$.R(2196153, 'format', format, false, true), false)(J$.T(2196161, 'config.options.%d.name', 21, false), J$.R(2196169, 'i', i, false, false)));
                                J$.M(2196249, J$.R(2196193, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2196209, J$.R(2196201, 'o', o, false, false), 'names'), J$.F(2196241, J$.R(2196217, 'format', format, false, true), false)(J$.T(2196225, 'config.options.%d.names', 21, false), J$.R(2196233, 'i', i, false, false)));
                                J$.M(2196361, J$.R(2196257, 'assert', assert, false, true), 'ok', false)(J$.C(136088, J$.C(136072, J$.G(2196273, J$.R(2196265, 'o', o, false, false), 'name')) ? J$._() : J$.G(2196289, J$.R(2196281, 'o', o, false, false), 'names')) ? J$.U(265154, '!', J$.C(136080, J$.G(2196305, J$.R(2196297, 'o', o, false, false), 'name')) ? J$.G(2196321, J$.R(2196313, 'o', o, false, false), 'names') : J$._()) : J$._(), J$.F(2196353, J$.R(2196329, 'format', format, false, true), false)(J$.T(2196337, 'exactly one of "name" or "names" required: %j', 21, false), J$.R(2196345, 'o', o, false, false)));
                                J$.M(2196425, J$.R(2196369, 'assert', assert, false, true), 'optionalString', false)(J$.G(2196385, J$.R(2196377, 'o', o, false, false), 'help'), J$.F(2196417, J$.R(2196393, 'format', format, false, true), false)(J$.T(2196401, 'config.options.%d.help', 21, false), J$.R(2196409, 'i', i, false, false)));
                                var env = J$.W(2196457, 'env', J$.C(136096, J$.G(2196441, J$.R(2196433, 'o', o, false, false), 'env')) ? J$._() : J$.T(2196449, [], 10, false), env, false, false);
                                if (J$.C(136104, J$.B(265170, '===', J$.U(265162, 'typeof', J$.R(2196465, 'env', env, false, false)), J$.T(2196473, 'string', 21, false)))) {
                                    env = J$.W(2196497, 'env', J$.T(2196489, [J$.R(2196481, 'env', env, false, false)], 10, false), env, false, false);
                                }
                                J$.M(2196553, J$.R(2196505, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.R(2196513, 'env', env, false, false), J$.F(2196545, J$.R(2196521, 'format', format, false, true), false)(J$.T(2196529, 'config.options.%d.env', 21, false), J$.R(2196537, 'i', i, false, false)));
                                J$.M(2196617, J$.R(2196561, 'assert', assert, false, true), 'optionalString', false)(J$.G(2196577, J$.R(2196569, 'o', o, false, false), 'helpGroup'), J$.F(2196609, J$.R(2196585, 'format', format, false, true), false)(J$.T(2196593, 'config.options.%d.helpGroup', 21, false), J$.R(2196601, 'i', i, false, false)));
                                J$.M(2196681, J$.R(2196625, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2196641, J$.R(2196633, 'o', o, false, false), 'helpWrap'), J$.F(2196673, J$.R(2196649, 'format', format, false, true), false)(J$.T(2196657, 'config.options.%d.helpWrap', 21, false), J$.R(2196665, 'i', i, false, false)));
                                J$.M(2196745, J$.R(2196689, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2196705, J$.R(2196697, 'o', o, false, false), 'hidden'), J$.F(2196737, J$.R(2196713, 'format', format, false, true), false)(J$.T(2196721, 'config.options.%d.hidden', 21, false), J$.R(2196729, 'i', i, false, false)));
                                if (J$.C(136112, J$.G(2196761, J$.R(2196753, 'o', o, false, false), 'name'))) {
                                    J$.P(2196801, J$.R(2196769, 'o', o, false, false), 'names', J$.T(2196793, [J$.G(2196785, J$.R(2196777, 'o', o, false, false), 'name')], 10, false));
                                } else {
                                    J$.M(2196881, J$.R(2196809, 'assert', assert, false, true), 'string', false)(J$.G(2196841, J$.G(2196825, J$.R(2196817, 'o', o, false, false), 'names'), J$.T(2196833, 0, 22, false)), J$.F(2196873, J$.R(2196849, 'format', format, false, true), false)(J$.T(2196857, 'config.options.%d.names is empty', 21, false), J$.R(2196865, 'i', i, false, false)));
                                }
                                J$.P(2196945, J$.R(2196889, 'o', o, false, false), 'key', J$.F(2196937, J$.R(2196897, 'optionKeyFromName', optionKeyFromName, false, true), false)(J$.G(2196929, J$.G(2196913, J$.R(2196905, 'o', o, false, false), 'names'), J$.T(2196921, 0, 22, false))));
                                J$.M(2197161, J$.G(2196961, J$.R(2196953, 'o', o, false, false), 'names'), 'forEach', false)(J$.T(2197153, function (n) {
                                    jalangiLabel17:
                                        while (true) {
                                            try {
                                                J$.Fe(2197129, arguments.callee, this, arguments);
                                                arguments = J$.N(2197137, 'arguments', arguments, true, false, false);
                                                n = J$.N(2197145, 'n', n, true, false, false);
                                                if (J$.C(136120, J$.G(2196993, J$.G(2196977, J$.R(2196969, 'self', self, false, false), 'optionFromName'), J$.R(2196985, 'n', n, false, false)))) {
                                                    throw J$.F(2197081, J$.I(typeof Error === 'undefined' ? Error = J$.R(2197001, 'Error', undefined, true, true) : Error = J$.R(2197001, 'Error', Error, true, true)), true)(J$.F(2197073, J$.R(2197009, 'format', format, false, true), false)(J$.T(2197017, 'option name collision: "%s" used in %j and %j', 21, false), J$.R(2197025, 'n', n, false, false), J$.G(2197057, J$.G(2197041, J$.R(2197033, 'self', self, false, false), 'optionFromName'), J$.R(2197049, 'n', n, false, false)), J$.R(2197065, 'o', o, false, false)));
                                                }
                                                J$.P(2197121, J$.G(2197097, J$.R(2197089, 'self', self, false, false), 'optionFromName'), J$.R(2197105, 'n', n, false, false), J$.R(2197113, 'o', o, false, false));
                                            } catch (J$e) {
                                                J$.Ex(2210225, J$e);
                                            } finally {
                                                if (J$.Fr(2210233))
                                                    continue jalangiLabel17;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(2197369, J$.R(2197169, 'env', env, false, false), 'forEach', false)(J$.T(2197361, function (n) {
                                    jalangiLabel18:
                                        while (true) {
                                            try {
                                                J$.Fe(2197337, arguments.callee, this, arguments);
                                                arguments = J$.N(2197345, 'arguments', arguments, true, false, false);
                                                n = J$.N(2197353, 'n', n, true, false, false);
                                                if (J$.C(136128, J$.G(2197201, J$.G(2197185, J$.R(2197177, 'self', self, false, false), 'optionFromEnv'), J$.R(2197193, 'n', n, false, false)))) {
                                                    throw J$.F(2197289, J$.I(typeof Error === 'undefined' ? Error = J$.R(2197209, 'Error', undefined, true, true) : Error = J$.R(2197209, 'Error', Error, true, true)), true)(J$.F(2197281, J$.R(2197217, 'format', format, false, true), false)(J$.T(2197225, 'option env collision: "%s" used in %j and %j', 21, false), J$.R(2197233, 'n', n, false, false), J$.G(2197265, J$.G(2197249, J$.R(2197241, 'self', self, false, false), 'optionFromEnv'), J$.R(2197257, 'n', n, false, false)), J$.R(2197273, 'o', o, false, false)));
                                                }
                                                J$.P(2197329, J$.G(2197305, J$.R(2197297, 'self', self, false, false), 'optionFromEnv'), J$.R(2197313, 'n', n, false, false), J$.R(2197321, 'o', o, false, false));
                                            } catch (J$e) {
                                                J$.Ex(2210241, J$e);
                                            } finally {
                                                if (J$.Fr(2210249))
                                                    continue jalangiLabel18;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2210257, J$e);
                        } finally {
                            if (J$.Fr(2210265))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bashCompletionSpecFromOptions(args) {
                jalangiLabel36:
                    while (true) {
                        try {
                            J$.Fe(2207369, arguments.callee, this, arguments);
                            arguments = J$.N(2207377, 'arguments', arguments, true, false, false);
                            args = J$.N(2207385, 'args', args, true, false, false);
                            J$.N(2207393, 'context', context, false, false, false);
                            J$.N(2207401, 'includeHidden', includeHidden, false, false, false);
                            J$.N(2207409, 'spec', spec, false, false, false);
                            J$.N(2207417, 'shortopts', shortopts, false, false, false);
                            J$.N(2207425, 'longopts', longopts, false, false, false);
                            J$.N(2207433, 'optargs', optargs, false, false, false);
                            J$.M(2205937, J$.R(2205913, 'assert', assert, false, true), 'object', false)(J$.R(2205921, 'args', args, false, false), J$.T(2205929, 'args', 21, false));
                            J$.M(2205977, J$.R(2205945, 'assert', assert, false, true), 'object', false)(J$.G(2205961, J$.R(2205953, 'args', args, false, false), 'options'), J$.T(2205969, 'args.options', 21, false));
                            J$.M(2206017, J$.R(2205985, 'assert', assert, false, true), 'optionalString', false)(J$.G(2206001, J$.R(2205993, 'args', args, false, false), 'context'), J$.T(2206009, 'args.context', 21, false));
                            J$.M(2206057, J$.R(2206025, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2206041, J$.R(2206033, 'args', args, false, false), 'includeHidden'), J$.T(2206049, 'args.includeHidden', 21, false));
                            J$.M(2206097, J$.R(2206065, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2206081, J$.R(2206073, 'args', args, false, false), 'argtypes'), J$.T(2206089, 'args.argtypes', 21, false));
                            var context = J$.W(2206129, 'context', J$.C(136896, J$.G(2206113, J$.R(2206105, 'args', args, false, false), 'context')) ? J$._() : J$.T(2206121, '', 21, false), context, false, false);
                            var includeHidden = J$.W(2206185, 'includeHidden', J$.C(136904, J$.B(266250, '===', J$.G(2206145, J$.R(2206137, 'args', args, false, false), 'includeHidden'), J$.T(2206153, undefined, 24, false))) ? J$.T(2206161, false, 23, false) : J$.G(2206177, J$.R(2206169, 'args', args, false, false), 'includeHidden'), includeHidden, false, false);
                            var spec = J$.W(2206201, 'spec', J$.T(2206193, [], 10, false), spec, false, false);
                            var shortopts = J$.W(2206217, 'shortopts', J$.T(2206209, [], 10, false), shortopts, false, false);
                            var longopts = J$.W(2206233, 'longopts', J$.T(2206225, [], 10, false), longopts, false, false);
                            var optargs = J$.W(2206249, 'optargs', J$.T(2206241, [], 10, false), optargs, false, false);
                            J$.M(2206993, J$.C(136912, J$.G(2206265, J$.R(2206257, 'args', args, false, false), 'options')) ? J$._() : J$.T(2206273, [], 10, false), 'forEach', false)(J$.T(2206985, function (o) {
                                jalangiLabel35:
                                    while (true) {
                                        try {
                                            J$.Fe(2206937, arguments.callee, this, arguments);
                                            arguments = J$.N(2206945, 'arguments', arguments, true, false, false);
                                            o = J$.N(2206953, 'o', o, true, false, false);
                                            J$.N(2206961, 'optNames', optNames, false, false, false);
                                            J$.N(2206969, 'optType', optType, false, false, false);
                                            J$.N(2206977, 'completionType', completionType, false, false, false);
                                            if (J$.C(136928, J$.C(136920, J$.B(266258, '!==', J$.G(2206289, J$.R(2206281, 'o', o, false, false), 'group'), J$.T(2206297, undefined, 24, false))) ? J$.B(266266, '!==', J$.G(2206313, J$.R(2206305, 'o', o, false, false), 'group'), J$.T(2206321, null, 25, false)) : J$._())) {
                                                return J$.Rt(2206329, undefined);
                                            }
                                            var optNames = J$.W(2206377, 'optNames', J$.C(136936, J$.G(2206345, J$.R(2206337, 'o', o, false, false), 'names')) ? J$._() : J$.T(2206369, [J$.G(2206361, J$.R(2206353, 'o', o, false, false), 'name')], 10, false), optNames, false, false);
                                            var optType = J$.W(2206417, 'optType', J$.F(2206409, J$.R(2206385, 'getOptionType', getOptionType, false, true), false)(J$.G(2206401, J$.R(2206393, 'o', o, false, false), 'type')), optType, false, false);
                                            if (J$.C(137024, J$.G(2206433, J$.R(2206425, 'optType', optType, false, false), 'takesArg'))) {
                                                var completionType = J$.W(2206489, 'completionType', J$.C(136952, J$.C(136944, J$.G(2206449, J$.R(2206441, 'o', o, false, false), 'completionType')) ? J$._() : J$.G(2206465, J$.R(2206457, 'optType', optType, false, false), 'completionType')) ? J$._() : J$.G(2206481, J$.R(2206473, 'o', o, false, false), 'type'), completionType, false, false);
                                                J$.M(2206769, J$.R(2206497, 'optNames', optNames, false, false), 'forEach', false)(J$.T(2206761, function (optName) {
                                                    jalangiLabel33:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2206737, arguments.callee, this, arguments);
                                                                arguments = J$.N(2206745, 'arguments', arguments, true, false, false);
                                                                optName = J$.N(2206753, 'optName', optName, true, false, false);
                                                                if (J$.C(136992, J$.B(266274, '===', J$.G(2206513, J$.R(2206505, 'optName', optName, false, false), 'length'), J$.T(2206521, 1, 22, false)))) {
                                                                    if (J$.C(136968, J$.C(136960, J$.R(2206529, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(266282, '!', J$.G(2206545, J$.R(2206537, 'o', o, false, false), 'hidden')))) {
                                                                        J$.M(2206577, J$.R(2206553, 'shortopts', shortopts, false, false), 'push', false)(J$.B(266290, '+', J$.T(2206561, '-', 21, false), J$.R(2206569, 'optName', optName, false, false)));
                                                                    }
                                                                    J$.M(2206625, J$.R(2206585, 'optargs', optargs, false, false), 'push', false)(J$.B(266314, '+', J$.B(266306, '+', J$.B(266298, '+', J$.T(2206593, '-', 21, false), J$.R(2206601, 'optName', optName, false, false)), J$.T(2206609, '=', 21, false)), J$.R(2206617, 'completionType', completionType, false, false)));
                                                                } else {
                                                                    if (J$.C(136984, J$.C(136976, J$.R(2206633, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(266322, '!', J$.G(2206649, J$.R(2206641, 'o', o, false, false), 'hidden')))) {
                                                                        J$.M(2206681, J$.R(2206657, 'longopts', longopts, false, false), 'push', false)(J$.B(266330, '+', J$.T(2206665, '--', 21, false), J$.R(2206673, 'optName', optName, false, false)));
                                                                    }
                                                                    J$.M(2206729, J$.R(2206689, 'optargs', optargs, false, false), 'push', false)(J$.B(266354, '+', J$.B(266346, '+', J$.B(266338, '+', J$.T(2206697, '--', 21, false), J$.R(2206705, 'optName', optName, false, false)), J$.T(2206713, '=', 21, false)), J$.R(2206721, 'completionType', completionType, false, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(2210481, J$e);
                                                            } finally {
                                                                if (J$.Fr(2210489))
                                                                    continue jalangiLabel33;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } else {
                                                J$.M(2206929, J$.R(2206777, 'optNames', optNames, false, false), 'forEach', false)(J$.T(2206921, function (optName) {
                                                    jalangiLabel34:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2206897, arguments.callee, this, arguments);
                                                                arguments = J$.N(2206905, 'arguments', arguments, true, false, false);
                                                                optName = J$.N(2206913, 'optName', optName, true, false, false);
                                                                if (J$.C(137016, J$.C(137000, J$.R(2206785, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(266362, '!', J$.G(2206801, J$.R(2206793, 'o', o, false, false), 'hidden')))) {
                                                                    if (J$.C(137008, J$.B(266370, '===', J$.G(2206817, J$.R(2206809, 'optName', optName, false, false), 'length'), J$.T(2206825, 1, 22, false)))) {
                                                                        J$.M(2206857, J$.R(2206833, 'shortopts', shortopts, false, false), 'push', false)(J$.B(266378, '+', J$.T(2206841, '-', 21, false), J$.R(2206849, 'optName', optName, false, false)));
                                                                    } else {
                                                                        J$.M(2206889, J$.R(2206865, 'longopts', longopts, false, false), 'push', false)(J$.B(266386, '+', J$.T(2206873, '--', 21, false), J$.R(2206881, 'optName', optName, false, false)));
                                                                    }
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(2210497, J$e);
                                                            } finally {
                                                                if (J$.Fr(2210505))
                                                                    continue jalangiLabel34;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2210513, J$e);
                                        } finally {
                                            if (J$.Fr(2210521))
                                                continue jalangiLabel35;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(2207073, J$.R(2207001, 'spec', spec, false, false), 'push', false)(J$.F(2207065, J$.R(2207009, 'format', format, false, true), false)(J$.T(2207017, 'local cmd%s_shortopts="%s"', 21, false), J$.R(2207025, 'context', context, false, false), J$.M(2207057, J$.M(2207041, J$.R(2207033, 'shortopts', shortopts, false, false), 'sort', false)(), 'join', false)(J$.T(2207049, ' ', 21, false))));
                            J$.M(2207153, J$.R(2207081, 'spec', spec, false, false), 'push', false)(J$.F(2207145, J$.R(2207089, 'format', format, false, true), false)(J$.T(2207097, 'local cmd%s_longopts="%s"', 21, false), J$.R(2207105, 'context', context, false, false), J$.M(2207137, J$.M(2207121, J$.R(2207113, 'longopts', longopts, false, false), 'sort', false)(), 'join', false)(J$.T(2207129, ' ', 21, false))));
                            J$.M(2207233, J$.R(2207161, 'spec', spec, false, false), 'push', false)(J$.F(2207225, J$.R(2207169, 'format', format, false, true), false)(J$.T(2207177, 'local cmd%s_optargs="%s"', 21, false), J$.R(2207185, 'context', context, false, false), J$.M(2207217, J$.M(2207201, J$.R(2207193, 'optargs', optargs, false, false), 'sort', false)(), 'join', false)(J$.T(2207209, ' ', 21, false))));
                            if (J$.C(137032, J$.G(2207249, J$.R(2207241, 'args', args, false, false), 'argtypes'))) {
                                J$.M(2207329, J$.R(2207257, 'spec', spec, false, false), 'push', false)(J$.F(2207321, J$.R(2207265, 'format', format, false, true), false)(J$.T(2207273, 'local cmd%s_argtypes="%s"', 21, false), J$.R(2207281, 'context', context, false, false), J$.M(2207313, J$.G(2207297, J$.R(2207289, 'args', args, false, false), 'argtypes'), 'join', false)(J$.T(2207305, ' ', 21, false))));
                            }
                            return J$.Rt(2207361, J$.M(2207353, J$.R(2207337, 'spec', spec, false, false), 'join', false)(J$.T(2207345, '\n', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2210529, J$e);
                        } finally {
                            if (J$.Fr(2210537))
                                continue jalangiLabel36;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bashCompletionFromOptions(args) {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(2207873, arguments.callee, this, arguments);
                            arguments = J$.N(2207881, 'arguments', arguments, true, false, false);
                            args = J$.N(2207889, 'args', args, true, false, false);
                            J$.N(2207897, 'data', data, false, false, false);
                            J$.N(2207905, 'template', template, false, false, false);
                            J$.M(2207465, J$.R(2207441, 'assert', assert, false, true), 'object', false)(J$.R(2207449, 'args', args, false, false), J$.T(2207457, 'args', 21, false));
                            J$.M(2207505, J$.R(2207473, 'assert', assert, false, true), 'object', false)(J$.G(2207489, J$.R(2207481, 'args', args, false, false), 'options'), J$.T(2207497, 'args.options', 21, false));
                            J$.M(2207545, J$.R(2207513, 'assert', assert, false, true), 'string', false)(J$.G(2207529, J$.R(2207521, 'args', args, false, false), 'name'), J$.T(2207537, 'args.name', 21, false));
                            J$.M(2207585, J$.R(2207553, 'assert', assert, false, true), 'optionalString', false)(J$.G(2207569, J$.R(2207561, 'args', args, false, false), 'specExtra'), J$.T(2207577, 'args.specExtra', 21, false));
                            J$.M(2207625, J$.R(2207593, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2207609, J$.R(2207601, 'args', args, false, false), 'argtypes'), J$.T(2207617, 'args.argtypes', 21, false));
                            var data = J$.W(2207729, 'data', J$.T(2207721, {
                                name: J$.G(2207641, J$.R(2207633, 'args', args, false, false), 'name'),
                                date: J$.F(2207657, J$.I(typeof Date === 'undefined' ? Date = J$.R(2207649, 'Date', undefined, true, true) : Date = J$.R(2207649, 'Date', Date, true, true)), true)(),
                                spec: J$.F(2207713, J$.R(2207665, 'bashCompletionSpecFromOptions', bashCompletionSpecFromOptions, false, true), false)(J$.T(2207705, {
                                    options: J$.G(2207681, J$.R(2207673, 'args', args, false, false), 'options'),
                                    argtypes: J$.G(2207697, J$.R(2207689, 'args', args, false, false), 'argtypes')
                                }, 11, false))
                            }, 11, false), data, false, false);
                            if (J$.C(137040, J$.G(2207745, J$.R(2207737, 'args', args, false, false), 'specExtra'))) {
                                J$.A(2207785, J$.R(2207753, 'data', data, false, false), 'spec', '+')(J$.B(266394, '+', J$.T(2207761, '\n\n', 21, false), J$.G(2207777, J$.R(2207769, 'args', args, false, false), 'specExtra')));
                            }
                            var template = J$.W(2207825, 'template', J$.M(2207817, J$.R(2207793, 'fs', fs, false, true), 'readFileSync', false)(J$.R(2207801, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, true), J$.T(2207809, 'utf8', 21, false)), template, false, false);
                            return J$.Rt(2207865, J$.F(2207857, J$.R(2207833, 'renderTemplate', renderTemplate, false, true), false)(J$.R(2207841, 'template', template, false, false), J$.R(2207849, 'data', data, false, false)));
                        } catch (J$e) {
                            J$.Ex(2210545, J$e);
                        } finally {
                            if (J$.Fr(2210553))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createParser(config) {
                jalangiLabel38:
                    while (true) {
                        try {
                            J$.Fe(2207945, arguments.callee, this, arguments);
                            arguments = J$.N(2207953, 'arguments', arguments, true, false, false);
                            config = J$.N(2207961, 'config', config, true, false, false);
                            return J$.Rt(2207937, J$.F(2207929, J$.R(2207913, 'Parser', Parser, false, true), true)(J$.R(2207921, 'config', config, false, false)));
                        } catch (J$e) {
                            J$.Ex(2210561, J$e);
                        } finally {
                            if (J$.Fr(2210569))
                                continue jalangiLabel38;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parse(config) {
                jalangiLabel39:
                    while (true) {
                        try {
                            J$.Fe(2208257, arguments.callee, this, arguments);
                            arguments = J$.N(2208265, 'arguments', arguments, true, false, false);
                            config = J$.N(2208273, 'config', config, true, false, false);
                            J$.N(2208281, 'argv', argv, false, false, false);
                            J$.N(2208289, 'env', env, false, false, false);
                            J$.N(2208297, 'parser', parser, false, false, false);
                            J$.M(2207993, J$.R(2207969, 'assert', assert, false, true), 'object', false)(J$.R(2207977, 'config', config, false, false), J$.T(2207985, 'config', 21, false));
                            J$.M(2208033, J$.R(2208001, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2208017, J$.R(2208009, 'config', config, false, false), 'argv'), J$.T(2208025, 'config.argv', 21, false));
                            J$.M(2208073, J$.R(2208041, 'assert', assert, false, true), 'optionalObject', false)(J$.G(2208057, J$.R(2208049, 'config', config, false, false), 'env'), J$.T(2208065, 'config.env', 21, false));
                            var config = J$.W(2208105, 'config', J$.F(2208097, J$.R(2208081, 'shallowCopy', shallowCopy, false, true), false)(J$.R(2208089, 'config', config, false, false)), config, false, false);
                            var argv = J$.W(2208129, 'argv', J$.G(2208121, J$.R(2208113, 'config', config, false, false), 'argv'), argv, false, false);
                            J$.B(266402, 'delete', J$.R(2208137, 'config', config, false, false), 'argv');
                            var env = J$.W(2208161, 'env', J$.G(2208153, J$.R(2208145, 'config', config, false, false), 'env'), env, false, false);
                            J$.B(266410, 'delete', J$.R(2208169, 'config', config, false, false), 'env');
                            var parser = J$.W(2208201, 'parser', J$.F(2208193, J$.R(2208177, 'Parser', Parser, false, true), true)(J$.R(2208185, 'config', config, false, false)), parser, false, false);
                            return J$.Rt(2208249, J$.M(2208241, J$.R(2208209, 'parser', parser, false, false), 'parse', false)(J$.T(2208233, {
                                argv: J$.R(2208217, 'argv', argv, false, false),
                                env: J$.R(2208225, 'env', env, false, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(2210577, J$e);
                        } finally {
                            if (J$.Fr(2210585))
                                continue jalangiLabel39;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addOptionType(optionType) {
                jalangiLabel40:
                    while (true) {
                        try {
                            J$.Fe(2208737, arguments.callee, this, arguments);
                            arguments = J$.N(2208745, 'arguments', arguments, true, false, false);
                            optionType = J$.N(2208753, 'optionType', optionType, true, false, false);
                            J$.M(2208329, J$.R(2208305, 'assert', assert, false, true), 'object', false)(J$.R(2208313, 'optionType', optionType, false, false), J$.T(2208321, 'optionType', 21, false));
                            J$.M(2208369, J$.R(2208337, 'assert', assert, false, true), 'string', false)(J$.G(2208353, J$.R(2208345, 'optionType', optionType, false, false), 'name'), J$.T(2208361, 'optionType.name', 21, false));
                            J$.M(2208409, J$.R(2208377, 'assert', assert, false, true), 'bool', false)(J$.G(2208393, J$.R(2208385, 'optionType', optionType, false, false), 'takesArg'), J$.T(2208401, 'optionType.takesArg', 21, false));
                            if (J$.C(137048, J$.G(2208425, J$.R(2208417, 'optionType', optionType, false, false), 'takesArg'))) {
                                J$.M(2208465, J$.R(2208433, 'assert', assert, false, true), 'string', false)(J$.G(2208449, J$.R(2208441, 'optionType', optionType, false, false), 'helpArg'), J$.T(2208457, 'optionType.helpArg', 21, false));
                            }
                            J$.M(2208505, J$.R(2208473, 'assert', assert, false, true), 'func', false)(J$.G(2208489, J$.R(2208481, 'optionType', optionType, false, false), 'parseArg'), J$.T(2208497, 'optionType.parseArg', 21, false));
                            J$.M(2208545, J$.R(2208513, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2208529, J$.R(2208521, 'optionType', optionType, false, false), 'array'), J$.T(2208537, 'optionType.array', 21, false));
                            J$.M(2208585, J$.R(2208553, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2208569, J$.R(2208561, 'optionType', optionType, false, false), 'arrayFlatten'), J$.T(2208577, 'optionType.arrayFlatten', 21, false));
                            J$.P(2208729, J$.R(2208593, 'optionTypes', optionTypes, false, true), J$.G(2208609, J$.R(2208601, 'optionType', optionType, false, false), 'name'), J$.T(2208721, {
                                takesArg: J$.G(2208625, J$.R(2208617, 'optionType', optionType, false, false), 'takesArg'),
                                helpArg: J$.G(2208641, J$.R(2208633, 'optionType', optionType, false, false), 'helpArg'),
                                parseArg: J$.G(2208657, J$.R(2208649, 'optionType', optionType, false, false), 'parseArg'),
                                array: J$.G(2208673, J$.R(2208665, 'optionType', optionType, false, false), 'array'),
                                arrayFlatten: J$.G(2208689, J$.R(2208681, 'optionType', optionType, false, false), 'arrayFlatten'),
                                'default': J$.G(2208713, J$.R(2208697, 'optionType', optionType, false, false), J$.T(2208705, 'default', 21, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2210593, J$e);
                        } finally {
                            if (J$.Fr(2210601))
                                continue jalangiLabel40;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getOptionType(name) {
                jalangiLabel41:
                    while (true) {
                        try {
                            J$.Fe(2208825, arguments.callee, this, arguments);
                            arguments = J$.N(2208833, 'arguments', arguments, true, false, false);
                            name = J$.N(2208841, 'name', name, true, false, false);
                            J$.M(2208785, J$.R(2208761, 'assert', assert, false, true), 'string', false)(J$.R(2208769, 'name', name, false, false), J$.T(2208777, 'name', 21, false));
                            return J$.Rt(2208817, J$.G(2208809, J$.R(2208793, 'optionTypes', optionTypes, false, true), J$.R(2208801, 'name', name, false, false)));
                        } catch (J$e) {
                            J$.Ex(2210609, J$e);
                        } finally {
                            if (J$.Fr(2210617))
                                continue jalangiLabel41;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function synopsisFromOpt(o) {
                jalangiLabel43:
                    while (true) {
                        try {
                            J$.Fe(2209361, arguments.callee, this, arguments);
                            arguments = J$.N(2209369, 'arguments', arguments, true, false, false);
                            o = J$.N(2209377, 'o', o, true, false, false);
                            J$.N(2209385, 'names', names, false, false, false);
                            J$.N(2209393, 'type', type, false, false, false);
                            J$.N(2209401, 'helpArg', helpArg, false, false, false);
                            J$.N(2209409, 'parts', parts, false, false, false);
                            J$.M(2208873, J$.R(2208849, 'assert', assert, false, true), 'object', false)(J$.R(2208857, 'o', o, false, false), J$.T(2208865, 'o', 21, false));
                            if (J$.C(137056, J$.M(2208897, J$.R(2208881, 'o', o, false, false), 'hasOwnProperty', false)(J$.T(2208889, 'group', 21, false)))) {
                                return J$.Rt(2208913, J$.T(2208905, null, 25, false));
                            }
                            var names = J$.W(2208961, 'names', J$.C(137064, J$.G(2208929, J$.R(2208921, 'o', o, false, false), 'names')) ? J$._() : J$.T(2208953, [J$.G(2208945, J$.R(2208937, 'o', o, false, false), 'name')], 10, false), names, false, false);
                            var type = J$.W(2209001, 'type', J$.F(2208993, J$.R(2208969, 'getOptionType', getOptionType, false, true), false)(J$.G(2208985, J$.R(2208977, 'o', o, false, false), 'type')), type, false, false);
                            var helpArg = J$.W(2209057, 'helpArg', J$.C(137088, J$.C(137080, J$.G(2209017, J$.R(2209009, 'o', o, false, false), 'helpArg')) ? J$._() : J$.C(137072, J$.R(2209025, 'type', type, false, false)) ? J$.G(2209041, J$.R(2209033, 'type', type, false, false), 'helpArg') : J$._()) ? J$._() : J$.T(2209049, 'ARG', 21, false), helpArg, false, false);
                            var parts = J$.W(2209073, 'parts', J$.T(2209065, [], 10, false), parts, false, false);
                            J$.M(2209305, J$.R(2209081, 'names', names, false, false), 'forEach', false)(J$.T(2209297, function (name) {
                                jalangiLabel42:
                                    while (true) {
                                        try {
                                            J$.Fe(2209265, arguments.callee, this, arguments);
                                            arguments = J$.N(2209273, 'arguments', arguments, true, false, false);
                                            name = J$.N(2209281, 'name', name, true, false, false);
                                            J$.N(2209289, 'part', part, false, false, false);
                                            var part = J$.W(2209137, 'part', J$.B(266426, '+', J$.C(137096, J$.B(266418, '===', J$.G(2209097, J$.R(2209089, 'name', name, false, false), 'length'), J$.T(2209105, 1, 22, false))) ? J$.T(2209113, '-', 21, false) : J$.T(2209121, '--', 21, false), J$.R(2209129, 'name', name, false, false)), part, false, false);
                                            if (J$.C(137120, J$.C(137104, J$.R(2209145, 'type', type, false, false)) ? J$.G(2209161, J$.R(2209153, 'type', type, false, false), 'takesArg') : J$._())) {
                                                part = J$.W(2209233, 'part', J$.B(266458, '+', J$.R(2209225, 'part', part, false, false), J$.C(137112, J$.B(266434, '===', J$.G(2209177, J$.R(2209169, 'name', name, false, false), 'length'), J$.T(2209185, 1, 22, false))) ? J$.B(266442, '+', J$.T(2209193, ' ', 21, false), J$.R(2209201, 'helpArg', helpArg, false, false)) : J$.B(266450, '+', J$.T(2209209, '=', 21, false), J$.R(2209217, 'helpArg', helpArg, false, false))), part, false, false);
                                            }
                                            J$.M(2209257, J$.R(2209241, 'parts', parts, false, false), 'push', false)(J$.R(2209249, 'part', part, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2210625, J$e);
                                        } finally {
                                            if (J$.Fr(2210633))
                                                continue jalangiLabel42;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2209353, J$.B(266474, '+', J$.B(266466, '+', J$.T(2209313, '[ ', 21, false), J$.M(2209337, J$.R(2209321, 'parts', parts, false, false), 'join', false)(J$.T(2209329, ' | ', 21, false))), J$.T(2209345, ' ]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2210641, J$e);
                        } finally {
                            if (J$.Fr(2210649))
                                continue jalangiLabel43;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2209569, 'assert', assert, false, false, false);
            J$.N(2209577, 'format', format, false, false, false);
            J$.N(2209585, 'fs', fs, false, false, false);
            J$.N(2209593, 'path', path, false, false, false);
            J$.N(2209601, 'DEBUG', DEBUG, false, false, false);
            J$.N(2209609, 'debug', debug, false, false, false);
            renderTemplate = J$.N(2209625, 'renderTemplate', J$.T(2209617, renderTemplate, 12, false), true, false, false);
            shallowCopy = J$.N(2209641, 'shallowCopy', J$.T(2209633, shallowCopy, 12, false), true, false, false);
            space = J$.N(2209657, 'space', J$.T(2209649, space, 12, false), true, false, false);
            makeIndent = J$.N(2209673, 'makeIndent', J$.T(2209665, makeIndent, 12, false), true, false, false);
            textwrap = J$.N(2209689, 'textwrap', J$.T(2209681, textwrap, 12, false), true, false, false);
            optionKeyFromName = J$.N(2209705, 'optionKeyFromName', J$.T(2209697, optionKeyFromName, 12, false), true, false, false);
            parseBool = J$.N(2209721, 'parseBool', J$.T(2209713, parseBool, 12, false), true, false, false);
            parseString = J$.N(2209737, 'parseString', J$.T(2209729, parseString, 12, false), true, false, false);
            parseNumber = J$.N(2209753, 'parseNumber', J$.T(2209745, parseNumber, 12, false), true, false, false);
            parseInteger = J$.N(2209769, 'parseInteger', J$.T(2209761, parseInteger, 12, false), true, false, false);
            parsePositiveInteger = J$.N(2209785, 'parsePositiveInteger', J$.T(2209777, parsePositiveInteger, 12, false), true, false, false);
            parseDate = J$.N(2209801, 'parseDate', J$.T(2209793, parseDate, 12, false), true, false, false);
            J$.N(2209809, 'optionTypes', optionTypes, false, false, false);
            Parser = J$.N(2209825, 'Parser', J$.T(2209817, Parser, 12, false), true, false, false);
            J$.N(2209833, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, false, false);
            bashCompletionSpecFromOptions = J$.N(2209849, 'bashCompletionSpecFromOptions', J$.T(2209841, bashCompletionSpecFromOptions, 12, false), true, false, false);
            bashCompletionFromOptions = J$.N(2209865, 'bashCompletionFromOptions', J$.T(2209857, bashCompletionFromOptions, 12, false), true, false, false);
            createParser = J$.N(2209881, 'createParser', J$.T(2209873, createParser, 12, false), true, false, false);
            parse = J$.N(2209897, 'parse', J$.T(2209889, parse, 12, false), true, false, false);
            addOptionType = J$.N(2209913, 'addOptionType', J$.T(2209905, addOptionType, 12, false), true, false, false);
            getOptionType = J$.N(2209929, 'getOptionType', J$.T(2209921, getOptionType, 12, false), true, false, false);
            synopsisFromOpt = J$.N(2209945, 'synopsisFromOpt', J$.T(2209937, synopsisFromOpt, 12, false), true, false, false);
            J$.T(2190361, 'use strict', 21, false);
            J$.F(2190385, J$.I(typeof require === 'undefined' ? require = J$.R(2190369, 'require', undefined, true, true) : require = J$.R(2190369, 'require', require, true, true)), false)(J$.T(2190377, 'core-js/modules/es.array.concat', 21, false));
            J$.F(2190409, J$.I(typeof require === 'undefined' ? require = J$.R(2190393, 'require', undefined, true, true) : require = J$.R(2190393, 'require', require, true, true)), false)(J$.T(2190401, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2190433, J$.I(typeof require === 'undefined' ? require = J$.R(2190417, 'require', undefined, true, true) : require = J$.R(2190417, 'require', require, true, true)), false)(J$.T(2190425, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2190457, J$.I(typeof require === 'undefined' ? require = J$.R(2190441, 'require', undefined, true, true) : require = J$.R(2190441, 'require', require, true, true)), false)(J$.T(2190449, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2190481, J$.I(typeof require === 'undefined' ? require = J$.R(2190465, 'require', undefined, true, true) : require = J$.R(2190465, 'require', require, true, true)), false)(J$.T(2190473, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2190505, J$.I(typeof require === 'undefined' ? require = J$.R(2190489, 'require', undefined, true, true) : require = J$.R(2190489, 'require', require, true, true)), false)(J$.T(2190497, 'core-js/modules/es.array.join', 21, false));
            J$.F(2190529, J$.I(typeof require === 'undefined' ? require = J$.R(2190513, 'require', undefined, true, true) : require = J$.R(2190513, 'require', require, true, true)), false)(J$.T(2190521, 'core-js/modules/es.array.map', 21, false));
            J$.F(2190553, J$.I(typeof require === 'undefined' ? require = J$.R(2190537, 'require', undefined, true, true) : require = J$.R(2190537, 'require', require, true, true)), false)(J$.T(2190545, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2190577, J$.I(typeof require === 'undefined' ? require = J$.R(2190561, 'require', undefined, true, true) : require = J$.R(2190561, 'require', require, true, true)), false)(J$.T(2190569, 'core-js/modules/es.array.sort', 21, false));
            J$.F(2190601, J$.I(typeof require === 'undefined' ? require = J$.R(2190585, 'require', undefined, true, true) : require = J$.R(2190585, 'require', require, true, true)), false)(J$.T(2190593, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2190625, J$.I(typeof require === 'undefined' ? require = J$.R(2190609, 'require', undefined, true, true) : require = J$.R(2190609, 'require', require, true, true)), false)(J$.T(2190617, 'core-js/modules/es.function.name', 21, false));
            J$.F(2190649, J$.I(typeof require === 'undefined' ? require = J$.R(2190633, 'require', undefined, true, true) : require = J$.R(2190633, 'require', require, true, true)), false)(J$.T(2190641, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(2190673, J$.I(typeof require === 'undefined' ? require = J$.R(2190657, 'require', undefined, true, true) : require = J$.R(2190657, 'require', require, true, true)), false)(J$.T(2190665, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2190697, J$.I(typeof require === 'undefined' ? require = J$.R(2190681, 'require', undefined, true, true) : require = J$.R(2190681, 'require', require, true, true)), false)(J$.T(2190689, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2190721, J$.I(typeof require === 'undefined' ? require = J$.R(2190705, 'require', undefined, true, true) : require = J$.R(2190705, 'require', require, true, true)), false)(J$.T(2190713, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2190745, J$.I(typeof require === 'undefined' ? require = J$.R(2190729, 'require', undefined, true, true) : require = J$.R(2190729, 'require', require, true, true)), false)(J$.T(2190737, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2190769, J$.I(typeof require === 'undefined' ? require = J$.R(2190753, 'require', undefined, true, true) : require = J$.R(2190753, 'require', require, true, true)), false)(J$.T(2190761, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2190793, J$.I(typeof require === 'undefined' ? require = J$.R(2190777, 'require', undefined, true, true) : require = J$.R(2190777, 'require', require, true, true)), false)(J$.T(2190785, 'core-js/modules/es.string.split', 21, false));
            J$.F(2190817, J$.I(typeof require === 'undefined' ? require = J$.R(2190801, 'require', undefined, true, true) : require = J$.R(2190801, 'require', require, true, true)), false)(J$.T(2190809, 'core-js/modules/es.string.trim', 21, false));
            J$.F(2190841, J$.I(typeof require === 'undefined' ? require = J$.R(2190825, 'require', undefined, true, true) : require = J$.R(2190825, 'require', require, true, true)), false)(J$.T(2190833, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(2190865, J$.I(typeof require === 'undefined' ? require = J$.R(2190849, 'require', undefined, true, true) : require = J$.R(2190849, 'require', require, true, true)), false)(J$.T(2190857, 'core-js/modules/es.array.concat', 21, false));
            J$.F(2190889, J$.I(typeof require === 'undefined' ? require = J$.R(2190873, 'require', undefined, true, true) : require = J$.R(2190873, 'require', require, true, true)), false)(J$.T(2190881, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2190913, J$.I(typeof require === 'undefined' ? require = J$.R(2190897, 'require', undefined, true, true) : require = J$.R(2190897, 'require', require, true, true)), false)(J$.T(2190905, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2190937, J$.I(typeof require === 'undefined' ? require = J$.R(2190921, 'require', undefined, true, true) : require = J$.R(2190921, 'require', require, true, true)), false)(J$.T(2190929, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2190961, J$.I(typeof require === 'undefined' ? require = J$.R(2190945, 'require', undefined, true, true) : require = J$.R(2190945, 'require', require, true, true)), false)(J$.T(2190953, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2190985, J$.I(typeof require === 'undefined' ? require = J$.R(2190969, 'require', undefined, true, true) : require = J$.R(2190969, 'require', require, true, true)), false)(J$.T(2190977, 'core-js/modules/es.array.join', 21, false));
            J$.F(2191009, J$.I(typeof require === 'undefined' ? require = J$.R(2190993, 'require', undefined, true, true) : require = J$.R(2190993, 'require', require, true, true)), false)(J$.T(2191001, 'core-js/modules/es.array.map', 21, false));
            J$.F(2191033, J$.I(typeof require === 'undefined' ? require = J$.R(2191017, 'require', undefined, true, true) : require = J$.R(2191017, 'require', require, true, true)), false)(J$.T(2191025, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2191057, J$.I(typeof require === 'undefined' ? require = J$.R(2191041, 'require', undefined, true, true) : require = J$.R(2191041, 'require', require, true, true)), false)(J$.T(2191049, 'core-js/modules/es.array.sort', 21, false));
            J$.F(2191081, J$.I(typeof require === 'undefined' ? require = J$.R(2191065, 'require', undefined, true, true) : require = J$.R(2191065, 'require', require, true, true)), false)(J$.T(2191073, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2191105, J$.I(typeof require === 'undefined' ? require = J$.R(2191089, 'require', undefined, true, true) : require = J$.R(2191089, 'require', require, true, true)), false)(J$.T(2191097, 'core-js/modules/es.function.name', 21, false));
            J$.F(2191129, J$.I(typeof require === 'undefined' ? require = J$.R(2191113, 'require', undefined, true, true) : require = J$.R(2191113, 'require', require, true, true)), false)(J$.T(2191121, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(2191153, J$.I(typeof require === 'undefined' ? require = J$.R(2191137, 'require', undefined, true, true) : require = J$.R(2191137, 'require', require, true, true)), false)(J$.T(2191145, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2191177, J$.I(typeof require === 'undefined' ? require = J$.R(2191161, 'require', undefined, true, true) : require = J$.R(2191161, 'require', require, true, true)), false)(J$.T(2191169, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2191201, J$.I(typeof require === 'undefined' ? require = J$.R(2191185, 'require', undefined, true, true) : require = J$.R(2191185, 'require', require, true, true)), false)(J$.T(2191193, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2191225, J$.I(typeof require === 'undefined' ? require = J$.R(2191209, 'require', undefined, true, true) : require = J$.R(2191209, 'require', require, true, true)), false)(J$.T(2191217, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2191249, J$.I(typeof require === 'undefined' ? require = J$.R(2191233, 'require', undefined, true, true) : require = J$.R(2191233, 'require', require, true, true)), false)(J$.T(2191241, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2191273, J$.I(typeof require === 'undefined' ? require = J$.R(2191257, 'require', undefined, true, true) : require = J$.R(2191257, 'require', require, true, true)), false)(J$.T(2191265, 'core-js/modules/es.string.split', 21, false));
            J$.F(2191297, J$.I(typeof require === 'undefined' ? require = J$.R(2191281, 'require', undefined, true, true) : require = J$.R(2191281, 'require', require, true, true)), false)(J$.T(2191289, 'core-js/modules/es.string.trim', 21, false));
            J$.F(2191321, J$.I(typeof require === 'undefined' ? require = J$.R(2191305, 'require', undefined, true, true) : require = J$.R(2191305, 'require', require, true, true)), false)(J$.T(2191313, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(2191345, J$.I(typeof require === 'undefined' ? require = J$.R(2191329, 'require', undefined, true, true) : require = J$.R(2191329, 'require', require, true, true)), false)(J$.T(2191337, 'core-js/modules/es.array.concat', 21, false));
            J$.F(2191369, J$.I(typeof require === 'undefined' ? require = J$.R(2191353, 'require', undefined, true, true) : require = J$.R(2191353, 'require', require, true, true)), false)(J$.T(2191361, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2191393, J$.I(typeof require === 'undefined' ? require = J$.R(2191377, 'require', undefined, true, true) : require = J$.R(2191377, 'require', require, true, true)), false)(J$.T(2191385, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2191417, J$.I(typeof require === 'undefined' ? require = J$.R(2191401, 'require', undefined, true, true) : require = J$.R(2191401, 'require', require, true, true)), false)(J$.T(2191409, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2191441, J$.I(typeof require === 'undefined' ? require = J$.R(2191425, 'require', undefined, true, true) : require = J$.R(2191425, 'require', require, true, true)), false)(J$.T(2191433, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2191465, J$.I(typeof require === 'undefined' ? require = J$.R(2191449, 'require', undefined, true, true) : require = J$.R(2191449, 'require', require, true, true)), false)(J$.T(2191457, 'core-js/modules/es.array.join', 21, false));
            J$.F(2191489, J$.I(typeof require === 'undefined' ? require = J$.R(2191473, 'require', undefined, true, true) : require = J$.R(2191473, 'require', require, true, true)), false)(J$.T(2191481, 'core-js/modules/es.array.map', 21, false));
            J$.F(2191513, J$.I(typeof require === 'undefined' ? require = J$.R(2191497, 'require', undefined, true, true) : require = J$.R(2191497, 'require', require, true, true)), false)(J$.T(2191505, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2191537, J$.I(typeof require === 'undefined' ? require = J$.R(2191521, 'require', undefined, true, true) : require = J$.R(2191521, 'require', require, true, true)), false)(J$.T(2191529, 'core-js/modules/es.array.sort', 21, false));
            J$.F(2191561, J$.I(typeof require === 'undefined' ? require = J$.R(2191545, 'require', undefined, true, true) : require = J$.R(2191545, 'require', require, true, true)), false)(J$.T(2191553, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2191585, J$.I(typeof require === 'undefined' ? require = J$.R(2191569, 'require', undefined, true, true) : require = J$.R(2191569, 'require', require, true, true)), false)(J$.T(2191577, 'core-js/modules/es.function.name', 21, false));
            J$.F(2191609, J$.I(typeof require === 'undefined' ? require = J$.R(2191593, 'require', undefined, true, true) : require = J$.R(2191593, 'require', require, true, true)), false)(J$.T(2191601, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(2191633, J$.I(typeof require === 'undefined' ? require = J$.R(2191617, 'require', undefined, true, true) : require = J$.R(2191617, 'require', require, true, true)), false)(J$.T(2191625, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2191657, J$.I(typeof require === 'undefined' ? require = J$.R(2191641, 'require', undefined, true, true) : require = J$.R(2191641, 'require', require, true, true)), false)(J$.T(2191649, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2191681, J$.I(typeof require === 'undefined' ? require = J$.R(2191665, 'require', undefined, true, true) : require = J$.R(2191665, 'require', require, true, true)), false)(J$.T(2191673, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2191705, J$.I(typeof require === 'undefined' ? require = J$.R(2191689, 'require', undefined, true, true) : require = J$.R(2191689, 'require', require, true, true)), false)(J$.T(2191697, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2191729, J$.I(typeof require === 'undefined' ? require = J$.R(2191713, 'require', undefined, true, true) : require = J$.R(2191713, 'require', require, true, true)), false)(J$.T(2191721, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2191753, J$.I(typeof require === 'undefined' ? require = J$.R(2191737, 'require', undefined, true, true) : require = J$.R(2191737, 'require', require, true, true)), false)(J$.T(2191745, 'core-js/modules/es.string.split', 21, false));
            J$.F(2191777, J$.I(typeof require === 'undefined' ? require = J$.R(2191761, 'require', undefined, true, true) : require = J$.R(2191761, 'require', require, true, true)), false)(J$.T(2191769, 'core-js/modules/es.string.trim', 21, false));
            J$.F(2191801, J$.I(typeof require === 'undefined' ? require = J$.R(2191785, 'require', undefined, true, true) : require = J$.R(2191785, 'require', require, true, true)), false)(J$.T(2191793, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(2191825, J$.I(typeof require === 'undefined' ? require = J$.R(2191809, 'require', undefined, true, true) : require = J$.R(2191809, 'require', require, true, true)), false)(J$.T(2191817, 'core-js/modules/es.array.concat', 21, false));
            J$.F(2191849, J$.I(typeof require === 'undefined' ? require = J$.R(2191833, 'require', undefined, true, true) : require = J$.R(2191833, 'require', require, true, true)), false)(J$.T(2191841, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2191873, J$.I(typeof require === 'undefined' ? require = J$.R(2191857, 'require', undefined, true, true) : require = J$.R(2191857, 'require', require, true, true)), false)(J$.T(2191865, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2191897, J$.I(typeof require === 'undefined' ? require = J$.R(2191881, 'require', undefined, true, true) : require = J$.R(2191881, 'require', require, true, true)), false)(J$.T(2191889, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2191921, J$.I(typeof require === 'undefined' ? require = J$.R(2191905, 'require', undefined, true, true) : require = J$.R(2191905, 'require', require, true, true)), false)(J$.T(2191913, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2191945, J$.I(typeof require === 'undefined' ? require = J$.R(2191929, 'require', undefined, true, true) : require = J$.R(2191929, 'require', require, true, true)), false)(J$.T(2191937, 'core-js/modules/es.array.join', 21, false));
            J$.F(2191969, J$.I(typeof require === 'undefined' ? require = J$.R(2191953, 'require', undefined, true, true) : require = J$.R(2191953, 'require', require, true, true)), false)(J$.T(2191961, 'core-js/modules/es.array.map', 21, false));
            J$.F(2191993, J$.I(typeof require === 'undefined' ? require = J$.R(2191977, 'require', undefined, true, true) : require = J$.R(2191977, 'require', require, true, true)), false)(J$.T(2191985, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2192017, J$.I(typeof require === 'undefined' ? require = J$.R(2192001, 'require', undefined, true, true) : require = J$.R(2192001, 'require', require, true, true)), false)(J$.T(2192009, 'core-js/modules/es.array.sort', 21, false));
            J$.F(2192041, J$.I(typeof require === 'undefined' ? require = J$.R(2192025, 'require', undefined, true, true) : require = J$.R(2192025, 'require', require, true, true)), false)(J$.T(2192033, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2192065, J$.I(typeof require === 'undefined' ? require = J$.R(2192049, 'require', undefined, true, true) : require = J$.R(2192049, 'require', require, true, true)), false)(J$.T(2192057, 'core-js/modules/es.function.name', 21, false));
            J$.F(2192089, J$.I(typeof require === 'undefined' ? require = J$.R(2192073, 'require', undefined, true, true) : require = J$.R(2192073, 'require', require, true, true)), false)(J$.T(2192081, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(2192113, J$.I(typeof require === 'undefined' ? require = J$.R(2192097, 'require', undefined, true, true) : require = J$.R(2192097, 'require', require, true, true)), false)(J$.T(2192105, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2192137, J$.I(typeof require === 'undefined' ? require = J$.R(2192121, 'require', undefined, true, true) : require = J$.R(2192121, 'require', require, true, true)), false)(J$.T(2192129, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2192161, J$.I(typeof require === 'undefined' ? require = J$.R(2192145, 'require', undefined, true, true) : require = J$.R(2192145, 'require', require, true, true)), false)(J$.T(2192153, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2192185, J$.I(typeof require === 'undefined' ? require = J$.R(2192169, 'require', undefined, true, true) : require = J$.R(2192169, 'require', require, true, true)), false)(J$.T(2192177, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2192209, J$.I(typeof require === 'undefined' ? require = J$.R(2192193, 'require', undefined, true, true) : require = J$.R(2192193, 'require', require, true, true)), false)(J$.T(2192201, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2192233, J$.I(typeof require === 'undefined' ? require = J$.R(2192217, 'require', undefined, true, true) : require = J$.R(2192217, 'require', require, true, true)), false)(J$.T(2192225, 'core-js/modules/es.string.split', 21, false));
            J$.F(2192257, J$.I(typeof require === 'undefined' ? require = J$.R(2192241, 'require', undefined, true, true) : require = J$.R(2192241, 'require', require, true, true)), false)(J$.T(2192249, 'core-js/modules/es.string.trim', 21, false));
            J$.F(2192281, J$.I(typeof require === 'undefined' ? require = J$.R(2192265, 'require', undefined, true, true) : require = J$.R(2192265, 'require', require, true, true)), false)(J$.T(2192273, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var assert = J$.W(2192313, 'assert', J$.F(2192305, J$.I(typeof require === 'undefined' ? require = J$.R(2192289, 'require', undefined, true, true) : require = J$.R(2192289, 'require', require, true, true)), false)(J$.T(2192297, 'assert-plus', 21, false)), assert, false, true);
            var format = J$.W(2192353, 'format', J$.G(2192345, J$.F(2192337, J$.I(typeof require === 'undefined' ? require = J$.R(2192321, 'require', undefined, true, true) : require = J$.R(2192321, 'require', require, true, true)), false)(J$.T(2192329, 'util', 21, false)), 'format'), format, false, true);
            var fs = J$.W(2192385, 'fs', J$.F(2192377, J$.I(typeof require === 'undefined' ? require = J$.R(2192361, 'require', undefined, true, true) : require = J$.R(2192361, 'require', require, true, true)), false)(J$.T(2192369, 'fs', 21, false)), fs, false, true);
            var path = J$.W(2192417, 'path', J$.F(2192409, J$.I(typeof require === 'undefined' ? require = J$.R(2192393, 'require', undefined, true, true) : require = J$.R(2192393, 'require', require, true, true)), false)(J$.T(2192401, 'path', 21, false)), path, false, true);
            var DEBUG = J$.W(2192433, 'DEBUG', J$.T(2192425, true, 23, false), DEBUG, false, true);
            if (J$.C(135880, J$.R(2192441, 'DEBUG', DEBUG, false, true))) {
                var debug = J$.W(2192465, 'debug', J$.G(2192457, J$.I(typeof console === 'undefined' ? console = J$.R(2192449, 'console', undefined, true, true) : console = J$.R(2192449, 'console', console, true, true)), 'warn'), debug, false, true);
            } else {
                var debug = J$.W(2192497, 'debug', J$.T(2192489, function debug() {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(2192473, arguments.callee, this, arguments);
                                arguments = J$.N(2192481, 'arguments', arguments, true, false, false);
                            } catch (J$e) {
                                J$.Ex(2209953, J$e);
                            } finally {
                                if (J$.Fr(2209961))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false), debug, false, true);
            }
            var optionTypes = J$.W(2195393, 'optionTypes', J$.T(2195385, {
                bool: J$.T(2194985, {
                    takesArg: J$.T(2194969, false, 23, false),
                    parseArg: J$.R(2194977, 'parseBool', parseBool, false, true)
                }, 11, false),
                string: J$.T(2195017, {
                    takesArg: J$.T(2194993, true, 23, false),
                    helpArg: J$.T(2195001, 'ARG', 21, false),
                    parseArg: J$.R(2195009, 'parseString', parseString, false, true)
                }, 11, false),
                number: J$.T(2195049, {
                    takesArg: J$.T(2195025, true, 23, false),
                    helpArg: J$.T(2195033, 'NUM', 21, false),
                    parseArg: J$.R(2195041, 'parseNumber', parseNumber, false, true)
                }, 11, false),
                integer: J$.T(2195081, {
                    takesArg: J$.T(2195057, true, 23, false),
                    helpArg: J$.T(2195065, 'INT', 21, false),
                    parseArg: J$.R(2195073, 'parseInteger', parseInteger, false, true)
                }, 11, false),
                positiveInteger: J$.T(2195113, {
                    takesArg: J$.T(2195089, true, 23, false),
                    helpArg: J$.T(2195097, 'INT', 21, false),
                    parseArg: J$.R(2195105, 'parsePositiveInteger', parsePositiveInteger, false, true)
                }, 11, false),
                date: J$.T(2195145, {
                    takesArg: J$.T(2195121, true, 23, false),
                    helpArg: J$.T(2195129, 'DATE', 21, false),
                    parseArg: J$.R(2195137, 'parseDate', parseDate, false, true)
                }, 11, false),
                arrayOfBool: J$.T(2195177, {
                    takesArg: J$.T(2195153, false, 23, false),
                    array: J$.T(2195161, true, 23, false),
                    parseArg: J$.R(2195169, 'parseBool', parseBool, false, true)
                }, 11, false),
                arrayOfString: J$.T(2195217, {
                    takesArg: J$.T(2195185, true, 23, false),
                    helpArg: J$.T(2195193, 'ARG', 21, false),
                    array: J$.T(2195201, true, 23, false),
                    parseArg: J$.R(2195209, 'parseString', parseString, false, true)
                }, 11, false),
                arrayOfNumber: J$.T(2195257, {
                    takesArg: J$.T(2195225, true, 23, false),
                    helpArg: J$.T(2195233, 'NUM', 21, false),
                    array: J$.T(2195241, true, 23, false),
                    parseArg: J$.R(2195249, 'parseNumber', parseNumber, false, true)
                }, 11, false),
                arrayOfInteger: J$.T(2195297, {
                    takesArg: J$.T(2195265, true, 23, false),
                    helpArg: J$.T(2195273, 'INT', 21, false),
                    array: J$.T(2195281, true, 23, false),
                    parseArg: J$.R(2195289, 'parseInteger', parseInteger, false, true)
                }, 11, false),
                arrayOfPositiveInteger: J$.T(2195337, {
                    takesArg: J$.T(2195305, true, 23, false),
                    helpArg: J$.T(2195313, 'INT', 21, false),
                    array: J$.T(2195321, true, 23, false),
                    parseArg: J$.R(2195329, 'parsePositiveInteger', parsePositiveInteger, false, true)
                }, 11, false),
                arrayOfDate: J$.T(2195377, {
                    takesArg: J$.T(2195345, true, 23, false),
                    helpArg: J$.T(2195353, 'INT', 21, false),
                    array: J$.T(2195361, true, 23, false),
                    parseArg: J$.R(2195369, 'parseDate', parseDate, false, true)
                }, 11, false)
            }, 11, false), optionTypes, false, true);
            J$.P(2197529, J$.G(2197441, J$.R(2197433, 'Parser', Parser, false, true), 'prototype'), 'optionTakesArg', J$.T(2197521, function optionTakesArg(option) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(2197497, arguments.callee, this, arguments);
                            arguments = J$.N(2197505, 'arguments', arguments, true, false, false);
                            option = J$.N(2197513, 'option', option, true, false, false);
                            return J$.Rt(2197489, J$.G(2197481, J$.G(2197473, J$.R(2197449, 'optionTypes', optionTypes, false, true), J$.G(2197465, J$.R(2197457, 'option', option, false, false), 'type')), 'takesArg'));
                        } catch (J$e) {
                            J$.Ex(2210273, J$e);
                        } finally {
                            if (J$.Fr(2210281))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2201601, J$.G(2197545, J$.R(2197537, 'Parser', Parser, false, true), 'prototype'), 'parse', J$.T(2201593, function parse(inputs) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(2201417, arguments.callee, this, arguments);
                            function addOpt(option, optstr, key, val, from) {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(2198417, arguments.callee, this, arguments);
                                            arguments = J$.N(2198425, 'arguments', arguments, true, false, false);
                                            option = J$.N(2198433, 'option', option, true, false, false);
                                            optstr = J$.N(2198441, 'optstr', optstr, true, false, false);
                                            key = J$.N(2198449, 'key', key, true, false, false);
                                            val = J$.N(2198457, 'val', val, true, false, false);
                                            from = J$.N(2198465, 'from', from, true, false, false);
                                            J$.N(2198473, 'type', type, false, false, false);
                                            J$.N(2198481, 'parsedVal', parsedVal, false, false, false);
                                            J$.N(2198489, 'i', i, false, false, false);
                                            J$.N(2198497, 'item', item, false, false, false);
                                            var type = J$.W(2198001, 'type', J$.G(2197993, J$.R(2197969, 'optionTypes', optionTypes, false, true), J$.G(2197985, J$.R(2197977, 'option', option, false, false), 'type')), type, false, false);
                                            var parsedVal = J$.W(2198049, 'parsedVal', J$.M(2198041, J$.R(2198009, 'type', type, false, false), 'parseArg', false)(J$.R(2198017, 'option', option, false, false), J$.R(2198025, 'optstr', optstr, false, false), J$.R(2198033, 'val', val, false, false)), parsedVal, false, false);
                                            if (J$.C(136216, J$.G(2198065, J$.R(2198057, 'type', type, false, false), 'array'))) {
                                                if (J$.C(136184, J$.U(265194, '!', J$.G(2198089, J$.R(2198073, 'opts', opts, false, false), J$.R(2198081, 'key', key, false, false))))) {
                                                    J$.P(2198121, J$.R(2198097, 'opts', opts, false, false), J$.R(2198105, 'key', key, false, false), J$.T(2198113, [], 10, false));
                                                }
                                                if (J$.C(136208, J$.C(136192, J$.G(2198137, J$.R(2198129, 'type', type, false, false), 'arrayFlatten')) ? J$.M(2198161, J$.I(typeof Array === 'undefined' ? Array = J$.R(2198145, 'Array', undefined, true, true) : Array = J$.R(2198145, 'Array', Array, true, true)), 'isArray', false)(J$.R(2198153, 'parsedVal', parsedVal, false, false)) : J$._())) {
                                                    for (var i = J$.W(2198177, 'i', J$.T(2198169, 0, 22, false), i, false, false); J$.C(136200, J$.B(265202, '<', J$.R(2198185, 'i', i, false, false), J$.G(2198201, J$.R(2198193, 'parsedVal', parsedVal, false, false), 'length'))); J$.B(265226, '-', i = J$.W(2198217, 'i', J$.B(265218, '+', J$.U(265210, '+', J$.R(2198209, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                        J$.M(2198273, J$.G(2198241, J$.R(2198225, 'opts', opts, false, false), J$.R(2198233, 'key', key, false, false)), 'push', false)(J$.G(2198265, J$.R(2198249, 'parsedVal', parsedVal, false, false), J$.R(2198257, 'i', i, false, false)));
                                                    }
                                                } else {
                                                    J$.M(2198313, J$.G(2198297, J$.R(2198281, 'opts', opts, false, false), J$.R(2198289, 'key', key, false, false)), 'push', false)(J$.R(2198305, 'parsedVal', parsedVal, false, false));
                                                }
                                            } else {
                                                J$.P(2198345, J$.R(2198321, 'opts', opts, false, false), J$.R(2198329, 'key', key, false, false), J$.R(2198337, 'parsedVal', parsedVal, false, false));
                                            }
                                            var item = J$.W(2198385, 'item', J$.T(2198377, {
                                                key: J$.R(2198353, 'key', key, false, false),
                                                value: J$.R(2198361, 'parsedVal', parsedVal, false, false),
                                                from: J$.R(2198369, 'from', from, false, false)
                                            }, 11, false), item, false, false);
                                            J$.M(2198409, J$.R(2198393, '_order', _order, false, false), 'push', false)(J$.R(2198401, 'item', item, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2210289, J$e);
                                        } finally {
                                            if (J$.Fr(2210297))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2201425, 'arguments', arguments, true, false, false);
                            inputs = J$.N(2201433, 'inputs', inputs, true, false, false);
                            J$.N(2201441, 'self', self, false, false, false);
                            J$.N(2201449, 'argv', argv, false, false, false);
                            J$.N(2201457, 'slice', slice, false, false, false);
                            J$.N(2201465, 'args', args, false, false, false);
                            J$.N(2201473, 'env', env, false, false, false);
                            J$.N(2201481, 'opts', opts, false, false, false);
                            J$.N(2201489, '_order', _order, false, false, false);
                            addOpt = J$.N(2201505, 'addOpt', J$.T(2201497, addOpt, 12, false), true, false, false);
                            J$.N(2201513, '_args', _args, false, false, false);
                            J$.N(2201521, 'i', i, false, false, false);
                            J$.N(2201529, 'arg', arg, false, false, false);
                            J$.N(2201537, 'name', name, false, false, false);
                            J$.N(2201545, 'val', val, false, false, false);
                            J$.N(2201553, 'idx', idx, false, false, false);
                            J$.N(2201561, 'option', option, false, false, false);
                            J$.N(2201569, 'takesArg', takesArg, false, false, false);
                            J$.N(2201577, 'j', j, false, false, false);
                            J$.N(2201585, 'allFound', allFound, false, false, false);
                            var self = J$.W(2197561, 'self', J$.R(2197553, 'this', this, false, false), self, false, false);
                            if (J$.C(136144, J$.M(2197601, J$.I(typeof Array === 'undefined' ? Array = J$.R(2197569, 'Array', undefined, true, true) : Array = J$.R(2197569, 'Array', Array, true, true)), 'isArray', false)(J$.G(2197593, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(2197577, 'arguments', undefined, true, true) : arguments = J$.R(2197577, 'arguments', arguments, true, true)), J$.T(2197585, 0, 22, false))))) {
                                inputs = J$.W(2197665, 'inputs', J$.T(2197657, {
                                    argv: J$.G(2197625, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(2197609, 'arguments', undefined, true, true) : arguments = J$.R(2197609, 'arguments', arguments, true, true)), J$.T(2197617, 0, 22, false)),
                                    slice: J$.G(2197649, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(2197633, 'arguments', undefined, true, true) : arguments = J$.R(2197633, 'arguments', arguments, true, true)), J$.T(2197641, 1, 22, false))
                                }, 11, false), inputs, false, false);
                            }
                            J$.M(2197697, J$.R(2197673, 'assert', assert, false, true), 'optionalObject', false)(J$.R(2197681, 'inputs', inputs, false, false), J$.T(2197689, 'inputs', 21, false));
                            if (J$.C(136152, J$.U(265178, '!', J$.R(2197705, 'inputs', inputs, false, false)))) {
                                inputs = J$.W(2197721, 'inputs', J$.T(2197713, {}, 11, false), inputs, false, false);
                            }
                            J$.M(2197761, J$.R(2197729, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2197745, J$.R(2197737, 'inputs', inputs, false, false), 'argv'), J$.T(2197753, 'inputs.argv', 21, false));
                            var argv = J$.W(2197801, 'argv', J$.C(136160, J$.G(2197777, J$.R(2197769, 'inputs', inputs, false, false), 'argv')) ? J$._() : J$.G(2197793, J$.I(typeof process === 'undefined' ? process = J$.R(2197785, 'process', undefined, true, true) : process = J$.R(2197785, 'process', process, true, true)), 'argv'), argv, false, false);
                            var slice = J$.W(2197857, 'slice', J$.C(136168, J$.B(265186, '!==', J$.G(2197817, J$.R(2197809, 'inputs', inputs, false, false), 'slice'), J$.T(2197825, undefined, 24, false))) ? J$.G(2197841, J$.R(2197833, 'inputs', inputs, false, false), 'slice') : J$.T(2197849, 2, 22, false), slice, false, false);
                            var args = J$.W(2197889, 'args', J$.M(2197881, J$.R(2197865, 'argv', argv, false, false), 'slice', false)(J$.R(2197873, 'slice', slice, false, false)), args, false, false);
                            var env = J$.W(2197929, 'env', J$.C(136176, J$.G(2197905, J$.R(2197897, 'inputs', inputs, false, false), 'env')) ? J$._() : J$.G(2197921, J$.I(typeof process === 'undefined' ? process = J$.R(2197913, 'process', undefined, true, true) : process = J$.R(2197913, 'process', process, true, true)), 'env'), env, false, false);
                            var opts = J$.W(2197945, 'opts', J$.T(2197937, {}, 11, false), opts, false, false);
                            var _order = J$.W(2197961, '_order', J$.T(2197953, [], 10, false), _order, false, false);
                            var _args = J$.W(2198513, '_args', J$.T(2198505, [], 10, false), _args, false, false);
                            var i = J$.W(2198529, 'i', J$.T(2198521, 0, 22, false), i, false, false);
                            outer:
                                while (J$.C(136424, J$.B(265234, '<', J$.R(2198537, 'i', i, false, false), J$.G(2198553, J$.R(2198545, 'args', args, false, false), 'length')))) {
                                    var arg = J$.W(2198585, 'arg', J$.G(2198577, J$.R(2198561, 'args', args, false, false), J$.R(2198569, 'i', i, false, false)), arg, false, false);
                                    if (J$.C(136416, J$.B(265242, '===', J$.R(2198593, 'arg', arg, false, false), J$.T(2198601, '--', 21, false)))) {
                                        J$.B(265266, '-', i = J$.W(2198617, 'i', J$.B(265258, '+', J$.U(265250, '+', J$.R(2198609, 'i', i, false, false)), 1), i, false, false), 1);
                                        break;
                                    } else if (J$.C(136408, J$.B(265274, '===', J$.M(2198649, J$.R(2198625, 'arg', arg, false, false), 'slice', false)(J$.T(2198633, 0, 22, false), J$.T(2198641, 2, 22, false)), J$.T(2198657, '--', 21, false)))) {
                                        var name = J$.W(2198689, 'name', J$.M(2198681, J$.R(2198665, 'arg', arg, false, false), 'slice', false)(J$.T(2198673, 2, 22, false)), name, false, false);
                                        var val = J$.W(2198705, 'val', J$.T(2198697, null, 25, false), val, false, false);
                                        var idx = J$.W(2198737, 'idx', J$.M(2198729, J$.R(2198713, 'name', name, false, false), 'indexOf', false)(J$.T(2198721, '=', 21, false)), idx, false, false);
                                        if (J$.C(136224, J$.B(265290, '!==', J$.R(2198745, 'idx', idx, false, false), J$.U(265282, '-', J$.T(2198753, 1, 22, false))))) {
                                            val = J$.W(2198793, 'val', J$.M(2198785, J$.R(2198761, 'name', name, false, false), 'slice', false)(J$.B(265298, '+', J$.R(2198769, 'idx', idx, false, false), J$.T(2198777, 1, 22, false))), val, false, false);
                                            name = J$.W(2198833, 'name', J$.M(2198825, J$.R(2198801, 'name', name, false, false), 'slice', false)(J$.T(2198809, 0, 22, false), J$.R(2198817, 'idx', idx, false, false)), name, false, false);
                                        }
                                        var option = J$.W(2198873, 'option', J$.G(2198865, J$.G(2198849, J$.R(2198841, 'this', this, false, false), 'optionFromName'), J$.R(2198857, 'name', name, false, false)), option, false, false);
                                        if (J$.C(136288, J$.U(265306, '!', J$.R(2198881, 'option', option, false, false)))) {
                                            if (J$.C(136240, J$.U(265314, '!', J$.G(2198897, J$.R(2198889, 'this', this, false, false), 'allowUnknown'))))
                                                throw J$.F(2198945, J$.I(typeof Error === 'undefined' ? Error = J$.R(2198905, 'Error', undefined, true, true) : Error = J$.R(2198905, 'Error', Error, true, true)), true)(J$.F(2198937, J$.R(2198913, 'format', format, false, true), false)(J$.T(2198921, 'unknown option: "--%s"', 21, false), J$.R(2198929, 'name', name, false, false)));
                                            else if (J$.C(136232, J$.G(2198961, J$.R(2198953, 'this', this, false, false), 'interspersed')))
                                                J$.M(2198985, J$.R(2198969, '_args', _args, false, false), 'push', false)(J$.R(2198977, 'arg', arg, false, false));
                                            else
                                                break outer;
                                        } else {
                                            var takesArg = J$.W(2199017, 'takesArg', J$.M(2199009, J$.R(2198993, 'this', this, false, false), 'optionTakesArg', false)(J$.R(2199001, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(136256, J$.C(136248, J$.B(265322, '!==', J$.R(2199025, 'val', val, false, false), J$.T(2199033, null, 25, false))) ? J$.U(265330, '!', J$.R(2199041, 'takesArg', takesArg, false, false)) : J$._())) {
                                                throw J$.F(2199105, J$.I(typeof Error === 'undefined' ? Error = J$.R(2199049, 'Error', undefined, true, true) : Error = J$.R(2199049, 'Error', Error, true, true)), true)(J$.F(2199097, J$.R(2199057, 'format', format, false, true), false)(J$.B(265338, '+', J$.T(2199065, 'argument given to "--%s" option ', 21, false), J$.T(2199073, 'that does not take one: "%s"', 21, false)), J$.R(2199081, 'name', name, false, false), J$.R(2199089, 'arg', arg, false, false)));
                                            }
                                            if (J$.C(136280, J$.U(265346, '!', J$.R(2199113, 'takesArg', takesArg, false, false)))) {
                                                J$.F(2199185, J$.R(2199121, 'addOpt', addOpt, false, false), false)(J$.R(2199129, 'option', option, false, false), J$.B(265354, '+', J$.T(2199137, '--', 21, false), J$.R(2199145, 'name', name, false, false)), J$.G(2199161, J$.R(2199153, 'option', option, false, false), 'key'), J$.T(2199169, true, 23, false), J$.T(2199177, 'argv', 21, false));
                                            } else if (J$.C(136272, J$.B(265362, '!==', J$.R(2199193, 'val', val, false, false), J$.T(2199201, null, 25, false)))) {
                                                J$.F(2199273, J$.R(2199209, 'addOpt', addOpt, false, false), false)(J$.R(2199217, 'option', option, false, false), J$.B(265370, '+', J$.T(2199225, '--', 21, false), J$.R(2199233, 'name', name, false, false)), J$.G(2199249, J$.R(2199241, 'option', option, false, false), 'key'), J$.R(2199257, 'val', val, false, false), J$.T(2199265, 'argv', 21, false));
                                            } else if (J$.C(136264, J$.B(265386, '>=', J$.B(265378, '+', J$.R(2199281, 'i', i, false, false), J$.T(2199289, 1, 22, false)), J$.G(2199305, J$.R(2199297, 'args', args, false, false), 'length')))) {
                                                throw J$.F(2199361, J$.I(typeof Error === 'undefined' ? Error = J$.R(2199313, 'Error', undefined, true, true) : Error = J$.R(2199313, 'Error', Error, true, true)), true)(J$.F(2199353, J$.R(2199321, 'format', format, false, true), false)(J$.B(265394, '+', J$.T(2199329, 'do not have enough args for "--%s" ', 21, false), J$.T(2199337, 'option', 21, false)), J$.R(2199345, 'name', name, false, false)));
                                            } else {
                                                J$.F(2199457, J$.R(2199369, 'addOpt', addOpt, false, false), false)(J$.R(2199377, 'option', option, false, false), J$.B(265402, '+', J$.T(2199385, '--', 21, false), J$.R(2199393, 'name', name, false, false)), J$.G(2199409, J$.R(2199401, 'option', option, false, false), 'key'), J$.G(2199441, J$.R(2199417, 'args', args, false, false), J$.B(265410, '+', J$.R(2199425, 'i', i, false, false), J$.T(2199433, 1, 22, false))), J$.T(2199449, 'argv', 21, false));
                                                J$.B(265434, '-', i = J$.W(2199473, 'i', J$.B(265426, '+', J$.U(265418, '+', J$.R(2199465, 'i', i, false, false)), 1), i, false, false), 1);
                                            }
                                        }
                                    } else if (J$.C(136400, J$.C(136296, J$.B(265442, '===', J$.G(2199497, J$.R(2199481, 'arg', arg, false, false), J$.T(2199489, 0, 22, false)), J$.T(2199505, '-', 21, false))) ? J$.B(265450, '>', J$.G(2199521, J$.R(2199513, 'arg', arg, false, false), 'length'), J$.T(2199529, 1, 22, false)) : J$._())) {
                                        var j = J$.W(2199545, 'j', J$.T(2199537, 1, 22, false), j, false, false);
                                        var allFound = J$.W(2199561, 'allFound', J$.T(2199553, true, 23, false), allFound, false, false);
                                        while (J$.C(136344, J$.B(265458, '<', J$.R(2199569, 'j', j, false, false), J$.G(2199585, J$.R(2199577, 'arg', arg, false, false), 'length')))) {
                                            var name = J$.W(2199617, 'name', J$.G(2199609, J$.R(2199593, 'arg', arg, false, false), J$.R(2199601, 'j', j, false, false)), name, false, false);
                                            var option = J$.W(2199657, 'option', J$.G(2199649, J$.G(2199633, J$.R(2199625, 'this', this, false, false), 'optionFromName'), J$.R(2199641, 'name', name, false, false)), option, false, false);
                                            if (J$.C(136336, J$.U(265466, '!', J$.R(2199665, 'option', option, false, false)))) {
                                                allFound = J$.W(2199681, 'allFound', J$.T(2199673, false, 23, false), allFound, false, false);
                                                if (J$.C(136320, J$.G(2199697, J$.R(2199689, 'this', this, false, false), 'allowUnknown'))) {
                                                    if (J$.C(136304, J$.G(2199713, J$.R(2199705, 'this', this, false, false), 'interspersed'))) {
                                                        J$.M(2199737, J$.R(2199721, '_args', _args, false, false), 'push', false)(J$.R(2199729, 'arg', arg, false, false));
                                                        break;
                                                    } else
                                                        break outer;
                                                } else if (J$.C(136312, J$.B(265474, '>', J$.G(2199753, J$.R(2199745, 'arg', arg, false, false), 'length'), J$.T(2199761, 2, 22, false)))) {
                                                    throw J$.F(2199817, J$.I(typeof Error === 'undefined' ? Error = J$.R(2199769, 'Error', undefined, true, true) : Error = J$.R(2199769, 'Error', Error, true, true)), true)(J$.F(2199809, J$.R(2199777, 'format', format, false, true), false)(J$.T(2199785, 'unknown option: "-%s" in "%s" group', 21, false), J$.R(2199793, 'name', name, false, false), J$.R(2199801, 'arg', arg, false, false)));
                                                } else {
                                                    throw J$.F(2199865, J$.I(typeof Error === 'undefined' ? Error = J$.R(2199825, 'Error', undefined, true, true) : Error = J$.R(2199825, 'Error', Error, true, true)), true)(J$.F(2199857, J$.R(2199833, 'format', format, false, true), false)(J$.T(2199841, 'unknown option: "-%s"', 21, false), J$.R(2199849, 'name', name, false, false)));
                                                }
                                            } else if (J$.C(136328, J$.M(2199889, J$.R(2199873, 'this', this, false, false), 'optionTakesArg', false)(J$.R(2199881, 'option', option, false, false)))) {
                                                break;
                                            }
                                            J$.B(265498, '-', j = J$.W(2199905, 'j', J$.B(265490, '+', J$.U(265482, '+', J$.R(2199897, 'j', j, false, false)), 1), j, false, false), 1);
                                        }
                                        j = J$.W(2199921, 'j', J$.T(2199913, 1, 22, false), j, false, false);
                                        while (J$.C(136384, J$.C(136352, J$.R(2199929, 'allFound', allFound, false, false)) ? J$.B(265506, '<', J$.R(2199937, 'j', j, false, false), J$.G(2199953, J$.R(2199945, 'arg', arg, false, false), 'length')) : J$._())) {
                                            var name = J$.W(2199985, 'name', J$.G(2199977, J$.R(2199961, 'arg', arg, false, false), J$.R(2199969, 'j', j, false, false)), name, false, false);
                                            var val = J$.W(2200025, 'val', J$.M(2200017, J$.R(2199993, 'arg', arg, false, false), 'slice', false)(J$.B(265514, '+', J$.R(2200001, 'j', j, false, false), J$.T(2200009, 1, 22, false))), val, false, false);
                                            var option = J$.W(2200065, 'option', J$.G(2200057, J$.G(2200041, J$.R(2200033, 'this', this, false, false), 'optionFromName'), J$.R(2200049, 'name', name, false, false)), option, false, false);
                                            var takesArg = J$.W(2200097, 'takesArg', J$.M(2200089, J$.R(2200073, 'this', this, false, false), 'optionTakesArg', false)(J$.R(2200081, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(136376, J$.U(265522, '!', J$.R(2200105, 'takesArg', takesArg, false, false)))) {
                                                J$.F(2200177, J$.R(2200113, 'addOpt', addOpt, false, false), false)(J$.R(2200121, 'option', option, false, false), J$.B(265530, '+', J$.T(2200129, '-', 21, false), J$.R(2200137, 'name', name, false, false)), J$.G(2200153, J$.R(2200145, 'option', option, false, false), 'key'), J$.T(2200161, true, 23, false), J$.T(2200169, 'argv', 21, false));
                                            } else if (J$.C(136368, J$.R(2200185, 'val', val, false, false))) {
                                                J$.F(2200257, J$.R(2200193, 'addOpt', addOpt, false, false), false)(J$.R(2200201, 'option', option, false, false), J$.B(265538, '+', J$.T(2200209, '-', 21, false), J$.R(2200217, 'name', name, false, false)), J$.G(2200233, J$.R(2200225, 'option', option, false, false), 'key'), J$.R(2200241, 'val', val, false, false), J$.T(2200249, 'argv', 21, false));
                                                break;
                                            } else {
                                                if (J$.C(136360, J$.B(265554, '>=', J$.B(265546, '+', J$.R(2200265, 'i', i, false, false), J$.T(2200273, 1, 22, false)), J$.G(2200289, J$.R(2200281, 'args', args, false, false), 'length')))) {
                                                    throw J$.F(2200345, J$.I(typeof Error === 'undefined' ? Error = J$.R(2200297, 'Error', undefined, true, true) : Error = J$.R(2200297, 'Error', Error, true, true)), true)(J$.F(2200337, J$.R(2200305, 'format', format, false, true), false)(J$.B(265562, '+', J$.T(2200313, 'do not have enough args ', 21, false), J$.T(2200321, 'for "-%s" option', 21, false)), J$.R(2200329, 'name', name, false, false)));
                                                }
                                                J$.F(2200441, J$.R(2200353, 'addOpt', addOpt, false, false), false)(J$.R(2200361, 'option', option, false, false), J$.B(265570, '+', J$.T(2200369, '-', 21, false), J$.R(2200377, 'name', name, false, false)), J$.G(2200393, J$.R(2200385, 'option', option, false, false), 'key'), J$.G(2200425, J$.R(2200401, 'args', args, false, false), J$.B(265578, '+', J$.R(2200409, 'i', i, false, false), J$.T(2200417, 1, 22, false))), J$.T(2200433, 'argv', 21, false));
                                                J$.B(265602, '-', i = J$.W(2200457, 'i', J$.B(265594, '+', J$.U(265586, '+', J$.R(2200449, 'i', i, false, false)), 1), i, false, false), 1);
                                                break;
                                            }
                                            J$.B(265626, '-', j = J$.W(2200473, 'j', J$.B(265618, '+', J$.U(265610, '+', J$.R(2200465, 'j', j, false, false)), 1), j, false, false), 1);
                                        }
                                    } else if (J$.C(136392, J$.G(2200489, J$.R(2200481, 'this', this, false, false), 'interspersed'))) {
                                        J$.M(2200513, J$.R(2200497, '_args', _args, false, false), 'push', false)(J$.R(2200505, 'arg', arg, false, false));
                                    } else {
                                        break outer;
                                    }
                                    J$.B(265650, '-', i = J$.W(2200529, 'i', J$.B(265642, '+', J$.U(265634, '+', J$.R(2200521, 'i', i, false, false)), 1), i, false, false), 1);
                                }
                            _args = J$.W(2200577, '_args', J$.M(2200569, J$.R(2200537, '_args', _args, false, false), 'concat', false)(J$.M(2200561, J$.R(2200545, 'args', args, false, false), 'slice', false)(J$.R(2200553, 'i', i, false, false))), _args, false, false);
                            J$.M(2201009, J$.M(2200609, J$.I(typeof Object === 'undefined' ? Object = J$.R(2200585, 'Object', undefined, true, true) : Object = J$.R(2200585, 'Object', Object, true, true)), 'keys', false)(J$.G(2200601, J$.R(2200593, 'this', this, false, false), 'optionFromEnv')), 'forEach', false)(J$.T(2201001, function (envname) {
                                jalangiLabel22:
                                    while (true) {
                                        try {
                                            J$.Fe(2200953, arguments.callee, this, arguments);
                                            arguments = J$.N(2200961, 'arguments', arguments, true, false, false);
                                            envname = J$.N(2200969, 'envname', envname, true, false, false);
                                            J$.N(2200977, 'val', val, false, false, false);
                                            J$.N(2200985, 'option', option, false, false, false);
                                            J$.N(2200993, 'takesArg', takesArg, false, false, false);
                                            var val = J$.W(2200641, 'val', J$.G(2200633, J$.R(2200617, 'env', env, false, false), J$.R(2200625, 'envname', envname, false, false)), val, false, false);
                                            if (J$.C(136432, J$.B(265658, '===', J$.R(2200649, 'val', val, false, false), J$.T(2200657, undefined, 24, false))))
                                                return J$.Rt(2200665, undefined);
                                            var option = J$.W(2200705, 'option', J$.G(2200697, J$.G(2200681, J$.R(2200673, 'self', self, false, false), 'optionFromEnv'), J$.R(2200689, 'envname', envname, false, false)), option, false, false);
                                            if (J$.C(136440, J$.B(265666, '!==', J$.G(2200737, J$.R(2200713, 'opts', opts, false, false), J$.G(2200729, J$.R(2200721, 'option', option, false, false), 'key')), J$.T(2200745, undefined, 24, false))))
                                                return J$.Rt(2200753, undefined);
                                            var takesArg = J$.W(2200785, 'takesArg', J$.M(2200777, J$.R(2200761, 'self', self, false, false), 'optionTakesArg', false)(J$.R(2200769, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(136456, J$.R(2200793, 'takesArg', takesArg, false, false))) {
                                                J$.F(2200857, J$.R(2200801, 'addOpt', addOpt, false, false), false)(J$.R(2200809, 'option', option, false, false), J$.R(2200817, 'envname', envname, false, false), J$.G(2200833, J$.R(2200825, 'option', option, false, false), 'key'), J$.R(2200841, 'val', val, false, false), J$.T(2200849, 'env', 21, false));
                                            } else if (J$.C(136448, J$.B(265674, '!==', J$.R(2200865, 'val', val, false, false), J$.T(2200873, '', 21, false)))) {
                                                J$.F(2200945, J$.R(2200881, 'addOpt', addOpt, false, false), false)(J$.R(2200889, 'option', option, false, false), J$.R(2200897, 'envname', envname, false, false), J$.G(2200913, J$.R(2200905, 'option', option, false, false), 'key'), J$.B(265682, '!==', J$.R(2200921, 'val', val, false, false), J$.T(2200929, '0', 21, false)), J$.T(2200937, 'env', 21, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2210305, J$e);
                                        } finally {
                                            if (J$.Fr(2210313))
                                                continue jalangiLabel22;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(2201345, J$.G(2201025, J$.R(2201017, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(2201337, function (o) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(2201313, arguments.callee, this, arguments);
                                            arguments = J$.N(2201321, 'arguments', arguments, true, false, false);
                                            o = J$.N(2201329, 'o', o, true, false, false);
                                            if (J$.C(136488, J$.B(265690, '===', J$.G(2201057, J$.R(2201033, 'opts', opts, false, false), J$.G(2201049, J$.R(2201041, 'o', o, false, false), 'key')), J$.T(2201065, undefined, 24, false)))) {
                                                if (J$.C(136480, J$.B(265698, '!==', J$.G(2201089, J$.R(2201073, 'o', o, false, false), J$.T(2201081, 'default', 21, false)), J$.T(2201097, undefined, 24, false)))) {
                                                    J$.P(2201153, J$.R(2201105, 'opts', opts, false, false), J$.G(2201121, J$.R(2201113, 'o', o, false, false), 'key'), J$.G(2201145, J$.R(2201129, 'o', o, false, false), J$.T(2201137, 'default', 21, false)));
                                                } else if (J$.C(136472, J$.C(136464, J$.G(2201169, J$.R(2201161, 'o', o, false, false), 'type')) ? J$.B(265706, '!==', J$.G(2201217, J$.G(2201201, J$.R(2201177, 'optionTypes', optionTypes, false, true), J$.G(2201193, J$.R(2201185, 'o', o, false, false), 'type')), J$.T(2201209, 'default', 21, false)), J$.T(2201225, undefined, 24, false)) : J$._())) {
                                                    J$.P(2201305, J$.R(2201233, 'opts', opts, false, false), J$.G(2201249, J$.R(2201241, 'o', o, false, false), 'key'), J$.G(2201297, J$.G(2201281, J$.R(2201257, 'optionTypes', optionTypes, false, true), J$.G(2201273, J$.R(2201265, 'o', o, false, false), 'type')), J$.T(2201289, 'default', 21, false)));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2210321, J$e);
                                        } finally {
                                            if (J$.Fr(2210329))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(2201369, J$.R(2201353, 'opts', opts, false, false), '_order', J$.R(2201361, '_order', _order, false, false));
                            J$.P(2201393, J$.R(2201377, 'opts', opts, false, false), '_args', J$.R(2201385, '_args', _args, false, false));
                            return J$.Rt(2201409, J$.R(2201401, 'opts', opts, false, false));
                        } catch (J$e) {
                            J$.Ex(2210337, J$e);
                        } finally {
                            if (J$.Fr(2210345))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2205561, J$.G(2201617, J$.R(2201609, 'Parser', Parser, false, true), 'prototype'), 'help', J$.T(2205553, function help(config) {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(2205441, arguments.callee, this, arguments);
                            arguments = J$.N(2205449, 'arguments', arguments, true, false, false);
                            config = J$.N(2205457, 'config', config, true, false, false);
                            J$.N(2205465, 'indent', indent, false, false, false);
                            J$.N(2205473, 'headingIndent', headingIndent, false, false, false);
                            J$.N(2205481, 'nameSort', nameSort, false, false, false);
                            J$.N(2205489, 'maxCol', maxCol, false, false, false);
                            J$.N(2205497, 'minHelpCol', minHelpCol, false, false, false);
                            J$.N(2205505, 'maxHelpCol', maxHelpCol, false, false, false);
                            J$.N(2205513, 'lines', lines, false, false, false);
                            J$.N(2205521, 'maxWidth', maxWidth, false, false, false);
                            J$.N(2205529, 'helpCol', helpCol, false, false, false);
                            J$.N(2205537, 'i', i, false, false, false);
                            J$.N(2205545, 'rv', rv, false, false, false);
                            config = J$.W(2201641, 'config', J$.C(136496, J$.R(2201625, 'config', config, false, false)) ? J$._() : J$.T(2201633, {}, 11, false), config, false, false);
                            J$.M(2201673, J$.R(2201649, 'assert', assert, false, true), 'object', false)(J$.R(2201657, 'config', config, false, false), J$.T(2201665, 'config', 21, false));
                            var indent = J$.W(2201729, 'indent', J$.F(2201721, J$.R(2201681, 'makeIndent', makeIndent, false, true), false)(J$.G(2201697, J$.R(2201689, 'config', config, false, false), 'indent'), J$.T(2201705, 4, 22, false), J$.T(2201713, 'config.indent', 21, false)), indent, false, false);
                            var headingIndent = J$.W(2201817, 'headingIndent', J$.F(2201809, J$.R(2201737, 'makeIndent', makeIndent, false, true), false)(J$.G(2201753, J$.R(2201745, 'config', config, false, false), 'headingIndent'), J$.M(2201793, J$.I(typeof Math === 'undefined' ? Math = J$.R(2201761, 'Math', undefined, true, true) : Math = J$.R(2201761, 'Math', Math, true, true)), 'round', false)(J$.B(265714, '/', J$.G(2201777, J$.R(2201769, 'indent', indent, false, false), 'length'), J$.T(2201785, 2, 22, false))), J$.T(2201801, 'config.headingIndent', 21, false)), headingIndent, false, false);
                            J$.M(2201857, J$.R(2201825, 'assert', assert, false, true), 'optionalString', false)(J$.G(2201841, J$.R(2201833, 'config', config, false, false), 'nameSort'), J$.T(2201849, 'config.nameSort', 21, false));
                            var nameSort = J$.W(2201889, 'nameSort', J$.C(136504, J$.G(2201873, J$.R(2201865, 'config', config, false, false), 'nameSort')) ? J$._() : J$.T(2201881, 'length', 21, false), nameSort, false, false);
                            J$.M(2201953, J$.R(2201897, 'assert', assert, false, true), 'ok', false)(J$.U(265722, '~', J$.M(2201937, J$.T(2201921, [
                                J$.T(2201905, 'length', 21, false),
                                J$.T(2201913, 'none', 21, false)
                            ], 10, false), 'indexOf', false)(J$.R(2201929, 'nameSort', nameSort, false, false))), J$.T(2201945, 'invalid "config.nameSort"', 21, false));
                            J$.M(2201993, J$.R(2201961, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(2201977, J$.R(2201969, 'config', config, false, false), 'maxCol'), J$.T(2201985, 'config.maxCol', 21, false));
                            J$.M(2202033, J$.R(2202001, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(2202017, J$.R(2202009, 'config', config, false, false), 'maxHelpCol'), J$.T(2202025, 'config.maxHelpCol', 21, false));
                            J$.M(2202073, J$.R(2202041, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(2202057, J$.R(2202049, 'config', config, false, false), 'minHelpCol'), J$.T(2202065, 'config.minHelpCol', 21, false));
                            J$.M(2202113, J$.R(2202081, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(2202097, J$.R(2202089, 'config', config, false, false), 'helpCol'), J$.T(2202105, 'config.helpCol', 21, false));
                            J$.M(2202153, J$.R(2202121, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2202137, J$.R(2202129, 'config', config, false, false), 'includeEnv'), J$.T(2202145, 'config.includeEnv', 21, false));
                            J$.M(2202193, J$.R(2202161, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2202177, J$.R(2202169, 'config', config, false, false), 'includeDefault'), J$.T(2202185, 'config.includeDefault', 21, false));
                            J$.M(2202233, J$.R(2202201, 'assert', assert, false, true), 'optionalBool', false)(J$.G(2202217, J$.R(2202209, 'config', config, false, false), 'helpWrap'), J$.T(2202225, 'config.helpWrap', 21, false));
                            var maxCol = J$.W(2202265, 'maxCol', J$.C(136512, J$.G(2202249, J$.R(2202241, 'config', config, false, false), 'maxCol')) ? J$._() : J$.T(2202257, 80, 22, false), maxCol, false, false);
                            var minHelpCol = J$.W(2202297, 'minHelpCol', J$.C(136520, J$.G(2202281, J$.R(2202273, 'config', config, false, false), 'minHelpCol')) ? J$._() : J$.T(2202289, 20, 22, false), minHelpCol, false, false);
                            var maxHelpCol = J$.W(2202329, 'maxHelpCol', J$.C(136528, J$.G(2202313, J$.R(2202305, 'config', config, false, false), 'maxHelpCol')) ? J$._() : J$.T(2202321, 40, 22, false), maxHelpCol, false, false);
                            var lines = J$.W(2202345, 'lines', J$.T(2202337, [], 10, false), lines, false, false);
                            var maxWidth = J$.W(2202361, 'maxWidth', J$.T(2202353, 0, 22, false), maxWidth, false, false);
                            J$.M(2203225, J$.G(2202377, J$.R(2202369, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(2203217, function (o) {
                                jalangiLabel27:
                                    while (true) {
                                        try {
                                            J$.Fe(2203161, arguments.callee, this, arguments);
                                            arguments = J$.N(2203169, 'arguments', arguments, true, false, false);
                                            o = J$.N(2203177, 'o', o, true, false, false);
                                            J$.N(2203185, 'type', type, false, false, false);
                                            J$.N(2203193, 'arg', arg, false, false, false);
                                            J$.N(2203201, 'line', line, false, false, false);
                                            J$.N(2203209, 'names', names, false, false, false);
                                            if (J$.C(136536, J$.G(2202393, J$.R(2202385, 'o', o, false, false), 'hidden'))) {
                                                return J$.Rt(2202401, undefined);
                                            }
                                            if (J$.C(136552, J$.C(136544, J$.B(265730, '!==', J$.G(2202417, J$.R(2202409, 'o', o, false, false), 'group'), J$.T(2202425, undefined, 24, false))) ? J$.B(265738, '!==', J$.G(2202441, J$.R(2202433, 'o', o, false, false), 'group'), J$.T(2202449, null, 25, false)) : J$._())) {
                                                J$.M(2202473, J$.R(2202457, 'lines', lines, false, false), 'push', false)(J$.T(2202465, null, 25, false));
                                                return J$.Rt(2202481, undefined);
                                            }
                                            var type = J$.W(2202521, 'type', J$.G(2202513, J$.R(2202489, 'optionTypes', optionTypes, false, true), J$.G(2202505, J$.R(2202497, 'o', o, false, false), 'type')), type, false, false);
                                            var arg = J$.W(2202569, 'arg', J$.C(136568, J$.C(136560, J$.G(2202537, J$.R(2202529, 'o', o, false, false), 'helpArg')) ? J$._() : J$.G(2202553, J$.R(2202545, 'type', type, false, false), 'helpArg')) ? J$._() : J$.T(2202561, 'ARG', 21, false), arg, false, false);
                                            var line = J$.W(2202585, 'line', J$.T(2202577, '', 21, false), line, false, false);
                                            var names = J$.W(2202617, 'names', J$.M(2202609, J$.G(2202601, J$.R(2202593, 'o', o, false, false), 'names'), 'slice', false)(), names, false, false);
                                            if (J$.C(136592, J$.B(265746, '===', J$.R(2202625, 'nameSort', nameSort, false, false), J$.T(2202633, 'length', 21, false)))) {
                                                J$.M(2202801, J$.R(2202641, 'names', names, false, false), 'sort', false)(J$.T(2202793, function (a, b) {
                                                    jalangiLabel25:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2202761, arguments.callee, this, arguments);
                                                                arguments = J$.N(2202769, 'arguments', arguments, true, false, false);
                                                                a = J$.N(2202777, 'a', a, true, false, false);
                                                                b = J$.N(2202785, 'b', b, true, false, false);
                                                                if (J$.C(136584, J$.B(265754, '<', J$.G(2202657, J$.R(2202649, 'a', a, false, false), 'length'), J$.G(2202673, J$.R(2202665, 'b', b, false, false), 'length'))))
                                                                    return J$.Rt(2202689, J$.U(265762, '-', J$.T(2202681, 1, 22, false)));
                                                                else if (J$.C(136576, J$.B(265770, '<', J$.G(2202705, J$.R(2202697, 'b', b, false, false), 'length'), J$.G(2202721, J$.R(2202713, 'a', a, false, false), 'length'))))
                                                                    return J$.Rt(2202737, J$.T(2202729, 1, 22, false));
                                                                else
                                                                    return J$.Rt(2202753, J$.T(2202745, 0, 22, false));
                                                            } catch (J$e) {
                                                                J$.Ex(2210353, J$e);
                                                            } finally {
                                                                if (J$.Fr(2210361))
                                                                    continue jalangiLabel25;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                            J$.M(2203081, J$.R(2202809, 'names', names, false, false), 'forEach', false)(J$.T(2203073, function (name, i) {
                                                jalangiLabel26:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2203041, arguments.callee, this, arguments);
                                                            arguments = J$.N(2203049, 'arguments', arguments, true, false, false);
                                                            name = J$.N(2203057, 'name', name, true, false, false);
                                                            i = J$.N(2203065, 'i', i, true, false, false);
                                                            if (J$.C(136600, J$.B(265778, '>', J$.R(2202817, 'i', i, false, false), J$.T(2202825, 0, 22, false))))
                                                                line = J$.W(2202849, 'line', J$.B(265786, '+', J$.R(2202841, 'line', line, false, false), J$.T(2202833, ', ', 21, false)), line, false, false);
                                                            if (J$.C(136624, J$.B(265794, '===', J$.G(2202865, J$.R(2202857, 'name', name, false, false), 'length'), J$.T(2202873, 1, 22, false)))) {
                                                                line = J$.W(2202905, 'line', J$.B(265810, '+', J$.R(2202897, 'line', line, false, false), J$.B(265802, '+', J$.T(2202881, '-', 21, false), J$.R(2202889, 'name', name, false, false))), line, false, false);
                                                                if (J$.C(136608, J$.G(2202921, J$.R(2202913, 'type', type, false, false), 'takesArg')))
                                                                    line = J$.W(2202953, 'line', J$.B(265826, '+', J$.R(2202945, 'line', line, false, false), J$.B(265818, '+', J$.T(2202929, ' ', 21, false), J$.R(2202937, 'arg', arg, false, false))), line, false, false);
                                                            } else {
                                                                line = J$.W(2202985, 'line', J$.B(265842, '+', J$.R(2202977, 'line', line, false, false), J$.B(265834, '+', J$.T(2202961, '--', 21, false), J$.R(2202969, 'name', name, false, false))), line, false, false);
                                                                if (J$.C(136616, J$.G(2203001, J$.R(2202993, 'type', type, false, false), 'takesArg')))
                                                                    line = J$.W(2203033, 'line', J$.B(265858, '+', J$.R(2203025, 'line', line, false, false), J$.B(265850, '+', J$.T(2203009, '=', 21, false), J$.R(2203017, 'arg', arg, false, false))), line, false, false);
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(2210369, J$e);
                                                        } finally {
                                                            if (J$.Fr(2210377))
                                                                continue jalangiLabel26;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            maxWidth = J$.W(2203129, 'maxWidth', J$.M(2203121, J$.I(typeof Math === 'undefined' ? Math = J$.R(2203089, 'Math', undefined, true, true) : Math = J$.R(2203089, 'Math', Math, true, true)), 'max', false)(J$.R(2203097, 'maxWidth', maxWidth, false, false), J$.G(2203113, J$.R(2203105, 'line', line, false, false), 'length')), maxWidth, false, false);
                                            J$.M(2203153, J$.R(2203137, 'lines', lines, false, false), 'push', false)(J$.R(2203145, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2210385, J$e);
                                        } finally {
                                            if (J$.Fr(2210393))
                                                continue jalangiLabel27;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var helpCol = J$.W(2203249, 'helpCol', J$.G(2203241, J$.R(2203233, 'config', config, false, false), 'helpCol'), helpCol, false, false);
                            if (J$.C(136632, J$.U(265866, '!', J$.R(2203257, 'helpCol', helpCol, false, false)))) {
                                helpCol = J$.W(2203297, 'helpCol', J$.B(265882, '+', J$.B(265874, '+', J$.R(2203265, 'maxWidth', maxWidth, false, false), J$.G(2203281, J$.R(2203273, 'indent', indent, false, false), 'length')), J$.T(2203289, 2, 22, false)), helpCol, false, false);
                                helpCol = J$.W(2203361, 'helpCol', J$.M(2203353, J$.I(typeof Math === 'undefined' ? Math = J$.R(2203305, 'Math', undefined, true, true) : Math = J$.R(2203305, 'Math', Math, true, true)), 'min', false)(J$.M(2203337, J$.I(typeof Math === 'undefined' ? Math = J$.R(2203313, 'Math', undefined, true, true) : Math = J$.R(2203313, 'Math', Math, true, true)), 'max', false)(J$.R(2203321, 'helpCol', helpCol, false, false), J$.R(2203329, 'minHelpCol', minHelpCol, false, false)), J$.R(2203345, 'maxHelpCol', maxHelpCol, false, false)), helpCol, false, false);
                            }
                            var i = J$.W(2203377, 'i', J$.U(265890, '-', J$.T(2203369, 1, 22, false)), i, false, false);
                            J$.M(2205337, J$.G(2203393, J$.R(2203385, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(2205329, function (o) {
                                jalangiLabel30:
                                    while (true) {
                                        try {
                                            J$.Fe(2205233, arguments.callee, this, arguments);
                                            arguments = J$.N(2205241, 'arguments', arguments, true, false, false);
                                            o = J$.N(2205249, 'o', o, true, false, false);
                                            J$.N(2205257, 'helpDefault', helpDefault, false, false, false);
                                            J$.N(2205265, 'line', line, false, false, false);
                                            J$.N(2205273, 'n', n, false, false, false);
                                            J$.N(2205281, 'helpEnv', helpEnv, false, false, false);
                                            J$.N(2205289, 'type', type, false, false, false);
                                            J$.N(2205297, 'arg', arg, false, false, false);
                                            J$.N(2205305, 'envs', envs, false, false, false);
                                            J$.N(2205313, 'help', help, false, false, false);
                                            J$.N(2205321, 'helpLines', helpLines, false, false, false);
                                            if (J$.C(136640, J$.G(2203409, J$.R(2203401, 'o', o, false, false), 'hidden'))) {
                                                return J$.Rt(2203417, undefined);
                                            }
                                            J$.B(265914, '-', i = J$.W(2203433, 'i', J$.B(265906, '+', J$.U(265898, '+', J$.R(2203425, 'i', i, false, false)), 1), i, false, false), 1);
                                            if (J$.C(136672, J$.C(136648, J$.B(265922, '!==', J$.G(2203449, J$.R(2203441, 'o', o, false, false), 'group'), J$.T(2203457, undefined, 24, false))) ? J$.B(265930, '!==', J$.G(2203473, J$.R(2203465, 'o', o, false, false), 'group'), J$.T(2203481, null, 25, false)) : J$._())) {
                                                if (J$.C(136664, J$.B(265938, '===', J$.G(2203497, J$.R(2203489, 'o', o, false, false), 'group'), J$.T(2203505, '', 21, false)))) {
                                                    J$.P(2203537, J$.R(2203513, 'lines', lines, false, false), J$.R(2203521, 'i', i, false, false), J$.T(2203529, '', 21, false));
                                                } else {
                                                    J$.P(2203625, J$.R(2203545, 'lines', lines, false, false), J$.R(2203553, 'i', i, false, false), J$.B(265970, '+', J$.B(265962, '+', J$.B(265954, '+', J$.C(136656, J$.B(265946, '===', J$.R(2203561, 'i', i, false, false), J$.T(2203569, 0, 22, false))) ? J$.T(2203577, '', 21, false) : J$.T(2203585, '\n', 21, false), J$.R(2203593, 'headingIndent', headingIndent, false, false)), J$.G(2203609, J$.R(2203601, 'o', o, false, false), 'group')), J$.T(2203617, ':', 21, false)));
                                                }
                                                return J$.Rt(2203633, undefined);
                                            }
                                            var helpDefault;
                                            if (J$.C(136704, J$.G(2203649, J$.R(2203641, 'config', config, false, false), 'includeDefault'))) {
                                                if (J$.C(136696, J$.B(265978, '!==', J$.G(2203673, J$.R(2203657, 'o', o, false, false), J$.T(2203665, 'default', 21, false)), J$.T(2203681, undefined, 24, false)))) {
                                                    helpDefault = J$.W(2203737, 'helpDefault', J$.F(2203729, J$.R(2203689, 'format', format, false, true), false)(J$.T(2203697, 'Default: %j', 21, false), J$.G(2203721, J$.R(2203705, 'o', o, false, false), J$.T(2203713, 'default', 21, false))), helpDefault, false, false);
                                                } else if (J$.C(136688, J$.C(136680, J$.G(2203753, J$.R(2203745, 'o', o, false, false), 'type')) ? J$.B(265986, '!==', J$.G(2203801, J$.G(2203785, J$.R(2203761, 'optionTypes', optionTypes, false, true), J$.G(2203777, J$.R(2203769, 'o', o, false, false), 'type')), J$.T(2203793, 'default', 21, false)), J$.T(2203809, undefined, 24, false)) : J$._())) {
                                                    helpDefault = J$.W(2203889, 'helpDefault', J$.F(2203881, J$.R(2203817, 'format', format, false, true), false)(J$.T(2203825, 'Default: %j', 21, false), J$.G(2203873, J$.G(2203857, J$.R(2203833, 'optionTypes', optionTypes, false, true), J$.G(2203849, J$.R(2203841, 'o', o, false, false), 'type')), J$.T(2203865, 'default', 21, false))), helpDefault, false, false);
                                                }
                                            }
                                            var line = J$.W(2203953, 'line', J$.P(2203945, J$.R(2203897, 'lines', lines, false, false), J$.R(2203905, 'i', i, false, false), J$.B(265994, '+', J$.R(2203913, 'indent', indent, false, false), J$.G(2203937, J$.R(2203921, 'lines', lines, false, false), J$.R(2203929, 'i', i, false, false)))), line, false, false);
                                            if (J$.C(136736, J$.C(136728, J$.C(136720, J$.U(266002, '!', J$.G(2203969, J$.R(2203961, 'o', o, false, false), 'help'))) ? J$.U(266010, '!', J$.C(136712, J$.G(2203985, J$.R(2203977, 'config', config, false, false), 'includeEnv')) ? J$.G(2204001, J$.R(2203993, 'o', o, false, false), 'env') : J$._()) : J$._()) ? J$.U(266018, '!', J$.R(2204009, 'helpDefault', helpDefault, false, false)) : J$._())) {
                                                return J$.Rt(2204017, undefined);
                                            }
                                            var n = J$.W(2204049, 'n', J$.B(266026, '-', J$.R(2204025, 'helpCol', helpCol, false, false), J$.G(2204041, J$.R(2204033, 'line', line, false, false), 'length')), n, false, false);
                                            if (J$.C(136744, J$.B(266034, '>=', J$.R(2204057, 'n', n, false, false), J$.T(2204065, 0, 22, false)))) {
                                                line = J$.W(2204105, 'line', J$.B(266042, '+', J$.R(2204097, 'line', line, false, false), J$.F(2204089, J$.R(2204073, 'space', space, false, true), false)(J$.R(2204081, 'n', n, false, false))), line, false, false);
                                            } else {
                                                line = J$.W(2204153, 'line', J$.B(266058, '+', J$.R(2204145, 'line', line, false, false), J$.B(266050, '+', J$.T(2204113, '\n', 21, false), J$.F(2204137, J$.R(2204121, 'space', space, false, true), false)(J$.R(2204129, 'helpCol', helpCol, false, false)))), line, false, false);
                                            }
                                            var helpEnv = J$.W(2204169, 'helpEnv', J$.T(2204161, '', 21, false), helpEnv, false, false);
                                            if (J$.C(136800, J$.C(136760, J$.C(136752, J$.G(2204185, J$.R(2204177, 'o', o, false, false), 'env')) ? J$.G(2204209, J$.G(2204201, J$.R(2204193, 'o', o, false, false), 'env'), 'length') : J$._()) ? J$.G(2204225, J$.R(2204217, 'config', config, false, false), 'includeEnv') : J$._())) {
                                                helpEnv = J$.W(2204249, 'helpEnv', J$.B(266066, '+', J$.R(2204241, 'helpEnv', helpEnv, false, false), J$.T(2204233, 'Environment: ', 21, false)), helpEnv, false, false);
                                                var type = J$.W(2204289, 'type', J$.G(2204281, J$.R(2204257, 'optionTypes', optionTypes, false, true), J$.G(2204273, J$.R(2204265, 'o', o, false, false), 'type')), type, false, false);
                                                var arg = J$.W(2204337, 'arg', J$.C(136776, J$.C(136768, J$.G(2204305, J$.R(2204297, 'o', o, false, false), 'helpArg')) ? J$._() : J$.G(2204321, J$.R(2204313, 'type', type, false, false), 'helpArg')) ? J$._() : J$.T(2204329, 'ARG', 21, false), arg, false, false);
                                                var envs = J$.W(2204529, 'envs', J$.M(2204521, J$.C(136784, J$.M(2204369, J$.I(typeof Array === 'undefined' ? Array = J$.R(2204345, 'Array', undefined, true, true) : Array = J$.R(2204345, 'Array', Array, true, true)), 'isArray', false)(J$.G(2204361, J$.R(2204353, 'o', o, false, false), 'env'))) ? J$.G(2204385, J$.R(2204377, 'o', o, false, false), 'env') : J$.T(2204409, [J$.G(2204401, J$.R(2204393, 'o', o, false, false), 'env')], 10, false), 'map', false)(J$.T(2204513, function (e) {
                                                    jalangiLabel28:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2204489, arguments.callee, this, arguments);
                                                                arguments = J$.N(2204497, 'arguments', arguments, true, false, false);
                                                                e = J$.N(2204505, 'e', e, true, false, false);
                                                                if (J$.C(136792, J$.G(2204425, J$.R(2204417, 'type', type, false, false), 'takesArg'))) {
                                                                    return J$.Rt(2204457, J$.B(266082, '+', J$.B(266074, '+', J$.R(2204433, 'e', e, false, false), J$.T(2204441, '=', 21, false)), J$.R(2204449, 'arg', arg, false, false)));
                                                                } else {
                                                                    return J$.Rt(2204481, J$.B(266090, '+', J$.R(2204465, 'e', e, false, false), J$.T(2204473, '=1', 21, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(2210401, J$e);
                                                            } finally {
                                                                if (J$.Fr(2210409))
                                                                    continue jalangiLabel28;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), envs, false, false);
                                                helpEnv = J$.W(2204569, 'helpEnv', J$.B(266098, '+', J$.R(2204561, 'helpEnv', helpEnv, false, false), J$.M(2204553, J$.R(2204537, 'envs', envs, false, false), 'join', false)(J$.T(2204545, ', ', 21, false))), helpEnv, false, false);
                                            }
                                            var help = J$.W(2204609, 'help', J$.M(2204601, J$.C(136808, J$.G(2204585, J$.R(2204577, 'o', o, false, false), 'help')) ? J$._() : J$.T(2204593, '', 21, false), 'trim', false)(), help, false, false);
                                            if (J$.C(136880, J$.C(136816, J$.B(266106, '!==', J$.G(2204625, J$.R(2204617, 'o', o, false, false), 'helpWrap'), J$.T(2204633, false, 23, false))) ? J$.B(266114, '!==', J$.G(2204649, J$.R(2204641, 'config', config, false, false), 'helpWrap'), J$.T(2204657, false, 23, false)) : J$._())) {
                                                if (J$.C(136832, J$.C(136824, J$.G(2204673, J$.R(2204665, 'help', help, false, false), 'length')) ? J$.U(266138, '!', J$.U(266130, '~', J$.M(2204713, J$.T(2204681, '.!?"\'', 21, false), 'indexOf', false)(J$.M(2204705, J$.R(2204689, 'help', help, false, false), 'slice', false)(J$.U(266122, '-', J$.T(2204697, 1, 22, false)))))) : J$._())) {
                                                    help = J$.W(2204737, 'help', J$.B(266146, '+', J$.R(2204729, 'help', help, false, false), J$.T(2204721, '.', 21, false)), help, false, false);
                                                }
                                                if (J$.C(136840, J$.G(2204753, J$.R(2204745, 'help', help, false, false), 'length'))) {
                                                    help = J$.W(2204777, 'help', J$.B(266154, '+', J$.R(2204769, 'help', help, false, false), J$.T(2204761, ' ', 21, false)), help, false, false);
                                                }
                                                help = J$.W(2204801, 'help', J$.B(266162, '+', J$.R(2204793, 'help', help, false, false), J$.R(2204785, 'helpEnv', helpEnv, false, false)), help, false, false);
                                                if (J$.C(136856, J$.R(2204809, 'helpDefault', helpDefault, false, false))) {
                                                    if (J$.C(136848, J$.R(2204817, 'helpEnv', helpEnv, false, false))) {
                                                        help = J$.W(2204841, 'help', J$.B(266170, '+', J$.R(2204833, 'help', help, false, false), J$.T(2204825, '. ', 21, false)), help, false, false);
                                                    }
                                                    help = J$.W(2204865, 'help', J$.B(266178, '+', J$.R(2204857, 'help', help, false, false), J$.R(2204849, 'helpDefault', helpDefault, false, false)), help, false, false);
                                                }
                                                line = J$.W(2204961, 'line', J$.B(266202, '+', J$.R(2204953, 'line', line, false, false), J$.M(2204945, J$.F(2204905, J$.R(2204873, 'textwrap', textwrap, false, true), false)(J$.R(2204881, 'help', help, false, false), J$.B(266186, '-', J$.R(2204889, 'maxCol', maxCol, false, false), J$.R(2204897, 'helpCol', helpCol, false, false))), 'join', false)(J$.B(266194, '+', J$.T(2204913, '\n', 21, false), J$.F(2204937, J$.R(2204921, 'space', space, false, true), false)(J$.R(2204929, 'helpCol', helpCol, false, false))))), line, false, false);
                                            } else {
                                                var helpLines = J$.W(2205057, 'helpLines', J$.M(2205049, J$.M(2204985, J$.R(2204969, 'help', help, false, false), 'split', false)(J$.T(2204977, '\n', 21, false)), 'filter', false)(J$.T(2205041, function (ln) {
                                                    jalangiLabel29:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2205017, arguments.callee, this, arguments);
                                                                arguments = J$.N(2205025, 'arguments', arguments, true, false, false);
                                                                ln = J$.N(2205033, 'ln', ln, true, false, false);
                                                                return J$.Rt(2205009, J$.G(2205001, J$.R(2204993, 'ln', ln, false, false), 'length'));
                                                            } catch (J$e) {
                                                                J$.Ex(2210417, J$e);
                                                            } finally {
                                                                if (J$.Fr(2210425))
                                                                    continue jalangiLabel29;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), helpLines, false, false);
                                                if (J$.C(136864, J$.B(266210, '!==', J$.R(2205065, 'helpEnv', helpEnv, false, false), J$.T(2205073, '', 21, false)))) {
                                                    J$.M(2205097, J$.R(2205081, 'helpLines', helpLines, false, false), 'push', false)(J$.R(2205089, 'helpEnv', helpEnv, false, false));
                                                }
                                                if (J$.C(136872, J$.R(2205105, 'helpDefault', helpDefault, false, false))) {
                                                    J$.M(2205129, J$.R(2205113, 'helpLines', helpLines, false, false), 'push', false)(J$.R(2205121, 'helpDefault', helpDefault, false, false));
                                                }
                                                line = J$.W(2205193, 'line', J$.B(266226, '+', J$.R(2205185, 'line', line, false, false), J$.M(2205177, J$.R(2205137, 'helpLines', helpLines, false, false), 'join', false)(J$.B(266218, '+', J$.T(2205145, '\n', 21, false), J$.F(2205169, J$.R(2205153, 'space', space, false, true), false)(J$.R(2205161, 'helpCol', helpCol, false, false))))), line, false, false);
                                            }
                                            J$.P(2205225, J$.R(2205201, 'lines', lines, false, false), J$.R(2205209, 'i', i, false, false), J$.R(2205217, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2210433, J$e);
                                        } finally {
                                            if (J$.Fr(2210441))
                                                continue jalangiLabel30;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var rv = J$.W(2205353, 'rv', J$.T(2205345, '', 21, false), rv, false, false);
                            if (J$.C(136888, J$.B(266234, '>', J$.G(2205369, J$.R(2205361, 'lines', lines, false, false), 'length'), J$.T(2205377, 0, 22, false)))) {
                                rv = J$.W(2205417, 'rv', J$.B(266242, '+', J$.M(2205401, J$.R(2205385, 'lines', lines, false, false), 'join', false)(J$.T(2205393, '\n', 21, false)), J$.T(2205409, '\n', 21, false)), rv, false, false);
                            }
                            return J$.Rt(2205433, J$.R(2205425, 'rv', rv, false, false));
                        } catch (J$e) {
                            J$.Ex(2210449, J$e);
                        } finally {
                            if (J$.Fr(2210457))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2205865, J$.G(2205577, J$.R(2205569, 'Parser', Parser, false, true), 'prototype'), 'bashCompletion', J$.T(2205857, function bashCompletion(args) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(2205833, arguments.callee, this, arguments);
                            arguments = J$.N(2205841, 'arguments', arguments, true, false, false);
                            args = J$.N(2205849, 'args', args, true, false, false);
                            J$.M(2205609, J$.R(2205585, 'assert', assert, false, true), 'object', false)(J$.R(2205593, 'args', args, false, false), J$.T(2205601, 'args', 21, false));
                            J$.M(2205649, J$.R(2205617, 'assert', assert, false, true), 'string', false)(J$.G(2205633, J$.R(2205625, 'args', args, false, false), 'name'), J$.T(2205641, 'args.name', 21, false));
                            J$.M(2205689, J$.R(2205657, 'assert', assert, false, true), 'optionalString', false)(J$.G(2205673, J$.R(2205665, 'args', args, false, false), 'specExtra'), J$.T(2205681, 'args.specExtra', 21, false));
                            J$.M(2205729, J$.R(2205697, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(2205713, J$.R(2205705, 'args', args, false, false), 'argtypes'), J$.T(2205721, 'args.argtypes', 21, false));
                            return J$.Rt(2205825, J$.F(2205817, J$.R(2205737, 'bashCompletionFromOptions', bashCompletionFromOptions, false, true), false)(J$.T(2205809, {
                                name: J$.G(2205753, J$.R(2205745, 'args', args, false, false), 'name'),
                                specExtra: J$.G(2205769, J$.R(2205761, 'args', args, false, false), 'specExtra'),
                                argtypes: J$.G(2205785, J$.R(2205777, 'args', args, false, false), 'argtypes'),
                                options: J$.G(2205801, J$.R(2205793, 'this', this, false, false), 'options')
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(2210465, J$e);
                        } finally {
                            if (J$.Fr(2210473))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var BASH_COMPLETION_TEMPLATE_PATH = J$.W(2205905, 'BASH_COMPLETION_TEMPLATE_PATH', J$.M(2205897, J$.R(2205873, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(2205881, '__dirname', undefined, true, true) : __dirname = J$.R(2205881, '__dirname', __dirname, true, true)), J$.T(2205889, '../etc/dashdash.bash_completion.in', 21, false)), BASH_COMPLETION_TEMPLATE_PATH, false, true);
            ;
            J$.P(2209553, J$.I(typeof module === 'undefined' ? module = J$.R(2209417, 'module', undefined, true, true) : module = J$.R(2209417, 'module', module, true, true)), 'exports', J$.T(2209545, {
                createParser: J$.R(2209425, 'createParser', createParser, false, true),
                Parser: J$.R(2209433, 'Parser', Parser, false, true),
                parse: J$.R(2209441, 'parse', parse, false, true),
                addOptionType: J$.R(2209449, 'addOptionType', addOptionType, false, true),
                getOptionType: J$.R(2209457, 'getOptionType', getOptionType, false, true),
                synopsisFromOpt: J$.R(2209465, 'synopsisFromOpt', synopsisFromOpt, false, true),
                BASH_COMPLETION_TEMPLATE_PATH: J$.R(2209473, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, true),
                bashCompletionFromOptions: J$.R(2209481, 'bashCompletionFromOptions', bashCompletionFromOptions, false, true),
                bashCompletionSpecFromOptions: J$.R(2209489, 'bashCompletionSpecFromOptions', bashCompletionSpecFromOptions, false, true),
                parseBool: J$.R(2209497, 'parseBool', parseBool, false, true),
                parseString: J$.R(2209505, 'parseString', parseString, false, true),
                parseNumber: J$.R(2209513, 'parseNumber', parseNumber, false, true),
                parseInteger: J$.R(2209521, 'parseInteger', parseInteger, false, true),
                parsePositiveInteger: J$.R(2209529, 'parsePositiveInteger', parsePositiveInteger, false, true),
                parseDate: J$.R(2209537, 'parseDate', parseDate, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2210657, J$e);
        } finally {
            if (J$.Sr(2210665))
                continue jalangiLabel44;
            else
                break jalangiLabel44;
        }
    }
// JALANGI DO NOT INSTRUMENT

