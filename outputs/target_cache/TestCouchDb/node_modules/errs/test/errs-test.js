J$.noInstrEval = false;
jalangiLabel29:
    while (true) {
        try {
            J$.Se(2288873, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/errs/test/errs-test.js');
            J$.N(2288881, 'assert', assert, false, false, false);
            J$.N(2288889, 'events', events, false, false, false);
            J$.N(2288897, 'vows', vows, false, false, false);
            J$.N(2288905, 'errs', errs, false, false, false);
            J$.N(2288913, 'fixtures', fixtures, false, false, false);
            J$.N(2288921, 'macros', macros, false, false, false);
            J$.N(2288929, 'opts', opts, false, false, false);
            J$.T(2283209, 'use strict', 21, false);
            J$.F(2283233, J$.I(typeof require === 'undefined' ? require = J$.R(2283217, 'require', undefined, true, true) : require = J$.R(2283217, 'require', require, true, true)), false)(J$.T(2283225, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2283257, J$.I(typeof require === 'undefined' ? require = J$.R(2283241, 'require', undefined, true, true) : require = J$.R(2283241, 'require', require, true, true)), false)(J$.T(2283249, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2283281, J$.I(typeof require === 'undefined' ? require = J$.R(2283265, 'require', undefined, true, true) : require = J$.R(2283265, 'require', require, true, true)), false)(J$.T(2283273, 'core-js/modules/es.date.to-json', 21, false));
            J$.F(2283305, J$.I(typeof require === 'undefined' ? require = J$.R(2283289, 'require', undefined, true, true) : require = J$.R(2283289, 'require', require, true, true)), false)(J$.T(2283297, 'core-js/modules/es.function.bind', 21, false));
            J$.F(2283329, J$.I(typeof require === 'undefined' ? require = J$.R(2283313, 'require', undefined, true, true) : require = J$.R(2283313, 'require', require, true, true)), false)(J$.T(2283321, 'core-js/modules/es.object.get-own-property-descriptor', 21, false));
            J$.F(2283353, J$.I(typeof require === 'undefined' ? require = J$.R(2283337, 'require', undefined, true, true) : require = J$.R(2283337, 'require', require, true, true)), false)(J$.T(2283345, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2283377, J$.I(typeof require === 'undefined' ? require = J$.R(2283361, 'require', undefined, true, true) : require = J$.R(2283361, 'require', require, true, true)), false)(J$.T(2283369, 'core-js/modules/es.string.match', 21, false));
            J$.F(2283401, J$.I(typeof require === 'undefined' ? require = J$.R(2283385, 'require', undefined, true, true) : require = J$.R(2283385, 'require', require, true, true)), false)(J$.T(2283393, 'core-js/modules/web.url.to-json', 21, false));
            J$.F(2283425, J$.I(typeof require === 'undefined' ? require = J$.R(2283409, 'require', undefined, true, true) : require = J$.R(2283409, 'require', require, true, true)), false)(J$.T(2283417, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2283449, J$.I(typeof require === 'undefined' ? require = J$.R(2283433, 'require', undefined, true, true) : require = J$.R(2283433, 'require', require, true, true)), false)(J$.T(2283441, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2283473, J$.I(typeof require === 'undefined' ? require = J$.R(2283457, 'require', undefined, true, true) : require = J$.R(2283457, 'require', require, true, true)), false)(J$.T(2283465, 'core-js/modules/es.date.to-json', 21, false));
            J$.F(2283497, J$.I(typeof require === 'undefined' ? require = J$.R(2283481, 'require', undefined, true, true) : require = J$.R(2283481, 'require', require, true, true)), false)(J$.T(2283489, 'core-js/modules/es.function.bind', 21, false));
            J$.F(2283521, J$.I(typeof require === 'undefined' ? require = J$.R(2283505, 'require', undefined, true, true) : require = J$.R(2283505, 'require', require, true, true)), false)(J$.T(2283513, 'core-js/modules/es.object.get-own-property-descriptor', 21, false));
            J$.F(2283545, J$.I(typeof require === 'undefined' ? require = J$.R(2283529, 'require', undefined, true, true) : require = J$.R(2283529, 'require', require, true, true)), false)(J$.T(2283537, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2283569, J$.I(typeof require === 'undefined' ? require = J$.R(2283553, 'require', undefined, true, true) : require = J$.R(2283553, 'require', require, true, true)), false)(J$.T(2283561, 'core-js/modules/es.string.match', 21, false));
            J$.F(2283593, J$.I(typeof require === 'undefined' ? require = J$.R(2283577, 'require', undefined, true, true) : require = J$.R(2283577, 'require', require, true, true)), false)(J$.T(2283585, 'core-js/modules/web.url.to-json', 21, false));
            J$.F(2283617, J$.I(typeof require === 'undefined' ? require = J$.R(2283601, 'require', undefined, true, true) : require = J$.R(2283601, 'require', require, true, true)), false)(J$.T(2283609, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2283641, J$.I(typeof require === 'undefined' ? require = J$.R(2283625, 'require', undefined, true, true) : require = J$.R(2283625, 'require', require, true, true)), false)(J$.T(2283633, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2283665, J$.I(typeof require === 'undefined' ? require = J$.R(2283649, 'require', undefined, true, true) : require = J$.R(2283649, 'require', require, true, true)), false)(J$.T(2283657, 'core-js/modules/es.date.to-json', 21, false));
            J$.F(2283689, J$.I(typeof require === 'undefined' ? require = J$.R(2283673, 'require', undefined, true, true) : require = J$.R(2283673, 'require', require, true, true)), false)(J$.T(2283681, 'core-js/modules/es.function.bind', 21, false));
            J$.F(2283713, J$.I(typeof require === 'undefined' ? require = J$.R(2283697, 'require', undefined, true, true) : require = J$.R(2283697, 'require', require, true, true)), false)(J$.T(2283705, 'core-js/modules/es.object.get-own-property-descriptor', 21, false));
            J$.F(2283737, J$.I(typeof require === 'undefined' ? require = J$.R(2283721, 'require', undefined, true, true) : require = J$.R(2283721, 'require', require, true, true)), false)(J$.T(2283729, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2283761, J$.I(typeof require === 'undefined' ? require = J$.R(2283745, 'require', undefined, true, true) : require = J$.R(2283745, 'require', require, true, true)), false)(J$.T(2283753, 'core-js/modules/es.string.match', 21, false));
            J$.F(2283785, J$.I(typeof require === 'undefined' ? require = J$.R(2283769, 'require', undefined, true, true) : require = J$.R(2283769, 'require', require, true, true)), false)(J$.T(2283777, 'core-js/modules/web.url.to-json', 21, false));
            J$.F(2283809, J$.I(typeof require === 'undefined' ? require = J$.R(2283793, 'require', undefined, true, true) : require = J$.R(2283793, 'require', require, true, true)), false)(J$.T(2283801, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2283833, J$.I(typeof require === 'undefined' ? require = J$.R(2283817, 'require', undefined, true, true) : require = J$.R(2283817, 'require', require, true, true)), false)(J$.T(2283825, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2283857, J$.I(typeof require === 'undefined' ? require = J$.R(2283841, 'require', undefined, true, true) : require = J$.R(2283841, 'require', require, true, true)), false)(J$.T(2283849, 'core-js/modules/es.date.to-json', 21, false));
            J$.F(2283881, J$.I(typeof require === 'undefined' ? require = J$.R(2283865, 'require', undefined, true, true) : require = J$.R(2283865, 'require', require, true, true)), false)(J$.T(2283873, 'core-js/modules/es.function.bind', 21, false));
            J$.F(2283905, J$.I(typeof require === 'undefined' ? require = J$.R(2283889, 'require', undefined, true, true) : require = J$.R(2283889, 'require', require, true, true)), false)(J$.T(2283897, 'core-js/modules/es.object.get-own-property-descriptor', 21, false));
            J$.F(2283929, J$.I(typeof require === 'undefined' ? require = J$.R(2283913, 'require', undefined, true, true) : require = J$.R(2283913, 'require', require, true, true)), false)(J$.T(2283921, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2283953, J$.I(typeof require === 'undefined' ? require = J$.R(2283937, 'require', undefined, true, true) : require = J$.R(2283937, 'require', require, true, true)), false)(J$.T(2283945, 'core-js/modules/es.string.match', 21, false));
            J$.F(2283977, J$.I(typeof require === 'undefined' ? require = J$.R(2283961, 'require', undefined, true, true) : require = J$.R(2283961, 'require', require, true, true)), false)(J$.T(2283969, 'core-js/modules/web.url.to-json', 21, false));
            var assert = J$.W(2284129, 'assert', J$.F(2284001, J$.I(typeof require === 'undefined' ? require = J$.R(2283985, 'require', undefined, true, true) : require = J$.R(2283985, 'require', require, true, true)), false)(J$.T(2283993, 'assert', 21, false)), assert, false, true), events = J$.W(2284137, 'events', J$.F(2284025, J$.I(typeof require === 'undefined' ? require = J$.R(2284009, 'require', undefined, true, true) : require = J$.R(2284009, 'require', require, true, true)), false)(J$.T(2284017, 'events', 21, false)), events, false, true), vows = J$.W(2284145, 'vows', J$.F(2284049, J$.I(typeof require === 'undefined' ? require = J$.R(2284033, 'require', undefined, true, true) : require = J$.R(2284033, 'require', require, true, true)), false)(J$.T(2284041, 'vows', 21, false)), vows, false, true), errs = J$.W(2284153, 'errs', J$.F(2284073, J$.I(typeof require === 'undefined' ? require = J$.R(2284057, 'require', undefined, true, true) : require = J$.R(2284057, 'require', require, true, true)), false)(J$.T(2284065, '../lib/errs', 21, false)), errs, false, true), fixtures = J$.W(2284161, 'fixtures', J$.F(2284097, J$.I(typeof require === 'undefined' ? require = J$.R(2284081, 'require', undefined, true, true) : require = J$.R(2284081, 'require', require, true, true)), false)(J$.T(2284089, './fixtures', 21, false)), fixtures, false, true), macros = J$.W(2284169, 'macros', J$.F(2284121, J$.I(typeof require === 'undefined' ? require = J$.R(2284105, 'require', undefined, true, true) : require = J$.R(2284105, 'require', require, true, true)), false)(J$.T(2284113, './macros', 21, false)), macros, false, true);
            var opts = J$.W(2284289, 'opts', J$.T(2284281, [
                J$.T(2284201, {
                    foo: J$.T(2284177, 'bar', 21, false),
                    status: J$.T(2284185, 404, 22, false),
                    whatever: J$.T(2284193, 'some other property', 21, false)
                }, 11, false),
                J$.T(2284233, {
                    testing: J$.T(2284209, true, 23, false),
                    'some-string': J$.T(2284217, 'is-a-value', 21, false),
                    message: J$.T(2284225, 'This is an error. There are many like it.', 21, false)
                }, 11, false),
                J$.T(2284273, {
                    'a-function': J$.T(2284241, 'that returns an object', 21, false),
                    should: J$.T(2284249, true, 23, false),
                    have: J$.T(2284257, 4, 22, false),
                    properties: J$.T(2284265, 'yes', 21, false)
                }, 11, false)
            ], 10, false), opts, false, true);
            J$.M(2288865, J$.M(2288841, J$.M(2288329, J$.M(2286521, J$.M(2286393, J$.M(2284313, J$.R(2284297, 'vows', vows, false, true), 'describe', false)(J$.T(2284305, 'errs', 21, false)), 'addBatch', false)(J$.T(2286385, {
                'Using errs module': J$.T(2286377, {
                    'the register() method': J$.T(2284569, {
                        'should register the prototype': J$.T(2284441, function shouldRegisterThePrototype() {
                            jalangiLabel0:
                                while (true) {
                                    try {
                                        J$.Fe(2284425, arguments.callee, this, arguments);
                                        arguments = J$.N(2284433, 'arguments', arguments, true, false, false);
                                        J$.M(2284353, J$.R(2284321, 'errs', errs, false, true), 'register', false)(J$.T(2284329, 'named', 21, false), J$.G(2284345, J$.R(2284337, 'fixtures', fixtures, false, true), 'NamedError'));
                                        J$.M(2284417, J$.R(2284361, 'assert', assert, false, true), 'equal', false)(J$.G(2284393, J$.G(2284377, J$.R(2284369, 'errs', errs, false, true), 'registered'), J$.T(2284385, 'named', 21, false)), J$.G(2284409, J$.R(2284401, 'fixtures', fixtures, false, true), 'NamedError'));
                                    } catch (J$e) {
                                        J$.Ex(2288937, J$e);
                                    } finally {
                                        if (J$.Fr(2288945))
                                            continue jalangiLabel0;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false),
                        'should register an error without providing its name': J$.T(2284561, function shouldRegisterAnErrorWithoutProvidingItsName() {
                            jalangiLabel1:
                                while (true) {
                                    try {
                                        J$.Fe(2284545, arguments.callee, this, arguments);
                                        arguments = J$.N(2284553, 'arguments', arguments, true, false, false);
                                        J$.M(2284473, J$.R(2284449, 'errs', errs, false, true), 'register', false)(J$.G(2284465, J$.R(2284457, 'fixtures', fixtures, false, true), 'AnError'));
                                        J$.M(2284537, J$.R(2284481, 'assert', assert, false, true), 'equal', false)(J$.G(2284513, J$.G(2284497, J$.R(2284489, 'errs', errs, false, true), 'registered'), J$.T(2284505, 'anerror', 21, false)), J$.G(2284529, J$.R(2284521, 'fixtures', fixtures, false, true), 'AnError'));
                                    } catch (J$e) {
                                        J$.Ex(2288953, J$e);
                                    } finally {
                                        if (J$.Fr(2288961))
                                            continue jalangiLabel1;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false)
                    }, 11, false),
                    'the create() method with': J$.T(2285129, {
                        'a string': J$.M(2284601, J$.G(2284585, J$.R(2284577, 'macros', macros, false, true), 'create'), 'string', false)(J$.T(2284593, 'An error as a string', 21, false)),
                        'no parameters': J$.M(2284633, J$.G(2284617, J$.R(2284609, 'macros', macros, false, true), 'create'), 'string', false)(J$.T(2284625, 'An error as a string', 21, false)),
                        'an object': J$.T(2284849, {
                            'that has no message': J$.M(2284681, J$.G(2284649, J$.R(2284641, 'macros', macros, false, true), 'create'), 'object', false)(J$.G(2284673, J$.R(2284657, 'opts', opts, false, true), J$.T(2284665, 0, 22, false))),
                            'that has a message': J$.M(2284729, J$.G(2284697, J$.R(2284689, 'macros', macros, false, true), 'create'), 'object', false)(J$.G(2284721, J$.R(2284705, 'opts', opts, false, true), J$.T(2284713, 1, 22, false))),
                            'that has a name': J$.T(2284841, {
                                topic: J$.M(2284761, J$.R(2284737, 'errs', errs, false, true), 'create', false)(J$.T(2284753, { name: J$.T(2284745, 'OverflowError', 21, false) }, 11, false)),
                                'should respect that name in the stack trace': J$.T(2284833, function shouldRespectThatNameInTheStackTrace(err) {
                                    jalangiLabel2:
                                        while (true) {
                                            try {
                                                J$.Fe(2284809, arguments.callee, this, arguments);
                                                arguments = J$.N(2284817, 'arguments', arguments, true, false, false);
                                                err = J$.N(2284825, 'err', err, true, false, false);
                                                J$.M(2284801, J$.R(2284769, 'assert', assert, false, true), 'match', false)(J$.G(2284785, J$.R(2284777, 'err', err, false, false), 'stack'), J$.T(2284793, /^OverflowError/, 14, false));
                                            } catch (J$e) {
                                                J$.Ex(2288969, J$e);
                                            } finally {
                                                if (J$.Fr(2288977))
                                                    continue jalangiLabel2;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false)
                        }, 11, false),
                        'an error': J$.M(2284897, J$.G(2284865, J$.R(2284857, 'macros', macros, false, true), 'create'), 'err', false)(J$.F(2284889, J$.I(typeof Error === 'undefined' ? Error = J$.R(2284873, 'Error', undefined, true, true) : Error = J$.R(2284873, 'Error', Error, true, true)), true)(J$.T(2284881, 'An instance of an error', 21, false))),
                        'a function': J$.M(2284977, J$.G(2284913, J$.R(2284905, 'macros', macros, false, true), 'create'), 'fn', false)(J$.T(2284969, function () {
                            jalangiLabel3:
                                while (true) {
                                    try {
                                        J$.Fe(2284953, arguments.callee, this, arguments);
                                        arguments = J$.N(2284961, 'arguments', arguments, true, false, false);
                                        return J$.Rt(2284945, J$.G(2284937, J$.R(2284921, 'opts', opts, false, true), J$.T(2284929, 2, 22, false)));
                                    } catch (J$e) {
                                        J$.Ex(2288985, J$e);
                                    } finally {
                                        if (J$.Fr(2288993))
                                            continue jalangiLabel3;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false)),
                        'a registered type': J$.T(2285121, {
                            'that exists': J$.M(2285049, J$.G(2284993, J$.R(2284985, 'macros', macros, false, true), 'create'), 'registered', false)(J$.T(2285001, 'named', 21, false), J$.G(2285017, J$.R(2285009, 'fixtures', fixtures, false, true), 'NamedError'), J$.G(2285041, J$.R(2285025, 'opts', opts, false, true), J$.T(2285033, 1, 22, false))),
                            'that doesnt exist': J$.M(2285113, J$.G(2285065, J$.R(2285057, 'macros', macros, false, true), 'create'), 'registered', false)(J$.T(2285073, 'bad', 21, false), J$.T(2285081, null, 25, false), J$.G(2285105, J$.R(2285089, 'opts', opts, false, true), J$.T(2285097, 1, 22, false)))
                        }, 11, false)
                    }, 11, false),
                    'the handle() method': J$.T(2286369, {
                        'with a callback': J$.T(2285361, {
                            topic: J$.T(2285273, function topic() {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(2285249, arguments.callee, this, arguments);
                                            arguments = J$.N(2285257, 'arguments', arguments, true, false, false);
                                            J$.N(2285265, 'err', err, false, false, false);
                                            var err = J$.W(2285177, 'err', J$.P(2285169, J$.R(2285137, 'this', this, false, false), 'err', J$.M(2285161, J$.R(2285145, 'errs', errs, false, true), 'create', false)(J$.T(2285153, 'Some async error', 21, false))), err, false, false);
                                            J$.M(2285241, J$.R(2285185, 'errs', errs, false, true), 'handle', false)(J$.R(2285193, 'err', err, false, false), J$.M(2285233, J$.G(2285209, J$.R(2285201, 'this', this, false, false), 'callback'), 'bind', false)(J$.R(2285217, 'this', this, false, false), J$.T(2285225, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(2289001, J$e);
                                        } finally {
                                            if (J$.Fr(2289009))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false),
                            'should invoke the callback with the error': J$.T(2285353, function shouldInvokeTheCallbackWithTheError(_, err) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(2285321, arguments.callee, this, arguments);
                                            arguments = J$.N(2285329, 'arguments', arguments, true, false, false);
                                            _ = J$.N(2285337, '_', _, true, false, false);
                                            err = J$.N(2285345, 'err', err, true, false, false);
                                            J$.M(2285313, J$.R(2285281, 'assert', assert, false, true), 'equal', false)(J$.R(2285289, 'err', err, false, false), J$.G(2285305, J$.R(2285297, 'this', this, false, false), 'err'));
                                        } catch (J$e) {
                                            J$.Ex(2289017, J$e);
                                        } finally {
                                            if (J$.Fr(2289025))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)
                        }, 11, false),
                        'with an EventEmitter (i.e. stream)': J$.T(2285657, {
                            topic: J$.T(2285569, function topic() {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(2285537, arguments.callee, this, arguments);
                                            arguments = J$.N(2285545, 'arguments', arguments, true, false, false);
                                            J$.N(2285553, 'err', err, false, false, false);
                                            J$.N(2285561, 'stream', stream, false, false, false);
                                            var err = J$.W(2285425, 'err', J$.P(2285401, J$.R(2285369, 'this', this, false, false), 'err', J$.M(2285393, J$.R(2285377, 'errs', errs, false, true), 'create', false)(J$.T(2285385, 'Some emitted error', 21, false))), err, false, false), stream = J$.W(2285433, 'stream', J$.M(2285417, J$.R(2285409, 'events', events, false, true), 'EventEmitter', true)(), stream, false, false);
                                            J$.M(2285497, J$.R(2285441, 'stream', stream, false, false), 'once', false)(J$.T(2285449, 'error', 21, false), J$.M(2285489, J$.G(2285465, J$.R(2285457, 'this', this, false, false), 'callback'), 'bind', false)(J$.R(2285473, 'this', this, false, false), J$.T(2285481, null, 25, false)));
                                            J$.M(2285529, J$.R(2285505, 'errs', errs, false, true), 'handle', false)(J$.R(2285513, 'err', err, false, false), J$.R(2285521, 'stream', stream, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2289033, J$e);
                                        } finally {
                                            if (J$.Fr(2289041))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false),
                            'should emit the `error` event': J$.T(2285649, function shouldEmitTheErrorEvent(_, err) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(2285617, arguments.callee, this, arguments);
                                            arguments = J$.N(2285625, 'arguments', arguments, true, false, false);
                                            _ = J$.N(2285633, '_', _, true, false, false);
                                            err = J$.N(2285641, 'err', err, true, false, false);
                                            J$.M(2285609, J$.R(2285577, 'assert', assert, false, true), 'equal', false)(J$.R(2285585, 'err', err, false, false), J$.G(2285601, J$.R(2285593, 'this', this, false, false), 'err'));
                                        } catch (J$e) {
                                            J$.Ex(2289049, J$e);
                                        } finally {
                                            if (J$.Fr(2289057))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)
                        }, 11, false),
                        'with a callback and an EventEmitter': J$.T(2286089, {
                            topic: J$.T(2286001, function topic() {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(2285937, arguments.callee, this, arguments);
                                            function onError(err) {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2285841, arguments.callee, this, arguments);
                                                            arguments = J$.N(2285849, 'arguments', arguments, true, false, false);
                                                            err = J$.N(2285857, 'err', err, true, false, false);
                                                            if (J$.C(140912, J$.B(271210, '===', invoked = J$.W(2285777, 'invoked', J$.B(271202, '+', J$.U(271194, '+', J$.R(2285769, 'invoked', invoked, false, false)), 1), invoked, false, false), J$.T(2285785, 2, 22, false)))) {
                                                                J$.M(2285833, J$.G(2285801, J$.R(2285793, 'that', that, false, false), 'callback'), 'call', false)(J$.R(2285809, 'that', that, false, false), J$.T(2285817, null, 25, false), J$.R(2285825, 'err', err, false, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(2289065, J$e);
                                                        } finally {
                                                            if (J$.Fr(2289073))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(2285945, 'arguments', arguments, true, false, false);
                                            J$.N(2285953, 'err', err, false, false, false);
                                            J$.N(2285961, 'stream', stream, false, false, false);
                                            J$.N(2285969, 'invoked', invoked, false, false, false);
                                            J$.N(2285977, 'that', that, false, false, false);
                                            onError = J$.N(2285993, 'onError', J$.T(2285985, onError, 12, false), true, false, false);
                                            var err = J$.W(2285737, 'err', J$.P(2285697, J$.R(2285665, 'this', this, false, false), 'err', J$.M(2285689, J$.R(2285673, 'errs', errs, false, true), 'create', false)(J$.T(2285681, 'Some emitted error', 21, false))), err, false, false), stream = J$.W(2285745, 'stream', J$.M(2285713, J$.R(2285705, 'events', events, false, true), 'EventEmitter', true)(), stream, false, false), invoked = J$.W(2285753, 'invoked', J$.T(2285721, 0, 22, false), invoked, false, false), that = J$.W(2285761, 'that', J$.R(2285729, 'this', this, false, false), that, false, false);
                                            J$.M(2285889, J$.R(2285865, 'stream', stream, false, false), 'once', false)(J$.T(2285873, 'error', 21, false), J$.R(2285881, 'onError', onError, false, false));
                                            J$.M(2285929, J$.R(2285897, 'errs', errs, false, true), 'handle', false)(J$.R(2285905, 'err', err, false, false), J$.R(2285913, 'onError', onError, false, false), J$.R(2285921, 'stream', stream, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2289081, J$e);
                                        } finally {
                                            if (J$.Fr(2289089))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false),
                            'should emit the `error` event': J$.T(2286081, function shouldEmitTheErrorEvent(_, err) {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(2286049, arguments.callee, this, arguments);
                                            arguments = J$.N(2286057, 'arguments', arguments, true, false, false);
                                            _ = J$.N(2286065, '_', _, true, false, false);
                                            err = J$.N(2286073, 'err', err, true, false, false);
                                            J$.M(2286041, J$.R(2286009, 'assert', assert, false, true), 'equal', false)(J$.R(2286017, 'err', err, false, false), J$.G(2286033, J$.R(2286025, 'this', this, false, false), 'err'));
                                        } catch (J$e) {
                                            J$.Ex(2289097, J$e);
                                        } finally {
                                            if (J$.Fr(2289105))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)
                        }, 11, false),
                        'with no callback': J$.T(2286361, {
                            topic: J$.T(2286273, function topic() {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(2286241, arguments.callee, this, arguments);
                                            arguments = J$.N(2286249, 'arguments', arguments, true, false, false);
                                            J$.N(2286257, 'err', err, false, false, false);
                                            J$.N(2286265, 'emitter', emitter, false, false, false);
                                            var err = J$.W(2286161, 'err', J$.P(2286129, J$.R(2286097, 'this', this, false, false), 'err', J$.M(2286121, J$.R(2286105, 'errs', errs, false, true), 'create', false)(J$.T(2286113, 'Some emitted error', 21, false))), err, false, false), emitter = J$.W(2286169, 'emitter', J$.M(2286153, J$.R(2286137, 'errs', errs, false, true), 'handle', false)(J$.R(2286145, 'err', err, false, false)), emitter, false, false);
                                            J$.M(2286233, J$.R(2286177, 'emitter', emitter, false, false), 'once', false)(J$.T(2286185, 'error', 21, false), J$.M(2286225, J$.G(2286201, J$.R(2286193, 'this', this, false, false), 'callback'), 'bind', false)(J$.R(2286209, 'this', this, false, false), J$.T(2286217, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(2289113, J$e);
                                        } finally {
                                            if (J$.Fr(2289121))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false),
                            'should emit the `error` event': J$.T(2286353, function shouldEmitTheErrorEvent(_, err) {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(2286321, arguments.callee, this, arguments);
                                            arguments = J$.N(2286329, 'arguments', arguments, true, false, false);
                                            _ = J$.N(2286337, '_', _, true, false, false);
                                            err = J$.N(2286345, 'err', err, true, false, false);
                                            J$.M(2286313, J$.R(2286281, 'assert', assert, false, true), 'equal', false)(J$.R(2286289, 'err', err, false, false), J$.G(2286305, J$.R(2286297, 'this', this, false, false), 'err'));
                                        } catch (J$e) {
                                            J$.Ex(2289129, J$e);
                                        } finally {
                                            if (J$.Fr(2289137))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)
                        }, 11, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false)), 'addBatch', false)(J$.T(2286513, {
                'Using errs module': J$.T(2286505, {
                    'the unregister() method': J$.T(2286497, {
                        'should unregister the prototype': J$.T(2286489, function shouldUnregisterThePrototype() {
                            jalangiLabel13:
                                while (true) {
                                    try {
                                        J$.Fe(2286473, arguments.callee, this, arguments);
                                        arguments = J$.N(2286481, 'arguments', arguments, true, false, false);
                                        J$.M(2286417, J$.R(2286401, 'errs', errs, false, true), 'unregister', false)(J$.T(2286409, 'named', 21, false));
                                        J$.M(2286465, J$.R(2286425, 'assert', assert, false, true), 'isTrue', false)(J$.U(271218, '!', J$.G(2286457, J$.G(2286441, J$.R(2286433, 'errs', errs, false, true), 'registered'), J$.T(2286449, 'named', 21, false))));
                                    } catch (J$e) {
                                        J$.Ex(2289145, J$e);
                                    } finally {
                                        if (J$.Fr(2289153))
                                            continue jalangiLabel13;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false)), 'addBatch', false)(J$.T(2288321, {
                'Using errs module': J$.T(2288313, {
                    'the merge() method': J$.T(2288305, {
                        'supports': J$.T(2287137, {
                            'an undefined error': J$.T(2286673, function anUndefinedError() {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(2286649, arguments.callee, this, arguments);
                                            arguments = J$.N(2286657, 'arguments', arguments, true, false, false);
                                            J$.N(2286665, 'err', err, false, false, false);
                                            var err = J$.W(2286569, 'err', J$.M(2286561, J$.R(2286529, 'errs', errs, false, true), 'merge', false)(J$.T(2286537, undefined, 24, false), J$.T(2286553, { message: J$.T(2286545, 'oh noes!', 21, false) }, 11, false)), err, false, false);
                                            J$.M(2286609, J$.R(2286577, 'assert', assert, false, true), 'equal', false)(J$.G(2286593, J$.R(2286585, 'err', err, false, false), 'message'), J$.T(2286601, 'oh noes!', 21, false));
                                            J$.M(2286641, J$.R(2286617, 'assert', assert, false, true), 'instanceOf', false)(J$.R(2286625, 'err', err, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(2286633, 'Error', undefined, true, true) : Error = J$.R(2286633, 'Error', Error, true, true)));
                                        } catch (J$e) {
                                            J$.Ex(2289161, J$e);
                                        } finally {
                                            if (J$.Fr(2289169))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false),
                            'a null error': J$.T(2286825, function aNullError() {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(2286801, arguments.callee, this, arguments);
                                            arguments = J$.N(2286809, 'arguments', arguments, true, false, false);
                                            J$.N(2286817, 'err', err, false, false, false);
                                            var err = J$.W(2286721, 'err', J$.M(2286713, J$.R(2286681, 'errs', errs, false, true), 'merge', false)(J$.T(2286689, null, 25, false), J$.T(2286705, { message: J$.T(2286697, 'oh noes!', 21, false) }, 11, false)), err, false, false);
                                            J$.M(2286761, J$.R(2286729, 'assert', assert, false, true), 'equal', false)(J$.G(2286745, J$.R(2286737, 'err', err, false, false), 'message'), J$.T(2286753, 'oh noes!', 21, false));
                                            J$.M(2286793, J$.R(2286769, 'assert', assert, false, true), 'instanceOf', false)(J$.R(2286777, 'err', err, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(2286785, 'Error', undefined, true, true) : Error = J$.R(2286785, 'Error', Error, true, true)));
                                        } catch (J$e) {
                                            J$.Ex(2289177, J$e);
                                        } finally {
                                            if (J$.Fr(2289185))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false),
                            'a false error': J$.T(2286977, function aFalseError() {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(2286953, arguments.callee, this, arguments);
                                            arguments = J$.N(2286961, 'arguments', arguments, true, false, false);
                                            J$.N(2286969, 'err', err, false, false, false);
                                            var err = J$.W(2286873, 'err', J$.M(2286865, J$.R(2286833, 'errs', errs, false, true), 'merge', false)(J$.T(2286841, false, 23, false), J$.T(2286857, { message: J$.T(2286849, 'oh noes!', 21, false) }, 11, false)), err, false, false);
                                            J$.M(2286913, J$.R(2286881, 'assert', assert, false, true), 'equal', false)(J$.G(2286897, J$.R(2286889, 'err', err, false, false), 'message'), J$.T(2286905, 'oh noes!', 21, false));
                                            J$.M(2286945, J$.R(2286921, 'assert', assert, false, true), 'instanceOf', false)(J$.R(2286929, 'err', err, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(2286937, 'Error', undefined, true, true) : Error = J$.R(2286937, 'Error', Error, true, true)));
                                        } catch (J$e) {
                                            J$.Ex(2289193, J$e);
                                        } finally {
                                            if (J$.Fr(2289201))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false),
                            'a string error': J$.T(2287129, function aStringError() {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(2287105, arguments.callee, this, arguments);
                                            arguments = J$.N(2287113, 'arguments', arguments, true, false, false);
                                            J$.N(2287121, 'err', err, false, false, false);
                                            var err = J$.W(2287025, 'err', J$.M(2287017, J$.R(2286985, 'errs', errs, false, true), 'merge', false)(J$.T(2286993, 'wat', 21, false), J$.T(2287009, { message: J$.T(2287001, 'oh noes!', 21, false) }, 11, false)), err, false, false);
                                            J$.M(2287065, J$.R(2287033, 'assert', assert, false, true), 'equal', false)(J$.G(2287049, J$.R(2287041, 'err', err, false, false), 'message'), J$.T(2287057, 'oh noes!', 21, false));
                                            J$.M(2287097, J$.R(2287073, 'assert', assert, false, true), 'instanceOf', false)(J$.R(2287081, 'err', err, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(2287089, 'Error', undefined, true, true) : Error = J$.R(2287089, 'Error', Error, true, true)));
                                        } catch (J$e) {
                                            J$.Ex(2289209, J$e);
                                        } finally {
                                            if (J$.Fr(2289217))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)
                        }, 11, false),
                        'should preserve custom properties': J$.T(2287321, function shouldPreserveCustomProperties() {
                            jalangiLabel18:
                                while (true) {
                                    try {
                                        J$.Fe(2287297, arguments.callee, this, arguments);
                                        arguments = J$.N(2287305, 'arguments', arguments, true, false, false);
                                        J$.N(2287313, 'err', err, false, false, false);
                                        var err = J$.W(2287169, 'err', J$.F(2287161, J$.I(typeof Error === 'undefined' ? Error = J$.R(2287145, 'Error', undefined, true, true) : Error = J$.R(2287145, 'Error', Error, true, true)), true)(J$.T(2287153, 'Msg!', 21, false)), err, false, false);
                                        J$.P(2287193, J$.R(2287177, 'err', err, false, false), 'foo', J$.T(2287185, 'bar', 21, false));
                                        err = J$.W(2287249, 'err', J$.M(2287241, J$.R(2287201, 'errs', errs, false, true), 'merge', false)(J$.R(2287209, 'err', err, false, false), J$.T(2287233, {
                                            message: J$.T(2287217, 'Override!', 21, false),
                                            ns: J$.T(2287225, 'test', 21, false)
                                        }, 11, false)), err, false, false);
                                        J$.M(2287289, J$.R(2287257, 'assert', assert, false, true), 'equal', false)(J$.G(2287273, J$.R(2287265, 'err', err, false, false), 'foo'), J$.T(2287281, 'bar', 21, false));
                                    } catch (J$e) {
                                        J$.Ex(2289225, J$e);
                                    } finally {
                                        if (J$.Fr(2289233))
                                            continue jalangiLabel18;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false),
                        'should have a stack trace': J$.T(2287473, function shouldHaveAStackTrace() {
                            jalangiLabel19:
                                while (true) {
                                    try {
                                        J$.Fe(2287449, arguments.callee, this, arguments);
                                        arguments = J$.N(2287457, 'arguments', arguments, true, false, false);
                                        J$.N(2287465, 'err', err, false, false, false);
                                        var err = J$.W(2287353, 'err', J$.F(2287345, J$.I(typeof Error === 'undefined' ? Error = J$.R(2287329, 'Error', undefined, true, true) : Error = J$.R(2287329, 'Error', Error, true, true)), true)(J$.T(2287337, 'Msg!', 21, false)), err, false, false);
                                        err = J$.W(2287393, 'err', J$.M(2287385, J$.R(2287361, 'errs', errs, false, true), 'merge', false)(J$.R(2287369, 'err', err, false, false), J$.T(2287377, {}, 11, false)), err, false, false);
                                        J$.M(2287441, J$.R(2287401, 'assert', assert, false, true), 'isTrue', false)(J$.M(2287433, J$.I(typeof Array === 'undefined' ? Array = J$.R(2287409, 'Array', undefined, true, true) : Array = J$.R(2287409, 'Array', Array, true, true)), 'isArray', false)(J$.G(2287425, J$.R(2287417, 'err', err, false, false), 'stacktrace')));
                                    } catch (J$e) {
                                        J$.Ex(2289241, J$e);
                                    } finally {
                                        if (J$.Fr(2289249))
                                            continue jalangiLabel19;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false),
                        'should preserve message specified in create': J$.T(2287625, function shouldPreserveMessageSpecifiedInCreate() {
                            jalangiLabel20:
                                while (true) {
                                    try {
                                        J$.Fe(2287601, arguments.callee, this, arguments);
                                        arguments = J$.N(2287609, 'arguments', arguments, true, false, false);
                                        J$.N(2287617, 'err', err, false, false, false);
                                        var err = J$.W(2287505, 'err', J$.F(2287497, J$.I(typeof Error === 'undefined' ? Error = J$.R(2287481, 'Error', undefined, true, true) : Error = J$.R(2287481, 'Error', Error, true, true)), true)(J$.T(2287489, 'Msg!', 21, false)), err, false, false);
                                        err = J$.W(2287553, 'err', J$.M(2287545, J$.R(2287513, 'errs', errs, false, true), 'merge', false)(J$.R(2287521, 'err', err, false, false), J$.T(2287537, { message: J$.T(2287529, 'Override!', 21, false) }, 11, false)), err, false, false);
                                        J$.M(2287593, J$.R(2287561, 'assert', assert, false, true), 'equal', false)(J$.G(2287577, J$.R(2287569, 'err', err, false, false), 'message'), J$.T(2287585, 'Override!', 21, false));
                                    } catch (J$e) {
                                        J$.Ex(2289257, J$e);
                                    } finally {
                                        if (J$.Fr(2289265))
                                            continue jalangiLabel20;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false),
                        'should preserve properties specified': J$.T(2287777, function shouldPreservePropertiesSpecified() {
                            jalangiLabel21:
                                while (true) {
                                    try {
                                        J$.Fe(2287753, arguments.callee, this, arguments);
                                        arguments = J$.N(2287761, 'arguments', arguments, true, false, false);
                                        J$.N(2287769, 'err', err, false, false, false);
                                        var err = J$.W(2287657, 'err', J$.F(2287649, J$.I(typeof Error === 'undefined' ? Error = J$.R(2287633, 'Error', undefined, true, true) : Error = J$.R(2287633, 'Error', Error, true, true)), true)(J$.T(2287641, 'Msg!', 21, false)), err, false, false);
                                        err = J$.W(2287705, 'err', J$.M(2287697, J$.R(2287665, 'errs', errs, false, true), 'merge', false)(J$.R(2287673, 'err', err, false, false), J$.T(2287689, { ns: J$.T(2287681, 'test', 21, false) }, 11, false)), err, false, false);
                                        J$.M(2287745, J$.R(2287713, 'assert', assert, false, true), 'equal', false)(J$.G(2287729, J$.R(2287721, 'err', err, false, false), 'ns'), J$.T(2287737, 'test', 21, false));
                                    } catch (J$e) {
                                        J$.Ex(2289273, J$e);
                                    } finally {
                                        if (J$.Fr(2289281))
                                            continue jalangiLabel21;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false),
                        'with a truthy value': J$.T(2287945, function withATruthyValue() {
                            jalangiLabel22:
                                while (true) {
                                    try {
                                        J$.Fe(2287921, arguments.callee, this, arguments);
                                        arguments = J$.N(2287929, 'arguments', arguments, true, false, false);
                                        J$.N(2287937, 'err', err, false, false, false);
                                        var err = J$.W(2287833, 'err', J$.M(2287825, J$.R(2287785, 'errs', errs, false, true), 'merge', false)(J$.T(2287793, true, 23, false), J$.T(2287817, {
                                            message: J$.T(2287801, 'Override!', 21, false),
                                            ns: J$.T(2287809, 'lolwut', 21, false)
                                        }, 11, false)), err, false, false);
                                        J$.M(2287873, J$.R(2287841, 'assert', assert, false, true), 'equal', false)(J$.G(2287857, J$.R(2287849, 'err', err, false, false), 'message'), J$.T(2287865, 'Override!', 21, false));
                                        J$.M(2287913, J$.R(2287881, 'assert', assert, false, true), 'equal', false)(J$.G(2287897, J$.R(2287889, 'err', err, false, false), 'ns'), J$.T(2287905, 'lolwut', 21, false));
                                    } catch (J$e) {
                                        J$.Ex(2289289, J$e);
                                    } finally {
                                        if (J$.Fr(2289297))
                                            continue jalangiLabel22;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false),
                        'with a truthy stack': J$.T(2288121, function withATruthyStack() {
                            jalangiLabel23:
                                while (true) {
                                    try {
                                        J$.Fe(2288097, arguments.callee, this, arguments);
                                        arguments = J$.N(2288105, 'arguments', arguments, true, false, false);
                                        J$.N(2288113, 'err', err, false, false, false);
                                        var err = J$.W(2288009, 'err', J$.M(2288001, J$.R(2287953, 'errs', errs, false, true), 'merge', false)(J$.T(2287969, { stack: J$.T(2287961, true, 23, false) }, 11, false), J$.T(2287993, {
                                            message: J$.T(2287977, 'Override!', 21, false),
                                            ns: J$.T(2287985, 'lolwut', 21, false)
                                        }, 11, false)), err, false, false);
                                        J$.M(2288049, J$.R(2288017, 'assert', assert, false, true), 'equal', false)(J$.G(2288033, J$.R(2288025, 'err', err, false, false), 'message'), J$.T(2288041, 'Override!', 21, false));
                                        J$.M(2288089, J$.R(2288057, 'assert', assert, false, true), 'equal', false)(J$.G(2288073, J$.R(2288065, 'err', err, false, false), 'ns'), J$.T(2288081, 'lolwut', 21, false));
                                    } catch (J$e) {
                                        J$.Ex(2289305, J$e);
                                    } finally {
                                        if (J$.Fr(2289313))
                                            continue jalangiLabel23;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false),
                        'with an Array stack': J$.T(2288297, function withAnArrayStack() {
                            jalangiLabel24:
                                while (true) {
                                    try {
                                        J$.Fe(2288273, arguments.callee, this, arguments);
                                        arguments = J$.N(2288281, 'arguments', arguments, true, false, false);
                                        J$.N(2288289, 'err', err, false, false, false);
                                        var err = J$.W(2288185, 'err', J$.M(2288177, J$.R(2288129, 'errs', errs, false, true), 'merge', false)(J$.T(2288145, { stack: J$.T(2288137, [], 10, false) }, 11, false), J$.T(2288169, {
                                            message: J$.T(2288153, 'Override!', 21, false),
                                            ns: J$.T(2288161, 'lolwut', 21, false)
                                        }, 11, false)), err, false, false);
                                        J$.M(2288225, J$.R(2288193, 'assert', assert, false, true), 'equal', false)(J$.G(2288209, J$.R(2288201, 'err', err, false, false), 'message'), J$.T(2288217, 'Override!', 21, false));
                                        J$.M(2288265, J$.R(2288233, 'assert', assert, false, true), 'equal', false)(J$.G(2288249, J$.R(2288241, 'err', err, false, false), 'ns'), J$.T(2288257, 'lolwut', 21, false));
                                    } catch (J$e) {
                                        J$.Ex(2289321, J$e);
                                    } finally {
                                        if (J$.Fr(2289329))
                                            continue jalangiLabel24;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false)), 'addBatch', false)(J$.T(2288833, {
                'Using errs module': J$.T(2288825, {
                    'Error.prototype.toJSON': J$.T(2288817, {
                        'should exist': J$.T(2288569, function shouldExist() {
                            jalangiLabel26:
                                while (true) {
                                    try {
                                        J$.Fe(2288545, arguments.callee, this, arguments);
                                        arguments = J$.N(2288553, 'arguments', arguments, true, false, false);
                                        J$.N(2288561, 'json', json, false, false, false);
                                        J$.M(2288369, J$.R(2288337, 'assert', assert, false, true), 'isFunction', false)(J$.G(2288361, J$.G(2288353, J$.I(typeof Error === 'undefined' ? Error = J$.R(2288345, 'Error', undefined, true, true) : Error = J$.R(2288345, 'Error', Error, true, true)), 'prototype'), 'toJSON'));
                                        var json = J$.W(2288409, 'json', J$.M(2288401, J$.F(2288393, J$.I(typeof Error === 'undefined' ? Error = J$.R(2288377, 'Error', undefined, true, true) : Error = J$.R(2288377, 'Error', Error, true, true)), true)(J$.T(2288385, 'Testing 12345', 21, false)), 'toJSON', false)(), json, false, false);
                                        J$.M(2288537, J$.T(2288449, [
                                            J$.T(2288417, 'message', 21, false),
                                            J$.T(2288425, 'stack', 21, false),
                                            J$.T(2288433, 'arguments', 21, false),
                                            J$.T(2288441, 'type', 21, false)
                                        ], 10, false), 'forEach', false)(J$.T(2288529, function (prop) {
                                            jalangiLabel25:
                                                while (true) {
                                                    try {
                                                        J$.Fe(2288505, arguments.callee, this, arguments);
                                                        arguments = J$.N(2288513, 'arguments', arguments, true, false, false);
                                                        prop = J$.N(2288521, 'prop', prop, true, false, false);
                                                        J$.M(2288497, J$.R(2288457, 'assert', assert, false, true), 'isObject', false)(J$.M(2288489, J$.I(typeof Object === 'undefined' ? Object = J$.R(2288465, 'Object', undefined, true, true) : Object = J$.R(2288465, 'Object', Object, true, true)), 'getOwnPropertyDescriptor', false)(J$.R(2288473, 'json', json, false, false), J$.R(2288481, 'prop', prop, false, false)));
                                                    } catch (J$e) {
                                                        J$.Ex(2289337, J$e);
                                                    } finally {
                                                        if (J$.Fr(2289345))
                                                            continue jalangiLabel25;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false));
                                    } catch (J$e) {
                                        J$.Ex(2289353, J$e);
                                    } finally {
                                        if (J$.Fr(2289361))
                                            continue jalangiLabel26;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false),
                        'should be writable': J$.T(2288809, function shouldBeWritable() {
                            jalangiLabel28:
                                while (true) {
                                    try {
                                        J$.Fe(2288777, arguments.callee, this, arguments);
                                        arguments = J$.N(2288785, 'arguments', arguments, true, false, false);
                                        J$.N(2288793, 'orig', orig, false, false, false);
                                        J$.N(2288801, 'json', json, false, false, false);
                                        var orig = J$.W(2288601, 'orig', J$.G(2288593, J$.G(2288585, J$.I(typeof Error === 'undefined' ? Error = J$.R(2288577, 'Error', undefined, true, true) : Error = J$.R(2288577, 'Error', Error, true, true)), 'prototype'), 'toJSON'), orig, false, false);
                                        J$.P(2288665, J$.G(2288617, J$.I(typeof Error === 'undefined' ? Error = J$.R(2288609, 'Error', undefined, true, true) : Error = J$.R(2288609, 'Error', Error, true, true)), 'prototype'), 'toJSON', J$.T(2288657, function () {
                                            jalangiLabel27:
                                                while (true) {
                                                    try {
                                                        J$.Fe(2288641, arguments.callee, this, arguments);
                                                        arguments = J$.N(2288649, 'arguments', arguments, true, false, false);
                                                        return J$.Rt(2288633, J$.T(2288625, 'foo', 21, false));
                                                    } catch (J$e) {
                                                        J$.Ex(2289369, J$e);
                                                    } finally {
                                                        if (J$.Fr(2289377))
                                                            continue jalangiLabel27;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false));
                                        var json = J$.W(2288705, 'json', J$.M(2288697, J$.F(2288689, J$.I(typeof Error === 'undefined' ? Error = J$.R(2288673, 'Error', undefined, true, true) : Error = J$.R(2288673, 'Error', Error, true, true)), true)(J$.T(2288681, 'Testing 12345', 21, false)), 'toJSON', false)(), json, false, false);
                                        J$.M(2288737, J$.R(2288713, 'assert', assert, false, true), 'equal', false)(J$.R(2288721, 'json', json, false, false), J$.T(2288729, 'foo', 21, false));
                                        J$.P(2288769, J$.G(2288753, J$.I(typeof Error === 'undefined' ? Error = J$.R(2288745, 'Error', undefined, true, true) : Error = J$.R(2288745, 'Error', Error, true, true)), 'prototype'), 'toJSON', J$.R(2288761, 'orig', orig, false, false));
                                    } catch (J$e) {
                                        J$.Ex(2289385, J$e);
                                    } finally {
                                        if (J$.Fr(2289393))
                                            continue jalangiLabel28;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false)), J$.T(2288849, 'export', 21, false), false)(J$.I(typeof module === 'undefined' ? module = J$.R(2288857, 'module', undefined, true, true) : module = J$.R(2288857, 'module', module, true, true)));
        } catch (J$e) {
            J$.Ex(2289401, J$e);
        } finally {
            if (J$.Sr(2289409))
                continue jalangiLabel29;
            else
                break jalangiLabel29;
        }
    }
// JALANGI DO NOT INSTRUMENT

