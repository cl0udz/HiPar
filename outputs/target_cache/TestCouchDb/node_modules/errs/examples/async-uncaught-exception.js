J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2274009, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/errs/examples/async-uncaught-exception.js');
            J$.N(2274017, 'fs', fs, false, false, false);
            J$.N(2274025, 'errs', errs, false, false, false);
            J$.N(2274033, 'file', file, false, false, false);
            J$.T(2273697, 'use strict', 21, false);
            var fs = J$.W(2273753, 'fs', J$.F(2273721, J$.I(typeof require === 'undefined' ? require = J$.R(2273705, 'require', undefined, true, true) : require = J$.R(2273705, 'require', require, true, true)), false)(J$.T(2273713, 'fs', 21, false)), fs, false, true), errs = J$.W(2273761, 'errs', J$.F(2273745, J$.I(typeof require === 'undefined' ? require = J$.R(2273729, 'require', undefined, true, true) : require = J$.R(2273729, 'require', require, true, true)), false)(J$.T(2273737, '../lib/errs', 21, false)), errs, false, true);
            J$.M(2273873, J$.I(typeof process === 'undefined' ? process = J$.R(2273769, 'process', undefined, true, true) : process = J$.R(2273769, 'process', process, true, true)), 'on', false)(J$.T(2273777, 'uncaughtException', 21, false), J$.T(2273865, function (err) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2273841, arguments.callee, this, arguments);
                            arguments = J$.N(2273849, 'arguments', arguments, true, false, false);
                            err = J$.N(2273857, 'err', err, true, false, false);
                            J$.M(2273833, J$.I(typeof console === 'undefined' ? console = J$.R(2273785, 'console', undefined, true, true) : console = J$.R(2273785, 'console', console, true, true)), 'log', false)(J$.M(2273825, J$.R(2273793, 'errs', errs, false, true), 'merge', false)(J$.R(2273801, 'err', err, false, false), J$.T(2273817, { namespace: J$.T(2273809, 'uncaughtException', 21, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(2274041, J$e);
                        } finally {
                            if (J$.Fr(2274049))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var file = J$.W(2273921, 'file', J$.M(2273913, J$.R(2273881, 'fs', fs, false, true), 'createReadStream', false)(J$.I(typeof __filename === 'undefined' ? __filename = J$.R(2273889, '__filename', undefined, true, true) : __filename = J$.R(2273889, '__filename', __filename, true, true)), J$.T(2273905, { encoding: J$.T(2273897, 'utf8', 21, false) }, 11, false)), file, false, true);
            J$.M(2274001, J$.R(2273929, 'file', file, false, true), 'on', false)(J$.T(2273937, 'data', 21, false), J$.T(2273993, function (b) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2273969, arguments.callee, this, arguments);
                            arguments = J$.N(2273977, 'arguments', arguments, true, false, false);
                            b = J$.N(2273985, 'b', b, true, false, false);
                            throw J$.F(2273961, J$.I(typeof Error === 'undefined' ? Error = J$.R(2273945, 'Error', undefined, true, true) : Error = J$.R(2273945, 'Error', Error, true, true)), true)(J$.T(2273953, 'Oh Noes', 21, false));
                        } catch (J$e) {
                            J$.Ex(2274057, J$e);
                        } finally {
                            if (J$.Fr(2274065))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2274073, J$e);
        } finally {
            if (J$.Sr(2274081))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

