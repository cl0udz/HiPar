J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(2089465, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/asynckit/lib/streamify.js');
            function wrapIterator(iterator) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2088625, arguments.callee, this, arguments);
                            arguments = J$.N(2088633, 'arguments', arguments, true, false, false);
                            iterator = J$.N(2088641, 'iterator', iterator, true, false, false);
                            J$.N(2088649, 'stream', stream, false, false, false);
                            var stream = J$.W(2088313, 'stream', J$.R(2088305, 'this', this, false, false), stream, false, false);
                            return J$.Rt(2088617, J$.T(2088609, function (item, key, cb) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2088553, arguments.callee, this, arguments);
                                            arguments = J$.N(2088561, 'arguments', arguments, true, false, false);
                                            item = J$.N(2088569, 'item', item, true, false, false);
                                            key = J$.N(2088577, 'key', key, true, false, false);
                                            cb = J$.N(2088585, 'cb', cb, true, false, false);
                                            J$.N(2088593, 'aborter', aborter, false, false, false);
                                            J$.N(2088601, 'wrappedCb', wrappedCb, false, false, false);
                                            var aborter, wrappedCb = J$.W(2088377, 'wrappedCb', J$.F(2088369, J$.R(2088321, 'async', async, false, true), false)(J$.M(2088361, J$.R(2088329, 'wrapIteratorCallback', wrapIteratorCallback, false, true), 'call', false)(J$.R(2088337, 'stream', stream, false, false), J$.R(2088345, 'cb', cb, false, false), J$.R(2088353, 'key', key, false, false))), wrappedCb, false, false);
                                            J$.P(2088417, J$.G(2088393, J$.R(2088385, 'stream', stream, false, false), 'jobs'), J$.R(2088401, 'key', key, false, false), J$.R(2088409, 'wrappedCb', wrappedCb, false, false));
                                            if (J$.C(131320, J$.B(257986, '==', J$.G(2088433, J$.R(2088425, 'iterator', iterator, false, false), 'length'), J$.T(2088441, 2, 22, false)))) {
                                                aborter = J$.W(2088481, 'aborter', J$.F(2088473, J$.R(2088449, 'iterator', iterator, false, false), false)(J$.R(2088457, 'item', item, false, false), J$.R(2088465, 'wrappedCb', wrappedCb, false, false)), aborter, false, false);
                                            } else {
                                                aborter = J$.W(2088529, 'aborter', J$.F(2088521, J$.R(2088489, 'iterator', iterator, false, false), false)(J$.R(2088497, 'item', item, false, false), J$.R(2088505, 'key', key, false, false), J$.R(2088513, 'wrappedCb', wrappedCb, false, false)), aborter, false, false);
                                            }
                                            return J$.Rt(2088545, J$.R(2088537, 'aborter', aborter, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2089561, J$e);
                                        } finally {
                                            if (J$.Fr(2089569))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2089577, J$e);
                        } finally {
                            if (J$.Fr(2089585))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapCallback(callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2088793, arguments.callee, this, arguments);
                            arguments = J$.N(2088801, 'arguments', arguments, true, false, false);
                            callback = J$.N(2088809, 'callback', callback, true, false, false);
                            J$.N(2088817, 'stream', stream, false, false, false);
                            J$.N(2088825, 'wrapped', wrapped, false, false, false);
                            var stream = J$.W(2088665, 'stream', J$.R(2088657, 'this', this, false, false), stream, false, false);
                            var wrapped = J$.W(2088769, 'wrapped', J$.T(2088761, function wrapped(error, result) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(2088729, arguments.callee, this, arguments);
                                            arguments = J$.N(2088737, 'arguments', arguments, true, false, false);
                                            error = J$.N(2088745, 'error', error, true, false, false);
                                            result = J$.N(2088753, 'result', result, true, false, false);
                                            return J$.Rt(2088721, J$.M(2088713, J$.R(2088673, 'finisher', finisher, false, true), 'call', false)(J$.R(2088681, 'stream', stream, false, false), J$.R(2088689, 'error', error, false, false), J$.R(2088697, 'result', result, false, false), J$.R(2088705, 'callback', callback, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2089593, J$e);
                                        } finally {
                                            if (J$.Fr(2089601))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), wrapped, false, false);
                            return J$.Rt(2088785, J$.R(2088777, 'wrapped', wrapped, false, false));
                        } catch (J$e) {
                            J$.Ex(2089609, J$e);
                        } finally {
                            if (J$.Fr(2089617))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapIteratorCallback(callback, key) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2089057, arguments.callee, this, arguments);
                            arguments = J$.N(2089065, 'arguments', arguments, true, false, false);
                            callback = J$.N(2089073, 'callback', callback, true, false, false);
                            key = J$.N(2089081, 'key', key, true, false, false);
                            J$.N(2089089, 'stream', stream, false, false, false);
                            var stream = J$.W(2088841, 'stream', J$.R(2088833, 'this', this, false, false), stream, false, false);
                            return J$.Rt(2089049, J$.T(2089041, function (error, output) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(2089009, arguments.callee, this, arguments);
                                            arguments = J$.N(2089017, 'arguments', arguments, true, false, false);
                                            error = J$.N(2089025, 'error', error, true, false, false);
                                            output = J$.N(2089033, 'output', output, true, false, false);
                                            if (J$.C(131328, J$.U(258002, '!', J$.B(257994, 'in', J$.R(2088849, 'key', key, false, false), J$.G(2088865, J$.R(2088857, 'stream', stream, false, false), 'jobs'))))) {
                                                J$.F(2088897, J$.R(2088873, 'callback', callback, false, false), false)(J$.R(2088881, 'error', error, false, false), J$.R(2088889, 'output', output, false, false));
                                                return J$.Rt(2088905, undefined);
                                            }
                                            J$.B(258010, 'delete', J$.G(2088921, J$.R(2088913, 'stream', stream, false, false), 'jobs'), J$.R(2088929, 'key', key, false, false));
                                            return J$.Rt(2089001, J$.M(2088993, J$.R(2088937, 'streamer', streamer, false, true), 'call', false)(J$.R(2088945, 'stream', stream, false, false), J$.R(2088953, 'error', error, false, false), J$.T(2088977, {
                                                key: J$.R(2088961, 'key', key, false, false),
                                                value: J$.R(2088969, 'output', output, false, false)
                                            }, 11, false), J$.R(2088985, 'callback', callback, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2089625, J$e);
                                        } finally {
                                            if (J$.Fr(2089633))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2089641, J$e);
                        } finally {
                            if (J$.Fr(2089649))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function streamer(error, output, callback) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2089321, arguments.callee, this, arguments);
                            arguments = J$.N(2089329, 'arguments', arguments, true, false, false);
                            error = J$.N(2089337, 'error', error, true, false, false);
                            output = J$.N(2089345, 'output', output, true, false, false);
                            callback = J$.N(2089353, 'callback', callback, true, false, false);
                            if (J$.C(131352, J$.C(131336, J$.R(2089097, 'error', error, false, false)) ? J$.U(258018, '!', J$.G(2089113, J$.R(2089105, 'this', this, false, false), 'error')) : J$._())) {
                                J$.P(2089137, J$.R(2089121, 'this', this, false, false), 'error', J$.R(2089129, 'error', error, false, false));
                                J$.M(2089153, J$.R(2089145, 'this', this, false, false), 'pause', false)();
                                J$.M(2089185, J$.R(2089161, 'this', this, false, false), 'emit', false)(J$.T(2089169, 'error', 21, false), J$.R(2089177, 'error', error, false, false));
                                J$.F(2089233, J$.R(2089193, 'callback', callback, false, false), false)(J$.R(2089201, 'error', error, false, false), J$.C(131344, J$.R(2089209, 'output', output, false, false)) ? J$.G(2089225, J$.R(2089217, 'output', output, false, false), 'value') : J$._());
                                return J$.Rt(2089241, undefined);
                            }
                            J$.M(2089265, J$.R(2089249, 'this', this, false, false), 'push', false)(J$.R(2089257, 'output', output, false, false));
                            J$.F(2089313, J$.R(2089273, 'callback', callback, false, false), false)(J$.R(2089281, 'error', error, false, false), J$.C(131360, J$.R(2089289, 'output', output, false, false)) ? J$.G(2089305, J$.R(2089297, 'output', output, false, false), 'value') : J$._());
                        } catch (J$e) {
                            J$.Ex(2089657, J$e);
                        } finally {
                            if (J$.Fr(2089665))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function finisher(error, output, callback) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2089425, arguments.callee, this, arguments);
                            arguments = J$.N(2089433, 'arguments', arguments, true, false, false);
                            error = J$.N(2089441, 'error', error, true, false, false);
                            output = J$.N(2089449, 'output', output, true, false, false);
                            callback = J$.N(2089457, 'callback', callback, true, false, false);
                            if (J$.C(131368, J$.U(258026, '!', J$.R(2089361, 'error', error, false, false)))) {
                                J$.M(2089385, J$.R(2089369, 'this', this, false, false), 'push', false)(J$.T(2089377, null, 25, false));
                            }
                            J$.F(2089417, J$.R(2089393, 'callback', callback, false, false), false)(J$.R(2089401, 'error', error, false, false), J$.R(2089409, 'output', output, false, false));
                        } catch (J$e) {
                            J$.Ex(2089673, J$e);
                        } finally {
                            if (J$.Fr(2089681))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2089473, 'async', async, false, false, false);
            wrapIterator = J$.N(2089489, 'wrapIterator', J$.T(2089481, wrapIterator, 12, false), true, false, false);
            wrapCallback = J$.N(2089505, 'wrapCallback', J$.T(2089497, wrapCallback, 12, false), true, false, false);
            wrapIteratorCallback = J$.N(2089521, 'wrapIteratorCallback', J$.T(2089513, wrapIteratorCallback, 12, false), true, false, false);
            streamer = J$.N(2089537, 'streamer', J$.T(2089529, streamer, 12, false), true, false, false);
            finisher = J$.N(2089553, 'finisher', J$.T(2089545, finisher, 12, false), true, false, false);
            J$.T(2088225, 'use strict', 21, false);
            var async = J$.W(2088257, 'async', J$.F(2088249, J$.I(typeof require === 'undefined' ? require = J$.R(2088233, 'require', undefined, true, true) : require = J$.R(2088233, 'require', require, true, true)), false)(J$.T(2088241, './async.js', 21, false)), async, false, true);
            J$.P(2088297, J$.I(typeof module === 'undefined' ? module = J$.R(2088265, 'module', undefined, true, true) : module = J$.R(2088265, 'module', module, true, true)), 'exports', J$.T(2088289, {
                iterator: J$.R(2088273, 'wrapIterator', wrapIterator, false, true),
                callback: J$.R(2088281, 'wrapCallback', wrapCallback, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2089689, J$e);
        } finally {
            if (J$.Sr(2089697))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

