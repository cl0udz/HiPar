J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(2084809, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/asynckit/lib/iterate.js');
            function iterate(list, iterator, state, callback) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2084537, arguments.callee, this, arguments);
                            arguments = J$.N(2084545, 'arguments', arguments, true, false, false);
                            list = J$.N(2084553, 'list', list, true, false, false);
                            iterator = J$.N(2084561, 'iterator', iterator, true, false, false);
                            state = J$.N(2084569, 'state', state, true, false, false);
                            callback = J$.N(2084577, 'callback', callback, true, false, false);
                            J$.N(2084585, 'key', key, false, false, false);
                            var key = J$.W(2084233, 'key', J$.C(131184, J$.G(2084161, J$.R(2084145, 'state', state, false, false), J$.T(2084153, 'keyedList', 21, false))) ? J$.G(2084209, J$.G(2084185, J$.R(2084169, 'state', state, false, false), J$.T(2084177, 'keyedList', 21, false)), J$.G(2084201, J$.R(2084193, 'state', state, false, false), 'index')) : J$.G(2084225, J$.R(2084217, 'state', state, false, false), 'index'), key, false, false);
                            J$.P(2084529, J$.G(2084249, J$.R(2084241, 'state', state, false, false), 'jobs'), J$.R(2084257, 'key', key, false, false), J$.F(2084521, J$.R(2084265, 'runJob', runJob, false, true), false)(J$.R(2084273, 'iterator', iterator, false, false), J$.R(2084281, 'key', key, false, false), J$.G(2084305, J$.R(2084289, 'list', list, false, false), J$.R(2084297, 'key', key, false, false)), J$.T(2084513, function (error, output) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2084481, arguments.callee, this, arguments);
                                            arguments = J$.N(2084489, 'arguments', arguments, true, false, false);
                                            error = J$.N(2084497, 'error', error, true, false, false);
                                            output = J$.N(2084505, 'output', output, true, false, false);
                                            if (J$.C(131192, J$.U(257866, '!', J$.B(257858, 'in', J$.R(2084313, 'key', key, false, false), J$.G(2084329, J$.R(2084321, 'state', state, false, false), 'jobs'))))) {
                                                return J$.Rt(2084337, undefined);
                                            }
                                            J$.B(257874, 'delete', J$.G(2084353, J$.R(2084345, 'state', state, false, false), 'jobs'), J$.R(2084361, 'key', key, false, false));
                                            if (J$.C(131200, J$.R(2084369, 'error', error, false, false))) {
                                                J$.F(2084393, J$.R(2084377, 'abort', abort, false, true), false)(J$.R(2084385, 'state', state, false, false));
                                            } else {
                                                J$.P(2084433, J$.G(2084409, J$.R(2084401, 'state', state, false, false), 'results'), J$.R(2084417, 'key', key, false, false), J$.R(2084425, 'output', output, false, false));
                                            }
                                            J$.F(2084473, J$.R(2084441, 'callback', callback, false, false), false)(J$.R(2084449, 'error', error, false, false), J$.G(2084465, J$.R(2084457, 'state', state, false, false), 'results'));
                                        } catch (J$e) {
                                            J$.Ex(2084865, J$e);
                                        } finally {
                                            if (J$.Fr(2084873))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(2084881, J$e);
                        } finally {
                            if (J$.Fr(2084889))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function runJob(iterator, key, item, callback) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2084753, arguments.callee, this, arguments);
                            arguments = J$.N(2084761, 'arguments', arguments, true, false, false);
                            iterator = J$.N(2084769, 'iterator', iterator, true, false, false);
                            key = J$.N(2084777, 'key', key, true, false, false);
                            item = J$.N(2084785, 'item', item, true, false, false);
                            callback = J$.N(2084793, 'callback', callback, true, false, false);
                            J$.N(2084801, 'aborter', aborter, false, false, false);
                            var aborter;
                            if (J$.C(131208, J$.B(257882, '==', J$.G(2084601, J$.R(2084593, 'iterator', iterator, false, false), 'length'), J$.T(2084609, 2, 22, false)))) {
                                aborter = J$.W(2084665, 'aborter', J$.F(2084657, J$.R(2084617, 'iterator', iterator, false, false), false)(J$.R(2084625, 'item', item, false, false), J$.F(2084649, J$.R(2084633, 'async', async, false, true), false)(J$.R(2084641, 'callback', callback, false, false))), aborter, false, false);
                            } else {
                                aborter = J$.W(2084729, 'aborter', J$.F(2084721, J$.R(2084673, 'iterator', iterator, false, false), false)(J$.R(2084681, 'item', item, false, false), J$.R(2084689, 'key', key, false, false), J$.F(2084713, J$.R(2084697, 'async', async, false, true), false)(J$.R(2084705, 'callback', callback, false, false))), aborter, false, false);
                            }
                            return J$.Rt(2084745, J$.R(2084737, 'aborter', aborter, false, false));
                        } catch (J$e) {
                            J$.Ex(2084897, J$e);
                        } finally {
                            if (J$.Fr(2084905))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2084817, 'async', async, false, false, false);
            J$.N(2084825, 'abort', abort, false, false, false);
            iterate = J$.N(2084841, 'iterate', J$.T(2084833, iterate, 12, false), true, false, false);
            runJob = J$.N(2084857, 'runJob', J$.T(2084849, runJob, 12, false), true, false, false);
            J$.T(2084049, 'use strict', 21, false);
            var async = J$.W(2084105, 'async', J$.F(2084073, J$.I(typeof require === 'undefined' ? require = J$.R(2084057, 'require', undefined, true, true) : require = J$.R(2084057, 'require', require, true, true)), false)(J$.T(2084065, './async.js', 21, false)), async, false, true), abort = J$.W(2084113, 'abort', J$.F(2084097, J$.I(typeof require === 'undefined' ? require = J$.R(2084081, 'require', undefined, true, true) : require = J$.R(2084081, 'require', require, true, true)), false)(J$.T(2084089, './abort.js', 21, false)), abort, false, true);
            J$.P(2084137, J$.I(typeof module === 'undefined' ? module = J$.R(2084121, 'module', undefined, true, true) : module = J$.R(2084121, 'module', module, true, true)), 'exports', J$.R(2084129, 'iterate', iterate, false, true));
        } catch (J$e) {
            J$.Ex(2084913, J$e);
        } finally {
            if (J$.Sr(2084921))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

