J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2086921, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/asynckit/lib/readable_serial.js');
            function ReadableSerial(list, iterator, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2086881, arguments.callee, this, arguments);
                            arguments = J$.N(2086889, 'arguments', arguments, true, false, false);
                            list = J$.N(2086897, 'list', list, true, false, false);
                            iterator = J$.N(2086905, 'iterator', iterator, true, false, false);
                            callback = J$.N(2086913, 'callback', callback, true, false, false);
                            if (J$.C(131256, J$.U(257954, '!', J$.B(257946, 'instanceof', J$.R(2086721, 'this', this, false, false), J$.R(2086729, 'ReadableSerial', ReadableSerial, false, true))))) {
                                return J$.Rt(2086777, J$.F(2086769, J$.R(2086737, 'ReadableSerial', ReadableSerial, false, true), true)(J$.R(2086745, 'list', list, false, false), J$.R(2086753, 'iterator', iterator, false, false), J$.R(2086761, 'callback', callback, false, false)));
                            }
                            J$.M(2086825, J$.G(2086793, J$.R(2086785, 'ReadableSerial', ReadableSerial, false, true), 'super_'), 'call', false)(J$.R(2086801, 'this', this, false, false), J$.T(2086817, { objectMode: J$.T(2086809, true, 23, false) }, 11, false));
                            J$.M(2086873, J$.R(2086833, 'this', this, false, false), '_start', false)(J$.R(2086841, 'serial', serial, false, true), J$.R(2086849, 'list', list, false, false), J$.R(2086857, 'iterator', iterator, false, false), J$.R(2086865, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(2086953, J$e);
                        } finally {
                            if (J$.Fr(2086961))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2086929, 'serial', serial, false, false, false);
            ReadableSerial = J$.N(2086945, 'ReadableSerial', J$.T(2086937, ReadableSerial, 12, false), true, false, false);
            J$.T(2086657, 'use strict', 21, false);
            var serial = J$.W(2086689, 'serial', J$.F(2086681, J$.I(typeof require === 'undefined' ? require = J$.R(2086665, 'require', undefined, true, true) : require = J$.R(2086665, 'require', require, true, true)), false)(J$.T(2086673, '../serial.js', 21, false)), serial, false, true);
            J$.P(2086713, J$.I(typeof module === 'undefined' ? module = J$.R(2086697, 'module', undefined, true, true) : module = J$.R(2086697, 'module', module, true, true)), 'exports', J$.R(2086705, 'ReadableSerial', ReadableSerial, false, true));
        } catch (J$e) {
            J$.Ex(2086969, J$e);
        } finally {
            if (J$.Sr(2086977))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

