J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2086593, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/asynckit/lib/readable_parallel.js');
            function ReadableParallel(list, iterator, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2086553, arguments.callee, this, arguments);
                            arguments = J$.N(2086561, 'arguments', arguments, true, false, false);
                            list = J$.N(2086569, 'list', list, true, false, false);
                            iterator = J$.N(2086577, 'iterator', iterator, true, false, false);
                            callback = J$.N(2086585, 'callback', callback, true, false, false);
                            if (J$.C(131248, J$.U(257938, '!', J$.B(257930, 'instanceof', J$.R(2086393, 'this', this, false, false), J$.R(2086401, 'ReadableParallel', ReadableParallel, false, true))))) {
                                return J$.Rt(2086449, J$.F(2086441, J$.R(2086409, 'ReadableParallel', ReadableParallel, false, true), true)(J$.R(2086417, 'list', list, false, false), J$.R(2086425, 'iterator', iterator, false, false), J$.R(2086433, 'callback', callback, false, false)));
                            }
                            J$.M(2086497, J$.G(2086465, J$.R(2086457, 'ReadableParallel', ReadableParallel, false, true), 'super_'), 'call', false)(J$.R(2086473, 'this', this, false, false), J$.T(2086489, { objectMode: J$.T(2086481, true, 23, false) }, 11, false));
                            J$.M(2086545, J$.R(2086505, 'this', this, false, false), '_start', false)(J$.R(2086513, 'parallel', parallel, false, true), J$.R(2086521, 'list', list, false, false), J$.R(2086529, 'iterator', iterator, false, false), J$.R(2086537, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(2086625, J$e);
                        } finally {
                            if (J$.Fr(2086633))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2086601, 'parallel', parallel, false, false, false);
            ReadableParallel = J$.N(2086617, 'ReadableParallel', J$.T(2086609, ReadableParallel, 12, false), true, false, false);
            J$.T(2086329, 'use strict', 21, false);
            var parallel = J$.W(2086361, 'parallel', J$.F(2086353, J$.I(typeof require === 'undefined' ? require = J$.R(2086337, 'require', undefined, true, true) : require = J$.R(2086337, 'require', require, true, true)), false)(J$.T(2086345, '../parallel.js', 21, false)), parallel, false, true);
            J$.P(2086385, J$.I(typeof module === 'undefined' ? module = J$.R(2086369, 'module', undefined, true, true) : module = J$.R(2086369, 'module', module, true, true)), 'exports', J$.R(2086377, 'ReadableParallel', ReadableParallel, false, true));
        } catch (J$e) {
            J$.Ex(2086641, J$e);
        } finally {
            if (J$.Sr(2086649))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

