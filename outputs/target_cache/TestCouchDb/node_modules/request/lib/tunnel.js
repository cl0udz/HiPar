J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(2861009, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/request/lib/tunnel.js');
            function constructProxyHost(uriObject) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2858697, arguments.callee, this, arguments);
                            arguments = J$.N(2858705, 'arguments', arguments, true, false, false);
                            uriObject = J$.N(2858713, 'uriObject', uriObject, true, false, false);
                            J$.N(2858721, 'port', port, false, false, false);
                            J$.N(2858729, 'protocol', protocol, false, false, false);
                            J$.N(2858737, 'proxyHost', proxyHost, false, false, false);
                            var port = J$.W(2858521, 'port', J$.G(2858513, J$.R(2858505, 'uriObject', uriObject, false, false), 'port'), port, false, false);
                            var protocol = J$.W(2858545, 'protocol', J$.G(2858537, J$.R(2858529, 'uriObject', uriObject, false, false), 'protocol'), protocol, false, false);
                            var proxyHost = J$.W(2858577, 'proxyHost', J$.B(307698, '+', J$.G(2858561, J$.R(2858553, 'uriObject', uriObject, false, false), 'hostname'), J$.T(2858569, ':', 21, false)), proxyHost, false, false);
                            if (J$.C(163472, J$.R(2858585, 'port', port, false, false))) {
                                proxyHost = J$.W(2858609, 'proxyHost', J$.B(307706, '+', J$.R(2858601, 'proxyHost', proxyHost, false, false), J$.R(2858593, 'port', port, false, false)), proxyHost, false, false);
                            } else if (J$.C(163464, J$.B(307714, '===', J$.R(2858617, 'protocol', protocol, false, false), J$.T(2858625, 'https:', 21, false)))) {
                                proxyHost = J$.W(2858649, 'proxyHost', J$.B(307722, '+', J$.R(2858641, 'proxyHost', proxyHost, false, false), J$.T(2858633, '443', 21, false)), proxyHost, false, false);
                            } else {
                                proxyHost = J$.W(2858673, 'proxyHost', J$.B(307730, '+', J$.R(2858665, 'proxyHost', proxyHost, false, false), J$.T(2858657, '80', 21, false)), proxyHost, false, false);
                            }
                            return J$.Rt(2858689, J$.R(2858681, 'proxyHost', proxyHost, false, false));
                        } catch (J$e) {
                            J$.Ex(2861145, J$e);
                        } finally {
                            if (J$.Fr(2861153))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructProxyHeaderWhiteList(headers, proxyHeaderWhiteList) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2859105, arguments.callee, this, arguments);
                            arguments = J$.N(2859113, 'arguments', arguments, true, false, false);
                            headers = J$.N(2859121, 'headers', headers, true, false, false);
                            proxyHeaderWhiteList = J$.N(2859129, 'proxyHeaderWhiteList', proxyHeaderWhiteList, true, false, false);
                            J$.N(2859137, 'whiteList', whiteList, false, false, false);
                            var whiteList = J$.W(2858865, 'whiteList', J$.M(2858857, J$.R(2858745, 'proxyHeaderWhiteList', proxyHeaderWhiteList, false, false), 'reduce', false)(J$.T(2858841, function (set, header) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2858809, arguments.callee, this, arguments);
                                            arguments = J$.N(2858817, 'arguments', arguments, true, false, false);
                                            set = J$.N(2858825, 'set', set, true, false, false);
                                            header = J$.N(2858833, 'header', header, true, false, false);
                                            J$.P(2858785, J$.R(2858753, 'set', set, false, false), J$.M(2858769, J$.R(2858761, 'header', header, false, false), 'toLowerCase', false)(), J$.T(2858777, true, 23, false));
                                            return J$.Rt(2858801, J$.R(2858793, 'set', set, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2861161, J$e);
                                        } finally {
                                            if (J$.Fr(2861169))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.T(2858849, {}, 11, false)), whiteList, false, false);
                            return J$.Rt(2859097, J$.M(2859089, J$.M(2858969, J$.M(2858889, J$.I(typeof Object === 'undefined' ? Object = J$.R(2858873, 'Object', undefined, true, true) : Object = J$.R(2858873, 'Object', Object, true, true)), 'keys', false)(J$.R(2858881, 'headers', headers, false, false)), 'filter', false)(J$.T(2858961, function (header) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(2858937, arguments.callee, this, arguments);
                                            arguments = J$.N(2858945, 'arguments', arguments, true, false, false);
                                            header = J$.N(2858953, 'header', header, true, false, false);
                                            return J$.Rt(2858929, J$.G(2858921, J$.R(2858897, 'whiteList', whiteList, false, false), J$.M(2858913, J$.R(2858905, 'header', header, false, false), 'toLowerCase', false)()));
                                        } catch (J$e) {
                                            J$.Ex(2861177, J$e);
                                        } finally {
                                            if (J$.Fr(2861185))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'reduce', false)(J$.T(2859073, function (set, header) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2859041, arguments.callee, this, arguments);
                                            arguments = J$.N(2859049, 'arguments', arguments, true, false, false);
                                            set = J$.N(2859057, 'set', set, true, false, false);
                                            header = J$.N(2859065, 'header', header, true, false, false);
                                            J$.P(2859017, J$.R(2858977, 'set', set, false, false), J$.R(2858985, 'header', header, false, false), J$.G(2859009, J$.R(2858993, 'headers', headers, false, false), J$.R(2859001, 'header', header, false, false)));
                                            return J$.Rt(2859033, J$.R(2859025, 'set', set, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2861193, J$e);
                                        } finally {
                                            if (J$.Fr(2861201))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.T(2859081, {}, 11, false)));
                        } catch (J$e) {
                            J$.Ex(2861209, J$e);
                        } finally {
                            if (J$.Fr(2861217))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructTunnelOptions(request, proxyHeaders) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2859425, arguments.callee, this, arguments);
                            arguments = J$.N(2859433, 'arguments', arguments, true, false, false);
                            request = J$.N(2859441, 'request', request, true, false, false);
                            proxyHeaders = J$.N(2859449, 'proxyHeaders', proxyHeaders, true, false, false);
                            J$.N(2859457, 'proxy', proxy, false, false, false);
                            J$.N(2859465, 'tunnelOptions', tunnelOptions, false, false, false);
                            var proxy = J$.W(2859161, 'proxy', J$.G(2859153, J$.R(2859145, 'request', request, false, false), 'proxy'), proxy, false, false);
                            var tunnelOptions = J$.W(2859401, 'tunnelOptions', J$.T(2859393, {
                                proxy: J$.T(2859225, {
                                    host: J$.G(2859177, J$.R(2859169, 'proxy', proxy, false, false), 'hostname'),
                                    port: J$.U(307738, '+', J$.G(2859193, J$.R(2859185, 'proxy', proxy, false, false), 'port')),
                                    proxyAuth: J$.G(2859209, J$.R(2859201, 'proxy', proxy, false, false), 'auth'),
                                    headers: J$.R(2859217, 'proxyHeaders', proxyHeaders, false, false)
                                }, 11, false),
                                headers: J$.G(2859241, J$.R(2859233, 'request', request, false, false), 'headers'),
                                ca: J$.G(2859257, J$.R(2859249, 'request', request, false, false), 'ca'),
                                cert: J$.G(2859273, J$.R(2859265, 'request', request, false, false), 'cert'),
                                key: J$.G(2859289, J$.R(2859281, 'request', request, false, false), 'key'),
                                passphrase: J$.G(2859305, J$.R(2859297, 'request', request, false, false), 'passphrase'),
                                pfx: J$.G(2859321, J$.R(2859313, 'request', request, false, false), 'pfx'),
                                ciphers: J$.G(2859337, J$.R(2859329, 'request', request, false, false), 'ciphers'),
                                rejectUnauthorized: J$.G(2859353, J$.R(2859345, 'request', request, false, false), 'rejectUnauthorized'),
                                secureOptions: J$.G(2859369, J$.R(2859361, 'request', request, false, false), 'secureOptions'),
                                secureProtocol: J$.G(2859385, J$.R(2859377, 'request', request, false, false), 'secureProtocol')
                            }, 11, false), tunnelOptions, false, false);
                            return J$.Rt(2859417, J$.R(2859409, 'tunnelOptions', tunnelOptions, false, false));
                        } catch (J$e) {
                            J$.Ex(2861225, J$e);
                        } finally {
                            if (J$.Fr(2861233))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function constructTunnelFnName(uri, proxy) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2859617, arguments.callee, this, arguments);
                            arguments = J$.N(2859625, 'arguments', arguments, true, false, false);
                            uri = J$.N(2859633, 'uri', uri, true, false, false);
                            proxy = J$.N(2859641, 'proxy', proxy, true, false, false);
                            J$.N(2859649, 'uriProtocol', uriProtocol, false, false, false);
                            J$.N(2859657, 'proxyProtocol', proxyProtocol, false, false, false);
                            var uriProtocol = J$.W(2859513, 'uriProtocol', J$.C(163480, J$.B(307746, '===', J$.G(2859481, J$.R(2859473, 'uri', uri, false, false), 'protocol'), J$.T(2859489, 'https:', 21, false))) ? J$.T(2859497, 'https', 21, false) : J$.T(2859505, 'http', 21, false), uriProtocol, false, false);
                            var proxyProtocol = J$.W(2859561, 'proxyProtocol', J$.C(163488, J$.B(307754, '===', J$.G(2859529, J$.R(2859521, 'proxy', proxy, false, false), 'protocol'), J$.T(2859537, 'https:', 21, false))) ? J$.T(2859545, 'Https', 21, false) : J$.T(2859553, 'Http', 21, false), proxyProtocol, false, false);
                            return J$.Rt(2859609, J$.M(2859601, J$.T(2859585, [
                                J$.R(2859569, 'uriProtocol', uriProtocol, false, false),
                                J$.R(2859577, 'proxyProtocol', proxyProtocol, false, false)
                            ], 10, false), 'join', false)(J$.T(2859593, 'Over', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2861241, J$e);
                        } finally {
                            if (J$.Fr(2861249))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getTunnelFn(request) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2859785, arguments.callee, this, arguments);
                            arguments = J$.N(2859793, 'arguments', arguments, true, false, false);
                            request = J$.N(2859801, 'request', request, true, false, false);
                            J$.N(2859809, 'uri', uri, false, false, false);
                            J$.N(2859817, 'proxy', proxy, false, false, false);
                            J$.N(2859825, 'tunnelFnName', tunnelFnName, false, false, false);
                            var uri = J$.W(2859681, 'uri', J$.G(2859673, J$.R(2859665, 'request', request, false, false), 'uri'), uri, false, false);
                            var proxy = J$.W(2859705, 'proxy', J$.G(2859697, J$.R(2859689, 'request', request, false, false), 'proxy'), proxy, false, false);
                            var tunnelFnName = J$.W(2859745, 'tunnelFnName', J$.F(2859737, J$.R(2859713, 'constructTunnelFnName', constructTunnelFnName, false, true), false)(J$.R(2859721, 'uri', uri, false, false), J$.R(2859729, 'proxy', proxy, false, false)), tunnelFnName, false, false);
                            return J$.Rt(2859777, J$.G(2859769, J$.R(2859753, 'tunnel', tunnel, false, true), J$.R(2859761, 'tunnelFnName', tunnelFnName, false, false)));
                        } catch (J$e) {
                            J$.Ex(2861257, J$e);
                        } finally {
                            if (J$.Fr(2861265))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Tunnel(request) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2859961, arguments.callee, this, arguments);
                            arguments = J$.N(2859969, 'arguments', arguments, true, false, false);
                            request = J$.N(2859977, 'request', request, true, false, false);
                            J$.P(2859849, J$.R(2859833, 'this', this, false, false), 'request', J$.R(2859841, 'request', request, false, false));
                            J$.P(2859873, J$.R(2859857, 'this', this, false, false), 'proxyHeaderWhiteList', J$.R(2859865, 'defaultProxyHeaderWhiteList', defaultProxyHeaderWhiteList, false, true));
                            J$.P(2859897, J$.R(2859881, 'this', this, false, false), 'proxyHeaderExclusiveList', J$.T(2859889, [], 10, false));
                            if (J$.C(163496, J$.B(307770, '!==', J$.U(307762, 'typeof', J$.G(2859913, J$.R(2859905, 'request', request, false, false), 'tunnel')), J$.T(2859921, 'undefined', 21, false)))) {
                                J$.P(2859953, J$.R(2859929, 'this', this, false, false), 'tunnelOverride', J$.G(2859945, J$.R(2859937, 'request', request, false, false), 'tunnel'));
                            }
                        } catch (J$e) {
                            J$.Ex(2861273, J$e);
                        } finally {
                            if (J$.Fr(2861281))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2861017, 'url', url, false, false, false);
            J$.N(2861025, 'tunnel', tunnel, false, false, false);
            J$.N(2861033, 'defaultProxyHeaderWhiteList', defaultProxyHeaderWhiteList, false, false, false);
            J$.N(2861041, 'defaultProxyHeaderExclusiveList', defaultProxyHeaderExclusiveList, false, false, false);
            constructProxyHost = J$.N(2861057, 'constructProxyHost', J$.T(2861049, constructProxyHost, 12, false), true, false, false);
            constructProxyHeaderWhiteList = J$.N(2861073, 'constructProxyHeaderWhiteList', J$.T(2861065, constructProxyHeaderWhiteList, 12, false), true, false, false);
            constructTunnelOptions = J$.N(2861089, 'constructTunnelOptions', J$.T(2861081, constructTunnelOptions, 12, false), true, false, false);
            constructTunnelFnName = J$.N(2861105, 'constructTunnelFnName', J$.T(2861097, constructTunnelFnName, 12, false), true, false, false);
            getTunnelFn = J$.N(2861121, 'getTunnelFn', J$.T(2861113, getTunnelFn, 12, false), true, false, false);
            Tunnel = J$.N(2861137, 'Tunnel', J$.T(2861129, Tunnel, 12, false), true, false, false);
            J$.T(2857553, 'use strict', 21, false);
            J$.F(2857577, J$.I(typeof require === 'undefined' ? require = J$.R(2857561, 'require', undefined, true, true) : require = J$.R(2857561, 'require', require, true, true)), false)(J$.T(2857569, 'core-js/modules/es.array.concat', 21, false));
            J$.F(2857601, J$.I(typeof require === 'undefined' ? require = J$.R(2857585, 'require', undefined, true, true) : require = J$.R(2857585, 'require', require, true, true)), false)(J$.T(2857593, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2857625, J$.I(typeof require === 'undefined' ? require = J$.R(2857609, 'require', undefined, true, true) : require = J$.R(2857609, 'require', require, true, true)), false)(J$.T(2857617, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2857649, J$.I(typeof require === 'undefined' ? require = J$.R(2857633, 'require', undefined, true, true) : require = J$.R(2857633, 'require', require, true, true)), false)(J$.T(2857641, 'core-js/modules/es.array.join', 21, false));
            J$.F(2857673, J$.I(typeof require === 'undefined' ? require = J$.R(2857657, 'require', undefined, true, true) : require = J$.R(2857657, 'require', require, true, true)), false)(J$.T(2857665, 'core-js/modules/es.array.reduce', 21, false));
            J$.F(2857697, J$.I(typeof require === 'undefined' ? require = J$.R(2857681, 'require', undefined, true, true) : require = J$.R(2857681, 'require', require, true, true)), false)(J$.T(2857689, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2857721, J$.I(typeof require === 'undefined' ? require = J$.R(2857705, 'require', undefined, true, true) : require = J$.R(2857705, 'require', require, true, true)), false)(J$.T(2857713, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(2857745, J$.I(typeof require === 'undefined' ? require = J$.R(2857729, 'require', undefined, true, true) : require = J$.R(2857729, 'require', require, true, true)), false)(J$.T(2857737, 'core-js/modules/es.array.concat', 21, false));
            J$.F(2857769, J$.I(typeof require === 'undefined' ? require = J$.R(2857753, 'require', undefined, true, true) : require = J$.R(2857753, 'require', require, true, true)), false)(J$.T(2857761, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2857793, J$.I(typeof require === 'undefined' ? require = J$.R(2857777, 'require', undefined, true, true) : require = J$.R(2857777, 'require', require, true, true)), false)(J$.T(2857785, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2857817, J$.I(typeof require === 'undefined' ? require = J$.R(2857801, 'require', undefined, true, true) : require = J$.R(2857801, 'require', require, true, true)), false)(J$.T(2857809, 'core-js/modules/es.array.join', 21, false));
            J$.F(2857841, J$.I(typeof require === 'undefined' ? require = J$.R(2857825, 'require', undefined, true, true) : require = J$.R(2857825, 'require', require, true, true)), false)(J$.T(2857833, 'core-js/modules/es.array.reduce', 21, false));
            J$.F(2857865, J$.I(typeof require === 'undefined' ? require = J$.R(2857849, 'require', undefined, true, true) : require = J$.R(2857849, 'require', require, true, true)), false)(J$.T(2857857, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2857889, J$.I(typeof require === 'undefined' ? require = J$.R(2857873, 'require', undefined, true, true) : require = J$.R(2857873, 'require', require, true, true)), false)(J$.T(2857881, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(2857913, J$.I(typeof require === 'undefined' ? require = J$.R(2857897, 'require', undefined, true, true) : require = J$.R(2857897, 'require', require, true, true)), false)(J$.T(2857905, 'core-js/modules/es.array.concat', 21, false));
            J$.F(2857937, J$.I(typeof require === 'undefined' ? require = J$.R(2857921, 'require', undefined, true, true) : require = J$.R(2857921, 'require', require, true, true)), false)(J$.T(2857929, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2857961, J$.I(typeof require === 'undefined' ? require = J$.R(2857945, 'require', undefined, true, true) : require = J$.R(2857945, 'require', require, true, true)), false)(J$.T(2857953, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2857985, J$.I(typeof require === 'undefined' ? require = J$.R(2857969, 'require', undefined, true, true) : require = J$.R(2857969, 'require', require, true, true)), false)(J$.T(2857977, 'core-js/modules/es.array.join', 21, false));
            J$.F(2858009, J$.I(typeof require === 'undefined' ? require = J$.R(2857993, 'require', undefined, true, true) : require = J$.R(2857993, 'require', require, true, true)), false)(J$.T(2858001, 'core-js/modules/es.array.reduce', 21, false));
            J$.F(2858033, J$.I(typeof require === 'undefined' ? require = J$.R(2858017, 'require', undefined, true, true) : require = J$.R(2858017, 'require', require, true, true)), false)(J$.T(2858025, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2858057, J$.I(typeof require === 'undefined' ? require = J$.R(2858041, 'require', undefined, true, true) : require = J$.R(2858041, 'require', require, true, true)), false)(J$.T(2858049, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(2858081, J$.I(typeof require === 'undefined' ? require = J$.R(2858065, 'require', undefined, true, true) : require = J$.R(2858065, 'require', require, true, true)), false)(J$.T(2858073, 'core-js/modules/es.array.concat', 21, false));
            J$.F(2858105, J$.I(typeof require === 'undefined' ? require = J$.R(2858089, 'require', undefined, true, true) : require = J$.R(2858089, 'require', require, true, true)), false)(J$.T(2858097, 'core-js/modules/es.array.filter', 21, false));
            J$.F(2858129, J$.I(typeof require === 'undefined' ? require = J$.R(2858113, 'require', undefined, true, true) : require = J$.R(2858113, 'require', require, true, true)), false)(J$.T(2858121, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2858153, J$.I(typeof require === 'undefined' ? require = J$.R(2858137, 'require', undefined, true, true) : require = J$.R(2858137, 'require', require, true, true)), false)(J$.T(2858145, 'core-js/modules/es.array.join', 21, false));
            J$.F(2858177, J$.I(typeof require === 'undefined' ? require = J$.R(2858161, 'require', undefined, true, true) : require = J$.R(2858161, 'require', require, true, true)), false)(J$.T(2858169, 'core-js/modules/es.array.reduce', 21, false));
            J$.F(2858201, J$.I(typeof require === 'undefined' ? require = J$.R(2858185, 'require', undefined, true, true) : require = J$.R(2858185, 'require', require, true, true)), false)(J$.T(2858193, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2858225, J$.I(typeof require === 'undefined' ? require = J$.R(2858209, 'require', undefined, true, true) : require = J$.R(2858209, 'require', require, true, true)), false)(J$.T(2858217, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var url = J$.W(2858257, 'url', J$.F(2858249, J$.I(typeof require === 'undefined' ? require = J$.R(2858233, 'require', undefined, true, true) : require = J$.R(2858233, 'require', require, true, true)), false)(J$.T(2858241, 'url', 21, false)), url, false, true);
            var tunnel = J$.W(2858289, 'tunnel', J$.F(2858281, J$.I(typeof require === 'undefined' ? require = J$.R(2858265, 'require', undefined, true, true) : require = J$.R(2858265, 'require', require, true, true)), false)(J$.T(2858273, 'tunnel-agent', 21, false)), tunnel, false, true);
            var defaultProxyHeaderWhiteList = J$.W(2858473, 'defaultProxyHeaderWhiteList', J$.T(2858465, [
                J$.T(2858297, 'accept', 21, false),
                J$.T(2858305, 'accept-charset', 21, false),
                J$.T(2858313, 'accept-encoding', 21, false),
                J$.T(2858321, 'accept-language', 21, false),
                J$.T(2858329, 'accept-ranges', 21, false),
                J$.T(2858337, 'cache-control', 21, false),
                J$.T(2858345, 'content-encoding', 21, false),
                J$.T(2858353, 'content-language', 21, false),
                J$.T(2858361, 'content-location', 21, false),
                J$.T(2858369, 'content-md5', 21, false),
                J$.T(2858377, 'content-range', 21, false),
                J$.T(2858385, 'content-type', 21, false),
                J$.T(2858393, 'connection', 21, false),
                J$.T(2858401, 'date', 21, false),
                J$.T(2858409, 'expect', 21, false),
                J$.T(2858417, 'max-forwards', 21, false),
                J$.T(2858425, 'pragma', 21, false),
                J$.T(2858433, 'referer', 21, false),
                J$.T(2858441, 'te', 21, false),
                J$.T(2858449, 'user-agent', 21, false),
                J$.T(2858457, 'via', 21, false)
            ], 10, false), defaultProxyHeaderWhiteList, false, true);
            var defaultProxyHeaderExclusiveList = J$.W(2858497, 'defaultProxyHeaderExclusiveList', J$.T(2858489, [J$.T(2858481, 'proxy-authorization', 21, false)], 10, false), defaultProxyHeaderExclusiveList, false, true);
            J$.P(2860193, J$.G(2859993, J$.R(2859985, 'Tunnel', Tunnel, false, true), 'prototype'), 'isEnabled', J$.T(2860185, function () {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(2860153, arguments.callee, this, arguments);
                            arguments = J$.N(2860161, 'arguments', arguments, true, false, false);
                            J$.N(2860169, 'self', self, false, false, false);
                            J$.N(2860177, 'request', request, false, false, false);
                            var self = J$.W(2860009, 'self', J$.R(2860001, 'this', this, false, false), self, false, false);
                            var request = J$.W(2860033, 'request', J$.G(2860025, J$.R(2860017, 'self', self, false, false), 'request'), request, false, false);
                            if (J$.C(163504, J$.B(307786, '!==', J$.U(307778, 'typeof', J$.G(2860049, J$.R(2860041, 'self', self, false, false), 'tunnelOverride')), J$.T(2860057, 'undefined', 21, false)))) {
                                return J$.Rt(2860081, J$.G(2860073, J$.R(2860065, 'self', self, false, false), 'tunnelOverride'));
                            }
                            if (J$.C(163512, J$.B(307794, '===', J$.G(2860105, J$.G(2860097, J$.R(2860089, 'request', request, false, false), 'uri'), 'protocol'), J$.T(2860113, 'https:', 21, false)))) {
                                return J$.Rt(2860129, J$.T(2860121, true, 23, false));
                            }
                            return J$.Rt(2860145, J$.T(2860137, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(2861289, J$e);
                        } finally {
                            if (J$.Fr(2861297))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2860929, J$.G(2860209, J$.R(2860201, 'Tunnel', Tunnel, false, true), 'prototype'), 'setup', J$.T(2860921, function (options) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(2860841, arguments.callee, this, arguments);
                            arguments = J$.N(2860849, 'arguments', arguments, true, false, false);
                            options = J$.N(2860857, 'options', options, true, false, false);
                            J$.N(2860865, 'self', self, false, false, false);
                            J$.N(2860873, 'request', request, false, false, false);
                            J$.N(2860881, 'proxyHeaderExclusiveList', proxyHeaderExclusiveList, false, false, false);
                            J$.N(2860889, 'proxyHeaderWhiteList', proxyHeaderWhiteList, false, false, false);
                            J$.N(2860897, 'proxyHeaders', proxyHeaders, false, false, false);
                            J$.N(2860905, 'tunnelFn', tunnelFn, false, false, false);
                            J$.N(2860913, 'tunnelOptions', tunnelOptions, false, false, false);
                            var self = J$.W(2860225, 'self', J$.R(2860217, 'this', this, false, false), self, false, false);
                            var request = J$.W(2860249, 'request', J$.G(2860241, J$.R(2860233, 'self', self, false, false), 'request'), request, false, false);
                            options = J$.W(2860273, 'options', J$.C(163520, J$.R(2860257, 'options', options, false, false)) ? J$._() : J$.T(2860265, {}, 11, false), options, false, false);
                            if (J$.C(163528, J$.B(307810, '===', J$.U(307802, 'typeof', J$.G(2860289, J$.R(2860281, 'request', request, false, false), 'proxy')), J$.T(2860297, 'string', 21, false)))) {
                                J$.P(2860345, J$.R(2860305, 'request', request, false, false), 'proxy', J$.M(2860337, J$.R(2860313, 'url', url, false, true), 'parse', false)(J$.G(2860329, J$.R(2860321, 'request', request, false, false), 'proxy')));
                            }
                            if (J$.C(163544, J$.C(163536, J$.U(307818, '!', J$.G(2860361, J$.R(2860353, 'request', request, false, false), 'proxy'))) ? J$._() : J$.U(307826, '!', J$.G(2860377, J$.R(2860369, 'request', request, false, false), 'tunnel')))) {
                                return J$.Rt(2860393, J$.T(2860385, false, 23, false));
                            }
                            if (J$.C(163552, J$.G(2860409, J$.R(2860401, 'options', options, false, false), 'proxyHeaderWhiteList'))) {
                                J$.P(2860441, J$.R(2860417, 'self', self, false, false), 'proxyHeaderWhiteList', J$.G(2860433, J$.R(2860425, 'options', options, false, false), 'proxyHeaderWhiteList'));
                            }
                            if (J$.C(163560, J$.G(2860457, J$.R(2860449, 'options', options, false, false), 'proxyHeaderExclusiveList'))) {
                                J$.P(2860489, J$.R(2860465, 'self', self, false, false), 'proxyHeaderExclusiveList', J$.G(2860481, J$.R(2860473, 'options', options, false, false), 'proxyHeaderExclusiveList'));
                            }
                            var proxyHeaderExclusiveList = J$.W(2860529, 'proxyHeaderExclusiveList', J$.M(2860521, J$.G(2860505, J$.R(2860497, 'self', self, false, false), 'proxyHeaderExclusiveList'), 'concat', false)(J$.R(2860513, 'defaultProxyHeaderExclusiveList', defaultProxyHeaderExclusiveList, false, true)), proxyHeaderExclusiveList, false, false);
                            var proxyHeaderWhiteList = J$.W(2860569, 'proxyHeaderWhiteList', J$.M(2860561, J$.G(2860545, J$.R(2860537, 'self', self, false, false), 'proxyHeaderWhiteList'), 'concat', false)(J$.R(2860553, 'proxyHeaderExclusiveList', proxyHeaderExclusiveList, false, false)), proxyHeaderWhiteList, false, false);
                            var proxyHeaders = J$.W(2860617, 'proxyHeaders', J$.F(2860609, J$.R(2860577, 'constructProxyHeaderWhiteList', constructProxyHeaderWhiteList, false, true), false)(J$.G(2860593, J$.R(2860585, 'request', request, false, false), 'headers'), J$.R(2860601, 'proxyHeaderWhiteList', proxyHeaderWhiteList, false, false)), proxyHeaders, false, false);
                            J$.P(2860665, J$.R(2860625, 'proxyHeaders', proxyHeaders, false, false), 'host', J$.F(2860657, J$.R(2860633, 'constructProxyHost', constructProxyHost, false, true), false)(J$.G(2860649, J$.R(2860641, 'request', request, false, false), 'uri')));
                            J$.M(2860705, J$.R(2860673, 'proxyHeaderExclusiveList', proxyHeaderExclusiveList, false, false), 'forEach', false)(J$.G(2860689, J$.R(2860681, 'request', request, false, false), 'removeHeader'), J$.R(2860697, 'request', request, false, false));
                            var tunnelFn = J$.W(2860737, 'tunnelFn', J$.F(2860729, J$.R(2860713, 'getTunnelFn', getTunnelFn, false, true), false)(J$.R(2860721, 'request', request, false, false)), tunnelFn, false, false);
                            var tunnelOptions = J$.W(2860777, 'tunnelOptions', J$.F(2860769, J$.R(2860745, 'constructTunnelOptions', constructTunnelOptions, false, true), false)(J$.R(2860753, 'request', request, false, false), J$.R(2860761, 'proxyHeaders', proxyHeaders, false, false)), tunnelOptions, false, false);
                            J$.P(2860817, J$.R(2860785, 'request', request, false, false), 'agent', J$.F(2860809, J$.R(2860793, 'tunnelFn', tunnelFn, false, false), false)(J$.R(2860801, 'tunnelOptions', tunnelOptions, false, false)));
                            return J$.Rt(2860833, J$.T(2860825, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(2861305, J$e);
                        } finally {
                            if (J$.Fr(2861313))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2860953, J$.R(2860937, 'Tunnel', Tunnel, false, true), 'defaultProxyHeaderWhiteList', J$.R(2860945, 'defaultProxyHeaderWhiteList', defaultProxyHeaderWhiteList, false, true));
            J$.P(2860977, J$.R(2860961, 'Tunnel', Tunnel, false, true), 'defaultProxyHeaderExclusiveList', J$.R(2860969, 'defaultProxyHeaderExclusiveList', defaultProxyHeaderExclusiveList, false, true));
            J$.P(2861001, J$.I(typeof exports === 'undefined' ? exports = J$.R(2860985, 'exports', undefined, true, true) : exports = J$.R(2860985, 'exports', exports, true, true)), 'Tunnel', J$.R(2860993, 'Tunnel', Tunnel, false, true));
        } catch (J$e) {
            J$.Ex(2861321, J$e);
        } finally {
            if (J$.Sr(2861329))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

