J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(1876929, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/ajv/lib/cache.js');
            J$.N(1876937, 'Cache', Cache, false, false, false);
            J$.T(1876497, 'use strict', 21, false);
            var Cache = J$.W(1876569, 'Cache', J$.P(1876561, J$.I(typeof module === 'undefined' ? module = J$.R(1876505, 'module', undefined, true, true) : module = J$.R(1876505, 'module', module, true, true)), 'exports', J$.T(1876553, function Cache() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1876537, arguments.callee, this, arguments);
                            arguments = J$.N(1876545, 'arguments', arguments, true, false, false);
                            J$.P(1876529, J$.R(1876513, 'this', this, false, false), '_cache', J$.T(1876521, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(1876945, J$e);
                        } finally {
                            if (J$.Fr(1876953))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), Cache, false, true);
            J$.P(1876673, J$.G(1876585, J$.R(1876577, 'Cache', Cache, false, true), 'prototype'), 'put', J$.T(1876665, function Cache_put(key, value) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1876633, arguments.callee, this, arguments);
                            arguments = J$.N(1876641, 'arguments', arguments, true, false, false);
                            key = J$.N(1876649, 'key', key, true, false, false);
                            value = J$.N(1876657, 'value', value, true, false, false);
                            J$.P(1876625, J$.G(1876601, J$.R(1876593, 'this', this, false, false), '_cache'), J$.R(1876609, 'key', key, false, false), J$.R(1876617, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(1876961, J$e);
                        } finally {
                            if (J$.Fr(1876969))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1876769, J$.G(1876689, J$.R(1876681, 'Cache', Cache, false, true), 'prototype'), 'get', J$.T(1876761, function Cache_get(key) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1876737, arguments.callee, this, arguments);
                            arguments = J$.N(1876745, 'arguments', arguments, true, false, false);
                            key = J$.N(1876753, 'key', key, true, false, false);
                            return J$.Rt(1876729, J$.G(1876721, J$.G(1876705, J$.R(1876697, 'this', this, false, false), '_cache'), J$.R(1876713, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1876977, J$e);
                        } finally {
                            if (J$.Fr(1876985))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1876849, J$.G(1876785, J$.R(1876777, 'Cache', Cache, false, true), 'prototype'), 'del', J$.T(1876841, function Cache_del(key) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1876817, arguments.callee, this, arguments);
                            arguments = J$.N(1876825, 'arguments', arguments, true, false, false);
                            key = J$.N(1876833, 'key', key, true, false, false);
                            J$.B(218050, 'delete', J$.G(1876801, J$.R(1876793, 'this', this, false, false), '_cache'), J$.R(1876809, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(1876993, J$e);
                        } finally {
                            if (J$.Fr(1877001))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1876921, J$.G(1876865, J$.R(1876857, 'Cache', Cache, false, true), 'prototype'), 'clear', J$.T(1876913, function Cache_clear() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1876897, arguments.callee, this, arguments);
                            arguments = J$.N(1876905, 'arguments', arguments, true, false, false);
                            J$.P(1876889, J$.R(1876873, 'this', this, false, false), '_cache', J$.T(1876881, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(1877009, J$e);
                        } finally {
                            if (J$.Fr(1877017))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1877025, J$e);
        } finally {
            if (J$.Sr(1877033))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

