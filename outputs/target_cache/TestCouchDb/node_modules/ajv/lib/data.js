J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1917137, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/ajv/lib/data.js');
            J$.N(1917145, 'KEYWORDS', KEYWORDS, false, false, false);
            J$.T(1916185, 'use strict', 21, false);
            J$.F(1916209, J$.I(typeof require === 'undefined' ? require = J$.R(1916193, 'require', undefined, true, true) : require = J$.R(1916193, 'require', require, true, true)), false)(J$.T(1916201, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1916233, J$.I(typeof require === 'undefined' ? require = J$.R(1916217, 'require', undefined, true, true) : require = J$.R(1916217, 'require', require, true, true)), false)(J$.T(1916225, 'core-js/modules/es.string.split', 21, false));
            J$.F(1916257, J$.I(typeof require === 'undefined' ? require = J$.R(1916241, 'require', undefined, true, true) : require = J$.R(1916241, 'require', require, true, true)), false)(J$.T(1916249, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1916281, J$.I(typeof require === 'undefined' ? require = J$.R(1916265, 'require', undefined, true, true) : require = J$.R(1916265, 'require', require, true, true)), false)(J$.T(1916273, 'core-js/modules/es.string.split', 21, false));
            J$.F(1916305, J$.I(typeof require === 'undefined' ? require = J$.R(1916289, 'require', undefined, true, true) : require = J$.R(1916289, 'require', require, true, true)), false)(J$.T(1916297, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1916329, J$.I(typeof require === 'undefined' ? require = J$.R(1916313, 'require', undefined, true, true) : require = J$.R(1916313, 'require', require, true, true)), false)(J$.T(1916321, 'core-js/modules/es.string.split', 21, false));
            J$.F(1916353, J$.I(typeof require === 'undefined' ? require = J$.R(1916337, 'require', undefined, true, true) : require = J$.R(1916337, 'require', require, true, true)), false)(J$.T(1916345, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1916377, J$.I(typeof require === 'undefined' ? require = J$.R(1916361, 'require', undefined, true, true) : require = J$.R(1916361, 'require', require, true, true)), false)(J$.T(1916369, 'core-js/modules/es.string.split', 21, false));
            var KEYWORDS = J$.W(1916545, 'KEYWORDS', J$.T(1916537, [
                J$.T(1916385, 'multipleOf', 21, false),
                J$.T(1916393, 'maximum', 21, false),
                J$.T(1916401, 'exclusiveMaximum', 21, false),
                J$.T(1916409, 'minimum', 21, false),
                J$.T(1916417, 'exclusiveMinimum', 21, false),
                J$.T(1916425, 'maxLength', 21, false),
                J$.T(1916433, 'minLength', 21, false),
                J$.T(1916441, 'pattern', 21, false),
                J$.T(1916449, 'additionalItems', 21, false),
                J$.T(1916457, 'maxItems', 21, false),
                J$.T(1916465, 'minItems', 21, false),
                J$.T(1916473, 'uniqueItems', 21, false),
                J$.T(1916481, 'maxProperties', 21, false),
                J$.T(1916489, 'minProperties', 21, false),
                J$.T(1916497, 'required', 21, false),
                J$.T(1916505, 'additionalProperties', 21, false),
                J$.T(1916513, 'enum', 21, false),
                J$.T(1916521, 'format', 21, false),
                J$.T(1916529, 'const', 21, false)
            ], 10, false), KEYWORDS, false, true);
            J$.P(1917129, J$.I(typeof module === 'undefined' ? module = J$.R(1916553, 'module', undefined, true, true) : module = J$.R(1916553, 'module', module, true, true)), 'exports', J$.T(1917121, function (metaSchema, keywordsJsonPointers) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1917041, arguments.callee, this, arguments);
                            arguments = J$.N(1917049, 'arguments', arguments, true, false, false);
                            metaSchema = J$.N(1917057, 'metaSchema', metaSchema, true, false, false);
                            keywordsJsonPointers = J$.N(1917065, 'keywordsJsonPointers', keywordsJsonPointers, true, false, false);
                            J$.N(1917073, 'i', i, false, false, false);
                            J$.N(1917081, 'segments', segments, false, false, false);
                            J$.N(1917089, 'keywords', keywords, false, false, false);
                            J$.N(1917097, 'j', j, false, false, false);
                            J$.N(1917105, 'key', key, false, false, false);
                            J$.N(1917113, 'schema', schema, false, false, false);
                            for (var i = J$.W(1916569, 'i', J$.T(1916561, 0, 22, false), i, false, false); J$.C(119904, J$.B(221594, '<', J$.R(1916577, 'i', i, false, false), J$.G(1916593, J$.R(1916585, 'keywordsJsonPointers', keywordsJsonPointers, false, false), 'length'))); J$.B(221618, '-', i = J$.W(1916609, 'i', J$.B(221610, '+', J$.U(221602, '+', J$.R(1916601, 'i', i, false, false)), 1), i, false, false), 1)) {
                                metaSchema = J$.W(1916657, 'metaSchema', J$.M(1916649, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(1916617, 'JSON', undefined, true, true) : JSON = J$.R(1916617, 'JSON', JSON, true, true)), 'parse', false)(J$.M(1916641, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(1916625, 'JSON', undefined, true, true) : JSON = J$.R(1916625, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(1916633, 'metaSchema', metaSchema, false, false))), metaSchema, false, false);
                                var segments = J$.W(1916705, 'segments', J$.M(1916697, J$.G(1916681, J$.R(1916665, 'keywordsJsonPointers', keywordsJsonPointers, false, false), J$.R(1916673, 'i', i, false, false)), 'split', false)(J$.T(1916689, '/', 21, false)), segments, false, false);
                                var keywords = J$.W(1916721, 'keywords', J$.R(1916713, 'metaSchema', metaSchema, false, false), keywords, false, false);
                                var j;
                                for (j = J$.W(1916737, 'j', J$.T(1916729, 1, 22, false), j, false, false); J$.C(119880, J$.B(221626, '<', J$.R(1916745, 'j', j, false, false), J$.G(1916761, J$.R(1916753, 'segments', segments, false, false), 'length'))); J$.B(221650, '-', j = J$.W(1916777, 'j', J$.B(221642, '+', J$.U(221634, '+', J$.R(1916769, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    keywords = J$.W(1916825, 'keywords', J$.G(1916817, J$.R(1916785, 'keywords', keywords, false, false), J$.G(1916809, J$.R(1916793, 'segments', segments, false, false), J$.R(1916801, 'j', j, false, false))), keywords, false, false);
                                }
                                for (j = J$.W(1916841, 'j', J$.T(1916833, 0, 22, false), j, false, false); J$.C(119896, J$.B(221658, '<', J$.R(1916849, 'j', j, false, false), J$.G(1916865, J$.R(1916857, 'KEYWORDS', KEYWORDS, false, true), 'length'))); J$.B(221682, '-', j = J$.W(1916881, 'j', J$.B(221674, '+', J$.U(221666, '+', J$.R(1916873, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    var key = J$.W(1916913, 'key', J$.G(1916905, J$.R(1916889, 'KEYWORDS', KEYWORDS, false, true), J$.R(1916897, 'j', j, false, false)), key, false, false);
                                    var schema = J$.W(1916945, 'schema', J$.G(1916937, J$.R(1916921, 'keywords', keywords, false, false), J$.R(1916929, 'key', key, false, false)), schema, false, false);
                                    if (J$.C(119888, J$.R(1916953, 'schema', schema, false, false))) {
                                        J$.P(1917017, J$.R(1916961, 'keywords', keywords, false, false), J$.R(1916969, 'key', key, false, false), J$.T(1917009, {
                                            anyOf: J$.T(1917001, [
                                                J$.R(1916977, 'schema', schema, false, false),
                                                J$.T(1916993, { $ref: J$.T(1916985, 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#', 21, false) }, 11, false)
                                            ], 10, false)
                                        }, 11, false));
                                    }
                                }
                            }
                            return J$.Rt(1917033, J$.R(1917025, 'metaSchema', metaSchema, false, false));
                        } catch (J$e) {
                            J$.Ex(1917153, J$e);
                        } finally {
                            if (J$.Fr(1917161))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1917169, J$e);
        } finally {
            if (J$.Sr(1917177))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

