J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1939241, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/ajv/lib/dotjs/const.js');
            J$.T(1937721, 'use strict', 21, false);
            J$.P(1939233, J$.I(typeof module === 'undefined' ? module = J$.R(1937729, 'module', undefined, true, true) : module = J$.R(1937729, 'module', module, true, true)), 'exports', J$.T(1939225, function generate_const(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1939081, arguments.callee, this, arguments);
                            arguments = J$.N(1939089, 'arguments', arguments, true, false, false);
                            it = J$.N(1939097, 'it', it, true, false, false);
                            $keyword = J$.N(1939105, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(1939113, '$ruleType', $ruleType, true, false, false);
                            J$.N(1939121, 'out', out, false, false, false);
                            J$.N(1939129, '$lvl', $lvl, false, false, false);
                            J$.N(1939137, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(1939145, '$schema', $schema, false, false, false);
                            J$.N(1939153, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(1939161, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(1939169, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(1939177, '$data', $data, false, false, false);
                            J$.N(1939185, '$valid', $valid, false, false, false);
                            J$.N(1939193, '$isData', $isData, false, false, false);
                            J$.N(1939201, '$schemaValue', $schemaValue, false, false, false);
                            J$.N(1939209, '$$outStack', $$outStack, false, false, false);
                            J$.N(1939217, '__err', __err, false, false, false);
                            var out = J$.W(1937745, 'out', J$.T(1937737, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(1937769, '$lvl', J$.G(1937761, J$.R(1937753, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(1937793, '$dataLvl', J$.G(1937785, J$.R(1937777, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(1937833, '$schema', J$.G(1937825, J$.G(1937809, J$.R(1937801, 'it', it, false, false), 'schema'), J$.R(1937817, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(1937889, '$schemaPath', J$.B(226906, '+', J$.G(1937849, J$.R(1937841, 'it', it, false, false), 'schemaPath'), J$.M(1937881, J$.G(1937865, J$.R(1937857, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(1937873, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(1937929, '$errSchemaPath', J$.B(226922, '+', J$.B(226914, '+', J$.G(1937905, J$.R(1937897, 'it', it, false, false), 'errSchemaPath'), J$.T(1937913, '/', 21, false)), J$.R(1937921, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(1937961, '$breakOnError', J$.U(226930, '!', J$.G(1937953, J$.G(1937945, J$.R(1937937, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(1937993, '$data', J$.B(226938, '+', J$.T(1937969, 'data', 21, false), J$.C(121360, J$.R(1937977, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(1937985, '', 21, false)), $data, false, false);
                            var $valid = J$.W(1938017, '$valid', J$.B(226946, '+', J$.T(1938001, 'valid', 21, false), J$.R(1938009, '$lvl', $lvl, false, false)), $valid, false, false);
                            var $isData = J$.W(1938073, '$isData', J$.C(121376, J$.C(121368, J$.G(1938041, J$.G(1938033, J$.R(1938025, 'it', it, false, false), 'opts'), '$data')) ? J$.R(1938049, '$schema', $schema, false, false) : J$._()) ? J$.G(1938065, J$.R(1938057, '$schema', $schema, false, false), '$data') : J$._(), $isData, false, false), $schemaValue;
                            if (J$.C(121384, J$.R(1938081, '$isData', $isData, false, false))) {
                                out = J$.W(1938193, 'out', J$.B(226986, '+', J$.R(1938185, 'out', out, false, false), J$.B(226978, '+', J$.B(226970, '+', J$.B(226962, '+', J$.B(226954, '+', J$.T(1938089, ' var schema', 21, false), J$.R(1938097, '$lvl', $lvl, false, false)), J$.T(1938105, ' = ', 21, false)), J$.M(1938169, J$.G(1938121, J$.R(1938113, 'it', it, false, false), 'util'), 'getData', false)(J$.G(1938137, J$.R(1938129, '$schema', $schema, false, false), '$data'), J$.R(1938145, '$dataLvl', $dataLvl, false, false), J$.G(1938161, J$.R(1938153, 'it', it, false, false), 'dataPathArr'))), J$.T(1938177, '; ', 21, false))), out, false, false);
                                $schemaValue = J$.W(1938217, '$schemaValue', J$.B(226994, '+', J$.T(1938201, 'schema', 21, false), J$.R(1938209, '$lvl', $lvl, false, false)), $schemaValue, false, false);
                            } else {
                                $schemaValue = J$.W(1938233, '$schemaValue', J$.R(1938225, '$schema', $schema, false, false), $schemaValue, false, false);
                            }
                            if (J$.C(121392, J$.U(227002, '!', J$.R(1938241, '$isData', $isData, false, false)))) {
                                out = J$.W(1938297, 'out', J$.B(227042, '+', J$.R(1938289, 'out', out, false, false), J$.B(227034, '+', J$.B(227026, '+', J$.B(227018, '+', J$.B(227010, '+', J$.T(1938249, ' var schema', 21, false), J$.R(1938257, '$lvl', $lvl, false, false)), J$.T(1938265, ' = validate.schema', 21, false)), J$.R(1938273, '$schemaPath', $schemaPath, false, false)), J$.T(1938281, ';', 21, false))), out, false, false);
                            }
                            out = J$.W(1938385, 'out', J$.B(227114, '+', J$.R(1938377, 'out', out, false, false), J$.B(227106, '+', J$.B(227098, '+', J$.B(227090, '+', J$.B(227082, '+', J$.B(227074, '+', J$.B(227066, '+', J$.B(227058, '+', J$.B(227050, '+', J$.T(1938305, 'var ', 21, false), J$.R(1938313, '$valid', $valid, false, false)), J$.T(1938321, ' = equal(', 21, false)), J$.R(1938329, '$data', $data, false, false)), J$.T(1938337, ', schema', 21, false)), J$.R(1938345, '$lvl', $lvl, false, false)), J$.T(1938353, '); if (!', 21, false)), J$.R(1938361, '$valid', $valid, false, false)), J$.T(1938369, ') {   ', 21, false))), out, false, false);
                            var $$outStack = J$.W(1938409, '$$outStack', J$.C(121400, J$.R(1938393, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(1938401, [], 10, false), $$outStack, false, false);
                            J$.M(1938433, J$.R(1938417, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(1938425, 'out', out, false, false));
                            out = J$.W(1938449, 'out', J$.T(1938441, '', 21, false), out, false, false);
                            if (J$.C(121424, J$.B(227122, '!==', J$.G(1938465, J$.R(1938457, 'it', it, false, false), 'createErrors'), J$.T(1938473, false, 23, false)))) {
                                out = J$.W(1938593, 'out', J$.B(227194, '+', J$.R(1938585, 'out', out, false, false), J$.B(227186, '+', J$.B(227178, '+', J$.B(227170, '+', J$.B(227162, '+', J$.B(227154, '+', J$.B(227146, '+', J$.B(227138, '+', J$.B(227130, '+', J$.T(1938481, ' { keyword: \'', 21, false), J$.T(1938489, 'const', 21, false)), J$.T(1938497, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(1938513, J$.R(1938505, 'it', it, false, false), 'errorPath')), J$.T(1938521, ' , schemaPath: ', 21, false)), J$.M(1938553, J$.G(1938537, J$.R(1938529, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(1938545, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(1938561, ' , params: { allowedValue: schema', 21, false)), J$.R(1938569, '$lvl', $lvl, false, false)), J$.T(1938577, ' } ', 21, false))), out, false, false);
                                if (J$.C(121408, J$.B(227202, '!==', J$.G(1938617, J$.G(1938609, J$.R(1938601, 'it', it, false, false), 'opts'), 'messages'), J$.T(1938625, false, 23, false)))) {
                                    out = J$.W(1938649, 'out', J$.B(227210, '+', J$.R(1938641, 'out', out, false, false), J$.T(1938633, ' , message: \'should be equal to constant\' ', 21, false)), out, false, false);
                                }
                                if (J$.C(121416, J$.G(1938673, J$.G(1938665, J$.R(1938657, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(1938753, 'out', J$.B(227266, '+', J$.R(1938745, 'out', out, false, false), J$.B(227258, '+', J$.B(227250, '+', J$.B(227242, '+', J$.B(227234, '+', J$.B(227226, '+', J$.B(227218, '+', J$.T(1938681, ' , schema: validate.schema', 21, false), J$.R(1938689, '$schemaPath', $schemaPath, false, false)), J$.T(1938697, ' , parentSchema: validate.schema', 21, false)), J$.G(1938713, J$.R(1938705, 'it', it, false, false), 'schemaPath')), J$.T(1938721, ' , data: ', 21, false)), J$.R(1938729, '$data', $data, false, false)), J$.T(1938737, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(1938777, 'out', J$.B(227274, '+', J$.R(1938769, 'out', out, false, false), J$.T(1938761, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(1938801, 'out', J$.B(227282, '+', J$.R(1938793, 'out', out, false, false), J$.T(1938785, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(1938817, '__err', J$.R(1938809, 'out', out, false, false), __err, false, false);
                            out = J$.W(1938841, 'out', J$.M(1938833, J$.R(1938825, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(121448, J$.C(121432, J$.U(227290, '!', J$.G(1938857, J$.R(1938849, 'it', it, false, false), 'compositeRule'))) ? J$.R(1938865, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(121440, J$.G(1938881, J$.R(1938873, 'it', it, false, false), 'async'))) {
                                    out = J$.W(1938921, 'out', J$.B(227314, '+', J$.R(1938913, 'out', out, false, false), J$.B(227306, '+', J$.B(227298, '+', J$.T(1938889, ' throw new ValidationError([', 21, false), J$.R(1938897, '__err', __err, false, false)), J$.T(1938905, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(1938961, 'out', J$.B(227338, '+', J$.R(1938953, 'out', out, false, false), J$.B(227330, '+', J$.B(227322, '+', J$.T(1938929, ' validate.errors = [', 21, false), J$.R(1938937, '__err', __err, false, false)), J$.T(1938945, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(1939001, 'out', J$.B(227362, '+', J$.R(1938993, 'out', out, false, false), J$.B(227354, '+', J$.B(227346, '+', J$.T(1938969, ' var err = ', 21, false), J$.R(1938977, '__err', __err, false, false)), J$.T(1938985, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(1939025, 'out', J$.B(227370, '+', J$.R(1939017, 'out', out, false, false), J$.T(1939009, ' }', 21, false)), out, false, false);
                            if (J$.C(121456, J$.R(1939033, '$breakOnError', $breakOnError, false, false))) {
                                out = J$.W(1939057, 'out', J$.B(227378, '+', J$.R(1939049, 'out', out, false, false), J$.T(1939041, ' else { ', 21, false)), out, false, false);
                            }
                            return J$.Rt(1939073, J$.R(1939065, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(1939249, J$e);
                        } finally {
                            if (J$.Fr(1939257))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1939265, J$e);
        } finally {
            if (J$.Sr(1939273))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

