J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2046001, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/ajv/lib/keyword.js');
            function addKeyword(keyword, definition) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2045081, arguments.callee, this, arguments);
                            function _addRule(keyword, dataType, definition) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2044993, arguments.callee, this, arguments);
                                            arguments = J$.N(2045001, 'arguments', arguments, true, false, false);
                                            keyword = J$.N(2045009, 'keyword', keyword, true, false, false);
                                            dataType = J$.N(2045017, 'dataType', dataType, true, false, false);
                                            definition = J$.N(2045025, 'definition', definition, true, false, false);
                                            J$.N(2045033, 'ruleGroup', ruleGroup, false, false, false);
                                            J$.N(2045041, 'i', i, false, false, false);
                                            J$.N(2045049, 'rg', rg, false, false, false);
                                            J$.N(2045057, 'rule', rule, false, false, false);
                                            var ruleGroup;
                                            for (var i = J$.W(2044665, 'i', J$.T(2044657, 0, 22, false), i, false, false); J$.C(129312, J$.B(254074, '<', J$.R(2044673, 'i', i, false, false), J$.G(2044689, J$.R(2044681, 'RULES', RULES, false, false), 'length'))); J$.B(254098, '-', i = J$.W(2044705, 'i', J$.B(254090, '+', J$.U(254082, '+', J$.R(2044697, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                var rg = J$.W(2044737, 'rg', J$.G(2044729, J$.R(2044713, 'RULES', RULES, false, false), J$.R(2044721, 'i', i, false, false)), rg, false, false);
                                                if (J$.C(129304, J$.B(254106, '==', J$.G(2044753, J$.R(2044745, 'rg', rg, false, false), 'type'), J$.R(2044761, 'dataType', dataType, false, false)))) {
                                                    ruleGroup = J$.W(2044777, 'ruleGroup', J$.R(2044769, 'rg', rg, false, false), ruleGroup, false, false);
                                                    break;
                                                }
                                            }
                                            if (J$.C(129320, J$.U(254114, '!', J$.R(2044785, 'ruleGroup', ruleGroup, false, false)))) {
                                                ruleGroup = J$.W(2044817, 'ruleGroup', J$.T(2044809, {
                                                    type: J$.R(2044793, 'dataType', dataType, false, false),
                                                    rules: J$.T(2044801, [], 10, false)
                                                }, 11, false), ruleGroup, false, false);
                                                J$.M(2044841, J$.R(2044825, 'RULES', RULES, false, false), 'push', false)(J$.R(2044833, 'ruleGroup', ruleGroup, false, false));
                                            }
                                            var rule = J$.W(2044913, 'rule', J$.T(2044905, {
                                                keyword: J$.R(2044849, 'keyword', keyword, false, false),
                                                definition: J$.R(2044857, 'definition', definition, false, false),
                                                custom: J$.T(2044865, true, 23, false),
                                                code: J$.R(2044873, 'customRuleCode', customRuleCode, false, true),
                                                'implements': J$.G(2044897, J$.R(2044881, 'definition', definition, false, false), J$.T(2044889, 'implements', 21, false))
                                            }, 11, false), rule, false, false);
                                            J$.M(2044945, J$.G(2044929, J$.R(2044921, 'ruleGroup', ruleGroup, false, false), 'rules'), 'push', false)(J$.R(2044937, 'rule', rule, false, false));
                                            J$.P(2044985, J$.G(2044961, J$.R(2044953, 'RULES', RULES, false, false), 'custom'), J$.R(2044969, 'keyword', keyword, false, false), J$.R(2044977, 'rule', rule, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2046097, J$e);
                                        } finally {
                                            if (J$.Fr(2046105))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2045089, 'arguments', arguments, true, false, false);
                            keyword = J$.N(2045097, 'keyword', keyword, true, false, false);
                            definition = J$.N(2045105, 'definition', definition, true, false, false);
                            J$.N(2045113, 'RULES', RULES, false, false, false);
                            J$.N(2045121, 'dataType', dataType, false, false, false);
                            J$.N(2045129, 'i', i, false, false, false);
                            J$.N(2045137, 'metaSchema', metaSchema, false, false, false);
                            _addRule = J$.N(2045153, '_addRule', J$.T(2045145, _addRule, 12, false), true, false, false);
                            var RULES = J$.W(2044033, 'RULES', J$.G(2044025, J$.R(2044017, 'this', this, false, false), 'RULES'), RULES, false, false);
                            if (J$.C(129240, J$.G(2044065, J$.G(2044049, J$.R(2044041, 'RULES', RULES, false, false), 'keywords'), J$.R(2044057, 'keyword', keyword, false, false))))
                                throw J$.F(2044105, J$.I(typeof Error === 'undefined' ? Error = J$.R(2044073, 'Error', undefined, true, true) : Error = J$.R(2044073, 'Error', Error, true, true)), true)(J$.B(254010, '+', J$.B(254002, '+', J$.T(2044081, 'Keyword ', 21, false), J$.R(2044089, 'keyword', keyword, false, false)), J$.T(2044097, ' is already defined', 21, false)));
                            if (J$.C(129248, J$.U(254018, '!', J$.M(2044129, J$.R(2044113, 'IDENTIFIER', IDENTIFIER, false, true), 'test', false)(J$.R(2044121, 'keyword', keyword, false, false)))))
                                throw J$.F(2044169, J$.I(typeof Error === 'undefined' ? Error = J$.R(2044137, 'Error', undefined, true, true) : Error = J$.R(2044137, 'Error', Error, true, true)), true)(J$.B(254034, '+', J$.B(254026, '+', J$.T(2044145, 'Keyword ', 21, false), J$.R(2044153, 'keyword', keyword, false, false)), J$.T(2044161, ' is not a valid identifier', 21, false)));
                            if (J$.C(129296, J$.R(2044177, 'definition', definition, false, false))) {
                                J$.M(2044209, J$.R(2044185, 'this', this, false, false), 'validateKeyword', false)(J$.R(2044193, 'definition', definition, false, false), J$.T(2044201, true, 23, false));
                                var dataType = J$.W(2044233, 'dataType', J$.G(2044225, J$.R(2044217, 'definition', definition, false, false), 'type'), dataType, false, false);
                                if (J$.C(129264, J$.M(2044257, J$.I(typeof Array === 'undefined' ? Array = J$.R(2044241, 'Array', undefined, true, true) : Array = J$.R(2044241, 'Array', Array, true, true)), 'isArray', false)(J$.R(2044249, 'dataType', dataType, false, false)))) {
                                    for (var i = J$.W(2044273, 'i', J$.T(2044265, 0, 22, false), i, false, false); J$.C(129256, J$.B(254042, '<', J$.R(2044281, 'i', i, false, false), J$.G(2044297, J$.R(2044289, 'dataType', dataType, false, false), 'length'))); J$.B(254066, '-', i = J$.W(2044313, 'i', J$.B(254058, '+', J$.U(254050, '+', J$.R(2044305, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        J$.F(2044369, J$.R(2044321, '_addRule', _addRule, false, false), false)(J$.R(2044329, 'keyword', keyword, false, false), J$.G(2044353, J$.R(2044337, 'dataType', dataType, false, false), J$.R(2044345, 'i', i, false, false)), J$.R(2044361, 'definition', definition, false, false));
                                    }
                                } else {
                                    J$.F(2044409, J$.R(2044377, '_addRule', _addRule, false, false), false)(J$.R(2044385, 'keyword', keyword, false, false), J$.R(2044393, 'dataType', dataType, false, false), J$.R(2044401, 'definition', definition, false, false));
                                }
                                var metaSchema = J$.W(2044433, 'metaSchema', J$.G(2044425, J$.R(2044417, 'definition', definition, false, false), 'metaSchema'), metaSchema, false, false);
                                if (J$.C(129288, J$.R(2044441, 'metaSchema', metaSchema, false, false))) {
                                    if (J$.C(129280, J$.C(129272, J$.G(2044457, J$.R(2044449, 'definition', definition, false, false), '$data')) ? J$.G(2044481, J$.G(2044473, J$.R(2044465, 'this', this, false, false), '_opts'), '$data') : J$._())) {
                                        metaSchema = J$.W(2044529, 'metaSchema', J$.T(2044521, {
                                            anyOf: J$.T(2044513, [
                                                J$.R(2044489, 'metaSchema', metaSchema, false, false),
                                                J$.T(2044505, { '$ref': J$.T(2044497, 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#', 21, false) }, 11, false)
                                            ], 10, false)
                                        }, 11, false), metaSchema, false, false);
                                    }
                                    J$.P(2044577, J$.R(2044537, 'definition', definition, false, false), 'validateSchema', J$.M(2044569, J$.R(2044545, 'this', this, false, false), 'compile', false)(J$.R(2044553, 'metaSchema', metaSchema, false, false), J$.T(2044561, true, 23, false)));
                                }
                            }
                            J$.P(2044649, J$.G(2044593, J$.R(2044585, 'RULES', RULES, false, false), 'keywords'), J$.R(2044601, 'keyword', keyword, false, false), J$.P(2044641, J$.G(2044617, J$.R(2044609, 'RULES', RULES, false, false), 'all'), J$.R(2044625, 'keyword', keyword, false, false), J$.T(2044633, true, 23, false)));
                            return J$.Rt(2045073, J$.R(2045065, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(2046113, J$e);
                        } finally {
                            if (J$.Fr(2046121))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getKeyword(keyword) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2045289, arguments.callee, this, arguments);
                            arguments = J$.N(2045297, 'arguments', arguments, true, false, false);
                            keyword = J$.N(2045305, 'keyword', keyword, true, false, false);
                            J$.N(2045313, 'rule', rule, false, false, false);
                            var rule = J$.W(2045201, 'rule', J$.G(2045193, J$.G(2045177, J$.G(2045169, J$.R(2045161, 'this', this, false, false), 'RULES'), 'custom'), J$.R(2045185, 'keyword', keyword, false, false)), rule, false, false);
                            return J$.Rt(2045281, J$.C(129336, J$.R(2045209, 'rule', rule, false, false)) ? J$.G(2045225, J$.R(2045217, 'rule', rule, false, false), 'definition') : J$.C(129328, J$.G(2045265, J$.G(2045249, J$.G(2045241, J$.R(2045233, 'this', this, false, false), 'RULES'), 'keywords'), J$.R(2045257, 'keyword', keyword, false, false))) ? J$._() : J$.T(2045273, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(2046129, J$e);
                        } finally {
                            if (J$.Fr(2046137))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function removeKeyword(keyword) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2045657, arguments.callee, this, arguments);
                            arguments = J$.N(2045665, 'arguments', arguments, true, false, false);
                            keyword = J$.N(2045673, 'keyword', keyword, true, false, false);
                            J$.N(2045681, 'RULES', RULES, false, false, false);
                            J$.N(2045689, 'i', i, false, false, false);
                            J$.N(2045697, 'rules', rules, false, false, false);
                            J$.N(2045705, 'j', j, false, false, false);
                            var RULES = J$.W(2045337, 'RULES', J$.G(2045329, J$.R(2045321, 'this', this, false, false), 'RULES'), RULES, false, false);
                            J$.B(254122, 'delete', J$.G(2045353, J$.R(2045345, 'RULES', RULES, false, false), 'keywords'), J$.R(2045361, 'keyword', keyword, false, false));
                            J$.B(254130, 'delete', J$.G(2045377, J$.R(2045369, 'RULES', RULES, false, false), 'all'), J$.R(2045385, 'keyword', keyword, false, false));
                            J$.B(254138, 'delete', J$.G(2045401, J$.R(2045393, 'RULES', RULES, false, false), 'custom'), J$.R(2045409, 'keyword', keyword, false, false));
                            for (var i = J$.W(2045425, 'i', J$.T(2045417, 0, 22, false), i, false, false); J$.C(129360, J$.B(254146, '<', J$.R(2045433, 'i', i, false, false), J$.G(2045449, J$.R(2045441, 'RULES', RULES, false, false), 'length'))); J$.B(254170, '-', i = J$.W(2045465, 'i', J$.B(254162, '+', J$.U(254154, '+', J$.R(2045457, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var rules = J$.W(2045505, 'rules', J$.G(2045497, J$.G(2045489, J$.R(2045473, 'RULES', RULES, false, false), J$.R(2045481, 'i', i, false, false)), 'rules'), rules, false, false);
                                for (var j = J$.W(2045521, 'j', J$.T(2045513, 0, 22, false), j, false, false); J$.C(129352, J$.B(254178, '<', J$.R(2045529, 'j', j, false, false), J$.G(2045545, J$.R(2045537, 'rules', rules, false, false), 'length'))); J$.B(254202, '-', j = J$.W(2045561, 'j', J$.B(254194, '+', J$.U(254186, '+', J$.R(2045553, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    if (J$.C(129344, J$.B(254210, '==', J$.G(2045593, J$.G(2045585, J$.R(2045569, 'rules', rules, false, false), J$.R(2045577, 'j', j, false, false)), 'keyword'), J$.R(2045601, 'keyword', keyword, false, false)))) {
                                        J$.M(2045633, J$.R(2045609, 'rules', rules, false, false), 'splice', false)(J$.R(2045617, 'j', j, false, false), J$.T(2045625, 1, 22, false));
                                        break;
                                    }
                                }
                            }
                            return J$.Rt(2045649, J$.R(2045641, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(2046145, J$e);
                        } finally {
                            if (J$.Fr(2046153))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateKeyword(definition, throwError) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2045961, arguments.callee, this, arguments);
                            arguments = J$.N(2045969, 'arguments', arguments, true, false, false);
                            definition = J$.N(2045977, 'definition', definition, true, false, false);
                            throwError = J$.N(2045985, 'throwError', throwError, true, false, false);
                            J$.N(2045993, 'v', v, false, false, false);
                            J$.P(2045729, J$.R(2045713, 'validateKeyword', validateKeyword, false, true), 'errors', J$.T(2045721, null, 25, false));
                            var v = J$.W(2045801, 'v', J$.P(2045793, J$.R(2045737, 'this', this, false, false), '_validateKeyword', J$.C(129368, J$.G(2045753, J$.R(2045745, 'this', this, false, false), '_validateKeyword')) ? J$._() : J$.M(2045785, J$.R(2045761, 'this', this, false, false), 'compile', false)(J$.R(2045769, 'definitionSchema', definitionSchema, false, true), J$.T(2045777, true, 23, false))), v, false, false);
                            if (J$.C(129376, J$.F(2045825, J$.R(2045809, 'v', v, false, false), false)(J$.R(2045817, 'definition', definition, false, false))))
                                return J$.Rt(2045841, J$.T(2045833, true, 23, false));
                            J$.P(2045873, J$.R(2045849, 'validateKeyword', validateKeyword, false, true), 'errors', J$.G(2045865, J$.R(2045857, 'v', v, false, false), 'errors'));
                            if (J$.C(129384, J$.R(2045881, 'throwError', throwError, false, false)))
                                throw J$.F(2045937, J$.I(typeof Error === 'undefined' ? Error = J$.R(2045889, 'Error', undefined, true, true) : Error = J$.R(2045889, 'Error', Error, true, true)), true)(J$.B(254218, '+', J$.T(2045897, 'custom keyword definition is invalid: ', 21, false), J$.M(2045929, J$.R(2045905, 'this', this, false, false), 'errorsText', false)(J$.G(2045921, J$.R(2045913, 'v', v, false, false), 'errors'))));
                            else
                                return J$.Rt(2045953, J$.T(2045945, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(2046161, J$e);
                        } finally {
                            if (J$.Fr(2046169))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2046009, 'IDENTIFIER', IDENTIFIER, false, false, false);
            J$.N(2046017, 'customRuleCode', customRuleCode, false, false, false);
            J$.N(2046025, 'definitionSchema', definitionSchema, false, false, false);
            addKeyword = J$.N(2046041, 'addKeyword', J$.T(2046033, addKeyword, 12, false), true, false, false);
            getKeyword = J$.N(2046057, 'getKeyword', J$.T(2046049, getKeyword, 12, false), true, false, false);
            removeKeyword = J$.N(2046073, 'removeKeyword', J$.T(2046065, removeKeyword, 12, false), true, false, false);
            validateKeyword = J$.N(2046089, 'validateKeyword', J$.T(2046081, validateKeyword, 12, false), true, false, false);
            J$.T(2043681, 'use strict', 21, false);
            J$.F(2043705, J$.I(typeof require === 'undefined' ? require = J$.R(2043689, 'require', undefined, true, true) : require = J$.R(2043689, 'require', require, true, true)), false)(J$.T(2043697, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2043729, J$.I(typeof require === 'undefined' ? require = J$.R(2043713, 'require', undefined, true, true) : require = J$.R(2043713, 'require', require, true, true)), false)(J$.T(2043721, 'core-js/modules/es.array.splice', 21, false));
            J$.F(2043753, J$.I(typeof require === 'undefined' ? require = J$.R(2043737, 'require', undefined, true, true) : require = J$.R(2043737, 'require', require, true, true)), false)(J$.T(2043745, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2043777, J$.I(typeof require === 'undefined' ? require = J$.R(2043761, 'require', undefined, true, true) : require = J$.R(2043761, 'require', require, true, true)), false)(J$.T(2043769, 'core-js/modules/es.array.splice', 21, false));
            J$.F(2043801, J$.I(typeof require === 'undefined' ? require = J$.R(2043785, 'require', undefined, true, true) : require = J$.R(2043785, 'require', require, true, true)), false)(J$.T(2043793, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2043825, J$.I(typeof require === 'undefined' ? require = J$.R(2043809, 'require', undefined, true, true) : require = J$.R(2043809, 'require', require, true, true)), false)(J$.T(2043817, 'core-js/modules/es.array.splice', 21, false));
            J$.F(2043849, J$.I(typeof require === 'undefined' ? require = J$.R(2043833, 'require', undefined, true, true) : require = J$.R(2043833, 'require', require, true, true)), false)(J$.T(2043841, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2043873, J$.I(typeof require === 'undefined' ? require = J$.R(2043857, 'require', undefined, true, true) : require = J$.R(2043857, 'require', require, true, true)), false)(J$.T(2043865, 'core-js/modules/es.array.splice', 21, false));
            var IDENTIFIER = J$.W(2043889, 'IDENTIFIER', J$.T(2043881, /^[a-z_$][a-z0-9_$-]*$/i, 14, false), IDENTIFIER, false, true);
            var customRuleCode = J$.W(2043921, 'customRuleCode', J$.F(2043913, J$.I(typeof require === 'undefined' ? require = J$.R(2043897, 'require', undefined, true, true) : require = J$.R(2043897, 'require', require, true, true)), false)(J$.T(2043905, './dotjs/custom', 21, false)), customRuleCode, false, true);
            var definitionSchema = J$.W(2043953, 'definitionSchema', J$.F(2043945, J$.I(typeof require === 'undefined' ? require = J$.R(2043929, 'require', undefined, true, true) : require = J$.R(2043929, 'require', require, true, true)), false)(J$.T(2043937, './definition_schema', 21, false)), definitionSchema, false, true);
            J$.P(2044009, J$.I(typeof module === 'undefined' ? module = J$.R(2043961, 'module', undefined, true, true) : module = J$.R(2043961, 'module', module, true, true)), 'exports', J$.T(2044001, {
                add: J$.R(2043969, 'addKeyword', addKeyword, false, true),
                get: J$.R(2043977, 'getKeyword', getKeyword, false, true),
                remove: J$.R(2043985, 'removeKeyword', removeKeyword, false, true),
                validate: J$.R(2043993, 'validateKeyword', validateKeyword, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2046177, J$e);
        } finally {
            if (J$.Sr(2046185))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

