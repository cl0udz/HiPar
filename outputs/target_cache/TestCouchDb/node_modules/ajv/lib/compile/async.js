J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(1878841, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/ajv/lib/compile/async.js');
            function compileAsync(schema, meta, callback) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(1878753, arguments.callee, this, arguments);
                            function loadMetaSchemaOf(sch) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(1877833, arguments.callee, this, arguments);
                                            arguments = J$.N(1877841, 'arguments', arguments, true, false, false);
                                            sch = J$.N(1877849, 'sch', sch, true, false, false);
                                            J$.N(1877857, '$schema', $schema, false, false, false);
                                            var $schema = J$.W(1877721, '$schema', J$.G(1877713, J$.R(1877705, 'sch', sch, false, false), '$schema'), $schema, false, false);
                                            return J$.Rt(1877825, J$.C(117440, J$.C(117432, J$.R(1877729, '$schema', $schema, false, false)) ? J$.U(218090, '!', J$.M(1877753, J$.R(1877737, 'self', self, false, false), 'getSchema', false)(J$.R(1877745, '$schema', $schema, false, false))) : J$._()) ? J$.M(1877801, J$.R(1877761, 'compileAsync', compileAsync, false, true), 'call', false)(J$.R(1877769, 'self', self, false, false), J$.T(1877785, { $ref: J$.R(1877777, '$schema', $schema, false, false) }, 11, false), J$.T(1877793, true, 23, false)) : J$.M(1877817, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(1877809, 'Promise', undefined, true, true) : Promise = J$.R(1877809, 'Promise', Promise, true, true)), 'resolve', false)());
                                        } catch (J$e) {
                                            J$.Ex(1878905, J$e);
                                        } finally {
                                            if (J$.Fr(1878913))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function _compileAsync(schemaObj) {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(1878713, arguments.callee, this, arguments);
                                            function loadMissingSchema(e) {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1878641, arguments.callee, this, arguments);
                                                            function removePromise() {
                                                                jalangiLabel6:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1878529, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1878537, 'arguments', arguments, true, false, false);
                                                                            J$.B(218162, 'delete', J$.G(1878513, J$.R(1878505, 'self', self, false, false), '_loadingSchemas'), J$.R(1878521, 'ref', ref, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(1878969, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1878977))
                                                                                continue jalangiLabel6;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }
                                                            function added(ref) {
                                                                jalangiLabel7:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1878617, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1878625, 'arguments', arguments, true, false, false);
                                                                            ref = J$.N(1878633, 'ref', ref, true, false, false);
                                                                            return J$.Rt(1878609, J$.C(117488, J$.G(1878569, J$.G(1878553, J$.R(1878545, 'self', self, false, false), '_refs'), J$.R(1878561, 'ref', ref, false, false))) ? J$._() : J$.G(1878601, J$.G(1878585, J$.R(1878577, 'self', self, false, false), '_schemas'), J$.R(1878593, 'ref', ref, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(1878985, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1878993))
                                                                                continue jalangiLabel7;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }
                                                            arguments = J$.N(1878649, 'arguments', arguments, true, false, false);
                                                            e = J$.N(1878657, 'e', e, true, false, false);
                                                            J$.N(1878665, 'ref', ref, false, false, false);
                                                            J$.N(1878673, 'schemaPromise', schemaPromise, false, false, false);
                                                            removePromise = J$.N(1878689, 'removePromise', J$.T(1878681, removePromise, 12, false), true, false, false);
                                                            added = J$.N(1878705, 'added', J$.T(1878697, added, 12, false), true, false, false);
                                                            var ref = J$.W(1877977, 'ref', J$.G(1877969, J$.R(1877961, 'e', e, false, false), 'missingSchema'), ref, false, false);
                                                            if (J$.C(117456, J$.F(1878001, J$.R(1877985, 'added', added, false, false), false)(J$.R(1877993, 'ref', ref, false, false))))
                                                                throw J$.F(1878065, J$.I(typeof Error === 'undefined' ? Error = J$.R(1878009, 'Error', undefined, true, true) : Error = J$.R(1878009, 'Error', Error, true, true)), true)(J$.B(218130, '+', J$.B(218122, '+', J$.B(218114, '+', J$.B(218106, '+', J$.T(1878017, 'Schema ', 21, false), J$.R(1878025, 'ref', ref, false, false)), J$.T(1878033, ' is loaded but ', 21, false)), J$.G(1878049, J$.R(1878041, 'e', e, false, false), 'missingRef')), J$.T(1878057, ' cannot be resolved', 21, false)));
                                                            var schemaPromise = J$.W(1878105, 'schemaPromise', J$.G(1878097, J$.G(1878081, J$.R(1878073, 'self', self, false, false), '_loadingSchemas'), J$.R(1878089, 'ref', ref, false, false)), schemaPromise, false, false);
                                                            if (J$.C(117464, J$.U(218138, '!', J$.R(1878113, 'schemaPromise', schemaPromise, false, false)))) {
                                                                schemaPromise = J$.W(1878185, 'schemaPromise', J$.P(1878177, J$.G(1878129, J$.R(1878121, 'self', self, false, false), '_loadingSchemas'), J$.R(1878137, 'ref', ref, false, false), J$.M(1878169, J$.G(1878153, J$.R(1878145, 'self', self, false, false), '_opts'), 'loadSchema', false)(J$.R(1878161, 'ref', ref, false, false))), schemaPromise, false, false);
                                                                J$.M(1878217, J$.R(1878193, 'schemaPromise', schemaPromise, false, false), 'then', false)(J$.R(1878201, 'removePromise', removePromise, false, false), J$.R(1878209, 'removePromise', removePromise, false, false));
                                                            }
                                                            return J$.Rt(1878497, J$.M(1878489, J$.M(1878425, J$.R(1878225, 'schemaPromise', schemaPromise, false, false), 'then', false)(J$.T(1878417, function (sch) {
                                                                jalangiLabel4:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1878393, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1878401, 'arguments', arguments, true, false, false);
                                                                            sch = J$.N(1878409, 'sch', sch, true, false, false);
                                                                            if (J$.C(117480, J$.U(218146, '!', J$.F(1878249, J$.R(1878233, 'added', added, false, false), false)(J$.R(1878241, 'ref', ref, false, false))))) {
                                                                                return J$.Rt(1878385, J$.M(1878377, J$.F(1878273, J$.R(1878257, 'loadMetaSchemaOf', loadMetaSchemaOf, false, false), false)(J$.R(1878265, 'sch', sch, false, false)), 'then', false)(J$.T(1878369, function () {
                                                                                    jalangiLabel3:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(1878353, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(1878361, 'arguments', arguments, true, false, false);
                                                                                                if (J$.C(117472, J$.U(218154, '!', J$.F(1878297, J$.R(1878281, 'added', added, false, false), false)(J$.R(1878289, 'ref', ref, false, false)))))
                                                                                                    J$.M(1878345, J$.R(1878305, 'self', self, false, false), 'addSchema', false)(J$.R(1878313, 'sch', sch, false, false), J$.R(1878321, 'ref', ref, false, false), J$.T(1878329, undefined, 24, false), J$.R(1878337, 'meta', meta, false, false));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(1878921, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(1878929))
                                                                                                    continue jalangiLabel3;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false)));
                                                                            }
                                                                        } catch (J$e) {
                                                                            J$.Ex(1878937, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1878945))
                                                                                continue jalangiLabel4;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'then', false)(J$.T(1878481, function () {
                                                                jalangiLabel5:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1878465, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1878473, 'arguments', arguments, true, false, false);
                                                                            return J$.Rt(1878457, J$.F(1878449, J$.R(1878433, '_compileAsync', _compileAsync, false, false), false)(J$.R(1878441, 'schemaObj', schemaObj, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(1878953, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1878961))
                                                                                continue jalangiLabel5;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(1879001, J$e);
                                                        } finally {
                                                            if (J$.Fr(1879009))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(1878721, 'arguments', arguments, true, false, false);
                                            schemaObj = J$.N(1878729, 'schemaObj', schemaObj, true, false, false);
                                            loadMissingSchema = J$.N(1878745, 'loadMissingSchema', J$.T(1878737, loadMissingSchema, 12, false), true, false, false);
                                            try {
                                                return J$.Rt(1877889, J$.M(1877881, J$.R(1877865, 'self', self, false, false), '_compile', false)(J$.R(1877873, 'schemaObj', schemaObj, false, false)));
                                            } catch (e) {
                                                J$.N(1877953, 'e', e, false, false, true);
                                                if (J$.C(117448, J$.B(218098, 'instanceof', J$.R(1877897, 'e', e, false, false), J$.R(1877905, 'MissingRefError', MissingRefError, false, true))))
                                                    return J$.Rt(1877937, J$.F(1877929, J$.R(1877913, 'loadMissingSchema', loadMissingSchema, false, false), false)(J$.R(1877921, 'e', e, false, false)));
                                                throw J$.R(1877945, 'e', e, false, false);
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1879017, J$e);
                                        } finally {
                                            if (J$.Fr(1879025))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1878761, 'arguments', arguments, true, false, false);
                            schema = J$.N(1878769, 'schema', schema, true, false, false);
                            meta = J$.N(1878777, 'meta', meta, true, false, false);
                            callback = J$.N(1878785, 'callback', callback, true, false, false);
                            J$.N(1878793, 'self', self, false, false, false);
                            J$.N(1878801, 'p', p, false, false, false);
                            loadMetaSchemaOf = J$.N(1878817, 'loadMetaSchemaOf', J$.T(1878809, loadMetaSchemaOf, 12, false), true, false, false);
                            _compileAsync = J$.N(1878833, '_compileAsync', J$.T(1878825, _compileAsync, 12, false), true, false, false);
                            var self = J$.W(1877313, 'self', J$.R(1877305, 'this', this, false, false), self, false, false);
                            if (J$.C(117400, J$.B(218066, '!=', J$.U(218058, 'typeof', J$.G(1877337, J$.G(1877329, J$.R(1877321, 'this', this, false, false), '_opts'), 'loadSchema')), J$.T(1877345, 'function', 21, false))))
                                throw J$.F(1877369, J$.I(typeof Error === 'undefined' ? Error = J$.R(1877353, 'Error', undefined, true, true) : Error = J$.R(1877353, 'Error', Error, true, true)), true)(J$.T(1877361, 'options.loadSchema should be a function', 21, false));
                            if (J$.C(117408, J$.B(218082, '==', J$.U(218074, 'typeof', J$.R(1877377, 'meta', meta, false, false)), J$.T(1877385, 'function', 21, false)))) {
                                callback = J$.W(1877401, 'callback', J$.R(1877393, 'meta', meta, false, false), callback, false, false);
                                meta = J$.W(1877417, 'meta', J$.T(1877409, undefined, 24, false), meta, false, false);
                            }
                            var p = J$.W(1877585, 'p', J$.M(1877577, J$.F(1877441, J$.R(1877425, 'loadMetaSchemaOf', loadMetaSchemaOf, false, false), false)(J$.R(1877433, 'schema', schema, false, false)), 'then', false)(J$.T(1877569, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(1877545, arguments.callee, this, arguments);
                                            arguments = J$.N(1877553, 'arguments', arguments, true, false, false);
                                            J$.N(1877561, 'schemaObj', schemaObj, false, false, false);
                                            var schemaObj = J$.W(1877489, 'schemaObj', J$.M(1877481, J$.R(1877449, 'self', self, false, false), '_addSchema', false)(J$.R(1877457, 'schema', schema, false, false), J$.T(1877465, undefined, 24, false), J$.R(1877473, 'meta', meta, false, false)), schemaObj, false, false);
                                            return J$.Rt(1877537, J$.C(117416, J$.G(1877505, J$.R(1877497, 'schemaObj', schemaObj, false, false), 'validate')) ? J$._() : J$.F(1877529, J$.R(1877513, '_compileAsync', _compileAsync, false, false), false)(J$.R(1877521, 'schemaObj', schemaObj, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(1878873, J$e);
                                        } finally {
                                            if (J$.Fr(1878881))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), p, false, false);
                            if (J$.C(117424, J$.R(1877593, 'callback', callback, false, false))) {
                                J$.M(1877681, J$.R(1877601, 'p', p, false, false), 'then', false)(J$.T(1877665, function (v) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1877641, arguments.callee, this, arguments);
                                                arguments = J$.N(1877649, 'arguments', arguments, true, false, false);
                                                v = J$.N(1877657, 'v', v, true, false, false);
                                                J$.F(1877633, J$.R(1877609, 'callback', callback, false, false), false)(J$.T(1877617, null, 25, false), J$.R(1877625, 'v', v, false, false));
                                            } catch (J$e) {
                                                J$.Ex(1878889, J$e);
                                            } finally {
                                                if (J$.Fr(1878897))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.R(1877673, 'callback', callback, false, false));
                            }
                            return J$.Rt(1877697, J$.R(1877689, 'p', p, false, false));
                        } catch (J$e) {
                            J$.Ex(1879033, J$e);
                        } finally {
                            if (J$.Fr(1879041))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1878849, 'MissingRefError', MissingRefError, false, false, false);
            compileAsync = J$.N(1878865, 'compileAsync', J$.T(1878857, compileAsync, 12, false), true, false, false);
            J$.T(1877041, 'use strict', 21, false);
            J$.F(1877065, J$.I(typeof require === 'undefined' ? require = J$.R(1877049, 'require', undefined, true, true) : require = J$.R(1877049, 'require', require, true, true)), false)(J$.T(1877057, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1877089, J$.I(typeof require === 'undefined' ? require = J$.R(1877073, 'require', undefined, true, true) : require = J$.R(1877073, 'require', require, true, true)), false)(J$.T(1877081, 'core-js/modules/es.promise', 21, false));
            J$.F(1877113, J$.I(typeof require === 'undefined' ? require = J$.R(1877097, 'require', undefined, true, true) : require = J$.R(1877097, 'require', require, true, true)), false)(J$.T(1877105, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1877137, J$.I(typeof require === 'undefined' ? require = J$.R(1877121, 'require', undefined, true, true) : require = J$.R(1877121, 'require', require, true, true)), false)(J$.T(1877129, 'core-js/modules/es.promise', 21, false));
            J$.F(1877161, J$.I(typeof require === 'undefined' ? require = J$.R(1877145, 'require', undefined, true, true) : require = J$.R(1877145, 'require', require, true, true)), false)(J$.T(1877153, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1877185, J$.I(typeof require === 'undefined' ? require = J$.R(1877169, 'require', undefined, true, true) : require = J$.R(1877169, 'require', require, true, true)), false)(J$.T(1877177, 'core-js/modules/es.promise', 21, false));
            J$.F(1877209, J$.I(typeof require === 'undefined' ? require = J$.R(1877193, 'require', undefined, true, true) : require = J$.R(1877193, 'require', require, true, true)), false)(J$.T(1877201, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1877233, J$.I(typeof require === 'undefined' ? require = J$.R(1877217, 'require', undefined, true, true) : require = J$.R(1877217, 'require', require, true, true)), false)(J$.T(1877225, 'core-js/modules/es.promise', 21, false));
            var MissingRefError = J$.W(1877273, 'MissingRefError', J$.G(1877265, J$.F(1877257, J$.I(typeof require === 'undefined' ? require = J$.R(1877241, 'require', undefined, true, true) : require = J$.R(1877241, 'require', require, true, true)), false)(J$.T(1877249, './error_classes', 21, false)), 'MissingRef'), MissingRefError, false, true);
            J$.P(1877297, J$.I(typeof module === 'undefined' ? module = J$.R(1877281, 'module', undefined, true, true) : module = J$.R(1877281, 'module', module, true, true)), 'exports', J$.R(1877289, 'compileAsync', compileAsync, false, true));
        } catch (J$e) {
            J$.Ex(1879049, J$e);
        } finally {
            if (J$.Sr(1879057))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

