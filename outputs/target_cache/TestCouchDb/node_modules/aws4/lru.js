J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(2109113, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/aws4/lru.js');
            function LruCache(size) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2107345, arguments.callee, this, arguments);
                            arguments = J$.N(2107353, 'arguments', arguments, true, false, false);
                            size = J$.N(2107361, 'size', size, true, false, false);
                            J$.P(2107265, J$.R(2107241, 'this', this, false, false), 'capacity', J$.B(258922, '|', J$.R(2107249, 'size', size, false, false), J$.T(2107257, 0, 22, false)));
                            J$.P(2107305, J$.R(2107273, 'this', this, false, false), 'map', J$.M(2107297, J$.I(typeof Object === 'undefined' ? Object = J$.R(2107281, 'Object', undefined, true, true) : Object = J$.R(2107281, 'Object', Object, true, true)), 'create', false)(J$.T(2107289, null, 25, false)));
                            J$.P(2107337, J$.R(2107313, 'this', this, false, false), 'list', J$.F(2107329, J$.R(2107321, 'DoublyLinkedList', DoublyLinkedList, false, true), true)());
                        } catch (J$e) {
                            J$.Ex(2109185, J$e);
                        } finally {
                            if (J$.Fr(2109193))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DoublyLinkedList() {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2108193, arguments.callee, this, arguments);
                            arguments = J$.N(2108201, 'arguments', arguments, true, false, false);
                            J$.P(2108161, J$.R(2108145, 'this', this, false, false), 'firstNode', J$.T(2108153, null, 25, false));
                            J$.P(2108185, J$.R(2108169, 'this', this, false, false), 'lastNode', J$.T(2108177, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(2109265, J$e);
                        } finally {
                            if (J$.Fr(2109273))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DoublyLinkedNode(key, val) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(2109081, arguments.callee, this, arguments);
                            arguments = J$.N(2109089, 'arguments', arguments, true, false, false);
                            key = J$.N(2109097, 'key', key, true, false, false);
                            val = J$.N(2109105, 'val', val, true, false, false);
                            J$.P(2109001, J$.R(2108985, 'this', this, false, false), 'key', J$.R(2108993, 'key', key, false, false));
                            J$.P(2109025, J$.R(2109009, 'this', this, false, false), 'val', J$.R(2109017, 'val', val, false, false));
                            J$.P(2109049, J$.R(2109033, 'this', this, false, false), 'prev', J$.T(2109041, null, 25, false));
                            J$.P(2109073, J$.R(2109057, 'this', this, false, false), 'next', J$.T(2109065, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(2109329, J$e);
                        } finally {
                            if (J$.Fr(2109337))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            LruCache = J$.N(2109129, 'LruCache', J$.T(2109121, LruCache, 12, false), true, false, false);
            DoublyLinkedList = J$.N(2109145, 'DoublyLinkedList', J$.T(2109137, DoublyLinkedList, 12, false), true, false, false);
            DoublyLinkedNode = J$.N(2109161, 'DoublyLinkedNode', J$.T(2109153, DoublyLinkedNode, 12, false), true, false, false);
            J$.T(2106961, 'use strict', 21, false);
            J$.F(2106985, J$.I(typeof require === 'undefined' ? require = J$.R(2106969, 'require', undefined, true, true) : require = J$.R(2106969, 'require', require, true, true)), false)(J$.T(2106977, 'core-js/modules/es.array.map', 21, false));
            J$.F(2107009, J$.I(typeof require === 'undefined' ? require = J$.R(2106993, 'require', undefined, true, true) : require = J$.R(2106993, 'require', require, true, true)), false)(J$.T(2107001, 'core-js/modules/es.object.create', 21, false));
            J$.F(2107033, J$.I(typeof require === 'undefined' ? require = J$.R(2107017, 'require', undefined, true, true) : require = J$.R(2107017, 'require', require, true, true)), false)(J$.T(2107025, 'core-js/modules/es.array.map', 21, false));
            J$.F(2107057, J$.I(typeof require === 'undefined' ? require = J$.R(2107041, 'require', undefined, true, true) : require = J$.R(2107041, 'require', require, true, true)), false)(J$.T(2107049, 'core-js/modules/es.object.create', 21, false));
            J$.F(2107081, J$.I(typeof require === 'undefined' ? require = J$.R(2107065, 'require', undefined, true, true) : require = J$.R(2107065, 'require', require, true, true)), false)(J$.T(2107073, 'core-js/modules/es.array.map', 21, false));
            J$.F(2107105, J$.I(typeof require === 'undefined' ? require = J$.R(2107089, 'require', undefined, true, true) : require = J$.R(2107089, 'require', require, true, true)), false)(J$.T(2107097, 'core-js/modules/es.object.create', 21, false));
            J$.F(2107129, J$.I(typeof require === 'undefined' ? require = J$.R(2107113, 'require', undefined, true, true) : require = J$.R(2107113, 'require', require, true, true)), false)(J$.T(2107121, 'core-js/modules/es.array.map', 21, false));
            J$.F(2107153, J$.I(typeof require === 'undefined' ? require = J$.R(2107137, 'require', undefined, true, true) : require = J$.R(2107137, 'require', require, true, true)), false)(J$.T(2107145, 'core-js/modules/es.object.create', 21, false));
            J$.P(2107233, J$.I(typeof module === 'undefined' ? module = J$.R(2107161, 'module', undefined, true, true) : module = J$.R(2107161, 'module', module, true, true)), 'exports', J$.T(2107225, function (size) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2107201, arguments.callee, this, arguments);
                            arguments = J$.N(2107209, 'arguments', arguments, true, false, false);
                            size = J$.N(2107217, 'size', size, true, false, false);
                            return J$.Rt(2107193, J$.F(2107185, J$.R(2107169, 'LruCache', LruCache, false, true), true)(J$.R(2107177, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(2109169, J$e);
                        } finally {
                            if (J$.Fr(2109177))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2107545, J$.G(2107377, J$.R(2107369, 'LruCache', LruCache, false, true), 'prototype'), 'get', J$.T(2107537, function (key) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2107505, arguments.callee, this, arguments);
                            arguments = J$.N(2107513, 'arguments', arguments, true, false, false);
                            key = J$.N(2107521, 'key', key, true, false, false);
                            J$.N(2107529, 'node', node, false, false, false);
                            var node = J$.W(2107417, 'node', J$.G(2107409, J$.G(2107393, J$.R(2107385, 'this', this, false, false), 'map'), J$.R(2107401, 'key', key, false, false)), node, false, false);
                            if (J$.C(132264, J$.B(258930, '==', J$.R(2107425, 'node', node, false, false), J$.T(2107433, null, 25, false))))
                                return J$.Rt(2107449, J$.T(2107441, undefined, 24, false));
                            J$.M(2107473, J$.R(2107457, 'this', this, false, false), 'used', false)(J$.R(2107465, 'node', node, false, false));
                            return J$.Rt(2107497, J$.G(2107489, J$.R(2107481, 'node', node, false, false), 'val'));
                        } catch (J$e) {
                            J$.Ex(2109201, J$e);
                        } finally {
                            if (J$.Fr(2109209))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2107897, J$.G(2107561, J$.R(2107553, 'LruCache', LruCache, false, true), 'prototype'), 'set', J$.T(2107889, function (key, val) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2107849, arguments.callee, this, arguments);
                            arguments = J$.N(2107857, 'arguments', arguments, true, false, false);
                            key = J$.N(2107865, 'key', key, true, false, false);
                            val = J$.N(2107873, 'val', val, true, false, false);
                            J$.N(2107881, 'node', node, false, false, false);
                            var node = J$.W(2107601, 'node', J$.G(2107593, J$.G(2107577, J$.R(2107569, 'this', this, false, false), 'map'), J$.R(2107585, 'key', key, false, false)), node, false, false);
                            if (J$.C(132288, J$.B(258938, '!=', J$.R(2107609, 'node', node, false, false), J$.T(2107617, null, 25, false)))) {
                                J$.P(2107641, J$.R(2107625, 'node', node, false, false), 'val', J$.R(2107633, 'val', val, false, false));
                            } else {
                                if (J$.C(132272, J$.U(258946, '!', J$.G(2107657, J$.R(2107649, 'this', this, false, false), 'capacity'))))
                                    J$.M(2107673, J$.R(2107665, 'this', this, false, false), 'prune', false)();
                                if (J$.C(132280, J$.U(258954, '!', J$.G(2107689, J$.R(2107681, 'this', this, false, false), 'capacity'))))
                                    return J$.Rt(2107705, J$.T(2107697, false, 23, false));
                                node = J$.W(2107745, 'node', J$.F(2107737, J$.R(2107713, 'DoublyLinkedNode', DoublyLinkedNode, false, true), true)(J$.R(2107721, 'key', key, false, false), J$.R(2107729, 'val', val, false, false)), node, false, false);
                                J$.P(2107785, J$.G(2107761, J$.R(2107753, 'this', this, false, false), 'map'), J$.R(2107769, 'key', key, false, false), J$.R(2107777, 'node', node, false, false));
                                J$.B(258962, '+', J$.A(2107801, J$.R(2107793, 'this', this, false, false), 'capacity', '-')(1), 1);
                            }
                            J$.M(2107825, J$.R(2107809, 'this', this, false, false), 'used', false)(J$.R(2107817, 'node', node, false, false));
                            return J$.Rt(2107841, J$.T(2107833, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(2109217, J$e);
                        } finally {
                            if (J$.Fr(2109225))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2107985, J$.G(2107913, J$.R(2107905, 'LruCache', LruCache, false, true), 'prototype'), 'used', J$.T(2107977, function (node) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2107953, arguments.callee, this, arguments);
                            arguments = J$.N(2107961, 'arguments', arguments, true, false, false);
                            node = J$.N(2107969, 'node', node, true, false, false);
                            J$.M(2107945, J$.G(2107929, J$.R(2107921, 'this', this, false, false), 'list'), 'moveToFront', false)(J$.R(2107937, 'node', node, false, false));
                        } catch (J$e) {
                            J$.Ex(2109233, J$e);
                        } finally {
                            if (J$.Fr(2109241))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2108137, J$.G(2108001, J$.R(2107993, 'LruCache', LruCache, false, true), 'prototype'), 'prune', J$.T(2108129, function () {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2108105, arguments.callee, this, arguments);
                            arguments = J$.N(2108113, 'arguments', arguments, true, false, false);
                            J$.N(2108121, 'node', node, false, false, false);
                            var node = J$.W(2108033, 'node', J$.M(2108025, J$.G(2108017, J$.R(2108009, 'this', this, false, false), 'list'), 'pop', false)(), node, false, false);
                            if (J$.C(132296, J$.B(258970, '!=', J$.R(2108041, 'node', node, false, false), J$.T(2108049, null, 25, false)))) {
                                J$.B(258978, 'delete', J$.G(2108065, J$.R(2108057, 'this', this, false, false), 'map'), J$.G(2108081, J$.R(2108073, 'node', node, false, false), 'key'));
                                J$.B(258986, '-', J$.A(2108097, J$.R(2108089, 'this', this, false, false), 'capacity', '+')(1), 1);
                            }
                        } catch (J$e) {
                            J$.Ex(2109249, J$e);
                        } finally {
                            if (J$.Fr(2109257))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2108545, J$.G(2108217, J$.R(2108209, 'DoublyLinkedList', DoublyLinkedList, false, true), 'prototype'), 'moveToFront', J$.T(2108537, function (node) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2108513, arguments.callee, this, arguments);
                            arguments = J$.N(2108521, 'arguments', arguments, true, false, false);
                            node = J$.N(2108529, 'node', node, true, false, false);
                            if (J$.C(132304, J$.B(258994, '==', J$.G(2108233, J$.R(2108225, 'this', this, false, false), 'firstNode'), J$.R(2108241, 'node', node, false, false))))
                                return J$.Rt(2108249, undefined);
                            J$.M(2108273, J$.R(2108257, 'this', this, false, false), 'remove', false)(J$.R(2108265, 'node', node, false, false));
                            if (J$.C(132312, J$.B(259002, '==', J$.G(2108289, J$.R(2108281, 'this', this, false, false), 'firstNode'), J$.T(2108297, null, 25, false)))) {
                                J$.P(2108321, J$.R(2108305, 'this', this, false, false), 'firstNode', J$.R(2108313, 'node', node, false, false));
                                J$.P(2108345, J$.R(2108329, 'this', this, false, false), 'lastNode', J$.R(2108337, 'node', node, false, false));
                                J$.P(2108369, J$.R(2108353, 'node', node, false, false), 'prev', J$.T(2108361, null, 25, false));
                                J$.P(2108393, J$.R(2108377, 'node', node, false, false), 'next', J$.T(2108385, null, 25, false));
                            } else {
                                J$.P(2108417, J$.R(2108401, 'node', node, false, false), 'prev', J$.T(2108409, null, 25, false));
                                J$.P(2108449, J$.R(2108425, 'node', node, false, false), 'next', J$.G(2108441, J$.R(2108433, 'this', this, false, false), 'firstNode'));
                                J$.P(2108481, J$.G(2108465, J$.R(2108457, 'node', node, false, false), 'next'), 'prev', J$.R(2108473, 'node', node, false, false));
                                J$.P(2108505, J$.R(2108489, 'this', this, false, false), 'firstNode', J$.R(2108497, 'node', node, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2109281, J$e);
                        } finally {
                            if (J$.Fr(2109289))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2108681, J$.G(2108561, J$.R(2108553, 'DoublyLinkedList', DoublyLinkedList, false, true), 'prototype'), 'pop', J$.T(2108673, function () {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2108649, arguments.callee, this, arguments);
                            arguments = J$.N(2108657, 'arguments', arguments, true, false, false);
                            J$.N(2108665, 'lastNode', lastNode, false, false, false);
                            var lastNode = J$.W(2108585, 'lastNode', J$.G(2108577, J$.R(2108569, 'this', this, false, false), 'lastNode'), lastNode, false, false);
                            if (J$.C(132320, J$.B(259010, '!=', J$.R(2108593, 'lastNode', lastNode, false, false), J$.T(2108601, null, 25, false)))) {
                                J$.M(2108625, J$.R(2108609, 'this', this, false, false), 'remove', false)(J$.R(2108617, 'lastNode', lastNode, false, false));
                            }
                            return J$.Rt(2108641, J$.R(2108633, 'lastNode', lastNode, false, false));
                        } catch (J$e) {
                            J$.Ex(2109297, J$e);
                        } finally {
                            if (J$.Fr(2109305))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2108977, J$.G(2108697, J$.R(2108689, 'DoublyLinkedList', DoublyLinkedList, false, true), 'prototype'), 'remove', J$.T(2108969, function (node) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(2108945, arguments.callee, this, arguments);
                            arguments = J$.N(2108953, 'arguments', arguments, true, false, false);
                            node = J$.N(2108961, 'node', node, true, false, false);
                            if (J$.C(132336, J$.B(259018, '==', J$.G(2108713, J$.R(2108705, 'this', this, false, false), 'firstNode'), J$.R(2108721, 'node', node, false, false)))) {
                                J$.P(2108753, J$.R(2108729, 'this', this, false, false), 'firstNode', J$.G(2108745, J$.R(2108737, 'node', node, false, false), 'next'));
                            } else if (J$.C(132328, J$.B(259026, '!=', J$.G(2108769, J$.R(2108761, 'node', node, false, false), 'prev'), J$.T(2108777, null, 25, false)))) {
                                J$.P(2108817, J$.G(2108793, J$.R(2108785, 'node', node, false, false), 'prev'), 'next', J$.G(2108809, J$.R(2108801, 'node', node, false, false), 'next'));
                            }
                            if (J$.C(132352, J$.B(259034, '==', J$.G(2108833, J$.R(2108825, 'this', this, false, false), 'lastNode'), J$.R(2108841, 'node', node, false, false)))) {
                                J$.P(2108873, J$.R(2108849, 'this', this, false, false), 'lastNode', J$.G(2108865, J$.R(2108857, 'node', node, false, false), 'prev'));
                            } else if (J$.C(132344, J$.B(259042, '!=', J$.G(2108889, J$.R(2108881, 'node', node, false, false), 'next'), J$.T(2108897, null, 25, false)))) {
                                J$.P(2108937, J$.G(2108913, J$.R(2108905, 'node', node, false, false), 'next'), 'prev', J$.G(2108929, J$.R(2108921, 'node', node, false, false), 'prev'));
                            }
                        } catch (J$e) {
                            J$.Ex(2109313, J$e);
                        } finally {
                            if (J$.Fr(2109321))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2109345, J$e);
        } finally {
            if (J$.Sr(2109353))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

