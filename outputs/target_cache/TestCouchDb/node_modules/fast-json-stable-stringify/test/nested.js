J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(2317657, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/fast-json-stable-stringify/test/nested.js');
            J$.N(2317665, 'test', test, false, false, false);
            J$.N(2317673, 'stringify', stringify, false, false, false);
            J$.T(2316193, 'use strict', 21, false);
            J$.F(2316217, J$.I(typeof require === 'undefined' ? require = J$.R(2316201, 'require', undefined, true, true) : require = J$.R(2316201, 'require', require, true, true)), false)(J$.T(2316209, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2316241, J$.I(typeof require === 'undefined' ? require = J$.R(2316225, 'require', undefined, true, true) : require = J$.R(2316225, 'require', require, true, true)), false)(J$.T(2316233, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2316265, J$.I(typeof require === 'undefined' ? require = J$.R(2316249, 'require', undefined, true, true) : require = J$.R(2316249, 'require', require, true, true)), false)(J$.T(2316257, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2316289, J$.I(typeof require === 'undefined' ? require = J$.R(2316273, 'require', undefined, true, true) : require = J$.R(2316273, 'require', require, true, true)), false)(J$.T(2316281, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2316313, J$.I(typeof require === 'undefined' ? require = J$.R(2316297, 'require', undefined, true, true) : require = J$.R(2316297, 'require', require, true, true)), false)(J$.T(2316305, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2316337, J$.I(typeof require === 'undefined' ? require = J$.R(2316321, 'require', undefined, true, true) : require = J$.R(2316321, 'require', require, true, true)), false)(J$.T(2316329, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2316361, J$.I(typeof require === 'undefined' ? require = J$.R(2316345, 'require', undefined, true, true) : require = J$.R(2316345, 'require', require, true, true)), false)(J$.T(2316353, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2316385, J$.I(typeof require === 'undefined' ? require = J$.R(2316369, 'require', undefined, true, true) : require = J$.R(2316369, 'require', require, true, true)), false)(J$.T(2316377, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2316409, J$.I(typeof require === 'undefined' ? require = J$.R(2316393, 'require', undefined, true, true) : require = J$.R(2316393, 'require', require, true, true)), false)(J$.T(2316401, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2316433, J$.I(typeof require === 'undefined' ? require = J$.R(2316417, 'require', undefined, true, true) : require = J$.R(2316417, 'require', require, true, true)), false)(J$.T(2316425, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2316457, J$.I(typeof require === 'undefined' ? require = J$.R(2316441, 'require', undefined, true, true) : require = J$.R(2316441, 'require', require, true, true)), false)(J$.T(2316449, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2316481, J$.I(typeof require === 'undefined' ? require = J$.R(2316465, 'require', undefined, true, true) : require = J$.R(2316465, 'require', require, true, true)), false)(J$.T(2316473, 'core-js/modules/es.regexp.to-string', 21, false));
            var test = J$.W(2316513, 'test', J$.F(2316505, J$.I(typeof require === 'undefined' ? require = J$.R(2316489, 'require', undefined, true, true) : require = J$.R(2316489, 'require', require, true, true)), false)(J$.T(2316497, 'tape', 21, false)), test, false, true);
            var stringify = J$.W(2316545, 'stringify', J$.F(2316537, J$.I(typeof require === 'undefined' ? require = J$.R(2316521, 'require', undefined, true, true) : require = J$.R(2316521, 'require', require, true, true)), false)(J$.T(2316529, '../', 21, false)), stringify, false, true);
            J$.F(2316761, J$.R(2316553, 'test', test, false, true), false)(J$.T(2316561, 'nested', 21, false), J$.T(2316753, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2316721, arguments.callee, this, arguments);
                            arguments = J$.N(2316729, 'arguments', arguments, true, false, false);
                            t = J$.N(2316737, 't', t, true, false, false);
                            J$.N(2316745, 'obj', obj, false, false, false);
                            J$.M(2316585, J$.R(2316569, 't', t, false, false), 'plan', false)(J$.T(2316577, 1, 22, false));
                            var obj = J$.W(2316665, 'obj', J$.T(2316657, {
                                c: J$.T(2316593, 8, 22, false),
                                b: J$.T(2316641, [
                                    J$.T(2316625, {
                                        z: J$.T(2316601, 6, 22, false),
                                        y: J$.T(2316609, 5, 22, false),
                                        x: J$.T(2316617, 4, 22, false)
                                    }, 11, false),
                                    J$.T(2316633, 7, 22, false)
                                ], 10, false),
                                a: J$.T(2316649, 3, 22, false)
                            }, 11, false), obj, false, false);
                            J$.M(2316713, J$.R(2316673, 't', t, false, false), 'equal', false)(J$.F(2316697, J$.R(2316681, 'stringify', stringify, false, true), false)(J$.R(2316689, 'obj', obj, false, false)), J$.T(2316705, '{"a":3,"b":[{"x":4,"y":5,"z":6},7],"c":8}', 21, false));
                        } catch (J$e) {
                            J$.Ex(2317681, J$e);
                        } finally {
                            if (J$.Fr(2317689))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2317009, J$.R(2316769, 'test', test, false, true), false)(J$.T(2316777, 'cyclic (default)', 21, false), J$.T(2317001, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2316961, arguments.callee, this, arguments);
                            arguments = J$.N(2316969, 'arguments', arguments, true, false, false);
                            t = J$.N(2316977, 't', t, true, false, false);
                            J$.N(2316985, 'one', one, false, false, false);
                            J$.N(2316993, 'two', two, false, false, false);
                            J$.M(2316801, J$.R(2316785, 't', t, false, false), 'plan', false)(J$.T(2316793, 1, 22, false));
                            var one = J$.W(2316825, 'one', J$.T(2316817, { a: J$.T(2316809, 1, 22, false) }, 11, false), one, false, false);
                            var two = J$.W(2316857, 'two', J$.T(2316849, {
                                a: J$.T(2316833, 2, 22, false),
                                one: J$.R(2316841, 'one', one, false, false)
                            }, 11, false), two, false, false);
                            J$.P(2316881, J$.R(2316865, 'one', one, false, false), 'two', J$.R(2316873, 'two', two, false, false));
                            try {
                                J$.F(2316905, J$.R(2316889, 'stringify', stringify, false, true), false)(J$.R(2316897, 'one', one, false, false));
                            } catch (ex) {
                                J$.N(2316953, 'ex', ex, false, false, true);
                                J$.M(2316945, J$.R(2316913, 't', t, false, false), 'equal', false)(J$.M(2316929, J$.R(2316921, 'ex', ex, false, false), 'toString', false)(), J$.T(2316937, 'TypeError: Converting circular structure to JSON', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2317697, J$e);
                        } finally {
                            if (J$.Fr(2317705))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2317249, J$.R(2317017, 'test', test, false, true), false)(J$.T(2317025, 'cyclic (specifically allowed)', 21, false), J$.T(2317241, function (t) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2317201, arguments.callee, this, arguments);
                            arguments = J$.N(2317209, 'arguments', arguments, true, false, false);
                            t = J$.N(2317217, 't', t, true, false, false);
                            J$.N(2317225, 'one', one, false, false, false);
                            J$.N(2317233, 'two', two, false, false, false);
                            J$.M(2317049, J$.R(2317033, 't', t, false, false), 'plan', false)(J$.T(2317041, 1, 22, false));
                            var one = J$.W(2317073, 'one', J$.T(2317065, { a: J$.T(2317057, 1, 22, false) }, 11, false), one, false, false);
                            var two = J$.W(2317105, 'two', J$.T(2317097, {
                                a: J$.T(2317081, 2, 22, false),
                                one: J$.R(2317089, 'one', one, false, false)
                            }, 11, false), two, false, false);
                            J$.P(2317129, J$.R(2317113, 'one', one, false, false), 'two', J$.R(2317121, 'two', two, false, false));
                            J$.M(2317193, J$.R(2317137, 't', t, false, false), 'equal', false)(J$.F(2317177, J$.R(2317145, 'stringify', stringify, false, true), false)(J$.R(2317153, 'one', one, false, false), J$.T(2317169, { cycles: J$.T(2317161, true, 23, false) }, 11, false)), J$.T(2317185, '{"a":1,"two":{"a":2,"one":"__cycle__"}}', 21, false));
                        } catch (J$e) {
                            J$.Ex(2317713, J$e);
                        } finally {
                            if (J$.Fr(2317721))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2317449, J$.R(2317257, 'test', test, false, true), false)(J$.T(2317265, 'repeated non-cyclic value', 21, false), J$.T(2317441, function (t) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2317401, arguments.callee, this, arguments);
                            arguments = J$.N(2317409, 'arguments', arguments, true, false, false);
                            t = J$.N(2317417, 't', t, true, false, false);
                            J$.N(2317425, 'one', one, false, false, false);
                            J$.N(2317433, 'two', two, false, false, false);
                            J$.M(2317289, J$.R(2317273, 't', t, false, false), 'plan', false)(J$.T(2317281, 1, 22, false));
                            var one = J$.W(2317313, 'one', J$.T(2317305, { x: J$.T(2317297, 1, 22, false) }, 11, false), one, false, false);
                            var two = J$.W(2317345, 'two', J$.T(2317337, {
                                a: J$.R(2317321, 'one', one, false, false),
                                b: J$.R(2317329, 'one', one, false, false)
                            }, 11, false), two, false, false);
                            J$.M(2317393, J$.R(2317353, 't', t, false, false), 'equal', false)(J$.F(2317377, J$.R(2317361, 'stringify', stringify, false, true), false)(J$.R(2317369, 'two', two, false, false)), J$.T(2317385, '{"a":{"x":1},"b":{"x":1}}', 21, false));
                        } catch (J$e) {
                            J$.Ex(2317729, J$e);
                        } finally {
                            if (J$.Fr(2317737))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2317649, J$.R(2317457, 'test', test, false, true), false)(J$.T(2317465, 'acyclic but with reused obj-property pointers', 21, false), J$.T(2317641, function (t) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2317601, arguments.callee, this, arguments);
                            arguments = J$.N(2317609, 'arguments', arguments, true, false, false);
                            t = J$.N(2317617, 't', t, true, false, false);
                            J$.N(2317625, 'x', x, false, false, false);
                            J$.N(2317633, 'y', y, false, false, false);
                            J$.M(2317489, J$.R(2317473, 't', t, false, false), 'plan', false)(J$.T(2317481, 1, 22, false));
                            var x = J$.W(2317513, 'x', J$.T(2317505, { a: J$.T(2317497, 1, 22, false) }, 11, false), x, false, false);
                            var y = J$.W(2317545, 'y', J$.T(2317537, {
                                b: J$.R(2317521, 'x', x, false, false),
                                c: J$.R(2317529, 'x', x, false, false)
                            }, 11, false), y, false, false);
                            J$.M(2317593, J$.R(2317553, 't', t, false, false), 'equal', false)(J$.F(2317577, J$.R(2317561, 'stringify', stringify, false, true), false)(J$.R(2317569, 'y', y, false, false)), J$.T(2317585, '{"b":{"a":1},"c":{"a":1}}', 21, false));
                        } catch (J$e) {
                            J$.Ex(2317745, J$e);
                        } finally {
                            if (J$.Fr(2317753))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2317761, J$e);
        } finally {
            if (J$.Sr(2317769))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

