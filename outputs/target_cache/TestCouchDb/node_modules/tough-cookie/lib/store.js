J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(3183817, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/tough-cookie/lib/store.js');
            function Store() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3183081, arguments.callee, this, arguments);
                            arguments = J$.N(3183089, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(3183841, J$e);
                        } finally {
                            if (J$.Fr(3183849))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            Store = J$.N(3183833, 'Store', J$.T(3183825, Store, 12, false), true, false, false);
            J$.T(3183073, 'use strict', 21, false);
            J$.P(3183113, J$.I(typeof exports === 'undefined' ? exports = J$.R(3183097, 'exports', undefined, true, true) : exports = J$.R(3183097, 'exports', exports, true, true)), 'Store', J$.R(3183105, 'Store', Store, false, true));
            J$.P(3183145, J$.G(3183129, J$.R(3183121, 'Store', Store, false, true), 'prototype'), 'synchronous', J$.T(3183137, false, 23, false));
            J$.P(3183249, J$.G(3183161, J$.R(3183153, 'Store', Store, false, true), 'prototype'), 'findCookie', J$.T(3183241, function (domain, path, key, cb) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3183193, arguments.callee, this, arguments);
                            arguments = J$.N(3183201, 'arguments', arguments, true, false, false);
                            domain = J$.N(3183209, 'domain', domain, true, false, false);
                            path = J$.N(3183217, 'path', path, true, false, false);
                            key = J$.N(3183225, 'key', key, true, false, false);
                            cb = J$.N(3183233, 'cb', cb, true, false, false);
                            throw J$.F(3183185, J$.I(typeof Error === 'undefined' ? Error = J$.R(3183169, 'Error', undefined, true, true) : Error = J$.R(3183169, 'Error', Error, true, true)), true)(J$.T(3183177, 'findCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3183857, J$e);
                        } finally {
                            if (J$.Fr(3183865))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3183345, J$.G(3183265, J$.R(3183257, 'Store', Store, false, true), 'prototype'), 'findCookies', J$.T(3183337, function (domain, path, cb) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3183297, arguments.callee, this, arguments);
                            arguments = J$.N(3183305, 'arguments', arguments, true, false, false);
                            domain = J$.N(3183313, 'domain', domain, true, false, false);
                            path = J$.N(3183321, 'path', path, true, false, false);
                            cb = J$.N(3183329, 'cb', cb, true, false, false);
                            throw J$.F(3183289, J$.I(typeof Error === 'undefined' ? Error = J$.R(3183273, 'Error', undefined, true, true) : Error = J$.R(3183273, 'Error', Error, true, true)), true)(J$.T(3183281, 'findCookies is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3183873, J$e);
                        } finally {
                            if (J$.Fr(3183881))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3183433, J$.G(3183361, J$.R(3183353, 'Store', Store, false, true), 'prototype'), 'putCookie', J$.T(3183425, function (cookie, cb) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3183393, arguments.callee, this, arguments);
                            arguments = J$.N(3183401, 'arguments', arguments, true, false, false);
                            cookie = J$.N(3183409, 'cookie', cookie, true, false, false);
                            cb = J$.N(3183417, 'cb', cb, true, false, false);
                            throw J$.F(3183385, J$.I(typeof Error === 'undefined' ? Error = J$.R(3183369, 'Error', undefined, true, true) : Error = J$.R(3183369, 'Error', Error, true, true)), true)(J$.T(3183377, 'putCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3183889, J$e);
                        } finally {
                            if (J$.Fr(3183897))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3183529, J$.G(3183449, J$.R(3183441, 'Store', Store, false, true), 'prototype'), 'updateCookie', J$.T(3183521, function (oldCookie, newCookie, cb) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3183481, arguments.callee, this, arguments);
                            arguments = J$.N(3183489, 'arguments', arguments, true, false, false);
                            oldCookie = J$.N(3183497, 'oldCookie', oldCookie, true, false, false);
                            newCookie = J$.N(3183505, 'newCookie', newCookie, true, false, false);
                            cb = J$.N(3183513, 'cb', cb, true, false, false);
                            throw J$.F(3183473, J$.I(typeof Error === 'undefined' ? Error = J$.R(3183457, 'Error', undefined, true, true) : Error = J$.R(3183457, 'Error', Error, true, true)), true)(J$.T(3183465, 'updateCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3183905, J$e);
                        } finally {
                            if (J$.Fr(3183913))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3183633, J$.G(3183545, J$.R(3183537, 'Store', Store, false, true), 'prototype'), 'removeCookie', J$.T(3183625, function (domain, path, key, cb) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(3183577, arguments.callee, this, arguments);
                            arguments = J$.N(3183585, 'arguments', arguments, true, false, false);
                            domain = J$.N(3183593, 'domain', domain, true, false, false);
                            path = J$.N(3183601, 'path', path, true, false, false);
                            key = J$.N(3183609, 'key', key, true, false, false);
                            cb = J$.N(3183617, 'cb', cb, true, false, false);
                            throw J$.F(3183569, J$.I(typeof Error === 'undefined' ? Error = J$.R(3183553, 'Error', undefined, true, true) : Error = J$.R(3183553, 'Error', Error, true, true)), true)(J$.T(3183561, 'removeCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3183921, J$e);
                        } finally {
                            if (J$.Fr(3183929))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3183729, J$.G(3183649, J$.R(3183641, 'Store', Store, false, true), 'prototype'), 'removeCookies', J$.T(3183721, function (domain, path, cb) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(3183681, arguments.callee, this, arguments);
                            arguments = J$.N(3183689, 'arguments', arguments, true, false, false);
                            domain = J$.N(3183697, 'domain', domain, true, false, false);
                            path = J$.N(3183705, 'path', path, true, false, false);
                            cb = J$.N(3183713, 'cb', cb, true, false, false);
                            throw J$.F(3183673, J$.I(typeof Error === 'undefined' ? Error = J$.R(3183657, 'Error', undefined, true, true) : Error = J$.R(3183657, 'Error', Error, true, true)), true)(J$.T(3183665, 'removeCookies is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(3183937, J$e);
                        } finally {
                            if (J$.Fr(3183945))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(3183809, J$.G(3183745, J$.R(3183737, 'Store', Store, false, true), 'prototype'), 'getAllCookies', J$.T(3183801, function (cb) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(3183777, arguments.callee, this, arguments);
                            arguments = J$.N(3183785, 'arguments', arguments, true, false, false);
                            cb = J$.N(3183793, 'cb', cb, true, false, false);
                            throw J$.F(3183769, J$.I(typeof Error === 'undefined' ? Error = J$.R(3183753, 'Error', undefined, true, true) : Error = J$.R(3183753, 'Error', Error, true, true)), true)(J$.T(3183761, 'getAllCookies is not implemented (therefore jar cannot be serialized)', 21, false));
                        } catch (J$e) {
                            J$.Ex(3183953, J$e);
                        } finally {
                            if (J$.Fr(3183961))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3183969, J$e);
        } finally {
            if (J$.Sr(3183977))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

