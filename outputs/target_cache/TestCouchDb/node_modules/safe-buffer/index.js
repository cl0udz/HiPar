J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(2910961, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/safe-buffer/index.js');
            function copyProps(src, dst) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2909945, arguments.callee, this, arguments);
                            arguments = J$.N(2909953, 'arguments', arguments, true, false, false);
                            src = J$.N(2909961, 'src', src, true, false, false);
                            dst = J$.N(2909969, 'dst', dst, true, false, false);
                            J$.N(2909977, 'key', key, false, false, false);
                            for (var key in J$.H(2909929, J$.R(2909873, 'src', src, false, false))) {
                                J$.N(2909937, 'key', key, false, true, false);
                                {
                                    {
                                        J$.P(2909921, J$.R(2909881, 'dst', dst, false, false), J$.R(2909889, 'key', key, false, false), J$.G(2909913, J$.R(2909897, 'src', src, false, false), J$.R(2909905, 'key', key, false, false)));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(2911017, J$e);
                        } finally {
                            if (J$.Fr(2911025))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function SafeBuffer(arg, encodingOrOffset, length) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2910177, arguments.callee, this, arguments);
                            arguments = J$.N(2910185, 'arguments', arguments, true, false, false);
                            arg = J$.N(2910193, 'arg', arg, true, false, false);
                            encodingOrOffset = J$.N(2910201, 'encodingOrOffset', encodingOrOffset, true, false, false);
                            length = J$.N(2910209, 'length', length, true, false, false);
                            return J$.Rt(2910169, J$.F(2910161, J$.R(2910129, 'Buffer', Buffer, false, true), false)(J$.R(2910137, 'arg', arg, false, false), J$.R(2910145, 'encodingOrOffset', encodingOrOffset, false, false), J$.R(2910153, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(2911033, J$e);
                        } finally {
                            if (J$.Fr(2911041))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2910969, 'buffer', buffer, false, false, false);
            J$.N(2910977, 'Buffer', Buffer, false, false, false);
            copyProps = J$.N(2910993, 'copyProps', J$.T(2910985, copyProps, 12, false), true, false, false);
            SafeBuffer = J$.N(2911009, 'SafeBuffer', J$.T(2911001, SafeBuffer, 12, false), true, false, false);
            J$.T(2909617, 'use strict', 21, false);
            J$.F(2909641, J$.I(typeof require === 'undefined' ? require = J$.R(2909625, 'require', undefined, true, true) : require = J$.R(2909625, 'require', require, true, true)), false)(J$.T(2909633, 'core-js/modules/es.array.fill', 21, false));
            J$.F(2909665, J$.I(typeof require === 'undefined' ? require = J$.R(2909649, 'require', undefined, true, true) : require = J$.R(2909649, 'require', require, true, true)), false)(J$.T(2909657, 'core-js/modules/es.object.create', 21, false));
            J$.F(2909689, J$.I(typeof require === 'undefined' ? require = J$.R(2909673, 'require', undefined, true, true) : require = J$.R(2909673, 'require', require, true, true)), false)(J$.T(2909681, 'core-js/modules/es.array.fill', 21, false));
            J$.F(2909713, J$.I(typeof require === 'undefined' ? require = J$.R(2909697, 'require', undefined, true, true) : require = J$.R(2909697, 'require', require, true, true)), false)(J$.T(2909705, 'core-js/modules/es.object.create', 21, false));
            J$.F(2909737, J$.I(typeof require === 'undefined' ? require = J$.R(2909721, 'require', undefined, true, true) : require = J$.R(2909721, 'require', require, true, true)), false)(J$.T(2909729, 'core-js/modules/es.array.fill', 21, false));
            J$.F(2909761, J$.I(typeof require === 'undefined' ? require = J$.R(2909745, 'require', undefined, true, true) : require = J$.R(2909745, 'require', require, true, true)), false)(J$.T(2909753, 'core-js/modules/es.object.create', 21, false));
            J$.F(2909785, J$.I(typeof require === 'undefined' ? require = J$.R(2909769, 'require', undefined, true, true) : require = J$.R(2909769, 'require', require, true, true)), false)(J$.T(2909777, 'core-js/modules/es.array.fill', 21, false));
            J$.F(2909809, J$.I(typeof require === 'undefined' ? require = J$.R(2909793, 'require', undefined, true, true) : require = J$.R(2909793, 'require', require, true, true)), false)(J$.T(2909801, 'core-js/modules/es.object.create', 21, false));
            var buffer = J$.W(2909841, 'buffer', J$.F(2909833, J$.I(typeof require === 'undefined' ? require = J$.R(2909817, 'require', undefined, true, true) : require = J$.R(2909817, 'require', require, true, true)), false)(J$.T(2909825, 'buffer', 21, false)), buffer, false, true);
            var Buffer = J$.W(2909865, 'Buffer', J$.G(2909857, J$.R(2909849, 'buffer', buffer, false, true), 'Buffer'), Buffer, false, true);
            if (J$.C(167296, J$.C(167288, J$.C(167280, J$.C(167272, J$.G(2909993, J$.R(2909985, 'Buffer', Buffer, false, true), 'from')) ? J$.G(2910009, J$.R(2910001, 'Buffer', Buffer, false, true), 'alloc') : J$._()) ? J$.G(2910025, J$.R(2910017, 'Buffer', Buffer, false, true), 'allocUnsafe') : J$._()) ? J$.G(2910041, J$.R(2910033, 'Buffer', Buffer, false, true), 'allocUnsafeSlow') : J$._())) {
                J$.P(2910065, J$.I(typeof module === 'undefined' ? module = J$.R(2910049, 'module', undefined, true, true) : module = J$.R(2910049, 'module', module, true, true)), 'exports', J$.R(2910057, 'buffer', buffer, false, true));
            } else {
                J$.F(2910097, J$.R(2910073, 'copyProps', copyProps, false, true), false)(J$.R(2910081, 'buffer', buffer, false, true), J$.I(typeof exports === 'undefined' ? exports = J$.R(2910089, 'exports', undefined, true, true) : exports = J$.R(2910089, 'exports', exports, true, true)));
                J$.P(2910121, J$.I(typeof exports === 'undefined' ? exports = J$.R(2910105, 'exports', undefined, true, true) : exports = J$.R(2910105, 'exports', exports, true, true)), 'Buffer', J$.R(2910113, 'SafeBuffer', SafeBuffer, false, true));
            }
            J$.P(2910257, J$.R(2910217, 'SafeBuffer', SafeBuffer, false, true), 'prototype', J$.M(2910249, J$.I(typeof Object === 'undefined' ? Object = J$.R(2910225, 'Object', undefined, true, true) : Object = J$.R(2910225, 'Object', Object, true, true)), 'create', false)(J$.G(2910241, J$.R(2910233, 'Buffer', Buffer, false, true), 'prototype')));
            J$.F(2910289, J$.R(2910265, 'copyProps', copyProps, false, true), false)(J$.R(2910273, 'Buffer', Buffer, false, true), J$.R(2910281, 'SafeBuffer', SafeBuffer, false, true));
            J$.P(2910441, J$.R(2910297, 'SafeBuffer', SafeBuffer, false, true), 'from', J$.T(2910433, function (arg, encodingOrOffset, length) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2910393, arguments.callee, this, arguments);
                            arguments = J$.N(2910401, 'arguments', arguments, true, false, false);
                            arg = J$.N(2910409, 'arg', arg, true, false, false);
                            encodingOrOffset = J$.N(2910417, 'encodingOrOffset', encodingOrOffset, true, false, false);
                            length = J$.N(2910425, 'length', length, true, false, false);
                            if (J$.C(167304, J$.B(310922, '===', J$.U(310914, 'typeof', J$.R(2910305, 'arg', arg, false, false)), J$.T(2910313, 'number', 21, false)))) {
                                throw J$.F(2910337, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2910321, 'TypeError', undefined, true, true) : TypeError = J$.R(2910321, 'TypeError', TypeError, true, true)), true)(J$.T(2910329, 'Argument must not be a number', 21, false));
                            }
                            return J$.Rt(2910385, J$.F(2910377, J$.R(2910345, 'Buffer', Buffer, false, true), false)(J$.R(2910353, 'arg', arg, false, false), J$.R(2910361, 'encodingOrOffset', encodingOrOffset, false, false), J$.R(2910369, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(2911049, J$e);
                        } finally {
                            if (J$.Fr(2911057))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2910713, J$.R(2910449, 'SafeBuffer', SafeBuffer, false, true), 'alloc', J$.T(2910705, function (size, fill, encoding) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2910657, arguments.callee, this, arguments);
                            arguments = J$.N(2910665, 'arguments', arguments, true, false, false);
                            size = J$.N(2910673, 'size', size, true, false, false);
                            fill = J$.N(2910681, 'fill', fill, true, false, false);
                            encoding = J$.N(2910689, 'encoding', encoding, true, false, false);
                            J$.N(2910697, 'buf', buf, false, false, false);
                            if (J$.C(167312, J$.B(310938, '!==', J$.U(310930, 'typeof', J$.R(2910457, 'size', size, false, false)), J$.T(2910465, 'number', 21, false)))) {
                                throw J$.F(2910489, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2910473, 'TypeError', undefined, true, true) : TypeError = J$.R(2910473, 'TypeError', TypeError, true, true)), true)(J$.T(2910481, 'Argument must be a number', 21, false));
                            }
                            var buf = J$.W(2910521, 'buf', J$.F(2910513, J$.R(2910497, 'Buffer', Buffer, false, true), false)(J$.R(2910505, 'size', size, false, false)), buf, false, false);
                            if (J$.C(167328, J$.B(310946, '!==', J$.R(2910529, 'fill', fill, false, false), J$.T(2910537, undefined, 24, false)))) {
                                if (J$.C(167320, J$.B(310962, '===', J$.U(310954, 'typeof', J$.R(2910545, 'encoding', encoding, false, false)), J$.T(2910553, 'string', 21, false)))) {
                                    J$.M(2910585, J$.R(2910561, 'buf', buf, false, false), 'fill', false)(J$.R(2910569, 'fill', fill, false, false), J$.R(2910577, 'encoding', encoding, false, false));
                                } else {
                                    J$.M(2910609, J$.R(2910593, 'buf', buf, false, false), 'fill', false)(J$.R(2910601, 'fill', fill, false, false));
                                }
                            } else {
                                J$.M(2910633, J$.R(2910617, 'buf', buf, false, false), 'fill', false)(J$.T(2910625, 0, 22, false));
                            }
                            return J$.Rt(2910649, J$.R(2910641, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(2911065, J$e);
                        } finally {
                            if (J$.Fr(2911073))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2910833, J$.R(2910721, 'SafeBuffer', SafeBuffer, false, true), 'allocUnsafe', J$.T(2910825, function (size) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2910801, arguments.callee, this, arguments);
                            arguments = J$.N(2910809, 'arguments', arguments, true, false, false);
                            size = J$.N(2910817, 'size', size, true, false, false);
                            if (J$.C(167336, J$.B(310978, '!==', J$.U(310970, 'typeof', J$.R(2910729, 'size', size, false, false)), J$.T(2910737, 'number', 21, false)))) {
                                throw J$.F(2910761, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2910745, 'TypeError', undefined, true, true) : TypeError = J$.R(2910745, 'TypeError', TypeError, true, true)), true)(J$.T(2910753, 'Argument must be a number', 21, false));
                            }
                            return J$.Rt(2910793, J$.F(2910785, J$.R(2910769, 'Buffer', Buffer, false, true), false)(J$.R(2910777, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(2911081, J$e);
                        } finally {
                            if (J$.Fr(2911089))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2910953, J$.R(2910841, 'SafeBuffer', SafeBuffer, false, true), 'allocUnsafeSlow', J$.T(2910945, function (size) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2910921, arguments.callee, this, arguments);
                            arguments = J$.N(2910929, 'arguments', arguments, true, false, false);
                            size = J$.N(2910937, 'size', size, true, false, false);
                            if (J$.C(167344, J$.B(310994, '!==', J$.U(310986, 'typeof', J$.R(2910849, 'size', size, false, false)), J$.T(2910857, 'number', 21, false)))) {
                                throw J$.F(2910881, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2910865, 'TypeError', undefined, true, true) : TypeError = J$.R(2910865, 'TypeError', TypeError, true, true)), true)(J$.T(2910873, 'Argument must be a number', 21, false));
                            }
                            return J$.Rt(2910913, J$.M(2910905, J$.R(2910889, 'buffer', buffer, false, true), 'SlowBuffer', false)(J$.R(2910897, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(2911097, J$e);
                        } finally {
                            if (J$.Fr(2911105))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2911113, J$e);
        } finally {
            if (J$.Sr(2911121))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

