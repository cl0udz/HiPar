J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(3001305, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/sshpk/lib/formats/dnssec.js');
            function read(buf, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2995081, arguments.callee, this, arguments);
                            arguments = J$.N(2995089, 'arguments', arguments, true, false, false);
                            buf = J$.N(2995097, 'buf', buf, true, false, false);
                            options = J$.N(2995105, 'options', options, true, false, false);
                            J$.N(2995113, 'lines', lines, false, false, false);
                            J$.N(2995121, 'algElems', algElems, false, false, false);
                            J$.N(2995129, 'algoNum', algoNum, false, false, false);
                            J$.N(2995137, 'algoName', algoName, false, false, false);
                            J$.N(2995145, 'line', line, false, false, false);
                            if (J$.C(170520, J$.B(315986, '!==', J$.U(315978, 'typeof', J$.R(2994409, 'buf', buf, false, false)), J$.T(2994417, 'string', 21, false)))) {
                                J$.M(2994449, J$.R(2994425, 'assert', assert, false, true), 'buffer', false)(J$.R(2994433, 'buf', buf, false, false), J$.T(2994441, 'buf', 21, false));
                                buf = J$.W(2994481, 'buf', J$.M(2994473, J$.R(2994457, 'buf', buf, false, false), 'toString', false)(J$.T(2994465, 'ascii', 21, false)), buf, false, false);
                            }
                            var lines = J$.W(2994513, 'lines', J$.M(2994505, J$.R(2994489, 'buf', buf, false, false), 'split', false)(J$.T(2994497, '\n', 21, false)), lines, false, false);
                            if (J$.C(170536, J$.M(2994553, J$.G(2994537, J$.R(2994521, 'lines', lines, false, false), J$.T(2994529, 0, 22, false)), 'match', false)(J$.T(2994545, /^Private-key-format\: v1/, 14, false)))) {
                                var algElems = J$.W(2994601, 'algElems', J$.M(2994593, J$.G(2994577, J$.R(2994561, 'lines', lines, false, false), J$.T(2994569, 1, 22, false)), 'split', false)(J$.T(2994585, ' ', 21, false)), algElems, false, false);
                                var algoNum = J$.W(2994657, 'algoNum', J$.F(2994649, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(2994609, 'parseInt', undefined, true, true) : parseInt = J$.R(2994609, 'parseInt', parseInt, true, true)), false)(J$.G(2994633, J$.R(2994617, 'algElems', algElems, false, false), J$.T(2994625, 1, 22, false)), J$.T(2994641, 10, 22, false)), algoNum, false, false);
                                var algoName = J$.W(2994689, 'algoName', J$.G(2994681, J$.R(2994665, 'algElems', algElems, false, false), J$.T(2994673, 2, 22, false)), algoName, false, false);
                                if (J$.C(170528, J$.U(315994, '!', J$.G(2994713, J$.R(2994697, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2994705, 'algoNum', algoNum, false, false)))))
                                    throw J$.F(2994745, J$.I(typeof Error === 'undefined' ? Error = J$.R(2994721, 'Error', undefined, true, true) : Error = J$.R(2994721, 'Error', Error, true, true)), true)(J$.B(316002, '+', J$.T(2994729, 'Unsupported algorithm: ', 21, false), J$.R(2994737, 'algoName', algoName, false, false)));
                                return J$.Rt(2994801, J$.F(2994793, J$.R(2994753, 'readDNSSECPrivateKey', readDNSSECPrivateKey, false, true), false)(J$.R(2994761, 'algoNum', algoNum, false, false), J$.M(2994785, J$.R(2994769, 'lines', lines, false, false), 'slice', false)(J$.T(2994777, 2, 22, false))));
                            }
                            var line = J$.W(2994817, 'line', J$.T(2994809, 0, 22, false), line, false, false);
                            while (J$.C(170544, J$.M(2994857, J$.G(2994841, J$.R(2994825, 'lines', lines, false, false), J$.R(2994833, 'line', line, false, false)), 'match', false)(J$.T(2994849, /^\;/, 14, false)))) {
                                J$.B(316026, '-', line = J$.W(2994873, 'line', J$.B(316018, '+', J$.U(316010, '+', J$.R(2994865, 'line', line, false, false)), 1), line, false, false), 1);
                            }
                            if (J$.C(170568, J$.C(170560, J$.C(170552, J$.M(2994913, J$.G(2994897, J$.R(2994881, 'lines', lines, false, false), J$.R(2994889, 'line', line, false, false)), 'match', false)(J$.T(2994905, /\. IN KEY /, 14, false))) ? J$._() : J$.M(2994953, J$.G(2994937, J$.R(2994921, 'lines', lines, false, false), J$.R(2994929, 'line', line, false, false)), 'match', false)(J$.T(2994945, /\. IN DNSKEY /, 14, false))) ? J$.B(316042, '===', J$.G(2994993, J$.G(2994985, J$.R(2994961, 'lines', lines, false, false), J$.B(316034, '+', J$.R(2994969, 'line', line, false, false), J$.T(2994977, 1, 22, false))), 'length'), J$.T(2995001, 0, 22, false)) : J$._())) {
                                return J$.Rt(2995049, J$.F(2995041, J$.R(2995009, 'readRFC3110', readRFC3110, false, true), false)(J$.G(2995033, J$.R(2995017, 'lines', lines, false, false), J$.R(2995025, 'line', line, false, false))));
                            }
                            throw J$.F(2995073, J$.I(typeof Error === 'undefined' ? Error = J$.R(2995057, 'Error', undefined, true, true) : Error = J$.R(2995057, 'Error', Error, true, true)), true)(J$.T(2995065, 'Cannot parse dnssec key', 21, false));
                        } catch (J$e) {
                            J$.Ex(3001561, J$e);
                        } finally {
                            if (J$.Fr(3001569))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readRFC3110(keyString) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2996217, arguments.callee, this, arguments);
                            arguments = J$.N(2996225, 'arguments', arguments, true, false, false);
                            keyString = J$.N(2996233, 'keyString', keyString, true, false, false);
                            J$.N(2996241, 'elems', elems, false, false, false);
                            J$.N(2996249, 'algorithm', algorithm, false, false, false);
                            J$.N(2996257, 'base64key', base64key, false, false, false);
                            J$.N(2996265, 'keyBuffer', keyBuffer, false, false, false);
                            J$.N(2996273, 'publicExponentLen', publicExponentLen, false, false, false);
                            J$.N(2996281, 'publicExponent', publicExponent, false, false, false);
                            J$.N(2996289, 'modulus', modulus, false, false, false);
                            J$.N(2996297, 'rsaKey', rsaKey, false, false, false);
                            J$.N(2996305, 'curve', curve, false, false, false);
                            J$.N(2996313, 'size', size, false, false, false);
                            J$.N(2996321, 'ecdsaKey', ecdsaKey, false, false, false);
                            var elems = J$.W(2995177, 'elems', J$.M(2995169, J$.R(2995153, 'keyString', keyString, false, false), 'split', false)(J$.T(2995161, ' ', 21, false)), elems, false, false);
                            var algorithm = J$.W(2995233, 'algorithm', J$.F(2995225, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(2995185, 'parseInt', undefined, true, true) : parseInt = J$.R(2995185, 'parseInt', parseInt, true, true)), false)(J$.G(2995209, J$.R(2995193, 'elems', elems, false, false), J$.T(2995201, 5, 22, false)), J$.T(2995217, 10, 22, false)), algorithm, false, false);
                            if (J$.C(170576, J$.U(316050, '!', J$.G(2995257, J$.R(2995241, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2995249, 'algorithm', algorithm, false, false)))))
                                throw J$.F(2995289, J$.I(typeof Error === 'undefined' ? Error = J$.R(2995265, 'Error', undefined, true, true) : Error = J$.R(2995265, 'Error', Error, true, true)), true)(J$.B(316058, '+', J$.T(2995273, 'Unsupported algorithm: ', 21, false), J$.R(2995281, 'algorithm', algorithm, false, false)));
                            var base64key = J$.W(2995345, 'base64key', J$.M(2995337, J$.M(2995329, J$.R(2995297, 'elems', elems, false, false), 'slice', false)(J$.T(2995305, 6, 22, false), J$.G(2995321, J$.R(2995313, 'elems', elems, false, false), 'length')), 'join', false)(), base64key, false, false);
                            var keyBuffer = J$.W(2995385, 'keyBuffer', J$.M(2995377, J$.R(2995353, 'Buffer', Buffer, false, true), 'from', false)(J$.R(2995361, 'base64key', base64key, false, false), J$.T(2995369, 'base64', 21, false)), keyBuffer, false, false);
                            if (J$.C(170600, J$.M(2995425, J$.G(2995409, J$.R(2995393, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2995401, 'algorithm', algorithm, false, false)), 'match', false)(J$.T(2995417, /^RSA-/, 14, false)))) {
                                var publicExponentLen = J$.W(2995457, 'publicExponentLen', J$.M(2995449, J$.R(2995433, 'keyBuffer', keyBuffer, false, false), 'readUInt8', false)(J$.T(2995441, 0, 22, false)), publicExponentLen, false, false);
                                if (J$.C(170592, J$.C(170584, J$.B(316066, '!=', J$.R(2995465, 'publicExponentLen', publicExponentLen, false, false), J$.T(2995473, 3, 22, false))) ? J$.B(316074, '!=', J$.R(2995481, 'publicExponentLen', publicExponentLen, false, false), J$.T(2995489, 1, 22, false)) : J$._()))
                                    throw J$.F(2995521, J$.I(typeof Error === 'undefined' ? Error = J$.R(2995497, 'Error', undefined, true, true) : Error = J$.R(2995497, 'Error', Error, true, true)), true)(J$.B(316082, '+', J$.T(2995505, 'Cannot parse dnssec key: ', 21, false), J$.T(2995513, 'unsupported exponent length', 21, false)));
                                var publicExponent = J$.W(2995569, 'publicExponent', J$.M(2995561, J$.R(2995529, 'keyBuffer', keyBuffer, false, false), 'slice', false)(J$.T(2995537, 1, 22, false), J$.B(316090, '+', J$.R(2995545, 'publicExponentLen', publicExponentLen, false, false), J$.T(2995553, 1, 22, false))), publicExponent, false, false);
                                publicExponent = J$.W(2995601, 'publicExponent', J$.M(2995593, J$.R(2995577, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(2995585, 'publicExponent', publicExponent, false, false)), publicExponent, false, false);
                                var modulus = J$.W(2995641, 'modulus', J$.M(2995633, J$.R(2995609, 'keyBuffer', keyBuffer, false, false), 'slice', false)(J$.B(316098, '+', J$.T(2995617, 1, 22, false), J$.R(2995625, 'publicExponentLen', publicExponentLen, false, false))), modulus, false, false);
                                modulus = J$.W(2995673, 'modulus', J$.M(2995665, J$.R(2995649, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(2995657, 'modulus', modulus, false, false)), modulus, false, false);
                                var rsaKey = J$.W(2995705, 'rsaKey', J$.T(2995697, {
                                    type: J$.T(2995681, 'rsa', 21, false),
                                    parts: J$.T(2995689, [], 10, false)
                                }, 11, false), rsaKey, false, false);
                                J$.M(2995753, J$.G(2995721, J$.R(2995713, 'rsaKey', rsaKey, false, false), 'parts'), 'push', false)(J$.T(2995745, {
                                    name: J$.T(2995729, 'e', 21, false),
                                    data: J$.R(2995737, 'publicExponent', publicExponent, false, false)
                                }, 11, false));
                                J$.M(2995801, J$.G(2995769, J$.R(2995761, 'rsaKey', rsaKey, false, false), 'parts'), 'push', false)(J$.T(2995793, {
                                    name: J$.T(2995777, 'n', 21, false),
                                    data: J$.R(2995785, 'modulus', modulus, false, false)
                                }, 11, false));
                                return J$.Rt(2995833, J$.F(2995825, J$.R(2995809, 'Key', Key, false, true), true)(J$.R(2995817, 'rsaKey', rsaKey, false, false)));
                            }
                            if (J$.C(170624, J$.C(170608, J$.B(316106, '===', J$.G(2995857, J$.R(2995841, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2995849, 'algorithm', algorithm, false, false)), J$.T(2995865, 'ECDSA-P384-SHA384', 21, false))) ? J$._() : J$.B(316114, '===', J$.G(2995889, J$.R(2995873, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2995881, 'algorithm', algorithm, false, false)), J$.T(2995897, 'ECDSA-P256-SHA256', 21, false)))) {
                                var curve = J$.W(2995913, 'curve', J$.T(2995905, 'nistp384', 21, false), curve, false, false);
                                var size = J$.W(2995929, 'size', J$.T(2995921, 384, 22, false), size, false, false);
                                if (J$.C(170616, J$.M(2995969, J$.G(2995953, J$.R(2995937, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2995945, 'algorithm', algorithm, false, false)), 'match', false)(J$.T(2995961, /^ECDSA-P256-SHA256/, 14, false)))) {
                                    curve = J$.W(2995985, 'curve', J$.T(2995977, 'nistp256', 21, false), curve, false, false);
                                    size = J$.W(2996001, 'size', J$.T(2995993, 256, 22, false), size, false, false);
                                }
                                var ecdsaKey = J$.W(2996129, 'ecdsaKey', J$.T(2996121, {
                                    type: J$.T(2996009, 'ecdsa', 21, false),
                                    curve: J$.R(2996017, 'curve', curve, false, false),
                                    size: J$.R(2996025, 'size', size, false, false),
                                    parts: J$.T(2996113, [
                                        J$.T(2996065, {
                                            name: J$.T(2996033, 'curve', 21, false),
                                            data: J$.M(2996057, J$.R(2996041, 'Buffer', Buffer, false, true), 'from', false)(J$.R(2996049, 'curve', curve, false, false))
                                        }, 11, false),
                                        J$.T(2996105, {
                                            name: J$.T(2996073, 'Q', 21, false),
                                            data: J$.M(2996097, J$.R(2996081, 'utils', utils, false, true), 'ecNormalize', false)(J$.R(2996089, 'keyBuffer', keyBuffer, false, false))
                                        }, 11, false)
                                    ], 10, false)
                                }, 11, false), ecdsaKey, false, false);
                                return J$.Rt(2996161, J$.F(2996153, J$.R(2996137, 'Key', Key, false, true), true)(J$.R(2996145, 'ecdsaKey', ecdsaKey, false, false)));
                            }
                            throw J$.F(2996209, J$.I(typeof Error === 'undefined' ? Error = J$.R(2996169, 'Error', undefined, true, true) : Error = J$.R(2996169, 'Error', Error, true, true)), true)(J$.B(316122, '+', J$.T(2996177, 'Unsupported algorithm: ', 21, false), J$.G(2996201, J$.R(2996185, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2996193, 'algorithm', algorithm, false, false))));
                        } catch (J$e) {
                            J$.Ex(3001577, J$e);
                        } finally {
                            if (J$.Fr(3001585))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function elementToBuf(e) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2996401, arguments.callee, this, arguments);
                            arguments = J$.N(2996409, 'arguments', arguments, true, false, false);
                            e = J$.N(2996417, 'e', e, true, false, false);
                            return J$.Rt(2996393, J$.M(2996385, J$.R(2996329, 'Buffer', Buffer, false, true), 'from', false)(J$.G(2996369, J$.M(2996353, J$.R(2996337, 'e', e, false, false), 'split', false)(J$.T(2996345, ' ', 21, false)), J$.T(2996361, 1, 22, false)), J$.T(2996377, 'base64', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3001593, J$e);
                        } finally {
                            if (J$.Fr(3001601))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readDNSSECRSAPrivateKey(elements) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2997769, arguments.callee, this, arguments);
                            arguments = J$.N(2997777, 'arguments', arguments, true, false, false);
                            elements = J$.N(2997785, 'elements', elements, true, false, false);
                            J$.N(2997793, 'rsaParams', rsaParams, false, false, false);
                            J$.N(2997801, 'key', key, false, false, false);
                            var rsaParams = J$.W(2996433, 'rsaParams', J$.T(2996425, {}, 11, false), rsaParams, false, false);
                            J$.M(2997249, J$.R(2996441, 'elements', elements, false, false), 'forEach', false)(J$.T(2997241, function (element) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(2997217, arguments.callee, this, arguments);
                                            arguments = J$.N(2997225, 'arguments', arguments, true, false, false);
                                            element = J$.N(2997233, 'element', element, true, false, false);
                                            if (J$.C(170688, J$.B(316130, '===', J$.G(2996481, J$.M(2996465, J$.R(2996449, 'element', element, false, false), 'split', false)(J$.T(2996457, ' ', 21, false)), J$.T(2996473, 0, 22, false)), J$.T(2996489, 'Modulus:', 21, false))))
                                                J$.P(2996537, J$.R(2996497, 'rsaParams', rsaParams, false, false), J$.T(2996505, 'n', 21, false), J$.F(2996529, J$.R(2996513, 'elementToBuf', elementToBuf, false, true), false)(J$.R(2996521, 'element', element, false, false)));
                                            else if (J$.C(170680, J$.B(316138, '===', J$.G(2996577, J$.M(2996561, J$.R(2996545, 'element', element, false, false), 'split', false)(J$.T(2996553, ' ', 21, false)), J$.T(2996569, 0, 22, false)), J$.T(2996585, 'PublicExponent:', 21, false))))
                                                J$.P(2996633, J$.R(2996593, 'rsaParams', rsaParams, false, false), J$.T(2996601, 'e', 21, false), J$.F(2996625, J$.R(2996609, 'elementToBuf', elementToBuf, false, true), false)(J$.R(2996617, 'element', element, false, false)));
                                            else if (J$.C(170672, J$.B(316146, '===', J$.G(2996673, J$.M(2996657, J$.R(2996641, 'element', element, false, false), 'split', false)(J$.T(2996649, ' ', 21, false)), J$.T(2996665, 0, 22, false)), J$.T(2996681, 'PrivateExponent:', 21, false))))
                                                J$.P(2996729, J$.R(2996689, 'rsaParams', rsaParams, false, false), J$.T(2996697, 'd', 21, false), J$.F(2996721, J$.R(2996705, 'elementToBuf', elementToBuf, false, true), false)(J$.R(2996713, 'element', element, false, false)));
                                            else if (J$.C(170664, J$.B(316154, '===', J$.G(2996769, J$.M(2996753, J$.R(2996737, 'element', element, false, false), 'split', false)(J$.T(2996745, ' ', 21, false)), J$.T(2996761, 0, 22, false)), J$.T(2996777, 'Prime1:', 21, false))))
                                                J$.P(2996825, J$.R(2996785, 'rsaParams', rsaParams, false, false), J$.T(2996793, 'p', 21, false), J$.F(2996817, J$.R(2996801, 'elementToBuf', elementToBuf, false, true), false)(J$.R(2996809, 'element', element, false, false)));
                                            else if (J$.C(170656, J$.B(316162, '===', J$.G(2996865, J$.M(2996849, J$.R(2996833, 'element', element, false, false), 'split', false)(J$.T(2996841, ' ', 21, false)), J$.T(2996857, 0, 22, false)), J$.T(2996873, 'Prime2:', 21, false))))
                                                J$.P(2996921, J$.R(2996881, 'rsaParams', rsaParams, false, false), J$.T(2996889, 'q', 21, false), J$.F(2996913, J$.R(2996897, 'elementToBuf', elementToBuf, false, true), false)(J$.R(2996905, 'element', element, false, false)));
                                            else if (J$.C(170648, J$.B(316170, '===', J$.G(2996961, J$.M(2996945, J$.R(2996929, 'element', element, false, false), 'split', false)(J$.T(2996937, ' ', 21, false)), J$.T(2996953, 0, 22, false)), J$.T(2996969, 'Exponent1:', 21, false))))
                                                J$.P(2997017, J$.R(2996977, 'rsaParams', rsaParams, false, false), J$.T(2996985, 'dmodp', 21, false), J$.F(2997009, J$.R(2996993, 'elementToBuf', elementToBuf, false, true), false)(J$.R(2997001, 'element', element, false, false)));
                                            else if (J$.C(170640, J$.B(316178, '===', J$.G(2997057, J$.M(2997041, J$.R(2997025, 'element', element, false, false), 'split', false)(J$.T(2997033, ' ', 21, false)), J$.T(2997049, 0, 22, false)), J$.T(2997065, 'Exponent2:', 21, false))))
                                                J$.P(2997113, J$.R(2997073, 'rsaParams', rsaParams, false, false), J$.T(2997081, 'dmodq', 21, false), J$.F(2997105, J$.R(2997089, 'elementToBuf', elementToBuf, false, true), false)(J$.R(2997097, 'element', element, false, false)));
                                            else if (J$.C(170632, J$.B(316186, '===', J$.G(2997153, J$.M(2997137, J$.R(2997121, 'element', element, false, false), 'split', false)(J$.T(2997129, ' ', 21, false)), J$.T(2997145, 0, 22, false)), J$.T(2997161, 'Coefficient:', 21, false))))
                                                J$.P(2997209, J$.R(2997169, 'rsaParams', rsaParams, false, false), J$.T(2997177, 'iqmp', 21, false), J$.F(2997201, J$.R(2997185, 'elementToBuf', elementToBuf, false, true), false)(J$.R(2997193, 'element', element, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(3001609, J$e);
                                        } finally {
                                            if (J$.Fr(3001617))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var key = J$.W(2997729, 'key', J$.T(2997721, {
                                type: J$.T(2997257, 'rsa', 21, false),
                                parts: J$.T(2997713, [
                                    J$.T(2997313, {
                                        name: J$.T(2997265, 'e', 21, false),
                                        data: J$.M(2997305, J$.R(2997273, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(2997297, J$.R(2997281, 'rsaParams', rsaParams, false, false), J$.T(2997289, 'e', 21, false)))
                                    }, 11, false),
                                    J$.T(2997369, {
                                        name: J$.T(2997321, 'n', 21, false),
                                        data: J$.M(2997361, J$.R(2997329, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(2997353, J$.R(2997337, 'rsaParams', rsaParams, false, false), J$.T(2997345, 'n', 21, false)))
                                    }, 11, false),
                                    J$.T(2997425, {
                                        name: J$.T(2997377, 'd', 21, false),
                                        data: J$.M(2997417, J$.R(2997385, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(2997409, J$.R(2997393, 'rsaParams', rsaParams, false, false), J$.T(2997401, 'd', 21, false)))
                                    }, 11, false),
                                    J$.T(2997481, {
                                        name: J$.T(2997433, 'p', 21, false),
                                        data: J$.M(2997473, J$.R(2997441, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(2997465, J$.R(2997449, 'rsaParams', rsaParams, false, false), J$.T(2997457, 'p', 21, false)))
                                    }, 11, false),
                                    J$.T(2997537, {
                                        name: J$.T(2997489, 'q', 21, false),
                                        data: J$.M(2997529, J$.R(2997497, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(2997521, J$.R(2997505, 'rsaParams', rsaParams, false, false), J$.T(2997513, 'q', 21, false)))
                                    }, 11, false),
                                    J$.T(2997593, {
                                        name: J$.T(2997545, 'dmodp', 21, false),
                                        data: J$.M(2997585, J$.R(2997553, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(2997577, J$.R(2997561, 'rsaParams', rsaParams, false, false), J$.T(2997569, 'dmodp', 21, false)))
                                    }, 11, false),
                                    J$.T(2997649, {
                                        name: J$.T(2997601, 'dmodq', 21, false),
                                        data: J$.M(2997641, J$.R(2997609, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(2997633, J$.R(2997617, 'rsaParams', rsaParams, false, false), J$.T(2997625, 'dmodq', 21, false)))
                                    }, 11, false),
                                    J$.T(2997705, {
                                        name: J$.T(2997657, 'iqmp', 21, false),
                                        data: J$.M(2997697, J$.R(2997665, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(2997689, J$.R(2997673, 'rsaParams', rsaParams, false, false), J$.T(2997681, 'iqmp', 21, false)))
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(2997761, J$.F(2997753, J$.R(2997737, 'PrivateKey', PrivateKey, false, true), true)(J$.R(2997745, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(3001625, J$e);
                        } finally {
                            if (J$.Fr(3001633))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readDNSSECPrivateKey(alg, elements) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2998433, arguments.callee, this, arguments);
                            arguments = J$.N(2998441, 'arguments', arguments, true, false, false);
                            alg = J$.N(2998449, 'alg', alg, true, false, false);
                            elements = J$.N(2998457, 'elements', elements, true, false, false);
                            J$.N(2998465, 'd', d, false, false, false);
                            J$.N(2998473, 'curve', curve, false, false, false);
                            J$.N(2998481, 'size', size, false, false, false);
                            J$.N(2998489, 'publicKey', publicKey, false, false, false);
                            J$.N(2998497, 'Q', Q, false, false, false);
                            J$.N(2998505, 'ecdsaKey', ecdsaKey, false, false, false);
                            if (J$.C(170696, J$.M(2997841, J$.G(2997825, J$.R(2997809, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2997817, 'alg', alg, false, false)), 'match', false)(J$.T(2997833, /^RSA-/, 14, false)))) {
                                return J$.Rt(2997873, J$.F(2997865, J$.R(2997849, 'readDNSSECRSAPrivateKey', readDNSSECRSAPrivateKey, false, true), false)(J$.R(2997857, 'elements', elements, false, false)));
                            }
                            if (J$.C(170720, J$.C(170704, J$.B(316194, '===', J$.G(2997897, J$.R(2997881, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2997889, 'alg', alg, false, false)), J$.T(2997905, 'ECDSA-P384-SHA384', 21, false))) ? J$._() : J$.B(316202, '===', J$.G(2997929, J$.R(2997913, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2997921, 'alg', alg, false, false)), J$.T(2997937, 'ECDSA-P256-SHA256', 21, false)))) {
                                var d = J$.W(2998025, 'd', J$.M(2998017, J$.R(2997945, 'Buffer', Buffer, false, true), 'from', false)(J$.G(2998001, J$.M(2997985, J$.G(2997969, J$.R(2997953, 'elements', elements, false, false), J$.T(2997961, 0, 22, false)), 'split', false)(J$.T(2997977, ' ', 21, false)), J$.T(2997993, 1, 22, false)), J$.T(2998009, 'base64', 21, false)), d, false, false);
                                var curve = J$.W(2998041, 'curve', J$.T(2998033, 'nistp384', 21, false), curve, false, false);
                                var size = J$.W(2998057, 'size', J$.T(2998049, 384, 22, false), size, false, false);
                                if (J$.C(170712, J$.B(316210, '===', J$.G(2998081, J$.R(2998065, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2998073, 'alg', alg, false, false)), J$.T(2998089, 'ECDSA-P256-SHA256', 21, false)))) {
                                    curve = J$.W(2998105, 'curve', J$.T(2998097, 'nistp256', 21, false), curve, false, false);
                                    size = J$.W(2998121, 'size', J$.T(2998113, 256, 22, false), size, false, false);
                                }
                                var publicKey = J$.W(2998161, 'publicKey', J$.M(2998153, J$.R(2998129, 'utils', utils, false, true), 'publicFromPrivateECDSA', false)(J$.R(2998137, 'curve', curve, false, false), J$.R(2998145, 'd', d, false, false)), publicKey, false, false);
                                var Q = J$.W(2998209, 'Q', J$.G(2998201, J$.G(2998193, J$.G(2998177, J$.R(2998169, 'publicKey', publicKey, false, false), 'part'), J$.T(2998185, 'Q', 21, false)), 'data'), Q, false, false);
                                var ecdsaKey = J$.W(2998345, 'ecdsaKey', J$.T(2998337, {
                                    type: J$.T(2998217, 'ecdsa', 21, false),
                                    curve: J$.R(2998225, 'curve', curve, false, false),
                                    size: J$.R(2998233, 'size', size, false, false),
                                    parts: J$.T(2998329, [
                                        J$.T(2998273, {
                                            name: J$.T(2998241, 'curve', 21, false),
                                            data: J$.M(2998265, J$.R(2998249, 'Buffer', Buffer, false, true), 'from', false)(J$.R(2998257, 'curve', curve, false, false))
                                        }, 11, false),
                                        J$.T(2998297, {
                                            name: J$.T(2998281, 'd', 21, false),
                                            data: J$.R(2998289, 'd', d, false, false)
                                        }, 11, false),
                                        J$.T(2998321, {
                                            name: J$.T(2998305, 'Q', 21, false),
                                            data: J$.R(2998313, 'Q', Q, false, false)
                                        }, 11, false)
                                    ], 10, false)
                                }, 11, false), ecdsaKey, false, false);
                                return J$.Rt(2998377, J$.F(2998369, J$.R(2998353, 'PrivateKey', PrivateKey, false, true), true)(J$.R(2998361, 'ecdsaKey', ecdsaKey, false, false)));
                            }
                            throw J$.F(2998425, J$.I(typeof Error === 'undefined' ? Error = J$.R(2998385, 'Error', undefined, true, true) : Error = J$.R(2998385, 'Error', Error, true, true)), true)(J$.B(316218, '+', J$.T(2998393, 'Unsupported algorithm: ', 21, false), J$.G(2998417, J$.R(2998401, 'supportedAlgosById', supportedAlgosById, false, true), J$.R(2998409, 'alg', alg, false, false))));
                        } catch (J$e) {
                            J$.Ex(3001641, J$e);
                        } finally {
                            if (J$.Fr(3001649))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function dnssecTimestamp(date) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2998721, arguments.callee, this, arguments);
                            arguments = J$.N(2998729, 'arguments', arguments, true, false, false);
                            date = J$.N(2998737, 'date', date, true, false, false);
                            J$.N(2998745, 'year', year, false, false, false);
                            J$.N(2998753, 'month', month, false, false, false);
                            J$.N(2998761, 'timestampStr', timestampStr, false, false, false);
                            var year = J$.W(2998537, 'year', J$.B(316226, '+', J$.M(2998521, J$.R(2998513, 'date', date, false, false), 'getFullYear', false)(), J$.T(2998529, '', 21, false)), year, false, false);
                            var month = J$.W(2998569, 'month', J$.B(316234, '+', J$.M(2998553, J$.R(2998545, 'date', date, false, false), 'getMonth', false)(), J$.T(2998561, 1, 22, false)), month, false, false);
                            var timestampStr = J$.W(2998609, 'timestampStr', J$.B(316250, '+', J$.B(316242, '+', J$.R(2998577, 'year', year, false, false), J$.R(2998585, 'month', month, false, false)), J$.M(2998601, J$.R(2998593, 'date', date, false, false), 'getUTCDate', false)()), timestampStr, false, false);
                            timestampStr = J$.W(2998665, 'timestampStr', J$.B(316274, '+', J$.R(2998657, 'timestampStr', timestampStr, false, false), J$.B(316266, '+', J$.B(316258, '+', J$.T(2998617, '', 21, false), J$.M(2998633, J$.R(2998625, 'date', date, false, false), 'getUTCHours', false)()), J$.M(2998649, J$.R(2998641, 'date', date, false, false), 'getUTCMinutes', false)())), timestampStr, false, false);
                            timestampStr = J$.W(2998697, 'timestampStr', J$.B(316282, '+', J$.R(2998689, 'timestampStr', timestampStr, false, false), J$.M(2998681, J$.R(2998673, 'date', date, false, false), 'getUTCSeconds', false)()), timestampStr, false, false);
                            return J$.Rt(2998713, J$.R(2998705, 'timestampStr', timestampStr, false, false));
                        } catch (J$e) {
                            J$.Ex(3001657, J$e);
                        } finally {
                            if (J$.Fr(3001665))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function rsaAlgFromOptions(opts) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2998953, arguments.callee, this, arguments);
                            arguments = J$.N(2998961, 'arguments', arguments, true, false, false);
                            opts = J$.N(2998969, 'opts', opts, true, false, false);
                            if (J$.C(170760, J$.C(170736, J$.C(170728, J$.U(316290, '!', J$.R(2998769, 'opts', opts, false, false))) ? J$._() : J$.U(316298, '!', J$.G(2998785, J$.R(2998777, 'opts', opts, false, false), 'hashAlgo'))) ? J$._() : J$.B(316306, '===', J$.G(2998801, J$.R(2998793, 'opts', opts, false, false), 'hashAlgo'), J$.T(2998809, 'sha1', 21, false))))
                                return J$.Rt(2998825, J$.T(2998817, '5 (RSASHA1)', 21, false));
                            else if (J$.C(170752, J$.B(316314, '===', J$.G(2998841, J$.R(2998833, 'opts', opts, false, false), 'hashAlgo'), J$.T(2998849, 'sha256', 21, false))))
                                return J$.Rt(2998865, J$.T(2998857, '8 (RSASHA256)', 21, false));
                            else if (J$.C(170744, J$.B(316322, '===', J$.G(2998881, J$.R(2998873, 'opts', opts, false, false), 'hashAlgo'), J$.T(2998889, 'sha512', 21, false))))
                                return J$.Rt(2998905, J$.T(2998897, '10 (RSASHA512)', 21, false));
                            else
                                throw J$.F(2998945, J$.I(typeof Error === 'undefined' ? Error = J$.R(2998913, 'Error', undefined, true, true) : Error = J$.R(2998913, 'Error', Error, true, true)), true)(J$.B(316330, '+', J$.T(2998921, 'Unknown or unsupported hash: ', 21, false), J$.G(2998937, J$.R(2998929, 'opts', opts, false, false), 'hashAlgo')));
                        } catch (J$e) {
                            J$.Ex(3001673, J$e);
                        } finally {
                            if (J$.Fr(3001681))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writeRSA(key, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(3000337, arguments.callee, this, arguments);
                            arguments = J$.N(3000345, 'arguments', arguments, true, false, false);
                            key = J$.N(3000353, 'key', key, true, false, false);
                            options = J$.N(3000361, 'options', options, true, false, false);
                            J$.N(3000369, 'out', out, false, false, false);
                            J$.N(3000377, 'n', n, false, false, false);
                            J$.N(3000385, 'e', e, false, false, false);
                            J$.N(3000393, 'd', d, false, false, false);
                            J$.N(3000401, 'p', p, false, false, false);
                            J$.N(3000409, 'q', q, false, false, false);
                            J$.N(3000417, 'dmodp', dmodp, false, false, false);
                            J$.N(3000425, 'dmodq', dmodq, false, false, false);
                            J$.N(3000433, 'iqmp', iqmp, false, false, false);
                            J$.N(3000441, 'timestamp', timestamp, false, false, false);
                            if (J$.C(170776, J$.C(170768, J$.U(316338, '!', J$.G(2998993, J$.G(2998985, J$.R(2998977, 'key', key, false, false), 'part'), 'dmodp'))) ? J$._() : J$.U(316346, '!', J$.G(2999017, J$.G(2999009, J$.R(2999001, 'key', key, false, false), 'part'), 'dmodq')))) {
                                J$.M(2999041, J$.R(2999025, 'utils', utils, false, true), 'addRSAMissing', false)(J$.R(2999033, 'key', key, false, false));
                            }
                            var out = J$.W(2999057, 'out', J$.T(2999049, '', 21, false), out, false, false);
                            out = J$.W(2999081, 'out', J$.B(316354, '+', J$.R(2999073, 'out', out, false, false), J$.T(2999065, 'Private-key-format: v1.3\n', 21, false)), out, false, false);
                            out = J$.W(2999137, 'out', J$.B(316378, '+', J$.R(2999129, 'out', out, false, false), J$.B(316370, '+', J$.B(316362, '+', J$.T(2999089, 'Algorithm: ', 21, false), J$.F(2999113, J$.R(2999097, 'rsaAlgFromOptions', rsaAlgFromOptions, false, true), false)(J$.R(2999105, 'options', options, false, false))), J$.T(2999121, '\n', 21, false))), out, false, false);
                            var n = J$.W(2999201, 'n', J$.M(2999193, J$.R(2999145, 'utils', utils, false, true), 'mpDenormalize', false)(J$.G(2999185, J$.G(2999177, J$.G(2999161, J$.R(2999153, 'key', key, false, false), 'part'), J$.T(2999169, 'n', 21, false)), 'data')), n, false, false);
                            out = J$.W(2999257, 'out', J$.B(316402, '+', J$.R(2999249, 'out', out, false, false), J$.B(316394, '+', J$.B(316386, '+', J$.T(2999209, 'Modulus: ', 21, false), J$.M(2999233, J$.R(2999217, 'n', n, false, false), 'toString', false)(J$.T(2999225, 'base64', 21, false))), J$.T(2999241, '\n', 21, false))), out, false, false);
                            var e = J$.W(2999321, 'e', J$.M(2999313, J$.R(2999265, 'utils', utils, false, true), 'mpDenormalize', false)(J$.G(2999305, J$.G(2999297, J$.G(2999281, J$.R(2999273, 'key', key, false, false), 'part'), J$.T(2999289, 'e', 21, false)), 'data')), e, false, false);
                            out = J$.W(2999377, 'out', J$.B(316426, '+', J$.R(2999369, 'out', out, false, false), J$.B(316418, '+', J$.B(316410, '+', J$.T(2999329, 'PublicExponent: ', 21, false), J$.M(2999353, J$.R(2999337, 'e', e, false, false), 'toString', false)(J$.T(2999345, 'base64', 21, false))), J$.T(2999361, '\n', 21, false))), out, false, false);
                            var d = J$.W(2999441, 'd', J$.M(2999433, J$.R(2999385, 'utils', utils, false, true), 'mpDenormalize', false)(J$.G(2999425, J$.G(2999417, J$.G(2999401, J$.R(2999393, 'key', key, false, false), 'part'), J$.T(2999409, 'd', 21, false)), 'data')), d, false, false);
                            out = J$.W(2999497, 'out', J$.B(316450, '+', J$.R(2999489, 'out', out, false, false), J$.B(316442, '+', J$.B(316434, '+', J$.T(2999449, 'PrivateExponent: ', 21, false), J$.M(2999473, J$.R(2999457, 'd', d, false, false), 'toString', false)(J$.T(2999465, 'base64', 21, false))), J$.T(2999481, '\n', 21, false))), out, false, false);
                            var p = J$.W(2999561, 'p', J$.M(2999553, J$.R(2999505, 'utils', utils, false, true), 'mpDenormalize', false)(J$.G(2999545, J$.G(2999537, J$.G(2999521, J$.R(2999513, 'key', key, false, false), 'part'), J$.T(2999529, 'p', 21, false)), 'data')), p, false, false);
                            out = J$.W(2999617, 'out', J$.B(316474, '+', J$.R(2999609, 'out', out, false, false), J$.B(316466, '+', J$.B(316458, '+', J$.T(2999569, 'Prime1: ', 21, false), J$.M(2999593, J$.R(2999577, 'p', p, false, false), 'toString', false)(J$.T(2999585, 'base64', 21, false))), J$.T(2999601, '\n', 21, false))), out, false, false);
                            var q = J$.W(2999681, 'q', J$.M(2999673, J$.R(2999625, 'utils', utils, false, true), 'mpDenormalize', false)(J$.G(2999665, J$.G(2999657, J$.G(2999641, J$.R(2999633, 'key', key, false, false), 'part'), J$.T(2999649, 'q', 21, false)), 'data')), q, false, false);
                            out = J$.W(2999737, 'out', J$.B(316498, '+', J$.R(2999729, 'out', out, false, false), J$.B(316490, '+', J$.B(316482, '+', J$.T(2999689, 'Prime2: ', 21, false), J$.M(2999713, J$.R(2999697, 'q', q, false, false), 'toString', false)(J$.T(2999705, 'base64', 21, false))), J$.T(2999721, '\n', 21, false))), out, false, false);
                            var dmodp = J$.W(2999801, 'dmodp', J$.M(2999793, J$.R(2999745, 'utils', utils, false, true), 'mpDenormalize', false)(J$.G(2999785, J$.G(2999777, J$.G(2999761, J$.R(2999753, 'key', key, false, false), 'part'), J$.T(2999769, 'dmodp', 21, false)), 'data')), dmodp, false, false);
                            out = J$.W(2999857, 'out', J$.B(316522, '+', J$.R(2999849, 'out', out, false, false), J$.B(316514, '+', J$.B(316506, '+', J$.T(2999809, 'Exponent1: ', 21, false), J$.M(2999833, J$.R(2999817, 'dmodp', dmodp, false, false), 'toString', false)(J$.T(2999825, 'base64', 21, false))), J$.T(2999841, '\n', 21, false))), out, false, false);
                            var dmodq = J$.W(2999921, 'dmodq', J$.M(2999913, J$.R(2999865, 'utils', utils, false, true), 'mpDenormalize', false)(J$.G(2999905, J$.G(2999897, J$.G(2999881, J$.R(2999873, 'key', key, false, false), 'part'), J$.T(2999889, 'dmodq', 21, false)), 'data')), dmodq, false, false);
                            out = J$.W(2999977, 'out', J$.B(316546, '+', J$.R(2999969, 'out', out, false, false), J$.B(316538, '+', J$.B(316530, '+', J$.T(2999929, 'Exponent2: ', 21, false), J$.M(2999953, J$.R(2999937, 'dmodq', dmodq, false, false), 'toString', false)(J$.T(2999945, 'base64', 21, false))), J$.T(2999961, '\n', 21, false))), out, false, false);
                            var iqmp = J$.W(3000041, 'iqmp', J$.M(3000033, J$.R(2999985, 'utils', utils, false, true), 'mpDenormalize', false)(J$.G(3000025, J$.G(3000017, J$.G(3000001, J$.R(2999993, 'key', key, false, false), 'part'), J$.T(3000009, 'iqmp', 21, false)), 'data')), iqmp, false, false);
                            out = J$.W(3000097, 'out', J$.B(316570, '+', J$.R(3000089, 'out', out, false, false), J$.B(316562, '+', J$.B(316554, '+', J$.T(3000049, 'Coefficient: ', 21, false), J$.M(3000073, J$.R(3000057, 'iqmp', iqmp, false, false), 'toString', false)(J$.T(3000065, 'base64', 21, false))), J$.T(3000081, '\n', 21, false))), out, false, false);
                            var timestamp = J$.W(3000121, 'timestamp', J$.F(3000113, J$.I(typeof Date === 'undefined' ? Date = J$.R(3000105, 'Date', undefined, true, true) : Date = J$.R(3000105, 'Date', Date, true, true)), true)(), timestamp, false, false);
                            out = J$.W(3000177, 'out', J$.B(316594, '+', J$.R(3000169, 'out', out, false, false), J$.B(316586, '+', J$.B(316578, '+', J$.T(3000129, 'Created: ', 21, false), J$.F(3000153, J$.R(3000137, 'dnssecTimestamp', dnssecTimestamp, false, true), false)(J$.R(3000145, 'timestamp', timestamp, false, false))), J$.T(3000161, '\n', 21, false))), out, false, false);
                            out = J$.W(3000233, 'out', J$.B(316618, '+', J$.R(3000225, 'out', out, false, false), J$.B(316610, '+', J$.B(316602, '+', J$.T(3000185, 'Publish: ', 21, false), J$.F(3000209, J$.R(3000193, 'dnssecTimestamp', dnssecTimestamp, false, true), false)(J$.R(3000201, 'timestamp', timestamp, false, false))), J$.T(3000217, '\n', 21, false))), out, false, false);
                            out = J$.W(3000289, 'out', J$.B(316642, '+', J$.R(3000281, 'out', out, false, false), J$.B(316634, '+', J$.B(316626, '+', J$.T(3000241, 'Activate: ', 21, false), J$.F(3000265, J$.R(3000249, 'dnssecTimestamp', dnssecTimestamp, false, true), false)(J$.R(3000257, 'timestamp', timestamp, false, false))), J$.T(3000273, '\n', 21, false))), out, false, false);
                            return J$.Rt(3000329, J$.M(3000321, J$.R(3000297, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3000305, 'out', out, false, false), J$.T(3000313, 'ascii', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3001689, J$e);
                        } finally {
                            if (J$.Fr(3001697))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writeECDSA(key, options) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(3000945, arguments.callee, this, arguments);
                            arguments = J$.N(3000953, 'arguments', arguments, true, false, false);
                            key = J$.N(3000961, 'key', key, true, false, false);
                            options = J$.N(3000969, 'options', options, true, false, false);
                            J$.N(3000977, 'out', out, false, false, false);
                            J$.N(3000985, 'base64Key', base64Key, false, false, false);
                            J$.N(3000993, 'timestamp', timestamp, false, false, false);
                            var out = J$.W(3000457, 'out', J$.T(3000449, '', 21, false), out, false, false);
                            out = J$.W(3000481, 'out', J$.B(316650, '+', J$.R(3000473, 'out', out, false, false), J$.T(3000465, 'Private-key-format: v1.3\n', 21, false)), out, false, false);
                            if (J$.C(170792, J$.B(316658, '===', J$.G(3000497, J$.R(3000489, 'key', key, false, false), 'curve'), J$.T(3000505, 'nistp256', 21, false)))) {
                                out = J$.W(3000529, 'out', J$.B(316666, '+', J$.R(3000521, 'out', out, false, false), J$.T(3000513, 'Algorithm: 13 (ECDSAP256SHA256)\n', 21, false)), out, false, false);
                            } else if (J$.C(170784, J$.B(316674, '===', J$.G(3000545, J$.R(3000537, 'key', key, false, false), 'curve'), J$.T(3000553, 'nistp384', 21, false)))) {
                                out = J$.W(3000577, 'out', J$.B(316682, '+', J$.R(3000569, 'out', out, false, false), J$.T(3000561, 'Algorithm: 14 (ECDSAP384SHA384)\n', 21, false)), out, false, false);
                            } else {
                                throw J$.F(3000601, J$.I(typeof Error === 'undefined' ? Error = J$.R(3000585, 'Error', undefined, true, true) : Error = J$.R(3000585, 'Error', Error, true, true)), true)(J$.T(3000593, 'Unsupported curve', 21, false));
                            }
                            var base64Key = J$.W(3000665, 'base64Key', J$.M(3000657, J$.G(3000641, J$.G(3000633, J$.G(3000617, J$.R(3000609, 'key', key, false, false), 'part'), J$.T(3000625, 'd', 21, false)), 'data'), 'toString', false)(J$.T(3000649, 'base64', 21, false)), base64Key, false, false);
                            out = J$.W(3000705, 'out', J$.B(316706, '+', J$.R(3000697, 'out', out, false, false), J$.B(316698, '+', J$.B(316690, '+', J$.T(3000673, 'PrivateKey: ', 21, false), J$.R(3000681, 'base64Key', base64Key, false, false)), J$.T(3000689, '\n', 21, false))), out, false, false);
                            var timestamp = J$.W(3000729, 'timestamp', J$.F(3000721, J$.I(typeof Date === 'undefined' ? Date = J$.R(3000713, 'Date', undefined, true, true) : Date = J$.R(3000713, 'Date', Date, true, true)), true)(), timestamp, false, false);
                            out = J$.W(3000785, 'out', J$.B(316730, '+', J$.R(3000777, 'out', out, false, false), J$.B(316722, '+', J$.B(316714, '+', J$.T(3000737, 'Created: ', 21, false), J$.F(3000761, J$.R(3000745, 'dnssecTimestamp', dnssecTimestamp, false, true), false)(J$.R(3000753, 'timestamp', timestamp, false, false))), J$.T(3000769, '\n', 21, false))), out, false, false);
                            out = J$.W(3000841, 'out', J$.B(316754, '+', J$.R(3000833, 'out', out, false, false), J$.B(316746, '+', J$.B(316738, '+', J$.T(3000793, 'Publish: ', 21, false), J$.F(3000817, J$.R(3000801, 'dnssecTimestamp', dnssecTimestamp, false, true), false)(J$.R(3000809, 'timestamp', timestamp, false, false))), J$.T(3000825, '\n', 21, false))), out, false, false);
                            out = J$.W(3000897, 'out', J$.B(316778, '+', J$.R(3000889, 'out', out, false, false), J$.B(316770, '+', J$.B(316762, '+', J$.T(3000849, 'Activate: ', 21, false), J$.F(3000873, J$.R(3000857, 'dnssecTimestamp', dnssecTimestamp, false, true), false)(J$.R(3000865, 'timestamp', timestamp, false, false))), J$.T(3000881, '\n', 21, false))), out, false, false);
                            return J$.Rt(3000937, J$.M(3000929, J$.R(3000905, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3000913, 'out', out, false, false), J$.T(3000921, 'ascii', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3001705, J$e);
                        } finally {
                            if (J$.Fr(3001713))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(3001273, arguments.callee, this, arguments);
                            arguments = J$.N(3001281, 'arguments', arguments, true, false, false);
                            key = J$.N(3001289, 'key', key, true, false, false);
                            options = J$.N(3001297, 'options', options, true, false, false);
                            if (J$.C(170824, J$.M(3001017, J$.R(3001001, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3001009, 'key', key, false, false)))) {
                                if (J$.C(170808, J$.B(316786, '===', J$.G(3001033, J$.R(3001025, 'key', key, false, false), 'type'), J$.T(3001041, 'rsa', 21, false)))) {
                                    return J$.Rt(3001081, J$.F(3001073, J$.R(3001049, 'writeRSA', writeRSA, false, true), false)(J$.R(3001057, 'key', key, false, false), J$.R(3001065, 'options', options, false, false)));
                                } else if (J$.C(170800, J$.B(316794, '===', J$.G(3001097, J$.R(3001089, 'key', key, false, false), 'type'), J$.T(3001105, 'ecdsa', 21, false)))) {
                                    return J$.Rt(3001145, J$.F(3001137, J$.R(3001113, 'writeECDSA', writeECDSA, false, true), false)(J$.R(3001121, 'key', key, false, false), J$.R(3001129, 'options', options, false, false)));
                                } else {
                                    throw J$.F(3001185, J$.I(typeof Error === 'undefined' ? Error = J$.R(3001153, 'Error', undefined, true, true) : Error = J$.R(3001153, 'Error', Error, true, true)), true)(J$.B(316802, '+', J$.T(3001161, 'Unsupported algorithm: ', 21, false), J$.G(3001177, J$.R(3001169, 'key', key, false, false), 'type')));
                                }
                            } else if (J$.C(170816, J$.M(3001209, J$.R(3001193, 'Key', Key, false, true), 'isKey', false)(J$.R(3001201, 'key', key, false, false)))) {
                                throw J$.F(3001241, J$.I(typeof Error === 'undefined' ? Error = J$.R(3001217, 'Error', undefined, true, true) : Error = J$.R(3001217, 'Error', Error, true, true)), true)(J$.B(316810, '+', J$.T(3001225, 'Format "dnssec" only supports ', 21, false), J$.T(3001233, 'writing private keys', 21, false)));
                            } else {
                                throw J$.F(3001265, J$.I(typeof Error === 'undefined' ? Error = J$.R(3001249, 'Error', undefined, true, true) : Error = J$.R(3001249, 'Error', Error, true, true)), true)(J$.T(3001257, 'key is not a Key or PrivateKey', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(3001721, J$e);
                        } finally {
                            if (J$.Fr(3001729))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3001313, 'assert', assert, false, false, false);
            J$.N(3001321, 'Buffer', Buffer, false, false, false);
            J$.N(3001329, 'Key', Key, false, false, false);
            J$.N(3001337, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(3001345, 'utils', utils, false, false, false);
            J$.N(3001353, 'SSHBuffer', SSHBuffer, false, false, false);
            J$.N(3001361, 'Dhe', Dhe, false, false, false);
            J$.N(3001369, 'supportedAlgos', supportedAlgos, false, false, false);
            J$.N(3001377, 'supportedAlgosById', supportedAlgosById, false, false, false);
            read = J$.N(3001393, 'read', J$.T(3001385, read, 12, false), true, false, false);
            readRFC3110 = J$.N(3001409, 'readRFC3110', J$.T(3001401, readRFC3110, 12, false), true, false, false);
            elementToBuf = J$.N(3001425, 'elementToBuf', J$.T(3001417, elementToBuf, 12, false), true, false, false);
            readDNSSECRSAPrivateKey = J$.N(3001441, 'readDNSSECRSAPrivateKey', J$.T(3001433, readDNSSECRSAPrivateKey, 12, false), true, false, false);
            readDNSSECPrivateKey = J$.N(3001457, 'readDNSSECPrivateKey', J$.T(3001449, readDNSSECPrivateKey, 12, false), true, false, false);
            dnssecTimestamp = J$.N(3001473, 'dnssecTimestamp', J$.T(3001465, dnssecTimestamp, 12, false), true, false, false);
            rsaAlgFromOptions = J$.N(3001489, 'rsaAlgFromOptions', J$.T(3001481, rsaAlgFromOptions, 12, false), true, false, false);
            writeRSA = J$.N(3001505, 'writeRSA', J$.T(3001497, writeRSA, 12, false), true, false, false);
            writeECDSA = J$.N(3001521, 'writeECDSA', J$.T(3001513, writeECDSA, 12, false), true, false, false);
            write = J$.N(3001537, 'write', J$.T(3001529, write, 12, false), true, false, false);
            J$.T(2992785, 'use strict', 21, false);
            J$.F(2992809, J$.I(typeof require === 'undefined' ? require = J$.R(2992793, 'require', undefined, true, true) : require = J$.R(2992793, 'require', require, true, true)), false)(J$.T(2992801, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2992833, J$.I(typeof require === 'undefined' ? require = J$.R(2992817, 'require', undefined, true, true) : require = J$.R(2992817, 'require', require, true, true)), false)(J$.T(2992825, 'core-js/modules/es.array.join', 21, false));
            J$.F(2992857, J$.I(typeof require === 'undefined' ? require = J$.R(2992841, 'require', undefined, true, true) : require = J$.R(2992841, 'require', require, true, true)), false)(J$.T(2992849, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2992881, J$.I(typeof require === 'undefined' ? require = J$.R(2992865, 'require', undefined, true, true) : require = J$.R(2992865, 'require', require, true, true)), false)(J$.T(2992873, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2992905, J$.I(typeof require === 'undefined' ? require = J$.R(2992889, 'require', undefined, true, true) : require = J$.R(2992889, 'require', require, true, true)), false)(J$.T(2992897, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2992929, J$.I(typeof require === 'undefined' ? require = J$.R(2992913, 'require', undefined, true, true) : require = J$.R(2992913, 'require', require, true, true)), false)(J$.T(2992921, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2992953, J$.I(typeof require === 'undefined' ? require = J$.R(2992937, 'require', undefined, true, true) : require = J$.R(2992937, 'require', require, true, true)), false)(J$.T(2992945, 'core-js/modules/es.parse-int', 21, false));
            J$.F(2992977, J$.I(typeof require === 'undefined' ? require = J$.R(2992961, 'require', undefined, true, true) : require = J$.R(2992961, 'require', require, true, true)), false)(J$.T(2992969, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2993001, J$.I(typeof require === 'undefined' ? require = J$.R(2992985, 'require', undefined, true, true) : require = J$.R(2992985, 'require', require, true, true)), false)(J$.T(2992993, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2993025, J$.I(typeof require === 'undefined' ? require = J$.R(2993009, 'require', undefined, true, true) : require = J$.R(2993009, 'require', require, true, true)), false)(J$.T(2993017, 'core-js/modules/es.string.match', 21, false));
            J$.F(2993049, J$.I(typeof require === 'undefined' ? require = J$.R(2993033, 'require', undefined, true, true) : require = J$.R(2993033, 'require', require, true, true)), false)(J$.T(2993041, 'core-js/modules/es.string.split', 21, false));
            J$.F(2993073, J$.I(typeof require === 'undefined' ? require = J$.R(2993057, 'require', undefined, true, true) : require = J$.R(2993057, 'require', require, true, true)), false)(J$.T(2993065, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(2993097, J$.I(typeof require === 'undefined' ? require = J$.R(2993081, 'require', undefined, true, true) : require = J$.R(2993081, 'require', require, true, true)), false)(J$.T(2993089, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2993121, J$.I(typeof require === 'undefined' ? require = J$.R(2993105, 'require', undefined, true, true) : require = J$.R(2993105, 'require', require, true, true)), false)(J$.T(2993113, 'core-js/modules/es.array.join', 21, false));
            J$.F(2993145, J$.I(typeof require === 'undefined' ? require = J$.R(2993129, 'require', undefined, true, true) : require = J$.R(2993129, 'require', require, true, true)), false)(J$.T(2993137, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2993169, J$.I(typeof require === 'undefined' ? require = J$.R(2993153, 'require', undefined, true, true) : require = J$.R(2993153, 'require', require, true, true)), false)(J$.T(2993161, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2993193, J$.I(typeof require === 'undefined' ? require = J$.R(2993177, 'require', undefined, true, true) : require = J$.R(2993177, 'require', require, true, true)), false)(J$.T(2993185, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2993217, J$.I(typeof require === 'undefined' ? require = J$.R(2993201, 'require', undefined, true, true) : require = J$.R(2993201, 'require', require, true, true)), false)(J$.T(2993209, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2993241, J$.I(typeof require === 'undefined' ? require = J$.R(2993225, 'require', undefined, true, true) : require = J$.R(2993225, 'require', require, true, true)), false)(J$.T(2993233, 'core-js/modules/es.parse-int', 21, false));
            J$.F(2993265, J$.I(typeof require === 'undefined' ? require = J$.R(2993249, 'require', undefined, true, true) : require = J$.R(2993249, 'require', require, true, true)), false)(J$.T(2993257, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2993289, J$.I(typeof require === 'undefined' ? require = J$.R(2993273, 'require', undefined, true, true) : require = J$.R(2993273, 'require', require, true, true)), false)(J$.T(2993281, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2993313, J$.I(typeof require === 'undefined' ? require = J$.R(2993297, 'require', undefined, true, true) : require = J$.R(2993297, 'require', require, true, true)), false)(J$.T(2993305, 'core-js/modules/es.string.match', 21, false));
            J$.F(2993337, J$.I(typeof require === 'undefined' ? require = J$.R(2993321, 'require', undefined, true, true) : require = J$.R(2993321, 'require', require, true, true)), false)(J$.T(2993329, 'core-js/modules/es.string.split', 21, false));
            J$.F(2993361, J$.I(typeof require === 'undefined' ? require = J$.R(2993345, 'require', undefined, true, true) : require = J$.R(2993345, 'require', require, true, true)), false)(J$.T(2993353, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(2993385, J$.I(typeof require === 'undefined' ? require = J$.R(2993369, 'require', undefined, true, true) : require = J$.R(2993369, 'require', require, true, true)), false)(J$.T(2993377, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2993409, J$.I(typeof require === 'undefined' ? require = J$.R(2993393, 'require', undefined, true, true) : require = J$.R(2993393, 'require', require, true, true)), false)(J$.T(2993401, 'core-js/modules/es.array.join', 21, false));
            J$.F(2993433, J$.I(typeof require === 'undefined' ? require = J$.R(2993417, 'require', undefined, true, true) : require = J$.R(2993417, 'require', require, true, true)), false)(J$.T(2993425, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2993457, J$.I(typeof require === 'undefined' ? require = J$.R(2993441, 'require', undefined, true, true) : require = J$.R(2993441, 'require', require, true, true)), false)(J$.T(2993449, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2993481, J$.I(typeof require === 'undefined' ? require = J$.R(2993465, 'require', undefined, true, true) : require = J$.R(2993465, 'require', require, true, true)), false)(J$.T(2993473, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2993505, J$.I(typeof require === 'undefined' ? require = J$.R(2993489, 'require', undefined, true, true) : require = J$.R(2993489, 'require', require, true, true)), false)(J$.T(2993497, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2993529, J$.I(typeof require === 'undefined' ? require = J$.R(2993513, 'require', undefined, true, true) : require = J$.R(2993513, 'require', require, true, true)), false)(J$.T(2993521, 'core-js/modules/es.parse-int', 21, false));
            J$.F(2993553, J$.I(typeof require === 'undefined' ? require = J$.R(2993537, 'require', undefined, true, true) : require = J$.R(2993537, 'require', require, true, true)), false)(J$.T(2993545, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2993577, J$.I(typeof require === 'undefined' ? require = J$.R(2993561, 'require', undefined, true, true) : require = J$.R(2993561, 'require', require, true, true)), false)(J$.T(2993569, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2993601, J$.I(typeof require === 'undefined' ? require = J$.R(2993585, 'require', undefined, true, true) : require = J$.R(2993585, 'require', require, true, true)), false)(J$.T(2993593, 'core-js/modules/es.string.match', 21, false));
            J$.F(2993625, J$.I(typeof require === 'undefined' ? require = J$.R(2993609, 'require', undefined, true, true) : require = J$.R(2993609, 'require', require, true, true)), false)(J$.T(2993617, 'core-js/modules/es.string.split', 21, false));
            J$.F(2993649, J$.I(typeof require === 'undefined' ? require = J$.R(2993633, 'require', undefined, true, true) : require = J$.R(2993633, 'require', require, true, true)), false)(J$.T(2993641, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(2993673, J$.I(typeof require === 'undefined' ? require = J$.R(2993657, 'require', undefined, true, true) : require = J$.R(2993657, 'require', require, true, true)), false)(J$.T(2993665, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(2993697, J$.I(typeof require === 'undefined' ? require = J$.R(2993681, 'require', undefined, true, true) : require = J$.R(2993681, 'require', require, true, true)), false)(J$.T(2993689, 'core-js/modules/es.array.join', 21, false));
            J$.F(2993721, J$.I(typeof require === 'undefined' ? require = J$.R(2993705, 'require', undefined, true, true) : require = J$.R(2993705, 'require', require, true, true)), false)(J$.T(2993713, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2993745, J$.I(typeof require === 'undefined' ? require = J$.R(2993729, 'require', undefined, true, true) : require = J$.R(2993729, 'require', require, true, true)), false)(J$.T(2993737, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2993769, J$.I(typeof require === 'undefined' ? require = J$.R(2993753, 'require', undefined, true, true) : require = J$.R(2993753, 'require', require, true, true)), false)(J$.T(2993761, 'core-js/modules/es.object.keys', 21, false));
            J$.F(2993793, J$.I(typeof require === 'undefined' ? require = J$.R(2993777, 'require', undefined, true, true) : require = J$.R(2993777, 'require', require, true, true)), false)(J$.T(2993785, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2993817, J$.I(typeof require === 'undefined' ? require = J$.R(2993801, 'require', undefined, true, true) : require = J$.R(2993801, 'require', require, true, true)), false)(J$.T(2993809, 'core-js/modules/es.parse-int', 21, false));
            J$.F(2993841, J$.I(typeof require === 'undefined' ? require = J$.R(2993825, 'require', undefined, true, true) : require = J$.R(2993825, 'require', require, true, true)), false)(J$.T(2993833, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2993865, J$.I(typeof require === 'undefined' ? require = J$.R(2993849, 'require', undefined, true, true) : require = J$.R(2993849, 'require', require, true, true)), false)(J$.T(2993857, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2993889, J$.I(typeof require === 'undefined' ? require = J$.R(2993873, 'require', undefined, true, true) : require = J$.R(2993873, 'require', require, true, true)), false)(J$.T(2993881, 'core-js/modules/es.string.match', 21, false));
            J$.F(2993913, J$.I(typeof require === 'undefined' ? require = J$.R(2993897, 'require', undefined, true, true) : require = J$.R(2993897, 'require', require, true, true)), false)(J$.T(2993905, 'core-js/modules/es.string.split', 21, false));
            J$.F(2993937, J$.I(typeof require === 'undefined' ? require = J$.R(2993921, 'require', undefined, true, true) : require = J$.R(2993921, 'require', require, true, true)), false)(J$.T(2993929, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.P(2993977, J$.I(typeof module === 'undefined' ? module = J$.R(2993945, 'module', undefined, true, true) : module = J$.R(2993945, 'module', module, true, true)), 'exports', J$.T(2993969, {
                read: J$.R(2993953, 'read', read, false, true),
                write: J$.R(2993961, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(2994009, 'assert', J$.F(2994001, J$.I(typeof require === 'undefined' ? require = J$.R(2993985, 'require', undefined, true, true) : require = J$.R(2993985, 'require', require, true, true)), false)(J$.T(2993993, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(2994049, 'Buffer', J$.G(2994041, J$.F(2994033, J$.I(typeof require === 'undefined' ? require = J$.R(2994017, 'require', undefined, true, true) : require = J$.R(2994017, 'require', require, true, true)), false)(J$.T(2994025, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var Key = J$.W(2994081, 'Key', J$.F(2994073, J$.I(typeof require === 'undefined' ? require = J$.R(2994057, 'require', undefined, true, true) : require = J$.R(2994057, 'require', require, true, true)), false)(J$.T(2994065, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(2994113, 'PrivateKey', J$.F(2994105, J$.I(typeof require === 'undefined' ? require = J$.R(2994089, 'require', undefined, true, true) : require = J$.R(2994089, 'require', require, true, true)), false)(J$.T(2994097, '../private-key', 21, false)), PrivateKey, false, true);
            var utils = J$.W(2994145, 'utils', J$.F(2994137, J$.I(typeof require === 'undefined' ? require = J$.R(2994121, 'require', undefined, true, true) : require = J$.R(2994121, 'require', require, true, true)), false)(J$.T(2994129, '../utils', 21, false)), utils, false, true);
            var SSHBuffer = J$.W(2994177, 'SSHBuffer', J$.F(2994169, J$.I(typeof require === 'undefined' ? require = J$.R(2994153, 'require', undefined, true, true) : require = J$.R(2994153, 'require', require, true, true)), false)(J$.T(2994161, '../ssh-buffer', 21, false)), SSHBuffer, false, true);
            var Dhe = J$.W(2994209, 'Dhe', J$.F(2994201, J$.I(typeof require === 'undefined' ? require = J$.R(2994185, 'require', undefined, true, true) : require = J$.R(2994185, 'require', require, true, true)), false)(J$.T(2994193, '../dhe', 21, false)), Dhe, false, true);
            var supportedAlgos = J$.W(2994265, 'supportedAlgos', J$.T(2994257, {
                'rsa-sha1': J$.T(2994217, 5, 22, false),
                'rsa-sha256': J$.T(2994225, 8, 22, false),
                'rsa-sha512': J$.T(2994233, 10, 22, false),
                'ecdsa-p256-sha256': J$.T(2994241, 13, 22, false),
                'ecdsa-p384-sha384': J$.T(2994249, 14, 22, false)
            }, 11, false), supportedAlgos, false, true);
            var supportedAlgosById = J$.W(2994281, 'supportedAlgosById', J$.T(2994273, {}, 11, false), supportedAlgosById, false, true);
            J$.M(2994401, J$.M(2994305, J$.I(typeof Object === 'undefined' ? Object = J$.R(2994289, 'Object', undefined, true, true) : Object = J$.R(2994289, 'Object', Object, true, true)), 'keys', false)(J$.R(2994297, 'supportedAlgos', supportedAlgos, false, true)), 'forEach', false)(J$.T(2994393, function (k) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2994369, arguments.callee, this, arguments);
                            arguments = J$.N(2994377, 'arguments', arguments, true, false, false);
                            k = J$.N(2994385, 'k', k, true, false, false);
                            J$.P(2994361, J$.R(2994313, 'supportedAlgosById', supportedAlgosById, false, true), J$.G(2994337, J$.R(2994321, 'supportedAlgos', supportedAlgos, false, true), J$.R(2994329, 'k', k, false, false)), J$.M(2994353, J$.R(2994345, 'k', k, false, false), 'toUpperCase', false)());
                        } catch (J$e) {
                            J$.Ex(3001545, J$e);
                        } finally {
                            if (J$.Fr(3001553))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3001737, J$e);
        } finally {
            if (J$.Sr(3001745))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

