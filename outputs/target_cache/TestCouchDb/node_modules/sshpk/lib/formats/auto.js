J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(2992481, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/sshpk/lib/formats/auto.js');
            function read(buf, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2990673, arguments.callee, this, arguments);
                            arguments = J$.N(2990681, 'arguments', arguments, true, false, false);
                            buf = J$.N(2990689, 'buf', buf, true, false, false);
                            options = J$.N(2990697, 'options', options, true, false, false);
                            if (J$.C(170264, J$.B(315570, '===', J$.U(315562, 'typeof', J$.R(2989905, 'buf', buf, false, false)), J$.T(2989913, 'string', 21, false)))) {
                                if (J$.C(170192, J$.M(2989945, J$.M(2989929, J$.R(2989921, 'buf', buf, false, false), 'trim', false)(), 'match', false)(J$.T(2989937, /^[-]+[ ]*BEGIN/, 14, false))))
                                    return J$.Rt(2989985, J$.M(2989977, J$.R(2989953, 'pem', pem, false, true), 'read', false)(J$.R(2989961, 'buf', buf, false, false), J$.R(2989969, 'options', options, false, false)));
                                if (J$.C(170200, J$.M(2990009, J$.R(2989993, 'buf', buf, false, false), 'match', false)(J$.T(2990001, /^\s*ssh-[a-z]/, 14, false))))
                                    return J$.Rt(2990049, J$.M(2990041, J$.R(2990017, 'ssh', ssh, false, true), 'read', false)(J$.R(2990025, 'buf', buf, false, false), J$.R(2990033, 'options', options, false, false)));
                                if (J$.C(170208, J$.M(2990073, J$.R(2990057, 'buf', buf, false, false), 'match', false)(J$.T(2990065, /^\s*ecdsa-/, 14, false))))
                                    return J$.Rt(2990113, J$.M(2990105, J$.R(2990081, 'ssh', ssh, false, true), 'read', false)(J$.R(2990089, 'buf', buf, false, false), J$.R(2990097, 'options', options, false, false)));
                                if (J$.C(170216, J$.M(2990137, J$.R(2990121, 'buf', buf, false, false), 'match', false)(J$.T(2990129, /^putty-user-key-file-2:/i, 14, false))))
                                    return J$.Rt(2990177, J$.M(2990169, J$.R(2990145, 'putty', putty, false, true), 'read', false)(J$.R(2990153, 'buf', buf, false, false), J$.R(2990161, 'options', options, false, false)));
                                if (J$.C(170224, J$.F(2990201, J$.R(2990185, 'findDNSSECHeader', findDNSSECHeader, false, true), false)(J$.R(2990193, 'buf', buf, false, false))))
                                    return J$.Rt(2990241, J$.M(2990233, J$.R(2990209, 'dnssec', dnssec, false, true), 'read', false)(J$.R(2990217, 'buf', buf, false, false), J$.R(2990225, 'options', options, false, false)));
                                buf = J$.W(2990281, 'buf', J$.M(2990273, J$.R(2990249, 'Buffer', Buffer, false, true), 'from', false)(J$.R(2990257, 'buf', buf, false, false), J$.T(2990265, 'binary', 21, false)), buf, false, false);
                            } else {
                                J$.M(2990305, J$.R(2990289, 'assert', assert, false, true), 'buffer', false)(J$.R(2990297, 'buf', buf, false, false));
                                if (J$.C(170232, J$.F(2990329, J$.R(2990313, 'findPEMHeader', findPEMHeader, false, true), false)(J$.R(2990321, 'buf', buf, false, false))))
                                    return J$.Rt(2990369, J$.M(2990361, J$.R(2990337, 'pem', pem, false, true), 'read', false)(J$.R(2990345, 'buf', buf, false, false), J$.R(2990353, 'options', options, false, false)));
                                if (J$.C(170240, J$.F(2990393, J$.R(2990377, 'findSSHHeader', findSSHHeader, false, true), false)(J$.R(2990385, 'buf', buf, false, false))))
                                    return J$.Rt(2990433, J$.M(2990425, J$.R(2990401, 'ssh', ssh, false, true), 'read', false)(J$.R(2990409, 'buf', buf, false, false), J$.R(2990417, 'options', options, false, false)));
                                if (J$.C(170248, J$.F(2990457, J$.R(2990441, 'findPuTTYHeader', findPuTTYHeader, false, true), false)(J$.R(2990449, 'buf', buf, false, false))))
                                    return J$.Rt(2990497, J$.M(2990489, J$.R(2990465, 'putty', putty, false, true), 'read', false)(J$.R(2990473, 'buf', buf, false, false), J$.R(2990481, 'options', options, false, false)));
                                if (J$.C(170256, J$.F(2990521, J$.R(2990505, 'findDNSSECHeader', findDNSSECHeader, false, true), false)(J$.R(2990513, 'buf', buf, false, false))))
                                    return J$.Rt(2990561, J$.M(2990553, J$.R(2990529, 'dnssec', dnssec, false, true), 'read', false)(J$.R(2990537, 'buf', buf, false, false), J$.R(2990545, 'options', options, false, false)));
                            }
                            if (J$.C(170272, J$.B(315578, '<', J$.M(2990585, J$.R(2990569, 'buf', buf, false, false), 'readUInt32BE', false)(J$.T(2990577, 0, 22, false)), J$.G(2990601, J$.R(2990593, 'buf', buf, false, false), 'length'))))
                                return J$.Rt(2990641, J$.M(2990633, J$.R(2990609, 'rfc4253', rfc4253, false, true), 'read', false)(J$.R(2990617, 'buf', buf, false, false), J$.R(2990625, 'options', options, false, false)));
                            throw J$.F(2990665, J$.I(typeof Error === 'undefined' ? Error = J$.R(2990649, 'Error', undefined, true, true) : Error = J$.R(2990649, 'Error', Error, true, true)), true)(J$.T(2990657, 'Failed to auto-detect format of key', 21, false));
                        } catch (J$e) {
                            J$.Ex(2992673, J$e);
                        } finally {
                            if (J$.Fr(2992681))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function findPuTTYHeader(buf) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2990993, arguments.callee, this, arguments);
                            arguments = J$.N(2991001, 'arguments', arguments, true, false, false);
                            buf = J$.N(2991009, 'buf', buf, true, false, false);
                            J$.N(2991017, 'offset', offset, false, false, false);
                            var offset = J$.W(2990713, 'offset', J$.T(2990705, 0, 22, false), offset, false, false);
                            while (J$.C(170304, J$.C(170296, J$.B(315586, '<', J$.R(2990721, 'offset', offset, false, false), J$.G(2990737, J$.R(2990729, 'buf', buf, false, false), 'length'))) ? J$.C(170288, J$.C(170280, J$.B(315594, '===', J$.G(2990761, J$.R(2990745, 'buf', buf, false, false), J$.R(2990753, 'offset', offset, false, false)), J$.T(2990769, 32, 22, false))) ? J$._() : J$.B(315602, '===', J$.G(2990793, J$.R(2990777, 'buf', buf, false, false), J$.R(2990785, 'offset', offset, false, false)), J$.T(2990801, 10, 22, false))) ? J$._() : J$.B(315610, '===', J$.G(2990825, J$.R(2990809, 'buf', buf, false, false), J$.R(2990817, 'offset', offset, false, false)), J$.T(2990833, 9, 22, false)) : J$._())) {
                                offset = J$.W(2990849, 'offset', J$.B(315626, '+', J$.U(315618, '+', J$.R(2990841, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            if (J$.C(170320, J$.C(170312, J$.B(315642, '<=', J$.B(315634, '+', J$.R(2990857, 'offset', offset, false, false), J$.T(2990865, 22, 22, false)), J$.G(2990881, J$.R(2990873, 'buf', buf, false, false), 'length'))) ? J$.B(315658, '===', J$.M(2990945, J$.M(2990937, J$.M(2990921, J$.R(2990889, 'buf', buf, false, false), 'slice', false)(J$.R(2990897, 'offset', offset, false, false), J$.B(315650, '+', J$.R(2990905, 'offset', offset, false, false), J$.T(2990913, 22, 22, false))), 'toString', false)(J$.T(2990929, 'ascii', 21, false)), 'toLowerCase', false)(), J$.T(2990953, 'putty-user-key-file-2:', 21, false)) : J$._()))
                                return J$.Rt(2990969, J$.T(2990961, true, 23, false));
                            return J$.Rt(2990985, J$.T(2990977, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(2992689, J$e);
                        } finally {
                            if (J$.Fr(2992697))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function findSSHHeader(buf) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2991417, arguments.callee, this, arguments);
                            arguments = J$.N(2991425, 'arguments', arguments, true, false, false);
                            buf = J$.N(2991433, 'buf', buf, true, false, false);
                            J$.N(2991441, 'offset', offset, false, false, false);
                            var offset = J$.W(2991033, 'offset', J$.T(2991025, 0, 22, false), offset, false, false);
                            while (J$.C(170352, J$.C(170344, J$.B(315666, '<', J$.R(2991041, 'offset', offset, false, false), J$.G(2991057, J$.R(2991049, 'buf', buf, false, false), 'length'))) ? J$.C(170336, J$.C(170328, J$.B(315674, '===', J$.G(2991081, J$.R(2991065, 'buf', buf, false, false), J$.R(2991073, 'offset', offset, false, false)), J$.T(2991089, 32, 22, false))) ? J$._() : J$.B(315682, '===', J$.G(2991113, J$.R(2991097, 'buf', buf, false, false), J$.R(2991105, 'offset', offset, false, false)), J$.T(2991121, 10, 22, false))) ? J$._() : J$.B(315690, '===', J$.G(2991145, J$.R(2991129, 'buf', buf, false, false), J$.R(2991137, 'offset', offset, false, false)), J$.T(2991153, 9, 22, false)) : J$._())) {
                                offset = J$.W(2991169, 'offset', J$.B(315706, '+', J$.U(315698, '+', J$.R(2991161, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            if (J$.C(170368, J$.C(170360, J$.B(315722, '<=', J$.B(315714, '+', J$.R(2991177, 'offset', offset, false, false), J$.T(2991185, 4, 22, false)), J$.G(2991201, J$.R(2991193, 'buf', buf, false, false), 'length'))) ? J$.B(315738, '===', J$.M(2991257, J$.M(2991241, J$.R(2991209, 'buf', buf, false, false), 'slice', false)(J$.R(2991217, 'offset', offset, false, false), J$.B(315730, '+', J$.R(2991225, 'offset', offset, false, false), J$.T(2991233, 4, 22, false))), 'toString', false)(J$.T(2991249, 'ascii', 21, false)), J$.T(2991265, 'ssh-', 21, false)) : J$._()))
                                return J$.Rt(2991281, J$.T(2991273, true, 23, false));
                            if (J$.C(170384, J$.C(170376, J$.B(315754, '<=', J$.B(315746, '+', J$.R(2991289, 'offset', offset, false, false), J$.T(2991297, 6, 22, false)), J$.G(2991313, J$.R(2991305, 'buf', buf, false, false), 'length'))) ? J$.B(315770, '===', J$.M(2991369, J$.M(2991353, J$.R(2991321, 'buf', buf, false, false), 'slice', false)(J$.R(2991329, 'offset', offset, false, false), J$.B(315762, '+', J$.R(2991337, 'offset', offset, false, false), J$.T(2991345, 6, 22, false))), 'toString', false)(J$.T(2991361, 'ascii', 21, false)), J$.T(2991377, 'ecdsa-', 21, false)) : J$._()))
                                return J$.Rt(2991393, J$.T(2991385, true, 23, false));
                            return J$.Rt(2991409, J$.T(2991401, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(2992705, J$e);
                        } finally {
                            if (J$.Fr(2992713))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function findPEMHeader(buf) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2991889, arguments.callee, this, arguments);
                            arguments = J$.N(2991897, 'arguments', arguments, true, false, false);
                            buf = J$.N(2991905, 'buf', buf, true, false, false);
                            J$.N(2991913, 'offset', offset, false, false, false);
                            var offset = J$.W(2991457, 'offset', J$.T(2991449, 0, 22, false), offset, false, false);
                            while (J$.C(170408, J$.C(170400, J$.B(315778, '<', J$.R(2991465, 'offset', offset, false, false), J$.G(2991481, J$.R(2991473, 'buf', buf, false, false), 'length'))) ? J$.C(170392, J$.B(315786, '===', J$.G(2991505, J$.R(2991489, 'buf', buf, false, false), J$.R(2991497, 'offset', offset, false, false)), J$.T(2991513, 32, 22, false))) ? J$._() : J$.B(315794, '===', J$.G(2991537, J$.R(2991521, 'buf', buf, false, false), J$.R(2991529, 'offset', offset, false, false)), J$.T(2991545, 10, 22, false)) : J$._())) {
                                offset = J$.W(2991561, 'offset', J$.B(315810, '+', J$.U(315802, '+', J$.R(2991553, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            if (J$.C(170416, J$.B(315818, '!==', J$.G(2991585, J$.R(2991569, 'buf', buf, false, false), J$.R(2991577, 'offset', offset, false, false)), J$.T(2991593, 45, 22, false))))
                                return J$.Rt(2991609, J$.T(2991601, false, 23, false));
                            while (J$.C(170432, J$.C(170424, J$.B(315826, '<', J$.R(2991617, 'offset', offset, false, false), J$.G(2991633, J$.R(2991625, 'buf', buf, false, false), 'length'))) ? J$.B(315834, '===', J$.G(2991657, J$.R(2991641, 'buf', buf, false, false), J$.R(2991649, 'offset', offset, false, false)), J$.T(2991665, 45, 22, false)) : J$._())) {
                                offset = J$.W(2991681, 'offset', J$.B(315850, '+', J$.U(315842, '+', J$.R(2991673, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            while (J$.C(170448, J$.C(170440, J$.B(315858, '<', J$.R(2991689, 'offset', offset, false, false), J$.G(2991705, J$.R(2991697, 'buf', buf, false, false), 'length'))) ? J$.B(315866, '===', J$.G(2991729, J$.R(2991713, 'buf', buf, false, false), J$.R(2991721, 'offset', offset, false, false)), J$.T(2991737, 32, 22, false)) : J$._())) {
                                offset = J$.W(2991753, 'offset', J$.B(315882, '+', J$.U(315874, '+', J$.R(2991745, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            if (J$.C(170464, J$.C(170456, J$.B(315898, '>', J$.B(315890, '+', J$.R(2991761, 'offset', offset, false, false), J$.T(2991769, 5, 22, false)), J$.G(2991785, J$.R(2991777, 'buf', buf, false, false), 'length'))) ? J$._() : J$.B(315914, '!==', J$.M(2991841, J$.M(2991825, J$.R(2991793, 'buf', buf, false, false), 'slice', false)(J$.R(2991801, 'offset', offset, false, false), J$.B(315906, '+', J$.R(2991809, 'offset', offset, false, false), J$.T(2991817, 5, 22, false))), 'toString', false)(J$.T(2991833, 'ascii', 21, false)), J$.T(2991849, 'BEGIN', 21, false))))
                                return J$.Rt(2991865, J$.T(2991857, false, 23, false));
                            return J$.Rt(2991881, J$.T(2991873, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(2992721, J$e);
                        } finally {
                            if (J$.Fr(2992729))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function findDNSSECHeader(buf) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2992377, arguments.callee, this, arguments);
                            arguments = J$.N(2992385, 'arguments', arguments, true, false, false);
                            buf = J$.N(2992393, 'buf', buf, true, false, false);
                            J$.N(2992401, 'headerCheck', headerCheck, false, false, false);
                            J$.N(2992409, 'lines', lines, false, false, false);
                            J$.N(2992417, 'line', line, false, false, false);
                            if (J$.C(170472, J$.B(315922, '<=', J$.G(2991929, J$.R(2991921, 'buf', buf, false, false), 'length'), J$.G(2991945, J$.R(2991937, 'DNSSEC_PRIVKEY_HEADER_PREFIX', DNSSEC_PRIVKEY_HEADER_PREFIX, false, true), 'length'))))
                                return J$.Rt(2991961, J$.T(2991953, false, 23, false));
                            var headerCheck = J$.W(2992009, 'headerCheck', J$.M(2992001, J$.R(2991969, 'buf', buf, false, false), 'slice', false)(J$.T(2991977, 0, 22, false), J$.G(2991993, J$.R(2991985, 'DNSSEC_PRIVKEY_HEADER_PREFIX', DNSSEC_PRIVKEY_HEADER_PREFIX, false, true), 'length')), headerCheck, false, false);
                            if (J$.C(170480, J$.B(315930, '===', J$.M(2992033, J$.R(2992017, 'headerCheck', headerCheck, false, false), 'toString', false)(J$.T(2992025, 'ascii', 21, false)), J$.R(2992041, 'DNSSEC_PRIVKEY_HEADER_PREFIX', DNSSEC_PRIVKEY_HEADER_PREFIX, false, true))))
                                return J$.Rt(2992057, J$.T(2992049, true, 23, false));
                            if (J$.C(170488, J$.B(315946, '!==', J$.U(315938, 'typeof', J$.R(2992065, 'buf', buf, false, false)), J$.T(2992073, 'string', 21, false)))) {
                                buf = J$.W(2992105, 'buf', J$.M(2992097, J$.R(2992081, 'buf', buf, false, false), 'toString', false)(J$.T(2992089, 'ascii', 21, false)), buf, false, false);
                            }
                            var lines = J$.W(2992137, 'lines', J$.M(2992129, J$.R(2992113, 'buf', buf, false, false), 'split', false)(J$.T(2992121, '\n', 21, false)), lines, false, false);
                            var line = J$.W(2992153, 'line', J$.T(2992145, 0, 22, false), line, false, false);
                            while (J$.C(170496, J$.M(2992193, J$.G(2992177, J$.R(2992161, 'lines', lines, false, false), J$.R(2992169, 'line', line, false, false)), 'match', false)(J$.T(2992185, /^\;/, 14, false)))) {
                                J$.B(315970, '-', line = J$.W(2992209, 'line', J$.B(315962, '+', J$.U(315954, '+', J$.R(2992201, 'line', line, false, false)), 1), line, false, false), 1);
                            }
                            if (J$.C(170504, J$.M(2992265, J$.M(2992249, J$.G(2992233, J$.R(2992217, 'lines', lines, false, false), J$.R(2992225, 'line', line, false, false)), 'toString', false)(J$.T(2992241, 'ascii', 21, false)), 'match', false)(J$.T(2992257, /\. IN KEY /, 14, false))))
                                return J$.Rt(2992281, J$.T(2992273, true, 23, false));
                            if (J$.C(170512, J$.M(2992337, J$.M(2992321, J$.G(2992305, J$.R(2992289, 'lines', lines, false, false), J$.R(2992297, 'line', line, false, false)), 'toString', false)(J$.T(2992313, 'ascii', 21, false)), 'match', false)(J$.T(2992329, /\. IN DNSKEY /, 14, false))))
                                return J$.Rt(2992353, J$.T(2992345, true, 23, false));
                            return J$.Rt(2992369, J$.T(2992361, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(2992737, J$e);
                        } finally {
                            if (J$.Fr(2992745))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2992449, arguments.callee, this, arguments);
                            arguments = J$.N(2992457, 'arguments', arguments, true, false, false);
                            key = J$.N(2992465, 'key', key, true, false, false);
                            options = J$.N(2992473, 'options', options, true, false, false);
                            throw J$.F(2992441, J$.I(typeof Error === 'undefined' ? Error = J$.R(2992425, 'Error', undefined, true, true) : Error = J$.R(2992425, 'Error', Error, true, true)), true)(J$.T(2992433, '"auto" format cannot be used for writing', 21, false));
                        } catch (J$e) {
                            J$.Ex(2992753, J$e);
                        } finally {
                            if (J$.Fr(2992761))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2992489, 'assert', assert, false, false, false);
            J$.N(2992497, 'Buffer', Buffer, false, false, false);
            J$.N(2992505, 'utils', utils, false, false, false);
            J$.N(2992513, 'Key', Key, false, false, false);
            J$.N(2992521, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(2992529, 'pem', pem, false, false, false);
            J$.N(2992537, 'ssh', ssh, false, false, false);
            J$.N(2992545, 'rfc4253', rfc4253, false, false, false);
            J$.N(2992553, 'dnssec', dnssec, false, false, false);
            J$.N(2992561, 'putty', putty, false, false, false);
            J$.N(2992569, 'DNSSEC_PRIVKEY_HEADER_PREFIX', DNSSEC_PRIVKEY_HEADER_PREFIX, false, false, false);
            read = J$.N(2992585, 'read', J$.T(2992577, read, 12, false), true, false, false);
            findPuTTYHeader = J$.N(2992601, 'findPuTTYHeader', J$.T(2992593, findPuTTYHeader, 12, false), true, false, false);
            findSSHHeader = J$.N(2992617, 'findSSHHeader', J$.T(2992609, findSSHHeader, 12, false), true, false, false);
            findPEMHeader = J$.N(2992633, 'findPEMHeader', J$.T(2992625, findPEMHeader, 12, false), true, false, false);
            findDNSSECHeader = J$.N(2992649, 'findDNSSECHeader', J$.T(2992641, findDNSSECHeader, 12, false), true, false, false);
            write = J$.N(2992665, 'write', J$.T(2992657, write, 12, false), true, false, false);
            J$.T(2988745, 'use strict', 21, false);
            J$.F(2988769, J$.I(typeof require === 'undefined' ? require = J$.R(2988753, 'require', undefined, true, true) : require = J$.R(2988753, 'require', require, true, true)), false)(J$.T(2988761, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2988793, J$.I(typeof require === 'undefined' ? require = J$.R(2988777, 'require', undefined, true, true) : require = J$.R(2988777, 'require', require, true, true)), false)(J$.T(2988785, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2988817, J$.I(typeof require === 'undefined' ? require = J$.R(2988801, 'require', undefined, true, true) : require = J$.R(2988801, 'require', require, true, true)), false)(J$.T(2988809, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2988841, J$.I(typeof require === 'undefined' ? require = J$.R(2988825, 'require', undefined, true, true) : require = J$.R(2988825, 'require', require, true, true)), false)(J$.T(2988833, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2988865, J$.I(typeof require === 'undefined' ? require = J$.R(2988849, 'require', undefined, true, true) : require = J$.R(2988849, 'require', require, true, true)), false)(J$.T(2988857, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2988889, J$.I(typeof require === 'undefined' ? require = J$.R(2988873, 'require', undefined, true, true) : require = J$.R(2988873, 'require', require, true, true)), false)(J$.T(2988881, 'core-js/modules/es.string.match', 21, false));
            J$.F(2988913, J$.I(typeof require === 'undefined' ? require = J$.R(2988897, 'require', undefined, true, true) : require = J$.R(2988897, 'require', require, true, true)), false)(J$.T(2988905, 'core-js/modules/es.string.split', 21, false));
            J$.F(2988937, J$.I(typeof require === 'undefined' ? require = J$.R(2988921, 'require', undefined, true, true) : require = J$.R(2988921, 'require', require, true, true)), false)(J$.T(2988929, 'core-js/modules/es.string.trim', 21, false));
            J$.F(2988961, J$.I(typeof require === 'undefined' ? require = J$.R(2988945, 'require', undefined, true, true) : require = J$.R(2988945, 'require', require, true, true)), false)(J$.T(2988953, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2988985, J$.I(typeof require === 'undefined' ? require = J$.R(2988969, 'require', undefined, true, true) : require = J$.R(2988969, 'require', require, true, true)), false)(J$.T(2988977, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2989009, J$.I(typeof require === 'undefined' ? require = J$.R(2988993, 'require', undefined, true, true) : require = J$.R(2988993, 'require', require, true, true)), false)(J$.T(2989001, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2989033, J$.I(typeof require === 'undefined' ? require = J$.R(2989017, 'require', undefined, true, true) : require = J$.R(2989017, 'require', require, true, true)), false)(J$.T(2989025, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2989057, J$.I(typeof require === 'undefined' ? require = J$.R(2989041, 'require', undefined, true, true) : require = J$.R(2989041, 'require', require, true, true)), false)(J$.T(2989049, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2989081, J$.I(typeof require === 'undefined' ? require = J$.R(2989065, 'require', undefined, true, true) : require = J$.R(2989065, 'require', require, true, true)), false)(J$.T(2989073, 'core-js/modules/es.string.match', 21, false));
            J$.F(2989105, J$.I(typeof require === 'undefined' ? require = J$.R(2989089, 'require', undefined, true, true) : require = J$.R(2989089, 'require', require, true, true)), false)(J$.T(2989097, 'core-js/modules/es.string.split', 21, false));
            J$.F(2989129, J$.I(typeof require === 'undefined' ? require = J$.R(2989113, 'require', undefined, true, true) : require = J$.R(2989113, 'require', require, true, true)), false)(J$.T(2989121, 'core-js/modules/es.string.trim', 21, false));
            J$.F(2989153, J$.I(typeof require === 'undefined' ? require = J$.R(2989137, 'require', undefined, true, true) : require = J$.R(2989137, 'require', require, true, true)), false)(J$.T(2989145, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2989177, J$.I(typeof require === 'undefined' ? require = J$.R(2989161, 'require', undefined, true, true) : require = J$.R(2989161, 'require', require, true, true)), false)(J$.T(2989169, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2989201, J$.I(typeof require === 'undefined' ? require = J$.R(2989185, 'require', undefined, true, true) : require = J$.R(2989185, 'require', require, true, true)), false)(J$.T(2989193, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2989225, J$.I(typeof require === 'undefined' ? require = J$.R(2989209, 'require', undefined, true, true) : require = J$.R(2989209, 'require', require, true, true)), false)(J$.T(2989217, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2989249, J$.I(typeof require === 'undefined' ? require = J$.R(2989233, 'require', undefined, true, true) : require = J$.R(2989233, 'require', require, true, true)), false)(J$.T(2989241, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2989273, J$.I(typeof require === 'undefined' ? require = J$.R(2989257, 'require', undefined, true, true) : require = J$.R(2989257, 'require', require, true, true)), false)(J$.T(2989265, 'core-js/modules/es.string.match', 21, false));
            J$.F(2989297, J$.I(typeof require === 'undefined' ? require = J$.R(2989281, 'require', undefined, true, true) : require = J$.R(2989281, 'require', require, true, true)), false)(J$.T(2989289, 'core-js/modules/es.string.split', 21, false));
            J$.F(2989321, J$.I(typeof require === 'undefined' ? require = J$.R(2989305, 'require', undefined, true, true) : require = J$.R(2989305, 'require', require, true, true)), false)(J$.T(2989313, 'core-js/modules/es.string.trim', 21, false));
            J$.F(2989345, J$.I(typeof require === 'undefined' ? require = J$.R(2989329, 'require', undefined, true, true) : require = J$.R(2989329, 'require', require, true, true)), false)(J$.T(2989337, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2989369, J$.I(typeof require === 'undefined' ? require = J$.R(2989353, 'require', undefined, true, true) : require = J$.R(2989353, 'require', require, true, true)), false)(J$.T(2989361, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2989393, J$.I(typeof require === 'undefined' ? require = J$.R(2989377, 'require', undefined, true, true) : require = J$.R(2989377, 'require', require, true, true)), false)(J$.T(2989385, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2989417, J$.I(typeof require === 'undefined' ? require = J$.R(2989401, 'require', undefined, true, true) : require = J$.R(2989401, 'require', require, true, true)), false)(J$.T(2989409, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2989441, J$.I(typeof require === 'undefined' ? require = J$.R(2989425, 'require', undefined, true, true) : require = J$.R(2989425, 'require', require, true, true)), false)(J$.T(2989433, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2989465, J$.I(typeof require === 'undefined' ? require = J$.R(2989449, 'require', undefined, true, true) : require = J$.R(2989449, 'require', require, true, true)), false)(J$.T(2989457, 'core-js/modules/es.string.match', 21, false));
            J$.F(2989489, J$.I(typeof require === 'undefined' ? require = J$.R(2989473, 'require', undefined, true, true) : require = J$.R(2989473, 'require', require, true, true)), false)(J$.T(2989481, 'core-js/modules/es.string.split', 21, false));
            J$.F(2989513, J$.I(typeof require === 'undefined' ? require = J$.R(2989497, 'require', undefined, true, true) : require = J$.R(2989497, 'require', require, true, true)), false)(J$.T(2989505, 'core-js/modules/es.string.trim', 21, false));
            J$.P(2989553, J$.I(typeof module === 'undefined' ? module = J$.R(2989521, 'module', undefined, true, true) : module = J$.R(2989521, 'module', module, true, true)), 'exports', J$.T(2989545, {
                read: J$.R(2989529, 'read', read, false, true),
                write: J$.R(2989537, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(2989585, 'assert', J$.F(2989577, J$.I(typeof require === 'undefined' ? require = J$.R(2989561, 'require', undefined, true, true) : require = J$.R(2989561, 'require', require, true, true)), false)(J$.T(2989569, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(2989625, 'Buffer', J$.G(2989617, J$.F(2989609, J$.I(typeof require === 'undefined' ? require = J$.R(2989593, 'require', undefined, true, true) : require = J$.R(2989593, 'require', require, true, true)), false)(J$.T(2989601, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var utils = J$.W(2989657, 'utils', J$.F(2989649, J$.I(typeof require === 'undefined' ? require = J$.R(2989633, 'require', undefined, true, true) : require = J$.R(2989633, 'require', require, true, true)), false)(J$.T(2989641, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(2989689, 'Key', J$.F(2989681, J$.I(typeof require === 'undefined' ? require = J$.R(2989665, 'require', undefined, true, true) : require = J$.R(2989665, 'require', require, true, true)), false)(J$.T(2989673, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(2989721, 'PrivateKey', J$.F(2989713, J$.I(typeof require === 'undefined' ? require = J$.R(2989697, 'require', undefined, true, true) : require = J$.R(2989697, 'require', require, true, true)), false)(J$.T(2989705, '../private-key', 21, false)), PrivateKey, false, true);
            var pem = J$.W(2989753, 'pem', J$.F(2989745, J$.I(typeof require === 'undefined' ? require = J$.R(2989729, 'require', undefined, true, true) : require = J$.R(2989729, 'require', require, true, true)), false)(J$.T(2989737, './pem', 21, false)), pem, false, true);
            var ssh = J$.W(2989785, 'ssh', J$.F(2989777, J$.I(typeof require === 'undefined' ? require = J$.R(2989761, 'require', undefined, true, true) : require = J$.R(2989761, 'require', require, true, true)), false)(J$.T(2989769, './ssh', 21, false)), ssh, false, true);
            var rfc4253 = J$.W(2989817, 'rfc4253', J$.F(2989809, J$.I(typeof require === 'undefined' ? require = J$.R(2989793, 'require', undefined, true, true) : require = J$.R(2989793, 'require', require, true, true)), false)(J$.T(2989801, './rfc4253', 21, false)), rfc4253, false, true);
            var dnssec = J$.W(2989849, 'dnssec', J$.F(2989841, J$.I(typeof require === 'undefined' ? require = J$.R(2989825, 'require', undefined, true, true) : require = J$.R(2989825, 'require', require, true, true)), false)(J$.T(2989833, './dnssec', 21, false)), dnssec, false, true);
            var putty = J$.W(2989881, 'putty', J$.F(2989873, J$.I(typeof require === 'undefined' ? require = J$.R(2989857, 'require', undefined, true, true) : require = J$.R(2989857, 'require', require, true, true)), false)(J$.T(2989865, './putty', 21, false)), putty, false, true);
            var DNSSEC_PRIVKEY_HEADER_PREFIX = J$.W(2989897, 'DNSSEC_PRIVKEY_HEADER_PREFIX', J$.T(2989889, 'Private-key-format: v1', 21, false), DNSSEC_PRIVKEY_HEADER_PREFIX, false, true);
        } catch (J$e) {
            J$.Ex(2992769, J$e);
        } finally {
            if (J$.Sr(2992777))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

