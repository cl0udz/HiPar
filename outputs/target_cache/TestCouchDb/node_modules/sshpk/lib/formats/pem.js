J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(3018473, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/sshpk/lib/formats/pem.js');
            function read(buf, options, forceType) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3016977, arguments.callee, this, arguments);
                            arguments = J$.N(3016985, 'arguments', arguments, true, false, false);
                            buf = J$.N(3016993, 'buf', buf, true, false, false);
                            options = J$.N(3017001, 'options', options, true, false, false);
                            forceType = J$.N(3017009, 'forceType', forceType, true, false, false);
                            J$.N(3017017, 'input', input, false, false, false);
                            J$.N(3017025, 'lines', lines, false, false, false);
                            J$.N(3017033, 'm', m, false, false, false);
                            J$.N(3017041, 'si', si, false, false, false);
                            J$.N(3017049, 'm2', m2, false, false, false);
                            J$.N(3017057, 'ei', ei, false, false, false);
                            J$.N(3017065, 'type', type, false, false, false);
                            J$.N(3017073, 'alg', alg, false, false, false);
                            J$.N(3017081, 'headers', headers, false, false, false);
                            J$.N(3017089, 'cipher', cipher, false, false, false);
                            J$.N(3017097, 'key', key, false, false, false);
                            J$.N(3017105, 'iv', iv, false, false, false);
                            J$.N(3017113, 'parts', parts, false, false, false);
                            J$.N(3017121, 'eder', eder, false, false, false);
                            J$.N(3017129, 'pbesEnd', pbesEnd, false, false, false);
                            J$.N(3017137, 'method', method, false, false, false);
                            J$.N(3017145, 'kdfEnd', kdfEnd, false, false, false);
                            J$.N(3017153, 'kdfOid', kdfOid, false, false, false);
                            J$.N(3017161, 'salt', salt, false, false, false);
                            J$.N(3017169, 'iterations', iterations, false, false, false);
                            J$.N(3017177, 'hashAlg', hashAlg, false, false, false);
                            J$.N(3017185, 'hashAlgOid', hashAlgOid, false, false, false);
                            J$.N(3017193, 'cipherOid', cipherOid, false, false, false);
                            J$.N(3017201, 'cinfo', cinfo, false, false, false);
                            J$.N(3017209, 'cipherStream', cipherStream, false, false, false);
                            J$.N(3017217, 'chunk', chunk, false, false, false);
                            J$.N(3017225, 'chunks', chunks, false, false, false);
                            J$.N(3017233, 'der', der, false, false, false);
                            var input = J$.W(3013497, 'input', J$.R(3013489, 'buf', buf, false, false), input, false, false);
                            if (J$.C(171176, J$.B(317314, '!==', J$.U(317306, 'typeof', J$.R(3013505, 'buf', buf, false, false)), J$.T(3013513, 'string', 21, false)))) {
                                J$.M(3013545, J$.R(3013521, 'assert', assert, false, true), 'buffer', false)(J$.R(3013529, 'buf', buf, false, false), J$.T(3013537, 'buf', 21, false));
                                buf = J$.W(3013577, 'buf', J$.M(3013569, J$.R(3013553, 'buf', buf, false, false), 'toString', false)(J$.T(3013561, 'ascii', 21, false)), buf, false, false);
                            }
                            var lines = J$.W(3013617, 'lines', J$.M(3013609, J$.M(3013593, J$.R(3013585, 'buf', buf, false, false), 'trim', false)(), 'split', false)(J$.T(3013601, /[\r\n]+/g, 14, false)), lines, false, false);
                            var m;
                            var si = J$.W(3013633, 'si', J$.U(317322, '-', J$.T(3013625, 1, 22, false)), si, false, false);
                            while (J$.C(171192, J$.C(171184, J$.U(317330, '!', J$.R(3013641, 'm', m, false, false))) ? J$.B(317338, '<', J$.R(3013649, 'si', si, false, false), J$.G(3013665, J$.R(3013657, 'lines', lines, false, false), 'length')) : J$._())) {
                                m = J$.W(3013721, 'm', J$.M(3013713, J$.G(3013697, J$.R(3013673, 'lines', lines, false, false), si = J$.W(3013689, 'si', J$.B(317354, '+', J$.U(317346, '+', J$.R(3013681, 'si', si, false, false)), 1), si, false, false)), 'match', false)(J$.T(3013705, /[-]+[ ]*BEGIN ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/, 14, false)), m, false, false);
                            }
                            J$.M(3013753, J$.R(3013729, 'assert', assert, false, true), 'ok', false)(J$.R(3013737, 'm', m, false, false), J$.T(3013745, 'invalid PEM header', 21, false));
                            var m2;
                            var ei = J$.W(3013777, 'ei', J$.G(3013769, J$.R(3013761, 'lines', lines, false, false), 'length'), ei, false, false);
                            while (J$.C(171208, J$.C(171200, J$.U(317362, '!', J$.R(3013785, 'm2', m2, false, false))) ? J$.B(317370, '>', J$.R(3013793, 'ei', ei, false, false), J$.T(3013801, 0, 22, false)) : J$._())) {
                                m2 = J$.W(3013857, 'm2', J$.M(3013849, J$.G(3013833, J$.R(3013809, 'lines', lines, false, false), ei = J$.W(3013825, 'ei', J$.B(317386, '-', J$.U(317378, '+', J$.R(3013817, 'ei', ei, false, false)), 1), ei, false, false)), 'match', false)(J$.T(3013841, /[-]+[ ]*END ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/, 14, false)), m2, false, false);
                            }
                            J$.M(3013889, J$.R(3013865, 'assert', assert, false, true), 'ok', false)(J$.R(3013873, 'm2', m2, false, false), J$.T(3013881, 'invalid PEM footer', 21, false));
                            J$.M(3013953, J$.R(3013897, 'assert', assert, false, true), 'equal', false)(J$.G(3013921, J$.R(3013905, 'm', m, false, false), J$.T(3013913, 2, 22, false)), J$.G(3013945, J$.R(3013929, 'm2', m2, false, false), J$.T(3013937, 2, 22, false)));
                            var type = J$.W(3013993, 'type', J$.M(3013985, J$.G(3013977, J$.R(3013961, 'm', m, false, false), J$.T(3013969, 2, 22, false)), 'toLowerCase', false)(), type, false, false);
                            var alg;
                            if (J$.C(171216, J$.G(3014017, J$.R(3014001, 'm', m, false, false), J$.T(3014009, 1, 22, false)))) {
                                J$.M(3014089, J$.R(3014025, 'assert', assert, false, true), 'equal', false)(J$.G(3014049, J$.R(3014033, 'm', m, false, false), J$.T(3014041, 1, 22, false)), J$.G(3014073, J$.R(3014057, 'm2', m2, false, false), J$.T(3014065, 1, 22, false)), J$.T(3014081, 'PEM header and footer mismatch', 21, false));
                                alg = J$.W(3014129, 'alg', J$.M(3014121, J$.G(3014113, J$.R(3014097, 'm', m, false, false), J$.T(3014105, 1, 22, false)), 'trim', false)(), alg, false, false);
                            }
                            lines = J$.W(3014177, 'lines', J$.M(3014169, J$.R(3014137, 'lines', lines, false, false), 'slice', false)(J$.R(3014145, 'si', si, false, false), J$.B(317394, '+', J$.R(3014153, 'ei', ei, false, false), J$.T(3014161, 1, 22, false))), lines, false, false);
                            var headers = J$.W(3014193, 'headers', J$.T(3014185, {}, 11, false), headers, false, false);
                            while (J$.C(171232, J$.T(3014201, true, 23, false))) {
                                lines = J$.W(3014233, 'lines', J$.M(3014225, J$.R(3014209, 'lines', lines, false, false), 'slice', false)(J$.T(3014217, 1, 22, false)), lines, false, false);
                                m = J$.W(3014281, 'm', J$.M(3014273, J$.G(3014257, J$.R(3014241, 'lines', lines, false, false), J$.T(3014249, 0, 22, false)), 'match', false)(J$.T(3014265, /^([A-Za-z0-9-]+): (.+)$/, 14, false)), m, false, false);
                                if (J$.C(171224, J$.U(317402, '!', J$.R(3014289, 'm', m, false, false))))
                                    break;
                                J$.P(3014361, J$.R(3014297, 'headers', headers, false, false), J$.M(3014329, J$.G(3014321, J$.R(3014305, 'm', m, false, false), J$.T(3014313, 1, 22, false)), 'toLowerCase', false)(), J$.G(3014353, J$.R(3014337, 'm', m, false, false), J$.T(3014345, 2, 22, false)));
                            }
                            lines = J$.W(3014417, 'lines', J$.M(3014409, J$.M(3014393, J$.R(3014369, 'lines', lines, false, false), 'slice', false)(J$.T(3014377, 0, 22, false), J$.U(317410, '-', J$.T(3014385, 1, 22, false))), 'join', false)(J$.T(3014401, '', 21, false)), lines, false, false);
                            buf = J$.W(3014457, 'buf', J$.M(3014449, J$.R(3014425, 'Buffer', Buffer, false, true), 'from', false)(J$.R(3014433, 'lines', lines, false, false), J$.T(3014441, 'base64', 21, false)), buf, false, false);
                            var cipher, key, iv;
                            if (J$.C(171272, J$.G(3014481, J$.R(3014465, 'headers', headers, false, false), J$.T(3014473, 'proc-type', 21, false)))) {
                                var parts = J$.W(3014529, 'parts', J$.M(3014521, J$.G(3014505, J$.R(3014489, 'headers', headers, false, false), J$.T(3014497, 'proc-type', 21, false)), 'split', false)(J$.T(3014513, ',', 21, false)), parts, false, false);
                                if (J$.C(171264, J$.C(171240, J$.B(317418, '===', J$.G(3014553, J$.R(3014537, 'parts', parts, false, false), J$.T(3014545, 0, 22, false)), J$.T(3014561, '4', 21, false))) ? J$.B(317426, '===', J$.G(3014585, J$.R(3014569, 'parts', parts, false, false), J$.T(3014577, 1, 22, false)), J$.T(3014593, 'ENCRYPTED', 21, false)) : J$._())) {
                                    if (J$.C(171248, J$.B(317442, '===', J$.U(317434, 'typeof', J$.G(3014609, J$.R(3014601, 'options', options, false, false), 'passphrase')), J$.T(3014617, 'string', 21, false)))) {
                                        J$.P(3014673, J$.R(3014625, 'options', options, false, false), 'passphrase', J$.M(3014665, J$.R(3014633, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3014649, J$.R(3014641, 'options', options, false, false), 'passphrase'), J$.T(3014657, 'utf-8', 21, false)));
                                    }
                                    if (J$.C(171256, J$.U(317450, '!', J$.M(3014705, J$.R(3014681, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(3014697, J$.R(3014689, 'options', options, false, false), 'passphrase'))))) {
                                        throw J$.M(3014745, J$.R(3014713, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(3014729, J$.R(3014721, 'options', options, false, false), 'filename'), J$.T(3014737, 'PEM', 21, false));
                                    } else {
                                        parts = J$.W(3014793, 'parts', J$.M(3014785, J$.G(3014769, J$.R(3014753, 'headers', headers, false, false), J$.T(3014761, 'dek-info', 21, false)), 'split', false)(J$.T(3014777, ',', 21, false)), parts, false, false);
                                        J$.M(3014833, J$.R(3014801, 'assert', assert, false, true), 'ok', false)(J$.B(317458, '===', J$.G(3014817, J$.R(3014809, 'parts', parts, false, false), 'length'), J$.T(3014825, 2, 22, false)));
                                        cipher = J$.W(3014873, 'cipher', J$.M(3014865, J$.G(3014857, J$.R(3014841, 'parts', parts, false, false), J$.T(3014849, 0, 22, false)), 'toLowerCase', false)(), cipher, false, false);
                                        iv = J$.W(3014929, 'iv', J$.M(3014921, J$.R(3014881, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3014905, J$.R(3014889, 'parts', parts, false, false), J$.T(3014897, 1, 22, false)), J$.T(3014913, 'hex', 21, false)), iv, false, false);
                                        key = J$.W(3015001, 'key', J$.G(3014993, J$.M(3014985, J$.R(3014937, 'utils', utils, false, true), 'opensslKeyDeriv', false)(J$.R(3014945, 'cipher', cipher, false, false), J$.R(3014953, 'iv', iv, false, false), J$.G(3014969, J$.R(3014961, 'options', options, false, false), 'passphrase'), J$.T(3014977, 1, 22, false)), 'key'), key, false, false);
                                    }
                                }
                            }
                            if (J$.C(171344, J$.C(171280, J$.R(3015009, 'alg', alg, false, false)) ? J$.B(317466, '===', J$.M(3015025, J$.R(3015017, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(3015033, 'encrypted', 21, false)) : J$._())) {
                                var eder = J$.W(3015065, 'eder', J$.M(3015057, J$.R(3015041, 'asn1', asn1, false, true), 'BerReader', true)(J$.R(3015049, 'buf', buf, false, false)), eder, false, false);
                                var pbesEnd;
                                J$.M(3015081, J$.R(3015073, 'eder', eder, false, false), 'readSequence', false)();
                                J$.M(3015097, J$.R(3015089, 'eder', eder, false, false), 'readSequence', false)();
                                pbesEnd = J$.W(3015137, 'pbesEnd', J$.B(317474, '+', J$.G(3015113, J$.R(3015105, 'eder', eder, false, false), 'offset'), J$.G(3015129, J$.R(3015121, 'eder', eder, false, false), 'length')), pbesEnd, false, false);
                                var method = J$.W(3015161, 'method', J$.M(3015153, J$.R(3015145, 'eder', eder, false, false), 'readOID', false)(), method, false, false);
                                if (J$.C(171288, J$.B(317482, '!==', J$.R(3015169, 'method', method, false, false), J$.R(3015177, 'OID_PBES2', OID_PBES2, false, true)))) {
                                    throw J$.F(3015217, J$.I(typeof Error === 'undefined' ? Error = J$.R(3015185, 'Error', undefined, true, true) : Error = J$.R(3015185, 'Error', Error, true, true)), true)(J$.B(317498, '+', J$.B(317490, '+', J$.T(3015193, 'Unsupported PEM/PKCS8 encryption ', 21, false), J$.T(3015201, 'scheme: ', 21, false)), J$.R(3015209, 'method', method, false, false)));
                                }
                                J$.M(3015233, J$.R(3015225, 'eder', eder, false, false), 'readSequence', false)();
                                J$.M(3015249, J$.R(3015241, 'eder', eder, false, false), 'readSequence', false)();
                                var kdfEnd = J$.W(3015289, 'kdfEnd', J$.B(317506, '+', J$.G(3015265, J$.R(3015257, 'eder', eder, false, false), 'offset'), J$.G(3015281, J$.R(3015273, 'eder', eder, false, false), 'length')), kdfEnd, false, false);
                                var kdfOid = J$.W(3015313, 'kdfOid', J$.M(3015305, J$.R(3015297, 'eder', eder, false, false), 'readOID', false)(), kdfOid, false, false);
                                if (J$.C(171296, J$.B(317514, '!==', J$.R(3015321, 'kdfOid', kdfOid, false, false), J$.R(3015329, 'OID_PBKDF2', OID_PBKDF2, false, true))))
                                    throw J$.F(3015361, J$.I(typeof Error === 'undefined' ? Error = J$.R(3015337, 'Error', undefined, true, true) : Error = J$.R(3015337, 'Error', Error, true, true)), true)(J$.B(317522, '+', J$.T(3015345, 'Unsupported PBES2 KDF: ', 21, false), J$.R(3015353, 'kdfOid', kdfOid, false, false)));
                                J$.M(3015377, J$.R(3015369, 'eder', eder, false, false), 'readSequence', false)();
                                var salt = J$.W(3015433, 'salt', J$.M(3015425, J$.R(3015385, 'eder', eder, false, false), 'readString', false)(J$.G(3015409, J$.G(3015401, J$.R(3015393, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3015417, true, 23, false)), salt, false, false);
                                var iterations = J$.W(3015457, 'iterations', J$.M(3015449, J$.R(3015441, 'eder', eder, false, false), 'readInt', false)(), iterations, false, false);
                                var hashAlg = J$.W(3015473, 'hashAlg', J$.T(3015465, 'sha1', 21, false), hashAlg, false, false);
                                if (J$.C(171312, J$.B(317530, '<', J$.G(3015489, J$.R(3015481, 'eder', eder, false, false), 'offset'), J$.R(3015497, 'kdfEnd', kdfEnd, false, false)))) {
                                    J$.M(3015513, J$.R(3015505, 'eder', eder, false, false), 'readSequence', false)();
                                    var hashAlgOid = J$.W(3015537, 'hashAlgOid', J$.M(3015529, J$.R(3015521, 'eder', eder, false, false), 'readOID', false)(), hashAlgOid, false, false);
                                    hashAlg = J$.W(3015569, 'hashAlg', J$.G(3015561, J$.R(3015545, 'OID_TO_HASH', OID_TO_HASH, false, true), J$.R(3015553, 'hashAlgOid', hashAlgOid, false, false)), hashAlg, false, false);
                                    if (J$.C(171304, J$.B(317538, '===', J$.R(3015577, 'hashAlg', hashAlg, false, false), J$.T(3015585, undefined, 24, false)))) {
                                        throw J$.F(3015617, J$.I(typeof Error === 'undefined' ? Error = J$.R(3015593, 'Error', undefined, true, true) : Error = J$.R(3015593, 'Error', Error, true, true)), true)(J$.B(317546, '+', J$.T(3015601, 'Unsupported PBKDF2 hash: ', 21, false), J$.R(3015609, 'hashAlgOid', hashAlgOid, false, false)));
                                    }
                                }
                                J$.P(3015641, J$.R(3015625, 'eder', eder, false, false), '_offset', J$.R(3015633, 'kdfEnd', kdfEnd, false, false));
                                J$.M(3015657, J$.R(3015649, 'eder', eder, false, false), 'readSequence', false)();
                                var cipherOid = J$.W(3015681, 'cipherOid', J$.M(3015673, J$.R(3015665, 'eder', eder, false, false), 'readOID', false)(), cipherOid, false, false);
                                cipher = J$.W(3015713, 'cipher', J$.G(3015705, J$.R(3015689, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true), J$.R(3015697, 'cipherOid', cipherOid, false, false)), cipher, false, false);
                                if (J$.C(171320, J$.B(317554, '===', J$.R(3015721, 'cipher', cipher, false, false), J$.T(3015729, undefined, 24, false)))) {
                                    throw J$.F(3015761, J$.I(typeof Error === 'undefined' ? Error = J$.R(3015737, 'Error', undefined, true, true) : Error = J$.R(3015737, 'Error', Error, true, true)), true)(J$.B(317562, '+', J$.T(3015745, 'Unsupported PBES2 cipher: ', 21, false), J$.R(3015753, 'cipherOid', cipherOid, false, false)));
                                }
                                iv = J$.W(3015817, 'iv', J$.M(3015809, J$.R(3015769, 'eder', eder, false, false), 'readString', false)(J$.G(3015793, J$.G(3015785, J$.R(3015777, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3015801, true, 23, false)), iv, false, false);
                                J$.P(3015841, J$.R(3015825, 'eder', eder, false, false), '_offset', J$.R(3015833, 'pbesEnd', pbesEnd, false, false));
                                buf = J$.W(3015897, 'buf', J$.M(3015889, J$.R(3015849, 'eder', eder, false, false), 'readString', false)(J$.G(3015873, J$.G(3015865, J$.R(3015857, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(3015881, true, 23, false)), buf, false, false);
                                if (J$.C(171328, J$.B(317578, '===', J$.U(317570, 'typeof', J$.G(3015913, J$.R(3015905, 'options', options, false, false), 'passphrase')), J$.T(3015921, 'string', 21, false)))) {
                                    J$.P(3015977, J$.R(3015929, 'options', options, false, false), 'passphrase', J$.M(3015969, J$.R(3015937, 'Buffer', Buffer, false, true), 'from', false)(J$.G(3015953, J$.R(3015945, 'options', options, false, false), 'passphrase'), J$.T(3015961, 'utf-8', 21, false)));
                                }
                                if (J$.C(171336, J$.U(317586, '!', J$.M(3016009, J$.R(3015985, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(3016001, J$.R(3015993, 'options', options, false, false), 'passphrase'))))) {
                                    throw J$.M(3016049, J$.R(3016017, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(3016033, J$.R(3016025, 'options', options, false, false), 'filename'), J$.T(3016041, 'PEM', 21, false));
                                }
                                var cinfo = J$.W(3016081, 'cinfo', J$.M(3016073, J$.R(3016057, 'utils', utils, false, true), 'opensshCipherInfo', false)(J$.R(3016065, 'cipher', cipher, false, false)), cinfo, false, false);
                                cipher = J$.W(3016105, 'cipher', J$.G(3016097, J$.R(3016089, 'cinfo', cinfo, false, false), 'opensslName'), cipher, false, false);
                                key = J$.W(3016185, 'key', J$.M(3016177, J$.R(3016113, 'utils', utils, false, true), 'pbkdf2', false)(J$.R(3016121, 'hashAlg', hashAlg, false, false), J$.R(3016129, 'salt', salt, false, false), J$.R(3016137, 'iterations', iterations, false, false), J$.G(3016153, J$.R(3016145, 'cinfo', cinfo, false, false), 'keySize'), J$.G(3016169, J$.R(3016161, 'options', options, false, false), 'passphrase')), key, false, false);
                                alg = J$.W(3016201, 'alg', J$.T(3016193, undefined, 24, false), alg, false, false);
                            }
                            if (J$.C(171384, J$.C(171360, J$.C(171352, J$.R(3016209, 'cipher', cipher, false, false)) ? J$.R(3016217, 'key', key, false, false) : J$._()) ? J$.R(3016225, 'iv', iv, false, false) : J$._())) {
                                var cipherStream = J$.W(3016273, 'cipherStream', J$.M(3016265, J$.R(3016233, 'crypto', crypto, false, true), 'createDecipheriv', false)(J$.R(3016241, 'cipher', cipher, false, false), J$.R(3016249, 'key', key, false, false), J$.R(3016257, 'iv', iv, false, false)), cipherStream, false, false);
                                var chunk, chunks = J$.W(3016289, 'chunks', J$.T(3016281, [], 10, false), chunks, false, false);
                                J$.M(3016425, J$.R(3016297, 'cipherStream', cipherStream, false, false), 'once', false)(J$.T(3016305, 'error', 21, false), J$.T(3016417, function (e) {
                                    jalangiLabel2:
                                        while (true) {
                                            try {
                                                J$.Fe(3016393, arguments.callee, this, arguments);
                                                arguments = J$.N(3016401, 'arguments', arguments, true, false, false);
                                                e = J$.N(3016409, 'e', e, true, false, false);
                                                if (J$.C(171368, J$.B(317602, '!==', J$.M(3016337, J$.M(3016321, J$.R(3016313, 'e', e, false, false), 'toString', false)(), 'indexOf', false)(J$.T(3016329, 'bad decrypt', 21, false)), J$.U(317594, '-', J$.T(3016345, 1, 22, false))))) {
                                                    throw J$.F(3016377, J$.I(typeof Error === 'undefined' ? Error = J$.R(3016353, 'Error', undefined, true, true) : Error = J$.R(3016353, 'Error', Error, true, true)), true)(J$.B(317610, '+', J$.T(3016361, 'Incorrect passphrase ', 21, false), J$.T(3016369, 'supplied, could not decrypt key', 21, false)));
                                                }
                                                throw J$.R(3016385, 'e', e, false, false);
                                            } catch (J$e) {
                                                J$.Ex(3018697, J$e);
                                            } finally {
                                                if (J$.Fr(3018705))
                                                    continue jalangiLabel2;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(3016449, J$.R(3016433, 'cipherStream', cipherStream, false, false), 'write', false)(J$.R(3016441, 'buf', buf, false, false));
                                J$.M(3016465, J$.R(3016457, 'cipherStream', cipherStream, false, false), 'end', false)();
                                while (J$.C(171376, J$.B(317618, '!==', chunk = J$.W(3016489, 'chunk', J$.M(3016481, J$.R(3016473, 'cipherStream', cipherStream, false, false), 'read', false)(), chunk, false, false), J$.T(3016497, null, 25, false)))) {
                                    J$.M(3016521, J$.R(3016505, 'chunks', chunks, false, false), 'push', false)(J$.R(3016513, 'chunk', chunk, false, false));
                                }
                                buf = J$.W(3016553, 'buf', J$.M(3016545, J$.R(3016529, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(3016537, 'chunks', chunks, false, false)), buf, false, false);
                            }
                            if (J$.C(171400, J$.C(171392, J$.R(3016561, 'alg', alg, false, false)) ? J$.B(317626, '===', J$.M(3016577, J$.R(3016569, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(3016585, 'openssh', 21, false)) : J$._()))
                                return J$.Rt(3016633, J$.M(3016625, J$.R(3016593, 'sshpriv', sshpriv, false, true), 'readSSHPrivate', false)(J$.R(3016601, 'type', type, false, false), J$.R(3016609, 'buf', buf, false, false), J$.R(3016617, 'options', options, false, false)));
                            if (J$.C(171416, J$.C(171408, J$.R(3016641, 'alg', alg, false, false)) ? J$.B(317634, '===', J$.M(3016657, J$.R(3016649, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(3016665, 'ssh2', 21, false)) : J$._()))
                                return J$.Rt(3016713, J$.M(3016705, J$.R(3016673, 'rfc4253', rfc4253, false, true), 'readType', false)(J$.R(3016681, 'type', type, false, false), J$.R(3016689, 'buf', buf, false, false), J$.R(3016697, 'options', options, false, false)));
                            var der = J$.W(3016745, 'der', J$.M(3016737, J$.R(3016721, 'asn1', asn1, false, true), 'BerReader', true)(J$.R(3016729, 'buf', buf, false, false)), der, false, false);
                            J$.P(3016769, J$.R(3016753, 'der', der, false, false), 'originalInput', J$.R(3016761, 'input', input, false, false));
                            J$.M(3016785, J$.R(3016777, 'der', der, false, false), 'readSequence', false)();
                            if (J$.C(171440, J$.R(3016793, 'alg', alg, false, false))) {
                                if (J$.C(171424, J$.R(3016801, 'forceType', forceType, false, false)))
                                    J$.M(3016833, J$.R(3016809, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3016817, 'forceType', forceType, false, false), J$.T(3016825, 'pkcs1', 21, false));
                                return J$.Rt(3016881, J$.M(3016873, J$.R(3016841, 'pkcs1', pkcs1, false, true), 'readPkcs1', false)(J$.R(3016849, 'alg', alg, false, false), J$.R(3016857, 'type', type, false, false), J$.R(3016865, 'der', der, false, false)));
                            } else {
                                if (J$.C(171432, J$.R(3016889, 'forceType', forceType, false, false)))
                                    J$.M(3016921, J$.R(3016897, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3016905, 'forceType', forceType, false, false), J$.T(3016913, 'pkcs8', 21, false));
                                return J$.Rt(3016969, J$.M(3016961, J$.R(3016929, 'pkcs8', pkcs8, false, true), 'readPkcs8', false)(J$.R(3016937, 'alg', alg, false, false), J$.R(3016945, 'type', type, false, false), J$.R(3016953, 'der', der, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(3018713, J$e);
                        } finally {
                            if (J$.Fr(3018721))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options, type) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(3018361, arguments.callee, this, arguments);
                            arguments = J$.N(3018369, 'arguments', arguments, true, false, false);
                            key = J$.N(3018377, 'key', key, true, false, false);
                            options = J$.N(3018385, 'options', options, true, false, false);
                            type = J$.N(3018393, 'type', type, true, false, false);
                            J$.N(3018401, 'alg', alg, false, false, false);
                            J$.N(3018409, 'header', header, false, false, false);
                            J$.N(3018417, 'der', der, false, false, false);
                            J$.N(3018425, 'tmp', tmp, false, false, false);
                            J$.N(3018433, 'len', len, false, false, false);
                            J$.N(3018441, 'buf', buf, false, false, false);
                            J$.N(3018449, 'o', o, false, false, false);
                            J$.N(3018457, 'i', i, false, false, false);
                            J$.N(3018465, 'limit', limit, false, false, false);
                            J$.M(3017257, J$.R(3017241, 'assert', assert, false, true), 'object', false)(J$.R(3017249, 'key', key, false, false));
                            var alg = J$.W(3017329, 'alg', J$.G(3017321, J$.T(3017297, {
                                'ecdsa': J$.T(3017265, 'EC', 21, false),
                                'rsa': J$.T(3017273, 'RSA', 21, false),
                                'dsa': J$.T(3017281, 'DSA', 21, false),
                                'ed25519': J$.T(3017289, 'EdDSA', 21, false)
                            }, 11, false), J$.G(3017313, J$.R(3017305, 'key', key, false, false), 'type')), alg, false, false);
                            var header;
                            var der = J$.W(3017353, 'der', J$.M(3017345, J$.R(3017337, 'asn1', asn1, false, true), 'BerWriter', true)(), der, false, false);
                            if (J$.C(171504, J$.M(3017377, J$.R(3017361, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(3017369, 'key', key, false, false)))) {
                                if (J$.C(171464, J$.C(171448, J$.R(3017385, 'type', type, false, false)) ? J$.B(317642, '===', J$.R(3017393, 'type', type, false, false), J$.T(3017401, 'pkcs8', 21, false)) : J$._())) {
                                    header = J$.W(3017417, 'header', J$.T(3017409, 'PRIVATE KEY', 21, false), header, false, false);
                                    J$.M(3017449, J$.R(3017425, 'pkcs8', pkcs8, false, true), 'writePkcs8', false)(J$.R(3017433, 'der', der, false, false), J$.R(3017441, 'key', key, false, false));
                                } else {
                                    if (J$.C(171456, J$.R(3017457, 'type', type, false, false)))
                                        J$.M(3017489, J$.R(3017465, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3017473, 'type', type, false, false), J$.T(3017481, 'pkcs1', 21, false));
                                    header = J$.W(3017513, 'header', J$.B(317650, '+', J$.R(3017497, 'alg', alg, false, false), J$.T(3017505, ' PRIVATE KEY', 21, false)), header, false, false);
                                    J$.M(3017545, J$.R(3017521, 'pkcs1', pkcs1, false, true), 'writePkcs1', false)(J$.R(3017529, 'der', der, false, false), J$.R(3017537, 'key', key, false, false));
                                }
                            } else if (J$.C(171496, J$.M(3017569, J$.R(3017553, 'Key', Key, false, true), 'isKey', false)(J$.R(3017561, 'key', key, false, false)))) {
                                if (J$.C(171488, J$.C(171472, J$.R(3017577, 'type', type, false, false)) ? J$.B(317658, '===', J$.R(3017585, 'type', type, false, false), J$.T(3017593, 'pkcs1', 21, false)) : J$._())) {
                                    header = J$.W(3017617, 'header', J$.B(317666, '+', J$.R(3017601, 'alg', alg, false, false), J$.T(3017609, ' PUBLIC KEY', 21, false)), header, false, false);
                                    J$.M(3017649, J$.R(3017625, 'pkcs1', pkcs1, false, true), 'writePkcs1', false)(J$.R(3017633, 'der', der, false, false), J$.R(3017641, 'key', key, false, false));
                                } else {
                                    if (J$.C(171480, J$.R(3017657, 'type', type, false, false)))
                                        J$.M(3017689, J$.R(3017665, 'assert', assert, false, true), 'strictEqual', false)(J$.R(3017673, 'type', type, false, false), J$.T(3017681, 'pkcs8', 21, false));
                                    header = J$.W(3017705, 'header', J$.T(3017697, 'PUBLIC KEY', 21, false), header, false, false);
                                    J$.M(3017737, J$.R(3017713, 'pkcs8', pkcs8, false, true), 'writePkcs8', false)(J$.R(3017721, 'der', der, false, false), J$.R(3017729, 'key', key, false, false));
                                }
                            } else {
                                throw J$.F(3017761, J$.I(typeof Error === 'undefined' ? Error = J$.R(3017745, 'Error', undefined, true, true) : Error = J$.R(3017745, 'Error', Error, true, true)), true)(J$.T(3017753, 'key is not a Key or PrivateKey', 21, false));
                            }
                            var tmp = J$.W(3017801, 'tmp', J$.M(3017793, J$.G(3017777, J$.R(3017769, 'der', der, false, false), 'buffer'), 'toString', false)(J$.T(3017785, 'base64', 21, false)), tmp, false, false);
                            var len = J$.W(3017897, 'len', J$.B(317722, '+', J$.B(317714, '+', J$.B(317698, '+', J$.B(317690, '+', J$.B(317682, '+', J$.G(3017817, J$.R(3017809, 'tmp', tmp, false, false), 'length'), J$.B(317674, '/', J$.G(3017833, J$.R(3017825, 'tmp', tmp, false, false), 'length'), J$.T(3017841, 64, 22, false))), J$.T(3017849, 18, 22, false)), J$.T(3017857, 16, 22, false)), J$.B(317706, '*', J$.G(3017873, J$.R(3017865, 'header', header, false, false), 'length'), J$.T(3017881, 2, 22, false))), J$.T(3017889, 10, 22, false)), len, false, false);
                            var buf = J$.W(3017929, 'buf', J$.M(3017921, J$.R(3017905, 'Buffer', Buffer, false, true), 'alloc', false)(J$.R(3017913, 'len', len, false, false)), buf, false, false);
                            var o = J$.W(3017945, 'o', J$.T(3017937, 0, 22, false), o, false, false);
                            o = J$.W(3018009, 'o', J$.B(317746, '+', J$.R(3018001, 'o', o, false, false), J$.M(3017993, J$.R(3017953, 'buf', buf, false, false), 'write', false)(J$.B(317738, '+', J$.B(317730, '+', J$.T(3017961, '-----BEGIN ', 21, false), J$.R(3017969, 'header', header, false, false)), J$.T(3017977, '-----\n', 21, false)), J$.R(3017985, 'o', o, false, false))), o, false, false);
                            for (var i = J$.W(3018025, 'i', J$.T(3018017, 0, 22, false), i, false, false); J$.C(171520, J$.B(317754, '<', J$.R(3018033, 'i', i, false, false), J$.G(3018049, J$.R(3018041, 'tmp', tmp, false, false), 'length')));) {
                                var limit = J$.W(3018073, 'limit', J$.B(317762, '+', J$.R(3018057, 'i', i, false, false), J$.T(3018065, 64, 22, false)), limit, false, false);
                                if (J$.C(171512, J$.B(317770, '>', J$.R(3018081, 'limit', limit, false, false), J$.G(3018097, J$.R(3018089, 'tmp', tmp, false, false), 'length'))))
                                    limit = J$.W(3018121, 'limit', J$.G(3018113, J$.R(3018105, 'tmp', tmp, false, false), 'length'), limit, false, false);
                                o = J$.W(3018193, 'o', J$.B(317778, '+', J$.R(3018185, 'o', o, false, false), J$.M(3018177, J$.R(3018129, 'buf', buf, false, false), 'write', false)(J$.M(3018161, J$.R(3018137, 'tmp', tmp, false, false), 'slice', false)(J$.R(3018145, 'i', i, false, false), J$.R(3018153, 'limit', limit, false, false)), J$.R(3018169, 'o', o, false, false))), o, false, false);
                                J$.P(3018233, J$.R(3018201, 'buf', buf, false, false), J$.B(317802, '-', o = J$.W(3018217, 'o', J$.B(317794, '+', J$.U(317786, '+', J$.R(3018209, 'o', o, false, false)), 1), o, false, false), 1), J$.T(3018225, 10, 22, false));
                                i = J$.W(3018249, 'i', J$.R(3018241, 'limit', limit, false, false), i, false, false);
                            }
                            o = J$.W(3018313, 'o', J$.B(317826, '+', J$.R(3018305, 'o', o, false, false), J$.M(3018297, J$.R(3018257, 'buf', buf, false, false), 'write', false)(J$.B(317818, '+', J$.B(317810, '+', J$.T(3018265, '-----END ', 21, false), J$.R(3018273, 'header', header, false, false)), J$.T(3018281, '-----\n', 21, false)), J$.R(3018289, 'o', o, false, false))), o, false, false);
                            return J$.Rt(3018353, J$.M(3018345, J$.R(3018321, 'buf', buf, false, false), 'slice', false)(J$.T(3018329, 0, 22, false), J$.R(3018337, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(3018729, J$e);
                        } finally {
                            if (J$.Fr(3018737))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3018481, 'assert', assert, false, false, false);
            J$.N(3018489, 'asn1', asn1, false, false, false);
            J$.N(3018497, 'crypto', crypto, false, false, false);
            J$.N(3018505, 'Buffer', Buffer, false, false, false);
            J$.N(3018513, 'algs', algs, false, false, false);
            J$.N(3018521, 'utils', utils, false, false, false);
            J$.N(3018529, 'Key', Key, false, false, false);
            J$.N(3018537, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(3018545, 'pkcs1', pkcs1, false, false, false);
            J$.N(3018553, 'pkcs8', pkcs8, false, false, false);
            J$.N(3018561, 'sshpriv', sshpriv, false, false, false);
            J$.N(3018569, 'rfc4253', rfc4253, false, false, false);
            J$.N(3018577, 'errors', errors, false, false, false);
            J$.N(3018585, 'OID_PBES2', OID_PBES2, false, false, false);
            J$.N(3018593, 'OID_PBKDF2', OID_PBKDF2, false, false, false);
            J$.N(3018601, 'OID_TO_CIPHER', OID_TO_CIPHER, false, false, false);
            J$.N(3018609, 'CIPHER_TO_OID', CIPHER_TO_OID, false, false, false);
            J$.N(3018617, 'OID_TO_HASH', OID_TO_HASH, false, false, false);
            J$.N(3018625, 'HASH_TO_OID', HASH_TO_OID, false, false, false);
            read = J$.N(3018641, 'read', J$.T(3018633, read, 12, false), true, false, false);
            write = J$.N(3018657, 'write', J$.T(3018649, write, 12, false), true, false, false);
            J$.T(3011305, 'use strict', 21, false);
            J$.F(3011329, J$.I(typeof require === 'undefined' ? require = J$.R(3011313, 'require', undefined, true, true) : require = J$.R(3011313, 'require', require, true, true)), false)(J$.T(3011321, 'core-js/modules/es.array.concat', 21, false));
            J$.F(3011353, J$.I(typeof require === 'undefined' ? require = J$.R(3011337, 'require', undefined, true, true) : require = J$.R(3011337, 'require', require, true, true)), false)(J$.T(3011345, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(3011377, J$.I(typeof require === 'undefined' ? require = J$.R(3011361, 'require', undefined, true, true) : require = J$.R(3011361, 'require', require, true, true)), false)(J$.T(3011369, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(3011401, J$.I(typeof require === 'undefined' ? require = J$.R(3011385, 'require', undefined, true, true) : require = J$.R(3011385, 'require', require, true, true)), false)(J$.T(3011393, 'core-js/modules/es.array.join', 21, false));
            J$.F(3011425, J$.I(typeof require === 'undefined' ? require = J$.R(3011409, 'require', undefined, true, true) : require = J$.R(3011409, 'require', require, true, true)), false)(J$.T(3011417, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3011449, J$.I(typeof require === 'undefined' ? require = J$.R(3011433, 'require', undefined, true, true) : require = J$.R(3011433, 'require', require, true, true)), false)(J$.T(3011441, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(3011473, J$.I(typeof require === 'undefined' ? require = J$.R(3011457, 'require', undefined, true, true) : require = J$.R(3011457, 'require', require, true, true)), false)(J$.T(3011465, 'core-js/modules/es.object.keys', 21, false));
            J$.F(3011497, J$.I(typeof require === 'undefined' ? require = J$.R(3011481, 'require', undefined, true, true) : require = J$.R(3011481, 'require', require, true, true)), false)(J$.T(3011489, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3011521, J$.I(typeof require === 'undefined' ? require = J$.R(3011505, 'require', undefined, true, true) : require = J$.R(3011505, 'require', require, true, true)), false)(J$.T(3011513, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(3011545, J$.I(typeof require === 'undefined' ? require = J$.R(3011529, 'require', undefined, true, true) : require = J$.R(3011529, 'require', require, true, true)), false)(J$.T(3011537, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(3011569, J$.I(typeof require === 'undefined' ? require = J$.R(3011553, 'require', undefined, true, true) : require = J$.R(3011553, 'require', require, true, true)), false)(J$.T(3011561, 'core-js/modules/es.string.match', 21, false));
            J$.F(3011593, J$.I(typeof require === 'undefined' ? require = J$.R(3011577, 'require', undefined, true, true) : require = J$.R(3011577, 'require', require, true, true)), false)(J$.T(3011585, 'core-js/modules/es.string.split', 21, false));
            J$.F(3011617, J$.I(typeof require === 'undefined' ? require = J$.R(3011601, 'require', undefined, true, true) : require = J$.R(3011601, 'require', require, true, true)), false)(J$.T(3011609, 'core-js/modules/es.string.trim', 21, false));
            J$.F(3011641, J$.I(typeof require === 'undefined' ? require = J$.R(3011625, 'require', undefined, true, true) : require = J$.R(3011625, 'require', require, true, true)), false)(J$.T(3011633, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(3011665, J$.I(typeof require === 'undefined' ? require = J$.R(3011649, 'require', undefined, true, true) : require = J$.R(3011649, 'require', require, true, true)), false)(J$.T(3011657, 'core-js/modules/es.array.concat', 21, false));
            J$.F(3011689, J$.I(typeof require === 'undefined' ? require = J$.R(3011673, 'require', undefined, true, true) : require = J$.R(3011673, 'require', require, true, true)), false)(J$.T(3011681, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(3011713, J$.I(typeof require === 'undefined' ? require = J$.R(3011697, 'require', undefined, true, true) : require = J$.R(3011697, 'require', require, true, true)), false)(J$.T(3011705, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(3011737, J$.I(typeof require === 'undefined' ? require = J$.R(3011721, 'require', undefined, true, true) : require = J$.R(3011721, 'require', require, true, true)), false)(J$.T(3011729, 'core-js/modules/es.array.join', 21, false));
            J$.F(3011761, J$.I(typeof require === 'undefined' ? require = J$.R(3011745, 'require', undefined, true, true) : require = J$.R(3011745, 'require', require, true, true)), false)(J$.T(3011753, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3011785, J$.I(typeof require === 'undefined' ? require = J$.R(3011769, 'require', undefined, true, true) : require = J$.R(3011769, 'require', require, true, true)), false)(J$.T(3011777, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(3011809, J$.I(typeof require === 'undefined' ? require = J$.R(3011793, 'require', undefined, true, true) : require = J$.R(3011793, 'require', require, true, true)), false)(J$.T(3011801, 'core-js/modules/es.object.keys', 21, false));
            J$.F(3011833, J$.I(typeof require === 'undefined' ? require = J$.R(3011817, 'require', undefined, true, true) : require = J$.R(3011817, 'require', require, true, true)), false)(J$.T(3011825, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3011857, J$.I(typeof require === 'undefined' ? require = J$.R(3011841, 'require', undefined, true, true) : require = J$.R(3011841, 'require', require, true, true)), false)(J$.T(3011849, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(3011881, J$.I(typeof require === 'undefined' ? require = J$.R(3011865, 'require', undefined, true, true) : require = J$.R(3011865, 'require', require, true, true)), false)(J$.T(3011873, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(3011905, J$.I(typeof require === 'undefined' ? require = J$.R(3011889, 'require', undefined, true, true) : require = J$.R(3011889, 'require', require, true, true)), false)(J$.T(3011897, 'core-js/modules/es.string.match', 21, false));
            J$.F(3011929, J$.I(typeof require === 'undefined' ? require = J$.R(3011913, 'require', undefined, true, true) : require = J$.R(3011913, 'require', require, true, true)), false)(J$.T(3011921, 'core-js/modules/es.string.split', 21, false));
            J$.F(3011953, J$.I(typeof require === 'undefined' ? require = J$.R(3011937, 'require', undefined, true, true) : require = J$.R(3011937, 'require', require, true, true)), false)(J$.T(3011945, 'core-js/modules/es.string.trim', 21, false));
            J$.F(3011977, J$.I(typeof require === 'undefined' ? require = J$.R(3011961, 'require', undefined, true, true) : require = J$.R(3011961, 'require', require, true, true)), false)(J$.T(3011969, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(3012001, J$.I(typeof require === 'undefined' ? require = J$.R(3011985, 'require', undefined, true, true) : require = J$.R(3011985, 'require', require, true, true)), false)(J$.T(3011993, 'core-js/modules/es.array.concat', 21, false));
            J$.F(3012025, J$.I(typeof require === 'undefined' ? require = J$.R(3012009, 'require', undefined, true, true) : require = J$.R(3012009, 'require', require, true, true)), false)(J$.T(3012017, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(3012049, J$.I(typeof require === 'undefined' ? require = J$.R(3012033, 'require', undefined, true, true) : require = J$.R(3012033, 'require', require, true, true)), false)(J$.T(3012041, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(3012073, J$.I(typeof require === 'undefined' ? require = J$.R(3012057, 'require', undefined, true, true) : require = J$.R(3012057, 'require', require, true, true)), false)(J$.T(3012065, 'core-js/modules/es.array.join', 21, false));
            J$.F(3012097, J$.I(typeof require === 'undefined' ? require = J$.R(3012081, 'require', undefined, true, true) : require = J$.R(3012081, 'require', require, true, true)), false)(J$.T(3012089, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3012121, J$.I(typeof require === 'undefined' ? require = J$.R(3012105, 'require', undefined, true, true) : require = J$.R(3012105, 'require', require, true, true)), false)(J$.T(3012113, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(3012145, J$.I(typeof require === 'undefined' ? require = J$.R(3012129, 'require', undefined, true, true) : require = J$.R(3012129, 'require', require, true, true)), false)(J$.T(3012137, 'core-js/modules/es.object.keys', 21, false));
            J$.F(3012169, J$.I(typeof require === 'undefined' ? require = J$.R(3012153, 'require', undefined, true, true) : require = J$.R(3012153, 'require', require, true, true)), false)(J$.T(3012161, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3012193, J$.I(typeof require === 'undefined' ? require = J$.R(3012177, 'require', undefined, true, true) : require = J$.R(3012177, 'require', require, true, true)), false)(J$.T(3012185, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(3012217, J$.I(typeof require === 'undefined' ? require = J$.R(3012201, 'require', undefined, true, true) : require = J$.R(3012201, 'require', require, true, true)), false)(J$.T(3012209, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(3012241, J$.I(typeof require === 'undefined' ? require = J$.R(3012225, 'require', undefined, true, true) : require = J$.R(3012225, 'require', require, true, true)), false)(J$.T(3012233, 'core-js/modules/es.string.match', 21, false));
            J$.F(3012265, J$.I(typeof require === 'undefined' ? require = J$.R(3012249, 'require', undefined, true, true) : require = J$.R(3012249, 'require', require, true, true)), false)(J$.T(3012257, 'core-js/modules/es.string.split', 21, false));
            J$.F(3012289, J$.I(typeof require === 'undefined' ? require = J$.R(3012273, 'require', undefined, true, true) : require = J$.R(3012273, 'require', require, true, true)), false)(J$.T(3012281, 'core-js/modules/es.string.trim', 21, false));
            J$.F(3012313, J$.I(typeof require === 'undefined' ? require = J$.R(3012297, 'require', undefined, true, true) : require = J$.R(3012297, 'require', require, true, true)), false)(J$.T(3012305, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.F(3012337, J$.I(typeof require === 'undefined' ? require = J$.R(3012321, 'require', undefined, true, true) : require = J$.R(3012321, 'require', require, true, true)), false)(J$.T(3012329, 'core-js/modules/es.array.concat', 21, false));
            J$.F(3012361, J$.I(typeof require === 'undefined' ? require = J$.R(3012345, 'require', undefined, true, true) : require = J$.R(3012345, 'require', require, true, true)), false)(J$.T(3012353, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(3012385, J$.I(typeof require === 'undefined' ? require = J$.R(3012369, 'require', undefined, true, true) : require = J$.R(3012369, 'require', require, true, true)), false)(J$.T(3012377, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(3012409, J$.I(typeof require === 'undefined' ? require = J$.R(3012393, 'require', undefined, true, true) : require = J$.R(3012393, 'require', require, true, true)), false)(J$.T(3012401, 'core-js/modules/es.array.join', 21, false));
            J$.F(3012433, J$.I(typeof require === 'undefined' ? require = J$.R(3012417, 'require', undefined, true, true) : require = J$.R(3012417, 'require', require, true, true)), false)(J$.T(3012425, 'core-js/modules/es.array.slice', 21, false));
            J$.F(3012457, J$.I(typeof require === 'undefined' ? require = J$.R(3012441, 'require', undefined, true, true) : require = J$.R(3012441, 'require', require, true, true)), false)(J$.T(3012449, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(3012481, J$.I(typeof require === 'undefined' ? require = J$.R(3012465, 'require', undefined, true, true) : require = J$.R(3012465, 'require', require, true, true)), false)(J$.T(3012473, 'core-js/modules/es.object.keys', 21, false));
            J$.F(3012505, J$.I(typeof require === 'undefined' ? require = J$.R(3012489, 'require', undefined, true, true) : require = J$.R(3012489, 'require', require, true, true)), false)(J$.T(3012497, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(3012529, J$.I(typeof require === 'undefined' ? require = J$.R(3012513, 'require', undefined, true, true) : require = J$.R(3012513, 'require', require, true, true)), false)(J$.T(3012521, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(3012553, J$.I(typeof require === 'undefined' ? require = J$.R(3012537, 'require', undefined, true, true) : require = J$.R(3012537, 'require', require, true, true)), false)(J$.T(3012545, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(3012577, J$.I(typeof require === 'undefined' ? require = J$.R(3012561, 'require', undefined, true, true) : require = J$.R(3012561, 'require', require, true, true)), false)(J$.T(3012569, 'core-js/modules/es.string.match', 21, false));
            J$.F(3012601, J$.I(typeof require === 'undefined' ? require = J$.R(3012585, 'require', undefined, true, true) : require = J$.R(3012585, 'require', require, true, true)), false)(J$.T(3012593, 'core-js/modules/es.string.split', 21, false));
            J$.F(3012625, J$.I(typeof require === 'undefined' ? require = J$.R(3012609, 'require', undefined, true, true) : require = J$.R(3012609, 'require', require, true, true)), false)(J$.T(3012617, 'core-js/modules/es.string.trim', 21, false));
            J$.F(3012649, J$.I(typeof require === 'undefined' ? require = J$.R(3012633, 'require', undefined, true, true) : require = J$.R(3012633, 'require', require, true, true)), false)(J$.T(3012641, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.P(3012689, J$.I(typeof module === 'undefined' ? module = J$.R(3012657, 'module', undefined, true, true) : module = J$.R(3012657, 'module', module, true, true)), 'exports', J$.T(3012681, {
                read: J$.R(3012665, 'read', read, false, true),
                write: J$.R(3012673, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(3012721, 'assert', J$.F(3012713, J$.I(typeof require === 'undefined' ? require = J$.R(3012697, 'require', undefined, true, true) : require = J$.R(3012697, 'require', require, true, true)), false)(J$.T(3012705, 'assert-plus', 21, false)), assert, false, true);
            var asn1 = J$.W(3012753, 'asn1', J$.F(3012745, J$.I(typeof require === 'undefined' ? require = J$.R(3012729, 'require', undefined, true, true) : require = J$.R(3012729, 'require', require, true, true)), false)(J$.T(3012737, 'asn1', 21, false)), asn1, false, true);
            var crypto = J$.W(3012785, 'crypto', J$.F(3012777, J$.I(typeof require === 'undefined' ? require = J$.R(3012761, 'require', undefined, true, true) : require = J$.R(3012761, 'require', require, true, true)), false)(J$.T(3012769, 'crypto', 21, false)), crypto, false, true);
            var Buffer = J$.W(3012825, 'Buffer', J$.G(3012817, J$.F(3012809, J$.I(typeof require === 'undefined' ? require = J$.R(3012793, 'require', undefined, true, true) : require = J$.R(3012793, 'require', require, true, true)), false)(J$.T(3012801, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(3012857, 'algs', J$.F(3012849, J$.I(typeof require === 'undefined' ? require = J$.R(3012833, 'require', undefined, true, true) : require = J$.R(3012833, 'require', require, true, true)), false)(J$.T(3012841, '../algs', 21, false)), algs, false, true);
            var utils = J$.W(3012889, 'utils', J$.F(3012881, J$.I(typeof require === 'undefined' ? require = J$.R(3012865, 'require', undefined, true, true) : require = J$.R(3012865, 'require', require, true, true)), false)(J$.T(3012873, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(3012921, 'Key', J$.F(3012913, J$.I(typeof require === 'undefined' ? require = J$.R(3012897, 'require', undefined, true, true) : require = J$.R(3012897, 'require', require, true, true)), false)(J$.T(3012905, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(3012953, 'PrivateKey', J$.F(3012945, J$.I(typeof require === 'undefined' ? require = J$.R(3012929, 'require', undefined, true, true) : require = J$.R(3012929, 'require', require, true, true)), false)(J$.T(3012937, '../private-key', 21, false)), PrivateKey, false, true);
            var pkcs1 = J$.W(3012985, 'pkcs1', J$.F(3012977, J$.I(typeof require === 'undefined' ? require = J$.R(3012961, 'require', undefined, true, true) : require = J$.R(3012961, 'require', require, true, true)), false)(J$.T(3012969, './pkcs1', 21, false)), pkcs1, false, true);
            var pkcs8 = J$.W(3013017, 'pkcs8', J$.F(3013009, J$.I(typeof require === 'undefined' ? require = J$.R(3012993, 'require', undefined, true, true) : require = J$.R(3012993, 'require', require, true, true)), false)(J$.T(3013001, './pkcs8', 21, false)), pkcs8, false, true);
            var sshpriv = J$.W(3013049, 'sshpriv', J$.F(3013041, J$.I(typeof require === 'undefined' ? require = J$.R(3013025, 'require', undefined, true, true) : require = J$.R(3013025, 'require', require, true, true)), false)(J$.T(3013033, './ssh-private', 21, false)), sshpriv, false, true);
            var rfc4253 = J$.W(3013081, 'rfc4253', J$.F(3013073, J$.I(typeof require === 'undefined' ? require = J$.R(3013057, 'require', undefined, true, true) : require = J$.R(3013057, 'require', require, true, true)), false)(J$.T(3013065, './rfc4253', 21, false)), rfc4253, false, true);
            var errors = J$.W(3013113, 'errors', J$.F(3013105, J$.I(typeof require === 'undefined' ? require = J$.R(3013089, 'require', undefined, true, true) : require = J$.R(3013089, 'require', require, true, true)), false)(J$.T(3013097, '../errors', 21, false)), errors, false, true);
            var OID_PBES2 = J$.W(3013129, 'OID_PBES2', J$.T(3013121, '1.2.840.113549.1.5.13', 21, false), OID_PBES2, false, true);
            var OID_PBKDF2 = J$.W(3013145, 'OID_PBKDF2', J$.T(3013137, '1.2.840.113549.1.5.12', 21, false), OID_PBKDF2, false, true);
            var OID_TO_CIPHER = J$.W(3013185, 'OID_TO_CIPHER', J$.T(3013177, {
                '1.2.840.113549.3.7': J$.T(3013153, '3des-cbc', 21, false),
                '2.16.840.1.101.3.4.1.2': J$.T(3013161, 'aes128-cbc', 21, false),
                '2.16.840.1.101.3.4.1.42': J$.T(3013169, 'aes256-cbc', 21, false)
            }, 11, false), OID_TO_CIPHER, false, true);
            var CIPHER_TO_OID = J$.W(3013201, 'CIPHER_TO_OID', J$.T(3013193, {}, 11, false), CIPHER_TO_OID, false, true);
            J$.M(3013313, J$.M(3013225, J$.I(typeof Object === 'undefined' ? Object = J$.R(3013209, 'Object', undefined, true, true) : Object = J$.R(3013209, 'Object', Object, true, true)), 'keys', false)(J$.R(3013217, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true)), 'forEach', false)(J$.T(3013305, function (k) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3013281, arguments.callee, this, arguments);
                            arguments = J$.N(3013289, 'arguments', arguments, true, false, false);
                            k = J$.N(3013297, 'k', k, true, false, false);
                            J$.P(3013273, J$.R(3013233, 'CIPHER_TO_OID', CIPHER_TO_OID, false, true), J$.G(3013257, J$.R(3013241, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true), J$.R(3013249, 'k', k, false, false)), J$.R(3013265, 'k', k, false, false));
                        } catch (J$e) {
                            J$.Ex(3018665, J$e);
                        } finally {
                            if (J$.Fr(3018673))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var OID_TO_HASH = J$.W(3013353, 'OID_TO_HASH', J$.T(3013345, {
                '1.2.840.113549.2.7': J$.T(3013321, 'sha1', 21, false),
                '1.2.840.113549.2.9': J$.T(3013329, 'sha256', 21, false),
                '1.2.840.113549.2.11': J$.T(3013337, 'sha512', 21, false)
            }, 11, false), OID_TO_HASH, false, true);
            var HASH_TO_OID = J$.W(3013369, 'HASH_TO_OID', J$.T(3013361, {}, 11, false), HASH_TO_OID, false, true);
            J$.M(3013481, J$.M(3013393, J$.I(typeof Object === 'undefined' ? Object = J$.R(3013377, 'Object', undefined, true, true) : Object = J$.R(3013377, 'Object', Object, true, true)), 'keys', false)(J$.R(3013385, 'OID_TO_HASH', OID_TO_HASH, false, true)), 'forEach', false)(J$.T(3013473, function (k) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3013449, arguments.callee, this, arguments);
                            arguments = J$.N(3013457, 'arguments', arguments, true, false, false);
                            k = J$.N(3013465, 'k', k, true, false, false);
                            J$.P(3013441, J$.R(3013401, 'HASH_TO_OID', HASH_TO_OID, false, true), J$.G(3013425, J$.R(3013409, 'OID_TO_HASH', OID_TO_HASH, false, true), J$.R(3013417, 'k', k, false, false)), J$.R(3013433, 'k', k, false, false));
                        } catch (J$e) {
                            J$.Ex(3018681, J$e);
                        } finally {
                            if (J$.Fr(3018689))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(3018745, J$e);
        } finally {
            if (J$.Sr(3018753))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

