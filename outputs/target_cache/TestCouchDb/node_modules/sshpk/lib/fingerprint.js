J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(2988377, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/sshpk/lib/fingerprint.js');
            function Fingerprint(opts) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2984745, arguments.callee, this, arguments);
                            arguments = J$.N(2984753, 'arguments', arguments, true, false, false);
                            opts = J$.N(2984761, 'opts', opts, true, false, false);
                            J$.M(2984401, J$.R(2984377, 'assert', assert, false, true), 'object', false)(J$.R(2984385, 'opts', opts, false, false), J$.T(2984393, 'options', 21, false));
                            J$.M(2984441, J$.R(2984409, 'assert', assert, false, true), 'string', false)(J$.G(2984425, J$.R(2984417, 'opts', opts, false, false), 'type'), J$.T(2984433, 'options.type', 21, false));
                            J$.M(2984481, J$.R(2984449, 'assert', assert, false, true), 'buffer', false)(J$.G(2984465, J$.R(2984457, 'opts', opts, false, false), 'hash'), J$.T(2984473, 'options.hash', 21, false));
                            J$.M(2984521, J$.R(2984489, 'assert', assert, false, true), 'string', false)(J$.G(2984505, J$.R(2984497, 'opts', opts, false, false), 'algorithm'), J$.T(2984513, 'options.algorithm', 21, false));
                            J$.P(2984561, J$.R(2984529, 'this', this, false, false), 'algorithm', J$.M(2984553, J$.G(2984545, J$.R(2984537, 'opts', opts, false, false), 'algorithm'), 'toLowerCase', false)());
                            if (J$.C(169872, J$.B(315298, '!==', J$.G(2984601, J$.G(2984577, J$.R(2984569, 'algs', algs, false, true), 'hashAlgs'), J$.G(2984593, J$.R(2984585, 'this', this, false, false), 'algorithm')), J$.T(2984609, true, 23, false))))
                                throw J$.F(2984641, J$.R(2984617, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.G(2984633, J$.R(2984625, 'this', this, false, false), 'algorithm'));
                            J$.P(2984673, J$.R(2984649, 'this', this, false, false), 'hash', J$.G(2984665, J$.R(2984657, 'opts', opts, false, false), 'hash'));
                            J$.P(2984705, J$.R(2984681, 'this', this, false, false), 'type', J$.G(2984697, J$.R(2984689, 'opts', opts, false, false), 'type'));
                            J$.P(2984737, J$.R(2984713, 'this', this, false, false), 'hashType', J$.G(2984729, J$.R(2984721, 'opts', opts, false, false), 'hashType'));
                        } catch (J$e) {
                            J$.Ex(2988553, J$e);
                        } finally {
                            if (J$.Fr(2988561))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addColons(s) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2987905, arguments.callee, this, arguments);
                            arguments = J$.N(2987913, 'arguments', arguments, true, false, false);
                            s = J$.N(2987921, 's', s, true, false, false);
                            return J$.Rt(2987897, J$.M(2987889, J$.R(2987865, 's', s, false, false), 'replace', false)(J$.T(2987873, /(.{2})(?=.)/g, 14, false), J$.T(2987881, '$1:', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2988649, J$e);
                        } finally {
                            if (J$.Fr(2988657))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function base64Strip(s) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2987969, arguments.callee, this, arguments);
                            arguments = J$.N(2987977, 'arguments', arguments, true, false, false);
                            s = J$.N(2987985, 's', s, true, false, false);
                            return J$.Rt(2987961, J$.M(2987953, J$.R(2987929, 's', s, false, false), 'replace', false)(J$.T(2987937, /=*$/, 14, false), J$.T(2987945, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2988665, J$e);
                        } finally {
                            if (J$.Fr(2988673))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function sshBase64Format(alg, h) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2988049, arguments.callee, this, arguments);
                            arguments = J$.N(2988057, 'arguments', arguments, true, false, false);
                            alg = J$.N(2988065, 'alg', alg, true, false, false);
                            h = J$.N(2988073, 'h', h, true, false, false);
                            return J$.Rt(2988041, J$.B(315554, '+', J$.B(315546, '+', J$.M(2988001, J$.R(2987993, 'alg', alg, false, false), 'toUpperCase', false)(), J$.T(2988009, ':', 21, false)), J$.F(2988033, J$.R(2988017, 'base64Strip', base64Strip, false, true), false)(J$.R(2988025, 'h', h, false, false))));
                        } catch (J$e) {
                            J$.Ex(2988681, J$e);
                        } finally {
                            if (J$.Fr(2988689))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2988385, 'assert', assert, false, false, false);
            J$.N(2988393, 'Buffer', Buffer, false, false, false);
            J$.N(2988401, 'algs', algs, false, false, false);
            J$.N(2988409, 'crypto', crypto, false, false, false);
            J$.N(2988417, 'errs', errs, false, false, false);
            J$.N(2988425, 'Key', Key, false, false, false);
            J$.N(2988433, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(2988441, 'Certificate', Certificate, false, false, false);
            J$.N(2988449, 'utils', utils, false, false, false);
            J$.N(2988457, 'FingerprintFormatError', FingerprintFormatError, false, false, false);
            J$.N(2988465, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            Fingerprint = J$.N(2988481, 'Fingerprint', J$.T(2988473, Fingerprint, 12, false), true, false, false);
            J$.N(2988489, 'base64RE', base64RE, false, false, false);
            J$.N(2988497, 'hexRE', hexRE, false, false, false);
            addColons = J$.N(2988513, 'addColons', J$.T(2988505, addColons, 12, false), true, false, false);
            base64Strip = J$.N(2988529, 'base64Strip', J$.T(2988521, base64Strip, 12, false), true, false, false);
            sshBase64Format = J$.N(2988545, 'sshBase64Format', J$.T(2988537, sshBase64Format, 12, false), true, false, false);
            J$.T(2982945, 'use strict', 21, false);
            J$.F(2982969, J$.I(typeof require === 'undefined' ? require = J$.R(2982953, 'require', undefined, true, true) : require = J$.R(2982953, 'require', require, true, true)), false)(J$.T(2982961, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2982993, J$.I(typeof require === 'undefined' ? require = J$.R(2982977, 'require', undefined, true, true) : require = J$.R(2982977, 'require', require, true, true)), false)(J$.T(2982985, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2983017, J$.I(typeof require === 'undefined' ? require = J$.R(2983001, 'require', undefined, true, true) : require = J$.R(2983001, 'require', require, true, true)), false)(J$.T(2983009, 'core-js/modules/es.array.join', 21, false));
            J$.F(2983041, J$.I(typeof require === 'undefined' ? require = J$.R(2983025, 'require', undefined, true, true) : require = J$.R(2983025, 'require', require, true, true)), false)(J$.T(2983033, 'core-js/modules/es.array.map', 21, false));
            J$.F(2983065, J$.I(typeof require === 'undefined' ? require = J$.R(2983049, 'require', undefined, true, true) : require = J$.R(2983049, 'require', require, true, true)), false)(J$.T(2983057, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2983089, J$.I(typeof require === 'undefined' ? require = J$.R(2983073, 'require', undefined, true, true) : require = J$.R(2983073, 'require', require, true, true)), false)(J$.T(2983081, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2983113, J$.I(typeof require === 'undefined' ? require = J$.R(2983097, 'require', undefined, true, true) : require = J$.R(2983097, 'require', require, true, true)), false)(J$.T(2983105, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2983137, J$.I(typeof require === 'undefined' ? require = J$.R(2983121, 'require', undefined, true, true) : require = J$.R(2983121, 'require', require, true, true)), false)(J$.T(2983129, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2983161, J$.I(typeof require === 'undefined' ? require = J$.R(2983145, 'require', undefined, true, true) : require = J$.R(2983145, 'require', require, true, true)), false)(J$.T(2983153, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2983185, J$.I(typeof require === 'undefined' ? require = J$.R(2983169, 'require', undefined, true, true) : require = J$.R(2983169, 'require', require, true, true)), false)(J$.T(2983177, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2983209, J$.I(typeof require === 'undefined' ? require = J$.R(2983193, 'require', undefined, true, true) : require = J$.R(2983193, 'require', require, true, true)), false)(J$.T(2983201, 'core-js/modules/es.string.split', 21, false));
            J$.F(2983233, J$.I(typeof require === 'undefined' ? require = J$.R(2983217, 'require', undefined, true, true) : require = J$.R(2983217, 'require', require, true, true)), false)(J$.T(2983225, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2983257, J$.I(typeof require === 'undefined' ? require = J$.R(2983241, 'require', undefined, true, true) : require = J$.R(2983241, 'require', require, true, true)), false)(J$.T(2983249, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2983281, J$.I(typeof require === 'undefined' ? require = J$.R(2983265, 'require', undefined, true, true) : require = J$.R(2983265, 'require', require, true, true)), false)(J$.T(2983273, 'core-js/modules/es.array.join', 21, false));
            J$.F(2983305, J$.I(typeof require === 'undefined' ? require = J$.R(2983289, 'require', undefined, true, true) : require = J$.R(2983289, 'require', require, true, true)), false)(J$.T(2983297, 'core-js/modules/es.array.map', 21, false));
            J$.F(2983329, J$.I(typeof require === 'undefined' ? require = J$.R(2983313, 'require', undefined, true, true) : require = J$.R(2983313, 'require', require, true, true)), false)(J$.T(2983321, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2983353, J$.I(typeof require === 'undefined' ? require = J$.R(2983337, 'require', undefined, true, true) : require = J$.R(2983337, 'require', require, true, true)), false)(J$.T(2983345, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2983377, J$.I(typeof require === 'undefined' ? require = J$.R(2983361, 'require', undefined, true, true) : require = J$.R(2983361, 'require', require, true, true)), false)(J$.T(2983369, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2983401, J$.I(typeof require === 'undefined' ? require = J$.R(2983385, 'require', undefined, true, true) : require = J$.R(2983385, 'require', require, true, true)), false)(J$.T(2983393, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2983425, J$.I(typeof require === 'undefined' ? require = J$.R(2983409, 'require', undefined, true, true) : require = J$.R(2983409, 'require', require, true, true)), false)(J$.T(2983417, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2983449, J$.I(typeof require === 'undefined' ? require = J$.R(2983433, 'require', undefined, true, true) : require = J$.R(2983433, 'require', require, true, true)), false)(J$.T(2983441, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2983473, J$.I(typeof require === 'undefined' ? require = J$.R(2983457, 'require', undefined, true, true) : require = J$.R(2983457, 'require', require, true, true)), false)(J$.T(2983465, 'core-js/modules/es.string.split', 21, false));
            J$.F(2983497, J$.I(typeof require === 'undefined' ? require = J$.R(2983481, 'require', undefined, true, true) : require = J$.R(2983481, 'require', require, true, true)), false)(J$.T(2983489, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2983521, J$.I(typeof require === 'undefined' ? require = J$.R(2983505, 'require', undefined, true, true) : require = J$.R(2983505, 'require', require, true, true)), false)(J$.T(2983513, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2983545, J$.I(typeof require === 'undefined' ? require = J$.R(2983529, 'require', undefined, true, true) : require = J$.R(2983529, 'require', require, true, true)), false)(J$.T(2983537, 'core-js/modules/es.array.join', 21, false));
            J$.F(2983569, J$.I(typeof require === 'undefined' ? require = J$.R(2983553, 'require', undefined, true, true) : require = J$.R(2983553, 'require', require, true, true)), false)(J$.T(2983561, 'core-js/modules/es.array.map', 21, false));
            J$.F(2983593, J$.I(typeof require === 'undefined' ? require = J$.R(2983577, 'require', undefined, true, true) : require = J$.R(2983577, 'require', require, true, true)), false)(J$.T(2983585, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2983617, J$.I(typeof require === 'undefined' ? require = J$.R(2983601, 'require', undefined, true, true) : require = J$.R(2983601, 'require', require, true, true)), false)(J$.T(2983609, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2983641, J$.I(typeof require === 'undefined' ? require = J$.R(2983625, 'require', undefined, true, true) : require = J$.R(2983625, 'require', require, true, true)), false)(J$.T(2983633, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2983665, J$.I(typeof require === 'undefined' ? require = J$.R(2983649, 'require', undefined, true, true) : require = J$.R(2983649, 'require', require, true, true)), false)(J$.T(2983657, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2983689, J$.I(typeof require === 'undefined' ? require = J$.R(2983673, 'require', undefined, true, true) : require = J$.R(2983673, 'require', require, true, true)), false)(J$.T(2983681, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2983713, J$.I(typeof require === 'undefined' ? require = J$.R(2983697, 'require', undefined, true, true) : require = J$.R(2983697, 'require', require, true, true)), false)(J$.T(2983705, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2983737, J$.I(typeof require === 'undefined' ? require = J$.R(2983721, 'require', undefined, true, true) : require = J$.R(2983721, 'require', require, true, true)), false)(J$.T(2983729, 'core-js/modules/es.string.split', 21, false));
            J$.F(2983761, J$.I(typeof require === 'undefined' ? require = J$.R(2983745, 'require', undefined, true, true) : require = J$.R(2983745, 'require', require, true, true)), false)(J$.T(2983753, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(2983785, J$.I(typeof require === 'undefined' ? require = J$.R(2983769, 'require', undefined, true, true) : require = J$.R(2983769, 'require', require, true, true)), false)(J$.T(2983777, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(2983809, J$.I(typeof require === 'undefined' ? require = J$.R(2983793, 'require', undefined, true, true) : require = J$.R(2983793, 'require', require, true, true)), false)(J$.T(2983801, 'core-js/modules/es.array.join', 21, false));
            J$.F(2983833, J$.I(typeof require === 'undefined' ? require = J$.R(2983817, 'require', undefined, true, true) : require = J$.R(2983817, 'require', require, true, true)), false)(J$.T(2983825, 'core-js/modules/es.array.map', 21, false));
            J$.F(2983857, J$.I(typeof require === 'undefined' ? require = J$.R(2983841, 'require', undefined, true, true) : require = J$.R(2983841, 'require', require, true, true)), false)(J$.T(2983849, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2983881, J$.I(typeof require === 'undefined' ? require = J$.R(2983865, 'require', undefined, true, true) : require = J$.R(2983865, 'require', require, true, true)), false)(J$.T(2983873, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2983905, J$.I(typeof require === 'undefined' ? require = J$.R(2983889, 'require', undefined, true, true) : require = J$.R(2983889, 'require', require, true, true)), false)(J$.T(2983897, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2983929, J$.I(typeof require === 'undefined' ? require = J$.R(2983913, 'require', undefined, true, true) : require = J$.R(2983913, 'require', require, true, true)), false)(J$.T(2983921, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2983953, J$.I(typeof require === 'undefined' ? require = J$.R(2983937, 'require', undefined, true, true) : require = J$.R(2983937, 'require', require, true, true)), false)(J$.T(2983945, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2983977, J$.I(typeof require === 'undefined' ? require = J$.R(2983961, 'require', undefined, true, true) : require = J$.R(2983961, 'require', require, true, true)), false)(J$.T(2983969, 'core-js/modules/es.string.replace', 21, false));
            J$.F(2984001, J$.I(typeof require === 'undefined' ? require = J$.R(2983985, 'require', undefined, true, true) : require = J$.R(2983985, 'require', require, true, true)), false)(J$.T(2983993, 'core-js/modules/es.string.split', 21, false));
            J$.P(2984025, J$.I(typeof module === 'undefined' ? module = J$.R(2984009, 'module', undefined, true, true) : module = J$.R(2984009, 'module', module, true, true)), 'exports', J$.R(2984017, 'Fingerprint', Fingerprint, false, true));
            var assert = J$.W(2984057, 'assert', J$.F(2984049, J$.I(typeof require === 'undefined' ? require = J$.R(2984033, 'require', undefined, true, true) : require = J$.R(2984033, 'require', require, true, true)), false)(J$.T(2984041, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(2984097, 'Buffer', J$.G(2984089, J$.F(2984081, J$.I(typeof require === 'undefined' ? require = J$.R(2984065, 'require', undefined, true, true) : require = J$.R(2984065, 'require', require, true, true)), false)(J$.T(2984073, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(2984129, 'algs', J$.F(2984121, J$.I(typeof require === 'undefined' ? require = J$.R(2984105, 'require', undefined, true, true) : require = J$.R(2984105, 'require', require, true, true)), false)(J$.T(2984113, './algs', 21, false)), algs, false, true);
            var crypto = J$.W(2984161, 'crypto', J$.F(2984153, J$.I(typeof require === 'undefined' ? require = J$.R(2984137, 'require', undefined, true, true) : require = J$.R(2984137, 'require', require, true, true)), false)(J$.T(2984145, 'crypto', 21, false)), crypto, false, true);
            var errs = J$.W(2984193, 'errs', J$.F(2984185, J$.I(typeof require === 'undefined' ? require = J$.R(2984169, 'require', undefined, true, true) : require = J$.R(2984169, 'require', require, true, true)), false)(J$.T(2984177, './errors', 21, false)), errs, false, true);
            var Key = J$.W(2984225, 'Key', J$.F(2984217, J$.I(typeof require === 'undefined' ? require = J$.R(2984201, 'require', undefined, true, true) : require = J$.R(2984201, 'require', require, true, true)), false)(J$.T(2984209, './key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(2984257, 'PrivateKey', J$.F(2984249, J$.I(typeof require === 'undefined' ? require = J$.R(2984233, 'require', undefined, true, true) : require = J$.R(2984233, 'require', require, true, true)), false)(J$.T(2984241, './private-key', 21, false)), PrivateKey, false, true);
            var Certificate = J$.W(2984289, 'Certificate', J$.F(2984281, J$.I(typeof require === 'undefined' ? require = J$.R(2984265, 'require', undefined, true, true) : require = J$.R(2984265, 'require', require, true, true)), false)(J$.T(2984273, './certificate', 21, false)), Certificate, false, true);
            var utils = J$.W(2984321, 'utils', J$.F(2984313, J$.I(typeof require === 'undefined' ? require = J$.R(2984297, 'require', undefined, true, true) : require = J$.R(2984297, 'require', require, true, true)), false)(J$.T(2984305, './utils', 21, false)), utils, false, true);
            var FingerprintFormatError = J$.W(2984345, 'FingerprintFormatError', J$.G(2984337, J$.R(2984329, 'errs', errs, false, true), 'FingerprintFormatError'), FingerprintFormatError, false, true);
            var InvalidAlgorithmError = J$.W(2984369, 'InvalidAlgorithmError', J$.G(2984361, J$.R(2984353, 'errs', errs, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            J$.P(2985249, J$.G(2984777, J$.R(2984769, 'Fingerprint', Fingerprint, false, true), 'prototype'), 'toString', J$.T(2985241, function (format) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2985217, arguments.callee, this, arguments);
                            arguments = J$.N(2985225, 'arguments', arguments, true, false, false);
                            format = J$.N(2985233, 'format', format, true, false, false);
                            if (J$.C(169896, J$.B(315306, '===', J$.R(2984785, 'format', format, false, false), J$.T(2984793, undefined, 24, false)))) {
                                if (J$.C(169888, J$.C(169880, J$.B(315314, '===', J$.G(2984809, J$.R(2984801, 'this', this, false, false), 'algorithm'), J$.T(2984817, 'md5', 21, false))) ? J$._() : J$.B(315322, '===', J$.G(2984833, J$.R(2984825, 'this', this, false, false), 'hashType'), J$.T(2984841, 'spki', 21, false))))
                                    format = J$.W(2984857, 'format', J$.T(2984849, 'hex', 21, false), format, false, false);
                                else
                                    format = J$.W(2984873, 'format', J$.T(2984865, 'base64', 21, false), format, false, false);
                            }
                            J$.M(2984897, J$.R(2984881, 'assert', assert, false, true), 'string', false)(J$.R(2984889, 'format', format, false, false));
                            switch (J$.C1(169920, J$.R(2984905, 'format', format, false, false))) {
                            case J$.C2(169928, J$.T(2985033, 'hex', 21, false)):
                                if (J$.C(169904, J$.B(315330, '===', J$.G(2984921, J$.R(2984913, 'this', this, false, false), 'hashType'), J$.T(2984929, 'spki', 21, false))))
                                    return J$.Rt(2984969, J$.M(2984961, J$.G(2984945, J$.R(2984937, 'this', this, false, false), 'hash'), 'toString', false)(J$.T(2984953, 'hex', 21, false)));
                                return J$.Rt(2985025, J$.F(2985017, J$.R(2984977, 'addColons', addColons, false, true), false)(J$.M(2985009, J$.G(2984993, J$.R(2984985, 'this', this, false, false), 'hash'), 'toString', false)(J$.T(2985001, 'hex', 21, false))));
                            case J$.C2(169936, J$.T(2985177, 'base64', 21, false)):
                                if (J$.C(169912, J$.B(315338, '===', J$.G(2985049, J$.R(2985041, 'this', this, false, false), 'hashType'), J$.T(2985057, 'spki', 21, false))))
                                    return J$.Rt(2985097, J$.M(2985089, J$.G(2985073, J$.R(2985065, 'this', this, false, false), 'hash'), 'toString', false)(J$.T(2985081, 'base64', 21, false)));
                                return J$.Rt(2985169, J$.F(2985161, J$.R(2985105, 'sshBase64Format', sshBase64Format, false, true), false)(J$.G(2985121, J$.R(2985113, 'this', this, false, false), 'algorithm'), J$.M(2985153, J$.G(2985137, J$.R(2985129, 'this', this, false, false), 'hash'), 'toString', false)(J$.T(2985145, 'base64', 21, false))));
                            default:
                                throw J$.F(2985209, J$.R(2985185, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.T(2985193, undefined, 24, false), J$.R(2985201, 'format', format, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2988569, J$e);
                        } finally {
                            if (J$.Fr(2988577))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2985977, J$.G(2985265, J$.R(2985257, 'Fingerprint', Fingerprint, false, true), 'prototype'), 'matches', J$.T(2985969, function (other) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2985929, arguments.callee, this, arguments);
                            arguments = J$.N(2985937, 'arguments', arguments, true, false, false);
                            other = J$.N(2985945, 'other', other, true, false, false);
                            J$.N(2985953, 'theirHash', theirHash, false, false, false);
                            J$.N(2985961, 'theirHash2', theirHash2, false, false, false);
                            J$.M(2985297, J$.R(2985273, 'assert', assert, false, true), 'object', false)(J$.R(2985281, 'other', other, false, false), J$.T(2985289, 'key or certificate', 21, false));
                            if (J$.C(169968, J$.C(169944, J$.B(315346, '===', J$.G(2985313, J$.R(2985305, 'this', this, false, false), 'type'), J$.T(2985321, 'key', 21, false))) ? J$.B(315354, '!==', J$.G(2985337, J$.R(2985329, 'this', this, false, false), 'hashType'), J$.T(2985345, 'ssh', 21, false)) : J$._())) {
                                J$.M(2985409, J$.R(2985353, 'utils', utils, false, true), 'assertCompatible', false)(J$.R(2985361, 'other', other, false, false), J$.R(2985369, 'Key', Key, false, true), J$.T(2985393, [
                                    J$.T(2985377, 1, 22, false),
                                    J$.T(2985385, 7, 22, false)
                                ], 10, false), J$.T(2985401, 'key with spki', 21, false));
                                if (J$.C(169952, J$.M(2985433, J$.R(2985417, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(2985425, 'other', other, false, false)))) {
                                    J$.M(2985497, J$.R(2985441, 'utils', utils, false, true), 'assertCompatible', false)(J$.R(2985449, 'other', other, false, false), J$.R(2985457, 'PrivateKey', PrivateKey, false, true), J$.T(2985481, [
                                        J$.T(2985465, 1, 22, false),
                                        J$.T(2985473, 6, 22, false)
                                    ], 10, false), J$.T(2985489, 'privatekey with spki support', 21, false));
                                }
                            } else if (J$.C(169960, J$.B(315362, '===', J$.G(2985513, J$.R(2985505, 'this', this, false, false), 'type'), J$.T(2985521, 'key', 21, false)))) {
                                J$.M(2985585, J$.R(2985529, 'utils', utils, false, true), 'assertCompatible', false)(J$.R(2985537, 'other', other, false, false), J$.R(2985545, 'Key', Key, false, true), J$.T(2985569, [
                                    J$.T(2985553, 1, 22, false),
                                    J$.T(2985561, 0, 22, false)
                                ], 10, false), J$.T(2985577, 'key', 21, false));
                            } else {
                                J$.M(2985649, J$.R(2985593, 'utils', utils, false, true), 'assertCompatible', false)(J$.R(2985601, 'other', other, false, false), J$.R(2985609, 'Certificate', Certificate, false, true), J$.T(2985633, [
                                    J$.T(2985617, 1, 22, false),
                                    J$.T(2985625, 0, 22, false)
                                ], 10, false), J$.T(2985641, 'certificate', 21, false));
                            }
                            var theirHash = J$.W(2985705, 'theirHash', J$.M(2985697, J$.R(2985657, 'other', other, false, false), 'hash', false)(J$.G(2985673, J$.R(2985665, 'this', this, false, false), 'algorithm'), J$.G(2985689, J$.R(2985681, 'this', this, false, false), 'hashType')), theirHash, false, false);
                            var theirHash2 = J$.W(2985777, 'theirHash2', J$.M(2985769, J$.M(2985753, J$.M(2985737, J$.R(2985713, 'crypto', crypto, false, true), 'createHash', false)(J$.G(2985729, J$.R(2985721, 'this', this, false, false), 'algorithm')), 'update', false)(J$.R(2985745, 'theirHash', theirHash, false, false)), 'digest', false)(J$.T(2985761, 'base64', 21, false)), theirHash2, false, false);
                            if (J$.C(169976, J$.B(315370, '===', J$.G(2985793, J$.R(2985785, 'this', this, false, false), 'hash2'), J$.T(2985801, undefined, 24, false))))
                                J$.P(2985889, J$.R(2985809, 'this', this, false, false), 'hash2', J$.M(2985881, J$.M(2985865, J$.M(2985841, J$.R(2985817, 'crypto', crypto, false, true), 'createHash', false)(J$.G(2985833, J$.R(2985825, 'this', this, false, false), 'algorithm')), 'update', false)(J$.G(2985857, J$.R(2985849, 'this', this, false, false), 'hash')), 'digest', false)(J$.T(2985873, 'base64', 21, false)));
                            return J$.Rt(2985921, J$.B(315378, '===', J$.G(2985905, J$.R(2985897, 'this', this, false, false), 'hash2'), J$.R(2985913, 'theirHash2', theirHash2, false, false)));
                        } catch (J$e) {
                            J$.Ex(2988585, J$e);
                        } finally {
                            if (J$.Fr(2988593))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var base64RE = J$.W(2985993, 'base64RE', J$.T(2985985, /^[A-Za-z0-9+\/=]+$/, 14, false), base64RE, false, true);
            var hexRE = J$.W(2986009, 'hexRE', J$.T(2986001, /^[a-fA-F0-9]+$/, 14, false), hexRE, false, true);
            J$.P(2987857, J$.R(2986017, 'Fingerprint', Fingerprint, false, true), 'parse', J$.T(2987849, function (fp, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2987777, arguments.callee, this, arguments);
                            arguments = J$.N(2987785, 'arguments', arguments, true, false, false);
                            fp = J$.N(2987793, 'fp', fp, true, false, false);
                            options = J$.N(2987801, 'options', options, true, false, false);
                            J$.N(2987809, 'alg', alg, false, false, false);
                            J$.N(2987817, 'hash', hash, false, false, false);
                            J$.N(2987825, 'enAlgs', enAlgs, false, false, false);
                            J$.N(2987833, 'hashType', hashType, false, false, false);
                            J$.N(2987841, 'parts', parts, false, false, false);
                            J$.M(2986049, J$.R(2986025, 'assert', assert, false, true), 'string', false)(J$.R(2986033, 'fp', fp, false, false), J$.T(2986041, 'fingerprint', 21, false));
                            var alg, hash, enAlgs;
                            if (J$.C(169984, J$.M(2986073, J$.I(typeof Array === 'undefined' ? Array = J$.R(2986057, 'Array', undefined, true, true) : Array = J$.R(2986057, 'Array', Array, true, true)), 'isArray', false)(J$.R(2986065, 'options', options, false, false)))) {
                                enAlgs = J$.W(2986089, 'enAlgs', J$.R(2986081, 'options', options, false, false), enAlgs, false, false);
                                options = J$.W(2986105, 'options', J$.T(2986097, {}, 11, false), options, false, false);
                            }
                            J$.M(2986137, J$.R(2986113, 'assert', assert, false, true), 'optionalObject', false)(J$.R(2986121, 'options', options, false, false), J$.T(2986129, 'options', 21, false));
                            if (J$.C(169992, J$.B(315386, '===', J$.R(2986145, 'options', options, false, false), J$.T(2986153, undefined, 24, false))))
                                options = J$.W(2986169, 'options', J$.T(2986161, {}, 11, false), options, false, false);
                            if (J$.C(170000, J$.B(315394, '!==', J$.G(2986185, J$.R(2986177, 'options', options, false, false), 'enAlgs'), J$.T(2986193, undefined, 24, false))))
                                enAlgs = J$.W(2986217, 'enAlgs', J$.G(2986209, J$.R(2986201, 'options', options, false, false), 'enAlgs'), enAlgs, false, false);
                            if (J$.C(170008, J$.B(315402, '!==', J$.G(2986233, J$.R(2986225, 'options', options, false, false), 'algorithms'), J$.T(2986241, undefined, 24, false))))
                                enAlgs = J$.W(2986265, 'enAlgs', J$.G(2986257, J$.R(2986249, 'options', options, false, false), 'algorithms'), enAlgs, false, false);
                            J$.M(2986297, J$.R(2986273, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.R(2986281, 'enAlgs', enAlgs, false, false), J$.T(2986289, 'algorithms', 21, false));
                            var hashType = J$.W(2986313, 'hashType', J$.T(2986305, 'ssh', 21, false), hashType, false, false);
                            if (J$.C(170016, J$.B(315410, '!==', J$.G(2986329, J$.R(2986321, 'options', options, false, false), 'hashType'), J$.T(2986337, undefined, 24, false))))
                                hashType = J$.W(2986361, 'hashType', J$.G(2986353, J$.R(2986345, 'options', options, false, false), 'hashType'), hashType, false, false);
                            J$.M(2986393, J$.R(2986369, 'assert', assert, false, true), 'string', false)(J$.R(2986377, 'hashType', hashType, false, false), J$.T(2986385, 'options.hashType', 21, false));
                            var parts = J$.W(2986425, 'parts', J$.M(2986417, J$.R(2986401, 'fp', fp, false, false), 'split', false)(J$.T(2986409, ':', 21, false)), parts, false, false);
                            if (J$.C(170144, J$.B(315418, '==', J$.G(2986441, J$.R(2986433, 'parts', parts, false, false), 'length'), J$.T(2986449, 2, 22, false)))) {
                                alg = J$.W(2986489, 'alg', J$.M(2986481, J$.G(2986473, J$.R(2986457, 'parts', parts, false, false), J$.T(2986465, 0, 22, false)), 'toLowerCase', false)(), alg, false, false);
                                if (J$.C(170024, J$.U(315426, '!', J$.M(2986529, J$.R(2986497, 'base64RE', base64RE, false, true), 'test', false)(J$.G(2986521, J$.R(2986505, 'parts', parts, false, false), J$.T(2986513, 1, 22, false))))))
                                    throw J$.F(2986553, J$.R(2986537, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(2986545, 'fp', fp, false, false));
                                try {
                                    hash = J$.W(2986609, 'hash', J$.M(2986601, J$.R(2986561, 'Buffer', Buffer, false, true), 'from', false)(J$.G(2986585, J$.R(2986569, 'parts', parts, false, false), J$.T(2986577, 1, 22, false)), J$.T(2986593, 'base64', 21, false)), hash, false, false);
                                } catch (e) {
                                    J$.N(2986641, 'e', e, false, false, true);
                                    throw J$.F(2986633, J$.R(2986617, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(2986625, 'fp', fp, false, false));
                                }
                            } else if (J$.C(170136, J$.B(315434, '>', J$.G(2986657, J$.R(2986649, 'parts', parts, false, false), 'length'), J$.T(2986665, 2, 22, false)))) {
                                alg = J$.W(2986681, 'alg', J$.T(2986673, 'md5', 21, false), alg, false, false);
                                if (J$.C(170032, J$.B(315442, '===', J$.M(2986713, J$.G(2986705, J$.R(2986689, 'parts', parts, false, false), J$.T(2986697, 0, 22, false)), 'toLowerCase', false)(), J$.T(2986721, 'md5', 21, false))))
                                    parts = J$.W(2986753, 'parts', J$.M(2986745, J$.R(2986729, 'parts', parts, false, false), 'slice', false)(J$.T(2986737, 1, 22, false)), parts, false, false);
                                parts = J$.W(2986921, 'parts', J$.M(2986913, J$.R(2986761, 'parts', parts, false, false), 'map', false)(J$.T(2986905, function (p) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(2986881, arguments.callee, this, arguments);
                                                arguments = J$.N(2986889, 'arguments', arguments, true, false, false);
                                                p = J$.N(2986897, 'p', p, true, false, false);
                                                while (J$.C(170040, J$.B(315450, '<', J$.G(2986777, J$.R(2986769, 'p', p, false, false), 'length'), J$.T(2986785, 2, 22, false)))) {
                                                    p = J$.W(2986809, 'p', J$.B(315458, '+', J$.T(2986793, '0', 21, false), J$.R(2986801, 'p', p, false, false)), p, false, false);
                                                }
                                                if (J$.C(170048, J$.B(315466, '>', J$.G(2986825, J$.R(2986817, 'p', p, false, false), 'length'), J$.T(2986833, 2, 22, false))))
                                                    throw J$.F(2986857, J$.R(2986841, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(2986849, 'fp', fp, false, false));
                                                return J$.Rt(2986873, J$.R(2986865, 'p', p, false, false));
                                            } catch (J$e) {
                                                J$.Ex(2988601, J$e);
                                            } finally {
                                                if (J$.Fr(2988609))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), parts, false, false);
                                parts = J$.W(2986953, 'parts', J$.M(2986945, J$.R(2986929, 'parts', parts, false, false), 'join', false)(J$.T(2986937, '', 21, false)), parts, false, false);
                                if (J$.C(170064, J$.C(170056, J$.U(315474, '!', J$.M(2986977, J$.R(2986961, 'hexRE', hexRE, false, true), 'test', false)(J$.R(2986969, 'parts', parts, false, false)))) ? J$._() : J$.B(315490, '!==', J$.B(315482, '%', J$.G(2986993, J$.R(2986985, 'parts', parts, false, false), 'length'), J$.T(2987001, 2, 22, false)), J$.T(2987009, 0, 22, false))))
                                    throw J$.F(2987033, J$.R(2987017, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(2987025, 'fp', fp, false, false));
                                try {
                                    hash = J$.W(2987073, 'hash', J$.M(2987065, J$.R(2987041, 'Buffer', Buffer, false, true), 'from', false)(J$.R(2987049, 'parts', parts, false, false), J$.T(2987057, 'hex', 21, false)), hash, false, false);
                                } catch (e) {
                                    J$.N(2987105, 'e', e, false, false, true);
                                    throw J$.F(2987097, J$.R(2987081, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(2987089, 'fp', fp, false, false));
                                }
                            } else {
                                if (J$.C(170080, J$.M(2987129, J$.R(2987113, 'hexRE', hexRE, false, true), 'test', false)(J$.R(2987121, 'fp', fp, false, false)))) {
                                    hash = J$.W(2987169, 'hash', J$.M(2987161, J$.R(2987137, 'Buffer', Buffer, false, true), 'from', false)(J$.R(2987145, 'fp', fp, false, false), J$.T(2987153, 'hex', 21, false)), hash, false, false);
                                } else if (J$.C(170072, J$.M(2987193, J$.R(2987177, 'base64RE', base64RE, false, true), 'test', false)(J$.R(2987185, 'fp', fp, false, false)))) {
                                    hash = J$.W(2987233, 'hash', J$.M(2987225, J$.R(2987201, 'Buffer', Buffer, false, true), 'from', false)(J$.R(2987209, 'fp', fp, false, false), J$.T(2987217, 'base64', 21, false)), hash, false, false);
                                } else {
                                    throw J$.F(2987257, J$.R(2987241, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(2987249, 'fp', fp, false, false));
                                }
                                switch (J$.C1(170088, J$.G(2987273, J$.R(2987265, 'hash', hash, false, false), 'length'))) {
                                case J$.C2(170096, J$.T(2987297, 32, 22, false)):
                                    alg = J$.W(2987289, 'alg', J$.T(2987281, 'sha256', 21, false), alg, false, false);
                                    break;
                                case J$.C2(170104, J$.T(2987321, 16, 22, false)):
                                    alg = J$.W(2987313, 'alg', J$.T(2987305, 'md5', 21, false), alg, false, false);
                                    break;
                                case J$.C2(170112, J$.T(2987345, 20, 22, false)):
                                    alg = J$.W(2987337, 'alg', J$.T(2987329, 'sha1', 21, false), alg, false, false);
                                    break;
                                case J$.C2(170120, J$.T(2987369, 64, 22, false)):
                                    alg = J$.W(2987361, 'alg', J$.T(2987353, 'sha512', 21, false), alg, false, false);
                                    break;
                                default:
                                    throw J$.F(2987393, J$.R(2987377, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(2987385, 'fp', fp, false, false));
                                }
                                if (J$.C(170128, J$.B(315498, '===', J$.G(2987409, J$.R(2987401, 'options', options, false, false), 'hashType'), J$.T(2987417, undefined, 24, false))))
                                    hashType = J$.W(2987433, 'hashType', J$.T(2987425, 'spki', 21, false), hashType, false, false);
                            }
                            if (J$.C(170152, J$.B(315506, '===', J$.R(2987441, 'alg', alg, false, false), J$.T(2987449, undefined, 24, false))))
                                throw J$.F(2987473, J$.R(2987457, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(2987465, 'fp', fp, false, false));
                            if (J$.C(170160, J$.B(315514, '===', J$.G(2987505, J$.G(2987489, J$.R(2987481, 'algs', algs, false, true), 'hashAlgs'), J$.R(2987497, 'alg', alg, false, false)), J$.T(2987513, undefined, 24, false))))
                                throw J$.F(2987537, J$.R(2987521, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.R(2987529, 'alg', alg, false, false));
                            if (J$.C(170176, J$.B(315522, '!==', J$.R(2987545, 'enAlgs', enAlgs, false, false), J$.T(2987553, undefined, 24, false)))) {
                                enAlgs = J$.W(2987633, 'enAlgs', J$.M(2987625, J$.R(2987561, 'enAlgs', enAlgs, false, false), 'map', false)(J$.T(2987617, function (a) {
                                    jalangiLabel4:
                                        while (true) {
                                            try {
                                                J$.Fe(2987593, arguments.callee, this, arguments);
                                                arguments = J$.N(2987601, 'arguments', arguments, true, false, false);
                                                a = J$.N(2987609, 'a', a, true, false, false);
                                                return J$.Rt(2987585, J$.M(2987577, J$.R(2987569, 'a', a, false, false), 'toLowerCase', false)());
                                            } catch (J$e) {
                                                J$.Ex(2988617, J$e);
                                            } finally {
                                                if (J$.Fr(2988625))
                                                    continue jalangiLabel4;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), enAlgs, false, false);
                                if (J$.C(170168, J$.B(315538, '===', J$.M(2987657, J$.R(2987641, 'enAlgs', enAlgs, false, false), 'indexOf', false)(J$.R(2987649, 'alg', alg, false, false)), J$.U(315530, '-', J$.T(2987665, 1, 22, false)))))
                                    throw J$.F(2987689, J$.R(2987673, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.R(2987681, 'alg', alg, false, false));
                            }
                            return J$.Rt(2987769, J$.F(2987761, J$.R(2987697, 'Fingerprint', Fingerprint, false, true), true)(J$.T(2987753, {
                                algorithm: J$.R(2987705, 'alg', alg, false, false),
                                hash: J$.R(2987713, 'hash', hash, false, false),
                                type: J$.C(170184, J$.G(2987729, J$.R(2987721, 'options', options, false, false), 'type')) ? J$._() : J$.T(2987737, 'key', 21, false),
                                hashType: J$.R(2987745, 'hashType', hashType, false, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(2988633, J$e);
                        } finally {
                            if (J$.Fr(2988641))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2988177, J$.R(2988081, 'Fingerprint', Fingerprint, false, true), 'isFingerprint', J$.T(2988169, function (obj, ver) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(2988137, arguments.callee, this, arguments);
                            arguments = J$.N(2988145, 'arguments', arguments, true, false, false);
                            obj = J$.N(2988153, 'obj', obj, true, false, false);
                            ver = J$.N(2988161, 'ver', ver, true, false, false);
                            return J$.Rt(2988129, J$.M(2988121, J$.R(2988089, 'utils', utils, false, true), 'isCompatible', false)(J$.R(2988097, 'obj', obj, false, false), J$.R(2988105, 'Fingerprint', Fingerprint, false, true), J$.R(2988113, 'ver', ver, false, false)));
                        } catch (J$e) {
                            J$.Ex(2988697, J$e);
                        } finally {
                            if (J$.Fr(2988705))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2988225, J$.G(2988193, J$.R(2988185, 'Fingerprint', Fingerprint, false, true), 'prototype'), '_sshpkApiVersion', J$.T(2988217, [
                J$.T(2988201, 1, 22, false),
                J$.T(2988209, 2, 22, false)
            ], 10, false));
            J$.P(2988369, J$.R(2988233, 'Fingerprint', Fingerprint, false, true), '_oldVersionDetect', J$.T(2988361, function (obj) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(2988337, arguments.callee, this, arguments);
                            arguments = J$.N(2988345, 'arguments', arguments, true, false, false);
                            obj = J$.N(2988353, 'obj', obj, true, false, false);
                            J$.M(2988265, J$.R(2988241, 'assert', assert, false, true), 'func', false)(J$.G(2988257, J$.R(2988249, 'obj', obj, false, false), 'toString'));
                            J$.M(2988297, J$.R(2988273, 'assert', assert, false, true), 'func', false)(J$.G(2988289, J$.R(2988281, 'obj', obj, false, false), 'matches'));
                            return J$.Rt(2988329, J$.T(2988321, [
                                J$.T(2988305, 1, 22, false),
                                J$.T(2988313, 0, 22, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(2988713, J$e);
                        } finally {
                            if (J$.Fr(2988721))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2988729, J$e);
        } finally {
            if (J$.Sr(2988737))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

