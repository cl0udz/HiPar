J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(2351001, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/http-signature/lib/index.js');
            J$.N(2351009, 'parser', parser, false, false, false);
            J$.N(2351017, 'signer', signer, false, false, false);
            J$.N(2351025, 'verify', verify, false, false, false);
            J$.N(2351033, 'utils', utils, false, false, false);
            J$.T(2350649, 'use strict', 21, false);
            var parser = J$.W(2350681, 'parser', J$.F(2350673, J$.I(typeof require === 'undefined' ? require = J$.R(2350657, 'require', undefined, true, true) : require = J$.R(2350657, 'require', require, true, true)), false)(J$.T(2350665, './parser', 21, false)), parser, false, true);
            var signer = J$.W(2350713, 'signer', J$.F(2350705, J$.I(typeof require === 'undefined' ? require = J$.R(2350689, 'require', undefined, true, true) : require = J$.R(2350689, 'require', require, true, true)), false)(J$.T(2350697, './signer', 21, false)), signer, false, true);
            var verify = J$.W(2350745, 'verify', J$.F(2350737, J$.I(typeof require === 'undefined' ? require = J$.R(2350721, 'require', undefined, true, true) : require = J$.R(2350721, 'require', require, true, true)), false)(J$.T(2350729, './verify', 21, false)), verify, false, true);
            var utils = J$.W(2350777, 'utils', J$.F(2350769, J$.I(typeof require === 'undefined' ? require = J$.R(2350753, 'require', undefined, true, true) : require = J$.R(2350753, 'require', require, true, true)), false)(J$.T(2350761, './utils', 21, false)), utils, false, true);
            J$.P(2350993, J$.I(typeof module === 'undefined' ? module = J$.R(2350785, 'module', undefined, true, true) : module = J$.R(2350785, 'module', module, true, true)), 'exports', J$.T(2350985, {
                parse: J$.G(2350801, J$.R(2350793, 'parser', parser, false, true), 'parseRequest'),
                parseRequest: J$.G(2350817, J$.R(2350809, 'parser', parser, false, true), 'parseRequest'),
                sign: J$.G(2350833, J$.R(2350825, 'signer', signer, false, true), 'signRequest'),
                signRequest: J$.G(2350849, J$.R(2350841, 'signer', signer, false, true), 'signRequest'),
                createSigner: J$.G(2350865, J$.R(2350857, 'signer', signer, false, true), 'createSigner'),
                isSigner: J$.G(2350881, J$.R(2350873, 'signer', signer, false, true), 'isSigner'),
                sshKeyToPEM: J$.G(2350897, J$.R(2350889, 'utils', utils, false, true), 'sshKeyToPEM'),
                sshKeyFingerprint: J$.G(2350913, J$.R(2350905, 'utils', utils, false, true), 'fingerprint'),
                pemToRsaSSHKey: J$.G(2350929, J$.R(2350921, 'utils', utils, false, true), 'pemToRsaSSHKey'),
                verify: J$.G(2350945, J$.R(2350937, 'verify', verify, false, true), 'verifySignature'),
                verifySignature: J$.G(2350961, J$.R(2350953, 'verify', verify, false, true), 'verifySignature'),
                verifyHMAC: J$.G(2350977, J$.R(2350969, 'verify', verify, false, true), 'verifyHMAC')
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2351041, J$e);
        } finally {
            if (J$.Sr(2351049))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

