J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2372769, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchDb/node_modules/http-signature/lib/verify.js');
            J$.N(2372777, 'assert', assert, false, false, false);
            J$.N(2372785, 'crypto', crypto, false, false, false);
            J$.N(2372793, 'sshpk', sshpk, false, false, false);
            J$.N(2372801, 'utils', utils, false, false, false);
            J$.N(2372809, 'HASH_ALGOS', HASH_ALGOS, false, false, false);
            J$.N(2372817, 'PK_ALGOS', PK_ALGOS, false, false, false);
            J$.N(2372825, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            J$.N(2372833, 'HttpSignatureError', HttpSignatureError, false, false, false);
            J$.N(2372841, 'validateAlgorithm', validateAlgorithm, false, false, false);
            J$.T(2370961, 'use strict', 21, false);
            J$.F(2370985, J$.I(typeof require === 'undefined' ? require = J$.R(2370969, 'require', undefined, true, true) : require = J$.R(2370969, 'require', require, true, true)), false)(J$.T(2370977, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2371009, J$.I(typeof require === 'undefined' ? require = J$.R(2370993, 'require', undefined, true, true) : require = J$.R(2370993, 'require', require, true, true)), false)(J$.T(2371001, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2371033, J$.I(typeof require === 'undefined' ? require = J$.R(2371017, 'require', undefined, true, true) : require = J$.R(2371017, 'require', require, true, true)), false)(J$.T(2371025, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2371057, J$.I(typeof require === 'undefined' ? require = J$.R(2371041, 'require', undefined, true, true) : require = J$.R(2371041, 'require', require, true, true)), false)(J$.T(2371049, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2371081, J$.I(typeof require === 'undefined' ? require = J$.R(2371065, 'require', undefined, true, true) : require = J$.R(2371065, 'require', require, true, true)), false)(J$.T(2371073, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2371105, J$.I(typeof require === 'undefined' ? require = J$.R(2371089, 'require', undefined, true, true) : require = J$.R(2371089, 'require', require, true, true)), false)(J$.T(2371097, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2371129, J$.I(typeof require === 'undefined' ? require = J$.R(2371113, 'require', undefined, true, true) : require = J$.R(2371113, 'require', require, true, true)), false)(J$.T(2371121, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2371153, J$.I(typeof require === 'undefined' ? require = J$.R(2371137, 'require', undefined, true, true) : require = J$.R(2371137, 'require', require, true, true)), false)(J$.T(2371145, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2371177, J$.I(typeof require === 'undefined' ? require = J$.R(2371161, 'require', undefined, true, true) : require = J$.R(2371161, 'require', require, true, true)), false)(J$.T(2371169, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2371201, J$.I(typeof require === 'undefined' ? require = J$.R(2371185, 'require', undefined, true, true) : require = J$.R(2371185, 'require', require, true, true)), false)(J$.T(2371193, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2371225, J$.I(typeof require === 'undefined' ? require = J$.R(2371209, 'require', undefined, true, true) : require = J$.R(2371209, 'require', require, true, true)), false)(J$.T(2371217, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2371249, J$.I(typeof require === 'undefined' ? require = J$.R(2371233, 'require', undefined, true, true) : require = J$.R(2371233, 'require', require, true, true)), false)(J$.T(2371241, 'core-js/modules/es.regexp.to-string', 21, false));
            var assert = J$.W(2371281, 'assert', J$.F(2371273, J$.I(typeof require === 'undefined' ? require = J$.R(2371257, 'require', undefined, true, true) : require = J$.R(2371257, 'require', require, true, true)), false)(J$.T(2371265, 'assert-plus', 21, false)), assert, false, true);
            var crypto = J$.W(2371313, 'crypto', J$.F(2371305, J$.I(typeof require === 'undefined' ? require = J$.R(2371289, 'require', undefined, true, true) : require = J$.R(2371289, 'require', require, true, true)), false)(J$.T(2371297, 'crypto', 21, false)), crypto, false, true);
            var sshpk = J$.W(2371345, 'sshpk', J$.F(2371337, J$.I(typeof require === 'undefined' ? require = J$.R(2371321, 'require', undefined, true, true) : require = J$.R(2371321, 'require', require, true, true)), false)(J$.T(2371329, 'sshpk', 21, false)), sshpk, false, true);
            var utils = J$.W(2371377, 'utils', J$.F(2371369, J$.I(typeof require === 'undefined' ? require = J$.R(2371353, 'require', undefined, true, true) : require = J$.R(2371353, 'require', require, true, true)), false)(J$.T(2371361, './utils', 21, false)), utils, false, true);
            var HASH_ALGOS = J$.W(2371401, 'HASH_ALGOS', J$.G(2371393, J$.R(2371385, 'utils', utils, false, true), 'HASH_ALGOS'), HASH_ALGOS, false, true);
            var PK_ALGOS = J$.W(2371425, 'PK_ALGOS', J$.G(2371417, J$.R(2371409, 'utils', utils, false, true), 'PK_ALGOS'), PK_ALGOS, false, true);
            var InvalidAlgorithmError = J$.W(2371449, 'InvalidAlgorithmError', J$.G(2371441, J$.R(2371433, 'utils', utils, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            var HttpSignatureError = J$.W(2371473, 'HttpSignatureError', J$.G(2371465, J$.R(2371457, 'utils', utils, false, true), 'HttpSignatureError'), HttpSignatureError, false, true);
            var validateAlgorithm = J$.W(2371497, 'validateAlgorithm', J$.G(2371489, J$.R(2371481, 'utils', utils, false, true), 'validateAlgorithm'), validateAlgorithm, false, true);
            J$.P(2372761, J$.I(typeof module === 'undefined' ? module = J$.R(2371505, 'module', undefined, true, true) : module = J$.R(2371505, 'module', module, true, true)), 'exports', J$.T(2372753, {
                verifySignature: J$.T(2372009, function verifySignature(parsedSignature, pubkey) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(2371961, arguments.callee, this, arguments);
                                arguments = J$.N(2371969, 'arguments', arguments, true, false, false);
                                parsedSignature = J$.N(2371977, 'parsedSignature', parsedSignature, true, false, false);
                                pubkey = J$.N(2371985, 'pubkey', pubkey, true, false, false);
                                J$.N(2371993, 'alg', alg, false, false, false);
                                J$.N(2372001, 'v', v, false, false, false);
                                J$.M(2371537, J$.R(2371513, 'assert', assert, false, true), 'object', false)(J$.R(2371521, 'parsedSignature', parsedSignature, false, false), J$.T(2371529, 'parsedSignature', 21, false));
                                if (J$.C(145832, J$.C(145824, J$.B(277474, '===', J$.U(277466, 'typeof', J$.R(2371545, 'pubkey', pubkey, false, false)), J$.T(2371553, 'string', 21, false))) ? J$._() : J$.M(2371577, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(2371561, 'Buffer', undefined, true, true) : Buffer = J$.R(2371561, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(2371569, 'pubkey', pubkey, false, false))))
                                    pubkey = J$.W(2371609, 'pubkey', J$.M(2371601, J$.R(2371585, 'sshpk', sshpk, false, true), 'parseKey', false)(J$.R(2371593, 'pubkey', pubkey, false, false)), pubkey, false, false);
                                J$.M(2371689, J$.R(2371617, 'assert', assert, false, true), 'ok', false)(J$.M(2371673, J$.G(2371633, J$.R(2371625, 'sshpk', sshpk, false, true), 'Key'), 'isKey', false)(J$.R(2371641, 'pubkey', pubkey, false, false), J$.T(2371665, [
                                    J$.T(2371649, 1, 22, false),
                                    J$.T(2371657, 1, 22, false)
                                ], 10, false)), J$.T(2371681, 'pubkey must be a sshpk.Key', 21, false));
                                var alg = J$.W(2371729, 'alg', J$.F(2371721, J$.R(2371697, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(2371713, J$.R(2371705, 'parsedSignature', parsedSignature, false, false), 'algorithm')), alg, false, false);
                                if (J$.C(145848, J$.C(145840, J$.B(277482, '===', J$.G(2371753, J$.R(2371737, 'alg', alg, false, false), J$.T(2371745, 0, 22, false)), J$.T(2371761, 'hmac', 21, false))) ? J$._() : J$.B(277490, '!==', J$.G(2371785, J$.R(2371769, 'alg', alg, false, false), J$.T(2371777, 0, 22, false)), J$.G(2371801, J$.R(2371793, 'pubkey', pubkey, false, false), 'type'))))
                                    return J$.Rt(2371817, J$.T(2371809, false, 23, false));
                                var v = J$.W(2371865, 'v', J$.M(2371857, J$.R(2371825, 'pubkey', pubkey, false, false), 'createVerify', false)(J$.G(2371849, J$.R(2371833, 'alg', alg, false, false), J$.T(2371841, 1, 22, false))), v, false, false);
                                J$.M(2371897, J$.R(2371873, 'v', v, false, false), 'update', false)(J$.G(2371889, J$.R(2371881, 'parsedSignature', parsedSignature, false, false), 'signingString'));
                                return J$.Rt(2371953, J$.M(2371945, J$.R(2371905, 'v', v, false, false), 'verify', false)(J$.G(2371929, J$.G(2371921, J$.R(2371913, 'parsedSignature', parsedSignature, false, false), 'params'), 'signature'), J$.T(2371937, 'base64', 21, false)));
                            } catch (J$e) {
                                J$.Ex(2372849, J$e);
                            } finally {
                                if (J$.Fr(2372857))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                verifyHMAC: J$.T(2372745, function verifyHMAC(parsedSignature, secret) {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.Fe(2372673, arguments.callee, this, arguments);
                                arguments = J$.N(2372681, 'arguments', arguments, true, false, false);
                                parsedSignature = J$.N(2372689, 'parsedSignature', parsedSignature, true, false, false);
                                secret = J$.N(2372697, 'secret', secret, true, false, false);
                                J$.N(2372705, 'alg', alg, false, false, false);
                                J$.N(2372713, 'hashAlg', hashAlg, false, false, false);
                                J$.N(2372721, 'hmac', hmac, false, false, false);
                                J$.N(2372729, 'h1', h1, false, false, false);
                                J$.N(2372737, 'h2', h2, false, false, false);
                                J$.M(2372041, J$.R(2372017, 'assert', assert, false, true), 'object', false)(J$.R(2372025, 'parsedSignature', parsedSignature, false, false), J$.T(2372033, 'parsedHMAC', 21, false));
                                J$.M(2372073, J$.R(2372049, 'assert', assert, false, true), 'string', false)(J$.R(2372057, 'secret', secret, false, false), J$.T(2372065, 'secret', 21, false));
                                var alg = J$.W(2372113, 'alg', J$.F(2372105, J$.R(2372081, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(2372097, J$.R(2372089, 'parsedSignature', parsedSignature, false, false), 'algorithm')), alg, false, false);
                                if (J$.C(145856, J$.B(277498, '!==', J$.G(2372137, J$.R(2372121, 'alg', alg, false, false), J$.T(2372129, 0, 22, false)), J$.T(2372145, 'hmac', 21, false))))
                                    return J$.Rt(2372161, J$.T(2372153, false, 23, false));
                                var hashAlg = J$.W(2372201, 'hashAlg', J$.M(2372193, J$.G(2372185, J$.R(2372169, 'alg', alg, false, false), J$.T(2372177, 1, 22, false)), 'toUpperCase', false)(), hashAlg, false, false);
                                var hmac = J$.W(2372241, 'hmac', J$.M(2372233, J$.R(2372209, 'crypto', crypto, false, true), 'createHmac', false)(J$.R(2372217, 'hashAlg', hashAlg, false, false), J$.R(2372225, 'secret', secret, false, false)), hmac, false, false);
                                J$.M(2372273, J$.R(2372249, 'hmac', hmac, false, false), 'update', false)(J$.G(2372265, J$.R(2372257, 'parsedSignature', parsedSignature, false, false), 'signingString'));
                                var h1 = J$.W(2372313, 'h1', J$.M(2372305, J$.R(2372281, 'crypto', crypto, false, true), 'createHmac', false)(J$.R(2372289, 'hashAlg', hashAlg, false, false), J$.R(2372297, 'secret', secret, false, false)), h1, false, false);
                                J$.M(2372345, J$.R(2372321, 'h1', h1, false, false), 'update', false)(J$.M(2372337, J$.R(2372329, 'hmac', hmac, false, false), 'digest', false)());
                                h1 = J$.W(2372369, 'h1', J$.M(2372361, J$.R(2372353, 'h1', h1, false, false), 'digest', false)(), h1, false, false);
                                var h2 = J$.W(2372409, 'h2', J$.M(2372401, J$.R(2372377, 'crypto', crypto, false, true), 'createHmac', false)(J$.R(2372385, 'hashAlg', hashAlg, false, false), J$.R(2372393, 'secret', secret, false, false)), h2, false, false);
                                J$.M(2372473, J$.R(2372417, 'h2', h2, false, false), 'update', false)(J$.F(2372465, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(2372425, 'Buffer', undefined, true, true) : Buffer = J$.R(2372425, 'Buffer', Buffer, true, true)), true)(J$.G(2372449, J$.G(2372441, J$.R(2372433, 'parsedSignature', parsedSignature, false, false), 'params'), 'signature'), J$.T(2372457, 'base64', 21, false)));
                                h2 = J$.W(2372497, 'h2', J$.M(2372489, J$.R(2372481, 'h2', h2, false, false), 'digest', false)(), h2, false, false);
                                if (J$.C(145864, J$.B(277514, '===', J$.U(277506, 'typeof', J$.R(2372505, 'h1', h1, false, false)), J$.T(2372513, 'string', 21, false))))
                                    return J$.Rt(2372537, J$.B(277522, '===', J$.R(2372521, 'h1', h1, false, false), J$.R(2372529, 'h2', h2, false, false)));
                                if (J$.C(145880, J$.C(145872, J$.M(2372561, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(2372545, 'Buffer', undefined, true, true) : Buffer = J$.R(2372545, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(2372553, 'h1', h1, false, false))) ? J$.U(277530, '!', J$.G(2372577, J$.R(2372569, 'h1', h1, false, false), 'equals')) : J$._()))
                                    return J$.Rt(2372633, J$.B(277538, '===', J$.M(2372601, J$.R(2372585, 'h1', h1, false, false), 'toString', false)(J$.T(2372593, 'binary', 21, false)), J$.M(2372625, J$.R(2372609, 'h2', h2, false, false), 'toString', false)(J$.T(2372617, 'binary', 21, false))));
                                return J$.Rt(2372665, J$.M(2372657, J$.R(2372641, 'h1', h1, false, false), 'equals', false)(J$.R(2372649, 'h2', h2, false, false)));
                            } catch (J$e) {
                                J$.Ex(2372865, J$e);
                            } finally {
                                if (J$.Fr(2372873))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2372881, J$e);
        } finally {
            if (J$.Sr(2372889))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

