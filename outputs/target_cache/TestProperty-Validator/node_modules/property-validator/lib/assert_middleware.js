J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(7345401, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/assert_middleware.js');
            function assertMiddleware(err, req, res, next) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7345257, arguments.callee, this, arguments);
                            arguments = J$.N(7345265, 'arguments', arguments, true, false, false);
                            err = J$.N(7345273, 'err', err, true, false, false);
                            req = J$.N(7345281, 'req', req, true, false, false);
                            res = J$.N(7345289, 'res', res, true, false, false);
                            next = J$.N(7345297, 'next', next, true, false, false);
                            J$.N(7345305, 'isValidationError', isValidationError, false, false, false);
                            J$.N(7345313, 'errors', errors, false, false, false);
                            var isValidationError = J$.W(7344993, 'isValidationError', J$.B(709858, 'instanceof', J$.R(7344977, 'err', err, false, false), J$.R(7344985, 'ValidationError', ValidationError, false, true)), isValidationError, false, false);
                            if (J$.C(390472, J$.U(709866, '!', J$.R(7345001, 'isValidationError', isValidationError, false, false)))) {
                                return J$.Rt(7345033, J$.F(7345025, J$.R(7345009, 'next', next, false, false), false)(J$.R(7345017, 'err', err, false, false)));
                            }
                            var errors = J$.W(7345057, 'errors', J$.G(7345049, J$.R(7345041, 'err', err, false, false), 'messages'), errors, false, false);
                            J$.M(7345081, J$.R(7345065, 'res', res, false, false), 'status', false)(J$.T(7345073, 422, 22, false));
                            J$.M(7345233, J$.R(7345089, 'res', res, false, false), 'format', false)(J$.T(7345225, {
                                text: J$.T(7345161, function () {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(7345145, arguments.callee, this, arguments);
                                                arguments = J$.N(7345153, 'arguments', arguments, true, false, false);
                                                J$.M(7345137, J$.R(7345097, 'res', res, false, false), 'send', false)(J$.B(709874, '+', J$.T(7345105, 'Invalid Request: ', 21, false), J$.F(7345129, J$.R(7345113, 'toText', toText, false, true), false)(J$.R(7345121, 'errors', errors, false, false))));
                                            } catch (J$e) {
                                                J$.Ex(7345449, J$e);
                                            } finally {
                                                if (J$.Fr(7345457))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                json: J$.T(7345217, function () {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(7345201, arguments.callee, this, arguments);
                                                arguments = J$.N(7345209, 'arguments', arguments, true, false, false);
                                                J$.M(7345193, J$.R(7345169, 'res', res, false, false), 'json', false)(J$.T(7345185, { errors: J$.R(7345177, 'errors', errors, false, false) }, 11, false));
                                            } catch (J$e) {
                                                J$.Ex(7345465, J$e);
                                            } finally {
                                                if (J$.Fr(7345473))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false));
                            J$.M(7345249, J$.R(7345241, 'res', res, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(7345481, J$e);
                        } finally {
                            if (J$.Fr(7345489))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toText(errors) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(7345353, arguments.callee, this, arguments);
                            arguments = J$.N(7345361, 'arguments', arguments, true, false, false);
                            errors = J$.N(7345369, 'errors', errors, true, false, false);
                            return J$.Rt(7345345, J$.M(7345337, J$.R(7345321, 'errors', errors, false, false), 'join', false)(J$.T(7345329, ', ', 21, false)));
                        } catch (J$e) {
                            J$.Ex(7345497, J$e);
                        } finally {
                            if (J$.Fr(7345505))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7345409, 'ValidationError', ValidationError, false, false, false);
            assertMiddleware = J$.N(7345425, 'assertMiddleware', J$.T(7345417, assertMiddleware, 12, false), true, false, false);
            toText = J$.N(7345441, 'toText', J$.T(7345433, toText, 12, false), true, false, false);
            var ValidationError = J$.W(7344969, 'ValidationError', J$.F(7344961, J$.I(typeof require === 'undefined' ? require = J$.R(7344945, 'require', undefined, true, true) : require = J$.R(7344945, 'require', require, true, true)), false)(J$.T(7344953, './validation_error', 21, false)), ValidationError, false, true);
            J$.P(7345393, J$.I(typeof module === 'undefined' ? module = J$.R(7345377, 'module', undefined, true, true) : module = J$.R(7345377, 'module', module, true, true)), 'exports', J$.R(7345385, 'assertMiddleware', assertMiddleware, false, true));
        } catch (J$e) {
            J$.Ex(7345513, J$e);
        } finally {
            if (J$.Sr(7345521))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

