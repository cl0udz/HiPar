J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(2704321, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/assert_middleware.js');
            function assertMiddleware(err, req, res, next) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2704177, arguments.callee, this, arguments);
                            arguments = J$.N(2704185, 'arguments', arguments, true, false, false);
                            err = J$.N(2704193, 'err', err, true, false, false);
                            req = J$.N(2704201, 'req', req, true, false, false);
                            res = J$.N(2704209, 'res', res, true, false, false);
                            next = J$.N(2704217, 'next', next, true, false, false);
                            J$.N(2704225, 'isValidationError', isValidationError, false, false, false);
                            J$.N(2704233, 'errors', errors, false, false, false);
                            var isValidationError = J$.W(2703913, 'isValidationError', J$.B(193322, 'instanceof', J$.R(2703897, 'err', err, false, false), J$.R(2703905, 'ValidationError', ValidationError, false, true)), isValidationError, false, false);
                            if (J$.C(139952, J$.U(193330, '!', J$.R(2703921, 'isValidationError', isValidationError, false, false)))) {
                                return J$.Rt(2703953, J$.F(2703945, J$.R(2703929, 'next', next, false, false), false)(J$.R(2703937, 'err', err, false, false)));
                            }
                            var errors = J$.W(2703977, 'errors', J$.G(2703969, J$.R(2703961, 'err', err, false, false), 'messages'), errors, false, false);
                            J$.M(2704001, J$.R(2703985, 'res', res, false, false), 'status', false)(J$.T(2703993, 422, 22, false));
                            J$.M(2704153, J$.R(2704009, 'res', res, false, false), 'format', false)(J$.T(2704145, {
                                text: J$.T(2704081, function () {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(2704065, arguments.callee, this, arguments);
                                                arguments = J$.N(2704073, 'arguments', arguments, true, false, false);
                                                J$.M(2704057, J$.R(2704017, 'res', res, false, false), 'send', false)(J$.B(193338, '+', J$.T(2704025, 'Invalid Request: ', 21, false), J$.F(2704049, J$.R(2704033, 'toText', toText, false, true), false)(J$.R(2704041, 'errors', errors, false, false))));
                                            } catch (J$e) {
                                                J$.Ex(2704369, J$e);
                                            } finally {
                                                if (J$.Fr(2704377))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                json: J$.T(2704137, function () {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(2704121, arguments.callee, this, arguments);
                                                arguments = J$.N(2704129, 'arguments', arguments, true, false, false);
                                                J$.M(2704113, J$.R(2704089, 'res', res, false, false), 'json', false)(J$.T(2704105, { errors: J$.R(2704097, 'errors', errors, false, false) }, 11, false));
                                            } catch (J$e) {
                                                J$.Ex(2704385, J$e);
                                            } finally {
                                                if (J$.Fr(2704393))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false));
                            J$.M(2704169, J$.R(2704161, 'res', res, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(2704401, J$e);
                        } finally {
                            if (J$.Fr(2704409))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toText(errors) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2704273, arguments.callee, this, arguments);
                            arguments = J$.N(2704281, 'arguments', arguments, true, false, false);
                            errors = J$.N(2704289, 'errors', errors, true, false, false);
                            return J$.Rt(2704265, J$.M(2704257, J$.R(2704241, 'errors', errors, false, false), 'join', false)(J$.T(2704249, ', ', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2704417, J$e);
                        } finally {
                            if (J$.Fr(2704425))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2704329, 'ValidationError', ValidationError, false, false, false);
            assertMiddleware = J$.N(2704345, 'assertMiddleware', J$.T(2704337, assertMiddleware, 12, false), true, false, false);
            toText = J$.N(2704361, 'toText', J$.T(2704353, toText, 12, false), true, false, false);
            var ValidationError = J$.W(2703889, 'ValidationError', J$.F(2703881, J$.I(typeof require === 'undefined' ? require = J$.R(2703865, 'require', undefined, true, true) : require = J$.R(2703865, 'require', require, true, true)), false)(J$.T(2703873, './validation_error', 21, false)), ValidationError, false, true);
            J$.P(2704313, J$.I(typeof module === 'undefined' ? module = J$.R(2704297, 'module', undefined, true, true) : module = J$.R(2704297, 'module', module, true, true)), 'exports', J$.R(2704305, 'assertMiddleware', assertMiddleware, false, true));
        } catch (J$e) {
            J$.Ex(2704433, J$e);
        } finally {
            if (J$.Sr(2704441))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

