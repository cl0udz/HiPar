J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(3634689, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/assert_middleware.js');
            function assertMiddleware(err, req, res, next) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(3634545, arguments.callee, this, arguments);
                            arguments = J$.N(3634553, 'arguments', arguments, true, false, false);
                            err = J$.N(3634561, 'err', err, true, false, false);
                            req = J$.N(3634569, 'req', req, true, false, false);
                            res = J$.N(3634577, 'res', res, true, false, false);
                            next = J$.N(3634585, 'next', next, true, false, false);
                            J$.N(3634593, 'isValidationError', isValidationError, false, false, false);
                            J$.N(3634601, 'errors', errors, false, false, false);
                            var isValidationError = J$.W(3634281, 'isValidationError', J$.B(367098, 'instanceof', J$.R(3634265, 'err', err, false, false), J$.R(3634273, 'ValidationError', ValidationError, false, true)), isValidationError, false, false);
                            if (J$.C(197072, J$.U(367106, '!', J$.R(3634289, 'isValidationError', isValidationError, false, false)))) {
                                return J$.Rt(3634321, J$.F(3634313, J$.R(3634297, 'next', next, false, false), false)(J$.R(3634305, 'err', err, false, false)));
                            }
                            var errors = J$.W(3634345, 'errors', J$.G(3634337, J$.R(3634329, 'err', err, false, false), 'messages'), errors, false, false);
                            J$.M(3634369, J$.R(3634353, 'res', res, false, false), 'status', false)(J$.T(3634361, 422, 22, false));
                            J$.M(3634521, J$.R(3634377, 'res', res, false, false), 'format', false)(J$.T(3634513, {
                                text: J$.T(3634449, function () {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(3634433, arguments.callee, this, arguments);
                                                arguments = J$.N(3634441, 'arguments', arguments, true, false, false);
                                                J$.M(3634425, J$.R(3634385, 'res', res, false, false), 'send', false)(J$.B(367114, '+', J$.T(3634393, 'Invalid Request: ', 21, false), J$.F(3634417, J$.R(3634401, 'toText', toText, false, true), false)(J$.R(3634409, 'errors', errors, false, false))));
                                            } catch (J$e) {
                                                J$.Ex(3634737, J$e);
                                            } finally {
                                                if (J$.Fr(3634745))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                json: J$.T(3634505, function () {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(3634489, arguments.callee, this, arguments);
                                                arguments = J$.N(3634497, 'arguments', arguments, true, false, false);
                                                J$.M(3634481, J$.R(3634457, 'res', res, false, false), 'json', false)(J$.T(3634473, { errors: J$.R(3634465, 'errors', errors, false, false) }, 11, false));
                                            } catch (J$e) {
                                                J$.Ex(3634753, J$e);
                                            } finally {
                                                if (J$.Fr(3634761))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false));
                            J$.M(3634537, J$.R(3634529, 'res', res, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(3634769, J$e);
                        } finally {
                            if (J$.Fr(3634777))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toText(errors) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(3634641, arguments.callee, this, arguments);
                            arguments = J$.N(3634649, 'arguments', arguments, true, false, false);
                            errors = J$.N(3634657, 'errors', errors, true, false, false);
                            return J$.Rt(3634633, J$.M(3634625, J$.R(3634609, 'errors', errors, false, false), 'join', false)(J$.T(3634617, ', ', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3634785, J$e);
                        } finally {
                            if (J$.Fr(3634793))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3634697, 'ValidationError', ValidationError, false, false, false);
            assertMiddleware = J$.N(3634713, 'assertMiddleware', J$.T(3634705, assertMiddleware, 12, false), true, false, false);
            toText = J$.N(3634729, 'toText', J$.T(3634721, toText, 12, false), true, false, false);
            var ValidationError = J$.W(3634257, 'ValidationError', J$.F(3634249, J$.I(typeof require === 'undefined' ? require = J$.R(3634233, 'require', undefined, true, true) : require = J$.R(3634233, 'require', require, true, true)), false)(J$.T(3634241, './validation_error', 21, false)), ValidationError, false, true);
            J$.P(3634681, J$.I(typeof module === 'undefined' ? module = J$.R(3634665, 'module', undefined, true, true) : module = J$.R(3634665, 'module', module, true, true)), 'exports', J$.R(3634673, 'assertMiddleware', assertMiddleware, false, true));
        } catch (J$e) {
            J$.Ex(3634801, J$e);
        } finally {
            if (J$.Sr(3634809))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

