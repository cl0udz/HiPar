J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(2706681, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/request_validator.js');
            function validate(params, validations) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2706073, arguments.callee, this, arguments);
                            arguments = J$.N(2706081, 'arguments', arguments, true, false, false);
                            params = J$.N(2706089, 'params', params, true, false, false);
                            validations = J$.N(2706097, 'validations', validations, true, false, false);
                            J$.N(2706105, 'runValidations', runValidations, false, false, false);
                            J$.N(2706113, 'allValid', allValid, false, false, false);
                            J$.N(2706121, 'errors', errors, false, false, false);
                            J$.N(2706129, 'messages', messages, false, false, false);
                            var runValidations = J$.W(2705697, 'runValidations', J$.M(2705689, J$.R(2705617, 'validations', validations, false, false), 'map', false)(J$.T(2705681, function (validation) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2705657, arguments.callee, this, arguments);
                                            arguments = J$.N(2705665, 'arguments', arguments, true, false, false);
                                            validation = J$.N(2705673, 'validation', validation, true, false, false);
                                            return J$.Rt(2705649, J$.F(2705641, J$.R(2705625, 'validation', validation, false, false), false)(J$.R(2705633, 'params', params, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2706809, J$e);
                                        } finally {
                                            if (J$.Fr(2706817))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), runValidations, false, false);
                            var allValid = J$.W(2705785, 'allValid', J$.F(2705777, J$.R(2705705, 'every', every, false, true), false)(J$.R(2705713, 'runValidations', runValidations, false, false), J$.T(2705769, function (runValidation) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2705745, arguments.callee, this, arguments);
                                            arguments = J$.N(2705753, 'arguments', arguments, true, false, false);
                                            runValidation = J$.N(2705761, 'runValidation', runValidation, true, false, false);
                                            return J$.Rt(2705737, J$.G(2705729, J$.R(2705721, 'runValidation', runValidation, false, false), 'result'));
                                        } catch (J$e) {
                                            J$.Ex(2706825, J$e);
                                        } finally {
                                            if (J$.Fr(2706833))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), allValid, false, false);
                            var errors = J$.W(2705945, 'errors', J$.M(2705937, J$.M(2705857, J$.R(2705793, 'runValidations', runValidations, false, false), 'filter', false)(J$.T(2705849, function (runValidation) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(2705825, arguments.callee, this, arguments);
                                            arguments = J$.N(2705833, 'arguments', arguments, true, false, false);
                                            runValidation = J$.N(2705841, 'runValidation', runValidation, true, false, false);
                                            return J$.Rt(2705817, J$.U(193354, '!', J$.G(2705809, J$.R(2705801, 'runValidation', runValidation, false, false), 'result')));
                                        } catch (J$e) {
                                            J$.Ex(2706841, J$e);
                                        } finally {
                                            if (J$.Fr(2706849))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'map', false)(J$.T(2705929, function (failedValidation) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(2705905, arguments.callee, this, arguments);
                                            arguments = J$.N(2705913, 'arguments', arguments, true, false, false);
                                            failedValidation = J$.N(2705921, 'failedValidation', failedValidation, true, false, false);
                                            return J$.Rt(2705897, J$.F(2705889, J$.R(2705865, 'omit', omit, false, true), false)(J$.R(2705873, 'failedValidation', failedValidation, false, false), J$.T(2705881, 'result', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(2706857, J$e);
                                        } finally {
                                            if (J$.Fr(2706865))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), errors, false, false);
                            var messages = J$.W(2706025, 'messages', J$.M(2706017, J$.R(2705953, 'errors', errors, false, false), 'map', false)(J$.T(2706009, function (error) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(2705985, arguments.callee, this, arguments);
                                            arguments = J$.N(2705993, 'arguments', arguments, true, false, false);
                                            error = J$.N(2706001, 'error', error, true, false, false);
                                            return J$.Rt(2705977, J$.G(2705969, J$.R(2705961, 'error', error, false, false), 'message'));
                                        } catch (J$e) {
                                            J$.Ex(2706873, J$e);
                                        } finally {
                                            if (J$.Fr(2706881))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), messages, false, false);
                            return J$.Rt(2706065, J$.T(2706057, {
                                valid: J$.R(2706033, 'allValid', allValid, false, false),
                                errors: J$.R(2706041, 'errors', errors, false, false),
                                messages: J$.R(2706049, 'messages', messages, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2706889, J$e);
                        } finally {
                            if (J$.Fr(2706897))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateParams(request, validations) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2706185, arguments.callee, this, arguments);
                            arguments = J$.N(2706193, 'arguments', arguments, true, false, false);
                            request = J$.N(2706201, 'request', request, true, false, false);
                            validations = J$.N(2706209, 'validations', validations, true, false, false);
                            return J$.Rt(2706177, J$.F(2706169, J$.R(2706137, 'validate', validate, false, true), false)(J$.G(2706153, J$.R(2706145, 'request', request, false, false), 'params'), J$.R(2706161, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(2706905, J$e);
                        } finally {
                            if (J$.Fr(2706913))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateQuery(request, validations) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(2706265, arguments.callee, this, arguments);
                            arguments = J$.N(2706273, 'arguments', arguments, true, false, false);
                            request = J$.N(2706281, 'request', request, true, false, false);
                            validations = J$.N(2706289, 'validations', validations, true, false, false);
                            return J$.Rt(2706257, J$.F(2706249, J$.R(2706217, 'validate', validate, false, true), false)(J$.G(2706233, J$.R(2706225, 'request', request, false, false), 'query'), J$.R(2706241, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(2706921, J$e);
                        } finally {
                            if (J$.Fr(2706929))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateBody(request, validations) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(2706345, arguments.callee, this, arguments);
                            arguments = J$.N(2706353, 'arguments', arguments, true, false, false);
                            request = J$.N(2706361, 'request', request, true, false, false);
                            validations = J$.N(2706369, 'validations', validations, true, false, false);
                            return J$.Rt(2706337, J$.F(2706329, J$.R(2706297, 'validate', validate, false, true), false)(J$.G(2706313, J$.R(2706305, 'request', request, false, false), 'body'), J$.R(2706321, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(2706937, J$e);
                        } finally {
                            if (J$.Fr(2706945))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateHeaders(request, validations) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(2706425, arguments.callee, this, arguments);
                            arguments = J$.N(2706433, 'arguments', arguments, true, false, false);
                            request = J$.N(2706441, 'request', request, true, false, false);
                            validations = J$.N(2706449, 'validations', validations, true, false, false);
                            return J$.Rt(2706417, J$.F(2706409, J$.R(2706377, 'validate', validate, false, true), false)(J$.G(2706393, J$.R(2706385, 'request', request, false, false), 'headers'), J$.R(2706401, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(2706953, J$e);
                        } finally {
                            if (J$.Fr(2706961))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateAll(request, validations) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(2706569, arguments.callee, this, arguments);
                            arguments = J$.N(2706577, 'arguments', arguments, true, false, false);
                            request = J$.N(2706585, 'request', request, true, false, false);
                            validations = J$.N(2706593, 'validations', validations, true, false, false);
                            J$.N(2706601, 'allParams', allParams, false, false, false);
                            var allParams = J$.W(2706521, 'allParams', J$.F(2706513, J$.R(2706457, 'merge', merge, false, true), false)(J$.G(2706473, J$.R(2706465, 'request', request, false, false), 'query'), J$.G(2706489, J$.R(2706481, 'request', request, false, false), 'params'), J$.G(2706505, J$.R(2706497, 'request', request, false, false), 'body')), allParams, false, false);
                            return J$.Rt(2706561, J$.F(2706553, J$.R(2706529, 'validate', validate, false, true), false)(J$.R(2706537, 'allParams', allParams, false, false), J$.R(2706545, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(2706969, J$e);
                        } finally {
                            if (J$.Fr(2706977))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2706689, 'every', every, false, false, false);
            J$.N(2706697, 'omit', omit, false, false, false);
            J$.N(2706705, 'merge', merge, false, false, false);
            validate = J$.N(2706721, 'validate', J$.T(2706713, validate, 12, false), true, false, false);
            validateParams = J$.N(2706737, 'validateParams', J$.T(2706729, validateParams, 12, false), true, false, false);
            validateQuery = J$.N(2706753, 'validateQuery', J$.T(2706745, validateQuery, 12, false), true, false, false);
            validateBody = J$.N(2706769, 'validateBody', J$.T(2706761, validateBody, 12, false), true, false, false);
            validateHeaders = J$.N(2706785, 'validateHeaders', J$.T(2706777, validateHeaders, 12, false), true, false, false);
            validateAll = J$.N(2706801, 'validateAll', J$.T(2706793, validateAll, 12, false), true, false, false);
            var every = J$.W(2705545, 'every', J$.F(2705537, J$.I(typeof require === 'undefined' ? require = J$.R(2705521, 'require', undefined, true, true) : require = J$.R(2705521, 'require', require, true, true)), false)(J$.T(2705529, 'lodash/every', 21, false)), every, false, true);
            var omit = J$.W(2705577, 'omit', J$.F(2705569, J$.I(typeof require === 'undefined' ? require = J$.R(2705553, 'require', undefined, true, true) : require = J$.R(2705553, 'require', require, true, true)), false)(J$.T(2705561, 'lodash/omit', 21, false)), omit, false, true);
            var merge = J$.W(2705609, 'merge', J$.F(2705601, J$.I(typeof require === 'undefined' ? require = J$.R(2705585, 'require', undefined, true, true) : require = J$.R(2705585, 'require', require, true, true)), false)(J$.T(2705593, 'lodash/merge', 21, false)), merge, false, true);
            J$.P(2706673, J$.I(typeof module === 'undefined' ? module = J$.R(2706609, 'module', undefined, true, true) : module = J$.R(2706609, 'module', module, true, true)), 'exports', J$.T(2706665, {
                validateParams: J$.R(2706617, 'validateParams', validateParams, false, true),
                validateQuery: J$.R(2706625, 'validateQuery', validateQuery, false, true),
                validateBody: J$.R(2706633, 'validateBody', validateBody, false, true),
                validateAll: J$.R(2706641, 'validateAll', validateAll, false, true),
                validateHeaders: J$.R(2706649, 'validateHeaders', validateHeaders, false, true),
                validate: J$.R(2706657, 'validate', validate, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(2706985, J$e);
        } finally {
            if (J$.Sr(2706993))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

