J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(7347761, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/request_validator.js');
            function validate(params, validations) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(7347153, arguments.callee, this, arguments);
                            arguments = J$.N(7347161, 'arguments', arguments, true, false, false);
                            params = J$.N(7347169, 'params', params, true, false, false);
                            validations = J$.N(7347177, 'validations', validations, true, false, false);
                            J$.N(7347185, 'runValidations', runValidations, false, false, false);
                            J$.N(7347193, 'allValid', allValid, false, false, false);
                            J$.N(7347201, 'errors', errors, false, false, false);
                            J$.N(7347209, 'messages', messages, false, false, false);
                            var runValidations = J$.W(7346777, 'runValidations', J$.M(7346769, J$.R(7346697, 'validations', validations, false, false), 'map', false)(J$.T(7346761, function (validation) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7346737, arguments.callee, this, arguments);
                                            arguments = J$.N(7346745, 'arguments', arguments, true, false, false);
                                            validation = J$.N(7346753, 'validation', validation, true, false, false);
                                            return J$.Rt(7346729, J$.F(7346721, J$.R(7346705, 'validation', validation, false, false), false)(J$.R(7346713, 'params', params, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(7347889, J$e);
                                        } finally {
                                            if (J$.Fr(7347897))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), runValidations, false, false);
                            var allValid = J$.W(7346865, 'allValid', J$.F(7346857, J$.R(7346785, 'every', every, false, true), false)(J$.R(7346793, 'runValidations', runValidations, false, false), J$.T(7346849, function (runValidation) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(7346825, arguments.callee, this, arguments);
                                            arguments = J$.N(7346833, 'arguments', arguments, true, false, false);
                                            runValidation = J$.N(7346841, 'runValidation', runValidation, true, false, false);
                                            return J$.Rt(7346817, J$.G(7346809, J$.R(7346801, 'runValidation', runValidation, false, false), 'result'));
                                        } catch (J$e) {
                                            J$.Ex(7347905, J$e);
                                        } finally {
                                            if (J$.Fr(7347913))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), allValid, false, false);
                            var errors = J$.W(7347025, 'errors', J$.M(7347017, J$.M(7346937, J$.R(7346873, 'runValidations', runValidations, false, false), 'filter', false)(J$.T(7346929, function (runValidation) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(7346905, arguments.callee, this, arguments);
                                            arguments = J$.N(7346913, 'arguments', arguments, true, false, false);
                                            runValidation = J$.N(7346921, 'runValidation', runValidation, true, false, false);
                                            return J$.Rt(7346897, J$.U(709890, '!', J$.G(7346889, J$.R(7346881, 'runValidation', runValidation, false, false), 'result')));
                                        } catch (J$e) {
                                            J$.Ex(7347921, J$e);
                                        } finally {
                                            if (J$.Fr(7347929))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'map', false)(J$.T(7347009, function (failedValidation) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(7346985, arguments.callee, this, arguments);
                                            arguments = J$.N(7346993, 'arguments', arguments, true, false, false);
                                            failedValidation = J$.N(7347001, 'failedValidation', failedValidation, true, false, false);
                                            return J$.Rt(7346977, J$.F(7346969, J$.R(7346945, 'omit', omit, false, true), false)(J$.R(7346953, 'failedValidation', failedValidation, false, false), J$.T(7346961, 'result', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(7347937, J$e);
                                        } finally {
                                            if (J$.Fr(7347945))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), errors, false, false);
                            var messages = J$.W(7347105, 'messages', J$.M(7347097, J$.R(7347033, 'errors', errors, false, false), 'map', false)(J$.T(7347089, function (error) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(7347065, arguments.callee, this, arguments);
                                            arguments = J$.N(7347073, 'arguments', arguments, true, false, false);
                                            error = J$.N(7347081, 'error', error, true, false, false);
                                            return J$.Rt(7347057, J$.G(7347049, J$.R(7347041, 'error', error, false, false), 'message'));
                                        } catch (J$e) {
                                            J$.Ex(7347953, J$e);
                                        } finally {
                                            if (J$.Fr(7347961))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), messages, false, false);
                            return J$.Rt(7347145, J$.T(7347137, {
                                valid: J$.R(7347113, 'allValid', allValid, false, false),
                                errors: J$.R(7347121, 'errors', errors, false, false),
                                messages: J$.R(7347129, 'messages', messages, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(7347969, J$e);
                        } finally {
                            if (J$.Fr(7347977))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateParams(request, validations) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(7347265, arguments.callee, this, arguments);
                            arguments = J$.N(7347273, 'arguments', arguments, true, false, false);
                            request = J$.N(7347281, 'request', request, true, false, false);
                            validations = J$.N(7347289, 'validations', validations, true, false, false);
                            return J$.Rt(7347257, J$.F(7347249, J$.R(7347217, 'validate', validate, false, true), false)(J$.G(7347233, J$.R(7347225, 'request', request, false, false), 'params'), J$.R(7347241, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(7347985, J$e);
                        } finally {
                            if (J$.Fr(7347993))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateQuery(request, validations) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(7347345, arguments.callee, this, arguments);
                            arguments = J$.N(7347353, 'arguments', arguments, true, false, false);
                            request = J$.N(7347361, 'request', request, true, false, false);
                            validations = J$.N(7347369, 'validations', validations, true, false, false);
                            return J$.Rt(7347337, J$.F(7347329, J$.R(7347297, 'validate', validate, false, true), false)(J$.G(7347313, J$.R(7347305, 'request', request, false, false), 'query'), J$.R(7347321, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(7348001, J$e);
                        } finally {
                            if (J$.Fr(7348009))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateBody(request, validations) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(7347425, arguments.callee, this, arguments);
                            arguments = J$.N(7347433, 'arguments', arguments, true, false, false);
                            request = J$.N(7347441, 'request', request, true, false, false);
                            validations = J$.N(7347449, 'validations', validations, true, false, false);
                            return J$.Rt(7347417, J$.F(7347409, J$.R(7347377, 'validate', validate, false, true), false)(J$.G(7347393, J$.R(7347385, 'request', request, false, false), 'body'), J$.R(7347401, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(7348017, J$e);
                        } finally {
                            if (J$.Fr(7348025))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateHeaders(request, validations) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(7347505, arguments.callee, this, arguments);
                            arguments = J$.N(7347513, 'arguments', arguments, true, false, false);
                            request = J$.N(7347521, 'request', request, true, false, false);
                            validations = J$.N(7347529, 'validations', validations, true, false, false);
                            return J$.Rt(7347497, J$.F(7347489, J$.R(7347457, 'validate', validate, false, true), false)(J$.G(7347473, J$.R(7347465, 'request', request, false, false), 'headers'), J$.R(7347481, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(7348033, J$e);
                        } finally {
                            if (J$.Fr(7348041))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateAll(request, validations) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(7347649, arguments.callee, this, arguments);
                            arguments = J$.N(7347657, 'arguments', arguments, true, false, false);
                            request = J$.N(7347665, 'request', request, true, false, false);
                            validations = J$.N(7347673, 'validations', validations, true, false, false);
                            J$.N(7347681, 'allParams', allParams, false, false, false);
                            var allParams = J$.W(7347601, 'allParams', J$.F(7347593, J$.R(7347537, 'merge', merge, false, true), false)(J$.G(7347553, J$.R(7347545, 'request', request, false, false), 'query'), J$.G(7347569, J$.R(7347561, 'request', request, false, false), 'params'), J$.G(7347585, J$.R(7347577, 'request', request, false, false), 'body')), allParams, false, false);
                            return J$.Rt(7347641, J$.F(7347633, J$.R(7347609, 'validate', validate, false, true), false)(J$.R(7347617, 'allParams', allParams, false, false), J$.R(7347625, 'validations', validations, false, false)));
                        } catch (J$e) {
                            J$.Ex(7348049, J$e);
                        } finally {
                            if (J$.Fr(7348057))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7347769, 'every', every, false, false, false);
            J$.N(7347777, 'omit', omit, false, false, false);
            J$.N(7347785, 'merge', merge, false, false, false);
            validate = J$.N(7347801, 'validate', J$.T(7347793, validate, 12, false), true, false, false);
            validateParams = J$.N(7347817, 'validateParams', J$.T(7347809, validateParams, 12, false), true, false, false);
            validateQuery = J$.N(7347833, 'validateQuery', J$.T(7347825, validateQuery, 12, false), true, false, false);
            validateBody = J$.N(7347849, 'validateBody', J$.T(7347841, validateBody, 12, false), true, false, false);
            validateHeaders = J$.N(7347865, 'validateHeaders', J$.T(7347857, validateHeaders, 12, false), true, false, false);
            validateAll = J$.N(7347881, 'validateAll', J$.T(7347873, validateAll, 12, false), true, false, false);
            var every = J$.W(7346625, 'every', J$.F(7346617, J$.I(typeof require === 'undefined' ? require = J$.R(7346601, 'require', undefined, true, true) : require = J$.R(7346601, 'require', require, true, true)), false)(J$.T(7346609, 'lodash/every', 21, false)), every, false, true);
            var omit = J$.W(7346657, 'omit', J$.F(7346649, J$.I(typeof require === 'undefined' ? require = J$.R(7346633, 'require', undefined, true, true) : require = J$.R(7346633, 'require', require, true, true)), false)(J$.T(7346641, 'lodash/omit', 21, false)), omit, false, true);
            var merge = J$.W(7346689, 'merge', J$.F(7346681, J$.I(typeof require === 'undefined' ? require = J$.R(7346665, 'require', undefined, true, true) : require = J$.R(7346665, 'require', require, true, true)), false)(J$.T(7346673, 'lodash/merge', 21, false)), merge, false, true);
            J$.P(7347753, J$.I(typeof module === 'undefined' ? module = J$.R(7347689, 'module', undefined, true, true) : module = J$.R(7347689, 'module', module, true, true)), 'exports', J$.T(7347745, {
                validateParams: J$.R(7347697, 'validateParams', validateParams, false, true),
                validateQuery: J$.R(7347705, 'validateQuery', validateQuery, false, true),
                validateBody: J$.R(7347713, 'validateBody', validateBody, false, true),
                validateAll: J$.R(7347721, 'validateAll', validateAll, false, true),
                validateHeaders: J$.R(7347729, 'validateHeaders', validateHeaders, false, true),
                validate: J$.R(7347737, 'validate', validate, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(7348065, J$e);
        } finally {
            if (J$.Sr(7348073))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

