J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7348969, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/translator.js');
            function translator(message, params, localization) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7348889, arguments.callee, this, arguments);
                            arguments = J$.N(7348897, 'arguments', arguments, true, false, false);
                            message = J$.N(7348905, 'message', message, true, false, false);
                            params = J$.N(7348913, 'params', params, true, false, false);
                            localization = J$.N(7348921, 'localization', localization, true, false, false);
                            J$.N(7348929, 'fallbackTranslationMessage', fallbackTranslationMessage, false, false, false);
                            J$.N(7348937, 'translatedMessage', translatedMessage, false, false, false);
                            if (J$.C(390488, J$.F(7348553, J$.R(7348537, 'isUndefined', isUndefined, false, true), false)(J$.R(7348545, 'localization', localization, false, false)))) {
                                localization = J$.W(7348569, 'localization', J$.R(7348561, 'fallbackLocals', fallbackLocals, false, true), localization, false, false);
                            }
                            var fallbackTranslationMessage = J$.W(7348617, 'fallbackTranslationMessage', J$.F(7348609, J$.R(7348577, 'get', get, false, true), false)(J$.R(7348585, 'fallbackLocals', fallbackLocals, false, true), J$.R(7348593, 'message', message, false, false), J$.R(7348601, 'message', message, false, false)), fallbackTranslationMessage, false, false);
                            var translatedMessage = J$.W(7348665, 'translatedMessage', J$.F(7348657, J$.R(7348625, 'get', get, false, true), false)(J$.R(7348633, 'localization', localization, false, false), J$.R(7348641, 'message', message, false, false), J$.R(7348649, 'fallbackTranslationMessage', fallbackTranslationMessage, false, false)), translatedMessage, false, false);
                            J$.F(7348865, J$.R(7348673, 'forOwn', forOwn, false, true), false)(J$.R(7348681, 'params', params, false, false), J$.T(7348857, function (value, key) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7348817, arguments.callee, this, arguments);
                                            arguments = J$.N(7348825, 'arguments', arguments, true, false, false);
                                            value = J$.N(7348833, 'value', value, true, false, false);
                                            key = J$.N(7348841, 'key', key, true, false, false);
                                            J$.N(7348849, 'regex', regex, false, false, false);
                                            var regex = J$.W(7348745, 'regex', J$.F(7348737, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(7348689, 'RegExp', undefined, true, true) : RegExp = J$.R(7348689, 'RegExp', RegExp, true, true)), true)(J$.F(7348721, J$.R(7348697, 'escapeRegExp', escapeRegExp, false, true), false)(J$.B(709898, '+', J$.T(7348705, ':', 21, false), J$.R(7348713, 'key', key, false, false))), J$.T(7348729, 'g', 21, false)), regex, false, false);
                                            translatedMessage = J$.W(7348809, 'translatedMessage', J$.F(7348801, J$.R(7348753, 'replace', replace, false, true), false)(J$.R(7348761, 'translatedMessage', translatedMessage, false, false), J$.R(7348769, 'regex', regex, false, false), J$.G(7348793, J$.R(7348777, 'params', params, false, false), J$.R(7348785, 'key', key, false, false))), translatedMessage, false, false);
                                        } catch (J$e) {
                                            J$.Ex(7349041, J$e);
                                        } finally {
                                            if (J$.Fr(7349049))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7348881, J$.R(7348873, 'translatedMessage', translatedMessage, false, false));
                        } catch (J$e) {
                            J$.Ex(7349057, J$e);
                        } finally {
                            if (J$.Fr(7349065))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7348977, 'get', get, false, false, false);
            J$.N(7348985, 'escapeRegExp', escapeRegExp, false, false, false);
            J$.N(7348993, 'replace', replace, false, false, false);
            J$.N(7349001, 'forOwn', forOwn, false, false, false);
            J$.N(7349009, 'isUndefined', isUndefined, false, false, false);
            J$.N(7349017, 'fallbackLocals', fallbackLocals, false, false, false);
            translator = J$.N(7349033, 'translator', J$.T(7349025, translator, 12, false), true, false, false);
            var get = J$.W(7348369, 'get', J$.F(7348361, J$.I(typeof require === 'undefined' ? require = J$.R(7348345, 'require', undefined, true, true) : require = J$.R(7348345, 'require', require, true, true)), false)(J$.T(7348353, 'lodash/get', 21, false)), get, false, true);
            var escapeRegExp = J$.W(7348401, 'escapeRegExp', J$.F(7348393, J$.I(typeof require === 'undefined' ? require = J$.R(7348377, 'require', undefined, true, true) : require = J$.R(7348377, 'require', require, true, true)), false)(J$.T(7348385, 'lodash/escapeRegExp', 21, false)), escapeRegExp, false, true);
            var replace = J$.W(7348433, 'replace', J$.F(7348425, J$.I(typeof require === 'undefined' ? require = J$.R(7348409, 'require', undefined, true, true) : require = J$.R(7348409, 'require', require, true, true)), false)(J$.T(7348417, 'lodash/replace', 21, false)), replace, false, true);
            var forOwn = J$.W(7348465, 'forOwn', J$.F(7348457, J$.I(typeof require === 'undefined' ? require = J$.R(7348441, 'require', undefined, true, true) : require = J$.R(7348441, 'require', require, true, true)), false)(J$.T(7348449, 'lodash/forOwn', 21, false)), forOwn, false, true);
            var isUndefined = J$.W(7348497, 'isUndefined', J$.F(7348489, J$.I(typeof require === 'undefined' ? require = J$.R(7348473, 'require', undefined, true, true) : require = J$.R(7348473, 'require', require, true, true)), false)(J$.T(7348481, 'lodash/isUndefined', 21, false)), isUndefined, false, true);
            var fallbackLocals = J$.W(7348529, 'fallbackLocals', J$.F(7348521, J$.I(typeof require === 'undefined' ? require = J$.R(7348505, 'require', undefined, true, true) : require = J$.R(7348505, 'require', require, true, true)), false)(J$.T(7348513, './translations/en', 21, false)), fallbackLocals, false, true);
            J$.P(7348961, J$.I(typeof module === 'undefined' ? module = J$.R(7348945, 'module', undefined, true, true) : module = J$.R(7348945, 'module', module, true, true)), 'exports', J$.R(7348953, 'translator', translator, false, true));
        } catch (J$e) {
            J$.Ex(7349073, J$e);
        } finally {
            if (J$.Sr(7349081))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

