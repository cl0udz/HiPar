J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2707889, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/translator.js');
            function translator(message, params, localization) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2707809, arguments.callee, this, arguments);
                            arguments = J$.N(2707817, 'arguments', arguments, true, false, false);
                            message = J$.N(2707825, 'message', message, true, false, false);
                            params = J$.N(2707833, 'params', params, true, false, false);
                            localization = J$.N(2707841, 'localization', localization, true, false, false);
                            J$.N(2707849, 'fallbackTranslationMessage', fallbackTranslationMessage, false, false, false);
                            J$.N(2707857, 'translatedMessage', translatedMessage, false, false, false);
                            if (J$.C(139968, J$.F(2707473, J$.R(2707457, 'isUndefined', isUndefined, false, true), false)(J$.R(2707465, 'localization', localization, false, false)))) {
                                localization = J$.W(2707489, 'localization', J$.R(2707481, 'fallbackLocals', fallbackLocals, false, true), localization, false, false);
                            }
                            var fallbackTranslationMessage = J$.W(2707537, 'fallbackTranslationMessage', J$.F(2707529, J$.R(2707497, 'get', get, false, true), false)(J$.R(2707505, 'fallbackLocals', fallbackLocals, false, true), J$.R(2707513, 'message', message, false, false), J$.R(2707521, 'message', message, false, false)), fallbackTranslationMessage, false, false);
                            var translatedMessage = J$.W(2707585, 'translatedMessage', J$.F(2707577, J$.R(2707545, 'get', get, false, true), false)(J$.R(2707553, 'localization', localization, false, false), J$.R(2707561, 'message', message, false, false), J$.R(2707569, 'fallbackTranslationMessage', fallbackTranslationMessage, false, false)), translatedMessage, false, false);
                            J$.F(2707785, J$.R(2707593, 'forOwn', forOwn, false, true), false)(J$.R(2707601, 'params', params, false, false), J$.T(2707777, function (value, key) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2707737, arguments.callee, this, arguments);
                                            arguments = J$.N(2707745, 'arguments', arguments, true, false, false);
                                            value = J$.N(2707753, 'value', value, true, false, false);
                                            key = J$.N(2707761, 'key', key, true, false, false);
                                            J$.N(2707769, 'regex', regex, false, false, false);
                                            var regex = J$.W(2707665, 'regex', J$.F(2707657, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2707609, 'RegExp', undefined, true, true) : RegExp = J$.R(2707609, 'RegExp', RegExp, true, true)), true)(J$.F(2707641, J$.R(2707617, 'escapeRegExp', escapeRegExp, false, true), false)(J$.B(193362, '+', J$.T(2707625, ':', 21, false), J$.R(2707633, 'key', key, false, false))), J$.T(2707649, 'g', 21, false)), regex, false, false);
                                            translatedMessage = J$.W(2707729, 'translatedMessage', J$.F(2707721, J$.R(2707673, 'replace', replace, false, true), false)(J$.R(2707681, 'translatedMessage', translatedMessage, false, false), J$.R(2707689, 'regex', regex, false, false), J$.G(2707713, J$.R(2707697, 'params', params, false, false), J$.R(2707705, 'key', key, false, false))), translatedMessage, false, false);
                                        } catch (J$e) {
                                            J$.Ex(2707961, J$e);
                                        } finally {
                                            if (J$.Fr(2707969))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2707801, J$.R(2707793, 'translatedMessage', translatedMessage, false, false));
                        } catch (J$e) {
                            J$.Ex(2707977, J$e);
                        } finally {
                            if (J$.Fr(2707985))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2707897, 'get', get, false, false, false);
            J$.N(2707905, 'escapeRegExp', escapeRegExp, false, false, false);
            J$.N(2707913, 'replace', replace, false, false, false);
            J$.N(2707921, 'forOwn', forOwn, false, false, false);
            J$.N(2707929, 'isUndefined', isUndefined, false, false, false);
            J$.N(2707937, 'fallbackLocals', fallbackLocals, false, false, false);
            translator = J$.N(2707953, 'translator', J$.T(2707945, translator, 12, false), true, false, false);
            var get = J$.W(2707289, 'get', J$.F(2707281, J$.I(typeof require === 'undefined' ? require = J$.R(2707265, 'require', undefined, true, true) : require = J$.R(2707265, 'require', require, true, true)), false)(J$.T(2707273, 'lodash/get', 21, false)), get, false, true);
            var escapeRegExp = J$.W(2707321, 'escapeRegExp', J$.F(2707313, J$.I(typeof require === 'undefined' ? require = J$.R(2707297, 'require', undefined, true, true) : require = J$.R(2707297, 'require', require, true, true)), false)(J$.T(2707305, 'lodash/escapeRegExp', 21, false)), escapeRegExp, false, true);
            var replace = J$.W(2707353, 'replace', J$.F(2707345, J$.I(typeof require === 'undefined' ? require = J$.R(2707329, 'require', undefined, true, true) : require = J$.R(2707329, 'require', require, true, true)), false)(J$.T(2707337, 'lodash/replace', 21, false)), replace, false, true);
            var forOwn = J$.W(2707385, 'forOwn', J$.F(2707377, J$.I(typeof require === 'undefined' ? require = J$.R(2707361, 'require', undefined, true, true) : require = J$.R(2707361, 'require', require, true, true)), false)(J$.T(2707369, 'lodash/forOwn', 21, false)), forOwn, false, true);
            var isUndefined = J$.W(2707417, 'isUndefined', J$.F(2707409, J$.I(typeof require === 'undefined' ? require = J$.R(2707393, 'require', undefined, true, true) : require = J$.R(2707393, 'require', require, true, true)), false)(J$.T(2707401, 'lodash/isUndefined', 21, false)), isUndefined, false, true);
            var fallbackLocals = J$.W(2707449, 'fallbackLocals', J$.F(2707441, J$.I(typeof require === 'undefined' ? require = J$.R(2707425, 'require', undefined, true, true) : require = J$.R(2707425, 'require', require, true, true)), false)(J$.T(2707433, './translations/en', 21, false)), fallbackLocals, false, true);
            J$.P(2707881, J$.I(typeof module === 'undefined' ? module = J$.R(2707865, 'module', undefined, true, true) : module = J$.R(2707865, 'module', module, true, true)), 'exports', J$.R(2707873, 'translator', translator, false, true));
        } catch (J$e) {
            J$.Ex(2707993, J$e);
        } finally {
            if (J$.Sr(2708001))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

