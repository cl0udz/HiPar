J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7349393, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/validation_error.js');
            function ValidationError(validation) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7349265, arguments.callee, this, arguments);
                            arguments = J$.N(7349273, 'arguments', arguments, true, false, false);
                            validation = J$.N(7349281, 'validation', validation, true, false, false);
                            J$.P(7349105, J$.R(7349089, 'this', this, false, false), 'name', J$.T(7349097, 'ValidationError', 21, false));
                            J$.P(7349153, J$.R(7349113, 'this', this, false, false), 'message', J$.M(7349145, J$.G(7349129, J$.R(7349121, 'validation', validation, false, false), 'messages'), 'join', false)(J$.T(7349137, ', ', 21, false)));
                            J$.P(7349185, J$.R(7349161, 'this', this, false, false), 'messages', J$.G(7349177, J$.R(7349169, 'validation', validation, false, false), 'messages'));
                            J$.P(7349225, J$.R(7349193, 'this', this, false, false), 'stack', J$.G(7349217, J$.F(7349209, J$.I(typeof Error === 'undefined' ? Error = J$.R(7349201, 'Error', undefined, true, true) : Error = J$.R(7349201, 'Error', Error, true, true)), true)(), 'stack'));
                            J$.P(7349257, J$.R(7349233, 'this', this, false, false), 'errors', J$.G(7349249, J$.R(7349241, 'validation', validation, false, false), 'errors'));
                        } catch (J$e) {
                            J$.Ex(7349417, J$e);
                        } finally {
                            if (J$.Fr(7349425))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            ValidationError = J$.N(7349409, 'ValidationError', J$.T(7349401, ValidationError, 12, false), true, false, false);
            J$.P(7349329, J$.R(7349289, 'ValidationError', ValidationError, false, true), 'prototype', J$.M(7349321, J$.I(typeof Object === 'undefined' ? Object = J$.R(7349297, 'Object', undefined, true, true) : Object = J$.R(7349297, 'Object', Object, true, true)), 'create', false)(J$.G(7349313, J$.I(typeof Error === 'undefined' ? Error = J$.R(7349305, 'Error', undefined, true, true) : Error = J$.R(7349305, 'Error', Error, true, true)), 'prototype')));
            J$.P(7349361, J$.G(7349345, J$.R(7349337, 'ValidationError', ValidationError, false, true), 'prototype'), 'constructor', J$.R(7349353, 'ValidationError', ValidationError, false, true));
            J$.P(7349385, J$.I(typeof module === 'undefined' ? module = J$.R(7349369, 'module', undefined, true, true) : module = J$.R(7349369, 'module', module, true, true)), 'exports', J$.R(7349377, 'ValidationError', ValidationError, false, true));
        } catch (J$e) {
            J$.Ex(7349433, J$e);
        } finally {
            if (J$.Sr(7349441))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

