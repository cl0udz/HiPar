J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2708313, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/validation_error.js');
            function ValidationError(validation) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2708185, arguments.callee, this, arguments);
                            arguments = J$.N(2708193, 'arguments', arguments, true, false, false);
                            validation = J$.N(2708201, 'validation', validation, true, false, false);
                            J$.P(2708025, J$.R(2708009, 'this', this, false, false), 'name', J$.T(2708017, 'ValidationError', 21, false));
                            J$.P(2708073, J$.R(2708033, 'this', this, false, false), 'message', J$.M(2708065, J$.G(2708049, J$.R(2708041, 'validation', validation, false, false), 'messages'), 'join', false)(J$.T(2708057, ', ', 21, false)));
                            J$.P(2708105, J$.R(2708081, 'this', this, false, false), 'messages', J$.G(2708097, J$.R(2708089, 'validation', validation, false, false), 'messages'));
                            J$.P(2708145, J$.R(2708113, 'this', this, false, false), 'stack', J$.G(2708137, J$.F(2708129, J$.I(typeof Error === 'undefined' ? Error = J$.R(2708121, 'Error', undefined, true, true) : Error = J$.R(2708121, 'Error', Error, true, true)), true)(), 'stack'));
                            J$.P(2708177, J$.R(2708153, 'this', this, false, false), 'errors', J$.G(2708169, J$.R(2708161, 'validation', validation, false, false), 'errors'));
                        } catch (J$e) {
                            J$.Ex(2708337, J$e);
                        } finally {
                            if (J$.Fr(2708345))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            ValidationError = J$.N(2708329, 'ValidationError', J$.T(2708321, ValidationError, 12, false), true, false, false);
            J$.P(2708249, J$.R(2708209, 'ValidationError', ValidationError, false, true), 'prototype', J$.M(2708241, J$.I(typeof Object === 'undefined' ? Object = J$.R(2708217, 'Object', undefined, true, true) : Object = J$.R(2708217, 'Object', Object, true, true)), 'create', false)(J$.G(2708233, J$.I(typeof Error === 'undefined' ? Error = J$.R(2708225, 'Error', undefined, true, true) : Error = J$.R(2708225, 'Error', Error, true, true)), 'prototype')));
            J$.P(2708281, J$.G(2708265, J$.R(2708257, 'ValidationError', ValidationError, false, true), 'prototype'), 'constructor', J$.R(2708273, 'ValidationError', ValidationError, false, true));
            J$.P(2708305, J$.I(typeof module === 'undefined' ? module = J$.R(2708289, 'module', undefined, true, true) : module = J$.R(2708289, 'module', module, true, true)), 'exports', J$.R(2708297, 'ValidationError', ValidationError, false, true));
        } catch (J$e) {
            J$.Ex(2708353, J$e);
        } finally {
            if (J$.Sr(2708361))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

