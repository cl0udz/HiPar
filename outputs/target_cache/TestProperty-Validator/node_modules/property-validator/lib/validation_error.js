J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3638681, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/property-validator/lib/validation_error.js');
            function ValidationError(validation) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3638553, arguments.callee, this, arguments);
                            arguments = J$.N(3638561, 'arguments', arguments, true, false, false);
                            validation = J$.N(3638569, 'validation', validation, true, false, false);
                            J$.P(3638393, J$.R(3638377, 'this', this, false, false), 'name', J$.T(3638385, 'ValidationError', 21, false));
                            J$.P(3638441, J$.R(3638401, 'this', this, false, false), 'message', J$.M(3638433, J$.G(3638417, J$.R(3638409, 'validation', validation, false, false), 'messages'), 'join', false)(J$.T(3638425, ', ', 21, false)));
                            J$.P(3638473, J$.R(3638449, 'this', this, false, false), 'messages', J$.G(3638465, J$.R(3638457, 'validation', validation, false, false), 'messages'));
                            J$.P(3638513, J$.R(3638481, 'this', this, false, false), 'stack', J$.G(3638505, J$.F(3638497, J$.I(typeof Error === 'undefined' ? Error = J$.R(3638489, 'Error', undefined, true, true) : Error = J$.R(3638489, 'Error', Error, true, true)), true)(), 'stack'));
                            J$.P(3638545, J$.R(3638521, 'this', this, false, false), 'errors', J$.G(3638537, J$.R(3638529, 'validation', validation, false, false), 'errors'));
                        } catch (J$e) {
                            J$.Ex(3638705, J$e);
                        } finally {
                            if (J$.Fr(3638713))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            ValidationError = J$.N(3638697, 'ValidationError', J$.T(3638689, ValidationError, 12, false), true, false, false);
            J$.P(3638617, J$.R(3638577, 'ValidationError', ValidationError, false, true), 'prototype', J$.M(3638609, J$.I(typeof Object === 'undefined' ? Object = J$.R(3638585, 'Object', undefined, true, true) : Object = J$.R(3638585, 'Object', Object, true, true)), 'create', false)(J$.G(3638601, J$.I(typeof Error === 'undefined' ? Error = J$.R(3638593, 'Error', undefined, true, true) : Error = J$.R(3638593, 'Error', Error, true, true)), 'prototype')));
            J$.P(3638649, J$.G(3638633, J$.R(3638625, 'ValidationError', ValidationError, false, true), 'prototype'), 'constructor', J$.R(3638641, 'ValidationError', ValidationError, false, true));
            J$.P(3638673, J$.I(typeof module === 'undefined' ? module = J$.R(3638657, 'module', undefined, true, true) : module = J$.R(3638657, 'module', module, true, true)), 'exports', J$.R(3638665, 'ValidationError', ValidationError, false, true));
        } catch (J$e) {
            J$.Ex(3638721, J$e);
        } finally {
            if (J$.Sr(3638729))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

