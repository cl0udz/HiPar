J$.noInstrEval = false;
jalangiLabel25:
    while (true) {
        try {
            J$.Se(6572377, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/depd/index.js');
            function containsNamespace(str, namespace) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6565873, arguments.callee, this, arguments);
                            arguments = J$.N(6565881, 'arguments', arguments, true, false, false);
                            str = J$.N(6565889, 'str', str, true, false, false);
                            namespace = J$.N(6565897, 'namespace', namespace, true, false, false);
                            J$.N(6565905, 'val', val, false, false, false);
                            J$.N(6565913, 'i', i, false, false, false);
                            var val = J$.W(6565665, 'val', J$.M(6565657, J$.R(6565641, 'str', str, false, false), 'split', false)(J$.T(6565649, /[ ,]+/, 14, false)), val, false, false);
                            namespace = J$.W(6565705, 'namespace', J$.M(6565697, J$.F(6565689, J$.I(typeof String === 'undefined' ? String = J$.R(6565673, 'String', undefined, true, true) : String = J$.R(6565673, 'String', String, true, true)), false)(J$.R(6565681, 'namespace', namespace, false, false)), 'toLowerCase', false)(), namespace, false, false);
                            for (var i = J$.W(6565721, 'i', J$.T(6565713, 0, 22, false), i, false, false); J$.C(345128, J$.B(658066, '<', J$.R(6565729, 'i', i, false, false), J$.G(6565745, J$.R(6565737, 'val', val, false, false), 'length'))); J$.B(658090, '-', i = J$.W(6565761, 'i', J$.B(658082, '+', J$.U(658074, '+', J$.R(6565753, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(345104, J$.U(658098, '!', str = J$.W(6565793, 'str', J$.G(6565785, J$.R(6565769, 'val', val, false, false), J$.R(6565777, 'i', i, false, false)), str, false, false))))
                                    continue;
                                if (J$.C(345120, J$.C(345112, J$.B(658106, '===', J$.R(6565801, 'str', str, false, false), J$.T(6565809, '*', 21, false))) ? J$._() : J$.B(658114, '===', J$.M(6565825, J$.R(6565817, 'str', str, false, false), 'toLowerCase', false)(), J$.R(6565833, 'namespace', namespace, false, false)))) {
                                    return J$.Rt(6565849, J$.T(6565841, true, 23, false));
                                }
                            }
                            return J$.Rt(6565865, J$.T(6565857, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(6572705, J$e);
                        } finally {
                            if (J$.Fr(6572713))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function convertDataDescriptorToAccessor(obj, prop, message) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(6566201, arguments.callee, this, arguments);
                            arguments = J$.N(6566209, 'arguments', arguments, true, false, false);
                            obj = J$.N(6566217, 'obj', obj, true, false, false);
                            prop = J$.N(6566225, 'prop', prop, true, false, false);
                            message = J$.N(6566233, 'message', message, true, false, false);
                            J$.N(6566241, 'descriptor', descriptor, false, false, false);
                            J$.N(6566249, 'value', value, false, false, false);
                            var descriptor = J$.W(6565953, 'descriptor', J$.M(6565945, J$.I(typeof Object === 'undefined' ? Object = J$.R(6565921, 'Object', undefined, true, true) : Object = J$.R(6565921, 'Object', Object, true, true)), 'getOwnPropertyDescriptor', false)(J$.R(6565929, 'obj', obj, false, false), J$.R(6565937, 'prop', prop, false, false)), descriptor, false, false);
                            var value = J$.W(6565977, 'value', J$.G(6565969, J$.R(6565961, 'descriptor', descriptor, false, false), 'value'), value, false, false);
                            J$.P(6566033, J$.R(6565985, 'descriptor', descriptor, false, false), 'get', J$.T(6566025, function getter() {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(6566009, arguments.callee, this, arguments);
                                            arguments = J$.N(6566017, 'arguments', arguments, true, false, false);
                                            return J$.Rt(6566001, J$.R(6565993, 'value', value, false, false));
                                        } catch (J$e) {
                                            J$.Ex(6572721, J$e);
                                        } finally {
                                            if (J$.Fr(6572729))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            if (J$.C(345136, J$.G(6566049, J$.R(6566041, 'descriptor', descriptor, false, false), 'writable'))) {
                                J$.P(6566121, J$.R(6566057, 'descriptor', descriptor, false, false), 'set', J$.T(6566113, function setter(val) {
                                    jalangiLabel2:
                                        while (true) {
                                            try {
                                                J$.Fe(6566089, arguments.callee, this, arguments);
                                                arguments = J$.N(6566097, 'arguments', arguments, true, false, false);
                                                val = J$.N(6566105, 'val', val, true, false, false);
                                                return J$.Rt(6566081, value = J$.W(6566073, 'value', J$.R(6566065, 'val', val, false, false), value, false, false));
                                            } catch (J$e) {
                                                J$.Ex(6572737, J$e);
                                            } finally {
                                                if (J$.Fr(6572745))
                                                    continue jalangiLabel2;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            J$.B(658122, 'delete', J$.R(6566129, 'descriptor', descriptor, false, false), 'value');
                            J$.B(658130, 'delete', J$.R(6566137, 'descriptor', descriptor, false, false), 'writable');
                            J$.M(6566177, J$.I(typeof Object === 'undefined' ? Object = J$.R(6566145, 'Object', undefined, true, true) : Object = J$.R(6566145, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(6566153, 'obj', obj, false, false), J$.R(6566161, 'prop', prop, false, false), J$.R(6566169, 'descriptor', descriptor, false, false));
                            return J$.Rt(6566193, J$.R(6566185, 'descriptor', descriptor, false, false));
                        } catch (J$e) {
                            J$.Ex(6572753, J$e);
                        } finally {
                            if (J$.Fr(6572761))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createArgumentsString(arity) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(6566385, arguments.callee, this, arguments);
                            arguments = J$.N(6566393, 'arguments', arguments, true, false, false);
                            arity = J$.N(6566401, 'arity', arity, true, false, false);
                            J$.N(6566409, 'str', str, false, false, false);
                            J$.N(6566417, 'i', i, false, false, false);
                            var str = J$.W(6566265, 'str', J$.T(6566257, '', 21, false), str, false, false);
                            for (var i = J$.W(6566281, 'i', J$.T(6566273, 0, 22, false), i, false, false); J$.C(345144, J$.B(658138, '<', J$.R(6566289, 'i', i, false, false), J$.R(6566297, 'arity', arity, false, false))); J$.B(658162, '-', i = J$.W(6566313, 'i', J$.B(658154, '+', J$.U(658146, '+', J$.R(6566305, 'i', i, false, false)), 1), i, false, false), 1)) {
                                str = J$.W(6566345, 'str', J$.B(658178, '+', J$.R(6566337, 'str', str, false, false), J$.B(658170, '+', J$.T(6566321, ', arg', 21, false), J$.R(6566329, 'i', i, false, false))), str, false, false);
                            }
                            return J$.Rt(6566377, J$.M(6566369, J$.R(6566353, 'str', str, false, false), 'substr', false)(J$.T(6566361, 2, 22, false)));
                        } catch (J$e) {
                            J$.Ex(6572769, J$e);
                        } finally {
                            if (J$.Fr(6572777))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createStackString(stack) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(6566665, arguments.callee, this, arguments);
                            arguments = J$.N(6566673, 'arguments', arguments, true, false, false);
                            stack = J$.N(6566681, 'stack', stack, true, false, false);
                            J$.N(6566689, 'str', str, false, false, false);
                            J$.N(6566697, 'i', i, false, false, false);
                            var str = J$.W(6566465, 'str', J$.B(658194, '+', J$.B(658186, '+', J$.G(6566433, J$.R(6566425, 'this', this, false, false), 'name'), J$.T(6566441, ': ', 21, false)), J$.G(6566457, J$.R(6566449, 'this', this, false, false), 'namespace')), str, false, false);
                            if (J$.C(345152, J$.G(6566481, J$.R(6566473, 'this', this, false, false), 'message'))) {
                                str = J$.W(6566521, 'str', J$.B(658210, '+', J$.R(6566513, 'str', str, false, false), J$.B(658202, '+', J$.T(6566489, ' deprecated ', 21, false), J$.G(6566505, J$.R(6566497, 'this', this, false, false), 'message'))), str, false, false);
                            }
                            for (var i = J$.W(6566537, 'i', J$.T(6566529, 0, 22, false), i, false, false); J$.C(345160, J$.B(658218, '<', J$.R(6566545, 'i', i, false, false), J$.G(6566561, J$.R(6566553, 'stack', stack, false, false), 'length'))); J$.B(658242, '-', i = J$.W(6566577, 'i', J$.B(658234, '+', J$.U(658226, '+', J$.R(6566569, 'i', i, false, false)), 1), i, false, false), 1)) {
                                str = J$.W(6566641, 'str', J$.B(658258, '+', J$.R(6566633, 'str', str, false, false), J$.B(658250, '+', J$.T(6566585, '\n    at ', 21, false), J$.F(6566625, J$.R(6566593, 'callSiteToString', callSiteToString, false, true), false)(J$.G(6566617, J$.R(6566601, 'stack', stack, false, false), J$.R(6566609, 'i', i, false, false))))), str, false, false);
                            }
                            return J$.Rt(6566657, J$.R(6566649, 'str', str, false, false));
                        } catch (J$e) {
                            J$.Ex(6572785, J$e);
                        } finally {
                            if (J$.Fr(6572793))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function depd(namespace) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(6567129, arguments.callee, this, arguments);
                            function deprecate(message) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(6566873, arguments.callee, this, arguments);
                                            arguments = J$.N(6566881, 'arguments', arguments, true, false, false);
                                            message = J$.N(6566889, 'message', message, true, false, false);
                                            J$.M(6566865, J$.R(6566841, 'log', log, false, true), 'call', false)(J$.R(6566849, 'deprecate', deprecate, false, false), J$.R(6566857, 'message', message, false, false));
                                        } catch (J$e) {
                                            J$.Ex(6572801, J$e);
                                        } finally {
                                            if (J$.Fr(6572809))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(6567137, 'arguments', arguments, true, false, false);
                            namespace = J$.N(6567145, 'namespace', namespace, true, false, false);
                            J$.N(6567153, 'stack', stack, false, false, false);
                            J$.N(6567161, 'site', site, false, false, false);
                            J$.N(6567169, 'file', file, false, false, false);
                            deprecate = J$.N(6567185, 'deprecate', J$.T(6567177, deprecate, 12, false), true, false, false);
                            if (J$.C(345168, J$.U(658266, '!', J$.R(6566705, 'namespace', namespace, false, false)))) {
                                throw J$.F(6566729, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6566713, 'TypeError', undefined, true, true) : TypeError = J$.R(6566713, 'TypeError', TypeError, true, true)), true)(J$.T(6566721, 'argument namespace is required', 21, false));
                            }
                            var stack = J$.W(6566753, 'stack', J$.F(6566745, J$.R(6566737, 'getStack', getStack, false, true), false)(), stack, false, false);
                            var site = J$.W(6566801, 'site', J$.F(6566793, J$.R(6566761, 'callSiteLocation', callSiteLocation, false, true), false)(J$.G(6566785, J$.R(6566769, 'stack', stack, false, false), J$.T(6566777, 1, 22, false))), site, false, false);
                            var file = J$.W(6566833, 'file', J$.G(6566825, J$.R(6566809, 'site', site, false, false), J$.T(6566817, 0, 22, false)), file, false, false);
                            J$.P(6566913, J$.R(6566897, 'deprecate', deprecate, false, false), '_file', J$.R(6566905, 'file', file, false, false));
                            J$.P(6566953, J$.R(6566921, 'deprecate', deprecate, false, false), '_ignored', J$.F(6566945, J$.R(6566929, 'isignored', isignored, false, true), false)(J$.R(6566937, 'namespace', namespace, false, false)));
                            J$.P(6566977, J$.R(6566961, 'deprecate', deprecate, false, false), '_namespace', J$.R(6566969, 'namespace', namespace, false, false));
                            J$.P(6567017, J$.R(6566985, 'deprecate', deprecate, false, false), '_traced', J$.F(6567009, J$.R(6566993, 'istraced', istraced, false, true), false)(J$.R(6567001, 'namespace', namespace, false, false)));
                            J$.P(6567057, J$.R(6567025, 'deprecate', deprecate, false, false), '_warned', J$.M(6567049, J$.I(typeof Object === 'undefined' ? Object = J$.R(6567033, 'Object', undefined, true, true) : Object = J$.R(6567033, 'Object', Object, true, true)), 'create', false)(J$.T(6567041, null, 25, false)));
                            J$.P(6567081, J$.R(6567065, 'deprecate', deprecate, false, false), 'function', J$.R(6567073, 'wrapfunction', wrapfunction, false, true));
                            J$.P(6567105, J$.R(6567089, 'deprecate', deprecate, false, false), 'property', J$.R(6567097, 'wrapproperty', wrapproperty, false, true));
                            return J$.Rt(6567121, J$.R(6567113, 'deprecate', deprecate, false, false));
                        } catch (J$e) {
                            J$.Ex(6572817, J$e);
                        } finally {
                            if (J$.Fr(6572825))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isignored(namespace) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(6567305, arguments.callee, this, arguments);
                            arguments = J$.N(6567313, 'arguments', arguments, true, false, false);
                            namespace = J$.N(6567321, 'namespace', namespace, true, false, false);
                            J$.N(6567329, 'str', str, false, false, false);
                            if (J$.C(345176, J$.G(6567201, J$.I(typeof process === 'undefined' ? process = J$.R(6567193, 'process', undefined, true, true) : process = J$.R(6567193, 'process', process, true, true)), 'noDeprecation'))) {
                                return J$.Rt(6567217, J$.T(6567209, true, 23, false));
                            }
                            var str = J$.W(6567257, 'str', J$.C(345184, J$.G(6567241, J$.G(6567233, J$.I(typeof process === 'undefined' ? process = J$.R(6567225, 'process', undefined, true, true) : process = J$.R(6567225, 'process', process, true, true)), 'env'), 'NO_DEPRECATION')) ? J$._() : J$.T(6567249, '', 21, false), str, false, false);
                            return J$.Rt(6567297, J$.F(6567289, J$.R(6567265, 'containsNamespace', containsNamespace, false, true), false)(J$.R(6567273, 'str', str, false, false), J$.R(6567281, 'namespace', namespace, false, false)));
                        } catch (J$e) {
                            J$.Ex(6572833, J$e);
                        } finally {
                            if (J$.Fr(6572841))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function istraced(namespace) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(6567449, arguments.callee, this, arguments);
                            arguments = J$.N(6567457, 'arguments', arguments, true, false, false);
                            namespace = J$.N(6567465, 'namespace', namespace, true, false, false);
                            J$.N(6567473, 'str', str, false, false, false);
                            if (J$.C(345192, J$.G(6567345, J$.I(typeof process === 'undefined' ? process = J$.R(6567337, 'process', undefined, true, true) : process = J$.R(6567337, 'process', process, true, true)), 'traceDeprecation'))) {
                                return J$.Rt(6567361, J$.T(6567353, true, 23, false));
                            }
                            var str = J$.W(6567401, 'str', J$.C(345200, J$.G(6567385, J$.G(6567377, J$.I(typeof process === 'undefined' ? process = J$.R(6567369, 'process', undefined, true, true) : process = J$.R(6567369, 'process', process, true, true)), 'env'), 'TRACE_DEPRECATION')) ? J$._() : J$.T(6567393, '', 21, false), str, false, false);
                            return J$.Rt(6567441, J$.F(6567433, J$.R(6567409, 'containsNamespace', containsNamespace, false, true), false)(J$.R(6567417, 'str', str, false, false), J$.R(6567425, 'namespace', namespace, false, false)));
                        } catch (J$e) {
                            J$.Ex(6572849, J$e);
                        } finally {
                            if (J$.Fr(6572857))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function log(message, site) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(6568609, arguments.callee, this, arguments);
                            arguments = J$.N(6568617, 'arguments', arguments, true, false, false);
                            message = J$.N(6568625, 'message', message, true, false, false);
                            site = J$.N(6568633, 'site', site, true, false, false);
                            J$.N(6568641, 'haslisteners', haslisteners, false, false, false);
                            J$.N(6568649, 'caller', caller, false, false, false);
                            J$.N(6568657, 'callFile', callFile, false, false, false);
                            J$.N(6568665, 'callSite', callSite, false, false, false);
                            J$.N(6568673, 'i', i, false, false, false);
                            J$.N(6568681, 'seen', seen, false, false, false);
                            J$.N(6568689, 'stack', stack, false, false, false);
                            J$.N(6568697, 'file', file, false, false, false);
                            J$.N(6568705, 'key', key, false, false, false);
                            J$.N(6568713, 'err', err, false, false, false);
                            J$.N(6568721, 'format', format, false, false, false);
                            J$.N(6568729, 'msg', msg, false, false, false);
                            var haslisteners = J$.W(6567521, 'haslisteners', J$.B(658274, '!==', J$.F(6567505, J$.R(6567481, 'eventListenerCount', eventListenerCount, false, true), false)(J$.I(typeof process === 'undefined' ? process = J$.R(6567489, 'process', undefined, true, true) : process = J$.R(6567489, 'process', process, true, true)), J$.T(6567497, 'deprecation', 21, false)), J$.T(6567513, 0, 22, false)), haslisteners, false, false);
                            if (J$.C(345216, J$.C(345208, J$.U(658282, '!', J$.R(6567529, 'haslisteners', haslisteners, false, false))) ? J$.G(6567545, J$.R(6567537, 'this', this, false, false), '_ignored') : J$._())) {
                                return J$.Rt(6567553, undefined);
                            }
                            var caller;
                            var callFile;
                            var callSite;
                            var i = J$.W(6567569, 'i', J$.T(6567561, 0, 22, false), i, false, false);
                            var seen = J$.W(6567585, 'seen', J$.T(6567577, false, 23, false), seen, false, false);
                            var stack = J$.W(6567609, 'stack', J$.F(6567601, J$.R(6567593, 'getStack', getStack, false, true), false)(), stack, false, false);
                            var file = J$.W(6567633, 'file', J$.G(6567625, J$.R(6567617, 'this', this, false, false), '_file'), file, false, false);
                            if (J$.C(345224, J$.R(6567641, 'site', site, false, false))) {
                                callSite = J$.W(6567689, 'callSite', J$.F(6567681, J$.R(6567649, 'callSiteLocation', callSiteLocation, false, true), false)(J$.G(6567673, J$.R(6567657, 'stack', stack, false, false), J$.T(6567665, 1, 22, false))), callSite, false, false);
                                J$.P(6567721, J$.R(6567697, 'callSite', callSite, false, false), 'name', J$.G(6567713, J$.R(6567705, 'site', site, false, false), 'name'));
                                file = J$.W(6567753, 'file', J$.G(6567745, J$.R(6567729, 'callSite', callSite, false, false), J$.T(6567737, 0, 22, false)), file, false, false);
                            } else {
                                i = J$.W(6567769, 'i', J$.T(6567761, 2, 22, false), i, false, false);
                                site = J$.W(6567817, 'site', J$.F(6567809, J$.R(6567777, 'callSiteLocation', callSiteLocation, false, true), false)(J$.G(6567801, J$.R(6567785, 'stack', stack, false, false), J$.R(6567793, 'i', i, false, false))), site, false, false);
                                callSite = J$.W(6567833, 'callSite', J$.R(6567825, 'site', site, false, false), callSite, false, false);
                            }
                            for (; J$.C(345256, J$.B(658290, '<', J$.R(6567841, 'i', i, false, false), J$.G(6567857, J$.R(6567849, 'stack', stack, false, false), 'length'))); J$.B(658314, '-', i = J$.W(6567873, 'i', J$.B(658306, '+', J$.U(658298, '+', J$.R(6567865, 'i', i, false, false)), 1), i, false, false), 1)) {
                                caller = J$.W(6567921, 'caller', J$.F(6567913, J$.R(6567881, 'callSiteLocation', callSiteLocation, false, true), false)(J$.G(6567905, J$.R(6567889, 'stack', stack, false, false), J$.R(6567897, 'i', i, false, false))), caller, false, false);
                                callFile = J$.W(6567953, 'callFile', J$.G(6567945, J$.R(6567929, 'caller', caller, false, false), J$.T(6567937, 0, 22, false)), callFile, false, false);
                                if (J$.C(345248, J$.B(658322, '===', J$.R(6567961, 'callFile', callFile, false, false), J$.R(6567969, 'file', file, false, false)))) {
                                    seen = J$.W(6567985, 'seen', J$.T(6567977, true, 23, false), seen, false, false);
                                } else if (J$.C(345240, J$.B(658330, '===', J$.R(6567993, 'callFile', callFile, false, false), J$.G(6568009, J$.R(6568001, 'this', this, false, false), '_file')))) {
                                    file = J$.W(6568033, 'file', J$.G(6568025, J$.R(6568017, 'this', this, false, false), '_file'), file, false, false);
                                } else if (J$.C(345232, J$.R(6568041, 'seen', seen, false, false))) {
                                    break;
                                }
                            }
                            var key = J$.W(6568121, 'key', J$.C(345264, J$.R(6568049, 'caller', caller, false, false)) ? J$.B(658346, '+', J$.B(658338, '+', J$.M(6568073, J$.R(6568057, 'site', site, false, false), 'join', false)(J$.T(6568065, ':', 21, false)), J$.T(6568081, '__', 21, false)), J$.M(6568105, J$.R(6568089, 'caller', caller, false, false), 'join', false)(J$.T(6568097, ':', 21, false))) : J$.T(6568113, undefined, 24, false), key, false, false);
                            if (J$.C(345280, J$.C(345272, J$.B(658354, '!==', J$.R(6568129, 'key', key, false, false), J$.T(6568137, undefined, 24, false))) ? J$.B(658362, 'in', J$.R(6568145, 'key', key, false, false), J$.G(6568161, J$.R(6568153, 'this', this, false, false), '_warned')) : J$._())) {
                                return J$.Rt(6568169, undefined);
                            }
                            J$.P(6568209, J$.G(6568185, J$.R(6568177, 'this', this, false, false), '_warned'), J$.R(6568193, 'key', key, false, false), J$.T(6568201, true, 23, false));
                            if (J$.C(345304, J$.U(658370, '!', J$.R(6568217, 'message', message, false, false)))) {
                                message = J$.W(6568305, 'message', J$.C(345296, J$.C(345288, J$.B(658378, '===', J$.R(6568225, 'callSite', callSite, false, false), J$.R(6568233, 'site', site, false, false))) ? J$._() : J$.U(658386, '!', J$.G(6568249, J$.R(6568241, 'callSite', callSite, false, false), 'name'))) ? J$.F(6568273, J$.R(6568257, 'defaultMessage', defaultMessage, false, true), false)(J$.R(6568265, 'site', site, false, false)) : J$.F(6568297, J$.R(6568281, 'defaultMessage', defaultMessage, false, true), false)(J$.R(6568289, 'callSite', callSite, false, false)), message, false, false);
                            }
                            if (J$.C(345312, J$.R(6568313, 'haslisteners', haslisteners, false, false))) {
                                var err = J$.W(6568385, 'err', J$.F(6568377, J$.R(6568321, 'DeprecationError', DeprecationError, false, true), false)(J$.G(6568337, J$.R(6568329, 'this', this, false, false), '_namespace'), J$.R(6568345, 'message', message, false, false), J$.M(6568369, J$.R(6568353, 'stack', stack, false, false), 'slice', false)(J$.R(6568361, 'i', i, false, false))), err, false, false);
                                J$.M(6568417, J$.I(typeof process === 'undefined' ? process = J$.R(6568393, 'process', undefined, true, true) : process = J$.R(6568393, 'process', process, true, true)), 'emit', false)(J$.T(6568401, 'deprecation', 21, false), J$.R(6568409, 'err', err, false, false));
                                return J$.Rt(6568425, undefined);
                            }
                            var format = J$.W(6568473, 'format', J$.C(345320, J$.G(6568449, J$.G(6568441, J$.I(typeof process === 'undefined' ? process = J$.R(6568433, 'process', undefined, true, true) : process = J$.R(6568433, 'process', process, true, true)), 'stderr'), 'isTTY')) ? J$.R(6568457, 'formatColor', formatColor, false, true) : J$.R(6568465, 'formatPlain', formatPlain, false, true), format, false, false);
                            var msg = J$.W(6568545, 'msg', J$.M(6568537, J$.R(6568481, 'format', format, false, false), 'call', false)(J$.R(6568489, 'this', this, false, false), J$.R(6568497, 'message', message, false, false), J$.R(6568505, 'caller', caller, false, false), J$.M(6568529, J$.R(6568513, 'stack', stack, false, false), 'slice', false)(J$.R(6568521, 'i', i, false, false))), msg, false, false);
                            J$.M(6568593, J$.G(6568561, J$.I(typeof process === 'undefined' ? process = J$.R(6568553, 'process', undefined, true, true) : process = J$.R(6568553, 'process', process, true, true)), 'stderr'), 'write', false)(J$.B(658394, '+', J$.R(6568569, 'msg', msg, false, false), J$.T(6568577, '\n', 21, false)), J$.T(6568585, 'utf8', 21, false));
                            return J$.Rt(6568601, undefined);
                        } catch (J$e) {
                            J$.Ex(6572865, J$e);
                        } finally {
                            if (J$.Fr(6572873))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function callSiteLocation(callSite) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(6568985, arguments.callee, this, arguments);
                            arguments = J$.N(6568993, 'arguments', arguments, true, false, false);
                            callSite = J$.N(6569001, 'callSite', callSite, true, false, false);
                            J$.N(6569009, 'file', file, false, false, false);
                            J$.N(6569017, 'line', line, false, false, false);
                            J$.N(6569025, 'colm', colm, false, false, false);
                            J$.N(6569033, 'site', site, false, false, false);
                            var file = J$.W(6568761, 'file', J$.C(345328, J$.M(6568745, J$.R(6568737, 'callSite', callSite, false, false), 'getFileName', false)()) ? J$._() : J$.T(6568753, '<anonymous>', 21, false), file, false, false);
                            var line = J$.W(6568785, 'line', J$.M(6568777, J$.R(6568769, 'callSite', callSite, false, false), 'getLineNumber', false)(), line, false, false);
                            var colm = J$.W(6568809, 'colm', J$.M(6568801, J$.R(6568793, 'callSite', callSite, false, false), 'getColumnNumber', false)(), colm, false, false);
                            if (J$.C(345336, J$.M(6568825, J$.R(6568817, 'callSite', callSite, false, false), 'isEval', false)())) {
                                file = J$.W(6568865, 'file', J$.B(658410, '+', J$.B(658402, '+', J$.M(6568841, J$.R(6568833, 'callSite', callSite, false, false), 'getEvalOrigin', false)(), J$.T(6568849, ', ', 21, false)), J$.R(6568857, 'file', file, false, false)), file, false, false);
                            }
                            var site = J$.W(6568905, 'site', J$.T(6568897, [
                                J$.R(6568873, 'file', file, false, false),
                                J$.R(6568881, 'line', line, false, false),
                                J$.R(6568889, 'colm', colm, false, false)
                            ], 10, false), site, false, false);
                            J$.P(6568929, J$.R(6568913, 'site', site, false, false), 'callSite', J$.R(6568921, 'callSite', callSite, false, false));
                            J$.P(6568961, J$.R(6568937, 'site', site, false, false), 'name', J$.M(6568953, J$.R(6568945, 'callSite', callSite, false, false), 'getFunctionName', false)());
                            return J$.Rt(6568977, J$.R(6568969, 'site', site, false, false));
                        } catch (J$e) {
                            J$.Ex(6572881, J$e);
                        } finally {
                            if (J$.Fr(6572889))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function defaultMessage(site) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(6569345, arguments.callee, this, arguments);
                            arguments = J$.N(6569353, 'arguments', arguments, true, false, false);
                            site = J$.N(6569361, 'site', site, true, false, false);
                            J$.N(6569369, 'callSite', callSite, false, false, false);
                            J$.N(6569377, 'funcName', funcName, false, false, false);
                            J$.N(6569385, 'context', context, false, false, false);
                            J$.N(6569393, 'typeName', typeName, false, false, false);
                            var callSite = J$.W(6569057, 'callSite', J$.G(6569049, J$.R(6569041, 'site', site, false, false), 'callSite'), callSite, false, false);
                            var funcName = J$.W(6569081, 'funcName', J$.G(6569073, J$.R(6569065, 'site', site, false, false), 'name'), funcName, false, false);
                            if (J$.C(345344, J$.U(658418, '!', J$.R(6569089, 'funcName', funcName, false, false)))) {
                                funcName = J$.W(6569137, 'funcName', J$.B(658434, '+', J$.B(658426, '+', J$.T(6569097, '<anonymous@', 21, false), J$.F(6569121, J$.R(6569105, 'formatLocation', formatLocation, false, true), false)(J$.R(6569113, 'site', site, false, false))), J$.T(6569129, '>', 21, false)), funcName, false, false);
                            }
                            var context = J$.W(6569161, 'context', J$.M(6569153, J$.R(6569145, 'callSite', callSite, false, false), 'getThis', false)(), context, false, false);
                            var typeName = J$.W(6569193, 'typeName', J$.C(345352, J$.R(6569169, 'context', context, false, false)) ? J$.M(6569185, J$.R(6569177, 'callSite', callSite, false, false), 'getTypeName', false)() : J$._(), typeName, false, false);
                            if (J$.C(345360, J$.B(658442, '===', J$.R(6569201, 'typeName', typeName, false, false), J$.T(6569209, 'Object', 21, false)))) {
                                typeName = J$.W(6569225, 'typeName', J$.T(6569217, undefined, 24, false), typeName, false, false);
                            }
                            if (J$.C(345376, J$.B(658450, '===', J$.R(6569233, 'typeName', typeName, false, false), J$.T(6569241, 'Function', 21, false)))) {
                                typeName = J$.W(6569273, 'typeName', J$.C(345368, J$.G(6569257, J$.R(6569249, 'context', context, false, false), 'name')) ? J$._() : J$.R(6569265, 'typeName', typeName, false, false), typeName, false, false);
                            }
                            return J$.Rt(6569337, J$.C(345392, J$.C(345384, J$.R(6569281, 'typeName', typeName, false, false)) ? J$.M(6569297, J$.R(6569289, 'callSite', callSite, false, false), 'getMethodName', false)() : J$._()) ? J$.B(658466, '+', J$.B(658458, '+', J$.R(6569305, 'typeName', typeName, false, false), J$.T(6569313, '.', 21, false)), J$.R(6569321, 'funcName', funcName, false, false)) : J$.R(6569329, 'funcName', funcName, false, false));
                        } catch (J$e) {
                            J$.Ex(6572897, J$e);
                        } finally {
                            if (J$.Fr(6572905))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function formatPlain(msg, caller, stack) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(6569713, arguments.callee, this, arguments);
                            arguments = J$.N(6569721, 'arguments', arguments, true, false, false);
                            msg = J$.N(6569729, 'msg', msg, true, false, false);
                            caller = J$.N(6569737, 'caller', caller, true, false, false);
                            stack = J$.N(6569745, 'stack', stack, true, false, false);
                            J$.N(6569753, 'timestamp', timestamp, false, false, false);
                            J$.N(6569761, 'formatted', formatted, false, false, false);
                            J$.N(6569769, 'i', i, false, false, false);
                            var timestamp = J$.W(6569425, 'timestamp', J$.M(6569417, J$.F(6569409, J$.I(typeof Date === 'undefined' ? Date = J$.R(6569401, 'Date', undefined, true, true) : Date = J$.R(6569401, 'Date', Date, true, true)), true)(), 'toUTCString', false)(), timestamp, false, false);
                            var formatted = J$.W(6569481, 'formatted', J$.B(658498, '+', J$.B(658490, '+', J$.B(658482, '+', J$.B(658474, '+', J$.R(6569433, 'timestamp', timestamp, false, false), J$.T(6569441, ' ', 21, false)), J$.G(6569457, J$.R(6569449, 'this', this, false, false), '_namespace')), J$.T(6569465, ' deprecated ', 21, false)), J$.R(6569473, 'msg', msg, false, false)), formatted, false, false);
                            if (J$.C(345408, J$.G(6569497, J$.R(6569489, 'this', this, false, false), '_traced'))) {
                                for (var i = J$.W(6569513, 'i', J$.T(6569505, 0, 22, false), i, false, false); J$.C(345400, J$.B(658506, '<', J$.R(6569521, 'i', i, false, false), J$.G(6569537, J$.R(6569529, 'stack', stack, false, false), 'length'))); J$.B(658530, '-', i = J$.W(6569553, 'i', J$.B(658522, '+', J$.U(658514, '+', J$.R(6569545, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    formatted = J$.W(6569617, 'formatted', J$.B(658546, '+', J$.R(6569609, 'formatted', formatted, false, false), J$.B(658538, '+', J$.T(6569561, '\n    at ', 21, false), J$.F(6569601, J$.R(6569569, 'callSiteToString', callSiteToString, false, true), false)(J$.G(6569593, J$.R(6569577, 'stack', stack, false, false), J$.R(6569585, 'i', i, false, false))))), formatted, false, false);
                                }
                                return J$.Rt(6569633, J$.R(6569625, 'formatted', formatted, false, false));
                            }
                            if (J$.C(345416, J$.R(6569641, 'caller', caller, false, false))) {
                                formatted = J$.W(6569689, 'formatted', J$.B(658562, '+', J$.R(6569681, 'formatted', formatted, false, false), J$.B(658554, '+', J$.T(6569649, ' at ', 21, false), J$.F(6569673, J$.R(6569657, 'formatLocation', formatLocation, false, true), false)(J$.R(6569665, 'caller', caller, false, false)))), formatted, false, false);
                            }
                            return J$.Rt(6569705, J$.R(6569697, 'formatted', formatted, false, false));
                        } catch (J$e) {
                            J$.Ex(6572913, J$e);
                        } finally {
                            if (J$.Fr(6572921))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function formatColor(msg, caller, stack) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(6570089, arguments.callee, this, arguments);
                            arguments = J$.N(6570097, 'arguments', arguments, true, false, false);
                            msg = J$.N(6570105, 'msg', msg, true, false, false);
                            caller = J$.N(6570113, 'caller', caller, true, false, false);
                            stack = J$.N(6570121, 'stack', stack, true, false, false);
                            J$.N(6570129, 'formatted', formatted, false, false, false);
                            J$.N(6570137, 'i', i, false, false, false);
                            var formatted = J$.W(6569841, 'formatted', J$.B(658610, '+', J$.B(658602, '+', J$.B(658594, '+', J$.B(658586, '+', J$.B(658578, '+', J$.B(658570, '+', J$.T(6569777, '\x1B[36;1m', 21, false), J$.G(6569793, J$.R(6569785, 'this', this, false, false), '_namespace')), J$.T(6569801, '\x1B[22;39m', 21, false)), J$.T(6569809, ' \x1B[33;1mdeprecated\x1B[22;39m', 21, false)), J$.T(6569817, ' \x1B[0m', 21, false)), J$.R(6569825, 'msg', msg, false, false)), J$.T(6569833, '\x1B[39m', 21, false)), formatted, false, false);
                            if (J$.C(345432, J$.G(6569857, J$.R(6569849, 'this', this, false, false), '_traced'))) {
                                for (var i = J$.W(6569873, 'i', J$.T(6569865, 0, 22, false), i, false, false); J$.C(345424, J$.B(658618, '<', J$.R(6569881, 'i', i, false, false), J$.G(6569897, J$.R(6569889, 'stack', stack, false, false), 'length'))); J$.B(658642, '-', i = J$.W(6569913, 'i', J$.B(658634, '+', J$.U(658626, '+', J$.R(6569905, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    formatted = J$.W(6569985, 'formatted', J$.B(658666, '+', J$.R(6569977, 'formatted', formatted, false, false), J$.B(658658, '+', J$.B(658650, '+', J$.T(6569921, '\n    \x1B[36mat ', 21, false), J$.F(6569961, J$.R(6569929, 'callSiteToString', callSiteToString, false, true), false)(J$.G(6569953, J$.R(6569937, 'stack', stack, false, false), J$.R(6569945, 'i', i, false, false)))), J$.T(6569969, '\x1B[39m', 21, false))), formatted, false, false);
                                }
                                return J$.Rt(6570001, J$.R(6569993, 'formatted', formatted, false, false));
                            }
                            if (J$.C(345440, J$.R(6570009, 'caller', caller, false, false))) {
                                formatted = J$.W(6570065, 'formatted', J$.B(658690, '+', J$.R(6570057, 'formatted', formatted, false, false), J$.B(658682, '+', J$.B(658674, '+', J$.T(6570017, ' \x1B[36m', 21, false), J$.F(6570041, J$.R(6570025, 'formatLocation', formatLocation, false, true), false)(J$.R(6570033, 'caller', caller, false, false))), J$.T(6570049, '\x1B[39m', 21, false))), formatted, false, false);
                            }
                            return J$.Rt(6570081, J$.R(6570073, 'formatted', formatted, false, false));
                        } catch (J$e) {
                            J$.Ex(6572929, J$e);
                        } finally {
                            if (J$.Fr(6572937))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function formatLocation(callSite) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(6570265, arguments.callee, this, arguments);
                            arguments = J$.N(6570273, 'arguments', arguments, true, false, false);
                            callSite = J$.N(6570281, 'callSite', callSite, true, false, false);
                            return J$.Rt(6570257, J$.B(658722, '+', J$.B(658714, '+', J$.B(658706, '+', J$.B(658698, '+', J$.F(6570185, J$.R(6570145, 'relative', relative, false, true), false)(J$.R(6570153, 'basePath', basePath, false, true), J$.G(6570177, J$.R(6570161, 'callSite', callSite, false, false), J$.T(6570169, 0, 22, false))), J$.T(6570193, ':', 21, false)), J$.G(6570217, J$.R(6570201, 'callSite', callSite, false, false), J$.T(6570209, 1, 22, false))), J$.T(6570225, ':', 21, false)), J$.G(6570249, J$.R(6570233, 'callSite', callSite, false, false), J$.T(6570241, 2, 22, false))));
                        } catch (J$e) {
                            J$.Ex(6572945, J$e);
                        } finally {
                            if (J$.Fr(6572953))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getStack() {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(6570553, arguments.callee, this, arguments);
                            arguments = J$.N(6570561, 'arguments', arguments, true, false, false);
                            J$.N(6570569, 'limit', limit, false, false, false);
                            J$.N(6570577, 'obj', obj, false, false, false);
                            J$.N(6570585, 'prep', prep, false, false, false);
                            J$.N(6570593, 'stack', stack, false, false, false);
                            var limit = J$.W(6570305, 'limit', J$.G(6570297, J$.I(typeof Error === 'undefined' ? Error = J$.R(6570289, 'Error', undefined, true, true) : Error = J$.R(6570289, 'Error', Error, true, true)), 'stackTraceLimit'), limit, false, false);
                            var obj = J$.W(6570321, 'obj', J$.T(6570313, {}, 11, false), obj, false, false);
                            var prep = J$.W(6570345, 'prep', J$.G(6570337, J$.I(typeof Error === 'undefined' ? Error = J$.R(6570329, 'Error', undefined, true, true) : Error = J$.R(6570329, 'Error', Error, true, true)), 'prepareStackTrace'), prep, false, false);
                            J$.P(6570369, J$.I(typeof Error === 'undefined' ? Error = J$.R(6570353, 'Error', undefined, true, true) : Error = J$.R(6570353, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(6570361, 'prepareObjectStackTrace', prepareObjectStackTrace, false, true));
                            J$.P(6570417, J$.I(typeof Error === 'undefined' ? Error = J$.R(6570377, 'Error', undefined, true, true) : Error = J$.R(6570377, 'Error', Error, true, true)), 'stackTraceLimit', J$.M(6570409, J$.I(typeof Math === 'undefined' ? Math = J$.R(6570385, 'Math', undefined, true, true) : Math = J$.R(6570385, 'Math', Math, true, true)), 'max', false)(J$.T(6570393, 10, 22, false), J$.R(6570401, 'limit', limit, false, false)));
                            J$.M(6570441, J$.I(typeof Error === 'undefined' ? Error = J$.R(6570425, 'Error', undefined, true, true) : Error = J$.R(6570425, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(6570433, 'obj', obj, false, false));
                            var stack = J$.W(6570481, 'stack', J$.M(6570473, J$.G(6570457, J$.R(6570449, 'obj', obj, false, false), 'stack'), 'slice', false)(J$.T(6570465, 1, 22, false)), stack, false, false);
                            J$.P(6570505, J$.I(typeof Error === 'undefined' ? Error = J$.R(6570489, 'Error', undefined, true, true) : Error = J$.R(6570489, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(6570497, 'prep', prep, false, false));
                            J$.P(6570529, J$.I(typeof Error === 'undefined' ? Error = J$.R(6570513, 'Error', undefined, true, true) : Error = J$.R(6570513, 'Error', Error, true, true)), 'stackTraceLimit', J$.R(6570521, 'limit', limit, false, false));
                            return J$.Rt(6570545, J$.R(6570537, 'stack', stack, false, false));
                        } catch (J$e) {
                            J$.Ex(6572961, J$e);
                        } finally {
                            if (J$.Fr(6572969))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function prepareObjectStackTrace(obj, stack) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(6570617, arguments.callee, this, arguments);
                            arguments = J$.N(6570625, 'arguments', arguments, true, false, false);
                            obj = J$.N(6570633, 'obj', obj, true, false, false);
                            stack = J$.N(6570641, 'stack', stack, true, false, false);
                            return J$.Rt(6570609, J$.R(6570601, 'stack', stack, false, false));
                        } catch (J$e) {
                            J$.Ex(6572977, J$e);
                        } finally {
                            if (J$.Fr(6572985))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapfunction(fn, message) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(6570937, arguments.callee, this, arguments);
                            arguments = J$.N(6570945, 'arguments', arguments, true, false, false);
                            fn = J$.N(6570953, 'fn', fn, true, false, false);
                            message = J$.N(6570961, 'message', message, true, false, false);
                            J$.N(6570969, 'args', args, false, false, false);
                            J$.N(6570977, 'deprecate', deprecate, false, false, false);
                            J$.N(6570985, 'stack', stack, false, false, false);
                            J$.N(6570993, 'site', site, false, false, false);
                            J$.N(6571001, 'deprecatedfn', deprecatedfn, false, false, false);
                            if (J$.C(345448, J$.B(658738, '!==', J$.U(658730, 'typeof', J$.R(6570649, 'fn', fn, false, false)), J$.T(6570657, 'function', 21, false)))) {
                                throw J$.F(6570681, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6570665, 'TypeError', undefined, true, true) : TypeError = J$.R(6570665, 'TypeError', TypeError, true, true)), true)(J$.T(6570673, 'argument fn must be a function', 21, false));
                            }
                            var args = J$.W(6570721, 'args', J$.F(6570713, J$.R(6570689, 'createArgumentsString', createArgumentsString, false, true), false)(J$.G(6570705, J$.R(6570697, 'fn', fn, false, false), 'length')), args, false, false);
                            var deprecate = J$.W(6570737, 'deprecate', J$.R(6570729, 'this', this, false, false), deprecate, false, false);
                            var stack = J$.W(6570761, 'stack', J$.F(6570753, J$.R(6570745, 'getStack', getStack, false, true), false)(), stack, false, false);
                            var site = J$.W(6570809, 'site', J$.F(6570801, J$.R(6570769, 'callSiteLocation', callSiteLocation, false, true), false)(J$.G(6570793, J$.R(6570777, 'stack', stack, false, false), J$.T(6570785, 1, 22, false))), site, false, false);
                            J$.P(6570841, J$.R(6570817, 'site', site, false, false), 'name', J$.G(6570833, J$.R(6570825, 'fn', fn, false, false), 'name'));
                            var deprecatedfn = J$.W(6570913, 'deprecatedfn', eval(J$.instrumentCode(J$.getConcrete(J$.B(658786, '+', J$.B(658778, '+', J$.B(658770, '+', J$.B(658762, '+', J$.B(658754, '+', J$.B(658746, '+', J$.T(6570849, '(function (', 21, false), J$.R(6570857, 'args', args, false, false)), J$.T(6570865, ') {\n', 21, false)), J$.T(6570873, '"use strict"\n', 21, false)), J$.T(6570881, 'log.call(deprecate, message, site)\n', 21, false)), J$.T(6570889, 'return fn.apply(this, arguments)\n', 21, false)), J$.T(6570897, '})', 21, false))), {
                                wrapProgram: false,
                                isEval: true
                            }, 6570905, J$.evalInvoked(J$.B(658794, '+', J$.B(658778, '+', J$.B(658770, '+', J$.B(658762, '+', J$.B(658754, '+', J$.B(658746, '+', J$.T(6570849, '(function (', 21, false), J$.R(6570857, 'args', args, false, false)), J$.T(6570865, ') {\n', 21, false)), J$.T(6570873, '"use strict"\n', 21, false)), J$.T(6570881, 'log.call(deprecate, message, site)\n', 21, false)), J$.T(6570889, 'return fn.apply(this, arguments)\n', 21, false)), J$.T(6570897, '})', 21, false)), 6570905)).code), deprecatedfn, false, false);
                            return J$.Rt(6570929, J$.R(6570921, 'deprecatedfn', deprecatedfn, false, false));
                        } catch (J$e) {
                            J$.Ex(6572993, J$e);
                        } finally {
                            if (J$.Fr(6573001))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapproperty(obj, prop, message) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(6571721, arguments.callee, this, arguments);
                            arguments = J$.N(6571729, 'arguments', arguments, true, false, false);
                            obj = J$.N(6571737, 'obj', obj, true, false, false);
                            prop = J$.N(6571745, 'prop', prop, true, false, false);
                            message = J$.N(6571753, 'message', message, true, false, false);
                            J$.N(6571761, 'descriptor', descriptor, false, false, false);
                            J$.N(6571769, 'deprecate', deprecate, false, false, false);
                            J$.N(6571777, 'stack', stack, false, false, false);
                            J$.N(6571785, 'site', site, false, false, false);
                            J$.N(6571793, 'get', get, false, false, false);
                            J$.N(6571801, 'set', set, false, false, false);
                            if (J$.C(345472, J$.C(345464, J$.U(658802, '!', J$.R(6571009, 'obj', obj, false, false))) ? J$._() : J$.C(345456, J$.B(658818, '!==', J$.U(658810, 'typeof', J$.R(6571017, 'obj', obj, false, false)), J$.T(6571025, 'object', 21, false))) ? J$.B(658834, '!==', J$.U(658826, 'typeof', J$.R(6571033, 'obj', obj, false, false)), J$.T(6571041, 'function', 21, false)) : J$._())) {
                                throw J$.F(6571065, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6571049, 'TypeError', undefined, true, true) : TypeError = J$.R(6571049, 'TypeError', TypeError, true, true)), true)(J$.T(6571057, 'argument obj must be object', 21, false));
                            }
                            var descriptor = J$.W(6571105, 'descriptor', J$.M(6571097, J$.I(typeof Object === 'undefined' ? Object = J$.R(6571073, 'Object', undefined, true, true) : Object = J$.R(6571073, 'Object', Object, true, true)), 'getOwnPropertyDescriptor', false)(J$.R(6571081, 'obj', obj, false, false), J$.R(6571089, 'prop', prop, false, false)), descriptor, false, false);
                            if (J$.C(345480, J$.U(658842, '!', J$.R(6571113, 'descriptor', descriptor, false, false)))) {
                                throw J$.F(6571137, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6571121, 'TypeError', undefined, true, true) : TypeError = J$.R(6571121, 'TypeError', TypeError, true, true)), true)(J$.T(6571129, 'must call property on owner object', 21, false));
                            }
                            if (J$.C(345488, J$.U(658850, '!', J$.G(6571153, J$.R(6571145, 'descriptor', descriptor, false, false), 'configurable')))) {
                                throw J$.F(6571177, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6571161, 'TypeError', undefined, true, true) : TypeError = J$.R(6571161, 'TypeError', TypeError, true, true)), true)(J$.T(6571169, 'property must be configurable', 21, false));
                            }
                            var deprecate = J$.W(6571193, 'deprecate', J$.R(6571185, 'this', this, false, false), deprecate, false, false);
                            var stack = J$.W(6571217, 'stack', J$.F(6571209, J$.R(6571201, 'getStack', getStack, false, true), false)(), stack, false, false);
                            var site = J$.W(6571265, 'site', J$.F(6571257, J$.R(6571225, 'callSiteLocation', callSiteLocation, false, true), false)(J$.G(6571249, J$.R(6571233, 'stack', stack, false, false), J$.T(6571241, 1, 22, false))), site, false, false);
                            J$.P(6571289, J$.R(6571273, 'site', site, false, false), 'name', J$.R(6571281, 'prop', prop, false, false));
                            if (J$.C(345496, J$.B(658858, 'in', J$.T(6571297, 'value', 21, false), J$.R(6571305, 'descriptor', descriptor, false, false)))) {
                                descriptor = J$.W(6571353, 'descriptor', J$.F(6571345, J$.R(6571313, 'convertDataDescriptorToAccessor', convertDataDescriptorToAccessor, false, true), false)(J$.R(6571321, 'obj', obj, false, false), J$.R(6571329, 'prop', prop, false, false), J$.R(6571337, 'message', message, false, false)), descriptor, false, false);
                            }
                            var get = J$.W(6571377, 'get', J$.G(6571369, J$.R(6571361, 'descriptor', descriptor, false, false), 'get'), get, false, false);
                            var set = J$.W(6571401, 'set', J$.G(6571393, J$.R(6571385, 'descriptor', descriptor, false, false), 'set'), set, false, false);
                            if (J$.C(345504, J$.B(658874, '===', J$.U(658866, 'typeof', J$.R(6571409, 'get', get, false, false)), J$.T(6571417, 'function', 21, false)))) {
                                J$.P(6571537, J$.R(6571425, 'descriptor', descriptor, false, false), 'get', J$.T(6571529, function getter() {
                                    jalangiLabel19:
                                        while (true) {
                                            try {
                                                J$.Fe(6571513, arguments.callee, this, arguments);
                                                arguments = J$.N(6571521, 'arguments', arguments, true, false, false);
                                                J$.M(6571465, J$.R(6571433, 'log', log, false, true), 'call', false)(J$.R(6571441, 'deprecate', deprecate, false, false), J$.R(6571449, 'message', message, false, false), J$.R(6571457, 'site', site, false, false));
                                                return J$.Rt(6571505, J$.M(6571497, J$.R(6571473, 'get', get, false, false), 'apply', false)(J$.R(6571481, 'this', this, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6571489, 'arguments', undefined, true, true) : arguments = J$.R(6571489, 'arguments', arguments, true, true))));
                                            } catch (J$e) {
                                                J$.Ex(6573009, J$e);
                                            } finally {
                                                if (J$.Fr(6573017))
                                                    continue jalangiLabel19;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            if (J$.C(345512, J$.B(658890, '===', J$.U(658882, 'typeof', J$.R(6571545, 'set', set, false, false)), J$.T(6571553, 'function', 21, false)))) {
                                J$.P(6571673, J$.R(6571561, 'descriptor', descriptor, false, false), 'set', J$.T(6571665, function setter() {
                                    jalangiLabel20:
                                        while (true) {
                                            try {
                                                J$.Fe(6571649, arguments.callee, this, arguments);
                                                arguments = J$.N(6571657, 'arguments', arguments, true, false, false);
                                                J$.M(6571601, J$.R(6571569, 'log', log, false, true), 'call', false)(J$.R(6571577, 'deprecate', deprecate, false, false), J$.R(6571585, 'message', message, false, false), J$.R(6571593, 'site', site, false, false));
                                                return J$.Rt(6571641, J$.M(6571633, J$.R(6571609, 'set', set, false, false), 'apply', false)(J$.R(6571617, 'this', this, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6571625, 'arguments', undefined, true, true) : arguments = J$.R(6571625, 'arguments', arguments, true, true))));
                                            } catch (J$e) {
                                                J$.Ex(6573025, J$e);
                                            } finally {
                                                if (J$.Fr(6573033))
                                                    continue jalangiLabel20;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            J$.M(6571713, J$.I(typeof Object === 'undefined' ? Object = J$.R(6571681, 'Object', undefined, true, true) : Object = J$.R(6571681, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(6571689, 'obj', obj, false, false), J$.R(6571697, 'prop', prop, false, false), J$.R(6571705, 'descriptor', descriptor, false, false));
                        } catch (J$e) {
                            J$.Ex(6573041, J$e);
                        } finally {
                            if (J$.Fr(6573049))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DeprecationError(namespace, message, stack) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(6572321, arguments.callee, this, arguments);
                            arguments = J$.N(6572329, 'arguments', arguments, true, false, false);
                            namespace = J$.N(6572337, 'namespace', namespace, true, false, false);
                            message = J$.N(6572345, 'message', message, true, false, false);
                            stack = J$.N(6572353, 'stack', stack, true, false, false);
                            J$.N(6572361, 'error', error, false, false, false);
                            J$.N(6572369, 'stackString', stackString, false, false, false);
                            var error = J$.W(6571825, 'error', J$.F(6571817, J$.I(typeof Error === 'undefined' ? Error = J$.R(6571809, 'Error', undefined, true, true) : Error = J$.R(6571809, 'Error', Error, true, true)), true)(), error, false, false);
                            var stackString;
                            J$.M(6571873, J$.I(typeof Object === 'undefined' ? Object = J$.R(6571833, 'Object', undefined, true, true) : Object = J$.R(6571833, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(6571841, 'error', error, false, false), J$.T(6571849, 'constructor', 21, false), J$.T(6571865, { value: J$.R(6571857, 'DeprecationError', DeprecationError, false, true) }, 11, false));
                            J$.M(6571945, J$.I(typeof Object === 'undefined' ? Object = J$.R(6571881, 'Object', undefined, true, true) : Object = J$.R(6571881, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(6571889, 'error', error, false, false), J$.T(6571897, 'message', 21, false), J$.T(6571937, {
                                configurable: J$.T(6571905, true, 23, false),
                                enumerable: J$.T(6571913, false, 23, false),
                                value: J$.R(6571921, 'message', message, false, false),
                                writable: J$.T(6571929, true, 23, false)
                            }, 11, false));
                            J$.M(6572017, J$.I(typeof Object === 'undefined' ? Object = J$.R(6571953, 'Object', undefined, true, true) : Object = J$.R(6571953, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(6571961, 'error', error, false, false), J$.T(6571969, 'name', 21, false), J$.T(6572009, {
                                enumerable: J$.T(6571977, false, 23, false),
                                configurable: J$.T(6571985, true, 23, false),
                                value: J$.T(6571993, 'DeprecationError', 21, false),
                                writable: J$.T(6572001, true, 23, false)
                            }, 11, false));
                            J$.M(6572089, J$.I(typeof Object === 'undefined' ? Object = J$.R(6572025, 'Object', undefined, true, true) : Object = J$.R(6572025, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(6572033, 'error', error, false, false), J$.T(6572041, 'namespace', 21, false), J$.T(6572081, {
                                configurable: J$.T(6572049, true, 23, false),
                                enumerable: J$.T(6572057, false, 23, false),
                                value: J$.R(6572065, 'namespace', namespace, false, false),
                                writable: J$.T(6572073, true, 23, false)
                            }, 11, false));
                            J$.M(6572297, J$.I(typeof Object === 'undefined' ? Object = J$.R(6572097, 'Object', undefined, true, true) : Object = J$.R(6572097, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(6572105, 'error', error, false, false), J$.T(6572113, 'stack', 21, false), J$.T(6572289, {
                                configurable: J$.T(6572121, true, 23, false),
                                enumerable: J$.T(6572129, false, 23, false),
                                get: J$.T(6572233, function () {
                                    jalangiLabel22:
                                        while (true) {
                                            try {
                                                J$.Fe(6572217, arguments.callee, this, arguments);
                                                arguments = J$.N(6572225, 'arguments', arguments, true, false, false);
                                                if (J$.C(345520, J$.B(658898, '!==', J$.R(6572137, 'stackString', stackString, false, false), J$.T(6572145, undefined, 24, false)))) {
                                                    return J$.Rt(6572161, J$.R(6572153, 'stackString', stackString, false, false));
                                                }
                                                return J$.Rt(6572209, stackString = J$.W(6572201, 'stackString', J$.M(6572193, J$.R(6572169, 'createStackString', createStackString, false, true), 'call', false)(J$.R(6572177, 'this', this, false, false), J$.R(6572185, 'stack', stack, false, false)), stackString, false, false));
                                            } catch (J$e) {
                                                J$.Ex(6573057, J$e);
                                            } finally {
                                                if (J$.Fr(6573065))
                                                    continue jalangiLabel22;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                set: J$.T(6572281, function setter(val) {
                                    jalangiLabel23:
                                        while (true) {
                                            try {
                                                J$.Fe(6572257, arguments.callee, this, arguments);
                                                arguments = J$.N(6572265, 'arguments', arguments, true, false, false);
                                                val = J$.N(6572273, 'val', val, true, false, false);
                                                stackString = J$.W(6572249, 'stackString', J$.R(6572241, 'val', val, false, false), stackString, false, false);
                                            } catch (J$e) {
                                                J$.Ex(6573073, J$e);
                                            } finally {
                                                if (J$.Fr(6573081))
                                                    continue jalangiLabel23;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false));
                            return J$.Rt(6572313, J$.R(6572305, 'error', error, false, false));
                        } catch (J$e) {
                            J$.Ex(6573089, J$e);
                        } finally {
                            if (J$.Fr(6573097))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6572385, 'callSiteToString', callSiteToString, false, false, false);
            J$.N(6572393, 'eventListenerCount', eventListenerCount, false, false, false);
            J$.N(6572401, 'relative', relative, false, false, false);
            J$.N(6572409, 'basePath', basePath, false, false, false);
            containsNamespace = J$.N(6572425, 'containsNamespace', J$.T(6572417, containsNamespace, 12, false), true, false, false);
            convertDataDescriptorToAccessor = J$.N(6572441, 'convertDataDescriptorToAccessor', J$.T(6572433, convertDataDescriptorToAccessor, 12, false), true, false, false);
            createArgumentsString = J$.N(6572457, 'createArgumentsString', J$.T(6572449, createArgumentsString, 12, false), true, false, false);
            createStackString = J$.N(6572473, 'createStackString', J$.T(6572465, createStackString, 12, false), true, false, false);
            depd = J$.N(6572489, 'depd', J$.T(6572481, depd, 12, false), true, false, false);
            isignored = J$.N(6572505, 'isignored', J$.T(6572497, isignored, 12, false), true, false, false);
            istraced = J$.N(6572521, 'istraced', J$.T(6572513, istraced, 12, false), true, false, false);
            log = J$.N(6572537, 'log', J$.T(6572529, log, 12, false), true, false, false);
            callSiteLocation = J$.N(6572553, 'callSiteLocation', J$.T(6572545, callSiteLocation, 12, false), true, false, false);
            defaultMessage = J$.N(6572569, 'defaultMessage', J$.T(6572561, defaultMessage, 12, false), true, false, false);
            formatPlain = J$.N(6572585, 'formatPlain', J$.T(6572577, formatPlain, 12, false), true, false, false);
            formatColor = J$.N(6572601, 'formatColor', J$.T(6572593, formatColor, 12, false), true, false, false);
            formatLocation = J$.N(6572617, 'formatLocation', J$.T(6572609, formatLocation, 12, false), true, false, false);
            getStack = J$.N(6572633, 'getStack', J$.T(6572625, getStack, 12, false), true, false, false);
            prepareObjectStackTrace = J$.N(6572649, 'prepareObjectStackTrace', J$.T(6572641, prepareObjectStackTrace, 12, false), true, false, false);
            wrapfunction = J$.N(6572665, 'wrapfunction', J$.T(6572657, wrapfunction, 12, false), true, false, false);
            wrapproperty = J$.N(6572681, 'wrapproperty', J$.T(6572673, wrapproperty, 12, false), true, false, false);
            DeprecationError = J$.N(6572697, 'DeprecationError', J$.T(6572689, DeprecationError, 12, false), true, false, false);
            var callSiteToString = J$.W(6565505, 'callSiteToString', J$.G(6565497, J$.F(6565489, J$.I(typeof require === 'undefined' ? require = J$.R(6565473, 'require', undefined, true, true) : require = J$.R(6565473, 'require', require, true, true)), false)(J$.T(6565481, './lib/compat', 21, false)), 'callSiteToString'), callSiteToString, false, true);
            var eventListenerCount = J$.W(6565545, 'eventListenerCount', J$.G(6565537, J$.F(6565529, J$.I(typeof require === 'undefined' ? require = J$.R(6565513, 'require', undefined, true, true) : require = J$.R(6565513, 'require', require, true, true)), false)(J$.T(6565521, './lib/compat', 21, false)), 'eventListenerCount'), eventListenerCount, false, true);
            var relative = J$.W(6565585, 'relative', J$.G(6565577, J$.F(6565569, J$.I(typeof require === 'undefined' ? require = J$.R(6565553, 'require', undefined, true, true) : require = J$.R(6565553, 'require', require, true, true)), false)(J$.T(6565561, 'path', 21, false)), 'relative'), relative, false, true);
            J$.P(6565609, J$.I(typeof module === 'undefined' ? module = J$.R(6565593, 'module', undefined, true, true) : module = J$.R(6565593, 'module', module, true, true)), 'exports', J$.R(6565601, 'depd', depd, false, true));
            var basePath = J$.W(6565633, 'basePath', J$.M(6565625, J$.I(typeof process === 'undefined' ? process = J$.R(6565617, 'process', undefined, true, true) : process = J$.R(6565617, 'process', process, true, true)), 'cwd', false)(), basePath, false, true);
        } catch (J$e) {
            J$.Ex(6573105, J$e);
        } finally {
            if (J$.Sr(6573113))
                continue jalangiLabel25;
            else
                break jalangiLabel25;
        }
    }
// JALANGI DO NOT INSTRUMENT

