J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(6577041, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/depd/lib/compat/index.js');
            function lazyProperty(obj, prop, getter) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(6576937, arguments.callee, this, arguments);
                            function get() {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(6576849, arguments.callee, this, arguments);
                                            arguments = J$.N(6576857, 'arguments', arguments, true, false, false);
                                            J$.N(6576865, 'val', val, false, false, false);
                                            var val = J$.W(6576761, 'val', J$.F(6576753, J$.R(6576745, 'getter', getter, false, false), false)(), val, false, false);
                                            J$.M(6576825, J$.I(typeof Object === 'undefined' ? Object = J$.R(6576769, 'Object', undefined, true, true) : Object = J$.R(6576769, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(6576777, 'obj', obj, false, false), J$.R(6576785, 'prop', prop, false, false), J$.T(6576817, {
                                                configurable: J$.T(6576793, true, 23, false),
                                                enumerable: J$.T(6576801, true, 23, false),
                                                value: J$.R(6576809, 'val', val, false, false)
                                            }, 11, false));
                                            return J$.Rt(6576841, J$.R(6576833, 'val', val, false, false));
                                        } catch (J$e) {
                                            J$.Ex(6577161, J$e);
                                        } finally {
                                            if (J$.Fr(6577169))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(6576945, 'arguments', arguments, true, false, false);
                            obj = J$.N(6576953, 'obj', obj, true, false, false);
                            prop = J$.N(6576961, 'prop', prop, true, false, false);
                            getter = J$.N(6576969, 'getter', getter, true, false, false);
                            get = J$.N(6576985, 'get', J$.T(6576977, get, 12, false), true, false, false);
                            J$.M(6576929, J$.I(typeof Object === 'undefined' ? Object = J$.R(6576873, 'Object', undefined, true, true) : Object = J$.R(6576873, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(6576881, 'obj', obj, false, false), J$.R(6576889, 'prop', prop, false, false), J$.T(6576921, {
                                configurable: J$.T(6576897, true, 23, false),
                                enumerable: J$.T(6576905, true, 23, false),
                                get: J$.R(6576913, 'get', get, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(6577177, J$e);
                        } finally {
                            if (J$.Fr(6577185))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toString(obj) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(6577017, arguments.callee, this, arguments);
                            arguments = J$.N(6577025, 'arguments', arguments, true, false, false);
                            obj = J$.N(6577033, 'obj', obj, true, false, false);
                            return J$.Rt(6577009, J$.M(6577001, J$.R(6576993, 'obj', obj, false, false), 'toString', false)());
                        } catch (J$e) {
                            J$.Ex(6577193, J$e);
                        } finally {
                            if (J$.Fr(6577201))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6577049, 'Buffer', Buffer, false, false, false);
            J$.N(6577057, 'EventEmitter', EventEmitter, false, false, false);
            lazyProperty = J$.N(6577073, 'lazyProperty', J$.T(6577065, lazyProperty, 12, false), true, false, false);
            toString = J$.N(6577089, 'toString', J$.T(6577081, toString, 12, false), true, false, false);
            J$.T(6575993, 'use strict', 21, false);
            var Buffer = J$.W(6576025, 'Buffer', J$.F(6576017, J$.I(typeof require === 'undefined' ? require = J$.R(6576001, 'require', undefined, true, true) : require = J$.R(6576001, 'require', require, true, true)), false)(J$.T(6576009, 'buffer', 21, false)), Buffer, false, true);
            var EventEmitter = J$.W(6576065, 'EventEmitter', J$.G(6576057, J$.F(6576049, J$.I(typeof require === 'undefined' ? require = J$.R(6576033, 'require', undefined, true, true) : require = J$.R(6576033, 'require', require, true, true)), false)(J$.T(6576041, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            J$.F(6576177, J$.R(6576073, 'lazyProperty', lazyProperty, false, true), false)(J$.G(6576089, J$.I(typeof module === 'undefined' ? module = J$.R(6576081, 'module', undefined, true, true) : module = J$.R(6576081, 'module', module, true, true)), 'exports'), J$.T(6576097, 'bufferConcat', 21, false), J$.T(6576169, function bufferConcat() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6576153, arguments.callee, this, arguments);
                            arguments = J$.N(6576161, 'arguments', arguments, true, false, false);
                            return J$.Rt(6576145, J$.C(345768, J$.G(6576113, J$.R(6576105, 'Buffer', Buffer, false, true), 'concat')) ? J$._() : J$.F(6576137, J$.I(typeof require === 'undefined' ? require = J$.R(6576121, 'require', undefined, true, true) : require = J$.R(6576121, 'require', require, true, true)), false)(J$.T(6576129, './buffer-concat', 21, false)));
                        } catch (J$e) {
                            J$.Ex(6577097, J$e);
                        } finally {
                            if (J$.Fr(6577105))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(6576625, J$.R(6576185, 'lazyProperty', lazyProperty, false, true), false)(J$.G(6576201, J$.I(typeof module === 'undefined' ? module = J$.R(6576193, 'module', undefined, true, true) : module = J$.R(6576193, 'module', module, true, true)), 'exports'), J$.T(6576209, 'callSiteToString', 21, false), J$.T(6576617, function callSiteToString() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(6576553, arguments.callee, this, arguments);
                            function prepareObjectStackTrace(obj, stack) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(6576297, arguments.callee, this, arguments);
                                            arguments = J$.N(6576305, 'arguments', arguments, true, false, false);
                                            obj = J$.N(6576313, 'obj', obj, true, false, false);
                                            stack = J$.N(6576321, 'stack', stack, true, false, false);
                                            return J$.Rt(6576289, J$.R(6576281, 'stack', stack, false, false));
                                        } catch (J$e) {
                                            J$.Ex(6577113, J$e);
                                        } finally {
                                            if (J$.Fr(6577121))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(6576561, 'arguments', arguments, true, false, false);
                            J$.N(6576569, 'limit', limit, false, false, false);
                            J$.N(6576577, 'obj', obj, false, false, false);
                            J$.N(6576585, 'prep', prep, false, false, false);
                            prepareObjectStackTrace = J$.N(6576601, 'prepareObjectStackTrace', J$.T(6576593, prepareObjectStackTrace, 12, false), true, false, false);
                            J$.N(6576609, 'stack', stack, false, false, false);
                            var limit = J$.W(6576233, 'limit', J$.G(6576225, J$.I(typeof Error === 'undefined' ? Error = J$.R(6576217, 'Error', undefined, true, true) : Error = J$.R(6576217, 'Error', Error, true, true)), 'stackTraceLimit'), limit, false, false);
                            var obj = J$.W(6576249, 'obj', J$.T(6576241, {}, 11, false), obj, false, false);
                            var prep = J$.W(6576273, 'prep', J$.G(6576265, J$.I(typeof Error === 'undefined' ? Error = J$.R(6576257, 'Error', undefined, true, true) : Error = J$.R(6576257, 'Error', Error, true, true)), 'prepareStackTrace'), prep, false, false);
                            J$.P(6576345, J$.I(typeof Error === 'undefined' ? Error = J$.R(6576329, 'Error', undefined, true, true) : Error = J$.R(6576329, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(6576337, 'prepareObjectStackTrace', prepareObjectStackTrace, false, false));
                            J$.P(6576369, J$.I(typeof Error === 'undefined' ? Error = J$.R(6576353, 'Error', undefined, true, true) : Error = J$.R(6576353, 'Error', Error, true, true)), 'stackTraceLimit', J$.T(6576361, 2, 22, false));
                            J$.M(6576393, J$.I(typeof Error === 'undefined' ? Error = J$.R(6576377, 'Error', undefined, true, true) : Error = J$.R(6576377, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(6576385, 'obj', obj, false, false));
                            var stack = J$.W(6576425, 'stack', J$.M(6576417, J$.G(6576409, J$.R(6576401, 'obj', obj, false, false), 'stack'), 'slice', false)(), stack, false, false);
                            J$.P(6576449, J$.I(typeof Error === 'undefined' ? Error = J$.R(6576433, 'Error', undefined, true, true) : Error = J$.R(6576433, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(6576441, 'prep', prep, false, false));
                            J$.P(6576473, J$.I(typeof Error === 'undefined' ? Error = J$.R(6576457, 'Error', undefined, true, true) : Error = J$.R(6576457, 'Error', Error, true, true)), 'stackTraceLimit', J$.R(6576465, 'limit', limit, false, false));
                            return J$.Rt(6576545, J$.C(345776, J$.G(6576505, J$.G(6576497, J$.R(6576481, 'stack', stack, false, false), J$.T(6576489, 0, 22, false)), 'toString')) ? J$.R(6576513, 'toString', toString, false, true) : J$.F(6576537, J$.I(typeof require === 'undefined' ? require = J$.R(6576521, 'require', undefined, true, true) : require = J$.R(6576521, 'require', require, true, true)), false)(J$.T(6576529, './callsite-tostring', 21, false)));
                        } catch (J$e) {
                            J$.Ex(6577129, J$e);
                        } finally {
                            if (J$.Fr(6577137))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(6576737, J$.R(6576633, 'lazyProperty', lazyProperty, false, true), false)(J$.G(6576649, J$.I(typeof module === 'undefined' ? module = J$.R(6576641, 'module', undefined, true, true) : module = J$.R(6576641, 'module', module, true, true)), 'exports'), J$.T(6576657, 'eventListenerCount', 21, false), J$.T(6576729, function eventListenerCount() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(6576713, arguments.callee, this, arguments);
                            arguments = J$.N(6576721, 'arguments', arguments, true, false, false);
                            return J$.Rt(6576705, J$.C(345784, J$.G(6576673, J$.R(6576665, 'EventEmitter', EventEmitter, false, true), 'listenerCount')) ? J$._() : J$.F(6576697, J$.I(typeof require === 'undefined' ? require = J$.R(6576681, 'require', undefined, true, true) : require = J$.R(6576681, 'require', require, true, true)), false)(J$.T(6576689, './event-listener-count', 21, false)));
                        } catch (J$e) {
                            J$.Ex(6577145, J$e);
                        } finally {
                            if (J$.Fr(6577153))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(6577209, J$e);
        } finally {
            if (J$.Sr(6577217))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

