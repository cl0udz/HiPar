J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(2866329, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/depd/lib/compat/index.js');
            function lazyProperty(obj, prop, getter) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2866225, arguments.callee, this, arguments);
                            function get() {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(2866137, arguments.callee, this, arguments);
                                            arguments = J$.N(2866145, 'arguments', arguments, true, false, false);
                                            J$.N(2866153, 'val', val, false, false, false);
                                            var val = J$.W(2866049, 'val', J$.F(2866041, J$.R(2866033, 'getter', getter, false, false), false)(), val, false, false);
                                            J$.M(2866113, J$.I(typeof Object === 'undefined' ? Object = J$.R(2866057, 'Object', undefined, true, true) : Object = J$.R(2866057, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(2866065, 'obj', obj, false, false), J$.R(2866073, 'prop', prop, false, false), J$.T(2866105, {
                                                configurable: J$.T(2866081, true, 23, false),
                                                enumerable: J$.T(2866089, true, 23, false),
                                                value: J$.R(2866097, 'val', val, false, false)
                                            }, 11, false));
                                            return J$.Rt(2866129, J$.R(2866121, 'val', val, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2866449, J$e);
                                        } finally {
                                            if (J$.Fr(2866457))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2866233, 'arguments', arguments, true, false, false);
                            obj = J$.N(2866241, 'obj', obj, true, false, false);
                            prop = J$.N(2866249, 'prop', prop, true, false, false);
                            getter = J$.N(2866257, 'getter', getter, true, false, false);
                            get = J$.N(2866273, 'get', J$.T(2866265, get, 12, false), true, false, false);
                            J$.M(2866217, J$.I(typeof Object === 'undefined' ? Object = J$.R(2866161, 'Object', undefined, true, true) : Object = J$.R(2866161, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(2866169, 'obj', obj, false, false), J$.R(2866177, 'prop', prop, false, false), J$.T(2866209, {
                                configurable: J$.T(2866185, true, 23, false),
                                enumerable: J$.T(2866193, true, 23, false),
                                get: J$.R(2866201, 'get', get, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(2866465, J$e);
                        } finally {
                            if (J$.Fr(2866473))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toString(obj) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(2866305, arguments.callee, this, arguments);
                            arguments = J$.N(2866313, 'arguments', arguments, true, false, false);
                            obj = J$.N(2866321, 'obj', obj, true, false, false);
                            return J$.Rt(2866297, J$.M(2866289, J$.R(2866281, 'obj', obj, false, false), 'toString', false)());
                        } catch (J$e) {
                            J$.Ex(2866481, J$e);
                        } finally {
                            if (J$.Fr(2866489))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2866337, 'Buffer', Buffer, false, false, false);
            J$.N(2866345, 'EventEmitter', EventEmitter, false, false, false);
            lazyProperty = J$.N(2866361, 'lazyProperty', J$.T(2866353, lazyProperty, 12, false), true, false, false);
            toString = J$.N(2866377, 'toString', J$.T(2866369, toString, 12, false), true, false, false);
            J$.T(2865281, 'use strict', 21, false);
            var Buffer = J$.W(2865313, 'Buffer', J$.F(2865305, J$.I(typeof require === 'undefined' ? require = J$.R(2865289, 'require', undefined, true, true) : require = J$.R(2865289, 'require', require, true, true)), false)(J$.T(2865297, 'buffer', 21, false)), Buffer, false, true);
            var EventEmitter = J$.W(2865353, 'EventEmitter', J$.G(2865345, J$.F(2865337, J$.I(typeof require === 'undefined' ? require = J$.R(2865321, 'require', undefined, true, true) : require = J$.R(2865321, 'require', require, true, true)), false)(J$.T(2865329, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            J$.F(2865465, J$.R(2865361, 'lazyProperty', lazyProperty, false, true), false)(J$.G(2865377, J$.I(typeof module === 'undefined' ? module = J$.R(2865369, 'module', undefined, true, true) : module = J$.R(2865369, 'module', module, true, true)), 'exports'), J$.T(2865385, 'bufferConcat', 21, false), J$.T(2865457, function bufferConcat() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2865441, arguments.callee, this, arguments);
                            arguments = J$.N(2865449, 'arguments', arguments, true, false, false);
                            return J$.Rt(2865433, J$.C(152368, J$.G(2865401, J$.R(2865393, 'Buffer', Buffer, false, true), 'concat')) ? J$._() : J$.F(2865425, J$.I(typeof require === 'undefined' ? require = J$.R(2865409, 'require', undefined, true, true) : require = J$.R(2865409, 'require', require, true, true)), false)(J$.T(2865417, './buffer-concat', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2866385, J$e);
                        } finally {
                            if (J$.Fr(2866393))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2865913, J$.R(2865473, 'lazyProperty', lazyProperty, false, true), false)(J$.G(2865489, J$.I(typeof module === 'undefined' ? module = J$.R(2865481, 'module', undefined, true, true) : module = J$.R(2865481, 'module', module, true, true)), 'exports'), J$.T(2865497, 'callSiteToString', 21, false), J$.T(2865905, function callSiteToString() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2865841, arguments.callee, this, arguments);
                            function prepareObjectStackTrace(obj, stack) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(2865585, arguments.callee, this, arguments);
                                            arguments = J$.N(2865593, 'arguments', arguments, true, false, false);
                                            obj = J$.N(2865601, 'obj', obj, true, false, false);
                                            stack = J$.N(2865609, 'stack', stack, true, false, false);
                                            return J$.Rt(2865577, J$.R(2865569, 'stack', stack, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2866401, J$e);
                                        } finally {
                                            if (J$.Fr(2866409))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2865849, 'arguments', arguments, true, false, false);
                            J$.N(2865857, 'limit', limit, false, false, false);
                            J$.N(2865865, 'obj', obj, false, false, false);
                            J$.N(2865873, 'prep', prep, false, false, false);
                            prepareObjectStackTrace = J$.N(2865889, 'prepareObjectStackTrace', J$.T(2865881, prepareObjectStackTrace, 12, false), true, false, false);
                            J$.N(2865897, 'stack', stack, false, false, false);
                            var limit = J$.W(2865521, 'limit', J$.G(2865513, J$.I(typeof Error === 'undefined' ? Error = J$.R(2865505, 'Error', undefined, true, true) : Error = J$.R(2865505, 'Error', Error, true, true)), 'stackTraceLimit'), limit, false, false);
                            var obj = J$.W(2865537, 'obj', J$.T(2865529, {}, 11, false), obj, false, false);
                            var prep = J$.W(2865561, 'prep', J$.G(2865553, J$.I(typeof Error === 'undefined' ? Error = J$.R(2865545, 'Error', undefined, true, true) : Error = J$.R(2865545, 'Error', Error, true, true)), 'prepareStackTrace'), prep, false, false);
                            J$.P(2865633, J$.I(typeof Error === 'undefined' ? Error = J$.R(2865617, 'Error', undefined, true, true) : Error = J$.R(2865617, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(2865625, 'prepareObjectStackTrace', prepareObjectStackTrace, false, false));
                            J$.P(2865657, J$.I(typeof Error === 'undefined' ? Error = J$.R(2865641, 'Error', undefined, true, true) : Error = J$.R(2865641, 'Error', Error, true, true)), 'stackTraceLimit', J$.T(2865649, 2, 22, false));
                            J$.M(2865681, J$.I(typeof Error === 'undefined' ? Error = J$.R(2865665, 'Error', undefined, true, true) : Error = J$.R(2865665, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(2865673, 'obj', obj, false, false));
                            var stack = J$.W(2865713, 'stack', J$.M(2865705, J$.G(2865697, J$.R(2865689, 'obj', obj, false, false), 'stack'), 'slice', false)(), stack, false, false);
                            J$.P(2865737, J$.I(typeof Error === 'undefined' ? Error = J$.R(2865721, 'Error', undefined, true, true) : Error = J$.R(2865721, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(2865729, 'prep', prep, false, false));
                            J$.P(2865761, J$.I(typeof Error === 'undefined' ? Error = J$.R(2865745, 'Error', undefined, true, true) : Error = J$.R(2865745, 'Error', Error, true, true)), 'stackTraceLimit', J$.R(2865753, 'limit', limit, false, false));
                            return J$.Rt(2865833, J$.C(152376, J$.G(2865793, J$.G(2865785, J$.R(2865769, 'stack', stack, false, false), J$.T(2865777, 0, 22, false)), 'toString')) ? J$.R(2865801, 'toString', toString, false, true) : J$.F(2865825, J$.I(typeof require === 'undefined' ? require = J$.R(2865809, 'require', undefined, true, true) : require = J$.R(2865809, 'require', require, true, true)), false)(J$.T(2865817, './callsite-tostring', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2866417, J$e);
                        } finally {
                            if (J$.Fr(2866425))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(2866025, J$.R(2865921, 'lazyProperty', lazyProperty, false, true), false)(J$.G(2865937, J$.I(typeof module === 'undefined' ? module = J$.R(2865929, 'module', undefined, true, true) : module = J$.R(2865929, 'module', module, true, true)), 'exports'), J$.T(2865945, 'eventListenerCount', 21, false), J$.T(2866017, function eventListenerCount() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2866001, arguments.callee, this, arguments);
                            arguments = J$.N(2866009, 'arguments', arguments, true, false, false);
                            return J$.Rt(2865993, J$.C(152384, J$.G(2865961, J$.R(2865953, 'EventEmitter', EventEmitter, false, true), 'listenerCount')) ? J$._() : J$.F(2865985, J$.I(typeof require === 'undefined' ? require = J$.R(2865969, 'require', undefined, true, true) : require = J$.R(2865969, 'require', require, true, true)), false)(J$.T(2865977, './event-listener-count', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2866433, J$e);
                        } finally {
                            if (J$.Fr(2866441))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2866497, J$e);
        } finally {
            if (J$.Sr(2866505))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

