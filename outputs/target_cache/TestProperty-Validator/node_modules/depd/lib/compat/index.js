J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(1935961, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/depd/lib/compat/index.js');
            function lazyProperty(obj, prop, getter) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1935857, arguments.callee, this, arguments);
                            function get() {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(1935769, arguments.callee, this, arguments);
                                            arguments = J$.N(1935777, 'arguments', arguments, true, false, false);
                                            J$.N(1935785, 'val', val, false, false, false);
                                            var val = J$.W(1935681, 'val', J$.F(1935673, J$.R(1935665, 'getter', getter, false, false), false)(), val, false, false);
                                            J$.M(1935745, J$.I(typeof Object === 'undefined' ? Object = J$.R(1935689, 'Object', undefined, true, true) : Object = J$.R(1935689, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(1935697, 'obj', obj, false, false), J$.R(1935705, 'prop', prop, false, false), J$.T(1935737, {
                                                configurable: J$.T(1935713, true, 23, false),
                                                enumerable: J$.T(1935721, true, 23, false),
                                                value: J$.R(1935729, 'val', val, false, false)
                                            }, 11, false));
                                            return J$.Rt(1935761, J$.R(1935753, 'val', val, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1936081, J$e);
                                        } finally {
                                            if (J$.Fr(1936089))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1935865, 'arguments', arguments, true, false, false);
                            obj = J$.N(1935873, 'obj', obj, true, false, false);
                            prop = J$.N(1935881, 'prop', prop, true, false, false);
                            getter = J$.N(1935889, 'getter', getter, true, false, false);
                            get = J$.N(1935905, 'get', J$.T(1935897, get, 12, false), true, false, false);
                            J$.M(1935849, J$.I(typeof Object === 'undefined' ? Object = J$.R(1935793, 'Object', undefined, true, true) : Object = J$.R(1935793, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(1935801, 'obj', obj, false, false), J$.R(1935809, 'prop', prop, false, false), J$.T(1935841, {
                                configurable: J$.T(1935817, true, 23, false),
                                enumerable: J$.T(1935825, true, 23, false),
                                get: J$.R(1935833, 'get', get, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1936097, J$e);
                        } finally {
                            if (J$.Fr(1936105))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toString(obj) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1935937, arguments.callee, this, arguments);
                            arguments = J$.N(1935945, 'arguments', arguments, true, false, false);
                            obj = J$.N(1935953, 'obj', obj, true, false, false);
                            return J$.Rt(1935929, J$.M(1935921, J$.R(1935913, 'obj', obj, false, false), 'toString', false)());
                        } catch (J$e) {
                            J$.Ex(1936113, J$e);
                        } finally {
                            if (J$.Fr(1936121))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1935969, 'Buffer', Buffer, false, false, false);
            J$.N(1935977, 'EventEmitter', EventEmitter, false, false, false);
            lazyProperty = J$.N(1935993, 'lazyProperty', J$.T(1935985, lazyProperty, 12, false), true, false, false);
            toString = J$.N(1936009, 'toString', J$.T(1936001, toString, 12, false), true, false, false);
            J$.T(1934913, 'use strict', 21, false);
            var Buffer = J$.W(1934945, 'Buffer', J$.F(1934937, J$.I(typeof require === 'undefined' ? require = J$.R(1934921, 'require', undefined, true, true) : require = J$.R(1934921, 'require', require, true, true)), false)(J$.T(1934929, 'buffer', 21, false)), Buffer, false, true);
            var EventEmitter = J$.W(1934985, 'EventEmitter', J$.G(1934977, J$.F(1934969, J$.I(typeof require === 'undefined' ? require = J$.R(1934953, 'require', undefined, true, true) : require = J$.R(1934953, 'require', require, true, true)), false)(J$.T(1934961, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            J$.F(1935097, J$.R(1934993, 'lazyProperty', lazyProperty, false, true), false)(J$.G(1935009, J$.I(typeof module === 'undefined' ? module = J$.R(1935001, 'module', undefined, true, true) : module = J$.R(1935001, 'module', module, true, true)), 'exports'), J$.T(1935017, 'bufferConcat', 21, false), J$.T(1935089, function bufferConcat() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1935073, arguments.callee, this, arguments);
                            arguments = J$.N(1935081, 'arguments', arguments, true, false, false);
                            return J$.Rt(1935065, J$.C(95248, J$.G(1935033, J$.R(1935025, 'Buffer', Buffer, false, true), 'concat')) ? J$._() : J$.F(1935057, J$.I(typeof require === 'undefined' ? require = J$.R(1935041, 'require', undefined, true, true) : require = J$.R(1935041, 'require', require, true, true)), false)(J$.T(1935049, './buffer-concat', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1936017, J$e);
                        } finally {
                            if (J$.Fr(1936025))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(1935545, J$.R(1935105, 'lazyProperty', lazyProperty, false, true), false)(J$.G(1935121, J$.I(typeof module === 'undefined' ? module = J$.R(1935113, 'module', undefined, true, true) : module = J$.R(1935113, 'module', module, true, true)), 'exports'), J$.T(1935129, 'callSiteToString', 21, false), J$.T(1935537, function callSiteToString() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1935473, arguments.callee, this, arguments);
                            function prepareObjectStackTrace(obj, stack) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(1935217, arguments.callee, this, arguments);
                                            arguments = J$.N(1935225, 'arguments', arguments, true, false, false);
                                            obj = J$.N(1935233, 'obj', obj, true, false, false);
                                            stack = J$.N(1935241, 'stack', stack, true, false, false);
                                            return J$.Rt(1935209, J$.R(1935201, 'stack', stack, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1936033, J$e);
                                        } finally {
                                            if (J$.Fr(1936041))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1935481, 'arguments', arguments, true, false, false);
                            J$.N(1935489, 'limit', limit, false, false, false);
                            J$.N(1935497, 'obj', obj, false, false, false);
                            J$.N(1935505, 'prep', prep, false, false, false);
                            prepareObjectStackTrace = J$.N(1935521, 'prepareObjectStackTrace', J$.T(1935513, prepareObjectStackTrace, 12, false), true, false, false);
                            J$.N(1935529, 'stack', stack, false, false, false);
                            var limit = J$.W(1935153, 'limit', J$.G(1935145, J$.I(typeof Error === 'undefined' ? Error = J$.R(1935137, 'Error', undefined, true, true) : Error = J$.R(1935137, 'Error', Error, true, true)), 'stackTraceLimit'), limit, false, false);
                            var obj = J$.W(1935169, 'obj', J$.T(1935161, {}, 11, false), obj, false, false);
                            var prep = J$.W(1935193, 'prep', J$.G(1935185, J$.I(typeof Error === 'undefined' ? Error = J$.R(1935177, 'Error', undefined, true, true) : Error = J$.R(1935177, 'Error', Error, true, true)), 'prepareStackTrace'), prep, false, false);
                            J$.P(1935265, J$.I(typeof Error === 'undefined' ? Error = J$.R(1935249, 'Error', undefined, true, true) : Error = J$.R(1935249, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(1935257, 'prepareObjectStackTrace', prepareObjectStackTrace, false, false));
                            J$.P(1935289, J$.I(typeof Error === 'undefined' ? Error = J$.R(1935273, 'Error', undefined, true, true) : Error = J$.R(1935273, 'Error', Error, true, true)), 'stackTraceLimit', J$.T(1935281, 2, 22, false));
                            J$.M(1935313, J$.I(typeof Error === 'undefined' ? Error = J$.R(1935297, 'Error', undefined, true, true) : Error = J$.R(1935297, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(1935305, 'obj', obj, false, false));
                            var stack = J$.W(1935345, 'stack', J$.M(1935337, J$.G(1935329, J$.R(1935321, 'obj', obj, false, false), 'stack'), 'slice', false)(), stack, false, false);
                            J$.P(1935369, J$.I(typeof Error === 'undefined' ? Error = J$.R(1935353, 'Error', undefined, true, true) : Error = J$.R(1935353, 'Error', Error, true, true)), 'prepareStackTrace', J$.R(1935361, 'prep', prep, false, false));
                            J$.P(1935393, J$.I(typeof Error === 'undefined' ? Error = J$.R(1935377, 'Error', undefined, true, true) : Error = J$.R(1935377, 'Error', Error, true, true)), 'stackTraceLimit', J$.R(1935385, 'limit', limit, false, false));
                            return J$.Rt(1935465, J$.C(95256, J$.G(1935425, J$.G(1935417, J$.R(1935401, 'stack', stack, false, false), J$.T(1935409, 0, 22, false)), 'toString')) ? J$.R(1935433, 'toString', toString, false, true) : J$.F(1935457, J$.I(typeof require === 'undefined' ? require = J$.R(1935441, 'require', undefined, true, true) : require = J$.R(1935441, 'require', require, true, true)), false)(J$.T(1935449, './callsite-tostring', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1936049, J$e);
                        } finally {
                            if (J$.Fr(1936057))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(1935657, J$.R(1935553, 'lazyProperty', lazyProperty, false, true), false)(J$.G(1935569, J$.I(typeof module === 'undefined' ? module = J$.R(1935561, 'module', undefined, true, true) : module = J$.R(1935561, 'module', module, true, true)), 'exports'), J$.T(1935577, 'eventListenerCount', 21, false), J$.T(1935649, function eventListenerCount() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1935633, arguments.callee, this, arguments);
                            arguments = J$.N(1935641, 'arguments', arguments, true, false, false);
                            return J$.Rt(1935625, J$.C(95264, J$.G(1935593, J$.R(1935585, 'EventEmitter', EventEmitter, false, true), 'listenerCount')) ? J$._() : J$.F(1935617, J$.I(typeof require === 'undefined' ? require = J$.R(1935601, 'require', undefined, true, true) : require = J$.R(1935601, 'require', require, true, true)), false)(J$.T(1935609, './event-listener-count', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1936065, J$e);
                        } finally {
                            if (J$.Fr(1936073))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1936129, J$e);
        } finally {
            if (J$.Sr(1936137))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

