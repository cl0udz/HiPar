J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2865225, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/depd/lib/compat/event-listener-count.js');
            function eventListenerCount(emitter, type) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2865193, arguments.callee, this, arguments);
                            arguments = J$.N(2865201, 'arguments', arguments, true, false, false);
                            emitter = J$.N(2865209, 'emitter', emitter, true, false, false);
                            type = J$.N(2865217, 'type', type, true, false, false);
                            return J$.Rt(2865185, J$.G(2865177, J$.M(2865169, J$.R(2865153, 'emitter', emitter, false, false), 'listeners', false)(J$.R(2865161, 'type', type, false, false)), 'length'));
                        } catch (J$e) {
                            J$.Ex(2865249, J$e);
                        } finally {
                            if (J$.Fr(2865257))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            eventListenerCount = J$.N(2865241, 'eventListenerCount', J$.T(2865233, eventListenerCount, 12, false), true, false, false);
            J$.T(2865121, 'use strict', 21, false);
            J$.P(2865145, J$.I(typeof module === 'undefined' ? module = J$.R(2865129, 'module', undefined, true, true) : module = J$.R(2865129, 'module', module, true, true)), 'exports', J$.R(2865137, 'eventListenerCount', eventListenerCount, false, true));
        } catch (J$e) {
            J$.Ex(2865265, J$e);
        } finally {
            if (J$.Sr(2865273))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

