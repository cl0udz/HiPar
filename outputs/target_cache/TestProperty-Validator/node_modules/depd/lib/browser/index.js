J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(2863057, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/depd/lib/browser/index.js');
            function depd(namespace) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2862697, arguments.callee, this, arguments);
                            function deprecate(message) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2862473, arguments.callee, this, arguments);
                                            arguments = J$.N(2862481, 'arguments', arguments, true, false, false);
                                            message = J$.N(2862489, 'message', message, true, false, false);
                                        } catch (J$e) {
                                            J$.Ex(2863113, J$e);
                                        } finally {
                                            if (J$.Fr(2863121))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2862705, 'arguments', arguments, true, false, false);
                            namespace = J$.N(2862713, 'namespace', namespace, true, false, false);
                            deprecate = J$.N(2862729, 'deprecate', J$.T(2862721, deprecate, 12, false), true, false, false);
                            if (J$.C(152128, J$.U(316146, '!', J$.R(2862441, 'namespace', namespace, false, false)))) {
                                throw J$.F(2862465, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2862449, 'TypeError', undefined, true, true) : TypeError = J$.R(2862449, 'TypeError', TypeError, true, true)), true)(J$.T(2862457, 'argument namespace is required', 21, false));
                            }
                            J$.P(2862513, J$.R(2862497, 'deprecate', deprecate, false, false), '_file', J$.T(2862505, undefined, 24, false));
                            J$.P(2862537, J$.R(2862521, 'deprecate', deprecate, false, false), '_ignored', J$.T(2862529, true, 23, false));
                            J$.P(2862561, J$.R(2862545, 'deprecate', deprecate, false, false), '_namespace', J$.R(2862553, 'namespace', namespace, false, false));
                            J$.P(2862585, J$.R(2862569, 'deprecate', deprecate, false, false), '_traced', J$.T(2862577, false, 23, false));
                            J$.P(2862625, J$.R(2862593, 'deprecate', deprecate, false, false), '_warned', J$.M(2862617, J$.I(typeof Object === 'undefined' ? Object = J$.R(2862601, 'Object', undefined, true, true) : Object = J$.R(2862601, 'Object', Object, true, true)), 'create', false)(J$.T(2862609, null, 25, false)));
                            J$.P(2862649, J$.R(2862633, 'deprecate', deprecate, false, false), 'function', J$.R(2862641, 'wrapfunction', wrapfunction, false, true));
                            J$.P(2862673, J$.R(2862657, 'deprecate', deprecate, false, false), 'property', J$.R(2862665, 'wrapproperty', wrapproperty, false, true));
                            return J$.Rt(2862689, J$.R(2862681, 'deprecate', deprecate, false, false));
                        } catch (J$e) {
                            J$.Ex(2863129, J$e);
                        } finally {
                            if (J$.Fr(2863137))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapfunction(fn, message) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2862793, arguments.callee, this, arguments);
                            arguments = J$.N(2862801, 'arguments', arguments, true, false, false);
                            fn = J$.N(2862809, 'fn', fn, true, false, false);
                            message = J$.N(2862817, 'message', message, true, false, false);
                            if (J$.C(152136, J$.B(316162, '!==', J$.U(316154, 'typeof', J$.R(2862737, 'fn', fn, false, false)), J$.T(2862745, 'function', 21, false)))) {
                                throw J$.F(2862769, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2862753, 'TypeError', undefined, true, true) : TypeError = J$.R(2862753, 'TypeError', TypeError, true, true)), true)(J$.T(2862761, 'argument fn must be a function', 21, false));
                            }
                            return J$.Rt(2862785, J$.R(2862777, 'fn', fn, false, false));
                        } catch (J$e) {
                            J$.Ex(2863145, J$e);
                        } finally {
                            if (J$.Fr(2863153))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapproperty(obj, prop, message) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2863009, arguments.callee, this, arguments);
                            arguments = J$.N(2863017, 'arguments', arguments, true, false, false);
                            obj = J$.N(2863025, 'obj', obj, true, false, false);
                            prop = J$.N(2863033, 'prop', prop, true, false, false);
                            message = J$.N(2863041, 'message', message, true, false, false);
                            J$.N(2863049, 'descriptor', descriptor, false, false, false);
                            if (J$.C(152160, J$.C(152152, J$.U(316170, '!', J$.R(2862825, 'obj', obj, false, false))) ? J$._() : J$.C(152144, J$.B(316186, '!==', J$.U(316178, 'typeof', J$.R(2862833, 'obj', obj, false, false)), J$.T(2862841, 'object', 21, false))) ? J$.B(316202, '!==', J$.U(316194, 'typeof', J$.R(2862849, 'obj', obj, false, false)), J$.T(2862857, 'function', 21, false)) : J$._())) {
                                throw J$.F(2862881, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2862865, 'TypeError', undefined, true, true) : TypeError = J$.R(2862865, 'TypeError', TypeError, true, true)), true)(J$.T(2862873, 'argument obj must be object', 21, false));
                            }
                            var descriptor = J$.W(2862921, 'descriptor', J$.M(2862913, J$.I(typeof Object === 'undefined' ? Object = J$.R(2862889, 'Object', undefined, true, true) : Object = J$.R(2862889, 'Object', Object, true, true)), 'getOwnPropertyDescriptor', false)(J$.R(2862897, 'obj', obj, false, false), J$.R(2862905, 'prop', prop, false, false)), descriptor, false, false);
                            if (J$.C(152168, J$.U(316210, '!', J$.R(2862929, 'descriptor', descriptor, false, false)))) {
                                throw J$.F(2862953, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2862937, 'TypeError', undefined, true, true) : TypeError = J$.R(2862937, 'TypeError', TypeError, true, true)), true)(J$.T(2862945, 'must call property on owner object', 21, false));
                            }
                            if (J$.C(152176, J$.U(316218, '!', J$.G(2862969, J$.R(2862961, 'descriptor', descriptor, false, false), 'configurable')))) {
                                throw J$.F(2862993, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2862977, 'TypeError', undefined, true, true) : TypeError = J$.R(2862977, 'TypeError', TypeError, true, true)), true)(J$.T(2862985, 'property must be configurable', 21, false));
                            }
                            return J$.Rt(2863001, undefined);
                        } catch (J$e) {
                            J$.Ex(2863161, J$e);
                        } finally {
                            if (J$.Fr(2863169))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            depd = J$.N(2863073, 'depd', J$.T(2863065, depd, 12, false), true, false, false);
            wrapfunction = J$.N(2863089, 'wrapfunction', J$.T(2863081, wrapfunction, 12, false), true, false, false);
            wrapproperty = J$.N(2863105, 'wrapproperty', J$.T(2863097, wrapproperty, 12, false), true, false, false);
            J$.T(2862409, 'use strict', 21, false);
            J$.P(2862433, J$.I(typeof module === 'undefined' ? module = J$.R(2862417, 'module', undefined, true, true) : module = J$.R(2862417, 'module', module, true, true)), 'exports', J$.R(2862425, 'depd', depd, false, true));
        } catch (J$e) {
            J$.Ex(2863177, J$e);
        } finally {
            if (J$.Sr(2863185))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

