J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(6573769, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/depd/lib/browser/index.js');
            function depd(namespace) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6573409, arguments.callee, this, arguments);
                            function deprecate(message) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6573185, arguments.callee, this, arguments);
                                            arguments = J$.N(6573193, 'arguments', arguments, true, false, false);
                                            message = J$.N(6573201, 'message', message, true, false, false);
                                        } catch (J$e) {
                                            J$.Ex(6573825, J$e);
                                        } finally {
                                            if (J$.Fr(6573833))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(6573417, 'arguments', arguments, true, false, false);
                            namespace = J$.N(6573425, 'namespace', namespace, true, false, false);
                            deprecate = J$.N(6573441, 'deprecate', J$.T(6573433, deprecate, 12, false), true, false, false);
                            if (J$.C(345528, J$.U(658906, '!', J$.R(6573153, 'namespace', namespace, false, false)))) {
                                throw J$.F(6573177, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6573161, 'TypeError', undefined, true, true) : TypeError = J$.R(6573161, 'TypeError', TypeError, true, true)), true)(J$.T(6573169, 'argument namespace is required', 21, false));
                            }
                            J$.P(6573225, J$.R(6573209, 'deprecate', deprecate, false, false), '_file', J$.T(6573217, undefined, 24, false));
                            J$.P(6573249, J$.R(6573233, 'deprecate', deprecate, false, false), '_ignored', J$.T(6573241, true, 23, false));
                            J$.P(6573273, J$.R(6573257, 'deprecate', deprecate, false, false), '_namespace', J$.R(6573265, 'namespace', namespace, false, false));
                            J$.P(6573297, J$.R(6573281, 'deprecate', deprecate, false, false), '_traced', J$.T(6573289, false, 23, false));
                            J$.P(6573337, J$.R(6573305, 'deprecate', deprecate, false, false), '_warned', J$.M(6573329, J$.I(typeof Object === 'undefined' ? Object = J$.R(6573313, 'Object', undefined, true, true) : Object = J$.R(6573313, 'Object', Object, true, true)), 'create', false)(J$.T(6573321, null, 25, false)));
                            J$.P(6573361, J$.R(6573345, 'deprecate', deprecate, false, false), 'function', J$.R(6573353, 'wrapfunction', wrapfunction, false, true));
                            J$.P(6573385, J$.R(6573369, 'deprecate', deprecate, false, false), 'property', J$.R(6573377, 'wrapproperty', wrapproperty, false, true));
                            return J$.Rt(6573401, J$.R(6573393, 'deprecate', deprecate, false, false));
                        } catch (J$e) {
                            J$.Ex(6573841, J$e);
                        } finally {
                            if (J$.Fr(6573849))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapfunction(fn, message) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(6573505, arguments.callee, this, arguments);
                            arguments = J$.N(6573513, 'arguments', arguments, true, false, false);
                            fn = J$.N(6573521, 'fn', fn, true, false, false);
                            message = J$.N(6573529, 'message', message, true, false, false);
                            if (J$.C(345536, J$.B(658922, '!==', J$.U(658914, 'typeof', J$.R(6573449, 'fn', fn, false, false)), J$.T(6573457, 'function', 21, false)))) {
                                throw J$.F(6573481, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6573465, 'TypeError', undefined, true, true) : TypeError = J$.R(6573465, 'TypeError', TypeError, true, true)), true)(J$.T(6573473, 'argument fn must be a function', 21, false));
                            }
                            return J$.Rt(6573497, J$.R(6573489, 'fn', fn, false, false));
                        } catch (J$e) {
                            J$.Ex(6573857, J$e);
                        } finally {
                            if (J$.Fr(6573865))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapproperty(obj, prop, message) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(6573721, arguments.callee, this, arguments);
                            arguments = J$.N(6573729, 'arguments', arguments, true, false, false);
                            obj = J$.N(6573737, 'obj', obj, true, false, false);
                            prop = J$.N(6573745, 'prop', prop, true, false, false);
                            message = J$.N(6573753, 'message', message, true, false, false);
                            J$.N(6573761, 'descriptor', descriptor, false, false, false);
                            if (J$.C(345560, J$.C(345552, J$.U(658930, '!', J$.R(6573537, 'obj', obj, false, false))) ? J$._() : J$.C(345544, J$.B(658946, '!==', J$.U(658938, 'typeof', J$.R(6573545, 'obj', obj, false, false)), J$.T(6573553, 'object', 21, false))) ? J$.B(658962, '!==', J$.U(658954, 'typeof', J$.R(6573561, 'obj', obj, false, false)), J$.T(6573569, 'function', 21, false)) : J$._())) {
                                throw J$.F(6573593, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6573577, 'TypeError', undefined, true, true) : TypeError = J$.R(6573577, 'TypeError', TypeError, true, true)), true)(J$.T(6573585, 'argument obj must be object', 21, false));
                            }
                            var descriptor = J$.W(6573633, 'descriptor', J$.M(6573625, J$.I(typeof Object === 'undefined' ? Object = J$.R(6573601, 'Object', undefined, true, true) : Object = J$.R(6573601, 'Object', Object, true, true)), 'getOwnPropertyDescriptor', false)(J$.R(6573609, 'obj', obj, false, false), J$.R(6573617, 'prop', prop, false, false)), descriptor, false, false);
                            if (J$.C(345568, J$.U(658970, '!', J$.R(6573641, 'descriptor', descriptor, false, false)))) {
                                throw J$.F(6573665, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6573649, 'TypeError', undefined, true, true) : TypeError = J$.R(6573649, 'TypeError', TypeError, true, true)), true)(J$.T(6573657, 'must call property on owner object', 21, false));
                            }
                            if (J$.C(345576, J$.U(658978, '!', J$.G(6573681, J$.R(6573673, 'descriptor', descriptor, false, false), 'configurable')))) {
                                throw J$.F(6573705, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6573689, 'TypeError', undefined, true, true) : TypeError = J$.R(6573689, 'TypeError', TypeError, true, true)), true)(J$.T(6573697, 'property must be configurable', 21, false));
                            }
                            return J$.Rt(6573713, undefined);
                        } catch (J$e) {
                            J$.Ex(6573873, J$e);
                        } finally {
                            if (J$.Fr(6573881))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            depd = J$.N(6573785, 'depd', J$.T(6573777, depd, 12, false), true, false, false);
            wrapfunction = J$.N(6573801, 'wrapfunction', J$.T(6573793, wrapfunction, 12, false), true, false, false);
            wrapproperty = J$.N(6573817, 'wrapproperty', J$.T(6573809, wrapproperty, 12, false), true, false, false);
            J$.T(6573121, 'use strict', 21, false);
            J$.P(6573145, J$.I(typeof module === 'undefined' ? module = J$.R(6573129, 'module', undefined, true, true) : module = J$.R(6573129, 'module', module, true, true)), 'exports', J$.R(6573137, 'depd', depd, false, true));
        } catch (J$e) {
            J$.Ex(6573889, J$e);
        } finally {
            if (J$.Sr(6573897))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

