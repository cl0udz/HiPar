J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(1932689, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/depd/lib/browser/index.js');
            function depd(namespace) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1932329, arguments.callee, this, arguments);
                            function deprecate(message) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(1932105, arguments.callee, this, arguments);
                                            arguments = J$.N(1932113, 'arguments', arguments, true, false, false);
                                            message = J$.N(1932121, 'message', message, true, false, false);
                                        } catch (J$e) {
                                            J$.Ex(1932745, J$e);
                                        } finally {
                                            if (J$.Fr(1932753))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1932337, 'arguments', arguments, true, false, false);
                            namespace = J$.N(1932345, 'namespace', namespace, true, false, false);
                            deprecate = J$.N(1932361, 'deprecate', J$.T(1932353, deprecate, 12, false), true, false, false);
                            if (J$.C(95008, J$.U(142370, '!', J$.R(1932073, 'namespace', namespace, false, false)))) {
                                throw J$.F(1932097, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1932081, 'TypeError', undefined, true, true) : TypeError = J$.R(1932081, 'TypeError', TypeError, true, true)), true)(J$.T(1932089, 'argument namespace is required', 21, false));
                            }
                            J$.P(1932145, J$.R(1932129, 'deprecate', deprecate, false, false), '_file', J$.T(1932137, undefined, 24, false));
                            J$.P(1932169, J$.R(1932153, 'deprecate', deprecate, false, false), '_ignored', J$.T(1932161, true, 23, false));
                            J$.P(1932193, J$.R(1932177, 'deprecate', deprecate, false, false), '_namespace', J$.R(1932185, 'namespace', namespace, false, false));
                            J$.P(1932217, J$.R(1932201, 'deprecate', deprecate, false, false), '_traced', J$.T(1932209, false, 23, false));
                            J$.P(1932257, J$.R(1932225, 'deprecate', deprecate, false, false), '_warned', J$.M(1932249, J$.I(typeof Object === 'undefined' ? Object = J$.R(1932233, 'Object', undefined, true, true) : Object = J$.R(1932233, 'Object', Object, true, true)), 'create', false)(J$.T(1932241, null, 25, false)));
                            J$.P(1932281, J$.R(1932265, 'deprecate', deprecate, false, false), 'function', J$.R(1932273, 'wrapfunction', wrapfunction, false, true));
                            J$.P(1932305, J$.R(1932289, 'deprecate', deprecate, false, false), 'property', J$.R(1932297, 'wrapproperty', wrapproperty, false, true));
                            return J$.Rt(1932321, J$.R(1932313, 'deprecate', deprecate, false, false));
                        } catch (J$e) {
                            J$.Ex(1932761, J$e);
                        } finally {
                            if (J$.Fr(1932769))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapfunction(fn, message) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1932425, arguments.callee, this, arguments);
                            arguments = J$.N(1932433, 'arguments', arguments, true, false, false);
                            fn = J$.N(1932441, 'fn', fn, true, false, false);
                            message = J$.N(1932449, 'message', message, true, false, false);
                            if (J$.C(95016, J$.B(142386, '!==', J$.U(142378, 'typeof', J$.R(1932369, 'fn', fn, false, false)), J$.T(1932377, 'function', 21, false)))) {
                                throw J$.F(1932401, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1932385, 'TypeError', undefined, true, true) : TypeError = J$.R(1932385, 'TypeError', TypeError, true, true)), true)(J$.T(1932393, 'argument fn must be a function', 21, false));
                            }
                            return J$.Rt(1932417, J$.R(1932409, 'fn', fn, false, false));
                        } catch (J$e) {
                            J$.Ex(1932777, J$e);
                        } finally {
                            if (J$.Fr(1932785))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapproperty(obj, prop, message) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1932641, arguments.callee, this, arguments);
                            arguments = J$.N(1932649, 'arguments', arguments, true, false, false);
                            obj = J$.N(1932657, 'obj', obj, true, false, false);
                            prop = J$.N(1932665, 'prop', prop, true, false, false);
                            message = J$.N(1932673, 'message', message, true, false, false);
                            J$.N(1932681, 'descriptor', descriptor, false, false, false);
                            if (J$.C(95040, J$.C(95032, J$.U(142394, '!', J$.R(1932457, 'obj', obj, false, false))) ? J$._() : J$.C(95024, J$.B(142410, '!==', J$.U(142402, 'typeof', J$.R(1932465, 'obj', obj, false, false)), J$.T(1932473, 'object', 21, false))) ? J$.B(142426, '!==', J$.U(142418, 'typeof', J$.R(1932481, 'obj', obj, false, false)), J$.T(1932489, 'function', 21, false)) : J$._())) {
                                throw J$.F(1932513, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1932497, 'TypeError', undefined, true, true) : TypeError = J$.R(1932497, 'TypeError', TypeError, true, true)), true)(J$.T(1932505, 'argument obj must be object', 21, false));
                            }
                            var descriptor = J$.W(1932553, 'descriptor', J$.M(1932545, J$.I(typeof Object === 'undefined' ? Object = J$.R(1932521, 'Object', undefined, true, true) : Object = J$.R(1932521, 'Object', Object, true, true)), 'getOwnPropertyDescriptor', false)(J$.R(1932529, 'obj', obj, false, false), J$.R(1932537, 'prop', prop, false, false)), descriptor, false, false);
                            if (J$.C(95048, J$.U(142434, '!', J$.R(1932561, 'descriptor', descriptor, false, false)))) {
                                throw J$.F(1932585, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1932569, 'TypeError', undefined, true, true) : TypeError = J$.R(1932569, 'TypeError', TypeError, true, true)), true)(J$.T(1932577, 'must call property on owner object', 21, false));
                            }
                            if (J$.C(95056, J$.U(142442, '!', J$.G(1932601, J$.R(1932593, 'descriptor', descriptor, false, false), 'configurable')))) {
                                throw J$.F(1932625, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1932609, 'TypeError', undefined, true, true) : TypeError = J$.R(1932609, 'TypeError', TypeError, true, true)), true)(J$.T(1932617, 'property must be configurable', 21, false));
                            }
                            return J$.Rt(1932633, undefined);
                        } catch (J$e) {
                            J$.Ex(1932793, J$e);
                        } finally {
                            if (J$.Fr(1932801))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            depd = J$.N(1932705, 'depd', J$.T(1932697, depd, 12, false), true, false, false);
            wrapfunction = J$.N(1932721, 'wrapfunction', J$.T(1932713, wrapfunction, 12, false), true, false, false);
            wrapproperty = J$.N(1932737, 'wrapproperty', J$.T(1932729, wrapproperty, 12, false), true, false, false);
            J$.T(1932041, 'use strict', 21, false);
            J$.P(1932065, J$.I(typeof module === 'undefined' ? module = J$.R(1932049, 'module', undefined, true, true) : module = J$.R(1932049, 'module', module, true, true)), 'exports', J$.R(1932057, 'depd', depd, false, true));
        } catch (J$e) {
            J$.Ex(1932809, J$e);
        } finally {
            if (J$.Sr(1932817))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

