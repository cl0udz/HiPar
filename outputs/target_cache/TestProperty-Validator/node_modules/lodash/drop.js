J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3093097, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/drop.js');
            function drop(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3093025, arguments.callee, this, arguments);
                            arguments = J$.N(3093033, 'arguments', arguments, true, false, false);
                            array = J$.N(3093041, 'array', array, true, false, false);
                            n = J$.N(3093049, 'n', n, true, false, false);
                            guard = J$.N(3093057, 'guard', guard, true, false, false);
                            J$.N(3093065, 'length', length, false, false, false);
                            var length = J$.W(3092857, 'length', J$.C(165840, J$.B(333954, '==', J$.R(3092817, 'array', array, false, false), J$.T(3092825, null, 25, false))) ? J$.T(3092833, 0, 22, false) : J$.G(3092849, J$.R(3092841, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(165848, J$.U(333962, '!', J$.R(3092865, 'length', length, false, false)))) {
                                return J$.Rt(3092881, J$.T(3092873, [], 10, false));
                            }
                            n = J$.W(3092945, 'n', J$.C(165864, J$.C(165856, J$.R(3092889, 'guard', guard, false, false)) ? J$._() : J$.B(333970, '===', J$.R(3092897, 'n', n, false, false), J$.T(3092905, undefined, 24, false))) ? J$.T(3092913, 1, 22, false) : J$.F(3092937, J$.R(3092921, 'toInteger', toInteger, false, true), false)(J$.R(3092929, 'n', n, false, false)), n, false, false);
                            return J$.Rt(3093017, J$.F(3093009, J$.R(3092953, 'baseSlice', baseSlice, false, true), false)(J$.R(3092961, 'array', array, false, false), J$.C(165872, J$.B(333978, '<', J$.R(3092969, 'n', n, false, false), J$.T(3092977, 0, 22, false))) ? J$.T(3092985, 0, 22, false) : J$.R(3092993, 'n', n, false, false), J$.R(3093001, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(3093137, J$e);
                        } finally {
                            if (J$.Fr(3093145))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3093105, 'baseSlice', baseSlice, false, false, false);
            J$.N(3093113, 'toInteger', toInteger, false, false, false);
            drop = J$.N(3093129, 'drop', J$.T(3093121, drop, 12, false), true, false, false);
            var baseSlice = J$.W(3092801, 'baseSlice', J$.F(3092769, J$.I(typeof require === 'undefined' ? require = J$.R(3092753, 'require', undefined, true, true) : require = J$.R(3092753, 'require', require, true, true)), false)(J$.T(3092761, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(3092809, 'toInteger', J$.F(3092793, J$.I(typeof require === 'undefined' ? require = J$.R(3092777, 'require', undefined, true, true) : require = J$.R(3092777, 'require', require, true, true)), false)(J$.T(3092785, './toInteger', 21, false)), toInteger, false, true);
            J$.P(3093089, J$.I(typeof module === 'undefined' ? module = J$.R(3093073, 'module', undefined, true, true) : module = J$.R(3093073, 'module', module, true, true)), 'exports', J$.R(3093081, 'drop', drop, false, true));
        } catch (J$e) {
            J$.Ex(3093153, J$e);
        } finally {
            if (J$.Sr(3093161))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

