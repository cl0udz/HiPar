J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6803809, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/drop.js');
            function drop(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6803737, arguments.callee, this, arguments);
                            arguments = J$.N(6803745, 'arguments', arguments, true, false, false);
                            array = J$.N(6803753, 'array', array, true, false, false);
                            n = J$.N(6803761, 'n', n, true, false, false);
                            guard = J$.N(6803769, 'guard', guard, true, false, false);
                            J$.N(6803777, 'length', length, false, false, false);
                            var length = J$.W(6803569, 'length', J$.C(359240, J$.B(676714, '==', J$.R(6803529, 'array', array, false, false), J$.T(6803537, null, 25, false))) ? J$.T(6803545, 0, 22, false) : J$.G(6803561, J$.R(6803553, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(359248, J$.U(676722, '!', J$.R(6803577, 'length', length, false, false)))) {
                                return J$.Rt(6803593, J$.T(6803585, [], 10, false));
                            }
                            n = J$.W(6803657, 'n', J$.C(359264, J$.C(359256, J$.R(6803601, 'guard', guard, false, false)) ? J$._() : J$.B(676730, '===', J$.R(6803609, 'n', n, false, false), J$.T(6803617, undefined, 24, false))) ? J$.T(6803625, 1, 22, false) : J$.F(6803649, J$.R(6803633, 'toInteger', toInteger, false, true), false)(J$.R(6803641, 'n', n, false, false)), n, false, false);
                            return J$.Rt(6803729, J$.F(6803721, J$.R(6803665, 'baseSlice', baseSlice, false, true), false)(J$.R(6803673, 'array', array, false, false), J$.C(359272, J$.B(676738, '<', J$.R(6803681, 'n', n, false, false), J$.T(6803689, 0, 22, false))) ? J$.T(6803697, 0, 22, false) : J$.R(6803705, 'n', n, false, false), J$.R(6803713, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(6803849, J$e);
                        } finally {
                            if (J$.Fr(6803857))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6803817, 'baseSlice', baseSlice, false, false, false);
            J$.N(6803825, 'toInteger', toInteger, false, false, false);
            drop = J$.N(6803841, 'drop', J$.T(6803833, drop, 12, false), true, false, false);
            var baseSlice = J$.W(6803513, 'baseSlice', J$.F(6803481, J$.I(typeof require === 'undefined' ? require = J$.R(6803465, 'require', undefined, true, true) : require = J$.R(6803465, 'require', require, true, true)), false)(J$.T(6803473, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(6803521, 'toInteger', J$.F(6803505, J$.I(typeof require === 'undefined' ? require = J$.R(6803489, 'require', undefined, true, true) : require = J$.R(6803489, 'require', require, true, true)), false)(J$.T(6803497, './toInteger', 21, false)), toInteger, false, true);
            J$.P(6803801, J$.I(typeof module === 'undefined' ? module = J$.R(6803785, 'module', undefined, true, true) : module = J$.R(6803785, 'module', module, true, true)), 'exports', J$.R(6803793, 'drop', drop, false, true));
        } catch (J$e) {
            J$.Ex(6803865, J$e);
        } finally {
            if (J$.Sr(6803873))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

