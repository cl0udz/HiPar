J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2871137, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_Stack.js');
            function Stack(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2870913, arguments.callee, this, arguments);
                            arguments = J$.N(2870921, 'arguments', arguments, true, false, false);
                            entries = J$.N(2870929, 'entries', entries, true, false, false);
                            J$.N(2870937, 'data', data, false, false, false);
                            var data = J$.W(2870873, 'data', J$.P(2870865, J$.R(2870833, 'this', this, false, false), '__data__', J$.F(2870857, J$.R(2870841, 'ListCache', ListCache, false, true), true)(J$.R(2870849, 'entries', entries, false, false))), data, false, false);
                            J$.P(2870905, J$.R(2870881, 'this', this, false, false), 'size', J$.G(2870897, J$.R(2870889, 'data', data, false, false), 'size'));
                        } catch (J$e) {
                            J$.Ex(2871209, J$e);
                        } finally {
                            if (J$.Fr(2871217))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2871145, 'ListCache', ListCache, false, false, false);
            J$.N(2871153, 'stackClear', stackClear, false, false, false);
            J$.N(2871161, 'stackDelete', stackDelete, false, false, false);
            J$.N(2871169, 'stackGet', stackGet, false, false, false);
            J$.N(2871177, 'stackHas', stackHas, false, false, false);
            J$.N(2871185, 'stackSet', stackSet, false, false, false);
            Stack = J$.N(2871201, 'Stack', J$.T(2871193, Stack, 12, false), true, false, false);
            var ListCache = J$.W(2870785, 'ListCache', J$.F(2870657, J$.I(typeof require === 'undefined' ? require = J$.R(2870641, 'require', undefined, true, true) : require = J$.R(2870641, 'require', require, true, true)), false)(J$.T(2870649, './_ListCache', 21, false)), ListCache, false, true), stackClear = J$.W(2870793, 'stackClear', J$.F(2870681, J$.I(typeof require === 'undefined' ? require = J$.R(2870665, 'require', undefined, true, true) : require = J$.R(2870665, 'require', require, true, true)), false)(J$.T(2870673, './_stackClear', 21, false)), stackClear, false, true), stackDelete = J$.W(2870801, 'stackDelete', J$.F(2870705, J$.I(typeof require === 'undefined' ? require = J$.R(2870689, 'require', undefined, true, true) : require = J$.R(2870689, 'require', require, true, true)), false)(J$.T(2870697, './_stackDelete', 21, false)), stackDelete, false, true), stackGet = J$.W(2870809, 'stackGet', J$.F(2870729, J$.I(typeof require === 'undefined' ? require = J$.R(2870713, 'require', undefined, true, true) : require = J$.R(2870713, 'require', require, true, true)), false)(J$.T(2870721, './_stackGet', 21, false)), stackGet, false, true), stackHas = J$.W(2870817, 'stackHas', J$.F(2870753, J$.I(typeof require === 'undefined' ? require = J$.R(2870737, 'require', undefined, true, true) : require = J$.R(2870737, 'require', require, true, true)), false)(J$.T(2870745, './_stackHas', 21, false)), stackHas, false, true), stackSet = J$.W(2870825, 'stackSet', J$.F(2870777, J$.I(typeof require === 'undefined' ? require = J$.R(2870761, 'require', undefined, true, true) : require = J$.R(2870761, 'require', require, true, true)), false)(J$.T(2870769, './_stackSet', 21, false)), stackSet, false, true);
            J$.P(2870969, J$.G(2870953, J$.R(2870945, 'Stack', Stack, false, true), 'prototype'), 'clear', J$.R(2870961, 'stackClear', stackClear, false, true));
            J$.P(2871009, J$.G(2870985, J$.R(2870977, 'Stack', Stack, false, true), 'prototype'), J$.T(2870993, 'delete', 21, false), J$.R(2871001, 'stackDelete', stackDelete, false, true));
            J$.P(2871041, J$.G(2871025, J$.R(2871017, 'Stack', Stack, false, true), 'prototype'), 'get', J$.R(2871033, 'stackGet', stackGet, false, true));
            J$.P(2871073, J$.G(2871057, J$.R(2871049, 'Stack', Stack, false, true), 'prototype'), 'has', J$.R(2871065, 'stackHas', stackHas, false, true));
            J$.P(2871105, J$.G(2871089, J$.R(2871081, 'Stack', Stack, false, true), 'prototype'), 'set', J$.R(2871097, 'stackSet', stackSet, false, true));
            J$.P(2871129, J$.I(typeof module === 'undefined' ? module = J$.R(2871113, 'module', undefined, true, true) : module = J$.R(2871113, 'module', module, true, true)), 'exports', J$.R(2871121, 'Stack', Stack, false, true));
        } catch (J$e) {
            J$.Ex(2871225, J$e);
        } finally {
            if (J$.Sr(2871233))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

