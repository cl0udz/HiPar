J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1940769, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_Stack.js');
            function Stack(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1940545, arguments.callee, this, arguments);
                            arguments = J$.N(1940553, 'arguments', arguments, true, false, false);
                            entries = J$.N(1940561, 'entries', entries, true, false, false);
                            J$.N(1940569, 'data', data, false, false, false);
                            var data = J$.W(1940505, 'data', J$.P(1940497, J$.R(1940465, 'this', this, false, false), '__data__', J$.F(1940489, J$.R(1940473, 'ListCache', ListCache, false, true), true)(J$.R(1940481, 'entries', entries, false, false))), data, false, false);
                            J$.P(1940537, J$.R(1940513, 'this', this, false, false), 'size', J$.G(1940529, J$.R(1940521, 'data', data, false, false), 'size'));
                        } catch (J$e) {
                            J$.Ex(1940841, J$e);
                        } finally {
                            if (J$.Fr(1940849))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1940777, 'ListCache', ListCache, false, false, false);
            J$.N(1940785, 'stackClear', stackClear, false, false, false);
            J$.N(1940793, 'stackDelete', stackDelete, false, false, false);
            J$.N(1940801, 'stackGet', stackGet, false, false, false);
            J$.N(1940809, 'stackHas', stackHas, false, false, false);
            J$.N(1940817, 'stackSet', stackSet, false, false, false);
            Stack = J$.N(1940833, 'Stack', J$.T(1940825, Stack, 12, false), true, false, false);
            var ListCache = J$.W(1940417, 'ListCache', J$.F(1940289, J$.I(typeof require === 'undefined' ? require = J$.R(1940273, 'require', undefined, true, true) : require = J$.R(1940273, 'require', require, true, true)), false)(J$.T(1940281, './_ListCache', 21, false)), ListCache, false, true), stackClear = J$.W(1940425, 'stackClear', J$.F(1940313, J$.I(typeof require === 'undefined' ? require = J$.R(1940297, 'require', undefined, true, true) : require = J$.R(1940297, 'require', require, true, true)), false)(J$.T(1940305, './_stackClear', 21, false)), stackClear, false, true), stackDelete = J$.W(1940433, 'stackDelete', J$.F(1940337, J$.I(typeof require === 'undefined' ? require = J$.R(1940321, 'require', undefined, true, true) : require = J$.R(1940321, 'require', require, true, true)), false)(J$.T(1940329, './_stackDelete', 21, false)), stackDelete, false, true), stackGet = J$.W(1940441, 'stackGet', J$.F(1940361, J$.I(typeof require === 'undefined' ? require = J$.R(1940345, 'require', undefined, true, true) : require = J$.R(1940345, 'require', require, true, true)), false)(J$.T(1940353, './_stackGet', 21, false)), stackGet, false, true), stackHas = J$.W(1940449, 'stackHas', J$.F(1940385, J$.I(typeof require === 'undefined' ? require = J$.R(1940369, 'require', undefined, true, true) : require = J$.R(1940369, 'require', require, true, true)), false)(J$.T(1940377, './_stackHas', 21, false)), stackHas, false, true), stackSet = J$.W(1940457, 'stackSet', J$.F(1940409, J$.I(typeof require === 'undefined' ? require = J$.R(1940393, 'require', undefined, true, true) : require = J$.R(1940393, 'require', require, true, true)), false)(J$.T(1940401, './_stackSet', 21, false)), stackSet, false, true);
            J$.P(1940601, J$.G(1940585, J$.R(1940577, 'Stack', Stack, false, true), 'prototype'), 'clear', J$.R(1940593, 'stackClear', stackClear, false, true));
            J$.P(1940641, J$.G(1940617, J$.R(1940609, 'Stack', Stack, false, true), 'prototype'), J$.T(1940625, 'delete', 21, false), J$.R(1940633, 'stackDelete', stackDelete, false, true));
            J$.P(1940673, J$.G(1940657, J$.R(1940649, 'Stack', Stack, false, true), 'prototype'), 'get', J$.R(1940665, 'stackGet', stackGet, false, true));
            J$.P(1940705, J$.G(1940689, J$.R(1940681, 'Stack', Stack, false, true), 'prototype'), 'has', J$.R(1940697, 'stackHas', stackHas, false, true));
            J$.P(1940737, J$.G(1940721, J$.R(1940713, 'Stack', Stack, false, true), 'prototype'), 'set', J$.R(1940729, 'stackSet', stackSet, false, true));
            J$.P(1940761, J$.I(typeof module === 'undefined' ? module = J$.R(1940745, 'module', undefined, true, true) : module = J$.R(1940745, 'module', module, true, true)), 'exports', J$.R(1940753, 'Stack', Stack, false, true));
        } catch (J$e) {
            J$.Ex(1940857, J$e);
        } finally {
            if (J$.Sr(1940865))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

