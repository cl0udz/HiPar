J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6581849, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_Stack.js');
            function Stack(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6581625, arguments.callee, this, arguments);
                            arguments = J$.N(6581633, 'arguments', arguments, true, false, false);
                            entries = J$.N(6581641, 'entries', entries, true, false, false);
                            J$.N(6581649, 'data', data, false, false, false);
                            var data = J$.W(6581585, 'data', J$.P(6581577, J$.R(6581545, 'this', this, false, false), '__data__', J$.F(6581569, J$.R(6581553, 'ListCache', ListCache, false, true), true)(J$.R(6581561, 'entries', entries, false, false))), data, false, false);
                            J$.P(6581617, J$.R(6581593, 'this', this, false, false), 'size', J$.G(6581609, J$.R(6581601, 'data', data, false, false), 'size'));
                        } catch (J$e) {
                            J$.Ex(6581921, J$e);
                        } finally {
                            if (J$.Fr(6581929))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6581857, 'ListCache', ListCache, false, false, false);
            J$.N(6581865, 'stackClear', stackClear, false, false, false);
            J$.N(6581873, 'stackDelete', stackDelete, false, false, false);
            J$.N(6581881, 'stackGet', stackGet, false, false, false);
            J$.N(6581889, 'stackHas', stackHas, false, false, false);
            J$.N(6581897, 'stackSet', stackSet, false, false, false);
            Stack = J$.N(6581913, 'Stack', J$.T(6581905, Stack, 12, false), true, false, false);
            var ListCache = J$.W(6581497, 'ListCache', J$.F(6581369, J$.I(typeof require === 'undefined' ? require = J$.R(6581353, 'require', undefined, true, true) : require = J$.R(6581353, 'require', require, true, true)), false)(J$.T(6581361, './_ListCache', 21, false)), ListCache, false, true), stackClear = J$.W(6581505, 'stackClear', J$.F(6581393, J$.I(typeof require === 'undefined' ? require = J$.R(6581377, 'require', undefined, true, true) : require = J$.R(6581377, 'require', require, true, true)), false)(J$.T(6581385, './_stackClear', 21, false)), stackClear, false, true), stackDelete = J$.W(6581513, 'stackDelete', J$.F(6581417, J$.I(typeof require === 'undefined' ? require = J$.R(6581401, 'require', undefined, true, true) : require = J$.R(6581401, 'require', require, true, true)), false)(J$.T(6581409, './_stackDelete', 21, false)), stackDelete, false, true), stackGet = J$.W(6581521, 'stackGet', J$.F(6581441, J$.I(typeof require === 'undefined' ? require = J$.R(6581425, 'require', undefined, true, true) : require = J$.R(6581425, 'require', require, true, true)), false)(J$.T(6581433, './_stackGet', 21, false)), stackGet, false, true), stackHas = J$.W(6581529, 'stackHas', J$.F(6581465, J$.I(typeof require === 'undefined' ? require = J$.R(6581449, 'require', undefined, true, true) : require = J$.R(6581449, 'require', require, true, true)), false)(J$.T(6581457, './_stackHas', 21, false)), stackHas, false, true), stackSet = J$.W(6581537, 'stackSet', J$.F(6581489, J$.I(typeof require === 'undefined' ? require = J$.R(6581473, 'require', undefined, true, true) : require = J$.R(6581473, 'require', require, true, true)), false)(J$.T(6581481, './_stackSet', 21, false)), stackSet, false, true);
            J$.P(6581681, J$.G(6581665, J$.R(6581657, 'Stack', Stack, false, true), 'prototype'), 'clear', J$.R(6581673, 'stackClear', stackClear, false, true));
            J$.P(6581721, J$.G(6581697, J$.R(6581689, 'Stack', Stack, false, true), 'prototype'), J$.T(6581705, 'delete', 21, false), J$.R(6581713, 'stackDelete', stackDelete, false, true));
            J$.P(6581753, J$.G(6581737, J$.R(6581729, 'Stack', Stack, false, true), 'prototype'), 'get', J$.R(6581745, 'stackGet', stackGet, false, true));
            J$.P(6581785, J$.G(6581769, J$.R(6581761, 'Stack', Stack, false, true), 'prototype'), 'has', J$.R(6581777, 'stackHas', stackHas, false, true));
            J$.P(6581817, J$.G(6581801, J$.R(6581793, 'Stack', Stack, false, true), 'prototype'), 'set', J$.R(6581809, 'stackSet', stackSet, false, true));
            J$.P(6581841, J$.I(typeof module === 'undefined' ? module = J$.R(6581825, 'module', undefined, true, true) : module = J$.R(6581825, 'module', module, true, true)), 'exports', J$.R(6581833, 'Stack', Stack, false, true));
        } catch (J$e) {
            J$.Ex(6581937, J$e);
        } finally {
            if (J$.Sr(6581945))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

