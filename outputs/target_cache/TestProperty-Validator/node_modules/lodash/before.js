J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6722249, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/before.js');
            function before(n, func) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6722185, arguments.callee, this, arguments);
                            arguments = J$.N(6722193, 'arguments', arguments, true, false, false);
                            n = J$.N(6722201, 'n', n, true, false, false);
                            func = J$.N(6722209, 'func', func, true, false, false);
                            J$.N(6722217, 'result', result, false, false, false);
                            var result;
                            if (J$.C(353688, J$.B(669650, '!=', J$.U(669642, 'typeof', J$.R(6721969, 'func', func, false, false)), J$.T(6721977, 'function', 21, false)))) {
                                throw J$.F(6722001, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6721985, 'TypeError', undefined, true, true) : TypeError = J$.R(6721985, 'TypeError', TypeError, true, true)), true)(J$.R(6721993, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            n = J$.W(6722033, 'n', J$.F(6722025, J$.R(6722009, 'toInteger', toInteger, false, true), false)(J$.R(6722017, 'n', n, false, false)), n, false, false);
                            return J$.Rt(6722177, J$.T(6722169, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6722153, arguments.callee, this, arguments);
                                            arguments = J$.N(6722161, 'arguments', arguments, true, false, false);
                                            if (J$.C(353696, J$.B(669674, '>', n = J$.W(6722049, 'n', J$.B(669666, '-', J$.U(669658, '+', J$.R(6722041, 'n', n, false, false)), 1), n, false, false), J$.T(6722057, 0, 22, false)))) {
                                                result = J$.W(6722097, 'result', J$.M(6722089, J$.R(6722065, 'func', func, false, false), 'apply', false)(J$.R(6722073, 'this', this, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6722081, 'arguments', undefined, true, true) : arguments = J$.R(6722081, 'arguments', arguments, true, true))), result, false, false);
                                            }
                                            if (J$.C(353704, J$.B(669682, '<=', J$.R(6722105, 'n', n, false, false), J$.T(6722113, 1, 22, false)))) {
                                                func = J$.W(6722129, 'func', J$.T(6722121, undefined, 24, false), func, false, false);
                                            }
                                            return J$.Rt(6722145, J$.R(6722137, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(6722289, J$e);
                                        } finally {
                                            if (J$.Fr(6722297))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(6722305, J$e);
                        } finally {
                            if (J$.Fr(6722313))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6722257, 'toInteger', toInteger, false, false, false);
            J$.N(6722265, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            before = J$.N(6722281, 'before', J$.T(6722273, before, 12, false), true, false, false);
            var toInteger = J$.W(6721945, 'toInteger', J$.F(6721937, J$.I(typeof require === 'undefined' ? require = J$.R(6721921, 'require', undefined, true, true) : require = J$.R(6721921, 'require', require, true, true)), false)(J$.T(6721929, './toInteger', 21, false)), toInteger, false, true);
            var FUNC_ERROR_TEXT = J$.W(6721961, 'FUNC_ERROR_TEXT', J$.T(6721953, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            J$.P(6722241, J$.I(typeof module === 'undefined' ? module = J$.R(6722225, 'module', undefined, true, true) : module = J$.R(6722225, 'module', module, true, true)), 'exports', J$.R(6722233, 'before', before, false, true));
        } catch (J$e) {
            J$.Ex(6722321, J$e);
        } finally {
            if (J$.Sr(6722329))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

