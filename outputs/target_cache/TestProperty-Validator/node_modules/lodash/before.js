J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3011537, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/before.js');
            function before(n, func) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3011473, arguments.callee, this, arguments);
                            arguments = J$.N(3011481, 'arguments', arguments, true, false, false);
                            n = J$.N(3011489, 'n', n, true, false, false);
                            func = J$.N(3011497, 'func', func, true, false, false);
                            J$.N(3011505, 'result', result, false, false, false);
                            var result;
                            if (J$.C(160288, J$.B(326890, '!=', J$.U(326882, 'typeof', J$.R(3011257, 'func', func, false, false)), J$.T(3011265, 'function', 21, false)))) {
                                throw J$.F(3011289, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(3011273, 'TypeError', undefined, true, true) : TypeError = J$.R(3011273, 'TypeError', TypeError, true, true)), true)(J$.R(3011281, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            n = J$.W(3011321, 'n', J$.F(3011313, J$.R(3011297, 'toInteger', toInteger, false, true), false)(J$.R(3011305, 'n', n, false, false)), n, false, false);
                            return J$.Rt(3011465, J$.T(3011457, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3011441, arguments.callee, this, arguments);
                                            arguments = J$.N(3011449, 'arguments', arguments, true, false, false);
                                            if (J$.C(160296, J$.B(326914, '>', n = J$.W(3011337, 'n', J$.B(326906, '-', J$.U(326898, '+', J$.R(3011329, 'n', n, false, false)), 1), n, false, false), J$.T(3011345, 0, 22, false)))) {
                                                result = J$.W(3011385, 'result', J$.M(3011377, J$.R(3011353, 'func', func, false, false), 'apply', false)(J$.R(3011361, 'this', this, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(3011369, 'arguments', undefined, true, true) : arguments = J$.R(3011369, 'arguments', arguments, true, true))), result, false, false);
                                            }
                                            if (J$.C(160304, J$.B(326922, '<=', J$.R(3011393, 'n', n, false, false), J$.T(3011401, 1, 22, false)))) {
                                                func = J$.W(3011417, 'func', J$.T(3011409, undefined, 24, false), func, false, false);
                                            }
                                            return J$.Rt(3011433, J$.R(3011425, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(3011577, J$e);
                                        } finally {
                                            if (J$.Fr(3011585))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(3011593, J$e);
                        } finally {
                            if (J$.Fr(3011601))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3011545, 'toInteger', toInteger, false, false, false);
            J$.N(3011553, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            before = J$.N(3011569, 'before', J$.T(3011561, before, 12, false), true, false, false);
            var toInteger = J$.W(3011233, 'toInteger', J$.F(3011225, J$.I(typeof require === 'undefined' ? require = J$.R(3011209, 'require', undefined, true, true) : require = J$.R(3011209, 'require', require, true, true)), false)(J$.T(3011217, './toInteger', 21, false)), toInteger, false, true);
            var FUNC_ERROR_TEXT = J$.W(3011249, 'FUNC_ERROR_TEXT', J$.T(3011241, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            J$.P(3011529, J$.I(typeof module === 'undefined' ? module = J$.R(3011513, 'module', undefined, true, true) : module = J$.R(3011513, 'module', module, true, true)), 'exports', J$.R(3011521, 'before', before, false, true));
        } catch (J$e) {
            J$.Ex(3011609, J$e);
        } finally {
            if (J$.Sr(3011617))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

