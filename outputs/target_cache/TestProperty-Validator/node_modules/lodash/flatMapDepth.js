J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6811121, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/flatMapDepth.js');
            function flatMapDepth(collection, iteratee, depth) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6811057, arguments.callee, this, arguments);
                            arguments = J$.N(6811065, 'arguments', arguments, true, false, false);
                            collection = J$.N(6811073, 'collection', collection, true, false, false);
                            iteratee = J$.N(6811081, 'iteratee', iteratee, true, false, false);
                            depth = J$.N(6811089, 'depth', depth, true, false, false);
                            depth = J$.W(6810985, 'depth', J$.C(359552, J$.B(676994, '===', J$.R(6810937, 'depth', depth, false, false), J$.T(6810945, undefined, 24, false))) ? J$.T(6810953, 1, 22, false) : J$.F(6810977, J$.R(6810961, 'toInteger', toInteger, false, true), false)(J$.R(6810969, 'depth', depth, false, false)), depth, false, false);
                            return J$.Rt(6811049, J$.F(6811041, J$.R(6810993, 'baseFlatten', baseFlatten, false, true), false)(J$.F(6811025, J$.R(6811001, 'map', map, false, true), false)(J$.R(6811009, 'collection', collection, false, false), J$.R(6811017, 'iteratee', iteratee, false, false)), J$.R(6811033, 'depth', depth, false, false)));
                        } catch (J$e) {
                            J$.Ex(6811169, J$e);
                        } finally {
                            if (J$.Fr(6811177))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6811129, 'baseFlatten', baseFlatten, false, false, false);
            J$.N(6811137, 'map', map, false, false, false);
            J$.N(6811145, 'toInteger', toInteger, false, false, false);
            flatMapDepth = J$.N(6811161, 'flatMapDepth', J$.T(6811153, flatMapDepth, 12, false), true, false, false);
            var baseFlatten = J$.W(6810913, 'baseFlatten', J$.F(6810857, J$.I(typeof require === 'undefined' ? require = J$.R(6810841, 'require', undefined, true, true) : require = J$.R(6810841, 'require', require, true, true)), false)(J$.T(6810849, './_baseFlatten', 21, false)), baseFlatten, false, true), map = J$.W(6810921, 'map', J$.F(6810881, J$.I(typeof require === 'undefined' ? require = J$.R(6810865, 'require', undefined, true, true) : require = J$.R(6810865, 'require', require, true, true)), false)(J$.T(6810873, './map', 21, false)), map, false, true), toInteger = J$.W(6810929, 'toInteger', J$.F(6810905, J$.I(typeof require === 'undefined' ? require = J$.R(6810889, 'require', undefined, true, true) : require = J$.R(6810889, 'require', require, true, true)), false)(J$.T(6810897, './toInteger', 21, false)), toInteger, false, true);
            J$.P(6811113, J$.I(typeof module === 'undefined' ? module = J$.R(6811097, 'module', undefined, true, true) : module = J$.R(6811097, 'module', module, true, true)), 'exports', J$.R(6811105, 'flatMapDepth', flatMapDepth, false, true));
        } catch (J$e) {
            J$.Ex(6811185, J$e);
        } finally {
            if (J$.Sr(6811193))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

