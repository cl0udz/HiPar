J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6630225, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseSetToString.js');
            J$.N(6630233, 'constant', constant, false, false, false);
            J$.N(6630241, 'defineProperty', defineProperty, false, false, false);
            J$.N(6630249, 'identity', identity, false, false, false);
            J$.N(6630257, 'baseSetToString', baseSetToString, false, false, false);
            var constant = J$.W(6630017, 'constant', J$.F(6629961, J$.I(typeof require === 'undefined' ? require = J$.R(6629945, 'require', undefined, true, true) : require = J$.R(6629945, 'require', require, true, true)), false)(J$.T(6629953, './constant', 21, false)), constant, false, true), defineProperty = J$.W(6630025, 'defineProperty', J$.F(6629985, J$.I(typeof require === 'undefined' ? require = J$.R(6629969, 'require', undefined, true, true) : require = J$.R(6629969, 'require', require, true, true)), false)(J$.T(6629977, './_defineProperty', 21, false)), defineProperty, false, true), identity = J$.W(6630033, 'identity', J$.F(6630009, J$.I(typeof require === 'undefined' ? require = J$.R(6629993, 'require', undefined, true, true) : require = J$.R(6629993, 'require', require, true, true)), false)(J$.T(6630001, './identity', 21, false)), identity, false, true);
            var baseSetToString = J$.W(6630193, 'baseSetToString', J$.C(348520, J$.U(662362, '!', J$.R(6630041, 'defineProperty', defineProperty, false, true))) ? J$.R(6630049, 'identity', identity, false, true) : J$.T(6630185, function (func, string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6630153, arguments.callee, this, arguments);
                            arguments = J$.N(6630161, 'arguments', arguments, true, false, false);
                            func = J$.N(6630169, 'func', func, true, false, false);
                            string = J$.N(6630177, 'string', string, true, false, false);
                            return J$.Rt(6630145, J$.F(6630137, J$.R(6630057, 'defineProperty', defineProperty, false, true), false)(J$.R(6630065, 'func', func, false, false), J$.T(6630073, 'toString', 21, false), J$.T(6630129, {
                                'configurable': J$.T(6630081, true, 23, false),
                                'enumerable': J$.T(6630089, false, 23, false),
                                'value': J$.F(6630113, J$.R(6630097, 'constant', constant, false, true), false)(J$.R(6630105, 'string', string, false, false)),
                                'writable': J$.T(6630121, true, 23, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(6630265, J$e);
                        } finally {
                            if (J$.Fr(6630273))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), baseSetToString, false, true);
            J$.P(6630217, J$.I(typeof module === 'undefined' ? module = J$.R(6630201, 'module', undefined, true, true) : module = J$.R(6630201, 'module', module, true, true)), 'exports', J$.R(6630209, 'baseSetToString', baseSetToString, false, true));
        } catch (J$e) {
            J$.Ex(6630281, J$e);
        } finally {
            if (J$.Sr(6630289))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

