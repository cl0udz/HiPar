J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7323025, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/toFinite.js');
            function toFinite(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7322969, arguments.callee, this, arguments);
                            arguments = J$.N(7322977, 'arguments', arguments, true, false, false);
                            value = J$.N(7322985, 'value', value, true, false, false);
                            J$.N(7322993, 'sign', sign, false, false, false);
                            if (J$.C(389536, J$.U(709114, '!', J$.R(7322753, 'value', value, false, false)))) {
                                return J$.Rt(7322793, J$.C(389528, J$.B(709122, '===', J$.R(7322761, 'value', value, false, false), J$.T(7322769, 0, 22, false))) ? J$.R(7322777, 'value', value, false, false) : J$.T(7322785, 0, 22, false));
                            }
                            value = J$.W(7322825, 'value', J$.F(7322817, J$.R(7322801, 'toNumber', toNumber, false, true), false)(J$.R(7322809, 'value', value, false, false)), value, false, false);
                            if (J$.C(389560, J$.C(389544, J$.B(709130, '===', J$.R(7322833, 'value', value, false, false), J$.R(7322841, 'INFINITY', INFINITY, false, true))) ? J$._() : J$.B(709146, '===', J$.R(7322849, 'value', value, false, false), J$.U(709138, '-', J$.R(7322857, 'INFINITY', INFINITY, false, true))))) {
                                var sign = J$.W(7322897, 'sign', J$.C(389552, J$.B(709154, '<', J$.R(7322865, 'value', value, false, false), J$.T(7322873, 0, 22, false))) ? J$.U(709162, '-', J$.T(7322881, 1, 22, false)) : J$.T(7322889, 1, 22, false), sign, false, false);
                                return J$.Rt(7322921, J$.B(709170, '*', J$.R(7322905, 'sign', sign, false, false), J$.R(7322913, 'MAX_INTEGER', MAX_INTEGER, false, true)));
                            }
                            return J$.Rt(7322961, J$.C(389568, J$.B(709178, '===', J$.R(7322929, 'value', value, false, false), J$.R(7322937, 'value', value, false, false))) ? J$.R(7322945, 'value', value, false, false) : J$.T(7322953, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(7323073, J$e);
                        } finally {
                            if (J$.Fr(7323081))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7323033, 'toNumber', toNumber, false, false, false);
            J$.N(7323041, 'INFINITY', INFINITY, false, false, false);
            J$.N(7323049, 'MAX_INTEGER', MAX_INTEGER, false, false, false);
            toFinite = J$.N(7323065, 'toFinite', J$.T(7323057, toFinite, 12, false), true, false, false);
            var toNumber = J$.W(7322705, 'toNumber', J$.F(7322697, J$.I(typeof require === 'undefined' ? require = J$.R(7322681, 'require', undefined, true, true) : require = J$.R(7322681, 'require', require, true, true)), false)(J$.T(7322689, './toNumber', 21, false)), toNumber, false, true);
            var INFINITY = J$.W(7322737, 'INFINITY', J$.B(709106, '/', J$.T(7322713, 1, 22, false), J$.T(7322721, 0, 22, false)), INFINITY, false, true), MAX_INTEGER = J$.W(7322745, 'MAX_INTEGER', J$.T(7322729, 1.7976931348623157e+308, 22, false), MAX_INTEGER, false, true);
            J$.P(7323017, J$.I(typeof module === 'undefined' ? module = J$.R(7323001, 'module', undefined, true, true) : module = J$.R(7323001, 'module', module, true, true)), 'exports', J$.R(7323009, 'toFinite', toFinite, false, true));
        } catch (J$e) {
            J$.Ex(7323089, J$e);
        } finally {
            if (J$.Sr(7323097))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

