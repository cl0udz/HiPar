J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6649385, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_createAggregator.js');
            function createAggregator(setter, initializer) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6649329, arguments.callee, this, arguments);
                            arguments = J$.N(6649337, 'arguments', arguments, true, false, false);
                            setter = J$.N(6649345, 'setter', setter, true, false, false);
                            initializer = J$.N(6649353, 'initializer', initializer, true, false, false);
                            return J$.Rt(6649321, J$.T(6649313, function (collection, iteratee) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6649265, arguments.callee, this, arguments);
                                            arguments = J$.N(6649273, 'arguments', arguments, true, false, false);
                                            collection = J$.N(6649281, 'collection', collection, true, false, false);
                                            iteratee = J$.N(6649289, 'iteratee', iteratee, true, false, false);
                                            J$.N(6649297, 'func', func, false, false, false);
                                            J$.N(6649305, 'accumulator', accumulator, false, false, false);
                                            var func = J$.W(6649169, 'func', J$.C(349904, J$.F(6649113, J$.R(6649097, 'isArray', isArray, false, true), false)(J$.R(6649105, 'collection', collection, false, false))) ? J$.R(6649121, 'arrayAggregator', arrayAggregator, false, true) : J$.R(6649129, 'baseAggregator', baseAggregator, false, true), func, false, false), accumulator = J$.W(6649177, 'accumulator', J$.C(349912, J$.R(6649137, 'initializer', initializer, false, false)) ? J$.F(6649153, J$.R(6649145, 'initializer', initializer, false, false), false)() : J$.T(6649161, {}, 11, false), accumulator, false, false);
                                            return J$.Rt(6649257, J$.F(6649249, J$.R(6649185, 'func', func, false, false), false)(J$.R(6649193, 'collection', collection, false, false), J$.R(6649201, 'setter', setter, false, false), J$.F(6649233, J$.R(6649209, 'baseIteratee', baseIteratee, false, true), false)(J$.R(6649217, 'iteratee', iteratee, false, false), J$.T(6649225, 2, 22, false)), J$.R(6649241, 'accumulator', accumulator, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(6649441, J$e);
                                        } finally {
                                            if (J$.Fr(6649449))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(6649457, J$e);
                        } finally {
                            if (J$.Fr(6649465))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6649393, 'arrayAggregator', arrayAggregator, false, false, false);
            J$.N(6649401, 'baseAggregator', baseAggregator, false, false, false);
            J$.N(6649409, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(6649417, 'isArray', isArray, false, false, false);
            createAggregator = J$.N(6649433, 'createAggregator', J$.T(6649425, createAggregator, 12, false), true, false, false);
            var arrayAggregator = J$.W(6649065, 'arrayAggregator', J$.F(6648985, J$.I(typeof require === 'undefined' ? require = J$.R(6648969, 'require', undefined, true, true) : require = J$.R(6648969, 'require', require, true, true)), false)(J$.T(6648977, './_arrayAggregator', 21, false)), arrayAggregator, false, true), baseAggregator = J$.W(6649073, 'baseAggregator', J$.F(6649009, J$.I(typeof require === 'undefined' ? require = J$.R(6648993, 'require', undefined, true, true) : require = J$.R(6648993, 'require', require, true, true)), false)(J$.T(6649001, './_baseAggregator', 21, false)), baseAggregator, false, true), baseIteratee = J$.W(6649081, 'baseIteratee', J$.F(6649033, J$.I(typeof require === 'undefined' ? require = J$.R(6649017, 'require', undefined, true, true) : require = J$.R(6649017, 'require', require, true, true)), false)(J$.T(6649025, './_baseIteratee', 21, false)), baseIteratee, false, true), isArray = J$.W(6649089, 'isArray', J$.F(6649057, J$.I(typeof require === 'undefined' ? require = J$.R(6649041, 'require', undefined, true, true) : require = J$.R(6649041, 'require', require, true, true)), false)(J$.T(6649049, './isArray', 21, false)), isArray, false, true);
            J$.P(6649377, J$.I(typeof module === 'undefined' ? module = J$.R(6649361, 'module', undefined, true, true) : module = J$.R(6649361, 'module', module, true, true)), 'exports', J$.R(6649369, 'createAggregator', createAggregator, false, true));
        } catch (J$e) {
            J$.Ex(6649473, J$e);
        } finally {
            if (J$.Sr(6649481))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

