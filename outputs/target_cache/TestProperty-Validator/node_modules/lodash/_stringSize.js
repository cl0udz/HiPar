J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2999457, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_stringSize.js');
            function stringSize(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2999409, arguments.callee, this, arguments);
                            arguments = J$.N(2999417, 'arguments', arguments, true, false, false);
                            string = J$.N(2999425, 'string', string, true, false, false);
                            return J$.Rt(2999401, J$.C(160088, J$.F(2999345, J$.R(2999329, 'hasUnicode', hasUnicode, false, true), false)(J$.R(2999337, 'string', string, false, false))) ? J$.F(2999369, J$.R(2999353, 'unicodeSize', unicodeSize, false, true), false)(J$.R(2999361, 'string', string, false, false)) : J$.F(2999393, J$.R(2999377, 'asciiSize', asciiSize, false, true), false)(J$.R(2999385, 'string', string, false, false)));
                        } catch (J$e) {
                            J$.Ex(2999505, J$e);
                        } finally {
                            if (J$.Fr(2999513))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2999465, 'asciiSize', asciiSize, false, false, false);
            J$.N(2999473, 'hasUnicode', hasUnicode, false, false, false);
            J$.N(2999481, 'unicodeSize', unicodeSize, false, false, false);
            stringSize = J$.N(2999497, 'stringSize', J$.T(2999489, stringSize, 12, false), true, false, false);
            var asciiSize = J$.W(2999305, 'asciiSize', J$.F(2999249, J$.I(typeof require === 'undefined' ? require = J$.R(2999233, 'require', undefined, true, true) : require = J$.R(2999233, 'require', require, true, true)), false)(J$.T(2999241, './_asciiSize', 21, false)), asciiSize, false, true), hasUnicode = J$.W(2999313, 'hasUnicode', J$.F(2999273, J$.I(typeof require === 'undefined' ? require = J$.R(2999257, 'require', undefined, true, true) : require = J$.R(2999257, 'require', require, true, true)), false)(J$.T(2999265, './_hasUnicode', 21, false)), hasUnicode, false, true), unicodeSize = J$.W(2999321, 'unicodeSize', J$.F(2999297, J$.I(typeof require === 'undefined' ? require = J$.R(2999281, 'require', undefined, true, true) : require = J$.R(2999281, 'require', require, true, true)), false)(J$.T(2999289, './_unicodeSize', 21, false)), unicodeSize, false, true);
            J$.P(2999449, J$.I(typeof module === 'undefined' ? module = J$.R(2999433, 'module', undefined, true, true) : module = J$.R(2999433, 'module', module, true, true)), 'exports', J$.R(2999441, 'stringSize', stringSize, false, true));
        } catch (J$e) {
            J$.Ex(2999521, J$e);
        } finally {
            if (J$.Sr(2999529))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

