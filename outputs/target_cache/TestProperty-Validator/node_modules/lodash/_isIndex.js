J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2979433, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_isIndex.js');
            function isIndex(value, length) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2979369, arguments.callee, this, arguments);
                            arguments = J$.N(2979377, 'arguments', arguments, true, false, false);
                            value = J$.N(2979385, 'value', value, true, false, false);
                            length = J$.N(2979393, 'length', length, true, false, false);
                            J$.N(2979401, 'type', type, false, false, false);
                            var type = J$.W(2979193, 'type', J$.U(324090, 'typeof', J$.R(2979185, 'value', value, false, false)), type, false, false);
                            length = J$.W(2979233, 'length', J$.C(159056, J$.B(324098, '==', J$.R(2979201, 'length', length, false, false), J$.T(2979209, null, 25, false))) ? J$.R(2979217, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true) : J$.R(2979225, 'length', length, false, false), length, false, false);
                            return J$.Rt(2979361, J$.C(159104, J$.C(159080, J$.U(324114, '!', J$.U(324106, '!', J$.R(2979241, 'length', length, false, false)))) ? J$.C(159072, J$.B(324122, '==', J$.R(2979249, 'type', type, false, false), J$.T(2979257, 'number', 21, false))) ? J$._() : J$.C(159064, J$.B(324130, '!=', J$.R(2979265, 'type', type, false, false), J$.T(2979273, 'symbol', 21, false))) ? J$.M(2979297, J$.R(2979281, 'reIsUint', reIsUint, false, true), 'test', false)(J$.R(2979289, 'value', value, false, false)) : J$._() : J$._()) ? J$.C(159096, J$.C(159088, J$.B(324146, '>', J$.R(2979305, 'value', value, false, false), J$.U(324138, '-', J$.T(2979313, 1, 22, false)))) ? J$.B(324162, '==', J$.B(324154, '%', J$.R(2979321, 'value', value, false, false), J$.T(2979329, 1, 22, false)), J$.T(2979337, 0, 22, false)) : J$._()) ? J$.B(324170, '<', J$.R(2979345, 'value', value, false, false), J$.R(2979353, 'length', length, false, false)) : J$._() : J$._());
                        } catch (J$e) {
                            J$.Ex(2979473, J$e);
                        } finally {
                            if (J$.Fr(2979481))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2979441, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, false, false);
            J$.N(2979449, 'reIsUint', reIsUint, false, false, false);
            isIndex = J$.N(2979465, 'isIndex', J$.T(2979457, isIndex, 12, false), true, false, false);
            var MAX_SAFE_INTEGER = J$.W(2979161, 'MAX_SAFE_INTEGER', J$.T(2979153, 9007199254740991, 22, false), MAX_SAFE_INTEGER, false, true);
            var reIsUint = J$.W(2979177, 'reIsUint', J$.T(2979169, /^(?:0|[1-9]\d*)$/, 14, false), reIsUint, false, true);
            J$.P(2979425, J$.I(typeof module === 'undefined' ? module = J$.R(2979409, 'module', undefined, true, true) : module = J$.R(2979409, 'module', module, true, true)), 'exports', J$.R(2979417, 'isIndex', isIndex, false, true));
        } catch (J$e) {
            J$.Ex(2979489, J$e);
        } finally {
            if (J$.Sr(2979497))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

