J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3571281, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/merge.js');
            J$.N(3571289, 'baseMerge', baseMerge, false, false, false);
            J$.N(3571297, 'createAssigner', createAssigner, false, false, false);
            J$.N(3571305, 'merge', merge, false, false, false);
            var baseMerge = J$.W(3571129, 'baseMerge', J$.F(3571097, J$.I(typeof require === 'undefined' ? require = J$.R(3571081, 'require', undefined, true, true) : require = J$.R(3571081, 'require', require, true, true)), false)(J$.T(3571089, './_baseMerge', 21, false)), baseMerge, false, true), createAssigner = J$.W(3571137, 'createAssigner', J$.F(3571121, J$.I(typeof require === 'undefined' ? require = J$.R(3571105, 'require', undefined, true, true) : require = J$.R(3571105, 'require', require, true, true)), false)(J$.T(3571113, './_createAssigner', 21, false)), createAssigner, false, true);
            var merge = J$.W(3571249, 'merge', J$.F(3571241, J$.R(3571145, 'createAssigner', createAssigner, false, true), false)(J$.T(3571233, function (object, source, srcIndex) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3571193, arguments.callee, this, arguments);
                            arguments = J$.N(3571201, 'arguments', arguments, true, false, false);
                            object = J$.N(3571209, 'object', object, true, false, false);
                            source = J$.N(3571217, 'source', source, true, false, false);
                            srcIndex = J$.N(3571225, 'srcIndex', srcIndex, true, false, false);
                            J$.F(3571185, J$.R(3571153, 'baseMerge', baseMerge, false, true), false)(J$.R(3571161, 'object', object, false, false), J$.R(3571169, 'source', source, false, false), J$.R(3571177, 'srcIndex', srcIndex, false, false));
                        } catch (J$e) {
                            J$.Ex(3571313, J$e);
                        } finally {
                            if (J$.Fr(3571321))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), merge, false, true);
            J$.P(3571273, J$.I(typeof module === 'undefined' ? module = J$.R(3571257, 'module', undefined, true, true) : module = J$.R(3571257, 'module', module, true, true)), 'exports', J$.R(3571265, 'merge', merge, false, true));
        } catch (J$e) {
            J$.Ex(3571329, J$e);
        } finally {
            if (J$.Sr(3571337))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

