J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(3616897, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/transform.js');
            function transform(object, iteratee, accumulator) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(3616809, arguments.callee, this, arguments);
                            arguments = J$.N(3616817, 'arguments', arguments, true, false, false);
                            object = J$.N(3616825, 'object', object, true, false, false);
                            iteratee = J$.N(3616833, 'iteratee', iteratee, true, false, false);
                            accumulator = J$.N(3616841, 'accumulator', accumulator, true, false, false);
                            J$.N(3616849, 'isArr', isArr, false, false, false);
                            J$.N(3616857, 'isArrLike', isArrLike, false, false, false);
                            J$.N(3616865, 'Ctor', Ctor, false, false, false);
                            var isArr = J$.W(3616377, 'isArr', J$.F(3616313, J$.R(3616297, 'isArray', isArray, false, true), false)(J$.R(3616305, 'object', object, false, false)), isArr, false, false), isArrLike = J$.W(3616385, 'isArrLike', J$.C(196336, J$.C(196328, J$.R(3616321, 'isArr', isArr, false, false)) ? J$._() : J$.F(3616345, J$.R(3616329, 'isBuffer', isBuffer, false, true), false)(J$.R(3616337, 'object', object, false, false))) ? J$._() : J$.F(3616369, J$.R(3616353, 'isTypedArray', isTypedArray, false, true), false)(J$.R(3616361, 'object', object, false, false)), isArrLike, false, false);
                            iteratee = J$.W(3616425, 'iteratee', J$.F(3616417, J$.R(3616393, 'baseIteratee', baseIteratee, false, true), false)(J$.R(3616401, 'iteratee', iteratee, false, false), J$.T(3616409, 4, 22, false)), iteratee, false, false);
                            if (J$.C(196384, J$.B(366562, '==', J$.R(3616433, 'accumulator', accumulator, false, false), J$.T(3616441, null, 25, false)))) {
                                var Ctor = J$.W(3616473, 'Ctor', J$.C(196344, J$.R(3616449, 'object', object, false, false)) ? J$.G(3616465, J$.R(3616457, 'object', object, false, false), 'constructor') : J$._(), Ctor, false, false);
                                if (J$.C(196376, J$.R(3616481, 'isArrLike', isArrLike, false, false))) {
                                    accumulator = J$.W(3616521, 'accumulator', J$.C(196352, J$.R(3616489, 'isArr', isArr, false, false)) ? J$.F(3616505, J$.R(3616497, 'Ctor', Ctor, false, false), true)() : J$.T(3616513, [], 10, false), accumulator, false, false);
                                } else if (J$.C(196368, J$.F(3616545, J$.R(3616529, 'isObject', isObject, false, true), false)(J$.R(3616537, 'object', object, false, false)))) {
                                    accumulator = J$.W(3616625, 'accumulator', J$.C(196360, J$.F(3616569, J$.R(3616553, 'isFunction', isFunction, false, true), false)(J$.R(3616561, 'Ctor', Ctor, false, false))) ? J$.F(3616609, J$.R(3616577, 'baseCreate', baseCreate, false, true), false)(J$.F(3616601, J$.R(3616585, 'getPrototype', getPrototype, false, true), false)(J$.R(3616593, 'object', object, false, false))) : J$.T(3616617, {}, 11, false), accumulator, false, false);
                                } else {
                                    accumulator = J$.W(3616641, 'accumulator', J$.T(3616633, {}, 11, false), accumulator, false, false);
                                }
                            }
                            J$.F(3616785, J$.C(196392, J$.R(3616649, 'isArrLike', isArrLike, false, false)) ? J$.R(3616657, 'arrayEach', arrayEach, false, true) : J$.R(3616665, 'baseForOwn', baseForOwn, false, true), false)(J$.R(3616673, 'object', object, false, false), J$.T(3616777, function (value, index, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(3616737, arguments.callee, this, arguments);
                                            arguments = J$.N(3616745, 'arguments', arguments, true, false, false);
                                            value = J$.N(3616753, 'value', value, true, false, false);
                                            index = J$.N(3616761, 'index', index, true, false, false);
                                            object = J$.N(3616769, 'object', object, true, false, false);
                                            return J$.Rt(3616729, J$.F(3616721, J$.R(3616681, 'iteratee', iteratee, false, false), false)(J$.R(3616689, 'accumulator', accumulator, false, false), J$.R(3616697, 'value', value, false, false), J$.R(3616705, 'index', index, false, false), J$.R(3616713, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(3617001, J$e);
                                        } finally {
                                            if (J$.Fr(3617009))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(3616801, J$.R(3616793, 'accumulator', accumulator, false, false));
                        } catch (J$e) {
                            J$.Ex(3617017, J$e);
                        } finally {
                            if (J$.Fr(3617025))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3616905, 'arrayEach', arrayEach, false, false, false);
            J$.N(3616913, 'baseCreate', baseCreate, false, false, false);
            J$.N(3616921, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(3616929, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(3616937, 'getPrototype', getPrototype, false, false, false);
            J$.N(3616945, 'isArray', isArray, false, false, false);
            J$.N(3616953, 'isBuffer', isBuffer, false, false, false);
            J$.N(3616961, 'isFunction', isFunction, false, false, false);
            J$.N(3616969, 'isObject', isObject, false, false, false);
            J$.N(3616977, 'isTypedArray', isTypedArray, false, false, false);
            transform = J$.N(3616993, 'transform', J$.T(3616985, transform, 12, false), true, false, false);
            var arrayEach = J$.W(3616217, 'arrayEach', J$.F(3615993, J$.I(typeof require === 'undefined' ? require = J$.R(3615977, 'require', undefined, true, true) : require = J$.R(3615977, 'require', require, true, true)), false)(J$.T(3615985, './_arrayEach', 21, false)), arrayEach, false, true), baseCreate = J$.W(3616225, 'baseCreate', J$.F(3616017, J$.I(typeof require === 'undefined' ? require = J$.R(3616001, 'require', undefined, true, true) : require = J$.R(3616001, 'require', require, true, true)), false)(J$.T(3616009, './_baseCreate', 21, false)), baseCreate, false, true), baseForOwn = J$.W(3616233, 'baseForOwn', J$.F(3616041, J$.I(typeof require === 'undefined' ? require = J$.R(3616025, 'require', undefined, true, true) : require = J$.R(3616025, 'require', require, true, true)), false)(J$.T(3616033, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(3616241, 'baseIteratee', J$.F(3616065, J$.I(typeof require === 'undefined' ? require = J$.R(3616049, 'require', undefined, true, true) : require = J$.R(3616049, 'require', require, true, true)), false)(J$.T(3616057, './_baseIteratee', 21, false)), baseIteratee, false, true), getPrototype = J$.W(3616249, 'getPrototype', J$.F(3616089, J$.I(typeof require === 'undefined' ? require = J$.R(3616073, 'require', undefined, true, true) : require = J$.R(3616073, 'require', require, true, true)), false)(J$.T(3616081, './_getPrototype', 21, false)), getPrototype, false, true), isArray = J$.W(3616257, 'isArray', J$.F(3616113, J$.I(typeof require === 'undefined' ? require = J$.R(3616097, 'require', undefined, true, true) : require = J$.R(3616097, 'require', require, true, true)), false)(J$.T(3616105, './isArray', 21, false)), isArray, false, true), isBuffer = J$.W(3616265, 'isBuffer', J$.F(3616137, J$.I(typeof require === 'undefined' ? require = J$.R(3616121, 'require', undefined, true, true) : require = J$.R(3616121, 'require', require, true, true)), false)(J$.T(3616129, './isBuffer', 21, false)), isBuffer, false, true), isFunction = J$.W(3616273, 'isFunction', J$.F(3616161, J$.I(typeof require === 'undefined' ? require = J$.R(3616145, 'require', undefined, true, true) : require = J$.R(3616145, 'require', require, true, true)), false)(J$.T(3616153, './isFunction', 21, false)), isFunction, false, true), isObject = J$.W(3616281, 'isObject', J$.F(3616185, J$.I(typeof require === 'undefined' ? require = J$.R(3616169, 'require', undefined, true, true) : require = J$.R(3616169, 'require', require, true, true)), false)(J$.T(3616177, './isObject', 21, false)), isObject, false, true), isTypedArray = J$.W(3616289, 'isTypedArray', J$.F(3616209, J$.I(typeof require === 'undefined' ? require = J$.R(3616193, 'require', undefined, true, true) : require = J$.R(3616193, 'require', require, true, true)), false)(J$.T(3616201, './isTypedArray', 21, false)), isTypedArray, false, true);
            J$.P(3616889, J$.I(typeof module === 'undefined' ? module = J$.R(3616873, 'module', undefined, true, true) : module = J$.R(3616873, 'module', module, true, true)), 'exports', J$.R(3616881, 'transform', transform, false, true));
        } catch (J$e) {
            J$.Ex(3617033, J$e);
        } finally {
            if (J$.Sr(3617041))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

