J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2686529, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/transform.js');
            function transform(object, iteratee, accumulator) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2686441, arguments.callee, this, arguments);
                            arguments = J$.N(2686449, 'arguments', arguments, true, false, false);
                            object = J$.N(2686457, 'object', object, true, false, false);
                            iteratee = J$.N(2686465, 'iteratee', iteratee, true, false, false);
                            accumulator = J$.N(2686473, 'accumulator', accumulator, true, false, false);
                            J$.N(2686481, 'isArr', isArr, false, false, false);
                            J$.N(2686489, 'isArrLike', isArrLike, false, false, false);
                            J$.N(2686497, 'Ctor', Ctor, false, false, false);
                            var isArr = J$.W(2686009, 'isArr', J$.F(2685945, J$.R(2685929, 'isArray', isArray, false, true), false)(J$.R(2685937, 'object', object, false, false)), isArr, false, false), isArrLike = J$.W(2686017, 'isArrLike', J$.C(139216, J$.C(139208, J$.R(2685953, 'isArr', isArr, false, false)) ? J$._() : J$.F(2685977, J$.R(2685961, 'isBuffer', isBuffer, false, true), false)(J$.R(2685969, 'object', object, false, false))) ? J$._() : J$.F(2686001, J$.R(2685985, 'isTypedArray', isTypedArray, false, true), false)(J$.R(2685993, 'object', object, false, false)), isArrLike, false, false);
                            iteratee = J$.W(2686057, 'iteratee', J$.F(2686049, J$.R(2686025, 'baseIteratee', baseIteratee, false, true), false)(J$.R(2686033, 'iteratee', iteratee, false, false), J$.T(2686041, 4, 22, false)), iteratee, false, false);
                            if (J$.C(139264, J$.B(192786, '==', J$.R(2686065, 'accumulator', accumulator, false, false), J$.T(2686073, null, 25, false)))) {
                                var Ctor = J$.W(2686105, 'Ctor', J$.C(139224, J$.R(2686081, 'object', object, false, false)) ? J$.G(2686097, J$.R(2686089, 'object', object, false, false), 'constructor') : J$._(), Ctor, false, false);
                                if (J$.C(139256, J$.R(2686113, 'isArrLike', isArrLike, false, false))) {
                                    accumulator = J$.W(2686153, 'accumulator', J$.C(139232, J$.R(2686121, 'isArr', isArr, false, false)) ? J$.F(2686137, J$.R(2686129, 'Ctor', Ctor, false, false), true)() : J$.T(2686145, [], 10, false), accumulator, false, false);
                                } else if (J$.C(139248, J$.F(2686177, J$.R(2686161, 'isObject', isObject, false, true), false)(J$.R(2686169, 'object', object, false, false)))) {
                                    accumulator = J$.W(2686257, 'accumulator', J$.C(139240, J$.F(2686201, J$.R(2686185, 'isFunction', isFunction, false, true), false)(J$.R(2686193, 'Ctor', Ctor, false, false))) ? J$.F(2686241, J$.R(2686209, 'baseCreate', baseCreate, false, true), false)(J$.F(2686233, J$.R(2686217, 'getPrototype', getPrototype, false, true), false)(J$.R(2686225, 'object', object, false, false))) : J$.T(2686249, {}, 11, false), accumulator, false, false);
                                } else {
                                    accumulator = J$.W(2686273, 'accumulator', J$.T(2686265, {}, 11, false), accumulator, false, false);
                                }
                            }
                            J$.F(2686417, J$.C(139272, J$.R(2686281, 'isArrLike', isArrLike, false, false)) ? J$.R(2686289, 'arrayEach', arrayEach, false, true) : J$.R(2686297, 'baseForOwn', baseForOwn, false, true), false)(J$.R(2686305, 'object', object, false, false), J$.T(2686409, function (value, index, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2686369, arguments.callee, this, arguments);
                                            arguments = J$.N(2686377, 'arguments', arguments, true, false, false);
                                            value = J$.N(2686385, 'value', value, true, false, false);
                                            index = J$.N(2686393, 'index', index, true, false, false);
                                            object = J$.N(2686401, 'object', object, true, false, false);
                                            return J$.Rt(2686361, J$.F(2686353, J$.R(2686313, 'iteratee', iteratee, false, false), false)(J$.R(2686321, 'accumulator', accumulator, false, false), J$.R(2686329, 'value', value, false, false), J$.R(2686337, 'index', index, false, false), J$.R(2686345, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2686633, J$e);
                                        } finally {
                                            if (J$.Fr(2686641))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2686433, J$.R(2686425, 'accumulator', accumulator, false, false));
                        } catch (J$e) {
                            J$.Ex(2686649, J$e);
                        } finally {
                            if (J$.Fr(2686657))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2686537, 'arrayEach', arrayEach, false, false, false);
            J$.N(2686545, 'baseCreate', baseCreate, false, false, false);
            J$.N(2686553, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(2686561, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(2686569, 'getPrototype', getPrototype, false, false, false);
            J$.N(2686577, 'isArray', isArray, false, false, false);
            J$.N(2686585, 'isBuffer', isBuffer, false, false, false);
            J$.N(2686593, 'isFunction', isFunction, false, false, false);
            J$.N(2686601, 'isObject', isObject, false, false, false);
            J$.N(2686609, 'isTypedArray', isTypedArray, false, false, false);
            transform = J$.N(2686625, 'transform', J$.T(2686617, transform, 12, false), true, false, false);
            var arrayEach = J$.W(2685849, 'arrayEach', J$.F(2685625, J$.I(typeof require === 'undefined' ? require = J$.R(2685609, 'require', undefined, true, true) : require = J$.R(2685609, 'require', require, true, true)), false)(J$.T(2685617, './_arrayEach', 21, false)), arrayEach, false, true), baseCreate = J$.W(2685857, 'baseCreate', J$.F(2685649, J$.I(typeof require === 'undefined' ? require = J$.R(2685633, 'require', undefined, true, true) : require = J$.R(2685633, 'require', require, true, true)), false)(J$.T(2685641, './_baseCreate', 21, false)), baseCreate, false, true), baseForOwn = J$.W(2685865, 'baseForOwn', J$.F(2685673, J$.I(typeof require === 'undefined' ? require = J$.R(2685657, 'require', undefined, true, true) : require = J$.R(2685657, 'require', require, true, true)), false)(J$.T(2685665, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(2685873, 'baseIteratee', J$.F(2685697, J$.I(typeof require === 'undefined' ? require = J$.R(2685681, 'require', undefined, true, true) : require = J$.R(2685681, 'require', require, true, true)), false)(J$.T(2685689, './_baseIteratee', 21, false)), baseIteratee, false, true), getPrototype = J$.W(2685881, 'getPrototype', J$.F(2685721, J$.I(typeof require === 'undefined' ? require = J$.R(2685705, 'require', undefined, true, true) : require = J$.R(2685705, 'require', require, true, true)), false)(J$.T(2685713, './_getPrototype', 21, false)), getPrototype, false, true), isArray = J$.W(2685889, 'isArray', J$.F(2685745, J$.I(typeof require === 'undefined' ? require = J$.R(2685729, 'require', undefined, true, true) : require = J$.R(2685729, 'require', require, true, true)), false)(J$.T(2685737, './isArray', 21, false)), isArray, false, true), isBuffer = J$.W(2685897, 'isBuffer', J$.F(2685769, J$.I(typeof require === 'undefined' ? require = J$.R(2685753, 'require', undefined, true, true) : require = J$.R(2685753, 'require', require, true, true)), false)(J$.T(2685761, './isBuffer', 21, false)), isBuffer, false, true), isFunction = J$.W(2685905, 'isFunction', J$.F(2685793, J$.I(typeof require === 'undefined' ? require = J$.R(2685777, 'require', undefined, true, true) : require = J$.R(2685777, 'require', require, true, true)), false)(J$.T(2685785, './isFunction', 21, false)), isFunction, false, true), isObject = J$.W(2685913, 'isObject', J$.F(2685817, J$.I(typeof require === 'undefined' ? require = J$.R(2685801, 'require', undefined, true, true) : require = J$.R(2685801, 'require', require, true, true)), false)(J$.T(2685809, './isObject', 21, false)), isObject, false, true), isTypedArray = J$.W(2685921, 'isTypedArray', J$.F(2685841, J$.I(typeof require === 'undefined' ? require = J$.R(2685825, 'require', undefined, true, true) : require = J$.R(2685825, 'require', require, true, true)), false)(J$.T(2685833, './isTypedArray', 21, false)), isTypedArray, false, true);
            J$.P(2686521, J$.I(typeof module === 'undefined' ? module = J$.R(2686505, 'module', undefined, true, true) : module = J$.R(2686505, 'module', module, true, true)), 'exports', J$.R(2686513, 'transform', transform, false, true));
        } catch (J$e) {
            J$.Ex(2686665, J$e);
        } finally {
            if (J$.Sr(2686673))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

