J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7327609, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/transform.js');
            function transform(object, iteratee, accumulator) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7327521, arguments.callee, this, arguments);
                            arguments = J$.N(7327529, 'arguments', arguments, true, false, false);
                            object = J$.N(7327537, 'object', object, true, false, false);
                            iteratee = J$.N(7327545, 'iteratee', iteratee, true, false, false);
                            accumulator = J$.N(7327553, 'accumulator', accumulator, true, false, false);
                            J$.N(7327561, 'isArr', isArr, false, false, false);
                            J$.N(7327569, 'isArrLike', isArrLike, false, false, false);
                            J$.N(7327577, 'Ctor', Ctor, false, false, false);
                            var isArr = J$.W(7327089, 'isArr', J$.F(7327025, J$.R(7327009, 'isArray', isArray, false, true), false)(J$.R(7327017, 'object', object, false, false)), isArr, false, false), isArrLike = J$.W(7327097, 'isArrLike', J$.C(389736, J$.C(389728, J$.R(7327033, 'isArr', isArr, false, false)) ? J$._() : J$.F(7327057, J$.R(7327041, 'isBuffer', isBuffer, false, true), false)(J$.R(7327049, 'object', object, false, false))) ? J$._() : J$.F(7327081, J$.R(7327065, 'isTypedArray', isTypedArray, false, true), false)(J$.R(7327073, 'object', object, false, false)), isArrLike, false, false);
                            iteratee = J$.W(7327137, 'iteratee', J$.F(7327129, J$.R(7327105, 'baseIteratee', baseIteratee, false, true), false)(J$.R(7327113, 'iteratee', iteratee, false, false), J$.T(7327121, 4, 22, false)), iteratee, false, false);
                            if (J$.C(389784, J$.B(709322, '==', J$.R(7327145, 'accumulator', accumulator, false, false), J$.T(7327153, null, 25, false)))) {
                                var Ctor = J$.W(7327185, 'Ctor', J$.C(389744, J$.R(7327161, 'object', object, false, false)) ? J$.G(7327177, J$.R(7327169, 'object', object, false, false), 'constructor') : J$._(), Ctor, false, false);
                                if (J$.C(389776, J$.R(7327193, 'isArrLike', isArrLike, false, false))) {
                                    accumulator = J$.W(7327233, 'accumulator', J$.C(389752, J$.R(7327201, 'isArr', isArr, false, false)) ? J$.F(7327217, J$.R(7327209, 'Ctor', Ctor, false, false), true)() : J$.T(7327225, [], 10, false), accumulator, false, false);
                                } else if (J$.C(389768, J$.F(7327257, J$.R(7327241, 'isObject', isObject, false, true), false)(J$.R(7327249, 'object', object, false, false)))) {
                                    accumulator = J$.W(7327337, 'accumulator', J$.C(389760, J$.F(7327281, J$.R(7327265, 'isFunction', isFunction, false, true), false)(J$.R(7327273, 'Ctor', Ctor, false, false))) ? J$.F(7327321, J$.R(7327289, 'baseCreate', baseCreate, false, true), false)(J$.F(7327313, J$.R(7327297, 'getPrototype', getPrototype, false, true), false)(J$.R(7327305, 'object', object, false, false))) : J$.T(7327329, {}, 11, false), accumulator, false, false);
                                } else {
                                    accumulator = J$.W(7327353, 'accumulator', J$.T(7327345, {}, 11, false), accumulator, false, false);
                                }
                            }
                            J$.F(7327497, J$.C(389792, J$.R(7327361, 'isArrLike', isArrLike, false, false)) ? J$.R(7327369, 'arrayEach', arrayEach, false, true) : J$.R(7327377, 'baseForOwn', baseForOwn, false, true), false)(J$.R(7327385, 'object', object, false, false), J$.T(7327489, function (value, index, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7327449, arguments.callee, this, arguments);
                                            arguments = J$.N(7327457, 'arguments', arguments, true, false, false);
                                            value = J$.N(7327465, 'value', value, true, false, false);
                                            index = J$.N(7327473, 'index', index, true, false, false);
                                            object = J$.N(7327481, 'object', object, true, false, false);
                                            return J$.Rt(7327441, J$.F(7327433, J$.R(7327393, 'iteratee', iteratee, false, false), false)(J$.R(7327401, 'accumulator', accumulator, false, false), J$.R(7327409, 'value', value, false, false), J$.R(7327417, 'index', index, false, false), J$.R(7327425, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(7327713, J$e);
                                        } finally {
                                            if (J$.Fr(7327721))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7327513, J$.R(7327505, 'accumulator', accumulator, false, false));
                        } catch (J$e) {
                            J$.Ex(7327729, J$e);
                        } finally {
                            if (J$.Fr(7327737))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7327617, 'arrayEach', arrayEach, false, false, false);
            J$.N(7327625, 'baseCreate', baseCreate, false, false, false);
            J$.N(7327633, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(7327641, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(7327649, 'getPrototype', getPrototype, false, false, false);
            J$.N(7327657, 'isArray', isArray, false, false, false);
            J$.N(7327665, 'isBuffer', isBuffer, false, false, false);
            J$.N(7327673, 'isFunction', isFunction, false, false, false);
            J$.N(7327681, 'isObject', isObject, false, false, false);
            J$.N(7327689, 'isTypedArray', isTypedArray, false, false, false);
            transform = J$.N(7327705, 'transform', J$.T(7327697, transform, 12, false), true, false, false);
            var arrayEach = J$.W(7326929, 'arrayEach', J$.F(7326705, J$.I(typeof require === 'undefined' ? require = J$.R(7326689, 'require', undefined, true, true) : require = J$.R(7326689, 'require', require, true, true)), false)(J$.T(7326697, './_arrayEach', 21, false)), arrayEach, false, true), baseCreate = J$.W(7326937, 'baseCreate', J$.F(7326729, J$.I(typeof require === 'undefined' ? require = J$.R(7326713, 'require', undefined, true, true) : require = J$.R(7326713, 'require', require, true, true)), false)(J$.T(7326721, './_baseCreate', 21, false)), baseCreate, false, true), baseForOwn = J$.W(7326945, 'baseForOwn', J$.F(7326753, J$.I(typeof require === 'undefined' ? require = J$.R(7326737, 'require', undefined, true, true) : require = J$.R(7326737, 'require', require, true, true)), false)(J$.T(7326745, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(7326953, 'baseIteratee', J$.F(7326777, J$.I(typeof require === 'undefined' ? require = J$.R(7326761, 'require', undefined, true, true) : require = J$.R(7326761, 'require', require, true, true)), false)(J$.T(7326769, './_baseIteratee', 21, false)), baseIteratee, false, true), getPrototype = J$.W(7326961, 'getPrototype', J$.F(7326801, J$.I(typeof require === 'undefined' ? require = J$.R(7326785, 'require', undefined, true, true) : require = J$.R(7326785, 'require', require, true, true)), false)(J$.T(7326793, './_getPrototype', 21, false)), getPrototype, false, true), isArray = J$.W(7326969, 'isArray', J$.F(7326825, J$.I(typeof require === 'undefined' ? require = J$.R(7326809, 'require', undefined, true, true) : require = J$.R(7326809, 'require', require, true, true)), false)(J$.T(7326817, './isArray', 21, false)), isArray, false, true), isBuffer = J$.W(7326977, 'isBuffer', J$.F(7326849, J$.I(typeof require === 'undefined' ? require = J$.R(7326833, 'require', undefined, true, true) : require = J$.R(7326833, 'require', require, true, true)), false)(J$.T(7326841, './isBuffer', 21, false)), isBuffer, false, true), isFunction = J$.W(7326985, 'isFunction', J$.F(7326873, J$.I(typeof require === 'undefined' ? require = J$.R(7326857, 'require', undefined, true, true) : require = J$.R(7326857, 'require', require, true, true)), false)(J$.T(7326865, './isFunction', 21, false)), isFunction, false, true), isObject = J$.W(7326993, 'isObject', J$.F(7326897, J$.I(typeof require === 'undefined' ? require = J$.R(7326881, 'require', undefined, true, true) : require = J$.R(7326881, 'require', require, true, true)), false)(J$.T(7326889, './isObject', 21, false)), isObject, false, true), isTypedArray = J$.W(7327001, 'isTypedArray', J$.F(7326921, J$.I(typeof require === 'undefined' ? require = J$.R(7326905, 'require', undefined, true, true) : require = J$.R(7326905, 'require', require, true, true)), false)(J$.T(7326913, './isTypedArray', 21, false)), isTypedArray, false, true);
            J$.P(7327601, J$.I(typeof module === 'undefined' ? module = J$.R(7327585, 'module', undefined, true, true) : module = J$.R(7327585, 'module', module, true, true)), 'exports', J$.R(7327593, 'transform', transform, false, true));
        } catch (J$e) {
            J$.Ex(7327745, J$e);
        } finally {
            if (J$.Sr(7327753))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

