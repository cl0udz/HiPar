J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6919265, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isLength.js');
            function isLength(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6919217, arguments.callee, this, arguments);
                            arguments = J$.N(6919225, 'arguments', arguments, true, false, false);
                            value = J$.N(6919233, 'value', value, true, false, false);
                            return J$.Rt(6919209, J$.C(361128, J$.C(361120, J$.C(361112, J$.B(678418, '==', J$.U(678410, 'typeof', J$.R(6919137, 'value', value, false, false)), J$.T(6919145, 'number', 21, false))) ? J$.B(678434, '>', J$.R(6919153, 'value', value, false, false), J$.U(678426, '-', J$.T(6919161, 1, 22, false))) : J$._()) ? J$.B(678450, '==', J$.B(678442, '%', J$.R(6919169, 'value', value, false, false), J$.T(6919177, 1, 22, false)), J$.T(6919185, 0, 22, false)) : J$._()) ? J$.B(678458, '<=', J$.R(6919193, 'value', value, false, false), J$.R(6919201, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)) : J$._());
                        } catch (J$e) {
                            J$.Ex(6919297, J$e);
                        } finally {
                            if (J$.Fr(6919305))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6919273, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, false, false);
            isLength = J$.N(6919289, 'isLength', J$.T(6919281, isLength, 12, false), true, false, false);
            var MAX_SAFE_INTEGER = J$.W(6919129, 'MAX_SAFE_INTEGER', J$.T(6919121, 9007199254740991, 22, false), MAX_SAFE_INTEGER, false, true);
            J$.P(6919257, J$.I(typeof module === 'undefined' ? module = J$.R(6919241, 'module', undefined, true, true) : module = J$.R(6919241, 'module', module, true, true)), 'exports', J$.R(6919249, 'isLength', isLength, false, true));
        } catch (J$e) {
            J$.Ex(6919313, J$e);
        } finally {
            if (J$.Sr(6919321))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

