J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6921473, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isObjectLike.js');
            function isObjectLike(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6921425, arguments.callee, this, arguments);
                            arguments = J$.N(6921433, 'arguments', arguments, true, false, false);
                            value = J$.N(6921441, 'value', value, true, false, false);
                            return J$.Rt(6921417, J$.C(361216, J$.B(678578, '!=', J$.R(6921385, 'value', value, false, false), J$.T(6921393, null, 25, false))) ? J$.B(678594, '==', J$.U(678586, 'typeof', J$.R(6921401, 'value', value, false, false)), J$.T(6921409, 'object', 21, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(6921497, J$e);
                        } finally {
                            if (J$.Fr(6921505))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            isObjectLike = J$.N(6921489, 'isObjectLike', J$.T(6921481, isObjectLike, 12, false), true, false, false);
            J$.P(6921465, J$.I(typeof module === 'undefined' ? module = J$.R(6921449, 'module', undefined, true, true) : module = J$.R(6921449, 'module', module, true, true)), 'exports', J$.R(6921457, 'isObjectLike', isObjectLike, false, true));
        } catch (J$e) {
            J$.Ex(6921513, J$e);
        } finally {
            if (J$.Sr(6921521))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

