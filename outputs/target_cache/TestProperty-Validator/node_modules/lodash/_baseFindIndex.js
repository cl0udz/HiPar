J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6601025, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseFindIndex.js');
            function baseFindIndex(array, predicate, fromIndex, fromRight) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6600937, arguments.callee, this, arguments);
                            arguments = J$.N(6600945, 'arguments', arguments, true, false, false);
                            array = J$.N(6600953, 'array', array, true, false, false);
                            predicate = J$.N(6600961, 'predicate', predicate, true, false, false);
                            fromIndex = J$.N(6600969, 'fromIndex', fromIndex, true, false, false);
                            fromRight = J$.N(6600977, 'fromRight', fromRight, true, false, false);
                            J$.N(6600985, 'length', length, false, false, false);
                            J$.N(6600993, 'index', index, false, false, false);
                            var length = J$.W(6600785, 'length', J$.G(6600745, J$.R(6600737, 'array', array, false, false), 'length'), length, false, false), index = J$.W(6600793, 'index', J$.B(660826, '+', J$.R(6600753, 'fromIndex', fromIndex, false, false), J$.C(347016, J$.R(6600761, 'fromRight', fromRight, false, false)) ? J$.T(6600769, 1, 22, false) : J$.U(660818, '-', J$.T(6600777, 1, 22, false))), index, false, false);
                            while (J$.C(347040, J$.C(347024, J$.R(6600801, 'fromRight', fromRight, false, false)) ? J$.B(660850, '+', index = J$.W(6600817, 'index', J$.B(660842, '-', J$.U(660834, '+', J$.R(6600809, 'index', index, false, false)), 1), index, false, false), 1) : J$.B(660874, '<', index = J$.W(6600833, 'index', J$.B(660866, '+', J$.U(660858, '+', J$.R(6600825, 'index', index, false, false)), 1), index, false, false), J$.R(6600841, 'length', length, false, false)))) {
                                if (J$.C(347032, J$.F(6600897, J$.R(6600849, 'predicate', predicate, false, false), false)(J$.G(6600873, J$.R(6600857, 'array', array, false, false), J$.R(6600865, 'index', index, false, false)), J$.R(6600881, 'index', index, false, false), J$.R(6600889, 'array', array, false, false)))) {
                                    return J$.Rt(6600913, J$.R(6600905, 'index', index, false, false));
                                }
                            }
                            return J$.Rt(6600929, J$.U(660882, '-', J$.T(6600921, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(6601049, J$e);
                        } finally {
                            if (J$.Fr(6601057))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            baseFindIndex = J$.N(6601041, 'baseFindIndex', J$.T(6601033, baseFindIndex, 12, false), true, false, false);
            J$.P(6601017, J$.I(typeof module === 'undefined' ? module = J$.R(6601001, 'module', undefined, true, true) : module = J$.R(6601001, 'module', module, true, true)), 'exports', J$.R(6601009, 'baseFindIndex', baseFindIndex, false, true));
        } catch (J$e) {
            J$.Ex(6601065, J$e);
        } finally {
            if (J$.Sr(6601073))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

