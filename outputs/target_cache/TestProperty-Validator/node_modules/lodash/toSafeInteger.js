J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3615513, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/toSafeInteger.js');
            function toSafeInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3615465, arguments.callee, this, arguments);
                            arguments = J$.N(3615473, 'arguments', arguments, true, false, false);
                            value = J$.N(3615481, 'value', value, true, false, false);
                            return J$.Rt(3615457, J$.C(196312, J$.R(3615361, 'value', value, false, false)) ? J$.F(3615417, J$.R(3615369, 'baseClamp', baseClamp, false, true), false)(J$.F(3615393, J$.R(3615377, 'toInteger', toInteger, false, true), false)(J$.R(3615385, 'value', value, false, false)), J$.U(366538, '-', J$.R(3615401, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)), J$.R(3615409, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)) : J$.C(196304, J$.B(366546, '===', J$.R(3615425, 'value', value, false, false), J$.T(3615433, 0, 22, false))) ? J$.R(3615441, 'value', value, false, false) : J$.T(3615449, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(3615561, J$e);
                        } finally {
                            if (J$.Fr(3615569))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3615521, 'baseClamp', baseClamp, false, false, false);
            J$.N(3615529, 'toInteger', toInteger, false, false, false);
            J$.N(3615537, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, false, false);
            toSafeInteger = J$.N(3615553, 'toSafeInteger', J$.T(3615545, toSafeInteger, 12, false), true, false, false);
            var baseClamp = J$.W(3615329, 'baseClamp', J$.F(3615297, J$.I(typeof require === 'undefined' ? require = J$.R(3615281, 'require', undefined, true, true) : require = J$.R(3615281, 'require', require, true, true)), false)(J$.T(3615289, './_baseClamp', 21, false)), baseClamp, false, true), toInteger = J$.W(3615337, 'toInteger', J$.F(3615321, J$.I(typeof require === 'undefined' ? require = J$.R(3615305, 'require', undefined, true, true) : require = J$.R(3615305, 'require', require, true, true)), false)(J$.T(3615313, './toInteger', 21, false)), toInteger, false, true);
            var MAX_SAFE_INTEGER = J$.W(3615353, 'MAX_SAFE_INTEGER', J$.T(3615345, 9007199254740991, 22, false), MAX_SAFE_INTEGER, false, true);
            J$.P(3615505, J$.I(typeof module === 'undefined' ? module = J$.R(3615489, 'module', undefined, true, true) : module = J$.R(3615489, 'module', module, true, true)), 'exports', J$.R(3615497, 'toSafeInteger', toSafeInteger, false, true));
        } catch (J$e) {
            J$.Ex(3615577, J$e);
        } finally {
            if (J$.Sr(3615585))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

