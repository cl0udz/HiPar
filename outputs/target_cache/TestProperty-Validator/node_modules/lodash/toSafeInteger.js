J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7326225, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/toSafeInteger.js');
            function toSafeInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7326177, arguments.callee, this, arguments);
                            arguments = J$.N(7326185, 'arguments', arguments, true, false, false);
                            value = J$.N(7326193, 'value', value, true, false, false);
                            return J$.Rt(7326169, J$.C(389712, J$.R(7326073, 'value', value, false, false)) ? J$.F(7326129, J$.R(7326081, 'baseClamp', baseClamp, false, true), false)(J$.F(7326105, J$.R(7326089, 'toInteger', toInteger, false, true), false)(J$.R(7326097, 'value', value, false, false)), J$.U(709298, '-', J$.R(7326113, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)), J$.R(7326121, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)) : J$.C(389704, J$.B(709306, '===', J$.R(7326137, 'value', value, false, false), J$.T(7326145, 0, 22, false))) ? J$.R(7326153, 'value', value, false, false) : J$.T(7326161, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(7326273, J$e);
                        } finally {
                            if (J$.Fr(7326281))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7326233, 'baseClamp', baseClamp, false, false, false);
            J$.N(7326241, 'toInteger', toInteger, false, false, false);
            J$.N(7326249, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, false, false);
            toSafeInteger = J$.N(7326265, 'toSafeInteger', J$.T(7326257, toSafeInteger, 12, false), true, false, false);
            var baseClamp = J$.W(7326041, 'baseClamp', J$.F(7326009, J$.I(typeof require === 'undefined' ? require = J$.R(7325993, 'require', undefined, true, true) : require = J$.R(7325993, 'require', require, true, true)), false)(J$.T(7326001, './_baseClamp', 21, false)), baseClamp, false, true), toInteger = J$.W(7326049, 'toInteger', J$.F(7326033, J$.I(typeof require === 'undefined' ? require = J$.R(7326017, 'require', undefined, true, true) : require = J$.R(7326017, 'require', require, true, true)), false)(J$.T(7326025, './toInteger', 21, false)), toInteger, false, true);
            var MAX_SAFE_INTEGER = J$.W(7326065, 'MAX_SAFE_INTEGER', J$.T(7326057, 9007199254740991, 22, false), MAX_SAFE_INTEGER, false, true);
            J$.P(7326217, J$.I(typeof module === 'undefined' ? module = J$.R(7326201, 'module', undefined, true, true) : module = J$.R(7326201, 'module', module, true, true)), 'exports', J$.R(7326209, 'toSafeInteger', toSafeInteger, false, true));
        } catch (J$e) {
            J$.Ex(7326289, J$e);
        } finally {
            if (J$.Sr(7326297))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

