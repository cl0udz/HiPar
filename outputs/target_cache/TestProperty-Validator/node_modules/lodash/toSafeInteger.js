J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2685145, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/toSafeInteger.js');
            function toSafeInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2685097, arguments.callee, this, arguments);
                            arguments = J$.N(2685105, 'arguments', arguments, true, false, false);
                            value = J$.N(2685113, 'value', value, true, false, false);
                            return J$.Rt(2685089, J$.C(139192, J$.R(2684993, 'value', value, false, false)) ? J$.F(2685049, J$.R(2685001, 'baseClamp', baseClamp, false, true), false)(J$.F(2685025, J$.R(2685009, 'toInteger', toInteger, false, true), false)(J$.R(2685017, 'value', value, false, false)), J$.U(192762, '-', J$.R(2685033, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)), J$.R(2685041, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)) : J$.C(139184, J$.B(192770, '===', J$.R(2685057, 'value', value, false, false), J$.T(2685065, 0, 22, false))) ? J$.R(2685073, 'value', value, false, false) : J$.T(2685081, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(2685193, J$e);
                        } finally {
                            if (J$.Fr(2685201))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2685153, 'baseClamp', baseClamp, false, false, false);
            J$.N(2685161, 'toInteger', toInteger, false, false, false);
            J$.N(2685169, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, false, false);
            toSafeInteger = J$.N(2685185, 'toSafeInteger', J$.T(2685177, toSafeInteger, 12, false), true, false, false);
            var baseClamp = J$.W(2684961, 'baseClamp', J$.F(2684929, J$.I(typeof require === 'undefined' ? require = J$.R(2684913, 'require', undefined, true, true) : require = J$.R(2684913, 'require', require, true, true)), false)(J$.T(2684921, './_baseClamp', 21, false)), baseClamp, false, true), toInteger = J$.W(2684969, 'toInteger', J$.F(2684953, J$.I(typeof require === 'undefined' ? require = J$.R(2684937, 'require', undefined, true, true) : require = J$.R(2684937, 'require', require, true, true)), false)(J$.T(2684945, './toInteger', 21, false)), toInteger, false, true);
            var MAX_SAFE_INTEGER = J$.W(2684985, 'MAX_SAFE_INTEGER', J$.T(2684977, 9007199254740991, 22, false), MAX_SAFE_INTEGER, false, true);
            J$.P(2685137, J$.I(typeof module === 'undefined' ? module = J$.R(2685121, 'module', undefined, true, true) : module = J$.R(2685121, 'module', module, true, true)), 'exports', J$.R(2685129, 'toSafeInteger', toSafeInteger, false, true));
        } catch (J$e) {
            J$.Ex(2685209, J$e);
        } finally {
            if (J$.Sr(2685217))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

