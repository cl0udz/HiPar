J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6601913, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseFlatten.js');
            function baseFlatten(array, depth, predicate, isStrict, result) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6601809, arguments.callee, this, arguments);
                            arguments = J$.N(6601817, 'arguments', arguments, true, false, false);
                            array = J$.N(6601825, 'array', array, true, false, false);
                            depth = J$.N(6601833, 'depth', depth, true, false, false);
                            predicate = J$.N(6601841, 'predicate', predicate, true, false, false);
                            isStrict = J$.N(6601849, 'isStrict', isStrict, true, false, false);
                            result = J$.N(6601857, 'result', result, true, false, false);
                            J$.N(6601865, 'index', index, false, false, false);
                            J$.N(6601873, 'length', length, false, false, false);
                            J$.N(6601881, 'value', value, false, false, false);
                            var index = J$.W(6601473, 'index', J$.U(660890, '-', J$.T(6601449, 1, 22, false)), index, false, false), length = J$.W(6601481, 'length', J$.G(6601465, J$.R(6601457, 'array', array, false, false), 'length'), length, false, false);
                            J$.C(347056, J$.R(6601489, 'predicate', predicate, false, false)) ? J$._() : predicate = J$.W(6601505, 'predicate', J$.R(6601497, 'isFlattenable', isFlattenable, false, true), predicate, false, false);
                            J$.C(347064, J$.R(6601513, 'result', result, false, false)) ? J$._() : result = J$.W(6601529, 'result', J$.T(6601521, [], 10, false), result, false, false);
                            while (J$.C(347104, J$.B(660914, '<', index = J$.W(6601545, 'index', J$.B(660906, '+', J$.U(660898, '+', J$.R(6601537, 'index', index, false, false)), 1), index, false, false), J$.R(6601553, 'length', length, false, false)))) {
                                var value = J$.W(6601585, 'value', J$.G(6601577, J$.R(6601561, 'array', array, false, false), J$.R(6601569, 'index', index, false, false)), value, false, false);
                                if (J$.C(347096, J$.C(347072, J$.B(660922, '>', J$.R(6601593, 'depth', depth, false, false), J$.T(6601601, 0, 22, false))) ? J$.F(6601625, J$.R(6601609, 'predicate', predicate, false, false), false)(J$.R(6601617, 'value', value, false, false)) : J$._())) {
                                    if (J$.C(347080, J$.B(660930, '>', J$.R(6601633, 'depth', depth, false, false), J$.T(6601641, 1, 22, false)))) {
                                        J$.F(6601705, J$.R(6601649, 'baseFlatten', baseFlatten, false, true), false)(J$.R(6601657, 'value', value, false, false), J$.B(660938, '-', J$.R(6601665, 'depth', depth, false, false), J$.T(6601673, 1, 22, false)), J$.R(6601681, 'predicate', predicate, false, false), J$.R(6601689, 'isStrict', isStrict, false, false), J$.R(6601697, 'result', result, false, false));
                                    } else {
                                        J$.F(6601737, J$.R(6601713, 'arrayPush', arrayPush, false, true), false)(J$.R(6601721, 'result', result, false, false), J$.R(6601729, 'value', value, false, false));
                                    }
                                } else if (J$.C(347088, J$.U(660946, '!', J$.R(6601745, 'isStrict', isStrict, false, false)))) {
                                    J$.P(6601785, J$.R(6601753, 'result', result, false, false), J$.G(6601769, J$.R(6601761, 'result', result, false, false), 'length'), J$.R(6601777, 'value', value, false, false));
                                }
                            }
                            return J$.Rt(6601801, J$.R(6601793, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6601953, J$e);
                        } finally {
                            if (J$.Fr(6601961))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6601921, 'arrayPush', arrayPush, false, false, false);
            J$.N(6601929, 'isFlattenable', isFlattenable, false, false, false);
            baseFlatten = J$.N(6601945, 'baseFlatten', J$.T(6601937, baseFlatten, 12, false), true, false, false);
            var arrayPush = J$.W(6601433, 'arrayPush', J$.F(6601401, J$.I(typeof require === 'undefined' ? require = J$.R(6601385, 'require', undefined, true, true) : require = J$.R(6601385, 'require', require, true, true)), false)(J$.T(6601393, './_arrayPush', 21, false)), arrayPush, false, true), isFlattenable = J$.W(6601441, 'isFlattenable', J$.F(6601425, J$.I(typeof require === 'undefined' ? require = J$.R(6601409, 'require', undefined, true, true) : require = J$.R(6601409, 'require', require, true, true)), false)(J$.T(6601417, './_isFlattenable', 21, false)), isFlattenable, false, true);
            J$.P(6601905, J$.I(typeof module === 'undefined' ? module = J$.R(6601889, 'module', undefined, true, true) : module = J$.R(6601889, 'module', module, true, true)), 'exports', J$.R(6601897, 'baseFlatten', baseFlatten, false, true));
        } catch (J$e) {
            J$.Ex(6601969, J$e);
        } finally {
            if (J$.Sr(6601977))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

