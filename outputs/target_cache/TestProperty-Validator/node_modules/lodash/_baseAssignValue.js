J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2880449, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseAssignValue.js');
            function baseAssignValue(object, key, value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2880385, arguments.callee, this, arguments);
                            arguments = J$.N(2880393, 'arguments', arguments, true, false, false);
                            object = J$.N(2880401, 'object', object, true, false, false);
                            key = J$.N(2880409, 'key', key, true, false, false);
                            value = J$.N(2880417, 'value', value, true, false, false);
                            if (J$.C(153056, J$.C(153048, J$.B(317474, '==', J$.R(2880257, 'key', key, false, false), J$.T(2880265, '__proto__', 21, false))) ? J$.R(2880273, 'defineProperty', defineProperty, false, true) : J$._())) {
                                J$.F(2880345, J$.R(2880281, 'defineProperty', defineProperty, false, true), false)(J$.R(2880289, 'object', object, false, false), J$.R(2880297, 'key', key, false, false), J$.T(2880337, {
                                    'configurable': J$.T(2880305, true, 23, false),
                                    'enumerable': J$.T(2880313, true, 23, false),
                                    'value': J$.R(2880321, 'value', value, false, false),
                                    'writable': J$.T(2880329, true, 23, false)
                                }, 11, false));
                            } else {
                                J$.P(2880377, J$.R(2880353, 'object', object, false, false), J$.R(2880361, 'key', key, false, false), J$.R(2880369, 'value', value, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(2880481, J$e);
                        } finally {
                            if (J$.Fr(2880489))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2880457, 'defineProperty', defineProperty, false, false, false);
            baseAssignValue = J$.N(2880473, 'baseAssignValue', J$.T(2880465, baseAssignValue, 12, false), true, false, false);
            var defineProperty = J$.W(2880249, 'defineProperty', J$.F(2880241, J$.I(typeof require === 'undefined' ? require = J$.R(2880225, 'require', undefined, true, true) : require = J$.R(2880225, 'require', require, true, true)), false)(J$.T(2880233, './_defineProperty', 21, false)), defineProperty, false, true);
            J$.P(2880441, J$.I(typeof module === 'undefined' ? module = J$.R(2880425, 'module', undefined, true, true) : module = J$.R(2880425, 'module', module, true, true)), 'exports', J$.R(2880433, 'baseAssignValue', baseAssignValue, false, true));
        } catch (J$e) {
            J$.Ex(2880497, J$e);
        } finally {
            if (J$.Sr(2880505))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

