J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2941657, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_createCaseFirst.js');
            function createCaseFirst(methodName) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2941609, arguments.callee, this, arguments);
                            arguments = J$.N(2941617, 'arguments', arguments, true, false, false);
                            methodName = J$.N(2941625, 'methodName', methodName, true, false, false);
                            return J$.Rt(2941601, J$.T(2941593, function (string) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2941545, arguments.callee, this, arguments);
                                            arguments = J$.N(2941553, 'arguments', arguments, true, false, false);
                                            string = J$.N(2941561, 'string', string, true, false, false);
                                            J$.N(2941569, 'strSymbols', strSymbols, false, false, false);
                                            J$.N(2941577, 'chr', chr, false, false, false);
                                            J$.N(2941585, 'trailing', trailing, false, false, false);
                                            string = J$.W(2941281, 'string', J$.F(2941273, J$.R(2941257, 'toString', toString, false, true), false)(J$.R(2941265, 'string', string, false, false)), string, false, false);
                                            var strSymbols = J$.W(2941345, 'strSymbols', J$.C(156696, J$.F(2941305, J$.R(2941289, 'hasUnicode', hasUnicode, false, true), false)(J$.R(2941297, 'string', string, false, false))) ? J$.F(2941329, J$.R(2941313, 'stringToArray', stringToArray, false, true), false)(J$.R(2941321, 'string', string, false, false)) : J$.T(2941337, undefined, 24, false), strSymbols, false, false);
                                            var chr = J$.W(2941409, 'chr', J$.C(156704, J$.R(2941353, 'strSymbols', strSymbols, false, false)) ? J$.G(2941377, J$.R(2941361, 'strSymbols', strSymbols, false, false), J$.T(2941369, 0, 22, false)) : J$.M(2941401, J$.R(2941385, 'string', string, false, false), 'charAt', false)(J$.T(2941393, 0, 22, false)), chr, false, false);
                                            var trailing = J$.W(2941497, 'trailing', J$.C(156712, J$.R(2941417, 'strSymbols', strSymbols, false, false)) ? J$.M(2941465, J$.F(2941449, J$.R(2941425, 'castSlice', castSlice, false, true), false)(J$.R(2941433, 'strSymbols', strSymbols, false, false), J$.T(2941441, 1, 22, false)), 'join', false)(J$.T(2941457, '', 21, false)) : J$.M(2941489, J$.R(2941473, 'string', string, false, false), 'slice', false)(J$.T(2941481, 1, 22, false)), trailing, false, false);
                                            return J$.Rt(2941537, J$.B(321810, '+', J$.M(2941521, J$.R(2941505, 'chr', chr, false, false), J$.R(2941513, 'methodName', methodName, false, false), false)(), J$.R(2941529, 'trailing', trailing, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2941713, J$e);
                                        } finally {
                                            if (J$.Fr(2941721))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2941729, J$e);
                        } finally {
                            if (J$.Fr(2941737))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2941665, 'castSlice', castSlice, false, false, false);
            J$.N(2941673, 'hasUnicode', hasUnicode, false, false, false);
            J$.N(2941681, 'stringToArray', stringToArray, false, false, false);
            J$.N(2941689, 'toString', toString, false, false, false);
            createCaseFirst = J$.N(2941705, 'createCaseFirst', J$.T(2941697, createCaseFirst, 12, false), true, false, false);
            var castSlice = J$.W(2941225, 'castSlice', J$.F(2941145, J$.I(typeof require === 'undefined' ? require = J$.R(2941129, 'require', undefined, true, true) : require = J$.R(2941129, 'require', require, true, true)), false)(J$.T(2941137, './_castSlice', 21, false)), castSlice, false, true), hasUnicode = J$.W(2941233, 'hasUnicode', J$.F(2941169, J$.I(typeof require === 'undefined' ? require = J$.R(2941153, 'require', undefined, true, true) : require = J$.R(2941153, 'require', require, true, true)), false)(J$.T(2941161, './_hasUnicode', 21, false)), hasUnicode, false, true), stringToArray = J$.W(2941241, 'stringToArray', J$.F(2941193, J$.I(typeof require === 'undefined' ? require = J$.R(2941177, 'require', undefined, true, true) : require = J$.R(2941177, 'require', require, true, true)), false)(J$.T(2941185, './_stringToArray', 21, false)), stringToArray, false, true), toString = J$.W(2941249, 'toString', J$.F(2941217, J$.I(typeof require === 'undefined' ? require = J$.R(2941201, 'require', undefined, true, true) : require = J$.R(2941201, 'require', require, true, true)), false)(J$.T(2941209, './toString', 21, false)), toString, false, true);
            J$.P(2941649, J$.I(typeof module === 'undefined' ? module = J$.R(2941633, 'module', undefined, true, true) : module = J$.R(2941633, 'module', module, true, true)), 'exports', J$.R(2941641, 'createCaseFirst', createCaseFirst, false, true));
        } catch (J$e) {
            J$.Ex(2941745, J$e);
        } finally {
            if (J$.Sr(2941753))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

