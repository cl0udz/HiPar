J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2011289, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_createCaseFirst.js');
            function createCaseFirst(methodName) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2011241, arguments.callee, this, arguments);
                            arguments = J$.N(2011249, 'arguments', arguments, true, false, false);
                            methodName = J$.N(2011257, 'methodName', methodName, true, false, false);
                            return J$.Rt(2011233, J$.T(2011225, function (string) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2011177, arguments.callee, this, arguments);
                                            arguments = J$.N(2011185, 'arguments', arguments, true, false, false);
                                            string = J$.N(2011193, 'string', string, true, false, false);
                                            J$.N(2011201, 'strSymbols', strSymbols, false, false, false);
                                            J$.N(2011209, 'chr', chr, false, false, false);
                                            J$.N(2011217, 'trailing', trailing, false, false, false);
                                            string = J$.W(2010913, 'string', J$.F(2010905, J$.R(2010889, 'toString', toString, false, true), false)(J$.R(2010897, 'string', string, false, false)), string, false, false);
                                            var strSymbols = J$.W(2010977, 'strSymbols', J$.C(99576, J$.F(2010937, J$.R(2010921, 'hasUnicode', hasUnicode, false, true), false)(J$.R(2010929, 'string', string, false, false))) ? J$.F(2010961, J$.R(2010945, 'stringToArray', stringToArray, false, true), false)(J$.R(2010953, 'string', string, false, false)) : J$.T(2010969, undefined, 24, false), strSymbols, false, false);
                                            var chr = J$.W(2011041, 'chr', J$.C(99584, J$.R(2010985, 'strSymbols', strSymbols, false, false)) ? J$.G(2011009, J$.R(2010993, 'strSymbols', strSymbols, false, false), J$.T(2011001, 0, 22, false)) : J$.M(2011033, J$.R(2011017, 'string', string, false, false), 'charAt', false)(J$.T(2011025, 0, 22, false)), chr, false, false);
                                            var trailing = J$.W(2011129, 'trailing', J$.C(99592, J$.R(2011049, 'strSymbols', strSymbols, false, false)) ? J$.M(2011097, J$.F(2011081, J$.R(2011057, 'castSlice', castSlice, false, true), false)(J$.R(2011065, 'strSymbols', strSymbols, false, false), J$.T(2011073, 1, 22, false)), 'join', false)(J$.T(2011089, '', 21, false)) : J$.M(2011121, J$.R(2011105, 'string', string, false, false), 'slice', false)(J$.T(2011113, 1, 22, false)), trailing, false, false);
                                            return J$.Rt(2011169, J$.B(148034, '+', J$.M(2011153, J$.R(2011137, 'chr', chr, false, false), J$.R(2011145, 'methodName', methodName, false, false), false)(), J$.R(2011161, 'trailing', trailing, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2011345, J$e);
                                        } finally {
                                            if (J$.Fr(2011353))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2011361, J$e);
                        } finally {
                            if (J$.Fr(2011369))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2011297, 'castSlice', castSlice, false, false, false);
            J$.N(2011305, 'hasUnicode', hasUnicode, false, false, false);
            J$.N(2011313, 'stringToArray', stringToArray, false, false, false);
            J$.N(2011321, 'toString', toString, false, false, false);
            createCaseFirst = J$.N(2011337, 'createCaseFirst', J$.T(2011329, createCaseFirst, 12, false), true, false, false);
            var castSlice = J$.W(2010857, 'castSlice', J$.F(2010777, J$.I(typeof require === 'undefined' ? require = J$.R(2010761, 'require', undefined, true, true) : require = J$.R(2010761, 'require', require, true, true)), false)(J$.T(2010769, './_castSlice', 21, false)), castSlice, false, true), hasUnicode = J$.W(2010865, 'hasUnicode', J$.F(2010801, J$.I(typeof require === 'undefined' ? require = J$.R(2010785, 'require', undefined, true, true) : require = J$.R(2010785, 'require', require, true, true)), false)(J$.T(2010793, './_hasUnicode', 21, false)), hasUnicode, false, true), stringToArray = J$.W(2010873, 'stringToArray', J$.F(2010825, J$.I(typeof require === 'undefined' ? require = J$.R(2010809, 'require', undefined, true, true) : require = J$.R(2010809, 'require', require, true, true)), false)(J$.T(2010817, './_stringToArray', 21, false)), stringToArray, false, true), toString = J$.W(2010881, 'toString', J$.F(2010849, J$.I(typeof require === 'undefined' ? require = J$.R(2010833, 'require', undefined, true, true) : require = J$.R(2010833, 'require', require, true, true)), false)(J$.T(2010841, './toString', 21, false)), toString, false, true);
            J$.P(2011281, J$.I(typeof module === 'undefined' ? module = J$.R(2011265, 'module', undefined, true, true) : module = J$.R(2011265, 'module', module, true, true)), 'exports', J$.R(2011273, 'createCaseFirst', createCaseFirst, false, true));
        } catch (J$e) {
            J$.Ex(2011377, J$e);
        } finally {
            if (J$.Sr(2011385))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

