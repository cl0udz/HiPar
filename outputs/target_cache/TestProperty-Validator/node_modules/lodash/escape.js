J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3095497, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/escape.js');
            function escape(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3095449, arguments.callee, this, arguments);
                            arguments = J$.N(3095457, 'arguments', arguments, true, false, false);
                            string = J$.N(3095465, 'string', string, true, false, false);
                            string = J$.W(3095361, 'string', J$.F(3095353, J$.R(3095337, 'toString', toString, false, true), false)(J$.R(3095345, 'string', string, false, false)), string, false, false);
                            return J$.Rt(3095441, J$.C(165992, J$.C(165984, J$.R(3095369, 'string', string, false, false)) ? J$.M(3095393, J$.R(3095377, 'reHasUnescapedHtml', reHasUnescapedHtml, false, true), 'test', false)(J$.R(3095385, 'string', string, false, false)) : J$._()) ? J$.M(3095425, J$.R(3095401, 'string', string, false, false), 'replace', false)(J$.R(3095409, 'reUnescapedHtml', reUnescapedHtml, false, true), J$.R(3095417, 'escapeHtmlChar', escapeHtmlChar, false, true)) : J$.R(3095433, 'string', string, false, false));
                        } catch (J$e) {
                            J$.Ex(3095553, J$e);
                        } finally {
                            if (J$.Fr(3095561))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3095505, 'escapeHtmlChar', escapeHtmlChar, false, false, false);
            J$.N(3095513, 'toString', toString, false, false, false);
            J$.N(3095521, 'reUnescapedHtml', reUnescapedHtml, false, false, false);
            J$.N(3095529, 'reHasUnescapedHtml', reHasUnescapedHtml, false, false, false);
            escape = J$.N(3095545, 'escape', J$.T(3095537, escape, 12, false), true, false, false);
            var escapeHtmlChar = J$.W(3095265, 'escapeHtmlChar', J$.F(3095233, J$.I(typeof require === 'undefined' ? require = J$.R(3095217, 'require', undefined, true, true) : require = J$.R(3095217, 'require', require, true, true)), false)(J$.T(3095225, './_escapeHtmlChar', 21, false)), escapeHtmlChar, false, true), toString = J$.W(3095273, 'toString', J$.F(3095257, J$.I(typeof require === 'undefined' ? require = J$.R(3095241, 'require', undefined, true, true) : require = J$.R(3095241, 'require', require, true, true)), false)(J$.T(3095249, './toString', 21, false)), toString, false, true);
            var reUnescapedHtml = J$.W(3095321, 'reUnescapedHtml', J$.T(3095281, /[&<>"']/g, 14, false), reUnescapedHtml, false, true), reHasUnescapedHtml = J$.W(3095329, 'reHasUnescapedHtml', J$.F(3095313, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(3095289, 'RegExp', undefined, true, true) : RegExp = J$.R(3095289, 'RegExp', RegExp, true, true)), false)(J$.G(3095305, J$.R(3095297, 'reUnescapedHtml', reUnescapedHtml, false, true), 'source')), reHasUnescapedHtml, false, true);
            J$.P(3095489, J$.I(typeof module === 'undefined' ? module = J$.R(3095473, 'module', undefined, true, true) : module = J$.R(3095473, 'module', module, true, true)), 'exports', J$.R(3095481, 'escape', escape, false, true));
        } catch (J$e) {
            J$.Ex(3095569, J$e);
        } finally {
            if (J$.Sr(3095577))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

