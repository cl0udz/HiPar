J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2675233, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/take.js');
            function take(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2675169, arguments.callee, this, arguments);
                            arguments = J$.N(2675177, 'arguments', arguments, true, false, false);
                            array = J$.N(2675185, 'array', array, true, false, false);
                            n = J$.N(2675193, 'n', n, true, false, false);
                            guard = J$.N(2675201, 'guard', guard, true, false, false);
                            if (J$.C(138624, J$.U(192074, '!', J$.C(138616, J$.R(2674993, 'array', array, false, false)) ? J$.G(2675009, J$.R(2675001, 'array', array, false, false), 'length') : J$._()))) {
                                return J$.Rt(2675025, J$.T(2675017, [], 10, false));
                            }
                            n = J$.W(2675089, 'n', J$.C(138640, J$.C(138632, J$.R(2675033, 'guard', guard, false, false)) ? J$._() : J$.B(192082, '===', J$.R(2675041, 'n', n, false, false), J$.T(2675049, undefined, 24, false))) ? J$.T(2675057, 1, 22, false) : J$.F(2675081, J$.R(2675065, 'toInteger', toInteger, false, true), false)(J$.R(2675073, 'n', n, false, false)), n, false, false);
                            return J$.Rt(2675161, J$.F(2675153, J$.R(2675097, 'baseSlice', baseSlice, false, true), false)(J$.R(2675105, 'array', array, false, false), J$.T(2675113, 0, 22, false), J$.C(138648, J$.B(192090, '<', J$.R(2675121, 'n', n, false, false), J$.T(2675129, 0, 22, false))) ? J$.T(2675137, 0, 22, false) : J$.R(2675145, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(2675273, J$e);
                        } finally {
                            if (J$.Fr(2675281))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2675241, 'baseSlice', baseSlice, false, false, false);
            J$.N(2675249, 'toInteger', toInteger, false, false, false);
            take = J$.N(2675265, 'take', J$.T(2675257, take, 12, false), true, false, false);
            var baseSlice = J$.W(2674977, 'baseSlice', J$.F(2674945, J$.I(typeof require === 'undefined' ? require = J$.R(2674929, 'require', undefined, true, true) : require = J$.R(2674929, 'require', require, true, true)), false)(J$.T(2674937, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(2674985, 'toInteger', J$.F(2674969, J$.I(typeof require === 'undefined' ? require = J$.R(2674953, 'require', undefined, true, true) : require = J$.R(2674953, 'require', require, true, true)), false)(J$.T(2674961, './toInteger', 21, false)), toInteger, false, true);
            J$.P(2675225, J$.I(typeof module === 'undefined' ? module = J$.R(2675209, 'module', undefined, true, true) : module = J$.R(2675209, 'module', module, true, true)), 'exports', J$.R(2675217, 'take', take, false, true));
        } catch (J$e) {
            J$.Ex(2675289, J$e);
        } finally {
            if (J$.Sr(2675297))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

