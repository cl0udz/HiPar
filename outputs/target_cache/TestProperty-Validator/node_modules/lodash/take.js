J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3605601, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/take.js');
            function take(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3605537, arguments.callee, this, arguments);
                            arguments = J$.N(3605545, 'arguments', arguments, true, false, false);
                            array = J$.N(3605553, 'array', array, true, false, false);
                            n = J$.N(3605561, 'n', n, true, false, false);
                            guard = J$.N(3605569, 'guard', guard, true, false, false);
                            if (J$.C(195744, J$.U(365850, '!', J$.C(195736, J$.R(3605361, 'array', array, false, false)) ? J$.G(3605377, J$.R(3605369, 'array', array, false, false), 'length') : J$._()))) {
                                return J$.Rt(3605393, J$.T(3605385, [], 10, false));
                            }
                            n = J$.W(3605457, 'n', J$.C(195760, J$.C(195752, J$.R(3605401, 'guard', guard, false, false)) ? J$._() : J$.B(365858, '===', J$.R(3605409, 'n', n, false, false), J$.T(3605417, undefined, 24, false))) ? J$.T(3605425, 1, 22, false) : J$.F(3605449, J$.R(3605433, 'toInteger', toInteger, false, true), false)(J$.R(3605441, 'n', n, false, false)), n, false, false);
                            return J$.Rt(3605529, J$.F(3605521, J$.R(3605465, 'baseSlice', baseSlice, false, true), false)(J$.R(3605473, 'array', array, false, false), J$.T(3605481, 0, 22, false), J$.C(195768, J$.B(365866, '<', J$.R(3605489, 'n', n, false, false), J$.T(3605497, 0, 22, false))) ? J$.T(3605505, 0, 22, false) : J$.R(3605513, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(3605641, J$e);
                        } finally {
                            if (J$.Fr(3605649))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3605609, 'baseSlice', baseSlice, false, false, false);
            J$.N(3605617, 'toInteger', toInteger, false, false, false);
            take = J$.N(3605633, 'take', J$.T(3605625, take, 12, false), true, false, false);
            var baseSlice = J$.W(3605345, 'baseSlice', J$.F(3605313, J$.I(typeof require === 'undefined' ? require = J$.R(3605297, 'require', undefined, true, true) : require = J$.R(3605297, 'require', require, true, true)), false)(J$.T(3605305, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(3605353, 'toInteger', J$.F(3605337, J$.I(typeof require === 'undefined' ? require = J$.R(3605321, 'require', undefined, true, true) : require = J$.R(3605321, 'require', require, true, true)), false)(J$.T(3605329, './toInteger', 21, false)), toInteger, false, true);
            J$.P(3605593, J$.I(typeof module === 'undefined' ? module = J$.R(3605577, 'module', undefined, true, true) : module = J$.R(3605577, 'module', module, true, true)), 'exports', J$.R(3605585, 'take', take, false, true));
        } catch (J$e) {
            J$.Ex(3605657, J$e);
        } finally {
            if (J$.Sr(3605665))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

