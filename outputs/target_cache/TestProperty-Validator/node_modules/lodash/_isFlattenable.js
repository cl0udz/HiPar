J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2979065, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_isFlattenable.js');
            function isFlattenable(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2979017, arguments.callee, this, arguments);
                            arguments = J$.N(2979025, 'arguments', arguments, true, false, false);
                            value = J$.N(2979033, 'value', value, true, false, false);
                            return J$.Rt(2979009, J$.C(159048, J$.C(159024, J$.F(2978937, J$.R(2978921, 'isArray', isArray, false, true), false)(J$.R(2978929, 'value', value, false, false))) ? J$._() : J$.F(2978961, J$.R(2978945, 'isArguments', isArguments, false, true), false)(J$.R(2978953, 'value', value, false, false))) ? J$._() : J$.U(324082, '!', J$.U(324074, '!', J$.C(159040, J$.C(159032, J$.R(2978969, 'spreadableSymbol', spreadableSymbol, false, true)) ? J$.R(2978977, 'value', value, false, false) : J$._()) ? J$.G(2979001, J$.R(2978985, 'value', value, false, false), J$.R(2978993, 'spreadableSymbol', spreadableSymbol, false, true)) : J$._())));
                        } catch (J$e) {
                            J$.Ex(2979121, J$e);
                        } finally {
                            if (J$.Fr(2979129))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2979073, 'Symbol', Symbol, false, false, false);
            J$.N(2979081, 'isArguments', isArguments, false, false, false);
            J$.N(2979089, 'isArray', isArray, false, false, false);
            J$.N(2979097, 'spreadableSymbol', spreadableSymbol, false, false, false);
            isFlattenable = J$.N(2979113, 'isFlattenable', J$.T(2979105, isFlattenable, 12, false), true, false, false);
            var Symbol = J$.W(2978857, 'Symbol', J$.F(2978801, J$.I(typeof require === 'undefined' ? require = J$.R(2978785, 'require', undefined, true, true) : require = J$.R(2978785, 'require', require, true, true)), false)(J$.T(2978793, './_Symbol', 21, false)), Symbol, false, true), isArguments = J$.W(2978865, 'isArguments', J$.F(2978825, J$.I(typeof require === 'undefined' ? require = J$.R(2978809, 'require', undefined, true, true) : require = J$.R(2978809, 'require', require, true, true)), false)(J$.T(2978817, './isArguments', 21, false)), isArguments, false, true), isArray = J$.W(2978873, 'isArray', J$.F(2978849, J$.I(typeof require === 'undefined' ? require = J$.R(2978833, 'require', undefined, true, true) : require = J$.R(2978833, 'require', require, true, true)), false)(J$.T(2978841, './isArray', 21, false)), isArray, false, true);
            var spreadableSymbol = J$.W(2978913, 'spreadableSymbol', J$.C(159016, J$.R(2978881, 'Symbol', Symbol, false, true)) ? J$.G(2978897, J$.R(2978889, 'Symbol', Symbol, false, true), 'isConcatSpreadable') : J$.T(2978905, undefined, 24, false), spreadableSymbol, false, true);
            J$.P(2979057, J$.I(typeof module === 'undefined' ? module = J$.R(2979041, 'module', undefined, true, true) : module = J$.R(2979041, 'module', module, true, true)), 'exports', J$.R(2979049, 'isFlattenable', isFlattenable, false, true));
        } catch (J$e) {
            J$.Ex(2979137, J$e);
        } finally {
            if (J$.Sr(2979145))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

