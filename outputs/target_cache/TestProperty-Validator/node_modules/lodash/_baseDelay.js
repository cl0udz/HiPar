J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6597417, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseDelay.js');
            function baseDelay(func, wait, args) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6597353, arguments.callee, this, arguments);
                            arguments = J$.N(6597361, 'arguments', arguments, true, false, false);
                            func = J$.N(6597369, 'func', func, true, false, false);
                            wait = J$.N(6597377, 'wait', wait, true, false, false);
                            args = J$.N(6597385, 'args', args, true, false, false);
                            if (J$.C(346800, J$.B(660514, '!=', J$.U(660506, 'typeof', J$.R(6597225, 'func', func, false, false)), J$.T(6597233, 'function', 21, false)))) {
                                throw J$.F(6597257, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6597241, 'TypeError', undefined, true, true) : TypeError = J$.R(6597241, 'TypeError', TypeError, true, true)), true)(J$.R(6597249, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            return J$.Rt(6597345, J$.F(6597337, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(6597265, 'setTimeout', undefined, true, true) : setTimeout = J$.R(6597265, 'setTimeout', setTimeout, true, true)), false)(J$.T(6597321, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6597305, arguments.callee, this, arguments);
                                            arguments = J$.N(6597313, 'arguments', arguments, true, false, false);
                                            J$.M(6597297, J$.R(6597273, 'func', func, false, false), 'apply', false)(J$.T(6597281, undefined, 24, false), J$.R(6597289, 'args', args, false, false));
                                        } catch (J$e) {
                                            J$.Ex(6597449, J$e);
                                        } finally {
                                            if (J$.Fr(6597457))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.R(6597329, 'wait', wait, false, false)));
                        } catch (J$e) {
                            J$.Ex(6597465, J$e);
                        } finally {
                            if (J$.Fr(6597473))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6597425, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            baseDelay = J$.N(6597441, 'baseDelay', J$.T(6597433, baseDelay, 12, false), true, false, false);
            var FUNC_ERROR_TEXT = J$.W(6597217, 'FUNC_ERROR_TEXT', J$.T(6597209, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            J$.P(6597409, J$.I(typeof module === 'undefined' ? module = J$.R(6597393, 'module', undefined, true, true) : module = J$.R(6597393, 'module', module, true, true)), 'exports', J$.R(6597401, 'baseDelay', baseDelay, false, true));
        } catch (J$e) {
            J$.Ex(6597481, J$e);
        } finally {
            if (J$.Sr(6597489))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

