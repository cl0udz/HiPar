J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2886705, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseDelay.js');
            function baseDelay(func, wait, args) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2886641, arguments.callee, this, arguments);
                            arguments = J$.N(2886649, 'arguments', arguments, true, false, false);
                            func = J$.N(2886657, 'func', func, true, false, false);
                            wait = J$.N(2886665, 'wait', wait, true, false, false);
                            args = J$.N(2886673, 'args', args, true, false, false);
                            if (J$.C(153400, J$.B(317754, '!=', J$.U(317746, 'typeof', J$.R(2886513, 'func', func, false, false)), J$.T(2886521, 'function', 21, false)))) {
                                throw J$.F(2886545, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2886529, 'TypeError', undefined, true, true) : TypeError = J$.R(2886529, 'TypeError', TypeError, true, true)), true)(J$.R(2886537, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            return J$.Rt(2886633, J$.F(2886625, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(2886553, 'setTimeout', undefined, true, true) : setTimeout = J$.R(2886553, 'setTimeout', setTimeout, true, true)), false)(J$.T(2886609, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2886593, arguments.callee, this, arguments);
                                            arguments = J$.N(2886601, 'arguments', arguments, true, false, false);
                                            J$.M(2886585, J$.R(2886561, 'func', func, false, false), 'apply', false)(J$.T(2886569, undefined, 24, false), J$.R(2886577, 'args', args, false, false));
                                        } catch (J$e) {
                                            J$.Ex(2886737, J$e);
                                        } finally {
                                            if (J$.Fr(2886745))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.R(2886617, 'wait', wait, false, false)));
                        } catch (J$e) {
                            J$.Ex(2886753, J$e);
                        } finally {
                            if (J$.Fr(2886761))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2886713, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            baseDelay = J$.N(2886729, 'baseDelay', J$.T(2886721, baseDelay, 12, false), true, false, false);
            var FUNC_ERROR_TEXT = J$.W(2886505, 'FUNC_ERROR_TEXT', J$.T(2886497, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            J$.P(2886697, J$.I(typeof module === 'undefined' ? module = J$.R(2886681, 'module', undefined, true, true) : module = J$.R(2886681, 'module', module, true, true)), 'exports', J$.R(2886689, 'baseDelay', baseDelay, false, true));
        } catch (J$e) {
            J$.Ex(2886769, J$e);
        } finally {
            if (J$.Sr(2886777))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

