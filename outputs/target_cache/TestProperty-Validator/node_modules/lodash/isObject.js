J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2280249, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isObject.js');
            function isObject(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2280193, arguments.callee, this, arguments);
                            arguments = J$.N(2280201, 'arguments', arguments, true, false, false);
                            value = J$.N(2280209, 'value', value, true, false, false);
                            J$.N(2280217, 'type', type, false, false, false);
                            var type = J$.W(2280129, 'type', J$.U(162010, 'typeof', J$.R(2280121, 'value', value, false, false)), type, false, false);
                            return J$.Rt(2280185, J$.C(110688, J$.B(162018, '!=', J$.R(2280137, 'value', value, false, false), J$.T(2280145, null, 25, false))) ? J$.C(110680, J$.B(162026, '==', J$.R(2280153, 'type', type, false, false), J$.T(2280161, 'object', 21, false))) ? J$._() : J$.B(162034, '==', J$.R(2280169, 'type', type, false, false), J$.T(2280177, 'function', 21, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(2280273, J$e);
                        } finally {
                            if (J$.Fr(2280281))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            isObject = J$.N(2280265, 'isObject', J$.T(2280257, isObject, 12, false), true, false, false);
            J$.P(2280241, J$.I(typeof module === 'undefined' ? module = J$.R(2280225, 'module', undefined, true, true) : module = J$.R(2280225, 'module', module, true, true)), 'exports', J$.R(2280233, 'isObject', isObject, false, true));
        } catch (J$e) {
            J$.Ex(2280289, J$e);
        } finally {
            if (J$.Sr(2280297))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

