J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3210617, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isObject.js');
            function isObject(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3210561, arguments.callee, this, arguments);
                            arguments = J$.N(3210569, 'arguments', arguments, true, false, false);
                            value = J$.N(3210577, 'value', value, true, false, false);
                            J$.N(3210585, 'type', type, false, false, false);
                            var type = J$.W(3210497, 'type', J$.U(335786, 'typeof', J$.R(3210489, 'value', value, false, false)), type, false, false);
                            return J$.Rt(3210553, J$.C(167808, J$.B(335794, '!=', J$.R(3210505, 'value', value, false, false), J$.T(3210513, null, 25, false))) ? J$.C(167800, J$.B(335802, '==', J$.R(3210521, 'type', type, false, false), J$.T(3210529, 'object', 21, false))) ? J$._() : J$.B(335810, '==', J$.R(3210537, 'type', type, false, false), J$.T(3210545, 'function', 21, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(3210641, J$e);
                        } finally {
                            if (J$.Fr(3210649))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            isObject = J$.N(3210633, 'isObject', J$.T(3210625, isObject, 12, false), true, false, false);
            J$.P(3210609, J$.I(typeof module === 'undefined' ? module = J$.R(3210593, 'module', undefined, true, true) : module = J$.R(3210593, 'module', module, true, true)), 'exports', J$.R(3210601, 'isObject', isObject, false, true));
        } catch (J$e) {
            J$.Ex(3210657, J$e);
        } finally {
            if (J$.Sr(3210665))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

