J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6912209, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/invert.js');
            J$.N(6912217, 'constant', constant, false, false, false);
            J$.N(6912225, 'createInverter', createInverter, false, false, false);
            J$.N(6912233, 'identity', identity, false, false, false);
            J$.N(6912241, 'objectProto', objectProto, false, false, false);
            J$.N(6912249, 'nativeObjectToString', nativeObjectToString, false, false, false);
            J$.N(6912257, 'invert', invert, false, false, false);
            var constant = J$.W(6911913, 'constant', J$.F(6911857, J$.I(typeof require === 'undefined' ? require = J$.R(6911841, 'require', undefined, true, true) : require = J$.R(6911841, 'require', require, true, true)), false)(J$.T(6911849, './constant', 21, false)), constant, false, true), createInverter = J$.W(6911921, 'createInverter', J$.F(6911881, J$.I(typeof require === 'undefined' ? require = J$.R(6911865, 'require', undefined, true, true) : require = J$.R(6911865, 'require', require, true, true)), false)(J$.T(6911873, './_createInverter', 21, false)), createInverter, false, true), identity = J$.W(6911929, 'identity', J$.F(6911905, J$.I(typeof require === 'undefined' ? require = J$.R(6911889, 'require', undefined, true, true) : require = J$.R(6911889, 'require', require, true, true)), false)(J$.T(6911897, './identity', 21, false)), identity, false, true);
            var objectProto = J$.W(6911953, 'objectProto', J$.G(6911945, J$.I(typeof Object === 'undefined' ? Object = J$.R(6911937, 'Object', undefined, true, true) : Object = J$.R(6911937, 'Object', Object, true, true)), 'prototype'), objectProto, false, true);
            var nativeObjectToString = J$.W(6911977, 'nativeObjectToString', J$.G(6911969, J$.R(6911961, 'objectProto', objectProto, false, true), 'toString'), nativeObjectToString, false, true);
            var invert = J$.W(6912177, 'invert', J$.F(6912169, J$.R(6911985, 'createInverter', createInverter, false, true), false)(J$.T(6912137, function (result, value, key) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6912097, arguments.callee, this, arguments);
                            arguments = J$.N(6912105, 'arguments', arguments, true, false, false);
                            result = J$.N(6912113, 'result', result, true, false, false);
                            value = J$.N(6912121, 'value', value, true, false, false);
                            key = J$.N(6912129, 'key', key, true, false, false);
                            if (J$.C(360648, J$.C(360640, J$.B(677938, '!=', J$.R(6911993, 'value', value, false, false), J$.T(6912001, null, 25, false))) ? J$.B(677954, '!=', J$.U(677946, 'typeof', J$.G(6912017, J$.R(6912009, 'value', value, false, false), 'toString')), J$.T(6912025, 'function', 21, false)) : J$._())) {
                                value = J$.W(6912057, 'value', J$.M(6912049, J$.R(6912033, 'nativeObjectToString', nativeObjectToString, false, true), 'call', false)(J$.R(6912041, 'value', value, false, false)), value, false, false);
                            }
                            J$.P(6912089, J$.R(6912065, 'result', result, false, false), J$.R(6912073, 'value', value, false, false), J$.R(6912081, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(6912265, J$e);
                        } finally {
                            if (J$.Fr(6912273))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.F(6912161, J$.R(6912145, 'constant', constant, false, true), false)(J$.R(6912153, 'identity', identity, false, true))), invert, false, true);
            J$.P(6912201, J$.I(typeof module === 'undefined' ? module = J$.R(6912185, 'module', undefined, true, true) : module = J$.R(6912185, 'module', module, true, true)), 'exports', J$.R(6912193, 'invert', invert, false, true));
        } catch (J$e) {
            J$.Ex(6912281, J$e);
        } finally {
            if (J$.Sr(6912289))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

