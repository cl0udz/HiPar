J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7329793, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/trimStart.js');
            function trimStart(string, chars, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7329713, arguments.callee, this, arguments);
                            arguments = J$.N(7329721, 'arguments', arguments, true, false, false);
                            string = J$.N(7329729, 'string', string, true, false, false);
                            chars = J$.N(7329737, 'chars', chars, true, false, false);
                            guard = J$.N(7329745, 'guard', guard, true, false, false);
                            J$.N(7329753, 'strSymbols', strSymbols, false, false, false);
                            J$.N(7329761, 'start', start, false, false, false);
                            string = J$.W(7329433, 'string', J$.F(7329425, J$.R(7329409, 'toString', toString, false, true), false)(J$.R(7329417, 'string', string, false, false)), string, false, false);
                            if (J$.C(389896, J$.C(389888, J$.R(7329441, 'string', string, false, false)) ? J$.C(389880, J$.R(7329449, 'guard', guard, false, false)) ? J$._() : J$.B(709394, '===', J$.R(7329457, 'chars', chars, false, false), J$.T(7329465, undefined, 24, false)) : J$._())) {
                                return J$.Rt(7329505, J$.M(7329497, J$.R(7329473, 'string', string, false, false), 'replace', false)(J$.R(7329481, 'reTrimStart', reTrimStart, false, true), J$.T(7329489, '', 21, false)));
                            }
                            if (J$.C(389912, J$.C(389904, J$.U(709402, '!', J$.R(7329513, 'string', string, false, false))) ? J$._() : J$.U(709410, '!', chars = J$.W(7329545, 'chars', J$.F(7329537, J$.R(7329521, 'baseToString', baseToString, false, true), false)(J$.R(7329529, 'chars', chars, false, false)), chars, false, false)))) {
                                return J$.Rt(7329561, J$.R(7329553, 'string', string, false, false));
                            }
                            var strSymbols = J$.W(7329641, 'strSymbols', J$.F(7329585, J$.R(7329569, 'stringToArray', stringToArray, false, true), false)(J$.R(7329577, 'string', string, false, false)), strSymbols, false, false), start = J$.W(7329649, 'start', J$.F(7329633, J$.R(7329593, 'charsStartIndex', charsStartIndex, false, true), false)(J$.R(7329601, 'strSymbols', strSymbols, false, false), J$.F(7329625, J$.R(7329609, 'stringToArray', stringToArray, false, true), false)(J$.R(7329617, 'chars', chars, false, false))), start, false, false);
                            return J$.Rt(7329705, J$.M(7329697, J$.F(7329681, J$.R(7329657, 'castSlice', castSlice, false, true), false)(J$.R(7329665, 'strSymbols', strSymbols, false, false), J$.R(7329673, 'start', start, false, false)), 'join', false)(J$.T(7329689, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(7329865, J$e);
                        } finally {
                            if (J$.Fr(7329873))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7329801, 'baseToString', baseToString, false, false, false);
            J$.N(7329809, 'castSlice', castSlice, false, false, false);
            J$.N(7329817, 'charsStartIndex', charsStartIndex, false, false, false);
            J$.N(7329825, 'stringToArray', stringToArray, false, false, false);
            J$.N(7329833, 'toString', toString, false, false, false);
            J$.N(7329841, 'reTrimStart', reTrimStart, false, false, false);
            trimStart = J$.N(7329857, 'trimStart', J$.T(7329849, trimStart, 12, false), true, false, false);
            var baseToString = J$.W(7329353, 'baseToString', J$.F(7329249, J$.I(typeof require === 'undefined' ? require = J$.R(7329233, 'require', undefined, true, true) : require = J$.R(7329233, 'require', require, true, true)), false)(J$.T(7329241, './_baseToString', 21, false)), baseToString, false, true), castSlice = J$.W(7329361, 'castSlice', J$.F(7329273, J$.I(typeof require === 'undefined' ? require = J$.R(7329257, 'require', undefined, true, true) : require = J$.R(7329257, 'require', require, true, true)), false)(J$.T(7329265, './_castSlice', 21, false)), castSlice, false, true), charsStartIndex = J$.W(7329369, 'charsStartIndex', J$.F(7329297, J$.I(typeof require === 'undefined' ? require = J$.R(7329281, 'require', undefined, true, true) : require = J$.R(7329281, 'require', require, true, true)), false)(J$.T(7329289, './_charsStartIndex', 21, false)), charsStartIndex, false, true), stringToArray = J$.W(7329377, 'stringToArray', J$.F(7329321, J$.I(typeof require === 'undefined' ? require = J$.R(7329305, 'require', undefined, true, true) : require = J$.R(7329305, 'require', require, true, true)), false)(J$.T(7329313, './_stringToArray', 21, false)), stringToArray, false, true), toString = J$.W(7329385, 'toString', J$.F(7329345, J$.I(typeof require === 'undefined' ? require = J$.R(7329329, 'require', undefined, true, true) : require = J$.R(7329329, 'require', require, true, true)), false)(J$.T(7329337, './toString', 21, false)), toString, false, true);
            var reTrimStart = J$.W(7329401, 'reTrimStart', J$.T(7329393, /^\s+/, 14, false), reTrimStart, false, true);
            J$.P(7329785, J$.I(typeof module === 'undefined' ? module = J$.R(7329769, 'module', undefined, true, true) : module = J$.R(7329769, 'module', module, true, true)), 'exports', J$.R(7329777, 'trimStart', trimStart, false, true));
        } catch (J$e) {
            J$.Ex(7329881, J$e);
        } finally {
            if (J$.Sr(7329889))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

