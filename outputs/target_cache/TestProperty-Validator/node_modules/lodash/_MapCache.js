J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1939337, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_MapCache.js');
            function MapCache(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1939097, arguments.callee, this, arguments);
                            arguments = J$.N(1939105, 'arguments', arguments, true, false, false);
                            entries = J$.N(1939113, 'entries', entries, true, false, false);
                            J$.N(1939121, 'index', index, false, false, false);
                            J$.N(1939129, 'length', length, false, false, false);
                            J$.N(1939137, 'entry', entry, false, false, false);
                            var index = J$.W(1938945, 'index', J$.U(142858, '-', J$.T(1938897, 1, 22, false)), index, false, false), length = J$.W(1938953, 'length', J$.C(95304, J$.B(142866, '==', J$.R(1938905, 'entries', entries, false, false), J$.T(1938913, null, 25, false))) ? J$.T(1938921, 0, 22, false) : J$.G(1938937, J$.R(1938929, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(1938969, J$.R(1938961, 'this', this, false, false), 'clear', false)();
                            while (J$.C(95312, J$.B(142890, '<', index = J$.W(1938985, 'index', J$.B(142882, '+', J$.U(142874, '+', J$.R(1938977, 'index', index, false, false)), 1), index, false, false), J$.R(1938993, 'length', length, false, false)))) {
                                var entry = J$.W(1939025, 'entry', J$.G(1939017, J$.R(1939001, 'entries', entries, false, false), J$.R(1939009, 'index', index, false, false)), entry, false, false);
                                J$.M(1939089, J$.R(1939033, 'this', this, false, false), 'set', false)(J$.G(1939057, J$.R(1939041, 'entry', entry, false, false), J$.T(1939049, 0, 22, false)), J$.G(1939081, J$.R(1939065, 'entry', entry, false, false), J$.T(1939073, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(1939401, J$e);
                        } finally {
                            if (J$.Fr(1939409))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1939345, 'mapCacheClear', mapCacheClear, false, false, false);
            J$.N(1939353, 'mapCacheDelete', mapCacheDelete, false, false, false);
            J$.N(1939361, 'mapCacheGet', mapCacheGet, false, false, false);
            J$.N(1939369, 'mapCacheHas', mapCacheHas, false, false, false);
            J$.N(1939377, 'mapCacheSet', mapCacheSet, false, false, false);
            MapCache = J$.N(1939393, 'MapCache', J$.T(1939385, MapCache, 12, false), true, false, false);
            var mapCacheClear = J$.W(1938857, 'mapCacheClear', J$.F(1938753, J$.I(typeof require === 'undefined' ? require = J$.R(1938737, 'require', undefined, true, true) : require = J$.R(1938737, 'require', require, true, true)), false)(J$.T(1938745, './_mapCacheClear', 21, false)), mapCacheClear, false, true), mapCacheDelete = J$.W(1938865, 'mapCacheDelete', J$.F(1938777, J$.I(typeof require === 'undefined' ? require = J$.R(1938761, 'require', undefined, true, true) : require = J$.R(1938761, 'require', require, true, true)), false)(J$.T(1938769, './_mapCacheDelete', 21, false)), mapCacheDelete, false, true), mapCacheGet = J$.W(1938873, 'mapCacheGet', J$.F(1938801, J$.I(typeof require === 'undefined' ? require = J$.R(1938785, 'require', undefined, true, true) : require = J$.R(1938785, 'require', require, true, true)), false)(J$.T(1938793, './_mapCacheGet', 21, false)), mapCacheGet, false, true), mapCacheHas = J$.W(1938881, 'mapCacheHas', J$.F(1938825, J$.I(typeof require === 'undefined' ? require = J$.R(1938809, 'require', undefined, true, true) : require = J$.R(1938809, 'require', require, true, true)), false)(J$.T(1938817, './_mapCacheHas', 21, false)), mapCacheHas, false, true), mapCacheSet = J$.W(1938889, 'mapCacheSet', J$.F(1938849, J$.I(typeof require === 'undefined' ? require = J$.R(1938833, 'require', undefined, true, true) : require = J$.R(1938833, 'require', require, true, true)), false)(J$.T(1938841, './_mapCacheSet', 21, false)), mapCacheSet, false, true);
            J$.P(1939169, J$.G(1939153, J$.R(1939145, 'MapCache', MapCache, false, true), 'prototype'), 'clear', J$.R(1939161, 'mapCacheClear', mapCacheClear, false, true));
            J$.P(1939209, J$.G(1939185, J$.R(1939177, 'MapCache', MapCache, false, true), 'prototype'), J$.T(1939193, 'delete', 21, false), J$.R(1939201, 'mapCacheDelete', mapCacheDelete, false, true));
            J$.P(1939241, J$.G(1939225, J$.R(1939217, 'MapCache', MapCache, false, true), 'prototype'), 'get', J$.R(1939233, 'mapCacheGet', mapCacheGet, false, true));
            J$.P(1939273, J$.G(1939257, J$.R(1939249, 'MapCache', MapCache, false, true), 'prototype'), 'has', J$.R(1939265, 'mapCacheHas', mapCacheHas, false, true));
            J$.P(1939305, J$.G(1939289, J$.R(1939281, 'MapCache', MapCache, false, true), 'prototype'), 'set', J$.R(1939297, 'mapCacheSet', mapCacheSet, false, true));
            J$.P(1939329, J$.I(typeof module === 'undefined' ? module = J$.R(1939313, 'module', undefined, true, true) : module = J$.R(1939313, 'module', module, true, true)), 'exports', J$.R(1939321, 'MapCache', MapCache, false, true));
        } catch (J$e) {
            J$.Ex(1939417, J$e);
        } finally {
            if (J$.Sr(1939425))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

