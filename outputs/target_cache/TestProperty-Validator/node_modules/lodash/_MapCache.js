J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2869705, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_MapCache.js');
            function MapCache(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2869465, arguments.callee, this, arguments);
                            arguments = J$.N(2869473, 'arguments', arguments, true, false, false);
                            entries = J$.N(2869481, 'entries', entries, true, false, false);
                            J$.N(2869489, 'index', index, false, false, false);
                            J$.N(2869497, 'length', length, false, false, false);
                            J$.N(2869505, 'entry', entry, false, false, false);
                            var index = J$.W(2869313, 'index', J$.U(316634, '-', J$.T(2869265, 1, 22, false)), index, false, false), length = J$.W(2869321, 'length', J$.C(152424, J$.B(316642, '==', J$.R(2869273, 'entries', entries, false, false), J$.T(2869281, null, 25, false))) ? J$.T(2869289, 0, 22, false) : J$.G(2869305, J$.R(2869297, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(2869337, J$.R(2869329, 'this', this, false, false), 'clear', false)();
                            while (J$.C(152432, J$.B(316666, '<', index = J$.W(2869353, 'index', J$.B(316658, '+', J$.U(316650, '+', J$.R(2869345, 'index', index, false, false)), 1), index, false, false), J$.R(2869361, 'length', length, false, false)))) {
                                var entry = J$.W(2869393, 'entry', J$.G(2869385, J$.R(2869369, 'entries', entries, false, false), J$.R(2869377, 'index', index, false, false)), entry, false, false);
                                J$.M(2869457, J$.R(2869401, 'this', this, false, false), 'set', false)(J$.G(2869425, J$.R(2869409, 'entry', entry, false, false), J$.T(2869417, 0, 22, false)), J$.G(2869449, J$.R(2869433, 'entry', entry, false, false), J$.T(2869441, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(2869769, J$e);
                        } finally {
                            if (J$.Fr(2869777))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2869713, 'mapCacheClear', mapCacheClear, false, false, false);
            J$.N(2869721, 'mapCacheDelete', mapCacheDelete, false, false, false);
            J$.N(2869729, 'mapCacheGet', mapCacheGet, false, false, false);
            J$.N(2869737, 'mapCacheHas', mapCacheHas, false, false, false);
            J$.N(2869745, 'mapCacheSet', mapCacheSet, false, false, false);
            MapCache = J$.N(2869761, 'MapCache', J$.T(2869753, MapCache, 12, false), true, false, false);
            var mapCacheClear = J$.W(2869225, 'mapCacheClear', J$.F(2869121, J$.I(typeof require === 'undefined' ? require = J$.R(2869105, 'require', undefined, true, true) : require = J$.R(2869105, 'require', require, true, true)), false)(J$.T(2869113, './_mapCacheClear', 21, false)), mapCacheClear, false, true), mapCacheDelete = J$.W(2869233, 'mapCacheDelete', J$.F(2869145, J$.I(typeof require === 'undefined' ? require = J$.R(2869129, 'require', undefined, true, true) : require = J$.R(2869129, 'require', require, true, true)), false)(J$.T(2869137, './_mapCacheDelete', 21, false)), mapCacheDelete, false, true), mapCacheGet = J$.W(2869241, 'mapCacheGet', J$.F(2869169, J$.I(typeof require === 'undefined' ? require = J$.R(2869153, 'require', undefined, true, true) : require = J$.R(2869153, 'require', require, true, true)), false)(J$.T(2869161, './_mapCacheGet', 21, false)), mapCacheGet, false, true), mapCacheHas = J$.W(2869249, 'mapCacheHas', J$.F(2869193, J$.I(typeof require === 'undefined' ? require = J$.R(2869177, 'require', undefined, true, true) : require = J$.R(2869177, 'require', require, true, true)), false)(J$.T(2869185, './_mapCacheHas', 21, false)), mapCacheHas, false, true), mapCacheSet = J$.W(2869257, 'mapCacheSet', J$.F(2869217, J$.I(typeof require === 'undefined' ? require = J$.R(2869201, 'require', undefined, true, true) : require = J$.R(2869201, 'require', require, true, true)), false)(J$.T(2869209, './_mapCacheSet', 21, false)), mapCacheSet, false, true);
            J$.P(2869537, J$.G(2869521, J$.R(2869513, 'MapCache', MapCache, false, true), 'prototype'), 'clear', J$.R(2869529, 'mapCacheClear', mapCacheClear, false, true));
            J$.P(2869577, J$.G(2869553, J$.R(2869545, 'MapCache', MapCache, false, true), 'prototype'), J$.T(2869561, 'delete', 21, false), J$.R(2869569, 'mapCacheDelete', mapCacheDelete, false, true));
            J$.P(2869609, J$.G(2869593, J$.R(2869585, 'MapCache', MapCache, false, true), 'prototype'), 'get', J$.R(2869601, 'mapCacheGet', mapCacheGet, false, true));
            J$.P(2869641, J$.G(2869625, J$.R(2869617, 'MapCache', MapCache, false, true), 'prototype'), 'has', J$.R(2869633, 'mapCacheHas', mapCacheHas, false, true));
            J$.P(2869673, J$.G(2869657, J$.R(2869649, 'MapCache', MapCache, false, true), 'prototype'), 'set', J$.R(2869665, 'mapCacheSet', mapCacheSet, false, true));
            J$.P(2869697, J$.I(typeof module === 'undefined' ? module = J$.R(2869681, 'module', undefined, true, true) : module = J$.R(2869681, 'module', module, true, true)), 'exports', J$.R(2869689, 'MapCache', MapCache, false, true));
        } catch (J$e) {
            J$.Ex(2869785, J$e);
        } finally {
            if (J$.Sr(2869793))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

