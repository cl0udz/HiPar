J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6580417, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_MapCache.js');
            function MapCache(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6580177, arguments.callee, this, arguments);
                            arguments = J$.N(6580185, 'arguments', arguments, true, false, false);
                            entries = J$.N(6580193, 'entries', entries, true, false, false);
                            J$.N(6580201, 'index', index, false, false, false);
                            J$.N(6580209, 'length', length, false, false, false);
                            J$.N(6580217, 'entry', entry, false, false, false);
                            var index = J$.W(6580025, 'index', J$.U(659394, '-', J$.T(6579977, 1, 22, false)), index, false, false), length = J$.W(6580033, 'length', J$.C(345824, J$.B(659402, '==', J$.R(6579985, 'entries', entries, false, false), J$.T(6579993, null, 25, false))) ? J$.T(6580001, 0, 22, false) : J$.G(6580017, J$.R(6580009, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(6580049, J$.R(6580041, 'this', this, false, false), 'clear', false)();
                            while (J$.C(345832, J$.B(659426, '<', index = J$.W(6580065, 'index', J$.B(659418, '+', J$.U(659410, '+', J$.R(6580057, 'index', index, false, false)), 1), index, false, false), J$.R(6580073, 'length', length, false, false)))) {
                                var entry = J$.W(6580105, 'entry', J$.G(6580097, J$.R(6580081, 'entries', entries, false, false), J$.R(6580089, 'index', index, false, false)), entry, false, false);
                                J$.M(6580169, J$.R(6580113, 'this', this, false, false), 'set', false)(J$.G(6580137, J$.R(6580121, 'entry', entry, false, false), J$.T(6580129, 0, 22, false)), J$.G(6580161, J$.R(6580145, 'entry', entry, false, false), J$.T(6580153, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(6580481, J$e);
                        } finally {
                            if (J$.Fr(6580489))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6580425, 'mapCacheClear', mapCacheClear, false, false, false);
            J$.N(6580433, 'mapCacheDelete', mapCacheDelete, false, false, false);
            J$.N(6580441, 'mapCacheGet', mapCacheGet, false, false, false);
            J$.N(6580449, 'mapCacheHas', mapCacheHas, false, false, false);
            J$.N(6580457, 'mapCacheSet', mapCacheSet, false, false, false);
            MapCache = J$.N(6580473, 'MapCache', J$.T(6580465, MapCache, 12, false), true, false, false);
            var mapCacheClear = J$.W(6579937, 'mapCacheClear', J$.F(6579833, J$.I(typeof require === 'undefined' ? require = J$.R(6579817, 'require', undefined, true, true) : require = J$.R(6579817, 'require', require, true, true)), false)(J$.T(6579825, './_mapCacheClear', 21, false)), mapCacheClear, false, true), mapCacheDelete = J$.W(6579945, 'mapCacheDelete', J$.F(6579857, J$.I(typeof require === 'undefined' ? require = J$.R(6579841, 'require', undefined, true, true) : require = J$.R(6579841, 'require', require, true, true)), false)(J$.T(6579849, './_mapCacheDelete', 21, false)), mapCacheDelete, false, true), mapCacheGet = J$.W(6579953, 'mapCacheGet', J$.F(6579881, J$.I(typeof require === 'undefined' ? require = J$.R(6579865, 'require', undefined, true, true) : require = J$.R(6579865, 'require', require, true, true)), false)(J$.T(6579873, './_mapCacheGet', 21, false)), mapCacheGet, false, true), mapCacheHas = J$.W(6579961, 'mapCacheHas', J$.F(6579905, J$.I(typeof require === 'undefined' ? require = J$.R(6579889, 'require', undefined, true, true) : require = J$.R(6579889, 'require', require, true, true)), false)(J$.T(6579897, './_mapCacheHas', 21, false)), mapCacheHas, false, true), mapCacheSet = J$.W(6579969, 'mapCacheSet', J$.F(6579929, J$.I(typeof require === 'undefined' ? require = J$.R(6579913, 'require', undefined, true, true) : require = J$.R(6579913, 'require', require, true, true)), false)(J$.T(6579921, './_mapCacheSet', 21, false)), mapCacheSet, false, true);
            J$.P(6580249, J$.G(6580233, J$.R(6580225, 'MapCache', MapCache, false, true), 'prototype'), 'clear', J$.R(6580241, 'mapCacheClear', mapCacheClear, false, true));
            J$.P(6580289, J$.G(6580265, J$.R(6580257, 'MapCache', MapCache, false, true), 'prototype'), J$.T(6580273, 'delete', 21, false), J$.R(6580281, 'mapCacheDelete', mapCacheDelete, false, true));
            J$.P(6580321, J$.G(6580305, J$.R(6580297, 'MapCache', MapCache, false, true), 'prototype'), 'get', J$.R(6580313, 'mapCacheGet', mapCacheGet, false, true));
            J$.P(6580353, J$.G(6580337, J$.R(6580329, 'MapCache', MapCache, false, true), 'prototype'), 'has', J$.R(6580345, 'mapCacheHas', mapCacheHas, false, true));
            J$.P(6580385, J$.G(6580369, J$.R(6580361, 'MapCache', MapCache, false, true), 'prototype'), 'set', J$.R(6580377, 'mapCacheSet', mapCacheSet, false, true));
            J$.P(6580409, J$.I(typeof module === 'undefined' ? module = J$.R(6580393, 'module', undefined, true, true) : module = J$.R(6580393, 'module', module, true, true)), 'exports', J$.R(6580401, 'MapCache', MapCache, false, true));
        } catch (J$e) {
            J$.Ex(6580497, J$e);
        } finally {
            if (J$.Sr(6580505))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

