J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6617649, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseMap.js');
            function baseMap(collection, iteratee) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6617577, arguments.callee, this, arguments);
                            arguments = J$.N(6617585, 'arguments', arguments, true, false, false);
                            collection = J$.N(6617593, 'collection', collection, true, false, false);
                            iteratee = J$.N(6617601, 'iteratee', iteratee, true, false, false);
                            J$.N(6617609, 'index', index, false, false, false);
                            J$.N(6617617, 'result', result, false, false, false);
                            var index = J$.W(6617401, 'index', J$.U(661738, '-', J$.T(6617329, 1, 22, false)), index, false, false), result = J$.W(6617409, 'result', J$.C(347936, J$.F(6617353, J$.R(6617337, 'isArrayLike', isArrayLike, false, true), false)(J$.R(6617345, 'collection', collection, false, false))) ? J$.F(6617385, J$.I(typeof Array === 'undefined' ? Array = J$.R(6617361, 'Array', undefined, true, true) : Array = J$.R(6617361, 'Array', Array, true, true)), false)(J$.G(6617377, J$.R(6617369, 'collection', collection, false, false), 'length')) : J$.T(6617393, [], 10, false), result, false, false);
                            J$.F(6617553, J$.R(6617417, 'baseEach', baseEach, false, true), false)(J$.R(6617425, 'collection', collection, false, false), J$.T(6617545, function (value, key, collection) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6617505, arguments.callee, this, arguments);
                                            arguments = J$.N(6617513, 'arguments', arguments, true, false, false);
                                            value = J$.N(6617521, 'value', value, true, false, false);
                                            key = J$.N(6617529, 'key', key, true, false, false);
                                            collection = J$.N(6617537, 'collection', collection, true, false, false);
                                            J$.P(6617497, J$.R(6617433, 'result', result, false, false), index = J$.W(6617449, 'index', J$.B(661754, '+', J$.U(661746, '+', J$.R(6617441, 'index', index, false, false)), 1), index, false, false), J$.F(6617489, J$.R(6617457, 'iteratee', iteratee, false, false), false)(J$.R(6617465, 'value', value, false, false), J$.R(6617473, 'key', key, false, false), J$.R(6617481, 'collection', collection, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(6617689, J$e);
                                        } finally {
                                            if (J$.Fr(6617697))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(6617569, J$.R(6617561, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6617705, J$e);
                        } finally {
                            if (J$.Fr(6617713))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6617657, 'baseEach', baseEach, false, false, false);
            J$.N(6617665, 'isArrayLike', isArrayLike, false, false, false);
            baseMap = J$.N(6617681, 'baseMap', J$.T(6617673, baseMap, 12, false), true, false, false);
            var baseEach = J$.W(6617313, 'baseEach', J$.F(6617281, J$.I(typeof require === 'undefined' ? require = J$.R(6617265, 'require', undefined, true, true) : require = J$.R(6617265, 'require', require, true, true)), false)(J$.T(6617273, './_baseEach', 21, false)), baseEach, false, true), isArrayLike = J$.W(6617321, 'isArrayLike', J$.F(6617305, J$.I(typeof require === 'undefined' ? require = J$.R(6617289, 'require', undefined, true, true) : require = J$.R(6617289, 'require', require, true, true)), false)(J$.T(6617297, './isArrayLike', 21, false)), isArrayLike, false, true);
            J$.P(6617641, J$.I(typeof module === 'undefined' ? module = J$.R(6617625, 'module', undefined, true, true) : module = J$.R(6617625, 'module', module, true, true)), 'exports', J$.R(6617633, 'baseMap', baseMap, false, true));
        } catch (J$e) {
            J$.Ex(6617721, J$e);
        } finally {
            if (J$.Sr(6617729))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

