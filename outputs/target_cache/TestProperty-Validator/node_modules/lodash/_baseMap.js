J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2906937, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseMap.js');
            function baseMap(collection, iteratee) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2906865, arguments.callee, this, arguments);
                            arguments = J$.N(2906873, 'arguments', arguments, true, false, false);
                            collection = J$.N(2906881, 'collection', collection, true, false, false);
                            iteratee = J$.N(2906889, 'iteratee', iteratee, true, false, false);
                            J$.N(2906897, 'index', index, false, false, false);
                            J$.N(2906905, 'result', result, false, false, false);
                            var index = J$.W(2906689, 'index', J$.U(318978, '-', J$.T(2906617, 1, 22, false)), index, false, false), result = J$.W(2906697, 'result', J$.C(154536, J$.F(2906641, J$.R(2906625, 'isArrayLike', isArrayLike, false, true), false)(J$.R(2906633, 'collection', collection, false, false))) ? J$.F(2906673, J$.I(typeof Array === 'undefined' ? Array = J$.R(2906649, 'Array', undefined, true, true) : Array = J$.R(2906649, 'Array', Array, true, true)), false)(J$.G(2906665, J$.R(2906657, 'collection', collection, false, false), 'length')) : J$.T(2906681, [], 10, false), result, false, false);
                            J$.F(2906841, J$.R(2906705, 'baseEach', baseEach, false, true), false)(J$.R(2906713, 'collection', collection, false, false), J$.T(2906833, function (value, key, collection) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2906793, arguments.callee, this, arguments);
                                            arguments = J$.N(2906801, 'arguments', arguments, true, false, false);
                                            value = J$.N(2906809, 'value', value, true, false, false);
                                            key = J$.N(2906817, 'key', key, true, false, false);
                                            collection = J$.N(2906825, 'collection', collection, true, false, false);
                                            J$.P(2906785, J$.R(2906721, 'result', result, false, false), index = J$.W(2906737, 'index', J$.B(318994, '+', J$.U(318986, '+', J$.R(2906729, 'index', index, false, false)), 1), index, false, false), J$.F(2906777, J$.R(2906745, 'iteratee', iteratee, false, false), false)(J$.R(2906753, 'value', value, false, false), J$.R(2906761, 'key', key, false, false), J$.R(2906769, 'collection', collection, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2906977, J$e);
                                        } finally {
                                            if (J$.Fr(2906985))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(2906857, J$.R(2906849, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(2906993, J$e);
                        } finally {
                            if (J$.Fr(2907001))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2906945, 'baseEach', baseEach, false, false, false);
            J$.N(2906953, 'isArrayLike', isArrayLike, false, false, false);
            baseMap = J$.N(2906969, 'baseMap', J$.T(2906961, baseMap, 12, false), true, false, false);
            var baseEach = J$.W(2906601, 'baseEach', J$.F(2906569, J$.I(typeof require === 'undefined' ? require = J$.R(2906553, 'require', undefined, true, true) : require = J$.R(2906553, 'require', require, true, true)), false)(J$.T(2906561, './_baseEach', 21, false)), baseEach, false, true), isArrayLike = J$.W(2906609, 'isArrayLike', J$.F(2906593, J$.I(typeof require === 'undefined' ? require = J$.R(2906577, 'require', undefined, true, true) : require = J$.R(2906577, 'require', require, true, true)), false)(J$.T(2906585, './isArrayLike', 21, false)), isArrayLike, false, true);
            J$.P(2906929, J$.I(typeof module === 'undefined' ? module = J$.R(2906913, 'module', undefined, true, true) : module = J$.R(2906913, 'module', module, true, true)), 'exports', J$.R(2906921, 'baseMap', baseMap, false, true));
        } catch (J$e) {
            J$.Ex(2907009, J$e);
        } finally {
            if (J$.Sr(2907017))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

