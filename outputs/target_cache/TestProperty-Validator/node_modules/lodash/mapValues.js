J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7278921, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/mapValues.js');
            function mapValues(object, iteratee) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7278857, arguments.callee, this, arguments);
                            arguments = J$.N(7278865, 'arguments', arguments, true, false, false);
                            object = J$.N(7278873, 'object', object, true, false, false);
                            iteratee = J$.N(7278881, 'iteratee', iteratee, true, false, false);
                            J$.N(7278889, 'result', result, false, false, false);
                            var result = J$.W(7278649, 'result', J$.T(7278641, {}, 11, false), result, false, false);
                            iteratee = J$.W(7278689, 'iteratee', J$.F(7278681, J$.R(7278657, 'baseIteratee', baseIteratee, false, true), false)(J$.R(7278665, 'iteratee', iteratee, false, false), J$.T(7278673, 3, 22, false)), iteratee, false, false);
                            J$.F(7278833, J$.R(7278697, 'baseForOwn', baseForOwn, false, true), false)(J$.R(7278705, 'object', object, false, false), J$.T(7278825, function (value, key, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7278785, arguments.callee, this, arguments);
                                            arguments = J$.N(7278793, 'arguments', arguments, true, false, false);
                                            value = J$.N(7278801, 'value', value, true, false, false);
                                            key = J$.N(7278809, 'key', key, true, false, false);
                                            object = J$.N(7278817, 'object', object, true, false, false);
                                            J$.F(7278777, J$.R(7278713, 'baseAssignValue', baseAssignValue, false, true), false)(J$.R(7278721, 'result', result, false, false), J$.R(7278729, 'key', key, false, false), J$.F(7278769, J$.R(7278737, 'iteratee', iteratee, false, false), false)(J$.R(7278745, 'value', value, false, false), J$.R(7278753, 'key', key, false, false), J$.R(7278761, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(7278969, J$e);
                                        } finally {
                                            if (J$.Fr(7278977))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7278849, J$.R(7278841, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(7278985, J$e);
                        } finally {
                            if (J$.Fr(7278993))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7278929, 'baseAssignValue', baseAssignValue, false, false, false);
            J$.N(7278937, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(7278945, 'baseIteratee', baseIteratee, false, false, false);
            mapValues = J$.N(7278961, 'mapValues', J$.T(7278953, mapValues, 12, false), true, false, false);
            var baseAssignValue = J$.W(7278617, 'baseAssignValue', J$.F(7278561, J$.I(typeof require === 'undefined' ? require = J$.R(7278545, 'require', undefined, true, true) : require = J$.R(7278545, 'require', require, true, true)), false)(J$.T(7278553, './_baseAssignValue', 21, false)), baseAssignValue, false, true), baseForOwn = J$.W(7278625, 'baseForOwn', J$.F(7278585, J$.I(typeof require === 'undefined' ? require = J$.R(7278569, 'require', undefined, true, true) : require = J$.R(7278569, 'require', require, true, true)), false)(J$.T(7278577, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(7278633, 'baseIteratee', J$.F(7278609, J$.I(typeof require === 'undefined' ? require = J$.R(7278593, 'require', undefined, true, true) : require = J$.R(7278593, 'require', require, true, true)), false)(J$.T(7278601, './_baseIteratee', 21, false)), baseIteratee, false, true);
            J$.P(7278913, J$.I(typeof module === 'undefined' ? module = J$.R(7278897, 'module', undefined, true, true) : module = J$.R(7278897, 'module', module, true, true)), 'exports', J$.R(7278905, 'mapValues', mapValues, false, true));
        } catch (J$e) {
            J$.Ex(7279001, J$e);
        } finally {
            if (J$.Sr(7279009))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

