J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6717673, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/after.js');
            function after(n, func) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6717617, arguments.callee, this, arguments);
                            arguments = J$.N(6717625, 'arguments', arguments, true, false, false);
                            n = J$.N(6717633, 'n', n, true, false, false);
                            func = J$.N(6717641, 'func', func, true, false, false);
                            if (J$.C(353616, J$.B(669602, '!=', J$.U(669594, 'typeof', J$.R(6717449, 'func', func, false, false)), J$.T(6717457, 'function', 21, false)))) {
                                throw J$.F(6717481, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(6717465, 'TypeError', undefined, true, true) : TypeError = J$.R(6717465, 'TypeError', TypeError, true, true)), true)(J$.R(6717473, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            n = J$.W(6717513, 'n', J$.F(6717505, J$.R(6717489, 'toInteger', toInteger, false, true), false)(J$.R(6717497, 'n', n, false, false)), n, false, false);
                            return J$.Rt(6717609, J$.T(6717601, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6717585, arguments.callee, this, arguments);
                                            arguments = J$.N(6717593, 'arguments', arguments, true, false, false);
                                            if (J$.C(353624, J$.B(669626, '<', n = J$.W(6717529, 'n', J$.B(669618, '-', J$.U(669610, '+', J$.R(6717521, 'n', n, false, false)), 1), n, false, false), J$.T(6717537, 1, 22, false)))) {
                                                return J$.Rt(6717577, J$.M(6717569, J$.R(6717545, 'func', func, false, false), 'apply', false)(J$.R(6717553, 'this', this, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6717561, 'arguments', undefined, true, true) : arguments = J$.R(6717561, 'arguments', arguments, true, true))));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(6717713, J$e);
                                        } finally {
                                            if (J$.Fr(6717721))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(6717729, J$e);
                        } finally {
                            if (J$.Fr(6717737))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6717681, 'toInteger', toInteger, false, false, false);
            J$.N(6717689, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            after = J$.N(6717705, 'after', J$.T(6717697, after, 12, false), true, false, false);
            var toInteger = J$.W(6717425, 'toInteger', J$.F(6717417, J$.I(typeof require === 'undefined' ? require = J$.R(6717401, 'require', undefined, true, true) : require = J$.R(6717401, 'require', require, true, true)), false)(J$.T(6717409, './toInteger', 21, false)), toInteger, false, true);
            var FUNC_ERROR_TEXT = J$.W(6717441, 'FUNC_ERROR_TEXT', J$.T(6717433, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            J$.P(6717665, J$.I(typeof module === 'undefined' ? module = J$.R(6717649, 'module', undefined, true, true) : module = J$.R(6717649, 'module', module, true, true)), 'exports', J$.R(6717657, 'after', after, false, true));
        } catch (J$e) {
            J$.Ex(6717745, J$e);
        } finally {
            if (J$.Sr(6717753))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

