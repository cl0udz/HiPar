J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3099121, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/findLastIndex.js');
            function findLastIndex(array, predicate, fromIndex) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3099041, arguments.callee, this, arguments);
                            arguments = J$.N(3099049, 'arguments', arguments, true, false, false);
                            array = J$.N(3099057, 'array', array, true, false, false);
                            predicate = J$.N(3099065, 'predicate', predicate, true, false, false);
                            fromIndex = J$.N(3099073, 'fromIndex', fromIndex, true, false, false);
                            J$.N(3099081, 'length', length, false, false, false);
                            J$.N(3099089, 'index', index, false, false, false);
                            var length = J$.W(3098753, 'length', J$.C(166120, J$.B(334162, '==', J$.R(3098713, 'array', array, false, false), J$.T(3098721, null, 25, false))) ? J$.T(3098729, 0, 22, false) : J$.G(3098745, J$.R(3098737, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(166128, J$.U(334170, '!', J$.R(3098761, 'length', length, false, false)))) {
                                return J$.Rt(3098777, J$.U(334178, '-', J$.T(3098769, 1, 22, false)));
                            }
                            var index = J$.W(3098801, 'index', J$.B(334186, '-', J$.R(3098785, 'length', length, false, false), J$.T(3098793, 1, 22, false)), index, false, false);
                            if (J$.C(166144, J$.B(334194, '!==', J$.R(3098809, 'fromIndex', fromIndex, false, false), J$.T(3098817, undefined, 24, false)))) {
                                index = J$.W(3098849, 'index', J$.F(3098841, J$.R(3098825, 'toInteger', toInteger, false, true), false)(J$.R(3098833, 'fromIndex', fromIndex, false, false)), index, false, false);
                                index = J$.W(3098953, 'index', J$.C(166136, J$.B(334202, '<', J$.R(3098857, 'fromIndex', fromIndex, false, false), J$.T(3098865, 0, 22, false))) ? J$.F(3098905, J$.R(3098873, 'nativeMax', nativeMax, false, true), false)(J$.B(334210, '+', J$.R(3098881, 'length', length, false, false), J$.R(3098889, 'index', index, false, false)), J$.T(3098897, 0, 22, false)) : J$.F(3098945, J$.R(3098913, 'nativeMin', nativeMin, false, true), false)(J$.R(3098921, 'index', index, false, false), J$.B(334218, '-', J$.R(3098929, 'length', length, false, false), J$.T(3098937, 1, 22, false))), index, false, false);
                            }
                            return J$.Rt(3099033, J$.F(3099025, J$.R(3098961, 'baseFindIndex', baseFindIndex, false, true), false)(J$.R(3098969, 'array', array, false, false), J$.F(3099001, J$.R(3098977, 'baseIteratee', baseIteratee, false, true), false)(J$.R(3098985, 'predicate', predicate, false, false), J$.T(3098993, 3, 22, false)), J$.R(3099009, 'index', index, false, false), J$.T(3099017, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(3099185, J$e);
                        } finally {
                            if (J$.Fr(3099193))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3099129, 'baseFindIndex', baseFindIndex, false, false, false);
            J$.N(3099137, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(3099145, 'toInteger', toInteger, false, false, false);
            J$.N(3099153, 'nativeMax', nativeMax, false, false, false);
            J$.N(3099161, 'nativeMin', nativeMin, false, false, false);
            findLastIndex = J$.N(3099177, 'findLastIndex', J$.T(3099169, findLastIndex, 12, false), true, false, false);
            var baseFindIndex = J$.W(3098641, 'baseFindIndex', J$.F(3098585, J$.I(typeof require === 'undefined' ? require = J$.R(3098569, 'require', undefined, true, true) : require = J$.R(3098569, 'require', require, true, true)), false)(J$.T(3098577, './_baseFindIndex', 21, false)), baseFindIndex, false, true), baseIteratee = J$.W(3098649, 'baseIteratee', J$.F(3098609, J$.I(typeof require === 'undefined' ? require = J$.R(3098593, 'require', undefined, true, true) : require = J$.R(3098593, 'require', require, true, true)), false)(J$.T(3098601, './_baseIteratee', 21, false)), baseIteratee, false, true), toInteger = J$.W(3098657, 'toInteger', J$.F(3098633, J$.I(typeof require === 'undefined' ? require = J$.R(3098617, 'require', undefined, true, true) : require = J$.R(3098617, 'require', require, true, true)), false)(J$.T(3098625, './toInteger', 21, false)), toInteger, false, true);
            var nativeMax = J$.W(3098697, 'nativeMax', J$.G(3098673, J$.I(typeof Math === 'undefined' ? Math = J$.R(3098665, 'Math', undefined, true, true) : Math = J$.R(3098665, 'Math', Math, true, true)), 'max'), nativeMax, false, true), nativeMin = J$.W(3098705, 'nativeMin', J$.G(3098689, J$.I(typeof Math === 'undefined' ? Math = J$.R(3098681, 'Math', undefined, true, true) : Math = J$.R(3098681, 'Math', Math, true, true)), 'min'), nativeMin, false, true);
            J$.P(3099113, J$.I(typeof module === 'undefined' ? module = J$.R(3099097, 'module', undefined, true, true) : module = J$.R(3099097, 'module', module, true, true)), 'exports', J$.R(3099105, 'findLastIndex', findLastIndex, false, true));
        } catch (J$e) {
            J$.Ex(3099201, J$e);
        } finally {
            if (J$.Sr(3099209))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

