J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2933545, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_cloneTypedArray.js');
            function cloneTypedArray(typedArray, isDeep) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2933481, arguments.callee, this, arguments);
                            arguments = J$.N(2933489, 'arguments', arguments, true, false, false);
                            typedArray = J$.N(2933497, 'typedArray', typedArray, true, false, false);
                            isDeep = J$.N(2933505, 'isDeep', isDeep, true, false, false);
                            J$.N(2933513, 'buffer', buffer, false, false, false);
                            var buffer = J$.W(2933409, 'buffer', J$.C(156064, J$.R(2933353, 'isDeep', isDeep, false, false)) ? J$.F(2933385, J$.R(2933361, 'cloneArrayBuffer', cloneArrayBuffer, false, true), false)(J$.G(2933377, J$.R(2933369, 'typedArray', typedArray, false, false), 'buffer')) : J$.G(2933401, J$.R(2933393, 'typedArray', typedArray, false, false), 'buffer'), buffer, false, false);
                            return J$.Rt(2933473, J$.M(2933465, J$.R(2933417, 'typedArray', typedArray, false, false), 'constructor', true)(J$.R(2933425, 'buffer', buffer, false, false), J$.G(2933441, J$.R(2933433, 'typedArray', typedArray, false, false), 'byteOffset'), J$.G(2933457, J$.R(2933449, 'typedArray', typedArray, false, false), 'length')));
                        } catch (J$e) {
                            J$.Ex(2933577, J$e);
                        } finally {
                            if (J$.Fr(2933585))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2933553, 'cloneArrayBuffer', cloneArrayBuffer, false, false, false);
            cloneTypedArray = J$.N(2933569, 'cloneTypedArray', J$.T(2933561, cloneTypedArray, 12, false), true, false, false);
            var cloneArrayBuffer = J$.W(2933345, 'cloneArrayBuffer', J$.F(2933337, J$.I(typeof require === 'undefined' ? require = J$.R(2933321, 'require', undefined, true, true) : require = J$.R(2933321, 'require', require, true, true)), false)(J$.T(2933329, './_cloneArrayBuffer', 21, false)), cloneArrayBuffer, false, true);
            J$.P(2933537, J$.I(typeof module === 'undefined' ? module = J$.R(2933521, 'module', undefined, true, true) : module = J$.R(2933521, 'module', module, true, true)), 'exports', J$.R(2933529, 'cloneTypedArray', cloneTypedArray, false, true));
        } catch (J$e) {
            J$.Ex(2933593, J$e);
        } finally {
            if (J$.Sr(2933601))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

