J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6644257, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_cloneTypedArray.js');
            function cloneTypedArray(typedArray, isDeep) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6644193, arguments.callee, this, arguments);
                            arguments = J$.N(6644201, 'arguments', arguments, true, false, false);
                            typedArray = J$.N(6644209, 'typedArray', typedArray, true, false, false);
                            isDeep = J$.N(6644217, 'isDeep', isDeep, true, false, false);
                            J$.N(6644225, 'buffer', buffer, false, false, false);
                            var buffer = J$.W(6644121, 'buffer', J$.C(349464, J$.R(6644065, 'isDeep', isDeep, false, false)) ? J$.F(6644097, J$.R(6644073, 'cloneArrayBuffer', cloneArrayBuffer, false, true), false)(J$.G(6644089, J$.R(6644081, 'typedArray', typedArray, false, false), 'buffer')) : J$.G(6644113, J$.R(6644105, 'typedArray', typedArray, false, false), 'buffer'), buffer, false, false);
                            return J$.Rt(6644185, J$.M(6644177, J$.R(6644129, 'typedArray', typedArray, false, false), 'constructor', true)(J$.R(6644137, 'buffer', buffer, false, false), J$.G(6644153, J$.R(6644145, 'typedArray', typedArray, false, false), 'byteOffset'), J$.G(6644169, J$.R(6644161, 'typedArray', typedArray, false, false), 'length')));
                        } catch (J$e) {
                            J$.Ex(6644289, J$e);
                        } finally {
                            if (J$.Fr(6644297))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6644265, 'cloneArrayBuffer', cloneArrayBuffer, false, false, false);
            cloneTypedArray = J$.N(6644281, 'cloneTypedArray', J$.T(6644273, cloneTypedArray, 12, false), true, false, false);
            var cloneArrayBuffer = J$.W(6644057, 'cloneArrayBuffer', J$.F(6644049, J$.I(typeof require === 'undefined' ? require = J$.R(6644033, 'require', undefined, true, true) : require = J$.R(6644033, 'require', require, true, true)), false)(J$.T(6644041, './_cloneArrayBuffer', 21, false)), cloneArrayBuffer, false, true);
            J$.P(6644249, J$.I(typeof module === 'undefined' ? module = J$.R(6644233, 'module', undefined, true, true) : module = J$.R(6644233, 'module', module, true, true)), 'exports', J$.R(6644241, 'cloneTypedArray', cloneTypedArray, false, true));
        } catch (J$e) {
            J$.Ex(6644305, J$e);
        } finally {
            if (J$.Sr(6644313))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

