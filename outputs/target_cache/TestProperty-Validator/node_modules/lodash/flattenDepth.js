J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6812041, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/flattenDepth.js');
            function flattenDepth(array, depth) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6811977, arguments.callee, this, arguments);
                            arguments = J$.N(6811985, 'arguments', arguments, true, false, false);
                            array = J$.N(6811993, 'array', array, true, false, false);
                            depth = J$.N(6812001, 'depth', depth, true, false, false);
                            J$.N(6812009, 'length', length, false, false, false);
                            var length = J$.W(6811849, 'length', J$.C(359592, J$.B(677026, '==', J$.R(6811809, 'array', array, false, false), J$.T(6811817, null, 25, false))) ? J$.T(6811825, 0, 22, false) : J$.G(6811841, J$.R(6811833, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(359600, J$.U(677034, '!', J$.R(6811857, 'length', length, false, false)))) {
                                return J$.Rt(6811873, J$.T(6811865, [], 10, false));
                            }
                            depth = J$.W(6811929, 'depth', J$.C(359608, J$.B(677042, '===', J$.R(6811881, 'depth', depth, false, false), J$.T(6811889, undefined, 24, false))) ? J$.T(6811897, 1, 22, false) : J$.F(6811921, J$.R(6811905, 'toInteger', toInteger, false, true), false)(J$.R(6811913, 'depth', depth, false, false)), depth, false, false);
                            return J$.Rt(6811969, J$.F(6811961, J$.R(6811937, 'baseFlatten', baseFlatten, false, true), false)(J$.R(6811945, 'array', array, false, false), J$.R(6811953, 'depth', depth, false, false)));
                        } catch (J$e) {
                            J$.Ex(6812081, J$e);
                        } finally {
                            if (J$.Fr(6812089))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6812049, 'baseFlatten', baseFlatten, false, false, false);
            J$.N(6812057, 'toInteger', toInteger, false, false, false);
            flattenDepth = J$.N(6812073, 'flattenDepth', J$.T(6812065, flattenDepth, 12, false), true, false, false);
            var baseFlatten = J$.W(6811793, 'baseFlatten', J$.F(6811761, J$.I(typeof require === 'undefined' ? require = J$.R(6811745, 'require', undefined, true, true) : require = J$.R(6811745, 'require', require, true, true)), false)(J$.T(6811753, './_baseFlatten', 21, false)), baseFlatten, false, true), toInteger = J$.W(6811801, 'toInteger', J$.F(6811785, J$.I(typeof require === 'undefined' ? require = J$.R(6811769, 'require', undefined, true, true) : require = J$.R(6811769, 'require', require, true, true)), false)(J$.T(6811777, './toInteger', 21, false)), toInteger, false, true);
            J$.P(6812033, J$.I(typeof module === 'undefined' ? module = J$.R(6812017, 'module', undefined, true, true) : module = J$.R(6812017, 'module', module, true, true)), 'exports', J$.R(6812025, 'flattenDepth', flattenDepth, false, true));
        } catch (J$e) {
            J$.Ex(6812097, J$e);
        } finally {
            if (J$.Sr(6812105))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

