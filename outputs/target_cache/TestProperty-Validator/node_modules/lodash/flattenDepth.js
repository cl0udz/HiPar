J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2170961, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/flattenDepth.js');
            function flattenDepth(array, depth) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2170897, arguments.callee, this, arguments);
                            arguments = J$.N(2170905, 'arguments', arguments, true, false, false);
                            array = J$.N(2170913, 'array', array, true, false, false);
                            depth = J$.N(2170921, 'depth', depth, true, false, false);
                            J$.N(2170929, 'length', length, false, false, false);
                            var length = J$.W(2170769, 'length', J$.C(109072, J$.B(160490, '==', J$.R(2170729, 'array', array, false, false), J$.T(2170737, null, 25, false))) ? J$.T(2170745, 0, 22, false) : J$.G(2170761, J$.R(2170753, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(109080, J$.U(160498, '!', J$.R(2170777, 'length', length, false, false)))) {
                                return J$.Rt(2170793, J$.T(2170785, [], 10, false));
                            }
                            depth = J$.W(2170849, 'depth', J$.C(109088, J$.B(160506, '===', J$.R(2170801, 'depth', depth, false, false), J$.T(2170809, undefined, 24, false))) ? J$.T(2170817, 1, 22, false) : J$.F(2170841, J$.R(2170825, 'toInteger', toInteger, false, true), false)(J$.R(2170833, 'depth', depth, false, false)), depth, false, false);
                            return J$.Rt(2170889, J$.F(2170881, J$.R(2170857, 'baseFlatten', baseFlatten, false, true), false)(J$.R(2170865, 'array', array, false, false), J$.R(2170873, 'depth', depth, false, false)));
                        } catch (J$e) {
                            J$.Ex(2171001, J$e);
                        } finally {
                            if (J$.Fr(2171009))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2170969, 'baseFlatten', baseFlatten, false, false, false);
            J$.N(2170977, 'toInteger', toInteger, false, false, false);
            flattenDepth = J$.N(2170993, 'flattenDepth', J$.T(2170985, flattenDepth, 12, false), true, false, false);
            var baseFlatten = J$.W(2170713, 'baseFlatten', J$.F(2170681, J$.I(typeof require === 'undefined' ? require = J$.R(2170665, 'require', undefined, true, true) : require = J$.R(2170665, 'require', require, true, true)), false)(J$.T(2170673, './_baseFlatten', 21, false)), baseFlatten, false, true), toInteger = J$.W(2170721, 'toInteger', J$.F(2170705, J$.I(typeof require === 'undefined' ? require = J$.R(2170689, 'require', undefined, true, true) : require = J$.R(2170689, 'require', require, true, true)), false)(J$.T(2170697, './toInteger', 21, false)), toInteger, false, true);
            J$.P(2170953, J$.I(typeof module === 'undefined' ? module = J$.R(2170937, 'module', undefined, true, true) : module = J$.R(2170937, 'module', module, true, true)), 'exports', J$.R(2170945, 'flattenDepth', flattenDepth, false, true));
        } catch (J$e) {
            J$.Ex(2171017, J$e);
        } finally {
            if (J$.Sr(2171025))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

