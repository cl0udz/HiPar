J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3207457, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isError.js');
            function isError(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3207401, arguments.callee, this, arguments);
                            arguments = J$.N(3207409, 'arguments', arguments, true, false, false);
                            value = J$.N(3207417, 'value', value, true, false, false);
                            J$.N(3207425, 'tag', tag, false, false, false);
                            if (J$.C(167624, J$.U(335506, '!', J$.F(3207233, J$.R(3207217, 'isObjectLike', isObjectLike, false, true), false)(J$.R(3207225, 'value', value, false, false))))) {
                                return J$.Rt(3207249, J$.T(3207241, false, 23, false));
                            }
                            var tag = J$.W(3207281, 'tag', J$.F(3207273, J$.R(3207257, 'baseGetTag', baseGetTag, false, true), false)(J$.R(3207265, 'value', value, false, false)), tag, false, false);
                            return J$.Rt(3207393, J$.C(167656, J$.C(167632, J$.B(335514, '==', J$.R(3207289, 'tag', tag, false, false), J$.R(3207297, 'errorTag', errorTag, false, true))) ? J$._() : J$.B(335522, '==', J$.R(3207305, 'tag', tag, false, false), J$.R(3207313, 'domExcTag', domExcTag, false, true))) ? J$._() : J$.C(167648, J$.C(167640, J$.B(335538, '==', J$.U(335530, 'typeof', J$.G(3207329, J$.R(3207321, 'value', value, false, false), 'message')), J$.T(3207337, 'string', 21, false))) ? J$.B(335554, '==', J$.U(335546, 'typeof', J$.G(3207353, J$.R(3207345, 'value', value, false, false), 'name')), J$.T(3207361, 'string', 21, false)) : J$._()) ? J$.U(335562, '!', J$.F(3207385, J$.R(3207369, 'isPlainObject', isPlainObject, false, true), false)(J$.R(3207377, 'value', value, false, false))) : J$._());
                        } catch (J$e) {
                            J$.Ex(3207521, J$e);
                        } finally {
                            if (J$.Fr(3207529))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3207465, 'baseGetTag', baseGetTag, false, false, false);
            J$.N(3207473, 'isObjectLike', isObjectLike, false, false, false);
            J$.N(3207481, 'isPlainObject', isPlainObject, false, false, false);
            J$.N(3207489, 'domExcTag', domExcTag, false, false, false);
            J$.N(3207497, 'errorTag', errorTag, false, false, false);
            isError = J$.N(3207513, 'isError', J$.T(3207505, isError, 12, false), true, false, false);
            var baseGetTag = J$.W(3207161, 'baseGetTag', J$.F(3207105, J$.I(typeof require === 'undefined' ? require = J$.R(3207089, 'require', undefined, true, true) : require = J$.R(3207089, 'require', require, true, true)), false)(J$.T(3207097, './_baseGetTag', 21, false)), baseGetTag, false, true), isObjectLike = J$.W(3207169, 'isObjectLike', J$.F(3207129, J$.I(typeof require === 'undefined' ? require = J$.R(3207113, 'require', undefined, true, true) : require = J$.R(3207113, 'require', require, true, true)), false)(J$.T(3207121, './isObjectLike', 21, false)), isObjectLike, false, true), isPlainObject = J$.W(3207177, 'isPlainObject', J$.F(3207153, J$.I(typeof require === 'undefined' ? require = J$.R(3207137, 'require', undefined, true, true) : require = J$.R(3207137, 'require', require, true, true)), false)(J$.T(3207145, './isPlainObject', 21, false)), isPlainObject, false, true);
            var domExcTag = J$.W(3207201, 'domExcTag', J$.T(3207185, '[object DOMException]', 21, false), domExcTag, false, true), errorTag = J$.W(3207209, 'errorTag', J$.T(3207193, '[object Error]', 21, false), errorTag, false, true);
            J$.P(3207449, J$.I(typeof module === 'undefined' ? module = J$.R(3207433, 'module', undefined, true, true) : module = J$.R(3207433, 'module', module, true, true)), 'exports', J$.R(3207441, 'isError', isError, false, true));
        } catch (J$e) {
            J$.Ex(3207537, J$e);
        } finally {
            if (J$.Sr(3207545))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

