J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1950489, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseAt.js');
            function baseAt(object, paths) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1950401, arguments.callee, this, arguments);
                            arguments = J$.N(1950409, 'arguments', arguments, true, false, false);
                            object = J$.N(1950417, 'object', object, true, false, false);
                            paths = J$.N(1950425, 'paths', paths, true, false, false);
                            J$.N(1950433, 'index', index, false, false, false);
                            J$.N(1950441, 'length', length, false, false, false);
                            J$.N(1950449, 'result', result, false, false, false);
                            J$.N(1950457, 'skip', skip, false, false, false);
                            var index = J$.W(1950241, 'index', J$.U(143706, '-', J$.T(1950177, 1, 22, false)), index, false, false), length = J$.W(1950249, 'length', J$.G(1950193, J$.R(1950185, 'paths', paths, false, false), 'length'), length, false, false), result = J$.W(1950257, 'result', J$.F(1950217, J$.I(typeof Array === 'undefined' ? Array = J$.R(1950201, 'Array', undefined, true, true) : Array = J$.R(1950201, 'Array', Array, true, true)), false)(J$.R(1950209, 'length', length, false, false)), result, false, false), skip = J$.W(1950265, 'skip', J$.B(143714, '==', J$.R(1950225, 'object', object, false, false), J$.T(1950233, null, 25, false)), skip, false, false);
                            while (J$.C(95952, J$.B(143738, '<', index = J$.W(1950281, 'index', J$.B(143730, '+', J$.U(143722, '+', J$.R(1950273, 'index', index, false, false)), 1), index, false, false), J$.R(1950289, 'length', length, false, false)))) {
                                J$.P(1950377, J$.R(1950297, 'result', result, false, false), J$.R(1950305, 'index', index, false, false), J$.C(95944, J$.R(1950313, 'skip', skip, false, false)) ? J$.T(1950321, undefined, 24, false) : J$.F(1950369, J$.R(1950329, 'get', get, false, true), false)(J$.R(1950337, 'object', object, false, false), J$.G(1950361, J$.R(1950345, 'paths', paths, false, false), J$.R(1950353, 'index', index, false, false))));
                            }
                            return J$.Rt(1950393, J$.R(1950385, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(1950521, J$e);
                        } finally {
                            if (J$.Fr(1950529))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1950497, 'get', get, false, false, false);
            baseAt = J$.N(1950513, 'baseAt', J$.T(1950505, baseAt, 12, false), true, false, false);
            var get = J$.W(1950169, 'get', J$.F(1950161, J$.I(typeof require === 'undefined' ? require = J$.R(1950145, 'require', undefined, true, true) : require = J$.R(1950145, 'require', require, true, true)), false)(J$.T(1950153, './get', 21, false)), get, false, true);
            J$.P(1950481, J$.I(typeof module === 'undefined' ? module = J$.R(1950465, 'module', undefined, true, true) : module = J$.R(1950465, 'module', module, true, true)), 'exports', J$.R(1950473, 'baseAt', baseAt, false, true));
        } catch (J$e) {
            J$.Ex(1950537, J$e);
        } finally {
            if (J$.Sr(1950545))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

