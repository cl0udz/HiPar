J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6591569, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseAt.js');
            function baseAt(object, paths) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6591481, arguments.callee, this, arguments);
                            arguments = J$.N(6591489, 'arguments', arguments, true, false, false);
                            object = J$.N(6591497, 'object', object, true, false, false);
                            paths = J$.N(6591505, 'paths', paths, true, false, false);
                            J$.N(6591513, 'index', index, false, false, false);
                            J$.N(6591521, 'length', length, false, false, false);
                            J$.N(6591529, 'result', result, false, false, false);
                            J$.N(6591537, 'skip', skip, false, false, false);
                            var index = J$.W(6591321, 'index', J$.U(660242, '-', J$.T(6591257, 1, 22, false)), index, false, false), length = J$.W(6591329, 'length', J$.G(6591273, J$.R(6591265, 'paths', paths, false, false), 'length'), length, false, false), result = J$.W(6591337, 'result', J$.F(6591297, J$.I(typeof Array === 'undefined' ? Array = J$.R(6591281, 'Array', undefined, true, true) : Array = J$.R(6591281, 'Array', Array, true, true)), false)(J$.R(6591289, 'length', length, false, false)), result, false, false), skip = J$.W(6591345, 'skip', J$.B(660250, '==', J$.R(6591305, 'object', object, false, false), J$.T(6591313, null, 25, false)), skip, false, false);
                            while (J$.C(346472, J$.B(660274, '<', index = J$.W(6591361, 'index', J$.B(660266, '+', J$.U(660258, '+', J$.R(6591353, 'index', index, false, false)), 1), index, false, false), J$.R(6591369, 'length', length, false, false)))) {
                                J$.P(6591457, J$.R(6591377, 'result', result, false, false), J$.R(6591385, 'index', index, false, false), J$.C(346464, J$.R(6591393, 'skip', skip, false, false)) ? J$.T(6591401, undefined, 24, false) : J$.F(6591449, J$.R(6591409, 'get', get, false, true), false)(J$.R(6591417, 'object', object, false, false), J$.G(6591441, J$.R(6591425, 'paths', paths, false, false), J$.R(6591433, 'index', index, false, false))));
                            }
                            return J$.Rt(6591473, J$.R(6591465, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6591601, J$e);
                        } finally {
                            if (J$.Fr(6591609))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6591577, 'get', get, false, false, false);
            baseAt = J$.N(6591593, 'baseAt', J$.T(6591585, baseAt, 12, false), true, false, false);
            var get = J$.W(6591249, 'get', J$.F(6591241, J$.I(typeof require === 'undefined' ? require = J$.R(6591225, 'require', undefined, true, true) : require = J$.R(6591225, 'require', require, true, true)), false)(J$.T(6591233, './get', 21, false)), get, false, true);
            J$.P(6591561, J$.I(typeof module === 'undefined' ? module = J$.R(6591545, 'module', undefined, true, true) : module = J$.R(6591545, 'module', module, true, true)), 'exports', J$.R(6591553, 'baseAt', baseAt, false, true));
        } catch (J$e) {
            J$.Ex(6591617, J$e);
        } finally {
            if (J$.Sr(6591625))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

