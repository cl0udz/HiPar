J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7296617, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/property.js');
            function property(path) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7296569, arguments.callee, this, arguments);
                            arguments = J$.N(7296577, 'arguments', arguments, true, false, false);
                            path = J$.N(7296585, 'path', path, true, false, false);
                            return J$.Rt(7296561, J$.C(388264, J$.F(7296489, J$.R(7296473, 'isKey', isKey, false, true), false)(J$.R(7296481, 'path', path, false, false))) ? J$.F(7296529, J$.R(7296497, 'baseProperty', baseProperty, false, true), false)(J$.F(7296521, J$.R(7296505, 'toKey', toKey, false, true), false)(J$.R(7296513, 'path', path, false, false))) : J$.F(7296553, J$.R(7296537, 'basePropertyDeep', basePropertyDeep, false, true), false)(J$.R(7296545, 'path', path, false, false)));
                        } catch (J$e) {
                            J$.Ex(7296673, J$e);
                        } finally {
                            if (J$.Fr(7296681))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7296625, 'baseProperty', baseProperty, false, false, false);
            J$.N(7296633, 'basePropertyDeep', basePropertyDeep, false, false, false);
            J$.N(7296641, 'isKey', isKey, false, false, false);
            J$.N(7296649, 'toKey', toKey, false, false, false);
            property = J$.N(7296665, 'property', J$.T(7296657, property, 12, false), true, false, false);
            var baseProperty = J$.W(7296441, 'baseProperty', J$.F(7296361, J$.I(typeof require === 'undefined' ? require = J$.R(7296345, 'require', undefined, true, true) : require = J$.R(7296345, 'require', require, true, true)), false)(J$.T(7296353, './_baseProperty', 21, false)), baseProperty, false, true), basePropertyDeep = J$.W(7296449, 'basePropertyDeep', J$.F(7296385, J$.I(typeof require === 'undefined' ? require = J$.R(7296369, 'require', undefined, true, true) : require = J$.R(7296369, 'require', require, true, true)), false)(J$.T(7296377, './_basePropertyDeep', 21, false)), basePropertyDeep, false, true), isKey = J$.W(7296457, 'isKey', J$.F(7296409, J$.I(typeof require === 'undefined' ? require = J$.R(7296393, 'require', undefined, true, true) : require = J$.R(7296393, 'require', require, true, true)), false)(J$.T(7296401, './_isKey', 21, false)), isKey, false, true), toKey = J$.W(7296465, 'toKey', J$.F(7296433, J$.I(typeof require === 'undefined' ? require = J$.R(7296417, 'require', undefined, true, true) : require = J$.R(7296417, 'require', require, true, true)), false)(J$.T(7296425, './_toKey', 21, false)), toKey, false, true);
            J$.P(7296609, J$.I(typeof module === 'undefined' ? module = J$.R(7296593, 'module', undefined, true, true) : module = J$.R(7296593, 'module', module, true, true)), 'exports', J$.R(7296601, 'property', property, false, true));
        } catch (J$e) {
            J$.Ex(7296689, J$e);
        } finally {
            if (J$.Sr(7296697))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

