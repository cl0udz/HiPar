J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1970321, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseIsMap.js');
            function baseIsMap(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1970273, arguments.callee, this, arguments);
                            arguments = J$.N(1970281, 'arguments', arguments, true, false, false);
                            value = J$.N(1970289, 'value', value, true, false, false);
                            return J$.Rt(1970265, J$.C(97160, J$.F(1970225, J$.R(1970209, 'isObjectLike', isObjectLike, false, true), false)(J$.R(1970217, 'value', value, false, false))) ? J$.B(144890, '==', J$.F(1970249, J$.R(1970233, 'getTag', getTag, false, true), false)(J$.R(1970241, 'value', value, false, false)), J$.R(1970257, 'mapTag', mapTag, false, true)) : J$._());
                        } catch (J$e) {
                            J$.Ex(1970369, J$e);
                        } finally {
                            if (J$.Fr(1970377))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1970329, 'getTag', getTag, false, false, false);
            J$.N(1970337, 'isObjectLike', isObjectLike, false, false, false);
            J$.N(1970345, 'mapTag', mapTag, false, false, false);
            baseIsMap = J$.N(1970361, 'baseIsMap', J$.T(1970353, baseIsMap, 12, false), true, false, false);
            var getTag = J$.W(1970177, 'getTag', J$.F(1970145, J$.I(typeof require === 'undefined' ? require = J$.R(1970129, 'require', undefined, true, true) : require = J$.R(1970129, 'require', require, true, true)), false)(J$.T(1970137, './_getTag', 21, false)), getTag, false, true), isObjectLike = J$.W(1970185, 'isObjectLike', J$.F(1970169, J$.I(typeof require === 'undefined' ? require = J$.R(1970153, 'require', undefined, true, true) : require = J$.R(1970153, 'require', require, true, true)), false)(J$.T(1970161, './isObjectLike', 21, false)), isObjectLike, false, true);
            var mapTag = J$.W(1970201, 'mapTag', J$.T(1970193, '[object Map]', 21, false), mapTag, false, true);
            J$.P(1970313, J$.I(typeof module === 'undefined' ? module = J$.R(1970297, 'module', undefined, true, true) : module = J$.R(1970297, 'module', module, true, true)), 'exports', J$.R(1970305, 'baseIsMap', baseIsMap, false, true));
        } catch (J$e) {
            J$.Ex(1970385, J$e);
        } finally {
            if (J$.Sr(1970393))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

