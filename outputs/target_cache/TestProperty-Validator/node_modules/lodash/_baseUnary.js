J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6635961, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseUnary.js');
            function baseUnary(func) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6635913, arguments.callee, this, arguments);
                            arguments = J$.N(6635921, 'arguments', arguments, true, false, false);
                            func = J$.N(6635929, 'func', func, true, false, false);
                            return J$.Rt(6635905, J$.T(6635897, function (value) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6635873, arguments.callee, this, arguments);
                                            arguments = J$.N(6635881, 'arguments', arguments, true, false, false);
                                            value = J$.N(6635889, 'value', value, true, false, false);
                                            return J$.Rt(6635865, J$.F(6635857, J$.R(6635841, 'func', func, false, false), false)(J$.R(6635849, 'value', value, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(6635985, J$e);
                                        } finally {
                                            if (J$.Fr(6635993))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(6636001, J$e);
                        } finally {
                            if (J$.Fr(6636009))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            baseUnary = J$.N(6635977, 'baseUnary', J$.T(6635969, baseUnary, 12, false), true, false, false);
            J$.P(6635953, J$.I(typeof module === 'undefined' ? module = J$.R(6635937, 'module', undefined, true, true) : module = J$.R(6635937, 'module', module, true, true)), 'exports', J$.R(6635945, 'baseUnary', baseUnary, false, true));
        } catch (J$e) {
            J$.Ex(6636017, J$e);
        } finally {
            if (J$.Sr(6636025))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

