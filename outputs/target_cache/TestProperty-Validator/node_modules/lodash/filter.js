J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6808001, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/filter.js');
            function filter(collection, predicate) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6807937, arguments.callee, this, arguments);
                            arguments = J$.N(6807945, 'arguments', arguments, true, false, false);
                            collection = J$.N(6807953, 'collection', collection, true, false, false);
                            predicate = J$.N(6807961, 'predicate', predicate, true, false, false);
                            J$.N(6807969, 'func', func, false, false, false);
                            var func = J$.W(6807865, 'func', J$.C(359480, J$.F(6807841, J$.R(6807825, 'isArray', isArray, false, true), false)(J$.R(6807833, 'collection', collection, false, false))) ? J$.R(6807849, 'arrayFilter', arrayFilter, false, true) : J$.R(6807857, 'baseFilter', baseFilter, false, true), func, false, false);
                            return J$.Rt(6807929, J$.F(6807921, J$.R(6807873, 'func', func, false, false), false)(J$.R(6807881, 'collection', collection, false, false), J$.F(6807913, J$.R(6807889, 'baseIteratee', baseIteratee, false, true), false)(J$.R(6807897, 'predicate', predicate, false, false), J$.T(6807905, 3, 22, false))));
                        } catch (J$e) {
                            J$.Ex(6808057, J$e);
                        } finally {
                            if (J$.Fr(6808065))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6808009, 'arrayFilter', arrayFilter, false, false, false);
            J$.N(6808017, 'baseFilter', baseFilter, false, false, false);
            J$.N(6808025, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(6808033, 'isArray', isArray, false, false, false);
            filter = J$.N(6808049, 'filter', J$.T(6808041, filter, 12, false), true, false, false);
            var arrayFilter = J$.W(6807793, 'arrayFilter', J$.F(6807713, J$.I(typeof require === 'undefined' ? require = J$.R(6807697, 'require', undefined, true, true) : require = J$.R(6807697, 'require', require, true, true)), false)(J$.T(6807705, './_arrayFilter', 21, false)), arrayFilter, false, true), baseFilter = J$.W(6807801, 'baseFilter', J$.F(6807737, J$.I(typeof require === 'undefined' ? require = J$.R(6807721, 'require', undefined, true, true) : require = J$.R(6807721, 'require', require, true, true)), false)(J$.T(6807729, './_baseFilter', 21, false)), baseFilter, false, true), baseIteratee = J$.W(6807809, 'baseIteratee', J$.F(6807761, J$.I(typeof require === 'undefined' ? require = J$.R(6807745, 'require', undefined, true, true) : require = J$.R(6807745, 'require', require, true, true)), false)(J$.T(6807753, './_baseIteratee', 21, false)), baseIteratee, false, true), isArray = J$.W(6807817, 'isArray', J$.F(6807785, J$.I(typeof require === 'undefined' ? require = J$.R(6807769, 'require', undefined, true, true) : require = J$.R(6807769, 'require', require, true, true)), false)(J$.T(6807777, './isArray', 21, false)), isArray, false, true);
            J$.P(6807993, J$.I(typeof module === 'undefined' ? module = J$.R(6807977, 'module', undefined, true, true) : module = J$.R(6807977, 'module', module, true, true)), 'exports', J$.R(6807985, 'filter', filter, false, true));
        } catch (J$e) {
            J$.Ex(6808073, J$e);
        } finally {
            if (J$.Sr(6808081))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

