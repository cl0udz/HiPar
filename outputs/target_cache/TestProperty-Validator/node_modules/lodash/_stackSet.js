J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2068273, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_stackSet.js');
            function stackSet(key, value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2068201, arguments.callee, this, arguments);
                            arguments = J$.N(2068209, 'arguments', arguments, true, false, false);
                            key = J$.N(2068217, 'key', key, true, false, false);
                            value = J$.N(2068225, 'value', value, true, false, false);
                            J$.N(2068233, 'data', data, false, false, false);
                            J$.N(2068241, 'pairs', pairs, false, false, false);
                            var data = J$.W(2067897, 'data', J$.G(2067889, J$.R(2067881, 'this', this, false, false), '__data__'), data, false, false);
                            if (J$.C(102928, J$.B(151674, 'instanceof', J$.R(2067905, 'data', data, false, false), J$.R(2067913, 'ListCache', ListCache, false, true)))) {
                                var pairs = J$.W(2067937, 'pairs', J$.G(2067929, J$.R(2067921, 'data', data, false, false), '__data__'), pairs, false, false);
                                if (J$.C(102920, J$.C(102912, J$.U(151682, '!', J$.R(2067945, 'Map', Map, false, true))) ? J$._() : J$.B(151698, '<', J$.G(2067961, J$.R(2067953, 'pairs', pairs, false, false), 'length'), J$.B(151690, '-', J$.R(2067969, 'LARGE_ARRAY_SIZE', LARGE_ARRAY_SIZE, false, true), J$.T(2067977, 1, 22, false))))) {
                                    J$.M(2068017, J$.R(2067985, 'pairs', pairs, false, false), 'push', false)(J$.T(2068009, [
                                        J$.R(2067993, 'key', key, false, false),
                                        J$.R(2068001, 'value', value, false, false)
                                    ], 10, false));
                                    J$.P(2068049, J$.R(2068025, 'this', this, false, false), 'size', J$.A(2068041, J$.R(2068033, 'data', data, false, false), 'size', '+')(1));
                                    return J$.Rt(2068065, J$.R(2068057, 'this', this, false, false));
                                }
                                data = J$.W(2068113, 'data', J$.P(2068105, J$.R(2068073, 'this', this, false, false), '__data__', J$.F(2068097, J$.R(2068081, 'MapCache', MapCache, false, true), true)(J$.R(2068089, 'pairs', pairs, false, false))), data, false, false);
                            }
                            J$.M(2068145, J$.R(2068121, 'data', data, false, false), 'set', false)(J$.R(2068129, 'key', key, false, false), J$.R(2068137, 'value', value, false, false));
                            J$.P(2068177, J$.R(2068153, 'this', this, false, false), 'size', J$.G(2068169, J$.R(2068161, 'data', data, false, false), 'size'));
                            return J$.Rt(2068193, J$.R(2068185, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(2068329, J$e);
                        } finally {
                            if (J$.Fr(2068337))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2068281, 'ListCache', ListCache, false, false, false);
            J$.N(2068289, 'Map', Map, false, false, false);
            J$.N(2068297, 'MapCache', MapCache, false, false, false);
            J$.N(2068305, 'LARGE_ARRAY_SIZE', LARGE_ARRAY_SIZE, false, false, false);
            stackSet = J$.N(2068321, 'stackSet', J$.T(2068313, stackSet, 12, false), true, false, false);
            var ListCache = J$.W(2067841, 'ListCache', J$.F(2067785, J$.I(typeof require === 'undefined' ? require = J$.R(2067769, 'require', undefined, true, true) : require = J$.R(2067769, 'require', require, true, true)), false)(J$.T(2067777, './_ListCache', 21, false)), ListCache, false, true), Map = J$.W(2067849, 'Map', J$.F(2067809, J$.I(typeof require === 'undefined' ? require = J$.R(2067793, 'require', undefined, true, true) : require = J$.R(2067793, 'require', require, true, true)), false)(J$.T(2067801, './_Map', 21, false)), Map, false, true), MapCache = J$.W(2067857, 'MapCache', J$.F(2067833, J$.I(typeof require === 'undefined' ? require = J$.R(2067817, 'require', undefined, true, true) : require = J$.R(2067817, 'require', require, true, true)), false)(J$.T(2067825, './_MapCache', 21, false)), MapCache, false, true);
            var LARGE_ARRAY_SIZE = J$.W(2067873, 'LARGE_ARRAY_SIZE', J$.T(2067865, 200, 22, false), LARGE_ARRAY_SIZE, false, true);
            J$.P(2068265, J$.I(typeof module === 'undefined' ? module = J$.R(2068249, 'module', undefined, true, true) : module = J$.R(2068249, 'module', module, true, true)), 'exports', J$.R(2068257, 'stackSet', stackSet, false, true));
        } catch (J$e) {
            J$.Ex(2068345, J$e);
        } finally {
            if (J$.Sr(2068353))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

