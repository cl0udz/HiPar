J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2163169, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/dropRight.js');
            function dropRight(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2163097, arguments.callee, this, arguments);
                            arguments = J$.N(2163105, 'arguments', arguments, true, false, false);
                            array = J$.N(2163113, 'array', array, true, false, false);
                            n = J$.N(2163121, 'n', n, true, false, false);
                            guard = J$.N(2163129, 'guard', guard, true, false, false);
                            J$.N(2163137, 'length', length, false, false, false);
                            var length = J$.W(2162905, 'length', J$.C(108760, J$.B(160210, '==', J$.R(2162865, 'array', array, false, false), J$.T(2162873, null, 25, false))) ? J$.T(2162881, 0, 22, false) : J$.G(2162897, J$.R(2162889, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(108768, J$.U(160218, '!', J$.R(2162913, 'length', length, false, false)))) {
                                return J$.Rt(2162929, J$.T(2162921, [], 10, false));
                            }
                            n = J$.W(2162993, 'n', J$.C(108784, J$.C(108776, J$.R(2162937, 'guard', guard, false, false)) ? J$._() : J$.B(160226, '===', J$.R(2162945, 'n', n, false, false), J$.T(2162953, undefined, 24, false))) ? J$.T(2162961, 1, 22, false) : J$.F(2162985, J$.R(2162969, 'toInteger', toInteger, false, true), false)(J$.R(2162977, 'n', n, false, false)), n, false, false);
                            n = J$.W(2163017, 'n', J$.B(160234, '-', J$.R(2163001, 'length', length, false, false), J$.R(2163009, 'n', n, false, false)), n, false, false);
                            return J$.Rt(2163089, J$.F(2163081, J$.R(2163025, 'baseSlice', baseSlice, false, true), false)(J$.R(2163033, 'array', array, false, false), J$.T(2163041, 0, 22, false), J$.C(108792, J$.B(160242, '<', J$.R(2163049, 'n', n, false, false), J$.T(2163057, 0, 22, false))) ? J$.T(2163065, 0, 22, false) : J$.R(2163073, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(2163209, J$e);
                        } finally {
                            if (J$.Fr(2163217))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2163177, 'baseSlice', baseSlice, false, false, false);
            J$.N(2163185, 'toInteger', toInteger, false, false, false);
            dropRight = J$.N(2163201, 'dropRight', J$.T(2163193, dropRight, 12, false), true, false, false);
            var baseSlice = J$.W(2162849, 'baseSlice', J$.F(2162817, J$.I(typeof require === 'undefined' ? require = J$.R(2162801, 'require', undefined, true, true) : require = J$.R(2162801, 'require', require, true, true)), false)(J$.T(2162809, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(2162857, 'toInteger', J$.F(2162841, J$.I(typeof require === 'undefined' ? require = J$.R(2162825, 'require', undefined, true, true) : require = J$.R(2162825, 'require', require, true, true)), false)(J$.T(2162833, './toInteger', 21, false)), toInteger, false, true);
            J$.P(2163161, J$.I(typeof module === 'undefined' ? module = J$.R(2163145, 'module', undefined, true, true) : module = J$.R(2163145, 'module', module, true, true)), 'exports', J$.R(2163153, 'dropRight', dropRight, false, true));
        } catch (J$e) {
            J$.Ex(2163225, J$e);
        } finally {
            if (J$.Sr(2163233))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

