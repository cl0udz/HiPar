J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6804249, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/dropRight.js');
            function dropRight(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6804177, arguments.callee, this, arguments);
                            arguments = J$.N(6804185, 'arguments', arguments, true, false, false);
                            array = J$.N(6804193, 'array', array, true, false, false);
                            n = J$.N(6804201, 'n', n, true, false, false);
                            guard = J$.N(6804209, 'guard', guard, true, false, false);
                            J$.N(6804217, 'length', length, false, false, false);
                            var length = J$.W(6803985, 'length', J$.C(359280, J$.B(676746, '==', J$.R(6803945, 'array', array, false, false), J$.T(6803953, null, 25, false))) ? J$.T(6803961, 0, 22, false) : J$.G(6803977, J$.R(6803969, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(359288, J$.U(676754, '!', J$.R(6803993, 'length', length, false, false)))) {
                                return J$.Rt(6804009, J$.T(6804001, [], 10, false));
                            }
                            n = J$.W(6804073, 'n', J$.C(359304, J$.C(359296, J$.R(6804017, 'guard', guard, false, false)) ? J$._() : J$.B(676762, '===', J$.R(6804025, 'n', n, false, false), J$.T(6804033, undefined, 24, false))) ? J$.T(6804041, 1, 22, false) : J$.F(6804065, J$.R(6804049, 'toInteger', toInteger, false, true), false)(J$.R(6804057, 'n', n, false, false)), n, false, false);
                            n = J$.W(6804097, 'n', J$.B(676770, '-', J$.R(6804081, 'length', length, false, false), J$.R(6804089, 'n', n, false, false)), n, false, false);
                            return J$.Rt(6804169, J$.F(6804161, J$.R(6804105, 'baseSlice', baseSlice, false, true), false)(J$.R(6804113, 'array', array, false, false), J$.T(6804121, 0, 22, false), J$.C(359312, J$.B(676778, '<', J$.R(6804129, 'n', n, false, false), J$.T(6804137, 0, 22, false))) ? J$.T(6804145, 0, 22, false) : J$.R(6804153, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(6804289, J$e);
                        } finally {
                            if (J$.Fr(6804297))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6804257, 'baseSlice', baseSlice, false, false, false);
            J$.N(6804265, 'toInteger', toInteger, false, false, false);
            dropRight = J$.N(6804281, 'dropRight', J$.T(6804273, dropRight, 12, false), true, false, false);
            var baseSlice = J$.W(6803929, 'baseSlice', J$.F(6803897, J$.I(typeof require === 'undefined' ? require = J$.R(6803881, 'require', undefined, true, true) : require = J$.R(6803881, 'require', require, true, true)), false)(J$.T(6803889, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(6803937, 'toInteger', J$.F(6803921, J$.I(typeof require === 'undefined' ? require = J$.R(6803905, 'require', undefined, true, true) : require = J$.R(6803905, 'require', require, true, true)), false)(J$.T(6803913, './toInteger', 21, false)), toInteger, false, true);
            J$.P(6804241, J$.I(typeof module === 'undefined' ? module = J$.R(6804225, 'module', undefined, true, true) : module = J$.R(6804225, 'module', module, true, true)), 'exports', J$.R(6804233, 'dropRight', dropRight, false, true));
        } catch (J$e) {
            J$.Ex(6804305, J$e);
        } finally {
            if (J$.Sr(6804313))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

