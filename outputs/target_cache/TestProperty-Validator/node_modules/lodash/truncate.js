J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3620825, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/truncate.js');
            function truncate(string, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3620681, arguments.callee, this, arguments);
                            arguments = J$.N(3620689, 'arguments', arguments, true, false, false);
                            string = J$.N(3620697, 'string', string, true, false, false);
                            options = J$.N(3620705, 'options', options, true, false, false);
                            J$.N(3620713, 'length', length, false, false, false);
                            J$.N(3620721, 'omission', omission, false, false, false);
                            J$.N(3620729, 'separator', separator, false, false, false);
                            J$.N(3620737, 'strLength', strLength, false, false, false);
                            J$.N(3620745, 'strSymbols', strSymbols, false, false, false);
                            J$.N(3620753, 'end', end, false, false, false);
                            J$.N(3620761, 'result', result, false, false, false);
                            J$.N(3620769, 'match', match, false, false, false);
                            J$.N(3620777, 'substring', substring, false, false, false);
                            J$.N(3620785, 'newEnd', newEnd, false, false, false);
                            J$.N(3620793, 'index', index, false, false, false);
                            var length = J$.W(3619537, 'length', J$.R(3619521, 'DEFAULT_TRUNC_LENGTH', DEFAULT_TRUNC_LENGTH, false, true), length, false, false), omission = J$.W(3619545, 'omission', J$.R(3619529, 'DEFAULT_TRUNC_OMISSION', DEFAULT_TRUNC_OMISSION, false, true), omission, false, false);
                            if (J$.C(196544, J$.F(3619569, J$.R(3619553, 'isObject', isObject, false, true), false)(J$.R(3619561, 'options', options, false, false)))) {
                                var separator = J$.W(3619617, 'separator', J$.C(196520, J$.B(366658, 'in', J$.T(3619577, 'separator', 21, false), J$.R(3619585, 'options', options, false, false))) ? J$.G(3619601, J$.R(3619593, 'options', options, false, false), 'separator') : J$.R(3619609, 'separator', separator, false, false), separator, false, false);
                                length = J$.W(3619681, 'length', J$.C(196528, J$.B(366666, 'in', J$.T(3619625, 'length', 21, false), J$.R(3619633, 'options', options, false, false))) ? J$.F(3619665, J$.R(3619641, 'toInteger', toInteger, false, true), false)(J$.G(3619657, J$.R(3619649, 'options', options, false, false), 'length')) : J$.R(3619673, 'length', length, false, false), length, false, false);
                                omission = J$.W(3619745, 'omission', J$.C(196536, J$.B(366674, 'in', J$.T(3619689, 'omission', 21, false), J$.R(3619697, 'options', options, false, false))) ? J$.F(3619729, J$.R(3619705, 'baseToString', baseToString, false, true), false)(J$.G(3619721, J$.R(3619713, 'options', options, false, false), 'omission')) : J$.R(3619737, 'omission', omission, false, false), omission, false, false);
                            }
                            string = J$.W(3619777, 'string', J$.F(3619769, J$.R(3619753, 'toString', toString, false, true), false)(J$.R(3619761, 'string', string, false, false)), string, false, false);
                            var strLength = J$.W(3619801, 'strLength', J$.G(3619793, J$.R(3619785, 'string', string, false, false), 'length'), strLength, false, false);
                            if (J$.C(196552, J$.F(3619825, J$.R(3619809, 'hasUnicode', hasUnicode, false, true), false)(J$.R(3619817, 'string', string, false, false)))) {
                                var strSymbols = J$.W(3619857, 'strSymbols', J$.F(3619849, J$.R(3619833, 'stringToArray', stringToArray, false, true), false)(J$.R(3619841, 'string', string, false, false)), strSymbols, false, false);
                                strLength = J$.W(3619881, 'strLength', J$.G(3619873, J$.R(3619865, 'strSymbols', strSymbols, false, false), 'length'), strLength, false, false);
                            }
                            if (J$.C(196560, J$.B(366682, '>=', J$.R(3619889, 'length', length, false, false), J$.R(3619897, 'strLength', strLength, false, false)))) {
                                return J$.Rt(3619913, J$.R(3619905, 'string', string, false, false));
                            }
                            var end = J$.W(3619953, 'end', J$.B(366690, '-', J$.R(3619921, 'length', length, false, false), J$.F(3619945, J$.R(3619929, 'stringSize', stringSize, false, true), false)(J$.R(3619937, 'omission', omission, false, false))), end, false, false);
                            if (J$.C(196568, J$.B(366698, '<', J$.R(3619961, 'end', end, false, false), J$.T(3619969, 1, 22, false)))) {
                                return J$.Rt(3619985, J$.R(3619977, 'omission', omission, false, false));
                            }
                            var result = J$.W(3620089, 'result', J$.C(196576, J$.R(3619993, 'strSymbols', strSymbols, false, false)) ? J$.M(3620049, J$.F(3620033, J$.R(3620001, 'castSlice', castSlice, false, true), false)(J$.R(3620009, 'strSymbols', strSymbols, false, false), J$.T(3620017, 0, 22, false), J$.R(3620025, 'end', end, false, false)), 'join', false)(J$.T(3620041, '', 21, false)) : J$.M(3620081, J$.R(3620057, 'string', string, false, false), 'slice', false)(J$.T(3620065, 0, 22, false), J$.R(3620073, 'end', end, false, false)), result, false, false);
                            if (J$.C(196584, J$.B(366706, '===', J$.R(3620097, 'separator', separator, false, false), J$.T(3620105, undefined, 24, false)))) {
                                return J$.Rt(3620129, J$.B(366714, '+', J$.R(3620113, 'result', result, false, false), J$.R(3620121, 'omission', omission, false, false)));
                            }
                            if (J$.C(196592, J$.R(3620137, 'strSymbols', strSymbols, false, false))) {
                                end = J$.W(3620177, 'end', J$.B(366730, '+', J$.R(3620169, 'end', end, false, false), J$.B(366722, '-', J$.G(3620153, J$.R(3620145, 'result', result, false, false), 'length'), J$.R(3620161, 'end', end, false, false))), end, false, false);
                            }
                            if (J$.C(196648, J$.F(3620201, J$.R(3620185, 'isRegExp', isRegExp, false, true), false)(J$.R(3620193, 'separator', separator, false, false)))) {
                                if (J$.C(196624, J$.M(3620241, J$.M(3620225, J$.R(3620209, 'string', string, false, false), 'slice', false)(J$.R(3620217, 'end', end, false, false)), 'search', false)(J$.R(3620233, 'separator', separator, false, false)))) {
                                    var match, substring = J$.W(3620257, 'substring', J$.R(3620249, 'result', result, false, false), substring, false, false);
                                    if (J$.C(196600, J$.U(366738, '!', J$.G(3620273, J$.R(3620265, 'separator', separator, false, false), 'global')))) {
                                        separator = J$.W(3620361, 'separator', J$.F(3620353, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(3620281, 'RegExp', undefined, true, true) : RegExp = J$.R(3620281, 'RegExp', RegExp, true, true)), false)(J$.G(3620297, J$.R(3620289, 'separator', separator, false, false), 'source'), J$.B(366746, '+', J$.F(3620337, J$.R(3620305, 'toString', toString, false, true), false)(J$.M(3620329, J$.R(3620313, 'reFlags', reFlags, false, true), 'exec', false)(J$.R(3620321, 'separator', separator, false, false))), J$.T(3620345, 'g', 21, false))), separator, false, false);
                                    }
                                    J$.P(3620385, J$.R(3620369, 'separator', separator, false, false), 'lastIndex', J$.T(3620377, 0, 22, false));
                                    while (J$.C(196608, match = J$.W(3620417, 'match', J$.M(3620409, J$.R(3620393, 'separator', separator, false, false), 'exec', false)(J$.R(3620401, 'substring', substring, false, false)), match, false, false))) {
                                        var newEnd = J$.W(3620441, 'newEnd', J$.G(3620433, J$.R(3620425, 'match', match, false, false), 'index'), newEnd, false, false);
                                    }
                                    result = J$.W(3620505, 'result', J$.M(3620497, J$.R(3620449, 'result', result, false, false), 'slice', false)(J$.T(3620457, 0, 22, false), J$.C(196616, J$.B(366754, '===', J$.R(3620465, 'newEnd', newEnd, false, false), J$.T(3620473, undefined, 24, false))) ? J$.R(3620481, 'end', end, false, false) : J$.R(3620489, 'newEnd', newEnd, false, false)), result, false, false);
                                }
                            } else if (J$.C(196640, J$.B(366762, '!=', J$.M(3620553, J$.R(3620513, 'string', string, false, false), 'indexOf', false)(J$.F(3620537, J$.R(3620521, 'baseToString', baseToString, false, true), false)(J$.R(3620529, 'separator', separator, false, false)), J$.R(3620545, 'end', end, false, false)), J$.R(3620561, 'end', end, false, false)))) {
                                var index = J$.W(3620593, 'index', J$.M(3620585, J$.R(3620569, 'result', result, false, false), 'lastIndexOf', false)(J$.R(3620577, 'separator', separator, false, false)), index, false, false);
                                if (J$.C(196632, J$.B(366778, '>', J$.R(3620601, 'index', index, false, false), J$.U(366770, '-', J$.T(3620609, 1, 22, false))))) {
                                    result = J$.W(3620649, 'result', J$.M(3620641, J$.R(3620617, 'result', result, false, false), 'slice', false)(J$.T(3620625, 0, 22, false), J$.R(3620633, 'index', index, false, false)), result, false, false);
                                }
                            }
                            return J$.Rt(3620673, J$.B(366786, '+', J$.R(3620657, 'result', result, false, false), J$.R(3620665, 'omission', omission, false, false)));
                        } catch (J$e) {
                            J$.Ex(3620945, J$e);
                        } finally {
                            if (J$.Fr(3620953))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3620833, 'baseToString', baseToString, false, false, false);
            J$.N(3620841, 'castSlice', castSlice, false, false, false);
            J$.N(3620849, 'hasUnicode', hasUnicode, false, false, false);
            J$.N(3620857, 'isObject', isObject, false, false, false);
            J$.N(3620865, 'isRegExp', isRegExp, false, false, false);
            J$.N(3620873, 'stringSize', stringSize, false, false, false);
            J$.N(3620881, 'stringToArray', stringToArray, false, false, false);
            J$.N(3620889, 'toInteger', toInteger, false, false, false);
            J$.N(3620897, 'toString', toString, false, false, false);
            J$.N(3620905, 'DEFAULT_TRUNC_LENGTH', DEFAULT_TRUNC_LENGTH, false, false, false);
            J$.N(3620913, 'DEFAULT_TRUNC_OMISSION', DEFAULT_TRUNC_OMISSION, false, false, false);
            J$.N(3620921, 'reFlags', reFlags, false, false, false);
            truncate = J$.N(3620937, 'truncate', J$.T(3620929, truncate, 12, false), true, false, false);
            var baseToString = J$.W(3619401, 'baseToString', J$.F(3619201, J$.I(typeof require === 'undefined' ? require = J$.R(3619185, 'require', undefined, true, true) : require = J$.R(3619185, 'require', require, true, true)), false)(J$.T(3619193, './_baseToString', 21, false)), baseToString, false, true), castSlice = J$.W(3619409, 'castSlice', J$.F(3619225, J$.I(typeof require === 'undefined' ? require = J$.R(3619209, 'require', undefined, true, true) : require = J$.R(3619209, 'require', require, true, true)), false)(J$.T(3619217, './_castSlice', 21, false)), castSlice, false, true), hasUnicode = J$.W(3619417, 'hasUnicode', J$.F(3619249, J$.I(typeof require === 'undefined' ? require = J$.R(3619233, 'require', undefined, true, true) : require = J$.R(3619233, 'require', require, true, true)), false)(J$.T(3619241, './_hasUnicode', 21, false)), hasUnicode, false, true), isObject = J$.W(3619425, 'isObject', J$.F(3619273, J$.I(typeof require === 'undefined' ? require = J$.R(3619257, 'require', undefined, true, true) : require = J$.R(3619257, 'require', require, true, true)), false)(J$.T(3619265, './isObject', 21, false)), isObject, false, true), isRegExp = J$.W(3619433, 'isRegExp', J$.F(3619297, J$.I(typeof require === 'undefined' ? require = J$.R(3619281, 'require', undefined, true, true) : require = J$.R(3619281, 'require', require, true, true)), false)(J$.T(3619289, './isRegExp', 21, false)), isRegExp, false, true), stringSize = J$.W(3619441, 'stringSize', J$.F(3619321, J$.I(typeof require === 'undefined' ? require = J$.R(3619305, 'require', undefined, true, true) : require = J$.R(3619305, 'require', require, true, true)), false)(J$.T(3619313, './_stringSize', 21, false)), stringSize, false, true), stringToArray = J$.W(3619449, 'stringToArray', J$.F(3619345, J$.I(typeof require === 'undefined' ? require = J$.R(3619329, 'require', undefined, true, true) : require = J$.R(3619329, 'require', require, true, true)), false)(J$.T(3619337, './_stringToArray', 21, false)), stringToArray, false, true), toInteger = J$.W(3619457, 'toInteger', J$.F(3619369, J$.I(typeof require === 'undefined' ? require = J$.R(3619353, 'require', undefined, true, true) : require = J$.R(3619353, 'require', require, true, true)), false)(J$.T(3619361, './toInteger', 21, false)), toInteger, false, true), toString = J$.W(3619465, 'toString', J$.F(3619393, J$.I(typeof require === 'undefined' ? require = J$.R(3619377, 'require', undefined, true, true) : require = J$.R(3619377, 'require', require, true, true)), false)(J$.T(3619385, './toString', 21, false)), toString, false, true);
            var DEFAULT_TRUNC_LENGTH = J$.W(3619489, 'DEFAULT_TRUNC_LENGTH', J$.T(3619473, 30, 22, false), DEFAULT_TRUNC_LENGTH, false, true), DEFAULT_TRUNC_OMISSION = J$.W(3619497, 'DEFAULT_TRUNC_OMISSION', J$.T(3619481, '...', 21, false), DEFAULT_TRUNC_OMISSION, false, true);
            var reFlags = J$.W(3619513, 'reFlags', J$.T(3619505, /\w*$/, 14, false), reFlags, false, true);
            J$.P(3620817, J$.I(typeof module === 'undefined' ? module = J$.R(3620801, 'module', undefined, true, true) : module = J$.R(3620801, 'module', module, true, true)), 'exports', J$.R(3620809, 'truncate', truncate, false, true));
        } catch (J$e) {
            J$.Ex(3620961, J$e);
        } finally {
            if (J$.Sr(3620969))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

