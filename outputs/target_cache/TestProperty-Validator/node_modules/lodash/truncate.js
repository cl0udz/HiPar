J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7331537, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/truncate.js');
            function truncate(string, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7331393, arguments.callee, this, arguments);
                            arguments = J$.N(7331401, 'arguments', arguments, true, false, false);
                            string = J$.N(7331409, 'string', string, true, false, false);
                            options = J$.N(7331417, 'options', options, true, false, false);
                            J$.N(7331425, 'length', length, false, false, false);
                            J$.N(7331433, 'omission', omission, false, false, false);
                            J$.N(7331441, 'separator', separator, false, false, false);
                            J$.N(7331449, 'strLength', strLength, false, false, false);
                            J$.N(7331457, 'strSymbols', strSymbols, false, false, false);
                            J$.N(7331465, 'end', end, false, false, false);
                            J$.N(7331473, 'result', result, false, false, false);
                            J$.N(7331481, 'match', match, false, false, false);
                            J$.N(7331489, 'substring', substring, false, false, false);
                            J$.N(7331497, 'newEnd', newEnd, false, false, false);
                            J$.N(7331505, 'index', index, false, false, false);
                            var length = J$.W(7330249, 'length', J$.R(7330233, 'DEFAULT_TRUNC_LENGTH', DEFAULT_TRUNC_LENGTH, false, true), length, false, false), omission = J$.W(7330257, 'omission', J$.R(7330241, 'DEFAULT_TRUNC_OMISSION', DEFAULT_TRUNC_OMISSION, false, true), omission, false, false);
                            if (J$.C(389944, J$.F(7330281, J$.R(7330265, 'isObject', isObject, false, true), false)(J$.R(7330273, 'options', options, false, false)))) {
                                var separator = J$.W(7330329, 'separator', J$.C(389920, J$.B(709418, 'in', J$.T(7330289, 'separator', 21, false), J$.R(7330297, 'options', options, false, false))) ? J$.G(7330313, J$.R(7330305, 'options', options, false, false), 'separator') : J$.R(7330321, 'separator', separator, false, false), separator, false, false);
                                length = J$.W(7330393, 'length', J$.C(389928, J$.B(709426, 'in', J$.T(7330337, 'length', 21, false), J$.R(7330345, 'options', options, false, false))) ? J$.F(7330377, J$.R(7330353, 'toInteger', toInteger, false, true), false)(J$.G(7330369, J$.R(7330361, 'options', options, false, false), 'length')) : J$.R(7330385, 'length', length, false, false), length, false, false);
                                omission = J$.W(7330457, 'omission', J$.C(389936, J$.B(709434, 'in', J$.T(7330401, 'omission', 21, false), J$.R(7330409, 'options', options, false, false))) ? J$.F(7330441, J$.R(7330417, 'baseToString', baseToString, false, true), false)(J$.G(7330433, J$.R(7330425, 'options', options, false, false), 'omission')) : J$.R(7330449, 'omission', omission, false, false), omission, false, false);
                            }
                            string = J$.W(7330489, 'string', J$.F(7330481, J$.R(7330465, 'toString', toString, false, true), false)(J$.R(7330473, 'string', string, false, false)), string, false, false);
                            var strLength = J$.W(7330513, 'strLength', J$.G(7330505, J$.R(7330497, 'string', string, false, false), 'length'), strLength, false, false);
                            if (J$.C(389952, J$.F(7330537, J$.R(7330521, 'hasUnicode', hasUnicode, false, true), false)(J$.R(7330529, 'string', string, false, false)))) {
                                var strSymbols = J$.W(7330569, 'strSymbols', J$.F(7330561, J$.R(7330545, 'stringToArray', stringToArray, false, true), false)(J$.R(7330553, 'string', string, false, false)), strSymbols, false, false);
                                strLength = J$.W(7330593, 'strLength', J$.G(7330585, J$.R(7330577, 'strSymbols', strSymbols, false, false), 'length'), strLength, false, false);
                            }
                            if (J$.C(389960, J$.B(709442, '>=', J$.R(7330601, 'length', length, false, false), J$.R(7330609, 'strLength', strLength, false, false)))) {
                                return J$.Rt(7330625, J$.R(7330617, 'string', string, false, false));
                            }
                            var end = J$.W(7330665, 'end', J$.B(709450, '-', J$.R(7330633, 'length', length, false, false), J$.F(7330657, J$.R(7330641, 'stringSize', stringSize, false, true), false)(J$.R(7330649, 'omission', omission, false, false))), end, false, false);
                            if (J$.C(389968, J$.B(709458, '<', J$.R(7330673, 'end', end, false, false), J$.T(7330681, 1, 22, false)))) {
                                return J$.Rt(7330697, J$.R(7330689, 'omission', omission, false, false));
                            }
                            var result = J$.W(7330801, 'result', J$.C(389976, J$.R(7330705, 'strSymbols', strSymbols, false, false)) ? J$.M(7330761, J$.F(7330745, J$.R(7330713, 'castSlice', castSlice, false, true), false)(J$.R(7330721, 'strSymbols', strSymbols, false, false), J$.T(7330729, 0, 22, false), J$.R(7330737, 'end', end, false, false)), 'join', false)(J$.T(7330753, '', 21, false)) : J$.M(7330793, J$.R(7330769, 'string', string, false, false), 'slice', false)(J$.T(7330777, 0, 22, false), J$.R(7330785, 'end', end, false, false)), result, false, false);
                            if (J$.C(389984, J$.B(709466, '===', J$.R(7330809, 'separator', separator, false, false), J$.T(7330817, undefined, 24, false)))) {
                                return J$.Rt(7330841, J$.B(709474, '+', J$.R(7330825, 'result', result, false, false), J$.R(7330833, 'omission', omission, false, false)));
                            }
                            if (J$.C(389992, J$.R(7330849, 'strSymbols', strSymbols, false, false))) {
                                end = J$.W(7330889, 'end', J$.B(709490, '+', J$.R(7330881, 'end', end, false, false), J$.B(709482, '-', J$.G(7330865, J$.R(7330857, 'result', result, false, false), 'length'), J$.R(7330873, 'end', end, false, false))), end, false, false);
                            }
                            if (J$.C(390048, J$.F(7330913, J$.R(7330897, 'isRegExp', isRegExp, false, true), false)(J$.R(7330905, 'separator', separator, false, false)))) {
                                if (J$.C(390024, J$.M(7330953, J$.M(7330937, J$.R(7330921, 'string', string, false, false), 'slice', false)(J$.R(7330929, 'end', end, false, false)), 'search', false)(J$.R(7330945, 'separator', separator, false, false)))) {
                                    var match, substring = J$.W(7330969, 'substring', J$.R(7330961, 'result', result, false, false), substring, false, false);
                                    if (J$.C(390000, J$.U(709498, '!', J$.G(7330985, J$.R(7330977, 'separator', separator, false, false), 'global')))) {
                                        separator = J$.W(7331073, 'separator', J$.F(7331065, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(7330993, 'RegExp', undefined, true, true) : RegExp = J$.R(7330993, 'RegExp', RegExp, true, true)), false)(J$.G(7331009, J$.R(7331001, 'separator', separator, false, false), 'source'), J$.B(709506, '+', J$.F(7331049, J$.R(7331017, 'toString', toString, false, true), false)(J$.M(7331041, J$.R(7331025, 'reFlags', reFlags, false, true), 'exec', false)(J$.R(7331033, 'separator', separator, false, false))), J$.T(7331057, 'g', 21, false))), separator, false, false);
                                    }
                                    J$.P(7331097, J$.R(7331081, 'separator', separator, false, false), 'lastIndex', J$.T(7331089, 0, 22, false));
                                    while (J$.C(390008, match = J$.W(7331129, 'match', J$.M(7331121, J$.R(7331105, 'separator', separator, false, false), 'exec', false)(J$.R(7331113, 'substring', substring, false, false)), match, false, false))) {
                                        var newEnd = J$.W(7331153, 'newEnd', J$.G(7331145, J$.R(7331137, 'match', match, false, false), 'index'), newEnd, false, false);
                                    }
                                    result = J$.W(7331217, 'result', J$.M(7331209, J$.R(7331161, 'result', result, false, false), 'slice', false)(J$.T(7331169, 0, 22, false), J$.C(390016, J$.B(709514, '===', J$.R(7331177, 'newEnd', newEnd, false, false), J$.T(7331185, undefined, 24, false))) ? J$.R(7331193, 'end', end, false, false) : J$.R(7331201, 'newEnd', newEnd, false, false)), result, false, false);
                                }
                            } else if (J$.C(390040, J$.B(709522, '!=', J$.M(7331265, J$.R(7331225, 'string', string, false, false), 'indexOf', false)(J$.F(7331249, J$.R(7331233, 'baseToString', baseToString, false, true), false)(J$.R(7331241, 'separator', separator, false, false)), J$.R(7331257, 'end', end, false, false)), J$.R(7331273, 'end', end, false, false)))) {
                                var index = J$.W(7331305, 'index', J$.M(7331297, J$.R(7331281, 'result', result, false, false), 'lastIndexOf', false)(J$.R(7331289, 'separator', separator, false, false)), index, false, false);
                                if (J$.C(390032, J$.B(709538, '>', J$.R(7331313, 'index', index, false, false), J$.U(709530, '-', J$.T(7331321, 1, 22, false))))) {
                                    result = J$.W(7331361, 'result', J$.M(7331353, J$.R(7331329, 'result', result, false, false), 'slice', false)(J$.T(7331337, 0, 22, false), J$.R(7331345, 'index', index, false, false)), result, false, false);
                                }
                            }
                            return J$.Rt(7331385, J$.B(709546, '+', J$.R(7331369, 'result', result, false, false), J$.R(7331377, 'omission', omission, false, false)));
                        } catch (J$e) {
                            J$.Ex(7331657, J$e);
                        } finally {
                            if (J$.Fr(7331665))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7331545, 'baseToString', baseToString, false, false, false);
            J$.N(7331553, 'castSlice', castSlice, false, false, false);
            J$.N(7331561, 'hasUnicode', hasUnicode, false, false, false);
            J$.N(7331569, 'isObject', isObject, false, false, false);
            J$.N(7331577, 'isRegExp', isRegExp, false, false, false);
            J$.N(7331585, 'stringSize', stringSize, false, false, false);
            J$.N(7331593, 'stringToArray', stringToArray, false, false, false);
            J$.N(7331601, 'toInteger', toInteger, false, false, false);
            J$.N(7331609, 'toString', toString, false, false, false);
            J$.N(7331617, 'DEFAULT_TRUNC_LENGTH', DEFAULT_TRUNC_LENGTH, false, false, false);
            J$.N(7331625, 'DEFAULT_TRUNC_OMISSION', DEFAULT_TRUNC_OMISSION, false, false, false);
            J$.N(7331633, 'reFlags', reFlags, false, false, false);
            truncate = J$.N(7331649, 'truncate', J$.T(7331641, truncate, 12, false), true, false, false);
            var baseToString = J$.W(7330113, 'baseToString', J$.F(7329913, J$.I(typeof require === 'undefined' ? require = J$.R(7329897, 'require', undefined, true, true) : require = J$.R(7329897, 'require', require, true, true)), false)(J$.T(7329905, './_baseToString', 21, false)), baseToString, false, true), castSlice = J$.W(7330121, 'castSlice', J$.F(7329937, J$.I(typeof require === 'undefined' ? require = J$.R(7329921, 'require', undefined, true, true) : require = J$.R(7329921, 'require', require, true, true)), false)(J$.T(7329929, './_castSlice', 21, false)), castSlice, false, true), hasUnicode = J$.W(7330129, 'hasUnicode', J$.F(7329961, J$.I(typeof require === 'undefined' ? require = J$.R(7329945, 'require', undefined, true, true) : require = J$.R(7329945, 'require', require, true, true)), false)(J$.T(7329953, './_hasUnicode', 21, false)), hasUnicode, false, true), isObject = J$.W(7330137, 'isObject', J$.F(7329985, J$.I(typeof require === 'undefined' ? require = J$.R(7329969, 'require', undefined, true, true) : require = J$.R(7329969, 'require', require, true, true)), false)(J$.T(7329977, './isObject', 21, false)), isObject, false, true), isRegExp = J$.W(7330145, 'isRegExp', J$.F(7330009, J$.I(typeof require === 'undefined' ? require = J$.R(7329993, 'require', undefined, true, true) : require = J$.R(7329993, 'require', require, true, true)), false)(J$.T(7330001, './isRegExp', 21, false)), isRegExp, false, true), stringSize = J$.W(7330153, 'stringSize', J$.F(7330033, J$.I(typeof require === 'undefined' ? require = J$.R(7330017, 'require', undefined, true, true) : require = J$.R(7330017, 'require', require, true, true)), false)(J$.T(7330025, './_stringSize', 21, false)), stringSize, false, true), stringToArray = J$.W(7330161, 'stringToArray', J$.F(7330057, J$.I(typeof require === 'undefined' ? require = J$.R(7330041, 'require', undefined, true, true) : require = J$.R(7330041, 'require', require, true, true)), false)(J$.T(7330049, './_stringToArray', 21, false)), stringToArray, false, true), toInteger = J$.W(7330169, 'toInteger', J$.F(7330081, J$.I(typeof require === 'undefined' ? require = J$.R(7330065, 'require', undefined, true, true) : require = J$.R(7330065, 'require', require, true, true)), false)(J$.T(7330073, './toInteger', 21, false)), toInteger, false, true), toString = J$.W(7330177, 'toString', J$.F(7330105, J$.I(typeof require === 'undefined' ? require = J$.R(7330089, 'require', undefined, true, true) : require = J$.R(7330089, 'require', require, true, true)), false)(J$.T(7330097, './toString', 21, false)), toString, false, true);
            var DEFAULT_TRUNC_LENGTH = J$.W(7330201, 'DEFAULT_TRUNC_LENGTH', J$.T(7330185, 30, 22, false), DEFAULT_TRUNC_LENGTH, false, true), DEFAULT_TRUNC_OMISSION = J$.W(7330209, 'DEFAULT_TRUNC_OMISSION', J$.T(7330193, '...', 21, false), DEFAULT_TRUNC_OMISSION, false, true);
            var reFlags = J$.W(7330225, 'reFlags', J$.T(7330217, /\w*$/, 14, false), reFlags, false, true);
            J$.P(7331529, J$.I(typeof module === 'undefined' ? module = J$.R(7331513, 'module', undefined, true, true) : module = J$.R(7331513, 'module', module, true, true)), 'exports', J$.R(7331521, 'truncate', truncate, false, true));
        } catch (J$e) {
            J$.Ex(7331673, J$e);
        } finally {
            if (J$.Sr(7331681))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

