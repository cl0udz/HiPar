J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2690457, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/truncate.js');
            function truncate(string, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2690313, arguments.callee, this, arguments);
                            arguments = J$.N(2690321, 'arguments', arguments, true, false, false);
                            string = J$.N(2690329, 'string', string, true, false, false);
                            options = J$.N(2690337, 'options', options, true, false, false);
                            J$.N(2690345, 'length', length, false, false, false);
                            J$.N(2690353, 'omission', omission, false, false, false);
                            J$.N(2690361, 'separator', separator, false, false, false);
                            J$.N(2690369, 'strLength', strLength, false, false, false);
                            J$.N(2690377, 'strSymbols', strSymbols, false, false, false);
                            J$.N(2690385, 'end', end, false, false, false);
                            J$.N(2690393, 'result', result, false, false, false);
                            J$.N(2690401, 'match', match, false, false, false);
                            J$.N(2690409, 'substring', substring, false, false, false);
                            J$.N(2690417, 'newEnd', newEnd, false, false, false);
                            J$.N(2690425, 'index', index, false, false, false);
                            var length = J$.W(2689169, 'length', J$.R(2689153, 'DEFAULT_TRUNC_LENGTH', DEFAULT_TRUNC_LENGTH, false, true), length, false, false), omission = J$.W(2689177, 'omission', J$.R(2689161, 'DEFAULT_TRUNC_OMISSION', DEFAULT_TRUNC_OMISSION, false, true), omission, false, false);
                            if (J$.C(139424, J$.F(2689201, J$.R(2689185, 'isObject', isObject, false, true), false)(J$.R(2689193, 'options', options, false, false)))) {
                                var separator = J$.W(2689249, 'separator', J$.C(139400, J$.B(192882, 'in', J$.T(2689209, 'separator', 21, false), J$.R(2689217, 'options', options, false, false))) ? J$.G(2689233, J$.R(2689225, 'options', options, false, false), 'separator') : J$.R(2689241, 'separator', separator, false, false), separator, false, false);
                                length = J$.W(2689313, 'length', J$.C(139408, J$.B(192890, 'in', J$.T(2689257, 'length', 21, false), J$.R(2689265, 'options', options, false, false))) ? J$.F(2689297, J$.R(2689273, 'toInteger', toInteger, false, true), false)(J$.G(2689289, J$.R(2689281, 'options', options, false, false), 'length')) : J$.R(2689305, 'length', length, false, false), length, false, false);
                                omission = J$.W(2689377, 'omission', J$.C(139416, J$.B(192898, 'in', J$.T(2689321, 'omission', 21, false), J$.R(2689329, 'options', options, false, false))) ? J$.F(2689361, J$.R(2689337, 'baseToString', baseToString, false, true), false)(J$.G(2689353, J$.R(2689345, 'options', options, false, false), 'omission')) : J$.R(2689369, 'omission', omission, false, false), omission, false, false);
                            }
                            string = J$.W(2689409, 'string', J$.F(2689401, J$.R(2689385, 'toString', toString, false, true), false)(J$.R(2689393, 'string', string, false, false)), string, false, false);
                            var strLength = J$.W(2689433, 'strLength', J$.G(2689425, J$.R(2689417, 'string', string, false, false), 'length'), strLength, false, false);
                            if (J$.C(139432, J$.F(2689457, J$.R(2689441, 'hasUnicode', hasUnicode, false, true), false)(J$.R(2689449, 'string', string, false, false)))) {
                                var strSymbols = J$.W(2689489, 'strSymbols', J$.F(2689481, J$.R(2689465, 'stringToArray', stringToArray, false, true), false)(J$.R(2689473, 'string', string, false, false)), strSymbols, false, false);
                                strLength = J$.W(2689513, 'strLength', J$.G(2689505, J$.R(2689497, 'strSymbols', strSymbols, false, false), 'length'), strLength, false, false);
                            }
                            if (J$.C(139440, J$.B(192906, '>=', J$.R(2689521, 'length', length, false, false), J$.R(2689529, 'strLength', strLength, false, false)))) {
                                return J$.Rt(2689545, J$.R(2689537, 'string', string, false, false));
                            }
                            var end = J$.W(2689585, 'end', J$.B(192914, '-', J$.R(2689553, 'length', length, false, false), J$.F(2689577, J$.R(2689561, 'stringSize', stringSize, false, true), false)(J$.R(2689569, 'omission', omission, false, false))), end, false, false);
                            if (J$.C(139448, J$.B(192922, '<', J$.R(2689593, 'end', end, false, false), J$.T(2689601, 1, 22, false)))) {
                                return J$.Rt(2689617, J$.R(2689609, 'omission', omission, false, false));
                            }
                            var result = J$.W(2689721, 'result', J$.C(139456, J$.R(2689625, 'strSymbols', strSymbols, false, false)) ? J$.M(2689681, J$.F(2689665, J$.R(2689633, 'castSlice', castSlice, false, true), false)(J$.R(2689641, 'strSymbols', strSymbols, false, false), J$.T(2689649, 0, 22, false), J$.R(2689657, 'end', end, false, false)), 'join', false)(J$.T(2689673, '', 21, false)) : J$.M(2689713, J$.R(2689689, 'string', string, false, false), 'slice', false)(J$.T(2689697, 0, 22, false), J$.R(2689705, 'end', end, false, false)), result, false, false);
                            if (J$.C(139464, J$.B(192930, '===', J$.R(2689729, 'separator', separator, false, false), J$.T(2689737, undefined, 24, false)))) {
                                return J$.Rt(2689761, J$.B(192938, '+', J$.R(2689745, 'result', result, false, false), J$.R(2689753, 'omission', omission, false, false)));
                            }
                            if (J$.C(139472, J$.R(2689769, 'strSymbols', strSymbols, false, false))) {
                                end = J$.W(2689809, 'end', J$.B(192954, '+', J$.R(2689801, 'end', end, false, false), J$.B(192946, '-', J$.G(2689785, J$.R(2689777, 'result', result, false, false), 'length'), J$.R(2689793, 'end', end, false, false))), end, false, false);
                            }
                            if (J$.C(139528, J$.F(2689833, J$.R(2689817, 'isRegExp', isRegExp, false, true), false)(J$.R(2689825, 'separator', separator, false, false)))) {
                                if (J$.C(139504, J$.M(2689873, J$.M(2689857, J$.R(2689841, 'string', string, false, false), 'slice', false)(J$.R(2689849, 'end', end, false, false)), 'search', false)(J$.R(2689865, 'separator', separator, false, false)))) {
                                    var match, substring = J$.W(2689889, 'substring', J$.R(2689881, 'result', result, false, false), substring, false, false);
                                    if (J$.C(139480, J$.U(192962, '!', J$.G(2689905, J$.R(2689897, 'separator', separator, false, false), 'global')))) {
                                        separator = J$.W(2689993, 'separator', J$.F(2689985, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2689913, 'RegExp', undefined, true, true) : RegExp = J$.R(2689913, 'RegExp', RegExp, true, true)), false)(J$.G(2689929, J$.R(2689921, 'separator', separator, false, false), 'source'), J$.B(192970, '+', J$.F(2689969, J$.R(2689937, 'toString', toString, false, true), false)(J$.M(2689961, J$.R(2689945, 'reFlags', reFlags, false, true), 'exec', false)(J$.R(2689953, 'separator', separator, false, false))), J$.T(2689977, 'g', 21, false))), separator, false, false);
                                    }
                                    J$.P(2690017, J$.R(2690001, 'separator', separator, false, false), 'lastIndex', J$.T(2690009, 0, 22, false));
                                    while (J$.C(139488, match = J$.W(2690049, 'match', J$.M(2690041, J$.R(2690025, 'separator', separator, false, false), 'exec', false)(J$.R(2690033, 'substring', substring, false, false)), match, false, false))) {
                                        var newEnd = J$.W(2690073, 'newEnd', J$.G(2690065, J$.R(2690057, 'match', match, false, false), 'index'), newEnd, false, false);
                                    }
                                    result = J$.W(2690137, 'result', J$.M(2690129, J$.R(2690081, 'result', result, false, false), 'slice', false)(J$.T(2690089, 0, 22, false), J$.C(139496, J$.B(192978, '===', J$.R(2690097, 'newEnd', newEnd, false, false), J$.T(2690105, undefined, 24, false))) ? J$.R(2690113, 'end', end, false, false) : J$.R(2690121, 'newEnd', newEnd, false, false)), result, false, false);
                                }
                            } else if (J$.C(139520, J$.B(192986, '!=', J$.M(2690185, J$.R(2690145, 'string', string, false, false), 'indexOf', false)(J$.F(2690169, J$.R(2690153, 'baseToString', baseToString, false, true), false)(J$.R(2690161, 'separator', separator, false, false)), J$.R(2690177, 'end', end, false, false)), J$.R(2690193, 'end', end, false, false)))) {
                                var index = J$.W(2690225, 'index', J$.M(2690217, J$.R(2690201, 'result', result, false, false), 'lastIndexOf', false)(J$.R(2690209, 'separator', separator, false, false)), index, false, false);
                                if (J$.C(139512, J$.B(193002, '>', J$.R(2690233, 'index', index, false, false), J$.U(192994, '-', J$.T(2690241, 1, 22, false))))) {
                                    result = J$.W(2690281, 'result', J$.M(2690273, J$.R(2690249, 'result', result, false, false), 'slice', false)(J$.T(2690257, 0, 22, false), J$.R(2690265, 'index', index, false, false)), result, false, false);
                                }
                            }
                            return J$.Rt(2690305, J$.B(193010, '+', J$.R(2690289, 'result', result, false, false), J$.R(2690297, 'omission', omission, false, false)));
                        } catch (J$e) {
                            J$.Ex(2690577, J$e);
                        } finally {
                            if (J$.Fr(2690585))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2690465, 'baseToString', baseToString, false, false, false);
            J$.N(2690473, 'castSlice', castSlice, false, false, false);
            J$.N(2690481, 'hasUnicode', hasUnicode, false, false, false);
            J$.N(2690489, 'isObject', isObject, false, false, false);
            J$.N(2690497, 'isRegExp', isRegExp, false, false, false);
            J$.N(2690505, 'stringSize', stringSize, false, false, false);
            J$.N(2690513, 'stringToArray', stringToArray, false, false, false);
            J$.N(2690521, 'toInteger', toInteger, false, false, false);
            J$.N(2690529, 'toString', toString, false, false, false);
            J$.N(2690537, 'DEFAULT_TRUNC_LENGTH', DEFAULT_TRUNC_LENGTH, false, false, false);
            J$.N(2690545, 'DEFAULT_TRUNC_OMISSION', DEFAULT_TRUNC_OMISSION, false, false, false);
            J$.N(2690553, 'reFlags', reFlags, false, false, false);
            truncate = J$.N(2690569, 'truncate', J$.T(2690561, truncate, 12, false), true, false, false);
            var baseToString = J$.W(2689033, 'baseToString', J$.F(2688833, J$.I(typeof require === 'undefined' ? require = J$.R(2688817, 'require', undefined, true, true) : require = J$.R(2688817, 'require', require, true, true)), false)(J$.T(2688825, './_baseToString', 21, false)), baseToString, false, true), castSlice = J$.W(2689041, 'castSlice', J$.F(2688857, J$.I(typeof require === 'undefined' ? require = J$.R(2688841, 'require', undefined, true, true) : require = J$.R(2688841, 'require', require, true, true)), false)(J$.T(2688849, './_castSlice', 21, false)), castSlice, false, true), hasUnicode = J$.W(2689049, 'hasUnicode', J$.F(2688881, J$.I(typeof require === 'undefined' ? require = J$.R(2688865, 'require', undefined, true, true) : require = J$.R(2688865, 'require', require, true, true)), false)(J$.T(2688873, './_hasUnicode', 21, false)), hasUnicode, false, true), isObject = J$.W(2689057, 'isObject', J$.F(2688905, J$.I(typeof require === 'undefined' ? require = J$.R(2688889, 'require', undefined, true, true) : require = J$.R(2688889, 'require', require, true, true)), false)(J$.T(2688897, './isObject', 21, false)), isObject, false, true), isRegExp = J$.W(2689065, 'isRegExp', J$.F(2688929, J$.I(typeof require === 'undefined' ? require = J$.R(2688913, 'require', undefined, true, true) : require = J$.R(2688913, 'require', require, true, true)), false)(J$.T(2688921, './isRegExp', 21, false)), isRegExp, false, true), stringSize = J$.W(2689073, 'stringSize', J$.F(2688953, J$.I(typeof require === 'undefined' ? require = J$.R(2688937, 'require', undefined, true, true) : require = J$.R(2688937, 'require', require, true, true)), false)(J$.T(2688945, './_stringSize', 21, false)), stringSize, false, true), stringToArray = J$.W(2689081, 'stringToArray', J$.F(2688977, J$.I(typeof require === 'undefined' ? require = J$.R(2688961, 'require', undefined, true, true) : require = J$.R(2688961, 'require', require, true, true)), false)(J$.T(2688969, './_stringToArray', 21, false)), stringToArray, false, true), toInteger = J$.W(2689089, 'toInteger', J$.F(2689001, J$.I(typeof require === 'undefined' ? require = J$.R(2688985, 'require', undefined, true, true) : require = J$.R(2688985, 'require', require, true, true)), false)(J$.T(2688993, './toInteger', 21, false)), toInteger, false, true), toString = J$.W(2689097, 'toString', J$.F(2689025, J$.I(typeof require === 'undefined' ? require = J$.R(2689009, 'require', undefined, true, true) : require = J$.R(2689009, 'require', require, true, true)), false)(J$.T(2689017, './toString', 21, false)), toString, false, true);
            var DEFAULT_TRUNC_LENGTH = J$.W(2689121, 'DEFAULT_TRUNC_LENGTH', J$.T(2689105, 30, 22, false), DEFAULT_TRUNC_LENGTH, false, true), DEFAULT_TRUNC_OMISSION = J$.W(2689129, 'DEFAULT_TRUNC_OMISSION', J$.T(2689113, '...', 21, false), DEFAULT_TRUNC_OMISSION, false, true);
            var reFlags = J$.W(2689145, 'reFlags', J$.T(2689137, /\w*$/, 14, false), reFlags, false, true);
            J$.P(2690449, J$.I(typeof module === 'undefined' ? module = J$.R(2690433, 'module', undefined, true, true) : module = J$.R(2690433, 'module', module, true, true)), 'exports', J$.R(2690441, 'truncate', truncate, false, true));
        } catch (J$e) {
            J$.Ex(2690593, J$e);
        } finally {
            if (J$.Sr(2690601))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

