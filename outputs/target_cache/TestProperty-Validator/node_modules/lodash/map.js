J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3567273, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/map.js');
            function map(collection, iteratee) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3567209, arguments.callee, this, arguments);
                            arguments = J$.N(3567217, 'arguments', arguments, true, false, false);
                            collection = J$.N(3567225, 'collection', collection, true, false, false);
                            iteratee = J$.N(3567233, 'iteratee', iteratee, true, false, false);
                            J$.N(3567241, 'func', func, false, false, false);
                            var func = J$.W(3567137, 'func', J$.C(194368, J$.F(3567113, J$.R(3567097, 'isArray', isArray, false, true), false)(J$.R(3567105, 'collection', collection, false, false))) ? J$.R(3567121, 'arrayMap', arrayMap, false, true) : J$.R(3567129, 'baseMap', baseMap, false, true), func, false, false);
                            return J$.Rt(3567201, J$.F(3567193, J$.R(3567145, 'func', func, false, false), false)(J$.R(3567153, 'collection', collection, false, false), J$.F(3567185, J$.R(3567161, 'baseIteratee', baseIteratee, false, true), false)(J$.R(3567169, 'iteratee', iteratee, false, false), J$.T(3567177, 3, 22, false))));
                        } catch (J$e) {
                            J$.Ex(3567329, J$e);
                        } finally {
                            if (J$.Fr(3567337))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3567281, 'arrayMap', arrayMap, false, false, false);
            J$.N(3567289, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(3567297, 'baseMap', baseMap, false, false, false);
            J$.N(3567305, 'isArray', isArray, false, false, false);
            map = J$.N(3567321, 'map', J$.T(3567313, map, 12, false), true, false, false);
            var arrayMap = J$.W(3567065, 'arrayMap', J$.F(3566985, J$.I(typeof require === 'undefined' ? require = J$.R(3566969, 'require', undefined, true, true) : require = J$.R(3566969, 'require', require, true, true)), false)(J$.T(3566977, './_arrayMap', 21, false)), arrayMap, false, true), baseIteratee = J$.W(3567073, 'baseIteratee', J$.F(3567009, J$.I(typeof require === 'undefined' ? require = J$.R(3566993, 'require', undefined, true, true) : require = J$.R(3566993, 'require', require, true, true)), false)(J$.T(3567001, './_baseIteratee', 21, false)), baseIteratee, false, true), baseMap = J$.W(3567081, 'baseMap', J$.F(3567033, J$.I(typeof require === 'undefined' ? require = J$.R(3567017, 'require', undefined, true, true) : require = J$.R(3567017, 'require', require, true, true)), false)(J$.T(3567025, './_baseMap', 21, false)), baseMap, false, true), isArray = J$.W(3567089, 'isArray', J$.F(3567057, J$.I(typeof require === 'undefined' ? require = J$.R(3567041, 'require', undefined, true, true) : require = J$.R(3567041, 'require', require, true, true)), false)(J$.T(3567049, './isArray', 21, false)), isArray, false, true);
            J$.P(3567265, J$.I(typeof module === 'undefined' ? module = J$.R(3567249, 'module', undefined, true, true) : module = J$.R(3567249, 'module', module, true, true)), 'exports', J$.R(3567257, 'map', map, false, true));
        } catch (J$e) {
            J$.Ex(3567345, J$e);
        } finally {
            if (J$.Sr(3567353))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

