J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7277985, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/map.js');
            function map(collection, iteratee) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7277921, arguments.callee, this, arguments);
                            arguments = J$.N(7277929, 'arguments', arguments, true, false, false);
                            collection = J$.N(7277937, 'collection', collection, true, false, false);
                            iteratee = J$.N(7277945, 'iteratee', iteratee, true, false, false);
                            J$.N(7277953, 'func', func, false, false, false);
                            var func = J$.W(7277849, 'func', J$.C(387768, J$.F(7277825, J$.R(7277809, 'isArray', isArray, false, true), false)(J$.R(7277817, 'collection', collection, false, false))) ? J$.R(7277833, 'arrayMap', arrayMap, false, true) : J$.R(7277841, 'baseMap', baseMap, false, true), func, false, false);
                            return J$.Rt(7277913, J$.F(7277905, J$.R(7277857, 'func', func, false, false), false)(J$.R(7277865, 'collection', collection, false, false), J$.F(7277897, J$.R(7277873, 'baseIteratee', baseIteratee, false, true), false)(J$.R(7277881, 'iteratee', iteratee, false, false), J$.T(7277889, 3, 22, false))));
                        } catch (J$e) {
                            J$.Ex(7278041, J$e);
                        } finally {
                            if (J$.Fr(7278049))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7277993, 'arrayMap', arrayMap, false, false, false);
            J$.N(7278001, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(7278009, 'baseMap', baseMap, false, false, false);
            J$.N(7278017, 'isArray', isArray, false, false, false);
            map = J$.N(7278033, 'map', J$.T(7278025, map, 12, false), true, false, false);
            var arrayMap = J$.W(7277777, 'arrayMap', J$.F(7277697, J$.I(typeof require === 'undefined' ? require = J$.R(7277681, 'require', undefined, true, true) : require = J$.R(7277681, 'require', require, true, true)), false)(J$.T(7277689, './_arrayMap', 21, false)), arrayMap, false, true), baseIteratee = J$.W(7277785, 'baseIteratee', J$.F(7277721, J$.I(typeof require === 'undefined' ? require = J$.R(7277705, 'require', undefined, true, true) : require = J$.R(7277705, 'require', require, true, true)), false)(J$.T(7277713, './_baseIteratee', 21, false)), baseIteratee, false, true), baseMap = J$.W(7277793, 'baseMap', J$.F(7277745, J$.I(typeof require === 'undefined' ? require = J$.R(7277729, 'require', undefined, true, true) : require = J$.R(7277729, 'require', require, true, true)), false)(J$.T(7277737, './_baseMap', 21, false)), baseMap, false, true), isArray = J$.W(7277801, 'isArray', J$.F(7277769, J$.I(typeof require === 'undefined' ? require = J$.R(7277753, 'require', undefined, true, true) : require = J$.R(7277753, 'require', require, true, true)), false)(J$.T(7277761, './isArray', 21, false)), isArray, false, true);
            J$.P(7277977, J$.I(typeof module === 'undefined' ? module = J$.R(7277961, 'module', undefined, true, true) : module = J$.R(7277961, 'module', module, true, true)), 'exports', J$.R(7277969, 'map', map, false, true));
        } catch (J$e) {
            J$.Ex(7278057, J$e);
        } finally {
            if (J$.Sr(7278065))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

