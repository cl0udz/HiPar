J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2665241, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/shuffle.js');
            function shuffle(collection) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2665185, arguments.callee, this, arguments);
                            arguments = J$.N(2665193, 'arguments', arguments, true, false, false);
                            collection = J$.N(2665201, 'collection', collection, true, false, false);
                            J$.N(2665209, 'func', func, false, false, false);
                            var func = J$.W(2665145, 'func', J$.C(138176, J$.F(2665121, J$.R(2665105, 'isArray', isArray, false, true), false)(J$.R(2665113, 'collection', collection, false, false))) ? J$.R(2665129, 'arrayShuffle', arrayShuffle, false, true) : J$.R(2665137, 'baseShuffle', baseShuffle, false, true), func, false, false);
                            return J$.Rt(2665177, J$.F(2665169, J$.R(2665153, 'func', func, false, false), false)(J$.R(2665161, 'collection', collection, false, false)));
                        } catch (J$e) {
                            J$.Ex(2665289, J$e);
                        } finally {
                            if (J$.Fr(2665297))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2665249, 'arrayShuffle', arrayShuffle, false, false, false);
            J$.N(2665257, 'baseShuffle', baseShuffle, false, false, false);
            J$.N(2665265, 'isArray', isArray, false, false, false);
            shuffle = J$.N(2665281, 'shuffle', J$.T(2665273, shuffle, 12, false), true, false, false);
            var arrayShuffle = J$.W(2665081, 'arrayShuffle', J$.F(2665025, J$.I(typeof require === 'undefined' ? require = J$.R(2665009, 'require', undefined, true, true) : require = J$.R(2665009, 'require', require, true, true)), false)(J$.T(2665017, './_arrayShuffle', 21, false)), arrayShuffle, false, true), baseShuffle = J$.W(2665089, 'baseShuffle', J$.F(2665049, J$.I(typeof require === 'undefined' ? require = J$.R(2665033, 'require', undefined, true, true) : require = J$.R(2665033, 'require', require, true, true)), false)(J$.T(2665041, './_baseShuffle', 21, false)), baseShuffle, false, true), isArray = J$.W(2665097, 'isArray', J$.F(2665073, J$.I(typeof require === 'undefined' ? require = J$.R(2665057, 'require', undefined, true, true) : require = J$.R(2665057, 'require', require, true, true)), false)(J$.T(2665065, './isArray', 21, false)), isArray, false, true);
            J$.P(2665233, J$.I(typeof module === 'undefined' ? module = J$.R(2665217, 'module', undefined, true, true) : module = J$.R(2665217, 'module', module, true, true)), 'exports', J$.R(2665225, 'shuffle', shuffle, false, true));
        } catch (J$e) {
            J$.Ex(2665305, J$e);
        } finally {
            if (J$.Sr(2665313))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

