J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7306321, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/shuffle.js');
            function shuffle(collection) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7306265, arguments.callee, this, arguments);
                            arguments = J$.N(7306273, 'arguments', arguments, true, false, false);
                            collection = J$.N(7306281, 'collection', collection, true, false, false);
                            J$.N(7306289, 'func', func, false, false, false);
                            var func = J$.W(7306225, 'func', J$.C(388696, J$.F(7306201, J$.R(7306185, 'isArray', isArray, false, true), false)(J$.R(7306193, 'collection', collection, false, false))) ? J$.R(7306209, 'arrayShuffle', arrayShuffle, false, true) : J$.R(7306217, 'baseShuffle', baseShuffle, false, true), func, false, false);
                            return J$.Rt(7306257, J$.F(7306249, J$.R(7306233, 'func', func, false, false), false)(J$.R(7306241, 'collection', collection, false, false)));
                        } catch (J$e) {
                            J$.Ex(7306369, J$e);
                        } finally {
                            if (J$.Fr(7306377))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7306329, 'arrayShuffle', arrayShuffle, false, false, false);
            J$.N(7306337, 'baseShuffle', baseShuffle, false, false, false);
            J$.N(7306345, 'isArray', isArray, false, false, false);
            shuffle = J$.N(7306361, 'shuffle', J$.T(7306353, shuffle, 12, false), true, false, false);
            var arrayShuffle = J$.W(7306161, 'arrayShuffle', J$.F(7306105, J$.I(typeof require === 'undefined' ? require = J$.R(7306089, 'require', undefined, true, true) : require = J$.R(7306089, 'require', require, true, true)), false)(J$.T(7306097, './_arrayShuffle', 21, false)), arrayShuffle, false, true), baseShuffle = J$.W(7306169, 'baseShuffle', J$.F(7306129, J$.I(typeof require === 'undefined' ? require = J$.R(7306113, 'require', undefined, true, true) : require = J$.R(7306113, 'require', require, true, true)), false)(J$.T(7306121, './_baseShuffle', 21, false)), baseShuffle, false, true), isArray = J$.W(7306177, 'isArray', J$.F(7306153, J$.I(typeof require === 'undefined' ? require = J$.R(7306137, 'require', undefined, true, true) : require = J$.R(7306137, 'require', require, true, true)), false)(J$.T(7306145, './isArray', 21, false)), isArray, false, true);
            J$.P(7306313, J$.I(typeof module === 'undefined' ? module = J$.R(7306297, 'module', undefined, true, true) : module = J$.R(7306297, 'module', module, true, true)), 'exports', J$.R(7306305, 'shuffle', shuffle, false, true));
        } catch (J$e) {
            J$.Ex(7306385, J$e);
        } finally {
            if (J$.Sr(7306393))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

