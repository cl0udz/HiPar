J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6813705, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/forIn.js');
            function forIn(object, iteratee) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6813649, arguments.callee, this, arguments);
                            arguments = J$.N(6813657, 'arguments', arguments, true, false, false);
                            object = J$.N(6813665, 'object', object, true, false, false);
                            iteratee = J$.N(6813673, 'iteratee', iteratee, true, false, false);
                            return J$.Rt(6813641, J$.C(359632, J$.B(677050, '==', J$.R(6813561, 'object', object, false, false), J$.T(6813569, null, 25, false))) ? J$.R(6813577, 'object', object, false, false) : J$.F(6813633, J$.R(6813585, 'baseFor', baseFor, false, true), false)(J$.R(6813593, 'object', object, false, false), J$.F(6813617, J$.R(6813601, 'castFunction', castFunction, false, true), false)(J$.R(6813609, 'iteratee', iteratee, false, false)), J$.R(6813625, 'keysIn', keysIn, false, true)));
                        } catch (J$e) {
                            J$.Ex(6813753, J$e);
                        } finally {
                            if (J$.Fr(6813761))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6813713, 'baseFor', baseFor, false, false, false);
            J$.N(6813721, 'castFunction', castFunction, false, false, false);
            J$.N(6813729, 'keysIn', keysIn, false, false, false);
            forIn = J$.N(6813745, 'forIn', J$.T(6813737, forIn, 12, false), true, false, false);
            var baseFor = J$.W(6813537, 'baseFor', J$.F(6813481, J$.I(typeof require === 'undefined' ? require = J$.R(6813465, 'require', undefined, true, true) : require = J$.R(6813465, 'require', require, true, true)), false)(J$.T(6813473, './_baseFor', 21, false)), baseFor, false, true), castFunction = J$.W(6813545, 'castFunction', J$.F(6813505, J$.I(typeof require === 'undefined' ? require = J$.R(6813489, 'require', undefined, true, true) : require = J$.R(6813489, 'require', require, true, true)), false)(J$.T(6813497, './_castFunction', 21, false)), castFunction, false, true), keysIn = J$.W(6813553, 'keysIn', J$.F(6813529, J$.I(typeof require === 'undefined' ? require = J$.R(6813513, 'require', undefined, true, true) : require = J$.R(6813513, 'require', require, true, true)), false)(J$.T(6813521, './keysIn', 21, false)), keysIn, false, true);
            J$.P(6813697, J$.I(typeof module === 'undefined' ? module = J$.R(6813681, 'module', undefined, true, true) : module = J$.R(6813681, 'module', module, true, true)), 'exports', J$.R(6813689, 'forIn', forIn, false, true));
        } catch (J$e) {
            J$.Ex(6813769, J$e);
        } finally {
            if (J$.Sr(6813777))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

