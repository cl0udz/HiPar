J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7305089, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/sampleSize.js');
            function sampleSize(collection, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7305017, arguments.callee, this, arguments);
                            arguments = J$.N(7305025, 'arguments', arguments, true, false, false);
                            collection = J$.N(7305033, 'collection', collection, true, false, false);
                            n = J$.N(7305041, 'n', n, true, false, false);
                            guard = J$.N(7305049, 'guard', guard, true, false, false);
                            J$.N(7305057, 'func', func, false, false, false);
                            if (J$.C(388656, J$.C(388648, J$.R(7304817, 'guard', guard, false, false)) ? J$.F(7304857, J$.R(7304825, 'isIterateeCall', isIterateeCall, false, true), false)(J$.R(7304833, 'collection', collection, false, false), J$.R(7304841, 'n', n, false, false), J$.R(7304849, 'guard', guard, false, false)) : J$.B(708250, '===', J$.R(7304865, 'n', n, false, false), J$.T(7304873, undefined, 24, false)))) {
                                n = J$.W(7304889, 'n', J$.T(7304881, 1, 22, false), n, false, false);
                            } else {
                                n = J$.W(7304921, 'n', J$.F(7304913, J$.R(7304897, 'toInteger', toInteger, false, true), false)(J$.R(7304905, 'n', n, false, false)), n, false, false);
                            }
                            var func = J$.W(7304969, 'func', J$.C(388664, J$.F(7304945, J$.R(7304929, 'isArray', isArray, false, true), false)(J$.R(7304937, 'collection', collection, false, false))) ? J$.R(7304953, 'arraySampleSize', arraySampleSize, false, true) : J$.R(7304961, 'baseSampleSize', baseSampleSize, false, true), func, false, false);
                            return J$.Rt(7305009, J$.F(7305001, J$.R(7304977, 'func', func, false, false), false)(J$.R(7304985, 'collection', collection, false, false), J$.R(7304993, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(7305153, J$e);
                        } finally {
                            if (J$.Fr(7305161))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7305097, 'arraySampleSize', arraySampleSize, false, false, false);
            J$.N(7305105, 'baseSampleSize', baseSampleSize, false, false, false);
            J$.N(7305113, 'isArray', isArray, false, false, false);
            J$.N(7305121, 'isIterateeCall', isIterateeCall, false, false, false);
            J$.N(7305129, 'toInteger', toInteger, false, false, false);
            sampleSize = J$.N(7305145, 'sampleSize', J$.T(7305137, sampleSize, 12, false), true, false, false);
            var arraySampleSize = J$.W(7304777, 'arraySampleSize', J$.F(7304673, J$.I(typeof require === 'undefined' ? require = J$.R(7304657, 'require', undefined, true, true) : require = J$.R(7304657, 'require', require, true, true)), false)(J$.T(7304665, './_arraySampleSize', 21, false)), arraySampleSize, false, true), baseSampleSize = J$.W(7304785, 'baseSampleSize', J$.F(7304697, J$.I(typeof require === 'undefined' ? require = J$.R(7304681, 'require', undefined, true, true) : require = J$.R(7304681, 'require', require, true, true)), false)(J$.T(7304689, './_baseSampleSize', 21, false)), baseSampleSize, false, true), isArray = J$.W(7304793, 'isArray', J$.F(7304721, J$.I(typeof require === 'undefined' ? require = J$.R(7304705, 'require', undefined, true, true) : require = J$.R(7304705, 'require', require, true, true)), false)(J$.T(7304713, './isArray', 21, false)), isArray, false, true), isIterateeCall = J$.W(7304801, 'isIterateeCall', J$.F(7304745, J$.I(typeof require === 'undefined' ? require = J$.R(7304729, 'require', undefined, true, true) : require = J$.R(7304729, 'require', require, true, true)), false)(J$.T(7304737, './_isIterateeCall', 21, false)), isIterateeCall, false, true), toInteger = J$.W(7304809, 'toInteger', J$.F(7304769, J$.I(typeof require === 'undefined' ? require = J$.R(7304753, 'require', undefined, true, true) : require = J$.R(7304753, 'require', require, true, true)), false)(J$.T(7304761, './toInteger', 21, false)), toInteger, false, true);
            J$.P(7305081, J$.I(typeof module === 'undefined' ? module = J$.R(7305065, 'module', undefined, true, true) : module = J$.R(7305065, 'module', module, true, true)), 'exports', J$.R(7305073, 'sampleSize', sampleSize, false, true));
        } catch (J$e) {
            J$.Ex(7305169, J$e);
        } finally {
            if (J$.Sr(7305177))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

