J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3594377, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/sampleSize.js');
            function sampleSize(collection, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3594305, arguments.callee, this, arguments);
                            arguments = J$.N(3594313, 'arguments', arguments, true, false, false);
                            collection = J$.N(3594321, 'collection', collection, true, false, false);
                            n = J$.N(3594329, 'n', n, true, false, false);
                            guard = J$.N(3594337, 'guard', guard, true, false, false);
                            J$.N(3594345, 'func', func, false, false, false);
                            if (J$.C(195256, J$.C(195248, J$.R(3594105, 'guard', guard, false, false)) ? J$.F(3594145, J$.R(3594113, 'isIterateeCall', isIterateeCall, false, true), false)(J$.R(3594121, 'collection', collection, false, false), J$.R(3594129, 'n', n, false, false), J$.R(3594137, 'guard', guard, false, false)) : J$.B(365490, '===', J$.R(3594153, 'n', n, false, false), J$.T(3594161, undefined, 24, false)))) {
                                n = J$.W(3594177, 'n', J$.T(3594169, 1, 22, false), n, false, false);
                            } else {
                                n = J$.W(3594209, 'n', J$.F(3594201, J$.R(3594185, 'toInteger', toInteger, false, true), false)(J$.R(3594193, 'n', n, false, false)), n, false, false);
                            }
                            var func = J$.W(3594257, 'func', J$.C(195264, J$.F(3594233, J$.R(3594217, 'isArray', isArray, false, true), false)(J$.R(3594225, 'collection', collection, false, false))) ? J$.R(3594241, 'arraySampleSize', arraySampleSize, false, true) : J$.R(3594249, 'baseSampleSize', baseSampleSize, false, true), func, false, false);
                            return J$.Rt(3594297, J$.F(3594289, J$.R(3594265, 'func', func, false, false), false)(J$.R(3594273, 'collection', collection, false, false), J$.R(3594281, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(3594441, J$e);
                        } finally {
                            if (J$.Fr(3594449))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3594385, 'arraySampleSize', arraySampleSize, false, false, false);
            J$.N(3594393, 'baseSampleSize', baseSampleSize, false, false, false);
            J$.N(3594401, 'isArray', isArray, false, false, false);
            J$.N(3594409, 'isIterateeCall', isIterateeCall, false, false, false);
            J$.N(3594417, 'toInteger', toInteger, false, false, false);
            sampleSize = J$.N(3594433, 'sampleSize', J$.T(3594425, sampleSize, 12, false), true, false, false);
            var arraySampleSize = J$.W(3594065, 'arraySampleSize', J$.F(3593961, J$.I(typeof require === 'undefined' ? require = J$.R(3593945, 'require', undefined, true, true) : require = J$.R(3593945, 'require', require, true, true)), false)(J$.T(3593953, './_arraySampleSize', 21, false)), arraySampleSize, false, true), baseSampleSize = J$.W(3594073, 'baseSampleSize', J$.F(3593985, J$.I(typeof require === 'undefined' ? require = J$.R(3593969, 'require', undefined, true, true) : require = J$.R(3593969, 'require', require, true, true)), false)(J$.T(3593977, './_baseSampleSize', 21, false)), baseSampleSize, false, true), isArray = J$.W(3594081, 'isArray', J$.F(3594009, J$.I(typeof require === 'undefined' ? require = J$.R(3593993, 'require', undefined, true, true) : require = J$.R(3593993, 'require', require, true, true)), false)(J$.T(3594001, './isArray', 21, false)), isArray, false, true), isIterateeCall = J$.W(3594089, 'isIterateeCall', J$.F(3594033, J$.I(typeof require === 'undefined' ? require = J$.R(3594017, 'require', undefined, true, true) : require = J$.R(3594017, 'require', require, true, true)), false)(J$.T(3594025, './_isIterateeCall', 21, false)), isIterateeCall, false, true), toInteger = J$.W(3594097, 'toInteger', J$.F(3594057, J$.I(typeof require === 'undefined' ? require = J$.R(3594041, 'require', undefined, true, true) : require = J$.R(3594041, 'require', require, true, true)), false)(J$.T(3594049, './toInteger', 21, false)), toInteger, false, true);
            J$.P(3594369, J$.I(typeof module === 'undefined' ? module = J$.R(3594353, 'module', undefined, true, true) : module = J$.R(3594353, 'module', module, true, true)), 'exports', J$.R(3594361, 'sampleSize', sampleSize, false, true));
        } catch (J$e) {
            J$.Ex(3594457, J$e);
        } finally {
            if (J$.Sr(3594465))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

