J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2664009, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/sampleSize.js');
            function sampleSize(collection, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2663937, arguments.callee, this, arguments);
                            arguments = J$.N(2663945, 'arguments', arguments, true, false, false);
                            collection = J$.N(2663953, 'collection', collection, true, false, false);
                            n = J$.N(2663961, 'n', n, true, false, false);
                            guard = J$.N(2663969, 'guard', guard, true, false, false);
                            J$.N(2663977, 'func', func, false, false, false);
                            if (J$.C(138136, J$.C(138128, J$.R(2663737, 'guard', guard, false, false)) ? J$.F(2663777, J$.R(2663745, 'isIterateeCall', isIterateeCall, false, true), false)(J$.R(2663753, 'collection', collection, false, false), J$.R(2663761, 'n', n, false, false), J$.R(2663769, 'guard', guard, false, false)) : J$.B(191714, '===', J$.R(2663785, 'n', n, false, false), J$.T(2663793, undefined, 24, false)))) {
                                n = J$.W(2663809, 'n', J$.T(2663801, 1, 22, false), n, false, false);
                            } else {
                                n = J$.W(2663841, 'n', J$.F(2663833, J$.R(2663817, 'toInteger', toInteger, false, true), false)(J$.R(2663825, 'n', n, false, false)), n, false, false);
                            }
                            var func = J$.W(2663889, 'func', J$.C(138144, J$.F(2663865, J$.R(2663849, 'isArray', isArray, false, true), false)(J$.R(2663857, 'collection', collection, false, false))) ? J$.R(2663873, 'arraySampleSize', arraySampleSize, false, true) : J$.R(2663881, 'baseSampleSize', baseSampleSize, false, true), func, false, false);
                            return J$.Rt(2663929, J$.F(2663921, J$.R(2663897, 'func', func, false, false), false)(J$.R(2663905, 'collection', collection, false, false), J$.R(2663913, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(2664073, J$e);
                        } finally {
                            if (J$.Fr(2664081))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2664017, 'arraySampleSize', arraySampleSize, false, false, false);
            J$.N(2664025, 'baseSampleSize', baseSampleSize, false, false, false);
            J$.N(2664033, 'isArray', isArray, false, false, false);
            J$.N(2664041, 'isIterateeCall', isIterateeCall, false, false, false);
            J$.N(2664049, 'toInteger', toInteger, false, false, false);
            sampleSize = J$.N(2664065, 'sampleSize', J$.T(2664057, sampleSize, 12, false), true, false, false);
            var arraySampleSize = J$.W(2663697, 'arraySampleSize', J$.F(2663593, J$.I(typeof require === 'undefined' ? require = J$.R(2663577, 'require', undefined, true, true) : require = J$.R(2663577, 'require', require, true, true)), false)(J$.T(2663585, './_arraySampleSize', 21, false)), arraySampleSize, false, true), baseSampleSize = J$.W(2663705, 'baseSampleSize', J$.F(2663617, J$.I(typeof require === 'undefined' ? require = J$.R(2663601, 'require', undefined, true, true) : require = J$.R(2663601, 'require', require, true, true)), false)(J$.T(2663609, './_baseSampleSize', 21, false)), baseSampleSize, false, true), isArray = J$.W(2663713, 'isArray', J$.F(2663641, J$.I(typeof require === 'undefined' ? require = J$.R(2663625, 'require', undefined, true, true) : require = J$.R(2663625, 'require', require, true, true)), false)(J$.T(2663633, './isArray', 21, false)), isArray, false, true), isIterateeCall = J$.W(2663721, 'isIterateeCall', J$.F(2663665, J$.I(typeof require === 'undefined' ? require = J$.R(2663649, 'require', undefined, true, true) : require = J$.R(2663649, 'require', require, true, true)), false)(J$.T(2663657, './_isIterateeCall', 21, false)), isIterateeCall, false, true), toInteger = J$.W(2663729, 'toInteger', J$.F(2663689, J$.I(typeof require === 'undefined' ? require = J$.R(2663673, 'require', undefined, true, true) : require = J$.R(2663673, 'require', require, true, true)), false)(J$.T(2663681, './toInteger', 21, false)), toInteger, false, true);
            J$.P(2664001, J$.I(typeof module === 'undefined' ? module = J$.R(2663985, 'module', undefined, true, true) : module = J$.R(2663985, 'module', module, true, true)), 'exports', J$.R(2663993, 'sampleSize', sampleSize, false, true));
        } catch (J$e) {
            J$.Ex(2664089, J$e);
        } finally {
            if (J$.Sr(2664097))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

