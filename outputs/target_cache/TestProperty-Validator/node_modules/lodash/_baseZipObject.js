J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6640321, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseZipObject.js');
            function baseZipObject(props, values, assignFunc) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6640217, arguments.callee, this, arguments);
                            arguments = J$.N(6640225, 'arguments', arguments, true, false, false);
                            props = J$.N(6640233, 'props', props, true, false, false);
                            values = J$.N(6640241, 'values', values, true, false, false);
                            assignFunc = J$.N(6640249, 'assignFunc', assignFunc, true, false, false);
                            J$.N(6640257, 'index', index, false, false, false);
                            J$.N(6640265, 'length', length, false, false, false);
                            J$.N(6640273, 'valsLength', valsLength, false, false, false);
                            J$.N(6640281, 'result', result, false, false, false);
                            J$.N(6640289, 'value', value, false, false, false);
                            var index = J$.W(6640033, 'index', J$.U(663346, '-', J$.T(6639985, 1, 22, false)), index, false, false), length = J$.W(6640041, 'length', J$.G(6640001, J$.R(6639993, 'props', props, false, false), 'length'), length, false, false), valsLength = J$.W(6640049, 'valsLength', J$.G(6640017, J$.R(6640009, 'values', values, false, false), 'length'), valsLength, false, false), result = J$.W(6640057, 'result', J$.T(6640025, {}, 11, false), result, false, false);
                            while (J$.C(349240, J$.B(663370, '<', index = J$.W(6640073, 'index', J$.B(663362, '+', J$.U(663354, '+', J$.R(6640065, 'index', index, false, false)), 1), index, false, false), J$.R(6640081, 'length', length, false, false)))) {
                                var value = J$.W(6640137, 'value', J$.C(349232, J$.B(663378, '<', J$.R(6640089, 'index', index, false, false), J$.R(6640097, 'valsLength', valsLength, false, false))) ? J$.G(6640121, J$.R(6640105, 'values', values, false, false), J$.R(6640113, 'index', index, false, false)) : J$.T(6640129, undefined, 24, false), value, false, false);
                                J$.F(6640193, J$.R(6640145, 'assignFunc', assignFunc, false, false), false)(J$.R(6640153, 'result', result, false, false), J$.G(6640177, J$.R(6640161, 'props', props, false, false), J$.R(6640169, 'index', index, false, false)), J$.R(6640185, 'value', value, false, false));
                            }
                            return J$.Rt(6640209, J$.R(6640201, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6640345, J$e);
                        } finally {
                            if (J$.Fr(6640353))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            baseZipObject = J$.N(6640337, 'baseZipObject', J$.T(6640329, baseZipObject, 12, false), true, false, false);
            J$.P(6640313, J$.I(typeof module === 'undefined' ? module = J$.R(6640297, 'module', undefined, true, true) : module = J$.R(6640297, 'module', module, true, true)), 'exports', J$.R(6640305, 'baseZipObject', baseZipObject, false, true));
        } catch (J$e) {
            J$.Ex(6640361, J$e);
        } finally {
            if (J$.Sr(6640369))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

