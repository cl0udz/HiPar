J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2665825, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/size.js');
            function size(collection) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2665769, arguments.callee, this, arguments);
                            arguments = J$.N(2665777, 'arguments', arguments, true, false, false);
                            collection = J$.N(2665785, 'collection', collection, true, false, false);
                            J$.N(2665793, 'tag', tag, false, false, false);
                            if (J$.C(138184, J$.B(191754, '==', J$.R(2665513, 'collection', collection, false, false), J$.T(2665521, null, 25, false)))) {
                                return J$.Rt(2665537, J$.T(2665529, 0, 22, false));
                            }
                            if (J$.C(138200, J$.F(2665561, J$.R(2665545, 'isArrayLike', isArrayLike, false, true), false)(J$.R(2665553, 'collection', collection, false, false)))) {
                                return J$.Rt(2665633, J$.C(138192, J$.F(2665585, J$.R(2665569, 'isString', isString, false, true), false)(J$.R(2665577, 'collection', collection, false, false))) ? J$.F(2665609, J$.R(2665593, 'stringSize', stringSize, false, true), false)(J$.R(2665601, 'collection', collection, false, false)) : J$.G(2665625, J$.R(2665617, 'collection', collection, false, false), 'length'));
                            }
                            var tag = J$.W(2665665, 'tag', J$.F(2665657, J$.R(2665641, 'getTag', getTag, false, true), false)(J$.R(2665649, 'collection', collection, false, false)), tag, false, false);
                            if (J$.C(138216, J$.C(138208, J$.B(191762, '==', J$.R(2665673, 'tag', tag, false, false), J$.R(2665681, 'mapTag', mapTag, false, true))) ? J$._() : J$.B(191770, '==', J$.R(2665689, 'tag', tag, false, false), J$.R(2665697, 'setTag', setTag, false, true)))) {
                                return J$.Rt(2665721, J$.G(2665713, J$.R(2665705, 'collection', collection, false, false), 'size'));
                            }
                            return J$.Rt(2665761, J$.G(2665753, J$.F(2665745, J$.R(2665729, 'baseKeys', baseKeys, false, true), false)(J$.R(2665737, 'collection', collection, false, false)), 'length'));
                        } catch (J$e) {
                            J$.Ex(2665905, J$e);
                        } finally {
                            if (J$.Fr(2665913))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2665833, 'baseKeys', baseKeys, false, false, false);
            J$.N(2665841, 'getTag', getTag, false, false, false);
            J$.N(2665849, 'isArrayLike', isArrayLike, false, false, false);
            J$.N(2665857, 'isString', isString, false, false, false);
            J$.N(2665865, 'stringSize', stringSize, false, false, false);
            J$.N(2665873, 'mapTag', mapTag, false, false, false);
            J$.N(2665881, 'setTag', setTag, false, false, false);
            size = J$.N(2665897, 'size', J$.T(2665889, size, 12, false), true, false, false);
            var baseKeys = J$.W(2665441, 'baseKeys', J$.F(2665337, J$.I(typeof require === 'undefined' ? require = J$.R(2665321, 'require', undefined, true, true) : require = J$.R(2665321, 'require', require, true, true)), false)(J$.T(2665329, './_baseKeys', 21, false)), baseKeys, false, true), getTag = J$.W(2665449, 'getTag', J$.F(2665361, J$.I(typeof require === 'undefined' ? require = J$.R(2665345, 'require', undefined, true, true) : require = J$.R(2665345, 'require', require, true, true)), false)(J$.T(2665353, './_getTag', 21, false)), getTag, false, true), isArrayLike = J$.W(2665457, 'isArrayLike', J$.F(2665385, J$.I(typeof require === 'undefined' ? require = J$.R(2665369, 'require', undefined, true, true) : require = J$.R(2665369, 'require', require, true, true)), false)(J$.T(2665377, './isArrayLike', 21, false)), isArrayLike, false, true), isString = J$.W(2665465, 'isString', J$.F(2665409, J$.I(typeof require === 'undefined' ? require = J$.R(2665393, 'require', undefined, true, true) : require = J$.R(2665393, 'require', require, true, true)), false)(J$.T(2665401, './isString', 21, false)), isString, false, true), stringSize = J$.W(2665473, 'stringSize', J$.F(2665433, J$.I(typeof require === 'undefined' ? require = J$.R(2665417, 'require', undefined, true, true) : require = J$.R(2665417, 'require', require, true, true)), false)(J$.T(2665425, './_stringSize', 21, false)), stringSize, false, true);
            var mapTag = J$.W(2665497, 'mapTag', J$.T(2665481, '[object Map]', 21, false), mapTag, false, true), setTag = J$.W(2665505, 'setTag', J$.T(2665489, '[object Set]', 21, false), setTag, false, true);
            J$.P(2665817, J$.I(typeof module === 'undefined' ? module = J$.R(2665801, 'module', undefined, true, true) : module = J$.R(2665801, 'module', module, true, true)), 'exports', J$.R(2665809, 'size', size, false, true));
        } catch (J$e) {
            J$.Ex(2665921, J$e);
        } finally {
            if (J$.Sr(2665929))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

