J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6685297, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_hasUnicode.js');
            function hasUnicode(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6685249, arguments.callee, this, arguments);
                            arguments = J$.N(6685257, 'arguments', arguments, true, false, false);
                            string = J$.N(6685265, 'string', string, true, false, false);
                            return J$.Rt(6685241, J$.M(6685233, J$.R(6685217, 'reHasUnicode', reHasUnicode, false, true), 'test', false)(J$.R(6685225, 'string', string, false, false)));
                        } catch (J$e) {
                            J$.Ex(6685385, J$e);
                        } finally {
                            if (J$.Fr(6685393))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6685305, 'rsAstralRange', rsAstralRange, false, false, false);
            J$.N(6685313, 'rsComboMarksRange', rsComboMarksRange, false, false, false);
            J$.N(6685321, 'reComboHalfMarksRange', reComboHalfMarksRange, false, false, false);
            J$.N(6685329, 'rsComboSymbolsRange', rsComboSymbolsRange, false, false, false);
            J$.N(6685337, 'rsComboRange', rsComboRange, false, false, false);
            J$.N(6685345, 'rsVarRange', rsVarRange, false, false, false);
            J$.N(6685353, 'rsZWJ', rsZWJ, false, false, false);
            J$.N(6685361, 'reHasUnicode', reHasUnicode, false, false, false);
            hasUnicode = J$.N(6685377, 'hasUnicode', J$.T(6685369, hasUnicode, 12, false), true, false, false);
            var rsAstralRange = J$.W(6685081, 'rsAstralRange', J$.T(6685017, '\\ud800-\\udfff', 21, false), rsAstralRange, false, true), rsComboMarksRange = J$.W(6685089, 'rsComboMarksRange', J$.T(6685025, '\\u0300-\\u036f', 21, false), rsComboMarksRange, false, true), reComboHalfMarksRange = J$.W(6685097, 'reComboHalfMarksRange', J$.T(6685033, '\\ufe20-\\ufe2f', 21, false), reComboHalfMarksRange, false, true), rsComboSymbolsRange = J$.W(6685105, 'rsComboSymbolsRange', J$.T(6685041, '\\u20d0-\\u20ff', 21, false), rsComboSymbolsRange, false, true), rsComboRange = J$.W(6685113, 'rsComboRange', J$.B(666650, '+', J$.B(666642, '+', J$.R(6685049, 'rsComboMarksRange', rsComboMarksRange, false, true), J$.R(6685057, 'reComboHalfMarksRange', reComboHalfMarksRange, false, true)), J$.R(6685065, 'rsComboSymbolsRange', rsComboSymbolsRange, false, true)), rsComboRange, false, true), rsVarRange = J$.W(6685121, 'rsVarRange', J$.T(6685073, '\\ufe0e\\ufe0f', 21, false), rsVarRange, false, true);
            var rsZWJ = J$.W(6685137, 'rsZWJ', J$.T(6685129, '\\u200d', 21, false), rsZWJ, false, true);
            var reHasUnicode = J$.W(6685209, 'reHasUnicode', J$.F(6685201, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(6685145, 'RegExp', undefined, true, true) : RegExp = J$.R(6685145, 'RegExp', RegExp, true, true)), false)(J$.B(666690, '+', J$.B(666682, '+', J$.B(666674, '+', J$.B(666666, '+', J$.B(666658, '+', J$.T(6685153, '[', 21, false), J$.R(6685161, 'rsZWJ', rsZWJ, false, true)), J$.R(6685169, 'rsAstralRange', rsAstralRange, false, true)), J$.R(6685177, 'rsComboRange', rsComboRange, false, true)), J$.R(6685185, 'rsVarRange', rsVarRange, false, true)), J$.T(6685193, ']', 21, false))), reHasUnicode, false, true);
            J$.P(6685289, J$.I(typeof module === 'undefined' ? module = J$.R(6685273, 'module', undefined, true, true) : module = J$.R(6685273, 'module', module, true, true)), 'exports', J$.R(6685281, 'hasUnicode', hasUnicode, false, true));
        } catch (J$e) {
            J$.Ex(6685401, J$e);
        } finally {
            if (J$.Sr(6685409))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

