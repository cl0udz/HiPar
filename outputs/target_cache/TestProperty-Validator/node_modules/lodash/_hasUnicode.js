J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2974585, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_hasUnicode.js');
            function hasUnicode(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2974537, arguments.callee, this, arguments);
                            arguments = J$.N(2974545, 'arguments', arguments, true, false, false);
                            string = J$.N(2974553, 'string', string, true, false, false);
                            return J$.Rt(2974529, J$.M(2974521, J$.R(2974505, 'reHasUnicode', reHasUnicode, false, true), 'test', false)(J$.R(2974513, 'string', string, false, false)));
                        } catch (J$e) {
                            J$.Ex(2974673, J$e);
                        } finally {
                            if (J$.Fr(2974681))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2974593, 'rsAstralRange', rsAstralRange, false, false, false);
            J$.N(2974601, 'rsComboMarksRange', rsComboMarksRange, false, false, false);
            J$.N(2974609, 'reComboHalfMarksRange', reComboHalfMarksRange, false, false, false);
            J$.N(2974617, 'rsComboSymbolsRange', rsComboSymbolsRange, false, false, false);
            J$.N(2974625, 'rsComboRange', rsComboRange, false, false, false);
            J$.N(2974633, 'rsVarRange', rsVarRange, false, false, false);
            J$.N(2974641, 'rsZWJ', rsZWJ, false, false, false);
            J$.N(2974649, 'reHasUnicode', reHasUnicode, false, false, false);
            hasUnicode = J$.N(2974665, 'hasUnicode', J$.T(2974657, hasUnicode, 12, false), true, false, false);
            var rsAstralRange = J$.W(2974369, 'rsAstralRange', J$.T(2974305, '\\ud800-\\udfff', 21, false), rsAstralRange, false, true), rsComboMarksRange = J$.W(2974377, 'rsComboMarksRange', J$.T(2974313, '\\u0300-\\u036f', 21, false), rsComboMarksRange, false, true), reComboHalfMarksRange = J$.W(2974385, 'reComboHalfMarksRange', J$.T(2974321, '\\ufe20-\\ufe2f', 21, false), reComboHalfMarksRange, false, true), rsComboSymbolsRange = J$.W(2974393, 'rsComboSymbolsRange', J$.T(2974329, '\\u20d0-\\u20ff', 21, false), rsComboSymbolsRange, false, true), rsComboRange = J$.W(2974401, 'rsComboRange', J$.B(323890, '+', J$.B(323882, '+', J$.R(2974337, 'rsComboMarksRange', rsComboMarksRange, false, true), J$.R(2974345, 'reComboHalfMarksRange', reComboHalfMarksRange, false, true)), J$.R(2974353, 'rsComboSymbolsRange', rsComboSymbolsRange, false, true)), rsComboRange, false, true), rsVarRange = J$.W(2974409, 'rsVarRange', J$.T(2974361, '\\ufe0e\\ufe0f', 21, false), rsVarRange, false, true);
            var rsZWJ = J$.W(2974425, 'rsZWJ', J$.T(2974417, '\\u200d', 21, false), rsZWJ, false, true);
            var reHasUnicode = J$.W(2974497, 'reHasUnicode', J$.F(2974489, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2974433, 'RegExp', undefined, true, true) : RegExp = J$.R(2974433, 'RegExp', RegExp, true, true)), false)(J$.B(323930, '+', J$.B(323922, '+', J$.B(323914, '+', J$.B(323906, '+', J$.B(323898, '+', J$.T(2974441, '[', 21, false), J$.R(2974449, 'rsZWJ', rsZWJ, false, true)), J$.R(2974457, 'rsAstralRange', rsAstralRange, false, true)), J$.R(2974465, 'rsComboRange', rsComboRange, false, true)), J$.R(2974473, 'rsVarRange', rsVarRange, false, true)), J$.T(2974481, ']', 21, false))), reHasUnicode, false, true);
            J$.P(2974577, J$.I(typeof module === 'undefined' ? module = J$.R(2974561, 'module', undefined, true, true) : module = J$.R(2974561, 'module', module, true, true)), 'exports', J$.R(2974569, 'hasUnicode', hasUnicode, false, true));
        } catch (J$e) {
            J$.Ex(2974689, J$e);
        } finally {
            if (J$.Sr(2974697))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

