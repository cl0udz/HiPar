J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2044217, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_hasUnicode.js');
            function hasUnicode(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2044169, arguments.callee, this, arguments);
                            arguments = J$.N(2044177, 'arguments', arguments, true, false, false);
                            string = J$.N(2044185, 'string', string, true, false, false);
                            return J$.Rt(2044161, J$.M(2044153, J$.R(2044137, 'reHasUnicode', reHasUnicode, false, true), 'test', false)(J$.R(2044145, 'string', string, false, false)));
                        } catch (J$e) {
                            J$.Ex(2044305, J$e);
                        } finally {
                            if (J$.Fr(2044313))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2044225, 'rsAstralRange', rsAstralRange, false, false, false);
            J$.N(2044233, 'rsComboMarksRange', rsComboMarksRange, false, false, false);
            J$.N(2044241, 'reComboHalfMarksRange', reComboHalfMarksRange, false, false, false);
            J$.N(2044249, 'rsComboSymbolsRange', rsComboSymbolsRange, false, false, false);
            J$.N(2044257, 'rsComboRange', rsComboRange, false, false, false);
            J$.N(2044265, 'rsVarRange', rsVarRange, false, false, false);
            J$.N(2044273, 'rsZWJ', rsZWJ, false, false, false);
            J$.N(2044281, 'reHasUnicode', reHasUnicode, false, false, false);
            hasUnicode = J$.N(2044297, 'hasUnicode', J$.T(2044289, hasUnicode, 12, false), true, false, false);
            var rsAstralRange = J$.W(2044001, 'rsAstralRange', J$.T(2043937, '\\ud800-\\udfff', 21, false), rsAstralRange, false, true), rsComboMarksRange = J$.W(2044009, 'rsComboMarksRange', J$.T(2043945, '\\u0300-\\u036f', 21, false), rsComboMarksRange, false, true), reComboHalfMarksRange = J$.W(2044017, 'reComboHalfMarksRange', J$.T(2043953, '\\ufe20-\\ufe2f', 21, false), reComboHalfMarksRange, false, true), rsComboSymbolsRange = J$.W(2044025, 'rsComboSymbolsRange', J$.T(2043961, '\\u20d0-\\u20ff', 21, false), rsComboSymbolsRange, false, true), rsComboRange = J$.W(2044033, 'rsComboRange', J$.B(150114, '+', J$.B(150106, '+', J$.R(2043969, 'rsComboMarksRange', rsComboMarksRange, false, true), J$.R(2043977, 'reComboHalfMarksRange', reComboHalfMarksRange, false, true)), J$.R(2043985, 'rsComboSymbolsRange', rsComboSymbolsRange, false, true)), rsComboRange, false, true), rsVarRange = J$.W(2044041, 'rsVarRange', J$.T(2043993, '\\ufe0e\\ufe0f', 21, false), rsVarRange, false, true);
            var rsZWJ = J$.W(2044057, 'rsZWJ', J$.T(2044049, '\\u200d', 21, false), rsZWJ, false, true);
            var reHasUnicode = J$.W(2044129, 'reHasUnicode', J$.F(2044121, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(2044065, 'RegExp', undefined, true, true) : RegExp = J$.R(2044065, 'RegExp', RegExp, true, true)), false)(J$.B(150154, '+', J$.B(150146, '+', J$.B(150138, '+', J$.B(150130, '+', J$.B(150122, '+', J$.T(2044073, '[', 21, false), J$.R(2044081, 'rsZWJ', rsZWJ, false, true)), J$.R(2044089, 'rsAstralRange', rsAstralRange, false, true)), J$.R(2044097, 'rsComboRange', rsComboRange, false, true)), J$.R(2044105, 'rsVarRange', rsVarRange, false, true)), J$.T(2044113, ']', 21, false))), reHasUnicode, false, true);
            J$.P(2044209, J$.I(typeof module === 'undefined' ? module = J$.R(2044193, 'module', undefined, true, true) : module = J$.R(2044193, 'module', module, true, true)), 'exports', J$.R(2044201, 'hasUnicode', hasUnicode, false, true));
        } catch (J$e) {
            J$.Ex(2044321, J$e);
        } finally {
            if (J$.Sr(2044329))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

