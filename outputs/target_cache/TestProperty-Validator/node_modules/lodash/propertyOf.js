J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7296889, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/propertyOf.js');
            function propertyOf(object) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7296841, arguments.callee, this, arguments);
                            arguments = J$.N(7296849, 'arguments', arguments, true, false, false);
                            object = J$.N(7296857, 'object', object, true, false, false);
                            return J$.Rt(7296833, J$.T(7296825, function (path) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7296801, arguments.callee, this, arguments);
                                            arguments = J$.N(7296809, 'arguments', arguments, true, false, false);
                                            path = J$.N(7296817, 'path', path, true, false, false);
                                            return J$.Rt(7296793, J$.C(388272, J$.B(707906, '==', J$.R(7296737, 'object', object, false, false), J$.T(7296745, null, 25, false))) ? J$.T(7296753, undefined, 24, false) : J$.F(7296785, J$.R(7296761, 'baseGet', baseGet, false, true), false)(J$.R(7296769, 'object', object, false, false), J$.R(7296777, 'path', path, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(7296921, J$e);
                                        } finally {
                                            if (J$.Fr(7296929))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7296937, J$e);
                        } finally {
                            if (J$.Fr(7296945))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7296897, 'baseGet', baseGet, false, false, false);
            propertyOf = J$.N(7296913, 'propertyOf', J$.T(7296905, propertyOf, 12, false), true, false, false);
            var baseGet = J$.W(7296729, 'baseGet', J$.F(7296721, J$.I(typeof require === 'undefined' ? require = J$.R(7296705, 'require', undefined, true, true) : require = J$.R(7296705, 'require', require, true, true)), false)(J$.T(7296713, './_baseGet', 21, false)), baseGet, false, true);
            J$.P(7296881, J$.I(typeof module === 'undefined' ? module = J$.R(7296865, 'module', undefined, true, true) : module = J$.R(7296865, 'module', module, true, true)), 'exports', J$.R(7296873, 'propertyOf', propertyOf, false, true));
        } catch (J$e) {
            J$.Ex(7296953, J$e);
        } finally {
            if (J$.Sr(7296961))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

