J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6642521, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_cloneArrayBuffer.js');
            function cloneArrayBuffer(arrayBuffer) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6642465, arguments.callee, this, arguments);
                            arguments = J$.N(6642473, 'arguments', arguments, true, false, false);
                            arrayBuffer = J$.N(6642481, 'arrayBuffer', arrayBuffer, true, false, false);
                            J$.N(6642489, 'result', result, false, false, false);
                            var result = J$.W(6642385, 'result', J$.M(6642377, J$.R(6642353, 'arrayBuffer', arrayBuffer, false, false), 'constructor', true)(J$.G(6642369, J$.R(6642361, 'arrayBuffer', arrayBuffer, false, false), 'byteLength')), result, false, false);
                            J$.M(6642441, J$.F(6642409, J$.R(6642393, 'Uint8Array', Uint8Array, false, true), true)(J$.R(6642401, 'result', result, false, false)), 'set', false)(J$.F(6642433, J$.R(6642417, 'Uint8Array', Uint8Array, false, true), true)(J$.R(6642425, 'arrayBuffer', arrayBuffer, false, false)));
                            return J$.Rt(6642457, J$.R(6642449, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6642553, J$e);
                        } finally {
                            if (J$.Fr(6642561))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6642529, 'Uint8Array', Uint8Array, false, false, false);
            cloneArrayBuffer = J$.N(6642545, 'cloneArrayBuffer', J$.T(6642537, cloneArrayBuffer, 12, false), true, false, false);
            var Uint8Array = J$.W(6642345, 'Uint8Array', J$.F(6642337, J$.I(typeof require === 'undefined' ? require = J$.R(6642321, 'require', undefined, true, true) : require = J$.R(6642321, 'require', require, true, true)), false)(J$.T(6642329, './_Uint8Array', 21, false)), Uint8Array, false, true);
            J$.P(6642513, J$.I(typeof module === 'undefined' ? module = J$.R(6642497, 'module', undefined, true, true) : module = J$.R(6642497, 'module', module, true, true)), 'exports', J$.R(6642505, 'cloneArrayBuffer', cloneArrayBuffer, false, true));
        } catch (J$e) {
            J$.Ex(6642569, J$e);
        } finally {
            if (J$.Sr(6642577))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

