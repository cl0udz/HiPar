J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6722809, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/bind.js');
            J$.N(6722817, 'baseRest', baseRest, false, false, false);
            J$.N(6722825, 'createWrap', createWrap, false, false, false);
            J$.N(6722833, 'getHolder', getHolder, false, false, false);
            J$.N(6722841, 'replaceHolders', replaceHolders, false, false, false);
            J$.N(6722849, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, false, false);
            J$.N(6722857, 'WRAP_PARTIAL_FLAG', WRAP_PARTIAL_FLAG, false, false, false);
            J$.N(6722865, 'bind', bind, false, false, false);
            var baseRest = J$.W(6722433, 'baseRest', J$.F(6722353, J$.I(typeof require === 'undefined' ? require = J$.R(6722337, 'require', undefined, true, true) : require = J$.R(6722337, 'require', require, true, true)), false)(J$.T(6722345, './_baseRest', 21, false)), baseRest, false, true), createWrap = J$.W(6722441, 'createWrap', J$.F(6722377, J$.I(typeof require === 'undefined' ? require = J$.R(6722361, 'require', undefined, true, true) : require = J$.R(6722361, 'require', require, true, true)), false)(J$.T(6722369, './_createWrap', 21, false)), createWrap, false, true), getHolder = J$.W(6722449, 'getHolder', J$.F(6722401, J$.I(typeof require === 'undefined' ? require = J$.R(6722385, 'require', undefined, true, true) : require = J$.R(6722385, 'require', require, true, true)), false)(J$.T(6722393, './_getHolder', 21, false)), getHolder, false, true), replaceHolders = J$.W(6722457, 'replaceHolders', J$.F(6722425, J$.I(typeof require === 'undefined' ? require = J$.R(6722409, 'require', undefined, true, true) : require = J$.R(6722409, 'require', require, true, true)), false)(J$.T(6722417, './_replaceHolders', 21, false)), replaceHolders, false, true);
            var WRAP_BIND_FLAG = J$.W(6722481, 'WRAP_BIND_FLAG', J$.T(6722465, 1, 22, false), WRAP_BIND_FLAG, false, true), WRAP_PARTIAL_FLAG = J$.W(6722489, 'WRAP_PARTIAL_FLAG', J$.T(6722473, 32, 22, false), WRAP_PARTIAL_FLAG, false, true);
            var bind = J$.W(6722753, 'bind', J$.F(6722745, J$.R(6722497, 'baseRest', baseRest, false, true), false)(J$.T(6722737, function (func, thisArg, partials) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6722681, arguments.callee, this, arguments);
                            arguments = J$.N(6722689, 'arguments', arguments, true, false, false);
                            func = J$.N(6722697, 'func', func, true, false, false);
                            thisArg = J$.N(6722705, 'thisArg', thisArg, true, false, false);
                            partials = J$.N(6722713, 'partials', partials, true, false, false);
                            J$.N(6722721, 'bitmask', bitmask, false, false, false);
                            J$.N(6722729, 'holders', holders, false, false, false);
                            var bitmask = J$.W(6722513, 'bitmask', J$.R(6722505, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, true), bitmask, false, false);
                            if (J$.C(353712, J$.G(6722529, J$.R(6722521, 'partials', partials, false, false), 'length'))) {
                                var holders = J$.W(6722585, 'holders', J$.F(6722577, J$.R(6722537, 'replaceHolders', replaceHolders, false, true), false)(J$.R(6722545, 'partials', partials, false, false), J$.F(6722569, J$.R(6722553, 'getHolder', getHolder, false, true), false)(J$.R(6722561, 'bind', bind, false, true))), holders, false, false);
                                bitmask = J$.W(6722609, 'bitmask', J$.B(669690, '|', J$.R(6722601, 'bitmask', bitmask, false, false), J$.R(6722593, 'WRAP_PARTIAL_FLAG', WRAP_PARTIAL_FLAG, false, true)), bitmask, false, false);
                            }
                            return J$.Rt(6722673, J$.F(6722665, J$.R(6722617, 'createWrap', createWrap, false, true), false)(J$.R(6722625, 'func', func, false, false), J$.R(6722633, 'bitmask', bitmask, false, false), J$.R(6722641, 'thisArg', thisArg, false, false), J$.R(6722649, 'partials', partials, false, false), J$.R(6722657, 'holders', holders, false, false)));
                        } catch (J$e) {
                            J$.Ex(6722873, J$e);
                        } finally {
                            if (J$.Fr(6722881))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), bind, false, true);
            J$.P(6722777, J$.R(6722761, 'bind', bind, false, true), 'placeholder', J$.T(6722769, {}, 11, false));
            J$.P(6722801, J$.I(typeof module === 'undefined' ? module = J$.R(6722785, 'module', undefined, true, true) : module = J$.R(6722785, 'module', module, true, true)), 'exports', J$.R(6722793, 'bind', bind, false, true));
        } catch (J$e) {
            J$.Ex(6722889, J$e);
        } finally {
            if (J$.Sr(6722897))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

