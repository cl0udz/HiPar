J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2917921, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseSampleSize.js');
            function baseSampleSize(collection, n) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2917857, arguments.callee, this, arguments);
                            arguments = J$.N(2917865, 'arguments', arguments, true, false, false);
                            collection = J$.N(2917873, 'collection', collection, true, false, false);
                            n = J$.N(2917881, 'n', n, true, false, false);
                            J$.N(2917889, 'array', array, false, false, false);
                            var array = J$.W(2917769, 'array', J$.F(2917761, J$.R(2917745, 'values', values, false, true), false)(J$.R(2917753, 'collection', collection, false, false)), array, false, false);
                            return J$.Rt(2917849, J$.F(2917841, J$.R(2917777, 'shuffleSelf', shuffleSelf, false, true), false)(J$.R(2917785, 'array', array, false, false), J$.F(2917833, J$.R(2917793, 'baseClamp', baseClamp, false, true), false)(J$.R(2917801, 'n', n, false, false), J$.T(2917809, 0, 22, false), J$.G(2917825, J$.R(2917817, 'array', array, false, false), 'length'))));
                        } catch (J$e) {
                            J$.Ex(2917969, J$e);
                        } finally {
                            if (J$.Fr(2917977))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2917929, 'baseClamp', baseClamp, false, false, false);
            J$.N(2917937, 'shuffleSelf', shuffleSelf, false, false, false);
            J$.N(2917945, 'values', values, false, false, false);
            baseSampleSize = J$.N(2917961, 'baseSampleSize', J$.T(2917953, baseSampleSize, 12, false), true, false, false);
            var baseClamp = J$.W(2917721, 'baseClamp', J$.F(2917665, J$.I(typeof require === 'undefined' ? require = J$.R(2917649, 'require', undefined, true, true) : require = J$.R(2917649, 'require', require, true, true)), false)(J$.T(2917657, './_baseClamp', 21, false)), baseClamp, false, true), shuffleSelf = J$.W(2917729, 'shuffleSelf', J$.F(2917689, J$.I(typeof require === 'undefined' ? require = J$.R(2917673, 'require', undefined, true, true) : require = J$.R(2917673, 'require', require, true, true)), false)(J$.T(2917681, './_shuffleSelf', 21, false)), shuffleSelf, false, true), values = J$.W(2917737, 'values', J$.F(2917713, J$.I(typeof require === 'undefined' ? require = J$.R(2917697, 'require', undefined, true, true) : require = J$.R(2917697, 'require', require, true, true)), false)(J$.T(2917705, './values', 21, false)), values, false, true);
            J$.P(2917913, J$.I(typeof module === 'undefined' ? module = J$.R(2917897, 'module', undefined, true, true) : module = J$.R(2917897, 'module', module, true, true)), 'exports', J$.R(2917905, 'baseSampleSize', baseSampleSize, false, true));
        } catch (J$e) {
            J$.Ex(2917985, J$e);
        } finally {
            if (J$.Sr(2917993))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

