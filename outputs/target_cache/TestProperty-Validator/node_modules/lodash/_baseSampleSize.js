J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6628633, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseSampleSize.js');
            function baseSampleSize(collection, n) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6628569, arguments.callee, this, arguments);
                            arguments = J$.N(6628577, 'arguments', arguments, true, false, false);
                            collection = J$.N(6628585, 'collection', collection, true, false, false);
                            n = J$.N(6628593, 'n', n, true, false, false);
                            J$.N(6628601, 'array', array, false, false, false);
                            var array = J$.W(6628481, 'array', J$.F(6628473, J$.R(6628457, 'values', values, false, true), false)(J$.R(6628465, 'collection', collection, false, false)), array, false, false);
                            return J$.Rt(6628561, J$.F(6628553, J$.R(6628489, 'shuffleSelf', shuffleSelf, false, true), false)(J$.R(6628497, 'array', array, false, false), J$.F(6628545, J$.R(6628505, 'baseClamp', baseClamp, false, true), false)(J$.R(6628513, 'n', n, false, false), J$.T(6628521, 0, 22, false), J$.G(6628537, J$.R(6628529, 'array', array, false, false), 'length'))));
                        } catch (J$e) {
                            J$.Ex(6628681, J$e);
                        } finally {
                            if (J$.Fr(6628689))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6628641, 'baseClamp', baseClamp, false, false, false);
            J$.N(6628649, 'shuffleSelf', shuffleSelf, false, false, false);
            J$.N(6628657, 'values', values, false, false, false);
            baseSampleSize = J$.N(6628673, 'baseSampleSize', J$.T(6628665, baseSampleSize, 12, false), true, false, false);
            var baseClamp = J$.W(6628433, 'baseClamp', J$.F(6628377, J$.I(typeof require === 'undefined' ? require = J$.R(6628361, 'require', undefined, true, true) : require = J$.R(6628361, 'require', require, true, true)), false)(J$.T(6628369, './_baseClamp', 21, false)), baseClamp, false, true), shuffleSelf = J$.W(6628441, 'shuffleSelf', J$.F(6628401, J$.I(typeof require === 'undefined' ? require = J$.R(6628385, 'require', undefined, true, true) : require = J$.R(6628385, 'require', require, true, true)), false)(J$.T(6628393, './_shuffleSelf', 21, false)), shuffleSelf, false, true), values = J$.W(6628449, 'values', J$.F(6628425, J$.I(typeof require === 'undefined' ? require = J$.R(6628409, 'require', undefined, true, true) : require = J$.R(6628409, 'require', require, true, true)), false)(J$.T(6628417, './values', 21, false)), values, false, true);
            J$.P(6628625, J$.I(typeof module === 'undefined' ? module = J$.R(6628609, 'module', undefined, true, true) : module = J$.R(6628609, 'module', module, true, true)), 'exports', J$.R(6628617, 'baseSampleSize', baseSampleSize, false, true));
        } catch (J$e) {
            J$.Ex(6628697, J$e);
        } finally {
            if (J$.Sr(6628705))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

