J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1987553, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseSampleSize.js');
            function baseSampleSize(collection, n) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1987489, arguments.callee, this, arguments);
                            arguments = J$.N(1987497, 'arguments', arguments, true, false, false);
                            collection = J$.N(1987505, 'collection', collection, true, false, false);
                            n = J$.N(1987513, 'n', n, true, false, false);
                            J$.N(1987521, 'array', array, false, false, false);
                            var array = J$.W(1987401, 'array', J$.F(1987393, J$.R(1987377, 'values', values, false, true), false)(J$.R(1987385, 'collection', collection, false, false)), array, false, false);
                            return J$.Rt(1987481, J$.F(1987473, J$.R(1987409, 'shuffleSelf', shuffleSelf, false, true), false)(J$.R(1987417, 'array', array, false, false), J$.F(1987465, J$.R(1987425, 'baseClamp', baseClamp, false, true), false)(J$.R(1987433, 'n', n, false, false), J$.T(1987441, 0, 22, false), J$.G(1987457, J$.R(1987449, 'array', array, false, false), 'length'))));
                        } catch (J$e) {
                            J$.Ex(1987601, J$e);
                        } finally {
                            if (J$.Fr(1987609))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1987561, 'baseClamp', baseClamp, false, false, false);
            J$.N(1987569, 'shuffleSelf', shuffleSelf, false, false, false);
            J$.N(1987577, 'values', values, false, false, false);
            baseSampleSize = J$.N(1987593, 'baseSampleSize', J$.T(1987585, baseSampleSize, 12, false), true, false, false);
            var baseClamp = J$.W(1987353, 'baseClamp', J$.F(1987297, J$.I(typeof require === 'undefined' ? require = J$.R(1987281, 'require', undefined, true, true) : require = J$.R(1987281, 'require', require, true, true)), false)(J$.T(1987289, './_baseClamp', 21, false)), baseClamp, false, true), shuffleSelf = J$.W(1987361, 'shuffleSelf', J$.F(1987321, J$.I(typeof require === 'undefined' ? require = J$.R(1987305, 'require', undefined, true, true) : require = J$.R(1987305, 'require', require, true, true)), false)(J$.T(1987313, './_shuffleSelf', 21, false)), shuffleSelf, false, true), values = J$.W(1987369, 'values', J$.F(1987345, J$.I(typeof require === 'undefined' ? require = J$.R(1987329, 'require', undefined, true, true) : require = J$.R(1987329, 'require', require, true, true)), false)(J$.T(1987337, './values', 21, false)), values, false, true);
            J$.P(1987545, J$.I(typeof module === 'undefined' ? module = J$.R(1987529, 'module', undefined, true, true) : module = J$.R(1987529, 'module', module, true, true)), 'exports', J$.R(1987537, 'baseSampleSize', baseSampleSize, false, true));
        } catch (J$e) {
            J$.Ex(1987617, J$e);
        } finally {
            if (J$.Sr(1987625))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

