J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2277977, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isInteger.js');
            function isInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2277929, arguments.callee, this, arguments);
                            arguments = J$.N(2277937, 'arguments', arguments, true, false, false);
                            value = J$.N(2277945, 'value', value, true, false, false);
                            return J$.Rt(2277921, J$.C(110584, J$.B(161858, '==', J$.U(161850, 'typeof', J$.R(2277873, 'value', value, false, false)), J$.T(2277881, 'number', 21, false))) ? J$.B(161866, '==', J$.R(2277889, 'value', value, false, false), J$.F(2277913, J$.R(2277897, 'toInteger', toInteger, false, true), false)(J$.R(2277905, 'value', value, false, false))) : J$._());
                        } catch (J$e) {
                            J$.Ex(2278009, J$e);
                        } finally {
                            if (J$.Fr(2278017))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2277985, 'toInteger', toInteger, false, false, false);
            isInteger = J$.N(2278001, 'isInteger', J$.T(2277993, isInteger, 12, false), true, false, false);
            var toInteger = J$.W(2277865, 'toInteger', J$.F(2277857, J$.I(typeof require === 'undefined' ? require = J$.R(2277841, 'require', undefined, true, true) : require = J$.R(2277841, 'require', require, true, true)), false)(J$.T(2277849, './toInteger', 21, false)), toInteger, false, true);
            J$.P(2277969, J$.I(typeof module === 'undefined' ? module = J$.R(2277953, 'module', undefined, true, true) : module = J$.R(2277953, 'module', module, true, true)), 'exports', J$.R(2277961, 'isInteger', isInteger, false, true));
        } catch (J$e) {
            J$.Ex(2278025, J$e);
        } finally {
            if (J$.Sr(2278033))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

