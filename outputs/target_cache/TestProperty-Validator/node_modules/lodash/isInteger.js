J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6919057, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isInteger.js');
            function isInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6919009, arguments.callee, this, arguments);
                            arguments = J$.N(6919017, 'arguments', arguments, true, false, false);
                            value = J$.N(6919025, 'value', value, true, false, false);
                            return J$.Rt(6919001, J$.C(361104, J$.B(678394, '==', J$.U(678386, 'typeof', J$.R(6918953, 'value', value, false, false)), J$.T(6918961, 'number', 21, false))) ? J$.B(678402, '==', J$.R(6918969, 'value', value, false, false), J$.F(6918993, J$.R(6918977, 'toInteger', toInteger, false, true), false)(J$.R(6918985, 'value', value, false, false))) : J$._());
                        } catch (J$e) {
                            J$.Ex(6919089, J$e);
                        } finally {
                            if (J$.Fr(6919097))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6919065, 'toInteger', toInteger, false, false, false);
            isInteger = J$.N(6919081, 'isInteger', J$.T(6919073, isInteger, 12, false), true, false, false);
            var toInteger = J$.W(6918945, 'toInteger', J$.F(6918937, J$.I(typeof require === 'undefined' ? require = J$.R(6918921, 'require', undefined, true, true) : require = J$.R(6918921, 'require', require, true, true)), false)(J$.T(6918929, './toInteger', 21, false)), toInteger, false, true);
            J$.P(6919049, J$.I(typeof module === 'undefined' ? module = J$.R(6919033, 'module', undefined, true, true) : module = J$.R(6919033, 'module', module, true, true)), 'exports', J$.R(6919041, 'isInteger', isInteger, false, true));
        } catch (J$e) {
            J$.Ex(6919105, J$e);
        } finally {
            if (J$.Sr(6919113))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

