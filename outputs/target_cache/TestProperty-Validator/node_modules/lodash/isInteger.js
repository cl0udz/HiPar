J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3208345, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isInteger.js');
            function isInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3208297, arguments.callee, this, arguments);
                            arguments = J$.N(3208305, 'arguments', arguments, true, false, false);
                            value = J$.N(3208313, 'value', value, true, false, false);
                            return J$.Rt(3208289, J$.C(167704, J$.B(335634, '==', J$.U(335626, 'typeof', J$.R(3208241, 'value', value, false, false)), J$.T(3208249, 'number', 21, false))) ? J$.B(335642, '==', J$.R(3208257, 'value', value, false, false), J$.F(3208281, J$.R(3208265, 'toInteger', toInteger, false, true), false)(J$.R(3208273, 'value', value, false, false))) : J$._());
                        } catch (J$e) {
                            J$.Ex(3208377, J$e);
                        } finally {
                            if (J$.Fr(3208385))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3208353, 'toInteger', toInteger, false, false, false);
            isInteger = J$.N(3208369, 'isInteger', J$.T(3208361, isInteger, 12, false), true, false, false);
            var toInteger = J$.W(3208233, 'toInteger', J$.F(3208225, J$.I(typeof require === 'undefined' ? require = J$.R(3208209, 'require', undefined, true, true) : require = J$.R(3208209, 'require', require, true, true)), false)(J$.T(3208217, './toInteger', 21, false)), toInteger, false, true);
            J$.P(3208337, J$.I(typeof module === 'undefined' ? module = J$.R(3208321, 'module', undefined, true, true) : module = J$.R(3208321, 'module', module, true, true)), 'exports', J$.R(3208329, 'isInteger', isInteger, false, true));
        } catch (J$e) {
            J$.Ex(3208393, J$e);
        } finally {
            if (J$.Sr(3208401))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

