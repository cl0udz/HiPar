J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6651745, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_createBind.js');
            function createBind(func, bitmask, thisArg) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6651649, arguments.callee, this, arguments);
                            function wrapper() {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6651609, arguments.callee, this, arguments);
                                            arguments = J$.N(6651617, 'arguments', arguments, true, false, false);
                                            J$.N(6651625, 'fn', fn, false, false, false);
                                            var fn = J$.W(6651545, 'fn', J$.C(350080, J$.C(350072, J$.C(350064, J$.R(6651489, 'this', this, false, false)) ? J$.B(664554, '!==', J$.R(6651497, 'this', this, false, false), J$.R(6651505, 'root', root, false, true)) : J$._()) ? J$.B(664562, 'instanceof', J$.R(6651513, 'this', this, false, false), J$.R(6651521, 'wrapper', wrapper, false, false)) : J$._()) ? J$.R(6651529, 'Ctor', Ctor, false, false) : J$.R(6651537, 'func', func, false, false), fn, false, false);
                                            return J$.Rt(6651601, J$.M(6651593, J$.R(6651553, 'fn', fn, false, false), 'apply', false)(J$.C(350088, J$.R(6651561, 'isBind', isBind, false, false)) ? J$.R(6651569, 'thisArg', thisArg, false, false) : J$.R(6651577, 'this', this, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(6651585, 'arguments', undefined, true, true) : arguments = J$.R(6651585, 'arguments', arguments, true, true))));
                                        } catch (J$e) {
                                            J$.Ex(6651793, J$e);
                                        } finally {
                                            if (J$.Fr(6651801))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(6651657, 'arguments', arguments, true, false, false);
                            func = J$.N(6651665, 'func', func, true, false, false);
                            bitmask = J$.N(6651673, 'bitmask', bitmask, true, false, false);
                            thisArg = J$.N(6651681, 'thisArg', thisArg, true, false, false);
                            J$.N(6651689, 'isBind', isBind, false, false, false);
                            J$.N(6651697, 'Ctor', Ctor, false, false, false);
                            wrapper = J$.N(6651713, 'wrapper', J$.T(6651705, wrapper, 12, false), true, false, false);
                            var isBind = J$.W(6651473, 'isBind', J$.B(664546, '&', J$.R(6651433, 'bitmask', bitmask, false, false), J$.R(6651441, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, true)), isBind, false, false), Ctor = J$.W(6651481, 'Ctor', J$.F(6651465, J$.R(6651449, 'createCtor', createCtor, false, true), false)(J$.R(6651457, 'func', func, false, false)), Ctor, false, false);
                            return J$.Rt(6651641, J$.R(6651633, 'wrapper', wrapper, false, false));
                        } catch (J$e) {
                            J$.Ex(6651809, J$e);
                        } finally {
                            if (J$.Fr(6651817))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6651753, 'createCtor', createCtor, false, false, false);
            J$.N(6651761, 'root', root, false, false, false);
            J$.N(6651769, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, false, false);
            createBind = J$.N(6651785, 'createBind', J$.T(6651777, createBind, 12, false), true, false, false);
            var createCtor = J$.W(6651401, 'createCtor', J$.F(6651369, J$.I(typeof require === 'undefined' ? require = J$.R(6651353, 'require', undefined, true, true) : require = J$.R(6651353, 'require', require, true, true)), false)(J$.T(6651361, './_createCtor', 21, false)), createCtor, false, true), root = J$.W(6651409, 'root', J$.F(6651393, J$.I(typeof require === 'undefined' ? require = J$.R(6651377, 'require', undefined, true, true) : require = J$.R(6651377, 'require', require, true, true)), false)(J$.T(6651385, './_root', 21, false)), root, false, true);
            var WRAP_BIND_FLAG = J$.W(6651425, 'WRAP_BIND_FLAG', J$.T(6651417, 1, 22, false), WRAP_BIND_FLAG, false, true);
            J$.P(6651737, J$.I(typeof module === 'undefined' ? module = J$.R(6651721, 'module', undefined, true, true) : module = J$.R(6651721, 'module', module, true, true)), 'exports', J$.R(6651729, 'createBind', createBind, false, true));
        } catch (J$e) {
            J$.Ex(6651825, J$e);
        } finally {
            if (J$.Sr(6651833))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

