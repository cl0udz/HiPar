J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6812993, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/forEach.js');
            function forEach(collection, iteratee) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6812929, arguments.callee, this, arguments);
                            arguments = J$.N(6812937, 'arguments', arguments, true, false, false);
                            collection = J$.N(6812945, 'collection', collection, true, false, false);
                            iteratee = J$.N(6812953, 'iteratee', iteratee, true, false, false);
                            J$.N(6812961, 'func', func, false, false, false);
                            var func = J$.W(6812865, 'func', J$.C(359616, J$.F(6812841, J$.R(6812825, 'isArray', isArray, false, true), false)(J$.R(6812833, 'collection', collection, false, false))) ? J$.R(6812849, 'arrayEach', arrayEach, false, true) : J$.R(6812857, 'baseEach', baseEach, false, true), func, false, false);
                            return J$.Rt(6812921, J$.F(6812913, J$.R(6812873, 'func', func, false, false), false)(J$.R(6812881, 'collection', collection, false, false), J$.F(6812905, J$.R(6812889, 'castFunction', castFunction, false, true), false)(J$.R(6812897, 'iteratee', iteratee, false, false))));
                        } catch (J$e) {
                            J$.Ex(6813049, J$e);
                        } finally {
                            if (J$.Fr(6813057))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6813001, 'arrayEach', arrayEach, false, false, false);
            J$.N(6813009, 'baseEach', baseEach, false, false, false);
            J$.N(6813017, 'castFunction', castFunction, false, false, false);
            J$.N(6813025, 'isArray', isArray, false, false, false);
            forEach = J$.N(6813041, 'forEach', J$.T(6813033, forEach, 12, false), true, false, false);
            var arrayEach = J$.W(6812793, 'arrayEach', J$.F(6812713, J$.I(typeof require === 'undefined' ? require = J$.R(6812697, 'require', undefined, true, true) : require = J$.R(6812697, 'require', require, true, true)), false)(J$.T(6812705, './_arrayEach', 21, false)), arrayEach, false, true), baseEach = J$.W(6812801, 'baseEach', J$.F(6812737, J$.I(typeof require === 'undefined' ? require = J$.R(6812721, 'require', undefined, true, true) : require = J$.R(6812721, 'require', require, true, true)), false)(J$.T(6812729, './_baseEach', 21, false)), baseEach, false, true), castFunction = J$.W(6812809, 'castFunction', J$.F(6812761, J$.I(typeof require === 'undefined' ? require = J$.R(6812745, 'require', undefined, true, true) : require = J$.R(6812745, 'require', require, true, true)), false)(J$.T(6812753, './_castFunction', 21, false)), castFunction, false, true), isArray = J$.W(6812817, 'isArray', J$.F(6812785, J$.I(typeof require === 'undefined' ? require = J$.R(6812769, 'require', undefined, true, true) : require = J$.R(6812769, 'require', require, true, true)), false)(J$.T(6812777, './isArray', 21, false)), isArray, false, true);
            J$.P(6812985, J$.I(typeof module === 'undefined' ? module = J$.R(6812969, 'module', undefined, true, true) : module = J$.R(6812969, 'module', module, true, true)), 'exports', J$.R(6812977, 'forEach', forEach, false, true));
        } catch (J$e) {
            J$.Ex(6813065, J$e);
        } finally {
            if (J$.Sr(6813073))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

