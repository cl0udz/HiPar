J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1988801, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseSetData.js');
            J$.N(1988809, 'identity', identity, false, false, false);
            J$.N(1988817, 'metaMap', metaMap, false, false, false);
            J$.N(1988825, 'baseSetData', baseSetData, false, false, false);
            var identity = J$.W(1988649, 'identity', J$.F(1988617, J$.I(typeof require === 'undefined' ? require = J$.R(1988601, 'require', undefined, true, true) : require = J$.R(1988601, 'require', require, true, true)), false)(J$.T(1988609, './identity', 21, false)), identity, false, true), metaMap = J$.W(1988657, 'metaMap', J$.F(1988641, J$.I(typeof require === 'undefined' ? require = J$.R(1988625, 'require', undefined, true, true) : require = J$.R(1988625, 'require', require, true, true)), false)(J$.T(1988633, './_metaMap', 21, false)), metaMap, false, true);
            var baseSetData = J$.W(1988769, 'baseSetData', J$.C(97992, J$.U(145818, '!', J$.R(1988665, 'metaMap', metaMap, false, true))) ? J$.R(1988673, 'identity', identity, false, true) : J$.T(1988761, function (func, data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1988729, arguments.callee, this, arguments);
                            arguments = J$.N(1988737, 'arguments', arguments, true, false, false);
                            func = J$.N(1988745, 'func', func, true, false, false);
                            data = J$.N(1988753, 'data', data, true, false, false);
                            J$.M(1988705, J$.R(1988681, 'metaMap', metaMap, false, true), 'set', false)(J$.R(1988689, 'func', func, false, false), J$.R(1988697, 'data', data, false, false));
                            return J$.Rt(1988721, J$.R(1988713, 'func', func, false, false));
                        } catch (J$e) {
                            J$.Ex(1988833, J$e);
                        } finally {
                            if (J$.Fr(1988841))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), baseSetData, false, true);
            J$.P(1988793, J$.I(typeof module === 'undefined' ? module = J$.R(1988777, 'module', undefined, true, true) : module = J$.R(1988777, 'module', module, true, true)), 'exports', J$.R(1988785, 'baseSetData', baseSetData, false, true));
        } catch (J$e) {
            J$.Ex(1988849, J$e);
        } finally {
            if (J$.Sr(1988857))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

