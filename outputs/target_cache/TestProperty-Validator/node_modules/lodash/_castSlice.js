J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6641665, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_castSlice.js');
            function castSlice(array, start, end) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6641593, arguments.callee, this, arguments);
                            arguments = J$.N(6641601, 'arguments', arguments, true, false, false);
                            array = J$.N(6641609, 'array', array, true, false, false);
                            start = J$.N(6641617, 'start', start, true, false, false);
                            end = J$.N(6641625, 'end', end, true, false, false);
                            J$.N(6641633, 'length', length, false, false, false);
                            var length = J$.W(6641465, 'length', J$.G(6641457, J$.R(6641449, 'array', array, false, false), 'length'), length, false, false);
                            end = J$.W(6641505, 'end', J$.C(349280, J$.B(663402, '===', J$.R(6641473, 'end', end, false, false), J$.T(6641481, undefined, 24, false))) ? J$.R(6641489, 'length', length, false, false) : J$.R(6641497, 'end', end, false, false), end, false, false);
                            return J$.Rt(6641585, J$.C(349296, J$.C(349288, J$.U(663410, '!', J$.R(6641513, 'start', start, false, false))) ? J$.B(663418, '>=', J$.R(6641521, 'end', end, false, false), J$.R(6641529, 'length', length, false, false)) : J$._()) ? J$.R(6641537, 'array', array, false, false) : J$.F(6641577, J$.R(6641545, 'baseSlice', baseSlice, false, true), false)(J$.R(6641553, 'array', array, false, false), J$.R(6641561, 'start', start, false, false), J$.R(6641569, 'end', end, false, false)));
                        } catch (J$e) {
                            J$.Ex(6641697, J$e);
                        } finally {
                            if (J$.Fr(6641705))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6641673, 'baseSlice', baseSlice, false, false, false);
            castSlice = J$.N(6641689, 'castSlice', J$.T(6641681, castSlice, 12, false), true, false, false);
            var baseSlice = J$.W(6641441, 'baseSlice', J$.F(6641433, J$.I(typeof require === 'undefined' ? require = J$.R(6641417, 'require', undefined, true, true) : require = J$.R(6641417, 'require', require, true, true)), false)(J$.T(6641425, './_baseSlice', 21, false)), baseSlice, false, true);
            J$.P(6641657, J$.I(typeof module === 'undefined' ? module = J$.R(6641641, 'module', undefined, true, true) : module = J$.R(6641641, 'module', module, true, true)), 'exports', J$.R(6641649, 'castSlice', castSlice, false, true));
        } catch (J$e) {
            J$.Ex(6641713, J$e);
        } finally {
            if (J$.Sr(6641721))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

