J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2046345, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_initCloneArray.js');
            function initCloneArray(array) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2046281, arguments.callee, this, arguments);
                            arguments = J$.N(2046289, 'arguments', arguments, true, false, false);
                            array = J$.N(2046297, 'array', array, true, false, false);
                            J$.N(2046305, 'length', length, false, false, false);
                            J$.N(2046313, 'result', result, false, false, false);
                            var length = J$.W(2046113, 'length', J$.G(2046081, J$.R(2046073, 'array', array, false, false), 'length'), length, false, false), result = J$.W(2046121, 'result', J$.M(2046105, J$.R(2046089, 'array', array, false, false), 'constructor', true)(J$.R(2046097, 'length', length, false, false)), result, false, false);
                            if (J$.C(101688, J$.C(101680, J$.C(101672, J$.R(2046129, 'length', length, false, false)) ? J$.B(150202, '==', J$.U(150194, 'typeof', J$.G(2046153, J$.R(2046137, 'array', array, false, false), J$.T(2046145, 0, 22, false))), J$.T(2046161, 'string', 21, false)) : J$._()) ? J$.M(2046193, J$.R(2046169, 'hasOwnProperty', hasOwnProperty, false, true), 'call', false)(J$.R(2046177, 'array', array, false, false), J$.T(2046185, 'index', 21, false)) : J$._())) {
                                J$.P(2046225, J$.R(2046201, 'result', result, false, false), 'index', J$.G(2046217, J$.R(2046209, 'array', array, false, false), 'index'));
                                J$.P(2046257, J$.R(2046233, 'result', result, false, false), 'input', J$.G(2046249, J$.R(2046241, 'array', array, false, false), 'input'));
                            }
                            return J$.Rt(2046273, J$.R(2046265, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(2046385, J$e);
                        } finally {
                            if (J$.Fr(2046393))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2046353, 'objectProto', objectProto, false, false, false);
            J$.N(2046361, 'hasOwnProperty', hasOwnProperty, false, false, false);
            initCloneArray = J$.N(2046377, 'initCloneArray', J$.T(2046369, initCloneArray, 12, false), true, false, false);
            var objectProto = J$.W(2046041, 'objectProto', J$.G(2046033, J$.I(typeof Object === 'undefined' ? Object = J$.R(2046025, 'Object', undefined, true, true) : Object = J$.R(2046025, 'Object', Object, true, true)), 'prototype'), objectProto, false, true);
            var hasOwnProperty = J$.W(2046065, 'hasOwnProperty', J$.G(2046057, J$.R(2046049, 'objectProto', objectProto, false, true), 'hasOwnProperty'), hasOwnProperty, false, true);
            J$.P(2046337, J$.I(typeof module === 'undefined' ? module = J$.R(2046321, 'module', undefined, true, true) : module = J$.R(2046321, 'module', module, true, true)), 'exports', J$.R(2046329, 'initCloneArray', initCloneArray, false, true));
        } catch (J$e) {
            J$.Ex(2046401, J$e);
        } finally {
            if (J$.Sr(2046409))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

