J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2976713, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_initCloneArray.js');
            function initCloneArray(array) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2976649, arguments.callee, this, arguments);
                            arguments = J$.N(2976657, 'arguments', arguments, true, false, false);
                            array = J$.N(2976665, 'array', array, true, false, false);
                            J$.N(2976673, 'length', length, false, false, false);
                            J$.N(2976681, 'result', result, false, false, false);
                            var length = J$.W(2976481, 'length', J$.G(2976449, J$.R(2976441, 'array', array, false, false), 'length'), length, false, false), result = J$.W(2976489, 'result', J$.M(2976473, J$.R(2976457, 'array', array, false, false), 'constructor', true)(J$.R(2976465, 'length', length, false, false)), result, false, false);
                            if (J$.C(158808, J$.C(158800, J$.C(158792, J$.R(2976497, 'length', length, false, false)) ? J$.B(323978, '==', J$.U(323970, 'typeof', J$.G(2976521, J$.R(2976505, 'array', array, false, false), J$.T(2976513, 0, 22, false))), J$.T(2976529, 'string', 21, false)) : J$._()) ? J$.M(2976561, J$.R(2976537, 'hasOwnProperty', hasOwnProperty, false, true), 'call', false)(J$.R(2976545, 'array', array, false, false), J$.T(2976553, 'index', 21, false)) : J$._())) {
                                J$.P(2976593, J$.R(2976569, 'result', result, false, false), 'index', J$.G(2976585, J$.R(2976577, 'array', array, false, false), 'index'));
                                J$.P(2976625, J$.R(2976601, 'result', result, false, false), 'input', J$.G(2976617, J$.R(2976609, 'array', array, false, false), 'input'));
                            }
                            return J$.Rt(2976641, J$.R(2976633, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(2976753, J$e);
                        } finally {
                            if (J$.Fr(2976761))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2976721, 'objectProto', objectProto, false, false, false);
            J$.N(2976729, 'hasOwnProperty', hasOwnProperty, false, false, false);
            initCloneArray = J$.N(2976745, 'initCloneArray', J$.T(2976737, initCloneArray, 12, false), true, false, false);
            var objectProto = J$.W(2976409, 'objectProto', J$.G(2976401, J$.I(typeof Object === 'undefined' ? Object = J$.R(2976393, 'Object', undefined, true, true) : Object = J$.R(2976393, 'Object', Object, true, true)), 'prototype'), objectProto, false, true);
            var hasOwnProperty = J$.W(2976433, 'hasOwnProperty', J$.G(2976425, J$.R(2976417, 'objectProto', objectProto, false, true), 'hasOwnProperty'), hasOwnProperty, false, true);
            J$.P(2976705, J$.I(typeof module === 'undefined' ? module = J$.R(2976689, 'module', undefined, true, true) : module = J$.R(2976689, 'module', module, true, true)), 'exports', J$.R(2976697, 'initCloneArray', initCloneArray, false, true));
        } catch (J$e) {
            J$.Ex(2976769, J$e);
        } finally {
            if (J$.Sr(2976777))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

