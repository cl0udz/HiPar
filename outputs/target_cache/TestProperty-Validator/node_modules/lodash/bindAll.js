J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6723337, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/bindAll.js');
            J$.N(6723345, 'arrayEach', arrayEach, false, false, false);
            J$.N(6723353, 'baseAssignValue', baseAssignValue, false, false, false);
            J$.N(6723361, 'bind', bind, false, false, false);
            J$.N(6723369, 'flatRest', flatRest, false, false, false);
            J$.N(6723377, 'toKey', toKey, false, false, false);
            J$.N(6723385, 'bindAll', bindAll, false, false, false);
            var arrayEach = J$.W(6723025, 'arrayEach', J$.F(6722921, J$.I(typeof require === 'undefined' ? require = J$.R(6722905, 'require', undefined, true, true) : require = J$.R(6722905, 'require', require, true, true)), false)(J$.T(6722913, './_arrayEach', 21, false)), arrayEach, false, true), baseAssignValue = J$.W(6723033, 'baseAssignValue', J$.F(6722945, J$.I(typeof require === 'undefined' ? require = J$.R(6722929, 'require', undefined, true, true) : require = J$.R(6722929, 'require', require, true, true)), false)(J$.T(6722937, './_baseAssignValue', 21, false)), baseAssignValue, false, true), bind = J$.W(6723041, 'bind', J$.F(6722969, J$.I(typeof require === 'undefined' ? require = J$.R(6722953, 'require', undefined, true, true) : require = J$.R(6722953, 'require', require, true, true)), false)(J$.T(6722961, './bind', 21, false)), bind, false, true), flatRest = J$.W(6723049, 'flatRest', J$.F(6722993, J$.I(typeof require === 'undefined' ? require = J$.R(6722977, 'require', undefined, true, true) : require = J$.R(6722977, 'require', require, true, true)), false)(J$.T(6722985, './_flatRest', 21, false)), flatRest, false, true), toKey = J$.W(6723057, 'toKey', J$.F(6723017, J$.I(typeof require === 'undefined' ? require = J$.R(6723001, 'require', undefined, true, true) : require = J$.R(6723001, 'require', require, true, true)), false)(J$.T(6723009, './_toKey', 21, false)), toKey, false, true);
            var bindAll = J$.W(6723305, 'bindAll', J$.F(6723297, J$.R(6723065, 'flatRest', flatRest, false, true), false)(J$.T(6723289, function (object, methodNames) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6723257, arguments.callee, this, arguments);
                            arguments = J$.N(6723265, 'arguments', arguments, true, false, false);
                            object = J$.N(6723273, 'object', object, true, false, false);
                            methodNames = J$.N(6723281, 'methodNames', methodNames, true, false, false);
                            J$.F(6723233, J$.R(6723073, 'arrayEach', arrayEach, false, true), false)(J$.R(6723081, 'methodNames', methodNames, false, false), J$.T(6723225, function (key) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6723201, arguments.callee, this, arguments);
                                            arguments = J$.N(6723209, 'arguments', arguments, true, false, false);
                                            key = J$.N(6723217, 'key', key, true, false, false);
                                            key = J$.W(6723113, 'key', J$.F(6723105, J$.R(6723089, 'toKey', toKey, false, true), false)(J$.R(6723097, 'key', key, false, false)), key, false, false);
                                            J$.F(6723193, J$.R(6723121, 'baseAssignValue', baseAssignValue, false, true), false)(J$.R(6723129, 'object', object, false, false), J$.R(6723137, 'key', key, false, false), J$.F(6723185, J$.R(6723145, 'bind', bind, false, true), false)(J$.G(6723169, J$.R(6723153, 'object', object, false, false), J$.R(6723161, 'key', key, false, false)), J$.R(6723177, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(6723393, J$e);
                                        } finally {
                                            if (J$.Fr(6723401))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(6723249, J$.R(6723241, 'object', object, false, false));
                        } catch (J$e) {
                            J$.Ex(6723409, J$e);
                        } finally {
                            if (J$.Fr(6723417))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), bindAll, false, true);
            J$.P(6723329, J$.I(typeof module === 'undefined' ? module = J$.R(6723313, 'module', undefined, true, true) : module = J$.R(6723313, 'module', module, true, true)), 'exports', J$.R(6723321, 'bindAll', bindAll, false, true));
        } catch (J$e) {
            J$.Ex(6723425, J$e);
        } finally {
            if (J$.Sr(6723433))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

