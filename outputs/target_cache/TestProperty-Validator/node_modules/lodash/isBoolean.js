J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6915209, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isBoolean.js');
            function isBoolean(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6915161, arguments.callee, this, arguments);
                            arguments = J$.N(6915169, 'arguments', arguments, true, false, false);
                            value = J$.N(6915177, 'value', value, true, false, false);
                            return J$.Rt(6915153, J$.C(360776, J$.C(360760, J$.B(678050, '===', J$.R(6915065, 'value', value, false, false), J$.T(6915073, true, 23, false))) ? J$._() : J$.B(678058, '===', J$.R(6915081, 'value', value, false, false), J$.T(6915089, false, 23, false))) ? J$._() : J$.C(360768, J$.F(6915113, J$.R(6915097, 'isObjectLike', isObjectLike, false, true), false)(J$.R(6915105, 'value', value, false, false))) ? J$.B(678066, '==', J$.F(6915137, J$.R(6915121, 'baseGetTag', baseGetTag, false, true), false)(J$.R(6915129, 'value', value, false, false)), J$.R(6915145, 'boolTag', boolTag, false, true)) : J$._());
                        } catch (J$e) {
                            J$.Ex(6915257, J$e);
                        } finally {
                            if (J$.Fr(6915265))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6915217, 'baseGetTag', baseGetTag, false, false, false);
            J$.N(6915225, 'isObjectLike', isObjectLike, false, false, false);
            J$.N(6915233, 'boolTag', boolTag, false, false, false);
            isBoolean = J$.N(6915249, 'isBoolean', J$.T(6915241, isBoolean, 12, false), true, false, false);
            var baseGetTag = J$.W(6915033, 'baseGetTag', J$.F(6915001, J$.I(typeof require === 'undefined' ? require = J$.R(6914985, 'require', undefined, true, true) : require = J$.R(6914985, 'require', require, true, true)), false)(J$.T(6914993, './_baseGetTag', 21, false)), baseGetTag, false, true), isObjectLike = J$.W(6915041, 'isObjectLike', J$.F(6915025, J$.I(typeof require === 'undefined' ? require = J$.R(6915009, 'require', undefined, true, true) : require = J$.R(6915009, 'require', require, true, true)), false)(J$.T(6915017, './isObjectLike', 21, false)), isObjectLike, false, true);
            var boolTag = J$.W(6915057, 'boolTag', J$.T(6915049, '[object Boolean]', 21, false), boolTag, false, true);
            J$.P(6915201, J$.I(typeof module === 'undefined' ? module = J$.R(6915185, 'module', undefined, true, true) : module = J$.R(6915185, 'module', module, true, true)), 'exports', J$.R(6915193, 'isBoolean', isBoolean, false, true));
        } catch (J$e) {
            J$.Ex(6915273, J$e);
        } finally {
            if (J$.Sr(6915281))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

