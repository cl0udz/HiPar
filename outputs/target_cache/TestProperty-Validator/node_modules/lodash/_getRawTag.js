J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6680801, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_getRawTag.js');
            function getRawTag(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6680721, arguments.callee, this, arguments);
                            arguments = J$.N(6680729, 'arguments', arguments, true, false, false);
                            value = J$.N(6680737, 'value', value, true, false, false);
                            J$.N(6680745, 'isOwn', isOwn, false, false, false);
                            J$.N(6680753, 'tag', tag, false, false, false);
                            J$.N(6680761, 'unmasked', unmasked, false, false, false);
                            J$.N(6680769, 'result', result, false, false, false);
                            var isOwn = J$.W(6680537, 'isOwn', J$.M(6680505, J$.R(6680481, 'hasOwnProperty', hasOwnProperty, false, true), 'call', false)(J$.R(6680489, 'value', value, false, false), J$.R(6680497, 'symToStringTag', symToStringTag, false, true)), isOwn, false, false), tag = J$.W(6680545, 'tag', J$.G(6680529, J$.R(6680513, 'value', value, false, false), J$.R(6680521, 'symToStringTag', symToStringTag, false, true)), tag, false, false);
                            try {
                                J$.P(6680577, J$.R(6680553, 'value', value, false, false), J$.R(6680561, 'symToStringTag', symToStringTag, false, true), J$.T(6680569, undefined, 24, false));
                                var unmasked = J$.W(6680593, 'unmasked', J$.T(6680585, true, 23, false), unmasked, false, false);
                            } catch (e) {
                                J$.N(6680601, 'e', e, false, false, true);
                            }
                            var result = J$.W(6680633, 'result', J$.M(6680625, J$.R(6680609, 'nativeObjectToString', nativeObjectToString, false, true), 'call', false)(J$.R(6680617, 'value', value, false, false)), result, false, false);
                            if (J$.C(351776, J$.R(6680641, 'unmasked', unmasked, false, false))) {
                                if (J$.C(351768, J$.R(6680649, 'isOwn', isOwn, false, false))) {
                                    J$.P(6680681, J$.R(6680657, 'value', value, false, false), J$.R(6680665, 'symToStringTag', symToStringTag, false, true), J$.R(6680673, 'tag', tag, false, false));
                                } else {
                                    J$.B(666394, 'delete', J$.R(6680689, 'value', value, false, false), J$.R(6680697, 'symToStringTag', symToStringTag, false, true));
                                }
                            }
                            return J$.Rt(6680713, J$.R(6680705, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6680865, J$e);
                        } finally {
                            if (J$.Fr(6680873))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6680809, 'Symbol', Symbol, false, false, false);
            J$.N(6680817, 'objectProto', objectProto, false, false, false);
            J$.N(6680825, 'hasOwnProperty', hasOwnProperty, false, false, false);
            J$.N(6680833, 'nativeObjectToString', nativeObjectToString, false, false, false);
            J$.N(6680841, 'symToStringTag', symToStringTag, false, false, false);
            getRawTag = J$.N(6680857, 'getRawTag', J$.T(6680849, getRawTag, 12, false), true, false, false);
            var Symbol = J$.W(6680361, 'Symbol', J$.F(6680353, J$.I(typeof require === 'undefined' ? require = J$.R(6680337, 'require', undefined, true, true) : require = J$.R(6680337, 'require', require, true, true)), false)(J$.T(6680345, './_Symbol', 21, false)), Symbol, false, true);
            var objectProto = J$.W(6680385, 'objectProto', J$.G(6680377, J$.I(typeof Object === 'undefined' ? Object = J$.R(6680369, 'Object', undefined, true, true) : Object = J$.R(6680369, 'Object', Object, true, true)), 'prototype'), objectProto, false, true);
            var hasOwnProperty = J$.W(6680409, 'hasOwnProperty', J$.G(6680401, J$.R(6680393, 'objectProto', objectProto, false, true), 'hasOwnProperty'), hasOwnProperty, false, true);
            var nativeObjectToString = J$.W(6680433, 'nativeObjectToString', J$.G(6680425, J$.R(6680417, 'objectProto', objectProto, false, true), 'toString'), nativeObjectToString, false, true);
            var symToStringTag = J$.W(6680473, 'symToStringTag', J$.C(351760, J$.R(6680441, 'Symbol', Symbol, false, true)) ? J$.G(6680457, J$.R(6680449, 'Symbol', Symbol, false, true), 'toStringTag') : J$.T(6680465, undefined, 24, false), symToStringTag, false, true);
            J$.P(6680793, J$.I(typeof module === 'undefined' ? module = J$.R(6680777, 'module', undefined, true, true) : module = J$.R(6680777, 'module', module, true, true)), 'exports', J$.R(6680785, 'getRawTag', getRawTag, false, true));
        } catch (J$e) {
            J$.Ex(6680881, J$e);
        } finally {
            if (J$.Sr(6680889))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

