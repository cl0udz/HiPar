J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6589689, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_assignValue.js');
            function assignValue(object, key, value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6589617, arguments.callee, this, arguments);
                            arguments = J$.N(6589625, 'arguments', arguments, true, false, false);
                            object = J$.N(6589633, 'object', object, true, false, false);
                            key = J$.N(6589641, 'key', key, true, false, false);
                            value = J$.N(6589649, 'value', value, true, false, false);
                            J$.N(6589657, 'objValue', objValue, false, false, false);
                            var objValue = J$.W(6589473, 'objValue', J$.G(6589465, J$.R(6589449, 'object', object, false, false), J$.R(6589457, 'key', key, false, false)), objValue, false, false);
                            if (J$.C(346408, J$.C(346400, J$.U(660170, '!', J$.C(346384, J$.M(6589505, J$.R(6589481, 'hasOwnProperty', hasOwnProperty, false, true), 'call', false)(J$.R(6589489, 'object', object, false, false), J$.R(6589497, 'key', key, false, false))) ? J$.F(6589537, J$.R(6589513, 'eq', eq, false, true), false)(J$.R(6589521, 'objValue', objValue, false, false), J$.R(6589529, 'value', value, false, false)) : J$._())) ? J$._() : J$.C(346392, J$.B(660178, '===', J$.R(6589545, 'value', value, false, false), J$.T(6589553, undefined, 24, false))) ? J$.U(660194, '!', J$.B(660186, 'in', J$.R(6589561, 'key', key, false, false), J$.R(6589569, 'object', object, false, false))) : J$._())) {
                                J$.F(6589609, J$.R(6589577, 'baseAssignValue', baseAssignValue, false, true), false)(J$.R(6589585, 'object', object, false, false), J$.R(6589593, 'key', key, false, false), J$.R(6589601, 'value', value, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(6589745, J$e);
                        } finally {
                            if (J$.Fr(6589753))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6589697, 'baseAssignValue', baseAssignValue, false, false, false);
            J$.N(6589705, 'eq', eq, false, false, false);
            J$.N(6589713, 'objectProto', objectProto, false, false, false);
            J$.N(6589721, 'hasOwnProperty', hasOwnProperty, false, false, false);
            assignValue = J$.N(6589737, 'assignValue', J$.T(6589729, assignValue, 12, false), true, false, false);
            var baseAssignValue = J$.W(6589385, 'baseAssignValue', J$.F(6589353, J$.I(typeof require === 'undefined' ? require = J$.R(6589337, 'require', undefined, true, true) : require = J$.R(6589337, 'require', require, true, true)), false)(J$.T(6589345, './_baseAssignValue', 21, false)), baseAssignValue, false, true), eq = J$.W(6589393, 'eq', J$.F(6589377, J$.I(typeof require === 'undefined' ? require = J$.R(6589361, 'require', undefined, true, true) : require = J$.R(6589361, 'require', require, true, true)), false)(J$.T(6589369, './eq', 21, false)), eq, false, true);
            var objectProto = J$.W(6589417, 'objectProto', J$.G(6589409, J$.I(typeof Object === 'undefined' ? Object = J$.R(6589401, 'Object', undefined, true, true) : Object = J$.R(6589401, 'Object', Object, true, true)), 'prototype'), objectProto, false, true);
            var hasOwnProperty = J$.W(6589441, 'hasOwnProperty', J$.G(6589433, J$.R(6589425, 'objectProto', objectProto, false, true), 'hasOwnProperty'), hasOwnProperty, false, true);
            J$.P(6589681, J$.I(typeof module === 'undefined' ? module = J$.R(6589665, 'module', undefined, true, true) : module = J$.R(6589665, 'module', module, true, true)), 'exports', J$.R(6589673, 'assignValue', assignValue, false, true));
        } catch (J$e) {
            J$.Ex(6589761, J$e);
        } finally {
            if (J$.Sr(6589769))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

