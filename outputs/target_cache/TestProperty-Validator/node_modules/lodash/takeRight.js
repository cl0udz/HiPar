J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7316753, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/takeRight.js');
            function takeRight(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7316681, arguments.callee, this, arguments);
                            arguments = J$.N(7316689, 'arguments', arguments, true, false, false);
                            array = J$.N(7316697, 'array', array, true, false, false);
                            n = J$.N(7316705, 'n', n, true, false, false);
                            guard = J$.N(7316713, 'guard', guard, true, false, false);
                            J$.N(7316721, 'length', length, false, false, false);
                            var length = J$.W(7316489, 'length', J$.C(389176, J$.B(708634, '==', J$.R(7316449, 'array', array, false, false), J$.T(7316457, null, 25, false))) ? J$.T(7316465, 0, 22, false) : J$.G(7316481, J$.R(7316473, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(389184, J$.U(708642, '!', J$.R(7316497, 'length', length, false, false)))) {
                                return J$.Rt(7316513, J$.T(7316505, [], 10, false));
                            }
                            n = J$.W(7316577, 'n', J$.C(389200, J$.C(389192, J$.R(7316521, 'guard', guard, false, false)) ? J$._() : J$.B(708650, '===', J$.R(7316529, 'n', n, false, false), J$.T(7316537, undefined, 24, false))) ? J$.T(7316545, 1, 22, false) : J$.F(7316569, J$.R(7316553, 'toInteger', toInteger, false, true), false)(J$.R(7316561, 'n', n, false, false)), n, false, false);
                            n = J$.W(7316601, 'n', J$.B(708658, '-', J$.R(7316585, 'length', length, false, false), J$.R(7316593, 'n', n, false, false)), n, false, false);
                            return J$.Rt(7316673, J$.F(7316665, J$.R(7316609, 'baseSlice', baseSlice, false, true), false)(J$.R(7316617, 'array', array, false, false), J$.C(389208, J$.B(708666, '<', J$.R(7316625, 'n', n, false, false), J$.T(7316633, 0, 22, false))) ? J$.T(7316641, 0, 22, false) : J$.R(7316649, 'n', n, false, false), J$.R(7316657, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(7316793, J$e);
                        } finally {
                            if (J$.Fr(7316801))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7316761, 'baseSlice', baseSlice, false, false, false);
            J$.N(7316769, 'toInteger', toInteger, false, false, false);
            takeRight = J$.N(7316785, 'takeRight', J$.T(7316777, takeRight, 12, false), true, false, false);
            var baseSlice = J$.W(7316433, 'baseSlice', J$.F(7316401, J$.I(typeof require === 'undefined' ? require = J$.R(7316385, 'require', undefined, true, true) : require = J$.R(7316385, 'require', require, true, true)), false)(J$.T(7316393, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(7316441, 'toInteger', J$.F(7316425, J$.I(typeof require === 'undefined' ? require = J$.R(7316409, 'require', undefined, true, true) : require = J$.R(7316409, 'require', require, true, true)), false)(J$.T(7316417, './toInteger', 21, false)), toInteger, false, true);
            J$.P(7316745, J$.I(typeof module === 'undefined' ? module = J$.R(7316729, 'module', undefined, true, true) : module = J$.R(7316729, 'module', module, true, true)), 'exports', J$.R(7316737, 'takeRight', takeRight, false, true));
        } catch (J$e) {
            J$.Ex(7316809, J$e);
        } finally {
            if (J$.Sr(7316817))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

