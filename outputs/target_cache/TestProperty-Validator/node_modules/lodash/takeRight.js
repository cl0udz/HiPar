J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3606041, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/takeRight.js');
            function takeRight(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3605969, arguments.callee, this, arguments);
                            arguments = J$.N(3605977, 'arguments', arguments, true, false, false);
                            array = J$.N(3605985, 'array', array, true, false, false);
                            n = J$.N(3605993, 'n', n, true, false, false);
                            guard = J$.N(3606001, 'guard', guard, true, false, false);
                            J$.N(3606009, 'length', length, false, false, false);
                            var length = J$.W(3605777, 'length', J$.C(195776, J$.B(365874, '==', J$.R(3605737, 'array', array, false, false), J$.T(3605745, null, 25, false))) ? J$.T(3605753, 0, 22, false) : J$.G(3605769, J$.R(3605761, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(195784, J$.U(365882, '!', J$.R(3605785, 'length', length, false, false)))) {
                                return J$.Rt(3605801, J$.T(3605793, [], 10, false));
                            }
                            n = J$.W(3605865, 'n', J$.C(195800, J$.C(195792, J$.R(3605809, 'guard', guard, false, false)) ? J$._() : J$.B(365890, '===', J$.R(3605817, 'n', n, false, false), J$.T(3605825, undefined, 24, false))) ? J$.T(3605833, 1, 22, false) : J$.F(3605857, J$.R(3605841, 'toInteger', toInteger, false, true), false)(J$.R(3605849, 'n', n, false, false)), n, false, false);
                            n = J$.W(3605889, 'n', J$.B(365898, '-', J$.R(3605873, 'length', length, false, false), J$.R(3605881, 'n', n, false, false)), n, false, false);
                            return J$.Rt(3605961, J$.F(3605953, J$.R(3605897, 'baseSlice', baseSlice, false, true), false)(J$.R(3605905, 'array', array, false, false), J$.C(195808, J$.B(365906, '<', J$.R(3605913, 'n', n, false, false), J$.T(3605921, 0, 22, false))) ? J$.T(3605929, 0, 22, false) : J$.R(3605937, 'n', n, false, false), J$.R(3605945, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(3606081, J$e);
                        } finally {
                            if (J$.Fr(3606089))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3606049, 'baseSlice', baseSlice, false, false, false);
            J$.N(3606057, 'toInteger', toInteger, false, false, false);
            takeRight = J$.N(3606073, 'takeRight', J$.T(3606065, takeRight, 12, false), true, false, false);
            var baseSlice = J$.W(3605721, 'baseSlice', J$.F(3605689, J$.I(typeof require === 'undefined' ? require = J$.R(3605673, 'require', undefined, true, true) : require = J$.R(3605673, 'require', require, true, true)), false)(J$.T(3605681, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(3605729, 'toInteger', J$.F(3605713, J$.I(typeof require === 'undefined' ? require = J$.R(3605697, 'require', undefined, true, true) : require = J$.R(3605697, 'require', require, true, true)), false)(J$.T(3605705, './toInteger', 21, false)), toInteger, false, true);
            J$.P(3606033, J$.I(typeof module === 'undefined' ? module = J$.R(3606017, 'module', undefined, true, true) : module = J$.R(3606017, 'module', module, true, true)), 'exports', J$.R(3606025, 'takeRight', takeRight, false, true));
        } catch (J$e) {
            J$.Ex(3606097, J$e);
        } finally {
            if (J$.Sr(3606105))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

