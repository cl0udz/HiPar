J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2047425, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_initCloneByTag.js');
            function initCloneByTag(object, tag, isDeep) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2047353, arguments.callee, this, arguments);
                            arguments = J$.N(2047361, 'arguments', arguments, true, false, false);
                            object = J$.N(2047369, 'object', object, true, false, false);
                            tag = J$.N(2047377, 'tag', tag, true, false, false);
                            isDeep = J$.N(2047385, 'isDeep', isDeep, true, false, false);
                            J$.N(2047393, 'Ctor', Ctor, false, false, false);
                            var Ctor = J$.W(2046897, 'Ctor', J$.G(2046889, J$.R(2046881, 'object', object, false, false), 'constructor'), Ctor, false, false);
                            switch (J$.C1(101696, J$.R(2046905, 'tag', tag, false, false))) {
                            case J$.C2(101704, J$.R(2046945, 'arrayBufferTag', arrayBufferTag, false, true)):
                                return J$.Rt(2046937, J$.F(2046929, J$.R(2046913, 'cloneArrayBuffer', cloneArrayBuffer, false, true), false)(J$.R(2046921, 'object', object, false, false)));
                            case J$.C2(101712, J$.R(2046953, 'boolTag', boolTag, false, true)):
                            case J$.C2(101720, J$.R(2046993, 'dateTag', dateTag, false, true)):
                                return J$.Rt(2046985, J$.F(2046977, J$.R(2046961, 'Ctor', Ctor, false, false), true)(J$.U(150210, '+', J$.R(2046969, 'object', object, false, false))));
                            case J$.C2(101728, J$.R(2047041, 'dataViewTag', dataViewTag, false, true)):
                                return J$.Rt(2047033, J$.F(2047025, J$.R(2047001, 'cloneDataView', cloneDataView, false, true), false)(J$.R(2047009, 'object', object, false, false), J$.R(2047017, 'isDeep', isDeep, false, false)));
                            case J$.C2(101736, J$.R(2047049, 'float32Tag', float32Tag, false, true)):
                            case J$.C2(101744, J$.R(2047057, 'float64Tag', float64Tag, false, true)):
                            case J$.C2(101752, J$.R(2047065, 'int8Tag', int8Tag, false, true)):
                            case J$.C2(101760, J$.R(2047073, 'int16Tag', int16Tag, false, true)):
                            case J$.C2(101768, J$.R(2047081, 'int32Tag', int32Tag, false, true)):
                            case J$.C2(101776, J$.R(2047089, 'uint8Tag', uint8Tag, false, true)):
                            case J$.C2(101784, J$.R(2047097, 'uint8ClampedTag', uint8ClampedTag, false, true)):
                            case J$.C2(101792, J$.R(2047105, 'uint16Tag', uint16Tag, false, true)):
                            case J$.C2(101800, J$.R(2047153, 'uint32Tag', uint32Tag, false, true)):
                                return J$.Rt(2047145, J$.F(2047137, J$.R(2047113, 'cloneTypedArray', cloneTypedArray, false, true), false)(J$.R(2047121, 'object', object, false, false), J$.R(2047129, 'isDeep', isDeep, false, false)));
                            case J$.C2(101808, J$.R(2047185, 'mapTag', mapTag, false, true)):
                                return J$.Rt(2047177, J$.F(2047169, J$.R(2047161, 'Ctor', Ctor, false, false), true)());
                            case J$.C2(101816, J$.R(2047193, 'numberTag', numberTag, false, true)):
                            case J$.C2(101824, J$.R(2047233, 'stringTag', stringTag, false, true)):
                                return J$.Rt(2047225, J$.F(2047217, J$.R(2047201, 'Ctor', Ctor, false, false), true)(J$.R(2047209, 'object', object, false, false)));
                            case J$.C2(101832, J$.R(2047273, 'regexpTag', regexpTag, false, true)):
                                return J$.Rt(2047265, J$.F(2047257, J$.R(2047241, 'cloneRegExp', cloneRegExp, false, true), false)(J$.R(2047249, 'object', object, false, false)));
                            case J$.C2(101840, J$.R(2047305, 'setTag', setTag, false, true)):
                                return J$.Rt(2047297, J$.F(2047289, J$.R(2047281, 'Ctor', Ctor, false, false), true)());
                            case J$.C2(101848, J$.R(2047345, 'symbolTag', symbolTag, false, true)):
                                return J$.Rt(2047337, J$.F(2047329, J$.R(2047313, 'cloneSymbol', cloneSymbol, false, true), false)(J$.R(2047321, 'object', object, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(2047641, J$e);
                        } finally {
                            if (J$.Fr(2047649))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2047433, 'cloneArrayBuffer', cloneArrayBuffer, false, false, false);
            J$.N(2047441, 'cloneDataView', cloneDataView, false, false, false);
            J$.N(2047449, 'cloneRegExp', cloneRegExp, false, false, false);
            J$.N(2047457, 'cloneSymbol', cloneSymbol, false, false, false);
            J$.N(2047465, 'cloneTypedArray', cloneTypedArray, false, false, false);
            J$.N(2047473, 'boolTag', boolTag, false, false, false);
            J$.N(2047481, 'dateTag', dateTag, false, false, false);
            J$.N(2047489, 'mapTag', mapTag, false, false, false);
            J$.N(2047497, 'numberTag', numberTag, false, false, false);
            J$.N(2047505, 'regexpTag', regexpTag, false, false, false);
            J$.N(2047513, 'setTag', setTag, false, false, false);
            J$.N(2047521, 'stringTag', stringTag, false, false, false);
            J$.N(2047529, 'symbolTag', symbolTag, false, false, false);
            J$.N(2047537, 'arrayBufferTag', arrayBufferTag, false, false, false);
            J$.N(2047545, 'dataViewTag', dataViewTag, false, false, false);
            J$.N(2047553, 'float32Tag', float32Tag, false, false, false);
            J$.N(2047561, 'float64Tag', float64Tag, false, false, false);
            J$.N(2047569, 'int8Tag', int8Tag, false, false, false);
            J$.N(2047577, 'int16Tag', int16Tag, false, false, false);
            J$.N(2047585, 'int32Tag', int32Tag, false, false, false);
            J$.N(2047593, 'uint8Tag', uint8Tag, false, false, false);
            J$.N(2047601, 'uint8ClampedTag', uint8ClampedTag, false, false, false);
            J$.N(2047609, 'uint16Tag', uint16Tag, false, false, false);
            J$.N(2047617, 'uint32Tag', uint32Tag, false, false, false);
            initCloneByTag = J$.N(2047633, 'initCloneByTag', J$.T(2047625, initCloneByTag, 12, false), true, false, false);
            var cloneArrayBuffer = J$.W(2046537, 'cloneArrayBuffer', J$.F(2046433, J$.I(typeof require === 'undefined' ? require = J$.R(2046417, 'require', undefined, true, true) : require = J$.R(2046417, 'require', require, true, true)), false)(J$.T(2046425, './_cloneArrayBuffer', 21, false)), cloneArrayBuffer, false, true), cloneDataView = J$.W(2046545, 'cloneDataView', J$.F(2046457, J$.I(typeof require === 'undefined' ? require = J$.R(2046441, 'require', undefined, true, true) : require = J$.R(2046441, 'require', require, true, true)), false)(J$.T(2046449, './_cloneDataView', 21, false)), cloneDataView, false, true), cloneRegExp = J$.W(2046553, 'cloneRegExp', J$.F(2046481, J$.I(typeof require === 'undefined' ? require = J$.R(2046465, 'require', undefined, true, true) : require = J$.R(2046465, 'require', require, true, true)), false)(J$.T(2046473, './_cloneRegExp', 21, false)), cloneRegExp, false, true), cloneSymbol = J$.W(2046561, 'cloneSymbol', J$.F(2046505, J$.I(typeof require === 'undefined' ? require = J$.R(2046489, 'require', undefined, true, true) : require = J$.R(2046489, 'require', require, true, true)), false)(J$.T(2046497, './_cloneSymbol', 21, false)), cloneSymbol, false, true), cloneTypedArray = J$.W(2046569, 'cloneTypedArray', J$.F(2046529, J$.I(typeof require === 'undefined' ? require = J$.R(2046513, 'require', undefined, true, true) : require = J$.R(2046513, 'require', require, true, true)), false)(J$.T(2046521, './_cloneTypedArray', 21, false)), cloneTypedArray, false, true);
            var boolTag = J$.W(2046641, 'boolTag', J$.T(2046577, '[object Boolean]', 21, false), boolTag, false, true), dateTag = J$.W(2046649, 'dateTag', J$.T(2046585, '[object Date]', 21, false), dateTag, false, true), mapTag = J$.W(2046657, 'mapTag', J$.T(2046593, '[object Map]', 21, false), mapTag, false, true), numberTag = J$.W(2046665, 'numberTag', J$.T(2046601, '[object Number]', 21, false), numberTag, false, true), regexpTag = J$.W(2046673, 'regexpTag', J$.T(2046609, '[object RegExp]', 21, false), regexpTag, false, true), setTag = J$.W(2046681, 'setTag', J$.T(2046617, '[object Set]', 21, false), setTag, false, true), stringTag = J$.W(2046689, 'stringTag', J$.T(2046625, '[object String]', 21, false), stringTag, false, true), symbolTag = J$.W(2046697, 'symbolTag', J$.T(2046633, '[object Symbol]', 21, false), symbolTag, false, true);
            var arrayBufferTag = J$.W(2046793, 'arrayBufferTag', J$.T(2046705, '[object ArrayBuffer]', 21, false), arrayBufferTag, false, true), dataViewTag = J$.W(2046801, 'dataViewTag', J$.T(2046713, '[object DataView]', 21, false), dataViewTag, false, true), float32Tag = J$.W(2046809, 'float32Tag', J$.T(2046721, '[object Float32Array]', 21, false), float32Tag, false, true), float64Tag = J$.W(2046817, 'float64Tag', J$.T(2046729, '[object Float64Array]', 21, false), float64Tag, false, true), int8Tag = J$.W(2046825, 'int8Tag', J$.T(2046737, '[object Int8Array]', 21, false), int8Tag, false, true), int16Tag = J$.W(2046833, 'int16Tag', J$.T(2046745, '[object Int16Array]', 21, false), int16Tag, false, true), int32Tag = J$.W(2046841, 'int32Tag', J$.T(2046753, '[object Int32Array]', 21, false), int32Tag, false, true), uint8Tag = J$.W(2046849, 'uint8Tag', J$.T(2046761, '[object Uint8Array]', 21, false), uint8Tag, false, true), uint8ClampedTag = J$.W(2046857, 'uint8ClampedTag', J$.T(2046769, '[object Uint8ClampedArray]', 21, false), uint8ClampedTag, false, true), uint16Tag = J$.W(2046865, 'uint16Tag', J$.T(2046777, '[object Uint16Array]', 21, false), uint16Tag, false, true), uint32Tag = J$.W(2046873, 'uint32Tag', J$.T(2046785, '[object Uint32Array]', 21, false), uint32Tag, false, true);
            J$.P(2047417, J$.I(typeof module === 'undefined' ? module = J$.R(2047401, 'module', undefined, true, true) : module = J$.R(2047401, 'module', module, true, true)), 'exports', J$.R(2047409, 'initCloneByTag', initCloneByTag, false, true));
        } catch (J$e) {
            J$.Ex(2047657, J$e);
        } finally {
            if (J$.Sr(2047665))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

