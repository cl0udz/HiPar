J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2958273, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_createWrap.js');
            function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2958105, arguments.callee, this, arguments);
                            arguments = J$.N(2958113, 'arguments', arguments, true, false, false);
                            func = J$.N(2958121, 'func', func, true, false, false);
                            bitmask = J$.N(2958129, 'bitmask', bitmask, true, false, false);
                            thisArg = J$.N(2958137, 'thisArg', thisArg, true, false, false);
                            partials = J$.N(2958145, 'partials', partials, true, false, false);
                            holders = J$.N(2958153, 'holders', holders, true, false, false);
                            argPos = J$.N(2958161, 'argPos', argPos, true, false, false);
                            ary = J$.N(2958169, 'ary', ary, true, false, false);
                            arity = J$.N(2958177, 'arity', arity, true, false, false);
                            J$.N(2958185, 'isBindKey', isBindKey, false, false, false);
                            J$.N(2958193, 'length', length, false, false, false);
                            J$.N(2958201, 'partialsRight', partialsRight, false, false, false);
                            J$.N(2958209, 'holdersRight', holdersRight, false, false, false);
                            J$.N(2958217, 'data', data, false, false, false);
                            J$.N(2958225, 'newData', newData, false, false, false);
                            J$.N(2958233, 'result', result, false, false, false);
                            J$.N(2958241, 'setter', setter, false, false, false);
                            var isBindKey = J$.W(2956721, 'isBindKey', J$.B(322786, '&', J$.R(2956705, 'bitmask', bitmask, false, false), J$.R(2956713, 'WRAP_BIND_KEY_FLAG', WRAP_BIND_KEY_FLAG, false, true)), isBindKey, false, false);
                            if (J$.C(157528, J$.C(157520, J$.U(322794, '!', J$.R(2956729, 'isBindKey', isBindKey, false, false))) ? J$.B(322810, '!=', J$.U(322802, 'typeof', J$.R(2956737, 'func', func, false, false)), J$.T(2956745, 'function', 21, false)) : J$._())) {
                                throw J$.F(2956769, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2956753, 'TypeError', undefined, true, true) : TypeError = J$.R(2956753, 'TypeError', TypeError, true, true)), true)(J$.R(2956761, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            var length = J$.W(2956809, 'length', J$.C(157536, J$.R(2956777, 'partials', partials, false, false)) ? J$.G(2956793, J$.R(2956785, 'partials', partials, false, false), 'length') : J$.T(2956801, 0, 22, false), length, false, false);
                            if (J$.C(157544, J$.U(322818, '!', J$.R(2956817, 'length', length, false, false)))) {
                                bitmask = J$.W(2956849, 'bitmask', J$.B(322842, '&', J$.R(2956841, 'bitmask', bitmask, false, false), J$.U(322834, '~', J$.B(322826, '|', J$.R(2956825, 'WRAP_PARTIAL_FLAG', WRAP_PARTIAL_FLAG, false, true), J$.R(2956833, 'WRAP_PARTIAL_RIGHT_FLAG', WRAP_PARTIAL_RIGHT_FLAG, false, true)))), bitmask, false, false);
                                partials = J$.W(2956873, 'partials', holders = J$.W(2956865, 'holders', J$.T(2956857, undefined, 24, false), holders, false, false), partials, false, false);
                            }
                            ary = J$.W(2956953, 'ary', J$.C(157552, J$.B(322850, '===', J$.R(2956881, 'ary', ary, false, false), J$.T(2956889, undefined, 24, false))) ? J$.R(2956897, 'ary', ary, false, false) : J$.F(2956945, J$.R(2956905, 'nativeMax', nativeMax, false, true), false)(J$.F(2956929, J$.R(2956913, 'toInteger', toInteger, false, true), false)(J$.R(2956921, 'ary', ary, false, false)), J$.T(2956937, 0, 22, false)), ary, false, false);
                            arity = J$.W(2957009, 'arity', J$.C(157560, J$.B(322858, '===', J$.R(2956961, 'arity', arity, false, false), J$.T(2956969, undefined, 24, false))) ? J$.R(2956977, 'arity', arity, false, false) : J$.F(2957001, J$.R(2956985, 'toInteger', toInteger, false, true), false)(J$.R(2956993, 'arity', arity, false, false)), arity, false, false);
                            length = J$.W(2957057, 'length', J$.B(322866, '-', J$.R(2957049, 'length', length, false, false), J$.C(157568, J$.R(2957017, 'holders', holders, false, false)) ? J$.G(2957033, J$.R(2957025, 'holders', holders, false, false), 'length') : J$.T(2957041, 0, 22, false)), length, false, false);
                            if (J$.C(157576, J$.B(322874, '&', J$.R(2957065, 'bitmask', bitmask, false, false), J$.R(2957073, 'WRAP_PARTIAL_RIGHT_FLAG', WRAP_PARTIAL_RIGHT_FLAG, false, true)))) {
                                var partialsRight = J$.W(2957097, 'partialsRight', J$.R(2957081, 'partials', partials, false, false), partialsRight, false, false), holdersRight = J$.W(2957105, 'holdersRight', J$.R(2957089, 'holders', holders, false, false), holdersRight, false, false);
                                partials = J$.W(2957129, 'partials', holders = J$.W(2957121, 'holders', J$.T(2957113, undefined, 24, false), holders, false, false), partials, false, false);
                            }
                            var data = J$.W(2957177, 'data', J$.C(157584, J$.R(2957137, 'isBindKey', isBindKey, false, false)) ? J$.T(2957145, undefined, 24, false) : J$.F(2957169, J$.R(2957153, 'getData', getData, false, true), false)(J$.R(2957161, 'func', func, false, false)), data, false, false);
                            var newData = J$.W(2957273, 'newData', J$.T(2957265, [
                                J$.R(2957185, 'func', func, false, false),
                                J$.R(2957193, 'bitmask', bitmask, false, false),
                                J$.R(2957201, 'thisArg', thisArg, false, false),
                                J$.R(2957209, 'partials', partials, false, false),
                                J$.R(2957217, 'holders', holders, false, false),
                                J$.R(2957225, 'partialsRight', partialsRight, false, false),
                                J$.R(2957233, 'holdersRight', holdersRight, false, false),
                                J$.R(2957241, 'argPos', argPos, false, false),
                                J$.R(2957249, 'ary', ary, false, false),
                                J$.R(2957257, 'arity', arity, false, false)
                            ], 10, false), newData, false, false);
                            if (J$.C(157592, J$.R(2957281, 'data', data, false, false))) {
                                J$.F(2957313, J$.R(2957289, 'mergeData', mergeData, false, true), false)(J$.R(2957297, 'newData', newData, false, false), J$.R(2957305, 'data', data, false, false));
                            }
                            func = J$.W(2957345, 'func', J$.G(2957337, J$.R(2957321, 'newData', newData, false, false), J$.T(2957329, 0, 22, false)), func, false, false);
                            bitmask = J$.W(2957377, 'bitmask', J$.G(2957369, J$.R(2957353, 'newData', newData, false, false), J$.T(2957361, 1, 22, false)), bitmask, false, false);
                            thisArg = J$.W(2957409, 'thisArg', J$.G(2957401, J$.R(2957385, 'newData', newData, false, false), J$.T(2957393, 2, 22, false)), thisArg, false, false);
                            partials = J$.W(2957441, 'partials', J$.G(2957433, J$.R(2957417, 'newData', newData, false, false), J$.T(2957425, 3, 22, false)), partials, false, false);
                            holders = J$.W(2957473, 'holders', J$.G(2957465, J$.R(2957449, 'newData', newData, false, false), J$.T(2957457, 4, 22, false)), holders, false, false);
                            arity = J$.W(2957625, 'arity', J$.P(2957617, J$.R(2957481, 'newData', newData, false, false), J$.T(2957489, 9, 22, false), J$.C(157608, J$.B(322882, '===', J$.G(2957513, J$.R(2957497, 'newData', newData, false, false), J$.T(2957505, 9, 22, false)), J$.T(2957521, undefined, 24, false))) ? J$.C(157600, J$.R(2957529, 'isBindKey', isBindKey, false, false)) ? J$.T(2957537, 0, 22, false) : J$.G(2957553, J$.R(2957545, 'func', func, false, false), 'length') : J$.F(2957609, J$.R(2957561, 'nativeMax', nativeMax, false, true), false)(J$.B(322890, '-', J$.G(2957585, J$.R(2957569, 'newData', newData, false, false), J$.T(2957577, 9, 22, false)), J$.R(2957593, 'length', length, false, false)), J$.T(2957601, 0, 22, false))), arity, false, false);
                            if (J$.C(157624, J$.C(157616, J$.U(322898, '!', J$.R(2957633, 'arity', arity, false, false))) ? J$.B(322914, '&', J$.R(2957641, 'bitmask', bitmask, false, false), J$.B(322906, '|', J$.R(2957649, 'WRAP_CURRY_FLAG', WRAP_CURRY_FLAG, false, true), J$.R(2957657, 'WRAP_CURRY_RIGHT_FLAG', WRAP_CURRY_RIGHT_FLAG, false, true))) : J$._())) {
                                bitmask = J$.W(2957689, 'bitmask', J$.B(322938, '&', J$.R(2957681, 'bitmask', bitmask, false, false), J$.U(322930, '~', J$.B(322922, '|', J$.R(2957665, 'WRAP_CURRY_FLAG', WRAP_CURRY_FLAG, false, true), J$.R(2957673, 'WRAP_CURRY_RIGHT_FLAG', WRAP_CURRY_RIGHT_FLAG, false, true)))), bitmask, false, false);
                            }
                            if (J$.C(157680, J$.C(157632, J$.U(322946, '!', J$.R(2957697, 'bitmask', bitmask, false, false))) ? J$._() : J$.B(322954, '==', J$.R(2957705, 'bitmask', bitmask, false, false), J$.R(2957713, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, true)))) {
                                var result = J$.W(2957761, 'result', J$.F(2957753, J$.R(2957721, 'createBind', createBind, false, true), false)(J$.R(2957729, 'func', func, false, false), J$.R(2957737, 'bitmask', bitmask, false, false), J$.R(2957745, 'thisArg', thisArg, false, false)), result, false, false);
                            } else if (J$.C(157672, J$.C(157640, J$.B(322962, '==', J$.R(2957769, 'bitmask', bitmask, false, false), J$.R(2957777, 'WRAP_CURRY_FLAG', WRAP_CURRY_FLAG, false, true))) ? J$._() : J$.B(322970, '==', J$.R(2957785, 'bitmask', bitmask, false, false), J$.R(2957793, 'WRAP_CURRY_RIGHT_FLAG', WRAP_CURRY_RIGHT_FLAG, false, true)))) {
                                result = J$.W(2957841, 'result', J$.F(2957833, J$.R(2957801, 'createCurry', createCurry, false, true), false)(J$.R(2957809, 'func', func, false, false), J$.R(2957817, 'bitmask', bitmask, false, false), J$.R(2957825, 'arity', arity, false, false)), result, false, false);
                            } else if (J$.C(157664, J$.C(157656, J$.C(157648, J$.B(322978, '==', J$.R(2957849, 'bitmask', bitmask, false, false), J$.R(2957857, 'WRAP_PARTIAL_FLAG', WRAP_PARTIAL_FLAG, false, true))) ? J$._() : J$.B(322994, '==', J$.R(2957865, 'bitmask', bitmask, false, false), J$.B(322986, '|', J$.R(2957873, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, true), J$.R(2957881, 'WRAP_PARTIAL_FLAG', WRAP_PARTIAL_FLAG, false, true)))) ? J$.U(323002, '!', J$.G(2957897, J$.R(2957889, 'holders', holders, false, false), 'length')) : J$._())) {
                                result = J$.W(2957953, 'result', J$.F(2957945, J$.R(2957905, 'createPartial', createPartial, false, true), false)(J$.R(2957913, 'func', func, false, false), J$.R(2957921, 'bitmask', bitmask, false, false), J$.R(2957929, 'thisArg', thisArg, false, false), J$.R(2957937, 'partials', partials, false, false)), result, false, false);
                            } else {
                                result = J$.W(2957993, 'result', J$.M(2957985, J$.R(2957961, 'createHybrid', createHybrid, false, true), 'apply', false)(J$.T(2957969, undefined, 24, false), J$.R(2957977, 'newData', newData, false, false)), result, false, false);
                            }
                            var setter = J$.W(2958025, 'setter', J$.C(157688, J$.R(2958001, 'data', data, false, false)) ? J$.R(2958009, 'baseSetData', baseSetData, false, true) : J$.R(2958017, 'setData', setData, false, true), setter, false, false);
                            return J$.Rt(2958097, J$.F(2958089, J$.R(2958033, 'setWrapToString', setWrapToString, false, true), false)(J$.F(2958065, J$.R(2958041, 'setter', setter, false, false), false)(J$.R(2958049, 'result', result, false, false), J$.R(2958057, 'newData', newData, false, false)), J$.R(2958073, 'func', func, false, false), J$.R(2958081, 'bitmask', bitmask, false, false)));
                        } catch (J$e) {
                            J$.Ex(2958441, J$e);
                        } finally {
                            if (J$.Fr(2958449))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2958281, 'baseSetData', baseSetData, false, false, false);
            J$.N(2958289, 'createBind', createBind, false, false, false);
            J$.N(2958297, 'createCurry', createCurry, false, false, false);
            J$.N(2958305, 'createHybrid', createHybrid, false, false, false);
            J$.N(2958313, 'createPartial', createPartial, false, false, false);
            J$.N(2958321, 'getData', getData, false, false, false);
            J$.N(2958329, 'mergeData', mergeData, false, false, false);
            J$.N(2958337, 'setData', setData, false, false, false);
            J$.N(2958345, 'setWrapToString', setWrapToString, false, false, false);
            J$.N(2958353, 'toInteger', toInteger, false, false, false);
            J$.N(2958361, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            J$.N(2958369, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, false, false);
            J$.N(2958377, 'WRAP_BIND_KEY_FLAG', WRAP_BIND_KEY_FLAG, false, false, false);
            J$.N(2958385, 'WRAP_CURRY_FLAG', WRAP_CURRY_FLAG, false, false, false);
            J$.N(2958393, 'WRAP_CURRY_RIGHT_FLAG', WRAP_CURRY_RIGHT_FLAG, false, false, false);
            J$.N(2958401, 'WRAP_PARTIAL_FLAG', WRAP_PARTIAL_FLAG, false, false, false);
            J$.N(2958409, 'WRAP_PARTIAL_RIGHT_FLAG', WRAP_PARTIAL_RIGHT_FLAG, false, false, false);
            J$.N(2958417, 'nativeMax', nativeMax, false, false, false);
            createWrap = J$.N(2958433, 'createWrap', J$.T(2958425, createWrap, 12, false), true, false, false);
            var baseSetData = J$.W(2956489, 'baseSetData', J$.F(2956265, J$.I(typeof require === 'undefined' ? require = J$.R(2956249, 'require', undefined, true, true) : require = J$.R(2956249, 'require', require, true, true)), false)(J$.T(2956257, './_baseSetData', 21, false)), baseSetData, false, true), createBind = J$.W(2956497, 'createBind', J$.F(2956289, J$.I(typeof require === 'undefined' ? require = J$.R(2956273, 'require', undefined, true, true) : require = J$.R(2956273, 'require', require, true, true)), false)(J$.T(2956281, './_createBind', 21, false)), createBind, false, true), createCurry = J$.W(2956505, 'createCurry', J$.F(2956313, J$.I(typeof require === 'undefined' ? require = J$.R(2956297, 'require', undefined, true, true) : require = J$.R(2956297, 'require', require, true, true)), false)(J$.T(2956305, './_createCurry', 21, false)), createCurry, false, true), createHybrid = J$.W(2956513, 'createHybrid', J$.F(2956337, J$.I(typeof require === 'undefined' ? require = J$.R(2956321, 'require', undefined, true, true) : require = J$.R(2956321, 'require', require, true, true)), false)(J$.T(2956329, './_createHybrid', 21, false)), createHybrid, false, true), createPartial = J$.W(2956521, 'createPartial', J$.F(2956361, J$.I(typeof require === 'undefined' ? require = J$.R(2956345, 'require', undefined, true, true) : require = J$.R(2956345, 'require', require, true, true)), false)(J$.T(2956353, './_createPartial', 21, false)), createPartial, false, true), getData = J$.W(2956529, 'getData', J$.F(2956385, J$.I(typeof require === 'undefined' ? require = J$.R(2956369, 'require', undefined, true, true) : require = J$.R(2956369, 'require', require, true, true)), false)(J$.T(2956377, './_getData', 21, false)), getData, false, true), mergeData = J$.W(2956537, 'mergeData', J$.F(2956409, J$.I(typeof require === 'undefined' ? require = J$.R(2956393, 'require', undefined, true, true) : require = J$.R(2956393, 'require', require, true, true)), false)(J$.T(2956401, './_mergeData', 21, false)), mergeData, false, true), setData = J$.W(2956545, 'setData', J$.F(2956433, J$.I(typeof require === 'undefined' ? require = J$.R(2956417, 'require', undefined, true, true) : require = J$.R(2956417, 'require', require, true, true)), false)(J$.T(2956425, './_setData', 21, false)), setData, false, true), setWrapToString = J$.W(2956553, 'setWrapToString', J$.F(2956457, J$.I(typeof require === 'undefined' ? require = J$.R(2956441, 'require', undefined, true, true) : require = J$.R(2956441, 'require', require, true, true)), false)(J$.T(2956449, './_setWrapToString', 21, false)), setWrapToString, false, true), toInteger = J$.W(2956561, 'toInteger', J$.F(2956481, J$.I(typeof require === 'undefined' ? require = J$.R(2956465, 'require', undefined, true, true) : require = J$.R(2956465, 'require', require, true, true)), false)(J$.T(2956473, './toInteger', 21, false)), toInteger, false, true);
            var FUNC_ERROR_TEXT = J$.W(2956577, 'FUNC_ERROR_TEXT', J$.T(2956569, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            var WRAP_BIND_FLAG = J$.W(2956633, 'WRAP_BIND_FLAG', J$.T(2956585, 1, 22, false), WRAP_BIND_FLAG, false, true), WRAP_BIND_KEY_FLAG = J$.W(2956641, 'WRAP_BIND_KEY_FLAG', J$.T(2956593, 2, 22, false), WRAP_BIND_KEY_FLAG, false, true), WRAP_CURRY_FLAG = J$.W(2956649, 'WRAP_CURRY_FLAG', J$.T(2956601, 8, 22, false), WRAP_CURRY_FLAG, false, true), WRAP_CURRY_RIGHT_FLAG = J$.W(2956657, 'WRAP_CURRY_RIGHT_FLAG', J$.T(2956609, 16, 22, false), WRAP_CURRY_RIGHT_FLAG, false, true), WRAP_PARTIAL_FLAG = J$.W(2956665, 'WRAP_PARTIAL_FLAG', J$.T(2956617, 32, 22, false), WRAP_PARTIAL_FLAG, false, true), WRAP_PARTIAL_RIGHT_FLAG = J$.W(2956673, 'WRAP_PARTIAL_RIGHT_FLAG', J$.T(2956625, 64, 22, false), WRAP_PARTIAL_RIGHT_FLAG, false, true);
            var nativeMax = J$.W(2956697, 'nativeMax', J$.G(2956689, J$.I(typeof Math === 'undefined' ? Math = J$.R(2956681, 'Math', undefined, true, true) : Math = J$.R(2956681, 'Math', Math, true, true)), 'max'), nativeMax, false, true);
            J$.P(2958265, J$.I(typeof module === 'undefined' ? module = J$.R(2958249, 'module', undefined, true, true) : module = J$.R(2958249, 'module', module, true, true)), 'exports', J$.R(2958257, 'createWrap', createWrap, false, true));
        } catch (J$e) {
            J$.Ex(2958457, J$e);
        } finally {
            if (J$.Sr(2958465))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

