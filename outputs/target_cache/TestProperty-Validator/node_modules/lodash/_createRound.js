J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(2955177, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_createRound.js');
            function createRound(methodName) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2955121, arguments.callee, this, arguments);
                            arguments = J$.N(2955129, 'arguments', arguments, true, false, false);
                            methodName = J$.N(2955137, 'methodName', methodName, true, false, false);
                            J$.N(2955145, 'func', func, false, false, false);
                            var func = J$.W(2954601, 'func', J$.G(2954593, J$.I(typeof Math === 'undefined' ? Math = J$.R(2954577, 'Math', undefined, true, true) : Math = J$.R(2954577, 'Math', Math, true, true)), J$.R(2954585, 'methodName', methodName, false, false)), func, false, false);
                            return J$.Rt(2955113, J$.T(2955105, function (number, precision) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(2955057, arguments.callee, this, arguments);
                                            arguments = J$.N(2955065, 'arguments', arguments, true, false, false);
                                            number = J$.N(2955073, 'number', number, true, false, false);
                                            precision = J$.N(2955081, 'precision', precision, true, false, false);
                                            J$.N(2955089, 'pair', pair, false, false, false);
                                            J$.N(2955097, 'value', value, false, false, false);
                                            number = J$.W(2954633, 'number', J$.F(2954625, J$.R(2954609, 'toNumber', toNumber, false, true), false)(J$.R(2954617, 'number', number, false, false)), number, false, false);
                                            precision = J$.W(2954713, 'precision', J$.C(157464, J$.B(322634, '==', J$.R(2954641, 'precision', precision, false, false), J$.T(2954649, null, 25, false))) ? J$.T(2954657, 0, 22, false) : J$.F(2954705, J$.R(2954665, 'nativeMin', nativeMin, false, true), false)(J$.F(2954689, J$.R(2954673, 'toInteger', toInteger, false, true), false)(J$.R(2954681, 'precision', precision, false, false)), J$.T(2954697, 292, 22, false)), precision, false, false);
                                            if (J$.C(157480, J$.C(157472, J$.R(2954721, 'precision', precision, false, false)) ? J$.F(2954745, J$.R(2954729, 'nativeIsFinite', nativeIsFinite, false, true), false)(J$.R(2954737, 'number', number, false, false)) : J$._())) {
                                                var pair = J$.W(2954881, 'pair', J$.M(2954793, J$.B(322642, '+', J$.F(2954769, J$.R(2954753, 'toString', toString, false, true), false)(J$.R(2954761, 'number', number, false, false)), J$.T(2954777, 'e', 21, false)), 'split', false)(J$.T(2954785, 'e', 21, false)), pair, false, false), value = J$.W(2954889, 'value', J$.F(2954873, J$.R(2954801, 'func', func, false, false), false)(J$.B(322674, '+', J$.B(322650, '+', J$.G(2954825, J$.R(2954809, 'pair', pair, false, false), J$.T(2954817, 0, 22, false)), J$.T(2954833, 'e', 21, false)), J$.B(322666, '+', J$.U(322658, '+', J$.G(2954857, J$.R(2954841, 'pair', pair, false, false), J$.T(2954849, 1, 22, false))), J$.R(2954865, 'precision', precision, false, false)))), value, false, false);
                                                pair = J$.W(2954945, 'pair', J$.M(2954937, J$.B(322682, '+', J$.F(2954913, J$.R(2954897, 'toString', toString, false, true), false)(J$.R(2954905, 'value', value, false, false)), J$.T(2954921, 'e', 21, false)), 'split', false)(J$.T(2954929, 'e', 21, false)), pair, false, false);
                                                return J$.Rt(2955017, J$.U(322722, '+', J$.B(322714, '+', J$.B(322690, '+', J$.G(2954969, J$.R(2954953, 'pair', pair, false, false), J$.T(2954961, 0, 22, false)), J$.T(2954977, 'e', 21, false)), J$.B(322706, '-', J$.U(322698, '+', J$.G(2955001, J$.R(2954985, 'pair', pair, false, false), J$.T(2954993, 1, 22, false))), J$.R(2955009, 'precision', precision, false, false)))));
                                            }
                                            return J$.Rt(2955049, J$.F(2955041, J$.R(2955025, 'func', func, false, false), false)(J$.R(2955033, 'number', number, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(2955249, J$e);
                                        } finally {
                                            if (J$.Fr(2955257))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(2955265, J$e);
                        } finally {
                            if (J$.Fr(2955273))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2955185, 'root', root, false, false, false);
            J$.N(2955193, 'toInteger', toInteger, false, false, false);
            J$.N(2955201, 'toNumber', toNumber, false, false, false);
            J$.N(2955209, 'toString', toString, false, false, false);
            J$.N(2955217, 'nativeIsFinite', nativeIsFinite, false, false, false);
            J$.N(2955225, 'nativeMin', nativeMin, false, false, false);
            createRound = J$.N(2955241, 'createRound', J$.T(2955233, createRound, 12, false), true, false, false);
            var root = J$.W(2954497, 'root', J$.F(2954417, J$.I(typeof require === 'undefined' ? require = J$.R(2954401, 'require', undefined, true, true) : require = J$.R(2954401, 'require', require, true, true)), false)(J$.T(2954409, './_root', 21, false)), root, false, true), toInteger = J$.W(2954505, 'toInteger', J$.F(2954441, J$.I(typeof require === 'undefined' ? require = J$.R(2954425, 'require', undefined, true, true) : require = J$.R(2954425, 'require', require, true, true)), false)(J$.T(2954433, './toInteger', 21, false)), toInteger, false, true), toNumber = J$.W(2954513, 'toNumber', J$.F(2954465, J$.I(typeof require === 'undefined' ? require = J$.R(2954449, 'require', undefined, true, true) : require = J$.R(2954449, 'require', require, true, true)), false)(J$.T(2954457, './toNumber', 21, false)), toNumber, false, true), toString = J$.W(2954521, 'toString', J$.F(2954489, J$.I(typeof require === 'undefined' ? require = J$.R(2954473, 'require', undefined, true, true) : require = J$.R(2954473, 'require', require, true, true)), false)(J$.T(2954481, './toString', 21, false)), toString, false, true);
            var nativeIsFinite = J$.W(2954561, 'nativeIsFinite', J$.G(2954537, J$.R(2954529, 'root', root, false, true), 'isFinite'), nativeIsFinite, false, true), nativeMin = J$.W(2954569, 'nativeMin', J$.G(2954553, J$.I(typeof Math === 'undefined' ? Math = J$.R(2954545, 'Math', undefined, true, true) : Math = J$.R(2954545, 'Math', Math, true, true)), 'min'), nativeMin, false, true);
            J$.P(2955169, J$.I(typeof module === 'undefined' ? module = J$.R(2955153, 'module', undefined, true, true) : module = J$.R(2955153, 'module', module, true, true)), 'exports', J$.R(2955161, 'createRound', createRound, false, true));
        } catch (J$e) {
            J$.Ex(2955281, J$e);
        } finally {
            if (J$.Sr(2955289))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

