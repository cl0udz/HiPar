J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6665889, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_createRound.js');
            function createRound(methodName) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6665833, arguments.callee, this, arguments);
                            arguments = J$.N(6665841, 'arguments', arguments, true, false, false);
                            methodName = J$.N(6665849, 'methodName', methodName, true, false, false);
                            J$.N(6665857, 'func', func, false, false, false);
                            var func = J$.W(6665313, 'func', J$.G(6665305, J$.I(typeof Math === 'undefined' ? Math = J$.R(6665289, 'Math', undefined, true, true) : Math = J$.R(6665289, 'Math', Math, true, true)), J$.R(6665297, 'methodName', methodName, false, false)), func, false, false);
                            return J$.Rt(6665825, J$.T(6665817, function (number, precision) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6665769, arguments.callee, this, arguments);
                                            arguments = J$.N(6665777, 'arguments', arguments, true, false, false);
                                            number = J$.N(6665785, 'number', number, true, false, false);
                                            precision = J$.N(6665793, 'precision', precision, true, false, false);
                                            J$.N(6665801, 'pair', pair, false, false, false);
                                            J$.N(6665809, 'value', value, false, false, false);
                                            number = J$.W(6665345, 'number', J$.F(6665337, J$.R(6665321, 'toNumber', toNumber, false, true), false)(J$.R(6665329, 'number', number, false, false)), number, false, false);
                                            precision = J$.W(6665425, 'precision', J$.C(350864, J$.B(665394, '==', J$.R(6665353, 'precision', precision, false, false), J$.T(6665361, null, 25, false))) ? J$.T(6665369, 0, 22, false) : J$.F(6665417, J$.R(6665377, 'nativeMin', nativeMin, false, true), false)(J$.F(6665401, J$.R(6665385, 'toInteger', toInteger, false, true), false)(J$.R(6665393, 'precision', precision, false, false)), J$.T(6665409, 292, 22, false)), precision, false, false);
                                            if (J$.C(350880, J$.C(350872, J$.R(6665433, 'precision', precision, false, false)) ? J$.F(6665457, J$.R(6665441, 'nativeIsFinite', nativeIsFinite, false, true), false)(J$.R(6665449, 'number', number, false, false)) : J$._())) {
                                                var pair = J$.W(6665593, 'pair', J$.M(6665505, J$.B(665402, '+', J$.F(6665481, J$.R(6665465, 'toString', toString, false, true), false)(J$.R(6665473, 'number', number, false, false)), J$.T(6665489, 'e', 21, false)), 'split', false)(J$.T(6665497, 'e', 21, false)), pair, false, false), value = J$.W(6665601, 'value', J$.F(6665585, J$.R(6665513, 'func', func, false, false), false)(J$.B(665434, '+', J$.B(665410, '+', J$.G(6665537, J$.R(6665521, 'pair', pair, false, false), J$.T(6665529, 0, 22, false)), J$.T(6665545, 'e', 21, false)), J$.B(665426, '+', J$.U(665418, '+', J$.G(6665569, J$.R(6665553, 'pair', pair, false, false), J$.T(6665561, 1, 22, false))), J$.R(6665577, 'precision', precision, false, false)))), value, false, false);
                                                pair = J$.W(6665657, 'pair', J$.M(6665649, J$.B(665442, '+', J$.F(6665625, J$.R(6665609, 'toString', toString, false, true), false)(J$.R(6665617, 'value', value, false, false)), J$.T(6665633, 'e', 21, false)), 'split', false)(J$.T(6665641, 'e', 21, false)), pair, false, false);
                                                return J$.Rt(6665729, J$.U(665482, '+', J$.B(665474, '+', J$.B(665450, '+', J$.G(6665681, J$.R(6665665, 'pair', pair, false, false), J$.T(6665673, 0, 22, false)), J$.T(6665689, 'e', 21, false)), J$.B(665466, '-', J$.U(665458, '+', J$.G(6665713, J$.R(6665697, 'pair', pair, false, false), J$.T(6665705, 1, 22, false))), J$.R(6665721, 'precision', precision, false, false)))));
                                            }
                                            return J$.Rt(6665761, J$.F(6665753, J$.R(6665737, 'func', func, false, false), false)(J$.R(6665745, 'number', number, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(6665961, J$e);
                                        } finally {
                                            if (J$.Fr(6665969))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(6665977, J$e);
                        } finally {
                            if (J$.Fr(6665985))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6665897, 'root', root, false, false, false);
            J$.N(6665905, 'toInteger', toInteger, false, false, false);
            J$.N(6665913, 'toNumber', toNumber, false, false, false);
            J$.N(6665921, 'toString', toString, false, false, false);
            J$.N(6665929, 'nativeIsFinite', nativeIsFinite, false, false, false);
            J$.N(6665937, 'nativeMin', nativeMin, false, false, false);
            createRound = J$.N(6665953, 'createRound', J$.T(6665945, createRound, 12, false), true, false, false);
            var root = J$.W(6665209, 'root', J$.F(6665129, J$.I(typeof require === 'undefined' ? require = J$.R(6665113, 'require', undefined, true, true) : require = J$.R(6665113, 'require', require, true, true)), false)(J$.T(6665121, './_root', 21, false)), root, false, true), toInteger = J$.W(6665217, 'toInteger', J$.F(6665153, J$.I(typeof require === 'undefined' ? require = J$.R(6665137, 'require', undefined, true, true) : require = J$.R(6665137, 'require', require, true, true)), false)(J$.T(6665145, './toInteger', 21, false)), toInteger, false, true), toNumber = J$.W(6665225, 'toNumber', J$.F(6665177, J$.I(typeof require === 'undefined' ? require = J$.R(6665161, 'require', undefined, true, true) : require = J$.R(6665161, 'require', require, true, true)), false)(J$.T(6665169, './toNumber', 21, false)), toNumber, false, true), toString = J$.W(6665233, 'toString', J$.F(6665201, J$.I(typeof require === 'undefined' ? require = J$.R(6665185, 'require', undefined, true, true) : require = J$.R(6665185, 'require', require, true, true)), false)(J$.T(6665193, './toString', 21, false)), toString, false, true);
            var nativeIsFinite = J$.W(6665273, 'nativeIsFinite', J$.G(6665249, J$.R(6665241, 'root', root, false, true), 'isFinite'), nativeIsFinite, false, true), nativeMin = J$.W(6665281, 'nativeMin', J$.G(6665265, J$.I(typeof Math === 'undefined' ? Math = J$.R(6665257, 'Math', undefined, true, true) : Math = J$.R(6665257, 'Math', Math, true, true)), 'min'), nativeMin, false, true);
            J$.P(6665881, J$.I(typeof module === 'undefined' ? module = J$.R(6665865, 'module', undefined, true, true) : module = J$.R(6665865, 'module', module, true, true)), 'exports', J$.R(6665873, 'createRound', createRound, false, true));
        } catch (J$e) {
            J$.Ex(6665993, J$e);
        } finally {
            if (J$.Sr(6666001))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

