J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6603417, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_baseGet.js');
            function baseGet(object, path) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6603345, arguments.callee, this, arguments);
                            arguments = J$.N(6603353, 'arguments', arguments, true, false, false);
                            object = J$.N(6603361, 'object', object, true, false, false);
                            path = J$.N(6603369, 'path', path, true, false, false);
                            J$.N(6603377, 'index', index, false, false, false);
                            J$.N(6603385, 'length', length, false, false, false);
                            path = J$.W(6603145, 'path', J$.F(6603137, J$.R(6603113, 'castPath', castPath, false, true), false)(J$.R(6603121, 'path', path, false, false), J$.R(6603129, 'object', object, false, false)), path, false, false);
                            var index = J$.W(6603177, 'index', J$.T(6603153, 0, 22, false), index, false, false), length = J$.W(6603185, 'length', J$.G(6603169, J$.R(6603161, 'path', path, false, false), 'length'), length, false, false);
                            while (J$.C(347136, J$.C(347128, J$.B(660954, '!=', J$.R(6603193, 'object', object, false, false), J$.T(6603201, null, 25, false))) ? J$.B(660962, '<', J$.R(6603209, 'index', index, false, false), J$.R(6603217, 'length', length, false, false)) : J$._())) {
                                object = J$.W(6603289, 'object', J$.G(6603281, J$.R(6603225, 'object', object, false, false), J$.F(6603273, J$.R(6603233, 'toKey', toKey, false, true), false)(J$.G(6603265, J$.R(6603241, 'path', path, false, false), J$.B(660986, '-', index = J$.W(6603257, 'index', J$.B(660978, '+', J$.U(660970, '+', J$.R(6603249, 'index', index, false, false)), 1), index, false, false), 1)))), object, false, false);
                            }
                            return J$.Rt(6603337, J$.C(347152, J$.C(347144, J$.R(6603297, 'index', index, false, false)) ? J$.B(660994, '==', J$.R(6603305, 'index', index, false, false), J$.R(6603313, 'length', length, false, false)) : J$._()) ? J$.R(6603321, 'object', object, false, false) : J$.T(6603329, undefined, 24, false));
                        } catch (J$e) {
                            J$.Ex(6603457, J$e);
                        } finally {
                            if (J$.Fr(6603465))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6603425, 'castPath', castPath, false, false, false);
            J$.N(6603433, 'toKey', toKey, false, false, false);
            baseGet = J$.N(6603449, 'baseGet', J$.T(6603441, baseGet, 12, false), true, false, false);
            var castPath = J$.W(6603097, 'castPath', J$.F(6603065, J$.I(typeof require === 'undefined' ? require = J$.R(6603049, 'require', undefined, true, true) : require = J$.R(6603049, 'require', require, true, true)), false)(J$.T(6603057, './_castPath', 21, false)), castPath, false, true), toKey = J$.W(6603105, 'toKey', J$.F(6603089, J$.I(typeof require === 'undefined' ? require = J$.R(6603073, 'require', undefined, true, true) : require = J$.R(6603073, 'require', require, true, true)), false)(J$.T(6603081, './_toKey', 21, false)), toKey, false, true);
            J$.P(6603409, J$.I(typeof module === 'undefined' ? module = J$.R(6603393, 'module', undefined, true, true) : module = J$.R(6603393, 'module', module, true, true)), 'exports', J$.R(6603401, 'baseGet', baseGet, false, true));
        } catch (J$e) {
            J$.Ex(6603473, J$e);
        } finally {
            if (J$.Sr(6603481))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

