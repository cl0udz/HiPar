J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6918817, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isFunction.js');
            function isFunction(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6918761, arguments.callee, this, arguments);
                            arguments = J$.N(6918769, 'arguments', arguments, true, false, false);
                            value = J$.N(6918777, 'value', value, true, false, false);
                            J$.N(6918785, 'tag', tag, false, false, false);
                            if (J$.C(361072, J$.U(678346, '!', J$.F(6918633, J$.R(6918617, 'isObject', isObject, false, true), false)(J$.R(6918625, 'value', value, false, false))))) {
                                return J$.Rt(6918649, J$.T(6918641, false, 23, false));
                            }
                            var tag = J$.W(6918681, 'tag', J$.F(6918673, J$.R(6918657, 'baseGetTag', baseGetTag, false, true), false)(J$.R(6918665, 'value', value, false, false)), tag, false, false);
                            return J$.Rt(6918753, J$.C(361096, J$.C(361088, J$.C(361080, J$.B(678354, '==', J$.R(6918689, 'tag', tag, false, false), J$.R(6918697, 'funcTag', funcTag, false, true))) ? J$._() : J$.B(678362, '==', J$.R(6918705, 'tag', tag, false, false), J$.R(6918713, 'genTag', genTag, false, true))) ? J$._() : J$.B(678370, '==', J$.R(6918721, 'tag', tag, false, false), J$.R(6918729, 'asyncTag', asyncTag, false, true))) ? J$._() : J$.B(678378, '==', J$.R(6918737, 'tag', tag, false, false), J$.R(6918745, 'proxyTag', proxyTag, false, true)));
                        } catch (J$e) {
                            J$.Ex(6918889, J$e);
                        } finally {
                            if (J$.Fr(6918897))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6918825, 'baseGetTag', baseGetTag, false, false, false);
            J$.N(6918833, 'isObject', isObject, false, false, false);
            J$.N(6918841, 'asyncTag', asyncTag, false, false, false);
            J$.N(6918849, 'funcTag', funcTag, false, false, false);
            J$.N(6918857, 'genTag', genTag, false, false, false);
            J$.N(6918865, 'proxyTag', proxyTag, false, false, false);
            isFunction = J$.N(6918881, 'isFunction', J$.T(6918873, isFunction, 12, false), true, false, false);
            var baseGetTag = J$.W(6918537, 'baseGetTag', J$.F(6918505, J$.I(typeof require === 'undefined' ? require = J$.R(6918489, 'require', undefined, true, true) : require = J$.R(6918489, 'require', require, true, true)), false)(J$.T(6918497, './_baseGetTag', 21, false)), baseGetTag, false, true), isObject = J$.W(6918545, 'isObject', J$.F(6918529, J$.I(typeof require === 'undefined' ? require = J$.R(6918513, 'require', undefined, true, true) : require = J$.R(6918513, 'require', require, true, true)), false)(J$.T(6918521, './isObject', 21, false)), isObject, false, true);
            var asyncTag = J$.W(6918585, 'asyncTag', J$.T(6918553, '[object AsyncFunction]', 21, false), asyncTag, false, true), funcTag = J$.W(6918593, 'funcTag', J$.T(6918561, '[object Function]', 21, false), funcTag, false, true), genTag = J$.W(6918601, 'genTag', J$.T(6918569, '[object GeneratorFunction]', 21, false), genTag, false, true), proxyTag = J$.W(6918609, 'proxyTag', J$.T(6918577, '[object Proxy]', 21, false), proxyTag, false, true);
            J$.P(6918809, J$.I(typeof module === 'undefined' ? module = J$.R(6918793, 'module', undefined, true, true) : module = J$.R(6918793, 'module', module, true, true)), 'exports', J$.R(6918801, 'isFunction', isFunction, false, true));
        } catch (J$e) {
            J$.Ex(6918905, J$e);
        } finally {
            if (J$.Sr(6918913))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

