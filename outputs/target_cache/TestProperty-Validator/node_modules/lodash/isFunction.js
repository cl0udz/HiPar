J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2277737, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/isFunction.js');
            function isFunction(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2277681, arguments.callee, this, arguments);
                            arguments = J$.N(2277689, 'arguments', arguments, true, false, false);
                            value = J$.N(2277697, 'value', value, true, false, false);
                            J$.N(2277705, 'tag', tag, false, false, false);
                            if (J$.C(110552, J$.U(161810, '!', J$.F(2277553, J$.R(2277537, 'isObject', isObject, false, true), false)(J$.R(2277545, 'value', value, false, false))))) {
                                return J$.Rt(2277569, J$.T(2277561, false, 23, false));
                            }
                            var tag = J$.W(2277601, 'tag', J$.F(2277593, J$.R(2277577, 'baseGetTag', baseGetTag, false, true), false)(J$.R(2277585, 'value', value, false, false)), tag, false, false);
                            return J$.Rt(2277673, J$.C(110576, J$.C(110568, J$.C(110560, J$.B(161818, '==', J$.R(2277609, 'tag', tag, false, false), J$.R(2277617, 'funcTag', funcTag, false, true))) ? J$._() : J$.B(161826, '==', J$.R(2277625, 'tag', tag, false, false), J$.R(2277633, 'genTag', genTag, false, true))) ? J$._() : J$.B(161834, '==', J$.R(2277641, 'tag', tag, false, false), J$.R(2277649, 'asyncTag', asyncTag, false, true))) ? J$._() : J$.B(161842, '==', J$.R(2277657, 'tag', tag, false, false), J$.R(2277665, 'proxyTag', proxyTag, false, true)));
                        } catch (J$e) {
                            J$.Ex(2277809, J$e);
                        } finally {
                            if (J$.Fr(2277817))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2277745, 'baseGetTag', baseGetTag, false, false, false);
            J$.N(2277753, 'isObject', isObject, false, false, false);
            J$.N(2277761, 'asyncTag', asyncTag, false, false, false);
            J$.N(2277769, 'funcTag', funcTag, false, false, false);
            J$.N(2277777, 'genTag', genTag, false, false, false);
            J$.N(2277785, 'proxyTag', proxyTag, false, false, false);
            isFunction = J$.N(2277801, 'isFunction', J$.T(2277793, isFunction, 12, false), true, false, false);
            var baseGetTag = J$.W(2277457, 'baseGetTag', J$.F(2277425, J$.I(typeof require === 'undefined' ? require = J$.R(2277409, 'require', undefined, true, true) : require = J$.R(2277409, 'require', require, true, true)), false)(J$.T(2277417, './_baseGetTag', 21, false)), baseGetTag, false, true), isObject = J$.W(2277465, 'isObject', J$.F(2277449, J$.I(typeof require === 'undefined' ? require = J$.R(2277433, 'require', undefined, true, true) : require = J$.R(2277433, 'require', require, true, true)), false)(J$.T(2277441, './isObject', 21, false)), isObject, false, true);
            var asyncTag = J$.W(2277505, 'asyncTag', J$.T(2277473, '[object AsyncFunction]', 21, false), asyncTag, false, true), funcTag = J$.W(2277513, 'funcTag', J$.T(2277481, '[object Function]', 21, false), funcTag, false, true), genTag = J$.W(2277521, 'genTag', J$.T(2277489, '[object GeneratorFunction]', 21, false), genTag, false, true), proxyTag = J$.W(2277529, 'proxyTag', J$.T(2277497, '[object Proxy]', 21, false), proxyTag, false, true);
            J$.P(2277729, J$.I(typeof module === 'undefined' ? module = J$.R(2277713, 'module', undefined, true, true) : module = J$.R(2277713, 'module', module, true, true)), 'exports', J$.R(2277721, 'isFunction', isFunction, false, true));
        } catch (J$e) {
            J$.Ex(2277825, J$e);
        } finally {
            if (J$.Sr(2277833))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

