J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6698129, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_mapCacheSet.js');
            function mapCacheSet(key, value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6698057, arguments.callee, this, arguments);
                            arguments = J$.N(6698065, 'arguments', arguments, true, false, false);
                            key = J$.N(6698073, 'key', key, true, false, false);
                            value = J$.N(6698081, 'value', value, true, false, false);
                            J$.N(6698089, 'data', data, false, false, false);
                            J$.N(6698097, 'size', size, false, false, false);
                            var data = J$.W(6697937, 'data', J$.F(6697913, J$.R(6697889, 'getMapData', getMapData, false, true), false)(J$.R(6697897, 'this', this, false, false), J$.R(6697905, 'key', key, false, false)), data, false, false), size = J$.W(6697945, 'size', J$.G(6697929, J$.R(6697921, 'data', data, false, false), 'size'), size, false, false);
                            J$.M(6697977, J$.R(6697953, 'data', data, false, false), 'set', false)(J$.R(6697961, 'key', key, false, false), J$.R(6697969, 'value', value, false, false));
                            J$.A(6698033, J$.R(6697985, 'this', this, false, false), 'size', '+')(J$.C(352928, J$.B(667490, '==', J$.G(6698001, J$.R(6697993, 'data', data, false, false), 'size'), J$.R(6698009, 'size', size, false, false))) ? J$.T(6698017, 0, 22, false) : J$.T(6698025, 1, 22, false));
                            return J$.Rt(6698049, J$.R(6698041, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(6698161, J$e);
                        } finally {
                            if (J$.Fr(6698169))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6698137, 'getMapData', getMapData, false, false, false);
            mapCacheSet = J$.N(6698153, 'mapCacheSet', J$.T(6698145, mapCacheSet, 12, false), true, false, false);
            var getMapData = J$.W(6697881, 'getMapData', J$.F(6697873, J$.I(typeof require === 'undefined' ? require = J$.R(6697857, 'require', undefined, true, true) : require = J$.R(6697857, 'require', require, true, true)), false)(J$.T(6697865, './_getMapData', 21, false)), getMapData, false, true);
            J$.P(6698121, J$.I(typeof module === 'undefined' ? module = J$.R(6698105, 'module', undefined, true, true) : module = J$.R(6698105, 'module', module, true, true)), 'exports', J$.R(6698113, 'mapCacheSet', mapCacheSet, false, true));
        } catch (J$e) {
            J$.Ex(6698177, J$e);
        } finally {
            if (J$.Sr(6698185))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

