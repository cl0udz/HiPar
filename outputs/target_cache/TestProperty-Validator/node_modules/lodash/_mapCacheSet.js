J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2057049, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_mapCacheSet.js');
            function mapCacheSet(key, value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2056977, arguments.callee, this, arguments);
                            arguments = J$.N(2056985, 'arguments', arguments, true, false, false);
                            key = J$.N(2056993, 'key', key, true, false, false);
                            value = J$.N(2057001, 'value', value, true, false, false);
                            J$.N(2057009, 'data', data, false, false, false);
                            J$.N(2057017, 'size', size, false, false, false);
                            var data = J$.W(2056857, 'data', J$.F(2056833, J$.R(2056809, 'getMapData', getMapData, false, true), false)(J$.R(2056817, 'this', this, false, false), J$.R(2056825, 'key', key, false, false)), data, false, false), size = J$.W(2056865, 'size', J$.G(2056849, J$.R(2056841, 'data', data, false, false), 'size'), size, false, false);
                            J$.M(2056897, J$.R(2056873, 'data', data, false, false), 'set', false)(J$.R(2056881, 'key', key, false, false), J$.R(2056889, 'value', value, false, false));
                            J$.A(2056953, J$.R(2056905, 'this', this, false, false), 'size', '+')(J$.C(102408, J$.B(150954, '==', J$.G(2056921, J$.R(2056913, 'data', data, false, false), 'size'), J$.R(2056929, 'size', size, false, false))) ? J$.T(2056937, 0, 22, false) : J$.T(2056945, 1, 22, false));
                            return J$.Rt(2056969, J$.R(2056961, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(2057081, J$e);
                        } finally {
                            if (J$.Fr(2057089))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2057057, 'getMapData', getMapData, false, false, false);
            mapCacheSet = J$.N(2057073, 'mapCacheSet', J$.T(2057065, mapCacheSet, 12, false), true, false, false);
            var getMapData = J$.W(2056801, 'getMapData', J$.F(2056793, J$.I(typeof require === 'undefined' ? require = J$.R(2056777, 'require', undefined, true, true) : require = J$.R(2056777, 'require', require, true, true)), false)(J$.T(2056785, './_getMapData', 21, false)), getMapData, false, true);
            J$.P(2057041, J$.I(typeof module === 'undefined' ? module = J$.R(2057025, 'module', undefined, true, true) : module = J$.R(2057025, 'module', module, true, true)), 'exports', J$.R(2057033, 'mapCacheSet', mapCacheSet, false, true));
        } catch (J$e) {
            J$.Ex(2057097, J$e);
        } finally {
            if (J$.Sr(2057105))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

