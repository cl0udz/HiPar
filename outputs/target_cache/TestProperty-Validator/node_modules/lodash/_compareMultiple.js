J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2004505, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_compareMultiple.js');
            function compareMultiple(object, other, orders) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2004385, arguments.callee, this, arguments);
                            arguments = J$.N(2004393, 'arguments', arguments, true, false, false);
                            object = J$.N(2004401, 'object', object, true, false, false);
                            other = J$.N(2004409, 'other', other, true, false, false);
                            orders = J$.N(2004417, 'orders', orders, true, false, false);
                            J$.N(2004425, 'index', index, false, false, false);
                            J$.N(2004433, 'objCriteria', objCriteria, false, false, false);
                            J$.N(2004441, 'othCriteria', othCriteria, false, false, false);
                            J$.N(2004449, 'length', length, false, false, false);
                            J$.N(2004457, 'ordersLength', ordersLength, false, false, false);
                            J$.N(2004465, 'result', result, false, false, false);
                            J$.N(2004473, 'order', order, false, false, false);
                            var index = J$.W(2004089, 'index', J$.U(147226, '-', J$.T(2004017, 1, 22, false)), index, false, false), objCriteria = J$.W(2004097, 'objCriteria', J$.G(2004033, J$.R(2004025, 'object', object, false, false), 'criteria'), objCriteria, false, false), othCriteria = J$.W(2004105, 'othCriteria', J$.G(2004049, J$.R(2004041, 'other', other, false, false), 'criteria'), othCriteria, false, false), length = J$.W(2004113, 'length', J$.G(2004065, J$.R(2004057, 'objCriteria', objCriteria, false, false), 'length'), length, false, false), ordersLength = J$.W(2004121, 'ordersLength', J$.G(2004081, J$.R(2004073, 'orders', orders, false, false), 'length'), ordersLength, false, false);
                            while (J$.C(99224, J$.B(147250, '<', index = J$.W(2004137, 'index', J$.B(147242, '+', J$.U(147234, '+', J$.R(2004129, 'index', index, false, false)), 1), index, false, false), J$.R(2004145, 'length', length, false, false)))) {
                                var result = J$.W(2004217, 'result', J$.F(2004209, J$.R(2004153, 'compareAscending', compareAscending, false, true), false)(J$.G(2004177, J$.R(2004161, 'objCriteria', objCriteria, false, false), J$.R(2004169, 'index', index, false, false)), J$.G(2004201, J$.R(2004185, 'othCriteria', othCriteria, false, false), J$.R(2004193, 'index', index, false, false))), result, false, false);
                                if (J$.C(99216, J$.R(2004225, 'result', result, false, false))) {
                                    if (J$.C(99200, J$.B(147258, '>=', J$.R(2004233, 'index', index, false, false), J$.R(2004241, 'ordersLength', ordersLength, false, false)))) {
                                        return J$.Rt(2004257, J$.R(2004249, 'result', result, false, false));
                                    }
                                    var order = J$.W(2004289, 'order', J$.G(2004281, J$.R(2004265, 'orders', orders, false, false), J$.R(2004273, 'index', index, false, false)), order, false, false);
                                    return J$.Rt(2004337, J$.B(147282, '*', J$.R(2004297, 'result', result, false, false), J$.C(99208, J$.B(147266, '==', J$.R(2004305, 'order', order, false, false), J$.T(2004313, 'desc', 21, false))) ? J$.U(147274, '-', J$.T(2004321, 1, 22, false)) : J$.T(2004329, 1, 22, false)));
                                }
                            }
                            return J$.Rt(2004377, J$.B(147290, '-', J$.G(2004353, J$.R(2004345, 'object', object, false, false), 'index'), J$.G(2004369, J$.R(2004361, 'other', other, false, false), 'index')));
                        } catch (J$e) {
                            J$.Ex(2004537, J$e);
                        } finally {
                            if (J$.Fr(2004545))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2004513, 'compareAscending', compareAscending, false, false, false);
            compareMultiple = J$.N(2004529, 'compareMultiple', J$.T(2004521, compareMultiple, 12, false), true, false, false);
            var compareAscending = J$.W(2004009, 'compareAscending', J$.F(2004001, J$.I(typeof require === 'undefined' ? require = J$.R(2003985, 'require', undefined, true, true) : require = J$.R(2003985, 'require', require, true, true)), false)(J$.T(2003993, './_compareAscending', 21, false)), compareAscending, false, true);
            J$.P(2004497, J$.I(typeof module === 'undefined' ? module = J$.R(2004481, 'module', undefined, true, true) : module = J$.R(2004481, 'module', module, true, true)), 'exports', J$.R(2004489, 'compareMultiple', compareMultiple, false, true));
        } catch (J$e) {
            J$.Ex(2004553, J$e);
        } finally {
            if (J$.Sr(2004561))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

