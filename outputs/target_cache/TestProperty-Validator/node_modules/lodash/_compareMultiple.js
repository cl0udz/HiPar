J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6645585, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_compareMultiple.js');
            function compareMultiple(object, other, orders) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6645465, arguments.callee, this, arguments);
                            arguments = J$.N(6645473, 'arguments', arguments, true, false, false);
                            object = J$.N(6645481, 'object', object, true, false, false);
                            other = J$.N(6645489, 'other', other, true, false, false);
                            orders = J$.N(6645497, 'orders', orders, true, false, false);
                            J$.N(6645505, 'index', index, false, false, false);
                            J$.N(6645513, 'objCriteria', objCriteria, false, false, false);
                            J$.N(6645521, 'othCriteria', othCriteria, false, false, false);
                            J$.N(6645529, 'length', length, false, false, false);
                            J$.N(6645537, 'ordersLength', ordersLength, false, false, false);
                            J$.N(6645545, 'result', result, false, false, false);
                            J$.N(6645553, 'order', order, false, false, false);
                            var index = J$.W(6645169, 'index', J$.U(663762, '-', J$.T(6645097, 1, 22, false)), index, false, false), objCriteria = J$.W(6645177, 'objCriteria', J$.G(6645113, J$.R(6645105, 'object', object, false, false), 'criteria'), objCriteria, false, false), othCriteria = J$.W(6645185, 'othCriteria', J$.G(6645129, J$.R(6645121, 'other', other, false, false), 'criteria'), othCriteria, false, false), length = J$.W(6645193, 'length', J$.G(6645145, J$.R(6645137, 'objCriteria', objCriteria, false, false), 'length'), length, false, false), ordersLength = J$.W(6645201, 'ordersLength', J$.G(6645161, J$.R(6645153, 'orders', orders, false, false), 'length'), ordersLength, false, false);
                            while (J$.C(349744, J$.B(663786, '<', index = J$.W(6645217, 'index', J$.B(663778, '+', J$.U(663770, '+', J$.R(6645209, 'index', index, false, false)), 1), index, false, false), J$.R(6645225, 'length', length, false, false)))) {
                                var result = J$.W(6645297, 'result', J$.F(6645289, J$.R(6645233, 'compareAscending', compareAscending, false, true), false)(J$.G(6645257, J$.R(6645241, 'objCriteria', objCriteria, false, false), J$.R(6645249, 'index', index, false, false)), J$.G(6645281, J$.R(6645265, 'othCriteria', othCriteria, false, false), J$.R(6645273, 'index', index, false, false))), result, false, false);
                                if (J$.C(349736, J$.R(6645305, 'result', result, false, false))) {
                                    if (J$.C(349720, J$.B(663794, '>=', J$.R(6645313, 'index', index, false, false), J$.R(6645321, 'ordersLength', ordersLength, false, false)))) {
                                        return J$.Rt(6645337, J$.R(6645329, 'result', result, false, false));
                                    }
                                    var order = J$.W(6645369, 'order', J$.G(6645361, J$.R(6645345, 'orders', orders, false, false), J$.R(6645353, 'index', index, false, false)), order, false, false);
                                    return J$.Rt(6645417, J$.B(663818, '*', J$.R(6645377, 'result', result, false, false), J$.C(349728, J$.B(663802, '==', J$.R(6645385, 'order', order, false, false), J$.T(6645393, 'desc', 21, false))) ? J$.U(663810, '-', J$.T(6645401, 1, 22, false)) : J$.T(6645409, 1, 22, false)));
                                }
                            }
                            return J$.Rt(6645457, J$.B(663826, '-', J$.G(6645433, J$.R(6645425, 'object', object, false, false), 'index'), J$.G(6645449, J$.R(6645441, 'other', other, false, false), 'index')));
                        } catch (J$e) {
                            J$.Ex(6645617, J$e);
                        } finally {
                            if (J$.Fr(6645625))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6645593, 'compareAscending', compareAscending, false, false, false);
            compareMultiple = J$.N(6645609, 'compareMultiple', J$.T(6645601, compareMultiple, 12, false), true, false, false);
            var compareAscending = J$.W(6645089, 'compareAscending', J$.F(6645081, J$.I(typeof require === 'undefined' ? require = J$.R(6645065, 'require', undefined, true, true) : require = J$.R(6645065, 'require', require, true, true)), false)(J$.T(6645073, './_compareAscending', 21, false)), compareAscending, false, true);
            J$.P(6645577, J$.I(typeof module === 'undefined' ? module = J$.R(6645561, 'module', undefined, true, true) : module = J$.R(6645561, 'module', module, true, true)), 'exports', J$.R(6645569, 'compareMultiple', compareMultiple, false, true));
        } catch (J$e) {
            J$.Ex(6645633, J$e);
        } finally {
            if (J$.Sr(6645641))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

