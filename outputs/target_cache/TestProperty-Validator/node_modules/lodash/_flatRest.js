J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6677529, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_flatRest.js');
            function flatRest(func) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6677481, arguments.callee, this, arguments);
                            arguments = J$.N(6677489, 'arguments', arguments, true, false, false);
                            func = J$.N(6677497, 'func', func, true, false, false);
                            return J$.Rt(6677473, J$.F(6677465, J$.R(6677401, 'setToString', setToString, false, true), false)(J$.F(6677441, J$.R(6677409, 'overRest', overRest, false, true), false)(J$.R(6677417, 'func', func, false, false), J$.T(6677425, undefined, 24, false), J$.R(6677433, 'flatten', flatten, false, true)), J$.B(666266, '+', J$.R(6677449, 'func', func, false, false), J$.T(6677457, '', 21, false))));
                        } catch (J$e) {
                            J$.Ex(6677577, J$e);
                        } finally {
                            if (J$.Fr(6677585))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6677537, 'flatten', flatten, false, false, false);
            J$.N(6677545, 'overRest', overRest, false, false, false);
            J$.N(6677553, 'setToString', setToString, false, false, false);
            flatRest = J$.N(6677569, 'flatRest', J$.T(6677561, flatRest, 12, false), true, false, false);
            var flatten = J$.W(6677377, 'flatten', J$.F(6677321, J$.I(typeof require === 'undefined' ? require = J$.R(6677305, 'require', undefined, true, true) : require = J$.R(6677305, 'require', require, true, true)), false)(J$.T(6677313, './flatten', 21, false)), flatten, false, true), overRest = J$.W(6677385, 'overRest', J$.F(6677345, J$.I(typeof require === 'undefined' ? require = J$.R(6677329, 'require', undefined, true, true) : require = J$.R(6677329, 'require', require, true, true)), false)(J$.T(6677337, './_overRest', 21, false)), overRest, false, true), setToString = J$.W(6677393, 'setToString', J$.F(6677369, J$.I(typeof require === 'undefined' ? require = J$.R(6677353, 'require', undefined, true, true) : require = J$.R(6677353, 'require', require, true, true)), false)(J$.T(6677361, './_setToString', 21, false)), setToString, false, true);
            J$.P(6677521, J$.I(typeof module === 'undefined' ? module = J$.R(6677505, 'module', undefined, true, true) : module = J$.R(6677505, 'module', module, true, true)), 'exports', J$.R(6677513, 'flatRest', flatRest, false, true));
        } catch (J$e) {
            J$.Ex(6677593, J$e);
        } finally {
            if (J$.Sr(6677601))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

