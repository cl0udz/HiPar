J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2080769, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/attempt.js');
            J$.N(2080777, 'apply', apply, false, false, false);
            J$.N(2080785, 'baseRest', baseRest, false, false, false);
            J$.N(2080793, 'isError', isError, false, false, false);
            J$.N(2080801, 'attempt', attempt, false, false, false);
            var apply = J$.W(2080537, 'apply', J$.F(2080481, J$.I(typeof require === 'undefined' ? require = J$.R(2080465, 'require', undefined, true, true) : require = J$.R(2080465, 'require', require, true, true)), false)(J$.T(2080473, './_apply', 21, false)), apply, false, true), baseRest = J$.W(2080545, 'baseRest', J$.F(2080505, J$.I(typeof require === 'undefined' ? require = J$.R(2080489, 'require', undefined, true, true) : require = J$.R(2080489, 'require', require, true, true)), false)(J$.T(2080497, './_baseRest', 21, false)), baseRest, false, true), isError = J$.W(2080553, 'isError', J$.F(2080529, J$.I(typeof require === 'undefined' ? require = J$.R(2080513, 'require', undefined, true, true) : require = J$.R(2080513, 'require', require, true, true)), false)(J$.T(2080521, './isError', 21, false)), isError, false, true);
            var attempt = J$.W(2080737, 'attempt', J$.F(2080729, J$.R(2080561, 'baseRest', baseRest, false, true), false)(J$.T(2080721, function (func, args) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2080689, arguments.callee, this, arguments);
                            arguments = J$.N(2080697, 'arguments', arguments, true, false, false);
                            func = J$.N(2080705, 'func', func, true, false, false);
                            args = J$.N(2080713, 'args', args, true, false, false);
                            try {
                                return J$.Rt(2080609, J$.F(2080601, J$.R(2080569, 'apply', apply, false, true), false)(J$.R(2080577, 'func', func, false, false), J$.T(2080585, undefined, 24, false), J$.R(2080593, 'args', args, false, false)));
                            } catch (e) {
                                J$.N(2080681, 'e', e, false, false, true);
                                return J$.Rt(2080673, J$.C(103160, J$.F(2080633, J$.R(2080617, 'isError', isError, false, true), false)(J$.R(2080625, 'e', e, false, false))) ? J$.R(2080641, 'e', e, false, false) : J$.F(2080665, J$.I(typeof Error === 'undefined' ? Error = J$.R(2080649, 'Error', undefined, true, true) : Error = J$.R(2080649, 'Error', Error, true, true)), true)(J$.R(2080657, 'e', e, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(2080809, J$e);
                        } finally {
                            if (J$.Fr(2080817))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), attempt, false, true);
            J$.P(2080761, J$.I(typeof module === 'undefined' ? module = J$.R(2080745, 'module', undefined, true, true) : module = J$.R(2080745, 'module', module, true, true)), 'exports', J$.R(2080753, 'attempt', attempt, false, true));
        } catch (J$e) {
            J$.Ex(2080825, J$e);
        } finally {
            if (J$.Sr(2080833))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

