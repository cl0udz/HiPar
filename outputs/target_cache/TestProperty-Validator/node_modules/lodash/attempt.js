J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(3011137, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/attempt.js');
            J$.N(3011145, 'apply', apply, false, false, false);
            J$.N(3011153, 'baseRest', baseRest, false, false, false);
            J$.N(3011161, 'isError', isError, false, false, false);
            J$.N(3011169, 'attempt', attempt, false, false, false);
            var apply = J$.W(3010905, 'apply', J$.F(3010849, J$.I(typeof require === 'undefined' ? require = J$.R(3010833, 'require', undefined, true, true) : require = J$.R(3010833, 'require', require, true, true)), false)(J$.T(3010841, './_apply', 21, false)), apply, false, true), baseRest = J$.W(3010913, 'baseRest', J$.F(3010873, J$.I(typeof require === 'undefined' ? require = J$.R(3010857, 'require', undefined, true, true) : require = J$.R(3010857, 'require', require, true, true)), false)(J$.T(3010865, './_baseRest', 21, false)), baseRest, false, true), isError = J$.W(3010921, 'isError', J$.F(3010897, J$.I(typeof require === 'undefined' ? require = J$.R(3010881, 'require', undefined, true, true) : require = J$.R(3010881, 'require', require, true, true)), false)(J$.T(3010889, './isError', 21, false)), isError, false, true);
            var attempt = J$.W(3011105, 'attempt', J$.F(3011097, J$.R(3010929, 'baseRest', baseRest, false, true), false)(J$.T(3011089, function (func, args) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(3011057, arguments.callee, this, arguments);
                            arguments = J$.N(3011065, 'arguments', arguments, true, false, false);
                            func = J$.N(3011073, 'func', func, true, false, false);
                            args = J$.N(3011081, 'args', args, true, false, false);
                            try {
                                return J$.Rt(3010977, J$.F(3010969, J$.R(3010937, 'apply', apply, false, true), false)(J$.R(3010945, 'func', func, false, false), J$.T(3010953, undefined, 24, false), J$.R(3010961, 'args', args, false, false)));
                            } catch (e) {
                                J$.N(3011049, 'e', e, false, false, true);
                                return J$.Rt(3011041, J$.C(160280, J$.F(3011001, J$.R(3010985, 'isError', isError, false, true), false)(J$.R(3010993, 'e', e, false, false))) ? J$.R(3011009, 'e', e, false, false) : J$.F(3011033, J$.I(typeof Error === 'undefined' ? Error = J$.R(3011017, 'Error', undefined, true, true) : Error = J$.R(3011017, 'Error', Error, true, true)), true)(J$.R(3011025, 'e', e, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(3011177, J$e);
                        } finally {
                            if (J$.Fr(3011185))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), attempt, false, true);
            J$.P(3011129, J$.I(typeof module === 'undefined' ? module = J$.R(3011113, 'module', undefined, true, true) : module = J$.R(3011113, 'module', module, true, true)), 'exports', J$.R(3011121, 'attempt', attempt, false, true));
        } catch (J$e) {
            J$.Ex(3011193, J$e);
        } finally {
            if (J$.Sr(3011201))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

