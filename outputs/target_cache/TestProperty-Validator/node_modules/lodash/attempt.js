J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6721849, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/attempt.js');
            J$.N(6721857, 'apply', apply, false, false, false);
            J$.N(6721865, 'baseRest', baseRest, false, false, false);
            J$.N(6721873, 'isError', isError, false, false, false);
            J$.N(6721881, 'attempt', attempt, false, false, false);
            var apply = J$.W(6721617, 'apply', J$.F(6721561, J$.I(typeof require === 'undefined' ? require = J$.R(6721545, 'require', undefined, true, true) : require = J$.R(6721545, 'require', require, true, true)), false)(J$.T(6721553, './_apply', 21, false)), apply, false, true), baseRest = J$.W(6721625, 'baseRest', J$.F(6721585, J$.I(typeof require === 'undefined' ? require = J$.R(6721569, 'require', undefined, true, true) : require = J$.R(6721569, 'require', require, true, true)), false)(J$.T(6721577, './_baseRest', 21, false)), baseRest, false, true), isError = J$.W(6721633, 'isError', J$.F(6721609, J$.I(typeof require === 'undefined' ? require = J$.R(6721593, 'require', undefined, true, true) : require = J$.R(6721593, 'require', require, true, true)), false)(J$.T(6721601, './isError', 21, false)), isError, false, true);
            var attempt = J$.W(6721817, 'attempt', J$.F(6721809, J$.R(6721641, 'baseRest', baseRest, false, true), false)(J$.T(6721801, function (func, args) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6721769, arguments.callee, this, arguments);
                            arguments = J$.N(6721777, 'arguments', arguments, true, false, false);
                            func = J$.N(6721785, 'func', func, true, false, false);
                            args = J$.N(6721793, 'args', args, true, false, false);
                            try {
                                return J$.Rt(6721689, J$.F(6721681, J$.R(6721649, 'apply', apply, false, true), false)(J$.R(6721657, 'func', func, false, false), J$.T(6721665, undefined, 24, false), J$.R(6721673, 'args', args, false, false)));
                            } catch (e) {
                                J$.N(6721761, 'e', e, false, false, true);
                                return J$.Rt(6721753, J$.C(353680, J$.F(6721713, J$.R(6721697, 'isError', isError, false, true), false)(J$.R(6721705, 'e', e, false, false))) ? J$.R(6721721, 'e', e, false, false) : J$.F(6721745, J$.I(typeof Error === 'undefined' ? Error = J$.R(6721729, 'Error', undefined, true, true) : Error = J$.R(6721729, 'Error', Error, true, true)), true)(J$.R(6721737, 'e', e, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(6721889, J$e);
                        } finally {
                            if (J$.Fr(6721897))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), attempt, false, true);
            J$.P(6721841, J$.I(typeof module === 'undefined' ? module = J$.R(6721825, 'module', undefined, true, true) : module = J$.R(6721825, 'module', module, true, true)), 'exports', J$.R(6721833, 'attempt', attempt, false, true));
        } catch (J$e) {
            J$.Ex(6721905, J$e);
        } finally {
            if (J$.Sr(6721913))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

