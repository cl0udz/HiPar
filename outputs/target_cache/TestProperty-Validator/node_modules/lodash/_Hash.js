J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6578001, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_Hash.js');
            function Hash(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6577761, arguments.callee, this, arguments);
                            arguments = J$.N(6577769, 'arguments', arguments, true, false, false);
                            entries = J$.N(6577777, 'entries', entries, true, false, false);
                            J$.N(6577785, 'index', index, false, false, false);
                            J$.N(6577793, 'length', length, false, false, false);
                            J$.N(6577801, 'entry', entry, false, false, false);
                            var index = J$.W(6577609, 'index', J$.U(659298, '-', J$.T(6577561, 1, 22, false)), index, false, false), length = J$.W(6577617, 'length', J$.C(345792, J$.B(659306, '==', J$.R(6577569, 'entries', entries, false, false), J$.T(6577577, null, 25, false))) ? J$.T(6577585, 0, 22, false) : J$.G(6577601, J$.R(6577593, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(6577633, J$.R(6577625, 'this', this, false, false), 'clear', false)();
                            while (J$.C(345800, J$.B(659330, '<', index = J$.W(6577649, 'index', J$.B(659322, '+', J$.U(659314, '+', J$.R(6577641, 'index', index, false, false)), 1), index, false, false), J$.R(6577657, 'length', length, false, false)))) {
                                var entry = J$.W(6577689, 'entry', J$.G(6577681, J$.R(6577665, 'entries', entries, false, false), J$.R(6577673, 'index', index, false, false)), entry, false, false);
                                J$.M(6577753, J$.R(6577697, 'this', this, false, false), 'set', false)(J$.G(6577721, J$.R(6577705, 'entry', entry, false, false), J$.T(6577713, 0, 22, false)), J$.G(6577745, J$.R(6577729, 'entry', entry, false, false), J$.T(6577737, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(6578065, J$e);
                        } finally {
                            if (J$.Fr(6578073))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6578009, 'hashClear', hashClear, false, false, false);
            J$.N(6578017, 'hashDelete', hashDelete, false, false, false);
            J$.N(6578025, 'hashGet', hashGet, false, false, false);
            J$.N(6578033, 'hashHas', hashHas, false, false, false);
            J$.N(6578041, 'hashSet', hashSet, false, false, false);
            Hash = J$.N(6578057, 'Hash', J$.T(6578049, Hash, 12, false), true, false, false);
            var hashClear = J$.W(6577521, 'hashClear', J$.F(6577417, J$.I(typeof require === 'undefined' ? require = J$.R(6577401, 'require', undefined, true, true) : require = J$.R(6577401, 'require', require, true, true)), false)(J$.T(6577409, './_hashClear', 21, false)), hashClear, false, true), hashDelete = J$.W(6577529, 'hashDelete', J$.F(6577441, J$.I(typeof require === 'undefined' ? require = J$.R(6577425, 'require', undefined, true, true) : require = J$.R(6577425, 'require', require, true, true)), false)(J$.T(6577433, './_hashDelete', 21, false)), hashDelete, false, true), hashGet = J$.W(6577537, 'hashGet', J$.F(6577465, J$.I(typeof require === 'undefined' ? require = J$.R(6577449, 'require', undefined, true, true) : require = J$.R(6577449, 'require', require, true, true)), false)(J$.T(6577457, './_hashGet', 21, false)), hashGet, false, true), hashHas = J$.W(6577545, 'hashHas', J$.F(6577489, J$.I(typeof require === 'undefined' ? require = J$.R(6577473, 'require', undefined, true, true) : require = J$.R(6577473, 'require', require, true, true)), false)(J$.T(6577481, './_hashHas', 21, false)), hashHas, false, true), hashSet = J$.W(6577553, 'hashSet', J$.F(6577513, J$.I(typeof require === 'undefined' ? require = J$.R(6577497, 'require', undefined, true, true) : require = J$.R(6577497, 'require', require, true, true)), false)(J$.T(6577505, './_hashSet', 21, false)), hashSet, false, true);
            J$.P(6577833, J$.G(6577817, J$.R(6577809, 'Hash', Hash, false, true), 'prototype'), 'clear', J$.R(6577825, 'hashClear', hashClear, false, true));
            J$.P(6577873, J$.G(6577849, J$.R(6577841, 'Hash', Hash, false, true), 'prototype'), J$.T(6577857, 'delete', 21, false), J$.R(6577865, 'hashDelete', hashDelete, false, true));
            J$.P(6577905, J$.G(6577889, J$.R(6577881, 'Hash', Hash, false, true), 'prototype'), 'get', J$.R(6577897, 'hashGet', hashGet, false, true));
            J$.P(6577937, J$.G(6577921, J$.R(6577913, 'Hash', Hash, false, true), 'prototype'), 'has', J$.R(6577929, 'hashHas', hashHas, false, true));
            J$.P(6577969, J$.G(6577953, J$.R(6577945, 'Hash', Hash, false, true), 'prototype'), 'set', J$.R(6577961, 'hashSet', hashSet, false, true));
            J$.P(6577993, J$.I(typeof module === 'undefined' ? module = J$.R(6577977, 'module', undefined, true, true) : module = J$.R(6577977, 'module', module, true, true)), 'exports', J$.R(6577985, 'Hash', Hash, false, true));
        } catch (J$e) {
            J$.Ex(6578081, J$e);
        } finally {
            if (J$.Sr(6578089))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

