J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(2048353, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_insertWrapDetails.js');
            function insertWrapDetails(source, details) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2048281, arguments.callee, this, arguments);
                            arguments = J$.N(2048289, 'arguments', arguments, true, false, false);
                            source = J$.N(2048297, 'source', source, true, false, false);
                            details = J$.N(2048305, 'details', details, true, false, false);
                            J$.N(2048313, 'length', length, false, false, false);
                            J$.N(2048321, 'lastIndex', lastIndex, false, false, false);
                            var length = J$.W(2048033, 'length', J$.G(2048025, J$.R(2048017, 'details', details, false, false), 'length'), length, false, false);
                            if (J$.C(101872, J$.U(150242, '!', J$.R(2048041, 'length', length, false, false)))) {
                                return J$.Rt(2048057, J$.R(2048049, 'source', source, false, false));
                            }
                            var lastIndex = J$.W(2048081, 'lastIndex', J$.B(150250, '-', J$.R(2048065, 'length', length, false, false), J$.T(2048073, 1, 22, false)), lastIndex, false, false);
                            J$.P(2048161, J$.R(2048089, 'details', details, false, false), J$.R(2048097, 'lastIndex', lastIndex, false, false), J$.B(150266, '+', J$.C(101880, J$.B(150258, '>', J$.R(2048105, 'length', length, false, false), J$.T(2048113, 1, 22, false))) ? J$.T(2048121, '& ', 21, false) : J$.T(2048129, '', 21, false), J$.G(2048153, J$.R(2048137, 'details', details, false, false), J$.R(2048145, 'lastIndex', lastIndex, false, false))));
                            details = J$.W(2048217, 'details', J$.M(2048209, J$.R(2048169, 'details', details, false, false), 'join', false)(J$.C(101888, J$.B(150274, '>', J$.R(2048177, 'length', length, false, false), J$.T(2048185, 2, 22, false))) ? J$.T(2048193, ', ', 21, false) : J$.T(2048201, ' ', 21, false)), details, false, false);
                            return J$.Rt(2048273, J$.M(2048265, J$.R(2048225, 'source', source, false, false), 'replace', false)(J$.R(2048233, 'reWrapComment', reWrapComment, false, true), J$.B(150290, '+', J$.B(150282, '+', J$.T(2048241, '{\n/* [wrapped with ', 21, false), J$.R(2048249, 'details', details, false, false)), J$.T(2048257, '] */\n', 21, false))));
                        } catch (J$e) {
                            J$.Ex(2048385, J$e);
                        } finally {
                            if (J$.Fr(2048393))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2048361, 'reWrapComment', reWrapComment, false, false, false);
            insertWrapDetails = J$.N(2048377, 'insertWrapDetails', J$.T(2048369, insertWrapDetails, 12, false), true, false, false);
            var reWrapComment = J$.W(2048009, 'reWrapComment', J$.T(2048001, /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, 14, false), reWrapComment, false, true);
            J$.P(2048345, J$.I(typeof module === 'undefined' ? module = J$.R(2048329, 'module', undefined, true, true) : module = J$.R(2048329, 'module', module, true, true)), 'exports', J$.R(2048337, 'insertWrapDetails', insertWrapDetails, false, true));
        } catch (J$e) {
            J$.Ex(2048401, J$e);
        } finally {
            if (J$.Sr(2048409))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

