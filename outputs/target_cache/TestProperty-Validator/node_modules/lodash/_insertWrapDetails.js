J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6689433, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_insertWrapDetails.js');
            function insertWrapDetails(source, details) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6689361, arguments.callee, this, arguments);
                            arguments = J$.N(6689369, 'arguments', arguments, true, false, false);
                            source = J$.N(6689377, 'source', source, true, false, false);
                            details = J$.N(6689385, 'details', details, true, false, false);
                            J$.N(6689393, 'length', length, false, false, false);
                            J$.N(6689401, 'lastIndex', lastIndex, false, false, false);
                            var length = J$.W(6689113, 'length', J$.G(6689105, J$.R(6689097, 'details', details, false, false), 'length'), length, false, false);
                            if (J$.C(352392, J$.U(666778, '!', J$.R(6689121, 'length', length, false, false)))) {
                                return J$.Rt(6689137, J$.R(6689129, 'source', source, false, false));
                            }
                            var lastIndex = J$.W(6689161, 'lastIndex', J$.B(666786, '-', J$.R(6689145, 'length', length, false, false), J$.T(6689153, 1, 22, false)), lastIndex, false, false);
                            J$.P(6689241, J$.R(6689169, 'details', details, false, false), J$.R(6689177, 'lastIndex', lastIndex, false, false), J$.B(666802, '+', J$.C(352400, J$.B(666794, '>', J$.R(6689185, 'length', length, false, false), J$.T(6689193, 1, 22, false))) ? J$.T(6689201, '& ', 21, false) : J$.T(6689209, '', 21, false), J$.G(6689233, J$.R(6689217, 'details', details, false, false), J$.R(6689225, 'lastIndex', lastIndex, false, false))));
                            details = J$.W(6689297, 'details', J$.M(6689289, J$.R(6689249, 'details', details, false, false), 'join', false)(J$.C(352408, J$.B(666810, '>', J$.R(6689257, 'length', length, false, false), J$.T(6689265, 2, 22, false))) ? J$.T(6689273, ', ', 21, false) : J$.T(6689281, ' ', 21, false)), details, false, false);
                            return J$.Rt(6689353, J$.M(6689345, J$.R(6689305, 'source', source, false, false), 'replace', false)(J$.R(6689313, 'reWrapComment', reWrapComment, false, true), J$.B(666826, '+', J$.B(666818, '+', J$.T(6689321, '{\n/* [wrapped with ', 21, false), J$.R(6689329, 'details', details, false, false)), J$.T(6689337, '] */\n', 21, false))));
                        } catch (J$e) {
                            J$.Ex(6689465, J$e);
                        } finally {
                            if (J$.Fr(6689473))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6689441, 'reWrapComment', reWrapComment, false, false, false);
            insertWrapDetails = J$.N(6689457, 'insertWrapDetails', J$.T(6689449, insertWrapDetails, 12, false), true, false, false);
            var reWrapComment = J$.W(6689089, 'reWrapComment', J$.T(6689081, /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, 14, false), reWrapComment, false, true);
            J$.P(6689425, J$.I(typeof module === 'undefined' ? module = J$.R(6689409, 'module', undefined, true, true) : module = J$.R(6689409, 'module', module, true, true)), 'exports', J$.R(6689417, 'insertWrapDetails', insertWrapDetails, false, true));
        } catch (J$e) {
            J$.Ex(6689481, J$e);
        } finally {
            if (J$.Sr(6689489))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

