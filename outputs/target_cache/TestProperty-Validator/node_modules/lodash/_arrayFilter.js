J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6584409, '/home/james/nodejs/HiPar/outputs/target_cache/TestProperty-Validator/node_modules/lodash/_arrayFilter.js');
            function arrayFilter(array, predicate) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6584313, arguments.callee, this, arguments);
                            arguments = J$.N(6584321, 'arguments', arguments, true, false, false);
                            array = J$.N(6584329, 'array', array, true, false, false);
                            predicate = J$.N(6584337, 'predicate', predicate, true, false, false);
                            J$.N(6584345, 'index', index, false, false, false);
                            J$.N(6584353, 'length', length, false, false, false);
                            J$.N(6584361, 'resIndex', resIndex, false, false, false);
                            J$.N(6584369, 'result', result, false, false, false);
                            J$.N(6584377, 'value', value, false, false, false);
                            var index = J$.W(6584129, 'index', J$.U(659650, '-', J$.T(6584065, 1, 22, false)), index, false, false), length = J$.W(6584137, 'length', J$.C(345984, J$.B(659658, '==', J$.R(6584073, 'array', array, false, false), J$.T(6584081, null, 25, false))) ? J$.T(6584089, 0, 22, false) : J$.G(6584105, J$.R(6584097, 'array', array, false, false), 'length'), length, false, false), resIndex = J$.W(6584145, 'resIndex', J$.T(6584113, 0, 22, false), resIndex, false, false), result = J$.W(6584153, 'result', J$.T(6584121, [], 10, false), result, false, false);
                            while (J$.C(346000, J$.B(659682, '<', index = J$.W(6584169, 'index', J$.B(659674, '+', J$.U(659666, '+', J$.R(6584161, 'index', index, false, false)), 1), index, false, false), J$.R(6584177, 'length', length, false, false)))) {
                                var value = J$.W(6584209, 'value', J$.G(6584201, J$.R(6584185, 'array', array, false, false), J$.R(6584193, 'index', index, false, false)), value, false, false);
                                if (J$.C(345992, J$.F(6584249, J$.R(6584217, 'predicate', predicate, false, false), false)(J$.R(6584225, 'value', value, false, false), J$.R(6584233, 'index', index, false, false), J$.R(6584241, 'array', array, false, false)))) {
                                    J$.P(6584289, J$.R(6584257, 'result', result, false, false), J$.B(659706, '-', resIndex = J$.W(6584273, 'resIndex', J$.B(659698, '+', J$.U(659690, '+', J$.R(6584265, 'resIndex', resIndex, false, false)), 1), resIndex, false, false), 1), J$.R(6584281, 'value', value, false, false));
                                }
                            }
                            return J$.Rt(6584305, J$.R(6584297, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(6584433, J$e);
                        } finally {
                            if (J$.Fr(6584441))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            arrayFilter = J$.N(6584425, 'arrayFilter', J$.T(6584417, arrayFilter, 12, false), true, false, false);
            J$.P(6584401, J$.I(typeof module === 'undefined' ? module = J$.R(6584385, 'module', undefined, true, true) : module = J$.R(6584385, 'module', module, true, true)), 'exports', J$.R(6584393, 'arrayFilter', arrayFilter, false, true));
        } catch (J$e) {
            J$.Ex(6584449, J$e);
        } finally {
            if (J$.Sr(6584457))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

