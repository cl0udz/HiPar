J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(4560513, '/home/james/nodejs/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/call_stack_test.js');
            function checkTaskParams() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4560481, arguments.callee, this, arguments);
                            arguments = J$.N(4560489, 'arguments', arguments, true, false, false);
                            J$.M(4560473, J$.R(4560113, 'inspector', inspector, false, true), 'sanitize', false)(J$.R(4560121, 'schema', schema, false, true), J$.R(4560129, 'task', task, false, true), J$.T(4560465, function (err, sanitize) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(4560433, arguments.callee, this, arguments);
                                            arguments = J$.N(4560441, 'arguments', arguments, true, false, false);
                                            err = J$.N(4560449, 'err', err, true, false, false);
                                            sanitize = J$.N(4560457, 'sanitize', sanitize, true, false, false);
                                            J$.M(4560153, J$.I(typeof console === 'undefined' ? console = J$.R(4560137, 'console', undefined, true, true) : console = J$.R(4560137, 'console', console, true, true)), 'log', false)(J$.R(4560145, 'sanitize', sanitize, false, false));
                                            J$.M(4560425, J$.R(4560161, 'inspector', inspector, false, true), 'validate', false)(J$.R(4560169, 'schema', schema, false, true), J$.R(4560177, 'task', task, false, true), J$.T(4560417, function (err, result) {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(4560385, arguments.callee, this, arguments);
                                                            arguments = J$.N(4560393, 'arguments', arguments, true, false, false);
                                                            err = J$.N(4560401, 'err', err, true, false, false);
                                                            result = J$.N(4560409, 'result', result, true, false, false);
                                                            J$.M(4560201, J$.I(typeof console === 'undefined' ? console = J$.R(4560185, 'console', undefined, true, true) : console = J$.R(4560185, 'console', console, true, true)), 'log', false)(J$.R(4560193, 'result', result, false, false));
                                                            J$.M(4560233, J$.I(typeof console === 'undefined' ? console = J$.R(4560209, 'console', undefined, true, true) : console = J$.R(4560209, 'console', console, true, true)), 'log', false)(J$.T(4560217, 'Validator result', 21, false), J$.R(4560225, 'result', result, false, false));
                                                            if (J$.C(240800, J$.U(435682, '!', J$.G(4560249, J$.R(4560241, 'result', result, false, false), 'valid')))) {
                                                                J$.M(4560297, J$.I(typeof console === 'undefined' ? console = J$.R(4560257, 'console', undefined, true, true) : console = J$.R(4560257, 'console', console, true, true)), 'log', false)(J$.T(4560265, 'Use propalo', 21, false), J$.T(4560289, { info: J$.M(4560281, J$.R(4560273, 'result', result, false, false), 'format', false)() }, 11, false));
                                                            } else {
                                                                J$.M(4560321, J$.I(typeof console === 'undefined' ? console = J$.R(4560305, 'console', undefined, true, true) : console = J$.R(4560305, 'console', console, true, true)), 'log', false)(J$.T(4560313, 'Ok', 21, false));
                                                                J$.M(4560377, J$.I(typeof console === 'undefined' ? console = J$.R(4560329, 'console', undefined, true, true) : console = J$.R(4560329, 'console', console, true, true)), 'log', false)(J$.G(4560369, J$.G(4560361, J$.G(4560345, J$.R(4560337, 'task', task, false, true), 'inputs'), J$.T(4560353, 0, 22, false)), 'inputOptions'));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(4560561, J$e);
                                                        } finally {
                                                            if (J$.Fr(4560569))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(4560577, J$e);
                                        } finally {
                                            if (J$.Fr(4560585))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(4560593, J$e);
                        } finally {
                            if (J$.Fr(4560601))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4560521, 'inspector', inspector, false, false, false);
            J$.N(4560529, 'task', task, false, false, false);
            J$.N(4560537, 'schema', schema, false, false, false);
            checkTaskParams = J$.N(4560553, 'checkTaskParams', J$.T(4560545, checkTaskParams, 12, false), true, false, false);
            if (J$.C(240792, J$.B(435674, '===', J$.U(435666, 'typeof', J$.I(typeof require === 'undefined' ? require = J$.R(4559449, 'require', undefined, true, true) : require = J$.R(4559449, 'require', require, true, true))), J$.T(4559457, 'function', 21, false)))) {
                var inspector = J$.W(4559489, 'inspector', J$.F(4559481, J$.I(typeof require === 'undefined' ? require = J$.R(4559465, 'require', undefined, true, true) : require = J$.R(4559465, 'require', require, true, true)), false)(J$.T(4559473, '../', 21, false)), inspector, false, true);
            }
            var task = J$.W(4559953, 'task', J$.T(4559945, {
                inputs: J$.T(4559937, [J$.T(4559929, {
                        trash: J$.T(4559497, 'fsdfsf', 21, false),
                        inputOptions: J$.T(4559921, [
                            J$.T(4559505, '-flags +loop+mv4', 21, false),
                            J$.T(4559513, '-cmp +chroma', 21, false),
                            J$.T(4559521, '-partitions +parti4x4+parti8x8+partp4x4+partp8x8+partb8x8', 21, false),
                            J$.T(4559529, '-coder 0', 21, false),
                            J$.T(4559537, '-me_method hex', 21, false),
                            J$.T(4559545, '-subq 7', 21, false),
                            J$.T(4559553, '-me_range 16', 21, false),
                            J$.T(4559561, '-bf 0', 21, false),
                            J$.T(4559569, '-keyint_min 25', 21, false),
                            J$.T(4559577, '-sc_threshold 40', 21, false),
                            J$.T(4559585, '-i_qfactor 0.71', 21, false),
                            J$.T(4559593, '-qmin 10', 21, false),
                            J$.T(4559601, '-qmax 51', 21, false),
                            J$.T(4559609, '-qdiff 4', 21, false),
                            J$.T(4559617, '-trellis 1', 21, false),
                            J$.T(4559625, '-level 30', 21, false),
                            J$.T(4559633, '-refs 5', 21, false),
                            J$.T(4559641, '-wpredp 0', 21, false),
                            J$.T(4559649, '-coder 0', 21, false),
                            J$.T(4559657, '-me_method hex', 21, false),
                            J$.T(4559665, '-subq 7', 21, false),
                            J$.T(4559673, '-me_range 16', 21, false),
                            J$.T(4559681, '-bf 0', 21, false),
                            J$.T(4559689, '-keyint_min 25', 21, false),
                            J$.T(4559697, '-sc_threshold 40', 21, false),
                            J$.T(4559705, '-i_qfactor 0.71', 21, false),
                            J$.T(4559713, '-qmin 10', 21, false),
                            J$.T(4559721, '-qmax 51', 21, false),
                            J$.T(4559729, '-qdiff 4', 21, false),
                            J$.T(4559737, '-trellis 1', 21, false),
                            J$.T(4559745, '-level 30', 21, false),
                            J$.T(4559753, '-refs 5', 21, false),
                            J$.T(4559761, '-wpredp 0', 21, false),
                            J$.T(4559769, '-coder 0', 21, false),
                            J$.T(4559777, '-me_method hex', 21, false),
                            J$.T(4559785, '-subq 7', 21, false),
                            J$.T(4559793, '-me_range 16', 21, false),
                            J$.T(4559801, '-bf 0', 21, false),
                            J$.T(4559809, '-keyint_min 25', 21, false),
                            J$.T(4559817, '-sc_threshold 40', 21, false),
                            J$.T(4559825, '-i_qfactor 0.71', 21, false),
                            J$.T(4559833, '-qmin 10', 21, false),
                            J$.T(4559841, '-qmax 51', 21, false),
                            J$.T(4559849, '-qdiff 4', 21, false),
                            J$.T(4559857, '-trellis 1', 21, false),
                            J$.T(4559865, '-level 30', 21, false),
                            J$.T(4559873, '-refs 5', 21, false),
                            J$.T(4559881, '-wpredp 0', 21, false),
                            J$.T(4559889, '-coder 0', 21, false),
                            J$.T(4559897, '-me_method hex', 21, false),
                            J$.T(4559905, '-subq 7', 21, false),
                            J$.T(4559913, 'last string and all crushed.', 21, false)
                        ], 10, false)
                    }, 11, false)], 10, false)
            }, 11, false), task, false, true);
            var schema = J$.W(4560105, 'schema', J$.T(4560097, {
                type: J$.T(4559961, 'object', 21, false),
                strict: J$.T(4559969, true, 23, false),
                properties: J$.T(4560089, {
                    inputs: J$.T(4560081, {
                        type: J$.T(4559977, 'array', 21, false),
                        items: J$.T(4560073, {
                            type: J$.T(4559985, 'object', 21, false),
                            optional: J$.T(4559993, true, 23, false),
                            strict: J$.T(4560001, true, 23, false),
                            properties: J$.T(4560065, {
                                inputOptions: J$.T(4560057, {
                                    type: J$.T(4560009, 'array', 21, false),
                                    optional: J$.T(4560017, true, 23, false),
                                    items: J$.T(4560049, {
                                        type: J$.T(4560025, 'string', 21, false),
                                        rules: J$.T(4560041, [J$.T(4560033, 'trim', 21, false)], 10, false)
                                    }, 11, false)
                                }, 11, false)
                            }, 11, false)
                        }, 11, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            J$.F(4560505, J$.R(4560497, 'checkTaskParams', checkTaskParams, false, true), false)();
        } catch (J$e) {
            J$.Ex(4560609, J$e);
        } finally {
            if (J$.Sr(4560617))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

