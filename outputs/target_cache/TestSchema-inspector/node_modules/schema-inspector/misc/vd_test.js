J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4723137, '/home/james/nodejs/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/vd_test.js');
            J$.N(4723145, 'SchemaInspector', SchemaInspector, false, false, false);
            J$.N(4723153, 'schema', schema, false, false, false);
            J$.N(4723161, 'obj', obj, false, false, false);
            J$.N(4723169, 'vdr', vdr, false, false, false);
            J$.N(4723177, 'result', result, false, false, false);
            if (J$.C(255656, J$.B(451314, '===', J$.U(451306, 'typeof', J$.I(typeof require === 'undefined' ? require = J$.R(4722569, 'require', undefined, true, true) : require = J$.R(4722569, 'require', require, true, true))), J$.T(4722577, 'function', 21, false)))) {
                var SchemaInspector = J$.W(4722609, 'SchemaInspector', J$.F(4722601, J$.I(typeof require === 'undefined' ? require = J$.R(4722585, 'require', undefined, true, true) : require = J$.R(4722585, 'require', require, true, true)), false)(J$.T(4722593, '../', 21, false)), SchemaInspector, false, true);
            }
            J$.M(4722761, J$.G(4722625, J$.R(4722617, 'SchemaInspector', SchemaInspector, false, true), 'Validation'), 'extend', false)(J$.T(4722753, {
                divisibleBy: J$.T(4722745, function (schema, candidate) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(4722705, arguments.callee, this, arguments);
                                arguments = J$.N(4722713, 'arguments', arguments, true, false, false);
                                schema = J$.N(4722721, 'schema', schema, true, false, false);
                                candidate = J$.N(4722729, 'candidate', candidate, true, false, false);
                                J$.N(4722737, 'dvb', dvb, false, false, false);
                                var dvb = J$.W(4722649, 'dvb', J$.G(4722641, J$.R(4722633, 'schema', schema, false, false), '$divisibleBy'), dvb, false, false);
                                if (J$.C(255664, J$.B(451322, '%', J$.R(4722657, 'candidate', candidate, false, false), J$.R(4722665, 'dvb', dvb, false, false)))) {
                                    J$.M(4722697, J$.R(4722673, 'this', this, false, false), 'report', false)(J$.B(451330, '+', J$.T(4722681, 'must be divisible by ', 21, false), J$.R(4722689, 'dvb', dvb, false, false)));
                                }
                            } catch (J$e) {
                                J$.Ex(4723185, J$e);
                            } finally {
                                if (J$.Fr(4723193))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            var schema = J$.W(4722809, 'schema', J$.T(4722801, {
                type: J$.T(4722769, 'array', 21, false),
                items: J$.T(4722793, {
                    type: J$.T(4722777, 'number', 21, false),
                    $divisibleBy: J$.T(4722785, 5, 22, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            var obj = J$.W(4722873, 'obj', J$.T(4722865, [
                J$.T(4722817, 0, 22, false),
                J$.T(4722825, 5, 22, false),
                J$.T(4722833, 10, 22, false),
                J$.T(4722841, 15, 22, false),
                J$.T(4722849, 17, 22, false),
                J$.T(4722857, 20, 22, false)
            ], 10, false), obj, false, true);
            var vdr = J$.W(4722905, 'vdr', J$.M(4722897, J$.R(4722881, 'SchemaInspector', SchemaInspector, false, true), 'newValidation', false)(J$.R(4722889, 'schema', schema, false, true)), vdr, false, true);
            J$.M(4723025, J$.R(4722913, 'vdr', vdr, false, true), 'validate', false)(J$.R(4722921, 'obj', obj, false, true), J$.T(4723017, function (err, r) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4722985, arguments.callee, this, arguments);
                            arguments = J$.N(4722993, 'arguments', arguments, true, false, false);
                            err = J$.N(4723001, 'err', err, true, false, false);
                            r = J$.N(4723009, 'r', r, true, false, false);
                            J$.M(4722945, J$.I(typeof console === 'undefined' ? console = J$.R(4722929, 'console', undefined, true, true) : console = J$.R(4722929, 'console', console, true, true)), 'log', false)(J$.R(4722937, 'r', r, false, false));
                            J$.M(4722977, J$.I(typeof console === 'undefined' ? console = J$.R(4722953, 'console', undefined, true, true) : console = J$.R(4722953, 'console', console, true, true)), 'log', false)(J$.M(4722969, J$.R(4722961, 'r', r, false, false), 'format', false)());
                        } catch (J$e) {
                            J$.Ex(4723201, J$e);
                        } finally {
                            if (J$.Fr(4723209))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var schema = J$.W(4723049, 'schema', J$.T(4723041, { strict: J$.T(4723033, true, 23, false) }, 11, false), schema, false, true);
            var obj = J$.W(4723065, 'obj', J$.T(4723057, {}, 11, false), obj, false, true);
            var result = J$.W(4723105, 'result', J$.M(4723097, J$.R(4723073, 'SchemaInspector', SchemaInspector, false, true), 'validate', false)(J$.R(4723081, 'schema', schema, false, true), J$.R(4723089, 'obj', obj, false, true)), result, false, true);
            J$.M(4723129, J$.I(typeof console === 'undefined' ? console = J$.R(4723113, 'console', undefined, true, true) : console = J$.R(4723113, 'console', console, true, true)), 'log', false)(J$.R(4723121, 'result', result, false, true));
        } catch (J$e) {
            J$.Ex(4723217, J$e);
        } finally {
            if (J$.Sr(4723225))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

