J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(789793, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/vd_test.js');
            J$.N(789801, 'SchemaInspector', SchemaInspector, false, false, false);
            J$.N(789809, 'schema', schema, false, false, false);
            J$.N(789817, 'obj', obj, false, false, false);
            J$.N(789825, 'vdr', vdr, false, false, false);
            J$.N(789833, 'result', result, false, false, false);
            if (J$.C(49048, J$.B(67522, '===', J$.U(67514, 'typeof', J$.I(typeof require === 'undefined' ? require = J$.R(789225, 'require', undefined, true, true) : require = J$.R(789225, 'require', require, true, true))), J$.T(789233, 'function', 21, false)))) {
                var SchemaInspector = J$.W(789265, 'SchemaInspector', J$.F(789257, J$.I(typeof require === 'undefined' ? require = J$.R(789241, 'require', undefined, true, true) : require = J$.R(789241, 'require', require, true, true)), false)(J$.T(789249, '../', 21, false)), SchemaInspector, false, true);
            }
            J$.M(789417, J$.G(789281, J$.R(789273, 'SchemaInspector', SchemaInspector, false, true), 'Validation'), 'extend', false)(J$.T(789409, {
                divisibleBy: J$.T(789401, function (schema, candidate) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(789361, arguments.callee, this, arguments);
                                arguments = J$.N(789369, 'arguments', arguments, true, false, false);
                                schema = J$.N(789377, 'schema', schema, true, false, false);
                                candidate = J$.N(789385, 'candidate', candidate, true, false, false);
                                J$.N(789393, 'dvb', dvb, false, false, false);
                                var dvb = J$.W(789305, 'dvb', J$.G(789297, J$.R(789289, 'schema', schema, false, false), '$divisibleBy'), dvb, false, false);
                                if (J$.C(49056, J$.B(67530, '%', J$.R(789313, 'candidate', candidate, false, false), J$.R(789321, 'dvb', dvb, false, false)))) {
                                    J$.M(789353, J$.R(789329, 'this', this, false, false), 'report', false)(J$.B(67538, '+', J$.T(789337, 'must be divisible by ', 21, false), J$.R(789345, 'dvb', dvb, false, false)));
                                }
                            } catch (J$e) {
                                J$.Ex(789841, J$e);
                            } finally {
                                if (J$.Fr(789849))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            var schema = J$.W(789465, 'schema', J$.T(789457, {
                type: J$.T(789425, 'array', 21, false),
                items: J$.T(789449, {
                    type: J$.T(789433, 'number', 21, false),
                    $divisibleBy: J$.T(789441, 5, 22, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            var obj = J$.W(789529, 'obj', J$.T(789521, [
                J$.T(789473, 0, 22, false),
                J$.T(789481, 5, 22, false),
                J$.T(789489, 10, 22, false),
                J$.T(789497, 15, 22, false),
                J$.T(789505, 17, 22, false),
                J$.T(789513, 20, 22, false)
            ], 10, false), obj, false, true);
            var vdr = J$.W(789561, 'vdr', J$.M(789553, J$.R(789537, 'SchemaInspector', SchemaInspector, false, true), 'newValidation', false)(J$.R(789545, 'schema', schema, false, true)), vdr, false, true);
            J$.M(789681, J$.R(789569, 'vdr', vdr, false, true), 'validate', false)(J$.R(789577, 'obj', obj, false, true), J$.T(789673, function (err, r) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(789641, arguments.callee, this, arguments);
                            arguments = J$.N(789649, 'arguments', arguments, true, false, false);
                            err = J$.N(789657, 'err', err, true, false, false);
                            r = J$.N(789665, 'r', r, true, false, false);
                            J$.M(789601, J$.I(typeof console === 'undefined' ? console = J$.R(789585, 'console', undefined, true, true) : console = J$.R(789585, 'console', console, true, true)), 'log', false)(J$.R(789593, 'r', r, false, false));
                            J$.M(789633, J$.I(typeof console === 'undefined' ? console = J$.R(789609, 'console', undefined, true, true) : console = J$.R(789609, 'console', console, true, true)), 'log', false)(J$.M(789625, J$.R(789617, 'r', r, false, false), 'format', false)());
                        } catch (J$e) {
                            J$.Ex(789857, J$e);
                        } finally {
                            if (J$.Fr(789865))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var schema = J$.W(789705, 'schema', J$.T(789697, { strict: J$.T(789689, true, 23, false) }, 11, false), schema, false, true);
            var obj = J$.W(789721, 'obj', J$.T(789713, {}, 11, false), obj, false, true);
            var result = J$.W(789761, 'result', J$.M(789753, J$.R(789729, 'SchemaInspector', SchemaInspector, false, true), 'validate', false)(J$.R(789737, 'schema', schema, false, true), J$.R(789745, 'obj', obj, false, true)), result, false, true);
            J$.M(789785, J$.I(typeof console === 'undefined' ? console = J$.R(789769, 'console', undefined, true, true) : console = J$.R(789769, 'console', console, true, true)), 'log', false)(J$.R(789777, 'result', result, false, true));
        } catch (J$e) {
            J$.Ex(789873, J$e);
        } finally {
            if (J$.Sr(789881))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

