J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(789145, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/validDate.js');
            J$.N(789153, 'inspector', inspector, false, false, false);
            J$.N(789161, 'customValidation', customValidation, false, false, false);
            J$.N(789169, 'data', data, false, false, false);
            J$.N(789177, 'schema', schema, false, false, false);
            J$.N(789185, 'result', result, false, false, false);
            var inspector = J$.W(788737, 'inspector', J$.F(788729, J$.I(typeof require === 'undefined' ? require = J$.R(788713, 'require', undefined, true, true) : require = J$.R(788713, 'require', require, true, true)), false)(J$.T(788721, '../', 21, false)), inspector, false, true);
            var customValidation = J$.W(788921, 'customValidation', J$.T(788913, {
                validDate: J$.T(788905, function (schema, date) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(788873, arguments.callee, this, arguments);
                                arguments = J$.N(788881, 'arguments', arguments, true, false, false);
                                schema = J$.N(788889, 'schema', schema, true, false, false);
                                date = J$.N(788897, 'date', date, true, false, false);
                                if (J$.C(49040, J$.C(49032, J$.C(49024, J$.B(67498, '===', J$.G(788753, J$.R(788745, 'schema', schema, false, false), '$validDate'), J$.T(788761, true, 23, false))) ? J$.B(67506, '===', J$.M(788801, J$.G(788785, J$.G(788777, J$.I(typeof Object === 'undefined' ? Object = J$.R(788769, 'Object', undefined, true, true) : Object = J$.R(788769, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(788793, 'date', date, false, false)), J$.T(788809, '[object Date]', 21, false)) : J$._()) ? J$.F(788841, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(788817, 'isNaN', undefined, true, true) : isNaN = J$.R(788817, 'isNaN', isNaN, true, true)), false)(J$.M(788833, J$.R(788825, 'date', date, false, false), 'getTime', false)()) : J$._())) {
                                    J$.M(788865, J$.R(788849, 'this', this, false, false), 'report', false)(J$.T(788857, 'must be a valid date', 21, false));
                                }
                            } catch (J$e) {
                                J$.Ex(789193, J$e);
                            } finally {
                                if (J$.Fr(789201))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), customValidation, false, true);
            J$.M(788953, J$.G(788937, J$.R(788929, 'inspector', inspector, false, true), 'Validation'), 'extend', false)(J$.R(788945, 'customValidation', customValidation, false, true));
            var data = J$.W(789017, 'data', J$.T(789009, {
                validDate: J$.F(788969, J$.I(typeof Date === 'undefined' ? Date = J$.R(788961, 'Date', undefined, true, true) : Date = J$.R(788961, 'Date', Date, true, true)), true)(),
                invalidDate: J$.F(788993, J$.I(typeof Date === 'undefined' ? Date = J$.R(788977, 'Date', undefined, true, true) : Date = J$.R(788977, 'Date', Date, true, true)), true)(J$.T(788985, 'invalid', 21, false)),
                noDate: J$.T(789001, 'hello!', 21, false)
            }, 11, false), data, false, true);
            var schema = J$.W(789065, 'schema', J$.T(789057, {
                type: J$.T(789025, 'object', 21, false),
                items: J$.T(789049, {
                    type: J$.T(789033, 'date', 21, false),
                    $validDate: J$.T(789041, true, 23, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            var result = J$.W(789105, 'result', J$.M(789097, J$.R(789073, 'inspector', inspector, false, true), 'validate', false)(J$.R(789081, 'schema', schema, false, true), J$.R(789089, 'data', data, false, true)), result, false, true);
            J$.M(789137, J$.I(typeof console === 'undefined' ? console = J$.R(789113, 'console', undefined, true, true) : console = J$.R(789113, 'console', console, true, true)), 'log', false)(J$.M(789129, J$.R(789121, 'result', result, false, true), 'format', false)());
        } catch (J$e) {
            J$.Ex(789209, J$e);
        } finally {
            if (J$.Sr(789217))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

