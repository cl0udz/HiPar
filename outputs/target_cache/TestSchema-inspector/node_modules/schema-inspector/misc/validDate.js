J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4722489, '/home/james/nodejs/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/validDate.js');
            J$.N(4722497, 'inspector', inspector, false, false, false);
            J$.N(4722505, 'customValidation', customValidation, false, false, false);
            J$.N(4722513, 'data', data, false, false, false);
            J$.N(4722521, 'schema', schema, false, false, false);
            J$.N(4722529, 'result', result, false, false, false);
            var inspector = J$.W(4722081, 'inspector', J$.F(4722073, J$.I(typeof require === 'undefined' ? require = J$.R(4722057, 'require', undefined, true, true) : require = J$.R(4722057, 'require', require, true, true)), false)(J$.T(4722065, '../', 21, false)), inspector, false, true);
            var customValidation = J$.W(4722265, 'customValidation', J$.T(4722257, {
                validDate: J$.T(4722249, function (schema, date) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(4722217, arguments.callee, this, arguments);
                                arguments = J$.N(4722225, 'arguments', arguments, true, false, false);
                                schema = J$.N(4722233, 'schema', schema, true, false, false);
                                date = J$.N(4722241, 'date', date, true, false, false);
                                if (J$.C(255648, J$.C(255640, J$.C(255632, J$.B(451290, '===', J$.G(4722097, J$.R(4722089, 'schema', schema, false, false), '$validDate'), J$.T(4722105, true, 23, false))) ? J$.B(451298, '===', J$.M(4722145, J$.G(4722129, J$.G(4722121, J$.I(typeof Object === 'undefined' ? Object = J$.R(4722113, 'Object', undefined, true, true) : Object = J$.R(4722113, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(4722137, 'date', date, false, false)), J$.T(4722153, '[object Date]', 21, false)) : J$._()) ? J$.F(4722185, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(4722161, 'isNaN', undefined, true, true) : isNaN = J$.R(4722161, 'isNaN', isNaN, true, true)), false)(J$.M(4722177, J$.R(4722169, 'date', date, false, false), 'getTime', false)()) : J$._())) {
                                    J$.M(4722209, J$.R(4722193, 'this', this, false, false), 'report', false)(J$.T(4722201, 'must be a valid date', 21, false));
                                }
                            } catch (J$e) {
                                J$.Ex(4722537, J$e);
                            } finally {
                                if (J$.Fr(4722545))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), customValidation, false, true);
            J$.M(4722297, J$.G(4722281, J$.R(4722273, 'inspector', inspector, false, true), 'Validation'), 'extend', false)(J$.R(4722289, 'customValidation', customValidation, false, true));
            var data = J$.W(4722361, 'data', J$.T(4722353, {
                validDate: J$.F(4722313, J$.I(typeof Date === 'undefined' ? Date = J$.R(4722305, 'Date', undefined, true, true) : Date = J$.R(4722305, 'Date', Date, true, true)), true)(),
                invalidDate: J$.F(4722337, J$.I(typeof Date === 'undefined' ? Date = J$.R(4722321, 'Date', undefined, true, true) : Date = J$.R(4722321, 'Date', Date, true, true)), true)(J$.T(4722329, 'invalid', 21, false)),
                noDate: J$.T(4722345, 'hello!', 21, false)
            }, 11, false), data, false, true);
            var schema = J$.W(4722409, 'schema', J$.T(4722401, {
                type: J$.T(4722369, 'object', 21, false),
                items: J$.T(4722393, {
                    type: J$.T(4722377, 'date', 21, false),
                    $validDate: J$.T(4722385, true, 23, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            var result = J$.W(4722449, 'result', J$.M(4722441, J$.R(4722417, 'inspector', inspector, false, true), 'validate', false)(J$.R(4722425, 'schema', schema, false, true), J$.R(4722433, 'data', data, false, true)), result, false, true);
            J$.M(4722481, J$.I(typeof console === 'undefined' ? console = J$.R(4722457, 'console', undefined, true, true) : console = J$.R(4722457, 'console', console, true, true)), 'log', false)(J$.M(4722473, J$.R(4722465, 'result', result, false, true), 'format', false)());
        } catch (J$e) {
            J$.Ex(4722553, J$e);
        } finally {
            if (J$.Sr(4722561))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

