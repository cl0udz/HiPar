J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(584977, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/custom-type.js');
            J$.N(584985, 'inspector', inspector, false, false, false);
            J$.N(584993, 'personValidation', personValidation, false, false, false);
            J$.N(585001, 'customValidation', customValidation, false, false, false);
            J$.N(585009, 'data', data, false, false, false);
            J$.N(585017, 'schema', schema, false, false, false);
            J$.N(585025, 'result', result, false, false, false);
            var inspector = J$.W(584433, 'inspector', J$.F(584425, J$.I(typeof require === 'undefined' ? require = J$.R(584409, 'require', undefined, true, true) : require = J$.R(584409, 'require', require, true, true)), false)(J$.T(584417, '../', 21, false)), inspector, false, true);
            var personValidation = J$.W(584545, 'personValidation', J$.T(584537, {
                type: J$.T(584441, 'object', 21, false),
                properties: J$.T(584529, {
                    firstname: J$.T(584465, {
                        type: J$.T(584449, 'string', 21, false),
                        minLength: J$.T(584457, 1, 22, false)
                    }, 11, false),
                    lastname: J$.T(584489, {
                        type: J$.T(584473, 'string', 21, false),
                        minLength: J$.T(584481, 1, 22, false)
                    }, 11, false),
                    age: J$.T(584521, {
                        type: J$.T(584497, 'integer', 21, false),
                        gt: J$.T(584505, 0, 22, false),
                        lte: J$.T(584513, 120, 22, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false), personValidation, false, true);
            var customValidation = J$.W(584785, 'customValidation', J$.T(584777, {
                type: J$.T(584769, function (schema, candidate) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(584729, arguments.callee, this, arguments);
                                arguments = J$.N(584737, 'arguments', arguments, true, false, false);
                                schema = J$.N(584745, 'schema', schema, true, false, false);
                                candidate = J$.N(584753, 'candidate', candidate, true, false, false);
                                J$.N(584761, 'result', result, false, false, false);
                                var result;
                                if (J$.C(31928, J$.B(48778, '===', J$.G(584561, J$.R(584553, 'schema', schema, false, false), '$type'), J$.T(584569, 'person', 21, false))))
                                    result = J$.W(584609, 'result', J$.M(584601, J$.R(584577, 'inspector', inspector, false, true), 'validate', false)(J$.R(584585, 'personValidation', personValidation, false, true), J$.R(584593, 'candidate', candidate, false, false)), result, false, false);
                                else
                                    result = J$.W(584665, 'result', J$.M(584657, J$.R(584617, 'inspector', inspector, false, true), 'validate', false)(J$.T(584641, { type: J$.G(584633, J$.R(584625, 'schema', schema, false, false), '$type') }, 11, false), J$.R(584649, 'candidate', candidate, false, false)), result, false, false);
                                if (J$.C(31936, J$.U(48786, '!', J$.G(584681, J$.R(584673, 'result', result, false, false), 'valid'))))
                                    return J$.Rt(584721, J$.M(584713, J$.R(584689, 'this', this, false, false), 'report', false)(J$.M(584705, J$.R(584697, 'result', result, false, false), 'format', false)()));
                            } catch (J$e) {
                                J$.Ex(585033, J$e);
                            } finally {
                                if (J$.Fr(585041))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), customValidation, false, true);
            J$.M(584817, J$.G(584801, J$.R(584793, 'inspector', inspector, false, true), 'Validation'), 'extend', false)(J$.R(584809, 'customValidation', customValidation, false, true));
            var data = J$.W(584857, 'data', J$.T(584849, {
                firstname: J$.T(584825, ' sebastien ', 21, false),
                lastname: J$.T(584833, 'chopin  ', 21, false),
                age: J$.T(584841, '21', 21, false)
            }, 11, false), data, false, true);
            var schema = J$.W(584881, 'schema', J$.T(584873, { $type: J$.T(584865, 'person', 21, false) }, 11, false), schema, false, true);
            var result = J$.W(584921, 'result', J$.M(584913, J$.R(584889, 'inspector', inspector, false, true), 'validate', false)(J$.R(584897, 'schema', schema, false, true), J$.R(584905, 'data', data, false, true)), result, false, true);
            if (J$.C(31944, J$.U(48794, '!', J$.G(584937, J$.R(584929, 'result', result, false, true), 'valid'))))
                J$.M(584969, J$.I(typeof console === 'undefined' ? console = J$.R(584945, 'console', undefined, true, true) : console = J$.R(584945, 'console', console, true, true)), 'log', false)(J$.M(584961, J$.R(584953, 'result', result, false, true), 'format', false)());
        } catch (J$e) {
            J$.Ex(585049, J$e);
        } finally {
            if (J$.Sr(585057))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

