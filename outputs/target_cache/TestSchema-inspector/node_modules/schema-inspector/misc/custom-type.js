J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4561193, '/home/james/nodejs/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/custom-type.js');
            J$.N(4561201, 'inspector', inspector, false, false, false);
            J$.N(4561209, 'personValidation', personValidation, false, false, false);
            J$.N(4561217, 'customValidation', customValidation, false, false, false);
            J$.N(4561225, 'data', data, false, false, false);
            J$.N(4561233, 'schema', schema, false, false, false);
            J$.N(4561241, 'result', result, false, false, false);
            var inspector = J$.W(4560649, 'inspector', J$.F(4560641, J$.I(typeof require === 'undefined' ? require = J$.R(4560625, 'require', undefined, true, true) : require = J$.R(4560625, 'require', require, true, true)), false)(J$.T(4560633, '../', 21, false)), inspector, false, true);
            var personValidation = J$.W(4560761, 'personValidation', J$.T(4560753, {
                type: J$.T(4560657, 'object', 21, false),
                properties: J$.T(4560745, {
                    firstname: J$.T(4560681, {
                        type: J$.T(4560665, 'string', 21, false),
                        minLength: J$.T(4560673, 1, 22, false)
                    }, 11, false),
                    lastname: J$.T(4560705, {
                        type: J$.T(4560689, 'string', 21, false),
                        minLength: J$.T(4560697, 1, 22, false)
                    }, 11, false),
                    age: J$.T(4560737, {
                        type: J$.T(4560713, 'integer', 21, false),
                        gt: J$.T(4560721, 0, 22, false),
                        lte: J$.T(4560729, 120, 22, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false), personValidation, false, true);
            var customValidation = J$.W(4561001, 'customValidation', J$.T(4560993, {
                type: J$.T(4560985, function (schema, candidate) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(4560945, arguments.callee, this, arguments);
                                arguments = J$.N(4560953, 'arguments', arguments, true, false, false);
                                schema = J$.N(4560961, 'schema', schema, true, false, false);
                                candidate = J$.N(4560969, 'candidate', candidate, true, false, false);
                                J$.N(4560977, 'result', result, false, false, false);
                                var result;
                                if (J$.C(240808, J$.B(435690, '===', J$.G(4560777, J$.R(4560769, 'schema', schema, false, false), '$type'), J$.T(4560785, 'person', 21, false))))
                                    result = J$.W(4560825, 'result', J$.M(4560817, J$.R(4560793, 'inspector', inspector, false, true), 'validate', false)(J$.R(4560801, 'personValidation', personValidation, false, true), J$.R(4560809, 'candidate', candidate, false, false)), result, false, false);
                                else
                                    result = J$.W(4560881, 'result', J$.M(4560873, J$.R(4560833, 'inspector', inspector, false, true), 'validate', false)(J$.T(4560857, { type: J$.G(4560849, J$.R(4560841, 'schema', schema, false, false), '$type') }, 11, false), J$.R(4560865, 'candidate', candidate, false, false)), result, false, false);
                                if (J$.C(240816, J$.U(435698, '!', J$.G(4560897, J$.R(4560889, 'result', result, false, false), 'valid'))))
                                    return J$.Rt(4560937, J$.M(4560929, J$.R(4560905, 'this', this, false, false), 'report', false)(J$.M(4560921, J$.R(4560913, 'result', result, false, false), 'format', false)()));
                            } catch (J$e) {
                                J$.Ex(4561249, J$e);
                            } finally {
                                if (J$.Fr(4561257))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), customValidation, false, true);
            J$.M(4561033, J$.G(4561017, J$.R(4561009, 'inspector', inspector, false, true), 'Validation'), 'extend', false)(J$.R(4561025, 'customValidation', customValidation, false, true));
            var data = J$.W(4561073, 'data', J$.T(4561065, {
                firstname: J$.T(4561041, ' sebastien ', 21, false),
                lastname: J$.T(4561049, 'chopin  ', 21, false),
                age: J$.T(4561057, '21', 21, false)
            }, 11, false), data, false, true);
            var schema = J$.W(4561097, 'schema', J$.T(4561089, { $type: J$.T(4561081, 'person', 21, false) }, 11, false), schema, false, true);
            var result = J$.W(4561137, 'result', J$.M(4561129, J$.R(4561105, 'inspector', inspector, false, true), 'validate', false)(J$.R(4561113, 'schema', schema, false, true), J$.R(4561121, 'data', data, false, true)), result, false, true);
            if (J$.C(240824, J$.U(435706, '!', J$.G(4561153, J$.R(4561145, 'result', result, false, true), 'valid'))))
                J$.M(4561185, J$.I(typeof console === 'undefined' ? console = J$.R(4561161, 'console', undefined, true, true) : console = J$.R(4561161, 'console', console, true, true)), 'log', false)(J$.M(4561177, J$.R(4561169, 'result', result, false, true), 'format', false)());
        } catch (J$e) {
            J$.Ex(4561265, J$e);
        } finally {
            if (J$.Sr(4561273))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

