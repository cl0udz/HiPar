J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(627849, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/custom-type.js');
            J$.N(627857, 'inspector', inspector, false, false, false);
            J$.N(627865, 'personValidation', personValidation, false, false, false);
            J$.N(627873, 'customValidation', customValidation, false, false, false);
            J$.N(627881, 'data', data, false, false, false);
            J$.N(627889, 'schema', schema, false, false, false);
            J$.N(627897, 'result', result, false, false, false);
            var inspector = J$.W(627305, 'inspector', J$.F(627297, J$.I(typeof require === 'undefined' ? require = J$.R(627281, 'require', undefined, true, true) : require = J$.R(627281, 'require', require, true, true)), false)(J$.T(627289, '../', 21, false)), inspector, false, true);
            var personValidation = J$.W(627417, 'personValidation', J$.T(627409, {
                type: J$.T(627313, 'object', 21, false),
                properties: J$.T(627401, {
                    firstname: J$.T(627337, {
                        type: J$.T(627321, 'string', 21, false),
                        minLength: J$.T(627329, 1, 22, false)
                    }, 11, false),
                    lastname: J$.T(627361, {
                        type: J$.T(627345, 'string', 21, false),
                        minLength: J$.T(627353, 1, 22, false)
                    }, 11, false),
                    age: J$.T(627393, {
                        type: J$.T(627369, 'integer', 21, false),
                        gt: J$.T(627377, 0, 22, false),
                        lte: J$.T(627385, 120, 22, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false), personValidation, false, true);
            var customValidation = J$.W(627657, 'customValidation', J$.T(627649, {
                type: J$.T(627641, function (schema, candidate) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(627601, arguments.callee, this, arguments);
                                arguments = J$.N(627609, 'arguments', arguments, true, false, false);
                                schema = J$.N(627617, 'schema', schema, true, false, false);
                                candidate = J$.N(627625, 'candidate', candidate, true, false, false);
                                J$.N(627633, 'result', result, false, false, false);
                                var result;
                                if (J$.C(34200, J$.B(51898, '===', J$.G(627433, J$.R(627425, 'schema', schema, false, false), '$type'), J$.T(627441, 'person', 21, false))))
                                    result = J$.W(627481, 'result', J$.M(627473, J$.R(627449, 'inspector', inspector, false, true), 'validate', false)(J$.R(627457, 'personValidation', personValidation, false, true), J$.R(627465, 'candidate', candidate, false, false)), result, false, false);
                                else
                                    result = J$.W(627537, 'result', J$.M(627529, J$.R(627489, 'inspector', inspector, false, true), 'validate', false)(J$.T(627513, { type: J$.G(627505, J$.R(627497, 'schema', schema, false, false), '$type') }, 11, false), J$.R(627521, 'candidate', candidate, false, false)), result, false, false);
                                if (J$.C(34208, J$.U(51906, '!', J$.G(627553, J$.R(627545, 'result', result, false, false), 'valid'))))
                                    return J$.Rt(627593, J$.M(627585, J$.R(627561, 'this', this, false, false), 'report', false)(J$.M(627577, J$.R(627569, 'result', result, false, false), 'format', false)()));
                            } catch (J$e) {
                                J$.Ex(627905, J$e);
                            } finally {
                                if (J$.Fr(627913))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), customValidation, false, true);
            J$.M(627689, J$.G(627673, J$.R(627665, 'inspector', inspector, false, true), 'Validation'), 'extend', false)(J$.R(627681, 'customValidation', customValidation, false, true));
            var data = J$.W(627729, 'data', J$.T(627721, {
                firstname: J$.T(627697, ' sebastien ', 21, false),
                lastname: J$.T(627705, 'chopin  ', 21, false),
                age: J$.T(627713, '21', 21, false)
            }, 11, false), data, false, true);
            var schema = J$.W(627753, 'schema', J$.T(627745, { $type: J$.T(627737, 'person', 21, false) }, 11, false), schema, false, true);
            var result = J$.W(627793, 'result', J$.M(627785, J$.R(627761, 'inspector', inspector, false, true), 'validate', false)(J$.R(627769, 'schema', schema, false, true), J$.R(627777, 'data', data, false, true)), result, false, true);
            if (J$.C(34216, J$.U(51914, '!', J$.G(627809, J$.R(627801, 'result', result, false, true), 'valid'))))
                J$.M(627841, J$.I(typeof console === 'undefined' ? console = J$.R(627817, 'console', undefined, true, true) : console = J$.R(627817, 'console', console, true, true)), 'log', false)(J$.M(627833, J$.R(627825, 'result', result, false, true), 'format', false)());
        } catch (J$e) {
            J$.Ex(627921, J$e);
        } finally {
            if (J$.Sr(627929))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

