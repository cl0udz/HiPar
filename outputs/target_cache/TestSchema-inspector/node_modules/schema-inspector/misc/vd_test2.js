J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(747465, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/vd_test2.js');
            J$.N(747473, 'SchemaInspector', SchemaInspector, false, false, false);
            J$.N(747481, 'schema', schema, false, false, false);
            J$.N(747489, 'obj', obj, false, false, false);
            if (J$.C(46792, J$.B(64434, '===', J$.U(64426, 'typeof', J$.I(typeof require === 'undefined' ? require = J$.R(747017, 'require', undefined, true, true) : require = J$.R(747017, 'require', require, true, true))), J$.T(747025, 'function', 21, false)))) {
                var SchemaInspector = J$.W(747057, 'SchemaInspector', J$.F(747049, J$.I(typeof require === 'undefined' ? require = J$.R(747033, 'require', undefined, true, true) : require = J$.R(747033, 'require', require, true, true)), false)(J$.T(747041, '../', 21, false)), SchemaInspector, false, true);
            }
            J$.M(747193, J$.G(747073, J$.R(747065, 'SchemaInspector', SchemaInspector, false, true), 'Validation'), 'extend', false)(J$.T(747185, {
                unique: J$.T(747177, function (schema, candidate, callback) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(747137, arguments.callee, this, arguments);
                                arguments = J$.N(747145, 'arguments', arguments, true, false, false);
                                schema = J$.N(747153, 'schema', schema, true, false, false);
                                candidate = J$.N(747161, 'candidate', candidate, true, false, false);
                                callback = J$.N(747169, 'callback', callback, true, false, false);
                                J$.M(747113, J$.I(typeof console === 'undefined' ? console = J$.R(747081, 'console', undefined, true, true) : console = J$.R(747081, 'console', console, true, true)), 'log', false)(J$.G(747105, J$.G(747097, J$.R(747089, 'this', this, false, false), 'origin'), '_connection'));
                                J$.F(747129, J$.R(747121, 'callback', callback, false, false), false)();
                            } catch (J$e) {
                                J$.Ex(747497, J$e);
                            } finally {
                                if (J$.Fr(747505))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            var schema = J$.W(747241, 'schema', J$.T(747233, {
                type: J$.T(747201, 'array', 21, false),
                items: J$.T(747225, {
                    type: J$.T(747209, 'number', 21, false),
                    $unique: J$.T(747217, true, 23, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            var obj = J$.W(747305, 'obj', J$.T(747297, [
                J$.T(747249, 0, 22, false),
                J$.T(747257, 5, 22, false),
                J$.T(747265, 10, 22, false),
                J$.T(747273, 15, 22, false),
                J$.T(747281, 17, 22, false),
                J$.T(747289, 20, 22, false)
            ], 10, false), obj, false, true);
            J$.P(747329, J$.R(747313, 'obj', obj, false, true), '_connection', J$.T(747321, 'test', 21, false));
            J$.M(747457, J$.R(747337, 'SchemaInspector', SchemaInspector, false, true), 'validate', false)(J$.R(747345, 'schema', schema, false, true), J$.R(747353, 'obj', obj, false, true), J$.T(747449, function (err, r) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(747417, arguments.callee, this, arguments);
                            arguments = J$.N(747425, 'arguments', arguments, true, false, false);
                            err = J$.N(747433, 'err', err, true, false, false);
                            r = J$.N(747441, 'r', r, true, false, false);
                            J$.M(747377, J$.I(typeof console === 'undefined' ? console = J$.R(747361, 'console', undefined, true, true) : console = J$.R(747361, 'console', console, true, true)), 'log', false)(J$.R(747369, 'r', r, false, false));
                            J$.M(747409, J$.I(typeof console === 'undefined' ? console = J$.R(747385, 'console', undefined, true, true) : console = J$.R(747385, 'console', console, true, true)), 'log', false)(J$.M(747401, J$.R(747393, 'r', r, false, false), 'format', false)());
                        } catch (J$e) {
                            J$.Ex(747513, J$e);
                        } finally {
                            if (J$.Fr(747521))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(747529, J$e);
        } finally {
            if (J$.Sr(747537))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

