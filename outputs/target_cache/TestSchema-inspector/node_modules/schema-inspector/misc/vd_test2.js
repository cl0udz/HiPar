J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(790337, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/vd_test2.js');
            J$.N(790345, 'SchemaInspector', SchemaInspector, false, false, false);
            J$.N(790353, 'schema', schema, false, false, false);
            J$.N(790361, 'obj', obj, false, false, false);
            if (J$.C(49064, J$.B(67554, '===', J$.U(67546, 'typeof', J$.I(typeof require === 'undefined' ? require = J$.R(789889, 'require', undefined, true, true) : require = J$.R(789889, 'require', require, true, true))), J$.T(789897, 'function', 21, false)))) {
                var SchemaInspector = J$.W(789929, 'SchemaInspector', J$.F(789921, J$.I(typeof require === 'undefined' ? require = J$.R(789905, 'require', undefined, true, true) : require = J$.R(789905, 'require', require, true, true)), false)(J$.T(789913, '../', 21, false)), SchemaInspector, false, true);
            }
            J$.M(790065, J$.G(789945, J$.R(789937, 'SchemaInspector', SchemaInspector, false, true), 'Validation'), 'extend', false)(J$.T(790057, {
                unique: J$.T(790049, function (schema, candidate, callback) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(790009, arguments.callee, this, arguments);
                                arguments = J$.N(790017, 'arguments', arguments, true, false, false);
                                schema = J$.N(790025, 'schema', schema, true, false, false);
                                candidate = J$.N(790033, 'candidate', candidate, true, false, false);
                                callback = J$.N(790041, 'callback', callback, true, false, false);
                                J$.M(789985, J$.I(typeof console === 'undefined' ? console = J$.R(789953, 'console', undefined, true, true) : console = J$.R(789953, 'console', console, true, true)), 'log', false)(J$.G(789977, J$.G(789969, J$.R(789961, 'this', this, false, false), 'origin'), '_connection'));
                                J$.F(790001, J$.R(789993, 'callback', callback, false, false), false)();
                            } catch (J$e) {
                                J$.Ex(790369, J$e);
                            } finally {
                                if (J$.Fr(790377))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            var schema = J$.W(790113, 'schema', J$.T(790105, {
                type: J$.T(790073, 'array', 21, false),
                items: J$.T(790097, {
                    type: J$.T(790081, 'number', 21, false),
                    $unique: J$.T(790089, true, 23, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            var obj = J$.W(790177, 'obj', J$.T(790169, [
                J$.T(790121, 0, 22, false),
                J$.T(790129, 5, 22, false),
                J$.T(790137, 10, 22, false),
                J$.T(790145, 15, 22, false),
                J$.T(790153, 17, 22, false),
                J$.T(790161, 20, 22, false)
            ], 10, false), obj, false, true);
            J$.P(790201, J$.R(790185, 'obj', obj, false, true), '_connection', J$.T(790193, 'test', 21, false));
            J$.M(790329, J$.R(790209, 'SchemaInspector', SchemaInspector, false, true), 'validate', false)(J$.R(790217, 'schema', schema, false, true), J$.R(790225, 'obj', obj, false, true), J$.T(790321, function (err, r) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(790289, arguments.callee, this, arguments);
                            arguments = J$.N(790297, 'arguments', arguments, true, false, false);
                            err = J$.N(790305, 'err', err, true, false, false);
                            r = J$.N(790313, 'r', r, true, false, false);
                            J$.M(790249, J$.I(typeof console === 'undefined' ? console = J$.R(790233, 'console', undefined, true, true) : console = J$.R(790233, 'console', console, true, true)), 'log', false)(J$.R(790241, 'r', r, false, false));
                            J$.M(790281, J$.I(typeof console === 'undefined' ? console = J$.R(790257, 'console', undefined, true, true) : console = J$.R(790257, 'console', console, true, true)), 'log', false)(J$.M(790273, J$.R(790265, 'r', r, false, false), 'format', false)());
                        } catch (J$e) {
                            J$.Ex(790385, J$e);
                        } finally {
                            if (J$.Fr(790393))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(790401, J$e);
        } finally {
            if (J$.Sr(790409))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

