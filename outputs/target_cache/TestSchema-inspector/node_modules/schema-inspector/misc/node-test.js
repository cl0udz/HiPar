J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(787577, '/mnt/data/fxiao/HiPar/outputs/target_cache/TestSchema-inspector/node_modules/schema-inspector/misc/node-test.js');
            J$.N(787585, 'inspector', inspector, false, false, false);
            J$.N(787593, 'schema', schema, false, false, false);
            J$.N(787601, 'candidate', candidate, false, false, false);
            J$.N(787609, 'result', result, false, false, false);
            var inspector = J$.W(787305, 'inspector', J$.F(787297, J$.I(typeof require === 'undefined' ? require = J$.R(787281, 'require', undefined, true, true) : require = J$.R(787281, 'require', require, true, true)), false)(J$.T(787289, '../', 21, false)), inspector, false, true);
            var schema = J$.W(787393, 'schema', J$.T(787385, {
                type: J$.T(787313, 'object', 21, false),
                properties: J$.T(787377, {
                    lorem: J$.T(787337, {
                        type: J$.T(787321, 'string', 21, false),
                        eq: J$.T(787329, 'ipsum', 21, false)
                    }, 11, false),
                    dolor: J$.T(787369, {
                        type: J$.T(787345, 'array', 21, false),
                        items: J$.T(787361, { type: J$.T(787353, 'number', 21, false) }, 11, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            var candidate = J$.W(787465, 'candidate', J$.T(787457, {
                lorem: J$.T(787401, 'not_ipsum', 21, false),
                dolor: J$.T(787449, [
                    J$.T(787409, 12, 22, false),
                    J$.T(787417, 34, 22, false),
                    J$.T(787425, 'ERROR', 21, false),
                    J$.T(787433, 45, 22, false),
                    J$.T(787441, 'INVALID', 21, false)
                ], 10, false)
            }, 11, false), candidate, false, true);
            var result = J$.W(787569, 'result', J$.M(787561, J$.R(787473, 'inspector', inspector, false, true), 'validate', false)(J$.R(787481, 'schema', schema, false, true), J$.R(787489, 'candidate', candidate, false, true), J$.T(787553, function (err, result) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(787521, arguments.callee, this, arguments);
                            arguments = J$.N(787529, 'arguments', arguments, true, false, false);
                            err = J$.N(787537, 'err', err, true, false, false);
                            result = J$.N(787545, 'result', result, true, false, false);
                            J$.M(787513, J$.I(typeof console === 'undefined' ? console = J$.R(787497, 'console', undefined, true, true) : console = J$.R(787497, 'console', console, true, true)), 'log', false)(J$.R(787505, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(787617, J$e);
                        } finally {
                            if (J$.Fr(787625))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), result, false, true);
        } catch (J$e) {
            J$.Ex(787633, J$e);
        } finally {
            if (J$.Sr(787641))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

