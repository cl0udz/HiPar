J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5141225, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_createRound.js');
            function createRound(methodName) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5141169, arguments.callee, this, arguments);
                            arguments = J$.N(5141177, 'arguments', arguments, true, false, false);
                            methodName = J$.N(5141185, 'methodName', methodName, true, false, false);
                            J$.N(5141193, 'func', func, false, false, false);
                            var func = J$.W(5140649, 'func', J$.G(5140641, J$.I(typeof Math === 'undefined' ? Math = J$.R(5140625, 'Math', undefined, true, true) : Math = J$.R(5140625, 'Math', Math, true, true)), J$.R(5140633, 'methodName', methodName, false, false)), func, false, false);
                            return J$.Rt(5141161, J$.T(5141153, function (number, precision) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(5141105, arguments.callee, this, arguments);
                                            arguments = J$.N(5141113, 'arguments', arguments, true, false, false);
                                            number = J$.N(5141121, 'number', number, true, false, false);
                                            precision = J$.N(5141129, 'precision', precision, true, false, false);
                                            J$.N(5141137, 'pair', pair, false, false, false);
                                            J$.N(5141145, 'value', value, false, false, false);
                                            number = J$.W(5140681, 'number', J$.F(5140673, J$.R(5140657, 'toNumber', toNumber, false, true), false)(J$.R(5140665, 'number', number, false, false)), number, false, false);
                                            precision = J$.W(5140761, 'precision', J$.C(273760, J$.B(513170, '==', J$.R(5140689, 'precision', precision, false, false), J$.T(5140697, null, 25, false))) ? J$.T(5140705, 0, 22, false) : J$.F(5140753, J$.R(5140713, 'nativeMin', nativeMin, false, true), false)(J$.F(5140737, J$.R(5140721, 'toInteger', toInteger, false, true), false)(J$.R(5140729, 'precision', precision, false, false)), J$.T(5140745, 292, 22, false)), precision, false, false);
                                            if (J$.C(273776, J$.C(273768, J$.R(5140769, 'precision', precision, false, false)) ? J$.F(5140793, J$.R(5140777, 'nativeIsFinite', nativeIsFinite, false, true), false)(J$.R(5140785, 'number', number, false, false)) : J$._())) {
                                                var pair = J$.W(5140929, 'pair', J$.M(5140841, J$.B(513178, '+', J$.F(5140817, J$.R(5140801, 'toString', toString, false, true), false)(J$.R(5140809, 'number', number, false, false)), J$.T(5140825, 'e', 21, false)), 'split', false)(J$.T(5140833, 'e', 21, false)), pair, false, false), value = J$.W(5140937, 'value', J$.F(5140921, J$.R(5140849, 'func', func, false, false), false)(J$.B(513210, '+', J$.B(513186, '+', J$.G(5140873, J$.R(5140857, 'pair', pair, false, false), J$.T(5140865, 0, 22, false)), J$.T(5140881, 'e', 21, false)), J$.B(513202, '+', J$.U(513194, '+', J$.G(5140905, J$.R(5140889, 'pair', pair, false, false), J$.T(5140897, 1, 22, false))), J$.R(5140913, 'precision', precision, false, false)))), value, false, false);
                                                pair = J$.W(5140993, 'pair', J$.M(5140985, J$.B(513218, '+', J$.F(5140961, J$.R(5140945, 'toString', toString, false, true), false)(J$.R(5140953, 'value', value, false, false)), J$.T(5140969, 'e', 21, false)), 'split', false)(J$.T(5140977, 'e', 21, false)), pair, false, false);
                                                return J$.Rt(5141065, J$.U(513258, '+', J$.B(513250, '+', J$.B(513226, '+', J$.G(5141017, J$.R(5141001, 'pair', pair, false, false), J$.T(5141009, 0, 22, false)), J$.T(5141025, 'e', 21, false)), J$.B(513242, '-', J$.U(513234, '+', J$.G(5141049, J$.R(5141033, 'pair', pair, false, false), J$.T(5141041, 1, 22, false))), J$.R(5141057, 'precision', precision, false, false)))));
                                            }
                                            return J$.Rt(5141097, J$.F(5141089, J$.R(5141073, 'func', func, false, false), false)(J$.R(5141081, 'number', number, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(5141297, J$e);
                                        } finally {
                                            if (J$.Fr(5141305))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(5141313, J$e);
                        } finally {
                            if (J$.Fr(5141321))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5141233, 'root', root, false, false, false);
            J$.N(5141241, 'toInteger', toInteger, false, false, false);
            J$.N(5141249, 'toNumber', toNumber, false, false, false);
            J$.N(5141257, 'toString', toString, false, false, false);
            J$.N(5141265, 'nativeIsFinite', nativeIsFinite, false, false, false);
            J$.N(5141273, 'nativeMin', nativeMin, false, false, false);
            createRound = J$.N(5141289, 'createRound', J$.T(5141281, createRound, 12, false), true, false, false);
            J$.T(5140345, 'use strict', 21, false);
            J$.F(5140369, J$.I(typeof require === 'undefined' ? require = J$.R(5140353, 'require', undefined, true, true) : require = J$.R(5140353, 'require', require, true, true)), false)(J$.T(5140361, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(5140393, J$.I(typeof require === 'undefined' ? require = J$.R(5140377, 'require', undefined, true, true) : require = J$.R(5140377, 'require', require, true, true)), false)(J$.T(5140385, 'core-js/modules/es.string.split', 21, false));
            J$.F(5140417, J$.I(typeof require === 'undefined' ? require = J$.R(5140401, 'require', undefined, true, true) : require = J$.R(5140401, 'require', require, true, true)), false)(J$.T(5140409, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(5140441, J$.I(typeof require === 'undefined' ? require = J$.R(5140425, 'require', undefined, true, true) : require = J$.R(5140425, 'require', require, true, true)), false)(J$.T(5140433, 'core-js/modules/es.string.split', 21, false));
            var root = J$.W(5140545, 'root', J$.F(5140465, J$.I(typeof require === 'undefined' ? require = J$.R(5140449, 'require', undefined, true, true) : require = J$.R(5140449, 'require', require, true, true)), false)(J$.T(5140457, './_root', 21, false)), root, false, true), toInteger = J$.W(5140553, 'toInteger', J$.F(5140489, J$.I(typeof require === 'undefined' ? require = J$.R(5140473, 'require', undefined, true, true) : require = J$.R(5140473, 'require', require, true, true)), false)(J$.T(5140481, './toInteger', 21, false)), toInteger, false, true), toNumber = J$.W(5140561, 'toNumber', J$.F(5140513, J$.I(typeof require === 'undefined' ? require = J$.R(5140497, 'require', undefined, true, true) : require = J$.R(5140497, 'require', require, true, true)), false)(J$.T(5140505, './toNumber', 21, false)), toNumber, false, true), toString = J$.W(5140569, 'toString', J$.F(5140537, J$.I(typeof require === 'undefined' ? require = J$.R(5140521, 'require', undefined, true, true) : require = J$.R(5140521, 'require', require, true, true)), false)(J$.T(5140529, './toString', 21, false)), toString, false, true);
            var nativeIsFinite = J$.W(5140609, 'nativeIsFinite', J$.G(5140585, J$.R(5140577, 'root', root, false, true), 'isFinite'), nativeIsFinite, false, true), nativeMin = J$.W(5140617, 'nativeMin', J$.G(5140601, J$.I(typeof Math === 'undefined' ? Math = J$.R(5140593, 'Math', undefined, true, true) : Math = J$.R(5140593, 'Math', Math, true, true)), 'min'), nativeMin, false, true);
            J$.P(5141217, J$.I(typeof module === 'undefined' ? module = J$.R(5141201, 'module', undefined, true, true) : module = J$.R(5141201, 'module', module, true, true)), 'exports', J$.R(5141209, 'createRound', createRound, false, true));
        } catch (J$e) {
            J$.Ex(5141329, J$e);
        } finally {
            if (J$.Sr(5141337))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

