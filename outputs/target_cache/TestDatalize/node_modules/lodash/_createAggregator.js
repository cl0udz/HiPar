J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5123985, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_createAggregator.js');
            function createAggregator(setter, initializer) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5123929, arguments.callee, this, arguments);
                            arguments = J$.N(5123937, 'arguments', arguments, true, false, false);
                            setter = J$.N(5123945, 'setter', setter, true, false, false);
                            initializer = J$.N(5123953, 'initializer', initializer, true, false, false);
                            return J$.Rt(5123921, J$.T(5123913, function (collection, iteratee) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(5123865, arguments.callee, this, arguments);
                                            arguments = J$.N(5123873, 'arguments', arguments, true, false, false);
                                            collection = J$.N(5123881, 'collection', collection, true, false, false);
                                            iteratee = J$.N(5123889, 'iteratee', iteratee, true, false, false);
                                            J$.N(5123897, 'func', func, false, false, false);
                                            J$.N(5123905, 'accumulator', accumulator, false, false, false);
                                            var func = J$.W(5123769, 'func', J$.C(272800, J$.F(5123713, J$.R(5123697, 'isArray', isArray, false, true), false)(J$.R(5123705, 'collection', collection, false, false))) ? J$.R(5123721, 'arrayAggregator', arrayAggregator, false, true) : J$.R(5123729, 'baseAggregator', baseAggregator, false, true), func, false, false), accumulator = J$.W(5123777, 'accumulator', J$.C(272808, J$.R(5123737, 'initializer', initializer, false, false)) ? J$.F(5123753, J$.R(5123745, 'initializer', initializer, false, false), false)() : J$.T(5123761, {}, 11, false), accumulator, false, false);
                                            return J$.Rt(5123857, J$.F(5123849, J$.R(5123785, 'func', func, false, false), false)(J$.R(5123793, 'collection', collection, false, false), J$.R(5123801, 'setter', setter, false, false), J$.F(5123833, J$.R(5123809, 'baseIteratee', baseIteratee, false, true), false)(J$.R(5123817, 'iteratee', iteratee, false, false), J$.T(5123825, 2, 22, false)), J$.R(5123841, 'accumulator', accumulator, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(5124041, J$e);
                                        } finally {
                                            if (J$.Fr(5124049))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(5124057, J$e);
                        } finally {
                            if (J$.Fr(5124065))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5123993, 'arrayAggregator', arrayAggregator, false, false, false);
            J$.N(5124001, 'baseAggregator', baseAggregator, false, false, false);
            J$.N(5124009, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(5124017, 'isArray', isArray, false, false, false);
            createAggregator = J$.N(5124033, 'createAggregator', J$.T(5124025, createAggregator, 12, false), true, false, false);
            J$.T(5123561, 'use strict', 21, false);
            var arrayAggregator = J$.W(5123665, 'arrayAggregator', J$.F(5123585, J$.I(typeof require === 'undefined' ? require = J$.R(5123569, 'require', undefined, true, true) : require = J$.R(5123569, 'require', require, true, true)), false)(J$.T(5123577, './_arrayAggregator', 21, false)), arrayAggregator, false, true), baseAggregator = J$.W(5123673, 'baseAggregator', J$.F(5123609, J$.I(typeof require === 'undefined' ? require = J$.R(5123593, 'require', undefined, true, true) : require = J$.R(5123593, 'require', require, true, true)), false)(J$.T(5123601, './_baseAggregator', 21, false)), baseAggregator, false, true), baseIteratee = J$.W(5123681, 'baseIteratee', J$.F(5123633, J$.I(typeof require === 'undefined' ? require = J$.R(5123617, 'require', undefined, true, true) : require = J$.R(5123617, 'require', require, true, true)), false)(J$.T(5123625, './_baseIteratee', 21, false)), baseIteratee, false, true), isArray = J$.W(5123689, 'isArray', J$.F(5123657, J$.I(typeof require === 'undefined' ? require = J$.R(5123641, 'require', undefined, true, true) : require = J$.R(5123641, 'require', require, true, true)), false)(J$.T(5123649, './isArray', 21, false)), isArray, false, true);
            J$.P(5123977, J$.I(typeof module === 'undefined' ? module = J$.R(5123961, 'module', undefined, true, true) : module = J$.R(5123961, 'module', module, true, true)), 'exports', J$.R(5123969, 'createAggregator', createAggregator, false, true));
        } catch (J$e) {
            J$.Ex(5124073, J$e);
        } finally {
            if (J$.Sr(5124081))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

