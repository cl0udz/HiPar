J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5102345, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_baseSet.js');
            function baseSet(object, path, value, customizer) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5102217, arguments.callee, this, arguments);
                            arguments = J$.N(5102225, 'arguments', arguments, true, false, false);
                            object = J$.N(5102233, 'object', object, true, false, false);
                            path = J$.N(5102241, 'path', path, true, false, false);
                            value = J$.N(5102249, 'value', value, true, false, false);
                            customizer = J$.N(5102257, 'customizer', customizer, true, false, false);
                            J$.N(5102265, 'index', index, false, false, false);
                            J$.N(5102273, 'length', length, false, false, false);
                            J$.N(5102281, 'lastIndex', lastIndex, false, false, false);
                            J$.N(5102289, 'nested', nested, false, false, false);
                            J$.N(5102297, 'key', key, false, false, false);
                            J$.N(5102305, 'newValue', newValue, false, false, false);
                            J$.N(5102313, 'objValue', objValue, false, false, false);
                            if (J$.C(271232, J$.U(509898, '!', J$.F(5101649, J$.R(5101633, 'isObject', isObject, false, true), false)(J$.R(5101641, 'object', object, false, false))))) {
                                return J$.Rt(5101665, J$.R(5101657, 'object', object, false, false));
                            }
                            path = J$.W(5101705, 'path', J$.F(5101697, J$.R(5101673, 'castPath', castPath, false, true), false)(J$.R(5101681, 'path', path, false, false), J$.R(5101689, 'object', object, false, false)), path, false, false);
                            var index = J$.W(5101761, 'index', J$.U(509906, '-', J$.T(5101713, 1, 22, false)), index, false, false), length = J$.W(5101769, 'length', J$.G(5101729, J$.R(5101721, 'path', path, false, false), 'length'), length, false, false), lastIndex = J$.W(5101777, 'lastIndex', J$.B(509914, '-', J$.R(5101737, 'length', length, false, false), J$.T(5101745, 1, 22, false)), lastIndex, false, false), nested = J$.W(5101785, 'nested', J$.R(5101753, 'object', object, false, false), nested, false, false);
                            while (J$.C(271288, J$.C(271240, J$.B(509922, '!=', J$.R(5101793, 'nested', nested, false, false), J$.T(5101801, null, 25, false))) ? J$.B(509946, '<', index = J$.W(5101817, 'index', J$.B(509938, '+', J$.U(509930, '+', J$.R(5101809, 'index', index, false, false)), 1), index, false, false), J$.R(5101825, 'length', length, false, false)) : J$._())) {
                                var key = J$.W(5101881, 'key', J$.F(5101865, J$.R(5101833, 'toKey', toKey, false, true), false)(J$.G(5101857, J$.R(5101841, 'path', path, false, false), J$.R(5101849, 'index', index, false, false))), key, false, false), newValue = J$.W(5101889, 'newValue', J$.R(5101873, 'value', value, false, false), newValue, false, false);
                                if (J$.C(271280, J$.B(509954, '!=', J$.R(5101897, 'index', index, false, false), J$.R(5101905, 'lastIndex', lastIndex, false, false)))) {
                                    var objValue = J$.W(5101937, 'objValue', J$.G(5101929, J$.R(5101913, 'nested', nested, false, false), J$.R(5101921, 'key', key, false, false)), objValue, false, false);
                                    newValue = J$.W(5102001, 'newValue', J$.C(271248, J$.R(5101945, 'customizer', customizer, false, false)) ? J$.F(5101985, J$.R(5101953, 'customizer', customizer, false, false), false)(J$.R(5101961, 'objValue', objValue, false, false), J$.R(5101969, 'key', key, false, false), J$.R(5101977, 'nested', nested, false, false)) : J$.T(5101993, undefined, 24, false), newValue, false, false);
                                    if (J$.C(271272, J$.B(509962, '===', J$.R(5102009, 'newValue', newValue, false, false), J$.T(5102017, undefined, 24, false)))) {
                                        newValue = J$.W(5102121, 'newValue', J$.C(271264, J$.F(5102041, J$.R(5102025, 'isObject', isObject, false, true), false)(J$.R(5102033, 'objValue', objValue, false, false))) ? J$.R(5102049, 'objValue', objValue, false, false) : J$.C(271256, J$.F(5102097, J$.R(5102057, 'isIndex', isIndex, false, true), false)(J$.G(5102089, J$.R(5102065, 'path', path, false, false), J$.B(509970, '+', J$.R(5102073, 'index', index, false, false), J$.T(5102081, 1, 22, false))))) ? J$.T(5102105, [], 10, false) : J$.T(5102113, {}, 11, false), newValue, false, false);
                                    }
                                }
                                J$.F(5102161, J$.R(5102129, 'assignValue', assignValue, false, true), false)(J$.R(5102137, 'nested', nested, false, false), J$.R(5102145, 'key', key, false, false), J$.R(5102153, 'newValue', newValue, false, false));
                                nested = J$.W(5102193, 'nested', J$.G(5102185, J$.R(5102169, 'nested', nested, false, false), J$.R(5102177, 'key', key, false, false)), nested, false, false);
                            }
                            return J$.Rt(5102209, J$.R(5102201, 'object', object, false, false));
                        } catch (J$e) {
                            J$.Ex(5102409, J$e);
                        } finally {
                            if (J$.Fr(5102417))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5102353, 'assignValue', assignValue, false, false, false);
            J$.N(5102361, 'castPath', castPath, false, false, false);
            J$.N(5102369, 'isIndex', isIndex, false, false, false);
            J$.N(5102377, 'isObject', isObject, false, false, false);
            J$.N(5102385, 'toKey', toKey, false, false, false);
            baseSet = J$.N(5102401, 'baseSet', J$.T(5102393, baseSet, 12, false), true, false, false);
            J$.T(5101465, 'use strict', 21, false);
            var assignValue = J$.W(5101593, 'assignValue', J$.F(5101489, J$.I(typeof require === 'undefined' ? require = J$.R(5101473, 'require', undefined, true, true) : require = J$.R(5101473, 'require', require, true, true)), false)(J$.T(5101481, './_assignValue', 21, false)), assignValue, false, true), castPath = J$.W(5101601, 'castPath', J$.F(5101513, J$.I(typeof require === 'undefined' ? require = J$.R(5101497, 'require', undefined, true, true) : require = J$.R(5101497, 'require', require, true, true)), false)(J$.T(5101505, './_castPath', 21, false)), castPath, false, true), isIndex = J$.W(5101609, 'isIndex', J$.F(5101537, J$.I(typeof require === 'undefined' ? require = J$.R(5101521, 'require', undefined, true, true) : require = J$.R(5101521, 'require', require, true, true)), false)(J$.T(5101529, './_isIndex', 21, false)), isIndex, false, true), isObject = J$.W(5101617, 'isObject', J$.F(5101561, J$.I(typeof require === 'undefined' ? require = J$.R(5101545, 'require', undefined, true, true) : require = J$.R(5101545, 'require', require, true, true)), false)(J$.T(5101553, './isObject', 21, false)), isObject, false, true), toKey = J$.W(5101625, 'toKey', J$.F(5101585, J$.I(typeof require === 'undefined' ? require = J$.R(5101569, 'require', undefined, true, true) : require = J$.R(5101569, 'require', require, true, true)), false)(J$.T(5101577, './_toKey', 21, false)), toKey, false, true);
            J$.P(5102337, J$.I(typeof module === 'undefined' ? module = J$.R(5102321, 'module', undefined, true, true) : module = J$.R(5102321, 'module', module, true, true)), 'exports', J$.R(5102329, 'baseSet', baseSet, false, true));
        } catch (J$e) {
            J$.Ex(5102425, J$e);
        } finally {
            if (J$.Sr(5102433))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

