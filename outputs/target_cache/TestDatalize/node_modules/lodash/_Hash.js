J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5047985, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_Hash.js');
            function Hash(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5047745, arguments.callee, this, arguments);
                            arguments = J$.N(5047753, 'arguments', arguments, true, false, false);
                            entries = J$.N(5047761, 'entries', entries, true, false, false);
                            J$.N(5047769, 'index', index, false, false, false);
                            J$.N(5047777, 'length', length, false, false, false);
                            J$.N(5047785, 'entry', entry, false, false, false);
                            var index = J$.W(5047593, 'index', J$.U(506794, '-', J$.T(5047545, 1, 22, false)), index, false, false), length = J$.W(5047601, 'length', J$.C(268480, J$.B(506802, '==', J$.R(5047553, 'entries', entries, false, false), J$.T(5047561, null, 25, false))) ? J$.T(5047569, 0, 22, false) : J$.G(5047585, J$.R(5047577, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(5047617, J$.R(5047609, 'this', this, false, false), 'clear', false)();
                            while (J$.C(268488, J$.B(506826, '<', index = J$.W(5047633, 'index', J$.B(506818, '+', J$.U(506810, '+', J$.R(5047625, 'index', index, false, false)), 1), index, false, false), J$.R(5047641, 'length', length, false, false)))) {
                                var entry = J$.W(5047673, 'entry', J$.G(5047665, J$.R(5047649, 'entries', entries, false, false), J$.R(5047657, 'index', index, false, false)), entry, false, false);
                                J$.M(5047737, J$.R(5047681, 'this', this, false, false), 'set', false)(J$.G(5047705, J$.R(5047689, 'entry', entry, false, false), J$.T(5047697, 0, 22, false)), J$.G(5047729, J$.R(5047713, 'entry', entry, false, false), J$.T(5047721, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5048049, J$e);
                        } finally {
                            if (J$.Fr(5048057))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5047993, 'hashClear', hashClear, false, false, false);
            J$.N(5048001, 'hashDelete', hashDelete, false, false, false);
            J$.N(5048009, 'hashGet', hashGet, false, false, false);
            J$.N(5048017, 'hashHas', hashHas, false, false, false);
            J$.N(5048025, 'hashSet', hashSet, false, false, false);
            Hash = J$.N(5048041, 'Hash', J$.T(5048033, Hash, 12, false), true, false, false);
            J$.T(5047377, 'use strict', 21, false);
            var hashClear = J$.W(5047505, 'hashClear', J$.F(5047401, J$.I(typeof require === 'undefined' ? require = J$.R(5047385, 'require', undefined, true, true) : require = J$.R(5047385, 'require', require, true, true)), false)(J$.T(5047393, './_hashClear', 21, false)), hashClear, false, true), hashDelete = J$.W(5047513, 'hashDelete', J$.F(5047425, J$.I(typeof require === 'undefined' ? require = J$.R(5047409, 'require', undefined, true, true) : require = J$.R(5047409, 'require', require, true, true)), false)(J$.T(5047417, './_hashDelete', 21, false)), hashDelete, false, true), hashGet = J$.W(5047521, 'hashGet', J$.F(5047449, J$.I(typeof require === 'undefined' ? require = J$.R(5047433, 'require', undefined, true, true) : require = J$.R(5047433, 'require', require, true, true)), false)(J$.T(5047441, './_hashGet', 21, false)), hashGet, false, true), hashHas = J$.W(5047529, 'hashHas', J$.F(5047473, J$.I(typeof require === 'undefined' ? require = J$.R(5047457, 'require', undefined, true, true) : require = J$.R(5047457, 'require', require, true, true)), false)(J$.T(5047465, './_hashHas', 21, false)), hashHas, false, true), hashSet = J$.W(5047537, 'hashSet', J$.F(5047497, J$.I(typeof require === 'undefined' ? require = J$.R(5047481, 'require', undefined, true, true) : require = J$.R(5047481, 'require', require, true, true)), false)(J$.T(5047489, './_hashSet', 21, false)), hashSet, false, true);
            J$.P(5047817, J$.G(5047801, J$.R(5047793, 'Hash', Hash, false, true), 'prototype'), 'clear', J$.R(5047809, 'hashClear', hashClear, false, true));
            J$.P(5047857, J$.G(5047833, J$.R(5047825, 'Hash', Hash, false, true), 'prototype'), J$.T(5047841, 'delete', 21, false), J$.R(5047849, 'hashDelete', hashDelete, false, true));
            J$.P(5047889, J$.G(5047873, J$.R(5047865, 'Hash', Hash, false, true), 'prototype'), 'get', J$.R(5047881, 'hashGet', hashGet, false, true));
            J$.P(5047921, J$.G(5047905, J$.R(5047897, 'Hash', Hash, false, true), 'prototype'), 'has', J$.R(5047913, 'hashHas', hashHas, false, true));
            J$.P(5047953, J$.G(5047937, J$.R(5047929, 'Hash', Hash, false, true), 'prototype'), 'set', J$.R(5047945, 'hashSet', hashSet, false, true));
            J$.P(5047977, J$.I(typeof module === 'undefined' ? module = J$.R(5047961, 'module', undefined, true, true) : module = J$.R(5047961, 'module', module, true, true)), 'exports', J$.R(5047969, 'Hash', Hash, false, true));
        } catch (J$e) {
            J$.Ex(5048065, J$e);
        } finally {
            if (J$.Sr(5048073))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

