J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5074281, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_baseGet.js');
            function baseGet(object, path) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5074209, arguments.callee, this, arguments);
                            arguments = J$.N(5074217, 'arguments', arguments, true, false, false);
                            object = J$.N(5074225, 'object', object, true, false, false);
                            path = J$.N(5074233, 'path', path, true, false, false);
                            J$.N(5074241, 'index', index, false, false, false);
                            J$.N(5074249, 'length', length, false, false, false);
                            path = J$.W(5074009, 'path', J$.F(5074001, J$.R(5073977, 'castPath', castPath, false, true), false)(J$.R(5073985, 'path', path, false, false), J$.R(5073993, 'object', object, false, false)), path, false, false);
                            var index = J$.W(5074041, 'index', J$.T(5074017, 0, 22, false), index, false, false), length = J$.W(5074049, 'length', J$.G(5074033, J$.R(5074025, 'path', path, false, false), 'length'), length, false, false);
                            while (J$.C(269824, J$.C(269816, J$.B(508450, '!=', J$.R(5074057, 'object', object, false, false), J$.T(5074065, null, 25, false))) ? J$.B(508458, '<', J$.R(5074073, 'index', index, false, false), J$.R(5074081, 'length', length, false, false)) : J$._())) {
                                object = J$.W(5074153, 'object', J$.G(5074145, J$.R(5074089, 'object', object, false, false), J$.F(5074137, J$.R(5074097, 'toKey', toKey, false, true), false)(J$.G(5074129, J$.R(5074105, 'path', path, false, false), J$.B(508482, '-', index = J$.W(5074121, 'index', J$.B(508474, '+', J$.U(508466, '+', J$.R(5074113, 'index', index, false, false)), 1), index, false, false), 1)))), object, false, false);
                            }
                            return J$.Rt(5074201, J$.C(269840, J$.C(269832, J$.R(5074161, 'index', index, false, false)) ? J$.B(508490, '==', J$.R(5074169, 'index', index, false, false), J$.R(5074177, 'length', length, false, false)) : J$._()) ? J$.R(5074185, 'object', object, false, false) : J$.T(5074193, undefined, 24, false));
                        } catch (J$e) {
                            J$.Ex(5074321, J$e);
                        } finally {
                            if (J$.Fr(5074329))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5074289, 'castPath', castPath, false, false, false);
            J$.N(5074297, 'toKey', toKey, false, false, false);
            baseGet = J$.N(5074313, 'baseGet', J$.T(5074305, baseGet, 12, false), true, false, false);
            J$.T(5073905, 'use strict', 21, false);
            var castPath = J$.W(5073961, 'castPath', J$.F(5073929, J$.I(typeof require === 'undefined' ? require = J$.R(5073913, 'require', undefined, true, true) : require = J$.R(5073913, 'require', require, true, true)), false)(J$.T(5073921, './_castPath', 21, false)), castPath, false, true), toKey = J$.W(5073969, 'toKey', J$.F(5073953, J$.I(typeof require === 'undefined' ? require = J$.R(5073937, 'require', undefined, true, true) : require = J$.R(5073937, 'require', require, true, true)), false)(J$.T(5073945, './_toKey', 21, false)), toKey, false, true);
            J$.P(5074273, J$.I(typeof module === 'undefined' ? module = J$.R(5074257, 'module', undefined, true, true) : module = J$.R(5074257, 'module', module, true, true)), 'exports', J$.R(5074265, 'baseGet', baseGet, false, true));
        } catch (J$e) {
            J$.Ex(5074337, J$e);
        } finally {
            if (J$.Sr(5074345))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

