J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5828353, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/takeRight.js');
            function takeRight(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5828281, arguments.callee, this, arguments);
                            arguments = J$.N(5828289, 'arguments', arguments, true, false, false);
                            array = J$.N(5828297, 'array', array, true, false, false);
                            n = J$.N(5828305, 'n', n, true, false, false);
                            guard = J$.N(5828313, 'guard', guard, true, false, false);
                            J$.N(5828321, 'length', length, false, false, false);
                            var length = J$.W(5828089, 'length', J$.C(313688, J$.B(558330, '==', J$.R(5828049, 'array', array, false, false), J$.T(5828057, null, 25, false))) ? J$.T(5828065, 0, 22, false) : J$.G(5828081, J$.R(5828073, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(313696, J$.U(558338, '!', J$.R(5828097, 'length', length, false, false)))) {
                                return J$.Rt(5828113, J$.T(5828105, [], 10, false));
                            }
                            n = J$.W(5828177, 'n', J$.C(313712, J$.C(313704, J$.R(5828121, 'guard', guard, false, false)) ? J$._() : J$.B(558346, '===', J$.R(5828129, 'n', n, false, false), J$.T(5828137, undefined, 24, false))) ? J$.T(5828145, 1, 22, false) : J$.F(5828169, J$.R(5828153, 'toInteger', toInteger, false, true), false)(J$.R(5828161, 'n', n, false, false)), n, false, false);
                            n = J$.W(5828201, 'n', J$.B(558354, '-', J$.R(5828185, 'length', length, false, false), J$.R(5828193, 'n', n, false, false)), n, false, false);
                            return J$.Rt(5828273, J$.F(5828265, J$.R(5828209, 'baseSlice', baseSlice, false, true), false)(J$.R(5828217, 'array', array, false, false), J$.C(313720, J$.B(558362, '<', J$.R(5828225, 'n', n, false, false), J$.T(5828233, 0, 22, false))) ? J$.T(5828241, 0, 22, false) : J$.R(5828249, 'n', n, false, false), J$.R(5828257, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(5828393, J$e);
                        } finally {
                            if (J$.Fr(5828401))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5828361, 'baseSlice', baseSlice, false, false, false);
            J$.N(5828369, 'toInteger', toInteger, false, false, false);
            takeRight = J$.N(5828385, 'takeRight', J$.T(5828377, takeRight, 12, false), true, false, false);
            J$.T(5827977, 'use strict', 21, false);
            var baseSlice = J$.W(5828033, 'baseSlice', J$.F(5828001, J$.I(typeof require === 'undefined' ? require = J$.R(5827985, 'require', undefined, true, true) : require = J$.R(5827985, 'require', require, true, true)), false)(J$.T(5827993, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(5828041, 'toInteger', J$.F(5828025, J$.I(typeof require === 'undefined' ? require = J$.R(5828009, 'require', undefined, true, true) : require = J$.R(5828009, 'require', require, true, true)), false)(J$.T(5828017, './toInteger', 21, false)), toInteger, false, true);
            J$.P(5828345, J$.I(typeof module === 'undefined' ? module = J$.R(5828329, 'module', undefined, true, true) : module = J$.R(5828329, 'module', module, true, true)), 'exports', J$.R(5828337, 'takeRight', takeRight, false, true));
        } catch (J$e) {
            J$.Ex(5828409, J$e);
        } finally {
            if (J$.Sr(5828417))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

