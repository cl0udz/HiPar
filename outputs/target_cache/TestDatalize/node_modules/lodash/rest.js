J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5814393, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/rest.js');
            function rest(func, start) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5814337, arguments.callee, this, arguments);
                            arguments = J$.N(5814345, 'arguments', arguments, true, false, false);
                            func = J$.N(5814353, 'func', func, true, false, false);
                            start = J$.N(5814361, 'start', start, true, false, false);
                            if (J$.C(313088, J$.B(557866, '!=', J$.U(557858, 'typeof', J$.R(5814201, 'func', func, false, false)), J$.T(5814209, 'function', 21, false)))) {
                                throw J$.F(5814233, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(5814217, 'TypeError', undefined, true, true) : TypeError = J$.R(5814217, 'TypeError', TypeError, true, true)), true)(J$.R(5814225, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            start = J$.W(5814289, 'start', J$.C(313096, J$.B(557874, '===', J$.R(5814241, 'start', start, false, false), J$.T(5814249, undefined, 24, false))) ? J$.R(5814257, 'start', start, false, false) : J$.F(5814281, J$.R(5814265, 'toInteger', toInteger, false, true), false)(J$.R(5814273, 'start', start, false, false)), start, false, false);
                            return J$.Rt(5814329, J$.F(5814321, J$.R(5814297, 'baseRest', baseRest, false, true), false)(J$.R(5814305, 'func', func, false, false), J$.R(5814313, 'start', start, false, false)));
                        } catch (J$e) {
                            J$.Ex(5814441, J$e);
                        } finally {
                            if (J$.Fr(5814449))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5814401, 'baseRest', baseRest, false, false, false);
            J$.N(5814409, 'toInteger', toInteger, false, false, false);
            J$.N(5814417, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            rest = J$.N(5814433, 'rest', J$.T(5814425, rest, 12, false), true, false, false);
            J$.T(5814113, 'use strict', 21, false);
            var baseRest = J$.W(5814169, 'baseRest', J$.F(5814137, J$.I(typeof require === 'undefined' ? require = J$.R(5814121, 'require', undefined, true, true) : require = J$.R(5814121, 'require', require, true, true)), false)(J$.T(5814129, './_baseRest', 21, false)), baseRest, false, true), toInteger = J$.W(5814177, 'toInteger', J$.F(5814161, J$.I(typeof require === 'undefined' ? require = J$.R(5814145, 'require', undefined, true, true) : require = J$.R(5814145, 'require', require, true, true)), false)(J$.T(5814153, './toInteger', 21, false)), toInteger, false, true);
            var FUNC_ERROR_TEXT = J$.W(5814193, 'FUNC_ERROR_TEXT', J$.T(5814185, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            J$.P(5814385, J$.I(typeof module === 'undefined' ? module = J$.R(5814369, 'module', undefined, true, true) : module = J$.R(5814369, 'module', module, true, true)), 'exports', J$.R(5814377, 'rest', rest, false, true));
        } catch (J$e) {
            J$.Ex(5814457, J$e);
        } finally {
            if (J$.Sr(5814465))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

