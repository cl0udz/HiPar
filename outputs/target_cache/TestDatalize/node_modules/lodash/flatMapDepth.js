J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5304433, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/flatMapDepth.js');
            function flatMapDepth(collection, iteratee, depth) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5304369, arguments.callee, this, arguments);
                            arguments = J$.N(5304377, 'arguments', arguments, true, false, false);
                            collection = J$.N(5304385, 'collection', collection, true, false, false);
                            iteratee = J$.N(5304393, 'iteratee', iteratee, true, false, false);
                            depth = J$.N(5304401, 'depth', depth, true, false, false);
                            depth = J$.W(5304297, 'depth', J$.C(283408, J$.B(525962, '===', J$.R(5304249, 'depth', depth, false, false), J$.T(5304257, undefined, 24, false))) ? J$.T(5304265, 1, 22, false) : J$.F(5304289, J$.R(5304273, 'toInteger', toInteger, false, true), false)(J$.R(5304281, 'depth', depth, false, false)), depth, false, false);
                            return J$.Rt(5304361, J$.F(5304353, J$.R(5304305, 'baseFlatten', baseFlatten, false, true), false)(J$.F(5304337, J$.R(5304313, 'map', map, false, true), false)(J$.R(5304321, 'collection', collection, false, false), J$.R(5304329, 'iteratee', iteratee, false, false)), J$.R(5304345, 'depth', depth, false, false)));
                        } catch (J$e) {
                            J$.Ex(5304481, J$e);
                        } finally {
                            if (J$.Fr(5304489))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5304441, 'baseFlatten', baseFlatten, false, false, false);
            J$.N(5304449, 'map', map, false, false, false);
            J$.N(5304457, 'toInteger', toInteger, false, false, false);
            flatMapDepth = J$.N(5304473, 'flatMapDepth', J$.T(5304465, flatMapDepth, 12, false), true, false, false);
            J$.T(5304145, 'use strict', 21, false);
            var baseFlatten = J$.W(5304225, 'baseFlatten', J$.F(5304169, J$.I(typeof require === 'undefined' ? require = J$.R(5304153, 'require', undefined, true, true) : require = J$.R(5304153, 'require', require, true, true)), false)(J$.T(5304161, './_baseFlatten', 21, false)), baseFlatten, false, true), map = J$.W(5304233, 'map', J$.F(5304193, J$.I(typeof require === 'undefined' ? require = J$.R(5304177, 'require', undefined, true, true) : require = J$.R(5304177, 'require', require, true, true)), false)(J$.T(5304185, './map', 21, false)), map, false, true), toInteger = J$.W(5304241, 'toInteger', J$.F(5304217, J$.I(typeof require === 'undefined' ? require = J$.R(5304201, 'require', undefined, true, true) : require = J$.R(5304201, 'require', require, true, true)), false)(J$.T(5304209, './toInteger', 21, false)), toInteger, false, true);
            J$.P(5304425, J$.I(typeof module === 'undefined' ? module = J$.R(5304409, 'module', undefined, true, true) : module = J$.R(5304409, 'module', module, true, true)), 'exports', J$.R(5304417, 'flatMapDepth', flatMapDepth, false, true));
        } catch (J$e) {
            J$.Ex(5304497, J$e);
        } finally {
            if (J$.Sr(5304505))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

