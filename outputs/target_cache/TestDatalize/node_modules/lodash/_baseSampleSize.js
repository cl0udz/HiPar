J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5101385, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_baseSampleSize.js');
            function baseSampleSize(collection, n) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5101321, arguments.callee, this, arguments);
                            arguments = J$.N(5101329, 'arguments', arguments, true, false, false);
                            collection = J$.N(5101337, 'collection', collection, true, false, false);
                            n = J$.N(5101345, 'n', n, true, false, false);
                            J$.N(5101353, 'array', array, false, false, false);
                            var array = J$.W(5101233, 'array', J$.F(5101225, J$.R(5101209, 'values', values, false, true), false)(J$.R(5101217, 'collection', collection, false, false)), array, false, false);
                            return J$.Rt(5101313, J$.F(5101305, J$.R(5101241, 'shuffleSelf', shuffleSelf, false, true), false)(J$.R(5101249, 'array', array, false, false), J$.F(5101297, J$.R(5101257, 'baseClamp', baseClamp, false, true), false)(J$.R(5101265, 'n', n, false, false), J$.T(5101273, 0, 22, false), J$.G(5101289, J$.R(5101281, 'array', array, false, false), 'length'))));
                        } catch (J$e) {
                            J$.Ex(5101433, J$e);
                        } finally {
                            if (J$.Fr(5101441))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5101393, 'baseClamp', baseClamp, false, false, false);
            J$.N(5101401, 'shuffleSelf', shuffleSelf, false, false, false);
            J$.N(5101409, 'values', values, false, false, false);
            baseSampleSize = J$.N(5101425, 'baseSampleSize', J$.T(5101417, baseSampleSize, 12, false), true, false, false);
            J$.T(5101105, 'use strict', 21, false);
            var baseClamp = J$.W(5101185, 'baseClamp', J$.F(5101129, J$.I(typeof require === 'undefined' ? require = J$.R(5101113, 'require', undefined, true, true) : require = J$.R(5101113, 'require', require, true, true)), false)(J$.T(5101121, './_baseClamp', 21, false)), baseClamp, false, true), shuffleSelf = J$.W(5101193, 'shuffleSelf', J$.F(5101153, J$.I(typeof require === 'undefined' ? require = J$.R(5101137, 'require', undefined, true, true) : require = J$.R(5101137, 'require', require, true, true)), false)(J$.T(5101145, './_shuffleSelf', 21, false)), shuffleSelf, false, true), values = J$.W(5101201, 'values', J$.F(5101177, J$.I(typeof require === 'undefined' ? require = J$.R(5101161, 'require', undefined, true, true) : require = J$.R(5101161, 'require', require, true, true)), false)(J$.T(5101169, './values', 21, false)), values, false, true);
            J$.P(5101377, J$.I(typeof module === 'undefined' ? module = J$.R(5101361, 'module', undefined, true, true) : module = J$.R(5101361, 'module', module, true, true)), 'exports', J$.R(5101369, 'baseSampleSize', baseSampleSize, false, true));
        } catch (J$e) {
            J$.Ex(5101449, J$e);
        } finally {
            if (J$.Sr(5101457))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

