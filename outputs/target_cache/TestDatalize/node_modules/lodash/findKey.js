J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5302289, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/findKey.js');
            function findKey(object, predicate) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5302233, arguments.callee, this, arguments);
                            arguments = J$.N(5302241, 'arguments', arguments, true, false, false);
                            object = J$.N(5302249, 'object', object, true, false, false);
                            predicate = J$.N(5302257, 'predicate', predicate, true, false, false);
                            return J$.Rt(5302225, J$.F(5302217, J$.R(5302161, 'baseFindKey', baseFindKey, false, true), false)(J$.R(5302169, 'object', object, false, false), J$.F(5302201, J$.R(5302177, 'baseIteratee', baseIteratee, false, true), false)(J$.R(5302185, 'predicate', predicate, false, false), J$.T(5302193, 3, 22, false)), J$.R(5302209, 'baseForOwn', baseForOwn, false, true)));
                        } catch (J$e) {
                            J$.Ex(5302337, J$e);
                        } finally {
                            if (J$.Fr(5302345))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5302297, 'baseFindKey', baseFindKey, false, false, false);
            J$.N(5302305, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(5302313, 'baseIteratee', baseIteratee, false, false, false);
            findKey = J$.N(5302329, 'findKey', J$.T(5302321, findKey, 12, false), true, false, false);
            J$.T(5302057, 'use strict', 21, false);
            var baseFindKey = J$.W(5302137, 'baseFindKey', J$.F(5302081, J$.I(typeof require === 'undefined' ? require = J$.R(5302065, 'require', undefined, true, true) : require = J$.R(5302065, 'require', require, true, true)), false)(J$.T(5302073, './_baseFindKey', 21, false)), baseFindKey, false, true), baseForOwn = J$.W(5302145, 'baseForOwn', J$.F(5302105, J$.I(typeof require === 'undefined' ? require = J$.R(5302089, 'require', undefined, true, true) : require = J$.R(5302089, 'require', require, true, true)), false)(J$.T(5302097, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(5302153, 'baseIteratee', J$.F(5302129, J$.I(typeof require === 'undefined' ? require = J$.R(5302113, 'require', undefined, true, true) : require = J$.R(5302113, 'require', require, true, true)), false)(J$.T(5302121, './_baseIteratee', 21, false)), baseIteratee, false, true);
            J$.P(5302281, J$.I(typeof module === 'undefined' ? module = J$.R(5302265, 'module', undefined, true, true) : module = J$.R(5302265, 'module', module, true, true)), 'exports', J$.R(5302273, 'findKey', findKey, false, true));
        } catch (J$e) {
            J$.Ex(5302353, J$e);
        } finally {
            if (J$.Sr(5302361))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

