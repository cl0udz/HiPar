J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5836905, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/toNumber.js');
            function toNumber(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5836841, arguments.callee, this, arguments);
                            arguments = J$.N(5836849, 'arguments', arguments, true, false, false);
                            value = J$.N(5836857, 'value', value, true, false, false);
                            J$.N(5836865, 'other', other, false, false, false);
                            J$.N(5836873, 'isBinary', isBinary, false, false, false);
                            if (J$.C(314112, J$.B(558922, '==', J$.U(558914, 'typeof', J$.R(5836361, 'value', value, false, false)), J$.T(5836369, 'number', 21, false)))) {
                                return J$.Rt(5836385, J$.R(5836377, 'value', value, false, false));
                            }
                            if (J$.C(314120, J$.F(5836409, J$.R(5836393, 'isSymbol', isSymbol, false, true), false)(J$.R(5836401, 'value', value, false, false)))) {
                                return J$.Rt(5836425, J$.R(5836417, 'NAN', NAN, false, true));
                            }
                            if (J$.C(314144, J$.F(5836449, J$.R(5836433, 'isObject', isObject, false, true), false)(J$.R(5836441, 'value', value, false, false)))) {
                                var other = J$.W(5836505, 'other', J$.C(314128, J$.B(558938, '==', J$.U(558930, 'typeof', J$.G(5836465, J$.R(5836457, 'value', value, false, false), 'valueOf')), J$.T(5836473, 'function', 21, false))) ? J$.M(5836489, J$.R(5836481, 'value', value, false, false), 'valueOf', false)() : J$.R(5836497, 'value', value, false, false), other, false, false);
                                value = J$.W(5836561, 'value', J$.C(314136, J$.F(5836529, J$.R(5836513, 'isObject', isObject, false, true), false)(J$.R(5836521, 'other', other, false, false))) ? J$.B(558946, '+', J$.R(5836537, 'other', other, false, false), J$.T(5836545, '', 21, false)) : J$.R(5836553, 'other', other, false, false), value, false, false);
                            }
                            if (J$.C(314160, J$.B(558962, '!=', J$.U(558954, 'typeof', J$.R(5836569, 'value', value, false, false)), J$.T(5836577, 'string', 21, false)))) {
                                return J$.Rt(5836617, J$.C(314152, J$.B(558970, '===', J$.R(5836585, 'value', value, false, false), J$.T(5836593, 0, 22, false))) ? J$.R(5836601, 'value', value, false, false) : J$.U(558978, '+', J$.R(5836609, 'value', value, false, false)));
                            }
                            value = J$.W(5836657, 'value', J$.M(5836649, J$.R(5836625, 'value', value, false, false), 'replace', false)(J$.R(5836633, 'reTrim', reTrim, false, true), J$.T(5836641, '', 21, false)), value, false, false);
                            var isBinary = J$.W(5836689, 'isBinary', J$.M(5836681, J$.R(5836665, 'reIsBinary', reIsBinary, false, true), 'test', false)(J$.R(5836673, 'value', value, false, false)), isBinary, false, false);
                            return J$.Rt(5836833, J$.C(314192, J$.C(314168, J$.R(5836697, 'isBinary', isBinary, false, false)) ? J$._() : J$.M(5836721, J$.R(5836705, 'reIsOctal', reIsOctal, false, true), 'test', false)(J$.R(5836713, 'value', value, false, false))) ? J$.F(5836785, J$.R(5836729, 'freeParseInt', freeParseInt, false, true), false)(J$.M(5836753, J$.R(5836737, 'value', value, false, false), 'slice', false)(J$.T(5836745, 2, 22, false)), J$.C(314176, J$.R(5836761, 'isBinary', isBinary, false, false)) ? J$.T(5836769, 2, 22, false) : J$.T(5836777, 8, 22, false)) : J$.C(314184, J$.M(5836809, J$.R(5836793, 'reIsBadHex', reIsBadHex, false, true), 'test', false)(J$.R(5836801, 'value', value, false, false))) ? J$.R(5836817, 'NAN', NAN, false, true) : J$.U(558986, '+', J$.R(5836825, 'value', value, false, false)));
                        } catch (J$e) {
                            J$.Ex(5836993, J$e);
                        } finally {
                            if (J$.Fr(5837001))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5836913, 'isObject', isObject, false, false, false);
            J$.N(5836921, 'isSymbol', isSymbol, false, false, false);
            J$.N(5836929, 'NAN', NAN, false, false, false);
            J$.N(5836937, 'reTrim', reTrim, false, false, false);
            J$.N(5836945, 'reIsBadHex', reIsBadHex, false, false, false);
            J$.N(5836953, 'reIsBinary', reIsBinary, false, false, false);
            J$.N(5836961, 'reIsOctal', reIsOctal, false, false, false);
            J$.N(5836969, 'freeParseInt', freeParseInt, false, false, false);
            toNumber = J$.N(5836985, 'toNumber', J$.T(5836977, toNumber, 12, false), true, false, false);
            J$.T(5835993, 'use strict', 21, false);
            J$.F(5836017, J$.I(typeof require === 'undefined' ? require = J$.R(5836001, 'require', undefined, true, true) : require = J$.R(5836001, 'require', require, true, true)), false)(J$.T(5836009, 'core-js/modules/es.array.slice', 21, false));
            J$.F(5836041, J$.I(typeof require === 'undefined' ? require = J$.R(5836025, 'require', undefined, true, true) : require = J$.R(5836025, 'require', require, true, true)), false)(J$.T(5836033, 'core-js/modules/es.parse-int', 21, false));
            J$.F(5836065, J$.I(typeof require === 'undefined' ? require = J$.R(5836049, 'require', undefined, true, true) : require = J$.R(5836049, 'require', require, true, true)), false)(J$.T(5836057, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(5836089, J$.I(typeof require === 'undefined' ? require = J$.R(5836073, 'require', undefined, true, true) : require = J$.R(5836073, 'require', require, true, true)), false)(J$.T(5836081, 'core-js/modules/es.string.replace', 21, false));
            J$.F(5836113, J$.I(typeof require === 'undefined' ? require = J$.R(5836097, 'require', undefined, true, true) : require = J$.R(5836097, 'require', require, true, true)), false)(J$.T(5836105, 'core-js/modules/es.array.slice', 21, false));
            J$.F(5836137, J$.I(typeof require === 'undefined' ? require = J$.R(5836121, 'require', undefined, true, true) : require = J$.R(5836121, 'require', require, true, true)), false)(J$.T(5836129, 'core-js/modules/es.parse-int', 21, false));
            J$.F(5836161, J$.I(typeof require === 'undefined' ? require = J$.R(5836145, 'require', undefined, true, true) : require = J$.R(5836145, 'require', require, true, true)), false)(J$.T(5836153, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(5836185, J$.I(typeof require === 'undefined' ? require = J$.R(5836169, 'require', undefined, true, true) : require = J$.R(5836169, 'require', require, true, true)), false)(J$.T(5836177, 'core-js/modules/es.string.replace', 21, false));
            var isObject = J$.W(5836241, 'isObject', J$.F(5836209, J$.I(typeof require === 'undefined' ? require = J$.R(5836193, 'require', undefined, true, true) : require = J$.R(5836193, 'require', require, true, true)), false)(J$.T(5836201, './isObject', 21, false)), isObject, false, true), isSymbol = J$.W(5836249, 'isSymbol', J$.F(5836233, J$.I(typeof require === 'undefined' ? require = J$.R(5836217, 'require', undefined, true, true) : require = J$.R(5836217, 'require', require, true, true)), false)(J$.T(5836225, './isSymbol', 21, false)), isSymbol, false, true);
            var NAN = J$.W(5836273, 'NAN', J$.B(558906, '/', J$.T(5836257, 0, 22, false), J$.T(5836265, 0, 22, false)), NAN, false, true);
            var reTrim = J$.W(5836289, 'reTrim', J$.T(5836281, /^\s+|\s+$/g, 14, false), reTrim, false, true);
            var reIsBadHex = J$.W(5836305, 'reIsBadHex', J$.T(5836297, /^[-+]0x[0-9a-f]+$/i, 14, false), reIsBadHex, false, true);
            var reIsBinary = J$.W(5836321, 'reIsBinary', J$.T(5836313, /^0b[01]+$/i, 14, false), reIsBinary, false, true);
            var reIsOctal = J$.W(5836337, 'reIsOctal', J$.T(5836329, /^0o[0-7]+$/i, 14, false), reIsOctal, false, true);
            var freeParseInt = J$.W(5836353, 'freeParseInt', J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(5836345, 'parseInt', undefined, true, true) : parseInt = J$.R(5836345, 'parseInt', parseInt, true, true)), freeParseInt, false, true);
            J$.P(5836897, J$.I(typeof module === 'undefined' ? module = J$.R(5836881, 'module', undefined, true, true) : module = J$.R(5836881, 'module', module, true, true)), 'exports', J$.R(5836889, 'toNumber', toNumber, false, true));
        } catch (J$e) {
            J$.Ex(5837009, J$e);
        } finally {
            if (J$.Sr(5837017))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

