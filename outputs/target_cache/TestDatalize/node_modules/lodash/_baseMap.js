J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5090137, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_baseMap.js');
            function baseMap(collection, iteratee) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5090065, arguments.callee, this, arguments);
                            arguments = J$.N(5090073, 'arguments', arguments, true, false, false);
                            collection = J$.N(5090081, 'collection', collection, true, false, false);
                            iteratee = J$.N(5090089, 'iteratee', iteratee, true, false, false);
                            J$.N(5090097, 'index', index, false, false, false);
                            J$.N(5090105, 'result', result, false, false, false);
                            var index = J$.W(5089889, 'index', J$.U(509362, '-', J$.T(5089817, 1, 22, false)), index, false, false), result = J$.W(5089897, 'result', J$.C(270720, J$.F(5089841, J$.R(5089825, 'isArrayLike', isArrayLike, false, true), false)(J$.R(5089833, 'collection', collection, false, false))) ? J$.F(5089873, J$.I(typeof Array === 'undefined' ? Array = J$.R(5089849, 'Array', undefined, true, true) : Array = J$.R(5089849, 'Array', Array, true, true)), false)(J$.G(5089865, J$.R(5089857, 'collection', collection, false, false), 'length')) : J$.T(5089881, [], 10, false), result, false, false);
                            J$.F(5090041, J$.R(5089905, 'baseEach', baseEach, false, true), false)(J$.R(5089913, 'collection', collection, false, false), J$.T(5090033, function (value, key, collection) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(5089993, arguments.callee, this, arguments);
                                            arguments = J$.N(5090001, 'arguments', arguments, true, false, false);
                                            value = J$.N(5090009, 'value', value, true, false, false);
                                            key = J$.N(5090017, 'key', key, true, false, false);
                                            collection = J$.N(5090025, 'collection', collection, true, false, false);
                                            J$.P(5089985, J$.R(5089921, 'result', result, false, false), index = J$.W(5089937, 'index', J$.B(509378, '+', J$.U(509370, '+', J$.R(5089929, 'index', index, false, false)), 1), index, false, false), J$.F(5089977, J$.R(5089945, 'iteratee', iteratee, false, false), false)(J$.R(5089953, 'value', value, false, false), J$.R(5089961, 'key', key, false, false), J$.R(5089969, 'collection', collection, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(5090177, J$e);
                                        } finally {
                                            if (J$.Fr(5090185))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(5090057, J$.R(5090049, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(5090193, J$e);
                        } finally {
                            if (J$.Fr(5090201))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5090145, 'baseEach', baseEach, false, false, false);
            J$.N(5090153, 'isArrayLike', isArrayLike, false, false, false);
            baseMap = J$.N(5090169, 'baseMap', J$.T(5090161, baseMap, 12, false), true, false, false);
            J$.T(5089745, 'use strict', 21, false);
            var baseEach = J$.W(5089801, 'baseEach', J$.F(5089769, J$.I(typeof require === 'undefined' ? require = J$.R(5089753, 'require', undefined, true, true) : require = J$.R(5089753, 'require', require, true, true)), false)(J$.T(5089761, './_baseEach', 21, false)), baseEach, false, true), isArrayLike = J$.W(5089809, 'isArrayLike', J$.F(5089793, J$.I(typeof require === 'undefined' ? require = J$.R(5089777, 'require', undefined, true, true) : require = J$.R(5089777, 'require', require, true, true)), false)(J$.T(5089785, './isArrayLike', 21, false)), isArrayLike, false, true);
            J$.P(5090129, J$.I(typeof module === 'undefined' ? module = J$.R(5090113, 'module', undefined, true, true) : module = J$.R(5090113, 'module', module, true, true)), 'exports', J$.R(5090121, 'baseMap', baseMap, false, true));
        } catch (J$e) {
            J$.Ex(5090209, J$e);
        } finally {
            if (J$.Sr(5090217))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

