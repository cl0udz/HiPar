J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5051905, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_Stack.js');
            function Stack(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5051681, arguments.callee, this, arguments);
                            arguments = J$.N(5051689, 'arguments', arguments, true, false, false);
                            entries = J$.N(5051697, 'entries', entries, true, false, false);
                            J$.N(5051705, 'data', data, false, false, false);
                            var data = J$.W(5051641, 'data', J$.P(5051633, J$.R(5051601, 'this', this, false, false), '__data__', J$.F(5051625, J$.R(5051609, 'ListCache', ListCache, false, true), true)(J$.R(5051617, 'entries', entries, false, false))), data, false, false);
                            J$.P(5051673, J$.R(5051649, 'this', this, false, false), 'size', J$.G(5051665, J$.R(5051657, 'data', data, false, false), 'size'));
                        } catch (J$e) {
                            J$.Ex(5051977, J$e);
                        } finally {
                            if (J$.Fr(5051985))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5051913, 'ListCache', ListCache, false, false, false);
            J$.N(5051921, 'stackClear', stackClear, false, false, false);
            J$.N(5051929, 'stackDelete', stackDelete, false, false, false);
            J$.N(5051937, 'stackGet', stackGet, false, false, false);
            J$.N(5051945, 'stackHas', stackHas, false, false, false);
            J$.N(5051953, 'stackSet', stackSet, false, false, false);
            Stack = J$.N(5051969, 'Stack', J$.T(5051961, Stack, 12, false), true, false, false);
            J$.T(5051401, 'use strict', 21, false);
            var ListCache = J$.W(5051553, 'ListCache', J$.F(5051425, J$.I(typeof require === 'undefined' ? require = J$.R(5051409, 'require', undefined, true, true) : require = J$.R(5051409, 'require', require, true, true)), false)(J$.T(5051417, './_ListCache', 21, false)), ListCache, false, true), stackClear = J$.W(5051561, 'stackClear', J$.F(5051449, J$.I(typeof require === 'undefined' ? require = J$.R(5051433, 'require', undefined, true, true) : require = J$.R(5051433, 'require', require, true, true)), false)(J$.T(5051441, './_stackClear', 21, false)), stackClear, false, true), stackDelete = J$.W(5051569, 'stackDelete', J$.F(5051473, J$.I(typeof require === 'undefined' ? require = J$.R(5051457, 'require', undefined, true, true) : require = J$.R(5051457, 'require', require, true, true)), false)(J$.T(5051465, './_stackDelete', 21, false)), stackDelete, false, true), stackGet = J$.W(5051577, 'stackGet', J$.F(5051497, J$.I(typeof require === 'undefined' ? require = J$.R(5051481, 'require', undefined, true, true) : require = J$.R(5051481, 'require', require, true, true)), false)(J$.T(5051489, './_stackGet', 21, false)), stackGet, false, true), stackHas = J$.W(5051585, 'stackHas', J$.F(5051521, J$.I(typeof require === 'undefined' ? require = J$.R(5051505, 'require', undefined, true, true) : require = J$.R(5051505, 'require', require, true, true)), false)(J$.T(5051513, './_stackHas', 21, false)), stackHas, false, true), stackSet = J$.W(5051593, 'stackSet', J$.F(5051545, J$.I(typeof require === 'undefined' ? require = J$.R(5051529, 'require', undefined, true, true) : require = J$.R(5051529, 'require', require, true, true)), false)(J$.T(5051537, './_stackSet', 21, false)), stackSet, false, true);
            J$.P(5051737, J$.G(5051721, J$.R(5051713, 'Stack', Stack, false, true), 'prototype'), 'clear', J$.R(5051729, 'stackClear', stackClear, false, true));
            J$.P(5051777, J$.G(5051753, J$.R(5051745, 'Stack', Stack, false, true), 'prototype'), J$.T(5051761, 'delete', 21, false), J$.R(5051769, 'stackDelete', stackDelete, false, true));
            J$.P(5051809, J$.G(5051793, J$.R(5051785, 'Stack', Stack, false, true), 'prototype'), 'get', J$.R(5051801, 'stackGet', stackGet, false, true));
            J$.P(5051841, J$.G(5051825, J$.R(5051817, 'Stack', Stack, false, true), 'prototype'), 'has', J$.R(5051833, 'stackHas', stackHas, false, true));
            J$.P(5051873, J$.G(5051857, J$.R(5051849, 'Stack', Stack, false, true), 'prototype'), 'set', J$.R(5051865, 'stackSet', stackSet, false, true));
            J$.P(5051897, J$.I(typeof module === 'undefined' ? module = J$.R(5051881, 'module', undefined, true, true) : module = J$.R(5051881, 'module', module, true, true)), 'exports', J$.R(5051889, 'Stack', Stack, false, true));
        } catch (J$e) {
            J$.Ex(5051993, J$e);
        } finally {
            if (J$.Sr(5052001))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

