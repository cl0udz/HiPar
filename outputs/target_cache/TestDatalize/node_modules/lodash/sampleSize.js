J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5816281, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/sampleSize.js');
            function sampleSize(collection, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5816209, arguments.callee, this, arguments);
                            arguments = J$.N(5816217, 'arguments', arguments, true, false, false);
                            collection = J$.N(5816225, 'collection', collection, true, false, false);
                            n = J$.N(5816233, 'n', n, true, false, false);
                            guard = J$.N(5816241, 'guard', guard, true, false, false);
                            J$.N(5816249, 'func', func, false, false, false);
                            if (J$.C(313168, J$.C(313160, J$.R(5816009, 'guard', guard, false, false)) ? J$.F(5816049, J$.R(5816017, 'isIterateeCall', isIterateeCall, false, true), false)(J$.R(5816025, 'collection', collection, false, false), J$.R(5816033, 'n', n, false, false), J$.R(5816041, 'guard', guard, false, false)) : J$.B(557946, '===', J$.R(5816057, 'n', n, false, false), J$.T(5816065, undefined, 24, false)))) {
                                n = J$.W(5816081, 'n', J$.T(5816073, 1, 22, false), n, false, false);
                            } else {
                                n = J$.W(5816113, 'n', J$.F(5816105, J$.R(5816089, 'toInteger', toInteger, false, true), false)(J$.R(5816097, 'n', n, false, false)), n, false, false);
                            }
                            var func = J$.W(5816161, 'func', J$.C(313176, J$.F(5816137, J$.R(5816121, 'isArray', isArray, false, true), false)(J$.R(5816129, 'collection', collection, false, false))) ? J$.R(5816145, 'arraySampleSize', arraySampleSize, false, true) : J$.R(5816153, 'baseSampleSize', baseSampleSize, false, true), func, false, false);
                            return J$.Rt(5816201, J$.F(5816193, J$.R(5816169, 'func', func, false, false), false)(J$.R(5816177, 'collection', collection, false, false), J$.R(5816185, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(5816345, J$e);
                        } finally {
                            if (J$.Fr(5816353))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5816289, 'arraySampleSize', arraySampleSize, false, false, false);
            J$.N(5816297, 'baseSampleSize', baseSampleSize, false, false, false);
            J$.N(5816305, 'isArray', isArray, false, false, false);
            J$.N(5816313, 'isIterateeCall', isIterateeCall, false, false, false);
            J$.N(5816321, 'toInteger', toInteger, false, false, false);
            sampleSize = J$.N(5816337, 'sampleSize', J$.T(5816329, sampleSize, 12, false), true, false, false);
            J$.T(5815841, 'use strict', 21, false);
            var arraySampleSize = J$.W(5815969, 'arraySampleSize', J$.F(5815865, J$.I(typeof require === 'undefined' ? require = J$.R(5815849, 'require', undefined, true, true) : require = J$.R(5815849, 'require', require, true, true)), false)(J$.T(5815857, './_arraySampleSize', 21, false)), arraySampleSize, false, true), baseSampleSize = J$.W(5815977, 'baseSampleSize', J$.F(5815889, J$.I(typeof require === 'undefined' ? require = J$.R(5815873, 'require', undefined, true, true) : require = J$.R(5815873, 'require', require, true, true)), false)(J$.T(5815881, './_baseSampleSize', 21, false)), baseSampleSize, false, true), isArray = J$.W(5815985, 'isArray', J$.F(5815913, J$.I(typeof require === 'undefined' ? require = J$.R(5815897, 'require', undefined, true, true) : require = J$.R(5815897, 'require', require, true, true)), false)(J$.T(5815905, './isArray', 21, false)), isArray, false, true), isIterateeCall = J$.W(5815993, 'isIterateeCall', J$.F(5815937, J$.I(typeof require === 'undefined' ? require = J$.R(5815921, 'require', undefined, true, true) : require = J$.R(5815921, 'require', require, true, true)), false)(J$.T(5815929, './_isIterateeCall', 21, false)), isIterateeCall, false, true), toInteger = J$.W(5816001, 'toInteger', J$.F(5815961, J$.I(typeof require === 'undefined' ? require = J$.R(5815945, 'require', undefined, true, true) : require = J$.R(5815945, 'require', require, true, true)), false)(J$.T(5815953, './toInteger', 21, false)), toInteger, false, true);
            J$.P(5816273, J$.I(typeof module === 'undefined' ? module = J$.R(5816257, 'module', undefined, true, true) : module = J$.R(5816257, 'module', module, true, true)), 'exports', J$.R(5816265, 'sampleSize', sampleSize, false, true));
        } catch (J$e) {
            J$.Ex(5816361, J$e);
        } finally {
            if (J$.Sr(5816369))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

