J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5049153, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_ListCache.js');
            function ListCache(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5048913, arguments.callee, this, arguments);
                            arguments = J$.N(5048921, 'arguments', arguments, true, false, false);
                            entries = J$.N(5048929, 'entries', entries, true, false, false);
                            J$.N(5048937, 'index', index, false, false, false);
                            J$.N(5048945, 'length', length, false, false, false);
                            J$.N(5048953, 'entry', entry, false, false, false);
                            var index = J$.W(5048761, 'index', J$.U(506834, '-', J$.T(5048713, 1, 22, false)), index, false, false), length = J$.W(5048769, 'length', J$.C(268496, J$.B(506842, '==', J$.R(5048721, 'entries', entries, false, false), J$.T(5048729, null, 25, false))) ? J$.T(5048737, 0, 22, false) : J$.G(5048753, J$.R(5048745, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(5048785, J$.R(5048777, 'this', this, false, false), 'clear', false)();
                            while (J$.C(268504, J$.B(506866, '<', index = J$.W(5048801, 'index', J$.B(506858, '+', J$.U(506850, '+', J$.R(5048793, 'index', index, false, false)), 1), index, false, false), J$.R(5048809, 'length', length, false, false)))) {
                                var entry = J$.W(5048841, 'entry', J$.G(5048833, J$.R(5048817, 'entries', entries, false, false), J$.R(5048825, 'index', index, false, false)), entry, false, false);
                                J$.M(5048905, J$.R(5048849, 'this', this, false, false), 'set', false)(J$.G(5048873, J$.R(5048857, 'entry', entry, false, false), J$.T(5048865, 0, 22, false)), J$.G(5048897, J$.R(5048881, 'entry', entry, false, false), J$.T(5048889, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5049217, J$e);
                        } finally {
                            if (J$.Fr(5049225))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5049161, 'listCacheClear', listCacheClear, false, false, false);
            J$.N(5049169, 'listCacheDelete', listCacheDelete, false, false, false);
            J$.N(5049177, 'listCacheGet', listCacheGet, false, false, false);
            J$.N(5049185, 'listCacheHas', listCacheHas, false, false, false);
            J$.N(5049193, 'listCacheSet', listCacheSet, false, false, false);
            ListCache = J$.N(5049209, 'ListCache', J$.T(5049201, ListCache, 12, false), true, false, false);
            J$.T(5048545, 'use strict', 21, false);
            var listCacheClear = J$.W(5048673, 'listCacheClear', J$.F(5048569, J$.I(typeof require === 'undefined' ? require = J$.R(5048553, 'require', undefined, true, true) : require = J$.R(5048553, 'require', require, true, true)), false)(J$.T(5048561, './_listCacheClear', 21, false)), listCacheClear, false, true), listCacheDelete = J$.W(5048681, 'listCacheDelete', J$.F(5048593, J$.I(typeof require === 'undefined' ? require = J$.R(5048577, 'require', undefined, true, true) : require = J$.R(5048577, 'require', require, true, true)), false)(J$.T(5048585, './_listCacheDelete', 21, false)), listCacheDelete, false, true), listCacheGet = J$.W(5048689, 'listCacheGet', J$.F(5048617, J$.I(typeof require === 'undefined' ? require = J$.R(5048601, 'require', undefined, true, true) : require = J$.R(5048601, 'require', require, true, true)), false)(J$.T(5048609, './_listCacheGet', 21, false)), listCacheGet, false, true), listCacheHas = J$.W(5048697, 'listCacheHas', J$.F(5048641, J$.I(typeof require === 'undefined' ? require = J$.R(5048625, 'require', undefined, true, true) : require = J$.R(5048625, 'require', require, true, true)), false)(J$.T(5048633, './_listCacheHas', 21, false)), listCacheHas, false, true), listCacheSet = J$.W(5048705, 'listCacheSet', J$.F(5048665, J$.I(typeof require === 'undefined' ? require = J$.R(5048649, 'require', undefined, true, true) : require = J$.R(5048649, 'require', require, true, true)), false)(J$.T(5048657, './_listCacheSet', 21, false)), listCacheSet, false, true);
            J$.P(5048985, J$.G(5048969, J$.R(5048961, 'ListCache', ListCache, false, true), 'prototype'), 'clear', J$.R(5048977, 'listCacheClear', listCacheClear, false, true));
            J$.P(5049025, J$.G(5049001, J$.R(5048993, 'ListCache', ListCache, false, true), 'prototype'), J$.T(5049009, 'delete', 21, false), J$.R(5049017, 'listCacheDelete', listCacheDelete, false, true));
            J$.P(5049057, J$.G(5049041, J$.R(5049033, 'ListCache', ListCache, false, true), 'prototype'), 'get', J$.R(5049049, 'listCacheGet', listCacheGet, false, true));
            J$.P(5049089, J$.G(5049073, J$.R(5049065, 'ListCache', ListCache, false, true), 'prototype'), 'has', J$.R(5049081, 'listCacheHas', listCacheHas, false, true));
            J$.P(5049121, J$.G(5049105, J$.R(5049097, 'ListCache', ListCache, false, true), 'prototype'), 'set', J$.R(5049113, 'listCacheSet', listCacheSet, false, true));
            J$.P(5049145, J$.I(typeof module === 'undefined' ? module = J$.R(5049129, 'module', undefined, true, true) : module = J$.R(5049129, 'module', module, true, true)), 'exports', J$.R(5049137, 'ListCache', ListCache, false, true));
        } catch (J$e) {
            J$.Ex(5049233, J$e);
        } finally {
            if (J$.Sr(5049241))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

