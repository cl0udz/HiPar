J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5114385, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_castPath.js');
            function castPath(value, object) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5114329, arguments.callee, this, arguments);
                            arguments = J$.N(5114337, 'arguments', arguments, true, false, false);
                            value = J$.N(5114345, 'value', value, true, false, false);
                            object = J$.N(5114353, 'object', object, true, false, false);
                            if (J$.C(272048, J$.F(5114209, J$.R(5114193, 'isArray', isArray, false, true), false)(J$.R(5114201, 'value', value, false, false)))) {
                                return J$.Rt(5114225, J$.R(5114217, 'value', value, false, false));
                            }
                            return J$.Rt(5114321, J$.C(272056, J$.F(5114257, J$.R(5114233, 'isKey', isKey, false, true), false)(J$.R(5114241, 'value', value, false, false), J$.R(5114249, 'object', object, false, false))) ? J$.T(5114273, [J$.R(5114265, 'value', value, false, false)], 10, false) : J$.F(5114313, J$.R(5114281, 'stringToPath', stringToPath, false, true), false)(J$.F(5114305, J$.R(5114289, 'toString', toString, false, true), false)(J$.R(5114297, 'value', value, false, false))));
                        } catch (J$e) {
                            J$.Ex(5114441, J$e);
                        } finally {
                            if (J$.Fr(5114449))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5114393, 'isArray', isArray, false, false, false);
            J$.N(5114401, 'isKey', isKey, false, false, false);
            J$.N(5114409, 'stringToPath', stringToPath, false, false, false);
            J$.N(5114417, 'toString', toString, false, false, false);
            castPath = J$.N(5114433, 'castPath', J$.T(5114425, castPath, 12, false), true, false, false);
            J$.T(5114057, 'use strict', 21, false);
            var isArray = J$.W(5114161, 'isArray', J$.F(5114081, J$.I(typeof require === 'undefined' ? require = J$.R(5114065, 'require', undefined, true, true) : require = J$.R(5114065, 'require', require, true, true)), false)(J$.T(5114073, './isArray', 21, false)), isArray, false, true), isKey = J$.W(5114169, 'isKey', J$.F(5114105, J$.I(typeof require === 'undefined' ? require = J$.R(5114089, 'require', undefined, true, true) : require = J$.R(5114089, 'require', require, true, true)), false)(J$.T(5114097, './_isKey', 21, false)), isKey, false, true), stringToPath = J$.W(5114177, 'stringToPath', J$.F(5114129, J$.I(typeof require === 'undefined' ? require = J$.R(5114113, 'require', undefined, true, true) : require = J$.R(5114113, 'require', require, true, true)), false)(J$.T(5114121, './_stringToPath', 21, false)), stringToPath, false, true), toString = J$.W(5114185, 'toString', J$.F(5114153, J$.I(typeof require === 'undefined' ? require = J$.R(5114137, 'require', undefined, true, true) : require = J$.R(5114137, 'require', require, true, true)), false)(J$.T(5114145, './toString', 21, false)), toString, false, true);
            J$.P(5114377, J$.I(typeof module === 'undefined' ? module = J$.R(5114361, 'module', undefined, true, true) : module = J$.R(5114361, 'module', module, true, true)), 'exports', J$.R(5114369, 'castPath', castPath, false, true));
        } catch (J$e) {
            J$.Ex(5114457, J$e);
        } finally {
            if (J$.Sr(5114465))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

