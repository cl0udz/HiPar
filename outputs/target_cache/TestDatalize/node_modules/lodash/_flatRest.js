J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5153025, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_flatRest.js');
            function flatRest(func) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5152977, arguments.callee, this, arguments);
                            arguments = J$.N(5152985, 'arguments', arguments, true, false, false);
                            func = J$.N(5152993, 'func', func, true, false, false);
                            return J$.Rt(5152969, J$.F(5152961, J$.R(5152897, 'setToString', setToString, false, true), false)(J$.F(5152937, J$.R(5152905, 'overRest', overRest, false, true), false)(J$.R(5152913, 'func', func, false, false), J$.T(5152921, undefined, 24, false), J$.R(5152929, 'flatten', flatten, false, true)), J$.B(514042, '+', J$.R(5152945, 'func', func, false, false), J$.T(5152953, '', 21, false))));
                        } catch (J$e) {
                            J$.Ex(5153073, J$e);
                        } finally {
                            if (J$.Fr(5153081))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5153033, 'flatten', flatten, false, false, false);
            J$.N(5153041, 'overRest', overRest, false, false, false);
            J$.N(5153049, 'setToString', setToString, false, false, false);
            flatRest = J$.N(5153065, 'flatRest', J$.T(5153057, flatRest, 12, false), true, false, false);
            J$.T(5152793, 'use strict', 21, false);
            var flatten = J$.W(5152873, 'flatten', J$.F(5152817, J$.I(typeof require === 'undefined' ? require = J$.R(5152801, 'require', undefined, true, true) : require = J$.R(5152801, 'require', require, true, true)), false)(J$.T(5152809, './flatten', 21, false)), flatten, false, true), overRest = J$.W(5152881, 'overRest', J$.F(5152841, J$.I(typeof require === 'undefined' ? require = J$.R(5152825, 'require', undefined, true, true) : require = J$.R(5152825, 'require', require, true, true)), false)(J$.T(5152833, './_overRest', 21, false)), overRest, false, true), setToString = J$.W(5152889, 'setToString', J$.F(5152865, J$.I(typeof require === 'undefined' ? require = J$.R(5152849, 'require', undefined, true, true) : require = J$.R(5152849, 'require', require, true, true)), false)(J$.T(5152857, './_setToString', 21, false)), setToString, false, true);
            J$.P(5153017, J$.I(typeof module === 'undefined' ? module = J$.R(5153001, 'module', undefined, true, true) : module = J$.R(5153001, 'module', module, true, true)), 'exports', J$.R(5153009, 'flatRest', flatRest, false, true));
        } catch (J$e) {
            J$.Ex(5153089, J$e);
        } finally {
            if (J$.Sr(5153097))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

