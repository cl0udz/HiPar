J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5051321, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_SetCache.js');
            function SetCache(values) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5051169, arguments.callee, this, arguments);
                            arguments = J$.N(5051177, 'arguments', arguments, true, false, false);
                            values = J$.N(5051185, 'values', values, true, false, false);
                            J$.N(5051193, 'index', index, false, false, false);
                            J$.N(5051201, 'length', length, false, false, false);
                            var index = J$.W(5051057, 'index', J$.U(506930, '-', J$.T(5051009, 1, 22, false)), index, false, false), length = J$.W(5051065, 'length', J$.C(268528, J$.B(506938, '==', J$.R(5051017, 'values', values, false, false), J$.T(5051025, null, 25, false))) ? J$.T(5051033, 0, 22, false) : J$.G(5051049, J$.R(5051041, 'values', values, false, false), 'length'), length, false, false);
                            J$.P(5051097, J$.R(5051073, 'this', this, false, false), '__data__', J$.F(5051089, J$.R(5051081, 'MapCache', MapCache, false, true), true)());
                            while (J$.C(268536, J$.B(506962, '<', index = J$.W(5051113, 'index', J$.B(506954, '+', J$.U(506946, '+', J$.R(5051105, 'index', index, false, false)), 1), index, false, false), J$.R(5051121, 'length', length, false, false)))) {
                                J$.M(5051161, J$.R(5051129, 'this', this, false, false), 'add', false)(J$.G(5051153, J$.R(5051137, 'values', values, false, false), J$.R(5051145, 'index', index, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5051369, J$e);
                        } finally {
                            if (J$.Fr(5051377))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5051329, 'MapCache', MapCache, false, false, false);
            J$.N(5051337, 'setCacheAdd', setCacheAdd, false, false, false);
            J$.N(5051345, 'setCacheHas', setCacheHas, false, false, false);
            SetCache = J$.N(5051361, 'SetCache', J$.T(5051353, SetCache, 12, false), true, false, false);
            J$.T(5050905, 'use strict', 21, false);
            var MapCache = J$.W(5050985, 'MapCache', J$.F(5050929, J$.I(typeof require === 'undefined' ? require = J$.R(5050913, 'require', undefined, true, true) : require = J$.R(5050913, 'require', require, true, true)), false)(J$.T(5050921, './_MapCache', 21, false)), MapCache, false, true), setCacheAdd = J$.W(5050993, 'setCacheAdd', J$.F(5050953, J$.I(typeof require === 'undefined' ? require = J$.R(5050937, 'require', undefined, true, true) : require = J$.R(5050937, 'require', require, true, true)), false)(J$.T(5050945, './_setCacheAdd', 21, false)), setCacheAdd, false, true), setCacheHas = J$.W(5051001, 'setCacheHas', J$.F(5050977, J$.I(typeof require === 'undefined' ? require = J$.R(5050961, 'require', undefined, true, true) : require = J$.R(5050961, 'require', require, true, true)), false)(J$.T(5050969, './_setCacheHas', 21, false)), setCacheHas, false, true);
            J$.P(5051257, J$.G(5051217, J$.R(5051209, 'SetCache', SetCache, false, true), 'prototype'), 'add', J$.P(5051249, J$.G(5051233, J$.R(5051225, 'SetCache', SetCache, false, true), 'prototype'), 'push', J$.R(5051241, 'setCacheAdd', setCacheAdd, false, true)));
            J$.P(5051289, J$.G(5051273, J$.R(5051265, 'SetCache', SetCache, false, true), 'prototype'), 'has', J$.R(5051281, 'setCacheHas', setCacheHas, false, true));
            J$.P(5051313, J$.I(typeof module === 'undefined' ? module = J$.R(5051297, 'module', undefined, true, true) : module = J$.R(5051297, 'module', module, true, true)), 'exports', J$.R(5051305, 'SetCache', SetCache, false, true));
        } catch (J$e) {
            J$.Ex(5051385, J$e);
        } finally {
            if (J$.Sr(5051393))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

