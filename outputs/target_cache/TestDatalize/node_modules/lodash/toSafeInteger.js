J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5838425, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/toSafeInteger.js');
            function toSafeInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5838377, arguments.callee, this, arguments);
                            arguments = J$.N(5838385, 'arguments', arguments, true, false, false);
                            value = J$.N(5838393, 'value', value, true, false, false);
                            return J$.Rt(5838369, J$.C(314224, J$.R(5838273, 'value', value, false, false)) ? J$.F(5838329, J$.R(5838281, 'baseClamp', baseClamp, false, true), false)(J$.F(5838305, J$.R(5838289, 'toInteger', toInteger, false, true), false)(J$.R(5838297, 'value', value, false, false)), J$.U(558994, '-', J$.R(5838313, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)), J$.R(5838321, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, true)) : J$.C(314216, J$.B(559002, '===', J$.R(5838337, 'value', value, false, false), J$.T(5838345, 0, 22, false))) ? J$.R(5838353, 'value', value, false, false) : J$.T(5838361, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(5838473, J$e);
                        } finally {
                            if (J$.Fr(5838481))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5838433, 'baseClamp', baseClamp, false, false, false);
            J$.N(5838441, 'toInteger', toInteger, false, false, false);
            J$.N(5838449, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, false, false, false);
            toSafeInteger = J$.N(5838465, 'toSafeInteger', J$.T(5838457, toSafeInteger, 12, false), true, false, false);
            J$.T(5838185, 'use strict', 21, false);
            var baseClamp = J$.W(5838241, 'baseClamp', J$.F(5838209, J$.I(typeof require === 'undefined' ? require = J$.R(5838193, 'require', undefined, true, true) : require = J$.R(5838193, 'require', require, true, true)), false)(J$.T(5838201, './_baseClamp', 21, false)), baseClamp, false, true), toInteger = J$.W(5838249, 'toInteger', J$.F(5838233, J$.I(typeof require === 'undefined' ? require = J$.R(5838217, 'require', undefined, true, true) : require = J$.R(5838217, 'require', require, true, true)), false)(J$.T(5838225, './toInteger', 21, false)), toInteger, false, true);
            var MAX_SAFE_INTEGER = J$.W(5838265, 'MAX_SAFE_INTEGER', J$.T(5838257, 9007199254740991, 22, false), MAX_SAFE_INTEGER, false, true);
            J$.P(5838417, J$.I(typeof module === 'undefined' ? module = J$.R(5838401, 'module', undefined, true, true) : module = J$.R(5838401, 'module', module, true, true)), 'exports', J$.R(5838409, 'toSafeInteger', toSafeInteger, false, true));
        } catch (J$e) {
            J$.Ex(5838489, J$e);
        } finally {
            if (J$.Sr(5838497))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

