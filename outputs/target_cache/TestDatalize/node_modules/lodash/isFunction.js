J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5417857, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/isFunction.js');
            function isFunction(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5417801, arguments.callee, this, arguments);
                            arguments = J$.N(5417809, 'arguments', arguments, true, false, false);
                            value = J$.N(5417817, 'value', value, true, false, false);
                            J$.N(5417825, 'tag', tag, false, false, false);
                            if (J$.C(285040, J$.U(527466, '!', J$.F(5417673, J$.R(5417657, 'isObject', isObject, false, true), false)(J$.R(5417665, 'value', value, false, false))))) {
                                return J$.Rt(5417689, J$.T(5417681, false, 23, false));
                            }
                            var tag = J$.W(5417721, 'tag', J$.F(5417713, J$.R(5417697, 'baseGetTag', baseGetTag, false, true), false)(J$.R(5417705, 'value', value, false, false)), tag, false, false);
                            return J$.Rt(5417793, J$.C(285064, J$.C(285056, J$.C(285048, J$.B(527474, '==', J$.R(5417729, 'tag', tag, false, false), J$.R(5417737, 'funcTag', funcTag, false, true))) ? J$._() : J$.B(527482, '==', J$.R(5417745, 'tag', tag, false, false), J$.R(5417753, 'genTag', genTag, false, true))) ? J$._() : J$.B(527490, '==', J$.R(5417761, 'tag', tag, false, false), J$.R(5417769, 'asyncTag', asyncTag, false, true))) ? J$._() : J$.B(527498, '==', J$.R(5417777, 'tag', tag, false, false), J$.R(5417785, 'proxyTag', proxyTag, false, true)));
                        } catch (J$e) {
                            J$.Ex(5417929, J$e);
                        } finally {
                            if (J$.Fr(5417937))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5417865, 'baseGetTag', baseGetTag, false, false, false);
            J$.N(5417873, 'isObject', isObject, false, false, false);
            J$.N(5417881, 'asyncTag', asyncTag, false, false, false);
            J$.N(5417889, 'funcTag', funcTag, false, false, false);
            J$.N(5417897, 'genTag', genTag, false, false, false);
            J$.N(5417905, 'proxyTag', proxyTag, false, false, false);
            isFunction = J$.N(5417921, 'isFunction', J$.T(5417913, isFunction, 12, false), true, false, false);
            J$.T(5417521, 'use strict', 21, false);
            var baseGetTag = J$.W(5417577, 'baseGetTag', J$.F(5417545, J$.I(typeof require === 'undefined' ? require = J$.R(5417529, 'require', undefined, true, true) : require = J$.R(5417529, 'require', require, true, true)), false)(J$.T(5417537, './_baseGetTag', 21, false)), baseGetTag, false, true), isObject = J$.W(5417585, 'isObject', J$.F(5417569, J$.I(typeof require === 'undefined' ? require = J$.R(5417553, 'require', undefined, true, true) : require = J$.R(5417553, 'require', require, true, true)), false)(J$.T(5417561, './isObject', 21, false)), isObject, false, true);
            var asyncTag = J$.W(5417625, 'asyncTag', J$.T(5417593, '[object AsyncFunction]', 21, false), asyncTag, false, true), funcTag = J$.W(5417633, 'funcTag', J$.T(5417601, '[object Function]', 21, false), funcTag, false, true), genTag = J$.W(5417641, 'genTag', J$.T(5417609, '[object GeneratorFunction]', 21, false), genTag, false, true), proxyTag = J$.W(5417649, 'proxyTag', J$.T(5417617, '[object Proxy]', 21, false), proxyTag, false, true);
            J$.P(5417849, J$.I(typeof module === 'undefined' ? module = J$.R(5417833, 'module', undefined, true, true) : module = J$.R(5417833, 'module', module, true, true)), 'exports', J$.R(5417841, 'isFunction', isFunction, false, true));
        } catch (J$e) {
            J$.Ex(5417945, J$e);
        } finally {
            if (J$.Sr(5417953))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

