J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5305377, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/flattenDepth.js');
            function flattenDepth(array, depth) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5305313, arguments.callee, this, arguments);
                            arguments = J$.N(5305321, 'arguments', arguments, true, false, false);
                            array = J$.N(5305329, 'array', array, true, false, false);
                            depth = J$.N(5305337, 'depth', depth, true, false, false);
                            J$.N(5305345, 'length', length, false, false, false);
                            var length = J$.W(5305185, 'length', J$.C(283448, J$.B(525994, '==', J$.R(5305145, 'array', array, false, false), J$.T(5305153, null, 25, false))) ? J$.T(5305161, 0, 22, false) : J$.G(5305177, J$.R(5305169, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(283456, J$.U(526002, '!', J$.R(5305193, 'length', length, false, false)))) {
                                return J$.Rt(5305209, J$.T(5305201, [], 10, false));
                            }
                            depth = J$.W(5305265, 'depth', J$.C(283464, J$.B(526010, '===', J$.R(5305217, 'depth', depth, false, false), J$.T(5305225, undefined, 24, false))) ? J$.T(5305233, 1, 22, false) : J$.F(5305257, J$.R(5305241, 'toInteger', toInteger, false, true), false)(J$.R(5305249, 'depth', depth, false, false)), depth, false, false);
                            return J$.Rt(5305305, J$.F(5305297, J$.R(5305273, 'baseFlatten', baseFlatten, false, true), false)(J$.R(5305281, 'array', array, false, false), J$.R(5305289, 'depth', depth, false, false)));
                        } catch (J$e) {
                            J$.Ex(5305417, J$e);
                        } finally {
                            if (J$.Fr(5305425))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5305385, 'baseFlatten', baseFlatten, false, false, false);
            J$.N(5305393, 'toInteger', toInteger, false, false, false);
            flattenDepth = J$.N(5305409, 'flattenDepth', J$.T(5305401, flattenDepth, 12, false), true, false, false);
            J$.T(5305073, 'use strict', 21, false);
            var baseFlatten = J$.W(5305129, 'baseFlatten', J$.F(5305097, J$.I(typeof require === 'undefined' ? require = J$.R(5305081, 'require', undefined, true, true) : require = J$.R(5305081, 'require', require, true, true)), false)(J$.T(5305089, './_baseFlatten', 21, false)), baseFlatten, false, true), toInteger = J$.W(5305137, 'toInteger', J$.F(5305121, J$.I(typeof require === 'undefined' ? require = J$.R(5305105, 'require', undefined, true, true) : require = J$.R(5305105, 'require', require, true, true)), false)(J$.T(5305113, './toInteger', 21, false)), toInteger, false, true);
            J$.P(5305369, J$.I(typeof module === 'undefined' ? module = J$.R(5305353, 'module', undefined, true, true) : module = J$.R(5305353, 'module', module, true, true)), 'exports', J$.R(5305361, 'flattenDepth', flattenDepth, false, true));
        } catch (J$e) {
            J$.Ex(5305433, J$e);
        } finally {
            if (J$.Sr(5305441))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

