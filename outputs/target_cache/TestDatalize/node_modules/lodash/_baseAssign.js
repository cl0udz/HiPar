J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5061073, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_baseAssign.js');
            function baseAssign(object, source) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5061017, arguments.callee, this, arguments);
                            arguments = J$.N(5061025, 'arguments', arguments, true, false, false);
                            object = J$.N(5061033, 'object', object, true, false, false);
                            source = J$.N(5061041, 'source', source, true, false, false);
                            return J$.Rt(5061009, J$.C(269120, J$.R(5060945, 'object', object, false, false)) ? J$.F(5061001, J$.R(5060953, 'copyObject', copyObject, false, true), false)(J$.R(5060961, 'source', source, false, false), J$.F(5060985, J$.R(5060969, 'keys', keys, false, true), false)(J$.R(5060977, 'source', source, false, false)), J$.R(5060993, 'object', object, false, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(5061113, J$e);
                        } finally {
                            if (J$.Fr(5061121))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5061081, 'copyObject', copyObject, false, false, false);
            J$.N(5061089, 'keys', keys, false, false, false);
            baseAssign = J$.N(5061105, 'baseAssign', J$.T(5061097, baseAssign, 12, false), true, false, false);
            J$.T(5060873, 'use strict', 21, false);
            var copyObject = J$.W(5060929, 'copyObject', J$.F(5060897, J$.I(typeof require === 'undefined' ? require = J$.R(5060881, 'require', undefined, true, true) : require = J$.R(5060881, 'require', require, true, true)), false)(J$.T(5060889, './_copyObject', 21, false)), copyObject, false, true), keys = J$.W(5060937, 'keys', J$.F(5060921, J$.I(typeof require === 'undefined' ? require = J$.R(5060905, 'require', undefined, true, true) : require = J$.R(5060905, 'require', require, true, true)), false)(J$.T(5060913, './keys', 21, false)), keys, false, true);
            J$.P(5061065, J$.I(typeof module === 'undefined' ? module = J$.R(5061049, 'module', undefined, true, true) : module = J$.R(5061049, 'module', module, true, true)), 'exports', J$.R(5061057, 'baseAssign', baseAssign, false, true));
        } catch (J$e) {
            J$.Ex(5061129, J$e);
        } finally {
            if (J$.Sr(5061137))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

