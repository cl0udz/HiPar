J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5110681, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/_baseUnset.js');
            function baseUnset(object, path) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5110625, arguments.callee, this, arguments);
                            arguments = J$.N(5110633, 'arguments', arguments, true, false, false);
                            object = J$.N(5110641, 'object', object, true, false, false);
                            path = J$.N(5110649, 'path', path, true, false, false);
                            path = J$.W(5110505, 'path', J$.F(5110497, J$.R(5110473, 'castPath', castPath, false, true), false)(J$.R(5110481, 'path', path, false, false), J$.R(5110489, 'object', object, false, false)), path, false, false);
                            object = J$.W(5110545, 'object', J$.F(5110537, J$.R(5110513, 'parent', parent, false, true), false)(J$.R(5110521, 'object', object, false, false), J$.R(5110529, 'path', path, false, false)), object, false, false);
                            return J$.Rt(5110617, J$.C(271880, J$.B(510794, '==', J$.R(5110553, 'object', object, false, false), J$.T(5110561, null, 25, false))) ? J$._() : J$.B(510802, 'delete', J$.R(5110569, 'object', object, false, false), J$.F(5110609, J$.R(5110577, 'toKey', toKey, false, true), false)(J$.F(5110601, J$.R(5110585, 'last', last, false, true), false)(J$.R(5110593, 'path', path, false, false)))));
                        } catch (J$e) {
                            J$.Ex(5110737, J$e);
                        } finally {
                            if (J$.Fr(5110745))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5110689, 'castPath', castPath, false, false, false);
            J$.N(5110697, 'last', last, false, false, false);
            J$.N(5110705, 'parent', parent, false, false, false);
            J$.N(5110713, 'toKey', toKey, false, false, false);
            baseUnset = J$.N(5110729, 'baseUnset', J$.T(5110721, baseUnset, 12, false), true, false, false);
            J$.T(5110337, 'use strict', 21, false);
            var castPath = J$.W(5110441, 'castPath', J$.F(5110361, J$.I(typeof require === 'undefined' ? require = J$.R(5110345, 'require', undefined, true, true) : require = J$.R(5110345, 'require', require, true, true)), false)(J$.T(5110353, './_castPath', 21, false)), castPath, false, true), last = J$.W(5110449, 'last', J$.F(5110385, J$.I(typeof require === 'undefined' ? require = J$.R(5110369, 'require', undefined, true, true) : require = J$.R(5110369, 'require', require, true, true)), false)(J$.T(5110377, './last', 21, false)), last, false, true), parent = J$.W(5110457, 'parent', J$.F(5110409, J$.I(typeof require === 'undefined' ? require = J$.R(5110393, 'require', undefined, true, true) : require = J$.R(5110393, 'require', require, true, true)), false)(J$.T(5110401, './_parent', 21, false)), parent, false, true), toKey = J$.W(5110465, 'toKey', J$.F(5110433, J$.I(typeof require === 'undefined' ? require = J$.R(5110417, 'require', undefined, true, true) : require = J$.R(5110417, 'require', require, true, true)), false)(J$.T(5110425, './_toKey', 21, false)), toKey, false, true);
            J$.P(5110673, J$.I(typeof module === 'undefined' ? module = J$.R(5110657, 'module', undefined, true, true) : module = J$.R(5110657, 'module', module, true, true)), 'exports', J$.R(5110665, 'baseUnset', baseUnset, false, true));
        } catch (J$e) {
            J$.Ex(5110753, J$e);
        } finally {
            if (J$.Sr(5110761))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

