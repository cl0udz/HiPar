J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(5365001, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/fp/max.js');
            J$.N(5365009, 'convert', convert, false, false, false);
            J$.N(5365017, 'func', func, false, false, false);
            J$.T(5364817, 'use strict', 21, false);
            var convert = J$.W(5364921, 'convert', J$.F(5364841, J$.I(typeof require === 'undefined' ? require = J$.R(5364825, 'require', undefined, true, true) : require = J$.R(5364825, 'require', require, true, true)), false)(J$.T(5364833, './convert', 21, false)), convert, false, true), func = J$.W(5364929, 'func', J$.F(5364913, J$.R(5364849, 'convert', convert, false, true), false)(J$.T(5364857, 'max', 21, false), J$.F(5364881, J$.I(typeof require === 'undefined' ? require = J$.R(5364865, 'require', undefined, true, true) : require = J$.R(5364865, 'require', require, true, true)), false)(J$.T(5364873, '../max', 21, false)), J$.F(5364905, J$.I(typeof require === 'undefined' ? require = J$.R(5364889, 'require', undefined, true, true) : require = J$.R(5364889, 'require', require, true, true)), false)(J$.T(5364897, './_falseOptions', 21, false))), func, false, true);
            J$.P(5364969, J$.R(5364937, 'func', func, false, true), 'placeholder', J$.F(5364961, J$.I(typeof require === 'undefined' ? require = J$.R(5364945, 'require', undefined, true, true) : require = J$.R(5364945, 'require', require, true, true)), false)(J$.T(5364953, './placeholder', 21, false)));
            J$.P(5364993, J$.I(typeof module === 'undefined' ? module = J$.R(5364977, 'module', undefined, true, true) : module = J$.R(5364977, 'module', module, true, true)), 'exports', J$.R(5364985, 'func', func, false, true));
        } catch (J$e) {
            J$.Ex(5365025, J$e);
        } finally {
            if (J$.Sr(5365033))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

