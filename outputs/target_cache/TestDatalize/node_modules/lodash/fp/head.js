J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(5349105, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/fp/head.js');
            J$.N(5349113, 'convert', convert, false, false, false);
            J$.N(5349121, 'func', func, false, false, false);
            J$.T(5348921, 'use strict', 21, false);
            var convert = J$.W(5349025, 'convert', J$.F(5348945, J$.I(typeof require === 'undefined' ? require = J$.R(5348929, 'require', undefined, true, true) : require = J$.R(5348929, 'require', require, true, true)), false)(J$.T(5348937, './convert', 21, false)), convert, false, true), func = J$.W(5349033, 'func', J$.F(5349017, J$.R(5348953, 'convert', convert, false, true), false)(J$.T(5348961, 'head', 21, false), J$.F(5348985, J$.I(typeof require === 'undefined' ? require = J$.R(5348969, 'require', undefined, true, true) : require = J$.R(5348969, 'require', require, true, true)), false)(J$.T(5348977, '../head', 21, false)), J$.F(5349009, J$.I(typeof require === 'undefined' ? require = J$.R(5348993, 'require', undefined, true, true) : require = J$.R(5348993, 'require', require, true, true)), false)(J$.T(5349001, './_falseOptions', 21, false))), func, false, true);
            J$.P(5349073, J$.R(5349041, 'func', func, false, true), 'placeholder', J$.F(5349065, J$.I(typeof require === 'undefined' ? require = J$.R(5349049, 'require', undefined, true, true) : require = J$.R(5349049, 'require', require, true, true)), false)(J$.T(5349057, './placeholder', 21, false)));
            J$.P(5349097, J$.I(typeof module === 'undefined' ? module = J$.R(5349081, 'module', undefined, true, true) : module = J$.R(5349081, 'module', module, true, true)), 'exports', J$.R(5349089, 'func', func, false, true));
        } catch (J$e) {
            J$.Ex(5349129, J$e);
        } finally {
            if (J$.Sr(5349137))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

