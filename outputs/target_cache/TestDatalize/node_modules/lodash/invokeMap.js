J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5411169, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/invokeMap.js');
            J$.N(5411177, 'apply', apply, false, false, false);
            J$.N(5411185, 'baseEach', baseEach, false, false, false);
            J$.N(5411193, 'baseInvoke', baseInvoke, false, false, false);
            J$.N(5411201, 'baseRest', baseRest, false, false, false);
            J$.N(5411209, 'isArrayLike', isArrayLike, false, false, false);
            J$.N(5411217, 'invokeMap', invokeMap, false, false, false);
            J$.T(5410577, 'use strict', 21, false);
            var apply = J$.W(5410705, 'apply', J$.F(5410601, J$.I(typeof require === 'undefined' ? require = J$.R(5410585, 'require', undefined, true, true) : require = J$.R(5410585, 'require', require, true, true)), false)(J$.T(5410593, './_apply', 21, false)), apply, false, true), baseEach = J$.W(5410713, 'baseEach', J$.F(5410625, J$.I(typeof require === 'undefined' ? require = J$.R(5410609, 'require', undefined, true, true) : require = J$.R(5410609, 'require', require, true, true)), false)(J$.T(5410617, './_baseEach', 21, false)), baseEach, false, true), baseInvoke = J$.W(5410721, 'baseInvoke', J$.F(5410649, J$.I(typeof require === 'undefined' ? require = J$.R(5410633, 'require', undefined, true, true) : require = J$.R(5410633, 'require', require, true, true)), false)(J$.T(5410641, './_baseInvoke', 21, false)), baseInvoke, false, true), baseRest = J$.W(5410729, 'baseRest', J$.F(5410673, J$.I(typeof require === 'undefined' ? require = J$.R(5410657, 'require', undefined, true, true) : require = J$.R(5410657, 'require', require, true, true)), false)(J$.T(5410665, './_baseRest', 21, false)), baseRest, false, true), isArrayLike = J$.W(5410737, 'isArrayLike', J$.F(5410697, J$.I(typeof require === 'undefined' ? require = J$.R(5410681, 'require', undefined, true, true) : require = J$.R(5410681, 'require', require, true, true)), false)(J$.T(5410689, './isArrayLike', 21, false)), isArrayLike, false, true);
            var invokeMap = J$.W(5411137, 'invokeMap', J$.F(5411129, J$.R(5410745, 'baseRest', baseRest, false, true), false)(J$.T(5411121, function (collection, path, args) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5411057, arguments.callee, this, arguments);
                            arguments = J$.N(5411065, 'arguments', arguments, true, false, false);
                            collection = J$.N(5411073, 'collection', collection, true, false, false);
                            path = J$.N(5411081, 'path', path, true, false, false);
                            args = J$.N(5411089, 'args', args, true, false, false);
                            J$.N(5411097, 'index', index, false, false, false);
                            J$.N(5411105, 'isFunc', isFunc, false, false, false);
                            J$.N(5411113, 'result', result, false, false, false);
                            var index = J$.W(5410841, 'index', J$.U(526954, '-', J$.T(5410753, 1, 22, false)), index, false, false), isFunc = J$.W(5410849, 'isFunc', J$.B(526970, '==', J$.U(526962, 'typeof', J$.R(5410761, 'path', path, false, false)), J$.T(5410769, 'function', 21, false)), isFunc, false, false), result = J$.W(5410857, 'result', J$.C(284536, J$.F(5410793, J$.R(5410777, 'isArrayLike', isArrayLike, false, true), false)(J$.R(5410785, 'collection', collection, false, false))) ? J$.F(5410825, J$.I(typeof Array === 'undefined' ? Array = J$.R(5410801, 'Array', undefined, true, true) : Array = J$.R(5410801, 'Array', Array, true, true)), false)(J$.G(5410817, J$.R(5410809, 'collection', collection, false, false), 'length')) : J$.T(5410833, [], 10, false), result, false, false);
                            J$.F(5411033, J$.R(5410865, 'baseEach', baseEach, false, true), false)(J$.R(5410873, 'collection', collection, false, false), J$.T(5411025, function (value) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(5411001, arguments.callee, this, arguments);
                                            arguments = J$.N(5411009, 'arguments', arguments, true, false, false);
                                            value = J$.N(5411017, 'value', value, true, false, false);
                                            J$.P(5410993, J$.R(5410881, 'result', result, false, false), index = J$.W(5410897, 'index', J$.B(526986, '+', J$.U(526978, '+', J$.R(5410889, 'index', index, false, false)), 1), index, false, false), J$.C(284544, J$.R(5410905, 'isFunc', isFunc, false, false)) ? J$.F(5410945, J$.R(5410913, 'apply', apply, false, true), false)(J$.R(5410921, 'path', path, false, false), J$.R(5410929, 'value', value, false, false), J$.R(5410937, 'args', args, false, false)) : J$.F(5410985, J$.R(5410953, 'baseInvoke', baseInvoke, false, true), false)(J$.R(5410961, 'value', value, false, false), J$.R(5410969, 'path', path, false, false), J$.R(5410977, 'args', args, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(5411225, J$e);
                                        } finally {
                                            if (J$.Fr(5411233))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(5411049, J$.R(5411041, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(5411241, J$e);
                        } finally {
                            if (J$.Fr(5411249))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), invokeMap, false, true);
            J$.P(5411161, J$.I(typeof module === 'undefined' ? module = J$.R(5411145, 'module', undefined, true, true) : module = J$.R(5411145, 'module', module, true, true)), 'exports', J$.R(5411153, 'invokeMap', invokeMap, false, true));
        } catch (J$e) {
            J$.Ex(5411257, J$e);
        } finally {
            if (J$.Sr(5411265))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

