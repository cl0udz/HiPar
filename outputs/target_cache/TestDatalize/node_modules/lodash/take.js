J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(5827905, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/lodash/take.js');
            function take(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5827841, arguments.callee, this, arguments);
                            arguments = J$.N(5827849, 'arguments', arguments, true, false, false);
                            array = J$.N(5827857, 'array', array, true, false, false);
                            n = J$.N(5827865, 'n', n, true, false, false);
                            guard = J$.N(5827873, 'guard', guard, true, false, false);
                            if (J$.C(313656, J$.U(558306, '!', J$.C(313648, J$.R(5827665, 'array', array, false, false)) ? J$.G(5827681, J$.R(5827673, 'array', array, false, false), 'length') : J$._()))) {
                                return J$.Rt(5827697, J$.T(5827689, [], 10, false));
                            }
                            n = J$.W(5827761, 'n', J$.C(313672, J$.C(313664, J$.R(5827705, 'guard', guard, false, false)) ? J$._() : J$.B(558314, '===', J$.R(5827713, 'n', n, false, false), J$.T(5827721, undefined, 24, false))) ? J$.T(5827729, 1, 22, false) : J$.F(5827753, J$.R(5827737, 'toInteger', toInteger, false, true), false)(J$.R(5827745, 'n', n, false, false)), n, false, false);
                            return J$.Rt(5827833, J$.F(5827825, J$.R(5827769, 'baseSlice', baseSlice, false, true), false)(J$.R(5827777, 'array', array, false, false), J$.T(5827785, 0, 22, false), J$.C(313680, J$.B(558322, '<', J$.R(5827793, 'n', n, false, false), J$.T(5827801, 0, 22, false))) ? J$.T(5827809, 0, 22, false) : J$.R(5827817, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(5827945, J$e);
                        } finally {
                            if (J$.Fr(5827953))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5827913, 'baseSlice', baseSlice, false, false, false);
            J$.N(5827921, 'toInteger', toInteger, false, false, false);
            take = J$.N(5827937, 'take', J$.T(5827929, take, 12, false), true, false, false);
            J$.T(5827593, 'use strict', 21, false);
            var baseSlice = J$.W(5827649, 'baseSlice', J$.F(5827617, J$.I(typeof require === 'undefined' ? require = J$.R(5827601, 'require', undefined, true, true) : require = J$.R(5827601, 'require', require, true, true)), false)(J$.T(5827609, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(5827657, 'toInteger', J$.F(5827641, J$.I(typeof require === 'undefined' ? require = J$.R(5827625, 'require', undefined, true, true) : require = J$.R(5827625, 'require', require, true, true)), false)(J$.T(5827633, './toInteger', 21, false)), toInteger, false, true);
            J$.P(5827897, J$.I(typeof module === 'undefined' ? module = J$.R(5827881, 'module', undefined, true, true) : module = J$.R(5827881, 'module', module, true, true)), 'exports', J$.R(5827889, 'take', take, false, true));
        } catch (J$e) {
            J$.Ex(5827961, J$e);
        } finally {
            if (J$.Sr(5827969))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

