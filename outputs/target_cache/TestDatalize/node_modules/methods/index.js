J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(5863809, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/methods/index.js');
            function getCurrentNodeMethods() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5863553, arguments.callee, this, arguments);
                            arguments = J$.N(5863561, 'arguments', arguments, true, false, false);
                            return J$.Rt(5863545, J$.C(315360, J$.G(5863457, J$.R(5863449, 'http', http, false, true), 'METHODS')) ? J$.M(5863537, J$.G(5863473, J$.R(5863465, 'http', http, false, true), 'METHODS'), 'map', false)(J$.T(5863529, function lowerCaseMethod(method) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(5863505, arguments.callee, this, arguments);
                                            arguments = J$.N(5863513, 'arguments', arguments, true, false, false);
                                            method = J$.N(5863521, 'method', method, true, false, false);
                                            return J$.Rt(5863497, J$.M(5863489, J$.R(5863481, 'method', method, false, false), 'toLowerCase', false)());
                                        } catch (J$e) {
                                            J$.Ex(5863857, J$e);
                                        } finally {
                                            if (J$.Fr(5863865))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(5863873, J$e);
                        } finally {
                            if (J$.Fr(5863881))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getBasicNodeMethods() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5863793, arguments.callee, this, arguments);
                            arguments = J$.N(5863801, 'arguments', arguments, true, false, false);
                            return J$.Rt(5863785, J$.T(5863777, [
                                J$.T(5863569, 'get', 21, false),
                                J$.T(5863577, 'post', 21, false),
                                J$.T(5863585, 'put', 21, false),
                                J$.T(5863593, 'head', 21, false),
                                J$.T(5863601, 'delete', 21, false),
                                J$.T(5863609, 'options', 21, false),
                                J$.T(5863617, 'trace', 21, false),
                                J$.T(5863625, 'copy', 21, false),
                                J$.T(5863633, 'lock', 21, false),
                                J$.T(5863641, 'mkcol', 21, false),
                                J$.T(5863649, 'move', 21, false),
                                J$.T(5863657, 'purge', 21, false),
                                J$.T(5863665, 'propfind', 21, false),
                                J$.T(5863673, 'proppatch', 21, false),
                                J$.T(5863681, 'unlock', 21, false),
                                J$.T(5863689, 'report', 21, false),
                                J$.T(5863697, 'mkactivity', 21, false),
                                J$.T(5863705, 'checkout', 21, false),
                                J$.T(5863713, 'merge', 21, false),
                                J$.T(5863721, 'm-search', 21, false),
                                J$.T(5863729, 'notify', 21, false),
                                J$.T(5863737, 'subscribe', 21, false),
                                J$.T(5863745, 'unsubscribe', 21, false),
                                J$.T(5863753, 'patch', 21, false),
                                J$.T(5863761, 'search', 21, false),
                                J$.T(5863769, 'connect', 21, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(5863889, J$e);
                        } finally {
                            if (J$.Fr(5863897))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5863817, 'http', http, false, false, false);
            getCurrentNodeMethods = J$.N(5863833, 'getCurrentNodeMethods', J$.T(5863825, getCurrentNodeMethods, 12, false), true, false, false);
            getBasicNodeMethods = J$.N(5863849, 'getBasicNodeMethods', J$.T(5863841, getBasicNodeMethods, 12, false), true, false, false);
            J$.T(5863313, 'use strict', 21, false);
            J$.F(5863337, J$.I(typeof require === 'undefined' ? require = J$.R(5863321, 'require', undefined, true, true) : require = J$.R(5863321, 'require', require, true, true)), false)(J$.T(5863329, 'core-js/modules/es.array.map', 21, false));
            J$.F(5863361, J$.I(typeof require === 'undefined' ? require = J$.R(5863345, 'require', undefined, true, true) : require = J$.R(5863345, 'require', require, true, true)), false)(J$.T(5863353, 'core-js/modules/es.array.map', 21, false));
            var http = J$.W(5863393, 'http', J$.F(5863385, J$.I(typeof require === 'undefined' ? require = J$.R(5863369, 'require', undefined, true, true) : require = J$.R(5863369, 'require', require, true, true)), false)(J$.T(5863377, 'http', 21, false)), http, false, true);
            J$.P(5863441, J$.I(typeof module === 'undefined' ? module = J$.R(5863401, 'module', undefined, true, true) : module = J$.R(5863401, 'module', module, true, true)), 'exports', J$.C(315352, J$.F(5863417, J$.R(5863409, 'getCurrentNodeMethods', getCurrentNodeMethods, false, true), false)()) ? J$._() : J$.F(5863433, J$.R(5863425, 'getBasicNodeMethods', getBasicNodeMethods, false, true), false)());
        } catch (J$e) {
            J$.Ex(5863905, J$e);
        } finally {
            if (J$.Sr(5863913))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

