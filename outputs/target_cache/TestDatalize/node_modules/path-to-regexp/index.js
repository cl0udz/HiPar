J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(5900689, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/path-to-regexp/index.js');
            function pathtoRegexp(path, keys, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5900569, arguments.callee, this, arguments);
                            arguments = J$.N(5900577, 'arguments', arguments, true, false, false);
                            path = J$.N(5900585, 'path', path, true, false, false);
                            keys = J$.N(5900593, 'keys', keys, true, false, false);
                            options = J$.N(5900601, 'options', options, true, false, false);
                            J$.N(5900609, 'strict', strict, false, false, false);
                            J$.N(5900617, 'end', end, false, false, false);
                            J$.N(5900625, 'flags', flags, false, false, false);
                            J$.N(5900633, 'extraOffset', extraOffset, false, false, false);
                            J$.N(5900641, 'keysOffset', keysOffset, false, false, false);
                            J$.N(5900649, 'i', i, false, false, false);
                            J$.N(5900657, 'name', name, false, false, false);
                            J$.N(5900665, 'm', m, false, false, false);
                            J$.N(5900673, 'escapeCount', escapeCount, false, false, false);
                            J$.N(5900681, 'index', index, false, false, false);
                            options = J$.W(5898697, 'options', J$.C(317560, J$.R(5898681, 'options', options, false, false)) ? J$._() : J$.T(5898689, {}, 11, false), options, false, false);
                            keys = J$.W(5898721, 'keys', J$.C(317568, J$.R(5898705, 'keys', keys, false, false)) ? J$._() : J$.T(5898713, [], 10, false), keys, false, false);
                            var strict = J$.W(5898745, 'strict', J$.G(5898737, J$.R(5898729, 'options', options, false, false), 'strict'), strict, false, false);
                            var end = J$.W(5898777, 'end', J$.B(562946, '!==', J$.G(5898761, J$.R(5898753, 'options', options, false, false), 'end'), J$.T(5898769, false, 23, false)), end, false, false);
                            var flags = J$.W(5898817, 'flags', J$.C(317576, J$.G(5898793, J$.R(5898785, 'options', options, false, false), 'sensitive')) ? J$.T(5898801, '', 21, false) : J$.T(5898809, 'i', 21, false), flags, false, false);
                            var extraOffset = J$.W(5898833, 'extraOffset', J$.T(5898825, 0, 22, false), extraOffset, false, false);
                            var keysOffset = J$.W(5898857, 'keysOffset', J$.G(5898849, J$.R(5898841, 'keys', keys, false, false), 'length'), keysOffset, false, false);
                            var i = J$.W(5898873, 'i', J$.T(5898865, 0, 22, false), i, false, false);
                            var name = J$.W(5898889, 'name', J$.T(5898881, 0, 22, false), name, false, false);
                            var m;
                            if (J$.C(317592, J$.B(562954, 'instanceof', J$.R(5898897, 'path', path, false, false), J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5898905, 'RegExp', undefined, true, true) : RegExp = J$.R(5898905, 'RegExp', RegExp, true, true))))) {
                                while (J$.C(317584, m = J$.W(5898945, 'm', J$.M(5898937, J$.R(5898913, 'MATCHING_GROUP_REGEXP', MATCHING_GROUP_REGEXP, false, true), 'exec', false)(J$.G(5898929, J$.R(5898921, 'path', path, false, false), 'source')), m, false, false))) {
                                    J$.M(5899009, J$.R(5898953, 'keys', keys, false, false), 'push', false)(J$.T(5899001, {
                                        name: J$.B(562978, '-', name = J$.W(5898969, 'name', J$.B(562970, '+', J$.U(562962, '+', J$.R(5898961, 'name', name, false, false)), 1), name, false, false), 1),
                                        optional: J$.T(5898977, false, 23, false),
                                        offset: J$.G(5898993, J$.R(5898985, 'm', m, false, false), 'index')
                                    }, 11, false));
                                }
                                return J$.Rt(5899025, J$.R(5899017, 'path', path, false, false));
                            }
                            if (J$.C(317600, J$.M(5899049, J$.I(typeof Array === 'undefined' ? Array = J$.R(5899033, 'Array', undefined, true, true) : Array = J$.R(5899033, 'Array', Array, true, true)), 'isArray', false)(J$.R(5899041, 'path', path, false, false)))) {
                                path = J$.W(5899161, 'path', J$.M(5899153, J$.R(5899057, 'path', path, false, false), 'map', false)(J$.T(5899145, function (value) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(5899121, arguments.callee, this, arguments);
                                                arguments = J$.N(5899129, 'arguments', arguments, true, false, false);
                                                value = J$.N(5899137, 'value', value, true, false, false);
                                                return J$.Rt(5899113, J$.G(5899105, J$.F(5899097, J$.R(5899065, 'pathtoRegexp', pathtoRegexp, false, true), false)(J$.R(5899073, 'value', value, false, false), J$.R(5899081, 'keys', keys, false, false), J$.R(5899089, 'options', options, false, false)), 'source'));
                                            } catch (J$e) {
                                                J$.Ex(5900721, J$e);
                                            } finally {
                                                if (J$.Fr(5900729))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), path, false, false);
                                return J$.Rt(5899233, J$.F(5899225, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5899169, 'RegExp', undefined, true, true) : RegExp = J$.R(5899169, 'RegExp', RegExp, true, true)), true)(J$.B(562994, '+', J$.B(562986, '+', J$.T(5899177, '(?:', 21, false), J$.M(5899201, J$.R(5899185, 'path', path, false, false), 'join', false)(J$.T(5899193, '|', 21, false))), J$.T(5899209, ')', 21, false)), J$.R(5899217, 'flags', flags, false, false)));
                            }
                            path = J$.W(5900081, 'path', J$.M(5900073, J$.M(5899865, J$.M(5899377, J$.M(5899353, J$.B(563026, '+', J$.B(563002, '+', J$.T(5899241, '^', 21, false), J$.R(5899249, 'path', path, false, false)), J$.C(317616, J$.R(5899257, 'strict', strict, false, false)) ? J$.T(5899265, '', 21, false) : J$.C(317608, J$.B(563018, '===', J$.G(5899305, J$.R(5899273, 'path', path, false, false), J$.B(563010, '-', J$.G(5899289, J$.R(5899281, 'path', path, false, false), 'length'), J$.T(5899297, 1, 22, false))), J$.T(5899313, '/', 21, false))) ? J$.T(5899321, '?', 21, false) : J$.T(5899329, '/?', 21, false)), 'replace', false)(J$.T(5899337, /\/\(/g, 14, false), J$.T(5899345, '/(?:', 21, false)), 'replace', false)(J$.T(5899361, /([\/\.])/g, 14, false), J$.T(5899369, '\\$1', 21, false)), 'replace', false)(J$.T(5899385, /(\\\/)?(\\\.)?:(\w+)(\(.*?\))?(\*)?(\?)?/g, 14, false), J$.T(5899857, function (match, slash, format, key, capture, star, optional, offset) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(5899769, arguments.callee, this, arguments);
                                            arguments = J$.N(5899777, 'arguments', arguments, true, false, false);
                                            match = J$.N(5899785, 'match', match, true, false, false);
                                            slash = J$.N(5899793, 'slash', slash, true, false, false);
                                            format = J$.N(5899801, 'format', format, true, false, false);
                                            key = J$.N(5899809, 'key', key, true, false, false);
                                            capture = J$.N(5899817, 'capture', capture, true, false, false);
                                            star = J$.N(5899825, 'star', star, true, false, false);
                                            optional = J$.N(5899833, 'optional', optional, true, false, false);
                                            offset = J$.N(5899841, 'offset', offset, true, false, false);
                                            J$.N(5899849, 'result', result, false, false, false);
                                            slash = J$.W(5899409, 'slash', J$.C(317624, J$.R(5899393, 'slash', slash, false, false)) ? J$._() : J$.T(5899401, '', 21, false), slash, false, false);
                                            format = J$.W(5899433, 'format', J$.C(317632, J$.R(5899417, 'format', format, false, false)) ? J$._() : J$.T(5899425, '', 21, false), format, false, false);
                                            capture = J$.W(5899473, 'capture', J$.C(317640, J$.R(5899441, 'capture', capture, false, false)) ? J$._() : J$.B(563042, '+', J$.B(563034, '+', J$.T(5899449, '([^\\/', 21, false), J$.R(5899457, 'format', format, false, false)), J$.T(5899465, ']+?)', 21, false)), capture, false, false);
                                            optional = J$.W(5899497, 'optional', J$.C(317648, J$.R(5899481, 'optional', optional, false, false)) ? J$._() : J$.T(5899489, '', 21, false), optional, false, false);
                                            J$.M(5899553, J$.R(5899505, 'keys', keys, false, false), 'push', false)(J$.T(5899545, {
                                                name: J$.R(5899513, 'key', key, false, false),
                                                optional: J$.U(563058, '!', J$.U(563050, '!', J$.R(5899521, 'optional', optional, false, false))),
                                                offset: J$.B(563066, '+', J$.R(5899529, 'offset', offset, false, false), J$.R(5899537, 'extraOffset', extraOffset, false, false))
                                            }, 11, false));
                                            var result = J$.W(5899697, 'result', J$.B(563146, '+', J$.B(563138, '+', J$.B(563130, '+', J$.B(563106, '+', J$.B(563098, '+', J$.B(563090, '+', J$.B(563082, '+', J$.B(563074, '+', J$.T(5899561, '', 21, false), J$.C(317656, J$.R(5899569, 'optional', optional, false, false)) ? J$.T(5899577, '', 21, false) : J$.R(5899585, 'slash', slash, false, false)), J$.T(5899593, '(?:', 21, false)), J$.R(5899601, 'format', format, false, false)), J$.C(317664, J$.R(5899609, 'optional', optional, false, false)) ? J$.R(5899617, 'slash', slash, false, false) : J$.T(5899625, '', 21, false)), J$.R(5899633, 'capture', capture, false, false)), J$.C(317672, J$.R(5899641, 'star', star, false, false)) ? J$.B(563122, '+', J$.B(563114, '+', J$.T(5899649, '((?:[\\/', 21, false), J$.R(5899657, 'format', format, false, false)), J$.T(5899665, '].+?)?)', 21, false)) : J$.T(5899673, '', 21, false)), J$.T(5899681, ')', 21, false)), J$.R(5899689, 'optional', optional, false, false)), result, false, false);
                                            extraOffset = J$.W(5899745, 'extraOffset', J$.B(563162, '+', J$.R(5899737, 'extraOffset', extraOffset, false, false), J$.B(563154, '-', J$.G(5899713, J$.R(5899705, 'result', result, false, false), 'length'), J$.G(5899729, J$.R(5899721, 'match', match, false, false), 'length'))), extraOffset, false, false);
                                            return J$.Rt(5899761, J$.R(5899753, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(5900737, J$e);
                                        } finally {
                                            if (J$.Fr(5900745))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'replace', false)(J$.T(5899873, /\*/g, 14, false), J$.T(5900065, function (star, index) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(5900025, arguments.callee, this, arguments);
                                            arguments = J$.N(5900033, 'arguments', arguments, true, false, false);
                                            star = J$.N(5900041, 'star', star, true, false, false);
                                            index = J$.N(5900049, 'index', index, true, false, false);
                                            J$.N(5900057, 'len', len, false, false, false);
                                            var len = J$.W(5899897, 'len', J$.G(5899889, J$.R(5899881, 'keys', keys, false, false), 'length'), len, false, false);
                                            while (J$.C(317688, J$.C(317680, J$.B(563194, '>', J$.B(563186, '+', len = J$.W(5899913, 'len', J$.B(563178, '-', J$.U(563170, '+', J$.R(5899905, 'len', len, false, false)), 1), len, false, false), 1), J$.R(5899921, 'keysOffset', keysOffset, false, false))) ? J$.B(563202, '>', J$.G(5899953, J$.G(5899945, J$.R(5899929, 'keys', keys, false, false), J$.R(5899937, 'len', len, false, false)), 'offset'), J$.R(5899961, 'index', index, false, false)) : J$._())) {
                                                J$.A(5900001, J$.G(5899985, J$.R(5899969, 'keys', keys, false, false), J$.R(5899977, 'len', len, false, false)), 'offset', '+')(J$.T(5899993, 3, 22, false));
                                            }
                                            return J$.Rt(5900017, J$.T(5900009, '(.*)', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(5900753, J$e);
                                        } finally {
                                            if (J$.Fr(5900761))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), path, false, false);
                            while (J$.C(317728, m = J$.W(5900113, 'm', J$.M(5900105, J$.R(5900089, 'MATCHING_GROUP_REGEXP', MATCHING_GROUP_REGEXP, false, true), 'exec', false)(J$.R(5900097, 'path', path, false, false)), m, false, false))) {
                                var escapeCount = J$.W(5900129, 'escapeCount', J$.T(5900121, 0, 22, false), escapeCount, false, false);
                                var index = J$.W(5900153, 'index', J$.G(5900145, J$.R(5900137, 'm', m, false, false), 'index'), index, false, false);
                                while (J$.C(317696, J$.B(563226, '===', J$.M(5900185, J$.R(5900161, 'path', path, false, false), 'charAt', false)(index = J$.W(5900177, 'index', J$.B(563218, '-', J$.U(563210, '+', J$.R(5900169, 'index', index, false, false)), 1), index, false, false)), J$.T(5900193, '\\', 21, false)))) {
                                    J$.B(563250, '-', escapeCount = J$.W(5900209, 'escapeCount', J$.B(563242, '+', J$.U(563234, '+', J$.R(5900201, 'escapeCount', escapeCount, false, false)), 1), escapeCount, false, false), 1);
                                }
                                if (J$.C(317704, J$.B(563266, '===', J$.B(563258, '%', J$.R(5900217, 'escapeCount', escapeCount, false, false), J$.T(5900225, 2, 22, false)), J$.T(5900233, 1, 22, false)))) {
                                    continue;
                                }
                                if (J$.C(317720, J$.C(317712, J$.B(563282, '===', J$.B(563274, '+', J$.R(5900241, 'keysOffset', keysOffset, false, false), J$.R(5900249, 'i', i, false, false)), J$.G(5900265, J$.R(5900257, 'keys', keys, false, false), 'length'))) ? J$._() : J$.B(563298, '>', J$.G(5900305, J$.G(5900297, J$.R(5900273, 'keys', keys, false, false), J$.B(563290, '+', J$.R(5900281, 'keysOffset', keysOffset, false, false), J$.R(5900289, 'i', i, false, false))), 'offset'), J$.G(5900321, J$.R(5900313, 'm', m, false, false), 'index')))) {
                                    J$.M(5900409, J$.R(5900329, 'keys', keys, false, false), 'splice', false)(J$.B(563306, '+', J$.R(5900337, 'keysOffset', keysOffset, false, false), J$.R(5900345, 'i', i, false, false)), J$.T(5900353, 0, 22, false), J$.T(5900401, {
                                        name: J$.B(563330, '-', name = J$.W(5900369, 'name', J$.B(563322, '+', J$.U(563314, '+', J$.R(5900361, 'name', name, false, false)), 1), name, false, false), 1),
                                        optional: J$.T(5900377, false, 23, false),
                                        offset: J$.G(5900393, J$.R(5900385, 'm', m, false, false), 'index')
                                    }, 11, false));
                                }
                                J$.B(563354, '-', i = J$.W(5900425, 'i', J$.B(563346, '+', J$.U(563338, '+', J$.R(5900417, 'i', i, false, false)), 1), i, false, false), 1);
                            }
                            path = J$.W(5900521, 'path', J$.B(563378, '+', J$.R(5900513, 'path', path, false, false), J$.C(317744, J$.R(5900433, 'end', end, false, false)) ? J$.T(5900441, '$', 21, false) : J$.C(317736, J$.B(563370, '===', J$.G(5900481, J$.R(5900449, 'path', path, false, false), J$.B(563362, '-', J$.G(5900465, J$.R(5900457, 'path', path, false, false), 'length'), J$.T(5900473, 1, 22, false))), J$.T(5900489, '/', 21, false))) ? J$.T(5900497, '', 21, false) : J$.T(5900505, '(?=\\/|$)', 21, false)), path, false, false);
                            return J$.Rt(5900561, J$.F(5900553, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5900529, 'RegExp', undefined, true, true) : RegExp = J$.R(5900529, 'RegExp', RegExp, true, true)), true)(J$.R(5900537, 'path', path, false, false), J$.R(5900545, 'flags', flags, false, false)));
                        } catch (J$e) {
                            J$.Ex(5900769, J$e);
                        } finally {
                            if (J$.Fr(5900777))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5900697, 'MATCHING_GROUP_REGEXP', MATCHING_GROUP_REGEXP, false, false, false);
            pathtoRegexp = J$.N(5900713, 'pathtoRegexp', J$.T(5900705, pathtoRegexp, 12, false), true, false, false);
            J$.T(5898249, 'use strict', 21, false);
            J$.F(5898273, J$.I(typeof require === 'undefined' ? require = J$.R(5898257, 'require', undefined, true, true) : require = J$.R(5898257, 'require', require, true, true)), false)(J$.T(5898265, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(5898297, J$.I(typeof require === 'undefined' ? require = J$.R(5898281, 'require', undefined, true, true) : require = J$.R(5898281, 'require', require, true, true)), false)(J$.T(5898289, 'core-js/modules/es.array.join', 21, false));
            J$.F(5898321, J$.I(typeof require === 'undefined' ? require = J$.R(5898305, 'require', undefined, true, true) : require = J$.R(5898305, 'require', require, true, true)), false)(J$.T(5898313, 'core-js/modules/es.array.map', 21, false));
            J$.F(5898345, J$.I(typeof require === 'undefined' ? require = J$.R(5898329, 'require', undefined, true, true) : require = J$.R(5898329, 'require', require, true, true)), false)(J$.T(5898337, 'core-js/modules/es.array.splice', 21, false));
            J$.F(5898369, J$.I(typeof require === 'undefined' ? require = J$.R(5898353, 'require', undefined, true, true) : require = J$.R(5898353, 'require', require, true, true)), false)(J$.T(5898361, 'core-js/modules/es.regexp.constructor', 21, false));
            J$.F(5898393, J$.I(typeof require === 'undefined' ? require = J$.R(5898377, 'require', undefined, true, true) : require = J$.R(5898377, 'require', require, true, true)), false)(J$.T(5898385, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(5898417, J$.I(typeof require === 'undefined' ? require = J$.R(5898401, 'require', undefined, true, true) : require = J$.R(5898401, 'require', require, true, true)), false)(J$.T(5898409, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(5898441, J$.I(typeof require === 'undefined' ? require = J$.R(5898425, 'require', undefined, true, true) : require = J$.R(5898425, 'require', require, true, true)), false)(J$.T(5898433, 'core-js/modules/es.string.replace', 21, false));
            J$.F(5898465, J$.I(typeof require === 'undefined' ? require = J$.R(5898449, 'require', undefined, true, true) : require = J$.R(5898449, 'require', require, true, true)), false)(J$.T(5898457, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(5898489, J$.I(typeof require === 'undefined' ? require = J$.R(5898473, 'require', undefined, true, true) : require = J$.R(5898473, 'require', require, true, true)), false)(J$.T(5898481, 'core-js/modules/es.array.join', 21, false));
            J$.F(5898513, J$.I(typeof require === 'undefined' ? require = J$.R(5898497, 'require', undefined, true, true) : require = J$.R(5898497, 'require', require, true, true)), false)(J$.T(5898505, 'core-js/modules/es.array.map', 21, false));
            J$.F(5898537, J$.I(typeof require === 'undefined' ? require = J$.R(5898521, 'require', undefined, true, true) : require = J$.R(5898521, 'require', require, true, true)), false)(J$.T(5898529, 'core-js/modules/es.array.splice', 21, false));
            J$.F(5898561, J$.I(typeof require === 'undefined' ? require = J$.R(5898545, 'require', undefined, true, true) : require = J$.R(5898545, 'require', require, true, true)), false)(J$.T(5898553, 'core-js/modules/es.regexp.constructor', 21, false));
            J$.F(5898585, J$.I(typeof require === 'undefined' ? require = J$.R(5898569, 'require', undefined, true, true) : require = J$.R(5898569, 'require', require, true, true)), false)(J$.T(5898577, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(5898609, J$.I(typeof require === 'undefined' ? require = J$.R(5898593, 'require', undefined, true, true) : require = J$.R(5898593, 'require', require, true, true)), false)(J$.T(5898601, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(5898633, J$.I(typeof require === 'undefined' ? require = J$.R(5898617, 'require', undefined, true, true) : require = J$.R(5898617, 'require', require, true, true)), false)(J$.T(5898625, 'core-js/modules/es.string.replace', 21, false));
            J$.P(5898657, J$.I(typeof module === 'undefined' ? module = J$.R(5898641, 'module', undefined, true, true) : module = J$.R(5898641, 'module', module, true, true)), 'exports', J$.R(5898649, 'pathtoRegexp', pathtoRegexp, false, true));
            var MATCHING_GROUP_REGEXP = J$.W(5898673, 'MATCHING_GROUP_REGEXP', J$.T(5898665, /\((?!\?)/g, 14, false), MATCHING_GROUP_REGEXP, false, true);
            ;
        } catch (J$e) {
            J$.Ex(5900785, J$e);
        } finally {
            if (J$.Sr(5900793))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

