J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(4795993, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/body-parser/lib/read.js');
            function read(req, res, next, parse, debug, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4795305, arguments.callee, this, arguments);
                            arguments = J$.N(4795313, 'arguments', arguments, true, false, false);
                            req = J$.N(4795321, 'req', req, true, false, false);
                            res = J$.N(4795329, 'res', res, true, false, false);
                            next = J$.N(4795337, 'next', next, true, false, false);
                            parse = J$.N(4795345, 'parse', parse, true, false, false);
                            debug = J$.N(4795353, 'debug', debug, true, false, false);
                            options = J$.N(4795361, 'options', options, true, false, false);
                            J$.N(4795369, 'length', length, false, false, false);
                            J$.N(4795377, 'opts', opts, false, false, false);
                            J$.N(4795385, 'stream', stream, false, false, false);
                            J$.N(4795393, 'encoding', encoding, false, false, false);
                            J$.N(4795401, 'verify', verify, false, false, false);
                            var length;
                            var opts = J$.W(4793945, 'opts', J$.R(4793937, 'options', options, false, false), opts, false, false);
                            var stream;
                            J$.P(4793969, J$.R(4793953, 'req', req, false, false), '_body', J$.T(4793961, true, 23, false));
                            var encoding = J$.W(4794025, 'encoding', J$.C(253416, J$.B(484666, '!==', J$.G(4793985, J$.R(4793977, 'opts', opts, false, false), 'encoding'), J$.T(4793993, null, 25, false))) ? J$.G(4794009, J$.R(4794001, 'opts', opts, false, false), 'encoding') : J$.T(4794017, null, 25, false), encoding, false, false);
                            var verify = J$.W(4794049, 'verify', J$.G(4794041, J$.R(4794033, 'opts', opts, false, false), 'verify'), verify, false, false);
                            try {
                                stream = J$.W(4794105, 'stream', J$.F(4794097, J$.R(4794057, 'contentstream', contentstream, false, true), false)(J$.R(4794065, 'req', req, false, false), J$.R(4794073, 'debug', debug, false, false), J$.G(4794089, J$.R(4794081, 'opts', opts, false, false), 'inflate')), stream, false, false);
                                length = J$.W(4794129, 'length', J$.G(4794121, J$.R(4794113, 'stream', stream, false, false), 'length'), length, false, false);
                                J$.P(4794153, J$.R(4794137, 'stream', stream, false, false), 'length', J$.T(4794145, undefined, 24, false));
                            } catch (err) {
                                J$.N(4794193, 'err', err, false, false, true);
                                return J$.Rt(4794185, J$.F(4794177, J$.R(4794161, 'next', next, false, false), false)(J$.R(4794169, 'err', err, false, false)));
                            }
                            J$.P(4794217, J$.R(4794201, 'opts', opts, false, false), 'length', J$.R(4794209, 'length', length, false, false));
                            J$.P(4794257, J$.R(4794225, 'opts', opts, false, false), 'encoding', J$.C(253424, J$.R(4794233, 'verify', verify, false, false)) ? J$.T(4794241, null, 25, false) : J$.R(4794249, 'encoding', encoding, false, false));
                            if (J$.C(253448, J$.C(253440, J$.C(253432, J$.B(484674, '===', J$.G(4794273, J$.R(4794265, 'opts', opts, false, false), 'encoding'), J$.T(4794281, null, 25, false))) ? J$.B(484682, '!==', J$.R(4794289, 'encoding', encoding, false, false), J$.T(4794297, null, 25, false)) : J$._()) ? J$.U(484690, '!', J$.M(4794321, J$.R(4794305, 'iconv', iconv, false, true), 'encodingExists', false)(J$.R(4794313, 'encoding', encoding, false, false))) : J$._())) {
                                return J$.Rt(4794433, J$.F(4794425, J$.R(4794329, 'next', next, false, false), false)(J$.F(4794417, J$.R(4794337, 'createError', createError, false, true), false)(J$.T(4794345, 415, 22, false), J$.B(484706, '+', J$.B(484698, '+', J$.T(4794353, 'unsupported charset "', 21, false), J$.M(4794369, J$.R(4794361, 'encoding', encoding, false, false), 'toUpperCase', false)()), J$.T(4794377, '"', 21, false)), J$.T(4794409, {
                                    charset: J$.M(4794393, J$.R(4794385, 'encoding', encoding, false, false), 'toLowerCase', false)(),
                                    type: J$.T(4794401, 'charset.unsupported', 21, false)
                                }, 11, false))));
                            }
                            J$.F(4794457, J$.R(4794441, 'debug', debug, false, false), false)(J$.T(4794449, 'read body', 21, false));
                            J$.F(4795297, J$.R(4794465, 'getBody', getBody, false, true), false)(J$.R(4794473, 'stream', stream, false, false), J$.R(4794481, 'opts', opts, false, false), J$.T(4795289, function (error, body) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(4795241, arguments.callee, this, arguments);
                                            arguments = J$.N(4795249, 'arguments', arguments, true, false, false);
                                            error = J$.N(4795257, 'error', error, true, false, false);
                                            body = J$.N(4795265, 'body', body, true, false, false);
                                            J$.N(4795273, '_error', _error, false, false, false);
                                            J$.N(4795281, 'str', str, false, false, false);
                                            if (J$.C(253464, J$.R(4794489, 'error', error, false, false))) {
                                                var _error;
                                                if (J$.C(253456, J$.B(484714, '===', J$.G(4794505, J$.R(4794497, 'error', error, false, false), 'type'), J$.T(4794513, 'encoding.unsupported', 21, false)))) {
                                                    _error = J$.W(4794609, '_error', J$.F(4794601, J$.R(4794521, 'createError', createError, false, true), false)(J$.T(4794529, 415, 22, false), J$.B(484730, '+', J$.B(484722, '+', J$.T(4794537, 'unsupported charset "', 21, false), J$.M(4794553, J$.R(4794545, 'encoding', encoding, false, false), 'toUpperCase', false)()), J$.T(4794561, '"', 21, false)), J$.T(4794593, {
                                                        charset: J$.M(4794577, J$.R(4794569, 'encoding', encoding, false, false), 'toLowerCase', false)(),
                                                        type: J$.T(4794585, 'charset.unsupported', 21, false)
                                                    }, 11, false)), _error, false, false);
                                                } else {
                                                    _error = J$.W(4794649, '_error', J$.F(4794641, J$.R(4794617, 'createError', createError, false, true), false)(J$.T(4794625, 400, 22, false), J$.R(4794633, 'error', error, false, false)), _error, false, false);
                                                }
                                                J$.M(4794665, J$.R(4794657, 'stream', stream, false, false), 'resume', false)();
                                                J$.F(4794761, J$.R(4794673, 'onFinished', onFinished, false, true), false)(J$.R(4794681, 'req', req, false, false), J$.T(4794753, function onfinished() {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(4794737, arguments.callee, this, arguments);
                                                                arguments = J$.N(4794745, 'arguments', arguments, true, false, false);
                                                                J$.F(4794729, J$.R(4794689, 'next', next, false, false), false)(J$.F(4794721, J$.R(4794697, 'createError', createError, false, true), false)(J$.T(4794705, 400, 22, false), J$.R(4794713, '_error', _error, false, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(4796073, J$e);
                                                            } finally {
                                                                if (J$.Fr(4796081))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(4794769, undefined);
                                            }
                                            if (J$.C(253480, J$.R(4794777, 'verify', verify, false, false))) {
                                                try {
                                                    J$.F(4794801, J$.R(4794785, 'debug', debug, false, false), false)(J$.T(4794793, 'verify body', 21, false));
                                                    J$.F(4794849, J$.R(4794809, 'verify', verify, false, false), false)(J$.R(4794817, 'req', req, false, false), J$.R(4794825, 'res', res, false, false), J$.R(4794833, 'body', body, false, false), J$.R(4794841, 'encoding', encoding, false, false));
                                                } catch (err) {
                                                    J$.N(4794953, 'err', err, false, false, true);
                                                    J$.F(4794937, J$.R(4794857, 'next', next, false, false), false)(J$.F(4794929, J$.R(4794865, 'createError', createError, false, true), false)(J$.T(4794873, 403, 22, false), J$.R(4794881, 'err', err, false, false), J$.T(4794921, {
                                                        body: J$.R(4794889, 'body', body, false, false),
                                                        type: J$.C(253472, J$.G(4794905, J$.R(4794897, 'err', err, false, false), 'type')) ? J$._() : J$.T(4794913, 'entity.verify.failed', 21, false)
                                                    }, 11, false)));
                                                    return J$.Rt(4794945, undefined);
                                                }
                                            }
                                            var str = J$.W(4794969, 'str', J$.R(4794961, 'body', body, false, false), str, false, false);
                                            try {
                                                J$.F(4794993, J$.R(4794977, 'debug', debug, false, false), false)(J$.T(4794985, 'parse body', 21, false));
                                                str = J$.W(4795073, 'str', J$.C(253496, J$.C(253488, J$.B(484746, '!==', J$.U(484738, 'typeof', J$.R(4795001, 'body', body, false, false)), J$.T(4795009, 'string', 21, false))) ? J$.B(484754, '!==', J$.R(4795017, 'encoding', encoding, false, false), J$.T(4795025, null, 25, false)) : J$._()) ? J$.M(4795057, J$.R(4795033, 'iconv', iconv, false, true), 'decode', false)(J$.R(4795041, 'body', body, false, false), J$.R(4795049, 'encoding', encoding, false, false)) : J$.R(4795065, 'body', body, false, false), str, false, false);
                                                J$.P(4795113, J$.R(4795081, 'req', req, false, false), 'body', J$.F(4795105, J$.R(4795089, 'parse', parse, false, false), false)(J$.R(4795097, 'str', str, false, false)));
                                            } catch (err) {
                                                J$.N(4795217, 'err', err, false, false, true);
                                                J$.F(4795201, J$.R(4795121, 'next', next, false, false), false)(J$.F(4795193, J$.R(4795129, 'createError', createError, false, true), false)(J$.T(4795137, 400, 22, false), J$.R(4795145, 'err', err, false, false), J$.T(4795185, {
                                                    body: J$.R(4795153, 'str', str, false, false),
                                                    type: J$.C(253504, J$.G(4795169, J$.R(4795161, 'err', err, false, false), 'type')) ? J$._() : J$.T(4795177, 'entity.parse.failed', 21, false)
                                                }, 11, false)));
                                                return J$.Rt(4795209, undefined);
                                            }
                                            J$.F(4795233, J$.R(4795225, 'next', next, false, false), false)();
                                        } catch (J$e) {
                                            J$.Ex(4796089, J$e);
                                        } finally {
                                            if (J$.Fr(4796097))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(4796105, J$e);
                        } finally {
                            if (J$.Fr(4796113))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function contentstream(req, debug, inflate) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4795929, arguments.callee, this, arguments);
                            arguments = J$.N(4795937, 'arguments', arguments, true, false, false);
                            req = J$.N(4795945, 'req', req, true, false, false);
                            debug = J$.N(4795953, 'debug', debug, true, false, false);
                            inflate = J$.N(4795961, 'inflate', inflate, true, false, false);
                            J$.N(4795969, 'encoding', encoding, false, false, false);
                            J$.N(4795977, 'length', length, false, false, false);
                            J$.N(4795985, 'stream', stream, false, false, false);
                            var encoding = J$.W(4795457, 'encoding', J$.M(4795449, J$.C(253512, J$.G(4795433, J$.G(4795417, J$.R(4795409, 'req', req, false, false), 'headers'), J$.T(4795425, 'content-encoding', 21, false))) ? J$._() : J$.T(4795441, 'identity', 21, false), 'toLowerCase', false)(), encoding, false, false);
                            var length = J$.W(4795497, 'length', J$.G(4795489, J$.G(4795473, J$.R(4795465, 'req', req, false, false), 'headers'), J$.T(4795481, 'content-length', 21, false)), length, false, false);
                            var stream;
                            J$.F(4795529, J$.R(4795505, 'debug', debug, false, false), false)(J$.T(4795513, 'content-encoding "%s"', 21, false), J$.R(4795521, 'encoding', encoding, false, false));
                            if (J$.C(253528, J$.C(253520, J$.B(484762, '===', J$.R(4795537, 'inflate', inflate, false, false), J$.T(4795545, false, 23, false))) ? J$.B(484770, '!==', J$.R(4795553, 'encoding', encoding, false, false), J$.T(4795561, 'identity', 21, false)) : J$._())) {
                                throw J$.F(4795617, J$.R(4795569, 'createError', createError, false, true), false)(J$.T(4795577, 415, 22, false), J$.T(4795585, 'content encoding unsupported', 21, false), J$.T(4795609, {
                                    encoding: J$.R(4795593, 'encoding', encoding, false, false),
                                    type: J$.T(4795601, 'encoding.unsupported', 21, false)
                                }, 11, false));
                            }
                            switch (J$.C1(253536, J$.R(4795625, 'encoding', encoding, false, false))) {
                            case J$.C2(253544, J$.T(4795705, 'deflate', 21, false)):
                                stream = J$.W(4795649, 'stream', J$.M(4795641, J$.R(4795633, 'zlib', zlib, false, true), 'createInflate', false)(), stream, false, false);
                                J$.F(4795673, J$.R(4795657, 'debug', debug, false, false), false)(J$.T(4795665, 'inflate body', 21, false));
                                J$.M(4795697, J$.R(4795681, 'req', req, false, false), 'pipe', false)(J$.R(4795689, 'stream', stream, false, false));
                                break;
                            case J$.C2(253552, J$.T(4795785, 'gzip', 21, false)):
                                stream = J$.W(4795729, 'stream', J$.M(4795721, J$.R(4795713, 'zlib', zlib, false, true), 'createGunzip', false)(), stream, false, false);
                                J$.F(4795753, J$.R(4795737, 'debug', debug, false, false), false)(J$.T(4795745, 'gunzip body', 21, false));
                                J$.M(4795777, J$.R(4795761, 'req', req, false, false), 'pipe', false)(J$.R(4795769, 'stream', stream, false, false));
                                break;
                            case J$.C2(253560, J$.T(4795833, 'identity', 21, false)):
                                stream = J$.W(4795801, 'stream', J$.R(4795793, 'req', req, false, false), stream, false, false);
                                J$.P(4795825, J$.R(4795809, 'stream', stream, false, false), 'length', J$.R(4795817, 'length', length, false, false));
                                break;
                            default:
                                throw J$.F(4795905, J$.R(4795841, 'createError', createError, false, true), false)(J$.T(4795849, 415, 22, false), J$.B(484786, '+', J$.B(484778, '+', J$.T(4795857, 'unsupported content encoding "', 21, false), J$.R(4795865, 'encoding', encoding, false, false)), J$.T(4795873, '"', 21, false)), J$.T(4795897, {
                                    encoding: J$.R(4795881, 'encoding', encoding, false, false),
                                    type: J$.T(4795889, 'encoding.unsupported', 21, false)
                                }, 11, false));
                            }
                            return J$.Rt(4795921, J$.R(4795913, 'stream', stream, false, false));
                        } catch (J$e) {
                            J$.Ex(4796121, J$e);
                        } finally {
                            if (J$.Fr(4796129))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4796001, 'createError', createError, false, false, false);
            J$.N(4796009, 'getBody', getBody, false, false, false);
            J$.N(4796017, 'iconv', iconv, false, false, false);
            J$.N(4796025, 'onFinished', onFinished, false, false, false);
            J$.N(4796033, 'zlib', zlib, false, false, false);
            read = J$.N(4796049, 'read', J$.T(4796041, read, 12, false), true, false, false);
            contentstream = J$.N(4796065, 'contentstream', J$.T(4796057, contentstream, 12, false), true, false, false);
            J$.T(4793745, 'use strict', 21, false);
            var createError = J$.W(4793777, 'createError', J$.F(4793769, J$.I(typeof require === 'undefined' ? require = J$.R(4793753, 'require', undefined, true, true) : require = J$.R(4793753, 'require', require, true, true)), false)(J$.T(4793761, 'http-errors', 21, false)), createError, false, true);
            var getBody = J$.W(4793809, 'getBody', J$.F(4793801, J$.I(typeof require === 'undefined' ? require = J$.R(4793785, 'require', undefined, true, true) : require = J$.R(4793785, 'require', require, true, true)), false)(J$.T(4793793, 'raw-body', 21, false)), getBody, false, true);
            var iconv = J$.W(4793841, 'iconv', J$.F(4793833, J$.I(typeof require === 'undefined' ? require = J$.R(4793817, 'require', undefined, true, true) : require = J$.R(4793817, 'require', require, true, true)), false)(J$.T(4793825, 'iconv-lite', 21, false)), iconv, false, true);
            var onFinished = J$.W(4793873, 'onFinished', J$.F(4793865, J$.I(typeof require === 'undefined' ? require = J$.R(4793849, 'require', undefined, true, true) : require = J$.R(4793849, 'require', require, true, true)), false)(J$.T(4793857, 'on-finished', 21, false)), onFinished, false, true);
            var zlib = J$.W(4793905, 'zlib', J$.F(4793897, J$.I(typeof require === 'undefined' ? require = J$.R(4793881, 'require', undefined, true, true) : require = J$.R(4793881, 'require', require, true, true)), false)(J$.T(4793889, 'zlib', 21, false)), zlib, false, true);
            J$.P(4793929, J$.I(typeof module === 'undefined' ? module = J$.R(4793913, 'module', undefined, true, true) : module = J$.R(4793913, 'module', module, true, true)), 'exports', J$.R(4793921, 'read', read, false, true));
        } catch (J$e) {
            J$.Ex(4796137, J$e);
        } finally {
            if (J$.Sr(4796145))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

