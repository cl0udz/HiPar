J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(5993401, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/qs/test/utils.js');
            J$.N(5993409, 'test', test, false, false, false);
            J$.N(5993417, 'inspect', inspect, false, false, false);
            J$.N(5993425, 'SaferBuffer', SaferBuffer, false, false, false);
            J$.N(5993433, 'forEach', forEach, false, false, false);
            J$.N(5993441, 'utils', utils, false, false, false);
            J$.T(5988961, 'use strict', 21, false);
            J$.F(5988985, J$.I(typeof require === 'undefined' ? require = J$.R(5988969, 'require', undefined, true, true) : require = J$.R(5988969, 'require', require, true, true)), false)(J$.T(5988977, 'core-js/modules/es.object.define-property', 21, false));
            J$.F(5989009, J$.I(typeof require === 'undefined' ? require = J$.R(5988993, 'require', undefined, true, true) : require = J$.R(5988993, 'require', require, true, true)), false)(J$.T(5989001, 'core-js/modules/es.object.define-property', 21, false));
            var test = J$.W(5989041, 'test', J$.F(5989033, J$.I(typeof require === 'undefined' ? require = J$.R(5989017, 'require', undefined, true, true) : require = J$.R(5989017, 'require', require, true, true)), false)(J$.T(5989025, 'tape', 21, false)), test, false, true);
            var inspect = J$.W(5989073, 'inspect', J$.F(5989065, J$.I(typeof require === 'undefined' ? require = J$.R(5989049, 'require', undefined, true, true) : require = J$.R(5989049, 'require', require, true, true)), false)(J$.T(5989057, 'object-inspect', 21, false)), inspect, false, true);
            var SaferBuffer = J$.W(5989113, 'SaferBuffer', J$.G(5989105, J$.F(5989097, J$.I(typeof require === 'undefined' ? require = J$.R(5989081, 'require', undefined, true, true) : require = J$.R(5989081, 'require', require, true, true)), false)(J$.T(5989089, 'safer-buffer', 21, false)), 'Buffer'), SaferBuffer, false, true);
            var forEach = J$.W(5989145, 'forEach', J$.F(5989137, J$.I(typeof require === 'undefined' ? require = J$.R(5989121, 'require', undefined, true, true) : require = J$.R(5989121, 'require', require, true, true)), false)(J$.T(5989129, 'for-each', 21, false)), forEach, false, true);
            var utils = J$.W(5989177, 'utils', J$.F(5989169, J$.I(typeof require === 'undefined' ? require = J$.R(5989153, 'require', undefined, true, true) : require = J$.R(5989153, 'require', require, true, true)), false)(J$.T(5989161, '../lib/utils', 21, false)), utils, false, true);
            J$.F(5990833, J$.R(5989185, 'test', test, false, true), false)(J$.T(5989193, 'merge()', 21, false), J$.T(5990825, function (t) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5990761, arguments.callee, this, arguments);
                            arguments = J$.N(5990769, 'arguments', arguments, true, false, false);
                            t = J$.N(5990777, 't', t, true, false, false);
                            J$.N(5990785, 'oneMerged', oneMerged, false, false, false);
                            J$.N(5990793, 'twoMerged', twoMerged, false, false, false);
                            J$.N(5990801, 'sandwiched', sandwiched, false, false, false);
                            J$.N(5990809, 'nestedArrays', nestedArrays, false, false, false);
                            J$.N(5990817, 'noOptionsNonObjectSource', noOptionsNonObjectSource, false, false, false);
                            J$.M(5989273, J$.R(5989201, 't', t, false, false), 'deepEqual', false)(J$.M(5989233, J$.R(5989209, 'utils', utils, false, true), 'merge', false)(J$.T(5989217, null, 25, false), J$.T(5989225, true, 23, false)), J$.T(5989257, [
                                J$.T(5989241, null, 25, false),
                                J$.T(5989249, true, 23, false)
                            ], 10, false), J$.T(5989265, 'merges true into null', 21, false));
                            J$.M(5989361, J$.R(5989281, 't', t, false, false), 'deepEqual', false)(J$.M(5989321, J$.R(5989289, 'utils', utils, false, true), 'merge', false)(J$.T(5989297, null, 25, false), J$.T(5989313, [J$.T(5989305, 42, 22, false)], 10, false)), J$.T(5989345, [
                                J$.T(5989329, null, 25, false),
                                J$.T(5989337, 42, 22, false)
                            ], 10, false), J$.T(5989353, 'merges null into an array', 21, false));
                            J$.M(5989465, J$.R(5989369, 't', t, false, false), 'deepEqual', false)(J$.M(5989417, J$.R(5989377, 'utils', utils, false, true), 'merge', false)(J$.T(5989393, { a: J$.T(5989385, 'b', 21, false) }, 11, false), J$.T(5989409, { a: J$.T(5989401, 'c', 21, false) }, 11, false)), J$.T(5989449, {
                                a: J$.T(5989441, [
                                    J$.T(5989425, 'b', 21, false),
                                    J$.T(5989433, 'c', 21, false)
                                ], 10, false)
                            }, 11, false), J$.T(5989457, 'merges two objects with the same key', 21, false));
                            var oneMerged = J$.W(5989529, 'oneMerged', J$.M(5989521, J$.R(5989473, 'utils', utils, false, true), 'merge', false)(J$.T(5989489, { foo: J$.T(5989481, 'bar', 21, false) }, 11, false), J$.T(5989513, { foo: J$.T(5989505, { first: J$.T(5989497, '123', 21, false) }, 11, false) }, 11, false)), oneMerged, false, false);
                            J$.M(5989601, J$.R(5989537, 't', t, false, false), 'deepEqual', false)(J$.R(5989545, 'oneMerged', oneMerged, false, false), J$.T(5989585, {
                                foo: J$.T(5989577, [
                                    J$.T(5989553, 'bar', 21, false),
                                    J$.T(5989569, { first: J$.T(5989561, '123', 21, false) }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(5989593, 'merges a standalone and an object into an array', 21, false));
                            var twoMerged = J$.W(5989689, 'twoMerged', J$.M(5989681, J$.R(5989609, 'utils', utils, false, true), 'merge', false)(J$.T(5989649, {
                                foo: J$.T(5989641, [
                                    J$.T(5989617, 'bar', 21, false),
                                    J$.T(5989633, { first: J$.T(5989625, '123', 21, false) }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(5989673, { foo: J$.T(5989665, { second: J$.T(5989657, '456', 21, false) }, 11, false) }, 11, false)), twoMerged, false, false);
                            J$.M(5989769, J$.R(5989697, 't', t, false, false), 'deepEqual', false)(J$.R(5989705, 'twoMerged', twoMerged, false, false), J$.T(5989753, {
                                foo: J$.T(5989745, {
                                    0: J$.T(5989713, 'bar', 21, false),
                                    1: J$.T(5989729, { first: J$.T(5989721, '123', 21, false) }, 11, false),
                                    second: J$.T(5989737, '456', 21, false)
                                }, 11, false)
                            }, 11, false), J$.T(5989761, 'merges a standalone and two objects into an array', 21, false));
                            var sandwiched = J$.W(5989857, 'sandwiched', J$.M(5989849, J$.R(5989777, 'utils', utils, false, true), 'merge', false)(J$.T(5989825, {
                                foo: J$.T(5989817, [
                                    J$.T(5989785, 'bar', 21, false),
                                    J$.T(5989809, {
                                        first: J$.T(5989793, '123', 21, false),
                                        second: J$.T(5989801, '456', 21, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(5989841, { foo: J$.T(5989833, 'baz', 21, false) }, 11, false)), sandwiched, false, false);
                            J$.M(5989945, J$.R(5989865, 't', t, false, false), 'deepEqual', false)(J$.R(5989873, 'sandwiched', sandwiched, false, false), J$.T(5989929, {
                                foo: J$.T(5989921, [
                                    J$.T(5989881, 'bar', 21, false),
                                    J$.T(5989905, {
                                        first: J$.T(5989889, '123', 21, false),
                                        second: J$.T(5989897, '456', 21, false)
                                    }, 11, false),
                                    J$.T(5989913, 'baz', 21, false)
                                ], 10, false)
                            }, 11, false), J$.T(5989937, 'merges an object sandwiched by two standalones into an array', 21, false));
                            var nestedArrays = J$.W(5990025, 'nestedArrays', J$.M(5990017, J$.R(5989953, 'utils', utils, false, true), 'merge', false)(J$.T(5989977, { foo: J$.T(5989969, [J$.T(5989961, 'baz', 21, false)], 10, false) }, 11, false), J$.T(5990009, {
                                foo: J$.T(5990001, [
                                    J$.T(5989985, 'bar', 21, false),
                                    J$.T(5989993, 'xyzzy', 21, false)
                                ], 10, false)
                            }, 11, false)), nestedArrays, false, false);
                            J$.M(5990089, J$.R(5990033, 't', t, false, false), 'deepEqual', false)(J$.R(5990041, 'nestedArrays', nestedArrays, false, false), J$.T(5990081, {
                                foo: J$.T(5990073, [
                                    J$.T(5990049, 'baz', 21, false),
                                    J$.T(5990057, 'bar', 21, false),
                                    J$.T(5990065, 'xyzzy', 21, false)
                                ], 10, false)
                            }, 11, false));
                            var noOptionsNonObjectSource = J$.W(5990137, 'noOptionsNonObjectSource', J$.M(5990129, J$.R(5990097, 'utils', utils, false, true), 'merge', false)(J$.T(5990113, { foo: J$.T(5990105, 'baz', 21, false) }, 11, false), J$.T(5990121, 'bar', 21, false)), noOptionsNonObjectSource, false, false);
                            J$.M(5990185, J$.R(5990145, 't', t, false, false), 'deepEqual', false)(J$.R(5990153, 'noOptionsNonObjectSource', noOptionsNonObjectSource, false, false), J$.T(5990177, {
                                foo: J$.T(5990161, 'baz', 21, false),
                                bar: J$.T(5990169, true, 23, false)
                            }, 11, false));
                            J$.M(5990737, J$.R(5990193, 't', t, false, false), 'test', false)(J$.T(5990201, 'avoids invoking array setters unnecessarily', 21, false), J$.T(5990233, { skip: J$.B(569810, '!==', J$.U(569802, 'typeof', J$.G(5990217, J$.I(typeof Object === 'undefined' ? Object = J$.R(5990209, 'Object', undefined, true, true) : Object = J$.R(5990209, 'Object', Object, true, true)), 'defineProperty')), J$.T(5990225, 'function', 21, false)) }, 11, false), J$.T(5990729, function (st) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(5990681, arguments.callee, this, arguments);
                                            arguments = J$.N(5990689, 'arguments', arguments, true, false, false);
                                            st = J$.N(5990697, 'st', st, true, false, false);
                                            J$.N(5990705, 'setCount', setCount, false, false, false);
                                            J$.N(5990713, 'getCount', getCount, false, false, false);
                                            J$.N(5990721, 'observed', observed, false, false, false);
                                            var setCount = J$.W(5990249, 'setCount', J$.T(5990241, 0, 22, false), setCount, false, false);
                                            var getCount = J$.W(5990265, 'getCount', J$.T(5990257, 0, 22, false), getCount, false, false);
                                            var observed = J$.W(5990281, 'observed', J$.T(5990273, [], 10, false), observed, false, false);
                                            J$.M(5990441, J$.I(typeof Object === 'undefined' ? Object = J$.R(5990289, 'Object', undefined, true, true) : Object = J$.R(5990289, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(5990297, 'observed', observed, false, false), J$.T(5990305, 0, 22, false), J$.T(5990433, {
                                                get: J$.T(5990377, function get() {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(5990361, arguments.callee, this, arguments);
                                                                arguments = J$.N(5990369, 'arguments', arguments, true, false, false);
                                                                getCount = J$.W(5990329, 'getCount', J$.B(569818, '+', J$.R(5990321, 'getCount', getCount, false, false), J$.T(5990313, 1, 22, false)), getCount, false, false);
                                                                return J$.Rt(5990353, J$.T(5990345, { bar: J$.T(5990337, 'baz', 21, false) }, 11, false));
                                                            } catch (J$e) {
                                                                J$.Ex(5993449, J$e);
                                                            } finally {
                                                                if (J$.Fr(5993457))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false),
                                                set: J$.T(5990425, function set() {
                                                    jalangiLabel1:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(5990409, arguments.callee, this, arguments);
                                                                arguments = J$.N(5990417, 'arguments', arguments, true, false, false);
                                                                setCount = J$.W(5990401, 'setCount', J$.B(569826, '+', J$.R(5990393, 'setCount', setCount, false, false), J$.T(5990385, 1, 22, false)), setCount, false, false);
                                                            } catch (J$e) {
                                                                J$.Ex(5993465, J$e);
                                                            } finally {
                                                                if (J$.Fr(5993473))
                                                                    continue jalangiLabel1;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)
                                            }, 11, false));
                                            J$.M(5990481, J$.R(5990449, 'utils', utils, false, true), 'merge', false)(J$.R(5990457, 'observed', observed, false, false), J$.T(5990473, [J$.T(5990465, null, 25, false)], 10, false));
                                            J$.M(5990513, J$.R(5990489, 'st', st, false, false), 'equal', false)(J$.R(5990497, 'setCount', setCount, false, false), J$.T(5990505, 0, 22, false));
                                            J$.M(5990545, J$.R(5990521, 'st', st, false, false), 'equal', false)(J$.R(5990529, 'getCount', getCount, false, false), J$.T(5990537, 1, 22, false));
                                            J$.P(5990593, J$.R(5990553, 'observed', observed, false, false), J$.T(5990561, 0, 22, false), J$.G(5990585, J$.R(5990569, 'observed', observed, false, false), J$.T(5990577, 0, 22, false)));
                                            J$.M(5990625, J$.R(5990601, 'st', st, false, false), 'equal', false)(J$.R(5990609, 'setCount', setCount, false, false), J$.T(5990617, 1, 22, false));
                                            J$.M(5990657, J$.R(5990633, 'st', st, false, false), 'equal', false)(J$.R(5990641, 'getCount', getCount, false, false), J$.T(5990649, 2, 22, false));
                                            J$.M(5990673, J$.R(5990665, 'st', st, false, false), 'end', false)();
                                        } catch (J$e) {
                                            J$.Ex(5993481, J$e);
                                        } finally {
                                            if (J$.Fr(5993489))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(5990753, J$.R(5990745, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(5993497, J$e);
                        } finally {
                            if (J$.Fr(5993505))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(5991193, J$.R(5990841, 'test', test, false, true), false)(J$.T(5990849, 'assign()', 21, false), J$.T(5991185, function (t) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5991137, arguments.callee, this, arguments);
                            arguments = J$.N(5991145, 'arguments', arguments, true, false, false);
                            t = J$.N(5991153, 't', t, true, false, false);
                            J$.N(5991161, 'target', target, false, false, false);
                            J$.N(5991169, 'source', source, false, false, false);
                            J$.N(5991177, 'result', result, false, false, false);
                            var target = J$.W(5990881, 'target', J$.T(5990873, {
                                a: J$.T(5990857, 1, 22, false),
                                b: J$.T(5990865, 2, 22, false)
                            }, 11, false), target, false, false);
                            var source = J$.W(5990913, 'source', J$.T(5990905, {
                                b: J$.T(5990889, 3, 22, false),
                                c: J$.T(5990897, 4, 22, false)
                            }, 11, false), source, false, false);
                            var result = J$.W(5990953, 'result', J$.M(5990945, J$.R(5990921, 'utils', utils, false, true), 'assign', false)(J$.R(5990929, 'target', target, false, false), J$.R(5990937, 'source', source, false, false)), result, false, false);
                            J$.M(5990993, J$.R(5990961, 't', t, false, false), 'equal', false)(J$.R(5990969, 'result', result, false, false), J$.R(5990977, 'target', target, false, false), J$.T(5990985, 'returns the target', 21, false));
                            J$.M(5991057, J$.R(5991001, 't', t, false, false), 'deepEqual', false)(J$.R(5991009, 'target', target, false, false), J$.T(5991041, {
                                a: J$.T(5991017, 1, 22, false),
                                b: J$.T(5991025, 3, 22, false),
                                c: J$.T(5991033, 4, 22, false)
                            }, 11, false), J$.T(5991049, 'target and source are merged', 21, false));
                            J$.M(5991113, J$.R(5991065, 't', t, false, false), 'deepEqual', false)(J$.R(5991073, 'source', source, false, false), J$.T(5991097, {
                                b: J$.T(5991081, 3, 22, false),
                                c: J$.T(5991089, 4, 22, false)
                            }, 11, false), J$.T(5991105, 'source is untouched', 21, false));
                            J$.M(5991129, J$.R(5991121, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(5993513, J$e);
                        } finally {
                            if (J$.Fr(5993521))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(5992745, J$.R(5991201, 'test', test, false, true), false)(J$.T(5991209, 'combine()', 21, false), J$.T(5992737, function (t) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(5992713, arguments.callee, this, arguments);
                            arguments = J$.N(5992721, 'arguments', arguments, true, false, false);
                            t = J$.N(5992729, 't', t, true, false, false);
                            J$.M(5991625, J$.R(5991217, 't', t, false, false), 'test', false)(J$.T(5991225, 'both arrays', 21, false), J$.T(5991617, function (st) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(5991569, arguments.callee, this, arguments);
                                            arguments = J$.N(5991577, 'arguments', arguments, true, false, false);
                                            st = J$.N(5991585, 'st', st, true, false, false);
                                            J$.N(5991593, 'a', a, false, false, false);
                                            J$.N(5991601, 'b', b, false, false, false);
                                            J$.N(5991609, 'combined', combined, false, false, false);
                                            var a = J$.W(5991249, 'a', J$.T(5991241, [J$.T(5991233, 1, 22, false)], 10, false), a, false, false);
                                            var b = J$.W(5991273, 'b', J$.T(5991265, [J$.T(5991257, 2, 22, false)], 10, false), b, false, false);
                                            var combined = J$.W(5991313, 'combined', J$.M(5991305, J$.R(5991281, 'utils', utils, false, true), 'combine', false)(J$.R(5991289, 'a', a, false, false), J$.R(5991297, 'b', b, false, false)), combined, false, false);
                                            J$.M(5991361, J$.R(5991321, 'st', st, false, false), 'deepEqual', false)(J$.R(5991329, 'a', a, false, false), J$.T(5991345, [J$.T(5991337, 1, 22, false)], 10, false), J$.T(5991353, 'a is not mutated', 21, false));
                                            J$.M(5991409, J$.R(5991369, 'st', st, false, false), 'deepEqual', false)(J$.R(5991377, 'b', b, false, false), J$.T(5991393, [J$.T(5991385, 2, 22, false)], 10, false), J$.T(5991401, 'b is not mutated', 21, false));
                                            J$.M(5991449, J$.R(5991417, 'st', st, false, false), 'notEqual', false)(J$.R(5991425, 'a', a, false, false), J$.R(5991433, 'combined', combined, false, false), J$.T(5991441, 'a !== combined', 21, false));
                                            J$.M(5991489, J$.R(5991457, 'st', st, false, false), 'notEqual', false)(J$.R(5991465, 'b', b, false, false), J$.R(5991473, 'combined', combined, false, false), J$.T(5991481, 'b !== combined', 21, false));
                                            J$.M(5991545, J$.R(5991497, 'st', st, false, false), 'deepEqual', false)(J$.R(5991505, 'combined', combined, false, false), J$.T(5991529, [
                                                J$.T(5991513, 1, 22, false),
                                                J$.T(5991521, 2, 22, false)
                                            ], 10, false), J$.T(5991537, 'combined is a + b', 21, false));
                                            J$.M(5991561, J$.R(5991553, 'st', st, false, false), 'end', false)();
                                        } catch (J$e) {
                                            J$.Ex(5993529, J$e);
                                        } finally {
                                            if (J$.Fr(5993537))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(5992433, J$.R(5991633, 't', t, false, false), 'test', false)(J$.T(5991641, 'one array, one non-array', 21, false), J$.T(5992425, function (st) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(5992353, arguments.callee, this, arguments);
                                            arguments = J$.N(5992361, 'arguments', arguments, true, false, false);
                                            st = J$.N(5992369, 'st', st, true, false, false);
                                            J$.N(5992377, 'aN', aN, false, false, false);
                                            J$.N(5992385, 'a', a, false, false, false);
                                            J$.N(5992393, 'bN', bN, false, false, false);
                                            J$.N(5992401, 'b', b, false, false, false);
                                            J$.N(5992409, 'combinedAnB', combinedAnB, false, false, false);
                                            J$.N(5992417, 'combinedABn', combinedABn, false, false, false);
                                            var aN = J$.W(5991657, 'aN', J$.T(5991649, 1, 22, false), aN, false, false);
                                            var a = J$.W(5991681, 'a', J$.T(5991673, [J$.R(5991665, 'aN', aN, false, false)], 10, false), a, false, false);
                                            var bN = J$.W(5991697, 'bN', J$.T(5991689, 2, 22, false), bN, false, false);
                                            var b = J$.W(5991721, 'b', J$.T(5991713, [J$.R(5991705, 'bN', bN, false, false)], 10, false), b, false, false);
                                            var combinedAnB = J$.W(5991761, 'combinedAnB', J$.M(5991753, J$.R(5991729, 'utils', utils, false, true), 'combine', false)(J$.R(5991737, 'aN', aN, false, false), J$.R(5991745, 'b', b, false, false)), combinedAnB, false, false);
                                            J$.M(5991809, J$.R(5991769, 'st', st, false, false), 'deepEqual', false)(J$.R(5991777, 'b', b, false, false), J$.T(5991793, [J$.R(5991785, 'bN', bN, false, false)], 10, false), J$.T(5991801, 'b is not mutated', 21, false));
                                            J$.M(5991849, J$.R(5991817, 'st', st, false, false), 'notEqual', false)(J$.R(5991825, 'aN', aN, false, false), J$.R(5991833, 'combinedAnB', combinedAnB, false, false), J$.T(5991841, 'aN + b !== aN', 21, false));
                                            J$.M(5991889, J$.R(5991857, 'st', st, false, false), 'notEqual', false)(J$.R(5991865, 'a', a, false, false), J$.R(5991873, 'combinedAnB', combinedAnB, false, false), J$.T(5991881, 'aN + b !== a', 21, false));
                                            J$.M(5991929, J$.R(5991897, 'st', st, false, false), 'notEqual', false)(J$.R(5991905, 'bN', bN, false, false), J$.R(5991913, 'combinedAnB', combinedAnB, false, false), J$.T(5991921, 'aN + b !== bN', 21, false));
                                            J$.M(5991969, J$.R(5991937, 'st', st, false, false), 'notEqual', false)(J$.R(5991945, 'b', b, false, false), J$.R(5991953, 'combinedAnB', combinedAnB, false, false), J$.T(5991961, 'aN + b !== b', 21, false));
                                            J$.M(5992025, J$.R(5991977, 'st', st, false, false), 'deepEqual', false)(J$.T(5992001, [
                                                J$.T(5991985, 1, 22, false),
                                                J$.T(5991993, 2, 22, false)
                                            ], 10, false), J$.R(5992009, 'combinedAnB', combinedAnB, false, false), J$.T(5992017, 'first argument is array-wrapped when not an array', 21, false));
                                            var combinedABn = J$.W(5992065, 'combinedABn', J$.M(5992057, J$.R(5992033, 'utils', utils, false, true), 'combine', false)(J$.R(5992041, 'a', a, false, false), J$.R(5992049, 'bN', bN, false, false)), combinedABn, false, false);
                                            J$.M(5992113, J$.R(5992073, 'st', st, false, false), 'deepEqual', false)(J$.R(5992081, 'a', a, false, false), J$.T(5992097, [J$.R(5992089, 'aN', aN, false, false)], 10, false), J$.T(5992105, 'a is not mutated', 21, false));
                                            J$.M(5992153, J$.R(5992121, 'st', st, false, false), 'notEqual', false)(J$.R(5992129, 'aN', aN, false, false), J$.R(5992137, 'combinedABn', combinedABn, false, false), J$.T(5992145, 'a + bN !== aN', 21, false));
                                            J$.M(5992193, J$.R(5992161, 'st', st, false, false), 'notEqual', false)(J$.R(5992169, 'a', a, false, false), J$.R(5992177, 'combinedABn', combinedABn, false, false), J$.T(5992185, 'a + bN !== a', 21, false));
                                            J$.M(5992233, J$.R(5992201, 'st', st, false, false), 'notEqual', false)(J$.R(5992209, 'bN', bN, false, false), J$.R(5992217, 'combinedABn', combinedABn, false, false), J$.T(5992225, 'a + bN !== bN', 21, false));
                                            J$.M(5992273, J$.R(5992241, 'st', st, false, false), 'notEqual', false)(J$.R(5992249, 'b', b, false, false), J$.R(5992257, 'combinedABn', combinedABn, false, false), J$.T(5992265, 'a + bN !== b', 21, false));
                                            J$.M(5992329, J$.R(5992281, 'st', st, false, false), 'deepEqual', false)(J$.T(5992305, [
                                                J$.T(5992289, 1, 22, false),
                                                J$.T(5992297, 2, 22, false)
                                            ], 10, false), J$.R(5992313, 'combinedABn', combinedABn, false, false), J$.T(5992321, 'second argument is array-wrapped when not an array', 21, false));
                                            J$.M(5992345, J$.R(5992337, 'st', st, false, false), 'end', false)();
                                        } catch (J$e) {
                                            J$.Ex(5993545, J$e);
                                        } finally {
                                            if (J$.Fr(5993553))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(5992689, J$.R(5992441, 't', t, false, false), 'test', false)(J$.T(5992449, 'neither is an array', 21, false), J$.T(5992681, function (st) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(5992649, arguments.callee, this, arguments);
                                            arguments = J$.N(5992657, 'arguments', arguments, true, false, false);
                                            st = J$.N(5992665, 'st', st, true, false, false);
                                            J$.N(5992673, 'combined', combined, false, false, false);
                                            var combined = J$.W(5992489, 'combined', J$.M(5992481, J$.R(5992457, 'utils', utils, false, true), 'combine', false)(J$.T(5992465, 1, 22, false), J$.T(5992473, 2, 22, false)), combined, false, false);
                                            J$.M(5992529, J$.R(5992497, 'st', st, false, false), 'notEqual', false)(J$.T(5992505, 1, 22, false), J$.R(5992513, 'combined', combined, false, false), J$.T(5992521, '1 + 2 !== 1', 21, false));
                                            J$.M(5992569, J$.R(5992537, 'st', st, false, false), 'notEqual', false)(J$.T(5992545, 2, 22, false), J$.R(5992553, 'combined', combined, false, false), J$.T(5992561, '1 + 2 !== 2', 21, false));
                                            J$.M(5992625, J$.R(5992577, 'st', st, false, false), 'deepEqual', false)(J$.T(5992601, [
                                                J$.T(5992585, 1, 22, false),
                                                J$.T(5992593, 2, 22, false)
                                            ], 10, false), J$.R(5992609, 'combined', combined, false, false), J$.T(5992617, 'both arguments are array-wrapped when not an array', 21, false));
                                            J$.M(5992641, J$.R(5992633, 'st', st, false, false), 'end', false)();
                                        } catch (J$e) {
                                            J$.Ex(5993561, J$e);
                                        } finally {
                                            if (J$.Fr(5993569))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(5992705, J$.R(5992697, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(5993577, J$e);
                        } finally {
                            if (J$.Fr(5993585))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(5993393, J$.R(5992753, 'test', test, false, true), false)(J$.T(5992761, 'isBuffer()', 21, false), J$.T(5993385, function (t) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(5993337, arguments.callee, this, arguments);
                            arguments = J$.N(5993345, 'arguments', arguments, true, false, false);
                            t = J$.N(5993353, 't', t, true, false, false);
                            J$.N(5993361, 'fakeBuffer', fakeBuffer, false, false, false);
                            J$.N(5993369, 'saferBuffer', saferBuffer, false, false, false);
                            J$.N(5993377, 'buffer', buffer, false, false, false);
                            J$.F(5993017, J$.R(5992769, 'forEach', forEach, false, true), false)(J$.T(5992897, [
                                J$.T(5992777, null, 25, false),
                                J$.T(5992785, undefined, 24, false),
                                J$.T(5992793, true, 23, false),
                                J$.T(5992801, false, 23, false),
                                J$.T(5992809, '', 21, false),
                                J$.T(5992817, 'abc', 21, false),
                                J$.T(5992825, 42, 22, false),
                                J$.T(5992833, 0, 22, false),
                                J$.T(5992841, NaN, 22, false),
                                J$.T(5992849, {}, 11, false),
                                J$.T(5992857, [], 10, false),
                                J$.T(5992881, function () {
                                    jalangiLabel9:
                                        while (true) {
                                            try {
                                                J$.Fe(5992865, arguments.callee, this, arguments);
                                                arguments = J$.N(5992873, 'arguments', arguments, true, false, false);
                                            } catch (J$e) {
                                                J$.Ex(5993593, J$e);
                                            } finally {
                                                if (J$.Fr(5993601))
                                                    continue jalangiLabel9;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                J$.T(5992889, /a/g, 14, false)
                            ], 10, false), J$.T(5993009, function (x) {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(5992985, arguments.callee, this, arguments);
                                            arguments = J$.N(5992993, 'arguments', arguments, true, false, false);
                                            x = J$.N(5993001, 'x', x, true, false, false);
                                            J$.M(5992977, J$.R(5992905, 't', t, false, false), 'equal', false)(J$.M(5992929, J$.R(5992913, 'utils', utils, false, true), 'isBuffer', false)(J$.R(5992921, 'x', x, false, false)), J$.T(5992937, false, 23, false), J$.B(569834, '+', J$.F(5992961, J$.R(5992945, 'inspect', inspect, false, true), false)(J$.R(5992953, 'x', x, false, false)), J$.T(5992969, ' is not a buffer', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(5993609, J$e);
                                        } finally {
                                            if (J$.Fr(5993617))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var fakeBuffer = J$.W(5993041, 'fakeBuffer', J$.T(5993033, { constructor: J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(5993025, 'Buffer', undefined, true, true) : Buffer = J$.R(5993025, 'Buffer', Buffer, true, true)) }, 11, false), fakeBuffer, false, false);
                            J$.M(5993097, J$.R(5993049, 't', t, false, false), 'equal', false)(J$.M(5993073, J$.R(5993057, 'utils', utils, false, true), 'isBuffer', false)(J$.R(5993065, 'fakeBuffer', fakeBuffer, false, false)), J$.T(5993081, false, 23, false), J$.T(5993089, 'fake buffer is not a buffer', 21, false));
                            var saferBuffer = J$.W(5993129, 'saferBuffer', J$.M(5993121, J$.R(5993105, 'SaferBuffer', SaferBuffer, false, true), 'from', false)(J$.T(5993113, 'abc', 21, false)), saferBuffer, false, false);
                            J$.M(5993185, J$.R(5993137, 't', t, false, false), 'equal', false)(J$.M(5993161, J$.R(5993145, 'utils', utils, false, true), 'isBuffer', false)(J$.R(5993153, 'saferBuffer', saferBuffer, false, false)), J$.T(5993169, true, 23, false), J$.T(5993177, 'SaferBuffer instance is a buffer', 21, false));
                            var buffer = J$.W(5993257, 'buffer', J$.C(321872, J$.G(5993201, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(5993193, 'Buffer', undefined, true, true) : Buffer = J$.R(5993193, 'Buffer', Buffer, true, true)), 'from')) ? J$.M(5993225, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(5993209, 'Buffer', undefined, true, true) : Buffer = J$.R(5993209, 'Buffer', Buffer, true, true)), 'from', false)(J$.T(5993217, 'abc', 21, false)) : J$.F(5993249, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(5993233, 'Buffer', undefined, true, true) : Buffer = J$.R(5993233, 'Buffer', Buffer, true, true)), true)(J$.T(5993241, 'abc', 21, false)), buffer, false, false);
                            J$.M(5993313, J$.R(5993265, 't', t, false, false), 'equal', false)(J$.M(5993289, J$.R(5993273, 'utils', utils, false, true), 'isBuffer', false)(J$.R(5993281, 'buffer', buffer, false, false)), J$.T(5993297, true, 23, false), J$.T(5993305, 'real Buffer instance is a buffer', 21, false));
                            J$.M(5993329, J$.R(5993321, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(5993625, J$e);
                        } finally {
                            if (J$.Fr(5993633))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5993641, J$e);
        } finally {
            if (J$.Sr(5993649))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

