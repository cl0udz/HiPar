J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(4953945, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/fresh/index.js');
            function fresh(reqHeaders, resHeaders) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4953281, arguments.callee, this, arguments);
                            arguments = J$.N(4953289, 'arguments', arguments, true, false, false);
                            reqHeaders = J$.N(4953297, 'reqHeaders', reqHeaders, true, false, false);
                            resHeaders = J$.N(4953305, 'resHeaders', resHeaders, true, false, false);
                            J$.N(4953313, 'modifiedSince', modifiedSince, false, false, false);
                            J$.N(4953321, 'noneMatch', noneMatch, false, false, false);
                            J$.N(4953329, 'cacheControl', cacheControl, false, false, false);
                            J$.N(4953337, 'etag', etag, false, false, false);
                            J$.N(4953345, 'etagStale', etagStale, false, false, false);
                            J$.N(4953353, 'matches', matches, false, false, false);
                            J$.N(4953361, 'i', i, false, false, false);
                            J$.N(4953369, 'match', match, false, false, false);
                            J$.N(4953377, 'lastModified', lastModified, false, false, false);
                            J$.N(4953385, 'modifiedStale', modifiedStale, false, false, false);
                            var modifiedSince = J$.W(4952665, 'modifiedSince', J$.G(4952657, J$.R(4952641, 'reqHeaders', reqHeaders, false, false), J$.T(4952649, 'if-modified-since', 21, false)), modifiedSince, false, false);
                            var noneMatch = J$.W(4952697, 'noneMatch', J$.G(4952689, J$.R(4952673, 'reqHeaders', reqHeaders, false, false), J$.T(4952681, 'if-none-match', 21, false)), noneMatch, false, false);
                            if (J$.C(263976, J$.C(263968, J$.U(496778, '!', J$.R(4952705, 'modifiedSince', modifiedSince, false, false))) ? J$.U(496786, '!', J$.R(4952713, 'noneMatch', noneMatch, false, false)) : J$._())) {
                                return J$.Rt(4952729, J$.T(4952721, false, 23, false));
                            }
                            var cacheControl = J$.W(4952761, 'cacheControl', J$.G(4952753, J$.R(4952737, 'reqHeaders', reqHeaders, false, false), J$.T(4952745, 'cache-control', 21, false)), cacheControl, false, false);
                            if (J$.C(263992, J$.C(263984, J$.R(4952769, 'cacheControl', cacheControl, false, false)) ? J$.M(4952793, J$.R(4952777, 'CACHE_CONTROL_NO_CACHE_REGEXP', CACHE_CONTROL_NO_CACHE_REGEXP, false, true), 'test', false)(J$.R(4952785, 'cacheControl', cacheControl, false, false)) : J$._())) {
                                return J$.Rt(4952809, J$.T(4952801, false, 23, false));
                            }
                            if (J$.C(264056, J$.C(264000, J$.R(4952817, 'noneMatch', noneMatch, false, false)) ? J$.B(496794, '!==', J$.R(4952825, 'noneMatch', noneMatch, false, false), J$.T(4952833, '*', 21, false)) : J$._())) {
                                var etag = J$.W(4952865, 'etag', J$.G(4952857, J$.R(4952841, 'resHeaders', resHeaders, false, false), J$.T(4952849, 'etag', 21, false)), etag, false, false);
                                if (J$.C(264008, J$.U(496802, '!', J$.R(4952873, 'etag', etag, false, false)))) {
                                    return J$.Rt(4952889, J$.T(4952881, false, 23, false));
                                }
                                var etagStale = J$.W(4952905, 'etagStale', J$.T(4952897, true, 23, false), etagStale, false, false);
                                var matches = J$.W(4952937, 'matches', J$.F(4952929, J$.R(4952913, 'parseTokenList', parseTokenList, false, true), false)(J$.R(4952921, 'noneMatch', noneMatch, false, false)), matches, false, false);
                                for (var i = J$.W(4952953, 'i', J$.T(4952945, 0, 22, false), i, false, false); J$.C(264040, J$.B(496810, '<', J$.R(4952961, 'i', i, false, false), J$.G(4952977, J$.R(4952969, 'matches', matches, false, false), 'length'))); J$.B(496834, '-', i = J$.W(4952993, 'i', J$.B(496826, '+', J$.U(496818, '+', J$.R(4952985, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var match = J$.W(4953025, 'match', J$.G(4953017, J$.R(4953001, 'matches', matches, false, false), J$.R(4953009, 'i', i, false, false)), match, false, false);
                                    if (J$.C(264032, J$.C(264024, J$.C(264016, J$.B(496842, '===', J$.R(4953033, 'match', match, false, false), J$.R(4953041, 'etag', etag, false, false))) ? J$._() : J$.B(496858, '===', J$.R(4953049, 'match', match, false, false), J$.B(496850, '+', J$.T(4953057, 'W/', 21, false), J$.R(4953065, 'etag', etag, false, false)))) ? J$._() : J$.B(496874, '===', J$.B(496866, '+', J$.T(4953073, 'W/', 21, false), J$.R(4953081, 'match', match, false, false)), J$.R(4953089, 'etag', etag, false, false)))) {
                                        etagStale = J$.W(4953105, 'etagStale', J$.T(4953097, false, 23, false), etagStale, false, false);
                                        break;
                                    }
                                }
                                if (J$.C(264048, J$.R(4953113, 'etagStale', etagStale, false, false))) {
                                    return J$.Rt(4953129, J$.T(4953121, false, 23, false));
                                }
                            }
                            if (J$.C(264080, J$.R(4953137, 'modifiedSince', modifiedSince, false, false))) {
                                var lastModified = J$.W(4953169, 'lastModified', J$.G(4953161, J$.R(4953145, 'resHeaders', resHeaders, false, false), J$.T(4953153, 'last-modified', 21, false)), lastModified, false, false);
                                var modifiedStale = J$.W(4953233, 'modifiedStale', J$.C(264064, J$.U(496882, '!', J$.R(4953177, 'lastModified', lastModified, false, false))) ? J$._() : J$.U(496898, '!', J$.B(496890, '<=', J$.F(4953201, J$.R(4953185, 'parseHttpDate', parseHttpDate, false, true), false)(J$.R(4953193, 'lastModified', lastModified, false, false)), J$.F(4953225, J$.R(4953209, 'parseHttpDate', parseHttpDate, false, true), false)(J$.R(4953217, 'modifiedSince', modifiedSince, false, false)))), modifiedStale, false, false);
                                if (J$.C(264072, J$.R(4953241, 'modifiedStale', modifiedStale, false, false))) {
                                    return J$.Rt(4953257, J$.T(4953249, false, 23, false));
                                }
                            }
                            return J$.Rt(4953273, J$.T(4953265, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(4954009, J$e);
                        } finally {
                            if (J$.Fr(4954017))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseHttpDate(date) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4953473, arguments.callee, this, arguments);
                            arguments = J$.N(4953481, 'arguments', arguments, true, false, false);
                            date = J$.N(4953489, 'date', date, true, false, false);
                            J$.N(4953497, 'timestamp', timestamp, false, false, false);
                            var timestamp = J$.W(4953425, 'timestamp', J$.C(264088, J$.R(4953393, 'date', date, false, false)) ? J$.M(4953417, J$.I(typeof Date === 'undefined' ? Date = J$.R(4953401, 'Date', undefined, true, true) : Date = J$.R(4953401, 'Date', Date, true, true)), 'parse', false)(J$.R(4953409, 'date', date, false, false)) : J$._(), timestamp, false, false);
                            return J$.Rt(4953465, J$.C(264096, J$.B(496914, '===', J$.U(496906, 'typeof', J$.R(4953433, 'timestamp', timestamp, false, false)), J$.T(4953441, 'number', 21, false))) ? J$.R(4953449, 'timestamp', timestamp, false, false) : J$.T(4953457, NaN, 22, false));
                        } catch (J$e) {
                            J$.Ex(4954025, J$e);
                        } finally {
                            if (J$.Fr(4954033))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseTokenList(str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4953881, arguments.callee, this, arguments);
                            arguments = J$.N(4953889, 'arguments', arguments, true, false, false);
                            str = J$.N(4953897, 'str', str, true, false, false);
                            J$.N(4953905, 'end', end, false, false, false);
                            J$.N(4953913, 'list', list, false, false, false);
                            J$.N(4953921, 'start', start, false, false, false);
                            J$.N(4953929, 'i', i, false, false, false);
                            J$.N(4953937, 'len', len, false, false, false);
                            var end = J$.W(4953513, 'end', J$.T(4953505, 0, 22, false), end, false, false);
                            var list = J$.W(4953529, 'list', J$.T(4953521, [], 10, false), list, false, false);
                            var start = J$.W(4953545, 'start', J$.T(4953537, 0, 22, false), start, false, false);
                            for (var i = J$.W(4953577, 'i', J$.T(4953553, 0, 22, false), i, false, false), len = J$.W(4953585, 'len', J$.G(4953569, J$.R(4953561, 'str', str, false, false), 'length'), len, false, false); J$.C(264136, J$.B(496922, '<', J$.R(4953593, 'i', i, false, false), J$.R(4953601, 'len', len, false, false))); J$.B(496946, '-', i = J$.W(4953617, 'i', J$.B(496938, '+', J$.U(496930, '+', J$.R(4953609, 'i', i, false, false)), 1), i, false, false), 1)) {
                                switch (J$.C1(264112, J$.M(4953641, J$.R(4953625, 'str', str, false, false), 'charCodeAt', false)(J$.R(4953633, 'i', i, false, false)))) {
                                case J$.C2(264120, J$.T(4953697, 32, 22, false)):
                                    if (J$.C(264104, J$.B(496954, '===', J$.R(4953649, 'start', start, false, false), J$.R(4953657, 'end', end, false, false)))) {
                                        start = J$.W(4953689, 'start', end = J$.W(4953681, 'end', J$.B(496962, '+', J$.R(4953665, 'i', i, false, false), J$.T(4953673, 1, 22, false)), end, false, false), start, false, false);
                                    }
                                    break;
                                case J$.C2(264128, J$.T(4953785, 44, 22, false)):
                                    J$.M(4953745, J$.R(4953705, 'list', list, false, false), 'push', false)(J$.M(4953737, J$.R(4953713, 'str', str, false, false), 'substring', false)(J$.R(4953721, 'start', start, false, false), J$.R(4953729, 'end', end, false, false)));
                                    start = J$.W(4953777, 'start', end = J$.W(4953769, 'end', J$.B(496970, '+', J$.R(4953753, 'i', i, false, false), J$.T(4953761, 1, 22, false)), end, false, false), start, false, false);
                                    break;
                                default:
                                    end = J$.W(4953809, 'end', J$.B(496978, '+', J$.R(4953793, 'i', i, false, false), J$.T(4953801, 1, 22, false)), end, false, false);
                                    break;
                                }
                            }
                            J$.M(4953857, J$.R(4953817, 'list', list, false, false), 'push', false)(J$.M(4953849, J$.R(4953825, 'str', str, false, false), 'substring', false)(J$.R(4953833, 'start', start, false, false), J$.R(4953841, 'end', end, false, false)));
                            return J$.Rt(4953873, J$.R(4953865, 'list', list, false, false));
                        } catch (J$e) {
                            J$.Ex(4954041, J$e);
                        } finally {
                            if (J$.Fr(4954049))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4953953, 'CACHE_CONTROL_NO_CACHE_REGEXP', CACHE_CONTROL_NO_CACHE_REGEXP, false, false, false);
            fresh = J$.N(4953969, 'fresh', J$.T(4953961, fresh, 12, false), true, false, false);
            parseHttpDate = J$.N(4953985, 'parseHttpDate', J$.T(4953977, parseHttpDate, 12, false), true, false, false);
            parseTokenList = J$.N(4954001, 'parseTokenList', J$.T(4953993, parseTokenList, 12, false), true, false, false);
            J$.T(4952545, 'use strict', 21, false);
            J$.F(4952569, J$.I(typeof require === 'undefined' ? require = J$.R(4952553, 'require', undefined, true, true) : require = J$.R(4952553, 'require', require, true, true)), false)(J$.T(4952561, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(4952593, J$.I(typeof require === 'undefined' ? require = J$.R(4952577, 'require', undefined, true, true) : require = J$.R(4952577, 'require', require, true, true)), false)(J$.T(4952585, 'core-js/modules/es.date.to-string', 21, false));
            var CACHE_CONTROL_NO_CACHE_REGEXP = J$.W(4952609, 'CACHE_CONTROL_NO_CACHE_REGEXP', J$.T(4952601, /(?:^|,)\s*?no-cache\s*?(?:,|$)/, 14, false), CACHE_CONTROL_NO_CACHE_REGEXP, false, true);
            J$.P(4952633, J$.I(typeof module === 'undefined' ? module = J$.R(4952617, 'module', undefined, true, true) : module = J$.R(4952617, 'module', module, true, true)), 'exports', J$.R(4952625, 'fresh', fresh, false, true));
        } catch (J$e) {
            J$.Ex(4954057, J$e);
        } finally {
            if (J$.Sr(4954065))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

