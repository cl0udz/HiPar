J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4865841, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestDatalize/node_modules/debug/src/inspector-log.js');
            function inspectorLog() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4865817, arguments.callee, this, arguments);
                            arguments = J$.N(4865825, 'arguments', arguments, true, false, false);
                            J$.N(4865833, 'stdout', stdout, false, false, false);
                            var stdout = J$.W(4865721, 'stdout', J$.G(4865713, J$.I(typeof console === 'undefined' ? console = J$.R(4865705, 'console', undefined, true, true) : console = J$.R(4865705, 'console', console, true, true)), '_stdout'), stdout, false, false);
                            J$.P(4865745, J$.I(typeof console === 'undefined' ? console = J$.R(4865729, 'console', undefined, true, true) : console = J$.R(4865729, 'console', console, true, true)), '_stdout', J$.R(4865737, 'nullStream', nullStream, false, true));
                            J$.M(4865785, J$.G(4865761, J$.I(typeof console === 'undefined' ? console = J$.R(4865753, 'console', undefined, true, true) : console = J$.R(4865753, 'console', console, true, true)), 'log'), 'apply', false)(J$.I(typeof console === 'undefined' ? console = J$.R(4865769, 'console', undefined, true, true) : console = J$.R(4865769, 'console', console, true, true)), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4865777, 'arguments', undefined, true, true) : arguments = J$.R(4865777, 'arguments', arguments, true, true)));
                            J$.P(4865809, J$.I(typeof console === 'undefined' ? console = J$.R(4865793, 'console', undefined, true, true) : console = J$.R(4865793, 'console', console, true, true)), '_stdout', J$.R(4865801, 'stdout', stdout, false, false));
                        } catch (J$e) {
                            J$.Ex(4865889, J$e);
                        } finally {
                            if (J$.Fr(4865897))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4865849, 'nullStream', nullStream, false, false, false);
            inspectorLog = J$.N(4865865, 'inspectorLog', J$.T(4865857, inspectorLog, 12, false), true, false, false);
            J$.T(4865593, 'use strict', 21, false);
            J$.P(4865617, J$.I(typeof module === 'undefined' ? module = J$.R(4865601, 'module', undefined, true, true) : module = J$.R(4865601, 'module', module, true, true)), 'exports', J$.R(4865609, 'inspectorLog', inspectorLog, false, true));
            var nullStream = J$.W(4865657, 'nullStream', J$.M(4865649, J$.F(4865641, J$.I(typeof require === 'undefined' ? require = J$.R(4865625, 'require', undefined, true, true) : require = J$.R(4865625, 'require', require, true, true)), false)(J$.T(4865633, 'stream', 21, false)), 'Writable', true)(), nullStream, false, true);
            J$.P(4865697, J$.R(4865665, 'nullStream', nullStream, false, true), '_write', J$.T(4865689, function () {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4865673, arguments.callee, this, arguments);
                            arguments = J$.N(4865681, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(4865873, J$e);
                        } finally {
                            if (J$.Fr(4865881))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4865905, J$e);
        } finally {
            if (J$.Sr(4865913))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

