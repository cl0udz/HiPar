J$.noInstrEval = false;
jalangiLabel36:
    while (true) {
        try {
            J$.Se(868313, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ecc-jsbn/lib/ec.js');
            function ECFieldElementFp(q, x) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(854849, arguments.callee, this, arguments);
                            arguments = J$.N(854857, 'arguments', arguments, true, false, false);
                            q = J$.N(854865, 'q', q, true, false, false);
                            x = J$.N(854873, 'x', x, true, false, false);
                            J$.P(854817, J$.R(854801, 'this', this, false, false), 'x', J$.R(854809, 'x', x, false, false));
                            J$.P(854841, J$.R(854825, 'this', this, false, false), 'q', J$.R(854833, 'q', q, false, false));
                        } catch (J$e) {
                            J$.Ex(868809, J$e);
                        } finally {
                            if (J$.Fr(868817))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpEquals(other) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(855001, arguments.callee, this, arguments);
                            arguments = J$.N(855009, 'arguments', arguments, true, false, false);
                            other = J$.N(855017, 'other', other, true, false, false);
                            if (J$.C(51944, J$.B(143194, '==', J$.R(854881, 'other', other, false, false), J$.R(854889, 'this', this, false, false))))
                                return J$.Rt(854905, J$.T(854897, true, 23, false));
                            return J$.Rt(854993, J$.C(51952, J$.M(854945, J$.G(854921, J$.R(854913, 'this', this, false, false), 'q'), 'equals', false)(J$.G(854937, J$.R(854929, 'other', other, false, false), 'q'))) ? J$.M(854985, J$.G(854961, J$.R(854953, 'this', this, false, false), 'x'), 'equals', false)(J$.G(854977, J$.R(854969, 'other', other, false, false), 'x')) : J$._());
                        } catch (J$e) {
                            J$.Ex(868825, J$e);
                        } finally {
                            if (J$.Fr(868833))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpToBigInteger() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(855049, arguments.callee, this, arguments);
                            arguments = J$.N(855057, 'arguments', arguments, true, false, false);
                            return J$.Rt(855041, J$.G(855033, J$.R(855025, 'this', this, false, false), 'x'));
                        } catch (J$e) {
                            J$.Ex(868841, J$e);
                        } finally {
                            if (J$.Fr(868849))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpNegate() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(855153, arguments.callee, this, arguments);
                            arguments = J$.N(855161, 'arguments', arguments, true, false, false);
                            return J$.Rt(855145, J$.F(855137, J$.R(855065, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(855081, J$.R(855073, 'this', this, false, false), 'q'), J$.M(855129, J$.M(855105, J$.G(855097, J$.R(855089, 'this', this, false, false), 'x'), 'negate', false)(), 'mod', false)(J$.G(855121, J$.R(855113, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(868857, J$e);
                        } finally {
                            if (J$.Fr(868865))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpAdd(b) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(855273, arguments.callee, this, arguments);
                            arguments = J$.N(855281, 'arguments', arguments, true, false, false);
                            b = J$.N(855289, 'b', b, true, false, false);
                            return J$.Rt(855265, J$.F(855257, J$.R(855169, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(855185, J$.R(855177, 'this', this, false, false), 'q'), J$.M(855249, J$.M(855225, J$.G(855201, J$.R(855193, 'this', this, false, false), 'x'), 'add', false)(J$.M(855217, J$.R(855209, 'b', b, false, false), 'toBigInteger', false)()), 'mod', false)(J$.G(855241, J$.R(855233, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(868873, J$e);
                        } finally {
                            if (J$.Fr(868881))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpSubtract(b) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(855401, arguments.callee, this, arguments);
                            arguments = J$.N(855409, 'arguments', arguments, true, false, false);
                            b = J$.N(855417, 'b', b, true, false, false);
                            return J$.Rt(855393, J$.F(855385, J$.R(855297, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(855313, J$.R(855305, 'this', this, false, false), 'q'), J$.M(855377, J$.M(855353, J$.G(855329, J$.R(855321, 'this', this, false, false), 'x'), 'subtract', false)(J$.M(855345, J$.R(855337, 'b', b, false, false), 'toBigInteger', false)()), 'mod', false)(J$.G(855369, J$.R(855361, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(868889, J$e);
                        } finally {
                            if (J$.Fr(868897))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpMultiply(b) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(855529, arguments.callee, this, arguments);
                            arguments = J$.N(855537, 'arguments', arguments, true, false, false);
                            b = J$.N(855545, 'b', b, true, false, false);
                            return J$.Rt(855521, J$.F(855513, J$.R(855425, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(855441, J$.R(855433, 'this', this, false, false), 'q'), J$.M(855505, J$.M(855481, J$.G(855457, J$.R(855449, 'this', this, false, false), 'x'), 'multiply', false)(J$.M(855473, J$.R(855465, 'b', b, false, false), 'toBigInteger', false)()), 'mod', false)(J$.G(855497, J$.R(855489, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(868905, J$e);
                        } finally {
                            if (J$.Fr(868913))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpSquare() {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(855641, arguments.callee, this, arguments);
                            arguments = J$.N(855649, 'arguments', arguments, true, false, false);
                            return J$.Rt(855633, J$.F(855625, J$.R(855553, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(855569, J$.R(855561, 'this', this, false, false), 'q'), J$.M(855617, J$.M(855593, J$.G(855585, J$.R(855577, 'this', this, false, false), 'x'), 'square', false)(), 'mod', false)(J$.G(855609, J$.R(855601, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(868921, J$e);
                        } finally {
                            if (J$.Fr(868929))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function feFpDivide(b) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(855785, arguments.callee, this, arguments);
                            arguments = J$.N(855793, 'arguments', arguments, true, false, false);
                            b = J$.N(855801, 'b', b, true, false, false);
                            return J$.Rt(855777, J$.F(855769, J$.R(855657, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(855673, J$.R(855665, 'this', this, false, false), 'q'), J$.M(855761, J$.M(855737, J$.G(855689, J$.R(855681, 'this', this, false, false), 'x'), 'multiply', false)(J$.M(855729, J$.M(855705, J$.R(855697, 'b', b, false, false), 'toBigInteger', false)(), 'modInverse', false)(J$.G(855721, J$.R(855713, 'this', this, false, false), 'q'))), 'mod', false)(J$.G(855753, J$.R(855745, 'this', this, false, false), 'q'))));
                        } catch (J$e) {
                            J$.Ex(868937, J$e);
                        } finally {
                            if (J$.Fr(868945))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ECPointFp(curve, x, y, z) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(856233, arguments.callee, this, arguments);
                            arguments = J$.N(856241, 'arguments', arguments, true, false, false);
                            curve = J$.N(856249, 'curve', curve, true, false, false);
                            x = J$.N(856257, 'x', x, true, false, false);
                            y = J$.N(856265, 'y', y, true, false, false);
                            z = J$.N(856273, 'z', z, true, false, false);
                            J$.P(856081, J$.R(856065, 'this', this, false, false), 'curve', J$.R(856073, 'curve', curve, false, false));
                            J$.P(856105, J$.R(856089, 'this', this, false, false), 'x', J$.R(856097, 'x', x, false, false));
                            J$.P(856129, J$.R(856113, 'this', this, false, false), 'y', J$.R(856121, 'y', y, false, false));
                            if (J$.C(51960, J$.B(143202, '==', J$.R(856137, 'z', z, false, false), J$.T(856145, null, 25, false)))) {
                                J$.P(856177, J$.R(856153, 'this', this, false, false), 'z', J$.G(856169, J$.R(856161, 'BigInteger', BigInteger, false, true), 'ONE'));
                            } else {
                                J$.P(856201, J$.R(856185, 'this', this, false, false), 'z', J$.R(856193, 'z', z, false, false));
                            }
                            J$.P(856225, J$.R(856209, 'this', this, false, false), 'zinv', J$.T(856217, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(868953, J$e);
                        } finally {
                            if (J$.Fr(868961))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpGetX() {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(856497, arguments.callee, this, arguments);
                            arguments = J$.N(856505, 'arguments', arguments, true, false, false);
                            J$.N(856513, 'r', r, false, false, false);
                            if (J$.C(51968, J$.B(143210, '==', J$.G(856289, J$.R(856281, 'this', this, false, false), 'zinv'), J$.T(856297, null, 25, false)))) {
                                J$.P(856361, J$.R(856305, 'this', this, false, false), 'zinv', J$.M(856353, J$.G(856321, J$.R(856313, 'this', this, false, false), 'z'), 'modInverse', false)(J$.G(856345, J$.G(856337, J$.R(856329, 'this', this, false, false), 'curve'), 'q')));
                            }
                            var r = J$.W(856417, 'r', J$.M(856409, J$.M(856385, J$.G(856377, J$.R(856369, 'this', this, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(856401, J$.R(856393, 'this', this, false, false), 'zinv')), r, false, false);
                            J$.M(856449, J$.G(856433, J$.R(856425, 'this', this, false, false), 'curve'), 'reduce', false)(J$.R(856441, 'r', r, false, false));
                            return J$.Rt(856489, J$.M(856481, J$.G(856465, J$.R(856457, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(856473, 'r', r, false, false)));
                        } catch (J$e) {
                            J$.Ex(868969, J$e);
                        } finally {
                            if (J$.Fr(868977))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpGetY() {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(856737, arguments.callee, this, arguments);
                            arguments = J$.N(856745, 'arguments', arguments, true, false, false);
                            J$.N(856753, 'r', r, false, false, false);
                            if (J$.C(51976, J$.B(143218, '==', J$.G(856529, J$.R(856521, 'this', this, false, false), 'zinv'), J$.T(856537, null, 25, false)))) {
                                J$.P(856601, J$.R(856545, 'this', this, false, false), 'zinv', J$.M(856593, J$.G(856561, J$.R(856553, 'this', this, false, false), 'z'), 'modInverse', false)(J$.G(856585, J$.G(856577, J$.R(856569, 'this', this, false, false), 'curve'), 'q')));
                            }
                            var r = J$.W(856657, 'r', J$.M(856649, J$.M(856625, J$.G(856617, J$.R(856609, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(856641, J$.R(856633, 'this', this, false, false), 'zinv')), r, false, false);
                            J$.M(856689, J$.G(856673, J$.R(856665, 'this', this, false, false), 'curve'), 'reduce', false)(J$.R(856681, 'r', r, false, false));
                            return J$.Rt(856729, J$.M(856721, J$.G(856705, J$.R(856697, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(856713, 'r', r, false, false)));
                        } catch (J$e) {
                            J$.Ex(868985, J$e);
                        } finally {
                            if (J$.Fr(868993))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpEquals(other) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(857249, arguments.callee, this, arguments);
                            arguments = J$.N(857257, 'arguments', arguments, true, false, false);
                            other = J$.N(857265, 'other', other, true, false, false);
                            J$.N(857273, 'u', u, false, false, false);
                            J$.N(857281, 'v', v, false, false, false);
                            if (J$.C(51984, J$.B(143226, '==', J$.R(856761, 'other', other, false, false), J$.R(856769, 'this', this, false, false))))
                                return J$.Rt(856785, J$.T(856777, true, 23, false));
                            if (J$.C(51992, J$.M(856801, J$.R(856793, 'this', this, false, false), 'isInfinity', false)()))
                                return J$.Rt(856825, J$.M(856817, J$.R(856809, 'other', other, false, false), 'isInfinity', false)());
                            if (J$.C(52000, J$.M(856841, J$.R(856833, 'other', other, false, false), 'isInfinity', false)()))
                                return J$.Rt(856865, J$.M(856857, J$.R(856849, 'this', this, false, false), 'isInfinity', false)());
                            var u, v;
                            u = J$.W(857009, 'u', J$.M(857001, J$.M(856969, J$.M(856913, J$.M(856889, J$.G(856881, J$.R(856873, 'other', other, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(856905, J$.R(856897, 'this', this, false, false), 'z')), 'subtract', false)(J$.M(856961, J$.M(856937, J$.G(856929, J$.R(856921, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(856953, J$.R(856945, 'other', other, false, false), 'z'))), 'mod', false)(J$.G(856993, J$.G(856985, J$.R(856977, 'this', this, false, false), 'curve'), 'q')), u, false, false);
                            if (J$.C(52008, J$.U(143234, '!', J$.M(857041, J$.R(857017, 'u', u, false, false), 'equals', false)(J$.G(857033, J$.R(857025, 'BigInteger', BigInteger, false, true), 'ZERO')))))
                                return J$.Rt(857057, J$.T(857049, false, 23, false));
                            v = J$.W(857201, 'v', J$.M(857193, J$.M(857161, J$.M(857105, J$.M(857081, J$.G(857073, J$.R(857065, 'other', other, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(857097, J$.R(857089, 'this', this, false, false), 'z')), 'subtract', false)(J$.M(857153, J$.M(857129, J$.G(857121, J$.R(857113, 'this', this, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(857145, J$.R(857137, 'other', other, false, false), 'z'))), 'mod', false)(J$.G(857185, J$.G(857177, J$.R(857169, 'this', this, false, false), 'curve'), 'q')), v, false, false);
                            return J$.Rt(857241, J$.M(857233, J$.R(857209, 'v', v, false, false), 'equals', false)(J$.G(857225, J$.R(857217, 'BigInteger', BigInteger, false, true), 'ZERO')));
                        } catch (J$e) {
                            J$.Ex(869001, J$e);
                        } finally {
                            if (J$.Fr(869009))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpIsInfinity() {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(857449, arguments.callee, this, arguments);
                            arguments = J$.N(857457, 'arguments', arguments, true, false, false);
                            if (J$.C(52024, J$.C(52016, J$.B(143242, '==', J$.G(857297, J$.R(857289, 'this', this, false, false), 'x'), J$.T(857305, null, 25, false))) ? J$.B(143250, '==', J$.G(857321, J$.R(857313, 'this', this, false, false), 'y'), J$.T(857329, null, 25, false)) : J$._()))
                                return J$.Rt(857345, J$.T(857337, true, 23, false));
                            return J$.Rt(857441, J$.C(52032, J$.M(857385, J$.G(857361, J$.R(857353, 'this', this, false, false), 'z'), 'equals', false)(J$.G(857377, J$.R(857369, 'BigInteger', BigInteger, false, true), 'ZERO'))) ? J$.U(143258, '!', J$.M(857433, J$.M(857409, J$.G(857401, J$.R(857393, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'equals', false)(J$.G(857425, J$.R(857417, 'BigInteger', BigInteger, false, true), 'ZERO'))) : J$._());
                        } catch (J$e) {
                            J$.Ex(869017, J$e);
                        } finally {
                            if (J$.Fr(869025))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpNegate() {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(857561, arguments.callee, this, arguments);
                            arguments = J$.N(857569, 'arguments', arguments, true, false, false);
                            return J$.Rt(857553, J$.F(857545, J$.R(857465, 'ECPointFp', ECPointFp, false, true), true)(J$.G(857481, J$.R(857473, 'this', this, false, false), 'curve'), J$.G(857497, J$.R(857489, 'this', this, false, false), 'x'), J$.M(857521, J$.G(857513, J$.R(857505, 'this', this, false, false), 'y'), 'negate', false)(), J$.G(857537, J$.R(857529, 'this', this, false, false), 'z')));
                        } catch (J$e) {
                            J$.Ex(869033, J$e);
                        } finally {
                            if (J$.Fr(869041))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpAdd(b) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(858889, arguments.callee, this, arguments);
                            arguments = J$.N(858897, 'arguments', arguments, true, false, false);
                            b = J$.N(858905, 'b', b, true, false, false);
                            J$.N(858913, 'u', u, false, false, false);
                            J$.N(858921, 'v', v, false, false, false);
                            J$.N(858929, 'THREE', THREE, false, false, false);
                            J$.N(858937, 'x1', x1, false, false, false);
                            J$.N(858945, 'y1', y1, false, false, false);
                            J$.N(858953, 'x2', x2, false, false, false);
                            J$.N(858961, 'y2', y2, false, false, false);
                            J$.N(858969, 'v2', v2, false, false, false);
                            J$.N(858977, 'v3', v3, false, false, false);
                            J$.N(858985, 'x1v2', x1v2, false, false, false);
                            J$.N(858993, 'zu2', zu2, false, false, false);
                            J$.N(859001, 'x3', x3, false, false, false);
                            J$.N(859009, 'y3', y3, false, false, false);
                            J$.N(859017, 'z3', z3, false, false, false);
                            if (J$.C(52040, J$.M(857585, J$.R(857577, 'this', this, false, false), 'isInfinity', false)()))
                                return J$.Rt(857601, J$.R(857593, 'b', b, false, false));
                            if (J$.C(52048, J$.M(857617, J$.R(857609, 'b', b, false, false), 'isInfinity', false)()))
                                return J$.Rt(857633, J$.R(857625, 'this', this, false, false));
                            var u = J$.W(857777, 'u', J$.M(857769, J$.M(857737, J$.M(857681, J$.M(857657, J$.G(857649, J$.R(857641, 'b', b, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(857673, J$.R(857665, 'this', this, false, false), 'z')), 'subtract', false)(J$.M(857729, J$.M(857705, J$.G(857697, J$.R(857689, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'multiply', false)(J$.G(857721, J$.R(857713, 'b', b, false, false), 'z'))), 'mod', false)(J$.G(857761, J$.G(857753, J$.R(857745, 'this', this, false, false), 'curve'), 'q')), u, false, false);
                            var v = J$.W(857921, 'v', J$.M(857913, J$.M(857881, J$.M(857825, J$.M(857801, J$.G(857793, J$.R(857785, 'b', b, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(857817, J$.R(857809, 'this', this, false, false), 'z')), 'subtract', false)(J$.M(857873, J$.M(857849, J$.G(857841, J$.R(857833, 'this', this, false, false), 'x'), 'toBigInteger', false)(), 'multiply', false)(J$.G(857865, J$.R(857857, 'b', b, false, false), 'z'))), 'mod', false)(J$.G(857905, J$.G(857897, J$.R(857889, 'this', this, false, false), 'curve'), 'q')), v, false, false);
                            if (J$.C(52064, J$.M(857953, J$.G(857937, J$.R(857929, 'BigInteger', BigInteger, false, true), 'ZERO'), 'equals', false)(J$.R(857945, 'v', v, false, false)))) {
                                if (J$.C(52056, J$.M(857985, J$.G(857969, J$.R(857961, 'BigInteger', BigInteger, false, true), 'ZERO'), 'equals', false)(J$.R(857977, 'u', u, false, false)))) {
                                    return J$.Rt(858009, J$.M(858001, J$.R(857993, 'this', this, false, false), 'twice', false)());
                                }
                                return J$.Rt(858041, J$.M(858033, J$.G(858025, J$.R(858017, 'this', this, false, false), 'curve'), 'getInfinity', false)());
                            }
                            var THREE = J$.W(858073, 'THREE', J$.F(858065, J$.R(858049, 'BigInteger', BigInteger, false, true), true)(J$.T(858057, '3', 21, false)), THREE, false, false);
                            var x1 = J$.W(858105, 'x1', J$.M(858097, J$.G(858089, J$.R(858081, 'this', this, false, false), 'x'), 'toBigInteger', false)(), x1, false, false);
                            var y1 = J$.W(858137, 'y1', J$.M(858129, J$.G(858121, J$.R(858113, 'this', this, false, false), 'y'), 'toBigInteger', false)(), y1, false, false);
                            var x2 = J$.W(858169, 'x2', J$.M(858161, J$.G(858153, J$.R(858145, 'b', b, false, false), 'x'), 'toBigInteger', false)(), x2, false, false);
                            var y2 = J$.W(858201, 'y2', J$.M(858193, J$.G(858185, J$.R(858177, 'b', b, false, false), 'y'), 'toBigInteger', false)(), y2, false, false);
                            var v2 = J$.W(858225, 'v2', J$.M(858217, J$.R(858209, 'v', v, false, false), 'square', false)(), v2, false, false);
                            var v3 = J$.W(858257, 'v3', J$.M(858249, J$.R(858233, 'v2', v2, false, false), 'multiply', false)(J$.R(858241, 'v', v, false, false)), v3, false, false);
                            var x1v2 = J$.W(858289, 'x1v2', J$.M(858281, J$.R(858265, 'x1', x1, false, false), 'multiply', false)(J$.R(858273, 'v2', v2, false, false)), x1v2, false, false);
                            var zu2 = J$.W(858337, 'zu2', J$.M(858329, J$.M(858305, J$.R(858297, 'u', u, false, false), 'square', false)(), 'multiply', false)(J$.G(858321, J$.R(858313, 'this', this, false, false), 'z')), zu2, false, false);
                            var x3 = J$.W(858473, 'x3', J$.M(858465, J$.M(858433, J$.M(858417, J$.M(858401, J$.M(858377, J$.R(858345, 'zu2', zu2, false, false), 'subtract', false)(J$.M(858369, J$.R(858353, 'x1v2', x1v2, false, false), 'shiftLeft', false)(J$.T(858361, 1, 22, false))), 'multiply', false)(J$.G(858393, J$.R(858385, 'b', b, false, false), 'z')), 'subtract', false)(J$.R(858409, 'v3', v3, false, false)), 'multiply', false)(J$.R(858425, 'v', v, false, false)), 'mod', false)(J$.G(858457, J$.G(858449, J$.R(858441, 'this', this, false, false), 'curve'), 'q')), x3, false, false);
                            var y3 = J$.W(858673, 'y3', J$.M(858665, J$.M(858633, J$.M(858601, J$.M(858577, J$.M(858545, J$.M(858513, J$.M(858497, J$.R(858481, 'x1v2', x1v2, false, false), 'multiply', false)(J$.R(858489, 'THREE', THREE, false, false)), 'multiply', false)(J$.R(858505, 'u', u, false, false)), 'subtract', false)(J$.M(858537, J$.R(858521, 'y1', y1, false, false), 'multiply', false)(J$.R(858529, 'v3', v3, false, false))), 'subtract', false)(J$.M(858569, J$.R(858553, 'zu2', zu2, false, false), 'multiply', false)(J$.R(858561, 'u', u, false, false))), 'multiply', false)(J$.G(858593, J$.R(858585, 'b', b, false, false), 'z')), 'add', false)(J$.M(858625, J$.R(858609, 'u', u, false, false), 'multiply', false)(J$.R(858617, 'v3', v3, false, false))), 'mod', false)(J$.G(858657, J$.G(858649, J$.R(858641, 'this', this, false, false), 'curve'), 'q')), y3, false, false);
                            var z3 = J$.W(858769, 'z3', J$.M(858761, J$.M(858729, J$.M(858705, J$.R(858681, 'v3', v3, false, false), 'multiply', false)(J$.G(858697, J$.R(858689, 'this', this, false, false), 'z')), 'multiply', false)(J$.G(858721, J$.R(858713, 'b', b, false, false), 'z')), 'mod', false)(J$.G(858753, J$.G(858745, J$.R(858737, 'this', this, false, false), 'curve'), 'q')), z3, false, false);
                            return J$.Rt(858881, J$.F(858873, J$.R(858777, 'ECPointFp', ECPointFp, false, true), true)(J$.G(858793, J$.R(858785, 'this', this, false, false), 'curve'), J$.M(858825, J$.G(858809, J$.R(858801, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(858817, 'x3', x3, false, false)), J$.M(858857, J$.G(858841, J$.R(858833, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(858849, 'y3', y3, false, false)), J$.R(858865, 'z3', z3, false, false)));
                        } catch (J$e) {
                            J$.Ex(869049, J$e);
                        } finally {
                            if (J$.Fr(869057))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpTwice() {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(860073, arguments.callee, this, arguments);
                            arguments = J$.N(860081, 'arguments', arguments, true, false, false);
                            J$.N(860089, 'THREE', THREE, false, false, false);
                            J$.N(860097, 'x1', x1, false, false, false);
                            J$.N(860105, 'y1', y1, false, false, false);
                            J$.N(860113, 'y1z1', y1z1, false, false, false);
                            J$.N(860121, 'y1sqz1', y1sqz1, false, false, false);
                            J$.N(860129, 'a', a, false, false, false);
                            J$.N(860137, 'w', w, false, false, false);
                            J$.N(860145, 'x3', x3, false, false, false);
                            J$.N(860153, 'y3', y3, false, false, false);
                            J$.N(860161, 'z3', z3, false, false, false);
                            if (J$.C(52072, J$.M(859033, J$.R(859025, 'this', this, false, false), 'isInfinity', false)()))
                                return J$.Rt(859049, J$.R(859041, 'this', this, false, false));
                            if (J$.C(52080, J$.B(143266, '==', J$.M(859081, J$.M(859073, J$.G(859065, J$.R(859057, 'this', this, false, false), 'y'), 'toBigInteger', false)(), 'signum', false)(), J$.T(859089, 0, 22, false))))
                                return J$.Rt(859121, J$.M(859113, J$.G(859105, J$.R(859097, 'this', this, false, false), 'curve'), 'getInfinity', false)());
                            var THREE = J$.W(859153, 'THREE', J$.F(859145, J$.R(859129, 'BigInteger', BigInteger, false, true), true)(J$.T(859137, '3', 21, false)), THREE, false, false);
                            var x1 = J$.W(859185, 'x1', J$.M(859177, J$.G(859169, J$.R(859161, 'this', this, false, false), 'x'), 'toBigInteger', false)(), x1, false, false);
                            var y1 = J$.W(859217, 'y1', J$.M(859209, J$.G(859201, J$.R(859193, 'this', this, false, false), 'y'), 'toBigInteger', false)(), y1, false, false);
                            var y1z1 = J$.W(859257, 'y1z1', J$.M(859249, J$.R(859225, 'y1', y1, false, false), 'multiply', false)(J$.G(859241, J$.R(859233, 'this', this, false, false), 'z')), y1z1, false, false);
                            var y1sqz1 = J$.W(859321, 'y1sqz1', J$.M(859313, J$.M(859281, J$.R(859265, 'y1z1', y1z1, false, false), 'multiply', false)(J$.R(859273, 'y1', y1, false, false)), 'mod', false)(J$.G(859305, J$.G(859297, J$.R(859289, 'this', this, false, false), 'curve'), 'q')), y1sqz1, false, false);
                            var a = J$.W(859361, 'a', J$.M(859353, J$.G(859345, J$.G(859337, J$.R(859329, 'this', this, false, false), 'curve'), 'a'), 'toBigInteger', false)(), a, false, false);
                            var w = J$.W(859401, 'w', J$.M(859393, J$.M(859377, J$.R(859369, 'x1', x1, false, false), 'square', false)(), 'multiply', false)(J$.R(859385, 'THREE', THREE, false, false)), w, false, false);
                            if (J$.C(52088, J$.U(143274, '!', J$.M(859433, J$.G(859417, J$.R(859409, 'BigInteger', BigInteger, false, true), 'ZERO'), 'equals', false)(J$.R(859425, 'a', a, false, false))))) {
                                w = J$.W(859497, 'w', J$.M(859489, J$.R(859441, 'w', w, false, false), 'add', false)(J$.M(859481, J$.M(859465, J$.G(859457, J$.R(859449, 'this', this, false, false), 'z'), 'square', false)(), 'multiply', false)(J$.R(859473, 'a', a, false, false))), w, false, false);
                            }
                            w = J$.W(859545, 'w', J$.M(859537, J$.R(859505, 'w', w, false, false), 'mod', false)(J$.G(859529, J$.G(859521, J$.R(859513, 'this', this, false, false), 'curve'), 'q')), w, false, false);
                            var x3 = J$.W(859681, 'x3', J$.M(859673, J$.M(859641, J$.M(859625, J$.M(859609, J$.M(859561, J$.R(859553, 'w', w, false, false), 'square', false)(), 'subtract', false)(J$.M(859601, J$.M(859585, J$.R(859569, 'x1', x1, false, false), 'shiftLeft', false)(J$.T(859577, 3, 22, false)), 'multiply', false)(J$.R(859593, 'y1sqz1', y1sqz1, false, false))), 'shiftLeft', false)(J$.T(859617, 1, 22, false)), 'multiply', false)(J$.R(859633, 'y1z1', y1z1, false, false)), 'mod', false)(J$.G(859665, J$.G(859657, J$.R(859649, 'this', this, false, false), 'curve'), 'q')), x3, false, false);
                            var y3 = J$.W(859865, 'y3', J$.M(859857, J$.M(859825, J$.M(859785, J$.M(859769, J$.M(859753, J$.M(859721, J$.M(859705, J$.R(859689, 'w', w, false, false), 'multiply', false)(J$.R(859697, 'THREE', THREE, false, false)), 'multiply', false)(J$.R(859713, 'x1', x1, false, false)), 'subtract', false)(J$.M(859745, J$.R(859729, 'y1sqz1', y1sqz1, false, false), 'shiftLeft', false)(J$.T(859737, 1, 22, false))), 'shiftLeft', false)(J$.T(859761, 2, 22, false)), 'multiply', false)(J$.R(859777, 'y1sqz1', y1sqz1, false, false)), 'subtract', false)(J$.M(859817, J$.M(859801, J$.R(859793, 'w', w, false, false), 'square', false)(), 'multiply', false)(J$.R(859809, 'w', w, false, false))), 'mod', false)(J$.G(859849, J$.G(859841, J$.R(859833, 'this', this, false, false), 'curve'), 'q')), y3, false, false);
                            var z3 = J$.W(859953, 'z3', J$.M(859945, J$.M(859913, J$.M(859897, J$.M(859881, J$.R(859873, 'y1z1', y1z1, false, false), 'square', false)(), 'multiply', false)(J$.R(859889, 'y1z1', y1z1, false, false)), 'shiftLeft', false)(J$.T(859905, 3, 22, false)), 'mod', false)(J$.G(859937, J$.G(859929, J$.R(859921, 'this', this, false, false), 'curve'), 'q')), z3, false, false);
                            return J$.Rt(860065, J$.F(860057, J$.R(859961, 'ECPointFp', ECPointFp, false, true), true)(J$.G(859977, J$.R(859969, 'this', this, false, false), 'curve'), J$.M(860009, J$.G(859993, J$.R(859985, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(860001, 'x3', x3, false, false)), J$.M(860041, J$.G(860025, J$.R(860017, 'this', this, false, false), 'curve'), 'fromBigInteger', false)(J$.R(860033, 'y3', y3, false, false)), J$.R(860049, 'z3', z3, false, false)));
                        } catch (J$e) {
                            J$.Ex(869065, J$e);
                        } finally {
                            if (J$.Fr(869073))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpMultiply(k) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(860593, arguments.callee, this, arguments);
                            arguments = J$.N(860601, 'arguments', arguments, true, false, false);
                            k = J$.N(860609, 'k', k, true, false, false);
                            J$.N(860617, 'e', e, false, false, false);
                            J$.N(860625, 'h', h, false, false, false);
                            J$.N(860633, 'neg', neg, false, false, false);
                            J$.N(860641, 'R', R, false, false, false);
                            J$.N(860649, 'i', i, false, false, false);
                            J$.N(860657, 'hBit', hBit, false, false, false);
                            J$.N(860665, 'eBit', eBit, false, false, false);
                            if (J$.C(52096, J$.M(860177, J$.R(860169, 'this', this, false, false), 'isInfinity', false)()))
                                return J$.Rt(860193, J$.R(860185, 'this', this, false, false));
                            if (J$.C(52104, J$.B(143282, '==', J$.M(860209, J$.R(860201, 'k', k, false, false), 'signum', false)(), J$.T(860217, 0, 22, false))))
                                return J$.Rt(860249, J$.M(860241, J$.G(860233, J$.R(860225, 'this', this, false, false), 'curve'), 'getInfinity', false)());
                            var e = J$.W(860265, 'e', J$.R(860257, 'k', k, false, false), e, false, false);
                            var h = J$.W(860313, 'h', J$.M(860305, J$.R(860273, 'e', e, false, false), 'multiply', false)(J$.F(860297, J$.R(860281, 'BigInteger', BigInteger, false, true), true)(J$.T(860289, '3', 21, false))), h, false, false);
                            var neg = J$.W(860337, 'neg', J$.M(860329, J$.R(860321, 'this', this, false, false), 'negate', false)(), neg, false, false);
                            var R = J$.W(860353, 'R', J$.R(860345, 'this', this, false, false), R, false, false);
                            var i;
                            for (i = J$.W(860385, 'i', J$.B(143290, '-', J$.M(860369, J$.R(860361, 'h', h, false, false), 'bitLength', false)(), J$.T(860377, 2, 22, false)), i, false, false); J$.C(52128, J$.B(143298, '>', J$.R(860393, 'i', i, false, false), J$.T(860401, 0, 22, false))); i = J$.W(860417, 'i', J$.B(143314, '-', J$.U(143306, '+', J$.R(860409, 'i', i, false, false)), 1), i, false, false)) {
                                R = J$.W(860441, 'R', J$.M(860433, J$.R(860425, 'R', R, false, false), 'twice', false)(), R, false, false);
                                var hBit = J$.W(860473, 'hBit', J$.M(860465, J$.R(860449, 'h', h, false, false), 'testBit', false)(J$.R(860457, 'i', i, false, false)), hBit, false, false);
                                var eBit = J$.W(860505, 'eBit', J$.M(860497, J$.R(860481, 'e', e, false, false), 'testBit', false)(J$.R(860489, 'i', i, false, false)), eBit, false, false);
                                if (J$.C(52120, J$.B(143322, '!=', J$.R(860513, 'hBit', hBit, false, false), J$.R(860521, 'eBit', eBit, false, false)))) {
                                    R = J$.W(860569, 'R', J$.M(860561, J$.R(860529, 'R', R, false, false), 'add', false)(J$.C(52112, J$.R(860537, 'hBit', hBit, false, false)) ? J$.R(860545, 'this', this, false, false) : J$.R(860553, 'neg', neg, false, false)), R, false, false);
                                }
                            }
                            return J$.Rt(860585, J$.R(860577, 'R', R, false, false));
                        } catch (J$e) {
                            J$.Ex(869081, J$e);
                        } finally {
                            if (J$.Fr(869089))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pointFpMultiplyTwo(j, x, k) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(861073, arguments.callee, this, arguments);
                            arguments = J$.N(861081, 'arguments', arguments, true, false, false);
                            j = J$.N(861089, 'j', j, true, false, false);
                            x = J$.N(861097, 'x', x, true, false, false);
                            k = J$.N(861105, 'k', k, true, false, false);
                            J$.N(861113, 'i', i, false, false, false);
                            J$.N(861121, 'R', R, false, false, false);
                            J$.N(861129, 'both', both, false, false, false);
                            var i;
                            if (J$.C(52136, J$.B(143330, '>', J$.M(860681, J$.R(860673, 'j', j, false, false), 'bitLength', false)(), J$.M(860697, J$.R(860689, 'k', k, false, false), 'bitLength', false)())))
                                i = J$.W(860729, 'i', J$.B(143338, '-', J$.M(860713, J$.R(860705, 'j', j, false, false), 'bitLength', false)(), J$.T(860721, 1, 22, false)), i, false, false);
                            else
                                i = J$.W(860761, 'i', J$.B(143346, '-', J$.M(860745, J$.R(860737, 'k', k, false, false), 'bitLength', false)(), J$.T(860753, 1, 22, false)), i, false, false);
                            var R = J$.W(860793, 'R', J$.M(860785, J$.G(860777, J$.R(860769, 'this', this, false, false), 'curve'), 'getInfinity', false)(), R, false, false);
                            var both = J$.W(860825, 'both', J$.M(860817, J$.R(860801, 'this', this, false, false), 'add', false)(J$.R(860809, 'x', x, false, false)), both, false, false);
                            while (J$.C(52168, J$.B(143354, '>=', J$.R(860833, 'i', i, false, false), J$.T(860841, 0, 22, false)))) {
                                R = J$.W(860865, 'R', J$.M(860857, J$.R(860849, 'R', R, false, false), 'twice', false)(), R, false, false);
                                if (J$.C(52160, J$.M(860889, J$.R(860873, 'j', j, false, false), 'testBit', false)(J$.R(860881, 'i', i, false, false)))) {
                                    if (J$.C(52144, J$.M(860913, J$.R(860897, 'k', k, false, false), 'testBit', false)(J$.R(860905, 'i', i, false, false)))) {
                                        R = J$.W(860945, 'R', J$.M(860937, J$.R(860921, 'R', R, false, false), 'add', false)(J$.R(860929, 'both', both, false, false)), R, false, false);
                                    } else {
                                        R = J$.W(860977, 'R', J$.M(860969, J$.R(860953, 'R', R, false, false), 'add', false)(J$.R(860961, 'this', this, false, false)), R, false, false);
                                    }
                                } else {
                                    if (J$.C(52152, J$.M(861001, J$.R(860985, 'k', k, false, false), 'testBit', false)(J$.R(860993, 'i', i, false, false)))) {
                                        R = J$.W(861033, 'R', J$.M(861025, J$.R(861009, 'R', R, false, false), 'add', false)(J$.R(861017, 'x', x, false, false)), R, false, false);
                                    }
                                }
                                i = J$.W(861049, 'i', J$.B(143370, '-', J$.U(143362, '+', J$.R(861041, 'i', i, false, false)), 1), i, false, false);
                            }
                            return J$.Rt(861065, J$.R(861057, 'R', R, false, false));
                        } catch (J$e) {
                            J$.Ex(869097, J$e);
                        } finally {
                            if (J$.Fr(869105))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ECCurveFp(q, a, b) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(861633, arguments.callee, this, arguments);
                            arguments = J$.N(861641, 'arguments', arguments, true, false, false);
                            q = J$.N(861649, 'q', q, true, false, false);
                            a = J$.N(861657, 'a', a, true, false, false);
                            b = J$.N(861665, 'b', b, true, false, false);
                            J$.P(861441, J$.R(861425, 'this', this, false, false), 'q', J$.R(861433, 'q', q, false, false));
                            J$.P(861481, J$.R(861449, 'this', this, false, false), 'a', J$.M(861473, J$.R(861457, 'this', this, false, false), 'fromBigInteger', false)(J$.R(861465, 'a', a, false, false)));
                            J$.P(861521, J$.R(861489, 'this', this, false, false), 'b', J$.M(861513, J$.R(861497, 'this', this, false, false), 'fromBigInteger', false)(J$.R(861505, 'b', b, false, false)));
                            J$.P(861577, J$.R(861529, 'this', this, false, false), 'infinity', J$.F(861569, J$.R(861537, 'ECPointFp', ECPointFp, false, true), true)(J$.R(861545, 'this', this, false, false), J$.T(861553, null, 25, false), J$.T(861561, null, 25, false)));
                            J$.P(861625, J$.R(861585, 'this', this, false, false), 'reducer', J$.F(861617, J$.R(861593, 'Barrett', Barrett, false, true), true)(J$.G(861609, J$.R(861601, 'this', this, false, false), 'q')));
                        } catch (J$e) {
                            J$.Ex(869113, J$e);
                        } finally {
                            if (J$.Fr(869121))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpGetQ() {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(861697, arguments.callee, this, arguments);
                            arguments = J$.N(861705, 'arguments', arguments, true, false, false);
                            return J$.Rt(861689, J$.G(861681, J$.R(861673, 'this', this, false, false), 'q'));
                        } catch (J$e) {
                            J$.Ex(869129, J$e);
                        } finally {
                            if (J$.Fr(869137))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpGetA() {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(861737, arguments.callee, this, arguments);
                            arguments = J$.N(861745, 'arguments', arguments, true, false, false);
                            return J$.Rt(861729, J$.G(861721, J$.R(861713, 'this', this, false, false), 'a'));
                        } catch (J$e) {
                            J$.Ex(869145, J$e);
                        } finally {
                            if (J$.Fr(869153))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpGetB() {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(861777, arguments.callee, this, arguments);
                            arguments = J$.N(861785, 'arguments', arguments, true, false, false);
                            return J$.Rt(861769, J$.G(861761, J$.R(861753, 'this', this, false, false), 'b'));
                        } catch (J$e) {
                            J$.Ex(869161, J$e);
                        } finally {
                            if (J$.Fr(869169))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpEquals(other) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(861953, arguments.callee, this, arguments);
                            arguments = J$.N(861961, 'arguments', arguments, true, false, false);
                            other = J$.N(861969, 'other', other, true, false, false);
                            if (J$.C(52176, J$.B(143378, '==', J$.R(861793, 'other', other, false, false), J$.R(861801, 'this', this, false, false))))
                                return J$.Rt(861817, J$.T(861809, true, 23, false));
                            return J$.Rt(861945, J$.C(52192, J$.C(52184, J$.M(861857, J$.G(861833, J$.R(861825, 'this', this, false, false), 'q'), 'equals', false)(J$.G(861849, J$.R(861841, 'other', other, false, false), 'q'))) ? J$.M(861897, J$.G(861873, J$.R(861865, 'this', this, false, false), 'a'), 'equals', false)(J$.G(861889, J$.R(861881, 'other', other, false, false), 'a')) : J$._()) ? J$.M(861937, J$.G(861913, J$.R(861905, 'this', this, false, false), 'b'), 'equals', false)(J$.G(861929, J$.R(861921, 'other', other, false, false), 'b')) : J$._());
                        } catch (J$e) {
                            J$.Ex(869177, J$e);
                        } finally {
                            if (J$.Fr(869185))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpGetInfinity() {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(862001, arguments.callee, this, arguments);
                            arguments = J$.N(862009, 'arguments', arguments, true, false, false);
                            return J$.Rt(861993, J$.G(861985, J$.R(861977, 'this', this, false, false), 'infinity'));
                        } catch (J$e) {
                            J$.Ex(869193, J$e);
                        } finally {
                            if (J$.Fr(869201))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpFromBigInteger(x) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(862065, arguments.callee, this, arguments);
                            arguments = J$.N(862073, 'arguments', arguments, true, false, false);
                            x = J$.N(862081, 'x', x, true, false, false);
                            return J$.Rt(862057, J$.F(862049, J$.R(862017, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(862033, J$.R(862025, 'this', this, false, false), 'q'), J$.R(862041, 'x', x, false, false)));
                        } catch (J$e) {
                            J$.Ex(869209, J$e);
                        } finally {
                            if (J$.Fr(869217))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveReduce(x) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(862121, arguments.callee, this, arguments);
                            arguments = J$.N(862129, 'arguments', arguments, true, false, false);
                            x = J$.N(862137, 'x', x, true, false, false);
                            J$.M(862113, J$.G(862097, J$.R(862089, 'this', this, false, false), 'reducer'), 'reduce', false)(J$.R(862105, 'x', x, false, false));
                        } catch (J$e) {
                            J$.Ex(869225, J$e);
                        } finally {
                            if (J$.Fr(869233))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpDecodePointHex(s) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(862561, arguments.callee, this, arguments);
                            arguments = J$.N(862569, 'arguments', arguments, true, false, false);
                            s = J$.N(862577, 's', s, true, false, false);
                            J$.N(862585, 'len', len, false, false, false);
                            J$.N(862593, 'xHex', xHex, false, false, false);
                            J$.N(862601, 'yHex', yHex, false, false, false);
                            switch (J$.C1(52200, J$.F(862193, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(862145, 'parseInt', undefined, true, true) : parseInt = J$.R(862145, 'parseInt', parseInt, true, true)), false)(J$.M(862177, J$.R(862153, 's', s, false, false), 'substr', false)(J$.T(862161, 0, 22, false), J$.T(862169, 2, 22, false)), J$.T(862185, 16, 22, false)))) {
                            case J$.C2(52208, J$.T(862225, 0, 22, false)):
                                return J$.Rt(862217, J$.G(862209, J$.R(862201, 'this', this, false, false), 'infinity'));
                            case J$.C2(52216, J$.T(862233, 2, 22, false)):
                            case J$.C2(52224, J$.T(862257, 3, 22, false)):
                                return J$.Rt(862249, J$.T(862241, null, 25, false));
                            case J$.C2(52232, J$.T(862265, 4, 22, false)):
                            case J$.C2(52240, J$.T(862273, 6, 22, false)):
                            case J$.C2(52248, J$.T(862537, 7, 22, false)):
                                var len = J$.W(862313, 'len', J$.B(143394, '/', J$.B(143386, '-', J$.G(862289, J$.R(862281, 's', s, false, false), 'length'), J$.T(862297, 2, 22, false)), J$.T(862305, 2, 22, false)), len, false, false);
                                var xHex = J$.W(862353, 'xHex', J$.M(862345, J$.R(862321, 's', s, false, false), 'substr', false)(J$.T(862329, 2, 22, false), J$.R(862337, 'len', len, false, false)), xHex, false, false);
                                var yHex = J$.W(862401, 'yHex', J$.M(862393, J$.R(862361, 's', s, false, false), 'substr', false)(J$.B(143402, '+', J$.R(862369, 'len', len, false, false), J$.T(862377, 2, 22, false)), J$.R(862385, 'len', len, false, false)), yHex, false, false);
                                return J$.Rt(862529, J$.F(862521, J$.R(862409, 'ECPointFp', ECPointFp, false, true), true)(J$.R(862417, 'this', this, false, false), J$.M(862465, J$.R(862425, 'this', this, false, false), 'fromBigInteger', false)(J$.F(862457, J$.R(862433, 'BigInteger', BigInteger, false, true), true)(J$.R(862441, 'xHex', xHex, false, false), J$.T(862449, 16, 22, false))), J$.M(862513, J$.R(862473, 'this', this, false, false), 'fromBigInteger', false)(J$.F(862505, J$.R(862481, 'BigInteger', BigInteger, false, true), true)(J$.R(862489, 'yHex', yHex, false, false), J$.T(862497, 16, 22, false)))));
                            default:
                                return J$.Rt(862553, J$.T(862545, null, 25, false));
                            }
                        } catch (J$e) {
                            J$.Ex(869241, J$e);
                        } finally {
                            if (J$.Fr(869249))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function curveFpEncodePointHex(p) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(862953, arguments.callee, this, arguments);
                            arguments = J$.N(862961, 'arguments', arguments, true, false, false);
                            p = J$.N(862969, 'p', p, true, false, false);
                            J$.N(862977, 'xHex', xHex, false, false, false);
                            J$.N(862985, 'yHex', yHex, false, false, false);
                            J$.N(862993, 'oLen', oLen, false, false, false);
                            if (J$.C(52256, J$.M(862617, J$.R(862609, 'p', p, false, false), 'isInfinity', false)()))
                                return J$.Rt(862633, J$.T(862625, '00', 21, false));
                            var xHex = J$.W(862681, 'xHex', J$.M(862673, J$.M(862657, J$.M(862649, J$.R(862641, 'p', p, false, false), 'getX', false)(), 'toBigInteger', false)(), 'toString', false)(J$.T(862665, 16, 22, false)), xHex, false, false);
                            var yHex = J$.W(862729, 'yHex', J$.M(862721, J$.M(862705, J$.M(862697, J$.R(862689, 'p', p, false, false), 'getY', false)(), 'toBigInteger', false)(), 'toString', false)(J$.T(862713, 16, 22, false)), yHex, false, false);
                            var oLen = J$.W(862777, 'oLen', J$.G(862769, J$.M(862761, J$.M(862745, J$.R(862737, 'this', this, false, false), 'getQ', false)(), 'toString', false)(J$.T(862753, 16, 22, false)), 'length'), oLen, false, false);
                            if (J$.C(52264, J$.B(143418, '!=', J$.B(143410, '%', J$.R(862785, 'oLen', oLen, false, false), J$.T(862793, 2, 22, false)), J$.T(862801, 0, 22, false))))
                                J$.B(143442, '-', oLen = J$.W(862817, 'oLen', J$.B(143434, '+', J$.U(143426, '+', J$.R(862809, 'oLen', oLen, false, false)), 1), oLen, false, false), 1);
                            while (J$.C(52272, J$.B(143450, '<', J$.G(862833, J$.R(862825, 'xHex', xHex, false, false), 'length'), J$.R(862841, 'oLen', oLen, false, false)))) {
                                xHex = J$.W(862865, 'xHex', J$.B(143458, '+', J$.T(862849, '0', 21, false), J$.R(862857, 'xHex', xHex, false, false)), xHex, false, false);
                            }
                            while (J$.C(52280, J$.B(143466, '<', J$.G(862881, J$.R(862873, 'yHex', yHex, false, false), 'length'), J$.R(862889, 'oLen', oLen, false, false)))) {
                                yHex = J$.W(862913, 'yHex', J$.B(143474, '+', J$.T(862897, '0', 21, false), J$.R(862905, 'yHex', yHex, false, false)), yHex, false, false);
                            }
                            return J$.Rt(862945, J$.B(143490, '+', J$.B(143482, '+', J$.T(862921, '04', 21, false), J$.R(862929, 'xHex', xHex, false, false)), J$.R(862937, 'yHex', yHex, false, false)));
                        } catch (J$e) {
                            J$.Ex(869257, J$e);
                        } finally {
                            if (J$.Fr(869265))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(868321, 'BigInteger', BigInteger, false, false, false);
            J$.N(868329, 'Barrett', Barrett, false, false, false);
            ECFieldElementFp = J$.N(868345, 'ECFieldElementFp', J$.T(868337, ECFieldElementFp, 12, false), true, false, false);
            feFpEquals = J$.N(868361, 'feFpEquals', J$.T(868353, feFpEquals, 12, false), true, false, false);
            feFpToBigInteger = J$.N(868377, 'feFpToBigInteger', J$.T(868369, feFpToBigInteger, 12, false), true, false, false);
            feFpNegate = J$.N(868393, 'feFpNegate', J$.T(868385, feFpNegate, 12, false), true, false, false);
            feFpAdd = J$.N(868409, 'feFpAdd', J$.T(868401, feFpAdd, 12, false), true, false, false);
            feFpSubtract = J$.N(868425, 'feFpSubtract', J$.T(868417, feFpSubtract, 12, false), true, false, false);
            feFpMultiply = J$.N(868441, 'feFpMultiply', J$.T(868433, feFpMultiply, 12, false), true, false, false);
            feFpSquare = J$.N(868457, 'feFpSquare', J$.T(868449, feFpSquare, 12, false), true, false, false);
            feFpDivide = J$.N(868473, 'feFpDivide', J$.T(868465, feFpDivide, 12, false), true, false, false);
            ECPointFp = J$.N(868489, 'ECPointFp', J$.T(868481, ECPointFp, 12, false), true, false, false);
            pointFpGetX = J$.N(868505, 'pointFpGetX', J$.T(868497, pointFpGetX, 12, false), true, false, false);
            pointFpGetY = J$.N(868521, 'pointFpGetY', J$.T(868513, pointFpGetY, 12, false), true, false, false);
            pointFpEquals = J$.N(868537, 'pointFpEquals', J$.T(868529, pointFpEquals, 12, false), true, false, false);
            pointFpIsInfinity = J$.N(868553, 'pointFpIsInfinity', J$.T(868545, pointFpIsInfinity, 12, false), true, false, false);
            pointFpNegate = J$.N(868569, 'pointFpNegate', J$.T(868561, pointFpNegate, 12, false), true, false, false);
            pointFpAdd = J$.N(868585, 'pointFpAdd', J$.T(868577, pointFpAdd, 12, false), true, false, false);
            pointFpTwice = J$.N(868601, 'pointFpTwice', J$.T(868593, pointFpTwice, 12, false), true, false, false);
            pointFpMultiply = J$.N(868617, 'pointFpMultiply', J$.T(868609, pointFpMultiply, 12, false), true, false, false);
            pointFpMultiplyTwo = J$.N(868633, 'pointFpMultiplyTwo', J$.T(868625, pointFpMultiplyTwo, 12, false), true, false, false);
            ECCurveFp = J$.N(868649, 'ECCurveFp', J$.T(868641, ECCurveFp, 12, false), true, false, false);
            curveFpGetQ = J$.N(868665, 'curveFpGetQ', J$.T(868657, curveFpGetQ, 12, false), true, false, false);
            curveFpGetA = J$.N(868681, 'curveFpGetA', J$.T(868673, curveFpGetA, 12, false), true, false, false);
            curveFpGetB = J$.N(868697, 'curveFpGetB', J$.T(868689, curveFpGetB, 12, false), true, false, false);
            curveFpEquals = J$.N(868713, 'curveFpEquals', J$.T(868705, curveFpEquals, 12, false), true, false, false);
            curveFpGetInfinity = J$.N(868729, 'curveFpGetInfinity', J$.T(868721, curveFpGetInfinity, 12, false), true, false, false);
            curveFpFromBigInteger = J$.N(868745, 'curveFpFromBigInteger', J$.T(868737, curveFpFromBigInteger, 12, false), true, false, false);
            curveReduce = J$.N(868761, 'curveReduce', J$.T(868753, curveReduce, 12, false), true, false, false);
            curveFpDecodePointHex = J$.N(868777, 'curveFpDecodePointHex', J$.T(868769, curveFpDecodePointHex, 12, false), true, false, false);
            curveFpEncodePointHex = J$.N(868793, 'curveFpEncodePointHex', J$.T(868785, curveFpEncodePointHex, 12, false), true, false, false);
            J$.N(868801, '_exports', _exports, false, false, false);
            J$.T(854601, 'use strict', 21, false);
            J$.F(854625, J$.I(typeof require === 'undefined' ? require = J$.R(854609, 'require', undefined, true, true) : require = J$.R(854609, 'require', require, true, true)), false)(J$.T(854617, 'core-js/modules/es.array.reduce', 21, false));
            J$.F(854649, J$.I(typeof require === 'undefined' ? require = J$.R(854633, 'require', undefined, true, true) : require = J$.R(854633, 'require', require, true, true)), false)(J$.T(854641, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(854673, J$.I(typeof require === 'undefined' ? require = J$.R(854657, 'require', undefined, true, true) : require = J$.R(854657, 'require', require, true, true)), false)(J$.T(854665, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(854697, J$.I(typeof require === 'undefined' ? require = J$.R(854681, 'require', undefined, true, true) : require = J$.R(854681, 'require', require, true, true)), false)(J$.T(854689, 'core-js/modules/es.parse-int', 21, false));
            J$.F(854721, J$.I(typeof require === 'undefined' ? require = J$.R(854705, 'require', undefined, true, true) : require = J$.R(854705, 'require', require, true, true)), false)(J$.T(854713, 'core-js/modules/es.regexp.to-string', 21, false));
            var BigInteger = J$.W(854761, 'BigInteger', J$.G(854753, J$.F(854745, J$.I(typeof require === 'undefined' ? require = J$.R(854729, 'require', undefined, true, true) : require = J$.R(854729, 'require', require, true, true)), false)(J$.T(854737, 'jsbn', 21, false)), 'BigInteger'), BigInteger, false, true);
            var Barrett = J$.W(854793, 'Barrett', J$.G(854785, J$.G(854777, J$.R(854769, 'BigInteger', BigInteger, false, true), 'prototype'), 'Barrett'), Barrett, false, true);
            J$.P(855833, J$.G(855817, J$.R(855809, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'equals', J$.R(855825, 'feFpEquals', feFpEquals, false, true));
            J$.P(855865, J$.G(855849, J$.R(855841, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'toBigInteger', J$.R(855857, 'feFpToBigInteger', feFpToBigInteger, false, true));
            J$.P(855897, J$.G(855881, J$.R(855873, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'negate', J$.R(855889, 'feFpNegate', feFpNegate, false, true));
            J$.P(855929, J$.G(855913, J$.R(855905, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'add', J$.R(855921, 'feFpAdd', feFpAdd, false, true));
            J$.P(855961, J$.G(855945, J$.R(855937, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'subtract', J$.R(855953, 'feFpSubtract', feFpSubtract, false, true));
            J$.P(855993, J$.G(855977, J$.R(855969, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'multiply', J$.R(855985, 'feFpMultiply', feFpMultiply, false, true));
            J$.P(856025, J$.G(856009, J$.R(856001, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'square', J$.R(856017, 'feFpSquare', feFpSquare, false, true));
            J$.P(856057, J$.G(856041, J$.R(856033, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'divide', J$.R(856049, 'feFpDivide', feFpDivide, false, true));
            J$.P(861161, J$.G(861145, J$.R(861137, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'getX', J$.R(861153, 'pointFpGetX', pointFpGetX, false, true));
            J$.P(861193, J$.G(861177, J$.R(861169, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'getY', J$.R(861185, 'pointFpGetY', pointFpGetY, false, true));
            J$.P(861225, J$.G(861209, J$.R(861201, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'equals', J$.R(861217, 'pointFpEquals', pointFpEquals, false, true));
            J$.P(861257, J$.G(861241, J$.R(861233, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'isInfinity', J$.R(861249, 'pointFpIsInfinity', pointFpIsInfinity, false, true));
            J$.P(861289, J$.G(861273, J$.R(861265, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'negate', J$.R(861281, 'pointFpNegate', pointFpNegate, false, true));
            J$.P(861321, J$.G(861305, J$.R(861297, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'add', J$.R(861313, 'pointFpAdd', pointFpAdd, false, true));
            J$.P(861353, J$.G(861337, J$.R(861329, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'twice', J$.R(861345, 'pointFpTwice', pointFpTwice, false, true));
            J$.P(861385, J$.G(861369, J$.R(861361, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'multiply', J$.R(861377, 'pointFpMultiply', pointFpMultiply, false, true));
            J$.P(861417, J$.G(861401, J$.R(861393, 'ECPointFp', ECPointFp, false, true), 'prototype'), 'multiplyTwo', J$.R(861409, 'pointFpMultiplyTwo', pointFpMultiplyTwo, false, true));
            J$.P(863025, J$.G(863009, J$.R(863001, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'getQ', J$.R(863017, 'curveFpGetQ', curveFpGetQ, false, true));
            J$.P(863057, J$.G(863041, J$.R(863033, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'getA', J$.R(863049, 'curveFpGetA', curveFpGetA, false, true));
            J$.P(863089, J$.G(863073, J$.R(863065, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'getB', J$.R(863081, 'curveFpGetB', curveFpGetB, false, true));
            J$.P(863121, J$.G(863105, J$.R(863097, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'equals', J$.R(863113, 'curveFpEquals', curveFpEquals, false, true));
            J$.P(863153, J$.G(863137, J$.R(863129, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'getInfinity', J$.R(863145, 'curveFpGetInfinity', curveFpGetInfinity, false, true));
            J$.P(863185, J$.G(863169, J$.R(863161, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'fromBigInteger', J$.R(863177, 'curveFpFromBigInteger', curveFpFromBigInteger, false, true));
            J$.P(863217, J$.G(863201, J$.R(863193, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'reduce', J$.R(863209, 'curveReduce', curveReduce, false, true));
            J$.P(863249, J$.G(863233, J$.R(863225, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'encodePointHex', J$.R(863241, 'curveFpEncodePointHex', curveFpEncodePointHex, false, true));
            J$.P(864241, J$.G(863265, J$.R(863257, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'decodePointHex', J$.T(864233, function (s) {
                jalangiLabel29:
                    while (true) {
                        try {
                            J$.Fe(864145, arguments.callee, this, arguments);
                            arguments = J$.N(864153, 'arguments', arguments, true, false, false);
                            s = J$.N(864161, 's', s, true, false, false);
                            J$.N(864169, 'yIsEven', yIsEven, false, false, false);
                            J$.N(864177, 'len', len, false, false, false);
                            J$.N(864185, 'xHex', xHex, false, false, false);
                            J$.N(864193, 'x', x, false, false, false);
                            J$.N(864201, 'alpha', alpha, false, false, false);
                            J$.N(864209, 'beta', beta, false, false, false);
                            J$.N(864217, 'betaValue', betaValue, false, false, false);
                            J$.N(864225, 'yHex', yHex, false, false, false);
                            var yIsEven;
                            switch (J$.C1(52312, J$.F(863321, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(863273, 'parseInt', undefined, true, true) : parseInt = J$.R(863273, 'parseInt', parseInt, true, true)), false)(J$.M(863305, J$.R(863281, 's', s, false, false), 'substr', false)(J$.T(863289, 0, 22, false), J$.T(863297, 2, 22, false)), J$.T(863313, 16, 22, false)))) {
                            case J$.C2(52320, J$.T(863353, 0, 22, false)):
                                return J$.Rt(863345, J$.G(863337, J$.R(863329, 'this', this, false, false), 'infinity'));
                            case J$.C2(52328, J$.T(863377, 2, 22, false)):
                                yIsEven = J$.W(863369, 'yIsEven', J$.T(863361, false, 23, false), yIsEven, false, false);
                            case J$.C2(52336, J$.T(863841, 3, 22, false)):
                                if (J$.C(52288, J$.B(143498, '==', J$.R(863385, 'yIsEven', yIsEven, false, false), J$.T(863393, undefined, 24, false))))
                                    yIsEven = J$.W(863409, 'yIsEven', J$.T(863401, true, 23, false), yIsEven, false, false);
                                var len = J$.W(863441, 'len', J$.B(143506, '-', J$.G(863425, J$.R(863417, 's', s, false, false), 'length'), J$.T(863433, 2, 22, false)), len, false, false);
                                var xHex = J$.W(863481, 'xHex', J$.M(863473, J$.R(863449, 's', s, false, false), 'substr', false)(J$.T(863457, 2, 22, false), J$.R(863465, 'len', len, false, false)), xHex, false, false);
                                var x = J$.W(863537, 'x', J$.M(863529, J$.R(863489, 'this', this, false, false), 'fromBigInteger', false)(J$.F(863521, J$.R(863497, 'BigInteger', BigInteger, false, true), true)(J$.R(863505, 'xHex', xHex, false, false), J$.T(863513, 16, 22, false))), x, false, false);
                                var alpha = J$.W(863625, 'alpha', J$.M(863617, J$.M(863593, J$.R(863545, 'x', x, false, false), 'multiply', false)(J$.M(863585, J$.M(863561, J$.R(863553, 'x', x, false, false), 'square', false)(), 'add', false)(J$.M(863577, J$.R(863569, 'this', this, false, false), 'getA', false)())), 'add', false)(J$.M(863609, J$.R(863601, 'this', this, false, false), 'getB', false)()), alpha, false, false);
                                var beta = J$.W(863649, 'beta', J$.M(863641, J$.R(863633, 'alpha', alpha, false, false), 'sqrt', false)(), beta, false, false);
                                if (J$.C(52296, J$.B(143514, '==', J$.R(863657, 'beta', beta, false, false), J$.T(863665, null, 25, false))))
                                    throw J$.T(863673, 'Invalid point compression', 21, false);
                                var betaValue = J$.W(863697, 'betaValue', J$.M(863689, J$.R(863681, 'beta', beta, false, false), 'toBigInteger', false)(), betaValue, false, false);
                                if (J$.C(52304, J$.B(143522, '!=', J$.M(863721, J$.R(863705, 'betaValue', betaValue, false, false), 'testBit', false)(J$.T(863713, 0, 22, false)), J$.R(863729, 'yIsEven', yIsEven, false, false)))) {
                                    beta = J$.W(863785, 'beta', J$.M(863777, J$.R(863737, 'this', this, false, false), 'fromBigInteger', false)(J$.M(863769, J$.M(863753, J$.R(863745, 'this', this, false, false), 'getQ', false)(), 'subtract', false)(J$.R(863761, 'betaValue', betaValue, false, false))), beta, false, false);
                                }
                                return J$.Rt(863833, J$.F(863825, J$.R(863793, 'ECPointFp', ECPointFp, false, true), true)(J$.R(863801, 'this', this, false, false), J$.R(863809, 'x', x, false, false), J$.R(863817, 'beta', beta, false, false)));
                            case J$.C2(52344, J$.T(863849, 4, 22, false)):
                            case J$.C2(52352, J$.T(863857, 6, 22, false)):
                            case J$.C2(52360, J$.T(864121, 7, 22, false)):
                                var len = J$.W(863897, 'len', J$.B(143538, '/', J$.B(143530, '-', J$.G(863873, J$.R(863865, 's', s, false, false), 'length'), J$.T(863881, 2, 22, false)), J$.T(863889, 2, 22, false)), len, false, false);
                                var xHex = J$.W(863937, 'xHex', J$.M(863929, J$.R(863905, 's', s, false, false), 'substr', false)(J$.T(863913, 2, 22, false), J$.R(863921, 'len', len, false, false)), xHex, false, false);
                                var yHex = J$.W(863985, 'yHex', J$.M(863977, J$.R(863945, 's', s, false, false), 'substr', false)(J$.B(143546, '+', J$.R(863953, 'len', len, false, false), J$.T(863961, 2, 22, false)), J$.R(863969, 'len', len, false, false)), yHex, false, false);
                                return J$.Rt(864113, J$.F(864105, J$.R(863993, 'ECPointFp', ECPointFp, false, true), true)(J$.R(864001, 'this', this, false, false), J$.M(864049, J$.R(864009, 'this', this, false, false), 'fromBigInteger', false)(J$.F(864041, J$.R(864017, 'BigInteger', BigInteger, false, true), true)(J$.R(864025, 'xHex', xHex, false, false), J$.T(864033, 16, 22, false))), J$.M(864097, J$.R(864057, 'this', this, false, false), 'fromBigInteger', false)(J$.F(864089, J$.R(864065, 'BigInteger', BigInteger, false, true), true)(J$.R(864073, 'yHex', yHex, false, false), J$.T(864081, 16, 22, false)))));
                            default:
                                return J$.Rt(864137, J$.T(864129, null, 25, false));
                            }
                        } catch (J$e) {
                            J$.Ex(869273, J$e);
                        } finally {
                            if (J$.Fr(869281))
                                continue jalangiLabel29;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(864625, J$.G(864257, J$.R(864249, 'ECCurveFp', ECCurveFp, false, true), 'prototype'), 'encodeCompressedPointHex', J$.T(864617, function (p) {
                jalangiLabel30:
                    while (true) {
                        try {
                            J$.Fe(864569, arguments.callee, this, arguments);
                            arguments = J$.N(864577, 'arguments', arguments, true, false, false);
                            p = J$.N(864585, 'p', p, true, false, false);
                            J$.N(864593, 'xHex', xHex, false, false, false);
                            J$.N(864601, 'oLen', oLen, false, false, false);
                            J$.N(864609, 'yPrefix', yPrefix, false, false, false);
                            if (J$.C(52368, J$.M(864273, J$.R(864265, 'p', p, false, false), 'isInfinity', false)()))
                                return J$.Rt(864289, J$.T(864281, '00', 21, false));
                            var xHex = J$.W(864337, 'xHex', J$.M(864329, J$.M(864313, J$.M(864305, J$.R(864297, 'p', p, false, false), 'getX', false)(), 'toBigInteger', false)(), 'toString', false)(J$.T(864321, 16, 22, false)), xHex, false, false);
                            var oLen = J$.W(864385, 'oLen', J$.G(864377, J$.M(864369, J$.M(864353, J$.R(864345, 'this', this, false, false), 'getQ', false)(), 'toString', false)(J$.T(864361, 16, 22, false)), 'length'), oLen, false, false);
                            if (J$.C(52376, J$.B(143562, '!=', J$.B(143554, '%', J$.R(864393, 'oLen', oLen, false, false), J$.T(864401, 2, 22, false)), J$.T(864409, 0, 22, false))))
                                J$.B(143586, '-', oLen = J$.W(864425, 'oLen', J$.B(143578, '+', J$.U(143570, '+', J$.R(864417, 'oLen', oLen, false, false)), 1), oLen, false, false), 1);
                            while (J$.C(52384, J$.B(143594, '<', J$.G(864441, J$.R(864433, 'xHex', xHex, false, false), 'length'), J$.R(864449, 'oLen', oLen, false, false)))) {
                                xHex = J$.W(864473, 'xHex', J$.B(143602, '+', J$.T(864457, '0', 21, false), J$.R(864465, 'xHex', xHex, false, false)), xHex, false, false);
                            }
                            var yPrefix;
                            if (J$.C(52392, J$.M(864505, J$.M(864497, J$.M(864489, J$.R(864481, 'p', p, false, false), 'getY', false)(), 'toBigInteger', false)(), 'isEven', false)()))
                                yPrefix = J$.W(864521, 'yPrefix', J$.T(864513, '02', 21, false), yPrefix, false, false);
                            else
                                yPrefix = J$.W(864537, 'yPrefix', J$.T(864529, '03', 21, false), yPrefix, false, false);
                            return J$.Rt(864561, J$.B(143610, '+', J$.R(864545, 'yPrefix', yPrefix, false, false), J$.R(864553, 'xHex', xHex, false, false)));
                        } catch (J$e) {
                            J$.Ex(869289, J$e);
                        } finally {
                            if (J$.Fr(869297))
                                continue jalangiLabel30;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(864977, J$.G(864641, J$.R(864633, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'getR', J$.T(864969, function () {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(864937, arguments.callee, this, arguments);
                            arguments = J$.N(864945, 'arguments', arguments, true, false, false);
                            J$.N(864953, 'bitLength', bitLength, false, false, false);
                            J$.N(864961, 'firstWord', firstWord, false, false, false);
                            if (J$.C(52400, J$.B(143618, '!=', J$.G(864657, J$.R(864649, 'this', this, false, false), 'r'), J$.T(864665, undefined, 24, false))))
                                return J$.Rt(864689, J$.G(864681, J$.R(864673, 'this', this, false, false), 'r'));
                            J$.P(864713, J$.R(864697, 'this', this, false, false), 'r', J$.T(864705, null, 25, false));
                            var bitLength = J$.W(864745, 'bitLength', J$.M(864737, J$.G(864729, J$.R(864721, 'this', this, false, false), 'q'), 'bitLength', false)(), bitLength, false, false);
                            if (J$.C(52416, J$.B(143626, '>', J$.R(864753, 'bitLength', bitLength, false, false), J$.T(864761, 128, 22, false)))) {
                                var firstWord = J$.W(864809, 'firstWord', J$.M(864801, J$.G(864777, J$.R(864769, 'this', this, false, false), 'q'), 'shiftRight', false)(J$.B(143634, '-', J$.R(864785, 'bitLength', bitLength, false, false), J$.T(864793, 64, 22, false))), firstWord, false, false);
                                if (J$.C(52408, J$.B(143650, '==', J$.M(864825, J$.R(864817, 'firstWord', firstWord, false, false), 'intValue', false)(), J$.U(143642, '-', J$.T(864833, 1, 22, false))))) {
                                    J$.P(864905, J$.R(864841, 'this', this, false, false), 'r', J$.M(864897, J$.M(864873, J$.G(864857, J$.R(864849, 'BigInteger', BigInteger, false, true), 'ONE'), 'shiftLeft', false)(J$.R(864865, 'bitLength', bitLength, false, false)), 'subtract', false)(J$.G(864889, J$.R(864881, 'this', this, false, false), 'q')));
                                }
                            }
                            return J$.Rt(864929, J$.G(864921, J$.R(864913, 'this', this, false, false), 'r'));
                        } catch (J$e) {
                            J$.Ex(869305, J$e);
                        } finally {
                            if (J$.Fr(869313))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(865089, J$.G(864993, J$.R(864985, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'modMult', J$.T(865081, function (x1, x2) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(865049, arguments.callee, this, arguments);
                            arguments = J$.N(865057, 'arguments', arguments, true, false, false);
                            x1 = J$.N(865065, 'x1', x1, true, false, false);
                            x2 = J$.N(865073, 'x2', x2, true, false, false);
                            return J$.Rt(865041, J$.M(865033, J$.R(865001, 'this', this, false, false), 'modReduce', false)(J$.M(865025, J$.R(865009, 'x1', x1, false, false), 'multiply', false)(J$.R(865017, 'x2', x2, false, false))));
                        } catch (J$e) {
                            J$.Ex(869321, J$e);
                        } finally {
                            if (J$.Fr(869329))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(865553, J$.G(865105, J$.R(865097, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'modReduce', J$.T(865545, function (x) {
                jalangiLabel33:
                    while (true) {
                        try {
                            J$.Fe(865497, arguments.callee, this, arguments);
                            arguments = J$.N(865505, 'arguments', arguments, true, false, false);
                            x = J$.N(865513, 'x', x, true, false, false);
                            J$.N(865521, 'qLen', qLen, false, false, false);
                            J$.N(865529, 'u', u, false, false, false);
                            J$.N(865537, 'v', v, false, false, false);
                            if (J$.C(52448, J$.B(143658, '!=', J$.M(865121, J$.R(865113, 'this', this, false, false), 'getR', false)(), J$.T(865129, null, 25, false)))) {
                                var qLen = J$.W(865153, 'qLen', J$.M(865145, J$.I(typeof q === 'undefined' ? q = J$.R(865137, 'q', undefined, true, true) : q = J$.R(865137, 'q', q, true, true)), 'bitLength', false)(), qLen, false, false);
                                while (J$.C(52432, J$.B(143674, '>', J$.M(865169, J$.R(865161, 'x', x, false, false), 'bitLength', false)(), J$.B(143666, '+', J$.R(865177, 'qLen', qLen, false, false), J$.T(865185, 1, 22, false))))) {
                                    var u = J$.W(865217, 'u', J$.M(865209, J$.R(865193, 'x', x, false, false), 'shiftRight', false)(J$.R(865201, 'qLen', qLen, false, false)), u, false, false);
                                    var v = J$.W(865265, 'v', J$.M(865257, J$.R(865225, 'x', x, false, false), 'subtract', false)(J$.M(865249, J$.R(865233, 'u', u, false, false), 'shiftLeft', false)(J$.R(865241, 'qLen', qLen, false, false))), v, false, false);
                                    if (J$.C(52424, J$.U(143682, '!', J$.M(865305, J$.M(865281, J$.R(865273, 'this', this, false, false), 'getR', false)(), 'equals', false)(J$.G(865297, J$.R(865289, 'BigInteger', BigInteger, false, true), 'ONE'))))) {
                                        u = J$.W(865345, 'u', J$.M(865337, J$.R(865313, 'u', u, false, false), 'multiply', false)(J$.M(865329, J$.R(865321, 'this', this, false, false), 'getR', false)()), u, false, false);
                                    }
                                    x = J$.W(865377, 'x', J$.M(865369, J$.R(865353, 'u', u, false, false), 'add', false)(J$.R(865361, 'v', v, false, false)), x, false, false);
                                }
                                while (J$.C(52440, J$.B(143690, '>=', J$.M(865401, J$.R(865385, 'x', x, false, false), 'compareTo', false)(J$.I(typeof q === 'undefined' ? q = J$.R(865393, 'q', undefined, true, true) : q = J$.R(865393, 'q', q, true, true))), J$.T(865409, 0, 22, false)))) {
                                    x = J$.W(865441, 'x', J$.M(865433, J$.R(865417, 'x', x, false, false), 'subtract', false)(J$.I(typeof q === 'undefined' ? q = J$.R(865425, 'q', undefined, true, true) : q = J$.R(865425, 'q', q, true, true))), x, false, false);
                                }
                            } else {
                                x = J$.W(865473, 'x', J$.M(865465, J$.R(865449, 'x', x, false, false), 'mod', false)(J$.I(typeof q === 'undefined' ? q = J$.R(865457, 'q', undefined, true, true) : q = J$.R(865457, 'q', q, true, true))), x, false, false);
                            }
                            return J$.Rt(865489, J$.R(865481, 'x', x, false, false));
                        } catch (J$e) {
                            J$.Ex(869337, J$e);
                        } finally {
                            if (J$.Fr(869345))
                                continue jalangiLabel33;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(866833, J$.G(865569, J$.R(865561, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'sqrt', J$.T(866825, function () {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(866721, arguments.callee, this, arguments);
                            arguments = J$.N(866729, 'arguments', arguments, true, false, false);
                            J$.N(866737, 'z', z, false, false, false);
                            J$.N(866745, 'qMinusOne', qMinusOne, false, false, false);
                            J$.N(866753, 'legendreExponent', legendreExponent, false, false, false);
                            J$.N(866761, 'u', u, false, false, false);
                            J$.N(866769, 'k', k, false, false, false);
                            J$.N(866777, 'Q', Q, false, false, false);
                            J$.N(866785, 'fourQ', fourQ, false, false, false);
                            J$.N(866793, 'U', U, false, false, false);
                            J$.N(866801, 'V', V, false, false, false);
                            J$.N(866809, 'P', P, false, false, false);
                            J$.N(866817, 'result', result, false, false, false);
                            if (J$.C(52456, J$.U(143698, '!', J$.M(865601, J$.G(865585, J$.R(865577, 'this', this, false, false), 'q'), 'testBit', false)(J$.T(865593, 0, 22, false)))))
                                throw J$.T(865609, 'unsupported', 21, false);
                            if (J$.C(52472, J$.M(865641, J$.G(865625, J$.R(865617, 'this', this, false, false), 'q'), 'testBit', false)(J$.T(865633, 1, 22, false)))) {
                                var z = J$.W(865777, 'z', J$.F(865769, J$.R(865649, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.G(865665, J$.R(865657, 'this', this, false, false), 'q'), J$.M(865761, J$.G(865681, J$.R(865673, 'this', this, false, false), 'x'), 'modPow', false)(J$.M(865737, J$.M(865713, J$.G(865697, J$.R(865689, 'this', this, false, false), 'q'), 'shiftRight', false)(J$.T(865705, 2, 22, false)), 'add', false)(J$.G(865729, J$.R(865721, 'BigInteger', BigInteger, false, true), 'ONE')), J$.G(865753, J$.R(865745, 'this', this, false, false), 'q'))), z, false, false);
                                return J$.Rt(865833, J$.C(52464, J$.M(865809, J$.M(865793, J$.R(865785, 'z', z, false, false), 'square', false)(), 'equals', false)(J$.R(865801, 'this', this, false, false))) ? J$.R(865817, 'z', z, false, false) : J$.T(865825, null, 25, false));
                            }
                            var qMinusOne = J$.W(865881, 'qMinusOne', J$.M(865873, J$.G(865849, J$.R(865841, 'this', this, false, false), 'q'), 'subtract', false)(J$.G(865865, J$.R(865857, 'BigInteger', BigInteger, false, true), 'ONE')), qMinusOne, false, false);
                            var legendreExponent = J$.W(865913, 'legendreExponent', J$.M(865905, J$.R(865889, 'qMinusOne', qMinusOne, false, false), 'shiftRight', false)(J$.T(865897, 1, 22, false)), legendreExponent, false, false);
                            if (J$.C(52480, J$.U(143706, '!', J$.M(865985, J$.M(865961, J$.G(865929, J$.R(865921, 'this', this, false, false), 'x'), 'modPow', false)(J$.R(865937, 'legendreExponent', legendreExponent, false, false), J$.G(865953, J$.R(865945, 'this', this, false, false), 'q')), 'equals', false)(J$.G(865977, J$.R(865969, 'BigInteger', BigInteger, false, true), 'ONE'))))) {
                                return J$.Rt(866001, J$.T(865993, null, 25, false));
                            }
                            var u = J$.W(866033, 'u', J$.M(866025, J$.R(866009, 'qMinusOne', qMinusOne, false, false), 'shiftRight', false)(J$.T(866017, 2, 22, false)), u, false, false);
                            var k = J$.W(866089, 'k', J$.M(866081, J$.M(866057, J$.R(866041, 'u', u, false, false), 'shiftLeft', false)(J$.T(866049, 1, 22, false)), 'add', false)(J$.G(866073, J$.R(866065, 'BigInteger', BigInteger, false, true), 'ONE')), k, false, false);
                            var Q = J$.W(866113, 'Q', J$.G(866105, J$.R(866097, 'this', this, false, false), 'x'), Q, false, false);
                            var fourQ = J$.W(866161, 'fourQ', J$.F(866153, J$.I(typeof modDouble === 'undefined' ? modDouble = J$.R(866121, 'modDouble', undefined, true, true) : modDouble = J$.R(866121, 'modDouble', modDouble, true, true)), false)(J$.F(866145, J$.I(typeof modDouble === 'undefined' ? modDouble = J$.R(866129, 'modDouble', undefined, true, true) : modDouble = J$.R(866129, 'modDouble', modDouble, true, true)), false)(J$.R(866137, 'Q', Q, false, false))), fourQ, false, false);
                            var U, V;
                            do {
                                var P;
                                do {
                                    P = J$.W(866225, 'P', J$.F(866217, J$.R(866169, 'BigInteger', BigInteger, false, true), true)(J$.M(866193, J$.G(866185, J$.R(866177, 'this', this, false, false), 'q'), 'bitLength', false)(), J$.F(866209, J$.I(typeof SecureRandom === 'undefined' ? SecureRandom = J$.R(866201, 'SecureRandom', undefined, true, true) : SecureRandom = J$.R(866201, 'SecureRandom', SecureRandom, true, true)), true)()), P, false, false);
                                } while (J$.C(52496, J$.C(52488, J$.B(143714, '>=', J$.M(866257, J$.R(866233, 'P', P, false, false), 'compareTo', false)(J$.G(866249, J$.R(866241, 'this', this, false, false), 'q')), J$.T(866265, 0, 22, false))) ? J$._() : J$.U(143722, '!', J$.M(866353, J$.M(866337, J$.M(866305, J$.M(866289, J$.R(866273, 'P', P, false, false), 'multiply', false)(J$.R(866281, 'P', P, false, false)), 'subtract', false)(J$.R(866297, 'fourQ', fourQ, false, false)), 'modPow', false)(J$.R(866313, 'legendreExponent', legendreExponent, false, false), J$.G(866329, J$.R(866321, 'this', this, false, false), 'q')), 'equals', false)(J$.R(866345, 'qMinusOne', qMinusOne, false, false)))));
                                var result = J$.W(866401, 'result', J$.M(866393, J$.R(866361, 'this', this, false, false), 'lucasSequence', false)(J$.R(866369, 'P', P, false, false), J$.R(866377, 'Q', Q, false, false), J$.R(866385, 'k', k, false, false)), result, false, false);
                                U = J$.W(866433, 'U', J$.G(866425, J$.R(866409, 'result', result, false, false), J$.T(866417, 0, 22, false)), U, false, false);
                                V = J$.W(866465, 'V', J$.G(866457, J$.R(866441, 'result', result, false, false), J$.T(866449, 1, 22, false)), V, false, false);
                                if (J$.C(52512, J$.M(866513, J$.M(866497, J$.R(866473, 'this', this, false, false), 'modMult', false)(J$.R(866481, 'V', V, false, false), J$.R(866489, 'V', V, false, false)), 'equals', false)(J$.R(866505, 'fourQ', fourQ, false, false)))) {
                                    if (J$.C(52504, J$.M(866537, J$.R(866521, 'V', V, false, false), 'testBit', false)(J$.T(866529, 0, 22, false)))) {
                                        V = J$.W(866569, 'V', J$.M(866561, J$.R(866545, 'V', V, false, false), 'add', false)(J$.I(typeof q === 'undefined' ? q = J$.R(866553, 'q', undefined, true, true) : q = J$.R(866553, 'q', q, true, true))), V, false, false);
                                    }
                                    V = J$.W(866601, 'V', J$.M(866593, J$.R(866577, 'V', V, false, false), 'shiftRight', false)(J$.T(866585, 1, 22, false)), V, false, false);
                                    return J$.Rt(866641, J$.F(866633, J$.R(866609, 'ECFieldElementFp', ECFieldElementFp, false, true), true)(J$.I(typeof q === 'undefined' ? q = J$.R(866617, 'q', undefined, true, true) : q = J$.R(866617, 'q', q, true, true)), J$.R(866625, 'V', V, false, false)));
                                }
                            } while (J$.C(52528, J$.C(52520, J$.M(866673, J$.R(866649, 'U', U, false, false), 'equals', false)(J$.G(866665, J$.R(866657, 'BigInteger', BigInteger, false, true), 'ONE'))) ? J$._() : J$.M(866697, J$.R(866681, 'U', U, false, false), 'equals', false)(J$.R(866689, 'qMinusOne', qMinusOne, false, false))));
                            return J$.Rt(866713, J$.T(866705, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(869353, J$e);
                        } finally {
                            if (J$.Fr(869361))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(868241, J$.G(866849, J$.R(866841, 'ECFieldElementFp', ECFieldElementFp, false, true), 'prototype'), 'lucasSequence', J$.T(868233, function (P, Q, k) {
                jalangiLabel35:
                    while (true) {
                        try {
                            J$.Fe(868129, arguments.callee, this, arguments);
                            arguments = J$.N(868137, 'arguments', arguments, true, false, false);
                            P = J$.N(868145, 'P', P, true, false, false);
                            Q = J$.N(868153, 'Q', Q, true, false, false);
                            k = J$.N(868161, 'k', k, true, false, false);
                            J$.N(868169, 'n', n, false, false, false);
                            J$.N(868177, 's', s, false, false, false);
                            J$.N(868185, 'Uh', Uh, false, false, false);
                            J$.N(868193, 'Vl', Vl, false, false, false);
                            J$.N(868201, 'Vh', Vh, false, false, false);
                            J$.N(868209, 'Ql', Ql, false, false, false);
                            J$.N(868217, 'Qh', Qh, false, false, false);
                            J$.N(868225, 'j', j, false, false, false);
                            var n = J$.W(866873, 'n', J$.M(866865, J$.R(866857, 'k', k, false, false), 'bitLength', false)(), n, false, false);
                            var s = J$.W(866897, 's', J$.M(866889, J$.R(866881, 'k', k, false, false), 'getLowestSetBit', false)(), s, false, false);
                            var Uh = J$.W(866921, 'Uh', J$.G(866913, J$.R(866905, 'BigInteger', BigInteger, false, true), 'ONE'), Uh, false, false);
                            var Vl = J$.W(866945, 'Vl', J$.G(866937, J$.R(866929, 'BigInteger', BigInteger, false, true), 'TWO'), Vl, false, false);
                            var Vh = J$.W(866961, 'Vh', J$.R(866953, 'P', P, false, false), Vh, false, false);
                            var Ql = J$.W(866985, 'Ql', J$.G(866977, J$.R(866969, 'BigInteger', BigInteger, false, true), 'ONE'), Ql, false, false);
                            var Qh = J$.W(867009, 'Qh', J$.G(867001, J$.R(866993, 'BigInteger', BigInteger, false, true), 'ONE'), Qh, false, false);
                            for (var j = J$.W(867033, 'j', J$.B(143730, '-', J$.R(867017, 'n', n, false, false), J$.T(867025, 1, 22, false)), j, false, false); J$.C(52544, J$.B(143746, '>=', J$.R(867041, 'j', j, false, false), J$.B(143738, '+', J$.R(867049, 's', s, false, false), J$.T(867057, 1, 22, false)))); j = J$.W(867073, 'j', J$.B(143762, '-', J$.U(143754, '+', J$.R(867065, 'j', j, false, false)), 1), j, false, false)) {
                                Ql = J$.W(867113, 'Ql', J$.M(867105, J$.R(867081, 'this', this, false, false), 'modMult', false)(J$.R(867089, 'Ql', Ql, false, false), J$.R(867097, 'Qh', Qh, false, false)), Ql, false, false);
                                if (J$.C(52536, J$.M(867137, J$.R(867121, 'k', k, false, false), 'testBit', false)(J$.R(867129, 'j', j, false, false)))) {
                                    Qh = J$.W(867177, 'Qh', J$.M(867169, J$.R(867145, 'this', this, false, false), 'modMult', false)(J$.R(867153, 'Ql', Ql, false, false), J$.R(867161, 'Q', Q, false, false)), Qh, false, false);
                                    Uh = J$.W(867217, 'Uh', J$.M(867209, J$.R(867185, 'this', this, false, false), 'modMult', false)(J$.R(867193, 'Uh', Uh, false, false), J$.R(867201, 'Vh', Vh, false, false)), Uh, false, false);
                                    Vl = J$.W(867297, 'Vl', J$.M(867289, J$.R(867225, 'this', this, false, false), 'modReduce', false)(J$.M(867281, J$.M(867249, J$.R(867233, 'Vh', Vh, false, false), 'multiply', false)(J$.R(867241, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(867273, J$.R(867257, 'P', P, false, false), 'multiply', false)(J$.R(867265, 'Ql', Ql, false, false)))), Vl, false, false);
                                    Vh = J$.W(867377, 'Vh', J$.M(867369, J$.R(867305, 'this', this, false, false), 'modReduce', false)(J$.M(867361, J$.M(867329, J$.R(867313, 'Vh', Vh, false, false), 'multiply', false)(J$.R(867321, 'Vh', Vh, false, false)), 'subtract', false)(J$.M(867353, J$.R(867337, 'Qh', Qh, false, false), 'shiftLeft', false)(J$.T(867345, 1, 22, false)))), Vh, false, false);
                                } else {
                                    Qh = J$.W(867393, 'Qh', J$.R(867385, 'Ql', Ql, false, false), Qh, false, false);
                                    Uh = J$.W(867457, 'Uh', J$.M(867449, J$.R(867401, 'this', this, false, false), 'modReduce', false)(J$.M(867441, J$.M(867425, J$.R(867409, 'Uh', Uh, false, false), 'multiply', false)(J$.R(867417, 'Vl', Vl, false, false)), 'subtract', false)(J$.R(867433, 'Ql', Ql, false, false))), Uh, false, false);
                                    Vh = J$.W(867537, 'Vh', J$.M(867529, J$.R(867465, 'this', this, false, false), 'modReduce', false)(J$.M(867521, J$.M(867489, J$.R(867473, 'Vh', Vh, false, false), 'multiply', false)(J$.R(867481, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(867513, J$.R(867497, 'P', P, false, false), 'multiply', false)(J$.R(867505, 'Ql', Ql, false, false)))), Vh, false, false);
                                    Vl = J$.W(867617, 'Vl', J$.M(867609, J$.R(867545, 'this', this, false, false), 'modReduce', false)(J$.M(867601, J$.M(867569, J$.R(867553, 'Vl', Vl, false, false), 'multiply', false)(J$.R(867561, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(867593, J$.R(867577, 'Ql', Ql, false, false), 'shiftLeft', false)(J$.T(867585, 1, 22, false)))), Vl, false, false);
                                }
                            }
                            Ql = J$.W(867657, 'Ql', J$.M(867649, J$.R(867625, 'this', this, false, false), 'modMult', false)(J$.R(867633, 'Ql', Ql, false, false), J$.R(867641, 'Qh', Qh, false, false)), Ql, false, false);
                            Qh = J$.W(867697, 'Qh', J$.M(867689, J$.R(867665, 'this', this, false, false), 'modMult', false)(J$.R(867673, 'Ql', Ql, false, false), J$.R(867681, 'Q', Q, false, false)), Qh, false, false);
                            Uh = J$.W(867761, 'Uh', J$.M(867753, J$.R(867705, 'this', this, false, false), 'modReduce', false)(J$.M(867745, J$.M(867729, J$.R(867713, 'Uh', Uh, false, false), 'multiply', false)(J$.R(867721, 'Vl', Vl, false, false)), 'subtract', false)(J$.R(867737, 'Ql', Ql, false, false))), Uh, false, false);
                            Vl = J$.W(867841, 'Vl', J$.M(867833, J$.R(867769, 'this', this, false, false), 'modReduce', false)(J$.M(867825, J$.M(867793, J$.R(867777, 'Vh', Vh, false, false), 'multiply', false)(J$.R(867785, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(867817, J$.R(867801, 'P', P, false, false), 'multiply', false)(J$.R(867809, 'Ql', Ql, false, false)))), Vl, false, false);
                            Ql = J$.W(867881, 'Ql', J$.M(867873, J$.R(867849, 'this', this, false, false), 'modMult', false)(J$.R(867857, 'Ql', Ql, false, false), J$.R(867865, 'Qh', Qh, false, false)), Ql, false, false);
                            for (var j = J$.W(867897, 'j', J$.T(867889, 1, 22, false), j, false, false); J$.C(52552, J$.B(143770, '<=', J$.R(867905, 'j', j, false, false), J$.R(867913, 's', s, false, false))); j = J$.W(867929, 'j', J$.B(143786, '+', J$.U(143778, '+', J$.R(867921, 'j', j, false, false)), 1), j, false, false)) {
                                Uh = J$.W(867969, 'Uh', J$.M(867961, J$.R(867937, 'this', this, false, false), 'modMult', false)(J$.R(867945, 'Uh', Uh, false, false), J$.R(867953, 'Vl', Vl, false, false)), Uh, false, false);
                                Vl = J$.W(868049, 'Vl', J$.M(868041, J$.R(867977, 'this', this, false, false), 'modReduce', false)(J$.M(868033, J$.M(868001, J$.R(867985, 'Vl', Vl, false, false), 'multiply', false)(J$.R(867993, 'Vl', Vl, false, false)), 'subtract', false)(J$.M(868025, J$.R(868009, 'Ql', Ql, false, false), 'shiftLeft', false)(J$.T(868017, 1, 22, false)))), Vl, false, false);
                                Ql = J$.W(868089, 'Ql', J$.M(868081, J$.R(868057, 'this', this, false, false), 'modMult', false)(J$.R(868065, 'Ql', Ql, false, false), J$.R(868073, 'Ql', Ql, false, false)), Ql, false, false);
                            }
                            return J$.Rt(868121, J$.T(868113, [
                                J$.R(868097, 'Uh', Uh, false, false),
                                J$.R(868105, 'Vl', Vl, false, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(869369, J$e);
                        } finally {
                            if (J$.Fr(869377))
                                continue jalangiLabel35;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var _exports = J$.W(868281, '_exports', J$.T(868273, {
                ECCurveFp: J$.R(868249, 'ECCurveFp', ECCurveFp, false, true),
                ECPointFp: J$.R(868257, 'ECPointFp', ECPointFp, false, true),
                ECFieldElementFp: J$.R(868265, 'ECFieldElementFp', ECFieldElementFp, false, true)
            }, 11, false), _exports, false, true);
            J$.P(868305, J$.I(typeof module === 'undefined' ? module = J$.R(868289, 'module', undefined, true, true) : module = J$.R(868289, 'module', module, true, true)), 'exports', J$.R(868297, '_exports', _exports, false, true));
        } catch (J$e) {
            J$.Ex(869385, J$e);
        } finally {
            if (J$.Sr(869393))
                continue jalangiLabel36;
            else
                break jalangiLabel36;
        }
    }
// JALANGI DO NOT INSTRUMENT

