J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(914161, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/http-signature/lib/index.js');
            J$.N(914169, 'parser', parser, false, false, false);
            J$.N(914177, 'signer', signer, false, false, false);
            J$.N(914185, 'verify', verify, false, false, false);
            J$.N(914193, 'utils', utils, false, false, false);
            J$.T(913809, 'use strict', 21, false);
            var parser = J$.W(913841, 'parser', J$.F(913833, J$.I(typeof require === 'undefined' ? require = J$.R(913817, 'require', undefined, true, true) : require = J$.R(913817, 'require', require, true, true)), false)(J$.T(913825, './parser', 21, false)), parser, false, true);
            var signer = J$.W(913873, 'signer', J$.F(913865, J$.I(typeof require === 'undefined' ? require = J$.R(913849, 'require', undefined, true, true) : require = J$.R(913849, 'require', require, true, true)), false)(J$.T(913857, './signer', 21, false)), signer, false, true);
            var verify = J$.W(913905, 'verify', J$.F(913897, J$.I(typeof require === 'undefined' ? require = J$.R(913881, 'require', undefined, true, true) : require = J$.R(913881, 'require', require, true, true)), false)(J$.T(913889, './verify', 21, false)), verify, false, true);
            var utils = J$.W(913937, 'utils', J$.F(913929, J$.I(typeof require === 'undefined' ? require = J$.R(913913, 'require', undefined, true, true) : require = J$.R(913913, 'require', require, true, true)), false)(J$.T(913921, './utils', 21, false)), utils, false, true);
            J$.P(914153, J$.I(typeof module === 'undefined' ? module = J$.R(913945, 'module', undefined, true, true) : module = J$.R(913945, 'module', module, true, true)), 'exports', J$.T(914145, {
                parse: J$.G(913961, J$.R(913953, 'parser', parser, false, true), 'parseRequest'),
                parseRequest: J$.G(913977, J$.R(913969, 'parser', parser, false, true), 'parseRequest'),
                sign: J$.G(913993, J$.R(913985, 'signer', signer, false, true), 'signRequest'),
                signRequest: J$.G(914009, J$.R(914001, 'signer', signer, false, true), 'signRequest'),
                createSigner: J$.G(914025, J$.R(914017, 'signer', signer, false, true), 'createSigner'),
                isSigner: J$.G(914041, J$.R(914033, 'signer', signer, false, true), 'isSigner'),
                sshKeyToPEM: J$.G(914057, J$.R(914049, 'utils', utils, false, true), 'sshKeyToPEM'),
                sshKeyFingerprint: J$.G(914073, J$.R(914065, 'utils', utils, false, true), 'fingerprint'),
                pemToRsaSSHKey: J$.G(914089, J$.R(914081, 'utils', utils, false, true), 'pemToRsaSSHKey'),
                verify: J$.G(914105, J$.R(914097, 'verify', verify, false, true), 'verifySignature'),
                verifySignature: J$.G(914121, J$.R(914113, 'verify', verify, false, true), 'verifySignature'),
                verifyHMAC: J$.G(914137, J$.R(914129, 'verify', verify, false, true), 'verifyHMAC')
            }, 11, false));
        } catch (J$e) {
            J$.Ex(914201, J$e);
        } finally {
            if (J$.Sr(914209))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

