J$.noInstrEval = false;
jalangiLabel16:
    while (true) {
        try {
            J$.Se(926089, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/http-signature/lib/signer.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(919617, arguments.callee, this, arguments);
                            arguments = J$.N(919625, 'arguments', arguments, true, false, false);
                            obj = J$.N(919633, 'obj', obj, true, false, false);
                            if (J$.C(55312, J$.C(55272, J$.B(147298, '===', J$.U(147290, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(919353, 'Symbol', undefined, true, true) : Symbol = J$.R(919353, 'Symbol', Symbol, true, true))), J$.T(919361, 'function', 21, false))) ? J$.B(147314, '===', J$.U(147306, 'typeof', J$.G(919377, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(919369, 'Symbol', undefined, true, true) : Symbol = J$.R(919369, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(919385, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(919441, '_typeof', J$.T(919433, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(919409, arguments.callee, this, arguments);
                                                arguments = J$.N(919417, 'arguments', arguments, true, false, false);
                                                obj = J$.N(919425, 'obj', obj, true, false, false);
                                                return J$.Rt(919401, J$.U(147322, 'typeof', J$.R(919393, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(926273, J$e);
                                            } finally {
                                                if (J$.Fr(926281))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(919577, '_typeof', J$.T(919569, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(919545, arguments.callee, this, arguments);
                                                arguments = J$.N(919553, 'arguments', arguments, true, false, false);
                                                obj = J$.N(919561, 'obj', obj, true, false, false);
                                                return J$.Rt(919537, J$.C(55304, J$.C(55296, J$.C(55288, J$.C(55280, J$.R(919449, 'obj', obj, false, false)) ? J$.B(147338, '===', J$.U(147330, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(919457, 'Symbol', undefined, true, true) : Symbol = J$.R(919457, 'Symbol', Symbol, true, true))), J$.T(919465, 'function', 21, false)) : J$._()) ? J$.B(147346, '===', J$.G(919481, J$.R(919473, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(919489, 'Symbol', undefined, true, true) : Symbol = J$.R(919489, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(147354, '!==', J$.R(919497, 'obj', obj, false, false), J$.G(919513, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(919505, 'Symbol', undefined, true, true) : Symbol = J$.R(919505, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(919521, 'symbol', 21, false) : J$.U(147362, 'typeof', J$.R(919529, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(926289, J$e);
                                            } finally {
                                                if (J$.Fr(926297))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(919609, J$.F(919601, J$.R(919585, '_typeof', _typeof, false, true), false)(J$.R(919593, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(926305, J$e);
                        } finally {
                            if (J$.Fr(926313))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function MissingHeaderError(message) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(920081, arguments.callee, this, arguments);
                            arguments = J$.N(920089, 'arguments', arguments, true, false, false);
                            message = J$.N(920097, 'message', message, true, false, false);
                            J$.M(920073, J$.R(920041, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(920049, 'this', this, false, false), J$.R(920057, 'message', message, false, false), J$.R(920065, 'MissingHeaderError', MissingHeaderError, false, true));
                        } catch (J$e) {
                            J$.Ex(926321, J$e);
                        } finally {
                            if (J$.Fr(926329))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function StrictParsingError(message) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(920177, arguments.callee, this, arguments);
                            arguments = J$.N(920185, 'arguments', arguments, true, false, false);
                            message = J$.N(920193, 'message', message, true, false, false);
                            J$.M(920169, J$.R(920137, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(920145, 'this', this, false, false), J$.R(920153, 'message', message, false, false), J$.R(920161, 'StrictParsingError', StrictParsingError, false, true));
                        } catch (J$e) {
                            J$.Ex(926337, J$e);
                        } finally {
                            if (J$.Fr(926345))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function RequestSigner(options) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(921641, arguments.callee, this, arguments);
                            arguments = J$.N(921649, 'arguments', arguments, true, false, false);
                            options = J$.N(921657, 'options', options, true, false, false);
                            J$.N(921665, 'alg', alg, false, false, false);
                            J$.N(921673, 'key', key, false, false, false);
                            J$.M(920257, J$.R(920233, 'assert', assert, false, true), 'object', false)(J$.R(920241, 'options', options, false, false), J$.T(920249, 'options', 21, false));
                            var alg = J$.W(920273, 'alg', J$.T(920265, [], 10, false), alg, false, false);
                            if (J$.C(55320, J$.B(147370, '!==', J$.G(920289, J$.R(920281, 'options', options, false, false), 'algorithm'), J$.T(920297, undefined, 24, false)))) {
                                J$.M(920337, J$.R(920305, 'assert', assert, false, true), 'string', false)(J$.G(920321, J$.R(920313, 'options', options, false, false), 'algorithm'), J$.T(920329, 'options.algorithm', 21, false));
                                alg = J$.W(920377, 'alg', J$.F(920369, J$.R(920345, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(920361, J$.R(920353, 'options', options, false, false), 'algorithm')), alg, false, false);
                            }
                            J$.P(920401, J$.R(920385, 'this', this, false, false), 'rs_alg', J$.R(920393, 'alg', alg, false, false));
                            if (J$.C(55408, J$.B(147378, '!==', J$.G(920417, J$.R(920409, 'options', options, false, false), 'sign'), J$.T(920425, undefined, 24, false)))) {
                                J$.M(920465, J$.R(920433, 'assert', assert, false, true), 'func', false)(J$.G(920449, J$.R(920441, 'options', options, false, false), 'sign'), J$.T(920457, 'options.sign', 21, false));
                                J$.P(920497, J$.R(920473, 'this', this, false, false), 'rs_signFunc', J$.G(920489, J$.R(920481, 'options', options, false, false), 'sign'));
                            } else if (J$.C(55400, J$.C(55328, J$.B(147386, '===', J$.G(920521, J$.R(920505, 'alg', alg, false, false), J$.T(920513, 0, 22, false)), J$.T(920529, 'hmac', 21, false))) ? J$.B(147394, '!==', J$.G(920545, J$.R(920537, 'options', options, false, false), 'key'), J$.T(920553, undefined, 24, false)) : J$._())) {
                                J$.M(920593, J$.R(920561, 'assert', assert, false, true), 'string', false)(J$.G(920577, J$.R(920569, 'options', options, false, false), 'keyId'), J$.T(920585, 'options.keyId', 21, false));
                                J$.P(920625, J$.R(920601, 'this', this, false, false), 'rs_keyId', J$.G(920617, J$.R(920609, 'options', options, false, false), 'keyId'));
                                if (J$.C(55344, J$.C(55336, J$.B(147410, '!==', J$.U(147402, 'typeof', J$.G(920641, J$.R(920633, 'options', options, false, false), 'key')), J$.T(920649, 'string', 21, false))) ? J$.U(147418, '!', J$.M(920681, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(920657, 'Buffer', undefined, true, true) : Buffer = J$.R(920657, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.G(920673, J$.R(920665, 'options', options, false, false), 'key'))) : J$._()))
                                    throw J$.F(920705, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(920689, 'TypeError', undefined, true, true) : TypeError = J$.R(920689, 'TypeError', TypeError, true, true)), true)(J$.T(920697, 'options.key for HMAC must be a string or Buffer', 21, false));
                                J$.P(920785, J$.R(920713, 'this', this, false, false), 'rs_signer', J$.M(920777, J$.R(920721, 'crypto', crypto, false, true), 'createHmac', false)(J$.M(920753, J$.G(920745, J$.R(920729, 'alg', alg, false, false), J$.T(920737, 1, 22, false)), 'toUpperCase', false)(), J$.G(920769, J$.R(920761, 'options', options, false, false), 'key')));
                                J$.P(920953, J$.G(920801, J$.R(920793, 'this', this, false, false), 'rs_signer'), 'sign', J$.T(920945, function () {
                                    jalangiLabel6:
                                        while (true) {
                                            try {
                                                J$.Fe(920921, arguments.callee, this, arguments);
                                                arguments = J$.N(920929, 'arguments', arguments, true, false, false);
                                                J$.N(920937, 'digest', digest, false, false, false);
                                                var digest = J$.W(920833, 'digest', J$.M(920825, J$.R(920809, 'this', this, false, false), 'digest', false)(J$.T(920817, 'base64', 21, false)), digest, false, false);
                                                return J$.Rt(920913, J$.T(920905, {
                                                    hashAlgorithm: J$.G(920857, J$.R(920841, 'alg', alg, false, false), J$.T(920849, 1, 22, false)),
                                                    toString: J$.T(920897, function toString() {
                                                        jalangiLabel5:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(920881, arguments.callee, this, arguments);
                                                                    arguments = J$.N(920889, 'arguments', arguments, true, false, false);
                                                                    return J$.Rt(920873, J$.R(920865, 'digest', digest, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(926353, J$e);
                                                                } finally {
                                                                    if (J$.Fr(926361))
                                                                        continue jalangiLabel5;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false)
                                                }, 11, false));
                                            } catch (J$e) {
                                                J$.Ex(926369, J$e);
                                            } finally {
                                                if (J$.Fr(926377))
                                                    continue jalangiLabel6;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else if (J$.C(55392, J$.B(147426, '!==', J$.G(920969, J$.R(920961, 'options', options, false, false), 'key'), J$.T(920977, undefined, 24, false)))) {
                                var key = J$.W(921001, 'key', J$.G(920993, J$.R(920985, 'options', options, false, false), 'key'), key, false, false);
                                if (J$.C(55360, J$.C(55352, J$.B(147442, '===', J$.U(147434, 'typeof', J$.R(921009, 'key', key, false, false)), J$.T(921017, 'string', 21, false))) ? J$._() : J$.M(921041, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(921025, 'Buffer', undefined, true, true) : Buffer = J$.R(921025, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(921033, 'key', key, false, false))))
                                    key = J$.W(921073, 'key', J$.M(921065, J$.R(921049, 'sshpk', sshpk, false, true), 'parsePrivateKey', false)(J$.R(921057, 'key', key, false, false)), key, false, false);
                                J$.M(921153, J$.R(921081, 'assert', assert, false, true), 'ok', false)(J$.M(921137, J$.G(921097, J$.R(921089, 'sshpk', sshpk, false, true), 'PrivateKey'), 'isPrivateKey', false)(J$.R(921105, 'key', key, false, false), J$.T(921129, [
                                    J$.T(921113, 1, 22, false),
                                    J$.T(921121, 2, 22, false)
                                ], 10, false)), J$.T(921145, 'options.key must be a sshpk.PrivateKey', 21, false));
                                J$.P(921177, J$.R(921161, 'this', this, false, false), 'rs_key', J$.R(921169, 'key', key, false, false));
                                J$.M(921217, J$.R(921185, 'assert', assert, false, true), 'string', false)(J$.G(921201, J$.R(921193, 'options', options, false, false), 'keyId'), J$.T(921209, 'options.keyId', 21, false));
                                J$.P(921249, J$.R(921225, 'this', this, false, false), 'rs_keyId', J$.G(921241, J$.R(921233, 'options', options, false, false), 'keyId'));
                                if (J$.C(55368, J$.U(147450, '!', J$.G(921281, J$.R(921257, 'PK_ALGOS', PK_ALGOS, false, true), J$.G(921273, J$.R(921265, 'key', key, false, false), 'type'))))) {
                                    throw J$.F(921337, J$.R(921289, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(147466, '+', J$.B(147458, '+', J$.M(921313, J$.G(921305, J$.R(921297, 'key', key, false, false), 'type'), 'toUpperCase', false)(), J$.T(921321, ' type ', 21, false)), J$.T(921329, 'keys are not supported', 21, false)));
                                }
                                if (J$.C(55384, J$.C(55376, J$.B(147474, '!==', J$.G(921361, J$.R(921345, 'alg', alg, false, false), J$.T(921353, 0, 22, false)), J$.T(921369, undefined, 24, false))) ? J$.B(147482, '!==', J$.G(921385, J$.R(921377, 'key', key, false, false), 'type'), J$.G(921409, J$.R(921393, 'alg', alg, false, false), J$.T(921401, 0, 22, false))) : J$._())) {
                                    throw J$.F(921505, J$.R(921417, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(147514, '+', J$.B(147506, '+', J$.B(147498, '+', J$.B(147490, '+', J$.T(921425, 'options.key must be a ', 21, false), J$.M(921457, J$.G(921449, J$.R(921433, 'alg', alg, false, false), J$.T(921441, 0, 22, false)), 'toUpperCase', false)()), J$.T(921465, ' key, was given a ', 21, false)), J$.M(921489, J$.G(921481, J$.R(921473, 'key', key, false, false), 'type'), 'toUpperCase', false)()), J$.T(921497, ' key instead', 21, false)));
                                }
                                J$.P(921561, J$.R(921513, 'this', this, false, false), 'rs_signer', J$.M(921553, J$.R(921521, 'key', key, false, false), 'createSign', false)(J$.G(921545, J$.R(921529, 'alg', alg, false, false), J$.T(921537, 1, 22, false))));
                            } else {
                                throw J$.F(921585, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(921569, 'TypeError', undefined, true, true) : TypeError = J$.R(921569, 'TypeError', TypeError, true, true)), true)(J$.T(921577, 'options.sign (func) or options.key is required', 21, false));
                            }
                            J$.P(921609, J$.R(921593, 'this', this, false, false), 'rs_headers', J$.T(921601, [], 10, false));
                            J$.P(921633, J$.R(921617, 'this', this, false, false), 'rs_lines', J$.T(921625, [], 10, false));
                        } catch (J$e) {
                            J$.Ex(926385, J$e);
                        } finally {
                            if (J$.Fr(926393))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(926105, '_typeof', J$.T(926097, _typeof, 12, false), true, false, false);
            J$.N(926113, 'assert', assert, false, false, false);
            J$.N(926121, 'crypto', crypto, false, false, false);
            J$.N(926129, 'http', http, false, false, false);
            J$.N(926137, 'util', util, false, false, false);
            J$.N(926145, 'sshpk', sshpk, false, false, false);
            J$.N(926153, 'jsprim', jsprim, false, false, false);
            J$.N(926161, 'utils', utils, false, false, false);
            J$.N(926169, 'sprintf', sprintf, false, false, false);
            J$.N(926177, 'HASH_ALGOS', HASH_ALGOS, false, false, false);
            J$.N(926185, 'PK_ALGOS', PK_ALGOS, false, false, false);
            J$.N(926193, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            J$.N(926201, 'HttpSignatureError', HttpSignatureError, false, false, false);
            J$.N(926209, 'validateAlgorithm', validateAlgorithm, false, false, false);
            J$.N(926217, 'AUTHZ_FMT', AUTHZ_FMT, false, false, false);
            MissingHeaderError = J$.N(926233, 'MissingHeaderError', J$.T(926225, MissingHeaderError, 12, false), true, false, false);
            StrictParsingError = J$.N(926249, 'StrictParsingError', J$.T(926241, StrictParsingError, 12, false), true, false, false);
            RequestSigner = J$.N(926265, 'RequestSigner', J$.T(926257, RequestSigner, 12, false), true, false, false);
            J$.T(919105, 'use strict', 21, false);
            J$.F(919129, J$.I(typeof require === 'undefined' ? require = J$.R(919113, 'require', undefined, true, true) : require = J$.R(919113, 'require', require, true, true)), false)(J$.T(919121, 'core-js/modules/es.symbol', 21, false));
            J$.F(919153, J$.I(typeof require === 'undefined' ? require = J$.R(919137, 'require', undefined, true, true) : require = J$.R(919137, 'require', require, true, true)), false)(J$.T(919145, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(919177, J$.I(typeof require === 'undefined' ? require = J$.R(919161, 'require', undefined, true, true) : require = J$.R(919161, 'require', require, true, true)), false)(J$.T(919169, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(919201, J$.I(typeof require === 'undefined' ? require = J$.R(919185, 'require', undefined, true, true) : require = J$.R(919185, 'require', require, true, true)), false)(J$.T(919193, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(919225, J$.I(typeof require === 'undefined' ? require = J$.R(919209, 'require', undefined, true, true) : require = J$.R(919209, 'require', require, true, true)), false)(J$.T(919217, 'core-js/modules/es.array.join', 21, false));
            J$.F(919249, J$.I(typeof require === 'undefined' ? require = J$.R(919233, 'require', undefined, true, true) : require = J$.R(919233, 'require', require, true, true)), false)(J$.T(919241, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(919273, J$.I(typeof require === 'undefined' ? require = J$.R(919257, 'require', undefined, true, true) : require = J$.R(919257, 'require', require, true, true)), false)(J$.T(919265, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(919297, J$.I(typeof require === 'undefined' ? require = J$.R(919281, 'require', undefined, true, true) : require = J$.R(919281, 'require', require, true, true)), false)(J$.T(919289, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(919321, J$.I(typeof require === 'undefined' ? require = J$.R(919305, 'require', undefined, true, true) : require = J$.R(919305, 'require', require, true, true)), false)(J$.T(919313, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(919345, J$.I(typeof require === 'undefined' ? require = J$.R(919329, 'require', undefined, true, true) : require = J$.R(919329, 'require', require, true, true)), false)(J$.T(919337, 'core-js/modules/web.dom-collections.iterator', 21, false));
            var assert = J$.W(919665, 'assert', J$.F(919657, J$.I(typeof require === 'undefined' ? require = J$.R(919641, 'require', undefined, true, true) : require = J$.R(919641, 'require', require, true, true)), false)(J$.T(919649, 'assert-plus', 21, false)), assert, false, true);
            var crypto = J$.W(919697, 'crypto', J$.F(919689, J$.I(typeof require === 'undefined' ? require = J$.R(919673, 'require', undefined, true, true) : require = J$.R(919673, 'require', require, true, true)), false)(J$.T(919681, 'crypto', 21, false)), crypto, false, true);
            var http = J$.W(919729, 'http', J$.F(919721, J$.I(typeof require === 'undefined' ? require = J$.R(919705, 'require', undefined, true, true) : require = J$.R(919705, 'require', require, true, true)), false)(J$.T(919713, 'http', 21, false)), http, false, true);
            var util = J$.W(919761, 'util', J$.F(919753, J$.I(typeof require === 'undefined' ? require = J$.R(919737, 'require', undefined, true, true) : require = J$.R(919737, 'require', require, true, true)), false)(J$.T(919745, 'util', 21, false)), util, false, true);
            var sshpk = J$.W(919793, 'sshpk', J$.F(919785, J$.I(typeof require === 'undefined' ? require = J$.R(919769, 'require', undefined, true, true) : require = J$.R(919769, 'require', require, true, true)), false)(J$.T(919777, 'sshpk', 21, false)), sshpk, false, true);
            var jsprim = J$.W(919825, 'jsprim', J$.F(919817, J$.I(typeof require === 'undefined' ? require = J$.R(919801, 'require', undefined, true, true) : require = J$.R(919801, 'require', require, true, true)), false)(J$.T(919809, 'jsprim', 21, false)), jsprim, false, true);
            var utils = J$.W(919857, 'utils', J$.F(919849, J$.I(typeof require === 'undefined' ? require = J$.R(919833, 'require', undefined, true, true) : require = J$.R(919833, 'require', require, true, true)), false)(J$.T(919841, './utils', 21, false)), utils, false, true);
            var sprintf = J$.W(919897, 'sprintf', J$.G(919889, J$.F(919881, J$.I(typeof require === 'undefined' ? require = J$.R(919865, 'require', undefined, true, true) : require = J$.R(919865, 'require', require, true, true)), false)(J$.T(919873, 'util', 21, false)), 'format'), sprintf, false, true);
            var HASH_ALGOS = J$.W(919921, 'HASH_ALGOS', J$.G(919913, J$.R(919905, 'utils', utils, false, true), 'HASH_ALGOS'), HASH_ALGOS, false, true);
            var PK_ALGOS = J$.W(919945, 'PK_ALGOS', J$.G(919937, J$.R(919929, 'utils', utils, false, true), 'PK_ALGOS'), PK_ALGOS, false, true);
            var InvalidAlgorithmError = J$.W(919969, 'InvalidAlgorithmError', J$.G(919961, J$.R(919953, 'utils', utils, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            var HttpSignatureError = J$.W(919993, 'HttpSignatureError', J$.G(919985, J$.R(919977, 'utils', utils, false, true), 'HttpSignatureError'), HttpSignatureError, false, true);
            var validateAlgorithm = J$.W(920017, 'validateAlgorithm', J$.G(920009, J$.R(920001, 'utils', utils, false, true), 'validateAlgorithm'), validateAlgorithm, false, true);
            var AUTHZ_FMT = J$.W(920033, 'AUTHZ_FMT', J$.T(920025, 'Signature keyId="%s",algorithm="%s",headers="%s",signature="%s"', 21, false), AUTHZ_FMT, false, true);
            J$.M(920129, J$.R(920105, 'util', util, false, true), 'inherits', false)(J$.R(920113, 'MissingHeaderError', MissingHeaderError, false, true), J$.R(920121, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(920225, J$.R(920201, 'util', util, false, true), 'inherits', false)(J$.R(920209, 'StrictParsingError', StrictParsingError, false, true), J$.R(920217, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.P(922065, J$.G(921689, J$.R(921681, 'RequestSigner', RequestSigner, false, true), 'prototype'), 'writeHeader', J$.T(922057, function (header, value) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(922017, arguments.callee, this, arguments);
                            arguments = J$.N(922025, 'arguments', arguments, true, false, false);
                            header = J$.N(922033, 'header', header, true, false, false);
                            value = J$.N(922041, 'value', value, true, false, false);
                            J$.N(922049, 'line', line, false, false, false);
                            J$.M(921721, J$.R(921697, 'assert', assert, false, true), 'string', false)(J$.R(921705, 'header', header, false, false), J$.T(921713, 'header', 21, false));
                            header = J$.W(921745, 'header', J$.M(921737, J$.R(921729, 'header', header, false, false), 'toLowerCase', false)(), header, false, false);
                            J$.M(921777, J$.R(921753, 'assert', assert, false, true), 'string', false)(J$.R(921761, 'value', value, false, false), J$.T(921769, 'value', 21, false));
                            J$.M(921809, J$.G(921793, J$.R(921785, 'this', this, false, false), 'rs_headers'), 'push', false)(J$.R(921801, 'header', header, false, false));
                            if (J$.C(55424, J$.G(921825, J$.R(921817, 'this', this, false, false), 'rs_signFunc'))) {
                                J$.M(921873, J$.G(921841, J$.R(921833, 'this', this, false, false), 'rs_lines'), 'push', false)(J$.B(147530, '+', J$.B(147522, '+', J$.R(921849, 'header', header, false, false), J$.T(921857, ': ', 21, false)), J$.R(921865, 'value', value, false, false)));
                            } else {
                                var line = J$.W(921905, 'line', J$.B(147546, '+', J$.B(147538, '+', J$.R(921881, 'header', header, false, false), J$.T(921889, ': ', 21, false)), J$.R(921897, 'value', value, false, false)), line, false, false);
                                if (J$.C(55416, J$.B(147554, '>', J$.G(921929, J$.G(921921, J$.R(921913, 'this', this, false, false), 'rs_headers'), 'length'), J$.T(921937, 0, 22, false))))
                                    line = J$.W(921961, 'line', J$.B(147562, '+', J$.T(921945, '\n', 21, false), J$.R(921953, 'line', line, false, false)), line, false, false);
                                J$.M(921993, J$.G(921977, J$.R(921969, 'this', this, false, false), 'rs_signer'), 'update', false)(J$.R(921985, 'line', line, false, false));
                            }
                            return J$.Rt(922009, J$.R(922001, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(926401, J$e);
                        } finally {
                            if (J$.Fr(926409))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(922177, J$.G(922081, J$.R(922073, 'RequestSigner', RequestSigner, false, true), 'prototype'), 'writeDateHeader', J$.T(922169, function () {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(922153, arguments.callee, this, arguments);
                            arguments = J$.N(922161, 'arguments', arguments, true, false, false);
                            return J$.Rt(922145, J$.M(922137, J$.R(922089, 'this', this, false, false), 'writeHeader', false)(J$.T(922097, 'date', 21, false), J$.M(922129, J$.R(922105, 'jsprim', jsprim, false, true), 'rfc1123', false)(J$.F(922121, J$.I(typeof Date === 'undefined' ? Date = J$.R(922113, 'Date', undefined, true, true) : Date = J$.R(922113, 'Date', Date, true, true)), true)())));
                        } catch (J$e) {
                            J$.Ex(926417, J$e);
                        } finally {
                            if (J$.Fr(926425))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(922377, J$.G(922193, J$.R(922185, 'RequestSigner', RequestSigner, false, true), 'prototype'), 'writeTarget', J$.T(922369, function (method, path) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(922337, arguments.callee, this, arguments);
                            arguments = J$.N(922345, 'arguments', arguments, true, false, false);
                            method = J$.N(922353, 'method', method, true, false, false);
                            path = J$.N(922361, 'path', path, true, false, false);
                            J$.M(922225, J$.R(922201, 'assert', assert, false, true), 'string', false)(J$.R(922209, 'method', method, false, false), J$.T(922217, 'method', 21, false));
                            J$.M(922257, J$.R(922233, 'assert', assert, false, true), 'string', false)(J$.R(922241, 'path', path, false, false), J$.T(922249, 'path', 21, false));
                            method = J$.W(922281, 'method', J$.M(922273, J$.R(922265, 'method', method, false, false), 'toLowerCase', false)(), method, false, false);
                            J$.M(922329, J$.R(922289, 'this', this, false, false), 'writeHeader', false)(J$.T(922297, '(request-target)', 21, false), J$.B(147578, '+', J$.B(147570, '+', J$.R(922305, 'method', method, false, false), J$.T(922313, ' ', 21, false)), J$.R(922321, 'path', path, false, false)));
                        } catch (J$e) {
                            J$.Ex(926433, J$e);
                        } finally {
                            if (J$.Fr(926441))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(923433, J$.G(922393, J$.R(922385, 'RequestSigner', RequestSigner, false, true), 'prototype'), 'sign', J$.T(923425, function (cb) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(923353, arguments.callee, this, arguments);
                            arguments = J$.N(923361, 'arguments', arguments, true, false, false);
                            cb = J$.N(923369, 'cb', cb, true, false, false);
                            J$.N(923377, 'alg', alg, false, false, false);
                            J$.N(923385, 'authz', authz, false, false, false);
                            J$.N(923393, 'data', data, false, false, false);
                            J$.N(923401, 'self', self, false, false, false);
                            J$.N(923409, 'sigObj', sigObj, false, false, false);
                            J$.N(923417, 'signature', signature, false, false, false);
                            J$.M(922425, J$.R(922401, 'assert', assert, false, true), 'func', false)(J$.R(922409, 'cb', cb, false, false), J$.T(922417, 'callback', 21, false));
                            if (J$.C(55432, J$.B(147586, '<', J$.G(922449, J$.G(922441, J$.R(922433, 'this', this, false, false), 'rs_headers'), 'length'), J$.T(922457, 1, 22, false))))
                                throw J$.F(922481, J$.I(typeof Error === 'undefined' ? Error = J$.R(922465, 'Error', undefined, true, true) : Error = J$.R(922465, 'Error', Error, true, true)), true)(J$.T(922473, 'At least one header must be signed', 21, false));
                            var alg, authz;
                            if (J$.C(55456, J$.G(922497, J$.R(922489, 'this', this, false, false), 'rs_signFunc'))) {
                                var data = J$.W(922537, 'data', J$.M(922529, J$.G(922513, J$.R(922505, 'this', this, false, false), 'rs_lines'), 'join', false)(J$.T(922521, '\n', 21, false)), data, false, false);
                                var self = J$.W(922553, 'self', J$.R(922545, 'this', this, false, false), self, false, false);
                                J$.M(923033, J$.R(922561, 'this', this, false, false), 'rs_signFunc', false)(J$.R(922569, 'data', data, false, false), J$.T(923025, function (err, sig) {
                                    jalangiLabel11:
                                        while (true) {
                                            try {
                                                J$.Fe(922993, arguments.callee, this, arguments);
                                                arguments = J$.N(923001, 'arguments', arguments, true, false, false);
                                                err = J$.N(923009, 'err', err, true, false, false);
                                                sig = J$.N(923017, 'sig', sig, true, false, false);
                                                if (J$.C(55440, J$.R(922577, 'err', err, false, false))) {
                                                    J$.F(922601, J$.R(922585, 'cb', cb, false, false), false)(J$.R(922593, 'err', err, false, false));
                                                    return J$.Rt(922609, undefined);
                                                }
                                                try {
                                                    J$.M(922641, J$.R(922617, 'assert', assert, false, true), 'object', false)(J$.R(922625, 'sig', sig, false, false), J$.T(922633, 'signature', 21, false));
                                                    J$.M(922681, J$.R(922649, 'assert', assert, false, true), 'string', false)(J$.G(922665, J$.R(922657, 'sig', sig, false, false), 'keyId'), J$.T(922673, 'signature.keyId', 21, false));
                                                    J$.M(922721, J$.R(922689, 'assert', assert, false, true), 'string', false)(J$.G(922705, J$.R(922697, 'sig', sig, false, false), 'algorithm'), J$.T(922713, 'signature.algorithm', 21, false));
                                                    J$.M(922761, J$.R(922729, 'assert', assert, false, true), 'string', false)(J$.G(922745, J$.R(922737, 'sig', sig, false, false), 'signature'), J$.T(922753, 'signature.signature', 21, false));
                                                    alg = J$.W(922801, 'alg', J$.F(922793, J$.R(922769, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(922785, J$.R(922777, 'sig', sig, false, false), 'algorithm')), alg, false, false);
                                                    authz = J$.W(922913, 'authz', J$.F(922905, J$.R(922809, 'sprintf', sprintf, false, true), false)(J$.R(922817, 'AUTHZ_FMT', AUTHZ_FMT, false, true), J$.G(922833, J$.R(922825, 'sig', sig, false, false), 'keyId'), J$.G(922849, J$.R(922841, 'sig', sig, false, false), 'algorithm'), J$.M(922881, J$.G(922865, J$.R(922857, 'self', self, false, false), 'rs_headers'), 'join', false)(J$.T(922873, ' ', 21, false)), J$.G(922897, J$.R(922889, 'sig', sig, false, false), 'signature')), authz, false, false);
                                                } catch (e) {
                                                    J$.N(922953, 'e', e, false, false, true);
                                                    J$.F(922937, J$.R(922921, 'cb', cb, false, false), false)(J$.R(922929, 'e', e, false, false));
                                                    return J$.Rt(922945, undefined);
                                                }
                                                J$.F(922985, J$.R(922961, 'cb', cb, false, false), false)(J$.T(922969, null, 25, false), J$.R(922977, 'authz', authz, false, false));
                                            } catch (J$e) {
                                                J$.Ex(926449, J$e);
                                            } finally {
                                                if (J$.Fr(926457))
                                                    continue jalangiLabel11;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                try {
                                    var sigObj = J$.W(923065, 'sigObj', J$.M(923057, J$.G(923049, J$.R(923041, 'this', this, false, false), 'rs_signer'), 'sign', false)(), sigObj, false, false);
                                } catch (e) {
                                    J$.N(923105, 'e', e, false, false, true);
                                    J$.F(923089, J$.R(923073, 'cb', cb, false, false), false)(J$.R(923081, 'e', e, false, false));
                                    return J$.Rt(923097, undefined);
                                }
                                alg = J$.W(923193, 'alg', J$.B(147602, '+', J$.B(147594, '+', J$.C(55448, J$.G(923137, J$.G(923121, J$.R(923113, 'this', this, false, false), 'rs_alg'), J$.T(923129, 0, 22, false))) ? J$._() : J$.G(923161, J$.G(923153, J$.R(923145, 'this', this, false, false), 'rs_key'), 'type'), J$.T(923169, '-', 21, false)), J$.G(923185, J$.R(923177, 'sigObj', sigObj, false, false), 'hashAlgorithm')), alg, false, false);
                                var signature = J$.W(923217, 'signature', J$.M(923209, J$.R(923201, 'sigObj', sigObj, false, false), 'toString', false)(), signature, false, false);
                                authz = J$.W(923313, 'authz', J$.F(923305, J$.R(923225, 'sprintf', sprintf, false, true), false)(J$.R(923233, 'AUTHZ_FMT', AUTHZ_FMT, false, true), J$.G(923249, J$.R(923241, 'this', this, false, false), 'rs_keyId'), J$.R(923257, 'alg', alg, false, false), J$.M(923289, J$.G(923273, J$.R(923265, 'this', this, false, false), 'rs_headers'), 'join', false)(J$.T(923281, ' ', 21, false)), J$.R(923297, 'signature', signature, false, false)), authz, false, false);
                                J$.F(923345, J$.R(923321, 'cb', cb, false, false), false)(J$.T(923329, null, 25, false), J$.R(923337, 'authz', authz, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(926465, J$e);
                        } finally {
                            if (J$.Fr(926473))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(926081, J$.I(typeof module === 'undefined' ? module = J$.R(923441, 'module', undefined, true, true) : module = J$.R(923441, 'module', module, true, true)), 'exports', J$.T(926073, {
                isSigner: J$.T(923553, function isSigner(obj) {
                    jalangiLabel13:
                        while (true) {
                            try {
                                J$.Fe(923529, arguments.callee, this, arguments);
                                arguments = J$.N(923537, 'arguments', arguments, true, false, false);
                                obj = J$.N(923545, 'obj', obj, true, false, false);
                                if (J$.C(55472, J$.C(55464, J$.B(147610, '===', J$.F(923465, J$.R(923449, '_typeof', _typeof, false, true), false)(J$.R(923457, 'obj', obj, false, false)), J$.T(923473, 'object', 21, false))) ? J$.B(147618, 'instanceof', J$.R(923481, 'obj', obj, false, false), J$.R(923489, 'RequestSigner', RequestSigner, false, true)) : J$._()))
                                    return J$.Rt(923505, J$.T(923497, true, 23, false));
                                return J$.Rt(923521, J$.T(923513, false, 23, false));
                            } catch (J$e) {
                                J$.Ex(926481, J$e);
                            } finally {
                                if (J$.Fr(926489))
                                    continue jalangiLabel13;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                createSigner: J$.T(923617, function createSigner(options) {
                    jalangiLabel14:
                        while (true) {
                            try {
                                J$.Fe(923593, arguments.callee, this, arguments);
                                arguments = J$.N(923601, 'arguments', arguments, true, false, false);
                                options = J$.N(923609, 'options', options, true, false, false);
                                return J$.Rt(923585, J$.F(923577, J$.R(923561, 'RequestSigner', RequestSigner, false, true), true)(J$.R(923569, 'options', options, false, false)));
                            } catch (J$e) {
                                J$.Ex(926497, J$e);
                            } finally {
                                if (J$.Fr(926505))
                                    continue jalangiLabel14;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                signRequest: J$.T(926065, function signRequest(request, options) {
                    jalangiLabel15:
                        while (true) {
                            try {
                                J$.Fe(925945, arguments.callee, this, arguments);
                                arguments = J$.N(925953, 'arguments', arguments, true, false, false);
                                request = J$.N(925961, 'request', request, true, false, false);
                                options = J$.N(925969, 'options', options, true, false, false);
                                J$.N(925977, 'alg', alg, false, false, false);
                                J$.N(925985, 'i', i, false, false, false);
                                J$.N(925993, 'stringToSign', stringToSign, false, false, false);
                                J$.N(926001, 'h', h, false, false, false);
                                J$.N(926009, 'value', value, false, false, false);
                                J$.N(926017, 'signature', signature, false, false, false);
                                J$.N(926025, 'hmac', hmac, false, false, false);
                                J$.N(926033, 'key', key, false, false, false);
                                J$.N(926041, 'signer', signer, false, false, false);
                                J$.N(926049, 'sigObj', sigObj, false, false, false);
                                J$.N(926057, 'authzHeaderName', authzHeaderName, false, false, false);
                                J$.M(923649, J$.R(923625, 'assert', assert, false, true), 'object', false)(J$.R(923633, 'request', request, false, false), J$.T(923641, 'request', 21, false));
                                J$.M(923681, J$.R(923657, 'assert', assert, false, true), 'object', false)(J$.R(923665, 'options', options, false, false), J$.T(923673, 'options', 21, false));
                                J$.M(923721, J$.R(923689, 'assert', assert, false, true), 'optionalString', false)(J$.G(923705, J$.R(923697, 'options', options, false, false), 'algorithm'), J$.T(923713, 'options.algorithm', 21, false));
                                J$.M(923761, J$.R(923729, 'assert', assert, false, true), 'string', false)(J$.G(923745, J$.R(923737, 'options', options, false, false), 'keyId'), J$.T(923753, 'options.keyId', 21, false));
                                J$.M(923801, J$.R(923769, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(923785, J$.R(923777, 'options', options, false, false), 'headers'), J$.T(923793, 'options.headers', 21, false));
                                J$.M(923841, J$.R(923809, 'assert', assert, false, true), 'optionalString', false)(J$.G(923825, J$.R(923817, 'options', options, false, false), 'httpVersion'), J$.T(923833, 'options.httpVersion', 21, false));
                                if (J$.C(55480, J$.U(147626, '!', J$.M(923865, J$.R(923849, 'request', request, false, false), 'getHeader', false)(J$.T(923857, 'Date', 21, false)))))
                                    J$.M(923921, J$.R(923873, 'request', request, false, false), 'setHeader', false)(J$.T(923881, 'Date', 21, false), J$.M(923913, J$.R(923889, 'jsprim', jsprim, false, true), 'rfc1123', false)(J$.F(923905, J$.I(typeof Date === 'undefined' ? Date = J$.R(923897, 'Date', undefined, true, true) : Date = J$.R(923897, 'Date', Date, true, true)), true)()));
                                if (J$.C(55488, J$.U(147634, '!', J$.G(923937, J$.R(923929, 'options', options, false, false), 'headers'))))
                                    J$.P(923969, J$.R(923945, 'options', options, false, false), 'headers', J$.T(923961, [J$.T(923953, 'date', 21, false)], 10, false));
                                if (J$.C(55496, J$.U(147642, '!', J$.G(923985, J$.R(923977, 'options', options, false, false), 'httpVersion'))))
                                    J$.P(924009, J$.R(923993, 'options', options, false, false), 'httpVersion', J$.T(924001, '1.1', 21, false));
                                var alg = J$.W(924025, 'alg', J$.T(924017, [], 10, false), alg, false, false);
                                if (J$.C(55504, J$.G(924041, J$.R(924033, 'options', options, false, false), 'algorithm'))) {
                                    J$.P(924081, J$.R(924049, 'options', options, false, false), 'algorithm', J$.M(924073, J$.G(924065, J$.R(924057, 'options', options, false, false), 'algorithm'), 'toLowerCase', false)());
                                    alg = J$.W(924121, 'alg', J$.F(924113, J$.R(924089, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(924105, J$.R(924097, 'options', options, false, false), 'algorithm')), alg, false, false);
                                }
                                var i;
                                var stringToSign = J$.W(924137, 'stringToSign', J$.T(924129, '', 21, false), stringToSign, false, false);
                                for (i = J$.W(924153, 'i', J$.T(924145, 0, 22, false), i, false, false); J$.C(55568, J$.B(147650, '<', J$.R(924161, 'i', i, false, false), J$.G(924185, J$.G(924177, J$.R(924169, 'options', options, false, false), 'headers'), 'length'))); J$.B(147674, '-', i = J$.W(924201, 'i', J$.B(147666, '+', J$.U(147658, '+', J$.R(924193, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    if (J$.C(55512, J$.B(147690, '!==', J$.U(147682, 'typeof', J$.G(924233, J$.G(924217, J$.R(924209, 'options', options, false, false), 'headers'), J$.R(924225, 'i', i, false, false))), J$.T(924241, 'string', 21, false))))
                                        throw J$.F(924265, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(924249, 'TypeError', undefined, true, true) : TypeError = J$.R(924249, 'TypeError', TypeError, true, true)), true)(J$.T(924257, 'options.headers must be an array of Strings', 21, false));
                                    var h = J$.W(924313, 'h', J$.M(924305, J$.G(924297, J$.G(924281, J$.R(924273, 'options', options, false, false), 'headers'), J$.R(924289, 'i', i, false, false)), 'toLowerCase', false)(), h, false, false);
                                    if (J$.C(55552, J$.B(147698, '===', J$.R(924321, 'h', h, false, false), J$.T(924329, 'request-line', 21, false)))) {
                                        if (J$.C(55520, J$.U(147706, '!', J$.G(924345, J$.R(924337, 'options', options, false, false), 'strict')))) {
                                            stringToSign = J$.W(924425, 'stringToSign', J$.B(147746, '+', J$.R(924417, 'stringToSign', stringToSign, false, false), J$.B(147738, '+', J$.B(147730, '+', J$.B(147722, '+', J$.B(147714, '+', J$.G(924361, J$.R(924353, 'request', request, false, false), 'method'), J$.T(924369, ' ', 21, false)), J$.G(924385, J$.R(924377, 'request', request, false, false), 'path')), J$.T(924393, ' HTTP/', 21, false)), J$.G(924409, J$.R(924401, 'options', options, false, false), 'httpVersion'))), stringToSign, false, false);
                                        } else {
                                            throw J$.F(924457, J$.R(924433, 'StrictParsingError', StrictParsingError, false, true), true)(J$.B(147754, '+', J$.T(924441, 'request-line is not a valid header ', 21, false), J$.T(924449, 'with strict parsing enabled.', 21, false)));
                                        }
                                    } else if (J$.C(55544, J$.B(147762, '===', J$.R(924465, 'h', h, false, false), J$.T(924473, '(request-target)', 21, false)))) {
                                        stringToSign = J$.W(924545, 'stringToSign', J$.B(147794, '+', J$.R(924537, 'stringToSign', stringToSign, false, false), J$.B(147786, '+', J$.B(147778, '+', J$.B(147770, '+', J$.T(924481, '(request-target): ', 21, false), J$.M(924505, J$.G(924497, J$.R(924489, 'request', request, false, false), 'method'), 'toLowerCase', false)()), J$.T(924513, ' ', 21, false)), J$.G(924529, J$.R(924521, 'request', request, false, false), 'path'))), stringToSign, false, false);
                                    } else {
                                        var value = J$.W(924577, 'value', J$.M(924569, J$.R(924553, 'request', request, false, false), 'getHeader', false)(J$.R(924561, 'h', h, false, false)), value, false, false);
                                        if (J$.C(55536, J$.C(55528, J$.B(147802, '===', J$.R(924585, 'value', value, false, false), J$.T(924593, undefined, 24, false))) ? J$._() : J$.B(147810, '===', J$.R(924601, 'value', value, false, false), J$.T(924609, '', 21, false)))) {
                                            throw J$.F(924641, J$.R(924617, 'MissingHeaderError', MissingHeaderError, false, true), true)(J$.B(147818, '+', J$.R(924625, 'h', h, false, false), J$.T(924633, ' was not in the request', 21, false)));
                                        }
                                        stringToSign = J$.W(924681, 'stringToSign', J$.B(147842, '+', J$.R(924673, 'stringToSign', stringToSign, false, false), J$.B(147834, '+', J$.B(147826, '+', J$.R(924649, 'h', h, false, false), J$.T(924657, ': ', 21, false)), J$.R(924665, 'value', value, false, false))), stringToSign, false, false);
                                    }
                                    if (J$.C(55560, J$.B(147858, '<', J$.B(147850, '+', J$.R(924689, 'i', i, false, false), J$.T(924697, 1, 22, false)), J$.G(924721, J$.G(924713, J$.R(924705, 'options', options, false, false), 'headers'), 'length'))))
                                        stringToSign = J$.W(924745, 'stringToSign', J$.B(147866, '+', J$.R(924737, 'stringToSign', stringToSign, false, false), J$.T(924729, '\n', 21, false)), stringToSign, false, false);
                                }
                                if (J$.C(55576, J$.M(924769, J$.R(924753, 'request', request, false, false), 'hasOwnProperty', false)(J$.T(924761, '_stringToSign', 21, false)))) {
                                    J$.P(924793, J$.R(924777, 'request', request, false, false), '_stringToSign', J$.R(924785, 'stringToSign', stringToSign, false, false));
                                }
                                var signature;
                                if (J$.C(55648, J$.B(147874, '===', J$.G(924817, J$.R(924801, 'alg', alg, false, false), J$.T(924809, 0, 22, false)), J$.T(924825, 'hmac', 21, false)))) {
                                    if (J$.C(55592, J$.C(55584, J$.B(147890, '!==', J$.U(147882, 'typeof', J$.G(924841, J$.R(924833, 'options', options, false, false), 'key')), J$.T(924849, 'string', 21, false))) ? J$.U(147898, '!', J$.M(924881, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(924857, 'Buffer', undefined, true, true) : Buffer = J$.R(924857, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.G(924873, J$.R(924865, 'options', options, false, false), 'key'))) : J$._()))
                                        throw J$.F(924905, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(924889, 'TypeError', undefined, true, true) : TypeError = J$.R(924889, 'TypeError', TypeError, true, true)), true)(J$.T(924897, 'options.key must be a string or Buffer', 21, false));
                                    var hmac = J$.W(924977, 'hmac', J$.M(924969, J$.R(924913, 'crypto', crypto, false, true), 'createHmac', false)(J$.M(924945, J$.G(924937, J$.R(924921, 'alg', alg, false, false), J$.T(924929, 1, 22, false)), 'toUpperCase', false)(), J$.G(924961, J$.R(924953, 'options', options, false, false), 'key')), hmac, false, false);
                                    J$.M(925001, J$.R(924985, 'hmac', hmac, false, false), 'update', false)(J$.R(924993, 'stringToSign', stringToSign, false, false));
                                    signature = J$.W(925033, 'signature', J$.M(925025, J$.R(925009, 'hmac', hmac, false, false), 'digest', false)(J$.T(925017, 'base64', 21, false)), signature, false, false);
                                } else {
                                    var key = J$.W(925057, 'key', J$.G(925049, J$.R(925041, 'options', options, false, false), 'key'), key, false, false);
                                    if (J$.C(55608, J$.C(55600, J$.B(147914, '===', J$.U(147906, 'typeof', J$.R(925065, 'key', key, false, false)), J$.T(925073, 'string', 21, false))) ? J$._() : J$.M(925097, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(925081, 'Buffer', undefined, true, true) : Buffer = J$.R(925081, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(925089, 'key', key, false, false))))
                                        key = J$.W(925137, 'key', J$.M(925129, J$.R(925105, 'sshpk', sshpk, false, true), 'parsePrivateKey', false)(J$.G(925121, J$.R(925113, 'options', options, false, false), 'key')), key, false, false);
                                    J$.M(925217, J$.R(925145, 'assert', assert, false, true), 'ok', false)(J$.M(925201, J$.G(925161, J$.R(925153, 'sshpk', sshpk, false, true), 'PrivateKey'), 'isPrivateKey', false)(J$.R(925169, 'key', key, false, false), J$.T(925193, [
                                        J$.T(925177, 1, 22, false),
                                        J$.T(925185, 2, 22, false)
                                    ], 10, false)), J$.T(925209, 'options.key must be a sshpk.PrivateKey', 21, false));
                                    if (J$.C(55616, J$.U(147922, '!', J$.G(925249, J$.R(925225, 'PK_ALGOS', PK_ALGOS, false, true), J$.G(925241, J$.R(925233, 'key', key, false, false), 'type'))))) {
                                        throw J$.F(925305, J$.R(925257, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(147938, '+', J$.B(147930, '+', J$.M(925281, J$.G(925273, J$.R(925265, 'key', key, false, false), 'type'), 'toUpperCase', false)(), J$.T(925289, ' type ', 21, false)), J$.T(925297, 'keys are not supported', 21, false)));
                                    }
                                    if (J$.C(55632, J$.C(55624, J$.B(147946, '!==', J$.G(925329, J$.R(925313, 'alg', alg, false, false), J$.T(925321, 0, 22, false)), J$.T(925337, undefined, 24, false))) ? J$.B(147954, '!==', J$.G(925353, J$.R(925345, 'key', key, false, false), 'type'), J$.G(925377, J$.R(925361, 'alg', alg, false, false), J$.T(925369, 0, 22, false))) : J$._())) {
                                        throw J$.F(925473, J$.R(925385, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(147986, '+', J$.B(147978, '+', J$.B(147970, '+', J$.B(147962, '+', J$.T(925393, 'options.key must be a ', 21, false), J$.M(925425, J$.G(925417, J$.R(925401, 'alg', alg, false, false), J$.T(925409, 0, 22, false)), 'toUpperCase', false)()), J$.T(925433, ' key, was given a ', 21, false)), J$.M(925457, J$.G(925449, J$.R(925441, 'key', key, false, false), 'type'), 'toUpperCase', false)()), J$.T(925465, ' key instead', 21, false)));
                                    }
                                    var signer = J$.W(925521, 'signer', J$.M(925513, J$.R(925481, 'key', key, false, false), 'createSign', false)(J$.G(925505, J$.R(925489, 'alg', alg, false, false), J$.T(925497, 1, 22, false))), signer, false, false);
                                    J$.M(925545, J$.R(925529, 'signer', signer, false, false), 'update', false)(J$.R(925537, 'stringToSign', stringToSign, false, false));
                                    var sigObj = J$.W(925569, 'sigObj', J$.M(925561, J$.R(925553, 'signer', signer, false, false), 'sign', false)(), sigObj, false, false);
                                    if (J$.C(55640, J$.U(147994, '!', J$.G(925601, J$.R(925577, 'HASH_ALGOS', HASH_ALGOS, false, true), J$.G(925593, J$.R(925585, 'sigObj', sigObj, false, false), 'hashAlgorithm'))))) {
                                        throw J$.F(925649, J$.R(925609, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(148002, '+', J$.M(925633, J$.G(925625, J$.R(925617, 'sigObj', sigObj, false, false), 'hashAlgorithm'), 'toUpperCase', false)(), J$.T(925641, ' is not a supported hash algorithm', 21, false)));
                                    }
                                    J$.P(925705, J$.R(925657, 'options', options, false, false), 'algorithm', J$.B(148018, '+', J$.B(148010, '+', J$.G(925673, J$.R(925665, 'key', key, false, false), 'type'), J$.T(925681, '-', 21, false)), J$.G(925697, J$.R(925689, 'sigObj', sigObj, false, false), 'hashAlgorithm')));
                                    signature = J$.W(925729, 'signature', J$.M(925721, J$.R(925713, 'sigObj', sigObj, false, false), 'toString', false)(), signature, false, false);
                                    J$.M(925769, J$.R(925737, 'assert', assert, false, true), 'notStrictEqual', false)(J$.R(925745, 'signature', signature, false, false), J$.T(925753, '', 21, false), J$.T(925761, 'empty signature produced', 21, false));
                                }
                                var authzHeaderName = J$.W(925801, 'authzHeaderName', J$.C(55656, J$.G(925785, J$.R(925777, 'options', options, false, false), 'authorizationHeaderName')) ? J$._() : J$.T(925793, 'Authorization', 21, false), authzHeaderName, false, false);
                                J$.M(925921, J$.R(925809, 'request', request, false, false), 'setHeader', false)(J$.R(925817, 'authzHeaderName', authzHeaderName, false, false), J$.F(925913, J$.R(925825, 'sprintf', sprintf, false, true), false)(J$.R(925833, 'AUTHZ_FMT', AUTHZ_FMT, false, true), J$.G(925849, J$.R(925841, 'options', options, false, false), 'keyId'), J$.G(925865, J$.R(925857, 'options', options, false, false), 'algorithm'), J$.M(925897, J$.G(925881, J$.R(925873, 'options', options, false, false), 'headers'), 'join', false)(J$.T(925889, ' ', 21, false)), J$.R(925905, 'signature', signature, false, false)));
                                return J$.Rt(925937, J$.T(925929, true, 23, false));
                            } catch (J$e) {
                                J$.Ex(926513, J$e);
                            } finally {
                                if (J$.Fr(926521))
                                    continue jalangiLabel15;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(926529, J$e);
        } finally {
            if (J$.Sr(926537))
                continue jalangiLabel16;
            else
                break jalangiLabel16;
        }
    }
// JALANGI DO NOT INSTRUMENT

