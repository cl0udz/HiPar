J$.noInstrEval = false;
jalangiLabel44:
    while (true) {
        try {
            J$.Se(849569, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/dashdash/lib/dashdash.js');
            function renderTemplate(s, d) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(832649, arguments.callee, this, arguments);
                            arguments = J$.N(832657, 'arguments', arguments, true, false, false);
                            s = J$.N(832665, 's', s, true, false, false);
                            d = J$.N(832673, 'd', d, true, false, false);
                            return J$.Rt(832641, J$.M(832633, J$.R(832513, 's', s, false, false), 'replace', false)(J$.T(832521, /{{([a-zA-Z]+)}}/g, 14, false), J$.T(832625, function (match, key) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(832593, arguments.callee, this, arguments);
                                            arguments = J$.N(832601, 'arguments', arguments, true, false, false);
                                            match = J$.N(832609, 'match', match, true, false, false);
                                            key = J$.N(832617, 'key', key, true, false, false);
                                            return J$.Rt(832585, J$.C(50584, J$.M(832545, J$.R(832529, 'd', d, false, false), 'hasOwnProperty', false)(J$.R(832537, 'key', key, false, false))) ? J$.G(832569, J$.R(832553, 'd', d, false, false), J$.R(832561, 'key', key, false, false)) : J$.R(832577, 'match', match, false, false));
                                        } catch (J$e) {
                                            J$.Ex(849977, J$e);
                                        } finally {
                                            if (J$.Fr(849985))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(849993, J$e);
                        } finally {
                            if (J$.Fr(850001))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function shallowCopy(obj) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(832849, arguments.callee, this, arguments);
                            arguments = J$.N(832857, 'arguments', arguments, true, false, false);
                            obj = J$.N(832865, 'obj', obj, true, false, false);
                            J$.N(832873, 'copy', copy, false, false, false);
                            if (J$.C(50592, J$.U(141474, '!', J$.R(832681, 'obj', obj, false, false)))) {
                                return J$.Rt(832697, J$.R(832689, 'obj', obj, false, false));
                            }
                            var copy = J$.W(832713, 'copy', J$.T(832705, {}, 11, false), copy, false, false);
                            J$.M(832825, J$.M(832737, J$.I(typeof Object === 'undefined' ? Object = J$.R(832721, 'Object', undefined, true, true) : Object = J$.R(832721, 'Object', Object, true, true)), 'keys', false)(J$.R(832729, 'obj', obj, false, false)), 'forEach', false)(J$.T(832817, function (k) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(832793, arguments.callee, this, arguments);
                                            arguments = J$.N(832801, 'arguments', arguments, true, false, false);
                                            k = J$.N(832809, 'k', k, true, false, false);
                                            J$.P(832785, J$.R(832745, 'copy', copy, false, false), J$.R(832753, 'k', k, false, false), J$.G(832777, J$.R(832761, 'obj', obj, false, false), J$.R(832769, 'k', k, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(850009, J$e);
                                        } finally {
                                            if (J$.Fr(850017))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(832841, J$.R(832833, 'copy', copy, false, false));
                        } catch (J$e) {
                            J$.Ex(850025, J$e);
                        } finally {
                            if (J$.Fr(850033))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function space(n) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(832985, arguments.callee, this, arguments);
                            arguments = J$.N(832993, 'arguments', arguments, true, false, false);
                            n = J$.N(833001, 'n', n, true, false, false);
                            J$.N(833009, 's', s, false, false, false);
                            J$.N(833017, 'i', i, false, false, false);
                            var s = J$.W(832889, 's', J$.T(832881, '', 21, false), s, false, false);
                            for (var i = J$.W(832905, 'i', J$.T(832897, 0, 22, false), i, false, false); J$.C(50600, J$.B(141482, '<', J$.R(832913, 'i', i, false, false), J$.R(832921, 'n', n, false, false))); J$.B(141506, '-', i = J$.W(832937, 'i', J$.B(141498, '+', J$.U(141490, '+', J$.R(832929, 'i', i, false, false)), 1), i, false, false), 1)) {
                                s = J$.W(832961, 's', J$.B(141514, '+', J$.R(832953, 's', s, false, false), J$.T(832945, ' ', 21, false)), s, false, false);
                            }
                            return J$.Rt(832977, J$.R(832969, 's', s, false, false));
                        } catch (J$e) {
                            J$.Ex(850041, J$e);
                        } finally {
                            if (J$.Fr(850049))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function makeIndent(arg, deflen, name) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(833217, arguments.callee, this, arguments);
                            arguments = J$.N(833225, 'arguments', arguments, true, false, false);
                            arg = J$.N(833233, 'arg', arg, true, false, false);
                            deflen = J$.N(833241, 'deflen', deflen, true, false, false);
                            name = J$.N(833249, 'name', name, true, false, false);
                            if (J$.C(50632, J$.C(50608, J$.B(141522, '===', J$.R(833025, 'arg', arg, false, false), J$.T(833033, null, 25, false))) ? J$._() : J$.B(141530, '===', J$.R(833041, 'arg', arg, false, false), J$.T(833049, undefined, 24, false))))
                                return J$.Rt(833081, J$.F(833073, J$.R(833057, 'space', space, false, true), false)(J$.R(833065, 'deflen', deflen, false, false)));
                            else if (J$.C(50624, J$.B(141546, '===', J$.U(141538, 'typeof', J$.R(833089, 'arg', arg, false, false)), J$.T(833097, 'number', 21, false))))
                                return J$.Rt(833129, J$.F(833121, J$.R(833105, 'space', space, false, true), false)(J$.R(833113, 'arg', arg, false, false)));
                            else if (J$.C(50616, J$.B(141562, '===', J$.U(141554, 'typeof', J$.R(833137, 'arg', arg, false, false)), J$.T(833145, 'string', 21, false))))
                                return J$.Rt(833161, J$.R(833153, 'arg', arg, false, false));
                            else
                                J$.M(833209, J$.R(833169, 'assert', assert, false, true), 'fail', false)(J$.B(141586, '+', J$.B(141578, '+', J$.B(141570, '+', J$.T(833177, 'invalid "', 21, false), J$.R(833185, 'name', name, false, false)), J$.T(833193, '": not a string or number: ', 21, false)), J$.R(833201, 'arg', arg, false, false)));
                        } catch (J$e) {
                            J$.Ex(850057, J$e);
                        } finally {
                            if (J$.Fr(850065))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function textwrap(s, width) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(833641, arguments.callee, this, arguments);
                            arguments = J$.N(833649, 'arguments', arguments, true, false, false);
                            s = J$.N(833657, 's', s, true, false, false);
                            width = J$.N(833665, 'width', width, true, false, false);
                            J$.N(833673, 'words', words, false, false, false);
                            J$.N(833681, 'lines', lines, false, false, false);
                            J$.N(833689, 'line', line, false, false, false);
                            var words = J$.W(833289, 'words', J$.M(833281, J$.M(833265, J$.R(833257, 's', s, false, false), 'trim', false)(), 'split', false)(J$.T(833273, /\s+/, 14, false)), words, false, false);
                            var lines = J$.W(833305, 'lines', J$.T(833297, [], 10, false), lines, false, false);
                            var line = J$.W(833321, 'line', J$.T(833313, '', 21, false), line, false, false);
                            J$.M(833593, J$.R(833329, 'words', words, false, false), 'forEach', false)(J$.T(833585, function (w) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(833553, arguments.callee, this, arguments);
                                            arguments = J$.N(833561, 'arguments', arguments, true, false, false);
                                            w = J$.N(833569, 'w', w, true, false, false);
                                            J$.N(833577, 'newLength', newLength, false, false, false);
                                            var newLength = J$.W(833369, 'newLength', J$.B(141594, '+', J$.G(833345, J$.R(833337, 'line', line, false, false), 'length'), J$.G(833361, J$.R(833353, 'w', w, false, false), 'length')), newLength, false, false);
                                            if (J$.C(50640, J$.B(141602, '>', J$.G(833385, J$.R(833377, 'line', line, false, false), 'length'), J$.T(833393, 0, 22, false))))
                                                newLength = J$.W(833417, 'newLength', J$.B(141610, '+', J$.R(833409, 'newLength', newLength, false, false), J$.T(833401, 1, 22, false)), newLength, false, false);
                                            if (J$.C(50648, J$.B(141618, '>', J$.R(833425, 'newLength', newLength, false, false), J$.R(833433, 'width', width, false, false)))) {
                                                J$.M(833457, J$.R(833441, 'lines', lines, false, false), 'push', false)(J$.R(833449, 'line', line, false, false));
                                                line = J$.W(833473, 'line', J$.T(833465, '', 21, false), line, false, false);
                                            }
                                            if (J$.C(50656, J$.B(141626, '>', J$.G(833489, J$.R(833481, 'line', line, false, false), 'length'), J$.T(833497, 0, 22, false))))
                                                line = J$.W(833521, 'line', J$.B(141634, '+', J$.R(833513, 'line', line, false, false), J$.T(833505, ' ', 21, false)), line, false, false);
                                            line = J$.W(833545, 'line', J$.B(141642, '+', J$.R(833537, 'line', line, false, false), J$.R(833529, 'w', w, false, false)), line, false, false);
                                        } catch (J$e) {
                                            J$.Ex(850073, J$e);
                                        } finally {
                                            if (J$.Fr(850081))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(833617, J$.R(833601, 'lines', lines, false, false), 'push', false)(J$.R(833609, 'line', line, false, false));
                            return J$.Rt(833633, J$.R(833625, 'lines', lines, false, false));
                        } catch (J$e) {
                            J$.Ex(850089, J$e);
                        } finally {
                            if (J$.Fr(850097))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function optionKeyFromName(name) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(833737, arguments.callee, this, arguments);
                            arguments = J$.N(833745, 'arguments', arguments, true, false, false);
                            name = J$.N(833753, 'name', name, true, false, false);
                            return J$.Rt(833729, J$.M(833721, J$.R(833697, 'name', name, false, false), 'replace', false)(J$.T(833705, /-/g, 14, false), J$.T(833713, '_', 21, false)));
                        } catch (J$e) {
                            J$.Ex(850105, J$e);
                        } finally {
                            if (J$.Fr(850113))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseBool(option, optstr, arg) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(833793, arguments.callee, this, arguments);
                            arguments = J$.N(833801, 'arguments', arguments, true, false, false);
                            option = J$.N(833809, 'option', option, true, false, false);
                            optstr = J$.N(833817, 'optstr', optstr, true, false, false);
                            arg = J$.N(833825, 'arg', arg, true, false, false);
                            return J$.Rt(833785, J$.F(833777, J$.I(typeof Boolean === 'undefined' ? Boolean = J$.R(833761, 'Boolean', undefined, true, true) : Boolean = J$.R(833761, 'Boolean', Boolean, true, true)), false)(J$.R(833769, 'arg', arg, false, false)));
                        } catch (J$e) {
                            J$.Ex(850121, J$e);
                        } finally {
                            if (J$.Fr(850129))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseString(option, optstr, arg) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(833881, arguments.callee, this, arguments);
                            arguments = J$.N(833889, 'arguments', arguments, true, false, false);
                            option = J$.N(833897, 'option', option, true, false, false);
                            optstr = J$.N(833905, 'optstr', optstr, true, false, false);
                            arg = J$.N(833913, 'arg', arg, true, false, false);
                            J$.M(833857, J$.R(833833, 'assert', assert, false, true), 'string', false)(J$.R(833841, 'arg', arg, false, false), J$.T(833849, 'arg', 21, false));
                            return J$.Rt(833873, J$.R(833865, 'arg', arg, false, false));
                        } catch (J$e) {
                            J$.Ex(850137, J$e);
                        } finally {
                            if (J$.Fr(850145))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseNumber(option, optstr, arg) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(834081, arguments.callee, this, arguments);
                            arguments = J$.N(834089, 'arguments', arguments, true, false, false);
                            option = J$.N(834097, 'option', option, true, false, false);
                            optstr = J$.N(834105, 'optstr', optstr, true, false, false);
                            arg = J$.N(834113, 'arg', arg, true, false, false);
                            J$.N(834121, 'num', num, false, false, false);
                            J$.M(833945, J$.R(833921, 'assert', assert, false, true), 'string', false)(J$.R(833929, 'arg', arg, false, false), J$.T(833937, 'arg', 21, false));
                            var num = J$.W(833977, 'num', J$.F(833969, J$.I(typeof Number === 'undefined' ? Number = J$.R(833953, 'Number', undefined, true, true) : Number = J$.R(833953, 'Number', Number, true, true)), false)(J$.R(833961, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(50664, J$.F(834001, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(833985, 'isNaN', undefined, true, true) : isNaN = J$.R(833985, 'isNaN', isNaN, true, true)), false)(J$.R(833993, 'num', num, false, false)))) {
                                throw J$.F(834057, J$.I(typeof Error === 'undefined' ? Error = J$.R(834009, 'Error', undefined, true, true) : Error = J$.R(834009, 'Error', Error, true, true)), true)(J$.F(834049, J$.R(834017, 'format', format, false, true), false)(J$.T(834025, 'arg for "%s" is not a number: "%s"', 21, false), J$.R(834033, 'optstr', optstr, false, false), J$.R(834041, 'arg', arg, false, false)));
                            }
                            return J$.Rt(834073, J$.R(834065, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(850153, J$e);
                        } finally {
                            if (J$.Fr(850161))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseInteger(option, optstr, arg) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(834313, arguments.callee, this, arguments);
                            arguments = J$.N(834321, 'arguments', arguments, true, false, false);
                            option = J$.N(834329, 'option', option, true, false, false);
                            optstr = J$.N(834337, 'optstr', optstr, true, false, false);
                            arg = J$.N(834345, 'arg', arg, true, false, false);
                            J$.N(834353, 'num', num, false, false, false);
                            J$.M(834153, J$.R(834129, 'assert', assert, false, true), 'string', false)(J$.R(834137, 'arg', arg, false, false), J$.T(834145, 'arg', 21, false));
                            var num = J$.W(834185, 'num', J$.F(834177, J$.I(typeof Number === 'undefined' ? Number = J$.R(834161, 'Number', undefined, true, true) : Number = J$.R(834161, 'Number', Number, true, true)), false)(J$.R(834169, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(50680, J$.C(50672, J$.U(141650, '!', J$.M(834209, J$.T(834193, /^[0-9-]+$/, 14, false), 'test', false)(J$.R(834201, 'arg', arg, false, false)))) ? J$._() : J$.F(834233, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(834217, 'isNaN', undefined, true, true) : isNaN = J$.R(834217, 'isNaN', isNaN, true, true)), false)(J$.R(834225, 'num', num, false, false)))) {
                                throw J$.F(834289, J$.I(typeof Error === 'undefined' ? Error = J$.R(834241, 'Error', undefined, true, true) : Error = J$.R(834241, 'Error', Error, true, true)), true)(J$.F(834281, J$.R(834249, 'format', format, false, true), false)(J$.T(834257, 'arg for "%s" is not an integer: "%s"', 21, false), J$.R(834265, 'optstr', optstr, false, false), J$.R(834273, 'arg', arg, false, false)));
                            }
                            return J$.Rt(834305, J$.R(834297, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(850169, J$e);
                        } finally {
                            if (J$.Fr(850177))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parsePositiveInteger(option, optstr, arg) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(834561, arguments.callee, this, arguments);
                            arguments = J$.N(834569, 'arguments', arguments, true, false, false);
                            option = J$.N(834577, 'option', option, true, false, false);
                            optstr = J$.N(834585, 'optstr', optstr, true, false, false);
                            arg = J$.N(834593, 'arg', arg, true, false, false);
                            J$.N(834601, 'num', num, false, false, false);
                            J$.M(834385, J$.R(834361, 'assert', assert, false, true), 'string', false)(J$.R(834369, 'arg', arg, false, false), J$.T(834377, 'arg', 21, false));
                            var num = J$.W(834417, 'num', J$.F(834409, J$.I(typeof Number === 'undefined' ? Number = J$.R(834393, 'Number', undefined, true, true) : Number = J$.R(834393, 'Number', Number, true, true)), false)(J$.R(834401, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(50704, J$.C(50696, J$.C(50688, J$.U(141658, '!', J$.M(834441, J$.T(834425, /^[0-9]+$/, 14, false), 'test', false)(J$.R(834433, 'arg', arg, false, false)))) ? J$._() : J$.F(834465, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(834449, 'isNaN', undefined, true, true) : isNaN = J$.R(834449, 'isNaN', isNaN, true, true)), false)(J$.R(834457, 'num', num, false, false))) ? J$._() : J$.B(141666, '===', J$.R(834473, 'num', num, false, false), J$.T(834481, 0, 22, false)))) {
                                throw J$.F(834537, J$.I(typeof Error === 'undefined' ? Error = J$.R(834489, 'Error', undefined, true, true) : Error = J$.R(834489, 'Error', Error, true, true)), true)(J$.F(834529, J$.R(834497, 'format', format, false, true), false)(J$.T(834505, 'arg for "%s" is not a positive integer: "%s"', 21, false), J$.R(834513, 'optstr', optstr, false, false), J$.R(834521, 'arg', arg, false, false)));
                            }
                            return J$.Rt(834553, J$.R(834545, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(850185, J$e);
                        } finally {
                            if (J$.Fr(850193))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseDate(option, optstr, arg) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(834929, arguments.callee, this, arguments);
                            arguments = J$.N(834937, 'arguments', arguments, true, false, false);
                            option = J$.N(834945, 'option', option, true, false, false);
                            optstr = J$.N(834953, 'optstr', optstr, true, false, false);
                            arg = J$.N(834961, 'arg', arg, true, false, false);
                            J$.N(834969, 'date', date, false, false, false);
                            J$.M(834633, J$.R(834609, 'assert', assert, false, true), 'string', false)(J$.R(834617, 'arg', arg, false, false), J$.T(834625, 'arg', 21, false));
                            var date;
                            if (J$.C(50720, J$.M(834657, J$.T(834641, /^\d+$/, 14, false), 'test', false)(J$.R(834649, 'arg', arg, false, false)))) {
                                date = J$.W(834713, 'date', J$.F(834705, J$.I(typeof Date === 'undefined' ? Date = J$.R(834665, 'Date', undefined, true, true) : Date = J$.R(834665, 'Date', Date, true, true)), true)(J$.B(141674, '*', J$.F(834689, J$.I(typeof Number === 'undefined' ? Number = J$.R(834673, 'Number', undefined, true, true) : Number = J$.R(834673, 'Number', Number, true, true)), false)(J$.R(834681, 'arg', arg, false, false)), J$.T(834697, 1000, 22, false))), date, false, false);
                            } else if (J$.C(50712, J$.M(834737, J$.T(834721, /^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?Z?)?$/i, 14, false), 'test', false)(J$.R(834729, 'arg', arg, false, false)))) {
                                date = J$.W(834769, 'date', J$.F(834761, J$.I(typeof Date === 'undefined' ? Date = J$.R(834745, 'Date', undefined, true, true) : Date = J$.R(834745, 'Date', Date, true, true)), true)(J$.R(834753, 'arg', arg, false, false)), date, false, false);
                            } else {
                                throw J$.F(834825, J$.I(typeof Error === 'undefined' ? Error = J$.R(834777, 'Error', undefined, true, true) : Error = J$.R(834777, 'Error', Error, true, true)), true)(J$.F(834817, J$.R(834785, 'format', format, false, true), false)(J$.T(834793, 'arg for "%s" is not a valid date format: "%s"', 21, false), J$.R(834801, 'optstr', optstr, false, false), J$.R(834809, 'arg', arg, false, false)));
                            }
                            if (J$.C(50728, J$.B(141682, '===', J$.M(834841, J$.R(834833, 'date', date, false, false), 'toString', false)(), J$.T(834849, 'Invalid Date', 21, false)))) {
                                throw J$.F(834905, J$.I(typeof Error === 'undefined' ? Error = J$.R(834857, 'Error', undefined, true, true) : Error = J$.R(834857, 'Error', Error, true, true)), true)(J$.F(834897, J$.R(834865, 'format', format, false, true), false)(J$.T(834873, 'arg for "%s" is an invalid date: "%s"', 21, false), J$.R(834881, 'optstr', optstr, false, false), J$.R(834889, 'arg', arg, false, false)));
                            }
                            return J$.Rt(834921, J$.R(834913, 'date', date, false, false));
                        } catch (J$e) {
                            J$.Ex(850201, J$e);
                        } finally {
                            if (J$.Fr(850209))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Parser(config) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(837385, arguments.callee, this, arguments);
                            arguments = J$.N(837393, 'arguments', arguments, true, false, false);
                            config = J$.N(837401, 'config', config, true, false, false);
                            J$.N(837409, 'self', self, false, false, false);
                            J$.N(837417, 'i', i, false, false, false);
                            J$.N(837425, 'o', o, false, false, false);
                            J$.N(837433, 'env', env, false, false, false);
                            J$.M(835433, J$.R(835409, 'assert', assert, false, true), 'object', false)(J$.R(835417, 'config', config, false, false), J$.T(835425, 'config', 21, false));
                            J$.M(835473, J$.R(835441, 'assert', assert, false, true), 'arrayOfObject', false)(J$.G(835457, J$.R(835449, 'config', config, false, false), 'options'), J$.T(835465, 'config.options', 21, false));
                            J$.M(835513, J$.R(835481, 'assert', assert, false, true), 'optionalBool', false)(J$.G(835497, J$.R(835489, 'config', config, false, false), 'interspersed'), J$.T(835505, 'config.interspersed', 21, false));
                            var self = J$.W(835529, 'self', J$.R(835521, 'this', this, false, false), self, false, false);
                            J$.P(835593, J$.R(835537, 'this', this, false, false), 'interspersed', J$.C(50736, J$.B(141690, '!==', J$.G(835553, J$.R(835545, 'config', config, false, false), 'interspersed'), J$.T(835561, undefined, 24, false))) ? J$.G(835577, J$.R(835569, 'config', config, false, false), 'interspersed') : J$.T(835585, true, 23, false));
                            J$.P(835657, J$.R(835601, 'this', this, false, false), 'allowUnknown', J$.C(50744, J$.B(141698, '!==', J$.G(835617, J$.R(835609, 'config', config, false, false), 'allowUnknown'), J$.T(835625, undefined, 24, false))) ? J$.G(835641, J$.R(835633, 'config', config, false, false), 'allowUnknown') : J$.T(835649, false, 23, false));
                            J$.P(835761, J$.R(835665, 'this', this, false, false), 'options', J$.M(835753, J$.G(835681, J$.R(835673, 'config', config, false, false), 'options'), 'map', false)(J$.T(835745, function (o) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(835721, arguments.callee, this, arguments);
                                            arguments = J$.N(835729, 'arguments', arguments, true, false, false);
                                            o = J$.N(835737, 'o', o, true, false, false);
                                            return J$.Rt(835713, J$.F(835705, J$.R(835689, 'shallowCopy', shallowCopy, false, true), false)(J$.R(835697, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(850217, J$e);
                                        } finally {
                                            if (J$.Fr(850225))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                            J$.P(835785, J$.R(835769, 'this', this, false, false), 'optionFromName', J$.T(835777, {}, 11, false));
                            J$.P(835809, J$.R(835793, 'this', this, false, false), 'optionFromEnv', J$.T(835801, {}, 11, false));
                            for (var i = J$.W(835825, 'i', J$.T(835817, 0, 22, false), i, false, false); J$.C(50832, J$.B(141706, '<', J$.R(835833, 'i', i, false, false), J$.G(835857, J$.G(835849, J$.R(835841, 'this', this, false, false), 'options'), 'length'))); J$.B(141730, '-', i = J$.W(835873, 'i', J$.B(141722, '+', J$.U(141714, '+', J$.R(835865, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var o = J$.W(835913, 'o', J$.G(835905, J$.G(835889, J$.R(835881, 'this', this, false, false), 'options'), J$.R(835897, 'i', i, false, false)), o, false, false);
                                if (J$.C(50760, J$.C(50752, J$.B(141738, '!==', J$.G(835929, J$.R(835921, 'o', o, false, false), 'group'), J$.T(835937, undefined, 24, false))) ? J$.B(141746, '!==', J$.G(835953, J$.R(835945, 'o', o, false, false), 'group'), J$.T(835961, null, 25, false)) : J$._())) {
                                    J$.M(836025, J$.R(835969, 'assert', assert, false, true), 'optionalString', false)(J$.G(835985, J$.R(835977, 'o', o, false, false), 'group'), J$.F(836017, J$.R(835993, 'format', format, false, true), false)(J$.T(836001, 'config.options.%d.group', 21, false), J$.R(836009, 'i', i, false, false)));
                                    continue;
                                }
                                J$.M(836129, J$.R(836033, 'assert', assert, false, true), 'ok', false)(J$.G(836065, J$.R(836041, 'optionTypes', optionTypes, false, true), J$.G(836057, J$.R(836049, 'o', o, false, false), 'type')), J$.F(836121, J$.R(836073, 'format', format, false, true), false)(J$.T(836081, 'invalid config.options.%d.type: "%s" in %j', 21, false), J$.R(836089, 'i', i, false, false), J$.G(836105, J$.R(836097, 'o', o, false, false), 'type'), J$.R(836113, 'o', o, false, false)));
                                J$.M(836193, J$.R(836137, 'assert', assert, false, true), 'optionalString', false)(J$.G(836153, J$.R(836145, 'o', o, false, false), 'name'), J$.F(836185, J$.R(836161, 'format', format, false, true), false)(J$.T(836169, 'config.options.%d.name', 21, false), J$.R(836177, 'i', i, false, false)));
                                J$.M(836257, J$.R(836201, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(836217, J$.R(836209, 'o', o, false, false), 'names'), J$.F(836249, J$.R(836225, 'format', format, false, true), false)(J$.T(836233, 'config.options.%d.names', 21, false), J$.R(836241, 'i', i, false, false)));
                                J$.M(836369, J$.R(836265, 'assert', assert, false, true), 'ok', false)(J$.C(50784, J$.C(50768, J$.G(836281, J$.R(836273, 'o', o, false, false), 'name')) ? J$._() : J$.G(836297, J$.R(836289, 'o', o, false, false), 'names')) ? J$.U(141754, '!', J$.C(50776, J$.G(836313, J$.R(836305, 'o', o, false, false), 'name')) ? J$.G(836329, J$.R(836321, 'o', o, false, false), 'names') : J$._()) : J$._(), J$.F(836361, J$.R(836337, 'format', format, false, true), false)(J$.T(836345, 'exactly one of "name" or "names" required: %j', 21, false), J$.R(836353, 'o', o, false, false)));
                                J$.M(836433, J$.R(836377, 'assert', assert, false, true), 'optionalString', false)(J$.G(836393, J$.R(836385, 'o', o, false, false), 'help'), J$.F(836425, J$.R(836401, 'format', format, false, true), false)(J$.T(836409, 'config.options.%d.help', 21, false), J$.R(836417, 'i', i, false, false)));
                                var env = J$.W(836465, 'env', J$.C(50792, J$.G(836449, J$.R(836441, 'o', o, false, false), 'env')) ? J$._() : J$.T(836457, [], 10, false), env, false, false);
                                if (J$.C(50800, J$.B(141770, '===', J$.U(141762, 'typeof', J$.R(836473, 'env', env, false, false)), J$.T(836481, 'string', 21, false)))) {
                                    env = J$.W(836505, 'env', J$.T(836497, [J$.R(836489, 'env', env, false, false)], 10, false), env, false, false);
                                }
                                J$.M(836561, J$.R(836513, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.R(836521, 'env', env, false, false), J$.F(836553, J$.R(836529, 'format', format, false, true), false)(J$.T(836537, 'config.options.%d.env', 21, false), J$.R(836545, 'i', i, false, false)));
                                J$.M(836625, J$.R(836569, 'assert', assert, false, true), 'optionalString', false)(J$.G(836585, J$.R(836577, 'o', o, false, false), 'helpGroup'), J$.F(836617, J$.R(836593, 'format', format, false, true), false)(J$.T(836601, 'config.options.%d.helpGroup', 21, false), J$.R(836609, 'i', i, false, false)));
                                J$.M(836689, J$.R(836633, 'assert', assert, false, true), 'optionalBool', false)(J$.G(836649, J$.R(836641, 'o', o, false, false), 'helpWrap'), J$.F(836681, J$.R(836657, 'format', format, false, true), false)(J$.T(836665, 'config.options.%d.helpWrap', 21, false), J$.R(836673, 'i', i, false, false)));
                                J$.M(836753, J$.R(836697, 'assert', assert, false, true), 'optionalBool', false)(J$.G(836713, J$.R(836705, 'o', o, false, false), 'hidden'), J$.F(836745, J$.R(836721, 'format', format, false, true), false)(J$.T(836729, 'config.options.%d.hidden', 21, false), J$.R(836737, 'i', i, false, false)));
                                if (J$.C(50808, J$.G(836769, J$.R(836761, 'o', o, false, false), 'name'))) {
                                    J$.P(836809, J$.R(836777, 'o', o, false, false), 'names', J$.T(836801, [J$.G(836793, J$.R(836785, 'o', o, false, false), 'name')], 10, false));
                                } else {
                                    J$.M(836889, J$.R(836817, 'assert', assert, false, true), 'string', false)(J$.G(836849, J$.G(836833, J$.R(836825, 'o', o, false, false), 'names'), J$.T(836841, 0, 22, false)), J$.F(836881, J$.R(836857, 'format', format, false, true), false)(J$.T(836865, 'config.options.%d.names is empty', 21, false), J$.R(836873, 'i', i, false, false)));
                                }
                                J$.P(836953, J$.R(836897, 'o', o, false, false), 'key', J$.F(836945, J$.R(836905, 'optionKeyFromName', optionKeyFromName, false, true), false)(J$.G(836937, J$.G(836921, J$.R(836913, 'o', o, false, false), 'names'), J$.T(836929, 0, 22, false))));
                                J$.M(837169, J$.G(836969, J$.R(836961, 'o', o, false, false), 'names'), 'forEach', false)(J$.T(837161, function (n) {
                                    jalangiLabel17:
                                        while (true) {
                                            try {
                                                J$.Fe(837137, arguments.callee, this, arguments);
                                                arguments = J$.N(837145, 'arguments', arguments, true, false, false);
                                                n = J$.N(837153, 'n', n, true, false, false);
                                                if (J$.C(50816, J$.G(837001, J$.G(836985, J$.R(836977, 'self', self, false, false), 'optionFromName'), J$.R(836993, 'n', n, false, false)))) {
                                                    throw J$.F(837089, J$.I(typeof Error === 'undefined' ? Error = J$.R(837009, 'Error', undefined, true, true) : Error = J$.R(837009, 'Error', Error, true, true)), true)(J$.F(837081, J$.R(837017, 'format', format, false, true), false)(J$.T(837025, 'option name collision: "%s" used in %j and %j', 21, false), J$.R(837033, 'n', n, false, false), J$.G(837065, J$.G(837049, J$.R(837041, 'self', self, false, false), 'optionFromName'), J$.R(837057, 'n', n, false, false)), J$.R(837073, 'o', o, false, false)));
                                                }
                                                J$.P(837129, J$.G(837105, J$.R(837097, 'self', self, false, false), 'optionFromName'), J$.R(837113, 'n', n, false, false), J$.R(837121, 'o', o, false, false));
                                            } catch (J$e) {
                                                J$.Ex(850233, J$e);
                                            } finally {
                                                if (J$.Fr(850241))
                                                    continue jalangiLabel17;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(837377, J$.R(837177, 'env', env, false, false), 'forEach', false)(J$.T(837369, function (n) {
                                    jalangiLabel18:
                                        while (true) {
                                            try {
                                                J$.Fe(837345, arguments.callee, this, arguments);
                                                arguments = J$.N(837353, 'arguments', arguments, true, false, false);
                                                n = J$.N(837361, 'n', n, true, false, false);
                                                if (J$.C(50824, J$.G(837209, J$.G(837193, J$.R(837185, 'self', self, false, false), 'optionFromEnv'), J$.R(837201, 'n', n, false, false)))) {
                                                    throw J$.F(837297, J$.I(typeof Error === 'undefined' ? Error = J$.R(837217, 'Error', undefined, true, true) : Error = J$.R(837217, 'Error', Error, true, true)), true)(J$.F(837289, J$.R(837225, 'format', format, false, true), false)(J$.T(837233, 'option env collision: "%s" used in %j and %j', 21, false), J$.R(837241, 'n', n, false, false), J$.G(837273, J$.G(837257, J$.R(837249, 'self', self, false, false), 'optionFromEnv'), J$.R(837265, 'n', n, false, false)), J$.R(837281, 'o', o, false, false)));
                                                }
                                                J$.P(837337, J$.G(837313, J$.R(837305, 'self', self, false, false), 'optionFromEnv'), J$.R(837321, 'n', n, false, false), J$.R(837329, 'o', o, false, false));
                                            } catch (J$e) {
                                                J$.Ex(850249, J$e);
                                            } finally {
                                                if (J$.Fr(850257))
                                                    continue jalangiLabel18;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(850265, J$e);
                        } finally {
                            if (J$.Fr(850273))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bashCompletionSpecFromOptions(args) {
                jalangiLabel36:
                    while (true) {
                        try {
                            J$.Fe(847377, arguments.callee, this, arguments);
                            arguments = J$.N(847385, 'arguments', arguments, true, false, false);
                            args = J$.N(847393, 'args', args, true, false, false);
                            J$.N(847401, 'context', context, false, false, false);
                            J$.N(847409, 'includeHidden', includeHidden, false, false, false);
                            J$.N(847417, 'spec', spec, false, false, false);
                            J$.N(847425, 'shortopts', shortopts, false, false, false);
                            J$.N(847433, 'longopts', longopts, false, false, false);
                            J$.N(847441, 'optargs', optargs, false, false, false);
                            J$.M(845945, J$.R(845921, 'assert', assert, false, true), 'object', false)(J$.R(845929, 'args', args, false, false), J$.T(845937, 'args', 21, false));
                            J$.M(845985, J$.R(845953, 'assert', assert, false, true), 'object', false)(J$.G(845969, J$.R(845961, 'args', args, false, false), 'options'), J$.T(845977, 'args.options', 21, false));
                            J$.M(846025, J$.R(845993, 'assert', assert, false, true), 'optionalString', false)(J$.G(846009, J$.R(846001, 'args', args, false, false), 'context'), J$.T(846017, 'args.context', 21, false));
                            J$.M(846065, J$.R(846033, 'assert', assert, false, true), 'optionalBool', false)(J$.G(846049, J$.R(846041, 'args', args, false, false), 'includeHidden'), J$.T(846057, 'args.includeHidden', 21, false));
                            J$.M(846105, J$.R(846073, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(846089, J$.R(846081, 'args', args, false, false), 'argtypes'), J$.T(846097, 'args.argtypes', 21, false));
                            var context = J$.W(846137, 'context', J$.C(51592, J$.G(846121, J$.R(846113, 'args', args, false, false), 'context')) ? J$._() : J$.T(846129, '', 21, false), context, false, false);
                            var includeHidden = J$.W(846193, 'includeHidden', J$.C(51600, J$.B(142850, '===', J$.G(846153, J$.R(846145, 'args', args, false, false), 'includeHidden'), J$.T(846161, undefined, 24, false))) ? J$.T(846169, false, 23, false) : J$.G(846185, J$.R(846177, 'args', args, false, false), 'includeHidden'), includeHidden, false, false);
                            var spec = J$.W(846209, 'spec', J$.T(846201, [], 10, false), spec, false, false);
                            var shortopts = J$.W(846225, 'shortopts', J$.T(846217, [], 10, false), shortopts, false, false);
                            var longopts = J$.W(846241, 'longopts', J$.T(846233, [], 10, false), longopts, false, false);
                            var optargs = J$.W(846257, 'optargs', J$.T(846249, [], 10, false), optargs, false, false);
                            J$.M(847001, J$.C(51608, J$.G(846273, J$.R(846265, 'args', args, false, false), 'options')) ? J$._() : J$.T(846281, [], 10, false), 'forEach', false)(J$.T(846993, function (o) {
                                jalangiLabel35:
                                    while (true) {
                                        try {
                                            J$.Fe(846945, arguments.callee, this, arguments);
                                            arguments = J$.N(846953, 'arguments', arguments, true, false, false);
                                            o = J$.N(846961, 'o', o, true, false, false);
                                            J$.N(846969, 'optNames', optNames, false, false, false);
                                            J$.N(846977, 'optType', optType, false, false, false);
                                            J$.N(846985, 'completionType', completionType, false, false, false);
                                            if (J$.C(51624, J$.C(51616, J$.B(142858, '!==', J$.G(846297, J$.R(846289, 'o', o, false, false), 'group'), J$.T(846305, undefined, 24, false))) ? J$.B(142866, '!==', J$.G(846321, J$.R(846313, 'o', o, false, false), 'group'), J$.T(846329, null, 25, false)) : J$._())) {
                                                return J$.Rt(846337, undefined);
                                            }
                                            var optNames = J$.W(846385, 'optNames', J$.C(51632, J$.G(846353, J$.R(846345, 'o', o, false, false), 'names')) ? J$._() : J$.T(846377, [J$.G(846369, J$.R(846361, 'o', o, false, false), 'name')], 10, false), optNames, false, false);
                                            var optType = J$.W(846425, 'optType', J$.F(846417, J$.R(846393, 'getOptionType', getOptionType, false, true), false)(J$.G(846409, J$.R(846401, 'o', o, false, false), 'type')), optType, false, false);
                                            if (J$.C(51720, J$.G(846441, J$.R(846433, 'optType', optType, false, false), 'takesArg'))) {
                                                var completionType = J$.W(846497, 'completionType', J$.C(51648, J$.C(51640, J$.G(846457, J$.R(846449, 'o', o, false, false), 'completionType')) ? J$._() : J$.G(846473, J$.R(846465, 'optType', optType, false, false), 'completionType')) ? J$._() : J$.G(846489, J$.R(846481, 'o', o, false, false), 'type'), completionType, false, false);
                                                J$.M(846777, J$.R(846505, 'optNames', optNames, false, false), 'forEach', false)(J$.T(846769, function (optName) {
                                                    jalangiLabel33:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(846745, arguments.callee, this, arguments);
                                                                arguments = J$.N(846753, 'arguments', arguments, true, false, false);
                                                                optName = J$.N(846761, 'optName', optName, true, false, false);
                                                                if (J$.C(51688, J$.B(142874, '===', J$.G(846521, J$.R(846513, 'optName', optName, false, false), 'length'), J$.T(846529, 1, 22, false)))) {
                                                                    if (J$.C(51664, J$.C(51656, J$.R(846537, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(142882, '!', J$.G(846553, J$.R(846545, 'o', o, false, false), 'hidden')))) {
                                                                        J$.M(846585, J$.R(846561, 'shortopts', shortopts, false, false), 'push', false)(J$.B(142890, '+', J$.T(846569, '-', 21, false), J$.R(846577, 'optName', optName, false, false)));
                                                                    }
                                                                    J$.M(846633, J$.R(846593, 'optargs', optargs, false, false), 'push', false)(J$.B(142914, '+', J$.B(142906, '+', J$.B(142898, '+', J$.T(846601, '-', 21, false), J$.R(846609, 'optName', optName, false, false)), J$.T(846617, '=', 21, false)), J$.R(846625, 'completionType', completionType, false, false)));
                                                                } else {
                                                                    if (J$.C(51680, J$.C(51672, J$.R(846641, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(142922, '!', J$.G(846657, J$.R(846649, 'o', o, false, false), 'hidden')))) {
                                                                        J$.M(846689, J$.R(846665, 'longopts', longopts, false, false), 'push', false)(J$.B(142930, '+', J$.T(846673, '--', 21, false), J$.R(846681, 'optName', optName, false, false)));
                                                                    }
                                                                    J$.M(846737, J$.R(846697, 'optargs', optargs, false, false), 'push', false)(J$.B(142954, '+', J$.B(142946, '+', J$.B(142938, '+', J$.T(846705, '--', 21, false), J$.R(846713, 'optName', optName, false, false)), J$.T(846721, '=', 21, false)), J$.R(846729, 'completionType', completionType, false, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(850489, J$e);
                                                            } finally {
                                                                if (J$.Fr(850497))
                                                                    continue jalangiLabel33;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } else {
                                                J$.M(846937, J$.R(846785, 'optNames', optNames, false, false), 'forEach', false)(J$.T(846929, function (optName) {
                                                    jalangiLabel34:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(846905, arguments.callee, this, arguments);
                                                                arguments = J$.N(846913, 'arguments', arguments, true, false, false);
                                                                optName = J$.N(846921, 'optName', optName, true, false, false);
                                                                if (J$.C(51712, J$.C(51696, J$.R(846793, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(142962, '!', J$.G(846809, J$.R(846801, 'o', o, false, false), 'hidden')))) {
                                                                    if (J$.C(51704, J$.B(142970, '===', J$.G(846825, J$.R(846817, 'optName', optName, false, false), 'length'), J$.T(846833, 1, 22, false)))) {
                                                                        J$.M(846865, J$.R(846841, 'shortopts', shortopts, false, false), 'push', false)(J$.B(142978, '+', J$.T(846849, '-', 21, false), J$.R(846857, 'optName', optName, false, false)));
                                                                    } else {
                                                                        J$.M(846897, J$.R(846873, 'longopts', longopts, false, false), 'push', false)(J$.B(142986, '+', J$.T(846881, '--', 21, false), J$.R(846889, 'optName', optName, false, false)));
                                                                    }
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(850505, J$e);
                                                            } finally {
                                                                if (J$.Fr(850513))
                                                                    continue jalangiLabel34;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(850521, J$e);
                                        } finally {
                                            if (J$.Fr(850529))
                                                continue jalangiLabel35;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(847081, J$.R(847009, 'spec', spec, false, false), 'push', false)(J$.F(847073, J$.R(847017, 'format', format, false, true), false)(J$.T(847025, 'local cmd%s_shortopts="%s"', 21, false), J$.R(847033, 'context', context, false, false), J$.M(847065, J$.M(847049, J$.R(847041, 'shortopts', shortopts, false, false), 'sort', false)(), 'join', false)(J$.T(847057, ' ', 21, false))));
                            J$.M(847161, J$.R(847089, 'spec', spec, false, false), 'push', false)(J$.F(847153, J$.R(847097, 'format', format, false, true), false)(J$.T(847105, 'local cmd%s_longopts="%s"', 21, false), J$.R(847113, 'context', context, false, false), J$.M(847145, J$.M(847129, J$.R(847121, 'longopts', longopts, false, false), 'sort', false)(), 'join', false)(J$.T(847137, ' ', 21, false))));
                            J$.M(847241, J$.R(847169, 'spec', spec, false, false), 'push', false)(J$.F(847233, J$.R(847177, 'format', format, false, true), false)(J$.T(847185, 'local cmd%s_optargs="%s"', 21, false), J$.R(847193, 'context', context, false, false), J$.M(847225, J$.M(847209, J$.R(847201, 'optargs', optargs, false, false), 'sort', false)(), 'join', false)(J$.T(847217, ' ', 21, false))));
                            if (J$.C(51728, J$.G(847257, J$.R(847249, 'args', args, false, false), 'argtypes'))) {
                                J$.M(847337, J$.R(847265, 'spec', spec, false, false), 'push', false)(J$.F(847329, J$.R(847273, 'format', format, false, true), false)(J$.T(847281, 'local cmd%s_argtypes="%s"', 21, false), J$.R(847289, 'context', context, false, false), J$.M(847321, J$.G(847305, J$.R(847297, 'args', args, false, false), 'argtypes'), 'join', false)(J$.T(847313, ' ', 21, false))));
                            }
                            return J$.Rt(847369, J$.M(847361, J$.R(847345, 'spec', spec, false, false), 'join', false)(J$.T(847353, '\n', 21, false)));
                        } catch (J$e) {
                            J$.Ex(850537, J$e);
                        } finally {
                            if (J$.Fr(850545))
                                continue jalangiLabel36;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bashCompletionFromOptions(args) {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(847881, arguments.callee, this, arguments);
                            arguments = J$.N(847889, 'arguments', arguments, true, false, false);
                            args = J$.N(847897, 'args', args, true, false, false);
                            J$.N(847905, 'data', data, false, false, false);
                            J$.N(847913, 'template', template, false, false, false);
                            J$.M(847473, J$.R(847449, 'assert', assert, false, true), 'object', false)(J$.R(847457, 'args', args, false, false), J$.T(847465, 'args', 21, false));
                            J$.M(847513, J$.R(847481, 'assert', assert, false, true), 'object', false)(J$.G(847497, J$.R(847489, 'args', args, false, false), 'options'), J$.T(847505, 'args.options', 21, false));
                            J$.M(847553, J$.R(847521, 'assert', assert, false, true), 'string', false)(J$.G(847537, J$.R(847529, 'args', args, false, false), 'name'), J$.T(847545, 'args.name', 21, false));
                            J$.M(847593, J$.R(847561, 'assert', assert, false, true), 'optionalString', false)(J$.G(847577, J$.R(847569, 'args', args, false, false), 'specExtra'), J$.T(847585, 'args.specExtra', 21, false));
                            J$.M(847633, J$.R(847601, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(847617, J$.R(847609, 'args', args, false, false), 'argtypes'), J$.T(847625, 'args.argtypes', 21, false));
                            var data = J$.W(847737, 'data', J$.T(847729, {
                                name: J$.G(847649, J$.R(847641, 'args', args, false, false), 'name'),
                                date: J$.F(847665, J$.I(typeof Date === 'undefined' ? Date = J$.R(847657, 'Date', undefined, true, true) : Date = J$.R(847657, 'Date', Date, true, true)), true)(),
                                spec: J$.F(847721, J$.R(847673, 'bashCompletionSpecFromOptions', bashCompletionSpecFromOptions, false, true), false)(J$.T(847713, {
                                    options: J$.G(847689, J$.R(847681, 'args', args, false, false), 'options'),
                                    argtypes: J$.G(847705, J$.R(847697, 'args', args, false, false), 'argtypes')
                                }, 11, false))
                            }, 11, false), data, false, false);
                            if (J$.C(51736, J$.G(847753, J$.R(847745, 'args', args, false, false), 'specExtra'))) {
                                J$.A(847793, J$.R(847761, 'data', data, false, false), 'spec', '+')(J$.B(142994, '+', J$.T(847769, '\n\n', 21, false), J$.G(847785, J$.R(847777, 'args', args, false, false), 'specExtra')));
                            }
                            var template = J$.W(847833, 'template', J$.M(847825, J$.R(847801, 'fs', fs, false, true), 'readFileSync', false)(J$.R(847809, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, true), J$.T(847817, 'utf8', 21, false)), template, false, false);
                            return J$.Rt(847873, J$.F(847865, J$.R(847841, 'renderTemplate', renderTemplate, false, true), false)(J$.R(847849, 'template', template, false, false), J$.R(847857, 'data', data, false, false)));
                        } catch (J$e) {
                            J$.Ex(850553, J$e);
                        } finally {
                            if (J$.Fr(850561))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createParser(config) {
                jalangiLabel38:
                    while (true) {
                        try {
                            J$.Fe(847953, arguments.callee, this, arguments);
                            arguments = J$.N(847961, 'arguments', arguments, true, false, false);
                            config = J$.N(847969, 'config', config, true, false, false);
                            return J$.Rt(847945, J$.F(847937, J$.R(847921, 'Parser', Parser, false, true), true)(J$.R(847929, 'config', config, false, false)));
                        } catch (J$e) {
                            J$.Ex(850569, J$e);
                        } finally {
                            if (J$.Fr(850577))
                                continue jalangiLabel38;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parse(config) {
                jalangiLabel39:
                    while (true) {
                        try {
                            J$.Fe(848265, arguments.callee, this, arguments);
                            arguments = J$.N(848273, 'arguments', arguments, true, false, false);
                            config = J$.N(848281, 'config', config, true, false, false);
                            J$.N(848289, 'argv', argv, false, false, false);
                            J$.N(848297, 'env', env, false, false, false);
                            J$.N(848305, 'parser', parser, false, false, false);
                            J$.M(848001, J$.R(847977, 'assert', assert, false, true), 'object', false)(J$.R(847985, 'config', config, false, false), J$.T(847993, 'config', 21, false));
                            J$.M(848041, J$.R(848009, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(848025, J$.R(848017, 'config', config, false, false), 'argv'), J$.T(848033, 'config.argv', 21, false));
                            J$.M(848081, J$.R(848049, 'assert', assert, false, true), 'optionalObject', false)(J$.G(848065, J$.R(848057, 'config', config, false, false), 'env'), J$.T(848073, 'config.env', 21, false));
                            var config = J$.W(848113, 'config', J$.F(848105, J$.R(848089, 'shallowCopy', shallowCopy, false, true), false)(J$.R(848097, 'config', config, false, false)), config, false, false);
                            var argv = J$.W(848137, 'argv', J$.G(848129, J$.R(848121, 'config', config, false, false), 'argv'), argv, false, false);
                            J$.B(143002, 'delete', J$.R(848145, 'config', config, false, false), 'argv');
                            var env = J$.W(848169, 'env', J$.G(848161, J$.R(848153, 'config', config, false, false), 'env'), env, false, false);
                            J$.B(143010, 'delete', J$.R(848177, 'config', config, false, false), 'env');
                            var parser = J$.W(848209, 'parser', J$.F(848201, J$.R(848185, 'Parser', Parser, false, true), true)(J$.R(848193, 'config', config, false, false)), parser, false, false);
                            return J$.Rt(848257, J$.M(848249, J$.R(848217, 'parser', parser, false, false), 'parse', false)(J$.T(848241, {
                                argv: J$.R(848225, 'argv', argv, false, false),
                                env: J$.R(848233, 'env', env, false, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(850585, J$e);
                        } finally {
                            if (J$.Fr(850593))
                                continue jalangiLabel39;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addOptionType(optionType) {
                jalangiLabel40:
                    while (true) {
                        try {
                            J$.Fe(848745, arguments.callee, this, arguments);
                            arguments = J$.N(848753, 'arguments', arguments, true, false, false);
                            optionType = J$.N(848761, 'optionType', optionType, true, false, false);
                            J$.M(848337, J$.R(848313, 'assert', assert, false, true), 'object', false)(J$.R(848321, 'optionType', optionType, false, false), J$.T(848329, 'optionType', 21, false));
                            J$.M(848377, J$.R(848345, 'assert', assert, false, true), 'string', false)(J$.G(848361, J$.R(848353, 'optionType', optionType, false, false), 'name'), J$.T(848369, 'optionType.name', 21, false));
                            J$.M(848417, J$.R(848385, 'assert', assert, false, true), 'bool', false)(J$.G(848401, J$.R(848393, 'optionType', optionType, false, false), 'takesArg'), J$.T(848409, 'optionType.takesArg', 21, false));
                            if (J$.C(51744, J$.G(848433, J$.R(848425, 'optionType', optionType, false, false), 'takesArg'))) {
                                J$.M(848473, J$.R(848441, 'assert', assert, false, true), 'string', false)(J$.G(848457, J$.R(848449, 'optionType', optionType, false, false), 'helpArg'), J$.T(848465, 'optionType.helpArg', 21, false));
                            }
                            J$.M(848513, J$.R(848481, 'assert', assert, false, true), 'func', false)(J$.G(848497, J$.R(848489, 'optionType', optionType, false, false), 'parseArg'), J$.T(848505, 'optionType.parseArg', 21, false));
                            J$.M(848553, J$.R(848521, 'assert', assert, false, true), 'optionalBool', false)(J$.G(848537, J$.R(848529, 'optionType', optionType, false, false), 'array'), J$.T(848545, 'optionType.array', 21, false));
                            J$.M(848593, J$.R(848561, 'assert', assert, false, true), 'optionalBool', false)(J$.G(848577, J$.R(848569, 'optionType', optionType, false, false), 'arrayFlatten'), J$.T(848585, 'optionType.arrayFlatten', 21, false));
                            J$.P(848737, J$.R(848601, 'optionTypes', optionTypes, false, true), J$.G(848617, J$.R(848609, 'optionType', optionType, false, false), 'name'), J$.T(848729, {
                                takesArg: J$.G(848633, J$.R(848625, 'optionType', optionType, false, false), 'takesArg'),
                                helpArg: J$.G(848649, J$.R(848641, 'optionType', optionType, false, false), 'helpArg'),
                                parseArg: J$.G(848665, J$.R(848657, 'optionType', optionType, false, false), 'parseArg'),
                                array: J$.G(848681, J$.R(848673, 'optionType', optionType, false, false), 'array'),
                                arrayFlatten: J$.G(848697, J$.R(848689, 'optionType', optionType, false, false), 'arrayFlatten'),
                                'default': J$.G(848721, J$.R(848705, 'optionType', optionType, false, false), J$.T(848713, 'default', 21, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(850601, J$e);
                        } finally {
                            if (J$.Fr(850609))
                                continue jalangiLabel40;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getOptionType(name) {
                jalangiLabel41:
                    while (true) {
                        try {
                            J$.Fe(848833, arguments.callee, this, arguments);
                            arguments = J$.N(848841, 'arguments', arguments, true, false, false);
                            name = J$.N(848849, 'name', name, true, false, false);
                            J$.M(848793, J$.R(848769, 'assert', assert, false, true), 'string', false)(J$.R(848777, 'name', name, false, false), J$.T(848785, 'name', 21, false));
                            return J$.Rt(848825, J$.G(848817, J$.R(848801, 'optionTypes', optionTypes, false, true), J$.R(848809, 'name', name, false, false)));
                        } catch (J$e) {
                            J$.Ex(850617, J$e);
                        } finally {
                            if (J$.Fr(850625))
                                continue jalangiLabel41;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function synopsisFromOpt(o) {
                jalangiLabel43:
                    while (true) {
                        try {
                            J$.Fe(849369, arguments.callee, this, arguments);
                            arguments = J$.N(849377, 'arguments', arguments, true, false, false);
                            o = J$.N(849385, 'o', o, true, false, false);
                            J$.N(849393, 'names', names, false, false, false);
                            J$.N(849401, 'type', type, false, false, false);
                            J$.N(849409, 'helpArg', helpArg, false, false, false);
                            J$.N(849417, 'parts', parts, false, false, false);
                            J$.M(848881, J$.R(848857, 'assert', assert, false, true), 'object', false)(J$.R(848865, 'o', o, false, false), J$.T(848873, 'o', 21, false));
                            if (J$.C(51752, J$.M(848905, J$.R(848889, 'o', o, false, false), 'hasOwnProperty', false)(J$.T(848897, 'group', 21, false)))) {
                                return J$.Rt(848921, J$.T(848913, null, 25, false));
                            }
                            var names = J$.W(848969, 'names', J$.C(51760, J$.G(848937, J$.R(848929, 'o', o, false, false), 'names')) ? J$._() : J$.T(848961, [J$.G(848953, J$.R(848945, 'o', o, false, false), 'name')], 10, false), names, false, false);
                            var type = J$.W(849009, 'type', J$.F(849001, J$.R(848977, 'getOptionType', getOptionType, false, true), false)(J$.G(848993, J$.R(848985, 'o', o, false, false), 'type')), type, false, false);
                            var helpArg = J$.W(849065, 'helpArg', J$.C(51784, J$.C(51776, J$.G(849025, J$.R(849017, 'o', o, false, false), 'helpArg')) ? J$._() : J$.C(51768, J$.R(849033, 'type', type, false, false)) ? J$.G(849049, J$.R(849041, 'type', type, false, false), 'helpArg') : J$._()) ? J$._() : J$.T(849057, 'ARG', 21, false), helpArg, false, false);
                            var parts = J$.W(849081, 'parts', J$.T(849073, [], 10, false), parts, false, false);
                            J$.M(849313, J$.R(849089, 'names', names, false, false), 'forEach', false)(J$.T(849305, function (name) {
                                jalangiLabel42:
                                    while (true) {
                                        try {
                                            J$.Fe(849273, arguments.callee, this, arguments);
                                            arguments = J$.N(849281, 'arguments', arguments, true, false, false);
                                            name = J$.N(849289, 'name', name, true, false, false);
                                            J$.N(849297, 'part', part, false, false, false);
                                            var part = J$.W(849145, 'part', J$.B(143026, '+', J$.C(51792, J$.B(143018, '===', J$.G(849105, J$.R(849097, 'name', name, false, false), 'length'), J$.T(849113, 1, 22, false))) ? J$.T(849121, '-', 21, false) : J$.T(849129, '--', 21, false), J$.R(849137, 'name', name, false, false)), part, false, false);
                                            if (J$.C(51816, J$.C(51800, J$.R(849153, 'type', type, false, false)) ? J$.G(849169, J$.R(849161, 'type', type, false, false), 'takesArg') : J$._())) {
                                                part = J$.W(849241, 'part', J$.B(143058, '+', J$.R(849233, 'part', part, false, false), J$.C(51808, J$.B(143034, '===', J$.G(849185, J$.R(849177, 'name', name, false, false), 'length'), J$.T(849193, 1, 22, false))) ? J$.B(143042, '+', J$.T(849201, ' ', 21, false), J$.R(849209, 'helpArg', helpArg, false, false)) : J$.B(143050, '+', J$.T(849217, '=', 21, false), J$.R(849225, 'helpArg', helpArg, false, false))), part, false, false);
                                            }
                                            J$.M(849265, J$.R(849249, 'parts', parts, false, false), 'push', false)(J$.R(849257, 'part', part, false, false));
                                        } catch (J$e) {
                                            J$.Ex(850633, J$e);
                                        } finally {
                                            if (J$.Fr(850641))
                                                continue jalangiLabel42;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(849361, J$.B(143074, '+', J$.B(143066, '+', J$.T(849321, '[ ', 21, false), J$.M(849345, J$.R(849329, 'parts', parts, false, false), 'join', false)(J$.T(849337, ' | ', 21, false))), J$.T(849353, ' ]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(850649, J$e);
                        } finally {
                            if (J$.Fr(850657))
                                continue jalangiLabel43;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(849577, 'assert', assert, false, false, false);
            J$.N(849585, 'format', format, false, false, false);
            J$.N(849593, 'fs', fs, false, false, false);
            J$.N(849601, 'path', path, false, false, false);
            J$.N(849609, 'DEBUG', DEBUG, false, false, false);
            J$.N(849617, 'debug', debug, false, false, false);
            renderTemplate = J$.N(849633, 'renderTemplate', J$.T(849625, renderTemplate, 12, false), true, false, false);
            shallowCopy = J$.N(849649, 'shallowCopy', J$.T(849641, shallowCopy, 12, false), true, false, false);
            space = J$.N(849665, 'space', J$.T(849657, space, 12, false), true, false, false);
            makeIndent = J$.N(849681, 'makeIndent', J$.T(849673, makeIndent, 12, false), true, false, false);
            textwrap = J$.N(849697, 'textwrap', J$.T(849689, textwrap, 12, false), true, false, false);
            optionKeyFromName = J$.N(849713, 'optionKeyFromName', J$.T(849705, optionKeyFromName, 12, false), true, false, false);
            parseBool = J$.N(849729, 'parseBool', J$.T(849721, parseBool, 12, false), true, false, false);
            parseString = J$.N(849745, 'parseString', J$.T(849737, parseString, 12, false), true, false, false);
            parseNumber = J$.N(849761, 'parseNumber', J$.T(849753, parseNumber, 12, false), true, false, false);
            parseInteger = J$.N(849777, 'parseInteger', J$.T(849769, parseInteger, 12, false), true, false, false);
            parsePositiveInteger = J$.N(849793, 'parsePositiveInteger', J$.T(849785, parsePositiveInteger, 12, false), true, false, false);
            parseDate = J$.N(849809, 'parseDate', J$.T(849801, parseDate, 12, false), true, false, false);
            J$.N(849817, 'optionTypes', optionTypes, false, false, false);
            Parser = J$.N(849833, 'Parser', J$.T(849825, Parser, 12, false), true, false, false);
            J$.N(849841, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, false, false);
            bashCompletionSpecFromOptions = J$.N(849857, 'bashCompletionSpecFromOptions', J$.T(849849, bashCompletionSpecFromOptions, 12, false), true, false, false);
            bashCompletionFromOptions = J$.N(849873, 'bashCompletionFromOptions', J$.T(849865, bashCompletionFromOptions, 12, false), true, false, false);
            createParser = J$.N(849889, 'createParser', J$.T(849881, createParser, 12, false), true, false, false);
            parse = J$.N(849905, 'parse', J$.T(849897, parse, 12, false), true, false, false);
            addOptionType = J$.N(849921, 'addOptionType', J$.T(849913, addOptionType, 12, false), true, false, false);
            getOptionType = J$.N(849937, 'getOptionType', J$.T(849929, getOptionType, 12, false), true, false, false);
            synopsisFromOpt = J$.N(849953, 'synopsisFromOpt', J$.T(849945, synopsisFromOpt, 12, false), true, false, false);
            J$.T(831809, 'use strict', 21, false);
            J$.F(831833, J$.I(typeof require === 'undefined' ? require = J$.R(831817, 'require', undefined, true, true) : require = J$.R(831817, 'require', require, true, true)), false)(J$.T(831825, 'core-js/modules/es.array.concat', 21, false));
            J$.F(831857, J$.I(typeof require === 'undefined' ? require = J$.R(831841, 'require', undefined, true, true) : require = J$.R(831841, 'require', require, true, true)), false)(J$.T(831849, 'core-js/modules/es.array.filter', 21, false));
            J$.F(831881, J$.I(typeof require === 'undefined' ? require = J$.R(831865, 'require', undefined, true, true) : require = J$.R(831865, 'require', require, true, true)), false)(J$.T(831873, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(831905, J$.I(typeof require === 'undefined' ? require = J$.R(831889, 'require', undefined, true, true) : require = J$.R(831889, 'require', require, true, true)), false)(J$.T(831897, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(831929, J$.I(typeof require === 'undefined' ? require = J$.R(831913, 'require', undefined, true, true) : require = J$.R(831913, 'require', require, true, true)), false)(J$.T(831921, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(831953, J$.I(typeof require === 'undefined' ? require = J$.R(831937, 'require', undefined, true, true) : require = J$.R(831937, 'require', require, true, true)), false)(J$.T(831945, 'core-js/modules/es.array.join', 21, false));
            J$.F(831977, J$.I(typeof require === 'undefined' ? require = J$.R(831961, 'require', undefined, true, true) : require = J$.R(831961, 'require', require, true, true)), false)(J$.T(831969, 'core-js/modules/es.array.map', 21, false));
            J$.F(832001, J$.I(typeof require === 'undefined' ? require = J$.R(831985, 'require', undefined, true, true) : require = J$.R(831985, 'require', require, true, true)), false)(J$.T(831993, 'core-js/modules/es.array.slice', 21, false));
            J$.F(832025, J$.I(typeof require === 'undefined' ? require = J$.R(832009, 'require', undefined, true, true) : require = J$.R(832009, 'require', require, true, true)), false)(J$.T(832017, 'core-js/modules/es.array.sort', 21, false));
            J$.F(832049, J$.I(typeof require === 'undefined' ? require = J$.R(832033, 'require', undefined, true, true) : require = J$.R(832033, 'require', require, true, true)), false)(J$.T(832041, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(832073, J$.I(typeof require === 'undefined' ? require = J$.R(832057, 'require', undefined, true, true) : require = J$.R(832057, 'require', require, true, true)), false)(J$.T(832065, 'core-js/modules/es.function.name', 21, false));
            J$.F(832097, J$.I(typeof require === 'undefined' ? require = J$.R(832081, 'require', undefined, true, true) : require = J$.R(832081, 'require', require, true, true)), false)(J$.T(832089, 'core-js/modules/es.number.constructor', 21, false));
            J$.F(832121, J$.I(typeof require === 'undefined' ? require = J$.R(832105, 'require', undefined, true, true) : require = J$.R(832105, 'require', require, true, true)), false)(J$.T(832113, 'core-js/modules/es.object.keys', 21, false));
            J$.F(832145, J$.I(typeof require === 'undefined' ? require = J$.R(832129, 'require', undefined, true, true) : require = J$.R(832129, 'require', require, true, true)), false)(J$.T(832137, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(832169, J$.I(typeof require === 'undefined' ? require = J$.R(832153, 'require', undefined, true, true) : require = J$.R(832153, 'require', require, true, true)), false)(J$.T(832161, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(832193, J$.I(typeof require === 'undefined' ? require = J$.R(832177, 'require', undefined, true, true) : require = J$.R(832177, 'require', require, true, true)), false)(J$.T(832185, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(832217, J$.I(typeof require === 'undefined' ? require = J$.R(832201, 'require', undefined, true, true) : require = J$.R(832201, 'require', require, true, true)), false)(J$.T(832209, 'core-js/modules/es.string.replace', 21, false));
            J$.F(832241, J$.I(typeof require === 'undefined' ? require = J$.R(832225, 'require', undefined, true, true) : require = J$.R(832225, 'require', require, true, true)), false)(J$.T(832233, 'core-js/modules/es.string.split', 21, false));
            J$.F(832265, J$.I(typeof require === 'undefined' ? require = J$.R(832249, 'require', undefined, true, true) : require = J$.R(832249, 'require', require, true, true)), false)(J$.T(832257, 'core-js/modules/es.string.trim', 21, false));
            J$.F(832289, J$.I(typeof require === 'undefined' ? require = J$.R(832273, 'require', undefined, true, true) : require = J$.R(832273, 'require', require, true, true)), false)(J$.T(832281, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var assert = J$.W(832321, 'assert', J$.F(832313, J$.I(typeof require === 'undefined' ? require = J$.R(832297, 'require', undefined, true, true) : require = J$.R(832297, 'require', require, true, true)), false)(J$.T(832305, 'assert-plus', 21, false)), assert, false, true);
            var format = J$.W(832361, 'format', J$.G(832353, J$.F(832345, J$.I(typeof require === 'undefined' ? require = J$.R(832329, 'require', undefined, true, true) : require = J$.R(832329, 'require', require, true, true)), false)(J$.T(832337, 'util', 21, false)), 'format'), format, false, true);
            var fs = J$.W(832393, 'fs', J$.F(832385, J$.I(typeof require === 'undefined' ? require = J$.R(832369, 'require', undefined, true, true) : require = J$.R(832369, 'require', require, true, true)), false)(J$.T(832377, 'fs', 21, false)), fs, false, true);
            var path = J$.W(832425, 'path', J$.F(832417, J$.I(typeof require === 'undefined' ? require = J$.R(832401, 'require', undefined, true, true) : require = J$.R(832401, 'require', require, true, true)), false)(J$.T(832409, 'path', 21, false)), path, false, true);
            var DEBUG = J$.W(832441, 'DEBUG', J$.T(832433, true, 23, false), DEBUG, false, true);
            if (J$.C(50576, J$.R(832449, 'DEBUG', DEBUG, false, true))) {
                var debug = J$.W(832473, 'debug', J$.G(832465, J$.I(typeof console === 'undefined' ? console = J$.R(832457, 'console', undefined, true, true) : console = J$.R(832457, 'console', console, true, true)), 'warn'), debug, false, true);
            } else {
                var debug = J$.W(832505, 'debug', J$.T(832497, function debug() {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(832481, arguments.callee, this, arguments);
                                arguments = J$.N(832489, 'arguments', arguments, true, false, false);
                            } catch (J$e) {
                                J$.Ex(849961, J$e);
                            } finally {
                                if (J$.Fr(849969))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false), debug, false, true);
            }
            var optionTypes = J$.W(835401, 'optionTypes', J$.T(835393, {
                bool: J$.T(834993, {
                    takesArg: J$.T(834977, false, 23, false),
                    parseArg: J$.R(834985, 'parseBool', parseBool, false, true)
                }, 11, false),
                string: J$.T(835025, {
                    takesArg: J$.T(835001, true, 23, false),
                    helpArg: J$.T(835009, 'ARG', 21, false),
                    parseArg: J$.R(835017, 'parseString', parseString, false, true)
                }, 11, false),
                number: J$.T(835057, {
                    takesArg: J$.T(835033, true, 23, false),
                    helpArg: J$.T(835041, 'NUM', 21, false),
                    parseArg: J$.R(835049, 'parseNumber', parseNumber, false, true)
                }, 11, false),
                integer: J$.T(835089, {
                    takesArg: J$.T(835065, true, 23, false),
                    helpArg: J$.T(835073, 'INT', 21, false),
                    parseArg: J$.R(835081, 'parseInteger', parseInteger, false, true)
                }, 11, false),
                positiveInteger: J$.T(835121, {
                    takesArg: J$.T(835097, true, 23, false),
                    helpArg: J$.T(835105, 'INT', 21, false),
                    parseArg: J$.R(835113, 'parsePositiveInteger', parsePositiveInteger, false, true)
                }, 11, false),
                date: J$.T(835153, {
                    takesArg: J$.T(835129, true, 23, false),
                    helpArg: J$.T(835137, 'DATE', 21, false),
                    parseArg: J$.R(835145, 'parseDate', parseDate, false, true)
                }, 11, false),
                arrayOfBool: J$.T(835185, {
                    takesArg: J$.T(835161, false, 23, false),
                    array: J$.T(835169, true, 23, false),
                    parseArg: J$.R(835177, 'parseBool', parseBool, false, true)
                }, 11, false),
                arrayOfString: J$.T(835225, {
                    takesArg: J$.T(835193, true, 23, false),
                    helpArg: J$.T(835201, 'ARG', 21, false),
                    array: J$.T(835209, true, 23, false),
                    parseArg: J$.R(835217, 'parseString', parseString, false, true)
                }, 11, false),
                arrayOfNumber: J$.T(835265, {
                    takesArg: J$.T(835233, true, 23, false),
                    helpArg: J$.T(835241, 'NUM', 21, false),
                    array: J$.T(835249, true, 23, false),
                    parseArg: J$.R(835257, 'parseNumber', parseNumber, false, true)
                }, 11, false),
                arrayOfInteger: J$.T(835305, {
                    takesArg: J$.T(835273, true, 23, false),
                    helpArg: J$.T(835281, 'INT', 21, false),
                    array: J$.T(835289, true, 23, false),
                    parseArg: J$.R(835297, 'parseInteger', parseInteger, false, true)
                }, 11, false),
                arrayOfPositiveInteger: J$.T(835345, {
                    takesArg: J$.T(835313, true, 23, false),
                    helpArg: J$.T(835321, 'INT', 21, false),
                    array: J$.T(835329, true, 23, false),
                    parseArg: J$.R(835337, 'parsePositiveInteger', parsePositiveInteger, false, true)
                }, 11, false),
                arrayOfDate: J$.T(835385, {
                    takesArg: J$.T(835353, true, 23, false),
                    helpArg: J$.T(835361, 'INT', 21, false),
                    array: J$.T(835369, true, 23, false),
                    parseArg: J$.R(835377, 'parseDate', parseDate, false, true)
                }, 11, false)
            }, 11, false), optionTypes, false, true);
            J$.P(837537, J$.G(837449, J$.R(837441, 'Parser', Parser, false, true), 'prototype'), 'optionTakesArg', J$.T(837529, function optionTakesArg(option) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(837505, arguments.callee, this, arguments);
                            arguments = J$.N(837513, 'arguments', arguments, true, false, false);
                            option = J$.N(837521, 'option', option, true, false, false);
                            return J$.Rt(837497, J$.G(837489, J$.G(837481, J$.R(837457, 'optionTypes', optionTypes, false, true), J$.G(837473, J$.R(837465, 'option', option, false, false), 'type')), 'takesArg'));
                        } catch (J$e) {
                            J$.Ex(850281, J$e);
                        } finally {
                            if (J$.Fr(850289))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(841609, J$.G(837553, J$.R(837545, 'Parser', Parser, false, true), 'prototype'), 'parse', J$.T(841601, function parse(inputs) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(841425, arguments.callee, this, arguments);
                            function addOpt(option, optstr, key, val, from) {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(838425, arguments.callee, this, arguments);
                                            arguments = J$.N(838433, 'arguments', arguments, true, false, false);
                                            option = J$.N(838441, 'option', option, true, false, false);
                                            optstr = J$.N(838449, 'optstr', optstr, true, false, false);
                                            key = J$.N(838457, 'key', key, true, false, false);
                                            val = J$.N(838465, 'val', val, true, false, false);
                                            from = J$.N(838473, 'from', from, true, false, false);
                                            J$.N(838481, 'type', type, false, false, false);
                                            J$.N(838489, 'parsedVal', parsedVal, false, false, false);
                                            J$.N(838497, 'i', i, false, false, false);
                                            J$.N(838505, 'item', item, false, false, false);
                                            var type = J$.W(838009, 'type', J$.G(838001, J$.R(837977, 'optionTypes', optionTypes, false, true), J$.G(837993, J$.R(837985, 'option', option, false, false), 'type')), type, false, false);
                                            var parsedVal = J$.W(838057, 'parsedVal', J$.M(838049, J$.R(838017, 'type', type, false, false), 'parseArg', false)(J$.R(838025, 'option', option, false, false), J$.R(838033, 'optstr', optstr, false, false), J$.R(838041, 'val', val, false, false)), parsedVal, false, false);
                                            if (J$.C(50912, J$.G(838073, J$.R(838065, 'type', type, false, false), 'array'))) {
                                                if (J$.C(50880, J$.U(141794, '!', J$.G(838097, J$.R(838081, 'opts', opts, false, false), J$.R(838089, 'key', key, false, false))))) {
                                                    J$.P(838129, J$.R(838105, 'opts', opts, false, false), J$.R(838113, 'key', key, false, false), J$.T(838121, [], 10, false));
                                                }
                                                if (J$.C(50904, J$.C(50888, J$.G(838145, J$.R(838137, 'type', type, false, false), 'arrayFlatten')) ? J$.M(838169, J$.I(typeof Array === 'undefined' ? Array = J$.R(838153, 'Array', undefined, true, true) : Array = J$.R(838153, 'Array', Array, true, true)), 'isArray', false)(J$.R(838161, 'parsedVal', parsedVal, false, false)) : J$._())) {
                                                    for (var i = J$.W(838185, 'i', J$.T(838177, 0, 22, false), i, false, false); J$.C(50896, J$.B(141802, '<', J$.R(838193, 'i', i, false, false), J$.G(838209, J$.R(838201, 'parsedVal', parsedVal, false, false), 'length'))); J$.B(141826, '-', i = J$.W(838225, 'i', J$.B(141818, '+', J$.U(141810, '+', J$.R(838217, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                        J$.M(838281, J$.G(838249, J$.R(838233, 'opts', opts, false, false), J$.R(838241, 'key', key, false, false)), 'push', false)(J$.G(838273, J$.R(838257, 'parsedVal', parsedVal, false, false), J$.R(838265, 'i', i, false, false)));
                                                    }
                                                } else {
                                                    J$.M(838321, J$.G(838305, J$.R(838289, 'opts', opts, false, false), J$.R(838297, 'key', key, false, false)), 'push', false)(J$.R(838313, 'parsedVal', parsedVal, false, false));
                                                }
                                            } else {
                                                J$.P(838353, J$.R(838329, 'opts', opts, false, false), J$.R(838337, 'key', key, false, false), J$.R(838345, 'parsedVal', parsedVal, false, false));
                                            }
                                            var item = J$.W(838393, 'item', J$.T(838385, {
                                                key: J$.R(838361, 'key', key, false, false),
                                                value: J$.R(838369, 'parsedVal', parsedVal, false, false),
                                                from: J$.R(838377, 'from', from, false, false)
                                            }, 11, false), item, false, false);
                                            J$.M(838417, J$.R(838401, '_order', _order, false, false), 'push', false)(J$.R(838409, 'item', item, false, false));
                                        } catch (J$e) {
                                            J$.Ex(850297, J$e);
                                        } finally {
                                            if (J$.Fr(850305))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(841433, 'arguments', arguments, true, false, false);
                            inputs = J$.N(841441, 'inputs', inputs, true, false, false);
                            J$.N(841449, 'self', self, false, false, false);
                            J$.N(841457, 'argv', argv, false, false, false);
                            J$.N(841465, 'slice', slice, false, false, false);
                            J$.N(841473, 'args', args, false, false, false);
                            J$.N(841481, 'env', env, false, false, false);
                            J$.N(841489, 'opts', opts, false, false, false);
                            J$.N(841497, '_order', _order, false, false, false);
                            addOpt = J$.N(841513, 'addOpt', J$.T(841505, addOpt, 12, false), true, false, false);
                            J$.N(841521, '_args', _args, false, false, false);
                            J$.N(841529, 'i', i, false, false, false);
                            J$.N(841537, 'arg', arg, false, false, false);
                            J$.N(841545, 'name', name, false, false, false);
                            J$.N(841553, 'val', val, false, false, false);
                            J$.N(841561, 'idx', idx, false, false, false);
                            J$.N(841569, 'option', option, false, false, false);
                            J$.N(841577, 'takesArg', takesArg, false, false, false);
                            J$.N(841585, 'j', j, false, false, false);
                            J$.N(841593, 'allFound', allFound, false, false, false);
                            var self = J$.W(837569, 'self', J$.R(837561, 'this', this, false, false), self, false, false);
                            if (J$.C(50840, J$.M(837609, J$.I(typeof Array === 'undefined' ? Array = J$.R(837577, 'Array', undefined, true, true) : Array = J$.R(837577, 'Array', Array, true, true)), 'isArray', false)(J$.G(837601, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(837585, 'arguments', undefined, true, true) : arguments = J$.R(837585, 'arguments', arguments, true, true)), J$.T(837593, 0, 22, false))))) {
                                inputs = J$.W(837673, 'inputs', J$.T(837665, {
                                    argv: J$.G(837633, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(837617, 'arguments', undefined, true, true) : arguments = J$.R(837617, 'arguments', arguments, true, true)), J$.T(837625, 0, 22, false)),
                                    slice: J$.G(837657, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(837641, 'arguments', undefined, true, true) : arguments = J$.R(837641, 'arguments', arguments, true, true)), J$.T(837649, 1, 22, false))
                                }, 11, false), inputs, false, false);
                            }
                            J$.M(837705, J$.R(837681, 'assert', assert, false, true), 'optionalObject', false)(J$.R(837689, 'inputs', inputs, false, false), J$.T(837697, 'inputs', 21, false));
                            if (J$.C(50848, J$.U(141778, '!', J$.R(837713, 'inputs', inputs, false, false)))) {
                                inputs = J$.W(837729, 'inputs', J$.T(837721, {}, 11, false), inputs, false, false);
                            }
                            J$.M(837769, J$.R(837737, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(837753, J$.R(837745, 'inputs', inputs, false, false), 'argv'), J$.T(837761, 'inputs.argv', 21, false));
                            var argv = J$.W(837809, 'argv', J$.C(50856, J$.G(837785, J$.R(837777, 'inputs', inputs, false, false), 'argv')) ? J$._() : J$.G(837801, J$.I(typeof process === 'undefined' ? process = J$.R(837793, 'process', undefined, true, true) : process = J$.R(837793, 'process', process, true, true)), 'argv'), argv, false, false);
                            var slice = J$.W(837865, 'slice', J$.C(50864, J$.B(141786, '!==', J$.G(837825, J$.R(837817, 'inputs', inputs, false, false), 'slice'), J$.T(837833, undefined, 24, false))) ? J$.G(837849, J$.R(837841, 'inputs', inputs, false, false), 'slice') : J$.T(837857, 2, 22, false), slice, false, false);
                            var args = J$.W(837897, 'args', J$.M(837889, J$.R(837873, 'argv', argv, false, false), 'slice', false)(J$.R(837881, 'slice', slice, false, false)), args, false, false);
                            var env = J$.W(837937, 'env', J$.C(50872, J$.G(837913, J$.R(837905, 'inputs', inputs, false, false), 'env')) ? J$._() : J$.G(837929, J$.I(typeof process === 'undefined' ? process = J$.R(837921, 'process', undefined, true, true) : process = J$.R(837921, 'process', process, true, true)), 'env'), env, false, false);
                            var opts = J$.W(837953, 'opts', J$.T(837945, {}, 11, false), opts, false, false);
                            var _order = J$.W(837969, '_order', J$.T(837961, [], 10, false), _order, false, false);
                            var _args = J$.W(838521, '_args', J$.T(838513, [], 10, false), _args, false, false);
                            var i = J$.W(838537, 'i', J$.T(838529, 0, 22, false), i, false, false);
                            outer:
                                while (J$.C(51120, J$.B(141834, '<', J$.R(838545, 'i', i, false, false), J$.G(838561, J$.R(838553, 'args', args, false, false), 'length')))) {
                                    var arg = J$.W(838593, 'arg', J$.G(838585, J$.R(838569, 'args', args, false, false), J$.R(838577, 'i', i, false, false)), arg, false, false);
                                    if (J$.C(51112, J$.B(141842, '===', J$.R(838601, 'arg', arg, false, false), J$.T(838609, '--', 21, false)))) {
                                        J$.B(141866, '-', i = J$.W(838625, 'i', J$.B(141858, '+', J$.U(141850, '+', J$.R(838617, 'i', i, false, false)), 1), i, false, false), 1);
                                        break;
                                    } else if (J$.C(51104, J$.B(141874, '===', J$.M(838657, J$.R(838633, 'arg', arg, false, false), 'slice', false)(J$.T(838641, 0, 22, false), J$.T(838649, 2, 22, false)), J$.T(838665, '--', 21, false)))) {
                                        var name = J$.W(838697, 'name', J$.M(838689, J$.R(838673, 'arg', arg, false, false), 'slice', false)(J$.T(838681, 2, 22, false)), name, false, false);
                                        var val = J$.W(838713, 'val', J$.T(838705, null, 25, false), val, false, false);
                                        var idx = J$.W(838745, 'idx', J$.M(838737, J$.R(838721, 'name', name, false, false), 'indexOf', false)(J$.T(838729, '=', 21, false)), idx, false, false);
                                        if (J$.C(50920, J$.B(141890, '!==', J$.R(838753, 'idx', idx, false, false), J$.U(141882, '-', J$.T(838761, 1, 22, false))))) {
                                            val = J$.W(838801, 'val', J$.M(838793, J$.R(838769, 'name', name, false, false), 'slice', false)(J$.B(141898, '+', J$.R(838777, 'idx', idx, false, false), J$.T(838785, 1, 22, false))), val, false, false);
                                            name = J$.W(838841, 'name', J$.M(838833, J$.R(838809, 'name', name, false, false), 'slice', false)(J$.T(838817, 0, 22, false), J$.R(838825, 'idx', idx, false, false)), name, false, false);
                                        }
                                        var option = J$.W(838881, 'option', J$.G(838873, J$.G(838857, J$.R(838849, 'this', this, false, false), 'optionFromName'), J$.R(838865, 'name', name, false, false)), option, false, false);
                                        if (J$.C(50984, J$.U(141906, '!', J$.R(838889, 'option', option, false, false)))) {
                                            if (J$.C(50936, J$.U(141914, '!', J$.G(838905, J$.R(838897, 'this', this, false, false), 'allowUnknown'))))
                                                throw J$.F(838953, J$.I(typeof Error === 'undefined' ? Error = J$.R(838913, 'Error', undefined, true, true) : Error = J$.R(838913, 'Error', Error, true, true)), true)(J$.F(838945, J$.R(838921, 'format', format, false, true), false)(J$.T(838929, 'unknown option: "--%s"', 21, false), J$.R(838937, 'name', name, false, false)));
                                            else if (J$.C(50928, J$.G(838969, J$.R(838961, 'this', this, false, false), 'interspersed')))
                                                J$.M(838993, J$.R(838977, '_args', _args, false, false), 'push', false)(J$.R(838985, 'arg', arg, false, false));
                                            else
                                                break outer;
                                        } else {
                                            var takesArg = J$.W(839025, 'takesArg', J$.M(839017, J$.R(839001, 'this', this, false, false), 'optionTakesArg', false)(J$.R(839009, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(50952, J$.C(50944, J$.B(141922, '!==', J$.R(839033, 'val', val, false, false), J$.T(839041, null, 25, false))) ? J$.U(141930, '!', J$.R(839049, 'takesArg', takesArg, false, false)) : J$._())) {
                                                throw J$.F(839113, J$.I(typeof Error === 'undefined' ? Error = J$.R(839057, 'Error', undefined, true, true) : Error = J$.R(839057, 'Error', Error, true, true)), true)(J$.F(839105, J$.R(839065, 'format', format, false, true), false)(J$.B(141938, '+', J$.T(839073, 'argument given to "--%s" option ', 21, false), J$.T(839081, 'that does not take one: "%s"', 21, false)), J$.R(839089, 'name', name, false, false), J$.R(839097, 'arg', arg, false, false)));
                                            }
                                            if (J$.C(50976, J$.U(141946, '!', J$.R(839121, 'takesArg', takesArg, false, false)))) {
                                                J$.F(839193, J$.R(839129, 'addOpt', addOpt, false, false), false)(J$.R(839137, 'option', option, false, false), J$.B(141954, '+', J$.T(839145, '--', 21, false), J$.R(839153, 'name', name, false, false)), J$.G(839169, J$.R(839161, 'option', option, false, false), 'key'), J$.T(839177, true, 23, false), J$.T(839185, 'argv', 21, false));
                                            } else if (J$.C(50968, J$.B(141962, '!==', J$.R(839201, 'val', val, false, false), J$.T(839209, null, 25, false)))) {
                                                J$.F(839281, J$.R(839217, 'addOpt', addOpt, false, false), false)(J$.R(839225, 'option', option, false, false), J$.B(141970, '+', J$.T(839233, '--', 21, false), J$.R(839241, 'name', name, false, false)), J$.G(839257, J$.R(839249, 'option', option, false, false), 'key'), J$.R(839265, 'val', val, false, false), J$.T(839273, 'argv', 21, false));
                                            } else if (J$.C(50960, J$.B(141986, '>=', J$.B(141978, '+', J$.R(839289, 'i', i, false, false), J$.T(839297, 1, 22, false)), J$.G(839313, J$.R(839305, 'args', args, false, false), 'length')))) {
                                                throw J$.F(839369, J$.I(typeof Error === 'undefined' ? Error = J$.R(839321, 'Error', undefined, true, true) : Error = J$.R(839321, 'Error', Error, true, true)), true)(J$.F(839361, J$.R(839329, 'format', format, false, true), false)(J$.B(141994, '+', J$.T(839337, 'do not have enough args for "--%s" ', 21, false), J$.T(839345, 'option', 21, false)), J$.R(839353, 'name', name, false, false)));
                                            } else {
                                                J$.F(839465, J$.R(839377, 'addOpt', addOpt, false, false), false)(J$.R(839385, 'option', option, false, false), J$.B(142002, '+', J$.T(839393, '--', 21, false), J$.R(839401, 'name', name, false, false)), J$.G(839417, J$.R(839409, 'option', option, false, false), 'key'), J$.G(839449, J$.R(839425, 'args', args, false, false), J$.B(142010, '+', J$.R(839433, 'i', i, false, false), J$.T(839441, 1, 22, false))), J$.T(839457, 'argv', 21, false));
                                                J$.B(142034, '-', i = J$.W(839481, 'i', J$.B(142026, '+', J$.U(142018, '+', J$.R(839473, 'i', i, false, false)), 1), i, false, false), 1);
                                            }
                                        }
                                    } else if (J$.C(51096, J$.C(50992, J$.B(142042, '===', J$.G(839505, J$.R(839489, 'arg', arg, false, false), J$.T(839497, 0, 22, false)), J$.T(839513, '-', 21, false))) ? J$.B(142050, '>', J$.G(839529, J$.R(839521, 'arg', arg, false, false), 'length'), J$.T(839537, 1, 22, false)) : J$._())) {
                                        var j = J$.W(839553, 'j', J$.T(839545, 1, 22, false), j, false, false);
                                        var allFound = J$.W(839569, 'allFound', J$.T(839561, true, 23, false), allFound, false, false);
                                        while (J$.C(51040, J$.B(142058, '<', J$.R(839577, 'j', j, false, false), J$.G(839593, J$.R(839585, 'arg', arg, false, false), 'length')))) {
                                            var name = J$.W(839625, 'name', J$.G(839617, J$.R(839601, 'arg', arg, false, false), J$.R(839609, 'j', j, false, false)), name, false, false);
                                            var option = J$.W(839665, 'option', J$.G(839657, J$.G(839641, J$.R(839633, 'this', this, false, false), 'optionFromName'), J$.R(839649, 'name', name, false, false)), option, false, false);
                                            if (J$.C(51032, J$.U(142066, '!', J$.R(839673, 'option', option, false, false)))) {
                                                allFound = J$.W(839689, 'allFound', J$.T(839681, false, 23, false), allFound, false, false);
                                                if (J$.C(51016, J$.G(839705, J$.R(839697, 'this', this, false, false), 'allowUnknown'))) {
                                                    if (J$.C(51000, J$.G(839721, J$.R(839713, 'this', this, false, false), 'interspersed'))) {
                                                        J$.M(839745, J$.R(839729, '_args', _args, false, false), 'push', false)(J$.R(839737, 'arg', arg, false, false));
                                                        break;
                                                    } else
                                                        break outer;
                                                } else if (J$.C(51008, J$.B(142074, '>', J$.G(839761, J$.R(839753, 'arg', arg, false, false), 'length'), J$.T(839769, 2, 22, false)))) {
                                                    throw J$.F(839825, J$.I(typeof Error === 'undefined' ? Error = J$.R(839777, 'Error', undefined, true, true) : Error = J$.R(839777, 'Error', Error, true, true)), true)(J$.F(839817, J$.R(839785, 'format', format, false, true), false)(J$.T(839793, 'unknown option: "-%s" in "%s" group', 21, false), J$.R(839801, 'name', name, false, false), J$.R(839809, 'arg', arg, false, false)));
                                                } else {
                                                    throw J$.F(839873, J$.I(typeof Error === 'undefined' ? Error = J$.R(839833, 'Error', undefined, true, true) : Error = J$.R(839833, 'Error', Error, true, true)), true)(J$.F(839865, J$.R(839841, 'format', format, false, true), false)(J$.T(839849, 'unknown option: "-%s"', 21, false), J$.R(839857, 'name', name, false, false)));
                                                }
                                            } else if (J$.C(51024, J$.M(839897, J$.R(839881, 'this', this, false, false), 'optionTakesArg', false)(J$.R(839889, 'option', option, false, false)))) {
                                                break;
                                            }
                                            J$.B(142098, '-', j = J$.W(839913, 'j', J$.B(142090, '+', J$.U(142082, '+', J$.R(839905, 'j', j, false, false)), 1), j, false, false), 1);
                                        }
                                        j = J$.W(839929, 'j', J$.T(839921, 1, 22, false), j, false, false);
                                        while (J$.C(51080, J$.C(51048, J$.R(839937, 'allFound', allFound, false, false)) ? J$.B(142106, '<', J$.R(839945, 'j', j, false, false), J$.G(839961, J$.R(839953, 'arg', arg, false, false), 'length')) : J$._())) {
                                            var name = J$.W(839993, 'name', J$.G(839985, J$.R(839969, 'arg', arg, false, false), J$.R(839977, 'j', j, false, false)), name, false, false);
                                            var val = J$.W(840033, 'val', J$.M(840025, J$.R(840001, 'arg', arg, false, false), 'slice', false)(J$.B(142114, '+', J$.R(840009, 'j', j, false, false), J$.T(840017, 1, 22, false))), val, false, false);
                                            var option = J$.W(840073, 'option', J$.G(840065, J$.G(840049, J$.R(840041, 'this', this, false, false), 'optionFromName'), J$.R(840057, 'name', name, false, false)), option, false, false);
                                            var takesArg = J$.W(840105, 'takesArg', J$.M(840097, J$.R(840081, 'this', this, false, false), 'optionTakesArg', false)(J$.R(840089, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(51072, J$.U(142122, '!', J$.R(840113, 'takesArg', takesArg, false, false)))) {
                                                J$.F(840185, J$.R(840121, 'addOpt', addOpt, false, false), false)(J$.R(840129, 'option', option, false, false), J$.B(142130, '+', J$.T(840137, '-', 21, false), J$.R(840145, 'name', name, false, false)), J$.G(840161, J$.R(840153, 'option', option, false, false), 'key'), J$.T(840169, true, 23, false), J$.T(840177, 'argv', 21, false));
                                            } else if (J$.C(51064, J$.R(840193, 'val', val, false, false))) {
                                                J$.F(840265, J$.R(840201, 'addOpt', addOpt, false, false), false)(J$.R(840209, 'option', option, false, false), J$.B(142138, '+', J$.T(840217, '-', 21, false), J$.R(840225, 'name', name, false, false)), J$.G(840241, J$.R(840233, 'option', option, false, false), 'key'), J$.R(840249, 'val', val, false, false), J$.T(840257, 'argv', 21, false));
                                                break;
                                            } else {
                                                if (J$.C(51056, J$.B(142154, '>=', J$.B(142146, '+', J$.R(840273, 'i', i, false, false), J$.T(840281, 1, 22, false)), J$.G(840297, J$.R(840289, 'args', args, false, false), 'length')))) {
                                                    throw J$.F(840353, J$.I(typeof Error === 'undefined' ? Error = J$.R(840305, 'Error', undefined, true, true) : Error = J$.R(840305, 'Error', Error, true, true)), true)(J$.F(840345, J$.R(840313, 'format', format, false, true), false)(J$.B(142162, '+', J$.T(840321, 'do not have enough args ', 21, false), J$.T(840329, 'for "-%s" option', 21, false)), J$.R(840337, 'name', name, false, false)));
                                                }
                                                J$.F(840449, J$.R(840361, 'addOpt', addOpt, false, false), false)(J$.R(840369, 'option', option, false, false), J$.B(142170, '+', J$.T(840377, '-', 21, false), J$.R(840385, 'name', name, false, false)), J$.G(840401, J$.R(840393, 'option', option, false, false), 'key'), J$.G(840433, J$.R(840409, 'args', args, false, false), J$.B(142178, '+', J$.R(840417, 'i', i, false, false), J$.T(840425, 1, 22, false))), J$.T(840441, 'argv', 21, false));
                                                J$.B(142202, '-', i = J$.W(840465, 'i', J$.B(142194, '+', J$.U(142186, '+', J$.R(840457, 'i', i, false, false)), 1), i, false, false), 1);
                                                break;
                                            }
                                            J$.B(142226, '-', j = J$.W(840481, 'j', J$.B(142218, '+', J$.U(142210, '+', J$.R(840473, 'j', j, false, false)), 1), j, false, false), 1);
                                        }
                                    } else if (J$.C(51088, J$.G(840497, J$.R(840489, 'this', this, false, false), 'interspersed'))) {
                                        J$.M(840521, J$.R(840505, '_args', _args, false, false), 'push', false)(J$.R(840513, 'arg', arg, false, false));
                                    } else {
                                        break outer;
                                    }
                                    J$.B(142250, '-', i = J$.W(840537, 'i', J$.B(142242, '+', J$.U(142234, '+', J$.R(840529, 'i', i, false, false)), 1), i, false, false), 1);
                                }
                            _args = J$.W(840585, '_args', J$.M(840577, J$.R(840545, '_args', _args, false, false), 'concat', false)(J$.M(840569, J$.R(840553, 'args', args, false, false), 'slice', false)(J$.R(840561, 'i', i, false, false))), _args, false, false);
                            J$.M(841017, J$.M(840617, J$.I(typeof Object === 'undefined' ? Object = J$.R(840593, 'Object', undefined, true, true) : Object = J$.R(840593, 'Object', Object, true, true)), 'keys', false)(J$.G(840609, J$.R(840601, 'this', this, false, false), 'optionFromEnv')), 'forEach', false)(J$.T(841009, function (envname) {
                                jalangiLabel22:
                                    while (true) {
                                        try {
                                            J$.Fe(840961, arguments.callee, this, arguments);
                                            arguments = J$.N(840969, 'arguments', arguments, true, false, false);
                                            envname = J$.N(840977, 'envname', envname, true, false, false);
                                            J$.N(840985, 'val', val, false, false, false);
                                            J$.N(840993, 'option', option, false, false, false);
                                            J$.N(841001, 'takesArg', takesArg, false, false, false);
                                            var val = J$.W(840649, 'val', J$.G(840641, J$.R(840625, 'env', env, false, false), J$.R(840633, 'envname', envname, false, false)), val, false, false);
                                            if (J$.C(51128, J$.B(142258, '===', J$.R(840657, 'val', val, false, false), J$.T(840665, undefined, 24, false))))
                                                return J$.Rt(840673, undefined);
                                            var option = J$.W(840713, 'option', J$.G(840705, J$.G(840689, J$.R(840681, 'self', self, false, false), 'optionFromEnv'), J$.R(840697, 'envname', envname, false, false)), option, false, false);
                                            if (J$.C(51136, J$.B(142266, '!==', J$.G(840745, J$.R(840721, 'opts', opts, false, false), J$.G(840737, J$.R(840729, 'option', option, false, false), 'key')), J$.T(840753, undefined, 24, false))))
                                                return J$.Rt(840761, undefined);
                                            var takesArg = J$.W(840793, 'takesArg', J$.M(840785, J$.R(840769, 'self', self, false, false), 'optionTakesArg', false)(J$.R(840777, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(51152, J$.R(840801, 'takesArg', takesArg, false, false))) {
                                                J$.F(840865, J$.R(840809, 'addOpt', addOpt, false, false), false)(J$.R(840817, 'option', option, false, false), J$.R(840825, 'envname', envname, false, false), J$.G(840841, J$.R(840833, 'option', option, false, false), 'key'), J$.R(840849, 'val', val, false, false), J$.T(840857, 'env', 21, false));
                                            } else if (J$.C(51144, J$.B(142274, '!==', J$.R(840873, 'val', val, false, false), J$.T(840881, '', 21, false)))) {
                                                J$.F(840953, J$.R(840889, 'addOpt', addOpt, false, false), false)(J$.R(840897, 'option', option, false, false), J$.R(840905, 'envname', envname, false, false), J$.G(840921, J$.R(840913, 'option', option, false, false), 'key'), J$.B(142282, '!==', J$.R(840929, 'val', val, false, false), J$.T(840937, '0', 21, false)), J$.T(840945, 'env', 21, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(850313, J$e);
                                        } finally {
                                            if (J$.Fr(850321))
                                                continue jalangiLabel22;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(841353, J$.G(841033, J$.R(841025, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(841345, function (o) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(841321, arguments.callee, this, arguments);
                                            arguments = J$.N(841329, 'arguments', arguments, true, false, false);
                                            o = J$.N(841337, 'o', o, true, false, false);
                                            if (J$.C(51184, J$.B(142290, '===', J$.G(841065, J$.R(841041, 'opts', opts, false, false), J$.G(841057, J$.R(841049, 'o', o, false, false), 'key')), J$.T(841073, undefined, 24, false)))) {
                                                if (J$.C(51176, J$.B(142298, '!==', J$.G(841097, J$.R(841081, 'o', o, false, false), J$.T(841089, 'default', 21, false)), J$.T(841105, undefined, 24, false)))) {
                                                    J$.P(841161, J$.R(841113, 'opts', opts, false, false), J$.G(841129, J$.R(841121, 'o', o, false, false), 'key'), J$.G(841153, J$.R(841137, 'o', o, false, false), J$.T(841145, 'default', 21, false)));
                                                } else if (J$.C(51168, J$.C(51160, J$.G(841177, J$.R(841169, 'o', o, false, false), 'type')) ? J$.B(142306, '!==', J$.G(841225, J$.G(841209, J$.R(841185, 'optionTypes', optionTypes, false, true), J$.G(841201, J$.R(841193, 'o', o, false, false), 'type')), J$.T(841217, 'default', 21, false)), J$.T(841233, undefined, 24, false)) : J$._())) {
                                                    J$.P(841313, J$.R(841241, 'opts', opts, false, false), J$.G(841257, J$.R(841249, 'o', o, false, false), 'key'), J$.G(841305, J$.G(841289, J$.R(841265, 'optionTypes', optionTypes, false, true), J$.G(841281, J$.R(841273, 'o', o, false, false), 'type')), J$.T(841297, 'default', 21, false)));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(850329, J$e);
                                        } finally {
                                            if (J$.Fr(850337))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(841377, J$.R(841361, 'opts', opts, false, false), '_order', J$.R(841369, '_order', _order, false, false));
                            J$.P(841401, J$.R(841385, 'opts', opts, false, false), '_args', J$.R(841393, '_args', _args, false, false));
                            return J$.Rt(841417, J$.R(841409, 'opts', opts, false, false));
                        } catch (J$e) {
                            J$.Ex(850345, J$e);
                        } finally {
                            if (J$.Fr(850353))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(845569, J$.G(841625, J$.R(841617, 'Parser', Parser, false, true), 'prototype'), 'help', J$.T(845561, function help(config) {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(845449, arguments.callee, this, arguments);
                            arguments = J$.N(845457, 'arguments', arguments, true, false, false);
                            config = J$.N(845465, 'config', config, true, false, false);
                            J$.N(845473, 'indent', indent, false, false, false);
                            J$.N(845481, 'headingIndent', headingIndent, false, false, false);
                            J$.N(845489, 'nameSort', nameSort, false, false, false);
                            J$.N(845497, 'maxCol', maxCol, false, false, false);
                            J$.N(845505, 'minHelpCol', minHelpCol, false, false, false);
                            J$.N(845513, 'maxHelpCol', maxHelpCol, false, false, false);
                            J$.N(845521, 'lines', lines, false, false, false);
                            J$.N(845529, 'maxWidth', maxWidth, false, false, false);
                            J$.N(845537, 'helpCol', helpCol, false, false, false);
                            J$.N(845545, 'i', i, false, false, false);
                            J$.N(845553, 'rv', rv, false, false, false);
                            config = J$.W(841649, 'config', J$.C(51192, J$.R(841633, 'config', config, false, false)) ? J$._() : J$.T(841641, {}, 11, false), config, false, false);
                            J$.M(841681, J$.R(841657, 'assert', assert, false, true), 'object', false)(J$.R(841665, 'config', config, false, false), J$.T(841673, 'config', 21, false));
                            var indent = J$.W(841737, 'indent', J$.F(841729, J$.R(841689, 'makeIndent', makeIndent, false, true), false)(J$.G(841705, J$.R(841697, 'config', config, false, false), 'indent'), J$.T(841713, 4, 22, false), J$.T(841721, 'config.indent', 21, false)), indent, false, false);
                            var headingIndent = J$.W(841825, 'headingIndent', J$.F(841817, J$.R(841745, 'makeIndent', makeIndent, false, true), false)(J$.G(841761, J$.R(841753, 'config', config, false, false), 'headingIndent'), J$.M(841801, J$.I(typeof Math === 'undefined' ? Math = J$.R(841769, 'Math', undefined, true, true) : Math = J$.R(841769, 'Math', Math, true, true)), 'round', false)(J$.B(142314, '/', J$.G(841785, J$.R(841777, 'indent', indent, false, false), 'length'), J$.T(841793, 2, 22, false))), J$.T(841809, 'config.headingIndent', 21, false)), headingIndent, false, false);
                            J$.M(841865, J$.R(841833, 'assert', assert, false, true), 'optionalString', false)(J$.G(841849, J$.R(841841, 'config', config, false, false), 'nameSort'), J$.T(841857, 'config.nameSort', 21, false));
                            var nameSort = J$.W(841897, 'nameSort', J$.C(51200, J$.G(841881, J$.R(841873, 'config', config, false, false), 'nameSort')) ? J$._() : J$.T(841889, 'length', 21, false), nameSort, false, false);
                            J$.M(841961, J$.R(841905, 'assert', assert, false, true), 'ok', false)(J$.U(142322, '~', J$.M(841945, J$.T(841929, [
                                J$.T(841913, 'length', 21, false),
                                J$.T(841921, 'none', 21, false)
                            ], 10, false), 'indexOf', false)(J$.R(841937, 'nameSort', nameSort, false, false))), J$.T(841953, 'invalid "config.nameSort"', 21, false));
                            J$.M(842001, J$.R(841969, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(841985, J$.R(841977, 'config', config, false, false), 'maxCol'), J$.T(841993, 'config.maxCol', 21, false));
                            J$.M(842041, J$.R(842009, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(842025, J$.R(842017, 'config', config, false, false), 'maxHelpCol'), J$.T(842033, 'config.maxHelpCol', 21, false));
                            J$.M(842081, J$.R(842049, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(842065, J$.R(842057, 'config', config, false, false), 'minHelpCol'), J$.T(842073, 'config.minHelpCol', 21, false));
                            J$.M(842121, J$.R(842089, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(842105, J$.R(842097, 'config', config, false, false), 'helpCol'), J$.T(842113, 'config.helpCol', 21, false));
                            J$.M(842161, J$.R(842129, 'assert', assert, false, true), 'optionalBool', false)(J$.G(842145, J$.R(842137, 'config', config, false, false), 'includeEnv'), J$.T(842153, 'config.includeEnv', 21, false));
                            J$.M(842201, J$.R(842169, 'assert', assert, false, true), 'optionalBool', false)(J$.G(842185, J$.R(842177, 'config', config, false, false), 'includeDefault'), J$.T(842193, 'config.includeDefault', 21, false));
                            J$.M(842241, J$.R(842209, 'assert', assert, false, true), 'optionalBool', false)(J$.G(842225, J$.R(842217, 'config', config, false, false), 'helpWrap'), J$.T(842233, 'config.helpWrap', 21, false));
                            var maxCol = J$.W(842273, 'maxCol', J$.C(51208, J$.G(842257, J$.R(842249, 'config', config, false, false), 'maxCol')) ? J$._() : J$.T(842265, 80, 22, false), maxCol, false, false);
                            var minHelpCol = J$.W(842305, 'minHelpCol', J$.C(51216, J$.G(842289, J$.R(842281, 'config', config, false, false), 'minHelpCol')) ? J$._() : J$.T(842297, 20, 22, false), minHelpCol, false, false);
                            var maxHelpCol = J$.W(842337, 'maxHelpCol', J$.C(51224, J$.G(842321, J$.R(842313, 'config', config, false, false), 'maxHelpCol')) ? J$._() : J$.T(842329, 40, 22, false), maxHelpCol, false, false);
                            var lines = J$.W(842353, 'lines', J$.T(842345, [], 10, false), lines, false, false);
                            var maxWidth = J$.W(842369, 'maxWidth', J$.T(842361, 0, 22, false), maxWidth, false, false);
                            J$.M(843233, J$.G(842385, J$.R(842377, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(843225, function (o) {
                                jalangiLabel27:
                                    while (true) {
                                        try {
                                            J$.Fe(843169, arguments.callee, this, arguments);
                                            arguments = J$.N(843177, 'arguments', arguments, true, false, false);
                                            o = J$.N(843185, 'o', o, true, false, false);
                                            J$.N(843193, 'type', type, false, false, false);
                                            J$.N(843201, 'arg', arg, false, false, false);
                                            J$.N(843209, 'line', line, false, false, false);
                                            J$.N(843217, 'names', names, false, false, false);
                                            if (J$.C(51232, J$.G(842401, J$.R(842393, 'o', o, false, false), 'hidden'))) {
                                                return J$.Rt(842409, undefined);
                                            }
                                            if (J$.C(51248, J$.C(51240, J$.B(142330, '!==', J$.G(842425, J$.R(842417, 'o', o, false, false), 'group'), J$.T(842433, undefined, 24, false))) ? J$.B(142338, '!==', J$.G(842449, J$.R(842441, 'o', o, false, false), 'group'), J$.T(842457, null, 25, false)) : J$._())) {
                                                J$.M(842481, J$.R(842465, 'lines', lines, false, false), 'push', false)(J$.T(842473, null, 25, false));
                                                return J$.Rt(842489, undefined);
                                            }
                                            var type = J$.W(842529, 'type', J$.G(842521, J$.R(842497, 'optionTypes', optionTypes, false, true), J$.G(842513, J$.R(842505, 'o', o, false, false), 'type')), type, false, false);
                                            var arg = J$.W(842577, 'arg', J$.C(51264, J$.C(51256, J$.G(842545, J$.R(842537, 'o', o, false, false), 'helpArg')) ? J$._() : J$.G(842561, J$.R(842553, 'type', type, false, false), 'helpArg')) ? J$._() : J$.T(842569, 'ARG', 21, false), arg, false, false);
                                            var line = J$.W(842593, 'line', J$.T(842585, '', 21, false), line, false, false);
                                            var names = J$.W(842625, 'names', J$.M(842617, J$.G(842609, J$.R(842601, 'o', o, false, false), 'names'), 'slice', false)(), names, false, false);
                                            if (J$.C(51288, J$.B(142346, '===', J$.R(842633, 'nameSort', nameSort, false, false), J$.T(842641, 'length', 21, false)))) {
                                                J$.M(842809, J$.R(842649, 'names', names, false, false), 'sort', false)(J$.T(842801, function (a, b) {
                                                    jalangiLabel25:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(842769, arguments.callee, this, arguments);
                                                                arguments = J$.N(842777, 'arguments', arguments, true, false, false);
                                                                a = J$.N(842785, 'a', a, true, false, false);
                                                                b = J$.N(842793, 'b', b, true, false, false);
                                                                if (J$.C(51280, J$.B(142354, '<', J$.G(842665, J$.R(842657, 'a', a, false, false), 'length'), J$.G(842681, J$.R(842673, 'b', b, false, false), 'length'))))
                                                                    return J$.Rt(842697, J$.U(142362, '-', J$.T(842689, 1, 22, false)));
                                                                else if (J$.C(51272, J$.B(142370, '<', J$.G(842713, J$.R(842705, 'b', b, false, false), 'length'), J$.G(842729, J$.R(842721, 'a', a, false, false), 'length'))))
                                                                    return J$.Rt(842745, J$.T(842737, 1, 22, false));
                                                                else
                                                                    return J$.Rt(842761, J$.T(842753, 0, 22, false));
                                                            } catch (J$e) {
                                                                J$.Ex(850361, J$e);
                                                            } finally {
                                                                if (J$.Fr(850369))
                                                                    continue jalangiLabel25;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                            J$.M(843089, J$.R(842817, 'names', names, false, false), 'forEach', false)(J$.T(843081, function (name, i) {
                                                jalangiLabel26:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(843049, arguments.callee, this, arguments);
                                                            arguments = J$.N(843057, 'arguments', arguments, true, false, false);
                                                            name = J$.N(843065, 'name', name, true, false, false);
                                                            i = J$.N(843073, 'i', i, true, false, false);
                                                            if (J$.C(51296, J$.B(142378, '>', J$.R(842825, 'i', i, false, false), J$.T(842833, 0, 22, false))))
                                                                line = J$.W(842857, 'line', J$.B(142386, '+', J$.R(842849, 'line', line, false, false), J$.T(842841, ', ', 21, false)), line, false, false);
                                                            if (J$.C(51320, J$.B(142394, '===', J$.G(842873, J$.R(842865, 'name', name, false, false), 'length'), J$.T(842881, 1, 22, false)))) {
                                                                line = J$.W(842913, 'line', J$.B(142410, '+', J$.R(842905, 'line', line, false, false), J$.B(142402, '+', J$.T(842889, '-', 21, false), J$.R(842897, 'name', name, false, false))), line, false, false);
                                                                if (J$.C(51304, J$.G(842929, J$.R(842921, 'type', type, false, false), 'takesArg')))
                                                                    line = J$.W(842961, 'line', J$.B(142426, '+', J$.R(842953, 'line', line, false, false), J$.B(142418, '+', J$.T(842937, ' ', 21, false), J$.R(842945, 'arg', arg, false, false))), line, false, false);
                                                            } else {
                                                                line = J$.W(842993, 'line', J$.B(142442, '+', J$.R(842985, 'line', line, false, false), J$.B(142434, '+', J$.T(842969, '--', 21, false), J$.R(842977, 'name', name, false, false))), line, false, false);
                                                                if (J$.C(51312, J$.G(843009, J$.R(843001, 'type', type, false, false), 'takesArg')))
                                                                    line = J$.W(843041, 'line', J$.B(142458, '+', J$.R(843033, 'line', line, false, false), J$.B(142450, '+', J$.T(843017, '=', 21, false), J$.R(843025, 'arg', arg, false, false))), line, false, false);
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(850377, J$e);
                                                        } finally {
                                                            if (J$.Fr(850385))
                                                                continue jalangiLabel26;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            maxWidth = J$.W(843137, 'maxWidth', J$.M(843129, J$.I(typeof Math === 'undefined' ? Math = J$.R(843097, 'Math', undefined, true, true) : Math = J$.R(843097, 'Math', Math, true, true)), 'max', false)(J$.R(843105, 'maxWidth', maxWidth, false, false), J$.G(843121, J$.R(843113, 'line', line, false, false), 'length')), maxWidth, false, false);
                                            J$.M(843161, J$.R(843145, 'lines', lines, false, false), 'push', false)(J$.R(843153, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(850393, J$e);
                                        } finally {
                                            if (J$.Fr(850401))
                                                continue jalangiLabel27;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var helpCol = J$.W(843257, 'helpCol', J$.G(843249, J$.R(843241, 'config', config, false, false), 'helpCol'), helpCol, false, false);
                            if (J$.C(51328, J$.U(142466, '!', J$.R(843265, 'helpCol', helpCol, false, false)))) {
                                helpCol = J$.W(843305, 'helpCol', J$.B(142482, '+', J$.B(142474, '+', J$.R(843273, 'maxWidth', maxWidth, false, false), J$.G(843289, J$.R(843281, 'indent', indent, false, false), 'length')), J$.T(843297, 2, 22, false)), helpCol, false, false);
                                helpCol = J$.W(843369, 'helpCol', J$.M(843361, J$.I(typeof Math === 'undefined' ? Math = J$.R(843313, 'Math', undefined, true, true) : Math = J$.R(843313, 'Math', Math, true, true)), 'min', false)(J$.M(843345, J$.I(typeof Math === 'undefined' ? Math = J$.R(843321, 'Math', undefined, true, true) : Math = J$.R(843321, 'Math', Math, true, true)), 'max', false)(J$.R(843329, 'helpCol', helpCol, false, false), J$.R(843337, 'minHelpCol', minHelpCol, false, false)), J$.R(843353, 'maxHelpCol', maxHelpCol, false, false)), helpCol, false, false);
                            }
                            var i = J$.W(843385, 'i', J$.U(142490, '-', J$.T(843377, 1, 22, false)), i, false, false);
                            J$.M(845345, J$.G(843401, J$.R(843393, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(845337, function (o) {
                                jalangiLabel30:
                                    while (true) {
                                        try {
                                            J$.Fe(845241, arguments.callee, this, arguments);
                                            arguments = J$.N(845249, 'arguments', arguments, true, false, false);
                                            o = J$.N(845257, 'o', o, true, false, false);
                                            J$.N(845265, 'helpDefault', helpDefault, false, false, false);
                                            J$.N(845273, 'line', line, false, false, false);
                                            J$.N(845281, 'n', n, false, false, false);
                                            J$.N(845289, 'helpEnv', helpEnv, false, false, false);
                                            J$.N(845297, 'type', type, false, false, false);
                                            J$.N(845305, 'arg', arg, false, false, false);
                                            J$.N(845313, 'envs', envs, false, false, false);
                                            J$.N(845321, 'help', help, false, false, false);
                                            J$.N(845329, 'helpLines', helpLines, false, false, false);
                                            if (J$.C(51336, J$.G(843417, J$.R(843409, 'o', o, false, false), 'hidden'))) {
                                                return J$.Rt(843425, undefined);
                                            }
                                            J$.B(142514, '-', i = J$.W(843441, 'i', J$.B(142506, '+', J$.U(142498, '+', J$.R(843433, 'i', i, false, false)), 1), i, false, false), 1);
                                            if (J$.C(51368, J$.C(51344, J$.B(142522, '!==', J$.G(843457, J$.R(843449, 'o', o, false, false), 'group'), J$.T(843465, undefined, 24, false))) ? J$.B(142530, '!==', J$.G(843481, J$.R(843473, 'o', o, false, false), 'group'), J$.T(843489, null, 25, false)) : J$._())) {
                                                if (J$.C(51360, J$.B(142538, '===', J$.G(843505, J$.R(843497, 'o', o, false, false), 'group'), J$.T(843513, '', 21, false)))) {
                                                    J$.P(843545, J$.R(843521, 'lines', lines, false, false), J$.R(843529, 'i', i, false, false), J$.T(843537, '', 21, false));
                                                } else {
                                                    J$.P(843633, J$.R(843553, 'lines', lines, false, false), J$.R(843561, 'i', i, false, false), J$.B(142570, '+', J$.B(142562, '+', J$.B(142554, '+', J$.C(51352, J$.B(142546, '===', J$.R(843569, 'i', i, false, false), J$.T(843577, 0, 22, false))) ? J$.T(843585, '', 21, false) : J$.T(843593, '\n', 21, false), J$.R(843601, 'headingIndent', headingIndent, false, false)), J$.G(843617, J$.R(843609, 'o', o, false, false), 'group')), J$.T(843625, ':', 21, false)));
                                                }
                                                return J$.Rt(843641, undefined);
                                            }
                                            var helpDefault;
                                            if (J$.C(51400, J$.G(843657, J$.R(843649, 'config', config, false, false), 'includeDefault'))) {
                                                if (J$.C(51392, J$.B(142578, '!==', J$.G(843681, J$.R(843665, 'o', o, false, false), J$.T(843673, 'default', 21, false)), J$.T(843689, undefined, 24, false)))) {
                                                    helpDefault = J$.W(843745, 'helpDefault', J$.F(843737, J$.R(843697, 'format', format, false, true), false)(J$.T(843705, 'Default: %j', 21, false), J$.G(843729, J$.R(843713, 'o', o, false, false), J$.T(843721, 'default', 21, false))), helpDefault, false, false);
                                                } else if (J$.C(51384, J$.C(51376, J$.G(843761, J$.R(843753, 'o', o, false, false), 'type')) ? J$.B(142586, '!==', J$.G(843809, J$.G(843793, J$.R(843769, 'optionTypes', optionTypes, false, true), J$.G(843785, J$.R(843777, 'o', o, false, false), 'type')), J$.T(843801, 'default', 21, false)), J$.T(843817, undefined, 24, false)) : J$._())) {
                                                    helpDefault = J$.W(843897, 'helpDefault', J$.F(843889, J$.R(843825, 'format', format, false, true), false)(J$.T(843833, 'Default: %j', 21, false), J$.G(843881, J$.G(843865, J$.R(843841, 'optionTypes', optionTypes, false, true), J$.G(843857, J$.R(843849, 'o', o, false, false), 'type')), J$.T(843873, 'default', 21, false))), helpDefault, false, false);
                                                }
                                            }
                                            var line = J$.W(843961, 'line', J$.P(843953, J$.R(843905, 'lines', lines, false, false), J$.R(843913, 'i', i, false, false), J$.B(142594, '+', J$.R(843921, 'indent', indent, false, false), J$.G(843945, J$.R(843929, 'lines', lines, false, false), J$.R(843937, 'i', i, false, false)))), line, false, false);
                                            if (J$.C(51432, J$.C(51424, J$.C(51416, J$.U(142602, '!', J$.G(843977, J$.R(843969, 'o', o, false, false), 'help'))) ? J$.U(142610, '!', J$.C(51408, J$.G(843993, J$.R(843985, 'config', config, false, false), 'includeEnv')) ? J$.G(844009, J$.R(844001, 'o', o, false, false), 'env') : J$._()) : J$._()) ? J$.U(142618, '!', J$.R(844017, 'helpDefault', helpDefault, false, false)) : J$._())) {
                                                return J$.Rt(844025, undefined);
                                            }
                                            var n = J$.W(844057, 'n', J$.B(142626, '-', J$.R(844033, 'helpCol', helpCol, false, false), J$.G(844049, J$.R(844041, 'line', line, false, false), 'length')), n, false, false);
                                            if (J$.C(51440, J$.B(142634, '>=', J$.R(844065, 'n', n, false, false), J$.T(844073, 0, 22, false)))) {
                                                line = J$.W(844113, 'line', J$.B(142642, '+', J$.R(844105, 'line', line, false, false), J$.F(844097, J$.R(844081, 'space', space, false, true), false)(J$.R(844089, 'n', n, false, false))), line, false, false);
                                            } else {
                                                line = J$.W(844161, 'line', J$.B(142658, '+', J$.R(844153, 'line', line, false, false), J$.B(142650, '+', J$.T(844121, '\n', 21, false), J$.F(844145, J$.R(844129, 'space', space, false, true), false)(J$.R(844137, 'helpCol', helpCol, false, false)))), line, false, false);
                                            }
                                            var helpEnv = J$.W(844177, 'helpEnv', J$.T(844169, '', 21, false), helpEnv, false, false);
                                            if (J$.C(51496, J$.C(51456, J$.C(51448, J$.G(844193, J$.R(844185, 'o', o, false, false), 'env')) ? J$.G(844217, J$.G(844209, J$.R(844201, 'o', o, false, false), 'env'), 'length') : J$._()) ? J$.G(844233, J$.R(844225, 'config', config, false, false), 'includeEnv') : J$._())) {
                                                helpEnv = J$.W(844257, 'helpEnv', J$.B(142666, '+', J$.R(844249, 'helpEnv', helpEnv, false, false), J$.T(844241, 'Environment: ', 21, false)), helpEnv, false, false);
                                                var type = J$.W(844297, 'type', J$.G(844289, J$.R(844265, 'optionTypes', optionTypes, false, true), J$.G(844281, J$.R(844273, 'o', o, false, false), 'type')), type, false, false);
                                                var arg = J$.W(844345, 'arg', J$.C(51472, J$.C(51464, J$.G(844313, J$.R(844305, 'o', o, false, false), 'helpArg')) ? J$._() : J$.G(844329, J$.R(844321, 'type', type, false, false), 'helpArg')) ? J$._() : J$.T(844337, 'ARG', 21, false), arg, false, false);
                                                var envs = J$.W(844537, 'envs', J$.M(844529, J$.C(51480, J$.M(844377, J$.I(typeof Array === 'undefined' ? Array = J$.R(844353, 'Array', undefined, true, true) : Array = J$.R(844353, 'Array', Array, true, true)), 'isArray', false)(J$.G(844369, J$.R(844361, 'o', o, false, false), 'env'))) ? J$.G(844393, J$.R(844385, 'o', o, false, false), 'env') : J$.T(844417, [J$.G(844409, J$.R(844401, 'o', o, false, false), 'env')], 10, false), 'map', false)(J$.T(844521, function (e) {
                                                    jalangiLabel28:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(844497, arguments.callee, this, arguments);
                                                                arguments = J$.N(844505, 'arguments', arguments, true, false, false);
                                                                e = J$.N(844513, 'e', e, true, false, false);
                                                                if (J$.C(51488, J$.G(844433, J$.R(844425, 'type', type, false, false), 'takesArg'))) {
                                                                    return J$.Rt(844465, J$.B(142682, '+', J$.B(142674, '+', J$.R(844441, 'e', e, false, false), J$.T(844449, '=', 21, false)), J$.R(844457, 'arg', arg, false, false)));
                                                                } else {
                                                                    return J$.Rt(844489, J$.B(142690, '+', J$.R(844473, 'e', e, false, false), J$.T(844481, '=1', 21, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(850409, J$e);
                                                            } finally {
                                                                if (J$.Fr(850417))
                                                                    continue jalangiLabel28;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), envs, false, false);
                                                helpEnv = J$.W(844577, 'helpEnv', J$.B(142698, '+', J$.R(844569, 'helpEnv', helpEnv, false, false), J$.M(844561, J$.R(844545, 'envs', envs, false, false), 'join', false)(J$.T(844553, ', ', 21, false))), helpEnv, false, false);
                                            }
                                            var help = J$.W(844617, 'help', J$.M(844609, J$.C(51504, J$.G(844593, J$.R(844585, 'o', o, false, false), 'help')) ? J$._() : J$.T(844601, '', 21, false), 'trim', false)(), help, false, false);
                                            if (J$.C(51576, J$.C(51512, J$.B(142706, '!==', J$.G(844633, J$.R(844625, 'o', o, false, false), 'helpWrap'), J$.T(844641, false, 23, false))) ? J$.B(142714, '!==', J$.G(844657, J$.R(844649, 'config', config, false, false), 'helpWrap'), J$.T(844665, false, 23, false)) : J$._())) {
                                                if (J$.C(51528, J$.C(51520, J$.G(844681, J$.R(844673, 'help', help, false, false), 'length')) ? J$.U(142738, '!', J$.U(142730, '~', J$.M(844721, J$.T(844689, '.!?"\'', 21, false), 'indexOf', false)(J$.M(844713, J$.R(844697, 'help', help, false, false), 'slice', false)(J$.U(142722, '-', J$.T(844705, 1, 22, false)))))) : J$._())) {
                                                    help = J$.W(844745, 'help', J$.B(142746, '+', J$.R(844737, 'help', help, false, false), J$.T(844729, '.', 21, false)), help, false, false);
                                                }
                                                if (J$.C(51536, J$.G(844761, J$.R(844753, 'help', help, false, false), 'length'))) {
                                                    help = J$.W(844785, 'help', J$.B(142754, '+', J$.R(844777, 'help', help, false, false), J$.T(844769, ' ', 21, false)), help, false, false);
                                                }
                                                help = J$.W(844809, 'help', J$.B(142762, '+', J$.R(844801, 'help', help, false, false), J$.R(844793, 'helpEnv', helpEnv, false, false)), help, false, false);
                                                if (J$.C(51552, J$.R(844817, 'helpDefault', helpDefault, false, false))) {
                                                    if (J$.C(51544, J$.R(844825, 'helpEnv', helpEnv, false, false))) {
                                                        help = J$.W(844849, 'help', J$.B(142770, '+', J$.R(844841, 'help', help, false, false), J$.T(844833, '. ', 21, false)), help, false, false);
                                                    }
                                                    help = J$.W(844873, 'help', J$.B(142778, '+', J$.R(844865, 'help', help, false, false), J$.R(844857, 'helpDefault', helpDefault, false, false)), help, false, false);
                                                }
                                                line = J$.W(844969, 'line', J$.B(142802, '+', J$.R(844961, 'line', line, false, false), J$.M(844953, J$.F(844913, J$.R(844881, 'textwrap', textwrap, false, true), false)(J$.R(844889, 'help', help, false, false), J$.B(142786, '-', J$.R(844897, 'maxCol', maxCol, false, false), J$.R(844905, 'helpCol', helpCol, false, false))), 'join', false)(J$.B(142794, '+', J$.T(844921, '\n', 21, false), J$.F(844945, J$.R(844929, 'space', space, false, true), false)(J$.R(844937, 'helpCol', helpCol, false, false))))), line, false, false);
                                            } else {
                                                var helpLines = J$.W(845065, 'helpLines', J$.M(845057, J$.M(844993, J$.R(844977, 'help', help, false, false), 'split', false)(J$.T(844985, '\n', 21, false)), 'filter', false)(J$.T(845049, function (ln) {
                                                    jalangiLabel29:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(845025, arguments.callee, this, arguments);
                                                                arguments = J$.N(845033, 'arguments', arguments, true, false, false);
                                                                ln = J$.N(845041, 'ln', ln, true, false, false);
                                                                return J$.Rt(845017, J$.G(845009, J$.R(845001, 'ln', ln, false, false), 'length'));
                                                            } catch (J$e) {
                                                                J$.Ex(850425, J$e);
                                                            } finally {
                                                                if (J$.Fr(850433))
                                                                    continue jalangiLabel29;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), helpLines, false, false);
                                                if (J$.C(51560, J$.B(142810, '!==', J$.R(845073, 'helpEnv', helpEnv, false, false), J$.T(845081, '', 21, false)))) {
                                                    J$.M(845105, J$.R(845089, 'helpLines', helpLines, false, false), 'push', false)(J$.R(845097, 'helpEnv', helpEnv, false, false));
                                                }
                                                if (J$.C(51568, J$.R(845113, 'helpDefault', helpDefault, false, false))) {
                                                    J$.M(845137, J$.R(845121, 'helpLines', helpLines, false, false), 'push', false)(J$.R(845129, 'helpDefault', helpDefault, false, false));
                                                }
                                                line = J$.W(845201, 'line', J$.B(142826, '+', J$.R(845193, 'line', line, false, false), J$.M(845185, J$.R(845145, 'helpLines', helpLines, false, false), 'join', false)(J$.B(142818, '+', J$.T(845153, '\n', 21, false), J$.F(845177, J$.R(845161, 'space', space, false, true), false)(J$.R(845169, 'helpCol', helpCol, false, false))))), line, false, false);
                                            }
                                            J$.P(845233, J$.R(845209, 'lines', lines, false, false), J$.R(845217, 'i', i, false, false), J$.R(845225, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(850441, J$e);
                                        } finally {
                                            if (J$.Fr(850449))
                                                continue jalangiLabel30;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var rv = J$.W(845361, 'rv', J$.T(845353, '', 21, false), rv, false, false);
                            if (J$.C(51584, J$.B(142834, '>', J$.G(845377, J$.R(845369, 'lines', lines, false, false), 'length'), J$.T(845385, 0, 22, false)))) {
                                rv = J$.W(845425, 'rv', J$.B(142842, '+', J$.M(845409, J$.R(845393, 'lines', lines, false, false), 'join', false)(J$.T(845401, '\n', 21, false)), J$.T(845417, '\n', 21, false)), rv, false, false);
                            }
                            return J$.Rt(845441, J$.R(845433, 'rv', rv, false, false));
                        } catch (J$e) {
                            J$.Ex(850457, J$e);
                        } finally {
                            if (J$.Fr(850465))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(845873, J$.G(845585, J$.R(845577, 'Parser', Parser, false, true), 'prototype'), 'bashCompletion', J$.T(845865, function bashCompletion(args) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(845841, arguments.callee, this, arguments);
                            arguments = J$.N(845849, 'arguments', arguments, true, false, false);
                            args = J$.N(845857, 'args', args, true, false, false);
                            J$.M(845617, J$.R(845593, 'assert', assert, false, true), 'object', false)(J$.R(845601, 'args', args, false, false), J$.T(845609, 'args', 21, false));
                            J$.M(845657, J$.R(845625, 'assert', assert, false, true), 'string', false)(J$.G(845641, J$.R(845633, 'args', args, false, false), 'name'), J$.T(845649, 'args.name', 21, false));
                            J$.M(845697, J$.R(845665, 'assert', assert, false, true), 'optionalString', false)(J$.G(845681, J$.R(845673, 'args', args, false, false), 'specExtra'), J$.T(845689, 'args.specExtra', 21, false));
                            J$.M(845737, J$.R(845705, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(845721, J$.R(845713, 'args', args, false, false), 'argtypes'), J$.T(845729, 'args.argtypes', 21, false));
                            return J$.Rt(845833, J$.F(845825, J$.R(845745, 'bashCompletionFromOptions', bashCompletionFromOptions, false, true), false)(J$.T(845817, {
                                name: J$.G(845761, J$.R(845753, 'args', args, false, false), 'name'),
                                specExtra: J$.G(845777, J$.R(845769, 'args', args, false, false), 'specExtra'),
                                argtypes: J$.G(845793, J$.R(845785, 'args', args, false, false), 'argtypes'),
                                options: J$.G(845809, J$.R(845801, 'this', this, false, false), 'options')
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(850473, J$e);
                        } finally {
                            if (J$.Fr(850481))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var BASH_COMPLETION_TEMPLATE_PATH = J$.W(845913, 'BASH_COMPLETION_TEMPLATE_PATH', J$.M(845905, J$.R(845881, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(845889, '__dirname', undefined, true, true) : __dirname = J$.R(845889, '__dirname', __dirname, true, true)), J$.T(845897, '../etc/dashdash.bash_completion.in', 21, false)), BASH_COMPLETION_TEMPLATE_PATH, false, true);
            ;
            J$.P(849561, J$.I(typeof module === 'undefined' ? module = J$.R(849425, 'module', undefined, true, true) : module = J$.R(849425, 'module', module, true, true)), 'exports', J$.T(849553, {
                createParser: J$.R(849433, 'createParser', createParser, false, true),
                Parser: J$.R(849441, 'Parser', Parser, false, true),
                parse: J$.R(849449, 'parse', parse, false, true),
                addOptionType: J$.R(849457, 'addOptionType', addOptionType, false, true),
                getOptionType: J$.R(849465, 'getOptionType', getOptionType, false, true),
                synopsisFromOpt: J$.R(849473, 'synopsisFromOpt', synopsisFromOpt, false, true),
                BASH_COMPLETION_TEMPLATE_PATH: J$.R(849481, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, true),
                bashCompletionFromOptions: J$.R(849489, 'bashCompletionFromOptions', bashCompletionFromOptions, false, true),
                bashCompletionSpecFromOptions: J$.R(849497, 'bashCompletionSpecFromOptions', bashCompletionSpecFromOptions, false, true),
                parseBool: J$.R(849505, 'parseBool', parseBool, false, true),
                parseString: J$.R(849513, 'parseString', parseString, false, true),
                parseNumber: J$.R(849521, 'parseNumber', parseNumber, false, true),
                parseInteger: J$.R(849529, 'parseInteger', parseInteger, false, true),
                parsePositiveInteger: J$.R(849537, 'parsePositiveInteger', parsePositiveInteger, false, true),
                parseDate: J$.R(849545, 'parseDate', parseDate, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(850665, J$e);
        } finally {
            if (J$.Sr(850673))
                continue jalangiLabel44;
            else
                break jalangiLabel44;
        }
    }
// JALANGI DO NOT INSTRUMENT

