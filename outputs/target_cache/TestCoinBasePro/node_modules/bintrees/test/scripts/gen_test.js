J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(709241, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/bintrees/test/scripts/gen_test.js');
            function randInt(start, end) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(708665, arguments.callee, this, arguments);
                            arguments = J$.N(708673, 'arguments', arguments, true, false, false);
                            start = J$.N(708681, 'start', start, true, false, false);
                            end = J$.N(708689, 'end', end, true, false, false);
                            return J$.Rt(708657, J$.B(136834, '+', J$.M(708641, J$.I(typeof Math === 'undefined' ? Math = J$.R(708593, 'Math', undefined, true, true) : Math = J$.R(708593, 'Math', Math, true, true)), 'floor', false)(J$.B(136826, '*', J$.M(708609, J$.I(typeof Math === 'undefined' ? Math = J$.R(708601, 'Math', undefined, true, true) : Math = J$.R(708601, 'Math', Math, true, true)), 'random', false)(), J$.B(136818, '+', J$.B(136810, '-', J$.R(708617, 'end', end, false, false), J$.R(708625, 'start', start, false, false)), J$.T(708633, 1, 22, false)))), J$.R(708649, 'start', start, false, false)));
                        } catch (J$e) {
                            J$.Ex(709337, J$e);
                        } finally {
                            if (J$.Fr(709345))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function get_node_to_remove() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(708809, arguments.callee, this, arguments);
                            arguments = J$.N(708817, 'arguments', arguments, true, false, false);
                            J$.N(708825, 'idx', idx, false, false, false);
                            var idx = J$.W(708745, 'idx', J$.F(708737, J$.R(708697, 'randInt', randInt, false, true), false)(J$.T(708705, 0, 22, false), J$.B(136842, '-', J$.G(708721, J$.R(708713, 'added', added, false, true), 'length'), J$.T(708729, 1, 22, false))), idx, false, false);
                            return J$.Rt(708801, J$.G(708793, J$.M(708777, J$.R(708753, 'added', added, false, true), 'splice', false)(J$.R(708761, 'idx', idx, false, false), J$.T(708769, 1, 22, false)), J$.T(708785, 0, 22, false)));
                        } catch (J$e) {
                            J$.Ex(709353, J$e);
                        } finally {
                            if (J$.Fr(709361))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(709249, 'no_dups', no_dups, false, false, false);
            J$.N(709257, 'num_inserts', num_inserts, false, false, false);
            randInt = J$.N(709273, 'randInt', J$.T(709265, randInt, 12, false), true, false, false);
            get_node_to_remove = J$.N(709289, 'get_node_to_remove', J$.T(709281, get_node_to_remove, 12, false), true, false, false);
            J$.N(709297, 'nums', nums, false, false, false);
            J$.N(709305, 'added', added, false, false, false);
            J$.N(709313, 'ahash', ahash, false, false, false);
            J$.N(709321, 'i', i, false, false, false);
            J$.N(709329, 'n', n, false, false, false);
            J$.T(708505, 'use strict', 21, false);
            J$.F(708529, J$.I(typeof require === 'undefined' ? require = J$.R(708513, 'require', undefined, true, true) : require = J$.R(708513, 'require', require, true, true)), false)(J$.T(708521, 'core-js/modules/es.array.join', 21, false));
            J$.F(708553, J$.I(typeof require === 'undefined' ? require = J$.R(708537, 'require', undefined, true, true) : require = J$.R(708537, 'require', require, true, true)), false)(J$.T(708545, 'core-js/modules/es.array.splice', 21, false));
            var no_dups = J$.W(708569, 'no_dups', J$.T(708561, false, 23, false), no_dups, false, true);
            var num_inserts = J$.W(708585, 'num_inserts', J$.T(708577, 100000, 22, false), num_inserts, false, true);
            var nums = J$.W(708841, 'nums', J$.T(708833, [], 10, false), nums, false, true);
            var added = J$.W(708857, 'added', J$.T(708849, [], 10, false), added, false, true);
            var ahash = J$.W(708873, 'ahash', J$.T(708865, {}, 11, false), ahash, false, true);
            for (var i = J$.W(708889, 'i', J$.T(708881, 0, 22, false), i, false, true); J$.C(46952, J$.B(136850, '<', J$.R(708897, 'i', i, false, true), J$.R(708905, 'num_inserts', num_inserts, false, true))); J$.B(136874, '-', i = J$.W(708921, 'i', J$.B(136866, '+', J$.U(136858, '+', J$.R(708913, 'i', i, false, true)), 1), i, false, true), 1)) {
                do {
                    var n = J$.W(708961, 'n', J$.F(708953, J$.R(708929, 'randInt', randInt, false, true), false)(J$.T(708937, 1, 22, false), J$.T(708945, 1000000000, 22, false)), n, false, true);
                } while (J$.C(46928, J$.C(46920, J$.R(708969, 'no_dups', no_dups, false, true)) ? J$.G(708993, J$.R(708977, 'ahash', ahash, false, true), J$.R(708985, 'n', n, false, true)) : J$._()));
                J$.M(709017, J$.R(709001, 'added', added, false, true), 'push', false)(J$.R(709009, 'n', n, false, true));
                J$.M(709041, J$.R(709025, 'nums', nums, false, true), 'push', false)(J$.R(709033, 'n', n, false, true));
                if (J$.C(46936, J$.R(709049, 'no_dups', no_dups, false, true)))
                    J$.P(709081, J$.R(709057, 'ahash', ahash, false, true), J$.R(709065, 'n', n, false, true), J$.T(709073, true, 23, false));
                if (J$.C(46944, J$.B(136882, '<', J$.M(709097, J$.I(typeof Math === 'undefined' ? Math = J$.R(709089, 'Math', undefined, true, true) : Math = J$.R(709089, 'Math', Math, true, true)), 'random', false)(), J$.T(709105, 0.3, 22, false)))) {
                    J$.M(709137, J$.R(709113, 'nums', nums, false, true), 'push', false)(J$.U(136890, '-', J$.F(709129, J$.R(709121, 'get_node_to_remove', get_node_to_remove, false, true), false)()));
                }
            }
            while (J$.C(46960, J$.B(136898, '>', J$.G(709153, J$.R(709145, 'added', added, false, true), 'length'), J$.T(709161, 0, 22, false)))) {
                J$.M(709193, J$.R(709169, 'nums', nums, false, true), 'push', false)(J$.U(136906, '-', J$.F(709185, J$.R(709177, 'get_node_to_remove', get_node_to_remove, false, true), false)()));
            }
            J$.M(709233, J$.I(typeof console === 'undefined' ? console = J$.R(709201, 'console', undefined, true, true) : console = J$.R(709201, 'console', console, true, true)), 'log', false)(J$.M(709225, J$.R(709209, 'nums', nums, false, true), 'join', false)(J$.T(709217, '\n', 21, false)));
        } catch (J$e) {
            J$.Ex(709369, J$e);
        } finally {
            if (J$.Sr(709377))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

