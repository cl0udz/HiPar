J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(1600577, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/tough-cookie/lib/store.js');
            function Store() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1599841, arguments.callee, this, arguments);
                            arguments = J$.N(1599849, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(1600601, J$e);
                        } finally {
                            if (J$.Fr(1600609))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            Store = J$.N(1600593, 'Store', J$.T(1600585, Store, 12, false), true, false, false);
            J$.T(1599833, 'use strict', 21, false);
            J$.P(1599873, J$.I(typeof exports === 'undefined' ? exports = J$.R(1599857, 'exports', undefined, true, true) : exports = J$.R(1599857, 'exports', exports, true, true)), 'Store', J$.R(1599865, 'Store', Store, false, true));
            J$.P(1599905, J$.G(1599889, J$.R(1599881, 'Store', Store, false, true), 'prototype'), 'synchronous', J$.T(1599897, false, 23, false));
            J$.P(1600009, J$.G(1599921, J$.R(1599913, 'Store', Store, false, true), 'prototype'), 'findCookie', J$.T(1600001, function (domain, path, key, cb) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1599953, arguments.callee, this, arguments);
                            arguments = J$.N(1599961, 'arguments', arguments, true, false, false);
                            domain = J$.N(1599969, 'domain', domain, true, false, false);
                            path = J$.N(1599977, 'path', path, true, false, false);
                            key = J$.N(1599985, 'key', key, true, false, false);
                            cb = J$.N(1599993, 'cb', cb, true, false, false);
                            throw J$.F(1599945, J$.I(typeof Error === 'undefined' ? Error = J$.R(1599929, 'Error', undefined, true, true) : Error = J$.R(1599929, 'Error', Error, true, true)), true)(J$.T(1599937, 'findCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(1600617, J$e);
                        } finally {
                            if (J$.Fr(1600625))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1600105, J$.G(1600025, J$.R(1600017, 'Store', Store, false, true), 'prototype'), 'findCookies', J$.T(1600097, function (domain, path, cb) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1600057, arguments.callee, this, arguments);
                            arguments = J$.N(1600065, 'arguments', arguments, true, false, false);
                            domain = J$.N(1600073, 'domain', domain, true, false, false);
                            path = J$.N(1600081, 'path', path, true, false, false);
                            cb = J$.N(1600089, 'cb', cb, true, false, false);
                            throw J$.F(1600049, J$.I(typeof Error === 'undefined' ? Error = J$.R(1600033, 'Error', undefined, true, true) : Error = J$.R(1600033, 'Error', Error, true, true)), true)(J$.T(1600041, 'findCookies is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(1600633, J$e);
                        } finally {
                            if (J$.Fr(1600641))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1600193, J$.G(1600121, J$.R(1600113, 'Store', Store, false, true), 'prototype'), 'putCookie', J$.T(1600185, function (cookie, cb) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1600153, arguments.callee, this, arguments);
                            arguments = J$.N(1600161, 'arguments', arguments, true, false, false);
                            cookie = J$.N(1600169, 'cookie', cookie, true, false, false);
                            cb = J$.N(1600177, 'cb', cb, true, false, false);
                            throw J$.F(1600145, J$.I(typeof Error === 'undefined' ? Error = J$.R(1600129, 'Error', undefined, true, true) : Error = J$.R(1600129, 'Error', Error, true, true)), true)(J$.T(1600137, 'putCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(1600649, J$e);
                        } finally {
                            if (J$.Fr(1600657))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1600289, J$.G(1600209, J$.R(1600201, 'Store', Store, false, true), 'prototype'), 'updateCookie', J$.T(1600281, function (oldCookie, newCookie, cb) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1600241, arguments.callee, this, arguments);
                            arguments = J$.N(1600249, 'arguments', arguments, true, false, false);
                            oldCookie = J$.N(1600257, 'oldCookie', oldCookie, true, false, false);
                            newCookie = J$.N(1600265, 'newCookie', newCookie, true, false, false);
                            cb = J$.N(1600273, 'cb', cb, true, false, false);
                            throw J$.F(1600233, J$.I(typeof Error === 'undefined' ? Error = J$.R(1600217, 'Error', undefined, true, true) : Error = J$.R(1600217, 'Error', Error, true, true)), true)(J$.T(1600225, 'updateCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(1600665, J$e);
                        } finally {
                            if (J$.Fr(1600673))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1600393, J$.G(1600305, J$.R(1600297, 'Store', Store, false, true), 'prototype'), 'removeCookie', J$.T(1600385, function (domain, path, key, cb) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1600337, arguments.callee, this, arguments);
                            arguments = J$.N(1600345, 'arguments', arguments, true, false, false);
                            domain = J$.N(1600353, 'domain', domain, true, false, false);
                            path = J$.N(1600361, 'path', path, true, false, false);
                            key = J$.N(1600369, 'key', key, true, false, false);
                            cb = J$.N(1600377, 'cb', cb, true, false, false);
                            throw J$.F(1600329, J$.I(typeof Error === 'undefined' ? Error = J$.R(1600313, 'Error', undefined, true, true) : Error = J$.R(1600313, 'Error', Error, true, true)), true)(J$.T(1600321, 'removeCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(1600681, J$e);
                        } finally {
                            if (J$.Fr(1600689))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1600489, J$.G(1600409, J$.R(1600401, 'Store', Store, false, true), 'prototype'), 'removeCookies', J$.T(1600481, function (domain, path, cb) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1600441, arguments.callee, this, arguments);
                            arguments = J$.N(1600449, 'arguments', arguments, true, false, false);
                            domain = J$.N(1600457, 'domain', domain, true, false, false);
                            path = J$.N(1600465, 'path', path, true, false, false);
                            cb = J$.N(1600473, 'cb', cb, true, false, false);
                            throw J$.F(1600433, J$.I(typeof Error === 'undefined' ? Error = J$.R(1600417, 'Error', undefined, true, true) : Error = J$.R(1600417, 'Error', Error, true, true)), true)(J$.T(1600425, 'removeCookies is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(1600697, J$e);
                        } finally {
                            if (J$.Fr(1600705))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1600569, J$.G(1600505, J$.R(1600497, 'Store', Store, false, true), 'prototype'), 'getAllCookies', J$.T(1600561, function (cb) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1600537, arguments.callee, this, arguments);
                            arguments = J$.N(1600545, 'arguments', arguments, true, false, false);
                            cb = J$.N(1600553, 'cb', cb, true, false, false);
                            throw J$.F(1600529, J$.I(typeof Error === 'undefined' ? Error = J$.R(1600513, 'Error', undefined, true, true) : Error = J$.R(1600513, 'Error', Error, true, true)), true)(J$.T(1600521, 'getAllCookies is not implemented (therefore jar cannot be serialized)', 21, false));
                        } catch (J$e) {
                            J$.Ex(1600713, J$e);
                        } finally {
                            if (J$.Fr(1600721))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1600729, J$e);
        } finally {
            if (J$.Sr(1600737))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

