J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(2147985, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ws/node_modules/safe-buffer/index.js');
            function copyProps(src, dst) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2147017, arguments.callee, this, arguments);
                            arguments = J$.N(2147025, 'arguments', arguments, true, false, false);
                            src = J$.N(2147033, 'src', src, true, false, false);
                            dst = J$.N(2147041, 'dst', dst, true, false, false);
                            J$.N(2147049, 'key', key, false, false, false);
                            for (var key in J$.H(2147001, J$.R(2146945, 'src', src, false, false))) {
                                J$.N(2147009, 'key', key, false, true, false);
                                {
                                    {
                                        J$.P(2146993, J$.R(2146953, 'dst', dst, false, false), J$.R(2146961, 'key', key, false, false), J$.G(2146985, J$.R(2146969, 'src', src, false, false), J$.R(2146977, 'key', key, false, false)));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(2148041, J$e);
                        } finally {
                            if (J$.Fr(2148049))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function SafeBuffer(arg, encodingOrOffset, length) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2147249, arguments.callee, this, arguments);
                            arguments = J$.N(2147257, 'arguments', arguments, true, false, false);
                            arg = J$.N(2147265, 'arg', arg, true, false, false);
                            encodingOrOffset = J$.N(2147273, 'encodingOrOffset', encodingOrOffset, true, false, false);
                            length = J$.N(2147281, 'length', length, true, false, false);
                            return J$.Rt(2147241, J$.F(2147233, J$.R(2147201, 'Buffer', Buffer, false, true), false)(J$.R(2147209, 'arg', arg, false, false), J$.R(2147217, 'encodingOrOffset', encodingOrOffset, false, false), J$.R(2147225, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(2148057, J$e);
                        } finally {
                            if (J$.Fr(2148065))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2147993, 'buffer', buffer, false, false, false);
            J$.N(2148001, 'Buffer', Buffer, false, false, false);
            copyProps = J$.N(2148017, 'copyProps', J$.T(2148009, copyProps, 12, false), true, false, false);
            SafeBuffer = J$.N(2148033, 'SafeBuffer', J$.T(2148025, SafeBuffer, 12, false), true, false, false);
            J$.T(2146857, 'use strict', 21, false);
            J$.F(2146881, J$.I(typeof require === 'undefined' ? require = J$.R(2146865, 'require', undefined, true, true) : require = J$.R(2146865, 'require', require, true, true)), false)(J$.T(2146873, 'core-js/modules/es.array.fill', 21, false));
            var buffer = J$.W(2146913, 'buffer', J$.F(2146905, J$.I(typeof require === 'undefined' ? require = J$.R(2146889, 'require', undefined, true, true) : require = J$.R(2146889, 'require', require, true, true)), false)(J$.T(2146897, 'buffer', 21, false)), buffer, false, true);
            var Buffer = J$.W(2146937, 'Buffer', J$.G(2146929, J$.R(2146921, 'buffer', buffer, false, true), 'Buffer'), Buffer, false, true);
            if (J$.C(102032, J$.C(102024, J$.C(102016, J$.C(102008, J$.G(2147065, J$.R(2147057, 'Buffer', Buffer, false, true), 'from')) ? J$.G(2147081, J$.R(2147073, 'Buffer', Buffer, false, true), 'alloc') : J$._()) ? J$.G(2147097, J$.R(2147089, 'Buffer', Buffer, false, true), 'allocUnsafe') : J$._()) ? J$.G(2147113, J$.R(2147105, 'Buffer', Buffer, false, true), 'allocUnsafeSlow') : J$._())) {
                J$.P(2147137, J$.I(typeof module === 'undefined' ? module = J$.R(2147121, 'module', undefined, true, true) : module = J$.R(2147121, 'module', module, true, true)), 'exports', J$.R(2147129, 'buffer', buffer, false, true));
            } else {
                J$.F(2147169, J$.R(2147145, 'copyProps', copyProps, false, true), false)(J$.R(2147153, 'buffer', buffer, false, true), J$.I(typeof exports === 'undefined' ? exports = J$.R(2147161, 'exports', undefined, true, true) : exports = J$.R(2147161, 'exports', exports, true, true)));
                J$.P(2147193, J$.I(typeof exports === 'undefined' ? exports = J$.R(2147177, 'exports', undefined, true, true) : exports = J$.R(2147177, 'exports', exports, true, true)), 'Buffer', J$.R(2147185, 'SafeBuffer', SafeBuffer, false, true));
            }
            J$.F(2147313, J$.R(2147289, 'copyProps', copyProps, false, true), false)(J$.R(2147297, 'Buffer', Buffer, false, true), J$.R(2147305, 'SafeBuffer', SafeBuffer, false, true));
            J$.P(2147465, J$.R(2147321, 'SafeBuffer', SafeBuffer, false, true), 'from', J$.T(2147457, function (arg, encodingOrOffset, length) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2147417, arguments.callee, this, arguments);
                            arguments = J$.N(2147425, 'arguments', arguments, true, false, false);
                            arg = J$.N(2147433, 'arg', arg, true, false, false);
                            encodingOrOffset = J$.N(2147441, 'encodingOrOffset', encodingOrOffset, true, false, false);
                            length = J$.N(2147449, 'length', length, true, false, false);
                            if (J$.C(102040, J$.B(286250, '===', J$.U(286242, 'typeof', J$.R(2147329, 'arg', arg, false, false)), J$.T(2147337, 'number', 21, false)))) {
                                throw J$.F(2147361, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2147345, 'TypeError', undefined, true, true) : TypeError = J$.R(2147345, 'TypeError', TypeError, true, true)), true)(J$.T(2147353, 'Argument must not be a number', 21, false));
                            }
                            return J$.Rt(2147409, J$.F(2147401, J$.R(2147369, 'Buffer', Buffer, false, true), false)(J$.R(2147377, 'arg', arg, false, false), J$.R(2147385, 'encodingOrOffset', encodingOrOffset, false, false), J$.R(2147393, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(2148073, J$e);
                        } finally {
                            if (J$.Fr(2148081))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2147737, J$.R(2147473, 'SafeBuffer', SafeBuffer, false, true), 'alloc', J$.T(2147729, function (size, fill, encoding) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2147681, arguments.callee, this, arguments);
                            arguments = J$.N(2147689, 'arguments', arguments, true, false, false);
                            size = J$.N(2147697, 'size', size, true, false, false);
                            fill = J$.N(2147705, 'fill', fill, true, false, false);
                            encoding = J$.N(2147713, 'encoding', encoding, true, false, false);
                            J$.N(2147721, 'buf', buf, false, false, false);
                            if (J$.C(102048, J$.B(286266, '!==', J$.U(286258, 'typeof', J$.R(2147481, 'size', size, false, false)), J$.T(2147489, 'number', 21, false)))) {
                                throw J$.F(2147513, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2147497, 'TypeError', undefined, true, true) : TypeError = J$.R(2147497, 'TypeError', TypeError, true, true)), true)(J$.T(2147505, 'Argument must be a number', 21, false));
                            }
                            var buf = J$.W(2147545, 'buf', J$.F(2147537, J$.R(2147521, 'Buffer', Buffer, false, true), false)(J$.R(2147529, 'size', size, false, false)), buf, false, false);
                            if (J$.C(102064, J$.B(286274, '!==', J$.R(2147553, 'fill', fill, false, false), J$.T(2147561, undefined, 24, false)))) {
                                if (J$.C(102056, J$.B(286290, '===', J$.U(286282, 'typeof', J$.R(2147569, 'encoding', encoding, false, false)), J$.T(2147577, 'string', 21, false)))) {
                                    J$.M(2147609, J$.R(2147585, 'buf', buf, false, false), 'fill', false)(J$.R(2147593, 'fill', fill, false, false), J$.R(2147601, 'encoding', encoding, false, false));
                                } else {
                                    J$.M(2147633, J$.R(2147617, 'buf', buf, false, false), 'fill', false)(J$.R(2147625, 'fill', fill, false, false));
                                }
                            } else {
                                J$.M(2147657, J$.R(2147641, 'buf', buf, false, false), 'fill', false)(J$.T(2147649, 0, 22, false));
                            }
                            return J$.Rt(2147673, J$.R(2147665, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(2148089, J$e);
                        } finally {
                            if (J$.Fr(2148097))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2147857, J$.R(2147745, 'SafeBuffer', SafeBuffer, false, true), 'allocUnsafe', J$.T(2147849, function (size) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2147825, arguments.callee, this, arguments);
                            arguments = J$.N(2147833, 'arguments', arguments, true, false, false);
                            size = J$.N(2147841, 'size', size, true, false, false);
                            if (J$.C(102072, J$.B(286306, '!==', J$.U(286298, 'typeof', J$.R(2147753, 'size', size, false, false)), J$.T(2147761, 'number', 21, false)))) {
                                throw J$.F(2147785, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2147769, 'TypeError', undefined, true, true) : TypeError = J$.R(2147769, 'TypeError', TypeError, true, true)), true)(J$.T(2147777, 'Argument must be a number', 21, false));
                            }
                            return J$.Rt(2147817, J$.F(2147809, J$.R(2147793, 'Buffer', Buffer, false, true), false)(J$.R(2147801, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(2148105, J$e);
                        } finally {
                            if (J$.Fr(2148113))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(2147977, J$.R(2147865, 'SafeBuffer', SafeBuffer, false, true), 'allocUnsafeSlow', J$.T(2147969, function (size) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2147945, arguments.callee, this, arguments);
                            arguments = J$.N(2147953, 'arguments', arguments, true, false, false);
                            size = J$.N(2147961, 'size', size, true, false, false);
                            if (J$.C(102080, J$.B(286322, '!==', J$.U(286314, 'typeof', J$.R(2147873, 'size', size, false, false)), J$.T(2147881, 'number', 21, false)))) {
                                throw J$.F(2147905, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(2147889, 'TypeError', undefined, true, true) : TypeError = J$.R(2147889, 'TypeError', TypeError, true, true)), true)(J$.T(2147897, 'Argument must be a number', 21, false));
                            }
                            return J$.Rt(2147937, J$.M(2147929, J$.R(2147913, 'buffer', buffer, false, true), 'SlowBuffer', false)(J$.R(2147921, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(2148121, J$e);
                        } finally {
                            if (J$.Fr(2148129))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(2148137, J$e);
        } finally {
            if (J$.Sr(2148145))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

