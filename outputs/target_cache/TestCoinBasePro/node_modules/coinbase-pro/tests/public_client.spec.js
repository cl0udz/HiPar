J$.noInstrEval = false;
jalangiLabel60:
    while (true) {
        try {
            J$.Se(813041, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/coinbase-pro/tests/public_client.spec.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(803865, arguments.callee, this, arguments);
                            arguments = J$.N(803873, 'arguments', arguments, true, false, false);
                            obj = J$.N(803881, 'obj', obj, true, false, false);
                            if (J$.C(50200, J$.C(50160, J$.B(140642, '===', J$.U(140634, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(803601, 'Symbol', undefined, true, true) : Symbol = J$.R(803601, 'Symbol', Symbol, true, true))), J$.T(803609, 'function', 21, false))) ? J$.B(140658, '===', J$.U(140650, 'typeof', J$.G(803625, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(803617, 'Symbol', undefined, true, true) : Symbol = J$.R(803617, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(803633, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(803689, '_typeof', J$.T(803681, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(803657, arguments.callee, this, arguments);
                                                arguments = J$.N(803665, 'arguments', arguments, true, false, false);
                                                obj = J$.N(803673, 'obj', obj, true, false, false);
                                                return J$.Rt(803649, J$.U(140666, 'typeof', J$.R(803641, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(813105, J$e);
                                            } finally {
                                                if (J$.Fr(813113))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(803825, '_typeof', J$.T(803817, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(803793, arguments.callee, this, arguments);
                                                arguments = J$.N(803801, 'arguments', arguments, true, false, false);
                                                obj = J$.N(803809, 'obj', obj, true, false, false);
                                                return J$.Rt(803785, J$.C(50192, J$.C(50184, J$.C(50176, J$.C(50168, J$.R(803697, 'obj', obj, false, false)) ? J$.B(140682, '===', J$.U(140674, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(803705, 'Symbol', undefined, true, true) : Symbol = J$.R(803705, 'Symbol', Symbol, true, true))), J$.T(803713, 'function', 21, false)) : J$._()) ? J$.B(140690, '===', J$.G(803729, J$.R(803721, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(803737, 'Symbol', undefined, true, true) : Symbol = J$.R(803737, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(140698, '!==', J$.R(803745, 'obj', obj, false, false), J$.G(803761, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(803753, 'Symbol', undefined, true, true) : Symbol = J$.R(803753, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(803769, 'symbol', 21, false) : J$.U(140706, 'typeof', J$.R(803777, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(813121, J$e);
                                            } finally {
                                                if (J$.Fr(813129))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(803857, J$.F(803849, J$.R(803833, '_typeof', _typeof, false, true), false)(J$.R(803841, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(813137, J$e);
                        } finally {
                            if (J$.Fr(813145))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(813057, '_typeof', J$.T(813049, _typeof, 12, false), true, false, false);
            J$.N(813065, 'assert', assert, false, false, false);
            J$.N(813073, 'nock', nock, false, false, false);
            J$.N(813081, 'CoinbasePro', CoinbasePro, false, false, false);
            J$.N(813089, 'publicClient', publicClient, false, false, false);
            J$.N(813097, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, false, false);
            J$.T(803353, 'use strict', 21, false);
            J$.F(803377, J$.I(typeof require === 'undefined' ? require = J$.R(803361, 'require', undefined, true, true) : require = J$.R(803361, 'require', require, true, true)), false)(J$.T(803369, 'core-js/modules/es.symbol', 21, false));
            J$.F(803401, J$.I(typeof require === 'undefined' ? require = J$.R(803385, 'require', undefined, true, true) : require = J$.R(803385, 'require', require, true, true)), false)(J$.T(803393, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(803425, J$.I(typeof require === 'undefined' ? require = J$.R(803409, 'require', undefined, true, true) : require = J$.R(803409, 'require', require, true, true)), false)(J$.T(803417, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(803449, J$.I(typeof require === 'undefined' ? require = J$.R(803433, 'require', undefined, true, true) : require = J$.R(803433, 'require', require, true, true)), false)(J$.T(803441, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(803473, J$.I(typeof require === 'undefined' ? require = J$.R(803457, 'require', undefined, true, true) : require = J$.R(803457, 'require', require, true, true)), false)(J$.T(803465, 'core-js/modules/es.date.now', 21, false));
            J$.F(803497, J$.I(typeof require === 'undefined' ? require = J$.R(803481, 'require', undefined, true, true) : require = J$.R(803481, 'require', require, true, true)), false)(J$.T(803489, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(803521, J$.I(typeof require === 'undefined' ? require = J$.R(803505, 'require', undefined, true, true) : require = J$.R(803505, 'require', require, true, true)), false)(J$.T(803513, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(803545, J$.I(typeof require === 'undefined' ? require = J$.R(803529, 'require', undefined, true, true) : require = J$.R(803529, 'require', require, true, true)), false)(J$.T(803537, 'core-js/modules/es.promise', 21, false));
            J$.F(803569, J$.I(typeof require === 'undefined' ? require = J$.R(803553, 'require', undefined, true, true) : require = J$.R(803553, 'require', require, true, true)), false)(J$.T(803561, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(803593, J$.I(typeof require === 'undefined' ? require = J$.R(803577, 'require', undefined, true, true) : require = J$.R(803577, 'require', require, true, true)), false)(J$.T(803585, 'core-js/modules/web.dom-collections.iterator', 21, false));
            var assert = J$.W(803913, 'assert', J$.F(803905, J$.I(typeof require === 'undefined' ? require = J$.R(803889, 'require', undefined, true, true) : require = J$.R(803889, 'require', require, true, true)), false)(J$.T(803897, 'assert', 21, false)), assert, false, true);
            var nock = J$.W(803945, 'nock', J$.F(803937, J$.I(typeof require === 'undefined' ? require = J$.R(803921, 'require', undefined, true, true) : require = J$.R(803921, 'require', require, true, true)), false)(J$.T(803929, 'nock', 21, false)), nock, false, true);
            var CoinbasePro = J$.W(803977, 'CoinbasePro', J$.F(803969, J$.I(typeof require === 'undefined' ? require = J$.R(803953, 'require', undefined, true, true) : require = J$.R(803953, 'require', require, true, true)), false)(J$.T(803961, '../index.js', 21, false)), CoinbasePro, false, true);
            var publicClient = J$.W(804001, 'publicClient', J$.M(803993, J$.R(803985, 'CoinbasePro', CoinbasePro, false, true), 'PublicClient', true)(), publicClient, false, true);
            var EXCHANGE_API_URL = J$.W(804017, 'EXCHANGE_API_URL', J$.T(804009, 'https://api.pro.coinbase.com', 21, false), EXCHANGE_API_URL, false, true);
            J$.F(813033, J$.I(typeof suite === 'undefined' ? suite = J$.R(804025, 'suite', undefined, true, true) : suite = J$.R(804025, 'suite', suite, true, true)), false)(J$.T(804033, 'PublicClient', 21, false), J$.T(813025, function () {
                jalangiLabel59:
                    while (true) {
                        try {
                            J$.Fe(813009, arguments.callee, this, arguments);
                            arguments = J$.N(813017, 'arguments', arguments, true, false, false);
                            J$.F(804097, J$.I(typeof afterEach === 'undefined' ? afterEach = J$.R(804041, 'afterEach', undefined, true, true) : afterEach = J$.R(804041, 'afterEach', afterEach, true, true)), false)(J$.T(804089, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(804073, arguments.callee, this, arguments);
                                            arguments = J$.N(804081, 'arguments', arguments, true, false, false);
                                            return J$.Rt(804065, J$.M(804057, J$.R(804049, 'nock', nock, false, true), 'cleanAll', false)());
                                        } catch (J$e) {
                                            J$.Ex(813153, J$e);
                                        } finally {
                                            if (J$.Fr(813161))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(804409, J$.I(typeof test === 'undefined' ? test = J$.R(804105, 'test', undefined, true, true) : test = J$.R(804105, 'test', test, true, true)), false)(J$.T(804113, '.constructor()', 21, false), J$.T(804401, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(804377, arguments.callee, this, arguments);
                                            arguments = J$.N(804385, 'arguments', arguments, true, false, false);
                                            J$.N(804393, 'client', client, false, false, false);
                                            var client = J$.W(804137, 'client', J$.M(804129, J$.R(804121, 'CoinbasePro', CoinbasePro, false, true), 'PublicClient', true)(), client, false, false);
                                            J$.M(804177, J$.R(804145, 'assert', assert, false, true), 'equal', false)(J$.G(804161, J$.R(804153, 'client', client, false, false), 'apiURI'), J$.R(804169, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true));
                                            J$.M(804217, J$.R(804185, 'assert', assert, false, true), 'equal', false)(J$.G(804201, J$.R(804193, 'client', client, false, false), 'API_LIMIT'), J$.T(804209, 100, 22, false));
                                            J$.M(804257, J$.R(804225, 'assert', assert, false, true), 'equal', false)(J$.G(804241, J$.R(804233, 'client', client, false, false), 'productID'), J$.T(804249, 'BTC-USD', 21, false));
                                            J$.M(804297, J$.R(804265, 'assert', assert, false, true), 'equal', false)(J$.G(804281, J$.R(804273, 'client', client, false, false), 'timeout'), J$.T(804289, 10000, 22, false));
                                            client = J$.W(804329, 'client', J$.M(804321, J$.R(804305, 'CoinbasePro', CoinbasePro, false, true), 'PublicClient', true)(J$.T(804313, 'https://api-public.sandbox.pro.coinbase.com', 21, false)), client, false, false);
                                            J$.M(804369, J$.R(804337, 'assert', assert, false, true), 'equal', false)(J$.G(804353, J$.R(804345, 'client', client, false, false), 'apiURI'), J$.T(804361, 'https://api-public.sandbox.pro.coinbase.com', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(813169, J$e);
                                        } finally {
                                            if (J$.Fr(813177))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(804577, J$.I(typeof test === 'undefined' ? test = J$.R(804417, 'test', undefined, true, true) : test = J$.R(804417, 'test', test, true, true)), false)(J$.T(804425, '.constructor() (with deprecated signature accepting a product ID)', 21, false), J$.T(804569, function () {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(804545, arguments.callee, this, arguments);
                                            arguments = J$.N(804553, 'arguments', arguments, true, false, false);
                                            J$.N(804561, 'client', client, false, false, false);
                                            var client = J$.W(804457, 'client', J$.M(804449, J$.R(804433, 'CoinbasePro', CoinbasePro, false, true), 'PublicClient', true)(J$.T(804441, 'LTC-USD', 21, false)), client, false, false);
                                            J$.M(804497, J$.R(804465, 'assert', assert, false, true), 'equal', false)(J$.G(804481, J$.R(804473, 'client', client, false, false), 'apiURI'), J$.R(804489, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true));
                                            J$.M(804537, J$.R(804505, 'assert', assert, false, true), 'equal', false)(J$.G(804521, J$.R(804513, 'client', client, false, false), 'productID'), J$.T(804529, 'LTC-USD', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(813185, J$e);
                                        } finally {
                                            if (J$.Fr(813193))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(805457, J$.I(typeof suite === 'undefined' ? suite = J$.R(804585, 'suite', undefined, true, true) : suite = J$.R(804585, 'suite', suite, true, true)), false)(J$.T(804593, '.request()', 21, false), J$.T(805449, function () {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(805433, arguments.callee, this, arguments);
                                            arguments = J$.N(805441, 'arguments', arguments, true, false, false);
                                            J$.F(805425, J$.I(typeof test === 'undefined' ? test = J$.R(804601, 'test', undefined, true, true) : test = J$.R(804601, 'test', test, true, true)), false)(J$.T(804609, 'handles errors', 21, false), J$.T(805417, function () {
                                                jalangiLabel10:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(805385, arguments.callee, this, arguments);
                                                            arguments = J$.N(805393, 'arguments', arguments, true, false, false);
                                                            J$.N(805401, 'cbtest', cbtest, false, false, false);
                                                            J$.N(805409, 'promisetest', promisetest, false, false, false);
                                                            J$.M(804697, J$.M(804665, J$.M(804649, J$.F(804633, J$.R(804617, 'nock', nock, false, true), false)(J$.R(804625, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(804641, '/some/path', 21, false)), 'times', false)(J$.T(804657, 2, 22, false)), 'reply', false)(J$.T(804673, 400, 22, false), J$.T(804689, { message: J$.T(804681, 'some error', 21, false) }, 11, false));
                                                            var cbtest = J$.W(805025, 'cbtest', J$.F(805017, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(804705, 'Promise', undefined, true, true) : Promise = J$.R(804705, 'Promise', Promise, true, true)), true)(J$.T(805009, function (resolve, reject) {
                                                                jalangiLabel7:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(804977, arguments.callee, this, arguments);
                                                                            arguments = J$.N(804985, 'arguments', arguments, true, false, false);
                                                                            resolve = J$.N(804993, 'resolve', resolve, true, false, false);
                                                                            reject = J$.N(805001, 'reject', reject, true, false, false);
                                                                            J$.M(804969, J$.R(804713, 'publicClient', publicClient, false, true), 'request', false)(J$.T(804721, 'get', 21, false), J$.T(804745, [
                                                                                J$.T(804729, 'some', 21, false),
                                                                                J$.T(804737, 'path', 21, false)
                                                                            ], 10, false), J$.T(804753, {}, 11, false), J$.T(804961, function (err) {
                                                                                jalangiLabel6:
                                                                                    while (true) {
                                                                                        try {
                                                                                            J$.Fe(804937, arguments.callee, this, arguments);
                                                                                            arguments = J$.N(804945, 'arguments', arguments, true, false, false);
                                                                                            err = J$.N(804953, 'err', err, true, false, false);
                                                                                            if (J$.C(50208, J$.R(804761, 'err', err, false, false))) {
                                                                                                J$.M(804801, J$.R(804769, 'assert', assert, false, true), 'equal', false)(J$.G(804785, J$.R(804777, 'err', err, false, false), 'message'), J$.T(804793, 'HTTP 400 Error: some error', 21, false));
                                                                                                J$.M(804849, J$.R(804809, 'assert', assert, false, true), 'equal', false)(J$.G(804833, J$.G(804825, J$.R(804817, 'err', err, false, false), 'response'), 'statusCode'), J$.T(804841, 400, 22, false));
                                                                                                J$.M(804897, J$.R(804857, 'assert', assert, false, true), 'equal', false)(J$.G(804881, J$.G(804873, J$.R(804865, 'err', err, false, false), 'data'), 'message'), J$.T(804889, 'some error', 21, false));
                                                                                                J$.F(804913, J$.R(804905, 'resolve', resolve, false, false), false)();
                                                                                            } else {
                                                                                                J$.F(804929, J$.R(804921, 'reject', reject, false, false), false)();
                                                                                            }
                                                                                        } catch (J$e) {
                                                                                            J$.Ex(813201, J$e);
                                                                                        } finally {
                                                                                            if (J$.Fr(813209))
                                                                                                continue jalangiLabel6;
                                                                                            else
                                                                                                return J$.Ra();
                                                                                        }
                                                                                    }
                                                                            }, 12, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(813217, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813225))
                                                                                continue jalangiLabel7;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), cbtest, false, false);
                                                            var promisetest = J$.W(805329, 'promisetest', J$.M(805321, J$.M(805137, J$.M(805073, J$.R(805033, 'publicClient', publicClient, false, true), 'request', false)(J$.T(805041, 'get', 21, false), J$.T(805065, [
                                                                J$.T(805049, 'some', 21, false),
                                                                J$.T(805057, 'path', 21, false)
                                                            ], 10, false)), 'then', false)(J$.T(805129, function () {
                                                                jalangiLabel8:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(805113, arguments.callee, this, arguments);
                                                                            arguments = J$.N(805121, 'arguments', arguments, true, false, false);
                                                                            return J$.Rt(805105, J$.M(805097, J$.R(805081, 'assert', assert, false, true), 'fail', false)(J$.T(805089, 'should have thrown an error', 21, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(813233, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813241))
                                                                                continue jalangiLabel8;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), J$.T(805145, 'catch', 21, false), false)(J$.T(805313, function (err) {
                                                                jalangiLabel9:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(805289, arguments.callee, this, arguments);
                                                                            arguments = J$.N(805297, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(805305, 'err', err, true, false, false);
                                                                            J$.M(805185, J$.R(805153, 'assert', assert, false, true), 'equal', false)(J$.G(805169, J$.R(805161, 'err', err, false, false), 'message'), J$.T(805177, 'HTTP 400 Error: some error', 21, false));
                                                                            J$.M(805233, J$.R(805193, 'assert', assert, false, true), 'equal', false)(J$.G(805217, J$.G(805209, J$.R(805201, 'err', err, false, false), 'response'), 'statusCode'), J$.T(805225, 400, 22, false));
                                                                            J$.F(805281, J$.R(805241, 'assert', assert, false, true), false)(J$.G(805265, J$.G(805257, J$.R(805249, 'err', err, false, false), 'data'), 'message'), J$.T(805273, 'some error', 21, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(813249, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813257))
                                                                                continue jalangiLabel9;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), promisetest, false, false);
                                                            return J$.Rt(805377, J$.M(805369, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(805337, 'Promise', undefined, true, true) : Promise = J$.R(805337, 'Promise', Promise, true, true)), 'all', false)(J$.T(805361, [
                                                                J$.R(805345, 'cbtest', cbtest, false, false),
                                                                J$.R(805353, 'promisetest', promisetest, false, false)
                                                            ], 10, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(813265, J$e);
                                                        } finally {
                                                            if (J$.Fr(813273))
                                                                continue jalangiLabel10;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(813281, J$e);
                                        } finally {
                                            if (J$.Fr(813289))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(806009, J$.I(typeof test === 'undefined' ? test = J$.R(805465, 'test', undefined, true, true) : test = J$.R(805465, 'test', test, true, true)), false)(J$.T(805473, '.getProductOrderBook()', 21, false), J$.T(806001, function () {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(805969, arguments.callee, this, arguments);
                                            arguments = J$.N(805977, 'arguments', arguments, true, false, false);
                                            J$.N(805985, 'cbtest', cbtest, false, false, false);
                                            J$.N(805993, 'promisetest', promisetest, false, false, false);
                                            J$.M(805569, J$.M(805529, J$.M(805513, J$.F(805497, J$.R(805481, 'nock', nock, false, true), false)(J$.R(805489, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(805505, '/products/LTC-USD/book?level=3', 21, false)), 'times', false)(J$.T(805521, 2, 22, false)), 'reply', false)(J$.T(805537, 200, 22, false), J$.T(805561, {
                                                asks: J$.T(805545, [], 10, false),
                                                bids: J$.T(805553, [], 10, false)
                                            }, 11, false));
                                            var cbtest = J$.W(805793, 'cbtest', J$.F(805785, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(805577, 'Promise', undefined, true, true) : Promise = J$.R(805577, 'Promise', Promise, true, true)), true)(J$.T(805777, function (resolve, reject) {
                                                jalangiLabel13:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(805745, arguments.callee, this, arguments);
                                                            arguments = J$.N(805753, 'arguments', arguments, true, false, false);
                                                            resolve = J$.N(805761, 'resolve', resolve, true, false, false);
                                                            reject = J$.N(805769, 'reject', reject, true, false, false);
                                                            J$.M(805737, J$.R(805585, 'publicClient', publicClient, false, true), 'getProductOrderBook', false)(J$.T(805593, 'LTC-USD', 21, false), J$.T(805609, { level: J$.T(805601, 3, 22, false) }, 11, false), J$.T(805729, function (err, resp, data) {
                                                                jalangiLabel12:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(805689, arguments.callee, this, arguments);
                                                                            arguments = J$.N(805697, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(805705, 'err', err, true, false, false);
                                                                            resp = J$.N(805713, 'resp', resp, true, false, false);
                                                                            data = J$.N(805721, 'data', data, true, false, false);
                                                                            if (J$.C(50216, J$.R(805617, 'err', err, false, false))) {
                                                                                J$.F(805641, J$.R(805625, 'reject', reject, false, false), false)(J$.R(805633, 'err', err, false, false));
                                                                            }
                                                                            J$.F(805665, J$.R(805649, 'assert', assert, false, true), false)(J$.R(805657, 'data', data, false, false));
                                                                            J$.F(805681, J$.R(805673, 'resolve', resolve, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(813297, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813305))
                                                                                continue jalangiLabel12;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813313, J$e);
                                                        } finally {
                                                            if (J$.Fr(813321))
                                                                continue jalangiLabel13;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), cbtest, false, false);
                                            var promisetest = J$.W(805913, 'promisetest', J$.M(805905, J$.M(805833, J$.R(805801, 'publicClient', publicClient, false, true), 'getProductOrderBook', false)(J$.T(805809, 'LTC-USD', 21, false), J$.T(805825, { level: J$.T(805817, 3, 22, false) }, 11, false)), 'then', false)(J$.T(805897, function (data) {
                                                jalangiLabel14:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(805873, arguments.callee, this, arguments);
                                                            arguments = J$.N(805881, 'arguments', arguments, true, false, false);
                                                            data = J$.N(805889, 'data', data, true, false, false);
                                                            return J$.Rt(805865, J$.F(805857, J$.R(805841, 'assert', assert, false, true), false)(J$.R(805849, 'data', data, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(813329, J$e);
                                                        } finally {
                                                            if (J$.Fr(813337))
                                                                continue jalangiLabel14;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), promisetest, false, false);
                                            return J$.Rt(805961, J$.M(805953, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(805921, 'Promise', undefined, true, true) : Promise = J$.R(805921, 'Promise', Promise, true, true)), 'all', false)(J$.T(805945, [
                                                J$.R(805929, 'cbtest', cbtest, false, false),
                                                J$.R(805937, 'promisetest', promisetest, false, false)
                                            ], 10, false)));
                                        } catch (J$e) {
                                            J$.Ex(813345, J$e);
                                        } finally {
                                            if (J$.Fr(813353))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(806249, J$.I(typeof test === 'undefined' ? test = J$.R(806017, 'test', undefined, true, true) : test = J$.R(806017, 'test', test, true, true)), false)(J$.T(806025, '.getProductOrderBook() (with deprecated signature implying default product ID)', 21, false), J$.T(806241, function () {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(806225, arguments.callee, this, arguments);
                                            arguments = J$.N(806233, 'arguments', arguments, true, false, false);
                                            J$.M(806105, J$.M(806065, J$.F(806049, J$.R(806033, 'nock', nock, false, true), false)(J$.R(806041, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(806057, '/products/BTC-USD/book?level=2', 21, false)), 'reply', false)(J$.T(806073, 200, 22, false), J$.T(806097, {
                                                asks: J$.T(806081, [], 10, false),
                                                bids: J$.T(806089, [], 10, false)
                                            }, 11, false));
                                            return J$.Rt(806217, J$.M(806209, J$.M(806137, J$.R(806113, 'publicClient', publicClient, false, true), 'getProductOrderBook', false)(J$.T(806129, { level: J$.T(806121, 2, 22, false) }, 11, false)), 'then', false)(J$.T(806201, function (data) {
                                                jalangiLabel16:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(806177, arguments.callee, this, arguments);
                                                            arguments = J$.N(806185, 'arguments', arguments, true, false, false);
                                                            data = J$.N(806193, 'data', data, true, false, false);
                                                            return J$.Rt(806169, J$.F(806161, J$.R(806145, 'assert', assert, false, true), false)(J$.R(806153, 'data', data, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(813361, J$e);
                                                        } finally {
                                                            if (J$.Fr(813369))
                                                                continue jalangiLabel16;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(813377, J$e);
                                        } finally {
                                            if (J$.Fr(813385))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(806889, J$.I(typeof test === 'undefined' ? test = J$.R(806257, 'test', undefined, true, true) : test = J$.R(806257, 'test', test, true, true)), false)(J$.T(806265, '.getProductTrades()', 21, false), J$.T(806881, function () {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(806841, arguments.callee, this, arguments);
                                            arguments = J$.N(806849, 'arguments', arguments, true, false, false);
                                            J$.N(806857, 'expectedResponse', expectedResponse, false, false, false);
                                            J$.N(806865, 'cbtest', cbtest, false, false, false);
                                            J$.N(806873, 'promisetest', promisetest, false, false, false);
                                            var expectedResponse = J$.W(806377, 'expectedResponse', J$.T(806369, [
                                                J$.T(806313, {
                                                    time: J$.T(806273, '2014-11-07T22:19:28.578544Z', 21, false),
                                                    trade_id: J$.T(806281, 74, 22, false),
                                                    price: J$.T(806289, '10.00000000', 21, false),
                                                    size: J$.T(806297, '0.01000000', 21, false),
                                                    side: J$.T(806305, 'buy', 21, false)
                                                }, 11, false),
                                                J$.T(806361, {
                                                    time: J$.T(806321, '2014-11-07T01:08:43.642366Z', 21, false),
                                                    trade_id: J$.T(806329, 73, 22, false),
                                                    price: J$.T(806337, '100.00000000', 21, false),
                                                    size: J$.T(806345, '0.01000000', 21, false),
                                                    side: J$.T(806353, 'sell', 21, false)
                                                }, 11, false)
                                            ], 10, false), expectedResponse, false, false);
                                            J$.M(806457, J$.M(806433, J$.M(806417, J$.F(806401, J$.R(806385, 'nock', nock, false, true), false)(J$.R(806393, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(806409, '/products/LTC-USD/trades', 21, false)), 'times', false)(J$.T(806425, 2, 22, false)), 'reply', false)(J$.T(806441, 200, 22, false), J$.R(806449, 'expectedResponse', expectedResponse, false, false));
                                            var cbtest = J$.W(806673, 'cbtest', J$.F(806665, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(806465, 'Promise', undefined, true, true) : Promise = J$.R(806465, 'Promise', Promise, true, true)), true)(J$.T(806657, function (resolve, reject) {
                                                jalangiLabel19:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(806625, arguments.callee, this, arguments);
                                                            arguments = J$.N(806633, 'arguments', arguments, true, false, false);
                                                            resolve = J$.N(806641, 'resolve', resolve, true, false, false);
                                                            reject = J$.N(806649, 'reject', reject, true, false, false);
                                                            J$.M(806617, J$.R(806473, 'publicClient', publicClient, false, true), 'getProductTrades', false)(J$.T(806481, 'LTC-USD', 21, false), J$.T(806609, function (err, resp, data) {
                                                                jalangiLabel18:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(806569, arguments.callee, this, arguments);
                                                                            arguments = J$.N(806577, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(806585, 'err', err, true, false, false);
                                                                            resp = J$.N(806593, 'resp', resp, true, false, false);
                                                                            data = J$.N(806601, 'data', data, true, false, false);
                                                                            if (J$.C(50224, J$.R(806489, 'err', err, false, false))) {
                                                                                J$.F(806513, J$.R(806497, 'reject', reject, false, false), false)(J$.R(806505, 'err', err, false, false));
                                                                            }
                                                                            J$.M(806545, J$.R(806521, 'assert', assert, false, true), 'deepEqual', false)(J$.R(806529, 'data', data, false, false), J$.R(806537, 'expectedResponse', expectedResponse, false, false));
                                                                            J$.F(806561, J$.R(806553, 'resolve', resolve, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(813393, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813401))
                                                                                continue jalangiLabel18;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813409, J$e);
                                                        } finally {
                                                            if (J$.Fr(813417))
                                                                continue jalangiLabel19;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), cbtest, false, false);
                                            var promisetest = J$.W(806785, 'promisetest', J$.M(806777, J$.M(806697, J$.R(806681, 'publicClient', publicClient, false, true), 'getProductTrades', false)(J$.T(806689, 'LTC-USD', 21, false)), 'then', false)(J$.T(806769, function (data) {
                                                jalangiLabel20:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(806745, arguments.callee, this, arguments);
                                                            arguments = J$.N(806753, 'arguments', arguments, true, false, false);
                                                            data = J$.N(806761, 'data', data, true, false, false);
                                                            return J$.Rt(806737, J$.M(806729, J$.R(806705, 'assert', assert, false, true), 'deepEqual', false)(J$.R(806713, 'data', data, false, false), J$.R(806721, 'expectedResponse', expectedResponse, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(813425, J$e);
                                                        } finally {
                                                            if (J$.Fr(813433))
                                                                continue jalangiLabel20;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), promisetest, false, false);
                                            return J$.Rt(806833, J$.M(806825, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(806793, 'Promise', undefined, true, true) : Promise = J$.R(806793, 'Promise', Promise, true, true)), 'all', false)(J$.T(806817, [
                                                J$.R(806801, 'cbtest', cbtest, false, false),
                                                J$.R(806809, 'promisetest', promisetest, false, false)
                                            ], 10, false)));
                                        } catch (J$e) {
                                            J$.Ex(813441, J$e);
                                        } finally {
                                            if (J$.Fr(813449))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(807177, J$.I(typeof test === 'undefined' ? test = J$.R(806897, 'test', undefined, true, true) : test = J$.R(806897, 'test', test, true, true)), false)(J$.T(806905, '.getProductTrades() (with deprecated signature implying default product ID)', 21, false), J$.T(807169, function () {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(807145, arguments.callee, this, arguments);
                                            arguments = J$.N(807153, 'arguments', arguments, true, false, false);
                                            J$.N(807161, 'expectedResponse', expectedResponse, false, false, false);
                                            var expectedResponse = J$.W(806969, 'expectedResponse', J$.T(806961, [J$.T(806953, {
                                                    time: J$.T(806913, '2014-11-07T22:19:28.578544Z', 21, false),
                                                    trade_id: J$.T(806921, 74, 22, false),
                                                    price: J$.T(806929, '10.00000000', 21, false),
                                                    size: J$.T(806937, '0.01000000', 21, false),
                                                    side: J$.T(806945, 'buy', 21, false)
                                                }, 11, false)], 10, false), expectedResponse, false, false);
                                            J$.M(807033, J$.M(807009, J$.F(806993, J$.R(806977, 'nock', nock, false, true), false)(J$.R(806985, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(807001, '/products/BTC-USD/trades', 21, false)), 'reply', false)(J$.T(807017, 200, 22, false), J$.R(807025, 'expectedResponse', expectedResponse, false, false));
                                            return J$.Rt(807137, J$.M(807129, J$.M(807049, J$.R(807041, 'publicClient', publicClient, false, true), 'getProductTrades', false)(), 'then', false)(J$.T(807121, function (data) {
                                                jalangiLabel22:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(807097, arguments.callee, this, arguments);
                                                            arguments = J$.N(807105, 'arguments', arguments, true, false, false);
                                                            data = J$.N(807113, 'data', data, true, false, false);
                                                            return J$.Rt(807089, J$.M(807081, J$.R(807057, 'assert', assert, false, true), 'deepEqual', false)(J$.R(807065, 'data', data, false, false), J$.R(807073, 'expectedResponse', expectedResponse, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(813457, J$e);
                                                        } finally {
                                                            if (J$.Fr(813465))
                                                                continue jalangiLabel22;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(813473, J$e);
                                        } finally {
                                            if (J$.Fr(813481))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(807889, J$.I(typeof test === 'undefined' ? test = J$.R(807185, 'test', undefined, true, true) : test = J$.R(807185, 'test', test, true, true)), false)(J$.T(807193, '.getProductTicker()', 21, false), J$.T(807881, function () {
                                jalangiLabel27:
                                    while (true) {
                                        try {
                                            J$.Fe(807849, arguments.callee, this, arguments);
                                            arguments = J$.N(807857, 'arguments', arguments, true, false, false);
                                            J$.N(807865, 'cbtest', cbtest, false, false, false);
                                            J$.N(807873, 'promisetest', promisetest, false, false, false);
                                            J$.M(807297, J$.M(807249, J$.M(807233, J$.F(807217, J$.R(807201, 'nock', nock, false, true), false)(J$.R(807209, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(807225, '/products/ETH-USD/ticker', 21, false)), 'times', false)(J$.T(807241, 2, 22, false)), 'reply', false)(J$.T(807257, 200, 22, false), J$.T(807289, {
                                                trade_id: J$.T(807265, 'test-id', 21, false),
                                                price: J$.T(807273, '9.00', 21, false),
                                                size: J$.T(807281, '5', 21, false)
                                            }, 11, false));
                                            var cbtest = J$.W(807601, 'cbtest', J$.F(807593, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(807305, 'Promise', undefined, true, true) : Promise = J$.R(807305, 'Promise', Promise, true, true)), true)(J$.T(807585, function (resolve, reject) {
                                                jalangiLabel25:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(807553, arguments.callee, this, arguments);
                                                            arguments = J$.N(807561, 'arguments', arguments, true, false, false);
                                                            resolve = J$.N(807569, 'resolve', resolve, true, false, false);
                                                            reject = J$.N(807577, 'reject', reject, true, false, false);
                                                            J$.M(807545, J$.R(807313, 'publicClient', publicClient, false, true), 'getProductTicker', false)(J$.T(807321, 'ETH-USD', 21, false), J$.T(807537, function (err, resp, data) {
                                                                jalangiLabel24:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(807497, arguments.callee, this, arguments);
                                                                            arguments = J$.N(807505, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(807513, 'err', err, true, false, false);
                                                                            resp = J$.N(807521, 'resp', resp, true, false, false);
                                                                            data = J$.N(807529, 'data', data, true, false, false);
                                                                            if (J$.C(50232, J$.R(807329, 'err', err, false, false))) {
                                                                                J$.F(807353, J$.R(807337, 'reject', reject, false, false), false)(J$.R(807345, 'err', err, false, false));
                                                                            }
                                                                            J$.M(807393, J$.R(807361, 'assert', assert, false, true), 'equal', false)(J$.G(807377, J$.R(807369, 'data', data, false, false), 'trade_id'), J$.T(807385, 'test-id', 21, false));
                                                                            J$.F(807433, J$.R(807401, 'assert', assert, false, true), false)(J$.G(807417, J$.R(807409, 'data', data, false, false), 'price'), J$.T(807425, '9.00', 21, false));
                                                                            J$.F(807473, J$.R(807441, 'assert', assert, false, true), false)(J$.G(807457, J$.R(807449, 'data', data, false, false), 'size'), J$.T(807465, '5', 21, false));
                                                                            J$.F(807489, J$.R(807481, 'resolve', resolve, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(813489, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813497))
                                                                                continue jalangiLabel24;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813505, J$e);
                                                        } finally {
                                                            if (J$.Fr(813513))
                                                                continue jalangiLabel25;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), cbtest, false, false);
                                            var promisetest = J$.W(807793, 'promisetest', J$.M(807785, J$.M(807625, J$.R(807609, 'publicClient', publicClient, false, true), 'getProductTicker', false)(J$.T(807617, 'ETH-USD', 21, false)), 'then', false)(J$.T(807777, function (data) {
                                                jalangiLabel26:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(807753, arguments.callee, this, arguments);
                                                            arguments = J$.N(807761, 'arguments', arguments, true, false, false);
                                                            data = J$.N(807769, 'data', data, true, false, false);
                                                            J$.M(807665, J$.R(807633, 'assert', assert, false, true), 'equal', false)(J$.G(807649, J$.R(807641, 'data', data, false, false), 'trade_id'), J$.T(807657, 'test-id', 21, false));
                                                            J$.M(807705, J$.R(807673, 'assert', assert, false, true), 'equal', false)(J$.G(807689, J$.R(807681, 'data', data, false, false), 'price'), J$.T(807697, '9.00', 21, false));
                                                            J$.M(807745, J$.R(807713, 'assert', assert, false, true), 'equal', false)(J$.G(807729, J$.R(807721, 'data', data, false, false), 'size'), J$.T(807737, '5', 21, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813521, J$e);
                                                        } finally {
                                                            if (J$.Fr(813529))
                                                                continue jalangiLabel26;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), promisetest, false, false);
                                            return J$.Rt(807841, J$.M(807833, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(807801, 'Promise', undefined, true, true) : Promise = J$.R(807801, 'Promise', Promise, true, true)), 'all', false)(J$.T(807825, [
                                                J$.R(807809, 'cbtest', cbtest, false, false),
                                                J$.R(807817, 'promisetest', promisetest, false, false)
                                            ], 10, false)));
                                        } catch (J$e) {
                                            J$.Ex(813537, J$e);
                                        } finally {
                                            if (J$.Fr(813545))
                                                continue jalangiLabel27;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(808209, J$.I(typeof test === 'undefined' ? test = J$.R(807897, 'test', undefined, true, true) : test = J$.R(807897, 'test', test, true, true)), false)(J$.T(807905, '.getProductTicker() (with deprecated signature implying default product ID)', 21, false), J$.T(808201, function () {
                                jalangiLabel29:
                                    while (true) {
                                        try {
                                            J$.Fe(808185, arguments.callee, this, arguments);
                                            arguments = J$.N(808193, 'arguments', arguments, true, false, false);
                                            J$.M(807993, J$.M(807945, J$.F(807929, J$.R(807913, 'nock', nock, false, true), false)(J$.R(807921, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(807937, '/products/BTC-USD/ticker', 21, false)), 'reply', false)(J$.T(807953, 200, 22, false), J$.T(807985, {
                                                trade_id: J$.T(807961, 'test-id', 21, false),
                                                price: J$.T(807969, '90.00', 21, false),
                                                size: J$.T(807977, '2', 21, false)
                                            }, 11, false));
                                            return J$.Rt(808177, J$.M(808169, J$.M(808009, J$.R(808001, 'publicClient', publicClient, false, true), 'getProductTicker', false)(), 'then', false)(J$.T(808161, function (data) {
                                                jalangiLabel28:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(808137, arguments.callee, this, arguments);
                                                            arguments = J$.N(808145, 'arguments', arguments, true, false, false);
                                                            data = J$.N(808153, 'data', data, true, false, false);
                                                            J$.M(808049, J$.R(808017, 'assert', assert, false, true), 'equal', false)(J$.G(808033, J$.R(808025, 'data', data, false, false), 'trade_id'), J$.T(808041, 'test-id', 21, false));
                                                            J$.M(808089, J$.R(808057, 'assert', assert, false, true), 'equal', false)(J$.G(808073, J$.R(808065, 'data', data, false, false), 'price'), J$.T(808081, '90.00', 21, false));
                                                            J$.M(808129, J$.R(808097, 'assert', assert, false, true), 'equal', false)(J$.G(808113, J$.R(808105, 'data', data, false, false), 'size'), J$.T(808121, '2', 21, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813553, J$e);
                                                        } finally {
                                                            if (J$.Fr(813561))
                                                                continue jalangiLabel28;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(813569, J$e);
                                        } finally {
                                            if (J$.Fr(813577))
                                                continue jalangiLabel29;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(810385, J$.I(typeof suite === 'undefined' ? suite = J$.R(808217, 'suite', undefined, true, true) : suite = J$.R(808217, 'suite', suite, true, true)), false)(J$.T(808225, '.getProductTradeStream()', 21, false), J$.T(810377, function () {
                                jalangiLabel46:
                                    while (true) {
                                        try {
                                            J$.Fe(810345, arguments.callee, this, arguments);
                                            arguments = J$.N(810353, 'arguments', arguments, true, false, false);
                                            J$.N(810361, 'from', from, false, false, false);
                                            J$.N(810369, 'to', to, false, false, false);
                                            var from = J$.W(808241, 'from', J$.T(808233, 8408014, 22, false), from, false, false);
                                            var to = J$.W(808257, 'to', J$.T(808249, 8409426, 22, false), to, false, false);
                                            J$.F(808777, J$.I(typeof test === 'undefined' ? test = J$.R(808265, 'test', undefined, true, true) : test = J$.R(808265, 'test', test, true, true)), false)(J$.T(808273, 'streams trades', 21, false), J$.T(808769, function (done) {
                                                jalangiLabel33:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(808729, arguments.callee, this, arguments);
                                                            arguments = J$.N(808737, 'arguments', arguments, true, false, false);
                                                            done = J$.N(808745, 'done', done, true, false, false);
                                                            J$.N(808753, 'last', last, false, false, false);
                                                            J$.N(808761, 'current', current, false, false, false);
                                                            J$.M(808297, J$.R(808281, 'nock', nock, false, true), 'load', false)(J$.T(808289, './tests/mocks/pubclient_stream_trades.json', 21, false));
                                                            var last = J$.W(808313, 'last', J$.R(808305, 'from', from, false, false), last, false, false);
                                                            var current;
                                                            J$.M(808721, J$.M(808649, J$.M(808553, J$.M(808353, J$.R(808321, 'publicClient', publicClient, false, true), 'getProductTradeStream', false)(J$.T(808329, 'BTC-USD', 21, false), J$.R(808337, 'from', from, false, false), J$.R(808345, 'to', to, false, false)), 'on', false)(J$.T(808361, 'data', 21, false), J$.T(808545, function (data) {
                                                                jalangiLabel30:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(808521, arguments.callee, this, arguments);
                                                                            arguments = J$.N(808529, 'arguments', arguments, true, false, false);
                                                                            data = J$.N(808537, 'data', data, true, false, false);
                                                                            current = J$.W(808385, 'current', J$.G(808377, J$.R(808369, 'data', data, false, false), 'trade_id'), current, false, false);
                                                                            J$.M(808433, J$.R(808393, 'assert', assert, false, true), 'equal', false)(J$.F(808417, J$.R(808401, '_typeof', _typeof, false, true), false)(J$.R(808409, 'current', current, false, false)), J$.T(808425, 'number', 21, false));
                                                                            J$.M(808497, J$.R(808441, 'assert', assert, false, true), 'equal', false)(J$.R(808449, 'current', current, false, false), J$.B(140714, '+', J$.R(808457, 'last', last, false, false), J$.T(808465, 1, 22, false)), J$.B(140730, '+', J$.B(140722, '+', J$.R(808473, 'current', current, false, false), J$.T(808481, ' is next in series, last: ', 21, false)), J$.R(808489, 'last', last, false, false)));
                                                                            last = J$.W(808513, 'last', J$.R(808505, 'current', current, false, false), last, false, false);
                                                                        } catch (J$e) {
                                                                            J$.Ex(813585, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813593))
                                                                                continue jalangiLabel30;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'on', false)(J$.T(808561, 'end', 21, false), J$.T(808641, function () {
                                                                jalangiLabel31:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(808625, arguments.callee, this, arguments);
                                                                            arguments = J$.N(808633, 'arguments', arguments, true, false, false);
                                                                            J$.F(808601, J$.R(808569, 'assert', assert, false, true), false)(current = J$.W(808593, 'current', J$.B(140738, '-', J$.R(808577, 'to', to, false, false), J$.T(808585, 1, 22, false)), current, false, false));
                                                                            J$.F(808617, J$.R(808609, 'done', done, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(813601, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813609))
                                                                                continue jalangiLabel31;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'on', false)(J$.T(808657, 'error', 21, false), J$.T(808713, function (err) {
                                                                jalangiLabel32:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(808689, arguments.callee, this, arguments);
                                                                            arguments = J$.N(808697, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(808705, 'err', err, true, false, false);
                                                                            J$.M(808681, J$.R(808665, 'assert', assert, false, true), 'fail', false)(J$.R(808673, 'err', err, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(813617, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813625))
                                                                                continue jalangiLabel32;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813633, J$e);
                                                        } finally {
                                                            if (J$.Fr(813641))
                                                                continue jalangiLabel33;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(809289, J$.I(typeof test === 'undefined' ? test = J$.R(808785, 'test', undefined, true, true) : test = J$.R(808785, 'test', test, true, true)), false)(J$.T(808793, 'streams trades (with deprecated signature implying default product ID)', 21, false), J$.T(809281, function (done) {
                                                jalangiLabel37:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(809241, arguments.callee, this, arguments);
                                                            arguments = J$.N(809249, 'arguments', arguments, true, false, false);
                                                            done = J$.N(809257, 'done', done, true, false, false);
                                                            J$.N(809265, 'last', last, false, false, false);
                                                            J$.N(809273, 'current', current, false, false, false);
                                                            J$.M(808817, J$.R(808801, 'nock', nock, false, true), 'load', false)(J$.T(808809, './tests/mocks/pubclient_stream_trades.json', 21, false));
                                                            var last = J$.W(808833, 'last', J$.R(808825, 'from', from, false, false), last, false, false);
                                                            var current;
                                                            J$.M(809233, J$.M(809161, J$.M(809065, J$.M(808865, J$.R(808841, 'publicClient', publicClient, false, true), 'getProductTradeStream', false)(J$.R(808849, 'from', from, false, false), J$.R(808857, 'to', to, false, false)), 'on', false)(J$.T(808873, 'data', 21, false), J$.T(809057, function (data) {
                                                                jalangiLabel34:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(809033, arguments.callee, this, arguments);
                                                                            arguments = J$.N(809041, 'arguments', arguments, true, false, false);
                                                                            data = J$.N(809049, 'data', data, true, false, false);
                                                                            current = J$.W(808897, 'current', J$.G(808889, J$.R(808881, 'data', data, false, false), 'trade_id'), current, false, false);
                                                                            J$.M(808945, J$.R(808905, 'assert', assert, false, true), 'equal', false)(J$.F(808929, J$.R(808913, '_typeof', _typeof, false, true), false)(J$.R(808921, 'current', current, false, false)), J$.T(808937, 'number', 21, false));
                                                                            J$.M(809009, J$.R(808953, 'assert', assert, false, true), 'equal', false)(J$.R(808961, 'current', current, false, false), J$.B(140746, '+', J$.R(808969, 'last', last, false, false), J$.T(808977, 1, 22, false)), J$.B(140762, '+', J$.B(140754, '+', J$.R(808985, 'current', current, false, false), J$.T(808993, ' is next in series, last: ', 21, false)), J$.R(809001, 'last', last, false, false)));
                                                                            last = J$.W(809025, 'last', J$.R(809017, 'current', current, false, false), last, false, false);
                                                                        } catch (J$e) {
                                                                            J$.Ex(813649, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813657))
                                                                                continue jalangiLabel34;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'on', false)(J$.T(809073, 'end', 21, false), J$.T(809153, function () {
                                                                jalangiLabel35:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(809137, arguments.callee, this, arguments);
                                                                            arguments = J$.N(809145, 'arguments', arguments, true, false, false);
                                                                            J$.F(809113, J$.R(809081, 'assert', assert, false, true), false)(current = J$.W(809105, 'current', J$.B(140770, '-', J$.R(809089, 'to', to, false, false), J$.T(809097, 1, 22, false)), current, false, false));
                                                                            J$.F(809129, J$.R(809121, 'done', done, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(813665, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813673))
                                                                                continue jalangiLabel35;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'on', false)(J$.T(809169, 'error', 21, false), J$.T(809225, function (err) {
                                                                jalangiLabel36:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(809201, arguments.callee, this, arguments);
                                                                            arguments = J$.N(809209, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(809217, 'err', err, true, false, false);
                                                                            J$.M(809193, J$.R(809177, 'assert', assert, false, true), 'fail', false)(J$.R(809185, 'err', err, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(813681, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813689))
                                                                                continue jalangiLabel36;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813697, J$e);
                                                        } finally {
                                                            if (J$.Fr(813705))
                                                                continue jalangiLabel37;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(809809, J$.I(typeof test === 'undefined' ? test = J$.R(809297, 'test', undefined, true, true) : test = J$.R(809297, 'test', test, true, true)), false)(J$.T(809305, '.getProductTradeStream() with function', 21, false), J$.T(809801, function (done) {
                                                jalangiLabel41:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(809761, arguments.callee, this, arguments);
                                                            arguments = J$.N(809769, 'arguments', arguments, true, false, false);
                                                            done = J$.N(809777, 'done', done, true, false, false);
                                                            J$.N(809785, 'last', last, false, false, false);
                                                            J$.N(809793, 'current', current, false, false, false);
                                                            J$.M(809329, J$.R(809313, 'nock', nock, false, true), 'load', false)(J$.T(809321, './tests/mocks/pubclient_stream_trades_function.json', 21, false));
                                                            var last = J$.W(809345, 'last', J$.R(809337, 'from', from, false, false), last, false, false);
                                                            var current;
                                                            J$.M(809753, J$.M(809657, J$.M(809457, J$.R(809353, 'publicClient', publicClient, false, true), 'getProductTradeStream', false)(J$.T(809361, 'BTC-USD', 21, false), J$.R(809369, 'from', from, false, false), J$.T(809449, function (trade) {
                                                                jalangiLabel38:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(809425, arguments.callee, this, arguments);
                                                                            arguments = J$.N(809433, 'arguments', arguments, true, false, false);
                                                                            trade = J$.N(809441, 'trade', trade, true, false, false);
                                                                            return J$.Rt(809417, J$.B(140778, '>=', J$.M(809401, J$.I(typeof Date === 'undefined' ? Date = J$.R(809377, 'Date', undefined, true, true) : Date = J$.R(809377, 'Date', Date, true, true)), 'parse', false)(J$.G(809393, J$.R(809385, 'trade', trade, false, false), 'time')), J$.T(809409, 1463068800000, 22, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(813713, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813721))
                                                                                continue jalangiLabel38;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'on', false)(J$.T(809465, 'data', 21, false), J$.T(809649, function (data) {
                                                                jalangiLabel39:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(809625, arguments.callee, this, arguments);
                                                                            arguments = J$.N(809633, 'arguments', arguments, true, false, false);
                                                                            data = J$.N(809641, 'data', data, true, false, false);
                                                                            current = J$.W(809489, 'current', J$.G(809481, J$.R(809473, 'data', data, false, false), 'trade_id'), current, false, false);
                                                                            J$.M(809537, J$.R(809497, 'assert', assert, false, true), 'equal', false)(J$.F(809521, J$.R(809505, '_typeof', _typeof, false, true), false)(J$.R(809513, 'current', current, false, false)), J$.T(809529, 'number', 21, false));
                                                                            J$.M(809601, J$.R(809545, 'assert', assert, false, true), 'equal', false)(J$.R(809553, 'current', current, false, false), J$.B(140786, '+', J$.R(809561, 'last', last, false, false), J$.T(809569, 1, 22, false)), J$.B(140802, '+', J$.B(140794, '+', J$.R(809577, 'current', current, false, false), J$.T(809585, ' is next in series, last: ', 21, false)), J$.R(809593, 'last', last, false, false)));
                                                                            last = J$.W(809617, 'last', J$.R(809609, 'current', current, false, false), last, false, false);
                                                                        } catch (J$e) {
                                                                            J$.Ex(813729, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813737))
                                                                                continue jalangiLabel39;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'on', false)(J$.T(809665, 'end', 21, false), J$.T(809745, function () {
                                                                jalangiLabel40:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(809729, arguments.callee, this, arguments);
                                                                            arguments = J$.N(809737, 'arguments', arguments, true, false, false);
                                                                            J$.M(809705, J$.R(809673, 'assert', assert, false, true), 'equal', false)(J$.R(809681, 'last', last, false, false), J$.T(809689, 8409426, 22, false), J$.R(809697, 'last', last, false, false));
                                                                            J$.F(809721, J$.R(809713, 'done', done, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(813745, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813753))
                                                                                continue jalangiLabel40;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813761, J$e);
                                                        } finally {
                                                            if (J$.Fr(813769))
                                                                continue jalangiLabel41;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(810337, J$.I(typeof test === 'undefined' ? test = J$.R(809817, 'test', undefined, true, true) : test = J$.R(809817, 'test', test, true, true)), false)(J$.T(809825, '.getProductTradeStream() with current date function', 21, false), J$.T(810329, function (done) {
                                                jalangiLabel45:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(810289, arguments.callee, this, arguments);
                                                            arguments = J$.N(810297, 'arguments', arguments, true, false, false);
                                                            done = J$.N(810305, 'done', done, true, false, false);
                                                            J$.N(810313, 'last', last, false, false, false);
                                                            J$.N(810321, 'current', current, false, false, false);
                                                            J$.M(809849, J$.R(809833, 'nock', nock, false, true), 'load', false)(J$.T(809841, './tests/mocks/pubclient_stream_trades_function.json', 21, false));
                                                            var last = J$.W(809865, 'last', J$.R(809857, 'from', from, false, false), last, false, false);
                                                            var current;
                                                            J$.M(810281, J$.M(810185, J$.M(809985, J$.R(809873, 'publicClient', publicClient, false, true), 'getProductTradeStream', false)(J$.T(809881, 'BTC-USD', 21, false), J$.R(809889, 'from', from, false, false), J$.T(809977, function (trade) {
                                                                jalangiLabel42:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(809953, arguments.callee, this, arguments);
                                                                            arguments = J$.N(809961, 'arguments', arguments, true, false, false);
                                                                            trade = J$.N(809969, 'trade', trade, true, false, false);
                                                                            return J$.Rt(809945, J$.B(140810, '>=', J$.M(809921, J$.I(typeof Date === 'undefined' ? Date = J$.R(809897, 'Date', undefined, true, true) : Date = J$.R(809897, 'Date', Date, true, true)), 'parse', false)(J$.G(809913, J$.R(809905, 'trade', trade, false, false), 'time')), J$.M(809937, J$.I(typeof Date === 'undefined' ? Date = J$.R(809929, 'Date', undefined, true, true) : Date = J$.R(809929, 'Date', Date, true, true)), 'now', false)()));
                                                                        } catch (J$e) {
                                                                            J$.Ex(813777, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813785))
                                                                                continue jalangiLabel42;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'on', false)(J$.T(809993, 'data', 21, false), J$.T(810177, function (data) {
                                                                jalangiLabel43:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(810153, arguments.callee, this, arguments);
                                                                            arguments = J$.N(810161, 'arguments', arguments, true, false, false);
                                                                            data = J$.N(810169, 'data', data, true, false, false);
                                                                            current = J$.W(810017, 'current', J$.G(810009, J$.R(810001, 'data', data, false, false), 'trade_id'), current, false, false);
                                                                            J$.M(810065, J$.R(810025, 'assert', assert, false, true), 'equal', false)(J$.F(810049, J$.R(810033, '_typeof', _typeof, false, true), false)(J$.R(810041, 'current', current, false, false)), J$.T(810057, 'number', 21, false));
                                                                            J$.M(810129, J$.R(810073, 'assert', assert, false, true), 'equal', false)(J$.R(810081, 'current', current, false, false), J$.B(140818, '+', J$.R(810089, 'last', last, false, false), J$.T(810097, 1, 22, false)), J$.B(140834, '+', J$.B(140826, '+', J$.R(810105, 'current', current, false, false), J$.T(810113, ' is next in series, last: ', 21, false)), J$.R(810121, 'last', last, false, false)));
                                                                            last = J$.W(810145, 'last', J$.R(810137, 'current', current, false, false), last, false, false);
                                                                        } catch (J$e) {
                                                                            J$.Ex(813793, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813801))
                                                                                continue jalangiLabel43;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'on', false)(J$.T(810193, 'end', 21, false), J$.T(810273, function () {
                                                                jalangiLabel44:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(810257, arguments.callee, this, arguments);
                                                                            arguments = J$.N(810265, 'arguments', arguments, true, false, false);
                                                                            J$.M(810233, J$.R(810201, 'assert', assert, false, true), 'equal', false)(J$.R(810209, 'last', last, false, false), J$.T(810217, 8409514, 22, false), J$.R(810225, 'last', last, false, false));
                                                                            J$.F(810249, J$.R(810241, 'done', done, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(813809, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813817))
                                                                                continue jalangiLabel44;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813825, J$e);
                                                        } finally {
                                                            if (J$.Fr(813833))
                                                                continue jalangiLabel45;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(813841, J$e);
                                        } finally {
                                            if (J$.Fr(813849))
                                                continue jalangiLabel46;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(811385, J$.I(typeof test === 'undefined' ? test = J$.R(810393, 'test', undefined, true, true) : test = J$.R(810393, 'test', test, true, true)), false)(J$.T(810401, '.getProductHistoricRates()', 21, false), J$.T(811377, function () {
                                jalangiLabel50:
                                    while (true) {
                                        try {
                                            J$.Fe(811345, arguments.callee, this, arguments);
                                            arguments = J$.N(811353, 'arguments', arguments, true, false, false);
                                            J$.N(811361, 'cbtest', cbtest, false, false, false);
                                            J$.N(811369, 'promisetest', promisetest, false, false, false);
                                            J$.M(810649, J$.M(810457, J$.M(810441, J$.F(810425, J$.R(810409, 'nock', nock, false, true), false)(J$.R(810417, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(810433, '/products/ETH-USD/candles', 21, false)), 'times', false)(J$.T(810449, 2, 22, false)), 'reply', false)(J$.T(810465, 200, 22, false), J$.T(810641, [
                                                J$.T(810521, [
                                                    J$.T(810473, 1514273340, 22, false),
                                                    J$.T(810481, 759.75, 22, false),
                                                    J$.T(810489, 759.97, 22, false),
                                                    J$.T(810497, 759.75, 22, false),
                                                    J$.T(810505, 759.97, 22, false),
                                                    J$.T(810513, 8.03891157, 22, false)
                                                ], 10, false),
                                                J$.T(810577, [
                                                    J$.T(810529, 1514273280, 22, false),
                                                    J$.T(810537, 758.99, 22, false),
                                                    J$.T(810545, 759.74, 22, false),
                                                    J$.T(810553, 758.99, 22, false),
                                                    J$.T(810561, 759.74, 22, false),
                                                    J$.T(810569, 17.36616621, 22, false)
                                                ], 10, false),
                                                J$.T(810633, [
                                                    J$.T(810585, 1514273220, 22, false),
                                                    J$.T(810593, 758.99, 22, false),
                                                    J$.T(810601, 759, 22, false),
                                                    J$.T(810609, 759, 22, false),
                                                    J$.T(810617, 759, 22, false),
                                                    J$.T(810625, 10.6524787, 22, false)
                                                ], 10, false)
                                            ], 10, false));
                                            var cbtest = J$.W(811025, 'cbtest', J$.F(811017, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(810657, 'Promise', undefined, true, true) : Promise = J$.R(810657, 'Promise', Promise, true, true)), true)(J$.T(811009, function (resolve, reject) {
                                                jalangiLabel48:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(810977, arguments.callee, this, arguments);
                                                            arguments = J$.N(810985, 'arguments', arguments, true, false, false);
                                                            resolve = J$.N(810993, 'resolve', resolve, true, false, false);
                                                            reject = J$.N(811001, 'reject', reject, true, false, false);
                                                            J$.M(810969, J$.R(810665, 'publicClient', publicClient, false, true), 'getProductHistoricRates', false)(J$.T(810673, 'ETH-USD', 21, false), J$.T(810961, function (err, resp, data) {
                                                                jalangiLabel47:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(810921, arguments.callee, this, arguments);
                                                                            arguments = J$.N(810929, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(810937, 'err', err, true, false, false);
                                                                            resp = J$.N(810945, 'resp', resp, true, false, false);
                                                                            data = J$.N(810953, 'data', data, true, false, false);
                                                                            if (J$.C(50240, J$.R(810681, 'err', err, false, false))) {
                                                                                J$.F(810705, J$.R(810689, 'reject', reject, false, false), false)(J$.R(810697, 'err', err, false, false));
                                                                            }
                                                                            J$.M(810769, J$.R(810713, 'assert', assert, false, true), 'equal', false)(J$.G(810753, J$.G(810737, J$.R(810721, 'data', data, false, false), J$.T(810729, 0, 22, false)), J$.T(810745, 0, 22, false)), J$.T(810761, 1514273340, 22, false));
                                                                            J$.M(810833, J$.R(810777, 'assert', assert, false, true), 'equal', false)(J$.G(810817, J$.G(810801, J$.R(810785, 'data', data, false, false), J$.T(810793, 0, 22, false)), J$.T(810809, 1, 22, false)), J$.T(810825, 759.75, 22, false));
                                                                            J$.M(810897, J$.R(810841, 'assert', assert, false, true), 'equal', false)(J$.G(810881, J$.G(810865, J$.R(810849, 'data', data, false, false), J$.T(810857, 2, 22, false)), J$.T(810873, 0, 22, false)), J$.T(810889, 1514273220, 22, false));
                                                                            J$.F(810913, J$.R(810905, 'resolve', resolve, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(813857, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813865))
                                                                                continue jalangiLabel47;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813873, J$e);
                                                        } finally {
                                                            if (J$.Fr(813881))
                                                                continue jalangiLabel48;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), cbtest, false, false);
                                            var promisetest = J$.W(811289, 'promisetest', J$.M(811281, J$.M(811049, J$.R(811033, 'publicClient', publicClient, false, true), 'getProductHistoricRates', false)(J$.T(811041, 'ETH-USD', 21, false)), 'then', false)(J$.T(811273, function (data) {
                                                jalangiLabel49:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(811249, arguments.callee, this, arguments);
                                                            arguments = J$.N(811257, 'arguments', arguments, true, false, false);
                                                            data = J$.N(811265, 'data', data, true, false, false);
                                                            J$.M(811113, J$.R(811057, 'assert', assert, false, true), 'equal', false)(J$.G(811097, J$.G(811081, J$.R(811065, 'data', data, false, false), J$.T(811073, 0, 22, false)), J$.T(811089, 0, 22, false)), J$.T(811105, 1514273340, 22, false));
                                                            J$.M(811177, J$.R(811121, 'assert', assert, false, true), 'equal', false)(J$.G(811161, J$.G(811145, J$.R(811129, 'data', data, false, false), J$.T(811137, 0, 22, false)), J$.T(811153, 1, 22, false)), J$.T(811169, 759.75, 22, false));
                                                            J$.M(811241, J$.R(811185, 'assert', assert, false, true), 'equal', false)(J$.G(811225, J$.G(811209, J$.R(811193, 'data', data, false, false), J$.T(811201, 2, 22, false)), J$.T(811217, 0, 22, false)), J$.T(811233, 1514273220, 22, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813889, J$e);
                                                        } finally {
                                                            if (J$.Fr(813897))
                                                                continue jalangiLabel49;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), promisetest, false, false);
                                            return J$.Rt(811337, J$.M(811329, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(811297, 'Promise', undefined, true, true) : Promise = J$.R(811297, 'Promise', Promise, true, true)), 'all', false)(J$.T(811321, [
                                                J$.R(811305, 'cbtest', cbtest, false, false),
                                                J$.R(811313, 'promisetest', promisetest, false, false)
                                            ], 10, false)));
                                        } catch (J$e) {
                                            J$.Ex(813905, J$e);
                                        } finally {
                                            if (J$.Fr(813913))
                                                continue jalangiLabel50;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(811921, J$.I(typeof test === 'undefined' ? test = J$.R(811393, 'test', undefined, true, true) : test = J$.R(811393, 'test', test, true, true)), false)(J$.T(811401, '.getProductHistoricRates() (with deprecated signature implying default product ID)', 21, false), J$.T(811913, function () {
                                jalangiLabel52:
                                    while (true) {
                                        try {
                                            J$.Fe(811897, arguments.callee, this, arguments);
                                            arguments = J$.N(811905, 'arguments', arguments, true, false, false);
                                            J$.M(811633, J$.M(811441, J$.F(811425, J$.R(811409, 'nock', nock, false, true), false)(J$.R(811417, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(811433, '/products/BTC-USD/candles', 21, false)), 'reply', false)(J$.T(811449, 200, 22, false), J$.T(811625, [
                                                J$.T(811505, [
                                                    J$.T(811457, 1514273220, 22, false),
                                                    J$.T(811465, 15399.99, 22, false),
                                                    J$.T(811473, 15400, 22, false),
                                                    J$.T(811481, 15399, 22, false),
                                                    J$.T(811489, 15399, 22, false),
                                                    J$.T(811497, 0.369797, 22, false)
                                                ], 10, false),
                                                J$.T(811561, [
                                                    J$.T(811513, 1514273160, 22, false),
                                                    J$.T(811521, 15399.99, 22, false),
                                                    J$.T(811529, 15400, 22, false),
                                                    J$.T(811537, 15400, 22, false),
                                                    J$.T(811545, 15400, 22, false),
                                                    J$.T(811553, 0.673643, 22, false)
                                                ], 10, false),
                                                J$.T(811617, [
                                                    J$.T(811569, 1514273100, 22, false),
                                                    J$.T(811577, 15399.99, 22, false),
                                                    J$.T(811585, 15400, 22, false),
                                                    J$.T(811593, 15400, 22, false),
                                                    J$.T(811601, 15400, 22, false),
                                                    J$.T(811609, 0.849436, 22, false)
                                                ], 10, false)
                                            ], 10, false));
                                            return J$.Rt(811889, J$.M(811881, J$.M(811649, J$.R(811641, 'publicClient', publicClient, false, true), 'getProductHistoricRates', false)(), 'then', false)(J$.T(811873, function (data) {
                                                jalangiLabel51:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(811849, arguments.callee, this, arguments);
                                                            arguments = J$.N(811857, 'arguments', arguments, true, false, false);
                                                            data = J$.N(811865, 'data', data, true, false, false);
                                                            J$.M(811713, J$.R(811657, 'assert', assert, false, true), 'equal', false)(J$.G(811697, J$.G(811681, J$.R(811665, 'data', data, false, false), J$.T(811673, 0, 22, false)), J$.T(811689, 0, 22, false)), J$.T(811705, 1514273220, 22, false));
                                                            J$.M(811777, J$.R(811721, 'assert', assert, false, true), 'equal', false)(J$.G(811761, J$.G(811745, J$.R(811729, 'data', data, false, false), J$.T(811737, 0, 22, false)), J$.T(811753, 1, 22, false)), J$.T(811769, 15399.99, 22, false));
                                                            J$.M(811841, J$.R(811785, 'assert', assert, false, true), 'equal', false)(J$.G(811825, J$.G(811809, J$.R(811793, 'data', data, false, false), J$.T(811801, 2, 22, false)), J$.T(811817, 0, 22, false)), J$.T(811833, 1514273100, 22, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813921, J$e);
                                                        } finally {
                                                            if (J$.Fr(813929))
                                                                continue jalangiLabel51;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(813937, J$e);
                                        } finally {
                                            if (J$.Fr(813945))
                                                continue jalangiLabel52;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(812657, J$.I(typeof test === 'undefined' ? test = J$.R(811929, 'test', undefined, true, true) : test = J$.R(811929, 'test', test, true, true)), false)(J$.T(811937, '.getProduct24HrStats()', 21, false), J$.T(812649, function () {
                                jalangiLabel56:
                                    while (true) {
                                        try {
                                            J$.Fe(812617, arguments.callee, this, arguments);
                                            arguments = J$.N(812625, 'arguments', arguments, true, false, false);
                                            J$.N(812633, 'cbtest', cbtest, false, false, false);
                                            J$.N(812641, 'promisetest', promisetest, false, false, false);
                                            J$.M(812065, J$.M(811993, J$.M(811977, J$.F(811961, J$.R(811945, 'nock', nock, false, true), false)(J$.R(811953, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(811969, '/products/ETH-USD/stats', 21, false)), 'times', false)(J$.T(811985, 2, 22, false)), 'reply', false)(J$.T(812001, 200, 22, false), J$.T(812057, {
                                                open: J$.T(812009, '720', 21, false),
                                                high: J$.T(812017, '770', 21, false),
                                                low: J$.T(812025, '710', 21, false),
                                                volume: J$.T(812033, '110000', 21, false),
                                                last: J$.T(812041, '760', 21, false),
                                                volume_30day: J$.T(812049, '9800000', 21, false)
                                            }, 11, false));
                                            var cbtest = J$.W(812369, 'cbtest', J$.F(812361, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(812073, 'Promise', undefined, true, true) : Promise = J$.R(812073, 'Promise', Promise, true, true)), true)(J$.T(812353, function (resolve, reject) {
                                                jalangiLabel54:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(812321, arguments.callee, this, arguments);
                                                            arguments = J$.N(812329, 'arguments', arguments, true, false, false);
                                                            resolve = J$.N(812337, 'resolve', resolve, true, false, false);
                                                            reject = J$.N(812345, 'reject', reject, true, false, false);
                                                            J$.M(812313, J$.R(812081, 'publicClient', publicClient, false, true), 'getProduct24HrStats', false)(J$.T(812089, 'ETH-USD', 21, false), J$.T(812305, function (err, resp, data) {
                                                                jalangiLabel53:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(812265, arguments.callee, this, arguments);
                                                                            arguments = J$.N(812273, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(812281, 'err', err, true, false, false);
                                                                            resp = J$.N(812289, 'resp', resp, true, false, false);
                                                                            data = J$.N(812297, 'data', data, true, false, false);
                                                                            if (J$.C(50248, J$.R(812097, 'err', err, false, false))) {
                                                                                J$.F(812121, J$.R(812105, 'reject', reject, false, false), false)(J$.R(812113, 'err', err, false, false));
                                                                            }
                                                                            J$.M(812161, J$.R(812129, 'assert', assert, false, true), 'equal', false)(J$.G(812145, J$.R(812137, 'data', data, false, false), 'open'), J$.T(812153, 720, 22, false));
                                                                            J$.M(812201, J$.R(812169, 'assert', assert, false, true), 'equal', false)(J$.G(812185, J$.R(812177, 'data', data, false, false), 'high'), J$.T(812193, 770, 22, false));
                                                                            J$.M(812241, J$.R(812209, 'assert', assert, false, true), 'equal', false)(J$.G(812225, J$.R(812217, 'data', data, false, false), 'volume'), J$.T(812233, 110000, 22, false));
                                                                            J$.F(812257, J$.R(812249, 'resolve', resolve, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(813953, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(813961))
                                                                                continue jalangiLabel53;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813969, J$e);
                                                        } finally {
                                                            if (J$.Fr(813977))
                                                                continue jalangiLabel54;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), cbtest, false, false);
                                            var promisetest = J$.W(812561, 'promisetest', J$.M(812553, J$.M(812393, J$.R(812377, 'publicClient', publicClient, false, true), 'getProduct24HrStats', false)(J$.T(812385, 'ETH-USD', 21, false)), 'then', false)(J$.T(812545, function (data) {
                                                jalangiLabel55:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(812521, arguments.callee, this, arguments);
                                                            arguments = J$.N(812529, 'arguments', arguments, true, false, false);
                                                            data = J$.N(812537, 'data', data, true, false, false);
                                                            J$.M(812433, J$.R(812401, 'assert', assert, false, true), 'equal', false)(J$.G(812417, J$.R(812409, 'data', data, false, false), 'open'), J$.T(812425, 720, 22, false));
                                                            J$.M(812473, J$.R(812441, 'assert', assert, false, true), 'equal', false)(J$.G(812457, J$.R(812449, 'data', data, false, false), 'high'), J$.T(812465, 770, 22, false));
                                                            J$.M(812513, J$.R(812481, 'assert', assert, false, true), 'equal', false)(J$.G(812497, J$.R(812489, 'data', data, false, false), 'volume'), J$.T(812505, 110000, 22, false));
                                                        } catch (J$e) {
                                                            J$.Ex(813985, J$e);
                                                        } finally {
                                                            if (J$.Fr(813993))
                                                                continue jalangiLabel55;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), promisetest, false, false);
                                            return J$.Rt(812609, J$.M(812601, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(812569, 'Promise', undefined, true, true) : Promise = J$.R(812569, 'Promise', Promise, true, true)), 'all', false)(J$.T(812593, [
                                                J$.R(812577, 'cbtest', cbtest, false, false),
                                                J$.R(812585, 'promisetest', promisetest, false, false)
                                            ], 10, false)));
                                        } catch (J$e) {
                                            J$.Ex(814001, J$e);
                                        } finally {
                                            if (J$.Fr(814009))
                                                continue jalangiLabel56;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(813001, J$.I(typeof test === 'undefined' ? test = J$.R(812665, 'test', undefined, true, true) : test = J$.R(812665, 'test', test, true, true)), false)(J$.T(812673, '.getProduct24HrStats() (with deprecated signature implying default product ID)', 21, false), J$.T(812993, function () {
                                jalangiLabel58:
                                    while (true) {
                                        try {
                                            J$.Fe(812977, arguments.callee, this, arguments);
                                            arguments = J$.N(812985, 'arguments', arguments, true, false, false);
                                            J$.M(812785, J$.M(812713, J$.F(812697, J$.R(812681, 'nock', nock, false, true), false)(J$.R(812689, 'EXCHANGE_API_URL', EXCHANGE_API_URL, false, true)), 'get', false)(J$.T(812705, '/products/BTC-USD/stats', 21, false)), 'reply', false)(J$.T(812721, 200, 22, false), J$.T(812777, {
                                                open: J$.T(812729, '14000', 21, false),
                                                high: J$.T(812737, '15700', 21, false),
                                                low: J$.T(812745, '13800', 21, false),
                                                volume: J$.T(812753, '17400', 21, false),
                                                last: J$.T(812761, '15300', 21, false),
                                                volume_30day: J$.T(812769, '1100000', 21, false)
                                            }, 11, false));
                                            return J$.Rt(812969, J$.M(812961, J$.M(812801, J$.R(812793, 'publicClient', publicClient, false, true), 'getProduct24HrStats', false)(), 'then', false)(J$.T(812953, function (data) {
                                                jalangiLabel57:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(812929, arguments.callee, this, arguments);
                                                            arguments = J$.N(812937, 'arguments', arguments, true, false, false);
                                                            data = J$.N(812945, 'data', data, true, false, false);
                                                            J$.M(812841, J$.R(812809, 'assert', assert, false, true), 'equal', false)(J$.G(812825, J$.R(812817, 'data', data, false, false), 'open'), J$.T(812833, 14000, 22, false));
                                                            J$.M(812881, J$.R(812849, 'assert', assert, false, true), 'equal', false)(J$.G(812865, J$.R(812857, 'data', data, false, false), 'high'), J$.T(812873, 15700, 22, false));
                                                            J$.M(812921, J$.R(812889, 'assert', assert, false, true), 'equal', false)(J$.G(812905, J$.R(812897, 'data', data, false, false), 'volume'), J$.T(812913, 17400, 22, false));
                                                        } catch (J$e) {
                                                            J$.Ex(814017, J$e);
                                                        } finally {
                                                            if (J$.Fr(814025))
                                                                continue jalangiLabel57;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(814033, J$e);
                                        } finally {
                                            if (J$.Fr(814041))
                                                continue jalangiLabel58;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(814049, J$e);
                        } finally {
                            if (J$.Fr(814057))
                                continue jalangiLabel59;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(814065, J$e);
        } finally {
            if (J$.Sr(814073))
                continue jalangiLabel60;
            else
                break jalangiLabel60;
        }
    }
// JALANGI DO NOT INSTRUMENT

