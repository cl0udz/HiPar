J$.noInstrEval = false;
jalangiLabel18:
    while (true) {
        try {
            J$.Se(1013681, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/json-schema-traverse/spec/index.spec.js');
            J$.N(1013689, 'traverse', traverse, false, false, false);
            J$.N(1013697, 'assert', assert, false, false, false);
            J$.T(1009433, 'use strict', 21, false);
            J$.F(1009457, J$.I(typeof require === 'undefined' ? require = J$.R(1009441, 'require', undefined, true, true) : require = J$.R(1009441, 'require', require, true, true)), false)(J$.T(1009449, 'core-js/modules/es.array.concat', 21, false));
            J$.F(1009481, J$.I(typeof require === 'undefined' ? require = J$.R(1009465, 'require', undefined, true, true) : require = J$.R(1009465, 'require', require, true, true)), false)(J$.T(1009473, 'core-js/modules/es.array.slice', 21, false));
            J$.F(1009505, J$.I(typeof require === 'undefined' ? require = J$.R(1009489, 'require', undefined, true, true) : require = J$.R(1009489, 'require', require, true, true)), false)(J$.T(1009497, 'core-js/modules/es.function.name', 21, false));
            var traverse = J$.W(1009537, 'traverse', J$.F(1009529, J$.I(typeof require === 'undefined' ? require = J$.R(1009513, 'require', undefined, true, true) : require = J$.R(1009513, 'require', require, true, true)), false)(J$.T(1009521, '../index', 21, false)), traverse, false, true);
            var assert = J$.W(1009569, 'assert', J$.F(1009561, J$.I(typeof require === 'undefined' ? require = J$.R(1009545, 'require', undefined, true, true) : require = J$.R(1009545, 'require', require, true, true)), false)(J$.T(1009553, 'assert', 21, false)), assert, false, true);
            J$.F(1013673, J$.I(typeof describe === 'undefined' ? describe = J$.R(1009577, 'describe', undefined, true, true) : describe = J$.R(1009577, 'describe', describe, true, true)), false)(J$.T(1009585, 'json-schema-traverse', 21, false), J$.T(1013665, function () {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(1013593, arguments.callee, this, arguments);
                            function callback() {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(1013385, arguments.callee, this, arguments);
                                            arguments = J$.N(1013393, 'arguments', arguments, true, false, false);
                                            J$.M(1013377, J$.R(1013329, 'calls', calls, false, false), 'push', false)(J$.M(1013369, J$.G(1013353, J$.G(1013345, J$.I(typeof Array === 'undefined' ? Array = J$.R(1013337, 'Array', undefined, true, true) : Array = J$.R(1013337, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1013361, 'arguments', undefined, true, true) : arguments = J$.R(1013361, 'arguments', arguments, true, true))));
                                        } catch (J$e) {
                                            J$.Ex(1013929, J$e);
                                        } finally {
                                            if (J$.Fr(1013937))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function pre() {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(1013481, arguments.callee, this, arguments);
                                            arguments = J$.N(1013489, 'arguments', arguments, true, false, false);
                                            J$.M(1013473, J$.R(1013401, 'calls', calls, false, false), 'push', false)(J$.M(1013465, J$.T(1013417, [J$.T(1013409, 'pre', 21, false)], 10, false), 'concat', false)(J$.M(1013457, J$.G(1013441, J$.G(1013433, J$.I(typeof Array === 'undefined' ? Array = J$.R(1013425, 'Array', undefined, true, true) : Array = J$.R(1013425, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1013449, 'arguments', undefined, true, true) : arguments = J$.R(1013449, 'arguments', arguments, true, true)))));
                                        } catch (J$e) {
                                            J$.Ex(1013945, J$e);
                                        } finally {
                                            if (J$.Fr(1013953))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function post() {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(1013577, arguments.callee, this, arguments);
                                            arguments = J$.N(1013585, 'arguments', arguments, true, false, false);
                                            J$.M(1013569, J$.R(1013497, 'calls', calls, false, false), 'push', false)(J$.M(1013561, J$.T(1013513, [J$.T(1013505, 'post', 21, false)], 10, false), 'concat', false)(J$.M(1013553, J$.G(1013537, J$.G(1013529, J$.I(typeof Array === 'undefined' ? Array = J$.R(1013521, 'Array', undefined, true, true) : Array = J$.R(1013521, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1013545, 'arguments', undefined, true, true) : arguments = J$.R(1013545, 'arguments', arguments, true, true)))));
                                        } catch (J$e) {
                                            J$.Ex(1013961, J$e);
                                        } finally {
                                            if (J$.Fr(1013969))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1013601, 'arguments', arguments, true, false, false);
                            J$.N(1013609, 'calls', calls, false, false, false);
                            callback = J$.N(1013625, 'callback', J$.T(1013617, callback, 12, false), true, false, false);
                            pre = J$.N(1013641, 'pre', J$.T(1013633, pre, 12, false), true, false, false);
                            post = J$.N(1013657, 'post', J$.T(1013649, post, 12, false), true, false, false);
                            var calls;
                            J$.F(1009641, J$.I(typeof beforeEach === 'undefined' ? beforeEach = J$.R(1009593, 'beforeEach', undefined, true, true) : beforeEach = J$.R(1009593, 'beforeEach', beforeEach, true, true)), false)(J$.T(1009633, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(1009617, arguments.callee, this, arguments);
                                            arguments = J$.N(1009625, 'arguments', arguments, true, false, false);
                                            calls = J$.W(1009609, 'calls', J$.T(1009601, [], 10, false), calls, false, false);
                                        } catch (J$e) {
                                            J$.Ex(1013705, J$e);
                                        } finally {
                                            if (J$.Fr(1013713))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(1009857, J$.I(typeof it === 'undefined' ? it = J$.R(1009649, 'it', undefined, true, true) : it = J$.R(1009649, 'it', it, true, true)), false)(J$.T(1009657, 'should traverse all keywords containing schemas recursively', 21, false), J$.T(1009849, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(1009817, arguments.callee, this, arguments);
                                            arguments = J$.N(1009825, 'arguments', arguments, true, false, false);
                                            J$.N(1009833, 'schema', schema, false, false, false);
                                            J$.N(1009841, 'expectedCalls', expectedCalls, false, false, false);
                                            var schema = J$.W(1009697, 'schema', J$.G(1009689, J$.F(1009681, J$.I(typeof require === 'undefined' ? require = J$.R(1009665, 'require', undefined, true, true) : require = J$.R(1009665, 'require', require, true, true)), false)(J$.T(1009673, './fixtures/schema', 21, false)), 'schema'), schema, false, false);
                                            var expectedCalls = J$.W(1009737, 'expectedCalls', J$.G(1009729, J$.F(1009721, J$.I(typeof require === 'undefined' ? require = J$.R(1009705, 'require', undefined, true, true) : require = J$.R(1009705, 'require', require, true, true)), false)(J$.T(1009713, './fixtures/schema', 21, false)), 'expectedCalls'), expectedCalls, false, false);
                                            J$.F(1009777, J$.R(1009745, 'traverse', traverse, false, true), false)(J$.R(1009753, 'schema', schema, false, false), J$.T(1009769, { cb: J$.R(1009761, 'callback', callback, false, false) }, 11, false));
                                            J$.M(1009809, J$.R(1009785, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1009793, 'calls', calls, false, false), J$.R(1009801, 'expectedCalls', expectedCalls, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1013721, J$e);
                                        } finally {
                                            if (J$.Fr(1013729))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(1010329, J$.I(typeof describe === 'undefined' ? describe = J$.R(1009865, 'describe', undefined, true, true) : describe = J$.R(1009865, 'describe', describe, true, true)), false)(J$.T(1009873, 'Legacy v0.3.1 API', 21, false), J$.T(1010321, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(1010305, arguments.callee, this, arguments);
                                            arguments = J$.N(1010313, 'arguments', arguments, true, false, false);
                                            J$.F(1010081, J$.I(typeof it === 'undefined' ? it = J$.R(1009881, 'it', undefined, true, true) : it = J$.R(1009881, 'it', it, true, true)), false)(J$.T(1009889, 'should traverse all keywords containing schemas recursively', 21, false), J$.T(1010073, function () {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1010041, arguments.callee, this, arguments);
                                                            arguments = J$.N(1010049, 'arguments', arguments, true, false, false);
                                                            J$.N(1010057, 'schema', schema, false, false, false);
                                                            J$.N(1010065, 'expectedCalls', expectedCalls, false, false, false);
                                                            var schema = J$.W(1009929, 'schema', J$.G(1009921, J$.F(1009913, J$.I(typeof require === 'undefined' ? require = J$.R(1009897, 'require', undefined, true, true) : require = J$.R(1009897, 'require', require, true, true)), false)(J$.T(1009905, './fixtures/schema', 21, false)), 'schema'), schema, false, false);
                                                            var expectedCalls = J$.W(1009969, 'expectedCalls', J$.G(1009961, J$.F(1009953, J$.I(typeof require === 'undefined' ? require = J$.R(1009937, 'require', undefined, true, true) : require = J$.R(1009937, 'require', require, true, true)), false)(J$.T(1009945, './fixtures/schema', 21, false)), 'expectedCalls'), expectedCalls, false, false);
                                                            J$.F(1010001, J$.R(1009977, 'traverse', traverse, false, true), false)(J$.R(1009985, 'schema', schema, false, false), J$.R(1009993, 'callback', callback, false, false));
                                                            J$.M(1010033, J$.R(1010009, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1010017, 'calls', calls, false, false), J$.R(1010025, 'expectedCalls', expectedCalls, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1013737, J$e);
                                                        } finally {
                                                            if (J$.Fr(1013745))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1010297, J$.I(typeof it === 'undefined' ? it = J$.R(1010089, 'it', undefined, true, true) : it = J$.R(1010089, 'it', it, true, true)), false)(J$.T(1010097, 'should work when an options object is provided', 21, false), J$.T(1010289, function () {
                                                jalangiLabel3:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1010257, arguments.callee, this, arguments);
                                                            arguments = J$.N(1010265, 'arguments', arguments, true, false, false);
                                                            J$.N(1010273, 'schema', schema, false, false, false);
                                                            J$.N(1010281, 'expectedCalls', expectedCalls, false, false, false);
                                                            var schema = J$.W(1010137, 'schema', J$.G(1010129, J$.F(1010121, J$.I(typeof require === 'undefined' ? require = J$.R(1010105, 'require', undefined, true, true) : require = J$.R(1010105, 'require', require, true, true)), false)(J$.T(1010113, './fixtures/schema', 21, false)), 'schema'), schema, false, false);
                                                            var expectedCalls = J$.W(1010177, 'expectedCalls', J$.G(1010169, J$.F(1010161, J$.I(typeof require === 'undefined' ? require = J$.R(1010145, 'require', undefined, true, true) : require = J$.R(1010145, 'require', require, true, true)), false)(J$.T(1010153, './fixtures/schema', 21, false)), 'expectedCalls'), expectedCalls, false, false);
                                                            J$.F(1010217, J$.R(1010185, 'traverse', traverse, false, true), false)(J$.R(1010193, 'schema', schema, false, false), J$.T(1010201, {}, 11, false), J$.R(1010209, 'callback', callback, false, false));
                                                            J$.M(1010249, J$.R(1010225, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1010233, 'calls', calls, false, false), J$.R(1010241, 'expectedCalls', expectedCalls, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1013753, J$e);
                                                        } finally {
                                                            if (J$.Fr(1013761))
                                                                continue jalangiLabel3;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1013769, J$e);
                                        } finally {
                                            if (J$.Fr(1013777))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(1011745, J$.I(typeof describe === 'undefined' ? describe = J$.R(1010337, 'describe', undefined, true, true) : describe = J$.R(1010337, 'describe', describe, true, true)), false)(J$.T(1010345, 'allKeys option', 21, false), J$.T(1011737, function () {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(1011713, arguments.callee, this, arguments);
                                            arguments = J$.N(1011721, 'arguments', arguments, true, false, false);
                                            J$.N(1011729, 'schema', schema, false, false, false);
                                            var schema = J$.W(1010385, 'schema', J$.T(1010377, {
                                                someObject: J$.T(1010369, {
                                                    minimum: J$.T(1010353, 1, 22, false),
                                                    maximum: J$.T(1010361, 2, 22, false)
                                                }, 11, false)
                                            }, 11, false), schema, false, false);
                                            J$.F(1010673, J$.I(typeof it === 'undefined' ? it = J$.R(1010393, 'it', undefined, true, true) : it = J$.R(1010393, 'it', it, true, true)), false)(J$.T(1010401, 'should traverse objects with allKeys: true option', 21, false), J$.T(1010665, function () {
                                                jalangiLabel5:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1010641, arguments.callee, this, arguments);
                                                            arguments = J$.N(1010649, 'arguments', arguments, true, false, false);
                                                            J$.N(1010657, 'expectedCalls', expectedCalls, false, false, false);
                                                            var expectedCalls = J$.W(1010553, 'expectedCalls', J$.T(1010545, [
                                                                J$.T(1010465, [
                                                                    J$.R(1010409, 'schema', schema, false, false),
                                                                    J$.T(1010417, '', 21, false),
                                                                    J$.R(1010425, 'schema', schema, false, false),
                                                                    J$.T(1010433, undefined, 24, false),
                                                                    J$.T(1010441, undefined, 24, false),
                                                                    J$.T(1010449, undefined, 24, false),
                                                                    J$.T(1010457, undefined, 24, false)
                                                                ], 10, false),
                                                                J$.T(1010537, [
                                                                    J$.G(1010481, J$.R(1010473, 'schema', schema, false, false), 'someObject'),
                                                                    J$.T(1010489, '/someObject', 21, false),
                                                                    J$.R(1010497, 'schema', schema, false, false),
                                                                    J$.T(1010505, '', 21, false),
                                                                    J$.T(1010513, 'someObject', 21, false),
                                                                    J$.R(1010521, 'schema', schema, false, false),
                                                                    J$.T(1010529, undefined, 24, false)
                                                                ], 10, false)
                                                            ], 10, false), expectedCalls, false, false);
                                                            J$.F(1010601, J$.R(1010561, 'traverse', traverse, false, true), false)(J$.R(1010569, 'schema', schema, false, false), J$.T(1010593, {
                                                                allKeys: J$.T(1010577, true, 23, false),
                                                                cb: J$.R(1010585, 'callback', callback, false, false)
                                                            }, 11, false));
                                                            J$.M(1010633, J$.R(1010609, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1010617, 'calls', calls, false, false), J$.R(1010625, 'expectedCalls', expectedCalls, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1013785, J$e);
                                                        } finally {
                                                            if (J$.Fr(1013793))
                                                                continue jalangiLabel5;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1010889, J$.I(typeof it === 'undefined' ? it = J$.R(1010681, 'it', undefined, true, true) : it = J$.R(1010681, 'it', it, true, true)), false)(J$.T(1010689, 'should NOT traverse objects with allKeys: false option', 21, false), J$.T(1010881, function () {
                                                jalangiLabel6:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1010857, arguments.callee, this, arguments);
                                                            arguments = J$.N(1010865, 'arguments', arguments, true, false, false);
                                                            J$.N(1010873, 'expectedCalls', expectedCalls, false, false, false);
                                                            var expectedCalls = J$.W(1010769, 'expectedCalls', J$.T(1010761, [J$.T(1010753, [
                                                                    J$.R(1010697, 'schema', schema, false, false),
                                                                    J$.T(1010705, '', 21, false),
                                                                    J$.R(1010713, 'schema', schema, false, false),
                                                                    J$.T(1010721, undefined, 24, false),
                                                                    J$.T(1010729, undefined, 24, false),
                                                                    J$.T(1010737, undefined, 24, false),
                                                                    J$.T(1010745, undefined, 24, false)
                                                                ], 10, false)], 10, false), expectedCalls, false, false);
                                                            J$.F(1010817, J$.R(1010777, 'traverse', traverse, false, true), false)(J$.R(1010785, 'schema', schema, false, false), J$.T(1010809, {
                                                                allKeys: J$.T(1010793, false, 23, false),
                                                                cb: J$.R(1010801, 'callback', callback, false, false)
                                                            }, 11, false));
                                                            J$.M(1010849, J$.R(1010825, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1010833, 'calls', calls, false, false), J$.R(1010841, 'expectedCalls', expectedCalls, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1013801, J$e);
                                                        } finally {
                                                            if (J$.Fr(1013809))
                                                                continue jalangiLabel6;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1011097, J$.I(typeof it === 'undefined' ? it = J$.R(1010897, 'it', undefined, true, true) : it = J$.R(1010897, 'it', it, true, true)), false)(J$.T(1010905, 'should NOT traverse objects without allKeys option', 21, false), J$.T(1011089, function () {
                                                jalangiLabel7:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1011065, arguments.callee, this, arguments);
                                                            arguments = J$.N(1011073, 'arguments', arguments, true, false, false);
                                                            J$.N(1011081, 'expectedCalls', expectedCalls, false, false, false);
                                                            var expectedCalls = J$.W(1010985, 'expectedCalls', J$.T(1010977, [J$.T(1010969, [
                                                                    J$.R(1010913, 'schema', schema, false, false),
                                                                    J$.T(1010921, '', 21, false),
                                                                    J$.R(1010929, 'schema', schema, false, false),
                                                                    J$.T(1010937, undefined, 24, false),
                                                                    J$.T(1010945, undefined, 24, false),
                                                                    J$.T(1010953, undefined, 24, false),
                                                                    J$.T(1010961, undefined, 24, false)
                                                                ], 10, false)], 10, false), expectedCalls, false, false);
                                                            J$.F(1011025, J$.R(1010993, 'traverse', traverse, false, true), false)(J$.R(1011001, 'schema', schema, false, false), J$.T(1011017, { cb: J$.R(1011009, 'callback', callback, false, false) }, 11, false));
                                                            J$.M(1011057, J$.R(1011033, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1011041, 'calls', calls, false, false), J$.R(1011049, 'expectedCalls', expectedCalls, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1013817, J$e);
                                                        } finally {
                                                            if (J$.Fr(1013825))
                                                                continue jalangiLabel7;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1011705, J$.I(typeof it === 'undefined' ? it = J$.R(1011105, 'it', undefined, true, true) : it = J$.R(1011105, 'it', it, true, true)), false)(J$.T(1011113, 'should NOT travers objects in standard keywords which value is not a schema', 21, false), J$.T(1011697, function () {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1011665, arguments.callee, this, arguments);
                                                            arguments = J$.N(1011673, 'arguments', arguments, true, false, false);
                                                            J$.N(1011681, 'schema2', schema2, false, false, false);
                                                            J$.N(1011689, 'expectedCalls', expectedCalls, false, false, false);
                                                            var schema2 = J$.W(1011265, 'schema2', J$.T(1011257, {
                                                                'const': J$.T(1011129, { foo: J$.T(1011121, 'bar', 21, false) }, 11, false),
                                                                'enum': J$.T(1011153, [
                                                                    J$.T(1011137, 'a', 21, false),
                                                                    J$.T(1011145, 'b', 21, false)
                                                                ], 10, false),
                                                                required: J$.T(1011169, [J$.T(1011161, 'foo', 21, false)], 10, false),
                                                                another: J$.T(1011177, {}, 11, false),
                                                                patternProperties: J$.T(1011185, {}, 11, false),
                                                                dependencies: J$.T(1011193, true, 23, false),
                                                                properties: J$.T(1011249, {
                                                                    smaller: J$.T(1011209, { type: J$.T(1011201, 'number', 21, false) }, 11, false),
                                                                    larger: J$.T(1011241, {
                                                                        type: J$.T(1011217, 'number', 21, false),
                                                                        minimum: J$.T(1011233, { $data: J$.T(1011225, '1/smaller', 21, false) }, 11, false)
                                                                    }, 11, false)
                                                                }, 11, false)
                                                            }, 11, false), schema2, false, false);
                                                            var expectedCalls = J$.W(1011577, 'expectedCalls', J$.T(1011569, [
                                                                J$.T(1011329, [
                                                                    J$.R(1011273, 'schema2', schema2, false, false),
                                                                    J$.T(1011281, '', 21, false),
                                                                    J$.R(1011289, 'schema2', schema2, false, false),
                                                                    J$.T(1011297, undefined, 24, false),
                                                                    J$.T(1011305, undefined, 24, false),
                                                                    J$.T(1011313, undefined, 24, false),
                                                                    J$.T(1011321, undefined, 24, false)
                                                                ], 10, false),
                                                                J$.T(1011401, [
                                                                    J$.G(1011345, J$.R(1011337, 'schema2', schema2, false, false), 'another'),
                                                                    J$.T(1011353, '/another', 21, false),
                                                                    J$.R(1011361, 'schema2', schema2, false, false),
                                                                    J$.T(1011369, '', 21, false),
                                                                    J$.T(1011377, 'another', 21, false),
                                                                    J$.R(1011385, 'schema2', schema2, false, false),
                                                                    J$.T(1011393, undefined, 24, false)
                                                                ], 10, false),
                                                                J$.T(1011481, [
                                                                    J$.G(1011425, J$.G(1011417, J$.R(1011409, 'schema2', schema2, false, false), 'properties'), 'smaller'),
                                                                    J$.T(1011433, '/properties/smaller', 21, false),
                                                                    J$.R(1011441, 'schema2', schema2, false, false),
                                                                    J$.T(1011449, '', 21, false),
                                                                    J$.T(1011457, 'properties', 21, false),
                                                                    J$.R(1011465, 'schema2', schema2, false, false),
                                                                    J$.T(1011473, 'smaller', 21, false)
                                                                ], 10, false),
                                                                J$.T(1011561, [
                                                                    J$.G(1011505, J$.G(1011497, J$.R(1011489, 'schema2', schema2, false, false), 'properties'), 'larger'),
                                                                    J$.T(1011513, '/properties/larger', 21, false),
                                                                    J$.R(1011521, 'schema2', schema2, false, false),
                                                                    J$.T(1011529, '', 21, false),
                                                                    J$.T(1011537, 'properties', 21, false),
                                                                    J$.R(1011545, 'schema2', schema2, false, false),
                                                                    J$.T(1011553, 'larger', 21, false)
                                                                ], 10, false)
                                                            ], 10, false), expectedCalls, false, false);
                                                            J$.F(1011625, J$.R(1011585, 'traverse', traverse, false, true), false)(J$.R(1011593, 'schema2', schema2, false, false), J$.T(1011617, {
                                                                allKeys: J$.T(1011601, true, 23, false),
                                                                cb: J$.R(1011609, 'callback', callback, false, false)
                                                            }, 11, false));
                                                            J$.M(1011657, J$.R(1011633, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1011641, 'calls', calls, false, false), J$.R(1011649, 'expectedCalls', expectedCalls, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1013833, J$e);
                                                        } finally {
                                                            if (J$.Fr(1013841))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1013849, J$e);
                                        } finally {
                                            if (J$.Fr(1013857))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(1013321, J$.I(typeof describe === 'undefined' ? describe = J$.R(1011753, 'describe', undefined, true, true) : describe = J$.R(1011753, 'describe', describe, true, true)), false)(J$.T(1011761, 'pre and post', 21, false), J$.T(1013313, function () {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(1013289, arguments.callee, this, arguments);
                                            arguments = J$.N(1013297, 'arguments', arguments, true, false, false);
                                            J$.N(1013305, 'schema', schema, false, false, false);
                                            var schema = J$.W(1011825, 'schema', J$.T(1011817, {
                                                type: J$.T(1011769, 'object', 21, false),
                                                properties: J$.T(1011809, {
                                                    name: J$.T(1011785, { type: J$.T(1011777, 'string', 21, false) }, 11, false),
                                                    age: J$.T(1011801, { type: J$.T(1011793, 'number', 21, false) }, 11, false)
                                                }, 11, false)
                                            }, 11, false), schema, false, false);
                                            J$.F(1012225, J$.I(typeof it === 'undefined' ? it = J$.R(1011833, 'it', undefined, true, true) : it = J$.R(1011833, 'it', it, true, true)), false)(J$.T(1011841, 'should traverse schema in pre-order', 21, false), J$.T(1012217, function () {
                                                jalangiLabel10:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1012193, arguments.callee, this, arguments);
                                                            arguments = J$.N(1012201, 'arguments', arguments, true, false, false);
                                                            J$.N(1012209, 'expectedCalls', expectedCalls, false, false, false);
                                                            J$.F(1011889, J$.R(1011849, 'traverse', traverse, false, true), false)(J$.R(1011857, 'schema', schema, false, false), J$.T(1011881, { cb: J$.T(1011873, { pre: J$.R(1011865, 'pre', pre, false, false) }, 11, false) }, 11, false));
                                                            var expectedCalls = J$.W(1012153, 'expectedCalls', J$.T(1012145, [
                                                                J$.T(1011961, [
                                                                    J$.T(1011897, 'pre', 21, false),
                                                                    J$.R(1011905, 'schema', schema, false, false),
                                                                    J$.T(1011913, '', 21, false),
                                                                    J$.R(1011921, 'schema', schema, false, false),
                                                                    J$.T(1011929, undefined, 24, false),
                                                                    J$.T(1011937, undefined, 24, false),
                                                                    J$.T(1011945, undefined, 24, false),
                                                                    J$.T(1011953, undefined, 24, false)
                                                                ], 10, false),
                                                                J$.T(1012049, [
                                                                    J$.T(1011969, 'pre', 21, false),
                                                                    J$.G(1011993, J$.G(1011985, J$.R(1011977, 'schema', schema, false, false), 'properties'), 'name'),
                                                                    J$.T(1012001, '/properties/name', 21, false),
                                                                    J$.R(1012009, 'schema', schema, false, false),
                                                                    J$.T(1012017, '', 21, false),
                                                                    J$.T(1012025, 'properties', 21, false),
                                                                    J$.R(1012033, 'schema', schema, false, false),
                                                                    J$.T(1012041, 'name', 21, false)
                                                                ], 10, false),
                                                                J$.T(1012137, [
                                                                    J$.T(1012057, 'pre', 21, false),
                                                                    J$.G(1012081, J$.G(1012073, J$.R(1012065, 'schema', schema, false, false), 'properties'), 'age'),
                                                                    J$.T(1012089, '/properties/age', 21, false),
                                                                    J$.R(1012097, 'schema', schema, false, false),
                                                                    J$.T(1012105, '', 21, false),
                                                                    J$.T(1012113, 'properties', 21, false),
                                                                    J$.R(1012121, 'schema', schema, false, false),
                                                                    J$.T(1012129, 'age', 21, false)
                                                                ], 10, false)
                                                            ], 10, false), expectedCalls, false, false);
                                                            J$.M(1012185, J$.R(1012161, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1012169, 'calls', calls, false, false), J$.R(1012177, 'expectedCalls', expectedCalls, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1013865, J$e);
                                                        } finally {
                                                            if (J$.Fr(1013873))
                                                                continue jalangiLabel10;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1012625, J$.I(typeof it === 'undefined' ? it = J$.R(1012233, 'it', undefined, true, true) : it = J$.R(1012233, 'it', it, true, true)), false)(J$.T(1012241, 'should traverse schema in post-order', 21, false), J$.T(1012617, function () {
                                                jalangiLabel11:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1012593, arguments.callee, this, arguments);
                                                            arguments = J$.N(1012601, 'arguments', arguments, true, false, false);
                                                            J$.N(1012609, 'expectedCalls', expectedCalls, false, false, false);
                                                            J$.F(1012289, J$.R(1012249, 'traverse', traverse, false, true), false)(J$.R(1012257, 'schema', schema, false, false), J$.T(1012281, { cb: J$.T(1012273, { post: J$.R(1012265, 'post', post, false, false) }, 11, false) }, 11, false));
                                                            var expectedCalls = J$.W(1012553, 'expectedCalls', J$.T(1012545, [
                                                                J$.T(1012377, [
                                                                    J$.T(1012297, 'post', 21, false),
                                                                    J$.G(1012321, J$.G(1012313, J$.R(1012305, 'schema', schema, false, false), 'properties'), 'name'),
                                                                    J$.T(1012329, '/properties/name', 21, false),
                                                                    J$.R(1012337, 'schema', schema, false, false),
                                                                    J$.T(1012345, '', 21, false),
                                                                    J$.T(1012353, 'properties', 21, false),
                                                                    J$.R(1012361, 'schema', schema, false, false),
                                                                    J$.T(1012369, 'name', 21, false)
                                                                ], 10, false),
                                                                J$.T(1012465, [
                                                                    J$.T(1012385, 'post', 21, false),
                                                                    J$.G(1012409, J$.G(1012401, J$.R(1012393, 'schema', schema, false, false), 'properties'), 'age'),
                                                                    J$.T(1012417, '/properties/age', 21, false),
                                                                    J$.R(1012425, 'schema', schema, false, false),
                                                                    J$.T(1012433, '', 21, false),
                                                                    J$.T(1012441, 'properties', 21, false),
                                                                    J$.R(1012449, 'schema', schema, false, false),
                                                                    J$.T(1012457, 'age', 21, false)
                                                                ], 10, false),
                                                                J$.T(1012537, [
                                                                    J$.T(1012473, 'post', 21, false),
                                                                    J$.R(1012481, 'schema', schema, false, false),
                                                                    J$.T(1012489, '', 21, false),
                                                                    J$.R(1012497, 'schema', schema, false, false),
                                                                    J$.T(1012505, undefined, 24, false),
                                                                    J$.T(1012513, undefined, 24, false),
                                                                    J$.T(1012521, undefined, 24, false),
                                                                    J$.T(1012529, undefined, 24, false)
                                                                ], 10, false)
                                                            ], 10, false), expectedCalls, false, false);
                                                            J$.M(1012585, J$.R(1012561, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1012569, 'calls', calls, false, false), J$.R(1012577, 'expectedCalls', expectedCalls, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1013881, J$e);
                                                        } finally {
                                                            if (J$.Fr(1013889))
                                                                continue jalangiLabel11;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1013281, J$.I(typeof it === 'undefined' ? it = J$.R(1012633, 'it', undefined, true, true) : it = J$.R(1012633, 'it', it, true, true)), false)(J$.T(1012641, 'should traverse schema in pre- and post-order at the same time', 21, false), J$.T(1013273, function () {
                                                jalangiLabel12:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1013249, arguments.callee, this, arguments);
                                                            arguments = J$.N(1013257, 'arguments', arguments, true, false, false);
                                                            J$.N(1013265, 'expectedCalls', expectedCalls, false, false, false);
                                                            J$.F(1012697, J$.R(1012649, 'traverse', traverse, false, true), false)(J$.R(1012657, 'schema', schema, false, false), J$.T(1012689, {
                                                                cb: J$.T(1012681, {
                                                                    pre: J$.R(1012665, 'pre', pre, false, false),
                                                                    post: J$.R(1012673, 'post', post, false, false)
                                                                }, 11, false)
                                                            }, 11, false));
                                                            var expectedCalls = J$.W(1013209, 'expectedCalls', J$.T(1013201, [
                                                                J$.T(1012769, [
                                                                    J$.T(1012705, 'pre', 21, false),
                                                                    J$.R(1012713, 'schema', schema, false, false),
                                                                    J$.T(1012721, '', 21, false),
                                                                    J$.R(1012729, 'schema', schema, false, false),
                                                                    J$.T(1012737, undefined, 24, false),
                                                                    J$.T(1012745, undefined, 24, false),
                                                                    J$.T(1012753, undefined, 24, false),
                                                                    J$.T(1012761, undefined, 24, false)
                                                                ], 10, false),
                                                                J$.T(1012857, [
                                                                    J$.T(1012777, 'pre', 21, false),
                                                                    J$.G(1012801, J$.G(1012793, J$.R(1012785, 'schema', schema, false, false), 'properties'), 'name'),
                                                                    J$.T(1012809, '/properties/name', 21, false),
                                                                    J$.R(1012817, 'schema', schema, false, false),
                                                                    J$.T(1012825, '', 21, false),
                                                                    J$.T(1012833, 'properties', 21, false),
                                                                    J$.R(1012841, 'schema', schema, false, false),
                                                                    J$.T(1012849, 'name', 21, false)
                                                                ], 10, false),
                                                                J$.T(1012945, [
                                                                    J$.T(1012865, 'post', 21, false),
                                                                    J$.G(1012889, J$.G(1012881, J$.R(1012873, 'schema', schema, false, false), 'properties'), 'name'),
                                                                    J$.T(1012897, '/properties/name', 21, false),
                                                                    J$.R(1012905, 'schema', schema, false, false),
                                                                    J$.T(1012913, '', 21, false),
                                                                    J$.T(1012921, 'properties', 21, false),
                                                                    J$.R(1012929, 'schema', schema, false, false),
                                                                    J$.T(1012937, 'name', 21, false)
                                                                ], 10, false),
                                                                J$.T(1013033, [
                                                                    J$.T(1012953, 'pre', 21, false),
                                                                    J$.G(1012977, J$.G(1012969, J$.R(1012961, 'schema', schema, false, false), 'properties'), 'age'),
                                                                    J$.T(1012985, '/properties/age', 21, false),
                                                                    J$.R(1012993, 'schema', schema, false, false),
                                                                    J$.T(1013001, '', 21, false),
                                                                    J$.T(1013009, 'properties', 21, false),
                                                                    J$.R(1013017, 'schema', schema, false, false),
                                                                    J$.T(1013025, 'age', 21, false)
                                                                ], 10, false),
                                                                J$.T(1013121, [
                                                                    J$.T(1013041, 'post', 21, false),
                                                                    J$.G(1013065, J$.G(1013057, J$.R(1013049, 'schema', schema, false, false), 'properties'), 'age'),
                                                                    J$.T(1013073, '/properties/age', 21, false),
                                                                    J$.R(1013081, 'schema', schema, false, false),
                                                                    J$.T(1013089, '', 21, false),
                                                                    J$.T(1013097, 'properties', 21, false),
                                                                    J$.R(1013105, 'schema', schema, false, false),
                                                                    J$.T(1013113, 'age', 21, false)
                                                                ], 10, false),
                                                                J$.T(1013193, [
                                                                    J$.T(1013129, 'post', 21, false),
                                                                    J$.R(1013137, 'schema', schema, false, false),
                                                                    J$.T(1013145, '', 21, false),
                                                                    J$.R(1013153, 'schema', schema, false, false),
                                                                    J$.T(1013161, undefined, 24, false),
                                                                    J$.T(1013169, undefined, 24, false),
                                                                    J$.T(1013177, undefined, 24, false),
                                                                    J$.T(1013185, undefined, 24, false)
                                                                ], 10, false)
                                                            ], 10, false), expectedCalls, false, false);
                                                            J$.M(1013241, J$.R(1013217, 'assert', assert, false, true), 'deepStrictEqual', false)(J$.R(1013225, 'calls', calls, false, false), J$.R(1013233, 'expectedCalls', expectedCalls, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1013897, J$e);
                                                        } finally {
                                                            if (J$.Fr(1013905))
                                                                continue jalangiLabel12;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1013913, J$e);
                                        } finally {
                                            if (J$.Fr(1013921))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1013977, J$e);
                        } finally {
                            if (J$.Fr(1013985))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1013993, J$e);
        } finally {
            if (J$.Sr(1014001))
                continue jalangiLabel18;
            else
                break jalangiLabel18;
        }
    }
// JALANGI DO NOT INSTRUMENT

