J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(1003257, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/json-schema-traverse/index.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1001385, arguments.callee, this, arguments);
                            arguments = J$.N(1001393, 'arguments', arguments, true, false, false);
                            obj = J$.N(1001401, 'obj', obj, true, false, false);
                            if (J$.C(59640, J$.C(59600, J$.B(158034, '===', J$.U(158026, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1001121, 'Symbol', undefined, true, true) : Symbol = J$.R(1001121, 'Symbol', Symbol, true, true))), J$.T(1001129, 'function', 21, false))) ? J$.B(158050, '===', J$.U(158042, 'typeof', J$.G(1001145, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1001137, 'Symbol', undefined, true, true) : Symbol = J$.R(1001137, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(1001153, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(1001209, '_typeof', J$.T(1001201, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(1001177, arguments.callee, this, arguments);
                                                arguments = J$.N(1001185, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1001193, 'obj', obj, true, false, false);
                                                return J$.Rt(1001169, J$.U(158058, 'typeof', J$.R(1001161, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1003321, J$e);
                                            } finally {
                                                if (J$.Fr(1003329))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(1001345, '_typeof', J$.T(1001337, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1001313, arguments.callee, this, arguments);
                                                arguments = J$.N(1001321, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1001329, 'obj', obj, true, false, false);
                                                return J$.Rt(1001305, J$.C(59632, J$.C(59624, J$.C(59616, J$.C(59608, J$.R(1001217, 'obj', obj, false, false)) ? J$.B(158074, '===', J$.U(158066, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1001225, 'Symbol', undefined, true, true) : Symbol = J$.R(1001225, 'Symbol', Symbol, true, true))), J$.T(1001233, 'function', 21, false)) : J$._()) ? J$.B(158082, '===', J$.G(1001249, J$.R(1001241, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1001257, 'Symbol', undefined, true, true) : Symbol = J$.R(1001257, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(158090, '!==', J$.R(1001265, 'obj', obj, false, false), J$.G(1001281, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1001273, 'Symbol', undefined, true, true) : Symbol = J$.R(1001273, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(1001289, 'symbol', 21, false) : J$.U(158098, 'typeof', J$.R(1001297, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1003337, J$e);
                                            } finally {
                                                if (J$.Fr(1003345))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(1001377, J$.F(1001369, J$.R(1001353, '_typeof', _typeof, false, true), false)(J$.R(1001361, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(1003353, J$e);
                        } finally {
                            if (J$.Fr(1003361))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1003041, arguments.callee, this, arguments);
                            arguments = J$.N(1003049, 'arguments', arguments, true, false, false);
                            opts = J$.N(1003057, 'opts', opts, true, false, false);
                            pre = J$.N(1003065, 'pre', pre, true, false, false);
                            post = J$.N(1003073, 'post', post, true, false, false);
                            schema = J$.N(1003081, 'schema', schema, true, false, false);
                            jsonPtr = J$.N(1003089, 'jsonPtr', jsonPtr, true, false, false);
                            rootSchema = J$.N(1003097, 'rootSchema', rootSchema, true, false, false);
                            parentJsonPtr = J$.N(1003105, 'parentJsonPtr', parentJsonPtr, true, false, false);
                            parentKeyword = J$.N(1003113, 'parentKeyword', parentKeyword, true, false, false);
                            parentSchema = J$.N(1003121, 'parentSchema', parentSchema, true, false, false);
                            keyIndex = J$.N(1003129, 'keyIndex', keyIndex, true, false, false);
                            J$.N(1003137, 'key', key, false, false, false);
                            J$.N(1003145, 'sch', sch, false, false, false);
                            J$.N(1003153, 'i', i, false, false, false);
                            J$.N(1003161, 'prop', prop, false, false, false);
                            if (J$.C(59776, J$.C(59696, J$.C(59688, J$.R(1002113, 'schema', schema, false, false)) ? J$.B(158138, '==', J$.F(1002137, J$.R(1002121, '_typeof', _typeof, false, true), false)(J$.R(1002129, 'schema', schema, false, false)), J$.T(1002145, 'object', 21, false)) : J$._()) ? J$.U(158146, '!', J$.M(1002169, J$.I(typeof Array === 'undefined' ? Array = J$.R(1002153, 'Array', undefined, true, true) : Array = J$.R(1002153, 'Array', Array, true, true)), 'isArray', false)(J$.R(1002161, 'schema', schema, false, false))) : J$._())) {
                                J$.F(1002241, J$.R(1002177, 'pre', pre, false, false), false)(J$.R(1002185, 'schema', schema, false, false), J$.R(1002193, 'jsonPtr', jsonPtr, false, false), J$.R(1002201, 'rootSchema', rootSchema, false, false), J$.R(1002209, 'parentJsonPtr', parentJsonPtr, false, false), J$.R(1002217, 'parentKeyword', parentKeyword, false, false), J$.R(1002225, 'parentSchema', parentSchema, false, false), J$.R(1002233, 'keyIndex', keyIndex, false, false));
                                for (var key in J$.H(1002953, J$.R(1002249, 'schema', schema, false, false))) {
                                    J$.N(1002961, 'key', key, false, true, false);
                                    {
                                        {
                                            var sch = J$.W(1002281, 'sch', J$.G(1002273, J$.R(1002257, 'schema', schema, false, false), J$.R(1002265, 'key', key, false, false)), sch, false, false);
                                            if (J$.C(59768, J$.M(1002305, J$.I(typeof Array === 'undefined' ? Array = J$.R(1002289, 'Array', undefined, true, true) : Array = J$.R(1002289, 'Array', Array, true, true)), 'isArray', false)(J$.R(1002297, 'sch', sch, false, false)))) {
                                                if (J$.C(59712, J$.B(158154, 'in', J$.R(1002313, 'key', key, false, false), J$.G(1002329, J$.R(1002321, 'traverse', traverse, false, true), 'arrayKeywords')))) {
                                                    for (var i = J$.W(1002345, 'i', J$.T(1002337, 0, 22, false), i, false, false); J$.C(59704, J$.B(158162, '<', J$.R(1002353, 'i', i, false, false), J$.G(1002369, J$.R(1002361, 'sch', sch, false, false), 'length'))); J$.B(158186, '-', i = J$.W(1002385, 'i', J$.B(158178, '+', J$.U(158170, '+', J$.R(1002377, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                        J$.F(1002529, J$.R(1002393, '_traverse', _traverse, false, true), false)(J$.R(1002401, 'opts', opts, false, false), J$.R(1002409, 'pre', pre, false, false), J$.R(1002417, 'post', post, false, false), J$.G(1002441, J$.R(1002425, 'sch', sch, false, false), J$.R(1002433, 'i', i, false, false)), J$.B(158218, '+', J$.B(158210, '+', J$.B(158202, '+', J$.B(158194, '+', J$.R(1002449, 'jsonPtr', jsonPtr, false, false), J$.T(1002457, '/', 21, false)), J$.R(1002465, 'key', key, false, false)), J$.T(1002473, '/', 21, false)), J$.R(1002481, 'i', i, false, false)), J$.R(1002489, 'rootSchema', rootSchema, false, false), J$.R(1002497, 'jsonPtr', jsonPtr, false, false), J$.R(1002505, 'key', key, false, false), J$.R(1002513, 'schema', schema, false, false), J$.R(1002521, 'i', i, false, false));
                                                    }
                                                }
                                            } else if (J$.C(59760, J$.B(158226, 'in', J$.R(1002537, 'key', key, false, false), J$.G(1002553, J$.R(1002545, 'traverse', traverse, false, true), 'propsKeywords')))) {
                                                if (J$.C(59728, J$.C(59720, J$.R(1002561, 'sch', sch, false, false)) ? J$.B(158234, '==', J$.F(1002585, J$.R(1002569, '_typeof', _typeof, false, true), false)(J$.R(1002577, 'sch', sch, false, false)), J$.T(1002593, 'object', 21, false)) : J$._())) {
                                                    for (var prop in J$.H(1002769, J$.R(1002601, 'sch', sch, false, false))) {
                                                        J$.N(1002777, 'prop', prop, false, true, false);
                                                        {
                                                            {
                                                                J$.F(1002761, J$.R(1002609, '_traverse', _traverse, false, true), false)(J$.R(1002617, 'opts', opts, false, false), J$.R(1002625, 'pre', pre, false, false), J$.R(1002633, 'post', post, false, false), J$.G(1002657, J$.R(1002641, 'sch', sch, false, false), J$.R(1002649, 'prop', prop, false, false)), J$.B(158266, '+', J$.B(158258, '+', J$.B(158250, '+', J$.B(158242, '+', J$.R(1002665, 'jsonPtr', jsonPtr, false, false), J$.T(1002673, '/', 21, false)), J$.R(1002681, 'key', key, false, false)), J$.T(1002689, '/', 21, false)), J$.F(1002713, J$.R(1002697, 'escapeJsonPtr', escapeJsonPtr, false, true), false)(J$.R(1002705, 'prop', prop, false, false))), J$.R(1002721, 'rootSchema', rootSchema, false, false), J$.R(1002729, 'jsonPtr', jsonPtr, false, false), J$.R(1002737, 'key', key, false, false), J$.R(1002745, 'schema', schema, false, false), J$.R(1002753, 'prop', prop, false, false));
                                                            }
                                                        }
                                                    }
                                                }
                                            } else if (J$.C(59752, J$.C(59744, J$.B(158274, 'in', J$.R(1002785, 'key', key, false, false), J$.G(1002801, J$.R(1002793, 'traverse', traverse, false, true), 'keywords'))) ? J$._() : J$.C(59736, J$.G(1002817, J$.R(1002809, 'opts', opts, false, false), 'allKeys')) ? J$.U(158290, '!', J$.B(158282, 'in', J$.R(1002825, 'key', key, false, false), J$.G(1002841, J$.R(1002833, 'traverse', traverse, false, true), 'skipKeywords'))) : J$._())) {
                                                J$.F(1002945, J$.R(1002849, '_traverse', _traverse, false, true), false)(J$.R(1002857, 'opts', opts, false, false), J$.R(1002865, 'pre', pre, false, false), J$.R(1002873, 'post', post, false, false), J$.R(1002881, 'sch', sch, false, false), J$.B(158306, '+', J$.B(158298, '+', J$.R(1002889, 'jsonPtr', jsonPtr, false, false), J$.T(1002897, '/', 21, false)), J$.R(1002905, 'key', key, false, false)), J$.R(1002913, 'rootSchema', rootSchema, false, false), J$.R(1002921, 'jsonPtr', jsonPtr, false, false), J$.R(1002929, 'key', key, false, false), J$.R(1002937, 'schema', schema, false, false));
                                            }
                                        }
                                    }
                                }
                                J$.F(1003033, J$.R(1002969, 'post', post, false, false), false)(J$.R(1002977, 'schema', schema, false, false), J$.R(1002985, 'jsonPtr', jsonPtr, false, false), J$.R(1002993, 'rootSchema', rootSchema, false, false), J$.R(1003001, 'parentJsonPtr', parentJsonPtr, false, false), J$.R(1003009, 'parentKeyword', parentKeyword, false, false), J$.R(1003017, 'parentSchema', parentSchema, false, false), J$.R(1003025, 'keyIndex', keyIndex, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1003417, J$e);
                        } finally {
                            if (J$.Fr(1003425))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function escapeJsonPtr(str) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1003233, arguments.callee, this, arguments);
                            arguments = J$.N(1003241, 'arguments', arguments, true, false, false);
                            str = J$.N(1003249, 'str', str, true, false, false);
                            return J$.Rt(1003225, J$.M(1003217, J$.M(1003193, J$.R(1003169, 'str', str, false, false), 'replace', false)(J$.T(1003177, /~/g, 14, false), J$.T(1003185, '~0', 21, false)), 'replace', false)(J$.T(1003201, /\//g, 14, false), J$.T(1003209, '~1', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1003433, J$e);
                        } finally {
                            if (J$.Fr(1003441))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(1003273, '_typeof', J$.T(1003265, _typeof, 12, false), true, false, false);
            J$.N(1003281, 'traverse', traverse, false, false, false);
            _traverse = J$.N(1003297, '_traverse', J$.T(1003289, _traverse, 12, false), true, false, false);
            escapeJsonPtr = J$.N(1003313, 'escapeJsonPtr', J$.T(1003305, escapeJsonPtr, 12, false), true, false, false);
            J$.T(1000873, 'use strict', 21, false);
            J$.F(1000897, J$.I(typeof require === 'undefined' ? require = J$.R(1000881, 'require', undefined, true, true) : require = J$.R(1000881, 'require', require, true, true)), false)(J$.T(1000889, 'core-js/modules/es.symbol', 21, false));
            J$.F(1000921, J$.I(typeof require === 'undefined' ? require = J$.R(1000905, 'require', undefined, true, true) : require = J$.R(1000905, 'require', require, true, true)), false)(J$.T(1000913, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(1000945, J$.I(typeof require === 'undefined' ? require = J$.R(1000929, 'require', undefined, true, true) : require = J$.R(1000929, 'require', require, true, true)), false)(J$.T(1000937, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(1000969, J$.I(typeof require === 'undefined' ? require = J$.R(1000953, 'require', undefined, true, true) : require = J$.R(1000953, 'require', require, true, true)), false)(J$.T(1000961, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(1000993, J$.I(typeof require === 'undefined' ? require = J$.R(1000977, 'require', undefined, true, true) : require = J$.R(1000977, 'require', require, true, true)), false)(J$.T(1000985, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(1001017, J$.I(typeof require === 'undefined' ? require = J$.R(1001001, 'require', undefined, true, true) : require = J$.R(1001001, 'require', require, true, true)), false)(J$.T(1001009, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1001041, J$.I(typeof require === 'undefined' ? require = J$.R(1001025, 'require', undefined, true, true) : require = J$.R(1001025, 'require', require, true, true)), false)(J$.T(1001033, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1001065, J$.I(typeof require === 'undefined' ? require = J$.R(1001049, 'require', undefined, true, true) : require = J$.R(1001049, 'require', require, true, true)), false)(J$.T(1001057, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(1001089, J$.I(typeof require === 'undefined' ? require = J$.R(1001073, 'require', undefined, true, true) : require = J$.R(1001073, 'require', require, true, true)), false)(J$.T(1001081, 'core-js/modules/es.string.replace', 21, false));
            J$.F(1001113, J$.I(typeof require === 'undefined' ? require = J$.R(1001097, 'require', undefined, true, true) : require = J$.R(1001097, 'require', require, true, true)), false)(J$.T(1001105, 'core-js/modules/web.dom-collections.iterator', 21, false));
            var traverse = J$.W(1001753, 'traverse', J$.P(1001745, J$.I(typeof module === 'undefined' ? module = J$.R(1001409, 'module', undefined, true, true) : module = J$.R(1001409, 'module', module, true, true)), 'exports', J$.T(1001737, function (schema, opts, cb) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1001681, arguments.callee, this, arguments);
                            arguments = J$.N(1001689, 'arguments', arguments, true, false, false);
                            schema = J$.N(1001697, 'schema', schema, true, false, false);
                            opts = J$.N(1001705, 'opts', opts, true, false, false);
                            cb = J$.N(1001713, 'cb', cb, true, false, false);
                            J$.N(1001721, 'pre', pre, false, false, false);
                            J$.N(1001729, 'post', post, false, false, false);
                            if (J$.C(59648, J$.B(158114, '==', J$.U(158106, 'typeof', J$.R(1001417, 'opts', opts, false, false)), J$.T(1001425, 'function', 21, false)))) {
                                cb = J$.W(1001441, 'cb', J$.R(1001433, 'opts', opts, false, false), cb, false, false);
                                opts = J$.W(1001457, 'opts', J$.T(1001449, {}, 11, false), opts, false, false);
                            }
                            cb = J$.W(1001489, 'cb', J$.C(59656, J$.G(1001473, J$.R(1001465, 'opts', opts, false, false), 'cb')) ? J$._() : J$.R(1001481, 'cb', cb, false, false), cb, false, false);
                            var pre = J$.W(1001561, 'pre', J$.C(59672, J$.B(158130, '==', J$.U(158122, 'typeof', J$.R(1001497, 'cb', cb, false, false)), J$.T(1001505, 'function', 21, false))) ? J$.R(1001513, 'cb', cb, false, false) : J$.C(59664, J$.G(1001529, J$.R(1001521, 'cb', cb, false, false), 'pre')) ? J$._() : J$.T(1001553, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(1001537, arguments.callee, this, arguments);
                                            arguments = J$.N(1001545, 'arguments', arguments, true, false, false);
                                        } catch (J$e) {
                                            J$.Ex(1003369, J$e);
                                        } finally {
                                            if (J$.Fr(1003377))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), pre, false, false);
                            var post = J$.W(1001609, 'post', J$.C(59680, J$.G(1001577, J$.R(1001569, 'cb', cb, false, false), 'post')) ? J$._() : J$.T(1001601, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(1001585, arguments.callee, this, arguments);
                                            arguments = J$.N(1001593, 'arguments', arguments, true, false, false);
                                        } catch (J$e) {
                                            J$.Ex(1003385, J$e);
                                        } finally {
                                            if (J$.Fr(1003393))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), post, false, false);
                            J$.F(1001673, J$.R(1001617, '_traverse', _traverse, false, true), false)(J$.R(1001625, 'opts', opts, false, false), J$.R(1001633, 'pre', pre, false, false), J$.R(1001641, 'post', post, false, false), J$.R(1001649, 'schema', schema, false, false), J$.T(1001657, '', 21, false), J$.R(1001665, 'schema', schema, false, false));
                        } catch (J$e) {
                            J$.Ex(1003401, J$e);
                        } finally {
                            if (J$.Fr(1003409))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), traverse, false, true);
            J$.P(1001825, J$.R(1001761, 'traverse', traverse, false, true), 'keywords', J$.T(1001817, {
                additionalItems: J$.T(1001769, true, 23, false),
                items: J$.T(1001777, true, 23, false),
                contains: J$.T(1001785, true, 23, false),
                additionalProperties: J$.T(1001793, true, 23, false),
                propertyNames: J$.T(1001801, true, 23, false),
                not: J$.T(1001809, true, 23, false)
            }, 11, false));
            J$.P(1001881, J$.R(1001833, 'traverse', traverse, false, true), 'arrayKeywords', J$.T(1001873, {
                items: J$.T(1001841, true, 23, false),
                allOf: J$.T(1001849, true, 23, false),
                anyOf: J$.T(1001857, true, 23, false),
                oneOf: J$.T(1001865, true, 23, false)
            }, 11, false));
            J$.P(1001937, J$.R(1001889, 'traverse', traverse, false, true), 'propsKeywords', J$.T(1001929, {
                definitions: J$.T(1001897, true, 23, false),
                properties: J$.T(1001905, true, 23, false),
                patternProperties: J$.T(1001913, true, 23, false),
                dependencies: J$.T(1001921, true, 23, false)
            }, 11, false));
            J$.P(1002105, J$.R(1001945, 'traverse', traverse, false, true), 'skipKeywords', J$.T(1002097, {
                'default': J$.T(1001953, true, 23, false),
                'enum': J$.T(1001961, true, 23, false),
                'const': J$.T(1001969, true, 23, false),
                required: J$.T(1001977, true, 23, false),
                maximum: J$.T(1001985, true, 23, false),
                minimum: J$.T(1001993, true, 23, false),
                exclusiveMaximum: J$.T(1002001, true, 23, false),
                exclusiveMinimum: J$.T(1002009, true, 23, false),
                multipleOf: J$.T(1002017, true, 23, false),
                maxLength: J$.T(1002025, true, 23, false),
                minLength: J$.T(1002033, true, 23, false),
                pattern: J$.T(1002041, true, 23, false),
                format: J$.T(1002049, true, 23, false),
                maxItems: J$.T(1002057, true, 23, false),
                minItems: J$.T(1002065, true, 23, false),
                uniqueItems: J$.T(1002073, true, 23, false),
                maxProperties: J$.T(1002081, true, 23, false),
                minProperties: J$.T(1002089, true, 23, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(1003449, J$e);
        } finally {
            if (J$.Sr(1003457))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

