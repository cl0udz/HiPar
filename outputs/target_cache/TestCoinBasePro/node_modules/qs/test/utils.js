J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1299161, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/qs/test/utils.js');
            J$.N(1299169, 'test', test, false, false, false);
            J$.N(1299177, 'utils', utils, false, false, false);
            J$.T(1297897, 'use strict', 21, false);
            var test = J$.W(1297929, 'test', J$.F(1297921, J$.I(typeof require === 'undefined' ? require = J$.R(1297905, 'require', undefined, true, true) : require = J$.R(1297905, 'require', require, true, true)), false)(J$.T(1297913, 'tape', 21, false)), test, false, true);
            var utils = J$.W(1297961, 'utils', J$.F(1297953, J$.I(typeof require === 'undefined' ? require = J$.R(1297937, 'require', undefined, true, true) : require = J$.R(1297937, 'require', require, true, true)), false)(J$.T(1297945, '../lib/utils', 21, false)), utils, false, true);
            J$.F(1298793, J$.R(1297969, 'test', test, false, true), false)(J$.T(1297977, 'merge()', 21, false), J$.T(1298785, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1298729, arguments.callee, this, arguments);
                            arguments = J$.N(1298737, 'arguments', arguments, true, false, false);
                            t = J$.N(1298745, 't', t, true, false, false);
                            J$.N(1298753, 'oneMerged', oneMerged, false, false, false);
                            J$.N(1298761, 'twoMerged', twoMerged, false, false, false);
                            J$.N(1298769, 'sandwiched', sandwiched, false, false, false);
                            J$.N(1298777, 'nestedArrays', nestedArrays, false, false, false);
                            J$.M(1298081, J$.R(1297985, 't', t, false, false), 'deepEqual', false)(J$.M(1298033, J$.R(1297993, 'utils', utils, false, true), 'merge', false)(J$.T(1298009, { a: J$.T(1298001, 'b', 21, false) }, 11, false), J$.T(1298025, { a: J$.T(1298017, 'c', 21, false) }, 11, false)), J$.T(1298065, {
                                a: J$.T(1298057, [
                                    J$.T(1298041, 'b', 21, false),
                                    J$.T(1298049, 'c', 21, false)
                                ], 10, false)
                            }, 11, false), J$.T(1298073, 'merges two objects with the same key', 21, false));
                            var oneMerged = J$.W(1298145, 'oneMerged', J$.M(1298137, J$.R(1298089, 'utils', utils, false, true), 'merge', false)(J$.T(1298105, { foo: J$.T(1298097, 'bar', 21, false) }, 11, false), J$.T(1298129, { foo: J$.T(1298121, { first: J$.T(1298113, '123', 21, false) }, 11, false) }, 11, false)), oneMerged, false, false);
                            J$.M(1298217, J$.R(1298153, 't', t, false, false), 'deepEqual', false)(J$.R(1298161, 'oneMerged', oneMerged, false, false), J$.T(1298201, {
                                foo: J$.T(1298193, [
                                    J$.T(1298169, 'bar', 21, false),
                                    J$.T(1298185, { first: J$.T(1298177, '123', 21, false) }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(1298209, 'merges a standalone and an object into an array', 21, false));
                            var twoMerged = J$.W(1298305, 'twoMerged', J$.M(1298297, J$.R(1298225, 'utils', utils, false, true), 'merge', false)(J$.T(1298265, {
                                foo: J$.T(1298257, [
                                    J$.T(1298233, 'bar', 21, false),
                                    J$.T(1298249, { first: J$.T(1298241, '123', 21, false) }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(1298289, { foo: J$.T(1298281, { second: J$.T(1298273, '456', 21, false) }, 11, false) }, 11, false)), twoMerged, false, false);
                            J$.M(1298385, J$.R(1298313, 't', t, false, false), 'deepEqual', false)(J$.R(1298321, 'twoMerged', twoMerged, false, false), J$.T(1298369, {
                                foo: J$.T(1298361, {
                                    0: J$.T(1298329, 'bar', 21, false),
                                    1: J$.T(1298345, { first: J$.T(1298337, '123', 21, false) }, 11, false),
                                    second: J$.T(1298353, '456', 21, false)
                                }, 11, false)
                            }, 11, false), J$.T(1298377, 'merges a standalone and two objects into an array', 21, false));
                            var sandwiched = J$.W(1298473, 'sandwiched', J$.M(1298465, J$.R(1298393, 'utils', utils, false, true), 'merge', false)(J$.T(1298441, {
                                foo: J$.T(1298433, [
                                    J$.T(1298401, 'bar', 21, false),
                                    J$.T(1298425, {
                                        first: J$.T(1298409, '123', 21, false),
                                        second: J$.T(1298417, '456', 21, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), J$.T(1298457, { foo: J$.T(1298449, 'baz', 21, false) }, 11, false)), sandwiched, false, false);
                            J$.M(1298561, J$.R(1298481, 't', t, false, false), 'deepEqual', false)(J$.R(1298489, 'sandwiched', sandwiched, false, false), J$.T(1298545, {
                                foo: J$.T(1298537, [
                                    J$.T(1298497, 'bar', 21, false),
                                    J$.T(1298521, {
                                        first: J$.T(1298505, '123', 21, false),
                                        second: J$.T(1298513, '456', 21, false)
                                    }, 11, false),
                                    J$.T(1298529, 'baz', 21, false)
                                ], 10, false)
                            }, 11, false), J$.T(1298553, 'merges an object sandwiched by two standalones into an array', 21, false));
                            var nestedArrays = J$.W(1298641, 'nestedArrays', J$.M(1298633, J$.R(1298569, 'utils', utils, false, true), 'merge', false)(J$.T(1298593, { foo: J$.T(1298585, [J$.T(1298577, 'baz', 21, false)], 10, false) }, 11, false), J$.T(1298625, {
                                foo: J$.T(1298617, [
                                    J$.T(1298601, 'bar', 21, false),
                                    J$.T(1298609, 'xyzzy', 21, false)
                                ], 10, false)
                            }, 11, false)), nestedArrays, false, false);
                            J$.M(1298705, J$.R(1298649, 't', t, false, false), 'deepEqual', false)(J$.R(1298657, 'nestedArrays', nestedArrays, false, false), J$.T(1298697, {
                                foo: J$.T(1298689, [
                                    J$.T(1298665, 'baz', 21, false),
                                    J$.T(1298673, 'bar', 21, false),
                                    J$.T(1298681, 'xyzzy', 21, false)
                                ], 10, false)
                            }, 11, false));
                            J$.M(1298721, J$.R(1298713, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(1299185, J$e);
                        } finally {
                            if (J$.Fr(1299193))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(1299153, J$.R(1298801, 'test', test, false, true), false)(J$.T(1298809, 'assign()', 21, false), J$.T(1299145, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1299097, arguments.callee, this, arguments);
                            arguments = J$.N(1299105, 'arguments', arguments, true, false, false);
                            t = J$.N(1299113, 't', t, true, false, false);
                            J$.N(1299121, 'target', target, false, false, false);
                            J$.N(1299129, 'source', source, false, false, false);
                            J$.N(1299137, 'result', result, false, false, false);
                            var target = J$.W(1298841, 'target', J$.T(1298833, {
                                a: J$.T(1298817, 1, 22, false),
                                b: J$.T(1298825, 2, 22, false)
                            }, 11, false), target, false, false);
                            var source = J$.W(1298873, 'source', J$.T(1298865, {
                                b: J$.T(1298849, 3, 22, false),
                                c: J$.T(1298857, 4, 22, false)
                            }, 11, false), source, false, false);
                            var result = J$.W(1298913, 'result', J$.M(1298905, J$.R(1298881, 'utils', utils, false, true), 'assign', false)(J$.R(1298889, 'target', target, false, false), J$.R(1298897, 'source', source, false, false)), result, false, false);
                            J$.M(1298953, J$.R(1298921, 't', t, false, false), 'equal', false)(J$.R(1298929, 'result', result, false, false), J$.R(1298937, 'target', target, false, false), J$.T(1298945, 'returns the target', 21, false));
                            J$.M(1299017, J$.R(1298961, 't', t, false, false), 'deepEqual', false)(J$.R(1298969, 'target', target, false, false), J$.T(1299001, {
                                a: J$.T(1298977, 1, 22, false),
                                b: J$.T(1298985, 3, 22, false),
                                c: J$.T(1298993, 4, 22, false)
                            }, 11, false), J$.T(1299009, 'target and source are merged', 21, false));
                            J$.M(1299073, J$.R(1299025, 't', t, false, false), 'deepEqual', false)(J$.R(1299033, 'source', source, false, false), J$.T(1299057, {
                                b: J$.T(1299041, 3, 22, false),
                                c: J$.T(1299049, 4, 22, false)
                            }, 11, false), J$.T(1299065, 'source is untouched', 21, false));
                            J$.M(1299089, J$.R(1299081, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(1299201, J$e);
                        } finally {
                            if (J$.Fr(1299209))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1299217, J$e);
        } finally {
            if (J$.Sr(1299225))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

