J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(508393, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ajv/scripts/compile-dots.js');
            J$.N(508401, 'glob', glob, false, false, false);
            J$.N(508409, 'fs', fs, false, false, false);
            J$.N(508417, 'path', path, false, false, false);
            J$.N(508425, 'doT', doT, false, false, false);
            J$.N(508433, 'beautify', beautify, false, false, false);
            J$.N(508441, 'defsRootPath', defsRootPath, false, false, false);
            J$.N(508449, 'defs', defs, false, false, false);
            J$.N(508457, 'defFiles', defFiles, false, false, false);
            J$.N(508465, 'filesRootPath', filesRootPath, false, false, false);
            J$.N(508473, 'files', files, false, false, false);
            J$.N(508481, 'dotjsPath', dotjsPath, false, false, false);
            J$.N(508489, 'FUNCTION_NAME', FUNCTION_NAME, false, false, false);
            J$.N(508497, 'OUT_EMPTY_STRING', OUT_EMPTY_STRING, false, false, false);
            J$.N(508505, 'ISTANBUL', ISTANBUL, false, false, false);
            J$.N(508513, 'ERROR_KEYWORD', ERROR_KEYWORD, false, false, false);
            J$.N(508521, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, false, false);
            J$.N(508529, 'VARS', VARS, false, false, false);
            J$.T(506169, 'use strict', 21, false);
            J$.F(506193, J$.I(typeof require === 'undefined' ? require = J$.R(506177, 'require', undefined, true, true) : require = J$.R(506177, 'require', require, true, true)), false)(J$.T(506185, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(506217, J$.I(typeof require === 'undefined' ? require = J$.R(506201, 'require', undefined, true, true) : require = J$.R(506201, 'require', require, true, true)), false)(J$.T(506209, 'core-js/modules/es.array.join', 21, false));
            J$.F(506241, J$.I(typeof require === 'undefined' ? require = J$.R(506225, 'require', undefined, true, true) : require = J$.R(506225, 'require', require, true, true)), false)(J$.T(506233, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(506265, J$.I(typeof require === 'undefined' ? require = J$.R(506249, 'require', undefined, true, true) : require = J$.R(506249, 'require', require, true, true)), false)(J$.T(506257, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(506289, J$.I(typeof require === 'undefined' ? require = J$.R(506273, 'require', undefined, true, true) : require = J$.R(506273, 'require', require, true, true)), false)(J$.T(506281, 'core-js/modules/es.regexp.constructor', 21, false));
            J$.F(506313, J$.I(typeof require === 'undefined' ? require = J$.R(506297, 'require', undefined, true, true) : require = J$.R(506297, 'require', require, true, true)), false)(J$.T(506305, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(506337, J$.I(typeof require === 'undefined' ? require = J$.R(506321, 'require', undefined, true, true) : require = J$.R(506321, 'require', require, true, true)), false)(J$.T(506329, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(506361, J$.I(typeof require === 'undefined' ? require = J$.R(506345, 'require', undefined, true, true) : require = J$.R(506345, 'require', require, true, true)), false)(J$.T(506353, 'core-js/modules/es.string.match', 21, false));
            J$.F(506385, J$.I(typeof require === 'undefined' ? require = J$.R(506369, 'require', undefined, true, true) : require = J$.R(506369, 'require', require, true, true)), false)(J$.T(506377, 'core-js/modules/es.string.replace', 21, false));
            J$.F(506409, J$.I(typeof require === 'undefined' ? require = J$.R(506393, 'require', undefined, true, true) : require = J$.R(506393, 'require', require, true, true)), false)(J$.T(506401, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var glob = J$.W(506545, 'glob', J$.F(506433, J$.I(typeof require === 'undefined' ? require = J$.R(506417, 'require', undefined, true, true) : require = J$.R(506417, 'require', require, true, true)), false)(J$.T(506425, 'glob', 21, false)), glob, false, true), fs = J$.W(506553, 'fs', J$.F(506457, J$.I(typeof require === 'undefined' ? require = J$.R(506441, 'require', undefined, true, true) : require = J$.R(506441, 'require', require, true, true)), false)(J$.T(506449, 'fs', 21, false)), fs, false, true), path = J$.W(506561, 'path', J$.F(506481, J$.I(typeof require === 'undefined' ? require = J$.R(506465, 'require', undefined, true, true) : require = J$.R(506465, 'require', require, true, true)), false)(J$.T(506473, 'path', 21, false)), path, false, true), doT = J$.W(506569, 'doT', J$.F(506505, J$.I(typeof require === 'undefined' ? require = J$.R(506489, 'require', undefined, true, true) : require = J$.R(506489, 'require', require, true, true)), false)(J$.T(506497, 'dot', 21, false)), doT, false, true), beautify = J$.W(506577, 'beautify', J$.G(506537, J$.F(506529, J$.I(typeof require === 'undefined' ? require = J$.R(506513, 'require', undefined, true, true) : require = J$.R(506513, 'require', require, true, true)), false)(J$.T(506521, 'js-beautify', 21, false)), 'js_beautify'), beautify, false, true);
            var defsRootPath = J$.W(506649, 'defsRootPath', J$.C(34216, J$.G(506609, J$.G(506593, J$.I(typeof process === 'undefined' ? process = J$.R(506585, 'process', undefined, true, true) : process = J$.R(506585, 'process', process, true, true)), 'argv'), J$.T(506601, 2, 22, false))) ? J$._() : J$.M(506641, J$.R(506617, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(506625, '__dirname', undefined, true, true) : __dirname = J$.R(506625, '__dirname', __dirname, true, true)), J$.T(506633, '../lib', 21, false)), defsRootPath, false, true);
            var defs = J$.W(506665, 'defs', J$.T(506657, {}, 11, false), defs, false, true);
            var defFiles = J$.W(506713, 'defFiles', J$.M(506705, J$.R(506673, 'glob', glob, false, true), 'sync', false)(J$.T(506681, './dot/**/*.def', 21, false), J$.T(506697, { cwd: J$.R(506689, 'defsRootPath', defsRootPath, false, true) }, 11, false)), defFiles, false, true);
            J$.M(506881, J$.R(506721, 'defFiles', defFiles, false, true), 'forEach', false)(J$.T(506873, function (f) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(506841, arguments.callee, this, arguments);
                            arguments = J$.N(506849, 'arguments', arguments, true, false, false);
                            f = J$.N(506857, 'f', f, true, false, false);
                            J$.N(506865, 'name', name, false, false, false);
                            var name = J$.W(506761, 'name', J$.M(506753, J$.R(506729, 'path', path, false, true), 'basename', false)(J$.R(506737, 'f', f, false, false), J$.T(506745, '.def', 21, false)), name, false, false);
                            J$.P(506833, J$.R(506769, 'defs', defs, false, true), J$.R(506777, 'name', name, false, false), J$.M(506825, J$.R(506785, 'fs', fs, false, true), 'readFileSync', false)(J$.M(506817, J$.R(506793, 'path', path, false, true), 'join', false)(J$.R(506801, 'defsRootPath', defsRootPath, false, true), J$.R(506809, 'f', f, false, false))));
                        } catch (J$e) {
                            J$.Ex(508537, J$e);
                        } finally {
                            if (J$.Fr(508545))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var filesRootPath = J$.W(506953, 'filesRootPath', J$.C(34224, J$.G(506913, J$.G(506897, J$.I(typeof process === 'undefined' ? process = J$.R(506889, 'process', undefined, true, true) : process = J$.R(506889, 'process', process, true, true)), 'argv'), J$.T(506905, 3, 22, false))) ? J$._() : J$.M(506945, J$.R(506921, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(506929, '__dirname', undefined, true, true) : __dirname = J$.R(506929, '__dirname', __dirname, true, true)), J$.T(506937, '../lib', 21, false)), filesRootPath, false, true);
            var files = J$.W(507001, 'files', J$.M(506993, J$.R(506961, 'glob', glob, false, true), 'sync', false)(J$.T(506969, './dot/**/*.jst', 21, false), J$.T(506985, { cwd: J$.R(506977, 'filesRootPath', filesRootPath, false, true) }, 11, false)), files, false, true);
            var dotjsPath = J$.W(507041, 'dotjsPath', J$.M(507033, J$.R(507009, 'path', path, false, true), 'join', false)(J$.R(507017, 'filesRootPath', filesRootPath, false, true), J$.T(507025, './dotjs', 21, false)), dotjsPath, false, true);
            try {
                J$.M(507065, J$.R(507049, 'fs', fs, false, true), 'mkdirSync', false)(J$.R(507057, 'dotjsPath', dotjsPath, false, true));
            } catch (e) {
                J$.N(507073, 'e', e, false, false, true);
            }
            J$.M(507097, J$.I(typeof console === 'undefined' ? console = J$.R(507081, 'console', undefined, true, true) : console = J$.R(507081, 'console', console, true, true)), 'log', false)(J$.T(507089, '\n\nCompiling:', 21, false));
            var FUNCTION_NAME = J$.W(507113, 'FUNCTION_NAME', J$.T(507105, /function\s+anonymous\s*\(it[^)]*\)\s*{/, 14, false), FUNCTION_NAME, false, true);
            var OUT_EMPTY_STRING = J$.W(507129, 'OUT_EMPTY_STRING', J$.T(507121, /out\s*\+=\s*'\s*';/g, 14, false), OUT_EMPTY_STRING, false, true);
            var ISTANBUL = J$.W(507145, 'ISTANBUL', J$.T(507137, /'(istanbul[^']+)';/g, 14, false), ISTANBUL, false, true);
            var ERROR_KEYWORD = J$.W(507161, 'ERROR_KEYWORD', J$.T(507153, /\$errorKeyword/g, 14, false), ERROR_KEYWORD, false, true);
            var ERROR_KEYWORD_OR = J$.W(507177, 'ERROR_KEYWORD_OR', J$.T(507169, /\$errorKeyword\s+\|\|/g, 14, false), ERROR_KEYWORD_OR, false, true);
            var VARS = J$.W(507265, 'VARS', J$.T(507257, [
                J$.T(507185, '$errs', 21, false),
                J$.T(507193, '$valid', 21, false),
                J$.T(507201, '$lvl', 21, false),
                J$.T(507209, '$data', 21, false),
                J$.T(507217, '$dataLvl', 21, false),
                J$.T(507225, '$errorKeyword', 21, false),
                J$.T(507233, '$closingBraces', 21, false),
                J$.T(507241, '$schemaPath', 21, false),
                J$.T(507249, '$validate', 21, false)
            ], 10, false), VARS, false, true);
            J$.M(508385, J$.R(507273, 'files', files, false, true), 'forEach', false)(J$.T(508377, function (f) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(508273, arguments.callee, this, arguments);
                            function removeUnusedVar(v) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(508001, arguments.callee, this, arguments);
                                            arguments = J$.N(508009, 'arguments', arguments, true, false, false);
                                            v = J$.N(508017, 'v', v, true, false, false);
                                            J$.N(508025, 'regexp', regexp, false, false, false);
                                            J$.N(508033, 'count', count, false, false, false);
                                            v = J$.W(507793, 'v', J$.M(507785, J$.R(507761, 'v', v, false, false), 'replace', false)(J$.T(507769, /\$/g, 14, false), J$.T(507777, '\\$$', 21, false)), v, false, false);
                                            var regexp = J$.W(507841, 'regexp', J$.F(507833, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(507801, 'RegExp', undefined, true, true) : RegExp = J$.R(507801, 'RegExp', RegExp, true, true)), true)(J$.B(111906, '+', J$.R(507809, 'v', v, false, false), J$.T(507817, '[^A-Za-z0-9_$]', 21, false)), J$.T(507825, 'g', 21, false)), regexp, false, false);
                                            var count = J$.W(507873, 'count', J$.F(507865, J$.R(507849, 'occurrences', occurrences, false, false), false)(J$.R(507857, 'regexp', regexp, false, false)), count, false, false);
                                            if (J$.C(34232, J$.B(111914, '==', J$.R(507881, 'count', count, false, false), J$.T(507889, 1, 22, false)))) {
                                                regexp = J$.W(507953, 'regexp', J$.F(507945, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(507897, 'RegExp', undefined, true, true) : RegExp = J$.R(507897, 'RegExp', RegExp, true, true)), true)(J$.B(111946, '+', J$.B(111938, '+', J$.B(111930, '+', J$.B(111922, '+', J$.T(507905, 'var\\s+', 21, false), J$.R(507913, 'v', v, false, false)), J$.T(507921, '\\s*=[^;]+;|var\\s+', 21, false)), J$.R(507929, 'v', v, false, false)), J$.T(507937, ';', 21, false))), regexp, false, false);
                                                code = J$.W(507993, 'code', J$.M(507985, J$.R(507961, 'code', code, false, false), 'replace', false)(J$.R(507969, 'regexp', regexp, false, false), J$.T(507977, '', 21, false)), code, false, false);
                                            }
                                        } catch (J$e) {
                                            J$.Ex(508553, J$e);
                                        } finally {
                                            if (J$.Fr(508561))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function removeAlwaysFalsyInOr() {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(508169, arguments.callee, this, arguments);
                                            arguments = J$.N(508177, 'arguments', arguments, true, false, false);
                                            J$.N(508185, 'countUsed', countUsed, false, false, false);
                                            J$.N(508193, 'countOr', countOr, false, false, false);
                                            var countUsed = J$.W(508065, 'countUsed', J$.F(508057, J$.R(508041, 'occurrences', occurrences, false, false), false)(J$.R(508049, 'ERROR_KEYWORD', ERROR_KEYWORD, false, true)), countUsed, false, false);
                                            var countOr = J$.W(508097, 'countOr', J$.F(508089, J$.R(508073, 'occurrences', occurrences, false, false), false)(J$.R(508081, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, true)), countOr, false, false);
                                            if (J$.C(34240, J$.B(111962, '==', J$.R(508105, 'countUsed', countUsed, false, false), J$.B(111954, '+', J$.R(508113, 'countOr', countOr, false, false), J$.T(508121, 1, 22, false)))))
                                                code = J$.W(508161, 'code', J$.M(508153, J$.R(508129, 'code', code, false, false), 'replace', false)(J$.R(508137, 'ERROR_KEYWORD_OR', ERROR_KEYWORD_OR, false, true), J$.T(508145, '', 21, false)), code, false, false);
                                        } catch (J$e) {
                                            J$.Ex(508569, J$e);
                                        } finally {
                                            if (J$.Fr(508577))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function occurrences(regexp) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(508249, arguments.callee, this, arguments);
                                            arguments = J$.N(508257, 'arguments', arguments, true, false, false);
                                            regexp = J$.N(508265, 'regexp', regexp, true, false, false);
                                            return J$.Rt(508241, J$.G(508233, J$.C(34248, J$.M(508217, J$.R(508201, 'code', code, false, false), 'match', false)(J$.R(508209, 'regexp', regexp, false, false))) ? J$._() : J$.T(508225, [], 10, false), 'length'));
                                        } catch (J$e) {
                                            J$.Ex(508585, J$e);
                                        } finally {
                                            if (J$.Fr(508593))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(508281, 'arguments', arguments, true, false, false);
                            f = J$.N(508289, 'f', f, true, false, false);
                            J$.N(508297, 'keyword', keyword, false, false, false);
                            J$.N(508305, 'targetPath', targetPath, false, false, false);
                            J$.N(508313, 'template', template, false, false, false);
                            J$.N(508321, 'code', code, false, false, false);
                            removeUnusedVar = J$.N(508337, 'removeUnusedVar', J$.T(508329, removeUnusedVar, 12, false), true, false, false);
                            removeAlwaysFalsyInOr = J$.N(508353, 'removeAlwaysFalsyInOr', J$.T(508345, removeAlwaysFalsyInOr, 12, false), true, false, false);
                            occurrences = J$.N(508369, 'occurrences', J$.T(508361, occurrences, 12, false), true, false, false);
                            var keyword = J$.W(507313, 'keyword', J$.M(507305, J$.R(507281, 'path', path, false, true), 'basename', false)(J$.R(507289, 'f', f, false, false), J$.T(507297, '.jst', 21, false)), keyword, false, false);
                            var targetPath = J$.W(507361, 'targetPath', J$.M(507353, J$.R(507321, 'path', path, false, true), 'join', false)(J$.R(507329, 'dotjsPath', dotjsPath, false, true), J$.B(111866, '+', J$.R(507337, 'keyword', keyword, false, false), J$.T(507345, '.js', 21, false))), targetPath, false, false);
                            var template = J$.W(507417, 'template', J$.M(507409, J$.R(507369, 'fs', fs, false, true), 'readFileSync', false)(J$.M(507401, J$.R(507377, 'path', path, false, true), 'join', false)(J$.R(507385, 'filesRootPath', filesRootPath, false, true), J$.R(507393, 'f', f, false, false))), template, false, false);
                            var code = J$.W(507457, 'code', J$.M(507449, J$.R(507425, 'doT', doT, false, true), 'compile', false)(J$.R(507433, 'template', template, false, false), J$.R(507441, 'defs', defs, false, true)), code, false, false);
                            code = J$.W(507569, 'code', J$.M(507561, J$.M(507537, J$.M(507497, J$.M(507473, J$.R(507465, 'code', code, false, false), 'toString', false)(), 'replace', false)(J$.R(507481, 'OUT_EMPTY_STRING', OUT_EMPTY_STRING, false, true), J$.T(507489, '', 21, false)), 'replace', false)(J$.R(507505, 'FUNCTION_NAME', FUNCTION_NAME, false, true), J$.B(111882, '+', J$.B(111874, '+', J$.T(507513, 'function generate_', 21, false), J$.R(507521, 'keyword', keyword, false, false)), J$.T(507529, '(it, $keyword, $ruleType) {', 21, false))), 'replace', false)(J$.R(507545, 'ISTANBUL', ISTANBUL, false, true), J$.T(507553, '/* $1 */', 21, false)), code, false, false);
                            J$.F(507585, J$.R(507577, 'removeAlwaysFalsyInOr', removeAlwaysFalsyInOr, false, false), false)();
                            J$.M(507609, J$.R(507593, 'VARS', VARS, false, true), 'forEach', false)(J$.R(507601, 'removeUnusedVar', removeUnusedVar, false, false));
                            code = J$.W(507633, 'code', J$.B(111890, '+', J$.T(507617, '\'use strict\';\nmodule.exports = ', 21, false), J$.R(507625, 'code', code, false, false)), code, false, false);
                            code = J$.W(507689, 'code', J$.B(111898, '+', J$.F(507673, J$.R(507641, 'beautify', beautify, false, true), false)(J$.R(507649, 'code', code, false, false), J$.T(507665, { indent_size: J$.T(507657, 2, 22, false) }, 11, false)), J$.T(507681, '\n', 21, false)), code, false, false);
                            J$.M(507721, J$.R(507697, 'fs', fs, false, true), 'writeFileSync', false)(J$.R(507705, 'targetPath', targetPath, false, false), J$.R(507713, 'code', code, false, false));
                            J$.M(507753, J$.I(typeof console === 'undefined' ? console = J$.R(507729, 'console', undefined, true, true) : console = J$.R(507729, 'console', console, true, true)), 'log', false)(J$.T(507737, 'compiled', 21, false), J$.R(507745, 'keyword', keyword, false, false));
                        } catch (J$e) {
                            J$.Ex(508601, J$e);
                        } finally {
                            if (J$.Fr(508609))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(508617, J$e);
        } finally {
            if (J$.Sr(508625))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

