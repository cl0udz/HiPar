J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(372833, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ajv/lib/compile/async.js');
            function compileAsync(schema, meta, callback) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(372745, arguments.callee, this, arguments);
                            function loadMetaSchemaOf(sch) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(371825, arguments.callee, this, arguments);
                                            arguments = J$.N(371833, 'arguments', arguments, true, false, false);
                                            sch = J$.N(371841, 'sch', sch, true, false, false);
                                            J$.N(371849, '$schema', $schema, false, false, false);
                                            var $schema = J$.W(371713, '$schema', J$.G(371705, J$.R(371697, 'sch', sch, false, false), '$schema'), $schema, false, false);
                                            return J$.Rt(371817, J$.C(25048, J$.C(25040, J$.R(371721, '$schema', $schema, false, false)) ? J$.U(78922, '!', J$.M(371745, J$.R(371729, 'self', self, false, false), 'getSchema', false)(J$.R(371737, '$schema', $schema, false, false))) : J$._()) ? J$.M(371793, J$.R(371753, 'compileAsync', compileAsync, false, true), 'call', false)(J$.R(371761, 'self', self, false, false), J$.T(371777, { $ref: J$.R(371769, '$schema', $schema, false, false) }, 11, false), J$.T(371785, true, 23, false)) : J$.M(371809, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(371801, 'Promise', undefined, true, true) : Promise = J$.R(371801, 'Promise', Promise, true, true)), 'resolve', false)());
                                        } catch (J$e) {
                                            J$.Ex(372897, J$e);
                                        } finally {
                                            if (J$.Fr(372905))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function _compileAsync(schemaObj) {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(372705, arguments.callee, this, arguments);
                                            function loadMissingSchema(e) {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(372633, arguments.callee, this, arguments);
                                                            function removePromise() {
                                                                jalangiLabel6:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(372521, arguments.callee, this, arguments);
                                                                            arguments = J$.N(372529, 'arguments', arguments, true, false, false);
                                                                            J$.B(78994, 'delete', J$.G(372505, J$.R(372497, 'self', self, false, false), '_loadingSchemas'), J$.R(372513, 'ref', ref, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(372961, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(372969))
                                                                                continue jalangiLabel6;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }
                                                            function added(ref) {
                                                                jalangiLabel7:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(372609, arguments.callee, this, arguments);
                                                                            arguments = J$.N(372617, 'arguments', arguments, true, false, false);
                                                                            ref = J$.N(372625, 'ref', ref, true, false, false);
                                                                            return J$.Rt(372601, J$.C(25096, J$.G(372561, J$.G(372545, J$.R(372537, 'self', self, false, false), '_refs'), J$.R(372553, 'ref', ref, false, false))) ? J$._() : J$.G(372593, J$.G(372577, J$.R(372569, 'self', self, false, false), '_schemas'), J$.R(372585, 'ref', ref, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(372977, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(372985))
                                                                                continue jalangiLabel7;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }
                                                            arguments = J$.N(372641, 'arguments', arguments, true, false, false);
                                                            e = J$.N(372649, 'e', e, true, false, false);
                                                            J$.N(372657, 'ref', ref, false, false, false);
                                                            J$.N(372665, 'schemaPromise', schemaPromise, false, false, false);
                                                            removePromise = J$.N(372681, 'removePromise', J$.T(372673, removePromise, 12, false), true, false, false);
                                                            added = J$.N(372697, 'added', J$.T(372689, added, 12, false), true, false, false);
                                                            var ref = J$.W(371969, 'ref', J$.G(371961, J$.R(371953, 'e', e, false, false), 'missingSchema'), ref, false, false);
                                                            if (J$.C(25064, J$.F(371993, J$.R(371977, 'added', added, false, false), false)(J$.R(371985, 'ref', ref, false, false))))
                                                                throw J$.F(372057, J$.I(typeof Error === 'undefined' ? Error = J$.R(372001, 'Error', undefined, true, true) : Error = J$.R(372001, 'Error', Error, true, true)), true)(J$.B(78962, '+', J$.B(78954, '+', J$.B(78946, '+', J$.B(78938, '+', J$.T(372009, 'Schema ', 21, false), J$.R(372017, 'ref', ref, false, false)), J$.T(372025, ' is loaded but ', 21, false)), J$.G(372041, J$.R(372033, 'e', e, false, false), 'missingRef')), J$.T(372049, ' cannot be resolved', 21, false)));
                                                            var schemaPromise = J$.W(372097, 'schemaPromise', J$.G(372089, J$.G(372073, J$.R(372065, 'self', self, false, false), '_loadingSchemas'), J$.R(372081, 'ref', ref, false, false)), schemaPromise, false, false);
                                                            if (J$.C(25072, J$.U(78970, '!', J$.R(372105, 'schemaPromise', schemaPromise, false, false)))) {
                                                                schemaPromise = J$.W(372177, 'schemaPromise', J$.P(372169, J$.G(372121, J$.R(372113, 'self', self, false, false), '_loadingSchemas'), J$.R(372129, 'ref', ref, false, false), J$.M(372161, J$.G(372145, J$.R(372137, 'self', self, false, false), '_opts'), 'loadSchema', false)(J$.R(372153, 'ref', ref, false, false))), schemaPromise, false, false);
                                                                J$.M(372209, J$.R(372185, 'schemaPromise', schemaPromise, false, false), 'then', false)(J$.R(372193, 'removePromise', removePromise, false, false), J$.R(372201, 'removePromise', removePromise, false, false));
                                                            }
                                                            return J$.Rt(372489, J$.M(372481, J$.M(372417, J$.R(372217, 'schemaPromise', schemaPromise, false, false), 'then', false)(J$.T(372409, function (sch) {
                                                                jalangiLabel4:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(372385, arguments.callee, this, arguments);
                                                                            arguments = J$.N(372393, 'arguments', arguments, true, false, false);
                                                                            sch = J$.N(372401, 'sch', sch, true, false, false);
                                                                            if (J$.C(25088, J$.U(78978, '!', J$.F(372241, J$.R(372225, 'added', added, false, false), false)(J$.R(372233, 'ref', ref, false, false))))) {
                                                                                return J$.Rt(372377, J$.M(372369, J$.F(372265, J$.R(372249, 'loadMetaSchemaOf', loadMetaSchemaOf, false, false), false)(J$.R(372257, 'sch', sch, false, false)), 'then', false)(J$.T(372361, function () {
                                                                                    jalangiLabel3:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(372345, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(372353, 'arguments', arguments, true, false, false);
                                                                                                if (J$.C(25080, J$.U(78986, '!', J$.F(372289, J$.R(372273, 'added', added, false, false), false)(J$.R(372281, 'ref', ref, false, false)))))
                                                                                                    J$.M(372337, J$.R(372297, 'self', self, false, false), 'addSchema', false)(J$.R(372305, 'sch', sch, false, false), J$.R(372313, 'ref', ref, false, false), J$.T(372321, undefined, 24, false), J$.R(372329, 'meta', meta, false, false));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(372913, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(372921))
                                                                                                    continue jalangiLabel3;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false)));
                                                                            }
                                                                        } catch (J$e) {
                                                                            J$.Ex(372929, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(372937))
                                                                                continue jalangiLabel4;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'then', false)(J$.T(372473, function () {
                                                                jalangiLabel5:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(372457, arguments.callee, this, arguments);
                                                                            arguments = J$.N(372465, 'arguments', arguments, true, false, false);
                                                                            return J$.Rt(372449, J$.F(372441, J$.R(372425, '_compileAsync', _compileAsync, false, false), false)(J$.R(372433, 'schemaObj', schemaObj, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(372945, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(372953))
                                                                                continue jalangiLabel5;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(372993, J$e);
                                                        } finally {
                                                            if (J$.Fr(373001))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(372713, 'arguments', arguments, true, false, false);
                                            schemaObj = J$.N(372721, 'schemaObj', schemaObj, true, false, false);
                                            loadMissingSchema = J$.N(372737, 'loadMissingSchema', J$.T(372729, loadMissingSchema, 12, false), true, false, false);
                                            try {
                                                return J$.Rt(371881, J$.M(371873, J$.R(371857, 'self', self, false, false), '_compile', false)(J$.R(371865, 'schemaObj', schemaObj, false, false)));
                                            } catch (e) {
                                                J$.N(371945, 'e', e, false, false, true);
                                                if (J$.C(25056, J$.B(78930, 'instanceof', J$.R(371889, 'e', e, false, false), J$.R(371897, 'MissingRefError', MissingRefError, false, true))))
                                                    return J$.Rt(371929, J$.F(371921, J$.R(371905, 'loadMissingSchema', loadMissingSchema, false, false), false)(J$.R(371913, 'e', e, false, false)));
                                                throw J$.R(371937, 'e', e, false, false);
                                            }
                                        } catch (J$e) {
                                            J$.Ex(373009, J$e);
                                        } finally {
                                            if (J$.Fr(373017))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(372753, 'arguments', arguments, true, false, false);
                            schema = J$.N(372761, 'schema', schema, true, false, false);
                            meta = J$.N(372769, 'meta', meta, true, false, false);
                            callback = J$.N(372777, 'callback', callback, true, false, false);
                            J$.N(372785, 'self', self, false, false, false);
                            J$.N(372793, 'p', p, false, false, false);
                            loadMetaSchemaOf = J$.N(372809, 'loadMetaSchemaOf', J$.T(372801, loadMetaSchemaOf, 12, false), true, false, false);
                            _compileAsync = J$.N(372825, '_compileAsync', J$.T(372817, _compileAsync, 12, false), true, false, false);
                            var self = J$.W(371305, 'self', J$.R(371297, 'this', this, false, false), self, false, false);
                            if (J$.C(25008, J$.B(78898, '!=', J$.U(78890, 'typeof', J$.G(371329, J$.G(371321, J$.R(371313, 'this', this, false, false), '_opts'), 'loadSchema')), J$.T(371337, 'function', 21, false))))
                                throw J$.F(371361, J$.I(typeof Error === 'undefined' ? Error = J$.R(371345, 'Error', undefined, true, true) : Error = J$.R(371345, 'Error', Error, true, true)), true)(J$.T(371353, 'options.loadSchema should be a function', 21, false));
                            if (J$.C(25016, J$.B(78914, '==', J$.U(78906, 'typeof', J$.R(371369, 'meta', meta, false, false)), J$.T(371377, 'function', 21, false)))) {
                                callback = J$.W(371393, 'callback', J$.R(371385, 'meta', meta, false, false), callback, false, false);
                                meta = J$.W(371409, 'meta', J$.T(371401, undefined, 24, false), meta, false, false);
                            }
                            var p = J$.W(371577, 'p', J$.M(371569, J$.F(371433, J$.R(371417, 'loadMetaSchemaOf', loadMetaSchemaOf, false, false), false)(J$.R(371425, 'schema', schema, false, false)), 'then', false)(J$.T(371561, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(371537, arguments.callee, this, arguments);
                                            arguments = J$.N(371545, 'arguments', arguments, true, false, false);
                                            J$.N(371553, 'schemaObj', schemaObj, false, false, false);
                                            var schemaObj = J$.W(371481, 'schemaObj', J$.M(371473, J$.R(371441, 'self', self, false, false), '_addSchema', false)(J$.R(371449, 'schema', schema, false, false), J$.T(371457, undefined, 24, false), J$.R(371465, 'meta', meta, false, false)), schemaObj, false, false);
                                            return J$.Rt(371529, J$.C(25024, J$.G(371497, J$.R(371489, 'schemaObj', schemaObj, false, false), 'validate')) ? J$._() : J$.F(371521, J$.R(371505, '_compileAsync', _compileAsync, false, false), false)(J$.R(371513, 'schemaObj', schemaObj, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(372865, J$e);
                                        } finally {
                                            if (J$.Fr(372873))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), p, false, false);
                            if (J$.C(25032, J$.R(371585, 'callback', callback, false, false))) {
                                J$.M(371673, J$.R(371593, 'p', p, false, false), 'then', false)(J$.T(371657, function (v) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(371633, arguments.callee, this, arguments);
                                                arguments = J$.N(371641, 'arguments', arguments, true, false, false);
                                                v = J$.N(371649, 'v', v, true, false, false);
                                                J$.F(371625, J$.R(371601, 'callback', callback, false, false), false)(J$.T(371609, null, 25, false), J$.R(371617, 'v', v, false, false));
                                            } catch (J$e) {
                                                J$.Ex(372881, J$e);
                                            } finally {
                                                if (J$.Fr(372889))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.R(371665, 'callback', callback, false, false));
                            }
                            return J$.Rt(371689, J$.R(371681, 'p', p, false, false));
                        } catch (J$e) {
                            J$.Ex(373025, J$e);
                        } finally {
                            if (J$.Fr(373033))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(372841, 'MissingRefError', MissingRefError, false, false, false);
            compileAsync = J$.N(372857, 'compileAsync', J$.T(372849, compileAsync, 12, false), true, false, false);
            J$.T(371177, 'use strict', 21, false);
            J$.F(371201, J$.I(typeof require === 'undefined' ? require = J$.R(371185, 'require', undefined, true, true) : require = J$.R(371185, 'require', require, true, true)), false)(J$.T(371193, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(371225, J$.I(typeof require === 'undefined' ? require = J$.R(371209, 'require', undefined, true, true) : require = J$.R(371209, 'require', require, true, true)), false)(J$.T(371217, 'core-js/modules/es.promise', 21, false));
            var MissingRefError = J$.W(371265, 'MissingRefError', J$.G(371257, J$.F(371249, J$.I(typeof require === 'undefined' ? require = J$.R(371233, 'require', undefined, true, true) : require = J$.R(371233, 'require', require, true, true)), false)(J$.T(371241, './error_classes', 21, false)), 'MissingRef'), MissingRefError, false, true);
            J$.P(371289, J$.I(typeof module === 'undefined' ? module = J$.R(371273, 'module', undefined, true, true) : module = J$.R(371273, 'module', module, true, true)), 'exports', J$.R(371281, 'compileAsync', compileAsync, false, true));
        } catch (J$e) {
            J$.Ex(373041, J$e);
        } finally {
            if (J$.Sr(373049))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

