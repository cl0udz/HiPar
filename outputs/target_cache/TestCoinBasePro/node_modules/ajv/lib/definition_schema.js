J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(403201, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ajv/lib/definition_schema.js');
            J$.N(403209, 'metaSchema', metaSchema, false, false, false);
            J$.T(402777, 'use strict', 21, false);
            var metaSchema = J$.W(402809, 'metaSchema', J$.F(402801, J$.I(typeof require === 'undefined' ? require = J$.R(402785, 'require', undefined, true, true) : require = J$.R(402785, 'require', require, true, true)), false)(J$.T(402793, './refs/json-schema-draft-07.json', 21, false)), metaSchema, false, true);
            J$.P(403193, J$.I(typeof module === 'undefined' ? module = J$.R(402817, 'module', undefined, true, true) : module = J$.R(402817, 'module', module, true, true)), 'exports', J$.T(403185, {
                $id: J$.T(402825, 'https://github.com/epoberezkin/ajv/blob/master/lib/definition_schema.js', 21, false),
                definitions: J$.T(402857, { simpleTypes: J$.G(402849, J$.G(402841, J$.R(402833, 'metaSchema', metaSchema, false, true), 'definitions'), 'simpleTypes') }, 11, false),
                type: J$.T(402865, 'object', 21, false),
                dependencies: J$.T(402953, {
                    schema: J$.T(402881, [J$.T(402873, 'validate', 21, false)], 10, false),
                    $data: J$.T(402897, [J$.T(402889, 'validate', 21, false)], 10, false),
                    statements: J$.T(402913, [J$.T(402905, 'inline', 21, false)], 10, false),
                    valid: J$.T(402945, { not: J$.T(402937, { required: J$.T(402929, [J$.T(402921, 'macro', 21, false)], 10, false) }, 11, false) }, 11, false)
                }, 11, false),
                properties: J$.T(403177, {
                    type: J$.G(402977, J$.G(402969, J$.R(402961, 'metaSchema', metaSchema, false, true), 'properties'), 'type'),
                    schema: J$.T(402993, { type: J$.T(402985, 'boolean', 21, false) }, 11, false),
                    statements: J$.T(403009, { type: J$.T(403001, 'boolean', 21, false) }, 11, false),
                    dependencies: J$.T(403041, {
                        type: J$.T(403017, 'array', 21, false),
                        items: J$.T(403033, { type: J$.T(403025, 'string', 21, false) }, 11, false)
                    }, 11, false),
                    metaSchema: J$.T(403057, { type: J$.T(403049, 'object', 21, false) }, 11, false),
                    modifying: J$.T(403073, { type: J$.T(403065, 'boolean', 21, false) }, 11, false),
                    valid: J$.T(403089, { type: J$.T(403081, 'boolean', 21, false) }, 11, false),
                    $data: J$.T(403105, { type: J$.T(403097, 'boolean', 21, false) }, 11, false),
                    async: J$.T(403121, { type: J$.T(403113, 'boolean', 21, false) }, 11, false),
                    errors: J$.T(403169, {
                        anyOf: J$.T(403161, [
                            J$.T(403137, { type: J$.T(403129, 'boolean', 21, false) }, 11, false),
                            J$.T(403153, { 'const': J$.T(403145, 'full', 21, false) }, 11, false)
                        ], 10, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(403217, J$e);
        } finally {
            if (J$.Sr(403225))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

