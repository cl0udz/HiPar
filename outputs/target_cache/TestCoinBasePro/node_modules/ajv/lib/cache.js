J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(371065, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ajv/lib/cache.js');
            J$.N(371073, 'Cache', Cache, false, false, false);
            J$.T(370633, 'use strict', 21, false);
            var Cache = J$.W(370705, 'Cache', J$.P(370697, J$.I(typeof module === 'undefined' ? module = J$.R(370641, 'module', undefined, true, true) : module = J$.R(370641, 'module', module, true, true)), 'exports', J$.T(370689, function Cache() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(370673, arguments.callee, this, arguments);
                            arguments = J$.N(370681, 'arguments', arguments, true, false, false);
                            J$.P(370665, J$.R(370649, 'this', this, false, false), '_cache', J$.T(370657, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(371081, J$e);
                        } finally {
                            if (J$.Fr(371089))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), Cache, false, true);
            J$.P(370809, J$.G(370721, J$.R(370713, 'Cache', Cache, false, true), 'prototype'), 'put', J$.T(370801, function Cache_put(key, value) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(370769, arguments.callee, this, arguments);
                            arguments = J$.N(370777, 'arguments', arguments, true, false, false);
                            key = J$.N(370785, 'key', key, true, false, false);
                            value = J$.N(370793, 'value', value, true, false, false);
                            J$.P(370761, J$.G(370737, J$.R(370729, 'this', this, false, false), '_cache'), J$.R(370745, 'key', key, false, false), J$.R(370753, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(371097, J$e);
                        } finally {
                            if (J$.Fr(371105))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(370905, J$.G(370825, J$.R(370817, 'Cache', Cache, false, true), 'prototype'), 'get', J$.T(370897, function Cache_get(key) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(370873, arguments.callee, this, arguments);
                            arguments = J$.N(370881, 'arguments', arguments, true, false, false);
                            key = J$.N(370889, 'key', key, true, false, false);
                            return J$.Rt(370865, J$.G(370857, J$.G(370841, J$.R(370833, 'this', this, false, false), '_cache'), J$.R(370849, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(371113, J$e);
                        } finally {
                            if (J$.Fr(371121))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(370985, J$.G(370921, J$.R(370913, 'Cache', Cache, false, true), 'prototype'), 'del', J$.T(370977, function Cache_del(key) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(370953, arguments.callee, this, arguments);
                            arguments = J$.N(370961, 'arguments', arguments, true, false, false);
                            key = J$.N(370969, 'key', key, true, false, false);
                            J$.B(78882, 'delete', J$.G(370937, J$.R(370929, 'this', this, false, false), '_cache'), J$.R(370945, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(371129, J$e);
                        } finally {
                            if (J$.Fr(371137))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(371057, J$.G(371001, J$.R(370993, 'Cache', Cache, false, true), 'prototype'), 'clear', J$.T(371049, function Cache_clear() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(371033, arguments.callee, this, arguments);
                            arguments = J$.N(371041, 'arguments', arguments, true, false, false);
                            J$.P(371025, J$.R(371009, 'this', this, false, false), '_cache', J$.T(371017, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(371145, J$e);
                        } finally {
                            if (J$.Fr(371153))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(371161, J$e);
        } finally {
            if (J$.Sr(371169))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

