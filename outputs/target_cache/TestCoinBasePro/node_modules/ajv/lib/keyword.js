J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(503897, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ajv/lib/keyword.js');
            function addKeyword(keyword, definition) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(502977, arguments.callee, this, arguments);
                            function _addRule(keyword, dataType, definition) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(502889, arguments.callee, this, arguments);
                                            arguments = J$.N(502897, 'arguments', arguments, true, false, false);
                                            keyword = J$.N(502905, 'keyword', keyword, true, false, false);
                                            dataType = J$.N(502913, 'dataType', dataType, true, false, false);
                                            definition = J$.N(502921, 'definition', definition, true, false, false);
                                            J$.N(502929, 'ruleGroup', ruleGroup, false, false, false);
                                            J$.N(502937, 'i', i, false, false, false);
                                            J$.N(502945, 'rg', rg, false, false, false);
                                            J$.N(502953, 'rule', rule, false, false, false);
                                            var ruleGroup;
                                            for (var i = J$.W(502561, 'i', J$.T(502553, 0, 22, false), i, false, false); J$.C(34040, J$.B(111546, '<', J$.R(502569, 'i', i, false, false), J$.G(502585, J$.R(502577, 'RULES', RULES, false, false), 'length'))); J$.B(111570, '-', i = J$.W(502601, 'i', J$.B(111562, '+', J$.U(111554, '+', J$.R(502593, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                var rg = J$.W(502633, 'rg', J$.G(502625, J$.R(502609, 'RULES', RULES, false, false), J$.R(502617, 'i', i, false, false)), rg, false, false);
                                                if (J$.C(34032, J$.B(111578, '==', J$.G(502649, J$.R(502641, 'rg', rg, false, false), 'type'), J$.R(502657, 'dataType', dataType, false, false)))) {
                                                    ruleGroup = J$.W(502673, 'ruleGroup', J$.R(502665, 'rg', rg, false, false), ruleGroup, false, false);
                                                    break;
                                                }
                                            }
                                            if (J$.C(34048, J$.U(111586, '!', J$.R(502681, 'ruleGroup', ruleGroup, false, false)))) {
                                                ruleGroup = J$.W(502713, 'ruleGroup', J$.T(502705, {
                                                    type: J$.R(502689, 'dataType', dataType, false, false),
                                                    rules: J$.T(502697, [], 10, false)
                                                }, 11, false), ruleGroup, false, false);
                                                J$.M(502737, J$.R(502721, 'RULES', RULES, false, false), 'push', false)(J$.R(502729, 'ruleGroup', ruleGroup, false, false));
                                            }
                                            var rule = J$.W(502809, 'rule', J$.T(502801, {
                                                keyword: J$.R(502745, 'keyword', keyword, false, false),
                                                definition: J$.R(502753, 'definition', definition, false, false),
                                                custom: J$.T(502761, true, 23, false),
                                                code: J$.R(502769, 'customRuleCode', customRuleCode, false, true),
                                                'implements': J$.G(502793, J$.R(502777, 'definition', definition, false, false), J$.T(502785, 'implements', 21, false))
                                            }, 11, false), rule, false, false);
                                            J$.M(502841, J$.G(502825, J$.R(502817, 'ruleGroup', ruleGroup, false, false), 'rules'), 'push', false)(J$.R(502833, 'rule', rule, false, false));
                                            J$.P(502881, J$.G(502857, J$.R(502849, 'RULES', RULES, false, false), 'custom'), J$.R(502865, 'keyword', keyword, false, false), J$.R(502873, 'rule', rule, false, false));
                                        } catch (J$e) {
                                            J$.Ex(503993, J$e);
                                        } finally {
                                            if (J$.Fr(504001))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(502985, 'arguments', arguments, true, false, false);
                            keyword = J$.N(502993, 'keyword', keyword, true, false, false);
                            definition = J$.N(503001, 'definition', definition, true, false, false);
                            J$.N(503009, 'RULES', RULES, false, false, false);
                            J$.N(503017, 'dataType', dataType, false, false, false);
                            J$.N(503025, 'i', i, false, false, false);
                            J$.N(503033, 'metaSchema', metaSchema, false, false, false);
                            _addRule = J$.N(503049, '_addRule', J$.T(503041, _addRule, 12, false), true, false, false);
                            var RULES = J$.W(501929, 'RULES', J$.G(501921, J$.R(501913, 'this', this, false, false), 'RULES'), RULES, false, false);
                            if (J$.C(33968, J$.G(501961, J$.G(501945, J$.R(501937, 'RULES', RULES, false, false), 'keywords'), J$.R(501953, 'keyword', keyword, false, false))))
                                throw J$.F(502001, J$.I(typeof Error === 'undefined' ? Error = J$.R(501969, 'Error', undefined, true, true) : Error = J$.R(501969, 'Error', Error, true, true)), true)(J$.B(111482, '+', J$.B(111474, '+', J$.T(501977, 'Keyword ', 21, false), J$.R(501985, 'keyword', keyword, false, false)), J$.T(501993, ' is already defined', 21, false)));
                            if (J$.C(33976, J$.U(111490, '!', J$.M(502025, J$.R(502009, 'IDENTIFIER', IDENTIFIER, false, true), 'test', false)(J$.R(502017, 'keyword', keyword, false, false)))))
                                throw J$.F(502065, J$.I(typeof Error === 'undefined' ? Error = J$.R(502033, 'Error', undefined, true, true) : Error = J$.R(502033, 'Error', Error, true, true)), true)(J$.B(111506, '+', J$.B(111498, '+', J$.T(502041, 'Keyword ', 21, false), J$.R(502049, 'keyword', keyword, false, false)), J$.T(502057, ' is not a valid identifier', 21, false)));
                            if (J$.C(34024, J$.R(502073, 'definition', definition, false, false))) {
                                J$.M(502105, J$.R(502081, 'this', this, false, false), 'validateKeyword', false)(J$.R(502089, 'definition', definition, false, false), J$.T(502097, true, 23, false));
                                var dataType = J$.W(502129, 'dataType', J$.G(502121, J$.R(502113, 'definition', definition, false, false), 'type'), dataType, false, false);
                                if (J$.C(33992, J$.M(502153, J$.I(typeof Array === 'undefined' ? Array = J$.R(502137, 'Array', undefined, true, true) : Array = J$.R(502137, 'Array', Array, true, true)), 'isArray', false)(J$.R(502145, 'dataType', dataType, false, false)))) {
                                    for (var i = J$.W(502169, 'i', J$.T(502161, 0, 22, false), i, false, false); J$.C(33984, J$.B(111514, '<', J$.R(502177, 'i', i, false, false), J$.G(502193, J$.R(502185, 'dataType', dataType, false, false), 'length'))); J$.B(111538, '-', i = J$.W(502209, 'i', J$.B(111530, '+', J$.U(111522, '+', J$.R(502201, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        J$.F(502265, J$.R(502217, '_addRule', _addRule, false, false), false)(J$.R(502225, 'keyword', keyword, false, false), J$.G(502249, J$.R(502233, 'dataType', dataType, false, false), J$.R(502241, 'i', i, false, false)), J$.R(502257, 'definition', definition, false, false));
                                    }
                                } else {
                                    J$.F(502305, J$.R(502273, '_addRule', _addRule, false, false), false)(J$.R(502281, 'keyword', keyword, false, false), J$.R(502289, 'dataType', dataType, false, false), J$.R(502297, 'definition', definition, false, false));
                                }
                                var metaSchema = J$.W(502329, 'metaSchema', J$.G(502321, J$.R(502313, 'definition', definition, false, false), 'metaSchema'), metaSchema, false, false);
                                if (J$.C(34016, J$.R(502337, 'metaSchema', metaSchema, false, false))) {
                                    if (J$.C(34008, J$.C(34000, J$.G(502353, J$.R(502345, 'definition', definition, false, false), '$data')) ? J$.G(502377, J$.G(502369, J$.R(502361, 'this', this, false, false), '_opts'), '$data') : J$._())) {
                                        metaSchema = J$.W(502425, 'metaSchema', J$.T(502417, {
                                            anyOf: J$.T(502409, [
                                                J$.R(502385, 'metaSchema', metaSchema, false, false),
                                                J$.T(502401, { '$ref': J$.T(502393, 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#', 21, false) }, 11, false)
                                            ], 10, false)
                                        }, 11, false), metaSchema, false, false);
                                    }
                                    J$.P(502473, J$.R(502433, 'definition', definition, false, false), 'validateSchema', J$.M(502465, J$.R(502441, 'this', this, false, false), 'compile', false)(J$.R(502449, 'metaSchema', metaSchema, false, false), J$.T(502457, true, 23, false)));
                                }
                            }
                            J$.P(502545, J$.G(502489, J$.R(502481, 'RULES', RULES, false, false), 'keywords'), J$.R(502497, 'keyword', keyword, false, false), J$.P(502537, J$.G(502513, J$.R(502505, 'RULES', RULES, false, false), 'all'), J$.R(502521, 'keyword', keyword, false, false), J$.T(502529, true, 23, false)));
                            return J$.Rt(502969, J$.R(502961, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(504009, J$e);
                        } finally {
                            if (J$.Fr(504017))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getKeyword(keyword) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(503185, arguments.callee, this, arguments);
                            arguments = J$.N(503193, 'arguments', arguments, true, false, false);
                            keyword = J$.N(503201, 'keyword', keyword, true, false, false);
                            J$.N(503209, 'rule', rule, false, false, false);
                            var rule = J$.W(503097, 'rule', J$.G(503089, J$.G(503073, J$.G(503065, J$.R(503057, 'this', this, false, false), 'RULES'), 'custom'), J$.R(503081, 'keyword', keyword, false, false)), rule, false, false);
                            return J$.Rt(503177, J$.C(34064, J$.R(503105, 'rule', rule, false, false)) ? J$.G(503121, J$.R(503113, 'rule', rule, false, false), 'definition') : J$.C(34056, J$.G(503161, J$.G(503145, J$.G(503137, J$.R(503129, 'this', this, false, false), 'RULES'), 'keywords'), J$.R(503153, 'keyword', keyword, false, false))) ? J$._() : J$.T(503169, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(504025, J$e);
                        } finally {
                            if (J$.Fr(504033))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function removeKeyword(keyword) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(503553, arguments.callee, this, arguments);
                            arguments = J$.N(503561, 'arguments', arguments, true, false, false);
                            keyword = J$.N(503569, 'keyword', keyword, true, false, false);
                            J$.N(503577, 'RULES', RULES, false, false, false);
                            J$.N(503585, 'i', i, false, false, false);
                            J$.N(503593, 'rules', rules, false, false, false);
                            J$.N(503601, 'j', j, false, false, false);
                            var RULES = J$.W(503233, 'RULES', J$.G(503225, J$.R(503217, 'this', this, false, false), 'RULES'), RULES, false, false);
                            J$.B(111594, 'delete', J$.G(503249, J$.R(503241, 'RULES', RULES, false, false), 'keywords'), J$.R(503257, 'keyword', keyword, false, false));
                            J$.B(111602, 'delete', J$.G(503273, J$.R(503265, 'RULES', RULES, false, false), 'all'), J$.R(503281, 'keyword', keyword, false, false));
                            J$.B(111610, 'delete', J$.G(503297, J$.R(503289, 'RULES', RULES, false, false), 'custom'), J$.R(503305, 'keyword', keyword, false, false));
                            for (var i = J$.W(503321, 'i', J$.T(503313, 0, 22, false), i, false, false); J$.C(34088, J$.B(111618, '<', J$.R(503329, 'i', i, false, false), J$.G(503345, J$.R(503337, 'RULES', RULES, false, false), 'length'))); J$.B(111642, '-', i = J$.W(503361, 'i', J$.B(111634, '+', J$.U(111626, '+', J$.R(503353, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var rules = J$.W(503401, 'rules', J$.G(503393, J$.G(503385, J$.R(503369, 'RULES', RULES, false, false), J$.R(503377, 'i', i, false, false)), 'rules'), rules, false, false);
                                for (var j = J$.W(503417, 'j', J$.T(503409, 0, 22, false), j, false, false); J$.C(34080, J$.B(111650, '<', J$.R(503425, 'j', j, false, false), J$.G(503441, J$.R(503433, 'rules', rules, false, false), 'length'))); J$.B(111674, '-', j = J$.W(503457, 'j', J$.B(111666, '+', J$.U(111658, '+', J$.R(503449, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    if (J$.C(34072, J$.B(111682, '==', J$.G(503489, J$.G(503481, J$.R(503465, 'rules', rules, false, false), J$.R(503473, 'j', j, false, false)), 'keyword'), J$.R(503497, 'keyword', keyword, false, false)))) {
                                        J$.M(503529, J$.R(503505, 'rules', rules, false, false), 'splice', false)(J$.R(503513, 'j', j, false, false), J$.T(503521, 1, 22, false));
                                        break;
                                    }
                                }
                            }
                            return J$.Rt(503545, J$.R(503537, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(504041, J$e);
                        } finally {
                            if (J$.Fr(504049))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateKeyword(definition, throwError) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(503857, arguments.callee, this, arguments);
                            arguments = J$.N(503865, 'arguments', arguments, true, false, false);
                            definition = J$.N(503873, 'definition', definition, true, false, false);
                            throwError = J$.N(503881, 'throwError', throwError, true, false, false);
                            J$.N(503889, 'v', v, false, false, false);
                            J$.P(503625, J$.R(503609, 'validateKeyword', validateKeyword, false, true), 'errors', J$.T(503617, null, 25, false));
                            var v = J$.W(503697, 'v', J$.P(503689, J$.R(503633, 'this', this, false, false), '_validateKeyword', J$.C(34096, J$.G(503649, J$.R(503641, 'this', this, false, false), '_validateKeyword')) ? J$._() : J$.M(503681, J$.R(503657, 'this', this, false, false), 'compile', false)(J$.R(503665, 'definitionSchema', definitionSchema, false, true), J$.T(503673, true, 23, false))), v, false, false);
                            if (J$.C(34104, J$.F(503721, J$.R(503705, 'v', v, false, false), false)(J$.R(503713, 'definition', definition, false, false))))
                                return J$.Rt(503737, J$.T(503729, true, 23, false));
                            J$.P(503769, J$.R(503745, 'validateKeyword', validateKeyword, false, true), 'errors', J$.G(503761, J$.R(503753, 'v', v, false, false), 'errors'));
                            if (J$.C(34112, J$.R(503777, 'throwError', throwError, false, false)))
                                throw J$.F(503833, J$.I(typeof Error === 'undefined' ? Error = J$.R(503785, 'Error', undefined, true, true) : Error = J$.R(503785, 'Error', Error, true, true)), true)(J$.B(111690, '+', J$.T(503793, 'custom keyword definition is invalid: ', 21, false), J$.M(503825, J$.R(503801, 'this', this, false, false), 'errorsText', false)(J$.G(503817, J$.R(503809, 'v', v, false, false), 'errors'))));
                            else
                                return J$.Rt(503849, J$.T(503841, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(504057, J$e);
                        } finally {
                            if (J$.Fr(504065))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(503905, 'IDENTIFIER', IDENTIFIER, false, false, false);
            J$.N(503913, 'customRuleCode', customRuleCode, false, false, false);
            J$.N(503921, 'definitionSchema', definitionSchema, false, false, false);
            addKeyword = J$.N(503937, 'addKeyword', J$.T(503929, addKeyword, 12, false), true, false, false);
            getKeyword = J$.N(503953, 'getKeyword', J$.T(503945, getKeyword, 12, false), true, false, false);
            removeKeyword = J$.N(503969, 'removeKeyword', J$.T(503961, removeKeyword, 12, false), true, false, false);
            validateKeyword = J$.N(503985, 'validateKeyword', J$.T(503977, validateKeyword, 12, false), true, false, false);
            J$.T(501721, 'use strict', 21, false);
            J$.F(501745, J$.I(typeof require === 'undefined' ? require = J$.R(501729, 'require', undefined, true, true) : require = J$.R(501729, 'require', require, true, true)), false)(J$.T(501737, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(501769, J$.I(typeof require === 'undefined' ? require = J$.R(501753, 'require', undefined, true, true) : require = J$.R(501753, 'require', require, true, true)), false)(J$.T(501761, 'core-js/modules/es.array.splice', 21, false));
            var IDENTIFIER = J$.W(501785, 'IDENTIFIER', J$.T(501777, /^[a-z_$][a-z0-9_$-]*$/i, 14, false), IDENTIFIER, false, true);
            var customRuleCode = J$.W(501817, 'customRuleCode', J$.F(501809, J$.I(typeof require === 'undefined' ? require = J$.R(501793, 'require', undefined, true, true) : require = J$.R(501793, 'require', require, true, true)), false)(J$.T(501801, './dotjs/custom', 21, false)), customRuleCode, false, true);
            var definitionSchema = J$.W(501849, 'definitionSchema', J$.F(501841, J$.I(typeof require === 'undefined' ? require = J$.R(501825, 'require', undefined, true, true) : require = J$.R(501825, 'require', require, true, true)), false)(J$.T(501833, './definition_schema', 21, false)), definitionSchema, false, true);
            J$.P(501905, J$.I(typeof module === 'undefined' ? module = J$.R(501857, 'module', undefined, true, true) : module = J$.R(501857, 'module', module, true, true)), 'exports', J$.T(501897, {
                add: J$.R(501865, 'addKeyword', addKeyword, false, true),
                get: J$.R(501873, 'getKeyword', getKeyword, false, true),
                remove: J$.R(501881, 'removeKeyword', removeKeyword, false, true),
                validate: J$.R(501889, 'validateKeyword', validateKeyword, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(504073, J$e);
        } finally {
            if (J$.Sr(504081))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

