J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(402729, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ajv/lib/data.js');
            J$.N(402737, 'KEYWORDS', KEYWORDS, false, false, false);
            J$.T(401921, 'use strict', 21, false);
            J$.F(401945, J$.I(typeof require === 'undefined' ? require = J$.R(401929, 'require', undefined, true, true) : require = J$.R(401929, 'require', require, true, true)), false)(J$.T(401937, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(401969, J$.I(typeof require === 'undefined' ? require = J$.R(401953, 'require', undefined, true, true) : require = J$.R(401953, 'require', require, true, true)), false)(J$.T(401961, 'core-js/modules/es.string.split', 21, false));
            var KEYWORDS = J$.W(402137, 'KEYWORDS', J$.T(402129, [
                J$.T(401977, 'multipleOf', 21, false),
                J$.T(401985, 'maximum', 21, false),
                J$.T(401993, 'exclusiveMaximum', 21, false),
                J$.T(402001, 'minimum', 21, false),
                J$.T(402009, 'exclusiveMinimum', 21, false),
                J$.T(402017, 'maxLength', 21, false),
                J$.T(402025, 'minLength', 21, false),
                J$.T(402033, 'pattern', 21, false),
                J$.T(402041, 'additionalItems', 21, false),
                J$.T(402049, 'maxItems', 21, false),
                J$.T(402057, 'minItems', 21, false),
                J$.T(402065, 'uniqueItems', 21, false),
                J$.T(402073, 'maxProperties', 21, false),
                J$.T(402081, 'minProperties', 21, false),
                J$.T(402089, 'required', 21, false),
                J$.T(402097, 'additionalProperties', 21, false),
                J$.T(402105, 'enum', 21, false),
                J$.T(402113, 'format', 21, false),
                J$.T(402121, 'const', 21, false)
            ], 10, false), KEYWORDS, false, true);
            J$.P(402721, J$.I(typeof module === 'undefined' ? module = J$.R(402145, 'module', undefined, true, true) : module = J$.R(402145, 'module', module, true, true)), 'exports', J$.T(402713, function (metaSchema, keywordsJsonPointers) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(402633, arguments.callee, this, arguments);
                            arguments = J$.N(402641, 'arguments', arguments, true, false, false);
                            metaSchema = J$.N(402649, 'metaSchema', metaSchema, true, false, false);
                            keywordsJsonPointers = J$.N(402657, 'keywordsJsonPointers', keywordsJsonPointers, true, false, false);
                            J$.N(402665, 'i', i, false, false, false);
                            J$.N(402673, 'segments', segments, false, false, false);
                            J$.N(402681, 'keywords', keywords, false, false, false);
                            J$.N(402689, 'j', j, false, false, false);
                            J$.N(402697, 'key', key, false, false, false);
                            J$.N(402705, 'schema', schema, false, false, false);
                            for (var i = J$.W(402161, 'i', J$.T(402153, 0, 22, false), i, false, false); J$.C(26936, J$.B(81754, '<', J$.R(402169, 'i', i, false, false), J$.G(402185, J$.R(402177, 'keywordsJsonPointers', keywordsJsonPointers, false, false), 'length'))); J$.B(81778, '-', i = J$.W(402201, 'i', J$.B(81770, '+', J$.U(81762, '+', J$.R(402193, 'i', i, false, false)), 1), i, false, false), 1)) {
                                metaSchema = J$.W(402249, 'metaSchema', J$.M(402241, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(402209, 'JSON', undefined, true, true) : JSON = J$.R(402209, 'JSON', JSON, true, true)), 'parse', false)(J$.M(402233, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(402217, 'JSON', undefined, true, true) : JSON = J$.R(402217, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(402225, 'metaSchema', metaSchema, false, false))), metaSchema, false, false);
                                var segments = J$.W(402297, 'segments', J$.M(402289, J$.G(402273, J$.R(402257, 'keywordsJsonPointers', keywordsJsonPointers, false, false), J$.R(402265, 'i', i, false, false)), 'split', false)(J$.T(402281, '/', 21, false)), segments, false, false);
                                var keywords = J$.W(402313, 'keywords', J$.R(402305, 'metaSchema', metaSchema, false, false), keywords, false, false);
                                var j;
                                for (j = J$.W(402329, 'j', J$.T(402321, 1, 22, false), j, false, false); J$.C(26912, J$.B(81786, '<', J$.R(402337, 'j', j, false, false), J$.G(402353, J$.R(402345, 'segments', segments, false, false), 'length'))); J$.B(81810, '-', j = J$.W(402369, 'j', J$.B(81802, '+', J$.U(81794, '+', J$.R(402361, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    keywords = J$.W(402417, 'keywords', J$.G(402409, J$.R(402377, 'keywords', keywords, false, false), J$.G(402401, J$.R(402385, 'segments', segments, false, false), J$.R(402393, 'j', j, false, false))), keywords, false, false);
                                }
                                for (j = J$.W(402433, 'j', J$.T(402425, 0, 22, false), j, false, false); J$.C(26928, J$.B(81818, '<', J$.R(402441, 'j', j, false, false), J$.G(402457, J$.R(402449, 'KEYWORDS', KEYWORDS, false, true), 'length'))); J$.B(81842, '-', j = J$.W(402473, 'j', J$.B(81834, '+', J$.U(81826, '+', J$.R(402465, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    var key = J$.W(402505, 'key', J$.G(402497, J$.R(402481, 'KEYWORDS', KEYWORDS, false, true), J$.R(402489, 'j', j, false, false)), key, false, false);
                                    var schema = J$.W(402537, 'schema', J$.G(402529, J$.R(402513, 'keywords', keywords, false, false), J$.R(402521, 'key', key, false, false)), schema, false, false);
                                    if (J$.C(26920, J$.R(402545, 'schema', schema, false, false))) {
                                        J$.P(402609, J$.R(402553, 'keywords', keywords, false, false), J$.R(402561, 'key', key, false, false), J$.T(402601, {
                                            anyOf: J$.T(402593, [
                                                J$.R(402569, 'schema', schema, false, false),
                                                J$.T(402585, { $ref: J$.T(402577, 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#', 21, false) }, 11, false)
                                            ], 10, false)
                                        }, 11, false));
                                    }
                                }
                            }
                            return J$.Rt(402625, J$.R(402617, 'metaSchema', metaSchema, false, false));
                        } catch (J$e) {
                            J$.Ex(402745, J$e);
                        } finally {
                            if (J$.Fr(402753))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(402761, J$e);
        } finally {
            if (J$.Sr(402769))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

