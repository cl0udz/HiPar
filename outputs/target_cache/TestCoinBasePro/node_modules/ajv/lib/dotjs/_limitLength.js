J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(411689, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ajv/lib/dotjs/_limitLength.js');
            J$.T(409745, 'use strict', 21, false);
            J$.P(411681, J$.I(typeof module === 'undefined' ? module = J$.R(409753, 'module', undefined, true, true) : module = J$.R(409753, 'module', module, true, true)), 'exports', J$.T(411673, function generate__limitLength(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(411521, arguments.callee, this, arguments);
                            arguments = J$.N(411529, 'arguments', arguments, true, false, false);
                            it = J$.N(411537, 'it', it, true, false, false);
                            $keyword = J$.N(411545, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(411553, '$ruleType', $ruleType, true, false, false);
                            J$.N(411561, 'out', out, false, false, false);
                            J$.N(411569, '$lvl', $lvl, false, false, false);
                            J$.N(411577, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(411585, '$schema', $schema, false, false, false);
                            J$.N(411593, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(411601, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(411609, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(411617, '$errorKeyword', $errorKeyword, false, false, false);
                            J$.N(411625, '$data', $data, false, false, false);
                            J$.N(411633, '$isData', $isData, false, false, false);
                            J$.N(411641, '$schemaValue', $schemaValue, false, false, false);
                            J$.N(411649, '$op', $op, false, false, false);
                            J$.N(411657, '$$outStack', $$outStack, false, false, false);
                            J$.N(411665, '__err', __err, false, false, false);
                            var out = J$.W(409769, 'out', J$.T(409761, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(409793, '$lvl', J$.G(409785, J$.R(409777, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(409817, '$dataLvl', J$.G(409809, J$.R(409801, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(409857, '$schema', J$.G(409849, J$.G(409833, J$.R(409825, 'it', it, false, false), 'schema'), J$.R(409841, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(409913, '$schemaPath', J$.B(84338, '+', J$.G(409873, J$.R(409865, 'it', it, false, false), 'schemaPath'), J$.M(409905, J$.G(409889, J$.R(409881, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(409897, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(409953, '$errSchemaPath', J$.B(84354, '+', J$.B(84346, '+', J$.G(409929, J$.R(409921, 'it', it, false, false), 'errSchemaPath'), J$.T(409937, '/', 21, false)), J$.R(409945, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(409985, '$breakOnError', J$.U(84362, '!', J$.G(409977, J$.G(409969, J$.R(409961, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $errorKeyword;
                            var $data = J$.W(410017, '$data', J$.B(84370, '+', J$.T(409993, 'data', 21, false), J$.C(27424, J$.R(410001, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(410009, '', 21, false)), $data, false, false);
                            var $isData = J$.W(410073, '$isData', J$.C(27440, J$.C(27432, J$.G(410041, J$.G(410033, J$.R(410025, 'it', it, false, false), 'opts'), '$data')) ? J$.R(410049, '$schema', $schema, false, false) : J$._()) ? J$.G(410065, J$.R(410057, '$schema', $schema, false, false), '$data') : J$._(), $isData, false, false), $schemaValue;
                            if (J$.C(27448, J$.R(410081, '$isData', $isData, false, false))) {
                                out = J$.W(410193, 'out', J$.B(84410, '+', J$.R(410185, 'out', out, false, false), J$.B(84402, '+', J$.B(84394, '+', J$.B(84386, '+', J$.B(84378, '+', J$.T(410089, ' var schema', 21, false), J$.R(410097, '$lvl', $lvl, false, false)), J$.T(410105, ' = ', 21, false)), J$.M(410169, J$.G(410121, J$.R(410113, 'it', it, false, false), 'util'), 'getData', false)(J$.G(410137, J$.R(410129, '$schema', $schema, false, false), '$data'), J$.R(410145, '$dataLvl', $dataLvl, false, false), J$.G(410161, J$.R(410153, 'it', it, false, false), 'dataPathArr'))), J$.T(410177, '; ', 21, false))), out, false, false);
                                $schemaValue = J$.W(410217, '$schemaValue', J$.B(84418, '+', J$.T(410201, 'schema', 21, false), J$.R(410209, '$lvl', $lvl, false, false)), $schemaValue, false, false);
                            } else {
                                $schemaValue = J$.W(410233, '$schemaValue', J$.R(410225, '$schema', $schema, false, false), $schemaValue, false, false);
                            }
                            var $op = J$.W(410273, '$op', J$.C(27456, J$.B(84426, '==', J$.R(410241, '$keyword', $keyword, false, false), J$.T(410249, 'maxLength', 21, false))) ? J$.T(410257, '>', 21, false) : J$.T(410265, '<', 21, false), $op, false, false);
                            out = J$.W(410297, 'out', J$.B(84434, '+', J$.R(410289, 'out', out, false, false), J$.T(410281, 'if ( ', 21, false)), out, false, false);
                            if (J$.C(27464, J$.R(410305, '$isData', $isData, false, false))) {
                                out = J$.W(410361, 'out', J$.B(84474, '+', J$.R(410353, 'out', out, false, false), J$.B(84466, '+', J$.B(84458, '+', J$.B(84450, '+', J$.B(84442, '+', J$.T(410313, ' (', 21, false), J$.R(410321, '$schemaValue', $schemaValue, false, false)), J$.T(410329, ' !== undefined && typeof ', 21, false)), J$.R(410337, '$schemaValue', $schemaValue, false, false)), J$.T(410345, ' != \'number\') || ', 21, false))), out, false, false);
                            }
                            if (J$.C(27472, J$.B(84482, '===', J$.G(410385, J$.G(410377, J$.R(410369, 'it', it, false, false), 'opts'), 'unicode'), J$.T(410393, false, 23, false)))) {
                                out = J$.W(410433, 'out', J$.B(84506, '+', J$.R(410425, 'out', out, false, false), J$.B(84498, '+', J$.B(84490, '+', J$.T(410401, ' ', 21, false), J$.R(410409, '$data', $data, false, false)), J$.T(410417, '.length ', 21, false))), out, false, false);
                            } else {
                                out = J$.W(410473, 'out', J$.B(84530, '+', J$.R(410465, 'out', out, false, false), J$.B(84522, '+', J$.B(84514, '+', J$.T(410441, ' ucs2length(', 21, false), J$.R(410449, '$data', $data, false, false)), J$.T(410457, ') ', 21, false))), out, false, false);
                            }
                            out = J$.W(410529, 'out', J$.B(84570, '+', J$.R(410521, 'out', out, false, false), J$.B(84562, '+', J$.B(84554, '+', J$.B(84546, '+', J$.B(84538, '+', J$.T(410481, ' ', 21, false), J$.R(410489, '$op', $op, false, false)), J$.T(410497, ' ', 21, false)), J$.R(410505, '$schemaValue', $schemaValue, false, false)), J$.T(410513, ') { ', 21, false))), out, false, false);
                            var $errorKeyword = J$.W(410545, '$errorKeyword', J$.R(410537, '$keyword', $keyword, false, false), $errorKeyword, false, false);
                            var $$outStack = J$.W(410569, '$$outStack', J$.C(27480, J$.R(410553, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(410561, [], 10, false), $$outStack, false, false);
                            J$.M(410593, J$.R(410577, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(410585, 'out', out, false, false));
                            out = J$.W(410609, 'out', J$.T(410601, '', 21, false), out, false, false);
                            if (J$.C(27536, J$.B(84578, '!==', J$.G(410625, J$.R(410617, 'it', it, false, false), 'createErrors'), J$.T(410633, false, 23, false)))) {
                                out = J$.W(410761, 'out', J$.B(84650, '+', J$.R(410753, 'out', out, false, false), J$.B(84642, '+', J$.B(84634, '+', J$.B(84626, '+', J$.B(84618, '+', J$.B(84610, '+', J$.B(84602, '+', J$.B(84594, '+', J$.B(84586, '+', J$.T(410641, ' { keyword: \'', 21, false), J$.C(27488, J$.R(410649, '$errorKeyword', $errorKeyword, false, false)) ? J$._() : J$.T(410657, '_limitLength', 21, false)), J$.T(410665, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(410681, J$.R(410673, 'it', it, false, false), 'errorPath')), J$.T(410689, ' , schemaPath: ', 21, false)), J$.M(410721, J$.G(410705, J$.R(410697, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(410713, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(410729, ' , params: { limit: ', 21, false)), J$.R(410737, '$schemaValue', $schemaValue, false, false)), J$.T(410745, ' } ', 21, false))), out, false, false);
                                if (J$.C(27512, J$.B(84658, '!==', J$.G(410785, J$.G(410777, J$.R(410769, 'it', it, false, false), 'opts'), 'messages'), J$.T(410793, false, 23, false)))) {
                                    out = J$.W(410817, 'out', J$.B(84666, '+', J$.R(410809, 'out', out, false, false), J$.T(410801, ' , message: \'should NOT be ', 21, false)), out, false, false);
                                    if (J$.C(27496, J$.B(84674, '==', J$.R(410825, '$keyword', $keyword, false, false), J$.T(410833, 'maxLength', 21, false)))) {
                                        out = J$.W(410857, 'out', J$.B(84682, '+', J$.R(410849, 'out', out, false, false), J$.T(410841, 'longer', 21, false)), out, false, false);
                                    } else {
                                        out = J$.W(410881, 'out', J$.B(84690, '+', J$.R(410873, 'out', out, false, false), J$.T(410865, 'shorter', 21, false)), out, false, false);
                                    }
                                    out = J$.W(410905, 'out', J$.B(84698, '+', J$.R(410897, 'out', out, false, false), J$.T(410889, ' than ', 21, false)), out, false, false);
                                    if (J$.C(27504, J$.R(410913, '$isData', $isData, false, false))) {
                                        out = J$.W(410953, 'out', J$.B(84722, '+', J$.R(410945, 'out', out, false, false), J$.B(84714, '+', J$.B(84706, '+', J$.T(410921, '\' + ', 21, false), J$.R(410929, '$schemaValue', $schemaValue, false, false)), J$.T(410937, ' + \'', 21, false))), out, false, false);
                                    } else {
                                        out = J$.W(410985, 'out', J$.B(84738, '+', J$.R(410977, 'out', out, false, false), J$.B(84730, '+', J$.T(410961, '', 21, false), J$.R(410969, '$schema', $schema, false, false))), out, false, false);
                                    }
                                    out = J$.W(411009, 'out', J$.B(84746, '+', J$.R(411001, 'out', out, false, false), J$.T(410993, ' characters\' ', 21, false)), out, false, false);
                                }
                                if (J$.C(27528, J$.G(411033, J$.G(411025, J$.R(411017, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(411057, 'out', J$.B(84754, '+', J$.R(411049, 'out', out, false, false), J$.T(411041, ' , schema:  ', 21, false)), out, false, false);
                                    if (J$.C(27520, J$.R(411065, '$isData', $isData, false, false))) {
                                        out = J$.W(411097, 'out', J$.B(84770, '+', J$.R(411089, 'out', out, false, false), J$.B(84762, '+', J$.T(411073, 'validate.schema', 21, false), J$.R(411081, '$schemaPath', $schemaPath, false, false))), out, false, false);
                                    } else {
                                        out = J$.W(411129, 'out', J$.B(84786, '+', J$.R(411121, 'out', out, false, false), J$.B(84778, '+', J$.T(411105, '', 21, false), J$.R(411113, '$schema', $schema, false, false))), out, false, false);
                                    }
                                    out = J$.W(411193, 'out', J$.B(84826, '+', J$.R(411185, 'out', out, false, false), J$.B(84818, '+', J$.B(84810, '+', J$.B(84802, '+', J$.B(84794, '+', J$.T(411137, '         , parentSchema: validate.schema', 21, false), J$.G(411153, J$.R(411145, 'it', it, false, false), 'schemaPath')), J$.T(411161, ' , data: ', 21, false)), J$.R(411169, '$data', $data, false, false)), J$.T(411177, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(411217, 'out', J$.B(84834, '+', J$.R(411209, 'out', out, false, false), J$.T(411201, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(411241, 'out', J$.B(84842, '+', J$.R(411233, 'out', out, false, false), J$.T(411225, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(411257, '__err', J$.R(411249, 'out', out, false, false), __err, false, false);
                            out = J$.W(411281, 'out', J$.M(411273, J$.R(411265, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(27560, J$.C(27544, J$.U(84850, '!', J$.G(411297, J$.R(411289, 'it', it, false, false), 'compositeRule'))) ? J$.R(411305, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(27552, J$.G(411321, J$.R(411313, 'it', it, false, false), 'async'))) {
                                    out = J$.W(411361, 'out', J$.B(84874, '+', J$.R(411353, 'out', out, false, false), J$.B(84866, '+', J$.B(84858, '+', J$.T(411329, ' throw new ValidationError([', 21, false), J$.R(411337, '__err', __err, false, false)), J$.T(411345, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(411401, 'out', J$.B(84898, '+', J$.R(411393, 'out', out, false, false), J$.B(84890, '+', J$.B(84882, '+', J$.T(411369, ' validate.errors = [', 21, false), J$.R(411377, '__err', __err, false, false)), J$.T(411385, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(411441, 'out', J$.B(84922, '+', J$.R(411433, 'out', out, false, false), J$.B(84914, '+', J$.B(84906, '+', J$.T(411409, ' var err = ', 21, false), J$.R(411417, '__err', __err, false, false)), J$.T(411425, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(411465, 'out', J$.B(84930, '+', J$.R(411457, 'out', out, false, false), J$.T(411449, '} ', 21, false)), out, false, false);
                            if (J$.C(27568, J$.R(411473, '$breakOnError', $breakOnError, false, false))) {
                                out = J$.W(411497, 'out', J$.B(84938, '+', J$.R(411489, 'out', out, false, false), J$.T(411481, ' else { ', 21, false)), out, false, false);
                            }
                            return J$.Rt(411513, J$.R(411505, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(411697, J$e);
                        } finally {
                            if (J$.Fr(411705))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(411713, J$e);
        } finally {
            if (J$.Sr(411721))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

