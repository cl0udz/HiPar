J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(462001, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ajv/lib/dotjs/pattern.js');
            J$.T(460113, 'use strict', 21, false);
            J$.P(461993, J$.I(typeof module === 'undefined' ? module = J$.R(460121, 'module', undefined, true, true) : module = J$.R(460121, 'module', module, true, true)), 'exports', J$.T(461985, function generate_pattern(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(461841, arguments.callee, this, arguments);
                            arguments = J$.N(461849, 'arguments', arguments, true, false, false);
                            it = J$.N(461857, 'it', it, true, false, false);
                            $keyword = J$.N(461865, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(461873, '$ruleType', $ruleType, true, false, false);
                            J$.N(461881, 'out', out, false, false, false);
                            J$.N(461889, '$lvl', $lvl, false, false, false);
                            J$.N(461897, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(461905, '$schema', $schema, false, false, false);
                            J$.N(461913, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(461921, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(461929, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(461937, '$data', $data, false, false, false);
                            J$.N(461945, '$isData', $isData, false, false, false);
                            J$.N(461953, '$schemaValue', $schemaValue, false, false, false);
                            J$.N(461961, '$regexp', $regexp, false, false, false);
                            J$.N(461969, '$$outStack', $$outStack, false, false, false);
                            J$.N(461977, '__err', __err, false, false, false);
                            var out = J$.W(460137, 'out', J$.T(460129, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(460161, '$lvl', J$.G(460153, J$.R(460145, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(460185, '$dataLvl', J$.G(460177, J$.R(460169, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(460225, '$schema', J$.G(460217, J$.G(460201, J$.R(460193, 'it', it, false, false), 'schema'), J$.R(460209, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(460281, '$schemaPath', J$.B(98970, '+', J$.G(460241, J$.R(460233, 'it', it, false, false), 'schemaPath'), J$.M(460273, J$.G(460257, J$.R(460249, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(460265, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(460321, '$errSchemaPath', J$.B(98986, '+', J$.B(98978, '+', J$.G(460297, J$.R(460289, 'it', it, false, false), 'errSchemaPath'), J$.T(460305, '/', 21, false)), J$.R(460313, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(460353, '$breakOnError', J$.U(98994, '!', J$.G(460345, J$.G(460337, J$.R(460329, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(460385, '$data', J$.B(99002, '+', J$.T(460361, 'data', 21, false), J$.C(30600, J$.R(460369, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(460377, '', 21, false)), $data, false, false);
                            var $isData = J$.W(460441, '$isData', J$.C(30616, J$.C(30608, J$.G(460409, J$.G(460401, J$.R(460393, 'it', it, false, false), 'opts'), '$data')) ? J$.R(460417, '$schema', $schema, false, false) : J$._()) ? J$.G(460433, J$.R(460425, '$schema', $schema, false, false), '$data') : J$._(), $isData, false, false), $schemaValue;
                            if (J$.C(30624, J$.R(460449, '$isData', $isData, false, false))) {
                                out = J$.W(460561, 'out', J$.B(99042, '+', J$.R(460553, 'out', out, false, false), J$.B(99034, '+', J$.B(99026, '+', J$.B(99018, '+', J$.B(99010, '+', J$.T(460457, ' var schema', 21, false), J$.R(460465, '$lvl', $lvl, false, false)), J$.T(460473, ' = ', 21, false)), J$.M(460537, J$.G(460489, J$.R(460481, 'it', it, false, false), 'util'), 'getData', false)(J$.G(460505, J$.R(460497, '$schema', $schema, false, false), '$data'), J$.R(460513, '$dataLvl', $dataLvl, false, false), J$.G(460529, J$.R(460521, 'it', it, false, false), 'dataPathArr'))), J$.T(460545, '; ', 21, false))), out, false, false);
                                $schemaValue = J$.W(460585, '$schemaValue', J$.B(99050, '+', J$.T(460569, 'schema', 21, false), J$.R(460577, '$lvl', $lvl, false, false)), $schemaValue, false, false);
                            } else {
                                $schemaValue = J$.W(460601, '$schemaValue', J$.R(460593, '$schema', $schema, false, false), $schemaValue, false, false);
                            }
                            var $regexp = J$.W(460665, '$regexp', J$.C(30632, J$.R(460609, '$isData', $isData, false, false)) ? J$.B(99066, '+', J$.B(99058, '+', J$.T(460617, '(new RegExp(', 21, false), J$.R(460625, '$schemaValue', $schemaValue, false, false)), J$.T(460633, '))', 21, false)) : J$.M(460657, J$.R(460641, 'it', it, false, false), 'usePattern', false)(J$.R(460649, '$schema', $schema, false, false)), $regexp, false, false);
                            out = J$.W(460689, 'out', J$.B(99074, '+', J$.R(460681, 'out', out, false, false), J$.T(460673, 'if ( ', 21, false)), out, false, false);
                            if (J$.C(30640, J$.R(460697, '$isData', $isData, false, false))) {
                                out = J$.W(460753, 'out', J$.B(99114, '+', J$.R(460745, 'out', out, false, false), J$.B(99106, '+', J$.B(99098, '+', J$.B(99090, '+', J$.B(99082, '+', J$.T(460705, ' (', 21, false), J$.R(460713, '$schemaValue', $schemaValue, false, false)), J$.T(460721, ' !== undefined && typeof ', 21, false)), J$.R(460729, '$schemaValue', $schemaValue, false, false)), J$.T(460737, ' != \'string\') || ', 21, false))), out, false, false);
                            }
                            out = J$.W(460809, 'out', J$.B(99154, '+', J$.R(460801, 'out', out, false, false), J$.B(99146, '+', J$.B(99138, '+', J$.B(99130, '+', J$.B(99122, '+', J$.T(460761, ' !', 21, false), J$.R(460769, '$regexp', $regexp, false, false)), J$.T(460777, '.test(', 21, false)), J$.R(460785, '$data', $data, false, false)), J$.T(460793, ') ) {   ', 21, false))), out, false, false);
                            var $$outStack = J$.W(460833, '$$outStack', J$.C(30648, J$.R(460817, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(460825, [], 10, false), $$outStack, false, false);
                            J$.M(460857, J$.R(460841, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(460849, 'out', out, false, false));
                            out = J$.W(460873, 'out', J$.T(460865, '', 21, false), out, false, false);
                            if (J$.C(30696, J$.B(99162, '!==', J$.G(460889, J$.R(460881, 'it', it, false, false), 'createErrors'), J$.T(460897, false, 23, false)))) {
                                out = J$.W(461001, 'out', J$.B(99218, '+', J$.R(460993, 'out', out, false, false), J$.B(99210, '+', J$.B(99202, '+', J$.B(99194, '+', J$.B(99186, '+', J$.B(99178, '+', J$.B(99170, '+', J$.T(460905, ' { keyword: \'', 21, false), J$.T(460913, 'pattern', 21, false)), J$.T(460921, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(460937, J$.R(460929, 'it', it, false, false), 'errorPath')), J$.T(460945, ' , schemaPath: ', 21, false)), J$.M(460977, J$.G(460961, J$.R(460953, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(460969, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(460985, ' , params: { pattern:  ', 21, false))), out, false, false);
                                if (J$.C(30656, J$.R(461009, '$isData', $isData, false, false))) {
                                    out = J$.W(461041, 'out', J$.B(99234, '+', J$.R(461033, 'out', out, false, false), J$.B(99226, '+', J$.T(461017, '', 21, false), J$.R(461025, '$schemaValue', $schemaValue, false, false))), out, false, false);
                                } else {
                                    out = J$.W(461097, 'out', J$.B(99250, '+', J$.R(461089, 'out', out, false, false), J$.B(99242, '+', J$.T(461049, '', 21, false), J$.M(461081, J$.G(461065, J$.R(461057, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(461073, '$schema', $schema, false, false)))), out, false, false);
                                }
                                out = J$.W(461121, 'out', J$.B(99258, '+', J$.R(461113, 'out', out, false, false), J$.T(461105, '  } ', 21, false)), out, false, false);
                                if (J$.C(30672, J$.B(99266, '!==', J$.G(461145, J$.G(461137, J$.R(461129, 'it', it, false, false), 'opts'), 'messages'), J$.T(461153, false, 23, false)))) {
                                    out = J$.W(461177, 'out', J$.B(99274, '+', J$.R(461169, 'out', out, false, false), J$.T(461161, ' , message: \'should match pattern "', 21, false)), out, false, false);
                                    if (J$.C(30664, J$.R(461185, '$isData', $isData, false, false))) {
                                        out = J$.W(461225, 'out', J$.B(99298, '+', J$.R(461217, 'out', out, false, false), J$.B(99290, '+', J$.B(99282, '+', J$.T(461193, '\' + ', 21, false), J$.R(461201, '$schemaValue', $schemaValue, false, false)), J$.T(461209, ' + \'', 21, false))), out, false, false);
                                    } else {
                                        out = J$.W(461281, 'out', J$.B(99314, '+', J$.R(461273, 'out', out, false, false), J$.B(99306, '+', J$.T(461233, '', 21, false), J$.M(461265, J$.G(461249, J$.R(461241, 'it', it, false, false), 'util'), 'escapeQuotes', false)(J$.R(461257, '$schema', $schema, false, false)))), out, false, false);
                                    }
                                    out = J$.W(461305, 'out', J$.B(99322, '+', J$.R(461297, 'out', out, false, false), J$.T(461289, '"\' ', 21, false)), out, false, false);
                                }
                                if (J$.C(30688, J$.G(461329, J$.G(461321, J$.R(461313, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(461353, 'out', J$.B(99330, '+', J$.R(461345, 'out', out, false, false), J$.T(461337, ' , schema:  ', 21, false)), out, false, false);
                                    if (J$.C(30680, J$.R(461361, '$isData', $isData, false, false))) {
                                        out = J$.W(461393, 'out', J$.B(99346, '+', J$.R(461385, 'out', out, false, false), J$.B(99338, '+', J$.T(461369, 'validate.schema', 21, false), J$.R(461377, '$schemaPath', $schemaPath, false, false))), out, false, false);
                                    } else {
                                        out = J$.W(461449, 'out', J$.B(99362, '+', J$.R(461441, 'out', out, false, false), J$.B(99354, '+', J$.T(461401, '', 21, false), J$.M(461433, J$.G(461417, J$.R(461409, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(461425, '$schema', $schema, false, false)))), out, false, false);
                                    }
                                    out = J$.W(461513, 'out', J$.B(99402, '+', J$.R(461505, 'out', out, false, false), J$.B(99394, '+', J$.B(99386, '+', J$.B(99378, '+', J$.B(99370, '+', J$.T(461457, '         , parentSchema: validate.schema', 21, false), J$.G(461473, J$.R(461465, 'it', it, false, false), 'schemaPath')), J$.T(461481, ' , data: ', 21, false)), J$.R(461489, '$data', $data, false, false)), J$.T(461497, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(461537, 'out', J$.B(99410, '+', J$.R(461529, 'out', out, false, false), J$.T(461521, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(461561, 'out', J$.B(99418, '+', J$.R(461553, 'out', out, false, false), J$.T(461545, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(461577, '__err', J$.R(461569, 'out', out, false, false), __err, false, false);
                            out = J$.W(461601, 'out', J$.M(461593, J$.R(461585, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(30720, J$.C(30704, J$.U(99426, '!', J$.G(461617, J$.R(461609, 'it', it, false, false), 'compositeRule'))) ? J$.R(461625, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(30712, J$.G(461641, J$.R(461633, 'it', it, false, false), 'async'))) {
                                    out = J$.W(461681, 'out', J$.B(99450, '+', J$.R(461673, 'out', out, false, false), J$.B(99442, '+', J$.B(99434, '+', J$.T(461649, ' throw new ValidationError([', 21, false), J$.R(461657, '__err', __err, false, false)), J$.T(461665, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(461721, 'out', J$.B(99474, '+', J$.R(461713, 'out', out, false, false), J$.B(99466, '+', J$.B(99458, '+', J$.T(461689, ' validate.errors = [', 21, false), J$.R(461697, '__err', __err, false, false)), J$.T(461705, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(461761, 'out', J$.B(99498, '+', J$.R(461753, 'out', out, false, false), J$.B(99490, '+', J$.B(99482, '+', J$.T(461729, ' var err = ', 21, false), J$.R(461737, '__err', __err, false, false)), J$.T(461745, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(461785, 'out', J$.B(99506, '+', J$.R(461777, 'out', out, false, false), J$.T(461769, '} ', 21, false)), out, false, false);
                            if (J$.C(30728, J$.R(461793, '$breakOnError', $breakOnError, false, false))) {
                                out = J$.W(461817, 'out', J$.B(99514, '+', J$.R(461809, 'out', out, false, false), J$.T(461801, ' else { ', 21, false)), out, false, false);
                            }
                            return J$.Rt(461833, J$.R(461825, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(462009, J$e);
                        } finally {
                            if (J$.Fr(462017))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(462025, J$e);
        } finally {
            if (J$.Sr(462033))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

