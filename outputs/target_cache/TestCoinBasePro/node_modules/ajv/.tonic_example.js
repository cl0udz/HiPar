J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(409, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/ajv/.tonic_example.js');
            function test(data) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(377, arguments.callee, this, arguments);
                            arguments = J$.N(385, 'arguments', arguments, true, false, false);
                            data = J$.N(393, 'data', data, true, false, false);
                            J$.N(401, 'valid', valid, false, false, false);
                            var valid = J$.W(281, 'valid', J$.F(273, J$.R(257, 'validate', validate, false, true), false)(J$.R(265, 'data', data, false, false)), valid, false, false);
                            if (J$.C(8, J$.R(289, 'valid', valid, false, false)))
                                J$.M(313, J$.I(typeof console === 'undefined' ? console = J$.R(297, 'console', undefined, true, true) : console = J$.R(297, 'console', console, true, true)), 'log', false)(J$.T(305, 'Valid!', 21, false));
                            else
                                J$.M(369, J$.I(typeof console === 'undefined' ? console = J$.R(321, 'console', undefined, true, true) : console = J$.R(321, 'console', console, true, true)), 'log', false)(J$.B(10, '+', J$.T(329, 'Invalid: ', 21, false), J$.M(361, J$.R(337, 'ajv', ajv, false, true), 'errorsText', false)(J$.G(353, J$.R(345, 'validate', validate, false, true), 'errors'))));
                        } catch (J$e) {
                            J$.Ex(465, J$e);
                        } finally {
                            if (J$.Fr(473))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(417, 'Ajv', Ajv, false, false, false);
            J$.N(425, 'ajv', ajv, false, false, false);
            J$.N(433, 'schema', schema, false, false, false);
            J$.N(441, 'validate', validate, false, false, false);
            test = J$.N(457, 'test', J$.T(449, test, 12, false), true, false, false);
            var Ajv = J$.W(33, 'Ajv', J$.F(25, J$.I(typeof require === 'undefined' ? require = J$.R(9, 'require', undefined, true, true) : require = J$.R(9, 'require', require, true, true)), false)(J$.T(17, 'ajv', 21, false)), Ajv, false, true);
            var ajv = J$.W(73, 'ajv', J$.F(65, J$.R(41, 'Ajv', Ajv, false, true), true)(J$.T(57, { allErrors: J$.T(49, true, 23, false) }, 11, false)), ajv, false, true);
            var schema = J$.W(137, 'schema', J$.T(129, {
                'properties': J$.T(121, {
                    'foo': J$.T(89, { 'type': J$.T(81, 'string', 21, false) }, 11, false),
                    'bar': J$.T(113, {
                        'type': J$.T(97, 'number', 21, false),
                        'maximum': J$.T(105, 3, 22, false)
                    }, 11, false)
                }, 11, false)
            }, 11, false), schema, false, true);
            var validate = J$.W(169, 'validate', J$.M(161, J$.R(145, 'ajv', ajv, false, true), 'compile', false)(J$.R(153, 'schema', schema, false, true)), validate, false, true);
            J$.F(209, J$.R(177, 'test', test, false, true), false)(J$.T(201, {
                'foo': J$.T(185, 'abc', 21, false),
                'bar': J$.T(193, 2, 22, false)
            }, 11, false));
            J$.F(249, J$.R(217, 'test', test, false, true), false)(J$.T(241, {
                'foo': J$.T(225, 2, 22, false),
                'bar': J$.T(233, 4, 22, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(481, J$e);
        } finally {
            if (J$.Sr(489))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

