J$.noInstrEval = false;
jalangiLabel23:
    while (true) {
        try {
            J$.Se(1570161, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/sshpk/lib/utils.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1560489, arguments.callee, this, arguments);
                            arguments = J$.N(1560497, 'arguments', arguments, true, false, false);
                            obj = J$.N(1560505, 'obj', obj, true, false, false);
                            if (J$.C(80152, J$.C(80112, J$.B(188002, '===', J$.U(187994, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1560225, 'Symbol', undefined, true, true) : Symbol = J$.R(1560225, 'Symbol', Symbol, true, true))), J$.T(1560233, 'function', 21, false))) ? J$.B(188018, '===', J$.U(188010, 'typeof', J$.G(1560249, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1560241, 'Symbol', undefined, true, true) : Symbol = J$.R(1560241, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(1560257, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(1560313, '_typeof', J$.T(1560305, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(1560281, arguments.callee, this, arguments);
                                                arguments = J$.N(1560289, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1560297, 'obj', obj, true, false, false);
                                                return J$.Rt(1560273, J$.U(188026, 'typeof', J$.R(1560265, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1570593, J$e);
                                            } finally {
                                                if (J$.Fr(1570601))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(1560449, '_typeof', J$.T(1560441, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1560417, arguments.callee, this, arguments);
                                                arguments = J$.N(1560425, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1560433, 'obj', obj, true, false, false);
                                                return J$.Rt(1560409, J$.C(80144, J$.C(80136, J$.C(80128, J$.C(80120, J$.R(1560321, 'obj', obj, false, false)) ? J$.B(188042, '===', J$.U(188034, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1560329, 'Symbol', undefined, true, true) : Symbol = J$.R(1560329, 'Symbol', Symbol, true, true))), J$.T(1560337, 'function', 21, false)) : J$._()) ? J$.B(188050, '===', J$.G(1560353, J$.R(1560345, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1560361, 'Symbol', undefined, true, true) : Symbol = J$.R(1560361, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(188058, '!==', J$.R(1560369, 'obj', obj, false, false), J$.G(1560385, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1560377, 'Symbol', undefined, true, true) : Symbol = J$.R(1560377, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(1560393, 'symbol', 21, false) : J$.U(188066, 'typeof', J$.R(1560401, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1570609, J$e);
                                            } finally {
                                                if (J$.Fr(1570617))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(1560481, J$.F(1560473, J$.R(1560457, '_typeof', _typeof, false, true), false)(J$.R(1560465, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(1570625, J$e);
                        } finally {
                            if (J$.Fr(1570633))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isCompatible(obj, klass, needVer) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1561665, arguments.callee, this, arguments);
                            arguments = J$.N(1561673, 'arguments', arguments, true, false, false);
                            obj = J$.N(1561681, 'obj', obj, true, false, false);
                            klass = J$.N(1561689, 'klass', klass, true, false, false);
                            needVer = J$.N(1561697, 'needVer', needVer, true, false, false);
                            J$.N(1561705, 'proto', proto, false, false, false);
                            J$.N(1561713, 'depth', depth, false, false, false);
                            J$.N(1561721, 'ver', ver, false, false, false);
                            if (J$.C(80168, J$.C(80160, J$.B(188074, '===', J$.R(1561033, 'obj', obj, false, false), J$.T(1561041, null, 25, false))) ? J$._() : J$.B(188082, '!==', J$.F(1561065, J$.R(1561049, '_typeof', _typeof, false, true), false)(J$.R(1561057, 'obj', obj, false, false)), J$.T(1561073, 'object', 21, false))))
                                return J$.Rt(1561089, J$.T(1561081, false, 23, false));
                            if (J$.C(80176, J$.B(188090, '===', J$.R(1561097, 'needVer', needVer, false, false), J$.T(1561105, undefined, 24, false))))
                                needVer = J$.W(1561137, 'needVer', J$.G(1561129, J$.G(1561121, J$.R(1561113, 'klass', klass, false, false), 'prototype'), '_sshpkApiVersion'), needVer, false, false);
                            if (J$.C(80192, J$.C(80184, J$.B(188098, 'instanceof', J$.R(1561145, 'obj', obj, false, false), J$.R(1561153, 'klass', klass, false, false))) ? J$.B(188106, '==', J$.G(1561193, J$.G(1561177, J$.G(1561169, J$.R(1561161, 'klass', klass, false, false), 'prototype'), '_sshpkApiVersion'), J$.T(1561185, 0, 22, false)), J$.G(1561217, J$.R(1561201, 'needVer', needVer, false, false), J$.T(1561209, 0, 22, false))) : J$._()))
                                return J$.Rt(1561233, J$.T(1561225, true, 23, false));
                            var proto = J$.W(1561265, 'proto', J$.M(1561257, J$.I(typeof Object === 'undefined' ? Object = J$.R(1561241, 'Object', undefined, true, true) : Object = J$.R(1561241, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(1561249, 'obj', obj, false, false)), proto, false, false);
                            var depth = J$.W(1561281, 'depth', J$.T(1561273, 0, 22, false), depth, false, false);
                            while (J$.C(80216, J$.B(188114, '!==', J$.G(1561305, J$.G(1561297, J$.R(1561289, 'proto', proto, false, false), 'constructor'), 'name'), J$.G(1561321, J$.R(1561313, 'klass', klass, false, false), 'name')))) {
                                proto = J$.W(1561353, 'proto', J$.M(1561345, J$.I(typeof Object === 'undefined' ? Object = J$.R(1561329, 'Object', undefined, true, true) : Object = J$.R(1561329, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(1561337, 'proto', proto, false, false)), proto, false, false);
                                if (J$.C(80208, J$.C(80200, J$.U(188122, '!', J$.R(1561361, 'proto', proto, false, false))) ? J$._() : J$.B(188146, '>', depth = J$.W(1561377, 'depth', J$.B(188138, '+', J$.U(188130, '+', J$.R(1561369, 'depth', depth, false, false)), 1), depth, false, false), J$.R(1561385, 'MAX_CLASS_DEPTH', MAX_CLASS_DEPTH, false, true))))
                                    return J$.Rt(1561401, J$.T(1561393, false, 23, false));
                            }
                            if (J$.C(80224, J$.B(188154, '!==', J$.G(1561425, J$.G(1561417, J$.R(1561409, 'proto', proto, false, false), 'constructor'), 'name'), J$.G(1561441, J$.R(1561433, 'klass', klass, false, false), 'name'))))
                                return J$.Rt(1561457, J$.T(1561449, false, 23, false));
                            var ver = J$.W(1561481, 'ver', J$.G(1561473, J$.R(1561465, 'proto', proto, false, false), '_sshpkApiVersion'), ver, false, false);
                            if (J$.C(80232, J$.B(188162, '===', J$.R(1561489, 'ver', ver, false, false), J$.T(1561497, undefined, 24, false))))
                                ver = J$.W(1561529, 'ver', J$.M(1561521, J$.R(1561505, 'klass', klass, false, false), '_oldVersionDetect', false)(J$.R(1561513, 'obj', obj, false, false)), ver, false, false);
                            if (J$.C(80248, J$.C(80240, J$.B(188170, '!=', J$.G(1561553, J$.R(1561537, 'ver', ver, false, false), J$.T(1561545, 0, 22, false)), J$.G(1561577, J$.R(1561561, 'needVer', needVer, false, false), J$.T(1561569, 0, 22, false)))) ? J$._() : J$.B(188178, '<', J$.G(1561601, J$.R(1561585, 'ver', ver, false, false), J$.T(1561593, 1, 22, false)), J$.G(1561625, J$.R(1561609, 'needVer', needVer, false, false), J$.T(1561617, 1, 22, false)))))
                                return J$.Rt(1561641, J$.T(1561633, false, 23, false));
                            return J$.Rt(1561657, J$.T(1561649, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(1570641, J$e);
                        } finally {
                            if (J$.Fr(1570649))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function assertCompatible(obj, klass, needVer, name) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1562569, arguments.callee, this, arguments);
                            arguments = J$.N(1562577, 'arguments', arguments, true, false, false);
                            obj = J$.N(1562585, 'obj', obj, true, false, false);
                            klass = J$.N(1562593, 'klass', klass, true, false, false);
                            needVer = J$.N(1562601, 'needVer', needVer, true, false, false);
                            name = J$.N(1562609, 'name', name, true, false, false);
                            J$.N(1562617, 'proto', proto, false, false, false);
                            J$.N(1562625, 'depth', depth, false, false, false);
                            J$.N(1562633, 'ver', ver, false, false, false);
                            if (J$.C(80256, J$.B(188186, '===', J$.R(1561729, 'name', name, false, false), J$.T(1561737, undefined, 24, false))))
                                name = J$.W(1561753, 'name', J$.T(1561745, 'object', 21, false), name, false, false);
                            J$.M(1561793, J$.R(1561761, 'assert', assert, false, true), 'ok', false)(J$.R(1561769, 'obj', obj, false, false), J$.B(188194, '+', J$.R(1561777, 'name', name, false, false), J$.T(1561785, ' must not be null', 21, false)));
                            J$.M(1561833, J$.R(1561801, 'assert', assert, false, true), 'object', false)(J$.R(1561809, 'obj', obj, false, false), J$.B(188202, '+', J$.R(1561817, 'name', name, false, false), J$.T(1561825, ' must be an object', 21, false)));
                            if (J$.C(80264, J$.B(188210, '===', J$.R(1561841, 'needVer', needVer, false, false), J$.T(1561849, undefined, 24, false))))
                                needVer = J$.W(1561881, 'needVer', J$.G(1561873, J$.G(1561865, J$.R(1561857, 'klass', klass, false, false), 'prototype'), '_sshpkApiVersion'), needVer, false, false);
                            if (J$.C(80280, J$.C(80272, J$.B(188218, 'instanceof', J$.R(1561889, 'obj', obj, false, false), J$.R(1561897, 'klass', klass, false, false))) ? J$.B(188226, '==', J$.G(1561937, J$.G(1561921, J$.G(1561913, J$.R(1561905, 'klass', klass, false, false), 'prototype'), '_sshpkApiVersion'), J$.T(1561929, 0, 22, false)), J$.G(1561961, J$.R(1561945, 'needVer', needVer, false, false), J$.T(1561953, 0, 22, false))) : J$._()))
                                return J$.Rt(1561969, undefined);
                            var proto = J$.W(1562001, 'proto', J$.M(1561993, J$.I(typeof Object === 'undefined' ? Object = J$.R(1561977, 'Object', undefined, true, true) : Object = J$.R(1561977, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(1561985, 'obj', obj, false, false)), proto, false, false);
                            var depth = J$.W(1562017, 'depth', J$.T(1562009, 0, 22, false), depth, false, false);
                            while (J$.C(80296, J$.B(188234, '!==', J$.G(1562041, J$.G(1562033, J$.R(1562025, 'proto', proto, false, false), 'constructor'), 'name'), J$.G(1562057, J$.R(1562049, 'klass', klass, false, false), 'name')))) {
                                proto = J$.W(1562089, 'proto', J$.M(1562081, J$.I(typeof Object === 'undefined' ? Object = J$.R(1562065, 'Object', undefined, true, true) : Object = J$.R(1562065, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(1562073, 'proto', proto, false, false)), proto, false, false);
                                J$.M(1562177, J$.R(1562097, 'assert', assert, false, true), 'ok', false)(J$.C(80288, J$.R(1562105, 'proto', proto, false, false)) ? J$.B(188258, '<=', depth = J$.W(1562121, 'depth', J$.B(188250, '+', J$.U(188242, '+', J$.R(1562113, 'depth', depth, false, false)), 1), depth, false, false), J$.R(1562129, 'MAX_CLASS_DEPTH', MAX_CLASS_DEPTH, false, true)) : J$._(), J$.B(188282, '+', J$.B(188274, '+', J$.B(188266, '+', J$.R(1562137, 'name', name, false, false), J$.T(1562145, ' must be a ', 21, false)), J$.G(1562161, J$.R(1562153, 'klass', klass, false, false), 'name')), J$.T(1562169, ' instance', 21, false)));
                            }
                            J$.M(1562273, J$.R(1562185, 'assert', assert, false, true), 'strictEqual', false)(J$.G(1562209, J$.G(1562201, J$.R(1562193, 'proto', proto, false, false), 'constructor'), 'name'), J$.G(1562225, J$.R(1562217, 'klass', klass, false, false), 'name'), J$.B(188306, '+', J$.B(188298, '+', J$.B(188290, '+', J$.R(1562233, 'name', name, false, false), J$.T(1562241, ' must be a ', 21, false)), J$.G(1562257, J$.R(1562249, 'klass', klass, false, false), 'name')), J$.T(1562265, ' instance', 21, false)));
                            var ver = J$.W(1562297, 'ver', J$.G(1562289, J$.R(1562281, 'proto', proto, false, false), '_sshpkApiVersion'), ver, false, false);
                            if (J$.C(80304, J$.B(188314, '===', J$.R(1562305, 'ver', ver, false, false), J$.T(1562313, undefined, 24, false))))
                                ver = J$.W(1562345, 'ver', J$.M(1562337, J$.R(1562321, 'klass', klass, false, false), '_oldVersionDetect', false)(J$.R(1562329, 'obj', obj, false, false)), ver, false, false);
                            J$.M(1562561, J$.R(1562353, 'assert', assert, false, true), 'ok', false)(J$.C(80312, J$.B(188322, '==', J$.G(1562377, J$.R(1562361, 'ver', ver, false, false), J$.T(1562369, 0, 22, false)), J$.G(1562401, J$.R(1562385, 'needVer', needVer, false, false), J$.T(1562393, 0, 22, false)))) ? J$.B(188330, '>=', J$.G(1562425, J$.R(1562409, 'ver', ver, false, false), J$.T(1562417, 1, 22, false)), J$.G(1562449, J$.R(1562433, 'needVer', needVer, false, false), J$.T(1562441, 1, 22, false))) : J$._(), J$.B(188386, '+', J$.B(188378, '+', J$.B(188370, '+', J$.B(188362, '+', J$.B(188354, '+', J$.B(188346, '+', J$.B(188338, '+', J$.R(1562457, 'name', name, false, false), J$.T(1562465, ' must be compatible with ', 21, false)), J$.G(1562481, J$.R(1562473, 'klass', klass, false, false), 'name')), J$.T(1562489, ' klass ', 21, false)), J$.T(1562497, 'version ', 21, false)), J$.G(1562521, J$.R(1562505, 'needVer', needVer, false, false), J$.T(1562513, 0, 22, false))), J$.T(1562529, '.', 21, false)), J$.G(1562553, J$.R(1562537, 'needVer', needVer, false, false), J$.T(1562545, 1, 22, false))));
                        } catch (J$e) {
                            J$.Ex(1570657, J$e);
                        } finally {
                            if (J$.Fr(1570665))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function opensslKeyDeriv(cipher, salt, passphrase, count) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1563441, arguments.callee, this, arguments);
                            arguments = J$.N(1563449, 'arguments', arguments, true, false, false);
                            cipher = J$.N(1563457, 'cipher', cipher, true, false, false);
                            salt = J$.N(1563465, 'salt', salt, true, false, false);
                            passphrase = J$.N(1563473, 'passphrase', passphrase, true, false, false);
                            count = J$.N(1563481, 'count', count, true, false, false);
                            J$.N(1563489, 'clen', clen, false, false, false);
                            J$.N(1563497, 'D', D, false, false, false);
                            J$.N(1563505, 'D_prev', D_prev, false, false, false);
                            J$.N(1563513, 'bufs', bufs, false, false, false);
                            J$.N(1563521, 'material', material, false, false, false);
                            J$.N(1563529, 'j', j, false, false, false);
                            J$.M(1562769, J$.R(1562745, 'assert', assert, false, true), 'buffer', false)(J$.R(1562753, 'salt', salt, false, false), J$.T(1562761, 'salt', 21, false));
                            J$.M(1562801, J$.R(1562777, 'assert', assert, false, true), 'buffer', false)(J$.R(1562785, 'passphrase', passphrase, false, false), J$.T(1562793, 'passphrase', 21, false));
                            J$.M(1562833, J$.R(1562809, 'assert', assert, false, true), 'number', false)(J$.R(1562817, 'count', count, false, false), J$.T(1562825, 'iteration count', 21, false));
                            var clen = J$.W(1562865, 'clen', J$.G(1562857, J$.R(1562841, 'CIPHER_LEN', CIPHER_LEN, false, true), J$.R(1562849, 'cipher', cipher, false, false)), clen, false, false);
                            J$.M(1562897, J$.R(1562873, 'assert', assert, false, true), 'object', false)(J$.R(1562881, 'clen', clen, false, false), J$.T(1562889, 'supported cipher', 21, false));
                            salt = J$.W(1562937, 'salt', J$.M(1562929, J$.R(1562905, 'salt', salt, false, false), 'slice', false)(J$.T(1562913, 0, 22, false), J$.R(1562921, 'PKCS5_SALT_LEN', PKCS5_SALT_LEN, false, true)), salt, false, false);
                            var D, D_prev, bufs;
                            var material = J$.W(1562969, 'material', J$.M(1562961, J$.R(1562945, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(1562953, 0, 22, false)), material, false, false);
                            while (J$.C(80336, J$.B(188402, '<', J$.G(1562985, J$.R(1562977, 'material', material, false, false), 'length'), J$.B(188394, '+', J$.G(1563001, J$.R(1562993, 'clen', clen, false, false), 'key'), J$.G(1563017, J$.R(1563009, 'clen', clen, false, false), 'iv'))))) {
                                bufs = J$.W(1563033, 'bufs', J$.T(1563025, [], 10, false), bufs, false, false);
                                if (J$.C(80320, J$.R(1563041, 'D_prev', D_prev, false, false)))
                                    J$.M(1563065, J$.R(1563049, 'bufs', bufs, false, false), 'push', false)(J$.R(1563057, 'D_prev', D_prev, false, false));
                                J$.M(1563089, J$.R(1563073, 'bufs', bufs, false, false), 'push', false)(J$.R(1563081, 'passphrase', passphrase, false, false));
                                J$.M(1563113, J$.R(1563097, 'bufs', bufs, false, false), 'push', false)(J$.R(1563105, 'salt', salt, false, false));
                                D = J$.W(1563145, 'D', J$.M(1563137, J$.R(1563121, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(1563129, 'bufs', bufs, false, false)), D, false, false);
                                for (var j = J$.W(1563161, 'j', J$.T(1563153, 0, 22, false), j, false, false); J$.C(80328, J$.B(188410, '<', J$.R(1563169, 'j', j, false, false), J$.R(1563177, 'count', count, false, false))); j = J$.W(1563193, 'j', J$.B(188426, '+', J$.U(188418, '+', J$.R(1563185, 'j', j, false, false)), 1), j, false, false)) {
                                    D = J$.W(1563249, 'D', J$.M(1563241, J$.M(1563233, J$.M(1563217, J$.R(1563201, 'crypto', crypto, false, true), 'createHash', false)(J$.T(1563209, 'md5', 21, false)), 'update', false)(J$.R(1563225, 'D', D, false, false)), 'digest', false)(), D, false, false);
                                }
                                material = J$.W(1563297, 'material', J$.M(1563289, J$.R(1563257, 'Buffer', Buffer, false, true), 'concat', false)(J$.T(1563281, [
                                    J$.R(1563265, 'material', material, false, false),
                                    J$.R(1563273, 'D', D, false, false)
                                ], 10, false)), material, false, false);
                                D_prev = J$.W(1563313, 'D_prev', J$.R(1563305, 'D', D, false, false), D_prev, false, false);
                            }
                            return J$.Rt(1563433, J$.T(1563425, {
                                key: J$.M(1563353, J$.R(1563321, 'material', material, false, false), 'slice', false)(J$.T(1563329, 0, 22, false), J$.G(1563345, J$.R(1563337, 'clen', clen, false, false), 'key')),
                                iv: J$.M(1563417, J$.R(1563361, 'material', material, false, false), 'slice', false)(J$.G(1563377, J$.R(1563369, 'clen', clen, false, false), 'key'), J$.B(188434, '+', J$.G(1563393, J$.R(1563385, 'clen', clen, false, false), 'key'), J$.G(1563409, J$.R(1563401, 'clen', clen, false, false), 'iv')))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1570673, J$e);
                        } finally {
                            if (J$.Fr(1570681))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pbkdf2(hashAlg, salt, iterations, size, passphrase) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1564289, arguments.callee, this, arguments);
                            function T(I) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(1564225, arguments.callee, this, arguments);
                                            arguments = J$.N(1564233, 'arguments', arguments, true, false, false);
                                            I = J$.N(1564241, 'I', I, true, false, false);
                                            J$.N(1564249, 'hmac', hmac, false, false, false);
                                            J$.N(1564257, 'Ti', Ti, false, false, false);
                                            J$.N(1564265, 'Uc', Uc, false, false, false);
                                            J$.N(1564273, 'c', c, false, false, false);
                                            J$.N(1564281, 'x', x, false, false, false);
                                            J$.M(1563865, J$.R(1563825, 'hkey', hkey, false, false), 'writeUInt32BE', false)(J$.R(1563833, 'I', I, false, false), J$.B(188490, '-', J$.G(1563849, J$.R(1563841, 'hkey', hkey, false, false), 'length'), J$.T(1563857, 4, 22, false)));
                                            var hmac = J$.W(1563905, 'hmac', J$.M(1563897, J$.R(1563873, 'crypto', crypto, false, true), 'createHmac', false)(J$.R(1563881, 'hashAlg', hashAlg, false, false), J$.R(1563889, 'passphrase', passphrase, false, false)), hmac, false, false);
                                            J$.M(1563929, J$.R(1563913, 'hmac', hmac, false, false), 'update', false)(J$.R(1563921, 'hkey', hkey, false, false));
                                            var Ti = J$.W(1563953, 'Ti', J$.M(1563945, J$.R(1563937, 'hmac', hmac, false, false), 'digest', false)(), Ti, false, false);
                                            var Uc = J$.W(1563969, 'Uc', J$.R(1563961, 'Ti', Ti, false, false), Uc, false, false);
                                            var c = J$.W(1563985, 'c', J$.T(1563977, 1, 22, false), c, false, false);
                                            while (J$.C(80360, J$.B(188522, '<', J$.B(188514, '-', c = J$.W(1564001, 'c', J$.B(188506, '+', J$.U(188498, '+', J$.R(1563993, 'c', c, false, false)), 1), c, false, false), 1), J$.R(1564009, 'iterations', iterations, false, false)))) {
                                                hmac = J$.W(1564049, 'hmac', J$.M(1564041, J$.R(1564017, 'crypto', crypto, false, true), 'createHmac', false)(J$.R(1564025, 'hashAlg', hashAlg, false, false), J$.R(1564033, 'passphrase', passphrase, false, false)), hmac, false, false);
                                                J$.M(1564073, J$.R(1564057, 'hmac', hmac, false, false), 'update', false)(J$.R(1564065, 'Uc', Uc, false, false));
                                                Uc = J$.W(1564097, 'Uc', J$.M(1564089, J$.R(1564081, 'hmac', hmac, false, false), 'digest', false)(), Uc, false, false);
                                                for (var x = J$.W(1564113, 'x', J$.T(1564105, 0, 22, false), x, false, false); J$.C(80352, J$.B(188530, '<', J$.R(1564121, 'x', x, false, false), J$.G(1564137, J$.R(1564129, 'Ti', Ti, false, false), 'length'))); x = J$.W(1564153, 'x', J$.B(188546, '+', J$.U(188538, '+', J$.R(1564145, 'x', x, false, false)), 1), x, false, false)) {
                                                    J$.A(1564201, J$.R(1564161, 'Ti', Ti, false, false), J$.R(1564169, 'x', x, false, false), '^')(J$.G(1564193, J$.R(1564177, 'Uc', Uc, false, false), J$.R(1564185, 'x', x, false, false)));
                                                }
                                            }
                                            return J$.Rt(1564217, J$.R(1564209, 'Ti', Ti, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1570689, J$e);
                                        } finally {
                                            if (J$.Fr(1570697))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1564297, 'arguments', arguments, true, false, false);
                            hashAlg = J$.N(1564305, 'hashAlg', hashAlg, true, false, false);
                            salt = J$.N(1564313, 'salt', salt, true, false, false);
                            iterations = J$.N(1564321, 'iterations', iterations, true, false, false);
                            size = J$.N(1564329, 'size', size, true, false, false);
                            passphrase = J$.N(1564337, 'passphrase', passphrase, true, false, false);
                            J$.N(1564345, 'hkey', hkey, false, false, false);
                            J$.N(1564353, 'gen', gen, false, false, false);
                            J$.N(1564361, 'ts', ts, false, false, false);
                            J$.N(1564369, 'i', i, false, false, false);
                            J$.N(1564377, 't', t, false, false, false);
                            T = J$.N(1564393, 'T', J$.T(1564385, T, 12, false), true, false, false);
                            var hkey = J$.W(1563577, 'hkey', J$.M(1563569, J$.R(1563537, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(188442, '+', J$.G(1563553, J$.R(1563545, 'salt', salt, false, false), 'length'), J$.T(1563561, 4, 22, false))), hkey, false, false);
                            J$.M(1563601, J$.R(1563585, 'salt', salt, false, false), 'copy', false)(J$.R(1563593, 'hkey', hkey, false, false));
                            var gen = J$.W(1563625, 'gen', J$.T(1563609, 0, 22, false), gen, false, false), ts = J$.W(1563633, 'ts', J$.T(1563617, [], 10, false), ts, false, false);
                            var i = J$.W(1563649, 'i', J$.T(1563641, 1, 22, false), i, false, false);
                            while (J$.C(80344, J$.B(188450, '<', J$.R(1563657, 'gen', gen, false, false), J$.R(1563665, 'size', size, false, false)))) {
                                var t = J$.W(1563705, 't', J$.F(1563697, J$.R(1563673, 'T', T, false, false), false)(J$.B(188474, '-', i = J$.W(1563689, 'i', J$.B(188466, '+', J$.U(188458, '+', J$.R(1563681, 'i', i, false, false)), 1), i, false, false), 1)), t, false, false);
                                gen = J$.W(1563737, 'gen', J$.B(188482, '+', J$.R(1563729, 'gen', gen, false, false), J$.G(1563721, J$.R(1563713, 't', t, false, false), 'length')), gen, false, false);
                                J$.M(1563761, J$.R(1563745, 'ts', ts, false, false), 'push', false)(J$.R(1563753, 't', t, false, false));
                            }
                            return J$.Rt(1563817, J$.M(1563809, J$.M(1563785, J$.R(1563769, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(1563777, 'ts', ts, false, false)), 'slice', false)(J$.T(1563793, 0, 22, false), J$.R(1563801, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(1570705, J$e);
                        } finally {
                            if (J$.Fr(1570713))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function countZeros(buf) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(1564633, arguments.callee, this, arguments);
                            arguments = J$.N(1564641, 'arguments', arguments, true, false, false);
                            buf = J$.N(1564649, 'buf', buf, true, false, false);
                            J$.N(1564657, 'o', o, false, false, false);
                            J$.N(1564665, 'obit', obit, false, false, false);
                            J$.N(1564673, 'mask', mask, false, false, false);
                            var o = J$.W(1564417, 'o', J$.T(1564401, 0, 22, false), o, false, false), obit = J$.W(1564425, 'obit', J$.T(1564409, 8, 22, false), obit, false, false);
                            while (J$.C(80384, J$.B(188554, '<', J$.R(1564433, 'o', o, false, false), J$.G(1564449, J$.R(1564441, 'buf', buf, false, false), 'length')))) {
                                var mask = J$.W(1564473, 'mask', J$.B(188562, '<<', J$.T(1564457, 1, 22, false), J$.R(1564465, 'obit', obit, false, false)), mask, false, false);
                                if (J$.C(80368, J$.B(188578, '===', J$.B(188570, '&', J$.G(1564497, J$.R(1564481, 'buf', buf, false, false), J$.R(1564489, 'o', o, false, false)), J$.R(1564505, 'mask', mask, false, false)), J$.R(1564513, 'mask', mask, false, false))))
                                    break;
                                J$.B(188602, '+', obit = J$.W(1564529, 'obit', J$.B(188594, '-', J$.U(188586, '+', J$.R(1564521, 'obit', obit, false, false)), 1), obit, false, false), 1);
                                if (J$.C(80376, J$.B(188610, '<', J$.R(1564537, 'obit', obit, false, false), J$.T(1564545, 0, 22, false)))) {
                                    J$.B(188634, '-', o = J$.W(1564561, 'o', J$.B(188626, '+', J$.U(188618, '+', J$.R(1564553, 'o', o, false, false)), 1), o, false, false), 1);
                                    obit = J$.W(1564577, 'obit', J$.T(1564569, 8, 22, false), obit, false, false);
                                }
                            }
                            return J$.Rt(1564625, J$.B(188666, '-', J$.B(188658, '+', J$.B(188642, '*', J$.R(1564585, 'o', o, false, false), J$.T(1564593, 8, 22, false)), J$.B(188650, '-', J$.T(1564601, 8, 22, false), J$.R(1564609, 'obit', obit, false, false))), J$.T(1564617, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(1570721, J$e);
                        } finally {
                            if (J$.Fr(1570729))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bufferSplit(buf, chr) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(1565209, arguments.callee, this, arguments);
                            arguments = J$.N(1565217, 'arguments', arguments, true, false, false);
                            buf = J$.N(1565225, 'buf', buf, true, false, false);
                            chr = J$.N(1565233, 'chr', chr, true, false, false);
                            J$.N(1565241, 'parts', parts, false, false, false);
                            J$.N(1565249, 'lastPart', lastPart, false, false, false);
                            J$.N(1565257, 'matches', matches, false, false, false);
                            J$.N(1565265, 'i', i, false, false, false);
                            J$.N(1565273, 'newPart', newPart, false, false, false);
                            J$.M(1564697, J$.R(1564681, 'assert', assert, false, true), 'buffer', false)(J$.R(1564689, 'buf', buf, false, false));
                            J$.M(1564721, J$.R(1564705, 'assert', assert, false, true), 'string', false)(J$.R(1564713, 'chr', chr, false, false));
                            var parts = J$.W(1564737, 'parts', J$.T(1564729, [], 10, false), parts, false, false);
                            var lastPart = J$.W(1564753, 'lastPart', J$.T(1564745, 0, 22, false), lastPart, false, false);
                            var matches = J$.W(1564769, 'matches', J$.T(1564761, 0, 22, false), matches, false, false);
                            for (var i = J$.W(1564785, 'i', J$.T(1564777, 0, 22, false), i, false, false); J$.C(80416, J$.B(188674, '<', J$.R(1564793, 'i', i, false, false), J$.G(1564809, J$.R(1564801, 'buf', buf, false, false), 'length'))); i = J$.W(1564825, 'i', J$.B(188690, '+', J$.U(188682, '+', J$.R(1564817, 'i', i, false, false)), 1), i, false, false)) {
                                if (J$.C(80400, J$.B(188698, '===', J$.G(1564849, J$.R(1564833, 'buf', buf, false, false), J$.R(1564841, 'i', i, false, false)), J$.M(1564873, J$.R(1564857, 'chr', chr, false, false), 'charCodeAt', false)(J$.R(1564865, 'matches', matches, false, false)))))
                                    matches = J$.W(1564889, 'matches', J$.B(188714, '+', J$.U(188706, '+', J$.R(1564881, 'matches', matches, false, false)), 1), matches, false, false);
                                else if (J$.C(80392, J$.B(188722, '===', J$.G(1564913, J$.R(1564897, 'buf', buf, false, false), J$.R(1564905, 'i', i, false, false)), J$.M(1564937, J$.R(1564921, 'chr', chr, false, false), 'charCodeAt', false)(J$.T(1564929, 0, 22, false)))))
                                    matches = J$.W(1564953, 'matches', J$.T(1564945, 1, 22, false), matches, false, false);
                                else
                                    matches = J$.W(1564969, 'matches', J$.T(1564961, 0, 22, false), matches, false, false);
                                if (J$.C(80408, J$.B(188730, '>=', J$.R(1564977, 'matches', matches, false, false), J$.G(1564993, J$.R(1564985, 'chr', chr, false, false), 'length')))) {
                                    var newPart = J$.W(1565017, 'newPart', J$.B(188738, '+', J$.R(1565001, 'i', i, false, false), J$.T(1565009, 1, 22, false)), newPart, false, false);
                                    J$.M(1565073, J$.R(1565025, 'parts', parts, false, false), 'push', false)(J$.M(1565065, J$.R(1565033, 'buf', buf, false, false), 'slice', false)(J$.R(1565041, 'lastPart', lastPart, false, false), J$.B(188746, '-', J$.R(1565049, 'newPart', newPart, false, false), J$.R(1565057, 'matches', matches, false, false))));
                                    lastPart = J$.W(1565089, 'lastPart', J$.R(1565081, 'newPart', newPart, false, false), lastPart, false, false);
                                    matches = J$.W(1565105, 'matches', J$.T(1565097, 0, 22, false), matches, false, false);
                                }
                            }
                            if (J$.C(80424, J$.B(188754, '<=', J$.R(1565113, 'lastPart', lastPart, false, false), J$.G(1565129, J$.R(1565121, 'buf', buf, false, false), 'length'))))
                                J$.M(1565185, J$.R(1565137, 'parts', parts, false, false), 'push', false)(J$.M(1565177, J$.R(1565145, 'buf', buf, false, false), 'slice', false)(J$.R(1565153, 'lastPart', lastPart, false, false), J$.G(1565169, J$.R(1565161, 'buf', buf, false, false), 'length')));
                            return J$.Rt(1565201, J$.R(1565193, 'parts', parts, false, false));
                        } catch (J$e) {
                            J$.Ex(1570737, J$e);
                        } finally {
                            if (J$.Fr(1570745))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ecNormalize(buf, addZero) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(1565849, arguments.callee, this, arguments);
                            arguments = J$.N(1565857, 'arguments', arguments, true, false, false);
                            buf = J$.N(1565865, 'buf', buf, true, false, false);
                            addZero = J$.N(1565873, 'addZero', addZero, true, false, false);
                            J$.N(1565881, 'b', b, false, false, false);
                            J$.M(1565297, J$.R(1565281, 'assert', assert, false, true), 'buffer', false)(J$.R(1565289, 'buf', buf, false, false));
                            if (J$.C(80504, J$.C(80432, J$.B(188762, '===', J$.G(1565321, J$.R(1565305, 'buf', buf, false, false), J$.T(1565313, 0, 22, false)), J$.T(1565329, 0, 22, false))) ? J$.B(188770, '===', J$.G(1565353, J$.R(1565337, 'buf', buf, false, false), J$.T(1565345, 1, 22, false)), J$.T(1565361, 4, 22, false)) : J$._())) {
                                if (J$.C(80440, J$.R(1565369, 'addZero', addZero, false, false)))
                                    return J$.Rt(1565385, J$.R(1565377, 'buf', buf, false, false));
                                return J$.Rt(1565417, J$.M(1565409, J$.R(1565393, 'buf', buf, false, false), 'slice', false)(J$.T(1565401, 1, 22, false)));
                            } else if (J$.C(80496, J$.B(188778, '===', J$.G(1565441, J$.R(1565425, 'buf', buf, false, false), J$.T(1565433, 0, 22, false)), J$.T(1565449, 4, 22, false)))) {
                                if (J$.C(80448, J$.U(188786, '!', J$.R(1565457, 'addZero', addZero, false, false))))
                                    return J$.Rt(1565473, J$.R(1565465, 'buf', buf, false, false));
                            } else {
                                while (J$.C(80456, J$.B(188794, '===', J$.G(1565497, J$.R(1565481, 'buf', buf, false, false), J$.T(1565489, 0, 22, false)), J$.T(1565505, 0, 22, false)))) {
                                    buf = J$.W(1565537, 'buf', J$.M(1565529, J$.R(1565513, 'buf', buf, false, false), 'slice', false)(J$.T(1565521, 1, 22, false)), buf, false, false);
                                }
                                if (J$.C(80472, J$.C(80464, J$.B(188802, '===', J$.G(1565561, J$.R(1565545, 'buf', buf, false, false), J$.T(1565553, 0, 22, false)), J$.T(1565569, 2, 22, false))) ? J$._() : J$.B(188810, '===', J$.G(1565593, J$.R(1565577, 'buf', buf, false, false), J$.T(1565585, 0, 22, false)), J$.T(1565601, 3, 22, false))))
                                    throw J$.F(1565633, J$.I(typeof Error === 'undefined' ? Error = J$.R(1565609, 'Error', undefined, true, true) : Error = J$.R(1565609, 'Error', Error, true, true)), true)(J$.B(188818, '+', J$.T(1565617, 'Compressed elliptic curve points ', 21, false), J$.T(1565625, 'are not supported', 21, false)));
                                if (J$.C(80480, J$.B(188826, '!==', J$.G(1565657, J$.R(1565641, 'buf', buf, false, false), J$.T(1565649, 0, 22, false)), J$.T(1565665, 4, 22, false))))
                                    throw J$.F(1565689, J$.I(typeof Error === 'undefined' ? Error = J$.R(1565673, 'Error', undefined, true, true) : Error = J$.R(1565673, 'Error', Error, true, true)), true)(J$.T(1565681, 'Not a valid elliptic curve point', 21, false));
                                if (J$.C(80488, J$.U(188834, '!', J$.R(1565697, 'addZero', addZero, false, false))))
                                    return J$.Rt(1565713, J$.R(1565705, 'buf', buf, false, false));
                            }
                            var b = J$.W(1565761, 'b', J$.M(1565753, J$.R(1565721, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(188842, '+', J$.G(1565737, J$.R(1565729, 'buf', buf, false, false), 'length'), J$.T(1565745, 1, 22, false))), b, false, false);
                            J$.P(1565793, J$.R(1565769, 'b', b, false, false), J$.T(1565777, 0, 22, false), J$.T(1565785, 0, 22, false));
                            J$.M(1565825, J$.R(1565801, 'buf', buf, false, false), 'copy', false)(J$.R(1565809, 'b', b, false, false), J$.T(1565817, 1, 22, false));
                            return J$.Rt(1565841, J$.R(1565833, 'b', b, false, false));
                        } catch (J$e) {
                            J$.Ex(1570753, J$e);
                        } finally {
                            if (J$.Fr(1570761))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readBitString(der, tag) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(1566121, arguments.callee, this, arguments);
                            arguments = J$.N(1566129, 'arguments', arguments, true, false, false);
                            der = J$.N(1566137, 'der', der, true, false, false);
                            tag = J$.N(1566145, 'tag', tag, true, false, false);
                            J$.N(1566153, 'buf', buf, false, false, false);
                            if (J$.C(80512, J$.B(188850, '===', J$.R(1565889, 'tag', tag, false, false), J$.T(1565897, undefined, 24, false))))
                                tag = J$.W(1565929, 'tag', J$.G(1565921, J$.G(1565913, J$.R(1565905, 'asn1', asn1, false, true), 'Ber'), 'BitString'), tag, false, false);
                            var buf = J$.W(1565969, 'buf', J$.M(1565961, J$.R(1565937, 'der', der, false, false), 'readString', false)(J$.R(1565945, 'tag', tag, false, false), J$.T(1565953, true, 23, false)), buf, false, false);
                            J$.M(1566081, J$.R(1565977, 'assert', assert, false, true), 'strictEqual', false)(J$.G(1566001, J$.R(1565985, 'buf', buf, false, false), J$.T(1565993, 0, 22, false)), J$.T(1566009, 0, 22, false), J$.B(188874, '+', J$.B(188866, '+', J$.B(188858, '+', J$.T(1566017, 'bit strings with unused bits are ', 21, false), J$.T(1566025, 'not supported (0x', 21, false)), J$.M(1566065, J$.G(1566049, J$.R(1566033, 'buf', buf, false, false), J$.T(1566041, 0, 22, false)), 'toString', false)(J$.T(1566057, 16, 22, false))), J$.T(1566073, ')', 21, false)));
                            return J$.Rt(1566113, J$.M(1566105, J$.R(1566089, 'buf', buf, false, false), 'slice', false)(J$.T(1566097, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(1570769, J$e);
                        } finally {
                            if (J$.Fr(1570777))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writeBitString(der, buf, tag) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(1566353, arguments.callee, this, arguments);
                            arguments = J$.N(1566361, 'arguments', arguments, true, false, false);
                            der = J$.N(1566369, 'der', der, true, false, false);
                            buf = J$.N(1566377, 'buf', buf, true, false, false);
                            tag = J$.N(1566385, 'tag', tag, true, false, false);
                            J$.N(1566393, 'b', b, false, false, false);
                            if (J$.C(80520, J$.B(188882, '===', J$.R(1566161, 'tag', tag, false, false), J$.T(1566169, undefined, 24, false))))
                                tag = J$.W(1566201, 'tag', J$.G(1566193, J$.G(1566185, J$.R(1566177, 'asn1', asn1, false, true), 'Ber'), 'BitString'), tag, false, false);
                            var b = J$.W(1566249, 'b', J$.M(1566241, J$.R(1566209, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(188890, '+', J$.G(1566225, J$.R(1566217, 'buf', buf, false, false), 'length'), J$.T(1566233, 1, 22, false))), b, false, false);
                            J$.P(1566281, J$.R(1566257, 'b', b, false, false), J$.T(1566265, 0, 22, false), J$.T(1566273, 0, 22, false));
                            J$.M(1566313, J$.R(1566289, 'buf', buf, false, false), 'copy', false)(J$.R(1566297, 'b', b, false, false), J$.T(1566305, 1, 22, false));
                            J$.M(1566345, J$.R(1566321, 'der', der, false, false), 'writeBuffer', false)(J$.R(1566329, 'b', b, false, false), J$.R(1566337, 'tag', tag, false, false));
                        } catch (J$e) {
                            J$.Ex(1570785, J$e);
                        } finally {
                            if (J$.Fr(1570793))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mpNormalize(buf) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(1566737, arguments.callee, this, arguments);
                            arguments = J$.N(1566745, 'arguments', arguments, true, false, false);
                            buf = J$.N(1566753, 'buf', buf, true, false, false);
                            J$.N(1566761, 'b', b, false, false, false);
                            J$.M(1566417, J$.R(1566401, 'assert', assert, false, true), 'buffer', false)(J$.R(1566409, 'buf', buf, false, false));
                            while (J$.C(80544, J$.C(80536, J$.C(80528, J$.B(188898, '>', J$.G(1566433, J$.R(1566425, 'buf', buf, false, false), 'length'), J$.T(1566441, 1, 22, false))) ? J$.B(188906, '===', J$.G(1566465, J$.R(1566449, 'buf', buf, false, false), J$.T(1566457, 0, 22, false)), J$.T(1566473, 0, 22, false)) : J$._()) ? J$.B(188922, '===', J$.B(188914, '&', J$.G(1566497, J$.R(1566481, 'buf', buf, false, false), J$.T(1566489, 1, 22, false)), J$.T(1566505, 128, 22, false)), J$.T(1566513, 0, 22, false)) : J$._())) {
                                buf = J$.W(1566545, 'buf', J$.M(1566537, J$.R(1566521, 'buf', buf, false, false), 'slice', false)(J$.T(1566529, 1, 22, false)), buf, false, false);
                            }
                            if (J$.C(80552, J$.B(188938, '===', J$.B(188930, '&', J$.G(1566569, J$.R(1566553, 'buf', buf, false, false), J$.T(1566561, 0, 22, false)), J$.T(1566577, 128, 22, false)), J$.T(1566585, 128, 22, false)))) {
                                var b = J$.W(1566633, 'b', J$.M(1566625, J$.R(1566593, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(188946, '+', J$.G(1566609, J$.R(1566601, 'buf', buf, false, false), 'length'), J$.T(1566617, 1, 22, false))), b, false, false);
                                J$.P(1566665, J$.R(1566641, 'b', b, false, false), J$.T(1566649, 0, 22, false), J$.T(1566657, 0, 22, false));
                                J$.M(1566697, J$.R(1566673, 'buf', buf, false, false), 'copy', false)(J$.R(1566681, 'b', b, false, false), J$.T(1566689, 1, 22, false));
                                buf = J$.W(1566713, 'buf', J$.R(1566705, 'b', b, false, false), buf, false, false);
                            }
                            return J$.Rt(1566729, J$.R(1566721, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(1570801, J$e);
                        } finally {
                            if (J$.Fr(1570809))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mpDenormalize(buf) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(1566897, arguments.callee, this, arguments);
                            arguments = J$.N(1566905, 'arguments', arguments, true, false, false);
                            buf = J$.N(1566913, 'buf', buf, true, false, false);
                            J$.M(1566785, J$.R(1566769, 'assert', assert, false, true), 'buffer', false)(J$.R(1566777, 'buf', buf, false, false));
                            while (J$.C(80568, J$.C(80560, J$.B(188954, '>', J$.G(1566801, J$.R(1566793, 'buf', buf, false, false), 'length'), J$.T(1566809, 1, 22, false))) ? J$.B(188962, '===', J$.G(1566833, J$.R(1566817, 'buf', buf, false, false), J$.T(1566825, 0, 22, false)), J$.T(1566841, 0, 22, false)) : J$._())) {
                                buf = J$.W(1566873, 'buf', J$.M(1566865, J$.R(1566849, 'buf', buf, false, false), 'slice', false)(J$.T(1566857, 1, 22, false)), buf, false, false);
                            }
                            return J$.Rt(1566889, J$.R(1566881, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(1570817, J$e);
                        } finally {
                            if (J$.Fr(1570825))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function zeroPadToLength(buf, len) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(1567241, arguments.callee, this, arguments);
                            arguments = J$.N(1567249, 'arguments', arguments, true, false, false);
                            buf = J$.N(1567257, 'buf', buf, true, false, false);
                            len = J$.N(1567265, 'len', len, true, false, false);
                            J$.N(1567273, 'b', b, false, false, false);
                            J$.M(1566937, J$.R(1566921, 'assert', assert, false, true), 'buffer', false)(J$.R(1566929, 'buf', buf, false, false));
                            J$.M(1566961, J$.R(1566945, 'assert', assert, false, true), 'number', false)(J$.R(1566953, 'len', len, false, false));
                            while (J$.C(80576, J$.B(188970, '>', J$.G(1566977, J$.R(1566969, 'buf', buf, false, false), 'length'), J$.R(1566985, 'len', len, false, false)))) {
                                J$.M(1567033, J$.R(1566993, 'assert', assert, false, true), 'equal', false)(J$.G(1567017, J$.R(1567001, 'buf', buf, false, false), J$.T(1567009, 0, 22, false)), J$.T(1567025, 0, 22, false));
                                buf = J$.W(1567065, 'buf', J$.M(1567057, J$.R(1567041, 'buf', buf, false, false), 'slice', false)(J$.T(1567049, 1, 22, false)), buf, false, false);
                            }
                            while (J$.C(80584, J$.B(188978, '<', J$.G(1567081, J$.R(1567073, 'buf', buf, false, false), 'length'), J$.R(1567089, 'len', len, false, false)))) {
                                var b = J$.W(1567137, 'b', J$.M(1567129, J$.R(1567097, 'Buffer', Buffer, false, true), 'alloc', false)(J$.B(188986, '+', J$.G(1567113, J$.R(1567105, 'buf', buf, false, false), 'length'), J$.T(1567121, 1, 22, false))), b, false, false);
                                J$.P(1567169, J$.R(1567145, 'b', b, false, false), J$.T(1567153, 0, 22, false), J$.T(1567161, 0, 22, false));
                                J$.M(1567201, J$.R(1567177, 'buf', buf, false, false), 'copy', false)(J$.R(1567185, 'b', b, false, false), J$.T(1567193, 1, 22, false));
                                buf = J$.W(1567217, 'buf', J$.R(1567209, 'b', b, false, false), buf, false, false);
                            }
                            return J$.Rt(1567233, J$.R(1567225, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(1570833, J$e);
                        } finally {
                            if (J$.Fr(1570841))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bigintToMpBuf(bigint) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(1567369, arguments.callee, this, arguments);
                            arguments = J$.N(1567377, 'arguments', arguments, true, false, false);
                            bigint = J$.N(1567385, 'bigint', bigint, true, false, false);
                            J$.N(1567393, 'buf', buf, false, false, false);
                            var buf = J$.W(1567313, 'buf', J$.M(1567305, J$.R(1567281, 'Buffer', Buffer, false, true), 'from', false)(J$.M(1567297, J$.R(1567289, 'bigint', bigint, false, false), 'toByteArray', false)()), buf, false, false);
                            buf = J$.W(1567345, 'buf', J$.F(1567337, J$.R(1567321, 'mpNormalize', mpNormalize, false, true), false)(J$.R(1567329, 'buf', buf, false, false)), buf, false, false);
                            return J$.Rt(1567361, J$.R(1567353, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(1570849, J$e);
                        } finally {
                            if (J$.Fr(1570857))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function calculateDSAPublic(g, p, x) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(1567657, arguments.callee, this, arguments);
                            arguments = J$.N(1567665, 'arguments', arguments, true, false, false);
                            g = J$.N(1567673, 'g', g, true, false, false);
                            p = J$.N(1567681, 'p', p, true, false, false);
                            x = J$.N(1567689, 'x', x, true, false, false);
                            J$.N(1567697, 'y', y, false, false, false);
                            J$.N(1567705, 'ybuf', ybuf, false, false, false);
                            J$.M(1567417, J$.R(1567401, 'assert', assert, false, true), 'buffer', false)(J$.R(1567409, 'g', g, false, false));
                            J$.M(1567441, J$.R(1567425, 'assert', assert, false, true), 'buffer', false)(J$.R(1567433, 'p', p, false, false));
                            J$.M(1567465, J$.R(1567449, 'assert', assert, false, true), 'buffer', false)(J$.R(1567457, 'x', x, false, false));
                            g = J$.W(1567497, 'g', J$.F(1567489, J$.R(1567473, 'jsbn', jsbn, false, true), true)(J$.R(1567481, 'g', g, false, false)), g, false, false);
                            p = J$.W(1567529, 'p', J$.F(1567521, J$.R(1567505, 'jsbn', jsbn, false, true), true)(J$.R(1567513, 'p', p, false, false)), p, false, false);
                            x = J$.W(1567561, 'x', J$.F(1567553, J$.R(1567537, 'jsbn', jsbn, false, true), true)(J$.R(1567545, 'x', x, false, false)), x, false, false);
                            var y = J$.W(1567601, 'y', J$.M(1567593, J$.R(1567569, 'g', g, false, false), 'modPow', false)(J$.R(1567577, 'x', x, false, false), J$.R(1567585, 'p', p, false, false)), y, false, false);
                            var ybuf = J$.W(1567633, 'ybuf', J$.F(1567625, J$.R(1567609, 'bigintToMpBuf', bigintToMpBuf, false, true), false)(J$.R(1567617, 'y', y, false, false)), ybuf, false, false);
                            return J$.Rt(1567649, J$.R(1567641, 'ybuf', ybuf, false, false));
                        } catch (J$e) {
                            J$.Ex(1570865, J$e);
                        } finally {
                            if (J$.Fr(1570873))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function calculateED25519Public(k) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(1567841, arguments.callee, this, arguments);
                            arguments = J$.N(1567849, 'arguments', arguments, true, false, false);
                            k = J$.N(1567857, 'k', k, true, false, false);
                            J$.N(1567865, 'kp', kp, false, false, false);
                            J$.M(1567729, J$.R(1567713, 'assert', assert, false, true), 'buffer', false)(J$.R(1567721, 'k', k, false, false));
                            var kp = J$.W(1567793, 'kp', J$.M(1567785, J$.G(1567753, J$.G(1567745, J$.R(1567737, 'nacl', nacl, false, true), 'sign'), 'keyPair'), 'fromSeed', false)(J$.F(1567777, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(1567761, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(1567761, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(1567769, 'k', k, false, false))), kp, false, false);
                            return J$.Rt(1567833, J$.M(1567825, J$.R(1567801, 'Buffer', Buffer, false, true), 'from', false)(J$.G(1567817, J$.R(1567809, 'kp', kp, false, false), 'publicKey')));
                        } catch (J$e) {
                            J$.Ex(1570881, J$e);
                        } finally {
                            if (J$.Fr(1570889))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function calculateX25519Public(k) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(1568001, arguments.callee, this, arguments);
                            arguments = J$.N(1568009, 'arguments', arguments, true, false, false);
                            k = J$.N(1568017, 'k', k, true, false, false);
                            J$.N(1568025, 'kp', kp, false, false, false);
                            J$.M(1567889, J$.R(1567873, 'assert', assert, false, true), 'buffer', false)(J$.R(1567881, 'k', k, false, false));
                            var kp = J$.W(1567953, 'kp', J$.M(1567945, J$.G(1567913, J$.G(1567905, J$.R(1567897, 'nacl', nacl, false, true), 'box'), 'keyPair'), 'fromSeed', false)(J$.F(1567937, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(1567921, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(1567921, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(1567929, 'k', k, false, false))), kp, false, false);
                            return J$.Rt(1567993, J$.M(1567985, J$.R(1567961, 'Buffer', Buffer, false, true), 'from', false)(J$.G(1567977, J$.R(1567969, 'kp', kp, false, false), 'publicKey')));
                        } catch (J$e) {
                            J$.Ex(1570897, J$e);
                        } finally {
                            if (J$.Fr(1570905))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addRSAMissing(key) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(1568681, arguments.callee, this, arguments);
                            arguments = J$.N(1568689, 'arguments', arguments, true, false, false);
                            key = J$.N(1568697, 'key', key, true, false, false);
                            J$.N(1568705, 'd', d, false, false, false);
                            J$.N(1568713, 'buf', buf, false, false, false);
                            J$.N(1568721, 'p', p, false, false, false);
                            J$.N(1568729, 'dmodp', dmodp, false, false, false);
                            J$.N(1568737, 'q', q, false, false, false);
                            J$.N(1568745, 'dmodq', dmodq, false, false, false);
                            J$.M(1568049, J$.R(1568033, 'assert', assert, false, true), 'object', false)(J$.R(1568041, 'key', key, false, false));
                            J$.F(1568105, J$.R(1568057, 'assertCompatible', assertCompatible, false, true), false)(J$.R(1568065, 'key', key, false, false), J$.R(1568073, 'PrivateKey', PrivateKey, false, true), J$.T(1568097, [
                                J$.T(1568081, 1, 22, false),
                                J$.T(1568089, 1, 22, false)
                            ], 10, false));
                            var d = J$.W(1568161, 'd', J$.F(1568153, J$.R(1568113, 'jsbn', jsbn, false, true), true)(J$.G(1568145, J$.G(1568137, J$.G(1568129, J$.R(1568121, 'key', key, false, false), 'part'), 'd'), 'data')), d, false, false);
                            var buf;
                            if (J$.C(80592, J$.U(188994, '!', J$.G(1568185, J$.G(1568177, J$.R(1568169, 'key', key, false, false), 'part'), 'dmodp')))) {
                                var p = J$.W(1568241, 'p', J$.F(1568233, J$.R(1568193, 'jsbn', jsbn, false, true), true)(J$.G(1568225, J$.G(1568217, J$.G(1568209, J$.R(1568201, 'key', key, false, false), 'part'), 'p'), 'data')), p, false, false);
                                var dmodp = J$.W(1568289, 'dmodp', J$.M(1568281, J$.R(1568249, 'd', d, false, false), 'mod', false)(J$.M(1568273, J$.R(1568257, 'p', p, false, false), 'subtract', false)(J$.T(1568265, 1, 22, false))), dmodp, false, false);
                                buf = J$.W(1568321, 'buf', J$.F(1568313, J$.R(1568297, 'bigintToMpBuf', bigintToMpBuf, false, true), false)(J$.R(1568305, 'dmodp', dmodp, false, false)), buf, false, false);
                                J$.P(1568369, J$.G(1568337, J$.R(1568329, 'key', key, false, false), 'part'), 'dmodp', J$.T(1568361, {
                                    name: J$.T(1568345, 'dmodp', 21, false),
                                    data: J$.R(1568353, 'buf', buf, false, false)
                                }, 11, false));
                                J$.M(1568417, J$.G(1568385, J$.R(1568377, 'key', key, false, false), 'parts'), 'push', false)(J$.G(1568409, J$.G(1568401, J$.R(1568393, 'key', key, false, false), 'part'), 'dmodp'));
                            }
                            if (J$.C(80600, J$.U(189002, '!', J$.G(1568441, J$.G(1568433, J$.R(1568425, 'key', key, false, false), 'part'), 'dmodq')))) {
                                var q = J$.W(1568497, 'q', J$.F(1568489, J$.R(1568449, 'jsbn', jsbn, false, true), true)(J$.G(1568481, J$.G(1568473, J$.G(1568465, J$.R(1568457, 'key', key, false, false), 'part'), 'q'), 'data')), q, false, false);
                                var dmodq = J$.W(1568545, 'dmodq', J$.M(1568537, J$.R(1568505, 'd', d, false, false), 'mod', false)(J$.M(1568529, J$.R(1568513, 'q', q, false, false), 'subtract', false)(J$.T(1568521, 1, 22, false))), dmodq, false, false);
                                buf = J$.W(1568577, 'buf', J$.F(1568569, J$.R(1568553, 'bigintToMpBuf', bigintToMpBuf, false, true), false)(J$.R(1568561, 'dmodq', dmodq, false, false)), buf, false, false);
                                J$.P(1568625, J$.G(1568593, J$.R(1568585, 'key', key, false, false), 'part'), 'dmodq', J$.T(1568617, {
                                    name: J$.T(1568601, 'dmodq', 21, false),
                                    data: J$.R(1568609, 'buf', buf, false, false)
                                }, 11, false));
                                J$.M(1568673, J$.G(1568641, J$.R(1568633, 'key', key, false, false), 'parts'), 'push', false)(J$.G(1568665, J$.G(1568657, J$.R(1568649, 'key', key, false, false), 'part'), 'dmodq'));
                            }
                        } catch (J$e) {
                            J$.Ex(1570913, J$e);
                        } finally {
                            if (J$.Fr(1570921))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function publicFromPrivateECDSA(curveName, priv) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(1569393, arguments.callee, this, arguments);
                            arguments = J$.N(1569401, 'arguments', arguments, true, false, false);
                            curveName = J$.N(1569409, 'curveName', curveName, true, false, false);
                            priv = J$.N(1569417, 'priv', priv, true, false, false);
                            J$.N(1569425, 'params', params, false, false, false);
                            J$.N(1569433, 'p', p, false, false, false);
                            J$.N(1569441, 'a', a, false, false, false);
                            J$.N(1569449, 'b', b, false, false, false);
                            J$.N(1569457, 'curve', curve, false, false, false);
                            J$.N(1569465, 'G', G, false, false, false);
                            J$.N(1569473, 'd', d, false, false, false);
                            J$.N(1569481, 'pub', pub, false, false, false);
                            J$.N(1569489, 'parts', parts, false, false, false);
                            J$.N(1569497, 'key', key, false, false, false);
                            J$.M(1568777, J$.R(1568753, 'assert', assert, false, true), 'string', false)(J$.R(1568761, 'curveName', curveName, false, false), J$.T(1568769, 'curveName', 21, false));
                            J$.M(1568801, J$.R(1568785, 'assert', assert, false, true), 'buffer', false)(J$.R(1568793, 'priv', priv, false, false));
                            var params = J$.W(1568841, 'params', J$.G(1568833, J$.G(1568817, J$.R(1568809, 'algs', algs, false, true), 'curves'), J$.R(1568825, 'curveName', curveName, false, false)), params, false, false);
                            var p = J$.W(1568881, 'p', J$.F(1568873, J$.R(1568849, 'jsbn', jsbn, false, true), true)(J$.G(1568865, J$.R(1568857, 'params', params, false, false), 'p')), p, false, false);
                            var a = J$.W(1568921, 'a', J$.F(1568913, J$.R(1568889, 'jsbn', jsbn, false, true), true)(J$.G(1568905, J$.R(1568897, 'params', params, false, false), 'a')), a, false, false);
                            var b = J$.W(1568961, 'b', J$.F(1568953, J$.R(1568929, 'jsbn', jsbn, false, true), true)(J$.G(1568945, J$.R(1568937, 'params', params, false, false), 'b')), b, false, false);
                            var curve = J$.W(1569009, 'curve', J$.M(1569001, J$.R(1568969, 'ec', ec, false, true), 'ECCurveFp', true)(J$.R(1568977, 'p', p, false, false), J$.R(1568985, 'a', a, false, false), J$.R(1568993, 'b', b, false, false)), curve, false, false);
                            var G = J$.W(1569065, 'G', J$.M(1569057, J$.R(1569017, 'curve', curve, false, false), 'decodePointHex', false)(J$.M(1569049, J$.G(1569033, J$.R(1569025, 'params', params, false, false), 'G'), 'toString', false)(J$.T(1569041, 'hex', 21, false))), G, false, false);
                            var d = J$.W(1569113, 'd', J$.F(1569105, J$.R(1569073, 'jsbn', jsbn, false, true), true)(J$.F(1569097, J$.R(1569081, 'mpNormalize', mpNormalize, false, true), false)(J$.R(1569089, 'priv', priv, false, false))), d, false, false);
                            var pub = J$.W(1569145, 'pub', J$.M(1569137, J$.R(1569121, 'G', G, false, false), 'multiply', false)(J$.R(1569129, 'd', d, false, false)), pub, false, false);
                            pub = J$.W(1569201, 'pub', J$.M(1569193, J$.R(1569153, 'Buffer', Buffer, false, true), 'from', false)(J$.M(1569177, J$.R(1569161, 'curve', curve, false, false), 'encodePointHex', false)(J$.R(1569169, 'pub', pub, false, false)), J$.T(1569185, 'hex', 21, false)), pub, false, false);
                            var parts = J$.W(1569217, 'parts', J$.T(1569209, [], 10, false), parts, false, false);
                            J$.M(1569273, J$.R(1569225, 'parts', parts, false, false), 'push', false)(J$.T(1569265, {
                                name: J$.T(1569233, 'curve', 21, false),
                                data: J$.M(1569257, J$.R(1569241, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1569249, 'curveName', curveName, false, false))
                            }, 11, false));
                            J$.M(1569313, J$.R(1569281, 'parts', parts, false, false), 'push', false)(J$.T(1569305, {
                                name: J$.T(1569289, 'Q', 21, false),
                                data: J$.R(1569297, 'pub', pub, false, false)
                            }, 11, false));
                            var key = J$.W(1569369, 'key', J$.F(1569361, J$.R(1569321, 'Key', Key, false, true), true)(J$.T(1569353, {
                                type: J$.T(1569329, 'ecdsa', 21, false),
                                curve: J$.R(1569337, 'curve', curve, false, false),
                                parts: J$.R(1569345, 'parts', parts, false, false)
                            }, 11, false)), key, false, false);
                            return J$.Rt(1569385, J$.R(1569377, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(1570929, J$e);
                        } finally {
                            if (J$.Fr(1570937))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function opensshCipherInfo(cipher) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(1570129, arguments.callee, this, arguments);
                            arguments = J$.N(1570137, 'arguments', arguments, true, false, false);
                            cipher = J$.N(1570145, 'cipher', cipher, true, false, false);
                            J$.N(1570153, 'inf', inf, false, false, false);
                            var inf = J$.W(1569513, 'inf', J$.T(1569505, {}, 11, false), inf, false, false);
                            switch (J$.C1(80608, J$.R(1569521, 'cipher', cipher, false, false))) {
                            case J$.C2(80616, J$.T(1569601, '3des-cbc', 21, false)):
                                J$.P(1569545, J$.R(1569529, 'inf', inf, false, false), 'keySize', J$.T(1569537, 24, 22, false));
                                J$.P(1569569, J$.R(1569553, 'inf', inf, false, false), 'blockSize', J$.T(1569561, 8, 22, false));
                                J$.P(1569593, J$.R(1569577, 'inf', inf, false, false), 'opensslName', J$.T(1569585, 'des-ede3-cbc', 21, false));
                                break;
                            case J$.C2(80624, J$.T(1569681, 'blowfish-cbc', 21, false)):
                                J$.P(1569625, J$.R(1569609, 'inf', inf, false, false), 'keySize', J$.T(1569617, 16, 22, false));
                                J$.P(1569649, J$.R(1569633, 'inf', inf, false, false), 'blockSize', J$.T(1569641, 8, 22, false));
                                J$.P(1569673, J$.R(1569657, 'inf', inf, false, false), 'opensslName', J$.T(1569665, 'bf-cbc', 21, false));
                                break;
                            case J$.C2(80632, J$.T(1569689, 'aes128-cbc', 21, false)):
                            case J$.C2(80640, J$.T(1569697, 'aes128-ctr', 21, false)):
                            case J$.C2(80648, J$.T(1569809, 'aes128-gcm@openssh.com', 21, false)):
                                J$.P(1569721, J$.R(1569705, 'inf', inf, false, false), 'keySize', J$.T(1569713, 16, 22, false));
                                J$.P(1569745, J$.R(1569729, 'inf', inf, false, false), 'blockSize', J$.T(1569737, 16, 22, false));
                                J$.P(1569801, J$.R(1569753, 'inf', inf, false, false), 'opensslName', J$.B(189010, '+', J$.T(1569761, 'aes-128-', 21, false), J$.M(1569793, J$.R(1569769, 'cipher', cipher, false, false), 'slice', false)(J$.T(1569777, 7, 22, false), J$.T(1569785, 10, 22, false))));
                                break;
                            case J$.C2(80656, J$.T(1569817, 'aes192-cbc', 21, false)):
                            case J$.C2(80664, J$.T(1569825, 'aes192-ctr', 21, false)):
                            case J$.C2(80672, J$.T(1569937, 'aes192-gcm@openssh.com', 21, false)):
                                J$.P(1569849, J$.R(1569833, 'inf', inf, false, false), 'keySize', J$.T(1569841, 24, 22, false));
                                J$.P(1569873, J$.R(1569857, 'inf', inf, false, false), 'blockSize', J$.T(1569865, 16, 22, false));
                                J$.P(1569929, J$.R(1569881, 'inf', inf, false, false), 'opensslName', J$.B(189018, '+', J$.T(1569889, 'aes-192-', 21, false), J$.M(1569921, J$.R(1569897, 'cipher', cipher, false, false), 'slice', false)(J$.T(1569905, 7, 22, false), J$.T(1569913, 10, 22, false))));
                                break;
                            case J$.C2(80680, J$.T(1569945, 'aes256-cbc', 21, false)):
                            case J$.C2(80688, J$.T(1569953, 'aes256-ctr', 21, false)):
                            case J$.C2(80696, J$.T(1570065, 'aes256-gcm@openssh.com', 21, false)):
                                J$.P(1569977, J$.R(1569961, 'inf', inf, false, false), 'keySize', J$.T(1569969, 32, 22, false));
                                J$.P(1570001, J$.R(1569985, 'inf', inf, false, false), 'blockSize', J$.T(1569993, 16, 22, false));
                                J$.P(1570057, J$.R(1570009, 'inf', inf, false, false), 'opensslName', J$.B(189026, '+', J$.T(1570017, 'aes-256-', 21, false), J$.M(1570049, J$.R(1570025, 'cipher', cipher, false, false), 'slice', false)(J$.T(1570033, 7, 22, false), J$.T(1570041, 10, 22, false))));
                                break;
                            default:
                                throw J$.F(1570105, J$.I(typeof Error === 'undefined' ? Error = J$.R(1570073, 'Error', undefined, true, true) : Error = J$.R(1570073, 'Error', Error, true, true)), true)(J$.B(189042, '+', J$.B(189034, '+', J$.T(1570081, 'Unsupported openssl cipher "', 21, false), J$.R(1570089, 'cipher', cipher, false, false)), J$.T(1570097, '"', 21, false)));
                            }
                            return J$.Rt(1570121, J$.R(1570113, 'inf', inf, false, false));
                        } catch (J$e) {
                            J$.Ex(1570945, J$e);
                        } finally {
                            if (J$.Fr(1570953))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(1570177, '_typeof', J$.T(1570169, _typeof, 12, false), true, false, false);
            J$.N(1570185, 'assert', assert, false, false, false);
            J$.N(1570193, 'Buffer', Buffer, false, false, false);
            J$.N(1570201, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(1570209, 'Key', Key, false, false, false);
            J$.N(1570217, 'crypto', crypto, false, false, false);
            J$.N(1570225, 'algs', algs, false, false, false);
            J$.N(1570233, 'asn1', asn1, false, false, false);
            J$.N(1570241, 'ec', ec, false, false, false);
            J$.N(1570249, 'jsbn', jsbn, false, false, false);
            J$.N(1570257, 'nacl', nacl, false, false, false);
            J$.N(1570265, 'MAX_CLASS_DEPTH', MAX_CLASS_DEPTH, false, false, false);
            isCompatible = J$.N(1570281, 'isCompatible', J$.T(1570273, isCompatible, 12, false), true, false, false);
            assertCompatible = J$.N(1570297, 'assertCompatible', J$.T(1570289, assertCompatible, 12, false), true, false, false);
            J$.N(1570305, 'CIPHER_LEN', CIPHER_LEN, false, false, false);
            J$.N(1570313, 'PKCS5_SALT_LEN', PKCS5_SALT_LEN, false, false, false);
            opensslKeyDeriv = J$.N(1570329, 'opensslKeyDeriv', J$.T(1570321, opensslKeyDeriv, 12, false), true, false, false);
            pbkdf2 = J$.N(1570345, 'pbkdf2', J$.T(1570337, pbkdf2, 12, false), true, false, false);
            countZeros = J$.N(1570361, 'countZeros', J$.T(1570353, countZeros, 12, false), true, false, false);
            bufferSplit = J$.N(1570377, 'bufferSplit', J$.T(1570369, bufferSplit, 12, false), true, false, false);
            ecNormalize = J$.N(1570393, 'ecNormalize', J$.T(1570385, ecNormalize, 12, false), true, false, false);
            readBitString = J$.N(1570409, 'readBitString', J$.T(1570401, readBitString, 12, false), true, false, false);
            writeBitString = J$.N(1570425, 'writeBitString', J$.T(1570417, writeBitString, 12, false), true, false, false);
            mpNormalize = J$.N(1570441, 'mpNormalize', J$.T(1570433, mpNormalize, 12, false), true, false, false);
            mpDenormalize = J$.N(1570457, 'mpDenormalize', J$.T(1570449, mpDenormalize, 12, false), true, false, false);
            zeroPadToLength = J$.N(1570473, 'zeroPadToLength', J$.T(1570465, zeroPadToLength, 12, false), true, false, false);
            bigintToMpBuf = J$.N(1570489, 'bigintToMpBuf', J$.T(1570481, bigintToMpBuf, 12, false), true, false, false);
            calculateDSAPublic = J$.N(1570505, 'calculateDSAPublic', J$.T(1570497, calculateDSAPublic, 12, false), true, false, false);
            calculateED25519Public = J$.N(1570521, 'calculateED25519Public', J$.T(1570513, calculateED25519Public, 12, false), true, false, false);
            calculateX25519Public = J$.N(1570537, 'calculateX25519Public', J$.T(1570529, calculateX25519Public, 12, false), true, false, false);
            addRSAMissing = J$.N(1570553, 'addRSAMissing', J$.T(1570545, addRSAMissing, 12, false), true, false, false);
            publicFromPrivateECDSA = J$.N(1570569, 'publicFromPrivateECDSA', J$.T(1570561, publicFromPrivateECDSA, 12, false), true, false, false);
            opensshCipherInfo = J$.N(1570585, 'opensshCipherInfo', J$.T(1570577, opensshCipherInfo, 12, false), true, false, false);
            J$.T(1559305, 'use strict', 21, false);
            J$.F(1559329, J$.I(typeof require === 'undefined' ? require = J$.R(1559313, 'require', undefined, true, true) : require = J$.R(1559313, 'require', require, true, true)), false)(J$.T(1559321, 'core-js/modules/es.symbol', 21, false));
            J$.F(1559353, J$.I(typeof require === 'undefined' ? require = J$.R(1559337, 'require', undefined, true, true) : require = J$.R(1559337, 'require', require, true, true)), false)(J$.T(1559345, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(1559377, J$.I(typeof require === 'undefined' ? require = J$.R(1559361, 'require', undefined, true, true) : require = J$.R(1559361, 'require', require, true, true)), false)(J$.T(1559369, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(1559401, J$.I(typeof require === 'undefined' ? require = J$.R(1559385, 'require', undefined, true, true) : require = J$.R(1559385, 'require', require, true, true)), false)(J$.T(1559393, 'core-js/modules/es.array.concat', 21, false));
            J$.F(1559425, J$.I(typeof require === 'undefined' ? require = J$.R(1559409, 'require', undefined, true, true) : require = J$.R(1559409, 'require', require, true, true)), false)(J$.T(1559417, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(1559449, J$.I(typeof require === 'undefined' ? require = J$.R(1559433, 'require', undefined, true, true) : require = J$.R(1559433, 'require', require, true, true)), false)(J$.T(1559441, 'core-js/modules/es.array.slice', 21, false));
            J$.F(1559473, J$.I(typeof require === 'undefined' ? require = J$.R(1559457, 'require', undefined, true, true) : require = J$.R(1559457, 'require', require, true, true)), false)(J$.T(1559465, 'core-js/modules/es.array-buffer.slice', 21, false));
            J$.F(1559497, J$.I(typeof require === 'undefined' ? require = J$.R(1559481, 'require', undefined, true, true) : require = J$.R(1559481, 'require', require, true, true)), false)(J$.T(1559489, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(1559521, J$.I(typeof require === 'undefined' ? require = J$.R(1559505, 'require', undefined, true, true) : require = J$.R(1559505, 'require', require, true, true)), false)(J$.T(1559513, 'core-js/modules/es.function.name', 21, false));
            J$.F(1559545, J$.I(typeof require === 'undefined' ? require = J$.R(1559529, 'require', undefined, true, true) : require = J$.R(1559529, 'require', require, true, true)), false)(J$.T(1559537, 'core-js/modules/es.object.get-prototype-of', 21, false));
            J$.F(1559569, J$.I(typeof require === 'undefined' ? require = J$.R(1559553, 'require', undefined, true, true) : require = J$.R(1559553, 'require', require, true, true)), false)(J$.T(1559561, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1559593, J$.I(typeof require === 'undefined' ? require = J$.R(1559577, 'require', undefined, true, true) : require = J$.R(1559577, 'require', require, true, true)), false)(J$.T(1559585, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(1559617, J$.I(typeof require === 'undefined' ? require = J$.R(1559601, 'require', undefined, true, true) : require = J$.R(1559601, 'require', require, true, true)), false)(J$.T(1559609, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(1559641, J$.I(typeof require === 'undefined' ? require = J$.R(1559625, 'require', undefined, true, true) : require = J$.R(1559625, 'require', require, true, true)), false)(J$.T(1559633, 'core-js/modules/es.typed-array.uint8-array', 21, false));
            J$.F(1559665, J$.I(typeof require === 'undefined' ? require = J$.R(1559649, 'require', undefined, true, true) : require = J$.R(1559649, 'require', require, true, true)), false)(J$.T(1559657, 'core-js/modules/es.typed-array.copy-within', 21, false));
            J$.F(1559689, J$.I(typeof require === 'undefined' ? require = J$.R(1559673, 'require', undefined, true, true) : require = J$.R(1559673, 'require', require, true, true)), false)(J$.T(1559681, 'core-js/modules/es.typed-array.every', 21, false));
            J$.F(1559713, J$.I(typeof require === 'undefined' ? require = J$.R(1559697, 'require', undefined, true, true) : require = J$.R(1559697, 'require', require, true, true)), false)(J$.T(1559705, 'core-js/modules/es.typed-array.fill', 21, false));
            J$.F(1559737, J$.I(typeof require === 'undefined' ? require = J$.R(1559721, 'require', undefined, true, true) : require = J$.R(1559721, 'require', require, true, true)), false)(J$.T(1559729, 'core-js/modules/es.typed-array.filter', 21, false));
            J$.F(1559761, J$.I(typeof require === 'undefined' ? require = J$.R(1559745, 'require', undefined, true, true) : require = J$.R(1559745, 'require', require, true, true)), false)(J$.T(1559753, 'core-js/modules/es.typed-array.find', 21, false));
            J$.F(1559785, J$.I(typeof require === 'undefined' ? require = J$.R(1559769, 'require', undefined, true, true) : require = J$.R(1559769, 'require', require, true, true)), false)(J$.T(1559777, 'core-js/modules/es.typed-array.find-index', 21, false));
            J$.F(1559809, J$.I(typeof require === 'undefined' ? require = J$.R(1559793, 'require', undefined, true, true) : require = J$.R(1559793, 'require', require, true, true)), false)(J$.T(1559801, 'core-js/modules/es.typed-array.for-each', 21, false));
            J$.F(1559833, J$.I(typeof require === 'undefined' ? require = J$.R(1559817, 'require', undefined, true, true) : require = J$.R(1559817, 'require', require, true, true)), false)(J$.T(1559825, 'core-js/modules/es.typed-array.includes', 21, false));
            J$.F(1559857, J$.I(typeof require === 'undefined' ? require = J$.R(1559841, 'require', undefined, true, true) : require = J$.R(1559841, 'require', require, true, true)), false)(J$.T(1559849, 'core-js/modules/es.typed-array.index-of', 21, false));
            J$.F(1559881, J$.I(typeof require === 'undefined' ? require = J$.R(1559865, 'require', undefined, true, true) : require = J$.R(1559865, 'require', require, true, true)), false)(J$.T(1559873, 'core-js/modules/es.typed-array.iterator', 21, false));
            J$.F(1559905, J$.I(typeof require === 'undefined' ? require = J$.R(1559889, 'require', undefined, true, true) : require = J$.R(1559889, 'require', require, true, true)), false)(J$.T(1559897, 'core-js/modules/es.typed-array.join', 21, false));
            J$.F(1559929, J$.I(typeof require === 'undefined' ? require = J$.R(1559913, 'require', undefined, true, true) : require = J$.R(1559913, 'require', require, true, true)), false)(J$.T(1559921, 'core-js/modules/es.typed-array.last-index-of', 21, false));
            J$.F(1559953, J$.I(typeof require === 'undefined' ? require = J$.R(1559937, 'require', undefined, true, true) : require = J$.R(1559937, 'require', require, true, true)), false)(J$.T(1559945, 'core-js/modules/es.typed-array.map', 21, false));
            J$.F(1559977, J$.I(typeof require === 'undefined' ? require = J$.R(1559961, 'require', undefined, true, true) : require = J$.R(1559961, 'require', require, true, true)), false)(J$.T(1559969, 'core-js/modules/es.typed-array.reduce', 21, false));
            J$.F(1560001, J$.I(typeof require === 'undefined' ? require = J$.R(1559985, 'require', undefined, true, true) : require = J$.R(1559985, 'require', require, true, true)), false)(J$.T(1559993, 'core-js/modules/es.typed-array.reduce-right', 21, false));
            J$.F(1560025, J$.I(typeof require === 'undefined' ? require = J$.R(1560009, 'require', undefined, true, true) : require = J$.R(1560009, 'require', require, true, true)), false)(J$.T(1560017, 'core-js/modules/es.typed-array.reverse', 21, false));
            J$.F(1560049, J$.I(typeof require === 'undefined' ? require = J$.R(1560033, 'require', undefined, true, true) : require = J$.R(1560033, 'require', require, true, true)), false)(J$.T(1560041, 'core-js/modules/es.typed-array.set', 21, false));
            J$.F(1560073, J$.I(typeof require === 'undefined' ? require = J$.R(1560057, 'require', undefined, true, true) : require = J$.R(1560057, 'require', require, true, true)), false)(J$.T(1560065, 'core-js/modules/es.typed-array.slice', 21, false));
            J$.F(1560097, J$.I(typeof require === 'undefined' ? require = J$.R(1560081, 'require', undefined, true, true) : require = J$.R(1560081, 'require', require, true, true)), false)(J$.T(1560089, 'core-js/modules/es.typed-array.some', 21, false));
            J$.F(1560121, J$.I(typeof require === 'undefined' ? require = J$.R(1560105, 'require', undefined, true, true) : require = J$.R(1560105, 'require', require, true, true)), false)(J$.T(1560113, 'core-js/modules/es.typed-array.sort', 21, false));
            J$.F(1560145, J$.I(typeof require === 'undefined' ? require = J$.R(1560129, 'require', undefined, true, true) : require = J$.R(1560129, 'require', require, true, true)), false)(J$.T(1560137, 'core-js/modules/es.typed-array.subarray', 21, false));
            J$.F(1560169, J$.I(typeof require === 'undefined' ? require = J$.R(1560153, 'require', undefined, true, true) : require = J$.R(1560153, 'require', require, true, true)), false)(J$.T(1560161, 'core-js/modules/es.typed-array.to-locale-string', 21, false));
            J$.F(1560193, J$.I(typeof require === 'undefined' ? require = J$.R(1560177, 'require', undefined, true, true) : require = J$.R(1560177, 'require', require, true, true)), false)(J$.T(1560185, 'core-js/modules/es.typed-array.to-string', 21, false));
            J$.F(1560217, J$.I(typeof require === 'undefined' ? require = J$.R(1560201, 'require', undefined, true, true) : require = J$.R(1560201, 'require', require, true, true)), false)(J$.T(1560209, 'core-js/modules/web.dom-collections.iterator', 21, false));
            J$.P(1560673, J$.I(typeof module === 'undefined' ? module = J$.R(1560513, 'module', undefined, true, true) : module = J$.R(1560513, 'module', module, true, true)), 'exports', J$.T(1560665, {
                bufferSplit: J$.R(1560521, 'bufferSplit', bufferSplit, false, true),
                addRSAMissing: J$.R(1560529, 'addRSAMissing', addRSAMissing, false, true),
                calculateDSAPublic: J$.R(1560537, 'calculateDSAPublic', calculateDSAPublic, false, true),
                calculateED25519Public: J$.R(1560545, 'calculateED25519Public', calculateED25519Public, false, true),
                calculateX25519Public: J$.R(1560553, 'calculateX25519Public', calculateX25519Public, false, true),
                mpNormalize: J$.R(1560561, 'mpNormalize', mpNormalize, false, true),
                mpDenormalize: J$.R(1560569, 'mpDenormalize', mpDenormalize, false, true),
                ecNormalize: J$.R(1560577, 'ecNormalize', ecNormalize, false, true),
                countZeros: J$.R(1560585, 'countZeros', countZeros, false, true),
                assertCompatible: J$.R(1560593, 'assertCompatible', assertCompatible, false, true),
                isCompatible: J$.R(1560601, 'isCompatible', isCompatible, false, true),
                opensslKeyDeriv: J$.R(1560609, 'opensslKeyDeriv', opensslKeyDeriv, false, true),
                opensshCipherInfo: J$.R(1560617, 'opensshCipherInfo', opensshCipherInfo, false, true),
                publicFromPrivateECDSA: J$.R(1560625, 'publicFromPrivateECDSA', publicFromPrivateECDSA, false, true),
                zeroPadToLength: J$.R(1560633, 'zeroPadToLength', zeroPadToLength, false, true),
                writeBitString: J$.R(1560641, 'writeBitString', writeBitString, false, true),
                readBitString: J$.R(1560649, 'readBitString', readBitString, false, true),
                pbkdf2: J$.R(1560657, 'pbkdf2', pbkdf2, false, true)
            }, 11, false));
            var assert = J$.W(1560705, 'assert', J$.F(1560697, J$.I(typeof require === 'undefined' ? require = J$.R(1560681, 'require', undefined, true, true) : require = J$.R(1560681, 'require', require, true, true)), false)(J$.T(1560689, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(1560745, 'Buffer', J$.G(1560737, J$.F(1560729, J$.I(typeof require === 'undefined' ? require = J$.R(1560713, 'require', undefined, true, true) : require = J$.R(1560713, 'require', require, true, true)), false)(J$.T(1560721, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var PrivateKey = J$.W(1560777, 'PrivateKey', J$.F(1560769, J$.I(typeof require === 'undefined' ? require = J$.R(1560753, 'require', undefined, true, true) : require = J$.R(1560753, 'require', require, true, true)), false)(J$.T(1560761, './private-key', 21, false)), PrivateKey, false, true);
            var Key = J$.W(1560809, 'Key', J$.F(1560801, J$.I(typeof require === 'undefined' ? require = J$.R(1560785, 'require', undefined, true, true) : require = J$.R(1560785, 'require', require, true, true)), false)(J$.T(1560793, './key', 21, false)), Key, false, true);
            var crypto = J$.W(1560841, 'crypto', J$.F(1560833, J$.I(typeof require === 'undefined' ? require = J$.R(1560817, 'require', undefined, true, true) : require = J$.R(1560817, 'require', require, true, true)), false)(J$.T(1560825, 'crypto', 21, false)), crypto, false, true);
            var algs = J$.W(1560873, 'algs', J$.F(1560865, J$.I(typeof require === 'undefined' ? require = J$.R(1560849, 'require', undefined, true, true) : require = J$.R(1560849, 'require', require, true, true)), false)(J$.T(1560857, './algs', 21, false)), algs, false, true);
            var asn1 = J$.W(1560905, 'asn1', J$.F(1560897, J$.I(typeof require === 'undefined' ? require = J$.R(1560881, 'require', undefined, true, true) : require = J$.R(1560881, 'require', require, true, true)), false)(J$.T(1560889, 'asn1', 21, false)), asn1, false, true);
            var ec = J$.W(1560937, 'ec', J$.F(1560929, J$.I(typeof require === 'undefined' ? require = J$.R(1560913, 'require', undefined, true, true) : require = J$.R(1560913, 'require', require, true, true)), false)(J$.T(1560921, 'ecc-jsbn/lib/ec', 21, false)), ec, false, true);
            var jsbn = J$.W(1560977, 'jsbn', J$.G(1560969, J$.F(1560961, J$.I(typeof require === 'undefined' ? require = J$.R(1560945, 'require', undefined, true, true) : require = J$.R(1560945, 'require', require, true, true)), false)(J$.T(1560953, 'jsbn', 21, false)), 'BigInteger'), jsbn, false, true);
            var nacl = J$.W(1561009, 'nacl', J$.F(1561001, J$.I(typeof require === 'undefined' ? require = J$.R(1560985, 'require', undefined, true, true) : require = J$.R(1560985, 'require', require, true, true)), false)(J$.T(1560993, 'tweetnacl', 21, false)), nacl, false, true);
            var MAX_CLASS_DEPTH = J$.W(1561025, 'MAX_CLASS_DEPTH', J$.T(1561017, 3, 22, false), MAX_CLASS_DEPTH, false, true);
            var CIPHER_LEN = J$.W(1562721, 'CIPHER_LEN', J$.T(1562713, {
                'des-ede3-cbc': J$.T(1562657, {
                    key: J$.T(1562641, 24, 22, false),
                    iv: J$.T(1562649, 8, 22, false)
                }, 11, false),
                'aes-128-cbc': J$.T(1562681, {
                    key: J$.T(1562665, 16, 22, false),
                    iv: J$.T(1562673, 16, 22, false)
                }, 11, false),
                'aes-256-cbc': J$.T(1562705, {
                    key: J$.T(1562689, 32, 22, false),
                    iv: J$.T(1562697, 16, 22, false)
                }, 11, false)
            }, 11, false), CIPHER_LEN, false, true);
            var PKCS5_SALT_LEN = J$.W(1562737, 'PKCS5_SALT_LEN', J$.T(1562729, 8, 22, false), PKCS5_SALT_LEN, false, true);
        } catch (J$e) {
            J$.Ex(1570961, J$e);
        } finally {
            if (J$.Sr(1570969))
                continue jalangiLabel23;
            else
                break jalangiLabel23;
        }
    }
// JALANGI DO NOT INSTRUMENT

