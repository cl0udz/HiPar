J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(1434521, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/sshpk/lib/fingerprint.js');
            function Fingerprint(opts) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1430889, arguments.callee, this, arguments);
                            arguments = J$.N(1430897, 'arguments', arguments, true, false, false);
                            opts = J$.N(1430905, 'opts', opts, true, false, false);
                            J$.M(1430545, J$.R(1430521, 'assert', assert, false, true), 'object', false)(J$.R(1430529, 'opts', opts, false, false), J$.T(1430537, 'options', 21, false));
                            J$.M(1430585, J$.R(1430553, 'assert', assert, false, true), 'string', false)(J$.G(1430569, J$.R(1430561, 'opts', opts, false, false), 'type'), J$.T(1430577, 'options.type', 21, false));
                            J$.M(1430625, J$.R(1430593, 'assert', assert, false, true), 'buffer', false)(J$.G(1430609, J$.R(1430601, 'opts', opts, false, false), 'hash'), J$.T(1430617, 'options.hash', 21, false));
                            J$.M(1430665, J$.R(1430633, 'assert', assert, false, true), 'string', false)(J$.G(1430649, J$.R(1430641, 'opts', opts, false, false), 'algorithm'), J$.T(1430657, 'options.algorithm', 21, false));
                            J$.P(1430705, J$.R(1430673, 'this', this, false, false), 'algorithm', J$.M(1430697, J$.G(1430689, J$.R(1430681, 'opts', opts, false, false), 'algorithm'), 'toLowerCase', false)());
                            if (J$.C(74280, J$.B(179858, '!==', J$.G(1430745, J$.G(1430721, J$.R(1430713, 'algs', algs, false, true), 'hashAlgs'), J$.G(1430737, J$.R(1430729, 'this', this, false, false), 'algorithm')), J$.T(1430753, true, 23, false))))
                                throw J$.F(1430785, J$.R(1430761, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.G(1430777, J$.R(1430769, 'this', this, false, false), 'algorithm'));
                            J$.P(1430817, J$.R(1430793, 'this', this, false, false), 'hash', J$.G(1430809, J$.R(1430801, 'opts', opts, false, false), 'hash'));
                            J$.P(1430849, J$.R(1430825, 'this', this, false, false), 'type', J$.G(1430841, J$.R(1430833, 'opts', opts, false, false), 'type'));
                            J$.P(1430881, J$.R(1430857, 'this', this, false, false), 'hashType', J$.G(1430873, J$.R(1430865, 'opts', opts, false, false), 'hashType'));
                        } catch (J$e) {
                            J$.Ex(1434697, J$e);
                        } finally {
                            if (J$.Fr(1434705))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addColons(s) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1434049, arguments.callee, this, arguments);
                            arguments = J$.N(1434057, 'arguments', arguments, true, false, false);
                            s = J$.N(1434065, 's', s, true, false, false);
                            return J$.Rt(1434041, J$.M(1434033, J$.R(1434009, 's', s, false, false), 'replace', false)(J$.T(1434017, /(.{2})(?=.)/g, 14, false), J$.T(1434025, '$1:', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1434793, J$e);
                        } finally {
                            if (J$.Fr(1434801))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function base64Strip(s) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1434113, arguments.callee, this, arguments);
                            arguments = J$.N(1434121, 'arguments', arguments, true, false, false);
                            s = J$.N(1434129, 's', s, true, false, false);
                            return J$.Rt(1434105, J$.M(1434097, J$.R(1434073, 's', s, false, false), 'replace', false)(J$.T(1434081, /=*$/, 14, false), J$.T(1434089, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1434809, J$e);
                        } finally {
                            if (J$.Fr(1434817))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function sshBase64Format(alg, h) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(1434193, arguments.callee, this, arguments);
                            arguments = J$.N(1434201, 'arguments', arguments, true, false, false);
                            alg = J$.N(1434209, 'alg', alg, true, false, false);
                            h = J$.N(1434217, 'h', h, true, false, false);
                            return J$.Rt(1434185, J$.B(180114, '+', J$.B(180106, '+', J$.M(1434145, J$.R(1434137, 'alg', alg, false, false), 'toUpperCase', false)(), J$.T(1434153, ':', 21, false)), J$.F(1434177, J$.R(1434161, 'base64Strip', base64Strip, false, true), false)(J$.R(1434169, 'h', h, false, false))));
                        } catch (J$e) {
                            J$.Ex(1434825, J$e);
                        } finally {
                            if (J$.Fr(1434833))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1434529, 'assert', assert, false, false, false);
            J$.N(1434537, 'Buffer', Buffer, false, false, false);
            J$.N(1434545, 'algs', algs, false, false, false);
            J$.N(1434553, 'crypto', crypto, false, false, false);
            J$.N(1434561, 'errs', errs, false, false, false);
            J$.N(1434569, 'Key', Key, false, false, false);
            J$.N(1434577, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(1434585, 'Certificate', Certificate, false, false, false);
            J$.N(1434593, 'utils', utils, false, false, false);
            J$.N(1434601, 'FingerprintFormatError', FingerprintFormatError, false, false, false);
            J$.N(1434609, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            Fingerprint = J$.N(1434625, 'Fingerprint', J$.T(1434617, Fingerprint, 12, false), true, false, false);
            J$.N(1434633, 'base64RE', base64RE, false, false, false);
            J$.N(1434641, 'hexRE', hexRE, false, false, false);
            addColons = J$.N(1434657, 'addColons', J$.T(1434649, addColons, 12, false), true, false, false);
            base64Strip = J$.N(1434673, 'base64Strip', J$.T(1434665, base64Strip, 12, false), true, false, false);
            sshBase64Format = J$.N(1434689, 'sshBase64Format', J$.T(1434681, sshBase64Format, 12, false), true, false, false);
            J$.T(1429881, 'use strict', 21, false);
            J$.F(1429905, J$.I(typeof require === 'undefined' ? require = J$.R(1429889, 'require', undefined, true, true) : require = J$.R(1429889, 'require', require, true, true)), false)(J$.T(1429897, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(1429929, J$.I(typeof require === 'undefined' ? require = J$.R(1429913, 'require', undefined, true, true) : require = J$.R(1429913, 'require', require, true, true)), false)(J$.T(1429921, 'core-js/modules/es.array.is-array', 21, false));
            J$.F(1429953, J$.I(typeof require === 'undefined' ? require = J$.R(1429937, 'require', undefined, true, true) : require = J$.R(1429937, 'require', require, true, true)), false)(J$.T(1429945, 'core-js/modules/es.array.join', 21, false));
            J$.F(1429977, J$.I(typeof require === 'undefined' ? require = J$.R(1429961, 'require', undefined, true, true) : require = J$.R(1429961, 'require', require, true, true)), false)(J$.T(1429969, 'core-js/modules/es.array.map', 21, false));
            J$.F(1430001, J$.I(typeof require === 'undefined' ? require = J$.R(1429985, 'require', undefined, true, true) : require = J$.R(1429985, 'require', require, true, true)), false)(J$.T(1429993, 'core-js/modules/es.array.slice', 21, false));
            J$.F(1430025, J$.I(typeof require === 'undefined' ? require = J$.R(1430009, 'require', undefined, true, true) : require = J$.R(1430009, 'require', require, true, true)), false)(J$.T(1430017, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(1430049, J$.I(typeof require === 'undefined' ? require = J$.R(1430033, 'require', undefined, true, true) : require = J$.R(1430033, 'require', require, true, true)), false)(J$.T(1430041, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1430073, J$.I(typeof require === 'undefined' ? require = J$.R(1430057, 'require', undefined, true, true) : require = J$.R(1430057, 'require', require, true, true)), false)(J$.T(1430065, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1430097, J$.I(typeof require === 'undefined' ? require = J$.R(1430081, 'require', undefined, true, true) : require = J$.R(1430081, 'require', require, true, true)), false)(J$.T(1430089, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(1430121, J$.I(typeof require === 'undefined' ? require = J$.R(1430105, 'require', undefined, true, true) : require = J$.R(1430105, 'require', require, true, true)), false)(J$.T(1430113, 'core-js/modules/es.string.replace', 21, false));
            J$.F(1430145, J$.I(typeof require === 'undefined' ? require = J$.R(1430129, 'require', undefined, true, true) : require = J$.R(1430129, 'require', require, true, true)), false)(J$.T(1430137, 'core-js/modules/es.string.split', 21, false));
            J$.P(1430169, J$.I(typeof module === 'undefined' ? module = J$.R(1430153, 'module', undefined, true, true) : module = J$.R(1430153, 'module', module, true, true)), 'exports', J$.R(1430161, 'Fingerprint', Fingerprint, false, true));
            var assert = J$.W(1430201, 'assert', J$.F(1430193, J$.I(typeof require === 'undefined' ? require = J$.R(1430177, 'require', undefined, true, true) : require = J$.R(1430177, 'require', require, true, true)), false)(J$.T(1430185, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(1430241, 'Buffer', J$.G(1430233, J$.F(1430225, J$.I(typeof require === 'undefined' ? require = J$.R(1430209, 'require', undefined, true, true) : require = J$.R(1430209, 'require', require, true, true)), false)(J$.T(1430217, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(1430273, 'algs', J$.F(1430265, J$.I(typeof require === 'undefined' ? require = J$.R(1430249, 'require', undefined, true, true) : require = J$.R(1430249, 'require', require, true, true)), false)(J$.T(1430257, './algs', 21, false)), algs, false, true);
            var crypto = J$.W(1430305, 'crypto', J$.F(1430297, J$.I(typeof require === 'undefined' ? require = J$.R(1430281, 'require', undefined, true, true) : require = J$.R(1430281, 'require', require, true, true)), false)(J$.T(1430289, 'crypto', 21, false)), crypto, false, true);
            var errs = J$.W(1430337, 'errs', J$.F(1430329, J$.I(typeof require === 'undefined' ? require = J$.R(1430313, 'require', undefined, true, true) : require = J$.R(1430313, 'require', require, true, true)), false)(J$.T(1430321, './errors', 21, false)), errs, false, true);
            var Key = J$.W(1430369, 'Key', J$.F(1430361, J$.I(typeof require === 'undefined' ? require = J$.R(1430345, 'require', undefined, true, true) : require = J$.R(1430345, 'require', require, true, true)), false)(J$.T(1430353, './key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(1430401, 'PrivateKey', J$.F(1430393, J$.I(typeof require === 'undefined' ? require = J$.R(1430377, 'require', undefined, true, true) : require = J$.R(1430377, 'require', require, true, true)), false)(J$.T(1430385, './private-key', 21, false)), PrivateKey, false, true);
            var Certificate = J$.W(1430433, 'Certificate', J$.F(1430425, J$.I(typeof require === 'undefined' ? require = J$.R(1430409, 'require', undefined, true, true) : require = J$.R(1430409, 'require', require, true, true)), false)(J$.T(1430417, './certificate', 21, false)), Certificate, false, true);
            var utils = J$.W(1430465, 'utils', J$.F(1430457, J$.I(typeof require === 'undefined' ? require = J$.R(1430441, 'require', undefined, true, true) : require = J$.R(1430441, 'require', require, true, true)), false)(J$.T(1430449, './utils', 21, false)), utils, false, true);
            var FingerprintFormatError = J$.W(1430489, 'FingerprintFormatError', J$.G(1430481, J$.R(1430473, 'errs', errs, false, true), 'FingerprintFormatError'), FingerprintFormatError, false, true);
            var InvalidAlgorithmError = J$.W(1430513, 'InvalidAlgorithmError', J$.G(1430505, J$.R(1430497, 'errs', errs, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            J$.P(1431393, J$.G(1430921, J$.R(1430913, 'Fingerprint', Fingerprint, false, true), 'prototype'), 'toString', J$.T(1431385, function (format) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1431361, arguments.callee, this, arguments);
                            arguments = J$.N(1431369, 'arguments', arguments, true, false, false);
                            format = J$.N(1431377, 'format', format, true, false, false);
                            if (J$.C(74304, J$.B(179866, '===', J$.R(1430929, 'format', format, false, false), J$.T(1430937, undefined, 24, false)))) {
                                if (J$.C(74296, J$.C(74288, J$.B(179874, '===', J$.G(1430953, J$.R(1430945, 'this', this, false, false), 'algorithm'), J$.T(1430961, 'md5', 21, false))) ? J$._() : J$.B(179882, '===', J$.G(1430977, J$.R(1430969, 'this', this, false, false), 'hashType'), J$.T(1430985, 'spki', 21, false))))
                                    format = J$.W(1431001, 'format', J$.T(1430993, 'hex', 21, false), format, false, false);
                                else
                                    format = J$.W(1431017, 'format', J$.T(1431009, 'base64', 21, false), format, false, false);
                            }
                            J$.M(1431041, J$.R(1431025, 'assert', assert, false, true), 'string', false)(J$.R(1431033, 'format', format, false, false));
                            switch (J$.C1(74328, J$.R(1431049, 'format', format, false, false))) {
                            case J$.C2(74336, J$.T(1431177, 'hex', 21, false)):
                                if (J$.C(74312, J$.B(179890, '===', J$.G(1431065, J$.R(1431057, 'this', this, false, false), 'hashType'), J$.T(1431073, 'spki', 21, false))))
                                    return J$.Rt(1431113, J$.M(1431105, J$.G(1431089, J$.R(1431081, 'this', this, false, false), 'hash'), 'toString', false)(J$.T(1431097, 'hex', 21, false)));
                                return J$.Rt(1431169, J$.F(1431161, J$.R(1431121, 'addColons', addColons, false, true), false)(J$.M(1431153, J$.G(1431137, J$.R(1431129, 'this', this, false, false), 'hash'), 'toString', false)(J$.T(1431145, 'hex', 21, false))));
                            case J$.C2(74344, J$.T(1431321, 'base64', 21, false)):
                                if (J$.C(74320, J$.B(179898, '===', J$.G(1431193, J$.R(1431185, 'this', this, false, false), 'hashType'), J$.T(1431201, 'spki', 21, false))))
                                    return J$.Rt(1431241, J$.M(1431233, J$.G(1431217, J$.R(1431209, 'this', this, false, false), 'hash'), 'toString', false)(J$.T(1431225, 'base64', 21, false)));
                                return J$.Rt(1431313, J$.F(1431305, J$.R(1431249, 'sshBase64Format', sshBase64Format, false, true), false)(J$.G(1431265, J$.R(1431257, 'this', this, false, false), 'algorithm'), J$.M(1431297, J$.G(1431281, J$.R(1431273, 'this', this, false, false), 'hash'), 'toString', false)(J$.T(1431289, 'base64', 21, false))));
                            default:
                                throw J$.F(1431353, J$.R(1431329, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.T(1431337, undefined, 24, false), J$.R(1431345, 'format', format, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1434713, J$e);
                        } finally {
                            if (J$.Fr(1434721))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1432121, J$.G(1431409, J$.R(1431401, 'Fingerprint', Fingerprint, false, true), 'prototype'), 'matches', J$.T(1432113, function (other) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1432073, arguments.callee, this, arguments);
                            arguments = J$.N(1432081, 'arguments', arguments, true, false, false);
                            other = J$.N(1432089, 'other', other, true, false, false);
                            J$.N(1432097, 'theirHash', theirHash, false, false, false);
                            J$.N(1432105, 'theirHash2', theirHash2, false, false, false);
                            J$.M(1431441, J$.R(1431417, 'assert', assert, false, true), 'object', false)(J$.R(1431425, 'other', other, false, false), J$.T(1431433, 'key or certificate', 21, false));
                            if (J$.C(74376, J$.C(74352, J$.B(179906, '===', J$.G(1431457, J$.R(1431449, 'this', this, false, false), 'type'), J$.T(1431465, 'key', 21, false))) ? J$.B(179914, '!==', J$.G(1431481, J$.R(1431473, 'this', this, false, false), 'hashType'), J$.T(1431489, 'ssh', 21, false)) : J$._())) {
                                J$.M(1431553, J$.R(1431497, 'utils', utils, false, true), 'assertCompatible', false)(J$.R(1431505, 'other', other, false, false), J$.R(1431513, 'Key', Key, false, true), J$.T(1431537, [
                                    J$.T(1431521, 1, 22, false),
                                    J$.T(1431529, 7, 22, false)
                                ], 10, false), J$.T(1431545, 'key with spki', 21, false));
                                if (J$.C(74360, J$.M(1431577, J$.R(1431561, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1431569, 'other', other, false, false)))) {
                                    J$.M(1431641, J$.R(1431585, 'utils', utils, false, true), 'assertCompatible', false)(J$.R(1431593, 'other', other, false, false), J$.R(1431601, 'PrivateKey', PrivateKey, false, true), J$.T(1431625, [
                                        J$.T(1431609, 1, 22, false),
                                        J$.T(1431617, 6, 22, false)
                                    ], 10, false), J$.T(1431633, 'privatekey with spki support', 21, false));
                                }
                            } else if (J$.C(74368, J$.B(179922, '===', J$.G(1431657, J$.R(1431649, 'this', this, false, false), 'type'), J$.T(1431665, 'key', 21, false)))) {
                                J$.M(1431729, J$.R(1431673, 'utils', utils, false, true), 'assertCompatible', false)(J$.R(1431681, 'other', other, false, false), J$.R(1431689, 'Key', Key, false, true), J$.T(1431713, [
                                    J$.T(1431697, 1, 22, false),
                                    J$.T(1431705, 0, 22, false)
                                ], 10, false), J$.T(1431721, 'key', 21, false));
                            } else {
                                J$.M(1431793, J$.R(1431737, 'utils', utils, false, true), 'assertCompatible', false)(J$.R(1431745, 'other', other, false, false), J$.R(1431753, 'Certificate', Certificate, false, true), J$.T(1431777, [
                                    J$.T(1431761, 1, 22, false),
                                    J$.T(1431769, 0, 22, false)
                                ], 10, false), J$.T(1431785, 'certificate', 21, false));
                            }
                            var theirHash = J$.W(1431849, 'theirHash', J$.M(1431841, J$.R(1431801, 'other', other, false, false), 'hash', false)(J$.G(1431817, J$.R(1431809, 'this', this, false, false), 'algorithm'), J$.G(1431833, J$.R(1431825, 'this', this, false, false), 'hashType')), theirHash, false, false);
                            var theirHash2 = J$.W(1431921, 'theirHash2', J$.M(1431913, J$.M(1431897, J$.M(1431881, J$.R(1431857, 'crypto', crypto, false, true), 'createHash', false)(J$.G(1431873, J$.R(1431865, 'this', this, false, false), 'algorithm')), 'update', false)(J$.R(1431889, 'theirHash', theirHash, false, false)), 'digest', false)(J$.T(1431905, 'base64', 21, false)), theirHash2, false, false);
                            if (J$.C(74384, J$.B(179930, '===', J$.G(1431937, J$.R(1431929, 'this', this, false, false), 'hash2'), J$.T(1431945, undefined, 24, false))))
                                J$.P(1432033, J$.R(1431953, 'this', this, false, false), 'hash2', J$.M(1432025, J$.M(1432009, J$.M(1431985, J$.R(1431961, 'crypto', crypto, false, true), 'createHash', false)(J$.G(1431977, J$.R(1431969, 'this', this, false, false), 'algorithm')), 'update', false)(J$.G(1432001, J$.R(1431993, 'this', this, false, false), 'hash')), 'digest', false)(J$.T(1432017, 'base64', 21, false)));
                            return J$.Rt(1432065, J$.B(179938, '===', J$.G(1432049, J$.R(1432041, 'this', this, false, false), 'hash2'), J$.R(1432057, 'theirHash2', theirHash2, false, false)));
                        } catch (J$e) {
                            J$.Ex(1434729, J$e);
                        } finally {
                            if (J$.Fr(1434737))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var base64RE = J$.W(1432137, 'base64RE', J$.T(1432129, /^[A-Za-z0-9+\/=]+$/, 14, false), base64RE, false, true);
            var hexRE = J$.W(1432153, 'hexRE', J$.T(1432145, /^[a-fA-F0-9]+$/, 14, false), hexRE, false, true);
            J$.P(1434001, J$.R(1432161, 'Fingerprint', Fingerprint, false, true), 'parse', J$.T(1433993, function (fp, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1433921, arguments.callee, this, arguments);
                            arguments = J$.N(1433929, 'arguments', arguments, true, false, false);
                            fp = J$.N(1433937, 'fp', fp, true, false, false);
                            options = J$.N(1433945, 'options', options, true, false, false);
                            J$.N(1433953, 'alg', alg, false, false, false);
                            J$.N(1433961, 'hash', hash, false, false, false);
                            J$.N(1433969, 'enAlgs', enAlgs, false, false, false);
                            J$.N(1433977, 'hashType', hashType, false, false, false);
                            J$.N(1433985, 'parts', parts, false, false, false);
                            J$.M(1432193, J$.R(1432169, 'assert', assert, false, true), 'string', false)(J$.R(1432177, 'fp', fp, false, false), J$.T(1432185, 'fingerprint', 21, false));
                            var alg, hash, enAlgs;
                            if (J$.C(74392, J$.M(1432217, J$.I(typeof Array === 'undefined' ? Array = J$.R(1432201, 'Array', undefined, true, true) : Array = J$.R(1432201, 'Array', Array, true, true)), 'isArray', false)(J$.R(1432209, 'options', options, false, false)))) {
                                enAlgs = J$.W(1432233, 'enAlgs', J$.R(1432225, 'options', options, false, false), enAlgs, false, false);
                                options = J$.W(1432249, 'options', J$.T(1432241, {}, 11, false), options, false, false);
                            }
                            J$.M(1432281, J$.R(1432257, 'assert', assert, false, true), 'optionalObject', false)(J$.R(1432265, 'options', options, false, false), J$.T(1432273, 'options', 21, false));
                            if (J$.C(74400, J$.B(179946, '===', J$.R(1432289, 'options', options, false, false), J$.T(1432297, undefined, 24, false))))
                                options = J$.W(1432313, 'options', J$.T(1432305, {}, 11, false), options, false, false);
                            if (J$.C(74408, J$.B(179954, '!==', J$.G(1432329, J$.R(1432321, 'options', options, false, false), 'enAlgs'), J$.T(1432337, undefined, 24, false))))
                                enAlgs = J$.W(1432361, 'enAlgs', J$.G(1432353, J$.R(1432345, 'options', options, false, false), 'enAlgs'), enAlgs, false, false);
                            if (J$.C(74416, J$.B(179962, '!==', J$.G(1432377, J$.R(1432369, 'options', options, false, false), 'algorithms'), J$.T(1432385, undefined, 24, false))))
                                enAlgs = J$.W(1432409, 'enAlgs', J$.G(1432401, J$.R(1432393, 'options', options, false, false), 'algorithms'), enAlgs, false, false);
                            J$.M(1432441, J$.R(1432417, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.R(1432425, 'enAlgs', enAlgs, false, false), J$.T(1432433, 'algorithms', 21, false));
                            var hashType = J$.W(1432457, 'hashType', J$.T(1432449, 'ssh', 21, false), hashType, false, false);
                            if (J$.C(74424, J$.B(179970, '!==', J$.G(1432473, J$.R(1432465, 'options', options, false, false), 'hashType'), J$.T(1432481, undefined, 24, false))))
                                hashType = J$.W(1432505, 'hashType', J$.G(1432497, J$.R(1432489, 'options', options, false, false), 'hashType'), hashType, false, false);
                            J$.M(1432537, J$.R(1432513, 'assert', assert, false, true), 'string', false)(J$.R(1432521, 'hashType', hashType, false, false), J$.T(1432529, 'options.hashType', 21, false));
                            var parts = J$.W(1432569, 'parts', J$.M(1432561, J$.R(1432545, 'fp', fp, false, false), 'split', false)(J$.T(1432553, ':', 21, false)), parts, false, false);
                            if (J$.C(74552, J$.B(179978, '==', J$.G(1432585, J$.R(1432577, 'parts', parts, false, false), 'length'), J$.T(1432593, 2, 22, false)))) {
                                alg = J$.W(1432633, 'alg', J$.M(1432625, J$.G(1432617, J$.R(1432601, 'parts', parts, false, false), J$.T(1432609, 0, 22, false)), 'toLowerCase', false)(), alg, false, false);
                                if (J$.C(74432, J$.U(179986, '!', J$.M(1432673, J$.R(1432641, 'base64RE', base64RE, false, true), 'test', false)(J$.G(1432665, J$.R(1432649, 'parts', parts, false, false), J$.T(1432657, 1, 22, false))))))
                                    throw J$.F(1432697, J$.R(1432681, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(1432689, 'fp', fp, false, false));
                                try {
                                    hash = J$.W(1432753, 'hash', J$.M(1432745, J$.R(1432705, 'Buffer', Buffer, false, true), 'from', false)(J$.G(1432729, J$.R(1432713, 'parts', parts, false, false), J$.T(1432721, 1, 22, false)), J$.T(1432737, 'base64', 21, false)), hash, false, false);
                                } catch (e) {
                                    J$.N(1432785, 'e', e, false, false, true);
                                    throw J$.F(1432777, J$.R(1432761, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(1432769, 'fp', fp, false, false));
                                }
                            } else if (J$.C(74544, J$.B(179994, '>', J$.G(1432801, J$.R(1432793, 'parts', parts, false, false), 'length'), J$.T(1432809, 2, 22, false)))) {
                                alg = J$.W(1432825, 'alg', J$.T(1432817, 'md5', 21, false), alg, false, false);
                                if (J$.C(74440, J$.B(180002, '===', J$.M(1432857, J$.G(1432849, J$.R(1432833, 'parts', parts, false, false), J$.T(1432841, 0, 22, false)), 'toLowerCase', false)(), J$.T(1432865, 'md5', 21, false))))
                                    parts = J$.W(1432897, 'parts', J$.M(1432889, J$.R(1432873, 'parts', parts, false, false), 'slice', false)(J$.T(1432881, 1, 22, false)), parts, false, false);
                                parts = J$.W(1433065, 'parts', J$.M(1433057, J$.R(1432905, 'parts', parts, false, false), 'map', false)(J$.T(1433049, function (p) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(1433025, arguments.callee, this, arguments);
                                                arguments = J$.N(1433033, 'arguments', arguments, true, false, false);
                                                p = J$.N(1433041, 'p', p, true, false, false);
                                                while (J$.C(74448, J$.B(180010, '<', J$.G(1432921, J$.R(1432913, 'p', p, false, false), 'length'), J$.T(1432929, 2, 22, false)))) {
                                                    p = J$.W(1432953, 'p', J$.B(180018, '+', J$.T(1432937, '0', 21, false), J$.R(1432945, 'p', p, false, false)), p, false, false);
                                                }
                                                if (J$.C(74456, J$.B(180026, '>', J$.G(1432969, J$.R(1432961, 'p', p, false, false), 'length'), J$.T(1432977, 2, 22, false))))
                                                    throw J$.F(1433001, J$.R(1432985, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(1432993, 'fp', fp, false, false));
                                                return J$.Rt(1433017, J$.R(1433009, 'p', p, false, false));
                                            } catch (J$e) {
                                                J$.Ex(1434745, J$e);
                                            } finally {
                                                if (J$.Fr(1434753))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), parts, false, false);
                                parts = J$.W(1433097, 'parts', J$.M(1433089, J$.R(1433073, 'parts', parts, false, false), 'join', false)(J$.T(1433081, '', 21, false)), parts, false, false);
                                if (J$.C(74472, J$.C(74464, J$.U(180034, '!', J$.M(1433121, J$.R(1433105, 'hexRE', hexRE, false, true), 'test', false)(J$.R(1433113, 'parts', parts, false, false)))) ? J$._() : J$.B(180050, '!==', J$.B(180042, '%', J$.G(1433137, J$.R(1433129, 'parts', parts, false, false), 'length'), J$.T(1433145, 2, 22, false)), J$.T(1433153, 0, 22, false))))
                                    throw J$.F(1433177, J$.R(1433161, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(1433169, 'fp', fp, false, false));
                                try {
                                    hash = J$.W(1433217, 'hash', J$.M(1433209, J$.R(1433185, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1433193, 'parts', parts, false, false), J$.T(1433201, 'hex', 21, false)), hash, false, false);
                                } catch (e) {
                                    J$.N(1433249, 'e', e, false, false, true);
                                    throw J$.F(1433241, J$.R(1433225, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(1433233, 'fp', fp, false, false));
                                }
                            } else {
                                if (J$.C(74488, J$.M(1433273, J$.R(1433257, 'hexRE', hexRE, false, true), 'test', false)(J$.R(1433265, 'fp', fp, false, false)))) {
                                    hash = J$.W(1433313, 'hash', J$.M(1433305, J$.R(1433281, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1433289, 'fp', fp, false, false), J$.T(1433297, 'hex', 21, false)), hash, false, false);
                                } else if (J$.C(74480, J$.M(1433337, J$.R(1433321, 'base64RE', base64RE, false, true), 'test', false)(J$.R(1433329, 'fp', fp, false, false)))) {
                                    hash = J$.W(1433377, 'hash', J$.M(1433369, J$.R(1433345, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1433353, 'fp', fp, false, false), J$.T(1433361, 'base64', 21, false)), hash, false, false);
                                } else {
                                    throw J$.F(1433401, J$.R(1433385, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(1433393, 'fp', fp, false, false));
                                }
                                switch (J$.C1(74496, J$.G(1433417, J$.R(1433409, 'hash', hash, false, false), 'length'))) {
                                case J$.C2(74504, J$.T(1433441, 32, 22, false)):
                                    alg = J$.W(1433433, 'alg', J$.T(1433425, 'sha256', 21, false), alg, false, false);
                                    break;
                                case J$.C2(74512, J$.T(1433465, 16, 22, false)):
                                    alg = J$.W(1433457, 'alg', J$.T(1433449, 'md5', 21, false), alg, false, false);
                                    break;
                                case J$.C2(74520, J$.T(1433489, 20, 22, false)):
                                    alg = J$.W(1433481, 'alg', J$.T(1433473, 'sha1', 21, false), alg, false, false);
                                    break;
                                case J$.C2(74528, J$.T(1433513, 64, 22, false)):
                                    alg = J$.W(1433505, 'alg', J$.T(1433497, 'sha512', 21, false), alg, false, false);
                                    break;
                                default:
                                    throw J$.F(1433537, J$.R(1433521, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(1433529, 'fp', fp, false, false));
                                }
                                if (J$.C(74536, J$.B(180058, '===', J$.G(1433553, J$.R(1433545, 'options', options, false, false), 'hashType'), J$.T(1433561, undefined, 24, false))))
                                    hashType = J$.W(1433577, 'hashType', J$.T(1433569, 'spki', 21, false), hashType, false, false);
                            }
                            if (J$.C(74560, J$.B(180066, '===', J$.R(1433585, 'alg', alg, false, false), J$.T(1433593, undefined, 24, false))))
                                throw J$.F(1433617, J$.R(1433601, 'FingerprintFormatError', FingerprintFormatError, false, true), true)(J$.R(1433609, 'fp', fp, false, false));
                            if (J$.C(74568, J$.B(180074, '===', J$.G(1433649, J$.G(1433633, J$.R(1433625, 'algs', algs, false, true), 'hashAlgs'), J$.R(1433641, 'alg', alg, false, false)), J$.T(1433657, undefined, 24, false))))
                                throw J$.F(1433681, J$.R(1433665, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.R(1433673, 'alg', alg, false, false));
                            if (J$.C(74584, J$.B(180082, '!==', J$.R(1433689, 'enAlgs', enAlgs, false, false), J$.T(1433697, undefined, 24, false)))) {
                                enAlgs = J$.W(1433777, 'enAlgs', J$.M(1433769, J$.R(1433705, 'enAlgs', enAlgs, false, false), 'map', false)(J$.T(1433761, function (a) {
                                    jalangiLabel4:
                                        while (true) {
                                            try {
                                                J$.Fe(1433737, arguments.callee, this, arguments);
                                                arguments = J$.N(1433745, 'arguments', arguments, true, false, false);
                                                a = J$.N(1433753, 'a', a, true, false, false);
                                                return J$.Rt(1433729, J$.M(1433721, J$.R(1433713, 'a', a, false, false), 'toLowerCase', false)());
                                            } catch (J$e) {
                                                J$.Ex(1434761, J$e);
                                            } finally {
                                                if (J$.Fr(1434769))
                                                    continue jalangiLabel4;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), enAlgs, false, false);
                                if (J$.C(74576, J$.B(180098, '===', J$.M(1433801, J$.R(1433785, 'enAlgs', enAlgs, false, false), 'indexOf', false)(J$.R(1433793, 'alg', alg, false, false)), J$.U(180090, '-', J$.T(1433809, 1, 22, false)))))
                                    throw J$.F(1433833, J$.R(1433817, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.R(1433825, 'alg', alg, false, false));
                            }
                            return J$.Rt(1433913, J$.F(1433905, J$.R(1433841, 'Fingerprint', Fingerprint, false, true), true)(J$.T(1433897, {
                                algorithm: J$.R(1433849, 'alg', alg, false, false),
                                hash: J$.R(1433857, 'hash', hash, false, false),
                                type: J$.C(74592, J$.G(1433873, J$.R(1433865, 'options', options, false, false), 'type')) ? J$._() : J$.T(1433881, 'key', 21, false),
                                hashType: J$.R(1433889, 'hashType', hashType, false, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1434777, J$e);
                        } finally {
                            if (J$.Fr(1434785))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1434321, J$.R(1434225, 'Fingerprint', Fingerprint, false, true), 'isFingerprint', J$.T(1434313, function (obj, ver) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(1434281, arguments.callee, this, arguments);
                            arguments = J$.N(1434289, 'arguments', arguments, true, false, false);
                            obj = J$.N(1434297, 'obj', obj, true, false, false);
                            ver = J$.N(1434305, 'ver', ver, true, false, false);
                            return J$.Rt(1434273, J$.M(1434265, J$.R(1434233, 'utils', utils, false, true), 'isCompatible', false)(J$.R(1434241, 'obj', obj, false, false), J$.R(1434249, 'Fingerprint', Fingerprint, false, true), J$.R(1434257, 'ver', ver, false, false)));
                        } catch (J$e) {
                            J$.Ex(1434841, J$e);
                        } finally {
                            if (J$.Fr(1434849))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1434369, J$.G(1434337, J$.R(1434329, 'Fingerprint', Fingerprint, false, true), 'prototype'), '_sshpkApiVersion', J$.T(1434361, [
                J$.T(1434345, 1, 22, false),
                J$.T(1434353, 2, 22, false)
            ], 10, false));
            J$.P(1434513, J$.R(1434377, 'Fingerprint', Fingerprint, false, true), '_oldVersionDetect', J$.T(1434505, function (obj) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(1434481, arguments.callee, this, arguments);
                            arguments = J$.N(1434489, 'arguments', arguments, true, false, false);
                            obj = J$.N(1434497, 'obj', obj, true, false, false);
                            J$.M(1434409, J$.R(1434385, 'assert', assert, false, true), 'func', false)(J$.G(1434401, J$.R(1434393, 'obj', obj, false, false), 'toString'));
                            J$.M(1434441, J$.R(1434417, 'assert', assert, false, true), 'func', false)(J$.G(1434433, J$.R(1434425, 'obj', obj, false, false), 'matches'));
                            return J$.Rt(1434473, J$.T(1434465, [
                                J$.T(1434449, 1, 22, false),
                                J$.T(1434457, 0, 22, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(1434857, J$e);
                        } finally {
                            if (J$.Fr(1434865))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1434873, J$e);
        } finally {
            if (J$.Sr(1434881))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

