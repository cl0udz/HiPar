J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(1501993, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/sshpk/lib/formats/ssh.js');
            function read(buf, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1501513, arguments.callee, this, arguments);
                            arguments = J$.N(1501521, 'arguments', arguments, true, false, false);
                            buf = J$.N(1501529, 'buf', buf, true, false, false);
                            options = J$.N(1501537, 'options', options, true, false, false);
                            J$.N(1501545, 'trimmed', trimmed, false, false, false);
                            J$.N(1501553, 'm', m, false, false, false);
                            J$.N(1501561, 'type', type, false, false, false);
                            J$.N(1501569, 'kbuf', kbuf, false, false, false);
                            J$.N(1501577, 'key', key, false, false, false);
                            J$.N(1501585, 'ret', ret, false, false, false);
                            J$.N(1501593, 'data', data, false, false, false);
                            J$.N(1501601, 'realOffset', realOffset, false, false, false);
                            J$.N(1501609, 'padding', padding, false, false, false);
                            J$.N(1501617, 'trailer', trailer, false, false, false);
                            if (J$.C(77280, J$.B(184146, '!==', J$.U(184138, 'typeof', J$.R(1500137, 'buf', buf, false, false)), J$.T(1500145, 'string', 21, false)))) {
                                J$.M(1500177, J$.R(1500153, 'assert', assert, false, true), 'buffer', false)(J$.R(1500161, 'buf', buf, false, false), J$.T(1500169, 'buf', 21, false));
                                buf = J$.W(1500209, 'buf', J$.M(1500201, J$.R(1500185, 'buf', buf, false, false), 'toString', false)(J$.T(1500193, 'ascii', 21, false)), buf, false, false);
                            }
                            var trimmed = J$.W(1500257, 'trimmed', J$.M(1500249, J$.M(1500225, J$.R(1500217, 'buf', buf, false, false), 'trim', false)(), 'replace', false)(J$.T(1500233, /[\\\r]/g, 14, false), J$.T(1500241, '', 21, false)), trimmed, false, false);
                            var m = J$.W(1500289, 'm', J$.M(1500281, J$.R(1500265, 'trimmed', trimmed, false, false), 'match', false)(J$.R(1500273, 'SSHKEY_RE', SSHKEY_RE, false, true)), m, false, false);
                            if (J$.C(77288, J$.U(184154, '!', J$.R(1500297, 'm', m, false, false))))
                                m = J$.W(1500329, 'm', J$.M(1500321, J$.R(1500305, 'trimmed', trimmed, false, false), 'match', false)(J$.R(1500313, 'SSHKEY_RE2', SSHKEY_RE2, false, true)), m, false, false);
                            J$.M(1500361, J$.R(1500337, 'assert', assert, false, true), 'ok', false)(J$.R(1500345, 'm', m, false, false), J$.T(1500353, 'key must match regex', 21, false));
                            var type = J$.W(1500409, 'type', J$.M(1500401, J$.R(1500369, 'rfc4253', rfc4253, false, true), 'algToKeyType', false)(J$.G(1500393, J$.R(1500377, 'm', m, false, false), J$.T(1500385, 1, 22, false))), type, false, false);
                            var kbuf = J$.W(1500465, 'kbuf', J$.M(1500457, J$.R(1500417, 'Buffer', Buffer, false, true), 'from', false)(J$.G(1500441, J$.R(1500425, 'm', m, false, false), J$.T(1500433, 2, 22, false)), J$.T(1500449, 'base64', 21, false)), kbuf, false, false);
                            var key;
                            var ret = J$.W(1500481, 'ret', J$.T(1500473, {}, 11, false), ret, false, false);
                            if (J$.C(77296, J$.G(1500505, J$.R(1500489, 'm', m, false, false), J$.T(1500497, 4, 22, false)))) {
                                try {
                                    key = J$.W(1500537, 'key', J$.M(1500529, J$.R(1500513, 'rfc4253', rfc4253, false, true), 'read', false)(J$.R(1500521, 'kbuf', kbuf, false, false)), key, false, false);
                                } catch (e) {
                                    J$.N(1500713, 'e', e, false, false, true);
                                    m = J$.W(1500569, 'm', J$.M(1500561, J$.R(1500545, 'trimmed', trimmed, false, false), 'match', false)(J$.R(1500553, 'SSHKEY_RE2', SSHKEY_RE2, false, true)), m, false, false);
                                    J$.M(1500601, J$.R(1500577, 'assert', assert, false, true), 'ok', false)(J$.R(1500585, 'm', m, false, false), J$.T(1500593, 'key must match regex', 21, false));
                                    kbuf = J$.W(1500657, 'kbuf', J$.M(1500649, J$.R(1500609, 'Buffer', Buffer, false, true), 'from', false)(J$.G(1500633, J$.R(1500617, 'm', m, false, false), J$.T(1500625, 2, 22, false)), J$.T(1500641, 'base64', 21, false)), kbuf, false, false);
                                    key = J$.W(1500705, 'key', J$.M(1500697, J$.R(1500665, 'rfc4253', rfc4253, false, true), 'readInternal', false)(J$.R(1500673, 'ret', ret, false, false), J$.T(1500681, 'public', 21, false), J$.R(1500689, 'kbuf', kbuf, false, false)), key, false, false);
                                }
                            } else {
                                key = J$.W(1500761, 'key', J$.M(1500753, J$.R(1500721, 'rfc4253', rfc4253, false, true), 'readInternal', false)(J$.R(1500729, 'ret', ret, false, false), J$.T(1500737, 'public', 21, false), J$.R(1500745, 'kbuf', kbuf, false, false)), key, false, false);
                            }
                            J$.M(1500801, J$.R(1500769, 'assert', assert, false, true), 'strictEqual', false)(J$.R(1500777, 'type', type, false, false), J$.G(1500793, J$.R(1500785, 'key', key, false, false), 'type'));
                            if (J$.C(77360, J$.C(77304, J$.G(1500825, J$.R(1500809, 'm', m, false, false), J$.T(1500817, 4, 22, false))) ? J$.B(184162, '>', J$.G(1500857, J$.G(1500849, J$.R(1500833, 'm', m, false, false), J$.T(1500841, 4, 22, false)), 'length'), J$.T(1500865, 0, 22, false)) : J$._())) {
                                J$.P(1500905, J$.R(1500873, 'key', key, false, false), 'comment', J$.G(1500897, J$.R(1500881, 'm', m, false, false), J$.T(1500889, 4, 22, false)));
                            } else if (J$.C(77352, J$.G(1500921, J$.R(1500913, 'ret', ret, false, false), 'consumed'))) {
                                var data = J$.W(1501009, 'data', J$.B(184170, '+', J$.G(1500945, J$.R(1500929, 'm', m, false, false), J$.T(1500937, 2, 22, false)), J$.C(77312, J$.G(1500969, J$.R(1500953, 'm', m, false, false), J$.T(1500961, 3, 22, false))) ? J$.G(1500993, J$.R(1500977, 'm', m, false, false), J$.T(1500985, 3, 22, false)) : J$.T(1501001, '', 21, false)), data, false, false);
                                var realOffset = J$.W(1501065, 'realOffset', J$.B(184186, '*', J$.M(1501049, J$.I(typeof Math === 'undefined' ? Math = J$.R(1501017, 'Math', undefined, true, true) : Math = J$.R(1501017, 'Math', Math, true, true)), 'ceil', false)(J$.B(184178, '/', J$.G(1501033, J$.R(1501025, 'ret', ret, false, false), 'consumed'), J$.T(1501041, 3, 22, false))), J$.T(1501057, 4, 22, false)), realOffset, false, false);
                                data = J$.W(1501169, 'data', J$.B(184210, '+', J$.M(1501129, J$.M(1501105, J$.R(1501073, 'data', data, false, false), 'slice', false)(J$.T(1501081, 0, 22, false), J$.B(184194, '-', J$.R(1501089, 'realOffset', realOffset, false, false), J$.T(1501097, 2, 22, false))), 'replace', false)(J$.T(1501113, /[^a-zA-Z0-9+\/=]/g, 14, false), J$.T(1501121, '', 21, false)), J$.M(1501161, J$.R(1501137, 'data', data, false, false), 'slice', false)(J$.B(184202, '-', J$.R(1501145, 'realOffset', realOffset, false, false), J$.T(1501153, 2, 22, false)))), data, false, false);
                                var padding = J$.W(1501201, 'padding', J$.B(184218, '%', J$.G(1501185, J$.R(1501177, 'ret', ret, false, false), 'consumed'), J$.T(1501193, 3, 22, false)), padding, false, false);
                                if (J$.C(77328, J$.C(77320, J$.B(184226, '>', J$.R(1501209, 'padding', padding, false, false), J$.T(1501217, 0, 22, false))) ? J$.B(184242, '!==', J$.M(1501257, J$.R(1501225, 'data', data, false, false), 'slice', false)(J$.B(184234, '-', J$.R(1501233, 'realOffset', realOffset, false, false), J$.T(1501241, 1, 22, false)), J$.R(1501249, 'realOffset', realOffset, false, false)), J$.T(1501265, '=', 21, false)) : J$._()))
                                    J$.B(184266, '+', realOffset = J$.W(1501281, 'realOffset', J$.B(184258, '-', J$.U(184250, '+', J$.R(1501273, 'realOffset', realOffset, false, false)), 1), realOffset, false, false), 1);
                                while (J$.C(77336, J$.B(184282, '===', J$.M(1501321, J$.R(1501289, 'data', data, false, false), 'slice', false)(J$.R(1501297, 'realOffset', realOffset, false, false), J$.B(184274, '+', J$.R(1501305, 'realOffset', realOffset, false, false), J$.T(1501313, 1, 22, false))), J$.T(1501329, '=', 21, false)))) {
                                    J$.B(184306, '-', realOffset = J$.W(1501345, 'realOffset', J$.B(184298, '+', J$.U(184290, '+', J$.R(1501337, 'realOffset', realOffset, false, false)), 1), realOffset, false, false), 1);
                                }
                                var trailer = J$.W(1501377, 'trailer', J$.M(1501369, J$.R(1501353, 'data', data, false, false), 'slice', false)(J$.R(1501361, 'realOffset', realOffset, false, false)), trailer, false, false);
                                trailer = J$.W(1501441, 'trailer', J$.M(1501433, J$.M(1501409, J$.R(1501385, 'trailer', trailer, false, false), 'replace', false)(J$.T(1501393, /[\r\n]/g, 14, false), J$.T(1501401, ' ', 21, false)), 'replace', false)(J$.T(1501417, /^\s+/, 14, false), J$.T(1501425, '', 21, false)), trailer, false, false);
                                if (J$.C(77344, J$.M(1501465, J$.R(1501449, 'trailer', trailer, false, false), 'match', false)(J$.T(1501457, /^[a-zA-Z0-9]/, 14, false))))
                                    J$.P(1501489, J$.R(1501473, 'key', key, false, false), 'comment', J$.R(1501481, 'trailer', trailer, false, false));
                            }
                            return J$.Rt(1501505, J$.R(1501497, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(1502105, J$e);
                        } finally {
                            if (J$.Fr(1502113))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1501937, arguments.callee, this, arguments);
                            arguments = J$.N(1501945, 'arguments', arguments, true, false, false);
                            key = J$.N(1501953, 'key', key, true, false, false);
                            options = J$.N(1501961, 'options', options, true, false, false);
                            J$.N(1501969, 'parts', parts, false, false, false);
                            J$.N(1501977, 'alg', alg, false, false, false);
                            J$.N(1501985, 'buf', buf, false, false, false);
                            J$.M(1501641, J$.R(1501625, 'assert', assert, false, true), 'object', false)(J$.R(1501633, 'key', key, false, false));
                            if (J$.C(77368, J$.U(184314, '!', J$.M(1501665, J$.R(1501649, 'Key', Key, false, true), 'isKey', false)(J$.R(1501657, 'key', key, false, false)))))
                                throw J$.F(1501689, J$.I(typeof Error === 'undefined' ? Error = J$.R(1501673, 'Error', undefined, true, true) : Error = J$.R(1501673, 'Error', Error, true, true)), true)(J$.T(1501681, 'Must be a public key', 21, false));
                            var parts = J$.W(1501705, 'parts', J$.T(1501697, [], 10, false), parts, false, false);
                            var alg = J$.W(1501737, 'alg', J$.M(1501729, J$.R(1501713, 'rfc4253', rfc4253, false, true), 'keyTypeToAlg', false)(J$.R(1501721, 'key', key, false, false)), alg, false, false);
                            J$.M(1501761, J$.R(1501745, 'parts', parts, false, false), 'push', false)(J$.R(1501753, 'alg', alg, false, false));
                            var buf = J$.W(1501793, 'buf', J$.M(1501785, J$.R(1501769, 'rfc4253', rfc4253, false, true), 'write', false)(J$.R(1501777, 'key', key, false, false)), buf, false, false);
                            J$.M(1501833, J$.R(1501801, 'parts', parts, false, false), 'push', false)(J$.M(1501825, J$.R(1501809, 'buf', buf, false, false), 'toString', false)(J$.T(1501817, 'base64', 21, false)));
                            if (J$.C(77376, J$.G(1501849, J$.R(1501841, 'key', key, false, false), 'comment')))
                                J$.M(1501881, J$.R(1501857, 'parts', parts, false, false), 'push', false)(J$.G(1501873, J$.R(1501865, 'key', key, false, false), 'comment'));
                            return J$.Rt(1501929, J$.M(1501921, J$.R(1501889, 'Buffer', Buffer, false, true), 'from', false)(J$.M(1501913, J$.R(1501897, 'parts', parts, false, false), 'join', false)(J$.T(1501905, ' ', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1502121, J$e);
                        } finally {
                            if (J$.Fr(1502129))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1502001, 'assert', assert, false, false, false);
            J$.N(1502009, 'Buffer', Buffer, false, false, false);
            J$.N(1502017, 'rfc4253', rfc4253, false, false, false);
            J$.N(1502025, 'utils', utils, false, false, false);
            J$.N(1502033, 'Key', Key, false, false, false);
            J$.N(1502041, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(1502049, 'sshpriv', sshpriv, false, false, false);
            J$.N(1502057, 'SSHKEY_RE', SSHKEY_RE, false, false, false);
            J$.N(1502065, 'SSHKEY_RE2', SSHKEY_RE2, false, false, false);
            read = J$.N(1502081, 'read', J$.T(1502073, read, 12, false), true, false, false);
            write = J$.N(1502097, 'write', J$.T(1502089, write, 12, false), true, false, false);
            J$.T(1499609, 'use strict', 21, false);
            J$.F(1499633, J$.I(typeof require === 'undefined' ? require = J$.R(1499617, 'require', undefined, true, true) : require = J$.R(1499617, 'require', require, true, true)), false)(J$.T(1499625, 'core-js/modules/es.array.join', 21, false));
            J$.F(1499657, J$.I(typeof require === 'undefined' ? require = J$.R(1499641, 'require', undefined, true, true) : require = J$.R(1499641, 'require', require, true, true)), false)(J$.T(1499649, 'core-js/modules/es.array.slice', 21, false));
            J$.F(1499681, J$.I(typeof require === 'undefined' ? require = J$.R(1499665, 'require', undefined, true, true) : require = J$.R(1499665, 'require', require, true, true)), false)(J$.T(1499673, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(1499705, J$.I(typeof require === 'undefined' ? require = J$.R(1499689, 'require', undefined, true, true) : require = J$.R(1499689, 'require', require, true, true)), false)(J$.T(1499697, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1499729, J$.I(typeof require === 'undefined' ? require = J$.R(1499713, 'require', undefined, true, true) : require = J$.R(1499713, 'require', require, true, true)), false)(J$.T(1499721, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1499753, J$.I(typeof require === 'undefined' ? require = J$.R(1499737, 'require', undefined, true, true) : require = J$.R(1499737, 'require', require, true, true)), false)(J$.T(1499745, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(1499777, J$.I(typeof require === 'undefined' ? require = J$.R(1499761, 'require', undefined, true, true) : require = J$.R(1499761, 'require', require, true, true)), false)(J$.T(1499769, 'core-js/modules/es.string.match', 21, false));
            J$.F(1499801, J$.I(typeof require === 'undefined' ? require = J$.R(1499785, 'require', undefined, true, true) : require = J$.R(1499785, 'require', require, true, true)), false)(J$.T(1499793, 'core-js/modules/es.string.replace', 21, false));
            J$.F(1499825, J$.I(typeof require === 'undefined' ? require = J$.R(1499809, 'require', undefined, true, true) : require = J$.R(1499809, 'require', require, true, true)), false)(J$.T(1499817, 'core-js/modules/es.string.trim', 21, false));
            J$.P(1499865, J$.I(typeof module === 'undefined' ? module = J$.R(1499833, 'module', undefined, true, true) : module = J$.R(1499833, 'module', module, true, true)), 'exports', J$.T(1499857, {
                read: J$.R(1499841, 'read', read, false, true),
                write: J$.R(1499849, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(1499897, 'assert', J$.F(1499889, J$.I(typeof require === 'undefined' ? require = J$.R(1499873, 'require', undefined, true, true) : require = J$.R(1499873, 'require', require, true, true)), false)(J$.T(1499881, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(1499937, 'Buffer', J$.G(1499929, J$.F(1499921, J$.I(typeof require === 'undefined' ? require = J$.R(1499905, 'require', undefined, true, true) : require = J$.R(1499905, 'require', require, true, true)), false)(J$.T(1499913, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var rfc4253 = J$.W(1499969, 'rfc4253', J$.F(1499961, J$.I(typeof require === 'undefined' ? require = J$.R(1499945, 'require', undefined, true, true) : require = J$.R(1499945, 'require', require, true, true)), false)(J$.T(1499953, './rfc4253', 21, false)), rfc4253, false, true);
            var utils = J$.W(1500001, 'utils', J$.F(1499993, J$.I(typeof require === 'undefined' ? require = J$.R(1499977, 'require', undefined, true, true) : require = J$.R(1499977, 'require', require, true, true)), false)(J$.T(1499985, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(1500033, 'Key', J$.F(1500025, J$.I(typeof require === 'undefined' ? require = J$.R(1500009, 'require', undefined, true, true) : require = J$.R(1500009, 'require', require, true, true)), false)(J$.T(1500017, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(1500065, 'PrivateKey', J$.F(1500057, J$.I(typeof require === 'undefined' ? require = J$.R(1500041, 'require', undefined, true, true) : require = J$.R(1500041, 'require', require, true, true)), false)(J$.T(1500049, '../private-key', 21, false)), PrivateKey, false, true);
            var sshpriv = J$.W(1500097, 'sshpriv', J$.F(1500089, J$.I(typeof require === 'undefined' ? require = J$.R(1500073, 'require', undefined, true, true) : require = J$.R(1500073, 'require', require, true, true)), false)(J$.T(1500081, './ssh-private', 21, false)), sshpriv, false, true);
            var SSHKEY_RE = J$.W(1500113, 'SSHKEY_RE', J$.T(1500105, /^([a-z0-9-]+)[ \t]+([a-zA-Z0-9+\/]+[=]*)([ \t]+([^ \t][^\n]*[\n]*)?)?$/, 14, false), SSHKEY_RE, false, true);
            var SSHKEY_RE2 = J$.W(1500129, 'SSHKEY_RE2', J$.T(1500121, /^([a-z0-9-]+)[ \t\n]+([a-zA-Z0-9+\/][a-zA-Z0-9+\/ \t\n=]*)([^a-zA-Z0-9+\/ \t\n=].*)?$/, 14, false), SSHKEY_RE2, false, true);
        } catch (J$e) {
            J$.Ex(1502137, J$e);
        } finally {
            if (J$.Sr(1502145))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

