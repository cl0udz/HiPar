J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(1461305, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/sshpk/lib/formats/pem.js');
            function read(buf, options, forceType) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1459809, arguments.callee, this, arguments);
                            arguments = J$.N(1459817, 'arguments', arguments, true, false, false);
                            buf = J$.N(1459825, 'buf', buf, true, false, false);
                            options = J$.N(1459833, 'options', options, true, false, false);
                            forceType = J$.N(1459841, 'forceType', forceType, true, false, false);
                            J$.N(1459849, 'input', input, false, false, false);
                            J$.N(1459857, 'lines', lines, false, false, false);
                            J$.N(1459865, 'm', m, false, false, false);
                            J$.N(1459873, 'si', si, false, false, false);
                            J$.N(1459881, 'm2', m2, false, false, false);
                            J$.N(1459889, 'ei', ei, false, false, false);
                            J$.N(1459897, 'type', type, false, false, false);
                            J$.N(1459905, 'alg', alg, false, false, false);
                            J$.N(1459913, 'headers', headers, false, false, false);
                            J$.N(1459921, 'cipher', cipher, false, false, false);
                            J$.N(1459929, 'key', key, false, false, false);
                            J$.N(1459937, 'iv', iv, false, false, false);
                            J$.N(1459945, 'parts', parts, false, false, false);
                            J$.N(1459953, 'eder', eder, false, false, false);
                            J$.N(1459961, 'pbesEnd', pbesEnd, false, false, false);
                            J$.N(1459969, 'method', method, false, false, false);
                            J$.N(1459977, 'kdfEnd', kdfEnd, false, false, false);
                            J$.N(1459985, 'kdfOid', kdfOid, false, false, false);
                            J$.N(1459993, 'salt', salt, false, false, false);
                            J$.N(1460001, 'iterations', iterations, false, false, false);
                            J$.N(1460009, 'hashAlg', hashAlg, false, false, false);
                            J$.N(1460017, 'hashAlgOid', hashAlgOid, false, false, false);
                            J$.N(1460025, 'cipherOid', cipherOid, false, false, false);
                            J$.N(1460033, 'cinfo', cinfo, false, false, false);
                            J$.N(1460041, 'cipherStream', cipherStream, false, false, false);
                            J$.N(1460049, 'chunk', chunk, false, false, false);
                            J$.N(1460057, 'chunks', chunks, false, false, false);
                            J$.N(1460065, 'der', der, false, false, false);
                            var input = J$.W(1456329, 'input', J$.R(1456321, 'buf', buf, false, false), input, false, false);
                            if (J$.C(75584, J$.B(181874, '!==', J$.U(181866, 'typeof', J$.R(1456337, 'buf', buf, false, false)), J$.T(1456345, 'string', 21, false)))) {
                                J$.M(1456377, J$.R(1456353, 'assert', assert, false, true), 'buffer', false)(J$.R(1456361, 'buf', buf, false, false), J$.T(1456369, 'buf', 21, false));
                                buf = J$.W(1456409, 'buf', J$.M(1456401, J$.R(1456385, 'buf', buf, false, false), 'toString', false)(J$.T(1456393, 'ascii', 21, false)), buf, false, false);
                            }
                            var lines = J$.W(1456449, 'lines', J$.M(1456441, J$.M(1456425, J$.R(1456417, 'buf', buf, false, false), 'trim', false)(), 'split', false)(J$.T(1456433, /[\r\n]+/g, 14, false)), lines, false, false);
                            var m;
                            var si = J$.W(1456465, 'si', J$.U(181882, '-', J$.T(1456457, 1, 22, false)), si, false, false);
                            while (J$.C(75600, J$.C(75592, J$.U(181890, '!', J$.R(1456473, 'm', m, false, false))) ? J$.B(181898, '<', J$.R(1456481, 'si', si, false, false), J$.G(1456497, J$.R(1456489, 'lines', lines, false, false), 'length')) : J$._())) {
                                m = J$.W(1456553, 'm', J$.M(1456545, J$.G(1456529, J$.R(1456505, 'lines', lines, false, false), si = J$.W(1456521, 'si', J$.B(181914, '+', J$.U(181906, '+', J$.R(1456513, 'si', si, false, false)), 1), si, false, false)), 'match', false)(J$.T(1456537, /[-]+[ ]*BEGIN ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/, 14, false)), m, false, false);
                            }
                            J$.M(1456585, J$.R(1456561, 'assert', assert, false, true), 'ok', false)(J$.R(1456569, 'm', m, false, false), J$.T(1456577, 'invalid PEM header', 21, false));
                            var m2;
                            var ei = J$.W(1456609, 'ei', J$.G(1456601, J$.R(1456593, 'lines', lines, false, false), 'length'), ei, false, false);
                            while (J$.C(75616, J$.C(75608, J$.U(181922, '!', J$.R(1456617, 'm2', m2, false, false))) ? J$.B(181930, '>', J$.R(1456625, 'ei', ei, false, false), J$.T(1456633, 0, 22, false)) : J$._())) {
                                m2 = J$.W(1456689, 'm2', J$.M(1456681, J$.G(1456665, J$.R(1456641, 'lines', lines, false, false), ei = J$.W(1456657, 'ei', J$.B(181946, '-', J$.U(181938, '+', J$.R(1456649, 'ei', ei, false, false)), 1), ei, false, false)), 'match', false)(J$.T(1456673, /[-]+[ ]*END ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/, 14, false)), m2, false, false);
                            }
                            J$.M(1456721, J$.R(1456697, 'assert', assert, false, true), 'ok', false)(J$.R(1456705, 'm2', m2, false, false), J$.T(1456713, 'invalid PEM footer', 21, false));
                            J$.M(1456785, J$.R(1456729, 'assert', assert, false, true), 'equal', false)(J$.G(1456753, J$.R(1456737, 'm', m, false, false), J$.T(1456745, 2, 22, false)), J$.G(1456777, J$.R(1456761, 'm2', m2, false, false), J$.T(1456769, 2, 22, false)));
                            var type = J$.W(1456825, 'type', J$.M(1456817, J$.G(1456809, J$.R(1456793, 'm', m, false, false), J$.T(1456801, 2, 22, false)), 'toLowerCase', false)(), type, false, false);
                            var alg;
                            if (J$.C(75624, J$.G(1456849, J$.R(1456833, 'm', m, false, false), J$.T(1456841, 1, 22, false)))) {
                                J$.M(1456921, J$.R(1456857, 'assert', assert, false, true), 'equal', false)(J$.G(1456881, J$.R(1456865, 'm', m, false, false), J$.T(1456873, 1, 22, false)), J$.G(1456905, J$.R(1456889, 'm2', m2, false, false), J$.T(1456897, 1, 22, false)), J$.T(1456913, 'PEM header and footer mismatch', 21, false));
                                alg = J$.W(1456961, 'alg', J$.M(1456953, J$.G(1456945, J$.R(1456929, 'm', m, false, false), J$.T(1456937, 1, 22, false)), 'trim', false)(), alg, false, false);
                            }
                            lines = J$.W(1457009, 'lines', J$.M(1457001, J$.R(1456969, 'lines', lines, false, false), 'slice', false)(J$.R(1456977, 'si', si, false, false), J$.B(181954, '+', J$.R(1456985, 'ei', ei, false, false), J$.T(1456993, 1, 22, false))), lines, false, false);
                            var headers = J$.W(1457025, 'headers', J$.T(1457017, {}, 11, false), headers, false, false);
                            while (J$.C(75640, J$.T(1457033, true, 23, false))) {
                                lines = J$.W(1457065, 'lines', J$.M(1457057, J$.R(1457041, 'lines', lines, false, false), 'slice', false)(J$.T(1457049, 1, 22, false)), lines, false, false);
                                m = J$.W(1457113, 'm', J$.M(1457105, J$.G(1457089, J$.R(1457073, 'lines', lines, false, false), J$.T(1457081, 0, 22, false)), 'match', false)(J$.T(1457097, /^([A-Za-z0-9-]+): (.+)$/, 14, false)), m, false, false);
                                if (J$.C(75632, J$.U(181962, '!', J$.R(1457121, 'm', m, false, false))))
                                    break;
                                J$.P(1457193, J$.R(1457129, 'headers', headers, false, false), J$.M(1457161, J$.G(1457153, J$.R(1457137, 'm', m, false, false), J$.T(1457145, 1, 22, false)), 'toLowerCase', false)(), J$.G(1457185, J$.R(1457169, 'm', m, false, false), J$.T(1457177, 2, 22, false)));
                            }
                            lines = J$.W(1457249, 'lines', J$.M(1457241, J$.M(1457225, J$.R(1457201, 'lines', lines, false, false), 'slice', false)(J$.T(1457209, 0, 22, false), J$.U(181970, '-', J$.T(1457217, 1, 22, false))), 'join', false)(J$.T(1457233, '', 21, false)), lines, false, false);
                            buf = J$.W(1457289, 'buf', J$.M(1457281, J$.R(1457257, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1457265, 'lines', lines, false, false), J$.T(1457273, 'base64', 21, false)), buf, false, false);
                            var cipher, key, iv;
                            if (J$.C(75680, J$.G(1457313, J$.R(1457297, 'headers', headers, false, false), J$.T(1457305, 'proc-type', 21, false)))) {
                                var parts = J$.W(1457361, 'parts', J$.M(1457353, J$.G(1457337, J$.R(1457321, 'headers', headers, false, false), J$.T(1457329, 'proc-type', 21, false)), 'split', false)(J$.T(1457345, ',', 21, false)), parts, false, false);
                                if (J$.C(75672, J$.C(75648, J$.B(181978, '===', J$.G(1457385, J$.R(1457369, 'parts', parts, false, false), J$.T(1457377, 0, 22, false)), J$.T(1457393, '4', 21, false))) ? J$.B(181986, '===', J$.G(1457417, J$.R(1457401, 'parts', parts, false, false), J$.T(1457409, 1, 22, false)), J$.T(1457425, 'ENCRYPTED', 21, false)) : J$._())) {
                                    if (J$.C(75656, J$.B(182002, '===', J$.U(181994, 'typeof', J$.G(1457441, J$.R(1457433, 'options', options, false, false), 'passphrase')), J$.T(1457449, 'string', 21, false)))) {
                                        J$.P(1457505, J$.R(1457457, 'options', options, false, false), 'passphrase', J$.M(1457497, J$.R(1457465, 'Buffer', Buffer, false, true), 'from', false)(J$.G(1457481, J$.R(1457473, 'options', options, false, false), 'passphrase'), J$.T(1457489, 'utf-8', 21, false)));
                                    }
                                    if (J$.C(75664, J$.U(182010, '!', J$.M(1457537, J$.R(1457513, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(1457529, J$.R(1457521, 'options', options, false, false), 'passphrase'))))) {
                                        throw J$.M(1457577, J$.R(1457545, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(1457561, J$.R(1457553, 'options', options, false, false), 'filename'), J$.T(1457569, 'PEM', 21, false));
                                    } else {
                                        parts = J$.W(1457625, 'parts', J$.M(1457617, J$.G(1457601, J$.R(1457585, 'headers', headers, false, false), J$.T(1457593, 'dek-info', 21, false)), 'split', false)(J$.T(1457609, ',', 21, false)), parts, false, false);
                                        J$.M(1457665, J$.R(1457633, 'assert', assert, false, true), 'ok', false)(J$.B(182018, '===', J$.G(1457649, J$.R(1457641, 'parts', parts, false, false), 'length'), J$.T(1457657, 2, 22, false)));
                                        cipher = J$.W(1457705, 'cipher', J$.M(1457697, J$.G(1457689, J$.R(1457673, 'parts', parts, false, false), J$.T(1457681, 0, 22, false)), 'toLowerCase', false)(), cipher, false, false);
                                        iv = J$.W(1457761, 'iv', J$.M(1457753, J$.R(1457713, 'Buffer', Buffer, false, true), 'from', false)(J$.G(1457737, J$.R(1457721, 'parts', parts, false, false), J$.T(1457729, 1, 22, false)), J$.T(1457745, 'hex', 21, false)), iv, false, false);
                                        key = J$.W(1457833, 'key', J$.G(1457825, J$.M(1457817, J$.R(1457769, 'utils', utils, false, true), 'opensslKeyDeriv', false)(J$.R(1457777, 'cipher', cipher, false, false), J$.R(1457785, 'iv', iv, false, false), J$.G(1457801, J$.R(1457793, 'options', options, false, false), 'passphrase'), J$.T(1457809, 1, 22, false)), 'key'), key, false, false);
                                    }
                                }
                            }
                            if (J$.C(75752, J$.C(75688, J$.R(1457841, 'alg', alg, false, false)) ? J$.B(182026, '===', J$.M(1457857, J$.R(1457849, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(1457865, 'encrypted', 21, false)) : J$._())) {
                                var eder = J$.W(1457897, 'eder', J$.M(1457889, J$.R(1457873, 'asn1', asn1, false, true), 'BerReader', true)(J$.R(1457881, 'buf', buf, false, false)), eder, false, false);
                                var pbesEnd;
                                J$.M(1457913, J$.R(1457905, 'eder', eder, false, false), 'readSequence', false)();
                                J$.M(1457929, J$.R(1457921, 'eder', eder, false, false), 'readSequence', false)();
                                pbesEnd = J$.W(1457969, 'pbesEnd', J$.B(182034, '+', J$.G(1457945, J$.R(1457937, 'eder', eder, false, false), 'offset'), J$.G(1457961, J$.R(1457953, 'eder', eder, false, false), 'length')), pbesEnd, false, false);
                                var method = J$.W(1457993, 'method', J$.M(1457985, J$.R(1457977, 'eder', eder, false, false), 'readOID', false)(), method, false, false);
                                if (J$.C(75696, J$.B(182042, '!==', J$.R(1458001, 'method', method, false, false), J$.R(1458009, 'OID_PBES2', OID_PBES2, false, true)))) {
                                    throw J$.F(1458049, J$.I(typeof Error === 'undefined' ? Error = J$.R(1458017, 'Error', undefined, true, true) : Error = J$.R(1458017, 'Error', Error, true, true)), true)(J$.B(182058, '+', J$.B(182050, '+', J$.T(1458025, 'Unsupported PEM/PKCS8 encryption ', 21, false), J$.T(1458033, 'scheme: ', 21, false)), J$.R(1458041, 'method', method, false, false)));
                                }
                                J$.M(1458065, J$.R(1458057, 'eder', eder, false, false), 'readSequence', false)();
                                J$.M(1458081, J$.R(1458073, 'eder', eder, false, false), 'readSequence', false)();
                                var kdfEnd = J$.W(1458121, 'kdfEnd', J$.B(182066, '+', J$.G(1458097, J$.R(1458089, 'eder', eder, false, false), 'offset'), J$.G(1458113, J$.R(1458105, 'eder', eder, false, false), 'length')), kdfEnd, false, false);
                                var kdfOid = J$.W(1458145, 'kdfOid', J$.M(1458137, J$.R(1458129, 'eder', eder, false, false), 'readOID', false)(), kdfOid, false, false);
                                if (J$.C(75704, J$.B(182074, '!==', J$.R(1458153, 'kdfOid', kdfOid, false, false), J$.R(1458161, 'OID_PBKDF2', OID_PBKDF2, false, true))))
                                    throw J$.F(1458193, J$.I(typeof Error === 'undefined' ? Error = J$.R(1458169, 'Error', undefined, true, true) : Error = J$.R(1458169, 'Error', Error, true, true)), true)(J$.B(182082, '+', J$.T(1458177, 'Unsupported PBES2 KDF: ', 21, false), J$.R(1458185, 'kdfOid', kdfOid, false, false)));
                                J$.M(1458209, J$.R(1458201, 'eder', eder, false, false), 'readSequence', false)();
                                var salt = J$.W(1458265, 'salt', J$.M(1458257, J$.R(1458217, 'eder', eder, false, false), 'readString', false)(J$.G(1458241, J$.G(1458233, J$.R(1458225, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(1458249, true, 23, false)), salt, false, false);
                                var iterations = J$.W(1458289, 'iterations', J$.M(1458281, J$.R(1458273, 'eder', eder, false, false), 'readInt', false)(), iterations, false, false);
                                var hashAlg = J$.W(1458305, 'hashAlg', J$.T(1458297, 'sha1', 21, false), hashAlg, false, false);
                                if (J$.C(75720, J$.B(182090, '<', J$.G(1458321, J$.R(1458313, 'eder', eder, false, false), 'offset'), J$.R(1458329, 'kdfEnd', kdfEnd, false, false)))) {
                                    J$.M(1458345, J$.R(1458337, 'eder', eder, false, false), 'readSequence', false)();
                                    var hashAlgOid = J$.W(1458369, 'hashAlgOid', J$.M(1458361, J$.R(1458353, 'eder', eder, false, false), 'readOID', false)(), hashAlgOid, false, false);
                                    hashAlg = J$.W(1458401, 'hashAlg', J$.G(1458393, J$.R(1458377, 'OID_TO_HASH', OID_TO_HASH, false, true), J$.R(1458385, 'hashAlgOid', hashAlgOid, false, false)), hashAlg, false, false);
                                    if (J$.C(75712, J$.B(182098, '===', J$.R(1458409, 'hashAlg', hashAlg, false, false), J$.T(1458417, undefined, 24, false)))) {
                                        throw J$.F(1458449, J$.I(typeof Error === 'undefined' ? Error = J$.R(1458425, 'Error', undefined, true, true) : Error = J$.R(1458425, 'Error', Error, true, true)), true)(J$.B(182106, '+', J$.T(1458433, 'Unsupported PBKDF2 hash: ', 21, false), J$.R(1458441, 'hashAlgOid', hashAlgOid, false, false)));
                                    }
                                }
                                J$.P(1458473, J$.R(1458457, 'eder', eder, false, false), '_offset', J$.R(1458465, 'kdfEnd', kdfEnd, false, false));
                                J$.M(1458489, J$.R(1458481, 'eder', eder, false, false), 'readSequence', false)();
                                var cipherOid = J$.W(1458513, 'cipherOid', J$.M(1458505, J$.R(1458497, 'eder', eder, false, false), 'readOID', false)(), cipherOid, false, false);
                                cipher = J$.W(1458545, 'cipher', J$.G(1458537, J$.R(1458521, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true), J$.R(1458529, 'cipherOid', cipherOid, false, false)), cipher, false, false);
                                if (J$.C(75728, J$.B(182114, '===', J$.R(1458553, 'cipher', cipher, false, false), J$.T(1458561, undefined, 24, false)))) {
                                    throw J$.F(1458593, J$.I(typeof Error === 'undefined' ? Error = J$.R(1458569, 'Error', undefined, true, true) : Error = J$.R(1458569, 'Error', Error, true, true)), true)(J$.B(182122, '+', J$.T(1458577, 'Unsupported PBES2 cipher: ', 21, false), J$.R(1458585, 'cipherOid', cipherOid, false, false)));
                                }
                                iv = J$.W(1458649, 'iv', J$.M(1458641, J$.R(1458601, 'eder', eder, false, false), 'readString', false)(J$.G(1458625, J$.G(1458617, J$.R(1458609, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(1458633, true, 23, false)), iv, false, false);
                                J$.P(1458673, J$.R(1458657, 'eder', eder, false, false), '_offset', J$.R(1458665, 'pbesEnd', pbesEnd, false, false));
                                buf = J$.W(1458729, 'buf', J$.M(1458721, J$.R(1458681, 'eder', eder, false, false), 'readString', false)(J$.G(1458705, J$.G(1458697, J$.R(1458689, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(1458713, true, 23, false)), buf, false, false);
                                if (J$.C(75736, J$.B(182138, '===', J$.U(182130, 'typeof', J$.G(1458745, J$.R(1458737, 'options', options, false, false), 'passphrase')), J$.T(1458753, 'string', 21, false)))) {
                                    J$.P(1458809, J$.R(1458761, 'options', options, false, false), 'passphrase', J$.M(1458801, J$.R(1458769, 'Buffer', Buffer, false, true), 'from', false)(J$.G(1458785, J$.R(1458777, 'options', options, false, false), 'passphrase'), J$.T(1458793, 'utf-8', 21, false)));
                                }
                                if (J$.C(75744, J$.U(182146, '!', J$.M(1458841, J$.R(1458817, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(1458833, J$.R(1458825, 'options', options, false, false), 'passphrase'))))) {
                                    throw J$.M(1458881, J$.R(1458849, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(1458865, J$.R(1458857, 'options', options, false, false), 'filename'), J$.T(1458873, 'PEM', 21, false));
                                }
                                var cinfo = J$.W(1458913, 'cinfo', J$.M(1458905, J$.R(1458889, 'utils', utils, false, true), 'opensshCipherInfo', false)(J$.R(1458897, 'cipher', cipher, false, false)), cinfo, false, false);
                                cipher = J$.W(1458937, 'cipher', J$.G(1458929, J$.R(1458921, 'cinfo', cinfo, false, false), 'opensslName'), cipher, false, false);
                                key = J$.W(1459017, 'key', J$.M(1459009, J$.R(1458945, 'utils', utils, false, true), 'pbkdf2', false)(J$.R(1458953, 'hashAlg', hashAlg, false, false), J$.R(1458961, 'salt', salt, false, false), J$.R(1458969, 'iterations', iterations, false, false), J$.G(1458985, J$.R(1458977, 'cinfo', cinfo, false, false), 'keySize'), J$.G(1459001, J$.R(1458993, 'options', options, false, false), 'passphrase')), key, false, false);
                                alg = J$.W(1459033, 'alg', J$.T(1459025, undefined, 24, false), alg, false, false);
                            }
                            if (J$.C(75792, J$.C(75768, J$.C(75760, J$.R(1459041, 'cipher', cipher, false, false)) ? J$.R(1459049, 'key', key, false, false) : J$._()) ? J$.R(1459057, 'iv', iv, false, false) : J$._())) {
                                var cipherStream = J$.W(1459105, 'cipherStream', J$.M(1459097, J$.R(1459065, 'crypto', crypto, false, true), 'createDecipheriv', false)(J$.R(1459073, 'cipher', cipher, false, false), J$.R(1459081, 'key', key, false, false), J$.R(1459089, 'iv', iv, false, false)), cipherStream, false, false);
                                var chunk, chunks = J$.W(1459121, 'chunks', J$.T(1459113, [], 10, false), chunks, false, false);
                                J$.M(1459257, J$.R(1459129, 'cipherStream', cipherStream, false, false), 'once', false)(J$.T(1459137, 'error', 21, false), J$.T(1459249, function (e) {
                                    jalangiLabel2:
                                        while (true) {
                                            try {
                                                J$.Fe(1459225, arguments.callee, this, arguments);
                                                arguments = J$.N(1459233, 'arguments', arguments, true, false, false);
                                                e = J$.N(1459241, 'e', e, true, false, false);
                                                if (J$.C(75776, J$.B(182162, '!==', J$.M(1459169, J$.M(1459153, J$.R(1459145, 'e', e, false, false), 'toString', false)(), 'indexOf', false)(J$.T(1459161, 'bad decrypt', 21, false)), J$.U(182154, '-', J$.T(1459177, 1, 22, false))))) {
                                                    throw J$.F(1459209, J$.I(typeof Error === 'undefined' ? Error = J$.R(1459185, 'Error', undefined, true, true) : Error = J$.R(1459185, 'Error', Error, true, true)), true)(J$.B(182170, '+', J$.T(1459193, 'Incorrect passphrase ', 21, false), J$.T(1459201, 'supplied, could not decrypt key', 21, false)));
                                                }
                                                throw J$.R(1459217, 'e', e, false, false);
                                            } catch (J$e) {
                                                J$.Ex(1461529, J$e);
                                            } finally {
                                                if (J$.Fr(1461537))
                                                    continue jalangiLabel2;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(1459281, J$.R(1459265, 'cipherStream', cipherStream, false, false), 'write', false)(J$.R(1459273, 'buf', buf, false, false));
                                J$.M(1459297, J$.R(1459289, 'cipherStream', cipherStream, false, false), 'end', false)();
                                while (J$.C(75784, J$.B(182178, '!==', chunk = J$.W(1459321, 'chunk', J$.M(1459313, J$.R(1459305, 'cipherStream', cipherStream, false, false), 'read', false)(), chunk, false, false), J$.T(1459329, null, 25, false)))) {
                                    J$.M(1459353, J$.R(1459337, 'chunks', chunks, false, false), 'push', false)(J$.R(1459345, 'chunk', chunk, false, false));
                                }
                                buf = J$.W(1459385, 'buf', J$.M(1459377, J$.R(1459361, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(1459369, 'chunks', chunks, false, false)), buf, false, false);
                            }
                            if (J$.C(75808, J$.C(75800, J$.R(1459393, 'alg', alg, false, false)) ? J$.B(182186, '===', J$.M(1459409, J$.R(1459401, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(1459417, 'openssh', 21, false)) : J$._()))
                                return J$.Rt(1459465, J$.M(1459457, J$.R(1459425, 'sshpriv', sshpriv, false, true), 'readSSHPrivate', false)(J$.R(1459433, 'type', type, false, false), J$.R(1459441, 'buf', buf, false, false), J$.R(1459449, 'options', options, false, false)));
                            if (J$.C(75824, J$.C(75816, J$.R(1459473, 'alg', alg, false, false)) ? J$.B(182194, '===', J$.M(1459489, J$.R(1459481, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(1459497, 'ssh2', 21, false)) : J$._()))
                                return J$.Rt(1459545, J$.M(1459537, J$.R(1459505, 'rfc4253', rfc4253, false, true), 'readType', false)(J$.R(1459513, 'type', type, false, false), J$.R(1459521, 'buf', buf, false, false), J$.R(1459529, 'options', options, false, false)));
                            var der = J$.W(1459577, 'der', J$.M(1459569, J$.R(1459553, 'asn1', asn1, false, true), 'BerReader', true)(J$.R(1459561, 'buf', buf, false, false)), der, false, false);
                            J$.P(1459601, J$.R(1459585, 'der', der, false, false), 'originalInput', J$.R(1459593, 'input', input, false, false));
                            J$.M(1459617, J$.R(1459609, 'der', der, false, false), 'readSequence', false)();
                            if (J$.C(75848, J$.R(1459625, 'alg', alg, false, false))) {
                                if (J$.C(75832, J$.R(1459633, 'forceType', forceType, false, false)))
                                    J$.M(1459665, J$.R(1459641, 'assert', assert, false, true), 'strictEqual', false)(J$.R(1459649, 'forceType', forceType, false, false), J$.T(1459657, 'pkcs1', 21, false));
                                return J$.Rt(1459713, J$.M(1459705, J$.R(1459673, 'pkcs1', pkcs1, false, true), 'readPkcs1', false)(J$.R(1459681, 'alg', alg, false, false), J$.R(1459689, 'type', type, false, false), J$.R(1459697, 'der', der, false, false)));
                            } else {
                                if (J$.C(75840, J$.R(1459721, 'forceType', forceType, false, false)))
                                    J$.M(1459753, J$.R(1459729, 'assert', assert, false, true), 'strictEqual', false)(J$.R(1459737, 'forceType', forceType, false, false), J$.T(1459745, 'pkcs8', 21, false));
                                return J$.Rt(1459801, J$.M(1459793, J$.R(1459761, 'pkcs8', pkcs8, false, true), 'readPkcs8', false)(J$.R(1459769, 'alg', alg, false, false), J$.R(1459777, 'type', type, false, false), J$.R(1459785, 'der', der, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(1461545, J$e);
                        } finally {
                            if (J$.Fr(1461553))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options, type) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1461193, arguments.callee, this, arguments);
                            arguments = J$.N(1461201, 'arguments', arguments, true, false, false);
                            key = J$.N(1461209, 'key', key, true, false, false);
                            options = J$.N(1461217, 'options', options, true, false, false);
                            type = J$.N(1461225, 'type', type, true, false, false);
                            J$.N(1461233, 'alg', alg, false, false, false);
                            J$.N(1461241, 'header', header, false, false, false);
                            J$.N(1461249, 'der', der, false, false, false);
                            J$.N(1461257, 'tmp', tmp, false, false, false);
                            J$.N(1461265, 'len', len, false, false, false);
                            J$.N(1461273, 'buf', buf, false, false, false);
                            J$.N(1461281, 'o', o, false, false, false);
                            J$.N(1461289, 'i', i, false, false, false);
                            J$.N(1461297, 'limit', limit, false, false, false);
                            J$.M(1460089, J$.R(1460073, 'assert', assert, false, true), 'object', false)(J$.R(1460081, 'key', key, false, false));
                            var alg = J$.W(1460161, 'alg', J$.G(1460153, J$.T(1460129, {
                                'ecdsa': J$.T(1460097, 'EC', 21, false),
                                'rsa': J$.T(1460105, 'RSA', 21, false),
                                'dsa': J$.T(1460113, 'DSA', 21, false),
                                'ed25519': J$.T(1460121, 'EdDSA', 21, false)
                            }, 11, false), J$.G(1460145, J$.R(1460137, 'key', key, false, false), 'type')), alg, false, false);
                            var header;
                            var der = J$.W(1460185, 'der', J$.M(1460177, J$.R(1460169, 'asn1', asn1, false, true), 'BerWriter', true)(), der, false, false);
                            if (J$.C(75912, J$.M(1460209, J$.R(1460193, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1460201, 'key', key, false, false)))) {
                                if (J$.C(75872, J$.C(75856, J$.R(1460217, 'type', type, false, false)) ? J$.B(182202, '===', J$.R(1460225, 'type', type, false, false), J$.T(1460233, 'pkcs8', 21, false)) : J$._())) {
                                    header = J$.W(1460249, 'header', J$.T(1460241, 'PRIVATE KEY', 21, false), header, false, false);
                                    J$.M(1460281, J$.R(1460257, 'pkcs8', pkcs8, false, true), 'writePkcs8', false)(J$.R(1460265, 'der', der, false, false), J$.R(1460273, 'key', key, false, false));
                                } else {
                                    if (J$.C(75864, J$.R(1460289, 'type', type, false, false)))
                                        J$.M(1460321, J$.R(1460297, 'assert', assert, false, true), 'strictEqual', false)(J$.R(1460305, 'type', type, false, false), J$.T(1460313, 'pkcs1', 21, false));
                                    header = J$.W(1460345, 'header', J$.B(182210, '+', J$.R(1460329, 'alg', alg, false, false), J$.T(1460337, ' PRIVATE KEY', 21, false)), header, false, false);
                                    J$.M(1460377, J$.R(1460353, 'pkcs1', pkcs1, false, true), 'writePkcs1', false)(J$.R(1460361, 'der', der, false, false), J$.R(1460369, 'key', key, false, false));
                                }
                            } else if (J$.C(75904, J$.M(1460401, J$.R(1460385, 'Key', Key, false, true), 'isKey', false)(J$.R(1460393, 'key', key, false, false)))) {
                                if (J$.C(75896, J$.C(75880, J$.R(1460409, 'type', type, false, false)) ? J$.B(182218, '===', J$.R(1460417, 'type', type, false, false), J$.T(1460425, 'pkcs1', 21, false)) : J$._())) {
                                    header = J$.W(1460449, 'header', J$.B(182226, '+', J$.R(1460433, 'alg', alg, false, false), J$.T(1460441, ' PUBLIC KEY', 21, false)), header, false, false);
                                    J$.M(1460481, J$.R(1460457, 'pkcs1', pkcs1, false, true), 'writePkcs1', false)(J$.R(1460465, 'der', der, false, false), J$.R(1460473, 'key', key, false, false));
                                } else {
                                    if (J$.C(75888, J$.R(1460489, 'type', type, false, false)))
                                        J$.M(1460521, J$.R(1460497, 'assert', assert, false, true), 'strictEqual', false)(J$.R(1460505, 'type', type, false, false), J$.T(1460513, 'pkcs8', 21, false));
                                    header = J$.W(1460537, 'header', J$.T(1460529, 'PUBLIC KEY', 21, false), header, false, false);
                                    J$.M(1460569, J$.R(1460545, 'pkcs8', pkcs8, false, true), 'writePkcs8', false)(J$.R(1460553, 'der', der, false, false), J$.R(1460561, 'key', key, false, false));
                                }
                            } else {
                                throw J$.F(1460593, J$.I(typeof Error === 'undefined' ? Error = J$.R(1460577, 'Error', undefined, true, true) : Error = J$.R(1460577, 'Error', Error, true, true)), true)(J$.T(1460585, 'key is not a Key or PrivateKey', 21, false));
                            }
                            var tmp = J$.W(1460633, 'tmp', J$.M(1460625, J$.G(1460609, J$.R(1460601, 'der', der, false, false), 'buffer'), 'toString', false)(J$.T(1460617, 'base64', 21, false)), tmp, false, false);
                            var len = J$.W(1460729, 'len', J$.B(182282, '+', J$.B(182274, '+', J$.B(182258, '+', J$.B(182250, '+', J$.B(182242, '+', J$.G(1460649, J$.R(1460641, 'tmp', tmp, false, false), 'length'), J$.B(182234, '/', J$.G(1460665, J$.R(1460657, 'tmp', tmp, false, false), 'length'), J$.T(1460673, 64, 22, false))), J$.T(1460681, 18, 22, false)), J$.T(1460689, 16, 22, false)), J$.B(182266, '*', J$.G(1460705, J$.R(1460697, 'header', header, false, false), 'length'), J$.T(1460713, 2, 22, false))), J$.T(1460721, 10, 22, false)), len, false, false);
                            var buf = J$.W(1460761, 'buf', J$.M(1460753, J$.R(1460737, 'Buffer', Buffer, false, true), 'alloc', false)(J$.R(1460745, 'len', len, false, false)), buf, false, false);
                            var o = J$.W(1460777, 'o', J$.T(1460769, 0, 22, false), o, false, false);
                            o = J$.W(1460841, 'o', J$.B(182306, '+', J$.R(1460833, 'o', o, false, false), J$.M(1460825, J$.R(1460785, 'buf', buf, false, false), 'write', false)(J$.B(182298, '+', J$.B(182290, '+', J$.T(1460793, '-----BEGIN ', 21, false), J$.R(1460801, 'header', header, false, false)), J$.T(1460809, '-----\n', 21, false)), J$.R(1460817, 'o', o, false, false))), o, false, false);
                            for (var i = J$.W(1460857, 'i', J$.T(1460849, 0, 22, false), i, false, false); J$.C(75928, J$.B(182314, '<', J$.R(1460865, 'i', i, false, false), J$.G(1460881, J$.R(1460873, 'tmp', tmp, false, false), 'length')));) {
                                var limit = J$.W(1460905, 'limit', J$.B(182322, '+', J$.R(1460889, 'i', i, false, false), J$.T(1460897, 64, 22, false)), limit, false, false);
                                if (J$.C(75920, J$.B(182330, '>', J$.R(1460913, 'limit', limit, false, false), J$.G(1460929, J$.R(1460921, 'tmp', tmp, false, false), 'length'))))
                                    limit = J$.W(1460953, 'limit', J$.G(1460945, J$.R(1460937, 'tmp', tmp, false, false), 'length'), limit, false, false);
                                o = J$.W(1461025, 'o', J$.B(182338, '+', J$.R(1461017, 'o', o, false, false), J$.M(1461009, J$.R(1460961, 'buf', buf, false, false), 'write', false)(J$.M(1460993, J$.R(1460969, 'tmp', tmp, false, false), 'slice', false)(J$.R(1460977, 'i', i, false, false), J$.R(1460985, 'limit', limit, false, false)), J$.R(1461001, 'o', o, false, false))), o, false, false);
                                J$.P(1461065, J$.R(1461033, 'buf', buf, false, false), J$.B(182362, '-', o = J$.W(1461049, 'o', J$.B(182354, '+', J$.U(182346, '+', J$.R(1461041, 'o', o, false, false)), 1), o, false, false), 1), J$.T(1461057, 10, 22, false));
                                i = J$.W(1461081, 'i', J$.R(1461073, 'limit', limit, false, false), i, false, false);
                            }
                            o = J$.W(1461145, 'o', J$.B(182386, '+', J$.R(1461137, 'o', o, false, false), J$.M(1461129, J$.R(1461089, 'buf', buf, false, false), 'write', false)(J$.B(182378, '+', J$.B(182370, '+', J$.T(1461097, '-----END ', 21, false), J$.R(1461105, 'header', header, false, false)), J$.T(1461113, '-----\n', 21, false)), J$.R(1461121, 'o', o, false, false))), o, false, false);
                            return J$.Rt(1461185, J$.M(1461177, J$.R(1461153, 'buf', buf, false, false), 'slice', false)(J$.T(1461161, 0, 22, false), J$.R(1461169, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(1461561, J$e);
                        } finally {
                            if (J$.Fr(1461569))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1461313, 'assert', assert, false, false, false);
            J$.N(1461321, 'asn1', asn1, false, false, false);
            J$.N(1461329, 'crypto', crypto, false, false, false);
            J$.N(1461337, 'Buffer', Buffer, false, false, false);
            J$.N(1461345, 'algs', algs, false, false, false);
            J$.N(1461353, 'utils', utils, false, false, false);
            J$.N(1461361, 'Key', Key, false, false, false);
            J$.N(1461369, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(1461377, 'pkcs1', pkcs1, false, false, false);
            J$.N(1461385, 'pkcs8', pkcs8, false, false, false);
            J$.N(1461393, 'sshpriv', sshpriv, false, false, false);
            J$.N(1461401, 'rfc4253', rfc4253, false, false, false);
            J$.N(1461409, 'errors', errors, false, false, false);
            J$.N(1461417, 'OID_PBES2', OID_PBES2, false, false, false);
            J$.N(1461425, 'OID_PBKDF2', OID_PBKDF2, false, false, false);
            J$.N(1461433, 'OID_TO_CIPHER', OID_TO_CIPHER, false, false, false);
            J$.N(1461441, 'CIPHER_TO_OID', CIPHER_TO_OID, false, false, false);
            J$.N(1461449, 'OID_TO_HASH', OID_TO_HASH, false, false, false);
            J$.N(1461457, 'HASH_TO_OID', HASH_TO_OID, false, false, false);
            read = J$.N(1461473, 'read', J$.T(1461465, read, 12, false), true, false, false);
            write = J$.N(1461489, 'write', J$.T(1461481, write, 12, false), true, false, false);
            J$.T(1455145, 'use strict', 21, false);
            J$.F(1455169, J$.I(typeof require === 'undefined' ? require = J$.R(1455153, 'require', undefined, true, true) : require = J$.R(1455153, 'require', require, true, true)), false)(J$.T(1455161, 'core-js/modules/es.array.concat', 21, false));
            J$.F(1455193, J$.I(typeof require === 'undefined' ? require = J$.R(1455177, 'require', undefined, true, true) : require = J$.R(1455177, 'require', require, true, true)), false)(J$.T(1455185, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(1455217, J$.I(typeof require === 'undefined' ? require = J$.R(1455201, 'require', undefined, true, true) : require = J$.R(1455201, 'require', require, true, true)), false)(J$.T(1455209, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(1455241, J$.I(typeof require === 'undefined' ? require = J$.R(1455225, 'require', undefined, true, true) : require = J$.R(1455225, 'require', require, true, true)), false)(J$.T(1455233, 'core-js/modules/es.array.join', 21, false));
            J$.F(1455265, J$.I(typeof require === 'undefined' ? require = J$.R(1455249, 'require', undefined, true, true) : require = J$.R(1455249, 'require', require, true, true)), false)(J$.T(1455257, 'core-js/modules/es.array.slice', 21, false));
            J$.F(1455289, J$.I(typeof require === 'undefined' ? require = J$.R(1455273, 'require', undefined, true, true) : require = J$.R(1455273, 'require', require, true, true)), false)(J$.T(1455281, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(1455313, J$.I(typeof require === 'undefined' ? require = J$.R(1455297, 'require', undefined, true, true) : require = J$.R(1455297, 'require', require, true, true)), false)(J$.T(1455305, 'core-js/modules/es.object.keys', 21, false));
            J$.F(1455337, J$.I(typeof require === 'undefined' ? require = J$.R(1455321, 'require', undefined, true, true) : require = J$.R(1455321, 'require', require, true, true)), false)(J$.T(1455329, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1455361, J$.I(typeof require === 'undefined' ? require = J$.R(1455345, 'require', undefined, true, true) : require = J$.R(1455345, 'require', require, true, true)), false)(J$.T(1455353, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1455385, J$.I(typeof require === 'undefined' ? require = J$.R(1455369, 'require', undefined, true, true) : require = J$.R(1455369, 'require', require, true, true)), false)(J$.T(1455377, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(1455409, J$.I(typeof require === 'undefined' ? require = J$.R(1455393, 'require', undefined, true, true) : require = J$.R(1455393, 'require', require, true, true)), false)(J$.T(1455401, 'core-js/modules/es.string.match', 21, false));
            J$.F(1455433, J$.I(typeof require === 'undefined' ? require = J$.R(1455417, 'require', undefined, true, true) : require = J$.R(1455417, 'require', require, true, true)), false)(J$.T(1455425, 'core-js/modules/es.string.split', 21, false));
            J$.F(1455457, J$.I(typeof require === 'undefined' ? require = J$.R(1455441, 'require', undefined, true, true) : require = J$.R(1455441, 'require', require, true, true)), false)(J$.T(1455449, 'core-js/modules/es.string.trim', 21, false));
            J$.F(1455481, J$.I(typeof require === 'undefined' ? require = J$.R(1455465, 'require', undefined, true, true) : require = J$.R(1455465, 'require', require, true, true)), false)(J$.T(1455473, 'core-js/modules/web.dom-collections.for-each', 21, false));
            J$.P(1455521, J$.I(typeof module === 'undefined' ? module = J$.R(1455489, 'module', undefined, true, true) : module = J$.R(1455489, 'module', module, true, true)), 'exports', J$.T(1455513, {
                read: J$.R(1455497, 'read', read, false, true),
                write: J$.R(1455505, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(1455553, 'assert', J$.F(1455545, J$.I(typeof require === 'undefined' ? require = J$.R(1455529, 'require', undefined, true, true) : require = J$.R(1455529, 'require', require, true, true)), false)(J$.T(1455537, 'assert-plus', 21, false)), assert, false, true);
            var asn1 = J$.W(1455585, 'asn1', J$.F(1455577, J$.I(typeof require === 'undefined' ? require = J$.R(1455561, 'require', undefined, true, true) : require = J$.R(1455561, 'require', require, true, true)), false)(J$.T(1455569, 'asn1', 21, false)), asn1, false, true);
            var crypto = J$.W(1455617, 'crypto', J$.F(1455609, J$.I(typeof require === 'undefined' ? require = J$.R(1455593, 'require', undefined, true, true) : require = J$.R(1455593, 'require', require, true, true)), false)(J$.T(1455601, 'crypto', 21, false)), crypto, false, true);
            var Buffer = J$.W(1455657, 'Buffer', J$.G(1455649, J$.F(1455641, J$.I(typeof require === 'undefined' ? require = J$.R(1455625, 'require', undefined, true, true) : require = J$.R(1455625, 'require', require, true, true)), false)(J$.T(1455633, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(1455689, 'algs', J$.F(1455681, J$.I(typeof require === 'undefined' ? require = J$.R(1455665, 'require', undefined, true, true) : require = J$.R(1455665, 'require', require, true, true)), false)(J$.T(1455673, '../algs', 21, false)), algs, false, true);
            var utils = J$.W(1455721, 'utils', J$.F(1455713, J$.I(typeof require === 'undefined' ? require = J$.R(1455697, 'require', undefined, true, true) : require = J$.R(1455697, 'require', require, true, true)), false)(J$.T(1455705, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(1455753, 'Key', J$.F(1455745, J$.I(typeof require === 'undefined' ? require = J$.R(1455729, 'require', undefined, true, true) : require = J$.R(1455729, 'require', require, true, true)), false)(J$.T(1455737, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(1455785, 'PrivateKey', J$.F(1455777, J$.I(typeof require === 'undefined' ? require = J$.R(1455761, 'require', undefined, true, true) : require = J$.R(1455761, 'require', require, true, true)), false)(J$.T(1455769, '../private-key', 21, false)), PrivateKey, false, true);
            var pkcs1 = J$.W(1455817, 'pkcs1', J$.F(1455809, J$.I(typeof require === 'undefined' ? require = J$.R(1455793, 'require', undefined, true, true) : require = J$.R(1455793, 'require', require, true, true)), false)(J$.T(1455801, './pkcs1', 21, false)), pkcs1, false, true);
            var pkcs8 = J$.W(1455849, 'pkcs8', J$.F(1455841, J$.I(typeof require === 'undefined' ? require = J$.R(1455825, 'require', undefined, true, true) : require = J$.R(1455825, 'require', require, true, true)), false)(J$.T(1455833, './pkcs8', 21, false)), pkcs8, false, true);
            var sshpriv = J$.W(1455881, 'sshpriv', J$.F(1455873, J$.I(typeof require === 'undefined' ? require = J$.R(1455857, 'require', undefined, true, true) : require = J$.R(1455857, 'require', require, true, true)), false)(J$.T(1455865, './ssh-private', 21, false)), sshpriv, false, true);
            var rfc4253 = J$.W(1455913, 'rfc4253', J$.F(1455905, J$.I(typeof require === 'undefined' ? require = J$.R(1455889, 'require', undefined, true, true) : require = J$.R(1455889, 'require', require, true, true)), false)(J$.T(1455897, './rfc4253', 21, false)), rfc4253, false, true);
            var errors = J$.W(1455945, 'errors', J$.F(1455937, J$.I(typeof require === 'undefined' ? require = J$.R(1455921, 'require', undefined, true, true) : require = J$.R(1455921, 'require', require, true, true)), false)(J$.T(1455929, '../errors', 21, false)), errors, false, true);
            var OID_PBES2 = J$.W(1455961, 'OID_PBES2', J$.T(1455953, '1.2.840.113549.1.5.13', 21, false), OID_PBES2, false, true);
            var OID_PBKDF2 = J$.W(1455977, 'OID_PBKDF2', J$.T(1455969, '1.2.840.113549.1.5.12', 21, false), OID_PBKDF2, false, true);
            var OID_TO_CIPHER = J$.W(1456017, 'OID_TO_CIPHER', J$.T(1456009, {
                '1.2.840.113549.3.7': J$.T(1455985, '3des-cbc', 21, false),
                '2.16.840.1.101.3.4.1.2': J$.T(1455993, 'aes128-cbc', 21, false),
                '2.16.840.1.101.3.4.1.42': J$.T(1456001, 'aes256-cbc', 21, false)
            }, 11, false), OID_TO_CIPHER, false, true);
            var CIPHER_TO_OID = J$.W(1456033, 'CIPHER_TO_OID', J$.T(1456025, {}, 11, false), CIPHER_TO_OID, false, true);
            J$.M(1456145, J$.M(1456057, J$.I(typeof Object === 'undefined' ? Object = J$.R(1456041, 'Object', undefined, true, true) : Object = J$.R(1456041, 'Object', Object, true, true)), 'keys', false)(J$.R(1456049, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true)), 'forEach', false)(J$.T(1456137, function (k) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1456113, arguments.callee, this, arguments);
                            arguments = J$.N(1456121, 'arguments', arguments, true, false, false);
                            k = J$.N(1456129, 'k', k, true, false, false);
                            J$.P(1456105, J$.R(1456065, 'CIPHER_TO_OID', CIPHER_TO_OID, false, true), J$.G(1456089, J$.R(1456073, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true), J$.R(1456081, 'k', k, false, false)), J$.R(1456097, 'k', k, false, false));
                        } catch (J$e) {
                            J$.Ex(1461497, J$e);
                        } finally {
                            if (J$.Fr(1461505))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var OID_TO_HASH = J$.W(1456185, 'OID_TO_HASH', J$.T(1456177, {
                '1.2.840.113549.2.7': J$.T(1456153, 'sha1', 21, false),
                '1.2.840.113549.2.9': J$.T(1456161, 'sha256', 21, false),
                '1.2.840.113549.2.11': J$.T(1456169, 'sha512', 21, false)
            }, 11, false), OID_TO_HASH, false, true);
            var HASH_TO_OID = J$.W(1456201, 'HASH_TO_OID', J$.T(1456193, {}, 11, false), HASH_TO_OID, false, true);
            J$.M(1456313, J$.M(1456225, J$.I(typeof Object === 'undefined' ? Object = J$.R(1456209, 'Object', undefined, true, true) : Object = J$.R(1456209, 'Object', Object, true, true)), 'keys', false)(J$.R(1456217, 'OID_TO_HASH', OID_TO_HASH, false, true)), 'forEach', false)(J$.T(1456305, function (k) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1456281, arguments.callee, this, arguments);
                            arguments = J$.N(1456289, 'arguments', arguments, true, false, false);
                            k = J$.N(1456297, 'k', k, true, false, false);
                            J$.P(1456273, J$.R(1456233, 'HASH_TO_OID', HASH_TO_OID, false, true), J$.G(1456257, J$.R(1456241, 'OID_TO_HASH', OID_TO_HASH, false, true), J$.R(1456249, 'k', k, false, false)), J$.R(1456265, 'k', k, false, false));
                        } catch (J$e) {
                            J$.Ex(1461513, J$e);
                        } finally {
                            if (J$.Fr(1461521))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1461577, J$e);
        } finally {
            if (J$.Sr(1461585))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

