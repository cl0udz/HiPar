J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(1438049, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/sshpk/lib/formats/auto.js');
            function read(buf, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1436241, arguments.callee, this, arguments);
                            arguments = J$.N(1436249, 'arguments', arguments, true, false, false);
                            buf = J$.N(1436257, 'buf', buf, true, false, false);
                            options = J$.N(1436265, 'options', options, true, false, false);
                            if (J$.C(74672, J$.B(180130, '===', J$.U(180122, 'typeof', J$.R(1435473, 'buf', buf, false, false)), J$.T(1435481, 'string', 21, false)))) {
                                if (J$.C(74600, J$.M(1435513, J$.M(1435497, J$.R(1435489, 'buf', buf, false, false), 'trim', false)(), 'match', false)(J$.T(1435505, /^[-]+[ ]*BEGIN/, 14, false))))
                                    return J$.Rt(1435553, J$.M(1435545, J$.R(1435521, 'pem', pem, false, true), 'read', false)(J$.R(1435529, 'buf', buf, false, false), J$.R(1435537, 'options', options, false, false)));
                                if (J$.C(74608, J$.M(1435577, J$.R(1435561, 'buf', buf, false, false), 'match', false)(J$.T(1435569, /^\s*ssh-[a-z]/, 14, false))))
                                    return J$.Rt(1435617, J$.M(1435609, J$.R(1435585, 'ssh', ssh, false, true), 'read', false)(J$.R(1435593, 'buf', buf, false, false), J$.R(1435601, 'options', options, false, false)));
                                if (J$.C(74616, J$.M(1435641, J$.R(1435625, 'buf', buf, false, false), 'match', false)(J$.T(1435633, /^\s*ecdsa-/, 14, false))))
                                    return J$.Rt(1435681, J$.M(1435673, J$.R(1435649, 'ssh', ssh, false, true), 'read', false)(J$.R(1435657, 'buf', buf, false, false), J$.R(1435665, 'options', options, false, false)));
                                if (J$.C(74624, J$.M(1435705, J$.R(1435689, 'buf', buf, false, false), 'match', false)(J$.T(1435697, /^putty-user-key-file-2:/i, 14, false))))
                                    return J$.Rt(1435745, J$.M(1435737, J$.R(1435713, 'putty', putty, false, true), 'read', false)(J$.R(1435721, 'buf', buf, false, false), J$.R(1435729, 'options', options, false, false)));
                                if (J$.C(74632, J$.F(1435769, J$.R(1435753, 'findDNSSECHeader', findDNSSECHeader, false, true), false)(J$.R(1435761, 'buf', buf, false, false))))
                                    return J$.Rt(1435809, J$.M(1435801, J$.R(1435777, 'dnssec', dnssec, false, true), 'read', false)(J$.R(1435785, 'buf', buf, false, false), J$.R(1435793, 'options', options, false, false)));
                                buf = J$.W(1435849, 'buf', J$.M(1435841, J$.R(1435817, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1435825, 'buf', buf, false, false), J$.T(1435833, 'binary', 21, false)), buf, false, false);
                            } else {
                                J$.M(1435873, J$.R(1435857, 'assert', assert, false, true), 'buffer', false)(J$.R(1435865, 'buf', buf, false, false));
                                if (J$.C(74640, J$.F(1435897, J$.R(1435881, 'findPEMHeader', findPEMHeader, false, true), false)(J$.R(1435889, 'buf', buf, false, false))))
                                    return J$.Rt(1435937, J$.M(1435929, J$.R(1435905, 'pem', pem, false, true), 'read', false)(J$.R(1435913, 'buf', buf, false, false), J$.R(1435921, 'options', options, false, false)));
                                if (J$.C(74648, J$.F(1435961, J$.R(1435945, 'findSSHHeader', findSSHHeader, false, true), false)(J$.R(1435953, 'buf', buf, false, false))))
                                    return J$.Rt(1436001, J$.M(1435993, J$.R(1435969, 'ssh', ssh, false, true), 'read', false)(J$.R(1435977, 'buf', buf, false, false), J$.R(1435985, 'options', options, false, false)));
                                if (J$.C(74656, J$.F(1436025, J$.R(1436009, 'findPuTTYHeader', findPuTTYHeader, false, true), false)(J$.R(1436017, 'buf', buf, false, false))))
                                    return J$.Rt(1436065, J$.M(1436057, J$.R(1436033, 'putty', putty, false, true), 'read', false)(J$.R(1436041, 'buf', buf, false, false), J$.R(1436049, 'options', options, false, false)));
                                if (J$.C(74664, J$.F(1436089, J$.R(1436073, 'findDNSSECHeader', findDNSSECHeader, false, true), false)(J$.R(1436081, 'buf', buf, false, false))))
                                    return J$.Rt(1436129, J$.M(1436121, J$.R(1436097, 'dnssec', dnssec, false, true), 'read', false)(J$.R(1436105, 'buf', buf, false, false), J$.R(1436113, 'options', options, false, false)));
                            }
                            if (J$.C(74680, J$.B(180138, '<', J$.M(1436153, J$.R(1436137, 'buf', buf, false, false), 'readUInt32BE', false)(J$.T(1436145, 0, 22, false)), J$.G(1436169, J$.R(1436161, 'buf', buf, false, false), 'length'))))
                                return J$.Rt(1436209, J$.M(1436201, J$.R(1436177, 'rfc4253', rfc4253, false, true), 'read', false)(J$.R(1436185, 'buf', buf, false, false), J$.R(1436193, 'options', options, false, false)));
                            throw J$.F(1436233, J$.I(typeof Error === 'undefined' ? Error = J$.R(1436217, 'Error', undefined, true, true) : Error = J$.R(1436217, 'Error', Error, true, true)), true)(J$.T(1436225, 'Failed to auto-detect format of key', 21, false));
                        } catch (J$e) {
                            J$.Ex(1438241, J$e);
                        } finally {
                            if (J$.Fr(1438249))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function findPuTTYHeader(buf) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1436561, arguments.callee, this, arguments);
                            arguments = J$.N(1436569, 'arguments', arguments, true, false, false);
                            buf = J$.N(1436577, 'buf', buf, true, false, false);
                            J$.N(1436585, 'offset', offset, false, false, false);
                            var offset = J$.W(1436281, 'offset', J$.T(1436273, 0, 22, false), offset, false, false);
                            while (J$.C(74712, J$.C(74704, J$.B(180146, '<', J$.R(1436289, 'offset', offset, false, false), J$.G(1436305, J$.R(1436297, 'buf', buf, false, false), 'length'))) ? J$.C(74696, J$.C(74688, J$.B(180154, '===', J$.G(1436329, J$.R(1436313, 'buf', buf, false, false), J$.R(1436321, 'offset', offset, false, false)), J$.T(1436337, 32, 22, false))) ? J$._() : J$.B(180162, '===', J$.G(1436361, J$.R(1436345, 'buf', buf, false, false), J$.R(1436353, 'offset', offset, false, false)), J$.T(1436369, 10, 22, false))) ? J$._() : J$.B(180170, '===', J$.G(1436393, J$.R(1436377, 'buf', buf, false, false), J$.R(1436385, 'offset', offset, false, false)), J$.T(1436401, 9, 22, false)) : J$._())) {
                                offset = J$.W(1436417, 'offset', J$.B(180186, '+', J$.U(180178, '+', J$.R(1436409, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            if (J$.C(74728, J$.C(74720, J$.B(180202, '<=', J$.B(180194, '+', J$.R(1436425, 'offset', offset, false, false), J$.T(1436433, 22, 22, false)), J$.G(1436449, J$.R(1436441, 'buf', buf, false, false), 'length'))) ? J$.B(180218, '===', J$.M(1436513, J$.M(1436505, J$.M(1436489, J$.R(1436457, 'buf', buf, false, false), 'slice', false)(J$.R(1436465, 'offset', offset, false, false), J$.B(180210, '+', J$.R(1436473, 'offset', offset, false, false), J$.T(1436481, 22, 22, false))), 'toString', false)(J$.T(1436497, 'ascii', 21, false)), 'toLowerCase', false)(), J$.T(1436521, 'putty-user-key-file-2:', 21, false)) : J$._()))
                                return J$.Rt(1436537, J$.T(1436529, true, 23, false));
                            return J$.Rt(1436553, J$.T(1436545, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1438257, J$e);
                        } finally {
                            if (J$.Fr(1438265))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function findSSHHeader(buf) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1436985, arguments.callee, this, arguments);
                            arguments = J$.N(1436993, 'arguments', arguments, true, false, false);
                            buf = J$.N(1437001, 'buf', buf, true, false, false);
                            J$.N(1437009, 'offset', offset, false, false, false);
                            var offset = J$.W(1436601, 'offset', J$.T(1436593, 0, 22, false), offset, false, false);
                            while (J$.C(74760, J$.C(74752, J$.B(180226, '<', J$.R(1436609, 'offset', offset, false, false), J$.G(1436625, J$.R(1436617, 'buf', buf, false, false), 'length'))) ? J$.C(74744, J$.C(74736, J$.B(180234, '===', J$.G(1436649, J$.R(1436633, 'buf', buf, false, false), J$.R(1436641, 'offset', offset, false, false)), J$.T(1436657, 32, 22, false))) ? J$._() : J$.B(180242, '===', J$.G(1436681, J$.R(1436665, 'buf', buf, false, false), J$.R(1436673, 'offset', offset, false, false)), J$.T(1436689, 10, 22, false))) ? J$._() : J$.B(180250, '===', J$.G(1436713, J$.R(1436697, 'buf', buf, false, false), J$.R(1436705, 'offset', offset, false, false)), J$.T(1436721, 9, 22, false)) : J$._())) {
                                offset = J$.W(1436737, 'offset', J$.B(180266, '+', J$.U(180258, '+', J$.R(1436729, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            if (J$.C(74776, J$.C(74768, J$.B(180282, '<=', J$.B(180274, '+', J$.R(1436745, 'offset', offset, false, false), J$.T(1436753, 4, 22, false)), J$.G(1436769, J$.R(1436761, 'buf', buf, false, false), 'length'))) ? J$.B(180298, '===', J$.M(1436825, J$.M(1436809, J$.R(1436777, 'buf', buf, false, false), 'slice', false)(J$.R(1436785, 'offset', offset, false, false), J$.B(180290, '+', J$.R(1436793, 'offset', offset, false, false), J$.T(1436801, 4, 22, false))), 'toString', false)(J$.T(1436817, 'ascii', 21, false)), J$.T(1436833, 'ssh-', 21, false)) : J$._()))
                                return J$.Rt(1436849, J$.T(1436841, true, 23, false));
                            if (J$.C(74792, J$.C(74784, J$.B(180314, '<=', J$.B(180306, '+', J$.R(1436857, 'offset', offset, false, false), J$.T(1436865, 6, 22, false)), J$.G(1436881, J$.R(1436873, 'buf', buf, false, false), 'length'))) ? J$.B(180330, '===', J$.M(1436937, J$.M(1436921, J$.R(1436889, 'buf', buf, false, false), 'slice', false)(J$.R(1436897, 'offset', offset, false, false), J$.B(180322, '+', J$.R(1436905, 'offset', offset, false, false), J$.T(1436913, 6, 22, false))), 'toString', false)(J$.T(1436929, 'ascii', 21, false)), J$.T(1436945, 'ecdsa-', 21, false)) : J$._()))
                                return J$.Rt(1436961, J$.T(1436953, true, 23, false));
                            return J$.Rt(1436977, J$.T(1436969, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1438273, J$e);
                        } finally {
                            if (J$.Fr(1438281))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function findPEMHeader(buf) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1437457, arguments.callee, this, arguments);
                            arguments = J$.N(1437465, 'arguments', arguments, true, false, false);
                            buf = J$.N(1437473, 'buf', buf, true, false, false);
                            J$.N(1437481, 'offset', offset, false, false, false);
                            var offset = J$.W(1437025, 'offset', J$.T(1437017, 0, 22, false), offset, false, false);
                            while (J$.C(74816, J$.C(74808, J$.B(180338, '<', J$.R(1437033, 'offset', offset, false, false), J$.G(1437049, J$.R(1437041, 'buf', buf, false, false), 'length'))) ? J$.C(74800, J$.B(180346, '===', J$.G(1437073, J$.R(1437057, 'buf', buf, false, false), J$.R(1437065, 'offset', offset, false, false)), J$.T(1437081, 32, 22, false))) ? J$._() : J$.B(180354, '===', J$.G(1437105, J$.R(1437089, 'buf', buf, false, false), J$.R(1437097, 'offset', offset, false, false)), J$.T(1437113, 10, 22, false)) : J$._())) {
                                offset = J$.W(1437129, 'offset', J$.B(180370, '+', J$.U(180362, '+', J$.R(1437121, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            if (J$.C(74824, J$.B(180378, '!==', J$.G(1437153, J$.R(1437137, 'buf', buf, false, false), J$.R(1437145, 'offset', offset, false, false)), J$.T(1437161, 45, 22, false))))
                                return J$.Rt(1437177, J$.T(1437169, false, 23, false));
                            while (J$.C(74840, J$.C(74832, J$.B(180386, '<', J$.R(1437185, 'offset', offset, false, false), J$.G(1437201, J$.R(1437193, 'buf', buf, false, false), 'length'))) ? J$.B(180394, '===', J$.G(1437225, J$.R(1437209, 'buf', buf, false, false), J$.R(1437217, 'offset', offset, false, false)), J$.T(1437233, 45, 22, false)) : J$._())) {
                                offset = J$.W(1437249, 'offset', J$.B(180410, '+', J$.U(180402, '+', J$.R(1437241, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            while (J$.C(74856, J$.C(74848, J$.B(180418, '<', J$.R(1437257, 'offset', offset, false, false), J$.G(1437273, J$.R(1437265, 'buf', buf, false, false), 'length'))) ? J$.B(180426, '===', J$.G(1437297, J$.R(1437281, 'buf', buf, false, false), J$.R(1437289, 'offset', offset, false, false)), J$.T(1437305, 32, 22, false)) : J$._())) {
                                offset = J$.W(1437321, 'offset', J$.B(180442, '+', J$.U(180434, '+', J$.R(1437313, 'offset', offset, false, false)), 1), offset, false, false);
                            }
                            if (J$.C(74872, J$.C(74864, J$.B(180458, '>', J$.B(180450, '+', J$.R(1437329, 'offset', offset, false, false), J$.T(1437337, 5, 22, false)), J$.G(1437353, J$.R(1437345, 'buf', buf, false, false), 'length'))) ? J$._() : J$.B(180474, '!==', J$.M(1437409, J$.M(1437393, J$.R(1437361, 'buf', buf, false, false), 'slice', false)(J$.R(1437369, 'offset', offset, false, false), J$.B(180466, '+', J$.R(1437377, 'offset', offset, false, false), J$.T(1437385, 5, 22, false))), 'toString', false)(J$.T(1437401, 'ascii', 21, false)), J$.T(1437417, 'BEGIN', 21, false))))
                                return J$.Rt(1437433, J$.T(1437425, false, 23, false));
                            return J$.Rt(1437449, J$.T(1437441, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(1438289, J$e);
                        } finally {
                            if (J$.Fr(1438297))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function findDNSSECHeader(buf) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1437945, arguments.callee, this, arguments);
                            arguments = J$.N(1437953, 'arguments', arguments, true, false, false);
                            buf = J$.N(1437961, 'buf', buf, true, false, false);
                            J$.N(1437969, 'headerCheck', headerCheck, false, false, false);
                            J$.N(1437977, 'lines', lines, false, false, false);
                            J$.N(1437985, 'line', line, false, false, false);
                            if (J$.C(74880, J$.B(180482, '<=', J$.G(1437497, J$.R(1437489, 'buf', buf, false, false), 'length'), J$.G(1437513, J$.R(1437505, 'DNSSEC_PRIVKEY_HEADER_PREFIX', DNSSEC_PRIVKEY_HEADER_PREFIX, false, true), 'length'))))
                                return J$.Rt(1437529, J$.T(1437521, false, 23, false));
                            var headerCheck = J$.W(1437577, 'headerCheck', J$.M(1437569, J$.R(1437537, 'buf', buf, false, false), 'slice', false)(J$.T(1437545, 0, 22, false), J$.G(1437561, J$.R(1437553, 'DNSSEC_PRIVKEY_HEADER_PREFIX', DNSSEC_PRIVKEY_HEADER_PREFIX, false, true), 'length')), headerCheck, false, false);
                            if (J$.C(74888, J$.B(180490, '===', J$.M(1437601, J$.R(1437585, 'headerCheck', headerCheck, false, false), 'toString', false)(J$.T(1437593, 'ascii', 21, false)), J$.R(1437609, 'DNSSEC_PRIVKEY_HEADER_PREFIX', DNSSEC_PRIVKEY_HEADER_PREFIX, false, true))))
                                return J$.Rt(1437625, J$.T(1437617, true, 23, false));
                            if (J$.C(74896, J$.B(180506, '!==', J$.U(180498, 'typeof', J$.R(1437633, 'buf', buf, false, false)), J$.T(1437641, 'string', 21, false)))) {
                                buf = J$.W(1437673, 'buf', J$.M(1437665, J$.R(1437649, 'buf', buf, false, false), 'toString', false)(J$.T(1437657, 'ascii', 21, false)), buf, false, false);
                            }
                            var lines = J$.W(1437705, 'lines', J$.M(1437697, J$.R(1437681, 'buf', buf, false, false), 'split', false)(J$.T(1437689, '\n', 21, false)), lines, false, false);
                            var line = J$.W(1437721, 'line', J$.T(1437713, 0, 22, false), line, false, false);
                            while (J$.C(74904, J$.M(1437761, J$.G(1437745, J$.R(1437729, 'lines', lines, false, false), J$.R(1437737, 'line', line, false, false)), 'match', false)(J$.T(1437753, /^\;/, 14, false)))) {
                                J$.B(180530, '-', line = J$.W(1437777, 'line', J$.B(180522, '+', J$.U(180514, '+', J$.R(1437769, 'line', line, false, false)), 1), line, false, false), 1);
                            }
                            if (J$.C(74912, J$.M(1437833, J$.M(1437817, J$.G(1437801, J$.R(1437785, 'lines', lines, false, false), J$.R(1437793, 'line', line, false, false)), 'toString', false)(J$.T(1437809, 'ascii', 21, false)), 'match', false)(J$.T(1437825, /\. IN KEY /, 14, false))))
                                return J$.Rt(1437849, J$.T(1437841, true, 23, false));
                            if (J$.C(74920, J$.M(1437905, J$.M(1437889, J$.G(1437873, J$.R(1437857, 'lines', lines, false, false), J$.R(1437865, 'line', line, false, false)), 'toString', false)(J$.T(1437881, 'ascii', 21, false)), 'match', false)(J$.T(1437897, /\. IN DNSKEY /, 14, false))))
                                return J$.Rt(1437921, J$.T(1437913, true, 23, false));
                            return J$.Rt(1437937, J$.T(1437929, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1438305, J$e);
                        } finally {
                            if (J$.Fr(1438313))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1438017, arguments.callee, this, arguments);
                            arguments = J$.N(1438025, 'arguments', arguments, true, false, false);
                            key = J$.N(1438033, 'key', key, true, false, false);
                            options = J$.N(1438041, 'options', options, true, false, false);
                            throw J$.F(1438009, J$.I(typeof Error === 'undefined' ? Error = J$.R(1437993, 'Error', undefined, true, true) : Error = J$.R(1437993, 'Error', Error, true, true)), true)(J$.T(1438001, '"auto" format cannot be used for writing', 21, false));
                        } catch (J$e) {
                            J$.Ex(1438321, J$e);
                        } finally {
                            if (J$.Fr(1438329))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1438057, 'assert', assert, false, false, false);
            J$.N(1438065, 'Buffer', Buffer, false, false, false);
            J$.N(1438073, 'utils', utils, false, false, false);
            J$.N(1438081, 'Key', Key, false, false, false);
            J$.N(1438089, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(1438097, 'pem', pem, false, false, false);
            J$.N(1438105, 'ssh', ssh, false, false, false);
            J$.N(1438113, 'rfc4253', rfc4253, false, false, false);
            J$.N(1438121, 'dnssec', dnssec, false, false, false);
            J$.N(1438129, 'putty', putty, false, false, false);
            J$.N(1438137, 'DNSSEC_PRIVKEY_HEADER_PREFIX', DNSSEC_PRIVKEY_HEADER_PREFIX, false, false, false);
            read = J$.N(1438153, 'read', J$.T(1438145, read, 12, false), true, false, false);
            findPuTTYHeader = J$.N(1438169, 'findPuTTYHeader', J$.T(1438161, findPuTTYHeader, 12, false), true, false, false);
            findSSHHeader = J$.N(1438185, 'findSSHHeader', J$.T(1438177, findSSHHeader, 12, false), true, false, false);
            findPEMHeader = J$.N(1438201, 'findPEMHeader', J$.T(1438193, findPEMHeader, 12, false), true, false, false);
            findDNSSECHeader = J$.N(1438217, 'findDNSSECHeader', J$.T(1438209, findDNSSECHeader, 12, false), true, false, false);
            write = J$.N(1438233, 'write', J$.T(1438225, write, 12, false), true, false, false);
            J$.T(1434889, 'use strict', 21, false);
            J$.F(1434913, J$.I(typeof require === 'undefined' ? require = J$.R(1434897, 'require', undefined, true, true) : require = J$.R(1434897, 'require', require, true, true)), false)(J$.T(1434905, 'core-js/modules/es.array.slice', 21, false));
            J$.F(1434937, J$.I(typeof require === 'undefined' ? require = J$.R(1434921, 'require', undefined, true, true) : require = J$.R(1434921, 'require', require, true, true)), false)(J$.T(1434929, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(1434961, J$.I(typeof require === 'undefined' ? require = J$.R(1434945, 'require', undefined, true, true) : require = J$.R(1434945, 'require', require, true, true)), false)(J$.T(1434953, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1434985, J$.I(typeof require === 'undefined' ? require = J$.R(1434969, 'require', undefined, true, true) : require = J$.R(1434969, 'require', require, true, true)), false)(J$.T(1434977, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1435009, J$.I(typeof require === 'undefined' ? require = J$.R(1434993, 'require', undefined, true, true) : require = J$.R(1434993, 'require', require, true, true)), false)(J$.T(1435001, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(1435033, J$.I(typeof require === 'undefined' ? require = J$.R(1435017, 'require', undefined, true, true) : require = J$.R(1435017, 'require', require, true, true)), false)(J$.T(1435025, 'core-js/modules/es.string.match', 21, false));
            J$.F(1435057, J$.I(typeof require === 'undefined' ? require = J$.R(1435041, 'require', undefined, true, true) : require = J$.R(1435041, 'require', require, true, true)), false)(J$.T(1435049, 'core-js/modules/es.string.split', 21, false));
            J$.F(1435081, J$.I(typeof require === 'undefined' ? require = J$.R(1435065, 'require', undefined, true, true) : require = J$.R(1435065, 'require', require, true, true)), false)(J$.T(1435073, 'core-js/modules/es.string.trim', 21, false));
            J$.P(1435121, J$.I(typeof module === 'undefined' ? module = J$.R(1435089, 'module', undefined, true, true) : module = J$.R(1435089, 'module', module, true, true)), 'exports', J$.T(1435113, {
                read: J$.R(1435097, 'read', read, false, true),
                write: J$.R(1435105, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(1435153, 'assert', J$.F(1435145, J$.I(typeof require === 'undefined' ? require = J$.R(1435129, 'require', undefined, true, true) : require = J$.R(1435129, 'require', require, true, true)), false)(J$.T(1435137, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(1435193, 'Buffer', J$.G(1435185, J$.F(1435177, J$.I(typeof require === 'undefined' ? require = J$.R(1435161, 'require', undefined, true, true) : require = J$.R(1435161, 'require', require, true, true)), false)(J$.T(1435169, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var utils = J$.W(1435225, 'utils', J$.F(1435217, J$.I(typeof require === 'undefined' ? require = J$.R(1435201, 'require', undefined, true, true) : require = J$.R(1435201, 'require', require, true, true)), false)(J$.T(1435209, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(1435257, 'Key', J$.F(1435249, J$.I(typeof require === 'undefined' ? require = J$.R(1435233, 'require', undefined, true, true) : require = J$.R(1435233, 'require', require, true, true)), false)(J$.T(1435241, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(1435289, 'PrivateKey', J$.F(1435281, J$.I(typeof require === 'undefined' ? require = J$.R(1435265, 'require', undefined, true, true) : require = J$.R(1435265, 'require', require, true, true)), false)(J$.T(1435273, '../private-key', 21, false)), PrivateKey, false, true);
            var pem = J$.W(1435321, 'pem', J$.F(1435313, J$.I(typeof require === 'undefined' ? require = J$.R(1435297, 'require', undefined, true, true) : require = J$.R(1435297, 'require', require, true, true)), false)(J$.T(1435305, './pem', 21, false)), pem, false, true);
            var ssh = J$.W(1435353, 'ssh', J$.F(1435345, J$.I(typeof require === 'undefined' ? require = J$.R(1435329, 'require', undefined, true, true) : require = J$.R(1435329, 'require', require, true, true)), false)(J$.T(1435337, './ssh', 21, false)), ssh, false, true);
            var rfc4253 = J$.W(1435385, 'rfc4253', J$.F(1435377, J$.I(typeof require === 'undefined' ? require = J$.R(1435361, 'require', undefined, true, true) : require = J$.R(1435361, 'require', require, true, true)), false)(J$.T(1435369, './rfc4253', 21, false)), rfc4253, false, true);
            var dnssec = J$.W(1435417, 'dnssec', J$.F(1435409, J$.I(typeof require === 'undefined' ? require = J$.R(1435393, 'require', undefined, true, true) : require = J$.R(1435393, 'require', require, true, true)), false)(J$.T(1435401, './dnssec', 21, false)), dnssec, false, true);
            var putty = J$.W(1435449, 'putty', J$.F(1435441, J$.I(typeof require === 'undefined' ? require = J$.R(1435425, 'require', undefined, true, true) : require = J$.R(1435425, 'require', require, true, true)), false)(J$.T(1435433, './putty', 21, false)), putty, false, true);
            var DNSSEC_PRIVKEY_HEADER_PREFIX = J$.W(1435465, 'DNSSEC_PRIVKEY_HEADER_PREFIX', J$.T(1435457, 'Private-key-format: v1', 21, false), DNSSEC_PRIVKEY_HEADER_PREFIX, false, true);
        } catch (J$e) {
            J$.Ex(1438337, J$e);
        } finally {
            if (J$.Sr(1438345))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

