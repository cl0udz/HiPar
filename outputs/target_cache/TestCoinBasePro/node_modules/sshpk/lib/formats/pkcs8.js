J$.noInstrEval = false;
jalangiLabel29:
    while (true) {
        try {
            J$.Se(1484673, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/sshpk/lib/formats/pkcs8.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1471553, arguments.callee, this, arguments);
                            arguments = J$.N(1471561, 'arguments', arguments, true, false, false);
                            obj = J$.N(1471569, 'obj', obj, true, false, false);
                            if (J$.C(76192, J$.C(76152, J$.B(182562, '===', J$.U(182554, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1471289, 'Symbol', undefined, true, true) : Symbol = J$.R(1471289, 'Symbol', Symbol, true, true))), J$.T(1471297, 'function', 21, false))) ? J$.B(182578, '===', J$.U(182570, 'typeof', J$.G(1471313, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1471305, 'Symbol', undefined, true, true) : Symbol = J$.R(1471305, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(1471321, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(1471377, '_typeof', J$.T(1471369, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(1471345, arguments.callee, this, arguments);
                                                arguments = J$.N(1471353, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1471361, 'obj', obj, true, false, false);
                                                return J$.Rt(1471337, J$.U(182586, 'typeof', J$.R(1471329, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1485177, J$e);
                                            } finally {
                                                if (J$.Fr(1485185))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(1471513, '_typeof', J$.T(1471505, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1471481, arguments.callee, this, arguments);
                                                arguments = J$.N(1471489, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1471497, 'obj', obj, true, false, false);
                                                return J$.Rt(1471473, J$.C(76184, J$.C(76176, J$.C(76168, J$.C(76160, J$.R(1471385, 'obj', obj, false, false)) ? J$.B(182602, '===', J$.U(182594, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1471393, 'Symbol', undefined, true, true) : Symbol = J$.R(1471393, 'Symbol', Symbol, true, true))), J$.T(1471401, 'function', 21, false)) : J$._()) ? J$.B(182610, '===', J$.G(1471417, J$.R(1471409, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1471425, 'Symbol', undefined, true, true) : Symbol = J$.R(1471425, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(182618, '!==', J$.R(1471433, 'obj', obj, false, false), J$.G(1471449, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1471441, 'Symbol', undefined, true, true) : Symbol = J$.R(1471441, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(1471457, 'symbol', 21, false) : J$.U(182626, 'typeof', J$.R(1471465, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1485193, J$e);
                                            } finally {
                                                if (J$.Fr(1485201))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(1471545, J$.F(1471537, J$.R(1471521, '_typeof', _typeof, false, true), false)(J$.R(1471529, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485209, J$e);
                        } finally {
                            if (J$.Fr(1485217))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function read(buf, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1471969, arguments.callee, this, arguments);
                            arguments = J$.N(1471977, 'arguments', arguments, true, false, false);
                            buf = J$.N(1471985, 'buf', buf, true, false, false);
                            options = J$.N(1471993, 'options', options, true, false, false);
                            return J$.Rt(1471961, J$.M(1471953, J$.R(1471921, 'pem', pem, false, true), 'read', false)(J$.R(1471929, 'buf', buf, false, false), J$.R(1471937, 'options', options, false, false), J$.T(1471945, 'pkcs8', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1485225, J$e);
                        } finally {
                            if (J$.Fr(1485233))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1472049, arguments.callee, this, arguments);
                            arguments = J$.N(1472057, 'arguments', arguments, true, false, false);
                            key = J$.N(1472065, 'key', key, true, false, false);
                            options = J$.N(1472073, 'options', options, true, false, false);
                            return J$.Rt(1472041, J$.M(1472033, J$.R(1472001, 'pem', pem, false, true), 'write', false)(J$.R(1472009, 'key', key, false, false), J$.R(1472017, 'options', options, false, false), J$.T(1472025, 'pkcs8', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1485241, J$e);
                        } finally {
                            if (J$.Fr(1485249))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readMPInt(der, nm) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1472225, arguments.callee, this, arguments);
                            arguments = J$.N(1472233, 'arguments', arguments, true, false, false);
                            der = J$.N(1472241, 'der', der, true, false, false);
                            nm = J$.N(1472249, 'nm', nm, true, false, false);
                            J$.M(1472145, J$.R(1472081, 'assert', assert, false, true), 'strictEqual', false)(J$.M(1472097, J$.R(1472089, 'der', der, false, false), 'peek', false)(), J$.G(1472121, J$.G(1472113, J$.R(1472105, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.B(182634, '+', J$.R(1472129, 'nm', nm, false, false), J$.T(1472137, ' is not an Integer', 21, false)));
                            return J$.Rt(1472217, J$.M(1472209, J$.R(1472153, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(1472201, J$.R(1472161, 'der', der, false, false), 'readString', false)(J$.G(1472185, J$.G(1472177, J$.R(1472169, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(1472193, true, 23, false))));
                        } catch (J$e) {
                            J$.Ex(1485257, J$e);
                        } finally {
                            if (J$.Fr(1485265))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8(alg, type, der) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1472969, arguments.callee, this, arguments);
                            arguments = J$.N(1472977, 'arguments', arguments, true, false, false);
                            alg = J$.N(1472985, 'alg', alg, true, false, false);
                            type = J$.N(1472993, 'type', type, true, false, false);
                            der = J$.N(1473001, 'der', der, true, false, false);
                            J$.N(1473009, 'next', next, false, false, false);
                            J$.N(1473017, 'oid', oid, false, false, false);
                            if (J$.C(76200, J$.B(182642, '===', J$.M(1472265, J$.R(1472257, 'der', der, false, false), 'peek', false)(), J$.G(1472289, J$.G(1472281, J$.R(1472273, 'asn1', asn1, false, true), 'Ber'), 'Integer')))) {
                                J$.M(1472329, J$.R(1472297, 'assert', assert, false, true), 'strictEqual', false)(J$.R(1472305, 'type', type, false, false), J$.T(1472313, 'private', 21, false), J$.T(1472321, 'unexpected Integer at start of public key', 21, false));
                                J$.M(1472377, J$.R(1472337, 'der', der, false, false), 'readString', false)(J$.G(1472361, J$.G(1472353, J$.R(1472345, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(1472369, true, 23, false));
                            }
                            J$.M(1472393, J$.R(1472385, 'der', der, false, false), 'readSequence', false)();
                            var next = J$.W(1472433, 'next', J$.B(182650, '+', J$.G(1472409, J$.R(1472401, 'der', der, false, false), 'offset'), J$.G(1472425, J$.R(1472417, 'der', der, false, false), 'length')), next, false, false);
                            var oid = J$.W(1472457, 'oid', J$.M(1472449, J$.R(1472441, 'der', der, false, false), 'readOID', false)(), oid, false, false);
                            switch (J$.C1(76248, J$.R(1472465, 'oid', oid, false, false))) {
                            case J$.C2(76256, J$.T(1472577, '1.2.840.113549.1.1.1', 21, false)):
                                J$.P(1472489, J$.R(1472473, 'der', der, false, false), '_offset', J$.R(1472481, 'next', next, false, false));
                                if (J$.C(76208, J$.B(182658, '===', J$.R(1472497, 'type', type, false, false), J$.T(1472505, 'public', 21, false))))
                                    return J$.Rt(1472537, J$.F(1472529, J$.R(1472513, 'readPkcs8RSAPublic', readPkcs8RSAPublic, false, true), false)(J$.R(1472521, 'der', der, false, false)));
                                else
                                    return J$.Rt(1472569, J$.F(1472561, J$.R(1472545, 'readPkcs8RSAPrivate', readPkcs8RSAPrivate, false, true), false)(J$.R(1472553, 'der', der, false, false)));
                            case J$.C2(76264, J$.T(1472665, '1.2.840.10040.4.1', 21, false)):
                                if (J$.C(76216, J$.B(182666, '===', J$.R(1472585, 'type', type, false, false), J$.T(1472593, 'public', 21, false))))
                                    return J$.Rt(1472625, J$.F(1472617, J$.R(1472601, 'readPkcs8DSAPublic', readPkcs8DSAPublic, false, true), false)(J$.R(1472609, 'der', der, false, false)));
                                else
                                    return J$.Rt(1472657, J$.F(1472649, J$.R(1472633, 'readPkcs8DSAPrivate', readPkcs8DSAPrivate, false, true), false)(J$.R(1472641, 'der', der, false, false)));
                            case J$.C2(76272, J$.T(1472753, '1.2.840.10045.2.1', 21, false)):
                                if (J$.C(76224, J$.B(182674, '===', J$.R(1472673, 'type', type, false, false), J$.T(1472681, 'public', 21, false))))
                                    return J$.Rt(1472713, J$.F(1472705, J$.R(1472689, 'readPkcs8ECDSAPublic', readPkcs8ECDSAPublic, false, true), false)(J$.R(1472697, 'der', der, false, false)));
                                else
                                    return J$.Rt(1472745, J$.F(1472737, J$.R(1472721, 'readPkcs8ECDSAPrivate', readPkcs8ECDSAPrivate, false, true), false)(J$.R(1472729, 'der', der, false, false)));
                            case J$.C2(76280, J$.T(1472841, '1.3.101.112', 21, false)):
                                if (J$.C(76232, J$.B(182682, '===', J$.R(1472761, 'type', type, false, false), J$.T(1472769, 'public', 21, false)))) {
                                    return J$.Rt(1472801, J$.F(1472793, J$.R(1472777, 'readPkcs8EdDSAPublic', readPkcs8EdDSAPublic, false, true), false)(J$.R(1472785, 'der', der, false, false)));
                                } else {
                                    return J$.Rt(1472833, J$.F(1472825, J$.R(1472809, 'readPkcs8EdDSAPrivate', readPkcs8EdDSAPrivate, false, true), false)(J$.R(1472817, 'der', der, false, false)));
                                }
                            case J$.C2(76288, J$.T(1472929, '1.3.101.110', 21, false)):
                                if (J$.C(76240, J$.B(182690, '===', J$.R(1472849, 'type', type, false, false), J$.T(1472857, 'public', 21, false)))) {
                                    return J$.Rt(1472889, J$.F(1472881, J$.R(1472865, 'readPkcs8X25519Public', readPkcs8X25519Public, false, true), false)(J$.R(1472873, 'der', der, false, false)));
                                } else {
                                    return J$.Rt(1472921, J$.F(1472913, J$.R(1472897, 'readPkcs8X25519Private', readPkcs8X25519Private, false, true), false)(J$.R(1472905, 'der', der, false, false)));
                                }
                            default:
                                throw J$.F(1472961, J$.I(typeof Error === 'undefined' ? Error = J$.R(1472937, 'Error', undefined, true, true) : Error = J$.R(1472937, 'Error', Error, true, true)), true)(J$.B(182698, '+', J$.T(1472945, 'Unknown key type OID ', 21, false), J$.R(1472953, 'oid', oid, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(1485273, J$e);
                        } finally {
                            if (J$.Fr(1485281))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8RSAPublic(der) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1473305, arguments.callee, this, arguments);
                            arguments = J$.N(1473313, 'arguments', arguments, true, false, false);
                            der = J$.N(1473321, 'der', der, true, false, false);
                            J$.N(1473329, 'n', n, false, false, false);
                            J$.N(1473337, 'e', e, false, false, false);
                            J$.N(1473345, 'key', key, false, false, false);
                            J$.M(1473057, J$.R(1473025, 'der', der, false, false), 'readSequence', false)(J$.G(1473049, J$.G(1473041, J$.R(1473033, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(1473073, J$.R(1473065, 'der', der, false, false), 'readByte', false)();
                            J$.M(1473089, J$.R(1473081, 'der', der, false, false), 'readSequence', false)();
                            var n = J$.W(1473129, 'n', J$.F(1473121, J$.R(1473097, 'readMPInt', readMPInt, false, true), false)(J$.R(1473105, 'der', der, false, false), J$.T(1473113, 'modulus', 21, false)), n, false, false);
                            var e = J$.W(1473169, 'e', J$.F(1473161, J$.R(1473137, 'readMPInt', readMPInt, false, true), false)(J$.R(1473145, 'der', der, false, false), J$.T(1473153, 'exponent', 21, false)), e, false, false);
                            var key = J$.W(1473265, 'key', J$.T(1473257, {
                                type: J$.T(1473177, 'rsa', 21, false),
                                source: J$.G(1473193, J$.R(1473185, 'der', der, false, false), 'originalInput'),
                                parts: J$.T(1473249, [
                                    J$.T(1473217, {
                                        name: J$.T(1473201, 'e', 21, false),
                                        data: J$.R(1473209, 'e', e, false, false)
                                    }, 11, false),
                                    J$.T(1473241, {
                                        name: J$.T(1473225, 'n', 21, false),
                                        data: J$.R(1473233, 'n', n, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1473297, J$.F(1473289, J$.R(1473273, 'Key', Key, false, true), true)(J$.R(1473281, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485289, J$e);
                        } finally {
                            if (J$.Fr(1485297))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8RSAPrivate(der) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(1474081, arguments.callee, this, arguments);
                            arguments = J$.N(1474089, 'arguments', arguments, true, false, false);
                            der = J$.N(1474097, 'der', der, true, false, false);
                            J$.N(1474105, 'ver', ver, false, false, false);
                            J$.N(1474113, 'n', n, false, false, false);
                            J$.N(1474121, 'e', e, false, false, false);
                            J$.N(1474129, 'd', d, false, false, false);
                            J$.N(1474137, 'p', p, false, false, false);
                            J$.N(1474145, 'q', q, false, false, false);
                            J$.N(1474153, 'dmodp', dmodp, false, false, false);
                            J$.N(1474161, 'dmodq', dmodq, false, false, false);
                            J$.N(1474169, 'iqmp', iqmp, false, false, false);
                            J$.N(1474177, 'key', key, false, false, false);
                            J$.M(1473385, J$.R(1473353, 'der', der, false, false), 'readSequence', false)(J$.G(1473377, J$.G(1473369, J$.R(1473361, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(1473401, J$.R(1473393, 'der', der, false, false), 'readSequence', false)();
                            var ver = J$.W(1473441, 'ver', J$.F(1473433, J$.R(1473409, 'readMPInt', readMPInt, false, true), false)(J$.R(1473417, 'der', der, false, false), J$.T(1473425, 'version', 21, false)), ver, false, false);
                            J$.M(1473497, J$.R(1473449, 'assert', assert, false, true), 'equal', false)(J$.G(1473473, J$.R(1473457, 'ver', ver, false, false), J$.T(1473465, 0, 22, false)), J$.T(1473481, 0, 22, false), J$.T(1473489, 'unknown RSA private key version', 21, false));
                            var n = J$.W(1473537, 'n', J$.F(1473529, J$.R(1473505, 'readMPInt', readMPInt, false, true), false)(J$.R(1473513, 'der', der, false, false), J$.T(1473521, 'modulus', 21, false)), n, false, false);
                            var e = J$.W(1473577, 'e', J$.F(1473569, J$.R(1473545, 'readMPInt', readMPInt, false, true), false)(J$.R(1473553, 'der', der, false, false), J$.T(1473561, 'public exponent', 21, false)), e, false, false);
                            var d = J$.W(1473617, 'd', J$.F(1473609, J$.R(1473585, 'readMPInt', readMPInt, false, true), false)(J$.R(1473593, 'der', der, false, false), J$.T(1473601, 'private exponent', 21, false)), d, false, false);
                            var p = J$.W(1473657, 'p', J$.F(1473649, J$.R(1473625, 'readMPInt', readMPInt, false, true), false)(J$.R(1473633, 'der', der, false, false), J$.T(1473641, 'prime1', 21, false)), p, false, false);
                            var q = J$.W(1473697, 'q', J$.F(1473689, J$.R(1473665, 'readMPInt', readMPInt, false, true), false)(J$.R(1473673, 'der', der, false, false), J$.T(1473681, 'prime2', 21, false)), q, false, false);
                            var dmodp = J$.W(1473737, 'dmodp', J$.F(1473729, J$.R(1473705, 'readMPInt', readMPInt, false, true), false)(J$.R(1473713, 'der', der, false, false), J$.T(1473721, 'exponent1', 21, false)), dmodp, false, false);
                            var dmodq = J$.W(1473777, 'dmodq', J$.F(1473769, J$.R(1473745, 'readMPInt', readMPInt, false, true), false)(J$.R(1473753, 'der', der, false, false), J$.T(1473761, 'exponent2', 21, false)), dmodq, false, false);
                            var iqmp = J$.W(1473817, 'iqmp', J$.F(1473809, J$.R(1473785, 'readMPInt', readMPInt, false, true), false)(J$.R(1473793, 'der', der, false, false), J$.T(1473801, 'iqmp', 21, false)), iqmp, false, false);
                            var key = J$.W(1474041, 'key', J$.T(1474033, {
                                type: J$.T(1473825, 'rsa', 21, false),
                                parts: J$.T(1474025, [
                                    J$.T(1473849, {
                                        name: J$.T(1473833, 'n', 21, false),
                                        data: J$.R(1473841, 'n', n, false, false)
                                    }, 11, false),
                                    J$.T(1473873, {
                                        name: J$.T(1473857, 'e', 21, false),
                                        data: J$.R(1473865, 'e', e, false, false)
                                    }, 11, false),
                                    J$.T(1473897, {
                                        name: J$.T(1473881, 'd', 21, false),
                                        data: J$.R(1473889, 'd', d, false, false)
                                    }, 11, false),
                                    J$.T(1473921, {
                                        name: J$.T(1473905, 'iqmp', 21, false),
                                        data: J$.R(1473913, 'iqmp', iqmp, false, false)
                                    }, 11, false),
                                    J$.T(1473945, {
                                        name: J$.T(1473929, 'p', 21, false),
                                        data: J$.R(1473937, 'p', p, false, false)
                                    }, 11, false),
                                    J$.T(1473969, {
                                        name: J$.T(1473953, 'q', 21, false),
                                        data: J$.R(1473961, 'q', q, false, false)
                                    }, 11, false),
                                    J$.T(1473993, {
                                        name: J$.T(1473977, 'dmodp', 21, false),
                                        data: J$.R(1473985, 'dmodp', dmodp, false, false)
                                    }, 11, false),
                                    J$.T(1474017, {
                                        name: J$.T(1474001, 'dmodq', 21, false),
                                        data: J$.R(1474009, 'dmodq', dmodq, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1474073, J$.F(1474065, J$.R(1474049, 'PrivateKey', PrivateKey, false, true), true)(J$.R(1474057, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485305, J$e);
                        } finally {
                            if (J$.Fr(1485313))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8DSAPublic(der) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(1474577, arguments.callee, this, arguments);
                            arguments = J$.N(1474585, 'arguments', arguments, true, false, false);
                            der = J$.N(1474593, 'der', der, true, false, false);
                            J$.N(1474601, 'p', p, false, false, false);
                            J$.N(1474609, 'q', q, false, false, false);
                            J$.N(1474617, 'g', g, false, false, false);
                            J$.N(1474625, 'y', y, false, false, false);
                            J$.N(1474633, 'key', key, false, false, false);
                            J$.M(1474193, J$.R(1474185, 'der', der, false, false), 'readSequence', false)();
                            var p = J$.W(1474233, 'p', J$.F(1474225, J$.R(1474201, 'readMPInt', readMPInt, false, true), false)(J$.R(1474209, 'der', der, false, false), J$.T(1474217, 'p', 21, false)), p, false, false);
                            var q = J$.W(1474273, 'q', J$.F(1474265, J$.R(1474241, 'readMPInt', readMPInt, false, true), false)(J$.R(1474249, 'der', der, false, false), J$.T(1474257, 'q', 21, false)), q, false, false);
                            var g = J$.W(1474313, 'g', J$.F(1474305, J$.R(1474281, 'readMPInt', readMPInt, false, true), false)(J$.R(1474289, 'der', der, false, false), J$.T(1474297, 'g', 21, false)), g, false, false);
                            J$.M(1474353, J$.R(1474321, 'der', der, false, false), 'readSequence', false)(J$.G(1474345, J$.G(1474337, J$.R(1474329, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(1474369, J$.R(1474361, 'der', der, false, false), 'readByte', false)();
                            var y = J$.W(1474409, 'y', J$.F(1474401, J$.R(1474377, 'readMPInt', readMPInt, false, true), false)(J$.R(1474385, 'der', der, false, false), J$.T(1474393, 'y', 21, false)), y, false, false);
                            var key = J$.W(1474537, 'key', J$.T(1474529, {
                                type: J$.T(1474417, 'dsa', 21, false),
                                parts: J$.T(1474521, [
                                    J$.T(1474441, {
                                        name: J$.T(1474425, 'p', 21, false),
                                        data: J$.R(1474433, 'p', p, false, false)
                                    }, 11, false),
                                    J$.T(1474465, {
                                        name: J$.T(1474449, 'q', 21, false),
                                        data: J$.R(1474457, 'q', q, false, false)
                                    }, 11, false),
                                    J$.T(1474489, {
                                        name: J$.T(1474473, 'g', 21, false),
                                        data: J$.R(1474481, 'g', g, false, false)
                                    }, 11, false),
                                    J$.T(1474513, {
                                        name: J$.T(1474497, 'y', 21, false),
                                        data: J$.R(1474505, 'y', y, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1474569, J$.F(1474561, J$.R(1474545, 'Key', Key, false, true), true)(J$.R(1474553, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485321, J$e);
                        } finally {
                            if (J$.Fr(1485329))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8DSAPrivate(der) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(1475089, arguments.callee, this, arguments);
                            arguments = J$.N(1475097, 'arguments', arguments, true, false, false);
                            der = J$.N(1475105, 'der', der, true, false, false);
                            J$.N(1475113, 'p', p, false, false, false);
                            J$.N(1475121, 'q', q, false, false, false);
                            J$.N(1475129, 'g', g, false, false, false);
                            J$.N(1475137, 'x', x, false, false, false);
                            J$.N(1475145, 'y', y, false, false, false);
                            J$.N(1475153, 'key', key, false, false, false);
                            J$.M(1474649, J$.R(1474641, 'der', der, false, false), 'readSequence', false)();
                            var p = J$.W(1474689, 'p', J$.F(1474681, J$.R(1474657, 'readMPInt', readMPInt, false, true), false)(J$.R(1474665, 'der', der, false, false), J$.T(1474673, 'p', 21, false)), p, false, false);
                            var q = J$.W(1474729, 'q', J$.F(1474721, J$.R(1474697, 'readMPInt', readMPInt, false, true), false)(J$.R(1474705, 'der', der, false, false), J$.T(1474713, 'q', 21, false)), q, false, false);
                            var g = J$.W(1474769, 'g', J$.F(1474761, J$.R(1474737, 'readMPInt', readMPInt, false, true), false)(J$.R(1474745, 'der', der, false, false), J$.T(1474753, 'g', 21, false)), g, false, false);
                            J$.M(1474809, J$.R(1474777, 'der', der, false, false), 'readSequence', false)(J$.G(1474801, J$.G(1474793, J$.R(1474785, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            var x = J$.W(1474849, 'x', J$.F(1474841, J$.R(1474817, 'readMPInt', readMPInt, false, true), false)(J$.R(1474825, 'der', der, false, false), J$.T(1474833, 'x', 21, false)), x, false, false);
                            var y = J$.W(1474897, 'y', J$.M(1474889, J$.R(1474857, 'utils', utils, false, true), 'calculateDSAPublic', false)(J$.R(1474865, 'g', g, false, false), J$.R(1474873, 'p', p, false, false), J$.R(1474881, 'x', x, false, false)), y, false, false);
                            var key = J$.W(1475049, 'key', J$.T(1475041, {
                                type: J$.T(1474905, 'dsa', 21, false),
                                parts: J$.T(1475033, [
                                    J$.T(1474929, {
                                        name: J$.T(1474913, 'p', 21, false),
                                        data: J$.R(1474921, 'p', p, false, false)
                                    }, 11, false),
                                    J$.T(1474953, {
                                        name: J$.T(1474937, 'q', 21, false),
                                        data: J$.R(1474945, 'q', q, false, false)
                                    }, 11, false),
                                    J$.T(1474977, {
                                        name: J$.T(1474961, 'g', 21, false),
                                        data: J$.R(1474969, 'g', g, false, false)
                                    }, 11, false),
                                    J$.T(1475001, {
                                        name: J$.T(1474985, 'y', 21, false),
                                        data: J$.R(1474993, 'y', y, false, false)
                                    }, 11, false),
                                    J$.T(1475025, {
                                        name: J$.T(1475009, 'x', 21, false),
                                        data: J$.R(1475017, 'x', x, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1475081, J$.F(1475073, J$.R(1475057, 'PrivateKey', PrivateKey, false, true), true)(J$.R(1475065, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485337, J$e);
                        } finally {
                            if (J$.Fr(1485345))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readECDSACurve(der) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(1477185, arguments.callee, this, arguments);
                            arguments = J$.N(1477193, 'arguments', arguments, true, false, false);
                            der = J$.N(1477201, 'der', der, true, false, false);
                            J$.N(1477209, 'curveName', curveName, false, false, false);
                            J$.N(1477217, 'curveNames', curveNames, false, false, false);
                            J$.N(1477225, 'j', j, false, false, false);
                            J$.N(1477233, 'c', c, false, false, false);
                            J$.N(1477241, 'cd', cd, false, false, false);
                            J$.N(1477249, 'oid', oid, false, false, false);
                            J$.N(1477257, 'version', version, false, false, false);
                            J$.N(1477265, 'curve', curve, false, false, false);
                            J$.N(1477273, 'fieldTypeOid', fieldTypeOid, false, false, false);
                            J$.N(1477281, 'p', p, false, false, false);
                            J$.N(1477289, 'ks', ks, false, false, false);
                            J$.N(1477297, 'equal', equal, false, false, false);
                            J$.N(1477305, 'i', i, false, false, false);
                            J$.N(1477313, 'k', k, false, false, false);
                            var curveName, curveNames;
                            var j, c, cd;
                            if (J$.C(76400, J$.B(182706, '===', J$.M(1475169, J$.R(1475161, 'der', der, false, false), 'peek', false)(), J$.G(1475193, J$.G(1475185, J$.R(1475177, 'asn1', asn1, false, true), 'Ber'), 'OID')))) {
                                var oid = J$.W(1475217, 'oid', J$.M(1475209, J$.R(1475201, 'der', der, false, false), 'readOID', false)(), oid, false, false);
                                curveNames = J$.W(1475257, 'curveNames', J$.M(1475249, J$.I(typeof Object === 'undefined' ? Object = J$.R(1475225, 'Object', undefined, true, true) : Object = J$.R(1475225, 'Object', Object, true, true)), 'keys', false)(J$.G(1475241, J$.R(1475233, 'algs', algs, false, true), 'curves')), curveNames, false, false);
                                for (j = J$.W(1475273, 'j', J$.T(1475265, 0, 22, false), j, false, false); J$.C(76304, J$.B(182714, '<', J$.R(1475281, 'j', j, false, false), J$.G(1475297, J$.R(1475289, 'curveNames', curveNames, false, false), 'length'))); j = J$.W(1475313, 'j', J$.B(182730, '+', J$.U(182722, '+', J$.R(1475305, 'j', j, false, false)), 1), j, false, false)) {
                                    c = J$.W(1475345, 'c', J$.G(1475337, J$.R(1475321, 'curveNames', curveNames, false, false), J$.R(1475329, 'j', j, false, false)), c, false, false);
                                    cd = J$.W(1475385, 'cd', J$.G(1475377, J$.G(1475361, J$.R(1475353, 'algs', algs, false, true), 'curves'), J$.R(1475369, 'c', c, false, false)), cd, false, false);
                                    if (J$.C(76296, J$.B(182738, '===', J$.G(1475401, J$.R(1475393, 'cd', cd, false, false), 'pkcs8oid'), J$.R(1475409, 'oid', oid, false, false)))) {
                                        curveName = J$.W(1475425, 'curveName', J$.R(1475417, 'c', c, false, false), curveName, false, false);
                                        break;
                                    }
                                }
                            } else {
                                J$.M(1475441, J$.R(1475433, 'der', der, false, false), 'readSequence', false)();
                                var version = J$.W(1475497, 'version', J$.M(1475489, J$.R(1475449, 'der', der, false, false), 'readString', false)(J$.G(1475473, J$.G(1475465, J$.R(1475457, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(1475481, true, 23, false)), version, false, false);
                                J$.M(1475553, J$.R(1475505, 'assert', assert, false, true), 'strictEqual', false)(J$.G(1475529, J$.R(1475513, 'version', version, false, false), J$.T(1475521, 0, 22, false)), J$.T(1475537, 1, 22, false), J$.T(1475545, 'ECDSA key not version 1', 21, false));
                                var curve = J$.W(1475569, 'curve', J$.T(1475561, {}, 11, false), curve, false, false);
                                J$.M(1475585, J$.R(1475577, 'der', der, false, false), 'readSequence', false)();
                                var fieldTypeOid = J$.W(1475609, 'fieldTypeOid', J$.M(1475601, J$.R(1475593, 'der', der, false, false), 'readOID', false)(), fieldTypeOid, false, false);
                                J$.M(1475649, J$.R(1475617, 'assert', assert, false, true), 'strictEqual', false)(J$.R(1475625, 'fieldTypeOid', fieldTypeOid, false, false), J$.T(1475633, '1.2.840.10045.1.1', 21, false), J$.T(1475641, 'ECDSA key is not from a prime-field', 21, false));
                                var p = J$.W(1475737, 'p', J$.P(1475729, J$.R(1475657, 'curve', curve, false, false), 'p', J$.M(1475721, J$.R(1475665, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(1475713, J$.R(1475673, 'der', der, false, false), 'readString', false)(J$.G(1475697, J$.G(1475689, J$.R(1475681, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(1475705, true, 23, false)))), p, false, false);
                                J$.P(1475801, J$.R(1475745, 'curve', curve, false, false), 'size', J$.B(182754, '-', J$.B(182746, '*', J$.G(1475761, J$.R(1475753, 'p', p, false, false), 'length'), J$.T(1475769, 8, 22, false)), J$.M(1475793, J$.R(1475777, 'utils', utils, false, true), 'countZeros', false)(J$.R(1475785, 'p', p, false, false))));
                                J$.M(1475817, J$.R(1475809, 'der', der, false, false), 'readSequence', false)();
                                J$.P(1475897, J$.R(1475825, 'curve', curve, false, false), 'a', J$.M(1475889, J$.R(1475833, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(1475881, J$.R(1475841, 'der', der, false, false), 'readString', false)(J$.G(1475865, J$.G(1475857, J$.R(1475849, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(1475873, true, 23, false))));
                                J$.P(1475977, J$.R(1475905, 'curve', curve, false, false), 'b', J$.M(1475969, J$.R(1475913, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(1475961, J$.R(1475921, 'der', der, false, false), 'readString', false)(J$.G(1475945, J$.G(1475937, J$.R(1475929, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(1475953, true, 23, false))));
                                if (J$.C(76312, J$.B(182762, '===', J$.M(1475993, J$.R(1475985, 'der', der, false, false), 'peek', false)(), J$.G(1476017, J$.G(1476009, J$.R(1476001, 'asn1', asn1, false, true), 'Ber'), 'BitString'))))
                                    J$.P(1476081, J$.R(1476025, 'curve', curve, false, false), 's', J$.M(1476073, J$.R(1476033, 'der', der, false, false), 'readString', false)(J$.G(1476057, J$.G(1476049, J$.R(1476041, 'asn1', asn1, false, true), 'Ber'), 'BitString'), J$.T(1476065, true, 23, false)));
                                J$.P(1476145, J$.R(1476089, 'curve', curve, false, false), 'G', J$.M(1476137, J$.R(1476097, 'der', der, false, false), 'readString', false)(J$.G(1476121, J$.G(1476113, J$.R(1476105, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(1476129, true, 23, false)));
                                J$.M(1476209, J$.R(1476153, 'assert', assert, false, true), 'strictEqual', false)(J$.G(1476185, J$.G(1476169, J$.R(1476161, 'curve', curve, false, false), 'G'), J$.T(1476177, 0, 22, false)), J$.T(1476193, 4, 22, false), J$.T(1476201, 'uncompressed G is required', 21, false));
                                J$.P(1476289, J$.R(1476217, 'curve', curve, false, false), 'n', J$.M(1476281, J$.R(1476225, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(1476273, J$.R(1476233, 'der', der, false, false), 'readString', false)(J$.G(1476257, J$.G(1476249, J$.R(1476241, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(1476265, true, 23, false))));
                                J$.P(1476369, J$.R(1476297, 'curve', curve, false, false), 'h', J$.M(1476361, J$.R(1476305, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(1476353, J$.R(1476313, 'der', der, false, false), 'readString', false)(J$.G(1476337, J$.G(1476329, J$.R(1476321, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(1476345, true, 23, false))));
                                J$.M(1476441, J$.R(1476377, 'assert', assert, false, true), 'strictEqual', false)(J$.G(1476409, J$.G(1476393, J$.R(1476385, 'curve', curve, false, false), 'h'), J$.T(1476401, 0, 22, false)), J$.T(1476417, 1, 22, false), J$.B(182770, '+', J$.T(1476425, 'a cofactor=1 curve is ', 21, false), J$.T(1476433, 'required', 21, false)));
                                curveNames = J$.W(1476481, 'curveNames', J$.M(1476473, J$.I(typeof Object === 'undefined' ? Object = J$.R(1476449, 'Object', undefined, true, true) : Object = J$.R(1476449, 'Object', Object, true, true)), 'keys', false)(J$.G(1476465, J$.R(1476457, 'algs', algs, false, true), 'curves')), curveNames, false, false);
                                var ks = J$.W(1476513, 'ks', J$.M(1476505, J$.I(typeof Object === 'undefined' ? Object = J$.R(1476489, 'Object', undefined, true, true) : Object = J$.R(1476489, 'Object', Object, true, true)), 'keys', false)(J$.R(1476497, 'curve', curve, false, false)), ks, false, false);
                                for (j = J$.W(1476529, 'j', J$.T(1476521, 0, 22, false), j, false, false); J$.C(76392, J$.B(182778, '<', J$.R(1476537, 'j', j, false, false), J$.G(1476553, J$.R(1476545, 'curveNames', curveNames, false, false), 'length'))); j = J$.W(1476569, 'j', J$.B(182794, '+', J$.U(182786, '+', J$.R(1476561, 'j', j, false, false)), 1), j, false, false)) {
                                    c = J$.W(1476601, 'c', J$.G(1476593, J$.R(1476577, 'curveNames', curveNames, false, false), J$.R(1476585, 'j', j, false, false)), c, false, false);
                                    cd = J$.W(1476641, 'cd', J$.G(1476633, J$.G(1476617, J$.R(1476609, 'algs', algs, false, true), 'curves'), J$.R(1476625, 'c', c, false, false)), cd, false, false);
                                    var equal = J$.W(1476657, 'equal', J$.T(1476649, true, 23, false), equal, false, false);
                                    for (var i = J$.W(1476673, 'i', J$.T(1476665, 0, 22, false), i, false, false); J$.C(76376, J$.B(182802, '<', J$.R(1476681, 'i', i, false, false), J$.G(1476697, J$.R(1476689, 'ks', ks, false, false), 'length'))); i = J$.W(1476713, 'i', J$.B(182818, '+', J$.U(182810, '+', J$.R(1476705, 'i', i, false, false)), 1), i, false, false)) {
                                        var k = J$.W(1476745, 'k', J$.G(1476737, J$.R(1476721, 'ks', ks, false, false), J$.R(1476729, 'i', i, false, false)), k, false, false);
                                        if (J$.C(76320, J$.B(182826, '===', J$.G(1476769, J$.R(1476753, 'cd', cd, false, false), J$.R(1476761, 'k', k, false, false)), J$.T(1476777, undefined, 24, false))))
                                            continue;
                                        if (J$.C(76368, J$.C(76328, J$.B(182834, '===', J$.F(1476817, J$.R(1476785, '_typeof', _typeof, false, true), false)(J$.G(1476809, J$.R(1476793, 'cd', cd, false, false), J$.R(1476801, 'k', k, false, false))), J$.T(1476825, 'object', 21, false))) ? J$.B(182842, '!==', J$.G(1476857, J$.G(1476849, J$.R(1476833, 'cd', cd, false, false), J$.R(1476841, 'k', k, false, false)), 'equals'), J$.T(1476865, undefined, 24, false)) : J$._())) {
                                            if (J$.C(76336, J$.U(182850, '!', J$.M(1476921, J$.G(1476889, J$.R(1476873, 'cd', cd, false, false), J$.R(1476881, 'k', k, false, false)), 'equals', false)(J$.G(1476913, J$.R(1476897, 'curve', curve, false, false), J$.R(1476905, 'k', k, false, false)))))) {
                                                equal = J$.W(1476937, 'equal', J$.T(1476929, false, 23, false), equal, false, false);
                                                break;
                                            }
                                        } else if (J$.C(76360, J$.M(1476977, J$.R(1476945, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(1476969, J$.R(1476953, 'cd', cd, false, false), J$.R(1476961, 'k', k, false, false))))) {
                                            if (J$.C(76344, J$.B(182858, '!==', J$.M(1477017, J$.G(1477001, J$.R(1476985, 'cd', cd, false, false), J$.R(1476993, 'k', k, false, false)), 'toString', false)(J$.T(1477009, 'binary', 21, false)), J$.M(1477057, J$.G(1477041, J$.R(1477025, 'curve', curve, false, false), J$.R(1477033, 'k', k, false, false)), 'toString', false)(J$.T(1477049, 'binary', 21, false))))) {
                                                equal = J$.W(1477073, 'equal', J$.T(1477065, false, 23, false), equal, false, false);
                                                break;
                                            }
                                        } else {
                                            if (J$.C(76352, J$.B(182866, '!==', J$.G(1477097, J$.R(1477081, 'cd', cd, false, false), J$.R(1477089, 'k', k, false, false)), J$.G(1477121, J$.R(1477105, 'curve', curve, false, false), J$.R(1477113, 'k', k, false, false))))) {
                                                equal = J$.W(1477137, 'equal', J$.T(1477129, false, 23, false), equal, false, false);
                                                break;
                                            }
                                        }
                                    }
                                    if (J$.C(76384, J$.R(1477145, 'equal', equal, false, false))) {
                                        curveName = J$.W(1477161, 'curveName', J$.R(1477153, 'c', c, false, false), curveName, false, false);
                                        break;
                                    }
                                }
                            }
                            return J$.Rt(1477177, J$.R(1477169, 'curveName', curveName, false, false));
                        } catch (J$e) {
                            J$.Ex(1485353, J$e);
                        } finally {
                            if (J$.Fr(1485361))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8ECDSAPrivate(der) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(1478057, arguments.callee, this, arguments);
                            arguments = J$.N(1478065, 'arguments', arguments, true, false, false);
                            der = J$.N(1478073, 'der', der, true, false, false);
                            J$.N(1478081, 'curveName', curveName, false, false, false);
                            J$.N(1478089, 'version', version, false, false, false);
                            J$.N(1478097, 'd', d, false, false, false);
                            J$.N(1478105, 'Q', Q, false, false, false);
                            J$.N(1478113, 'pub', pub, false, false, false);
                            J$.N(1478121, 'key', key, false, false, false);
                            var curveName = J$.W(1477345, 'curveName', J$.F(1477337, J$.R(1477321, 'readECDSACurve', readECDSACurve, false, true), false)(J$.R(1477329, 'der', der, false, false)), curveName, false, false);
                            J$.M(1477377, J$.R(1477353, 'assert', assert, false, true), 'string', false)(J$.R(1477361, 'curveName', curveName, false, false), J$.T(1477369, 'a known elliptic curve', 21, false));
                            J$.M(1477417, J$.R(1477385, 'der', der, false, false), 'readSequence', false)(J$.G(1477409, J$.G(1477401, J$.R(1477393, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(1477433, J$.R(1477425, 'der', der, false, false), 'readSequence', false)();
                            var version = J$.W(1477473, 'version', J$.F(1477465, J$.R(1477441, 'readMPInt', readMPInt, false, true), false)(J$.R(1477449, 'der', der, false, false), J$.T(1477457, 'version', 21, false)), version, false, false);
                            J$.M(1477529, J$.R(1477481, 'assert', assert, false, true), 'equal', false)(J$.G(1477505, J$.R(1477489, 'version', version, false, false), J$.T(1477497, 0, 22, false)), J$.T(1477513, 1, 22, false), J$.T(1477521, 'unknown version of ECDSA key', 21, false));
                            var d = J$.W(1477585, 'd', J$.M(1477577, J$.R(1477537, 'der', der, false, false), 'readString', false)(J$.G(1477561, J$.G(1477553, J$.R(1477545, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(1477569, true, 23, false)), d, false, false);
                            var Q;
                            if (J$.C(76408, J$.B(182874, '==', J$.M(1477601, J$.R(1477593, 'der', der, false, false), 'peek', false)(), J$.T(1477609, 160, 22, false)))) {
                                J$.M(1477633, J$.R(1477617, 'der', der, false, false), 'readSequence', false)(J$.T(1477625, 160, 22, false));
                                J$.A(1477665, J$.R(1477641, 'der', der, false, false), '_offset', '+')(J$.G(1477657, J$.R(1477649, 'der', der, false, false), 'length'));
                            }
                            if (J$.C(76416, J$.B(182882, '==', J$.M(1477681, J$.R(1477673, 'der', der, false, false), 'peek', false)(), J$.T(1477689, 161, 22, false)))) {
                                J$.M(1477713, J$.R(1477697, 'der', der, false, false), 'readSequence', false)(J$.T(1477705, 161, 22, false));
                                Q = J$.W(1477769, 'Q', J$.M(1477761, J$.R(1477721, 'der', der, false, false), 'readString', false)(J$.G(1477745, J$.G(1477737, J$.R(1477729, 'asn1', asn1, false, true), 'Ber'), 'BitString'), J$.T(1477753, true, 23, false)), Q, false, false);
                                Q = J$.W(1477801, 'Q', J$.M(1477793, J$.R(1477777, 'utils', utils, false, true), 'ecNormalize', false)(J$.R(1477785, 'Q', Q, false, false)), Q, false, false);
                            }
                            if (J$.C(76424, J$.B(182890, '===', J$.R(1477809, 'Q', Q, false, false), J$.T(1477817, undefined, 24, false)))) {
                                var pub = J$.W(1477857, 'pub', J$.M(1477849, J$.R(1477825, 'utils', utils, false, true), 'publicFromPrivateECDSA', false)(J$.R(1477833, 'curveName', curveName, false, false), J$.R(1477841, 'd', d, false, false)), pub, false, false);
                                Q = J$.W(1477897, 'Q', J$.G(1477889, J$.G(1477881, J$.G(1477873, J$.R(1477865, 'pub', pub, false, false), 'part'), 'Q'), 'data'), Q, false, false);
                            }
                            var key = J$.W(1478017, 'key', J$.T(1478009, {
                                type: J$.T(1477905, 'ecdsa', 21, false),
                                parts: J$.T(1478001, [
                                    J$.T(1477945, {
                                        name: J$.T(1477913, 'curve', 21, false),
                                        data: J$.M(1477937, J$.R(1477921, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1477929, 'curveName', curveName, false, false))
                                    }, 11, false),
                                    J$.T(1477969, {
                                        name: J$.T(1477953, 'Q', 21, false),
                                        data: J$.R(1477961, 'Q', Q, false, false)
                                    }, 11, false),
                                    J$.T(1477993, {
                                        name: J$.T(1477977, 'd', 21, false),
                                        data: J$.R(1477985, 'd', d, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1478049, J$.F(1478041, J$.R(1478025, 'PrivateKey', PrivateKey, false, true), true)(J$.R(1478033, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485369, J$e);
                        } finally {
                            if (J$.Fr(1485377))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8ECDSAPublic(der) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(1478409, arguments.callee, this, arguments);
                            arguments = J$.N(1478417, 'arguments', arguments, true, false, false);
                            der = J$.N(1478425, 'der', der, true, false, false);
                            J$.N(1478433, 'curveName', curveName, false, false, false);
                            J$.N(1478441, 'Q', Q, false, false, false);
                            J$.N(1478449, 'key', key, false, false, false);
                            var curveName = J$.W(1478153, 'curveName', J$.F(1478145, J$.R(1478129, 'readECDSACurve', readECDSACurve, false, true), false)(J$.R(1478137, 'der', der, false, false)), curveName, false, false);
                            J$.M(1478185, J$.R(1478161, 'assert', assert, false, true), 'string', false)(J$.R(1478169, 'curveName', curveName, false, false), J$.T(1478177, 'a known elliptic curve', 21, false));
                            var Q = J$.W(1478241, 'Q', J$.M(1478233, J$.R(1478193, 'der', der, false, false), 'readString', false)(J$.G(1478217, J$.G(1478209, J$.R(1478201, 'asn1', asn1, false, true), 'Ber'), 'BitString'), J$.T(1478225, true, 23, false)), Q, false, false);
                            Q = J$.W(1478273, 'Q', J$.M(1478265, J$.R(1478249, 'utils', utils, false, true), 'ecNormalize', false)(J$.R(1478257, 'Q', Q, false, false)), Q, false, false);
                            var key = J$.W(1478369, 'key', J$.T(1478361, {
                                type: J$.T(1478281, 'ecdsa', 21, false),
                                parts: J$.T(1478353, [
                                    J$.T(1478321, {
                                        name: J$.T(1478289, 'curve', 21, false),
                                        data: J$.M(1478313, J$.R(1478297, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1478305, 'curveName', curveName, false, false))
                                    }, 11, false),
                                    J$.T(1478345, {
                                        name: J$.T(1478329, 'Q', 21, false),
                                        data: J$.R(1478337, 'Q', Q, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1478401, J$.F(1478393, J$.R(1478377, 'Key', Key, false, true), true)(J$.R(1478385, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485385, J$e);
                        } finally {
                            if (J$.Fr(1485393))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8EdDSAPublic(der) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(1478641, arguments.callee, this, arguments);
                            arguments = J$.N(1478649, 'arguments', arguments, true, false, false);
                            der = J$.N(1478657, 'der', der, true, false, false);
                            J$.N(1478665, 'A', A, false, false, false);
                            J$.N(1478673, 'key', key, false, false, false);
                            if (J$.C(76432, J$.B(182898, '===', J$.M(1478465, J$.R(1478457, 'der', der, false, false), 'peek', false)(), J$.T(1478473, 0, 22, false))))
                                J$.M(1478489, J$.R(1478481, 'der', der, false, false), 'readByte', false)();
                            var A = J$.W(1478521, 'A', J$.M(1478513, J$.R(1478497, 'utils', utils, false, true), 'readBitString', false)(J$.R(1478505, 'der', der, false, false)), A, false, false);
                            var key = J$.W(1478601, 'key', J$.T(1478593, {
                                type: J$.T(1478529, 'ed25519', 21, false),
                                parts: J$.T(1478585, [J$.T(1478577, {
                                        name: J$.T(1478537, 'A', 21, false),
                                        data: J$.M(1478569, J$.R(1478545, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(1478553, 'A', A, false, false), J$.T(1478561, 32, 22, false))
                                    }, 11, false)], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1478633, J$.F(1478625, J$.R(1478609, 'Key', Key, false, true), true)(J$.R(1478617, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485401, J$e);
                        } finally {
                            if (J$.Fr(1485409))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8X25519Public(der) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(1478825, arguments.callee, this, arguments);
                            arguments = J$.N(1478833, 'arguments', arguments, true, false, false);
                            der = J$.N(1478841, 'der', der, true, false, false);
                            J$.N(1478849, 'A', A, false, false, false);
                            J$.N(1478857, 'key', key, false, false, false);
                            var A = J$.W(1478705, 'A', J$.M(1478697, J$.R(1478681, 'utils', utils, false, true), 'readBitString', false)(J$.R(1478689, 'der', der, false, false)), A, false, false);
                            var key = J$.W(1478785, 'key', J$.T(1478777, {
                                type: J$.T(1478713, 'curve25519', 21, false),
                                parts: J$.T(1478769, [J$.T(1478761, {
                                        name: J$.T(1478721, 'A', 21, false),
                                        data: J$.M(1478753, J$.R(1478729, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(1478737, 'A', A, false, false), J$.T(1478745, 32, 22, false))
                                    }, 11, false)], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1478817, J$.F(1478809, J$.R(1478793, 'Key', Key, false, true), true)(J$.R(1478801, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485417, J$e);
                        } finally {
                            if (J$.Fr(1485425))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8EdDSAPrivate(der) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(1479345, arguments.callee, this, arguments);
                            arguments = J$.N(1479353, 'arguments', arguments, true, false, false);
                            der = J$.N(1479361, 'der', der, true, false, false);
                            J$.N(1479369, 'k', k, false, false, false);
                            J$.N(1479377, 'A', A, false, false, false);
                            J$.N(1479385, 'key', key, false, false, false);
                            if (J$.C(76440, J$.B(182906, '===', J$.M(1478873, J$.R(1478865, 'der', der, false, false), 'peek', false)(), J$.T(1478881, 0, 22, false))))
                                J$.M(1478897, J$.R(1478889, 'der', der, false, false), 'readByte', false)();
                            J$.M(1478937, J$.R(1478905, 'der', der, false, false), 'readSequence', false)(J$.G(1478929, J$.G(1478921, J$.R(1478913, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            var k = J$.W(1478993, 'k', J$.M(1478985, J$.R(1478945, 'der', der, false, false), 'readString', false)(J$.G(1478969, J$.G(1478961, J$.R(1478953, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(1478977, true, 23, false)), k, false, false);
                            k = J$.W(1479033, 'k', J$.M(1479025, J$.R(1479001, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(1479009, 'k', k, false, false), J$.T(1479017, 32, 22, false)), k, false, false);
                            var A;
                            if (J$.C(76448, J$.B(182914, '===', J$.M(1479049, J$.R(1479041, 'der', der, false, false), 'peek', false)(), J$.G(1479073, J$.G(1479065, J$.R(1479057, 'asn1', asn1, false, true), 'Ber'), 'BitString')))) {
                                A = J$.W(1479105, 'A', J$.M(1479097, J$.R(1479081, 'utils', utils, false, true), 'readBitString', false)(J$.R(1479089, 'der', der, false, false)), A, false, false);
                                A = J$.W(1479145, 'A', J$.M(1479137, J$.R(1479113, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(1479121, 'A', A, false, false), J$.T(1479129, 32, 22, false)), A, false, false);
                            } else {
                                A = J$.W(1479177, 'A', J$.M(1479169, J$.R(1479153, 'utils', utils, false, true), 'calculateED25519Public', false)(J$.R(1479161, 'k', k, false, false)), A, false, false);
                            }
                            var key = J$.W(1479305, 'key', J$.T(1479297, {
                                type: J$.T(1479185, 'ed25519', 21, false),
                                parts: J$.T(1479289, [
                                    J$.T(1479233, {
                                        name: J$.T(1479193, 'A', 21, false),
                                        data: J$.M(1479225, J$.R(1479201, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(1479209, 'A', A, false, false), J$.T(1479217, 32, 22, false))
                                    }, 11, false),
                                    J$.T(1479281, {
                                        name: J$.T(1479241, 'k', 21, false),
                                        data: J$.M(1479273, J$.R(1479249, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(1479257, 'k', k, false, false), J$.T(1479265, 32, 22, false))
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1479337, J$.F(1479329, J$.R(1479313, 'PrivateKey', PrivateKey, false, true), true)(J$.R(1479321, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485433, J$e);
                        } finally {
                            if (J$.Fr(1485441))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8X25519Private(der) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(1479761, arguments.callee, this, arguments);
                            arguments = J$.N(1479769, 'arguments', arguments, true, false, false);
                            der = J$.N(1479777, 'der', der, true, false, false);
                            J$.N(1479785, 'k', k, false, false, false);
                            J$.N(1479793, 'A', A, false, false, false);
                            J$.N(1479801, 'key', key, false, false, false);
                            if (J$.C(76456, J$.B(182922, '===', J$.M(1479401, J$.R(1479393, 'der', der, false, false), 'peek', false)(), J$.T(1479409, 0, 22, false))))
                                J$.M(1479425, J$.R(1479417, 'der', der, false, false), 'readByte', false)();
                            J$.M(1479465, J$.R(1479433, 'der', der, false, false), 'readSequence', false)(J$.G(1479457, J$.G(1479449, J$.R(1479441, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            var k = J$.W(1479521, 'k', J$.M(1479513, J$.R(1479473, 'der', der, false, false), 'readString', false)(J$.G(1479497, J$.G(1479489, J$.R(1479481, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(1479505, true, 23, false)), k, false, false);
                            k = J$.W(1479561, 'k', J$.M(1479553, J$.R(1479529, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(1479537, 'k', k, false, false), J$.T(1479545, 32, 22, false)), k, false, false);
                            var A = J$.W(1479593, 'A', J$.M(1479585, J$.R(1479569, 'utils', utils, false, true), 'calculateX25519Public', false)(J$.R(1479577, 'k', k, false, false)), A, false, false);
                            var key = J$.W(1479721, 'key', J$.T(1479713, {
                                type: J$.T(1479601, 'curve25519', 21, false),
                                parts: J$.T(1479705, [
                                    J$.T(1479649, {
                                        name: J$.T(1479609, 'A', 21, false),
                                        data: J$.M(1479641, J$.R(1479617, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(1479625, 'A', A, false, false), J$.T(1479633, 32, 22, false))
                                    }, 11, false),
                                    J$.T(1479697, {
                                        name: J$.T(1479657, 'k', 21, false),
                                        data: J$.M(1479689, J$.R(1479665, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(1479673, 'k', k, false, false), J$.T(1479681, 32, 22, false))
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(1479753, J$.F(1479745, J$.R(1479729, 'PrivateKey', PrivateKey, false, true), true)(J$.R(1479737, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(1485449, J$e);
                        } finally {
                            if (J$.Fr(1485457))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pkcs8ToBuffer(key) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(1479889, arguments.callee, this, arguments);
                            arguments = J$.N(1479897, 'arguments', arguments, true, false, false);
                            key = J$.N(1479905, 'key', key, true, false, false);
                            J$.N(1479913, 'der', der, false, false, false);
                            var der = J$.W(1479825, 'der', J$.M(1479817, J$.R(1479809, 'asn1', asn1, false, true), 'BerWriter', true)(), der, false, false);
                            J$.F(1479857, J$.R(1479833, 'writePkcs8', writePkcs8, false, true), false)(J$.R(1479841, 'der', der, false, false), J$.R(1479849, 'key', key, false, false));
                            return J$.Rt(1479881, J$.G(1479873, J$.R(1479865, 'der', der, false, false), 'buffer'));
                        } catch (J$e) {
                            J$.Ex(1485465, J$e);
                        } finally {
                            if (J$.Fr(1485473))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8(der, key) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(1480617, arguments.callee, this, arguments);
                            arguments = J$.N(1480625, 'arguments', arguments, true, false, false);
                            der = J$.N(1480633, 'der', der, true, false, false);
                            key = J$.N(1480641, 'key', key, true, false, false);
                            J$.N(1480649, 'sillyInt', sillyInt, false, false, false);
                            J$.M(1479929, J$.R(1479921, 'der', der, false, false), 'startSequence', false)();
                            if (J$.C(76464, J$.M(1479953, J$.R(1479937, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1479945, 'key', key, false, false)))) {
                                var sillyInt = J$.W(1479993, 'sillyInt', J$.M(1479985, J$.R(1479961, 'Buffer', Buffer, false, true), 'from', false)(J$.T(1479977, [J$.T(1479969, 0, 22, false)], 10, false)), sillyInt, false, false);
                                J$.M(1480041, J$.R(1480001, 'der', der, false, false), 'writeBuffer', false)(J$.R(1480009, 'sillyInt', sillyInt, false, false), J$.G(1480033, J$.G(1480025, J$.R(1480017, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            }
                            J$.M(1480057, J$.R(1480049, 'der', der, false, false), 'startSequence', false)();
                            switch (J$.C1(76504, J$.G(1480073, J$.R(1480065, 'key', key, false, false), 'type'))) {
                            case J$.C2(76512, J$.T(1480193, 'rsa', 21, false)):
                                J$.M(1480097, J$.R(1480081, 'der', der, false, false), 'writeOID', false)(J$.T(1480089, '1.2.840.113549.1.1.1', 21, false));
                                if (J$.C(76472, J$.M(1480121, J$.R(1480105, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1480113, 'key', key, false, false))))
                                    J$.F(1480153, J$.R(1480129, 'writePkcs8RSAPrivate', writePkcs8RSAPrivate, false, true), false)(J$.R(1480137, 'key', key, false, false), J$.R(1480145, 'der', der, false, false));
                                else
                                    J$.F(1480185, J$.R(1480161, 'writePkcs8RSAPublic', writePkcs8RSAPublic, false, true), false)(J$.R(1480169, 'key', key, false, false), J$.R(1480177, 'der', der, false, false));
                                break;
                            case J$.C2(76520, J$.T(1480313, 'dsa', 21, false)):
                                J$.M(1480217, J$.R(1480201, 'der', der, false, false), 'writeOID', false)(J$.T(1480209, '1.2.840.10040.4.1', 21, false));
                                if (J$.C(76480, J$.M(1480241, J$.R(1480225, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1480233, 'key', key, false, false))))
                                    J$.F(1480273, J$.R(1480249, 'writePkcs8DSAPrivate', writePkcs8DSAPrivate, false, true), false)(J$.R(1480257, 'key', key, false, false), J$.R(1480265, 'der', der, false, false));
                                else
                                    J$.F(1480305, J$.R(1480281, 'writePkcs8DSAPublic', writePkcs8DSAPublic, false, true), false)(J$.R(1480289, 'key', key, false, false), J$.R(1480297, 'der', der, false, false));
                                break;
                            case J$.C2(76528, J$.T(1480433, 'ecdsa', 21, false)):
                                J$.M(1480337, J$.R(1480321, 'der', der, false, false), 'writeOID', false)(J$.T(1480329, '1.2.840.10045.2.1', 21, false));
                                if (J$.C(76488, J$.M(1480361, J$.R(1480345, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1480353, 'key', key, false, false))))
                                    J$.F(1480393, J$.R(1480369, 'writePkcs8ECDSAPrivate', writePkcs8ECDSAPrivate, false, true), false)(J$.R(1480377, 'key', key, false, false), J$.R(1480385, 'der', der, false, false));
                                else
                                    J$.F(1480425, J$.R(1480401, 'writePkcs8ECDSAPublic', writePkcs8ECDSAPublic, false, true), false)(J$.R(1480409, 'key', key, false, false), J$.R(1480417, 'der', der, false, false));
                                break;
                            case J$.C2(76536, J$.T(1480553, 'ed25519', 21, false)):
                                J$.M(1480457, J$.R(1480441, 'der', der, false, false), 'writeOID', false)(J$.T(1480449, '1.3.101.112', 21, false));
                                if (J$.C(76496, J$.M(1480481, J$.R(1480465, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1480473, 'key', key, false, false))))
                                    throw J$.F(1480513, J$.I(typeof Error === 'undefined' ? Error = J$.R(1480489, 'Error', undefined, true, true) : Error = J$.R(1480489, 'Error', Error, true, true)), true)(J$.B(182930, '+', J$.T(1480497, 'Ed25519 private keys in pkcs8 ', 21, false), J$.T(1480505, 'format are not supported', 21, false)));
                                J$.F(1480545, J$.R(1480521, 'writePkcs8EdDSAPublic', writePkcs8EdDSAPublic, false, true), false)(J$.R(1480529, 'key', key, false, false), J$.R(1480537, 'der', der, false, false));
                                break;
                            default:
                                throw J$.F(1480593, J$.I(typeof Error === 'undefined' ? Error = J$.R(1480561, 'Error', undefined, true, true) : Error = J$.R(1480561, 'Error', Error, true, true)), true)(J$.B(182938, '+', J$.T(1480569, 'Unsupported key type: ', 21, false), J$.G(1480585, J$.R(1480577, 'key', key, false, false), 'type')));
                            }
                            J$.M(1480609, J$.R(1480601, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(1485481, J$e);
                        } finally {
                            if (J$.Fr(1485489))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8RSAPrivate(key, der) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(1481513, arguments.callee, this, arguments);
                            arguments = J$.N(1481521, 'arguments', arguments, true, false, false);
                            key = J$.N(1481529, 'key', key, true, false, false);
                            der = J$.N(1481537, 'der', der, true, false, false);
                            J$.N(1481545, 'version', version, false, false, false);
                            J$.M(1480665, J$.R(1480657, 'der', der, false, false), 'writeNull', false)();
                            J$.M(1480681, J$.R(1480673, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1480721, J$.R(1480689, 'der', der, false, false), 'startSequence', false)(J$.G(1480713, J$.G(1480705, J$.R(1480697, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(1480737, J$.R(1480729, 'der', der, false, false), 'startSequence', false)();
                            var version = J$.W(1480777, 'version', J$.M(1480769, J$.R(1480745, 'Buffer', Buffer, false, true), 'from', false)(J$.T(1480761, [J$.T(1480753, 0, 22, false)], 10, false)), version, false, false);
                            J$.M(1480825, J$.R(1480785, 'der', der, false, false), 'writeBuffer', false)(J$.R(1480793, 'version', version, false, false), J$.G(1480817, J$.G(1480809, J$.R(1480801, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1480897, J$.R(1480833, 'der', der, false, false), 'writeBuffer', false)(J$.G(1480865, J$.G(1480857, J$.G(1480849, J$.R(1480841, 'key', key, false, false), 'part'), 'n'), 'data'), J$.G(1480889, J$.G(1480881, J$.R(1480873, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1480969, J$.R(1480905, 'der', der, false, false), 'writeBuffer', false)(J$.G(1480937, J$.G(1480929, J$.G(1480921, J$.R(1480913, 'key', key, false, false), 'part'), 'e'), 'data'), J$.G(1480961, J$.G(1480953, J$.R(1480945, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1481041, J$.R(1480977, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481009, J$.G(1481001, J$.G(1480993, J$.R(1480985, 'key', key, false, false), 'part'), 'd'), 'data'), J$.G(1481033, J$.G(1481025, J$.R(1481017, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1481113, J$.R(1481049, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481081, J$.G(1481073, J$.G(1481065, J$.R(1481057, 'key', key, false, false), 'part'), 'p'), 'data'), J$.G(1481105, J$.G(1481097, J$.R(1481089, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1481185, J$.R(1481121, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481153, J$.G(1481145, J$.G(1481137, J$.R(1481129, 'key', key, false, false), 'part'), 'q'), 'data'), J$.G(1481177, J$.G(1481169, J$.R(1481161, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            if (J$.C(76552, J$.C(76544, J$.U(182946, '!', J$.G(1481209, J$.G(1481201, J$.R(1481193, 'key', key, false, false), 'part'), 'dmodp'))) ? J$._() : J$.U(182954, '!', J$.G(1481233, J$.G(1481225, J$.R(1481217, 'key', key, false, false), 'part'), 'dmodq'))))
                                J$.M(1481257, J$.R(1481241, 'utils', utils, false, true), 'addRSAMissing', false)(J$.R(1481249, 'key', key, false, false));
                            J$.M(1481329, J$.R(1481265, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481297, J$.G(1481289, J$.G(1481281, J$.R(1481273, 'key', key, false, false), 'part'), 'dmodp'), 'data'), J$.G(1481321, J$.G(1481313, J$.R(1481305, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1481401, J$.R(1481337, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481369, J$.G(1481361, J$.G(1481353, J$.R(1481345, 'key', key, false, false), 'part'), 'dmodq'), 'data'), J$.G(1481393, J$.G(1481385, J$.R(1481377, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1481473, J$.R(1481409, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481441, J$.G(1481433, J$.G(1481425, J$.R(1481417, 'key', key, false, false), 'part'), 'iqmp'), 'data'), J$.G(1481465, J$.G(1481457, J$.R(1481449, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1481489, J$.R(1481481, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1481505, J$.R(1481497, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(1485497, J$e);
                        } finally {
                            if (J$.Fr(1485505))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8RSAPublic(key, der) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(1481841, arguments.callee, this, arguments);
                            arguments = J$.N(1481849, 'arguments', arguments, true, false, false);
                            key = J$.N(1481857, 'key', key, true, false, false);
                            der = J$.N(1481865, 'der', der, true, false, false);
                            J$.M(1481561, J$.R(1481553, 'der', der, false, false), 'writeNull', false)();
                            J$.M(1481577, J$.R(1481569, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1481617, J$.R(1481585, 'der', der, false, false), 'startSequence', false)(J$.G(1481609, J$.G(1481601, J$.R(1481593, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(1481641, J$.R(1481625, 'der', der, false, false), 'writeByte', false)(J$.T(1481633, 0, 22, false));
                            J$.M(1481657, J$.R(1481649, 'der', der, false, false), 'startSequence', false)();
                            J$.M(1481729, J$.R(1481665, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481697, J$.G(1481689, J$.G(1481681, J$.R(1481673, 'key', key, false, false), 'part'), 'n'), 'data'), J$.G(1481721, J$.G(1481713, J$.R(1481705, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1481801, J$.R(1481737, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481769, J$.G(1481761, J$.G(1481753, J$.R(1481745, 'key', key, false, false), 'part'), 'e'), 'data'), J$.G(1481793, J$.G(1481785, J$.R(1481777, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1481817, J$.R(1481809, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1481833, J$.R(1481825, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(1485513, J$e);
                        } finally {
                            if (J$.Fr(1485521))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8DSAPrivate(key, der) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(1482265, arguments.callee, this, arguments);
                            arguments = J$.N(1482273, 'arguments', arguments, true, false, false);
                            key = J$.N(1482281, 'key', key, true, false, false);
                            der = J$.N(1482289, 'der', der, true, false, false);
                            J$.M(1481881, J$.R(1481873, 'der', der, false, false), 'startSequence', false)();
                            J$.M(1481953, J$.R(1481889, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481921, J$.G(1481913, J$.G(1481905, J$.R(1481897, 'key', key, false, false), 'part'), 'p'), 'data'), J$.G(1481945, J$.G(1481937, J$.R(1481929, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1482025, J$.R(1481961, 'der', der, false, false), 'writeBuffer', false)(J$.G(1481993, J$.G(1481985, J$.G(1481977, J$.R(1481969, 'key', key, false, false), 'part'), 'q'), 'data'), J$.G(1482017, J$.G(1482009, J$.R(1482001, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1482097, J$.R(1482033, 'der', der, false, false), 'writeBuffer', false)(J$.G(1482065, J$.G(1482057, J$.G(1482049, J$.R(1482041, 'key', key, false, false), 'part'), 'g'), 'data'), J$.G(1482089, J$.G(1482081, J$.R(1482073, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1482113, J$.R(1482105, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1482129, J$.R(1482121, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1482169, J$.R(1482137, 'der', der, false, false), 'startSequence', false)(J$.G(1482161, J$.G(1482153, J$.R(1482145, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(1482241, J$.R(1482177, 'der', der, false, false), 'writeBuffer', false)(J$.G(1482209, J$.G(1482201, J$.G(1482193, J$.R(1482185, 'key', key, false, false), 'part'), 'x'), 'data'), J$.G(1482233, J$.G(1482225, J$.R(1482217, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1482257, J$.R(1482249, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(1485529, J$e);
                        } finally {
                            if (J$.Fr(1485537))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8DSAPublic(key, der) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(1482713, arguments.callee, this, arguments);
                            arguments = J$.N(1482721, 'arguments', arguments, true, false, false);
                            key = J$.N(1482729, 'key', key, true, false, false);
                            der = J$.N(1482737, 'der', der, true, false, false);
                            J$.M(1482305, J$.R(1482297, 'der', der, false, false), 'startSequence', false)();
                            J$.M(1482377, J$.R(1482313, 'der', der, false, false), 'writeBuffer', false)(J$.G(1482345, J$.G(1482337, J$.G(1482329, J$.R(1482321, 'key', key, false, false), 'part'), 'p'), 'data'), J$.G(1482369, J$.G(1482361, J$.R(1482353, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1482449, J$.R(1482385, 'der', der, false, false), 'writeBuffer', false)(J$.G(1482417, J$.G(1482409, J$.G(1482401, J$.R(1482393, 'key', key, false, false), 'part'), 'q'), 'data'), J$.G(1482441, J$.G(1482433, J$.R(1482425, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1482521, J$.R(1482457, 'der', der, false, false), 'writeBuffer', false)(J$.G(1482489, J$.G(1482481, J$.G(1482473, J$.R(1482465, 'key', key, false, false), 'part'), 'g'), 'data'), J$.G(1482513, J$.G(1482505, J$.R(1482497, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1482537, J$.R(1482529, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1482553, J$.R(1482545, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1482593, J$.R(1482561, 'der', der, false, false), 'startSequence', false)(J$.G(1482585, J$.G(1482577, J$.R(1482569, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(1482617, J$.R(1482601, 'der', der, false, false), 'writeByte', false)(J$.T(1482609, 0, 22, false));
                            J$.M(1482689, J$.R(1482625, 'der', der, false, false), 'writeBuffer', false)(J$.G(1482657, J$.G(1482649, J$.G(1482641, J$.R(1482633, 'key', key, false, false), 'part'), 'y'), 'data'), J$.G(1482681, J$.G(1482673, J$.R(1482665, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1482705, J$.R(1482697, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(1485545, J$e);
                        } finally {
                            if (J$.Fr(1485553))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writeECDSACurve(key, der) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(1483585, arguments.callee, this, arguments);
                            arguments = J$.N(1483593, 'arguments', arguments, true, false, false);
                            key = J$.N(1483601, 'key', key, true, false, false);
                            der = J$.N(1483609, 'der', der, true, false, false);
                            J$.N(1483617, 'curve', curve, false, false, false);
                            J$.N(1483625, 'version', version, false, false, false);
                            J$.N(1483633, 'a', a, false, false, false);
                            J$.N(1483641, 'h', h, false, false, false);
                            var curve = J$.W(1482785, 'curve', J$.G(1482777, J$.G(1482753, J$.R(1482745, 'algs', algs, false, true), 'curves'), J$.G(1482769, J$.R(1482761, 'key', key, false, false), 'curve')), curve, false, false);
                            if (J$.C(76576, J$.G(1482801, J$.R(1482793, 'curve', curve, false, false), 'pkcs8oid'))) {
                                J$.M(1482833, J$.R(1482809, 'der', der, false, false), 'writeOID', false)(J$.G(1482825, J$.R(1482817, 'curve', curve, false, false), 'pkcs8oid'));
                            } else {
                                J$.M(1482849, J$.R(1482841, 'der', der, false, false), 'startSequence', false)();
                                var version = J$.W(1482889, 'version', J$.M(1482881, J$.R(1482857, 'Buffer', Buffer, false, true), 'from', false)(J$.T(1482873, [J$.T(1482865, 1, 22, false)], 10, false)), version, false, false);
                                J$.M(1482937, J$.R(1482897, 'der', der, false, false), 'writeBuffer', false)(J$.R(1482905, 'version', version, false, false), J$.G(1482929, J$.G(1482921, J$.R(1482913, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                J$.M(1482953, J$.R(1482945, 'der', der, false, false), 'startSequence', false)();
                                J$.M(1482977, J$.R(1482961, 'der', der, false, false), 'writeOID', false)(J$.T(1482969, '1.2.840.10045.1.1', 21, false));
                                J$.M(1483033, J$.R(1482985, 'der', der, false, false), 'writeBuffer', false)(J$.G(1483001, J$.R(1482993, 'curve', curve, false, false), 'p'), J$.G(1483025, J$.G(1483017, J$.R(1483009, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                J$.M(1483049, J$.R(1483041, 'der', der, false, false), 'endSequence', false)();
                                J$.M(1483065, J$.R(1483057, 'der', der, false, false), 'startSequence', false)();
                                var a = J$.W(1483089, 'a', J$.G(1483081, J$.R(1483073, 'curve', curve, false, false), 'p'), a, false, false);
                                if (J$.C(76560, J$.B(182962, '===', J$.G(1483113, J$.R(1483097, 'a', a, false, false), J$.T(1483105, 0, 22, false)), J$.T(1483121, 0, 22, false))))
                                    a = J$.W(1483153, 'a', J$.M(1483145, J$.R(1483129, 'a', a, false, false), 'slice', false)(J$.T(1483137, 1, 22, false)), a, false, false);
                                J$.M(1483201, J$.R(1483161, 'der', der, false, false), 'writeBuffer', false)(J$.R(1483169, 'a', a, false, false), J$.G(1483193, J$.G(1483185, J$.R(1483177, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                                J$.M(1483257, J$.R(1483209, 'der', der, false, false), 'writeBuffer', false)(J$.G(1483225, J$.R(1483217, 'curve', curve, false, false), 'b'), J$.G(1483249, J$.G(1483241, J$.R(1483233, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                                J$.M(1483313, J$.R(1483265, 'der', der, false, false), 'writeBuffer', false)(J$.G(1483281, J$.R(1483273, 'curve', curve, false, false), 's'), J$.G(1483305, J$.G(1483297, J$.R(1483289, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                                J$.M(1483329, J$.R(1483321, 'der', der, false, false), 'endSequence', false)();
                                J$.M(1483385, J$.R(1483337, 'der', der, false, false), 'writeBuffer', false)(J$.G(1483353, J$.R(1483345, 'curve', curve, false, false), 'G'), J$.G(1483377, J$.G(1483369, J$.R(1483361, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                                J$.M(1483441, J$.R(1483393, 'der', der, false, false), 'writeBuffer', false)(J$.G(1483409, J$.R(1483401, 'curve', curve, false, false), 'n'), J$.G(1483433, J$.G(1483425, J$.R(1483417, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                var h = J$.W(1483465, 'h', J$.G(1483457, J$.R(1483449, 'curve', curve, false, false), 'h'), h, false, false);
                                if (J$.C(76568, J$.U(182970, '!', J$.R(1483473, 'h', h, false, false)))) {
                                    h = J$.W(1483513, 'h', J$.M(1483505, J$.R(1483481, 'Buffer', Buffer, false, true), 'from', false)(J$.T(1483497, [J$.T(1483489, 1, 22, false)], 10, false)), h, false, false);
                                }
                                J$.M(1483561, J$.R(1483521, 'der', der, false, false), 'writeBuffer', false)(J$.R(1483529, 'h', h, false, false), J$.G(1483553, J$.G(1483545, J$.R(1483537, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                J$.M(1483577, J$.R(1483569, 'der', der, false, false), 'endSequence', false)();
                            }
                        } catch (J$e) {
                            J$.Ex(1485561, J$e);
                        } finally {
                            if (J$.Fr(1485569))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8ECDSAPublic(key, der) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(1483809, arguments.callee, this, arguments);
                            arguments = J$.N(1483817, 'arguments', arguments, true, false, false);
                            key = J$.N(1483825, 'key', key, true, false, false);
                            der = J$.N(1483833, 'der', der, true, false, false);
                            J$.N(1483841, 'Q', Q, false, false, false);
                            J$.F(1483673, J$.R(1483649, 'writeECDSACurve', writeECDSACurve, false, true), false)(J$.R(1483657, 'key', key, false, false), J$.R(1483665, 'der', der, false, false));
                            J$.M(1483689, J$.R(1483681, 'der', der, false, false), 'endSequence', false)();
                            var Q = J$.W(1483753, 'Q', J$.M(1483745, J$.R(1483697, 'utils', utils, false, true), 'ecNormalize', false)(J$.G(1483729, J$.G(1483721, J$.G(1483713, J$.R(1483705, 'key', key, false, false), 'part'), 'Q'), 'data'), J$.T(1483737, true, 23, false)), Q, false, false);
                            J$.M(1483801, J$.R(1483761, 'der', der, false, false), 'writeBuffer', false)(J$.R(1483769, 'Q', Q, false, false), J$.G(1483793, J$.G(1483785, J$.R(1483777, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                        } catch (J$e) {
                            J$.Ex(1485577, J$e);
                        } finally {
                            if (J$.Fr(1485585))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8ECDSAPrivate(key, der) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(1484297, arguments.callee, this, arguments);
                            arguments = J$.N(1484305, 'arguments', arguments, true, false, false);
                            key = J$.N(1484313, 'key', key, true, false, false);
                            der = J$.N(1484321, 'der', der, true, false, false);
                            J$.N(1484329, 'version', version, false, false, false);
                            J$.N(1484337, 'Q', Q, false, false, false);
                            J$.F(1483873, J$.R(1483849, 'writeECDSACurve', writeECDSACurve, false, true), false)(J$.R(1483857, 'key', key, false, false), J$.R(1483865, 'der', der, false, false));
                            J$.M(1483889, J$.R(1483881, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1483929, J$.R(1483897, 'der', der, false, false), 'startSequence', false)(J$.G(1483921, J$.G(1483913, J$.R(1483905, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(1483945, J$.R(1483937, 'der', der, false, false), 'startSequence', false)();
                            var version = J$.W(1483985, 'version', J$.M(1483977, J$.R(1483953, 'Buffer', Buffer, false, true), 'from', false)(J$.T(1483969, [J$.T(1483961, 1, 22, false)], 10, false)), version, false, false);
                            J$.M(1484033, J$.R(1483993, 'der', der, false, false), 'writeBuffer', false)(J$.R(1484001, 'version', version, false, false), J$.G(1484025, J$.G(1484017, J$.R(1484009, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(1484105, J$.R(1484041, 'der', der, false, false), 'writeBuffer', false)(J$.G(1484073, J$.G(1484065, J$.G(1484057, J$.R(1484049, 'key', key, false, false), 'part'), 'd'), 'data'), J$.G(1484097, J$.G(1484089, J$.R(1484081, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(1484129, J$.R(1484113, 'der', der, false, false), 'startSequence', false)(J$.T(1484121, 161, 22, false));
                            var Q = J$.W(1484193, 'Q', J$.M(1484185, J$.R(1484137, 'utils', utils, false, true), 'ecNormalize', false)(J$.G(1484169, J$.G(1484161, J$.G(1484153, J$.R(1484145, 'key', key, false, false), 'part'), 'Q'), 'data'), J$.T(1484177, true, 23, false)), Q, false, false);
                            J$.M(1484241, J$.R(1484201, 'der', der, false, false), 'writeBuffer', false)(J$.R(1484209, 'Q', Q, false, false), J$.G(1484233, J$.G(1484225, J$.R(1484217, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(1484257, J$.R(1484249, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1484273, J$.R(1484265, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1484289, J$.R(1484281, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(1485593, J$e);
                        } finally {
                            if (J$.Fr(1485601))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8EdDSAPublic(key, der) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(1484417, arguments.callee, this, arguments);
                            arguments = J$.N(1484425, 'arguments', arguments, true, false, false);
                            key = J$.N(1484433, 'key', key, true, false, false);
                            der = J$.N(1484441, 'der', der, true, false, false);
                            J$.M(1484353, J$.R(1484345, 'der', der, false, false), 'endSequence', false)();
                            J$.M(1484409, J$.R(1484361, 'utils', utils, false, true), 'writeBitString', false)(J$.R(1484369, 'der', der, false, false), J$.G(1484401, J$.G(1484393, J$.G(1484385, J$.R(1484377, 'key', key, false, false), 'part'), 'A'), 'data'));
                        } catch (J$e) {
                            J$.Ex(1485609, J$e);
                        } finally {
                            if (J$.Fr(1485617))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8EdDSAPrivate(key, der) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(1484633, arguments.callee, this, arguments);
                            arguments = J$.N(1484641, 'arguments', arguments, true, false, false);
                            key = J$.N(1484649, 'key', key, true, false, false);
                            der = J$.N(1484657, 'der', der, true, false, false);
                            J$.N(1484665, 'k', k, false, false, false);
                            J$.M(1484457, J$.R(1484449, 'der', der, false, false), 'endSequence', false)();
                            var k = J$.W(1484521, 'k', J$.M(1484513, J$.R(1484465, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(1484497, J$.G(1484489, J$.G(1484481, J$.R(1484473, 'key', key, false, false), 'part'), 'k'), 'data'), J$.T(1484505, true, 23, false)), k, false, false);
                            J$.M(1484561, J$.R(1484529, 'der', der, false, false), 'startSequence', false)(J$.G(1484553, J$.G(1484545, J$.R(1484537, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(1484609, J$.R(1484569, 'der', der, false, false), 'writeBuffer', false)(J$.R(1484577, 'k', k, false, false), J$.G(1484601, J$.G(1484593, J$.R(1484585, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(1484625, J$.R(1484617, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(1485625, J$e);
                        } finally {
                            if (J$.Fr(1485633))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(1484689, '_typeof', J$.T(1484681, _typeof, 12, false), true, false, false);
            J$.N(1484697, 'assert', assert, false, false, false);
            J$.N(1484705, 'asn1', asn1, false, false, false);
            J$.N(1484713, 'Buffer', Buffer, false, false, false);
            J$.N(1484721, 'algs', algs, false, false, false);
            J$.N(1484729, 'utils', utils, false, false, false);
            J$.N(1484737, 'Key', Key, false, false, false);
            J$.N(1484745, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(1484753, 'pem', pem, false, false, false);
            read = J$.N(1484769, 'read', J$.T(1484761, read, 12, false), true, false, false);
            write = J$.N(1484785, 'write', J$.T(1484777, write, 12, false), true, false, false);
            readMPInt = J$.N(1484801, 'readMPInt', J$.T(1484793, readMPInt, 12, false), true, false, false);
            readPkcs8 = J$.N(1484817, 'readPkcs8', J$.T(1484809, readPkcs8, 12, false), true, false, false);
            readPkcs8RSAPublic = J$.N(1484833, 'readPkcs8RSAPublic', J$.T(1484825, readPkcs8RSAPublic, 12, false), true, false, false);
            readPkcs8RSAPrivate = J$.N(1484849, 'readPkcs8RSAPrivate', J$.T(1484841, readPkcs8RSAPrivate, 12, false), true, false, false);
            readPkcs8DSAPublic = J$.N(1484865, 'readPkcs8DSAPublic', J$.T(1484857, readPkcs8DSAPublic, 12, false), true, false, false);
            readPkcs8DSAPrivate = J$.N(1484881, 'readPkcs8DSAPrivate', J$.T(1484873, readPkcs8DSAPrivate, 12, false), true, false, false);
            readECDSACurve = J$.N(1484897, 'readECDSACurve', J$.T(1484889, readECDSACurve, 12, false), true, false, false);
            readPkcs8ECDSAPrivate = J$.N(1484913, 'readPkcs8ECDSAPrivate', J$.T(1484905, readPkcs8ECDSAPrivate, 12, false), true, false, false);
            readPkcs8ECDSAPublic = J$.N(1484929, 'readPkcs8ECDSAPublic', J$.T(1484921, readPkcs8ECDSAPublic, 12, false), true, false, false);
            readPkcs8EdDSAPublic = J$.N(1484945, 'readPkcs8EdDSAPublic', J$.T(1484937, readPkcs8EdDSAPublic, 12, false), true, false, false);
            readPkcs8X25519Public = J$.N(1484961, 'readPkcs8X25519Public', J$.T(1484953, readPkcs8X25519Public, 12, false), true, false, false);
            readPkcs8EdDSAPrivate = J$.N(1484977, 'readPkcs8EdDSAPrivate', J$.T(1484969, readPkcs8EdDSAPrivate, 12, false), true, false, false);
            readPkcs8X25519Private = J$.N(1484993, 'readPkcs8X25519Private', J$.T(1484985, readPkcs8X25519Private, 12, false), true, false, false);
            pkcs8ToBuffer = J$.N(1485009, 'pkcs8ToBuffer', J$.T(1485001, pkcs8ToBuffer, 12, false), true, false, false);
            writePkcs8 = J$.N(1485025, 'writePkcs8', J$.T(1485017, writePkcs8, 12, false), true, false, false);
            writePkcs8RSAPrivate = J$.N(1485041, 'writePkcs8RSAPrivate', J$.T(1485033, writePkcs8RSAPrivate, 12, false), true, false, false);
            writePkcs8RSAPublic = J$.N(1485057, 'writePkcs8RSAPublic', J$.T(1485049, writePkcs8RSAPublic, 12, false), true, false, false);
            writePkcs8DSAPrivate = J$.N(1485073, 'writePkcs8DSAPrivate', J$.T(1485065, writePkcs8DSAPrivate, 12, false), true, false, false);
            writePkcs8DSAPublic = J$.N(1485089, 'writePkcs8DSAPublic', J$.T(1485081, writePkcs8DSAPublic, 12, false), true, false, false);
            writeECDSACurve = J$.N(1485105, 'writeECDSACurve', J$.T(1485097, writeECDSACurve, 12, false), true, false, false);
            writePkcs8ECDSAPublic = J$.N(1485121, 'writePkcs8ECDSAPublic', J$.T(1485113, writePkcs8ECDSAPublic, 12, false), true, false, false);
            writePkcs8ECDSAPrivate = J$.N(1485137, 'writePkcs8ECDSAPrivate', J$.T(1485129, writePkcs8ECDSAPrivate, 12, false), true, false, false);
            writePkcs8EdDSAPublic = J$.N(1485153, 'writePkcs8EdDSAPublic', J$.T(1485145, writePkcs8EdDSAPublic, 12, false), true, false, false);
            writePkcs8EdDSAPrivate = J$.N(1485169, 'writePkcs8EdDSAPrivate', J$.T(1485161, writePkcs8EdDSAPrivate, 12, false), true, false, false);
            J$.T(1471017, 'use strict', 21, false);
            J$.F(1471041, J$.I(typeof require === 'undefined' ? require = J$.R(1471025, 'require', undefined, true, true) : require = J$.R(1471025, 'require', require, true, true)), false)(J$.T(1471033, 'core-js/modules/es.symbol', 21, false));
            J$.F(1471065, J$.I(typeof require === 'undefined' ? require = J$.R(1471049, 'require', undefined, true, true) : require = J$.R(1471049, 'require', require, true, true)), false)(J$.T(1471057, 'core-js/modules/es.symbol.description', 21, false));
            J$.F(1471089, J$.I(typeof require === 'undefined' ? require = J$.R(1471073, 'require', undefined, true, true) : require = J$.R(1471073, 'require', require, true, true)), false)(J$.T(1471081, 'core-js/modules/es.symbol.iterator', 21, false));
            J$.F(1471113, J$.I(typeof require === 'undefined' ? require = J$.R(1471097, 'require', undefined, true, true) : require = J$.R(1471097, 'require', require, true, true)), false)(J$.T(1471105, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(1471137, J$.I(typeof require === 'undefined' ? require = J$.R(1471121, 'require', undefined, true, true) : require = J$.R(1471121, 'require', require, true, true)), false)(J$.T(1471129, 'core-js/modules/es.array.slice', 21, false));
            J$.F(1471161, J$.I(typeof require === 'undefined' ? require = J$.R(1471145, 'require', undefined, true, true) : require = J$.R(1471145, 'require', require, true, true)), false)(J$.T(1471153, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(1471185, J$.I(typeof require === 'undefined' ? require = J$.R(1471169, 'require', undefined, true, true) : require = J$.R(1471169, 'require', require, true, true)), false)(J$.T(1471177, 'core-js/modules/es.object.keys', 21, false));
            J$.F(1471209, J$.I(typeof require === 'undefined' ? require = J$.R(1471193, 'require', undefined, true, true) : require = J$.R(1471193, 'require', require, true, true)), false)(J$.T(1471201, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1471233, J$.I(typeof require === 'undefined' ? require = J$.R(1471217, 'require', undefined, true, true) : require = J$.R(1471217, 'require', require, true, true)), false)(J$.T(1471225, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(1471257, J$.I(typeof require === 'undefined' ? require = J$.R(1471241, 'require', undefined, true, true) : require = J$.R(1471241, 'require', require, true, true)), false)(J$.T(1471249, 'core-js/modules/es.string.iterator', 21, false));
            J$.F(1471281, J$.I(typeof require === 'undefined' ? require = J$.R(1471265, 'require', undefined, true, true) : require = J$.R(1471265, 'require', require, true, true)), false)(J$.T(1471273, 'core-js/modules/web.dom-collections.iterator', 21, false));
            J$.P(1471649, J$.I(typeof module === 'undefined' ? module = J$.R(1471577, 'module', undefined, true, true) : module = J$.R(1471577, 'module', module, true, true)), 'exports', J$.T(1471641, {
                read: J$.R(1471585, 'read', read, false, true),
                readPkcs8: J$.R(1471593, 'readPkcs8', readPkcs8, false, true),
                write: J$.R(1471601, 'write', write, false, true),
                writePkcs8: J$.R(1471609, 'writePkcs8', writePkcs8, false, true),
                pkcs8ToBuffer: J$.R(1471617, 'pkcs8ToBuffer', pkcs8ToBuffer, false, true),
                readECDSACurve: J$.R(1471625, 'readECDSACurve', readECDSACurve, false, true),
                writeECDSACurve: J$.R(1471633, 'writeECDSACurve', writeECDSACurve, false, true)
            }, 11, false));
            var assert = J$.W(1471681, 'assert', J$.F(1471673, J$.I(typeof require === 'undefined' ? require = J$.R(1471657, 'require', undefined, true, true) : require = J$.R(1471657, 'require', require, true, true)), false)(J$.T(1471665, 'assert-plus', 21, false)), assert, false, true);
            var asn1 = J$.W(1471713, 'asn1', J$.F(1471705, J$.I(typeof require === 'undefined' ? require = J$.R(1471689, 'require', undefined, true, true) : require = J$.R(1471689, 'require', require, true, true)), false)(J$.T(1471697, 'asn1', 21, false)), asn1, false, true);
            var Buffer = J$.W(1471753, 'Buffer', J$.G(1471745, J$.F(1471737, J$.I(typeof require === 'undefined' ? require = J$.R(1471721, 'require', undefined, true, true) : require = J$.R(1471721, 'require', require, true, true)), false)(J$.T(1471729, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(1471785, 'algs', J$.F(1471777, J$.I(typeof require === 'undefined' ? require = J$.R(1471761, 'require', undefined, true, true) : require = J$.R(1471761, 'require', require, true, true)), false)(J$.T(1471769, '../algs', 21, false)), algs, false, true);
            var utils = J$.W(1471817, 'utils', J$.F(1471809, J$.I(typeof require === 'undefined' ? require = J$.R(1471793, 'require', undefined, true, true) : require = J$.R(1471793, 'require', require, true, true)), false)(J$.T(1471801, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(1471849, 'Key', J$.F(1471841, J$.I(typeof require === 'undefined' ? require = J$.R(1471825, 'require', undefined, true, true) : require = J$.R(1471825, 'require', require, true, true)), false)(J$.T(1471833, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(1471881, 'PrivateKey', J$.F(1471873, J$.I(typeof require === 'undefined' ? require = J$.R(1471857, 'require', undefined, true, true) : require = J$.R(1471857, 'require', require, true, true)), false)(J$.T(1471865, '../private-key', 21, false)), PrivateKey, false, true);
            var pem = J$.W(1471913, 'pem', J$.F(1471905, J$.I(typeof require === 'undefined' ? require = J$.R(1471889, 'require', undefined, true, true) : require = J$.R(1471889, 'require', require, true, true)), false)(J$.T(1471897, './pem', 21, false)), pem, false, true);
        } catch (J$e) {
            J$.Ex(1485641, J$e);
        } finally {
            if (J$.Sr(1485649))
                continue jalangiLabel29;
            else
                break jalangiLabel29;
        }
    }
// JALANGI DO NOT INSTRUMENT

